
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10010000 	andne	r0, r1, r0
 8008004:	08008bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, pc}
 8008008:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800800c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008010:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008014:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008018:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
	...
 800802c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008030:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800803c:	08014685 	stmdaeq	r1, {r0, r2, r7, r9, sl, lr}
 8008040:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008044:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008048:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800804c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008050:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008054:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008058:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800805c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008060:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008064:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008068:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800806c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008070:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008074:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008078:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800807c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008080:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008084:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008088:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800808c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008090:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008094:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008098:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800809c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ac:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b0:	0800da89 	stmdaeq	r0, {r0, r3, r7, r9, fp, ip, lr, pc}
 80080b4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b8:	0800f6e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, ip, sp, lr, pc}
 80080bc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080cc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080dc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ec:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080fc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008100:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008104:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008108:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800810c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008110:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008114:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008118:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800811c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008120:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008124:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008128:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800812c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008130:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008134:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008138:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800813c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008140:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008144:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008148:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800814c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008150:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008154:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008158:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800815c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008160:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008164:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008168:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800816c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008170:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008174:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008178:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008184:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008188:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800818c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008190:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008194:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008198:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

Disassembly of section .text:

080081ac <net_init>:
 80081ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081ae:	9e08      	ldr	r6, [sp, #32]
 80081b0:	460c      	mov	r4, r1
 80081b2:	4921      	ldr	r1, [pc, #132]	; (8008238 <net_init+0x8c>)
 80081b4:	461d      	mov	r5, r3
 80081b6:	1e43      	subs	r3, r0, #1
 80081b8:	3005      	adds	r0, #5
 80081ba:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80081be:	f801 7b01 	strb.w	r7, [r1], #1
 80081c2:	4283      	cmp	r3, r0
 80081c4:	d1f9      	bne.n	80081ba <net_init+0xe>
 80081c6:	491d      	ldr	r1, [pc, #116]	; (800823c <net_init+0x90>)
 80081c8:	f104 000c 	add.w	r0, r4, #12
 80081cc:	4623      	mov	r3, r4
 80081ce:	f813 7b01 	ldrb.w	r7, [r3], #1
 80081d2:	f801 7b01 	strb.w	r7, [r1], #1
 80081d6:	4283      	cmp	r3, r0
 80081d8:	d1f9      	bne.n	80081ce <net_init+0x22>
 80081da:	4918      	ldr	r1, [pc, #96]	; (800823c <net_init+0x90>)
 80081dc:	4816      	ldr	r0, [pc, #88]	; (8008238 <net_init+0x8c>)
 80081de:	9201      	str	r2, [sp, #4]
 80081e0:	2700      	movs	r7, #0
 80081e2:	f000 f99d 	bl	8008520 <ip_init>
 80081e6:	4814      	ldr	r0, [pc, #80]	; (8008238 <net_init+0x8c>)
 80081e8:	f000 f83a 	bl	8008260 <rfc3927_init>
 80081ec:	7037      	strb	r7, [r6, #0]
 80081ee:	782b      	ldrb	r3, [r5, #0]
 80081f0:	9a01      	ldr	r2, [sp, #4]
 80081f2:	b153      	cbz	r3, 800820a <net_init+0x5e>
 80081f4:	4911      	ldr	r1, [pc, #68]	; (800823c <net_init+0x90>)
 80081f6:	4810      	ldr	r0, [pc, #64]	; (8008238 <net_init+0x8c>)
 80081f8:	f009 fe4a 	bl	8011e90 <dhcp_client>
 80081fc:	42b8      	cmp	r0, r7
 80081fe:	da04      	bge.n	800820a <net_init+0x5e>
 8008200:	480e      	ldr	r0, [pc, #56]	; (800823c <net_init+0x90>)
 8008202:	702f      	strb	r7, [r5, #0]
 8008204:	f008 f846 	bl	8010294 <rfc3927>
 8008208:	7030      	strb	r0, [r6, #0]
 800820a:	490c      	ldr	r1, [pc, #48]	; (800823c <net_init+0x90>)
 800820c:	480a      	ldr	r0, [pc, #40]	; (8008238 <net_init+0x8c>)
 800820e:	f000 f883 	bl	8008318 <arp_init>
 8008212:	480a      	ldr	r0, [pc, #40]	; (800823c <net_init+0x90>)
 8008214:	f00a f856 	bl	80122c4 <ip_set_ip>
 8008218:	f000 f82e 	bl	8008278 <tcp_init>
 800821c:	4a07      	ldr	r2, [pc, #28]	; (800823c <net_init+0x90>)
 800821e:	1e63      	subs	r3, r4, #1
 8008220:	340b      	adds	r4, #11
 8008222:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008226:	f803 1f01 	strb.w	r1, [r3, #1]!
 800822a:	429c      	cmp	r4, r3
 800822c:	d1f9      	bne.n	8008222 <net_init+0x76>
 800822e:	782a      	ldrb	r2, [r5, #0]
 8008230:	4b03      	ldr	r3, [pc, #12]	; (8008240 <net_init+0x94>)
 8008232:	701a      	strb	r2, [r3, #0]
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008238:	200093c0 	andcs	r9, r0, r0, asr #7
 800823c:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 8008240:	200093c6 	andcs	r9, r0, r6, asr #7

08008244 <net_shutdown>:
 8008244:	b508      	push	{r3, lr}
 8008246:	f000 f976 	bl	8008536 <ip_shutdown>
 800824a:	4b04      	ldr	r3, [pc, #16]	; (800825c <net_shutdown+0x18>)
 800824c:	781b      	ldrb	r3, [r3, #0]
 800824e:	b11b      	cbz	r3, 8008258 <net_shutdown+0x14>
 8008250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008254:	f009 bf24 	b.w	80120a0 <dhcp_client_release>
 8008258:	bd08      	pop	{r3, pc}
 800825a:	bf00      	nop
 800825c:	200093c6 	andcs	r9, r0, r6, asr #7

08008260 <rfc3927_init>:
 8008260:	4b04      	ldr	r3, [pc, #16]	; (8008274 <rfc3927_init+0x14>)
 8008262:	1d82      	adds	r2, r0, #6
 8008264:	4290      	cmp	r0, r2
 8008266:	d100      	bne.n	800826a <rfc3927_init+0xa>
 8008268:	4770      	bx	lr
 800826a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800826e:	f803 1b01 	strb.w	r1, [r3], #1
 8008272:	e7f7      	b.n	8008264 <rfc3927_init+0x4>
 8008274:	200093d0 	ldrdcs	r9, [r0], -r0

08008278 <tcp_init>:
 8008278:	b513      	push	{r0, r1, r4, lr}
 800827a:	4c0c      	ldr	r4, [pc, #48]	; (80082ac <tcp_init+0x34>)
 800827c:	490c      	ldr	r1, [pc, #48]	; (80082b0 <tcp_init+0x38>)
 800827e:	2206      	movs	r2, #6
 8008280:	18a0      	adds	r0, r4, r2
 8008282:	f008 f861 	bl	8010348 <memcpy.isra.0>
 8008286:	2308      	movs	r3, #8
 8008288:	81a3      	strh	r3, [r4, #12]
 800828a:	4b0a      	ldr	r3, [pc, #40]	; (80082b4 <tcp_init+0x3c>)
 800828c:	2204      	movs	r2, #4
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	eb0d 0102 	add.w	r1, sp, r2
 8008296:	f104 001a 	add.w	r0, r4, #26
 800829a:	f008 f855 	bl	8010348 <memcpy.isra.0>
 800829e:	2345      	movs	r3, #69	; 0x45
 80082a0:	81e3      	strh	r3, [r4, #14]
 80082a2:	4b05      	ldr	r3, [pc, #20]	; (80082b8 <tcp_init+0x40>)
 80082a4:	6163      	str	r3, [r4, #20]
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	10000000 	andne	r0, r0, r0
 80082b0:	200093c0 	andcs	r9, r0, r0, asr #7
 80082b4:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 80082b8:	06400040 	strbeq	r0, [r0], -r0, asr #32

080082bc <udp_init>:
 80082bc:	b570      	push	{r4, r5, r6, lr}
 80082be:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <udp_init+0x40>)
 80082c0:	460e      	mov	r6, r1
 80082c2:	490f      	ldr	r1, [pc, #60]	; (8008300 <udp_init+0x44>)
 80082c4:	2408      	movs	r4, #8
 80082c6:	2200      	movs	r2, #0
 80082c8:	3c01      	subs	r4, #1
 80082ca:	801a      	strh	r2, [r3, #0]
 80082cc:	805a      	strh	r2, [r3, #2]
 80082ce:	f841 2b04 	str.w	r2, [r1], #4
 80082d2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80082d6:	d1f7      	bne.n	80082c8 <udp_init+0xc>
 80082d8:	4d0a      	ldr	r5, [pc, #40]	; (8008304 <udp_init+0x48>)
 80082da:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <udp_init+0x4c>)
 80082dc:	2206      	movs	r2, #6
 80082de:	4601      	mov	r1, r0
 80082e0:	18a8      	adds	r0, r5, r2
 80082e2:	801c      	strh	r4, [r3, #0]
 80082e4:	f008 f9ca 	bl	801067c <memcpy.isra.0>
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <udp_init+0x50>)
 80082ea:	60eb      	str	r3, [r5, #12]
 80082ec:	4630      	mov	r0, r6
 80082ee:	4b08      	ldr	r3, [pc, #32]	; (8008310 <udp_init+0x54>)
 80082f0:	616b      	str	r3, [r5, #20]
 80082f2:	f008 f9eb 	bl	80106cc <udp_set_ip>
 80082f6:	852c      	strh	r4, [r5, #40]	; 0x28
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	20009410 	andcs	r9, r0, r0, lsl r4
 8008300:	200093f0 	strdcs	r9, [r0], -r0
 8008304:	2000f0b0 	strhcs	pc, [r0], -r0	; <UNPREDICTABLE>
 8008308:	200093ec 	andcs	r9, r0, ip, ror #7
 800830c:	00450008 	subeq	r0, r5, r8
 8008310:	11400040 	cmpne	r0, r0, asr #32

08008314 <udp_shutdown>:
 8008314:	4770      	bx	lr
	...

08008318 <arp_init>:
 8008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800831c:	460d      	mov	r5, r1
 800831e:	4604      	mov	r4, r0
 8008320:	f000 f876 	bl	8008410 <arp_cache_init>
 8008324:	2206      	movs	r2, #6
 8008326:	482f      	ldr	r0, [pc, #188]	; (80083e4 <arp_init+0xcc>)
 8008328:	682f      	ldr	r7, [r5, #0]
 800832a:	4621      	mov	r1, r4
 800832c:	f009 fc32 	bl	8011b94 <memcpy.isra.0>
 8008330:	4b2d      	ldr	r3, [pc, #180]	; (80083e8 <arp_init+0xd0>)
 8008332:	2507      	movs	r5, #7
 8008334:	461e      	mov	r6, r3
 8008336:	22ff      	movs	r2, #255	; 0xff
 8008338:	3d01      	subs	r5, #1
 800833a:	d146      	bne.n	80083ca <arp_init+0xb2>
 800833c:	4b2b      	ldr	r3, [pc, #172]	; (80083ec <arp_init+0xd4>)
 800833e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800840c <arp_init+0xf4>
 8008342:	482b      	ldr	r0, [pc, #172]	; (80083f0 <arp_init+0xd8>)
 8008344:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8008348:	2206      	movs	r2, #6
 800834a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800834e:	4621      	mov	r1, r4
 8008350:	82b3      	strh	r3, [r6, #20]
 8008352:	f009 fc1f 	bl	8011b94 <memcpy.isra.0>
 8008356:	4a27      	ldr	r2, [pc, #156]	; (80083f4 <arp_init+0xdc>)
 8008358:	61f7      	str	r7, [r6, #28]
 800835a:	2307      	movs	r3, #7
 800835c:	3b01      	subs	r3, #1
 800835e:	d137      	bne.n	80083d0 <arp_init+0xb8>
 8008360:	2206      	movs	r2, #6
 8008362:	4621      	mov	r1, r4
 8008364:	4824      	ldr	r0, [pc, #144]	; (80083f8 <arp_init+0xe0>)
 8008366:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800836a:	f009 fc13 	bl	8011b94 <memcpy.isra.0>
 800836e:	4a23      	ldr	r2, [pc, #140]	; (80083fc <arp_init+0xe4>)
 8008370:	2306      	movs	r3, #6
 8008372:	4615      	mov	r5, r2
 8008374:	21ff      	movs	r1, #255	; 0xff
 8008376:	3b01      	subs	r3, #1
 8008378:	d22d      	bcs.n	80083d6 <arp_init+0xbe>
 800837a:	4b1c      	ldr	r3, [pc, #112]	; (80083ec <arp_init+0xd4>)
 800837c:	4820      	ldr	r0, [pc, #128]	; (8008400 <arp_init+0xe8>)
 800837e:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8008382:	2206      	movs	r2, #6
 8008384:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008388:	4621      	mov	r1, r4
 800838a:	82ab      	strh	r3, [r5, #20]
 800838c:	f009 fc02 	bl	8011b94 <memcpy.isra.0>
 8008390:	4a1c      	ldr	r2, [pc, #112]	; (8008404 <arp_init+0xec>)
 8008392:	61ef      	str	r7, [r5, #28]
 8008394:	2307      	movs	r3, #7
 8008396:	2100      	movs	r1, #0
 8008398:	3b01      	subs	r3, #1
 800839a:	d11f      	bne.n	80083dc <arp_init+0xc4>
 800839c:	4d1a      	ldr	r5, [pc, #104]	; (8008408 <arp_init+0xf0>)
 800839e:	2206      	movs	r2, #6
 80083a0:	18a8      	adds	r0, r5, r2
 80083a2:	4621      	mov	r1, r4
 80083a4:	f009 fbf6 	bl	8011b94 <memcpy.isra.0>
 80083a8:	4b10      	ldr	r3, [pc, #64]	; (80083ec <arp_init+0xd4>)
 80083aa:	4621      	mov	r1, r4
 80083ac:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80083b0:	f105 0016 	add.w	r0, r5, #22
 80083b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80083b8:	2206      	movs	r2, #6
 80083ba:	82ab      	strh	r3, [r5, #20]
 80083bc:	f009 fbea 	bl	8011b94 <memcpy.isra.0>
 80083c0:	61ef      	str	r7, [r5, #28]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f009 bbef 	b.w	8011ba8 <arp_announce>
 80083ca:	f803 2b01 	strb.w	r2, [r3], #1
 80083ce:	e7b3      	b.n	8008338 <arp_init+0x20>
 80083d0:	f802 5b01 	strb.w	r5, [r2], #1
 80083d4:	e7c2      	b.n	800835c <arp_init+0x44>
 80083d6:	f802 1b01 	strb.w	r1, [r2], #1
 80083da:	e7cc      	b.n	8008376 <arp_init+0x5e>
 80083dc:	f802 1b01 	strb.w	r1, [r2], #1
 80083e0:	e7da      	b.n	8008398 <arp_init+0x80>
 80083e2:	bf00      	nop
 80083e4:	2000fae6 	andcs	pc, r0, r6, ror #21
 80083e8:	2000fae0 	andcs	pc, r0, r0, ror #21
 80083ec:	01000608 	tsteq	r0, r8, lsl #12
 80083f0:	2000faf6 	strdcs	pc, [r0], -r6
 80083f4:	2000fb00 	andcs	pc, r0, r0, lsl #22
 80083f8:	2000fb3e 	andcs	pc, r0, lr, lsr fp	; <UNPREDICTABLE>
 80083fc:	2000fb38 	andcs	pc, r0, r8, lsr fp	; <UNPREDICTABLE>
 8008400:	2000fb4e 	andcs	pc, r0, lr, asr #22
 8008404:	2000fb58 	andcs	pc, r0, r8, asr fp	; <UNPREDICTABLE>
 8008408:	2000fb0c 	andcs	pc, r0, ip, lsl #22
 800840c:	04060008 	streq	r0, [r6], #-8

08008410 <arp_cache_init>:
 8008410:	4a0a      	ldr	r2, [pc, #40]	; (800843c <arp_cache_init+0x2c>)
 8008412:	2300      	movs	r3, #0
 8008414:	b510      	push	{r4, lr}
 8008416:	f822 3b08 	strh.w	r3, [r2], #8
 800841a:	4618      	mov	r0, r3
 800841c:	4611      	mov	r1, r2
 800841e:	f842 0c04 	str.w	r0, [r2, #-4]
 8008422:	1d94      	adds	r4, r2, #6
 8008424:	42a1      	cmp	r1, r4
 8008426:	d105      	bne.n	8008434 <arp_cache_init+0x24>
 8008428:	3303      	adds	r3, #3
 800842a:	2b60      	cmp	r3, #96	; 0x60
 800842c:	f102 020c 	add.w	r2, r2, #12
 8008430:	d1f4      	bne.n	800841c <arp_cache_init+0xc>
 8008432:	bd10      	pop	{r4, pc}
 8008434:	f801 0b01 	strb.w	r0, [r1], #1
 8008438:	e7f4      	b.n	8008424 <arp_cache_init+0x14>
 800843a:	bf00      	nop
 800843c:	100011a4 	andne	r1, r0, r4, lsr #3

08008440 <igmp_init>:
 8008440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008444:	2200      	movs	r2, #0
 8008446:	4b26      	ldr	r3, [pc, #152]	; (80084e0 <igmp_init+0xa0>)
 8008448:	4605      	mov	r5, r0
 800844a:	4608      	mov	r0, r1
 800844c:	4611      	mov	r1, r2
 800844e:	f103 0408 	add.w	r4, r3, #8
 8008452:	42a3      	cmp	r3, r4
 8008454:	d140      	bne.n	80084d8 <igmp_init+0x98>
 8008456:	3201      	adds	r2, #1
 8008458:	2a24      	cmp	r2, #36	; 0x24
 800845a:	d1f8      	bne.n	800844e <igmp_init+0xe>
 800845c:	4c21      	ldr	r4, [pc, #132]	; (80084e4 <igmp_init+0xa4>)
 800845e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80084f0 <igmp_init+0xb0>
 8008462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80084f4 <igmp_init+0xb4>
 8008466:	2600      	movs	r6, #0
 8008468:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
 800846c:	8726      	strh	r6, [r4, #56]	; 0x38
 800846e:	f009 fe8d 	bl	801218c <igmp_set_ip>
 8008472:	2301      	movs	r3, #1
 8008474:	8023      	strh	r3, [r4, #0]
 8008476:	235e      	movs	r3, #94	; 0x5e
 8008478:	70a3      	strb	r3, [r4, #2]
 800847a:	2206      	movs	r2, #6
 800847c:	4629      	mov	r1, r5
 800847e:	f104 000e 	add.w	r0, r4, #14
 8008482:	f009 fe3b 	bl	80120fc <memcpy.isra.0>
 8008486:	f240 4394 	movw	r3, #1172	; 0x494
 800848a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848c:	2316      	movs	r3, #22
 800848e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008490:	4b15      	ldr	r3, [pc, #84]	; (80084e8 <igmp_init+0xa8>)
 8008492:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008498:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800849c:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80084a0:	2206      	movs	r2, #6
 80084a2:	f8c4 901c 	str.w	r9, [r4, #28]
 80084a6:	f8c4 8014 	str.w	r8, [r4, #20]
 80084aa:	4629      	mov	r1, r5
 80084ac:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80084b0:	8327      	strh	r7, [r4, #24]
 80084b2:	85a6      	strh	r6, [r4, #44]	; 0x2c
 80084b4:	f009 fe22 	bl	80120fc <memcpy.isra.0>
 80084b8:	23e0      	movs	r3, #224	; 0xe0
 80084ba:	4a0c      	ldr	r2, [pc, #48]	; (80084ec <igmp_init+0xac>)
 80084bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80084c0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80084c4:	e9c4 2317 	strd	r2, r3, [r4, #92]	; 0x5c
 80084c8:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
 80084cc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
 80084d0:	f8a4 704c 	strh.w	r7, [r4, #76]	; 0x4c
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80084d8:	f803 1b01 	strb.w	r1, [r3], #1
 80084dc:	e7b9      	b.n	8008452 <igmp_init+0x12>
 80084de:	bf00      	nop
 80084e0:	10001394 	mulne	r0, r4, r3
 80084e4:	10001328 	andne	r1, r0, r8, lsr #6
 80084e8:	005e0001 	subseq	r0, lr, r1
 80084ec:	04940200 	ldreq	r0, [r4], #512	; 0x200
 80084f0:	02010040 	andeq	r0, r1, #64	; 0x40
 80084f4:	00460008 	subeq	r0, r6, r8

080084f8 <igmp_shutdown>:
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	2500      	movs	r5, #0
 80084fc:	4c07      	ldr	r4, [pc, #28]	; (800851c <igmp_shutdown+0x24>)
 80084fe:	462e      	mov	r6, r5
 8008500:	6820      	ldr	r0, [r4, #0]
 8008502:	b120      	cbz	r0, 800850e <igmp_shutdown+0x16>
 8008504:	f009 fe9e 	bl	8012244 <igmp_leave>
 8008508:	6026      	str	r6, [r4, #0]
 800850a:	7166      	strb	r6, [r4, #5]
 800850c:	7126      	strb	r6, [r4, #4]
 800850e:	3501      	adds	r5, #1
 8008510:	2d24      	cmp	r5, #36	; 0x24
 8008512:	f104 0408 	add.w	r4, r4, #8
 8008516:	d1f3      	bne.n	8008500 <igmp_shutdown+0x8>
 8008518:	bd70      	pop	{r4, r5, r6, pc}
 800851a:	bf00      	nop
 800851c:	10001394 	mulne	r0, r4, r3

08008520 <ip_init>:
 8008520:	b538      	push	{r3, r4, r5, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	460d      	mov	r5, r1
 8008526:	f7ff fec9 	bl	80082bc <udp_init>
 800852a:	4629      	mov	r1, r5
 800852c:	4620      	mov	r0, r4
 800852e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008532:	f7ff bf85 	b.w	8008440 <igmp_init>

08008536 <ip_shutdown>:
 8008536:	b508      	push	{r3, lr}
 8008538:	f7ff ffde 	bl	80084f8 <igmp_shutdown>
 800853c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008540:	f7ff bee8 	b.w	8008314 <udp_shutdown>

08008544 <console_init>:
 8008544:	b508      	push	{r3, lr}
 8008546:	f00c f845 	bl	80145d4 <uart0_init>
 800854a:	4804      	ldr	r0, [pc, #16]	; (800855c <console_init+0x18>)
 800854c:	f00c f86c 	bl	8014628 <uart0_puts>
 8008550:	4803      	ldr	r0, [pc, #12]	; (8008560 <console_init+0x1c>)
 8008552:	f00c f869 	bl	8014628 <uart0_puts>
 8008556:	2000      	movs	r0, #0
 8008558:	bd08      	pop	{r3, pc}
 800855a:	bf00      	nop
 800855c:	080168f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, fp, sp, lr}
 8008560:	08019bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, ip, pc}

08008564 <net_handle>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4c0c      	ldr	r4, [pc, #48]	; (8008598 <net_handle+0x34>)
 8008568:	4620      	mov	r0, r4
 800856a:	f00d fab9 	bl	8015ae0 <emac_eth_recv>
 800856e:	2800      	cmp	r0, #0
 8008570:	dd07      	ble.n	8008582 <net_handle+0x1e>
 8008572:	6820      	ldr	r0, [r4, #0]
 8008574:	8983      	ldrh	r3, [r0, #12]
 8008576:	2b08      	cmp	r3, #8
 8008578:	d107      	bne.n	800858a <net_handle+0x26>
 800857a:	f000 faab 	bl	8008ad4 <ip_handle>
 800857e:	f00d fac3 	bl	8015b08 <emac_free_pkt>
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008586:	f007 be75 	b.w	8010274 <net_timers_run>
 800858a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800858e:	d1f6      	bne.n	800857e <net_handle+0x1a>
 8008590:	f000 fa44 	bl	8008a1c <arp_handle>
 8008594:	e7f3      	b.n	800857e <net_handle+0x1a>
 8008596:	bf00      	nop
 8008598:	200093c8 	andcs	r9, r0, r8, asr #7

0800859c <tcp_handle>:
 800859c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085a0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80085a2:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80085a6:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80085aa:	4cbd      	ldr	r4, [pc, #756]	; (80088a0 <tcp_handle+0x304>)
 80085ac:	ba5b      	rev16	r3, r3
 80085ae:	8443      	strh	r3, [r0, #34]	; 0x22
 80085b0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80085b2:	4605      	mov	r5, r0
 80085b4:	ba5b      	rev16	r3, r3
 80085b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80085b8:	f007 fed0 	bl	801035c <_bswap32>
 80085bc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80085be:	f8b4 25f0 	ldrh.w	r2, [r4, #1520]	; 0x5f0
 80085c2:	ba5b      	rev16	r3, r3
 80085c4:	862b      	strh	r3, [r5, #48]	; 0x30
 80085c6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80085c8:	ba5b      	rev16	r3, r3
 80085ca:	86ab      	strh	r3, [r5, #52]	; 0x34
 80085cc:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d152      	bne.n	8008678 <tcp_handle+0xdc>
 80085d2:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80085d6:	2b01      	cmp	r3, #1
 80085d8:	d00f      	beq.n	80085fa <tcp_handle+0x5e>
 80085da:	2204      	movs	r2, #4
 80085dc:	f105 011a 	add.w	r1, r5, #26
 80085e0:	4668      	mov	r0, sp
 80085e2:	f007 feb1 	bl	8010348 <memcpy.isra.0>
 80085e6:	f8b4 25f2 	ldrh.w	r2, [r4, #1522]	; 0x5f2
 80085ea:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d143      	bne.n	8008678 <tcp_handle+0xdc>
 80085f0:	f8d4 25f4 	ldr.w	r2, [r4, #1524]	; 0x5f4
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d13e      	bne.n	8008678 <tcp_handle+0xdc>
 80085fa:	2204      	movs	r2, #4
 80085fc:	eb0d 0002 	add.w	r0, sp, r2
 8008600:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8008604:	f007 fea0 	bl	8010348 <memcpy.isra.0>
 8008608:	2204      	movs	r2, #4
 800860a:	eb0d 0002 	add.w	r0, sp, r2
 800860e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8008612:	9e01      	ldr	r6, [sp, #4]
 8008614:	f007 fe98 	bl	8010348 <memcpy.isra.0>
 8008618:	f894 2630 	ldrb.w	r2, [r4, #1584]	; 0x630
 800861c:	9f01      	ldr	r7, [sp, #4]
 800861e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8008622:	2a01      	cmp	r2, #1
 8008624:	d01e      	beq.n	8008664 <tcp_handle+0xc8>
 8008626:	1ed3      	subs	r3, r2, #3
 8008628:	2b07      	cmp	r3, #7
 800862a:	d825      	bhi.n	8008678 <tcp_handle+0xdc>
 800862c:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8008630:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8008634:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8008638:	fa98 f898 	rev16.w	r8, r8
 800863c:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 8008640:	f8b4 1628 	ldrh.w	r1, [r4, #1576]	; 0x628
 8008644:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8008648:	fa13 f888 	uxtah	r8, r3, r8
 800864c:	fa1f f888 	uxth.w	r8, r8
 8008650:	2900      	cmp	r1, #0
 8008652:	d14d      	bne.n	80086f0 <tcp_handle+0x154>
 8008654:	f1b8 0f00 	cmp.w	r8, #0
 8008658:	d178      	bne.n	800874c <tcp_handle+0x1b0>
 800865a:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800865e:	42bb      	cmp	r3, r7
 8008660:	d174      	bne.n	800874c <tcp_handle+0x1b0>
 8008662:	e053      	b.n	800870c <tcp_handle+0x170>
 8008664:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008668:	075a      	lsls	r2, r3, #29
 800866a:	d405      	bmi.n	8008678 <tcp_handle+0xdc>
 800866c:	06d8      	lsls	r0, r3, #27
 800866e:	d506      	bpl.n	800867e <tcp_handle+0xe2>
 8008670:	498c      	ldr	r1, [pc, #560]	; (80088a4 <tcp_handle+0x308>)
 8008672:	4628      	mov	r0, r5
 8008674:	f007 ff3c 	bl	80104f0 <_send_reset>
 8008678:	b004      	add	sp, #16
 800867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800867e:	0799      	lsls	r1, r3, #30
 8008680:	d5fa      	bpl.n	8008678 <tcp_handle+0xdc>
 8008682:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8008686:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800868a:	f105 011a 	add.w	r1, r5, #26
 800868e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008692:	4668      	mov	r0, sp
 8008694:	2204      	movs	r2, #4
 8008696:	f8a4 35f2 	strh.w	r3, [r4, #1522]	; 0x5f2
 800869a:	f007 fe55 	bl	8010348 <memcpy.isra.0>
 800869e:	2206      	movs	r2, #6
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4881      	ldr	r0, [pc, #516]	; (80088a8 <tcp_handle+0x30c>)
 80086a4:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80086a8:	18a9      	adds	r1, r5, r2
 80086aa:	f007 fe4d 	bl	8010348 <memcpy.isra.0>
 80086ae:	f8d4 2618 	ldr.w	r2, [r4, #1560]	; 0x618
 80086b2:	487c      	ldr	r0, [pc, #496]	; (80088a4 <tcp_handle+0x308>)
 80086b4:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 80086b8:	1c7b      	adds	r3, r7, #1
 80086ba:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086be:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 80086c2:	a901      	add	r1, sp, #4
 80086c4:	2312      	movs	r3, #18
 80086c6:	f88d 300c 	strb.w	r3, [sp, #12]
 80086ca:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80086ce:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80086d2:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80086d6:	f007 fe67 	bl	80103a8 <_tcp_send_package>
 80086da:	f8d4 3618 	ldr.w	r3, [r4, #1560]	; 0x618
 80086de:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80086e2:	1c5a      	adds	r2, r3, #1
 80086e4:	f8c4 2604 	str.w	r2, [r4, #1540]	; 0x604
 80086e8:	2303      	movs	r3, #3
 80086ea:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80086ee:	e7c3      	b.n	8008678 <tcp_handle+0xdc>
 80086f0:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80086f4:	eba3 0c07 	sub.w	ip, r3, r7
 80086f8:	f1b8 0f00 	cmp.w	r8, #0
 80086fc:	d10e      	bne.n	800871c <tcp_handle+0x180>
 80086fe:	f1bc 0f00 	cmp.w	ip, #0
 8008702:	dc23      	bgt.n	800874c <tcp_handle+0x1b0>
 8008704:	1afb      	subs	r3, r7, r3
 8008706:	1a5b      	subs	r3, r3, r1
 8008708:	2b00      	cmp	r3, #0
 800870a:	da1f      	bge.n	800874c <tcp_handle+0x1b0>
 800870c:	0743      	lsls	r3, r0, #29
 800870e:	d534      	bpl.n	800877a <tcp_handle+0x1de>
 8008710:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008714:	4863      	ldr	r0, [pc, #396]	; (80088a4 <tcp_handle+0x308>)
 8008716:	f007 fdfd 	bl	8010314 <_init_tcb>
 800871a:	e7ad      	b.n	8008678 <tcp_handle+0xdc>
 800871c:	f1bc 0f00 	cmp.w	ip, #0
 8008720:	dc06      	bgt.n	8008730 <tcp_handle+0x194>
 8008722:	eba7 0c03 	sub.w	ip, r7, r3
 8008726:	ebac 0c01 	sub.w	ip, ip, r1
 800872a:	f1bc 0f00 	cmp.w	ip, #0
 800872e:	dbed      	blt.n	800870c <tcp_handle+0x170>
 8008730:	eb08 0c07 	add.w	ip, r8, r7
 8008734:	f103 0e01 	add.w	lr, r3, #1
 8008738:	ebae 0e0c 	sub.w	lr, lr, ip
 800873c:	f1be 0f00 	cmp.w	lr, #0
 8008740:	dc04      	bgt.n	800874c <tcp_handle+0x1b0>
 8008742:	43db      	mvns	r3, r3
 8008744:	1a5b      	subs	r3, r3, r1
 8008746:	eb13 0f0c 	cmn.w	r3, ip
 800874a:	d4df      	bmi.n	800870c <tcp_handle+0x170>
 800874c:	0742      	lsls	r2, r0, #29
 800874e:	d506      	bpl.n	800875e <tcp_handle+0x1c2>
 8008750:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008754:	4853      	ldr	r0, [pc, #332]	; (80088a4 <tcp_handle+0x308>)
 8008756:	f007 fddd 	bl	8010314 <_init_tcb>
 800875a:	2301      	movs	r3, #1
 800875c:	e7c5      	b.n	80086ea <tcp_handle+0x14e>
 800875e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008762:	9301      	str	r3, [sp, #4]
 8008764:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 8008768:	9302      	str	r3, [sp, #8]
 800876a:	484e      	ldr	r0, [pc, #312]	; (80088a4 <tcp_handle+0x308>)
 800876c:	2310      	movs	r3, #16
 800876e:	a901      	add	r1, sp, #4
 8008770:	f88d 300c 	strb.w	r3, [sp, #12]
 8008774:	f007 fe18 	bl	80103a8 <_tcp_send_package>
 8008778:	e77e      	b.n	8008678 <tcp_handle+0xdc>
 800877a:	0781      	lsls	r1, r0, #30
 800877c:	d505      	bpl.n	800878a <tcp_handle+0x1ee>
 800877e:	2a03      	cmp	r2, #3
 8008780:	d0eb      	beq.n	800875a <tcp_handle+0x1be>
 8008782:	4948      	ldr	r1, [pc, #288]	; (80088a4 <tcp_handle+0x308>)
 8008784:	4628      	mov	r0, r5
 8008786:	f007 feb3 	bl	80104f0 <_send_reset>
 800878a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800878e:	06da      	lsls	r2, r3, #27
 8008790:	f57f af72 	bpl.w	8008678 <tcp_handle+0xdc>
 8008794:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008798:	3b03      	subs	r3, #3
 800879a:	2b07      	cmp	r3, #7
 800879c:	d81d      	bhi.n	80087da <tcp_handle+0x23e>
 800879e:	e8df f003 	tbb	[pc, r3]
 80087a2:	87878704 	strhi	r8, [r7, r4, lsl #14]
 80087a6:	c5ba8787 	ldrgt	r8, [sl, #1927]!	; 0x787
 80087aa:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80087ae:	1b9b      	subs	r3, r3, r6
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	dc0e      	bgt.n	80087d2 <tcp_handle+0x236>
 80087b4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80087b8:	1af3      	subs	r3, r6, r3
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	dc09      	bgt.n	80087d2 <tcp_handle+0x236>
 80087be:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80087c2:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80087c6:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80087ca:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80087ce:	2304      	movs	r3, #4
 80087d0:	e78b      	b.n	80086ea <tcp_handle+0x14e>
 80087d2:	4934      	ldr	r1, [pc, #208]	; (80088a4 <tcp_handle+0x308>)
 80087d4:	4628      	mov	r0, r5
 80087d6:	f007 fe8b 	bl	80104f0 <_send_reset>
 80087da:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80087de:	3b04      	subs	r3, #4
 80087e0:	2b02      	cmp	r3, #2
 80087e2:	d837      	bhi.n	8008854 <tcp_handle+0x2b8>
 80087e4:	f1b8 0f00 	cmp.w	r8, #0
 80087e8:	d034      	beq.n	8008854 <tcp_handle+0x2b8>
 80087ea:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80087ee:	42bb      	cmp	r3, r7
 80087f0:	f040 80ad 	bne.w	800894e <tcp_handle+0x3b2>
 80087f4:	f8b4 7634 	ldrh.w	r7, [r4, #1588]	; 0x634
 80087f8:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80088ac <tcp_handle+0x310>
 80087fc:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8008800:	435f      	muls	r7, r3
 8008802:	1d38      	adds	r0, r7, #4
 8008804:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8008808:	4642      	mov	r2, r8
 800880a:	4449      	add	r1, r9
 800880c:	4450      	add	r0, sl
 800880e:	f007 fd9b 	bl	8010348 <memcpy.isra.0>
 8008812:	f8b4 2628 	ldrh.w	r2, [r4, #1576]	; 0x628
 8008816:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800881a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800881e:	f8a4 2628 	strh.w	r2, [r4, #1576]	; 0x628
 8008822:	4427      	add	r7, r4
 8008824:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008828:	f8a7 8bec 	strh.w	r8, [r7, #3052]	; 0xbec
 800882c:	4443      	add	r3, r8
 800882e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008832:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 8008836:	a901      	add	r1, sp, #4
 8008838:	2310      	movs	r3, #16
 800883a:	f1aa 0044 	sub.w	r0, sl, #68	; 0x44
 800883e:	f88d 300c 	strb.w	r3, [sp, #12]
 8008842:	f007 fdb1 	bl	80103a8 <_tcp_send_package>
 8008846:	f8b4 3634 	ldrh.w	r3, [r4, #1588]	; 0x634
 800884a:	3301      	adds	r3, #1
 800884c:	f003 0301 	and.w	r3, r3, #1
 8008850:	f8a4 3634 	strh.w	r3, [r4, #1588]	; 0x634
 8008854:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008858:	2b02      	cmp	r3, #2
 800885a:	f67f af0d 	bls.w	8008678 <tcp_handle+0xdc>
 800885e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008862:	07db      	lsls	r3, r3, #31
 8008864:	f57f af08 	bpl.w	8008678 <tcp_handle+0xdc>
 8008868:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800886c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008870:	480c      	ldr	r0, [pc, #48]	; (80088a4 <tcp_handle+0x308>)
 8008872:	3301      	adds	r3, #1
 8008874:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008878:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 800887c:	a901      	add	r1, sp, #4
 800887e:	2310      	movs	r3, #16
 8008880:	f88d 300c 	strb.w	r3, [sp, #12]
 8008884:	f007 fd90 	bl	80103a8 <_tcp_send_package>
 8008888:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 800888c:	2b05      	cmp	r3, #5
 800888e:	d067      	beq.n	8008960 <tcp_handle+0x3c4>
 8008890:	d861      	bhi.n	8008956 <tcp_handle+0x3ba>
 8008892:	3b03      	subs	r3, #3
 8008894:	2b01      	cmp	r3, #1
 8008896:	f63f aeef 	bhi.w	8008678 <tcp_handle+0xdc>
 800889a:	2307      	movs	r3, #7
 800889c:	e725      	b.n	80086ea <tcp_handle+0x14e>
 800889e:	bf00      	nop
 80088a0:	10000000 	andne	r0, r0, r0
 80088a4:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 80088a8:	100005f8 	strdne	r0, [r0], -r8
 80088ac:	10000634 	andne	r0, r0, r4, lsr r6
 80088b0:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80088b4:	1b99      	subs	r1, r3, r6
 80088b6:	d51a      	bpl.n	80088ee <tcp_handle+0x352>
 80088b8:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80088bc:	1ab2      	subs	r2, r6, r2
 80088be:	2a00      	cmp	r2, #0
 80088c0:	dc15      	bgt.n	80088ee <tcp_handle+0x352>
 80088c2:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80088c6:	f8d4 3610 	ldr.w	r3, [r4, #1552]	; 0x610
 80088ca:	1bda      	subs	r2, r3, r7
 80088cc:	2a00      	cmp	r2, #0
 80088ce:	db07      	blt.n	80088e0 <tcp_handle+0x344>
 80088d0:	42bb      	cmp	r3, r7
 80088d2:	d182      	bne.n	80087da <tcp_handle+0x23e>
 80088d4:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 80088d8:	1b9b      	subs	r3, r3, r6
 80088da:	2b00      	cmp	r3, #0
 80088dc:	f73f af7d 	bgt.w	80087da <tcp_handle+0x23e>
 80088e0:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80088e4:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80088e8:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80088ec:	e775      	b.n	80087da <tcp_handle+0x23e>
 80088ee:	1af3      	subs	r3, r6, r3
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	dc09      	bgt.n	8008908 <tcp_handle+0x36c>
 80088f4:	2900      	cmp	r1, #0
 80088f6:	f73f af70 	bgt.w	80087da <tcp_handle+0x23e>
 80088fa:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80088fe:	1af3      	subs	r3, r6, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f73f af6a 	bgt.w	80087da <tcp_handle+0x23e>
 8008906:	e7de      	b.n	80088c6 <tcp_handle+0x32a>
 8008908:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800890c:	1b9a      	subs	r2, r3, r6
 800890e:	2a00      	cmp	r2, #0
 8008910:	f6bf af63 	bge.w	80087da <tcp_handle+0x23e>
 8008914:	e725      	b.n	8008762 <tcp_handle+0x1c6>
 8008916:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800891a:	42b3      	cmp	r3, r6
 800891c:	f47f af5d 	bne.w	80087da <tcp_handle+0x23e>
 8008920:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008924:	4811      	ldr	r0, [pc, #68]	; (800896c <tcp_handle+0x3d0>)
 8008926:	f007 fcf5 	bl	8010314 <_init_tcb>
 800892a:	e756      	b.n	80087da <tcp_handle+0x23e>
 800892c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008930:	42b3      	cmp	r3, r6
 8008932:	f47f af52 	bne.w	80087da <tcp_handle+0x23e>
 8008936:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800893a:	9302      	str	r3, [sp, #8]
 800893c:	480b      	ldr	r0, [pc, #44]	; (800896c <tcp_handle+0x3d0>)
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	2310      	movs	r3, #16
 8008942:	a901      	add	r1, sp, #4
 8008944:	f88d 300c 	strb.w	r3, [sp, #12]
 8008948:	f007 fd2e 	bl	80103a8 <_tcp_send_package>
 800894c:	e745      	b.n	80087da <tcp_handle+0x23e>
 800894e:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008952:	9201      	str	r2, [sp, #4]
 8008954:	e708      	b.n	8008768 <tcp_handle+0x1cc>
 8008956:	2b06      	cmp	r3, #6
 8008958:	f47f ae8e 	bne.w	8008678 <tcp_handle+0xdc>
 800895c:	230a      	movs	r3, #10
 800895e:	e6c4      	b.n	80086ea <tcp_handle+0x14e>
 8008960:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008964:	42b3      	cmp	r3, r6
 8008966:	d0f9      	beq.n	800895c <tcp_handle+0x3c0>
 8008968:	2308      	movs	r3, #8
 800896a:	e6be      	b.n	80086ea <tcp_handle+0x14e>
 800896c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08008970 <udp_handle>:
 8008970:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008974:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8008976:	ba5b      	rev16	r3, r3
 8008978:	b29b      	uxth	r3, r3
 800897a:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800897e:	2a01      	cmp	r2, #1
 8008980:	4607      	mov	r7, r0
 8008982:	d904      	bls.n	800898e <udp_handle+0x1e>
 8008984:	2b7b      	cmp	r3, #123	; 0x7b
 8008986:	d002      	beq.n	800898e <udp_handle+0x1e>
 8008988:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800898c:	d308      	bcc.n	80089a0 <udp_handle+0x30>
 800898e:	4a21      	ldr	r2, [pc, #132]	; (8008a14 <udp_handle+0xa4>)
 8008990:	2400      	movs	r4, #0
 8008992:	f852 1b04 	ldr.w	r1, [r2], #4
 8008996:	4299      	cmp	r1, r3
 8008998:	d005      	beq.n	80089a6 <udp_handle+0x36>
 800899a:	3401      	adds	r4, #1
 800899c:	2c08      	cmp	r4, #8
 800899e:	d1f8      	bne.n	8008992 <udp_handle+0x22>
 80089a0:	b002      	add	sp, #8
 80089a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a6:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80089a8:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8008a18 <udp_handle+0xa8>
 80089ac:	f640 3394 	movw	r3, #2964	; 0xb94
 80089b0:	435c      	muls	r4, r3
 80089b2:	ba76      	rev16	r6, r6
 80089b4:	f838 5004 	ldrh.w	r5, [r8, r4]
 80089b8:	3e08      	subs	r6, #8
 80089ba:	b2b6      	uxth	r6, r6
 80089bc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80089c0:	435d      	muls	r5, r3
 80089c2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80089c6:	f104 0004 	add.w	r0, r4, #4
 80089ca:	bf28      	it	cs
 80089cc:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 80089d0:	4428      	add	r0, r5
 80089d2:	4632      	mov	r2, r6
 80089d4:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 80089d8:	4440      	add	r0, r8
 80089da:	f007 fe4f 	bl	801067c <memcpy.isra.0>
 80089de:	2204      	movs	r2, #4
 80089e0:	eb0d 0002 	add.w	r0, sp, r2
 80089e4:	f107 011a 	add.w	r1, r7, #26
 80089e8:	f007 fe48 	bl	801067c <memcpy.isra.0>
 80089ec:	192b      	adds	r3, r5, r4
 80089ee:	4443      	add	r3, r8
 80089f0:	9a01      	ldr	r2, [sp, #4]
 80089f2:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80089f6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80089f8:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80089fc:	ba52      	rev16	r2, r2
 80089fe:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8008a02:	f838 3004 	ldrh.w	r3, [r8, r4]
 8008a06:	3301      	adds	r3, #1
 8008a08:	f003 0301 	and.w	r3, r3, #1
 8008a0c:	f828 3004 	strh.w	r3, [r8, r4]
 8008a10:	e7c6      	b.n	80089a0 <udp_handle+0x30>
 8008a12:	bf00      	nop
 8008a14:	200093f0 	strdcs	r9, [r0], -r0
 8008a18:	20009410 	andcs	r9, r0, r0, lsl r4

08008a1c <arp_handle>:
 8008a1c:	8a83      	ldrh	r3, [r0, #20]
 8008a1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a22:	d003      	beq.n	8008a2c <arp_handle+0x10>
 8008a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a28:	d002      	beq.n	8008a30 <arp_handle+0x14>
 8008a2a:	4770      	bx	lr
 8008a2c:	f009 b8c6 	b.w	8011bbc <arp_handle_request>
 8008a30:	f009 b8ec 	b.w	8011c0c <arp_handle_reply>

08008a34 <igmp_handle>:
 8008a34:	7b83      	ldrb	r3, [r0, #14]
 8008a36:	2b45      	cmp	r3, #69	; 0x45
 8008a38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a3c:	d117      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a3e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008a42:	2b11      	cmp	r3, #17
 8008a44:	d113      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a46:	4b21      	ldr	r3, [pc, #132]	; (8008acc <igmp_handle+0x98>)
 8008a48:	9300      	str	r3, [sp, #0]
 8008a4a:	f100 051d 	add.w	r5, r0, #29
 8008a4e:	466a      	mov	r2, sp
 8008a50:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8008a54:	462b      	mov	r3, r5
 8008a56:	42b3      	cmp	r3, r6
 8008a58:	d10c      	bne.n	8008a74 <igmp_handle+0x40>
 8008a5a:	2401      	movs	r4, #1
 8008a5c:	4b1c      	ldr	r3, [pc, #112]	; (8008ad0 <igmp_handle+0x9c>)
 8008a5e:	2100      	movs	r1, #0
 8008a60:	f8d3 718c 	ldr.w	r7, [r3, #396]	; 0x18c
 8008a64:	f04f 0c01 	mov.w	ip, #1
 8008a68:	336c      	adds	r3, #108	; 0x6c
 8008a6a:	428f      	cmp	r7, r1
 8008a6c:	d10a      	bne.n	8008a84 <igmp_handle+0x50>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a74:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008a78:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8008a7c:	428c      	cmp	r4, r1
 8008a7e:	d0ea      	beq.n	8008a56 <igmp_handle+0x22>
 8008a80:	2400      	movs	r4, #0
 8008a82:	e7eb      	b.n	8008a5c <igmp_handle+0x28>
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	9201      	str	r2, [sp, #4]
 8008a88:	b924      	cbnz	r4, 8008a94 <igmp_handle+0x60>
 8008a8a:	f10d 0e04 	add.w	lr, sp, #4
 8008a8e:	462a      	mov	r2, r5
 8008a90:	42b2      	cmp	r2, r6
 8008a92:	d10e      	bne.n	8008ab2 <igmp_handle+0x7e>
 8008a94:	f893 e005 	ldrb.w	lr, [r3, #5]
 8008a98:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 8008a9c:	f1be 0f01 	cmp.w	lr, #1
 8008aa0:	d110      	bne.n	8008ac4 <igmp_handle+0x90>
 8008aa2:	f893 e004 	ldrb.w	lr, [r3, #4]
 8008aa6:	4596      	cmp	lr, r2
 8008aa8:	d909      	bls.n	8008abe <igmp_handle+0x8a>
 8008aaa:	0852      	lsrs	r2, r2, #1
 8008aac:	3201      	adds	r2, #1
 8008aae:	711a      	strb	r2, [r3, #4]
 8008ab0:	e005      	b.n	8008abe <igmp_handle+0x8a>
 8008ab2:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8008ab6:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 8008aba:	45c1      	cmp	r9, r8
 8008abc:	d0e8      	beq.n	8008a90 <igmp_handle+0x5c>
 8008abe:	3101      	adds	r1, #1
 8008ac0:	3308      	adds	r3, #8
 8008ac2:	e7d2      	b.n	8008a6a <igmp_handle+0x36>
 8008ac4:	f883 c005 	strb.w	ip, [r3, #5]
 8008ac8:	e7ef      	b.n	8008aaa <igmp_handle+0x76>
 8008aca:	bf00      	nop
 8008acc:	010000e0 	smlatteq	r0, r0, r0, r0
 8008ad0:	10001328 	andne	r1, r0, r8, lsr #6

08008ad4 <ip_handle>:
 8008ad4:	7b82      	ldrb	r2, [r0, #14]
 8008ad6:	7dc3      	ldrb	r3, [r0, #23]
 8008ad8:	2a45      	cmp	r2, #69	; 0x45
 8008ada:	d003      	beq.n	8008ae4 <ip_handle+0x10>
 8008adc:	2b02      	cmp	r3, #2
 8008ade:	d111      	bne.n	8008b04 <ip_handle+0x30>
 8008ae0:	f7ff bfa8 	b.w	8008a34 <igmp_handle>
 8008ae4:	2b06      	cmp	r3, #6
 8008ae6:	d00b      	beq.n	8008b00 <ip_handle+0x2c>
 8008ae8:	d804      	bhi.n	8008af4 <ip_handle+0x20>
 8008aea:	2b01      	cmp	r3, #1
 8008aec:	d006      	beq.n	8008afc <ip_handle+0x28>
 8008aee:	2b02      	cmp	r3, #2
 8008af0:	d0f6      	beq.n	8008ae0 <ip_handle+0xc>
 8008af2:	4770      	bx	lr
 8008af4:	2b11      	cmp	r3, #17
 8008af6:	d105      	bne.n	8008b04 <ip_handle+0x30>
 8008af8:	f7ff bf3a 	b.w	8008970 <udp_handle>
 8008afc:	f000 b804 	b.w	8008b08 <icmp_handle>
 8008b00:	f7ff bd4c 	b.w	800859c <tcp_handle>
 8008b04:	4770      	bx	lr
	...

08008b08 <icmp_handle>:
 8008b08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b0a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008b0e:	2b08      	cmp	r3, #8
 8008b10:	4604      	mov	r4, r0
 8008b12:	d13e      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b14:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8008b18:	2d00      	cmp	r5, #0
 8008b1a:	d13a      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b1c:	1d86      	adds	r6, r0, #6
 8008b1e:	4631      	mov	r1, r6
 8008b20:	2206      	movs	r2, #6
 8008b22:	f009 fc03 	bl	801232c <memcpy.isra.0>
 8008b26:	4630      	mov	r0, r6
 8008b28:	491b      	ldr	r1, [pc, #108]	; (8008b98 <icmp_handle+0x90>)
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	f009 fbfe 	bl	801232c <memcpy.isra.0>
 8008b30:	8a63      	ldrh	r3, [r4, #18]
 8008b32:	f104 061a 	add.w	r6, r4, #26
 8008b36:	43db      	mvns	r3, r3
 8008b38:	4631      	mov	r1, r6
 8008b3a:	8263      	strh	r3, [r4, #18]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	f104 001e 	add.w	r0, r4, #30
 8008b42:	f009 fbf3 	bl	801232c <memcpy.isra.0>
 8008b46:	4b15      	ldr	r3, [pc, #84]	; (8008b9c <icmp_handle+0x94>)
 8008b48:	2204      	movs	r2, #4
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	9301      	str	r3, [sp, #4]
 8008b4e:	eb0d 0102 	add.w	r1, sp, r2
 8008b52:	4630      	mov	r0, r6
 8008b54:	f104 060e 	add.w	r6, r4, #14
 8008b58:	f009 fbe8 	bl	801232c <memcpy.isra.0>
 8008b5c:	2114      	movs	r1, #20
 8008b5e:	7625      	strb	r5, [r4, #24]
 8008b60:	7665      	strb	r5, [r4, #25]
 8008b62:	4630      	mov	r0, r6
 8008b64:	f009 fbb7 	bl	80122d6 <net_chksum>
 8008b68:	8a21      	ldrh	r1, [r4, #16]
 8008b6a:	8320      	strh	r0, [r4, #24]
 8008b6c:	ba49      	rev16	r1, r1
 8008b6e:	b289      	uxth	r1, r1
 8008b70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8008b74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8008b78:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8008b7c:	4630      	mov	r0, r6
 8008b7e:	f009 fbaa 	bl	80122d6 <net_chksum>
 8008b82:	8a21      	ldrh	r1, [r4, #16]
 8008b84:	84a0      	strh	r0, [r4, #36]	; 0x24
 8008b86:	ba49      	rev16	r1, r1
 8008b88:	b289      	uxth	r1, r1
 8008b8a:	310e      	adds	r1, #14
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f00c ffbf 	bl	8015b10 <emac_eth_send>
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop
 8008b98:	200093c0 	andcs	r9, r0, r0, asr #7
 8008b9c:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 8008ba0:	08019cbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, fp, ip, pc}
 8008ba4:	20000000 	andcs	r0, r0, r0
 8008ba8:	200000f8 	strdcs	r0, [r0], -r8
 8008bac:	200000f8 	strdcs	r0, [r0], -r8
 8008bb0:	2002d468 	andcs	sp, r2, r8, ror #8

08008bb4 <Reset_Handler>:
 8008bb4:	2100      	movs	r1, #0
 8008bb6:	e003      	b.n	8008bc0 <DataInit>

08008bb8 <CopyData>:
 8008bb8:	4b0a      	ldr	r3, [pc, #40]	; (8008be4 <Zerobss+0x10>)
 8008bba:	585b      	ldr	r3, [r3, r1]
 8008bbc:	5043      	str	r3, [r0, r1]
 8008bbe:	3104      	adds	r1, #4

08008bc0 <DataInit>:
 8008bc0:	4809      	ldr	r0, [pc, #36]	; (8008be8 <Zerobss+0x14>)
 8008bc2:	4b0a      	ldr	r3, [pc, #40]	; (8008bec <Zerobss+0x18>)
 8008bc4:	1842      	adds	r2, r0, r1
 8008bc6:	429a      	cmp	r2, r3
 8008bc8:	d3f6      	bcc.n	8008bb8 <CopyData>
 8008bca:	4a09      	ldr	r2, [pc, #36]	; (8008bf0 <Zerobss+0x1c>)
 8008bcc:	e002      	b.n	8008bd4 <Zerobss>

08008bce <FillZerobss>:
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f842 3b04 	str.w	r3, [r2], #4

08008bd4 <Zerobss>:
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <Zerobss+0x20>)
 8008bd6:	429a      	cmp	r2, r3
 8008bd8:	d3f9      	bcc.n	8008bce <FillZerobss>
 8008bda:	f00b fd5b 	bl	8014694 <SystemInit>
 8008bde:	f000 fc15 	bl	800940c <main>
 8008be2:	4770      	bx	lr
 8008be4:	08019cbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, fp, ip, pc}
 8008be8:	20000000 	andcs	r0, r0, r0
 8008bec:	200000f8 	strdcs	r0, [r0], -r8
 8008bf0:	200000f8 	strdcs	r0, [r0], -r8
 8008bf4:	2002d468 	andcs	sp, r2, r8, ror #8

08008bf8 <__aeabi_d2f>:
 8008bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8008c00:	bf24      	itt	cs
 8008c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8008c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8008c0a:	d90d      	bls.n	8008c28 <__aeabi_d2f+0x30>
 8008c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8008c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008c20:	bf08      	it	eq
 8008c22:	f020 0001 	biceq.w	r0, r0, #1
 8008c26:	4770      	bx	lr
 8008c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8008c2c:	d121      	bne.n	8008c72 <__aeabi_d2f+0x7a>
 8008c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8008c32:	bfbc      	itt	lt
 8008c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8008c38:	4770      	bxlt	lr
 8008c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008c42:	f1c2 0218 	rsb	r2, r2, #24
 8008c46:	f1c2 0c20 	rsb	ip, r2, #32
 8008c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8008c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8008c52:	bf18      	it	ne
 8008c54:	f040 0001 	orrne.w	r0, r0, #1
 8008c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008c64:	ea40 000c 	orr.w	r0, r0, ip
 8008c68:	fa23 f302 	lsr.w	r3, r3, r2
 8008c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008c70:	e7cc      	b.n	8008c0c <__aeabi_d2f+0x14>
 8008c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008c76:	d107      	bne.n	8008c88 <__aeabi_d2f+0x90>
 8008c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008c7c:	bf1e      	ittt	ne
 8008c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8008c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8008c86:	4770      	bxne	lr
 8008c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8008c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop

08008c98 <__aeabi_uldivmod>:
 8008c98:	b953      	cbnz	r3, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9a:	b94a      	cbnz	r2, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9c:	2900      	cmp	r1, #0
 8008c9e:	bf08      	it	eq
 8008ca0:	2800      	cmpeq	r0, #0
 8008ca2:	bf1c      	itt	ne
 8008ca4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008ca8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008cac:	f000 b80c 	b.w	8008cc8 <__aeabi_idiv0>
 8008cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8008cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008cb8:	f001 fb56 	bl	800a368 <__udivmoddi4>
 8008cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr

08008cc8 <__aeabi_idiv0>:
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop

08008ccc <__aeabi_drsub>:
 8008ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008cd0:	e002      	b.n	8008cd8 <__adddf3>
 8008cd2:	bf00      	nop

08008cd4 <__aeabi_dsub>:
 8008cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008cd8 <__adddf3>:
 8008cd8:	b530      	push	{r4, r5, lr}
 8008cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008ce2:	ea94 0f05 	teq	r4, r5
 8008ce6:	bf08      	it	eq
 8008ce8:	ea90 0f02 	teqeq	r0, r2
 8008cec:	bf1f      	itttt	ne
 8008cee:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008cfe:	f000 80e2 	beq.w	8008ec6 <__adddf3+0x1ee>
 8008d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008d0a:	bfb8      	it	lt
 8008d0c:	426d      	neglt	r5, r5
 8008d0e:	dd0c      	ble.n	8008d2a <__adddf3+0x52>
 8008d10:	442c      	add	r4, r5
 8008d12:	ea80 0202 	eor.w	r2, r0, r2
 8008d16:	ea81 0303 	eor.w	r3, r1, r3
 8008d1a:	ea82 0000 	eor.w	r0, r2, r0
 8008d1e:	ea83 0101 	eor.w	r1, r3, r1
 8008d22:	ea80 0202 	eor.w	r2, r0, r2
 8008d26:	ea81 0303 	eor.w	r3, r1, r3
 8008d2a:	2d36      	cmp	r5, #54	; 0x36
 8008d2c:	bf88      	it	hi
 8008d2e:	bd30      	pophi	{r4, r5, pc}
 8008d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008d40:	d002      	beq.n	8008d48 <__adddf3+0x70>
 8008d42:	4240      	negs	r0, r0
 8008d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008d54:	d002      	beq.n	8008d5c <__adddf3+0x84>
 8008d56:	4252      	negs	r2, r2
 8008d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5c:	ea94 0f05 	teq	r4, r5
 8008d60:	f000 80a7 	beq.w	8008eb2 <__adddf3+0x1da>
 8008d64:	f1a4 0401 	sub.w	r4, r4, #1
 8008d68:	f1d5 0e20 	rsbs	lr, r5, #32
 8008d6c:	db0d      	blt.n	8008d8a <__adddf3+0xb2>
 8008d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008d72:	fa22 f205 	lsr.w	r2, r2, r5
 8008d76:	1880      	adds	r0, r0, r2
 8008d78:	f141 0100 	adc.w	r1, r1, #0
 8008d7c:	fa03 f20e 	lsl.w	r2, r3, lr
 8008d80:	1880      	adds	r0, r0, r2
 8008d82:	fa43 f305 	asr.w	r3, r3, r5
 8008d86:	4159      	adcs	r1, r3
 8008d88:	e00e      	b.n	8008da8 <__adddf3+0xd0>
 8008d8a:	f1a5 0520 	sub.w	r5, r5, #32
 8008d8e:	f10e 0e20 	add.w	lr, lr, #32
 8008d92:	2a01      	cmp	r2, #1
 8008d94:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008d98:	bf28      	it	cs
 8008d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008d9e:	fa43 f305 	asr.w	r3, r3, r5
 8008da2:	18c0      	adds	r0, r0, r3
 8008da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008dac:	d507      	bpl.n	8008dbe <__adddf3+0xe6>
 8008dae:	f04f 0e00 	mov.w	lr, #0
 8008db2:	f1dc 0c00 	rsbs	ip, ip, #0
 8008db6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008dba:	eb6e 0101 	sbc.w	r1, lr, r1
 8008dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008dc2:	d31b      	bcc.n	8008dfc <__adddf3+0x124>
 8008dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008dc8:	d30c      	bcc.n	8008de4 <__adddf3+0x10c>
 8008dca:	0849      	lsrs	r1, r1, #1
 8008dcc:	ea5f 0030 	movs.w	r0, r0, rrx
 8008dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008dd4:	f104 0401 	add.w	r4, r4, #1
 8008dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008de0:	f080 809a 	bcs.w	8008f18 <__adddf3+0x240>
 8008de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008de8:	bf08      	it	eq
 8008dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008dee:	f150 0000 	adcs.w	r0, r0, #0
 8008df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008df6:	ea41 0105 	orr.w	r1, r1, r5
 8008dfa:	bd30      	pop	{r4, r5, pc}
 8008dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008e00:	4140      	adcs	r0, r0
 8008e02:	eb41 0101 	adc.w	r1, r1, r1
 8008e06:	3c01      	subs	r4, #1
 8008e08:	bf28      	it	cs
 8008e0a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8008e0e:	d2e9      	bcs.n	8008de4 <__adddf3+0x10c>
 8008e10:	f091 0f00 	teq	r1, #0
 8008e14:	bf04      	itt	eq
 8008e16:	4601      	moveq	r1, r0
 8008e18:	2000      	moveq	r0, #0
 8008e1a:	fab1 f381 	clz	r3, r1
 8008e1e:	bf08      	it	eq
 8008e20:	3320      	addeq	r3, #32
 8008e22:	f1a3 030b 	sub.w	r3, r3, #11
 8008e26:	f1b3 0220 	subs.w	r2, r3, #32
 8008e2a:	da0c      	bge.n	8008e46 <__adddf3+0x16e>
 8008e2c:	320c      	adds	r2, #12
 8008e2e:	dd08      	ble.n	8008e42 <__adddf3+0x16a>
 8008e30:	f102 0c14 	add.w	ip, r2, #20
 8008e34:	f1c2 020c 	rsb	r2, r2, #12
 8008e38:	fa01 f00c 	lsl.w	r0, r1, ip
 8008e3c:	fa21 f102 	lsr.w	r1, r1, r2
 8008e40:	e00c      	b.n	8008e5c <__adddf3+0x184>
 8008e42:	f102 0214 	add.w	r2, r2, #20
 8008e46:	bfd8      	it	le
 8008e48:	f1c2 0c20 	rsble	ip, r2, #32
 8008e4c:	fa01 f102 	lsl.w	r1, r1, r2
 8008e50:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008e54:	bfdc      	itt	le
 8008e56:	ea41 010c 	orrle.w	r1, r1, ip
 8008e5a:	4090      	lslle	r0, r2
 8008e5c:	1ae4      	subs	r4, r4, r3
 8008e5e:	bfa2      	ittt	ge
 8008e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008e64:	4329      	orrge	r1, r5
 8008e66:	bd30      	popge	{r4, r5, pc}
 8008e68:	ea6f 0404 	mvn.w	r4, r4
 8008e6c:	3c1f      	subs	r4, #31
 8008e6e:	da1c      	bge.n	8008eaa <__adddf3+0x1d2>
 8008e70:	340c      	adds	r4, #12
 8008e72:	dc0e      	bgt.n	8008e92 <__adddf3+0x1ba>
 8008e74:	f104 0414 	add.w	r4, r4, #20
 8008e78:	f1c4 0220 	rsb	r2, r4, #32
 8008e7c:	fa20 f004 	lsr.w	r0, r0, r4
 8008e80:	fa01 f302 	lsl.w	r3, r1, r2
 8008e84:	ea40 0003 	orr.w	r0, r0, r3
 8008e88:	fa21 f304 	lsr.w	r3, r1, r4
 8008e8c:	ea45 0103 	orr.w	r1, r5, r3
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	f1c4 040c 	rsb	r4, r4, #12
 8008e96:	f1c4 0220 	rsb	r2, r4, #32
 8008e9a:	fa20 f002 	lsr.w	r0, r0, r2
 8008e9e:	fa01 f304 	lsl.w	r3, r1, r4
 8008ea2:	ea40 0003 	orr.w	r0, r0, r3
 8008ea6:	4629      	mov	r1, r5
 8008ea8:	bd30      	pop	{r4, r5, pc}
 8008eaa:	fa21 f004 	lsr.w	r0, r1, r4
 8008eae:	4629      	mov	r1, r5
 8008eb0:	bd30      	pop	{r4, r5, pc}
 8008eb2:	f094 0f00 	teq	r4, #0
 8008eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008eba:	bf06      	itte	eq
 8008ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008ec0:	3401      	addeq	r4, #1
 8008ec2:	3d01      	subne	r5, #1
 8008ec4:	e74e      	b.n	8008d64 <__adddf3+0x8c>
 8008ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008eca:	bf18      	it	ne
 8008ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008ed0:	d029      	beq.n	8008f26 <__adddf3+0x24e>
 8008ed2:	ea94 0f05 	teq	r4, r5
 8008ed6:	bf08      	it	eq
 8008ed8:	ea90 0f02 	teqeq	r0, r2
 8008edc:	d005      	beq.n	8008eea <__adddf3+0x212>
 8008ede:	ea54 0c00 	orrs.w	ip, r4, r0
 8008ee2:	bf04      	itt	eq
 8008ee4:	4619      	moveq	r1, r3
 8008ee6:	4610      	moveq	r0, r2
 8008ee8:	bd30      	pop	{r4, r5, pc}
 8008eea:	ea91 0f03 	teq	r1, r3
 8008eee:	bf1e      	ittt	ne
 8008ef0:	2100      	movne	r1, #0
 8008ef2:	2000      	movne	r0, #0
 8008ef4:	bd30      	popne	{r4, r5, pc}
 8008ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008efa:	d105      	bne.n	8008f08 <__adddf3+0x230>
 8008efc:	0040      	lsls	r0, r0, #1
 8008efe:	4149      	adcs	r1, r1
 8008f00:	bf28      	it	cs
 8008f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008f06:	bd30      	pop	{r4, r5, pc}
 8008f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008f0c:	bf3c      	itt	cc
 8008f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008f12:	bd30      	popcc	{r4, r5, pc}
 8008f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008f20:	f04f 0000 	mov.w	r0, #0
 8008f24:	bd30      	pop	{r4, r5, pc}
 8008f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008f2a:	bf1a      	itte	ne
 8008f2c:	4619      	movne	r1, r3
 8008f2e:	4610      	movne	r0, r2
 8008f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008f34:	bf1c      	itt	ne
 8008f36:	460b      	movne	r3, r1
 8008f38:	4602      	movne	r2, r0
 8008f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008f3e:	bf06      	itte	eq
 8008f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008f44:	ea91 0f03 	teqeq	r1, r3
 8008f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008f4c:	bd30      	pop	{r4, r5, pc}
 8008f4e:	bf00      	nop

08008f50 <__aeabi_ui2d>:
 8008f50:	f090 0f00 	teq	r0, #0
 8008f54:	bf04      	itt	eq
 8008f56:	2100      	moveq	r1, #0
 8008f58:	4770      	bxeq	lr
 8008f5a:	b530      	push	{r4, r5, lr}
 8008f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f64:	f04f 0500 	mov.w	r5, #0
 8008f68:	f04f 0100 	mov.w	r1, #0
 8008f6c:	e750      	b.n	8008e10 <__adddf3+0x138>
 8008f6e:	bf00      	nop

08008f70 <__aeabi_i2d>:
 8008f70:	f090 0f00 	teq	r0, #0
 8008f74:	bf04      	itt	eq
 8008f76:	2100      	moveq	r1, #0
 8008f78:	4770      	bxeq	lr
 8008f7a:	b530      	push	{r4, r5, lr}
 8008f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008f88:	bf48      	it	mi
 8008f8a:	4240      	negmi	r0, r0
 8008f8c:	f04f 0100 	mov.w	r1, #0
 8008f90:	e73e      	b.n	8008e10 <__adddf3+0x138>
 8008f92:	bf00      	nop

08008f94 <__aeabi_f2d>:
 8008f94:	0042      	lsls	r2, r0, #1
 8008f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008f9a:	ea4f 0131 	mov.w	r1, r1, rrx
 8008f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8008fa2:	bf1f      	itttt	ne
 8008fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008fb0:	4770      	bxne	lr
 8008fb2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008fb6:	bf08      	it	eq
 8008fb8:	4770      	bxeq	lr
 8008fba:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008fbe:	bf04      	itt	eq
 8008fc0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008fc4:	4770      	bxeq	lr
 8008fc6:	b530      	push	{r4, r5, lr}
 8008fc8:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008fd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008fd4:	e71c      	b.n	8008e10 <__adddf3+0x138>
 8008fd6:	bf00      	nop

08008fd8 <__aeabi_ul2d>:
 8008fd8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fdc:	bf08      	it	eq
 8008fde:	4770      	bxeq	lr
 8008fe0:	b530      	push	{r4, r5, lr}
 8008fe2:	f04f 0500 	mov.w	r5, #0
 8008fe6:	e00a      	b.n	8008ffe <__aeabi_l2d+0x16>

08008fe8 <__aeabi_l2d>:
 8008fe8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fec:	bf08      	it	eq
 8008fee:	4770      	bxeq	lr
 8008ff0:	b530      	push	{r4, r5, lr}
 8008ff2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008ff6:	d502      	bpl.n	8008ffe <__aeabi_l2d+0x16>
 8008ff8:	4240      	negs	r0, r0
 8008ffa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ffe:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009002:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009006:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800900a:	f43f aed8 	beq.w	8008dbe <__adddf3+0xe6>
 800900e:	f04f 0203 	mov.w	r2, #3
 8009012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009016:	bf18      	it	ne
 8009018:	3203      	addne	r2, #3
 800901a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800901e:	bf18      	it	ne
 8009020:	3203      	addne	r2, #3
 8009022:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009026:	f1c2 0320 	rsb	r3, r2, #32
 800902a:	fa00 fc03 	lsl.w	ip, r0, r3
 800902e:	fa20 f002 	lsr.w	r0, r0, r2
 8009032:	fa01 fe03 	lsl.w	lr, r1, r3
 8009036:	ea40 000e 	orr.w	r0, r0, lr
 800903a:	fa21 f102 	lsr.w	r1, r1, r2
 800903e:	4414      	add	r4, r2
 8009040:	e6bd      	b.n	8008dbe <__adddf3+0xe6>
 8009042:	bf00      	nop

08009044 <ADC_IRQHandler>:
 8009044:	e7fe      	b.n	8009044 <ADC_IRQHandler>

08009046 <memcmp>:
 8009046:	b510      	push	{r4, lr}
 8009048:	3901      	subs	r1, #1
 800904a:	4402      	add	r2, r0
 800904c:	4290      	cmp	r0, r2
 800904e:	d101      	bne.n	8009054 <memcmp+0xe>
 8009050:	2000      	movs	r0, #0
 8009052:	e005      	b.n	8009060 <memcmp+0x1a>
 8009054:	7803      	ldrb	r3, [r0, #0]
 8009056:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800905a:	42a3      	cmp	r3, r4
 800905c:	d001      	beq.n	8009062 <memcmp+0x1c>
 800905e:	1b18      	subs	r0, r3, r4
 8009060:	bd10      	pop	{r4, pc}
 8009062:	3001      	adds	r0, #1
 8009064:	e7f2      	b.n	800904c <memcmp+0x6>

08009066 <memcpy>:
 8009066:	b510      	push	{r4, lr}
 8009068:	1e43      	subs	r3, r0, #1
 800906a:	440a      	add	r2, r1
 800906c:	4291      	cmp	r1, r2
 800906e:	d100      	bne.n	8009072 <memcpy+0xc>
 8009070:	bd10      	pop	{r4, pc}
 8009072:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009076:	f803 4f01 	strb.w	r4, [r3, #1]!
 800907a:	e7f7      	b.n	800906c <memcpy+0x6>

0800907c <DisplayHandler::~DisplayHandler()>:
 800907c:	4770      	bx	lr

0800907e <LightSet::FullOn()>:
 800907e:	4770      	bx	lr

08009080 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8009080:	4770      	bx	lr
	...

08009084 <PixelDmxStartStop::Start()>:
 8009084:	4b02      	ldr	r3, [pc, #8]	; (8009090 <PixelDmxStartStop::Start()+0xc>)
 8009086:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800908a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 800908e:	4770      	bx	lr
 8009090:	40020000 	andmi	r0, r2, r0

08009094 <PixelDmxStartStop::Stop()>:
 8009094:	4b02      	ldr	r3, [pc, #8]	; (80090a0 <PixelDmxStartStop::Stop()+0xc>)
 8009096:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800909a:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800909e:	4770      	bx	lr
 80090a0:	40020000 	andmi	r0, r2, r0

080090a4 <dmxconfigudp::atoi(char const*, unsigned int)>:
 80090a4:	b530      	push	{r4, r5, lr}
 80090a6:	4401      	add	r1, r0
 80090a8:	2300      	movs	r3, #0
 80090aa:	250a      	movs	r5, #10
 80090ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80090b0:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80090b4:	2c09      	cmp	r4, #9
 80090b6:	d805      	bhi.n	80090c4 <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
 80090b8:	fb05 2303 	mla	r3, r5, r3, r2
 80090bc:	4281      	cmp	r1, r0
 80090be:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 80090c2:	d1f3      	bne.n	80090ac <dmxconfigudp::atoi(char const*, unsigned int)+0x8>
 80090c4:	4618      	mov	r0, r3
 80090c6:	bd30      	pop	{r4, r5, pc}

080090c8 <LightSet64with4::~LightSet64with4()>:
 80090c8:	4770      	bx	lr

080090ca <LightSet64with4::Start(unsigned int)>:
 80090ca:	291f      	cmp	r1, #31
 80090cc:	460b      	mov	r3, r1
 80090ce:	d805      	bhi.n	80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d0:	6842      	ldr	r2, [r0, #4]
 80090d2:	b11a      	cbz	r2, 80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d4:	6813      	ldr	r3, [r2, #0]
 80090d6:	4610      	mov	r0, r2
 80090d8:	689b      	ldr	r3, [r3, #8]
 80090da:	4718      	bx	r3
 80090dc:	6880      	ldr	r0, [r0, #8]
 80090de:	b120      	cbz	r0, 80090ea <LightSet64with4::Start(unsigned int)+0x20>
 80090e0:	6802      	ldr	r2, [r0, #0]
 80090e2:	f003 0103 	and.w	r1, r3, #3
 80090e6:	6892      	ldr	r2, [r2, #8]
 80090e8:	4710      	bx	r2
 80090ea:	4770      	bx	lr

080090ec <LightSet64with4::Stop(unsigned int)>:
 80090ec:	293f      	cmp	r1, #63	; 0x3f
 80090ee:	460b      	mov	r3, r1
 80090f0:	d805      	bhi.n	80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f2:	6842      	ldr	r2, [r0, #4]
 80090f4:	b11a      	cbz	r2, 80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f6:	6813      	ldr	r3, [r2, #0]
 80090f8:	4610      	mov	r0, r2
 80090fa:	68db      	ldr	r3, [r3, #12]
 80090fc:	4718      	bx	r3
 80090fe:	6880      	ldr	r0, [r0, #8]
 8009100:	b120      	cbz	r0, 800910c <LightSet64with4::Stop(unsigned int)+0x20>
 8009102:	6802      	ldr	r2, [r0, #0]
 8009104:	f003 0103 	and.w	r1, r3, #3
 8009108:	68d2      	ldr	r2, [r2, #12]
 800910a:	4710      	bx	r2
 800910c:	4770      	bx	lr

0800910e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800910e:	293f      	cmp	r1, #63	; 0x3f
 8009110:	b4f0      	push	{r4, r5, r6, r7}
 8009112:	460c      	mov	r4, r1
 8009114:	4615      	mov	r5, r2
 8009116:	461e      	mov	r6, r3
 8009118:	d807      	bhi.n	800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911a:	6847      	ldr	r7, [r0, #4]
 800911c:	b12f      	cbz	r7, 800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911e:	6838      	ldr	r0, [r7, #0]
 8009120:	6904      	ldr	r4, [r0, #16]
 8009122:	4638      	mov	r0, r7
 8009124:	46a4      	mov	ip, r4
 8009126:	bcf0      	pop	{r4, r5, r6, r7}
 8009128:	4760      	bx	ip
 800912a:	6880      	ldr	r0, [r0, #8]
 800912c:	b138      	cbz	r0, 800913e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x30>
 800912e:	6803      	ldr	r3, [r0, #0]
 8009130:	691f      	ldr	r7, [r3, #16]
 8009132:	462a      	mov	r2, r5
 8009134:	4633      	mov	r3, r6
 8009136:	f004 0103 	and.w	r1, r4, #3
 800913a:	46bc      	mov	ip, r7
 800913c:	e7f3      	b.n	8009126 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x18>
 800913e:	bcf0      	pop	{r4, r5, r6, r7}
 8009140:	4770      	bx	lr

08009142 <LightSet64with4::Blackout(bool)>:
 8009142:	b570      	push	{r4, r5, r6, lr}
 8009144:	4604      	mov	r4, r0
 8009146:	6840      	ldr	r0, [r0, #4]
 8009148:	460d      	mov	r5, r1
 800914a:	b110      	cbz	r0, 8009152 <LightSet64with4::Blackout(bool)+0x10>
 800914c:	6803      	ldr	r3, [r0, #0]
 800914e:	695b      	ldr	r3, [r3, #20]
 8009150:	4798      	blx	r3
 8009152:	68a0      	ldr	r0, [r4, #8]
 8009154:	b128      	cbz	r0, 8009162 <LightSet64with4::Blackout(bool)+0x20>
 8009156:	6803      	ldr	r3, [r0, #0]
 8009158:	4629      	mov	r1, r5
 800915a:	695b      	ldr	r3, [r3, #20]
 800915c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009160:	4718      	bx	r3
 8009162:	bd70      	pop	{r4, r5, r6, pc}

08009164 <LightSet64with4::Print()>:
 8009164:	b510      	push	{r4, lr}
 8009166:	4604      	mov	r4, r0
 8009168:	6840      	ldr	r0, [r0, #4]
 800916a:	b110      	cbz	r0, 8009172 <LightSet64with4::Print()+0xe>
 800916c:	6803      	ldr	r3, [r0, #0]
 800916e:	69db      	ldr	r3, [r3, #28]
 8009170:	4798      	blx	r3
 8009172:	68a0      	ldr	r0, [r4, #8]
 8009174:	b120      	cbz	r0, 8009180 <LightSet64with4::Print()+0x1c>
 8009176:	6803      	ldr	r3, [r0, #0]
 8009178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800917c:	69db      	ldr	r3, [r3, #28]
 800917e:	4718      	bx	r3
 8009180:	bd10      	pop	{r4, pc}

08009182 <LightSet64with4::SetDmxStartAddress(unsigned short)>:
 8009182:	2000      	movs	r0, #0
 8009184:	4770      	bx	lr

08009186 <LightSet64with4::GetDmxStartAddress()>:
 8009186:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800918a:	4770      	bx	lr

0800918c <LightSet64with4::GetDmxFootprint()>:
 800918c:	2000      	movs	r0, #0
 800918e:	4770      	bx	lr

08009190 <LightSet64with4::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8009190:	2000      	movs	r0, #0
 8009192:	4770      	bx	lr

08009194 <RDMNetDevice::CopyUID(unsigned char*)>:
 8009194:	460b      	mov	r3, r1
 8009196:	2206      	movs	r2, #6
 8009198:	1d41      	adds	r1, r0, #5
 800919a:	4618      	mov	r0, r3
 800919c:	f7ff bf63 	b.w	8009066 <memcpy>

080091a0 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 80091a0:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091a4:	e7f6      	b.n	8009194 <RDMNetDevice::CopyUID(unsigned char*)>
	...

080091a8 <RDMNetDevice::CopyCID(unsigned char*)>:
 80091a8:	4608      	mov	r0, r1
 80091aa:	2210      	movs	r2, #16
 80091ac:	4901      	ldr	r1, [pc, #4]	; (80091b4 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 80091ae:	f7ff bf5a 	b.w	8009066 <memcpy>
 80091b2:	bf00      	nop
 80091b4:	20000931 	andcs	r0, r0, r1, lsr r9

080091b8 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 80091b8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091bc:	e7f4      	b.n	80091a8 <RDMNetDevice::CopyCID(unsigned char*)>
 80091be:	bf00      	nop

080091c0 <DisplayHandler::~DisplayHandler()>:
 80091c0:	b510      	push	{r4, lr}
 80091c2:	4604      	mov	r4, r0
 80091c4:	f00b f818 	bl	80141f8 <operator delete(void*)>
 80091c8:	4620      	mov	r0, r4
 80091ca:	bd10      	pop	{r4, pc}

080091cc <LightSet64with4::~LightSet64with4()>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	4604      	mov	r4, r0
 80091d0:	f00b f812 	bl	80141f8 <operator delete(void*)>
 80091d4:	4620      	mov	r0, r4
 80091d6:	bd10      	pop	{r4, pc}

080091d8 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80091d8:	b510      	push	{r4, lr}
 80091da:	4604      	mov	r4, r0
 80091dc:	f00b f80c 	bl	80141f8 <operator delete(void*)>
 80091e0:	4620      	mov	r0, r4
 80091e2:	bd10      	pop	{r4, pc}

080091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091e4:	b510      	push	{r4, lr}
 80091e6:	4c03      	ldr	r4, [pc, #12]	; (80091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80091e8:	30d0      	adds	r0, #208	; 0xd0
 80091ea:	4622      	mov	r2, r4
 80091ec:	f003 fe6e 	bl	800cecc <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 80091f0:	4620      	mov	r0, r4
 80091f2:	bd10      	pop	{r4, pc}
 80091f4:	20000830 	andcs	r0, r0, r0, lsr r8

080091f8 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091f8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091fc:	e7f2      	b.n	80091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80091fe:	bf00      	nop

08009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8009200:	b110      	cbz	r0, 8009208 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8009202:	6803      	ldr	r3, [r0, #0]
 8009204:	6a1b      	ldr	r3, [r3, #32]
 8009206:	4718      	bx	r3
 8009208:	4770      	bx	lr

0800920a <Display::PutChar(int) [clone .isra.0]>:
 800920a:	b110      	cbz	r0, 8009212 <Display::PutChar(int) [clone .isra.0]+0x8>
 800920c:	6803      	ldr	r3, [r0, #0]
 800920e:	695b      	ldr	r3, [r3, #20]
 8009210:	4718      	bx	r3
 8009212:	4770      	bx	lr

08009214 <DisplayHandler::Print(unsigned int)>:
 8009214:	b538      	push	{r3, r4, r5, lr}
 8009216:	7903      	ldrb	r3, [r0, #4]
 8009218:	b1f3      	cbz	r3, 8009258 <DisplayHandler::Print(unsigned int)+0x44>
 800921a:	2904      	cmp	r1, #4
 800921c:	bf98      	it	ls
 800921e:	4b0f      	ldrls	r3, [pc, #60]	; (800925c <DisplayHandler::Print(unsigned int)+0x48>)
 8009220:	4d0f      	ldr	r5, [pc, #60]	; (8009260 <DisplayHandler::Print(unsigned int)+0x4c>)
 8009222:	bf98      	it	ls
 8009224:	5c5c      	ldrbls	r4, [r3, r1]
 8009226:	682b      	ldr	r3, [r5, #0]
 8009228:	6998      	ldr	r0, [r3, #24]
 800922a:	bf88      	it	hi
 800922c:	2455      	movhi	r4, #85	; 0x55
 800922e:	b178      	cbz	r0, 8009250 <DisplayHandler::Print(unsigned int)+0x3c>
 8009230:	7901      	ldrb	r1, [r0, #4]
 8009232:	3901      	subs	r1, #1
 8009234:	b2c9      	uxtb	r1, r1
 8009236:	b168      	cbz	r0, 8009254 <DisplayHandler::Print(unsigned int)+0x40>
 8009238:	7942      	ldrb	r2, [r0, #5]
 800923a:	3a01      	subs	r2, #1
 800923c:	b2d2      	uxtb	r2, r2
 800923e:	f7ff ffdf 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009242:	682b      	ldr	r3, [r5, #0]
 8009244:	4621      	mov	r1, r4
 8009246:	6998      	ldr	r0, [r3, #24]
 8009248:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800924c:	f7ff bfdd 	b.w	800920a <Display::PutChar(int) [clone .isra.0]>
 8009250:	4601      	mov	r1, r0
 8009252:	e7ee      	b.n	8009232 <DisplayHandler::Print(unsigned int)+0x1e>
 8009254:	4602      	mov	r2, r0
 8009256:	e7f0      	b.n	800923a <DisplayHandler::Print(unsigned int)+0x26>
 8009258:	bd38      	pop	{r3, r4, r5, pc}
 800925a:	bf00      	nop
 800925c:	08016a84 	stmdaeq	r1, {r2, r7, r9, fp, sp, lr}
 8009260:	2000fdd4 	ldrdcs	pc, [r0], -r4

08009264 <RDMNetDevice::~RDMNetDevice()>:
 8009264:	b510      	push	{r4, lr}
 8009266:	4b06      	ldr	r3, [pc, #24]	; (8009280 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8009268:	4604      	mov	r4, r0
 800926a:	f840 3b8c 	str.w	r3, [r0], #140
 800926e:	f003 f8df 	bl	800c430 <RDMSubDevices::~RDMSubDevices()>
 8009272:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8009276:	f003 f8bb 	bl	800c3f0 <RDMSensors::~RDMSensors()>
 800927a:	4620      	mov	r0, r4
 800927c:	bd10      	pop	{r4, pc}
 800927e:	bf00      	nop
 8009280:	080181ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, pc}

08009284 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8009284:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009288:	e7ec      	b.n	8009264 <RDMNetDevice::~RDMNetDevice()>
 800928a:	bf00      	nop

0800928c <RDMNetDevice::~RDMNetDevice()>:
 800928c:	b510      	push	{r4, lr}
 800928e:	4604      	mov	r4, r0
 8009290:	f7ff ffe8 	bl	8009264 <RDMNetDevice::~RDMNetDevice()>
 8009294:	4620      	mov	r0, r4
 8009296:	f00a ffaf 	bl	80141f8 <operator delete(void*)>
 800929a:	4620      	mov	r0, r4
 800929c:	bd10      	pop	{r4, pc}

0800929e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800929e:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80092a2:	e7f3      	b.n	800928c <RDMNetDevice::~RDMNetDevice()>

080092a4 <Display::Printf(unsigned char, char const*, ...)>:
 80092a4:	b40c      	push	{r2, r3}
 80092a6:	b570      	push	{r4, r5, r6, lr}
 80092a8:	6984      	ldr	r4, [r0, #24]
 80092aa:	b08a      	sub	sp, #40	; 0x28
 80092ac:	4605      	mov	r5, r0
 80092ae:	460e      	mov	r6, r1
 80092b0:	b174      	cbz	r4, 80092d0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80092b2:	ab0f      	add	r3, sp, #60	; 0x3c
 80092b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80092b6:	9301      	str	r3, [sp, #4]
 80092b8:	2120      	movs	r1, #32
 80092ba:	a802      	add	r0, sp, #8
 80092bc:	f001 f844 	bl	800a348 <vsnprintf>
 80092c0:	4604      	mov	r4, r0
 80092c2:	69a8      	ldr	r0, [r5, #24]
 80092c4:	6803      	ldr	r3, [r0, #0]
 80092c6:	aa02      	add	r2, sp, #8
 80092c8:	69dd      	ldr	r5, [r3, #28]
 80092ca:	4631      	mov	r1, r6
 80092cc:	b2a3      	uxth	r3, r4
 80092ce:	47a8      	blx	r5
 80092d0:	4620      	mov	r0, r4
 80092d2:	b00a      	add	sp, #40	; 0x28
 80092d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092d8:	b002      	add	sp, #8
 80092da:	4770      	bx	lr

080092dc <Display::TextStatus(char const*)>:
 80092dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092e0:	4604      	mov	r4, r0
 80092e2:	6980      	ldr	r0, [r0, #24]
 80092e4:	460d      	mov	r5, r1
 80092e6:	b360      	cbz	r0, 8009342 <Display::TextStatus(char const*)+0x66>
 80092e8:	7946      	ldrb	r6, [r0, #5]
 80092ea:	f890 8004 	ldrb.w	r8, [r0, #4]
 80092ee:	1e72      	subs	r2, r6, #1
 80092f0:	b2d2      	uxtb	r2, r2
 80092f2:	2100      	movs	r1, #0
 80092f4:	9201      	str	r2, [sp, #4]
 80092f6:	f7ff ff83 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80092fa:	2700      	movs	r7, #0
 80092fc:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8009300:	45b8      	cmp	r8, r7
 8009302:	9a01      	ldr	r2, [sp, #4]
 8009304:	69a0      	ldr	r0, [r4, #24]
 8009306:	d816      	bhi.n	8009336 <Display::TextStatus(char const*)+0x5a>
 8009308:	2100      	movs	r1, #0
 800930a:	f7ff ff79 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800930e:	69a0      	ldr	r0, [r4, #24]
 8009310:	b1b8      	cbz	r0, 8009342 <Display::TextStatus(char const*)+0x66>
 8009312:	7901      	ldrb	r1, [r0, #4]
 8009314:	2300      	movs	r3, #0
 8009316:	5cea      	ldrb	r2, [r5, r3]
 8009318:	b11a      	cbz	r2, 8009322 <Display::TextStatus(char const*)+0x46>
 800931a:	1c5a      	adds	r2, r3, #1
 800931c:	4299      	cmp	r1, r3
 800931e:	4613      	mov	r3, r2
 8009320:	dcf9      	bgt.n	8009316 <Display::TextStatus(char const*)+0x3a>
 8009322:	6802      	ldr	r2, [r0, #0]
 8009324:	69d4      	ldr	r4, [r2, #28]
 8009326:	b2db      	uxtb	r3, r3
 8009328:	462a      	mov	r2, r5
 800932a:	4631      	mov	r1, r6
 800932c:	46a4      	mov	ip, r4
 800932e:	b002      	add	sp, #8
 8009330:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009334:	4760      	bx	ip
 8009336:	2120      	movs	r1, #32
 8009338:	9201      	str	r2, [sp, #4]
 800933a:	3701      	adds	r7, #1
 800933c:	f7ff ff65 	bl	800920a <Display::PutChar(int) [clone .isra.0]>
 8009340:	e7de      	b.n	8009300 <Display::TextStatus(char const*)+0x24>
 8009342:	b002      	add	sp, #8
 8009344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8009348:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800934a:	4605      	mov	r5, r0
 800934c:	461e      	mov	r6, r3
 800934e:	460f      	mov	r7, r1
 8009350:	4614      	mov	r4, r2
 8009352:	f7ff ffc3 	bl	80092dc <Display::TextStatus(char const*)>
 8009356:	7c6b      	ldrb	r3, [r5, #17]
 8009358:	b19b      	cbz	r3, 8009382 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 800935a:	43e2      	mvns	r2, r4
 800935c:	2312      	movs	r3, #18
 800935e:	7a28      	ldrb	r0, [r5, #8]
 8009360:	f88d 3004 	strb.w	r3, [sp, #4]
 8009364:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8009368:	f88d 3005 	strb.w	r3, [sp, #5]
 800936c:	f88d 2006 	strb.w	r2, [sp, #6]
 8009370:	f00c fc94 	bl	8015c9c <gd32_i2c_set_address>
 8009374:	68e8      	ldr	r0, [r5, #12]
 8009376:	f00c fc89 	bl	8015c8c <gd32_i2c_set_baudrate>
 800937a:	2103      	movs	r1, #3
 800937c:	a801      	add	r0, sp, #4
 800937e:	f00c fc93 	bl	8015ca8 <gd32_i2c_write>
 8009382:	1c73      	adds	r3, r6, #1
 8009384:	d006      	beq.n	8009394 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8009386:	4639      	mov	r1, r7
 8009388:	4630      	mov	r0, r6
 800938a:	b003      	add	sp, #12
 800938c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8009390:	f00a bdae 	b.w	8013ef0 <console_status>
 8009394:	b003      	add	sp, #12
 8009396:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009398 <Display::SetSleep(bool)>:
 8009398:	b538      	push	{r3, r4, r5, lr}
 800939a:	4604      	mov	r4, r0
 800939c:	6980      	ldr	r0, [r0, #24]
 800939e:	460d      	mov	r5, r1
 80093a0:	b138      	cbz	r0, 80093b2 <Display::SetSleep(bool)+0x1a>
 80093a2:	6803      	ldr	r3, [r0, #0]
 80093a4:	7421      	strb	r1, [r4, #16]
 80093a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093a8:	4798      	blx	r3
 80093aa:	b915      	cbnz	r5, 80093b2 <Display::SetSleep(bool)+0x1a>
 80093ac:	4b01      	ldr	r3, [pc, #4]	; (80093b4 <Display::SetSleep(bool)+0x1c>)
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	6063      	str	r3, [r4, #4]
 80093b2:	bd38      	pop	{r3, r4, r5, pc}
 80093b4:	2000fedc 	ldrdcs	pc, [r0], -ip

080093b8 <display::timeout::gpio_init()>:
 80093b8:	b510      	push	{r4, lr}
 80093ba:	f640 4002 	movw	r0, #3074	; 0xc02
 80093be:	f00b ff6b 	bl	8015298 <rcu_periph_clock_enable>
 80093c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093c6:	4803      	ldr	r0, [pc, #12]	; (80093d4 <display::timeout::gpio_init()+0x1c>)
 80093c8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80093cc:	2201      	movs	r2, #1
 80093ce:	2100      	movs	r1, #0
 80093d0:	f00b bee6 	b.w	80151a0 <gpio_mode_set>
 80093d4:	40020800 	andmi	r0, r2, r0, lsl #16

080093d8 <display::timeout::gpio_renew()>:
 80093d8:	4b03      	ldr	r3, [pc, #12]	; (80093e8 <display::timeout::gpio_renew()+0x10>)
 80093da:	f8d3 0810 	ldr.w	r0, [r3, #2064]	; 0x810
 80093de:	f480 5000 	eor.w	r0, r0, #8192	; 0x2000
 80093e2:	f3c0 3040 	ubfx	r0, r0, #13, #1
 80093e6:	4770      	bx	lr
 80093e8:	40020000 	andmi	r0, r2, r0

080093ec <Hardware::RebootHandler()>:
 80093ec:	b508      	push	{r3, lr}
 80093ee:	4b05      	ldr	r3, [pc, #20]	; (8009404 <Hardware::RebootHandler()+0x18>)
 80093f0:	6818      	ldr	r0, [r3, #0]
 80093f2:	f006 fccf 	bl	800fd94 <WS28xxMulti::Blackout()>
 80093f6:	4b04      	ldr	r3, [pc, #16]	; (8009408 <Hardware::RebootHandler()+0x1c>)
 80093f8:	6818      	ldr	r0, [r3, #0]
 80093fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80093fe:	f002 bbcf 	b.w	800bba0 <DdpDisplay::Stop()>
 8009402:	bf00      	nop
 8009404:	200013b0 			; <UNDEFINED> instruction: 0x200013b0
 8009408:	2000081c 	andcs	r0, r0, ip, lsl r8

0800940c <main>:
 800940c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009410:	f6ad 2d58 	subw	sp, sp, #2648	; 0xa58
 8009414:	a807      	add	r0, sp, #28
 8009416:	f00a fe25 	bl	8014064 <Hardware::Hardware()>
 800941a:	a8b9      	add	r0, sp, #740	; 0x2e4
 800941c:	f007 feaa 	bl	8011174 <Network::Network()>
 8009420:	a821      	add	r0, sp, #132	; 0x84
 8009422:	f00a fdc3 	bl	8013fac <LedBlink::LedBlink()>
 8009426:	a88f      	add	r0, sp, #572	; 0x23c
 8009428:	f008 ffa2 	bl	8012370 <DisplayUdf::DisplayUdf()>
 800942c:	4bb8      	ldr	r3, [pc, #736]	; (8009710 <main+0x304>)
 800942e:	4ab9      	ldr	r2, [pc, #740]	; (8009714 <main+0x308>)
 8009430:	49b9      	ldr	r1, [pc, #740]	; (8009718 <main+0x30c>)
 8009432:	a808      	add	r0, sp, #32
 8009434:	f00a fd74 	bl	8013f20 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8009438:	a817      	add	r0, sp, #92	; 0x5c
 800943a:	f009 fb87 	bl	8012b4c <ConfigStore::ConfigStore()>
 800943e:	49b7      	ldr	r1, [pc, #732]	; (800971c <main+0x310>)
 8009440:	a808      	add	r0, sp, #32
 8009442:	f00a fda5 	bl	8013f90 <FirmwareVersion::Print(char const*)>
 8009446:	4bb6      	ldr	r3, [pc, #728]	; (8009720 <main+0x314>)
 8009448:	2201      	movs	r2, #1
 800944a:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 800944e:	2008      	movs	r0, #8
 8009450:	f00a fed6 	bl	8014200 <operator new(unsigned int)>
 8009454:	4bb3      	ldr	r3, [pc, #716]	; (8009724 <main+0x318>)
 8009456:	6003      	str	r3, [r0, #0]
 8009458:	4bb3      	ldr	r3, [pc, #716]	; (8009728 <main+0x31c>)
 800945a:	681b      	ldr	r3, [r3, #0]
 800945c:	2b00      	cmp	r3, #0
 800945e:	bf14      	ite	ne
 8009460:	2201      	movne	r2, #1
 8009462:	2200      	moveq	r2, #0
 8009464:	7102      	strb	r2, [r0, #4]
 8009466:	d004      	beq.n	8009472 <main+0x66>
 8009468:	699b      	ldr	r3, [r3, #24]
 800946a:	3b00      	subs	r3, #0
 800946c:	bf18      	it	ne
 800946e:	2301      	movne	r3, #1
 8009470:	7103      	strb	r3, [r0, #4]
 8009472:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8009476:	49ad      	ldr	r1, [pc, #692]	; (800972c <main+0x320>)
 8009478:	9023      	str	r0, [sp, #140]	; 0x8c
 800947a:	2303      	movs	r3, #3
 800947c:	a88f      	add	r0, sp, #572	; 0x23c
 800947e:	f7ff ff63 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009482:	a811      	add	r0, sp, #68	; 0x44
 8009484:	f009 fd5a 	bl	8012f3c <StoreNetwork::StoreNetwork()>
 8009488:	ab12      	add	r3, sp, #72	; 0x48
 800948a:	a911      	add	r1, sp, #68	; 0x44
 800948c:	a8b9      	add	r0, sp, #740	; 0x2e4
 800948e:	93e7      	str	r3, [sp, #924]	; 0x39c
 8009490:	f007 fec4 	bl	801121c <Network::Init(NetworkParamsStore*)>
 8009494:	a8b9      	add	r0, sp, #740	; 0x2e4
 8009496:	f008 f90d 	bl	80116b4 <Network::Print()>
 800949a:	49a5      	ldr	r1, [pc, #660]	; (8009730 <main+0x324>)
 800949c:	2303      	movs	r3, #3
 800949e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80094a2:	a88f      	add	r0, sp, #572	; 0x23c
 80094a4:	f7ff ff50 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80094a8:	a809      	add	r0, sp, #36	; 0x24
 80094aa:	2400      	movs	r4, #0
 80094ac:	f007 fa9e 	bl	80109ec <MDNS::MDNS()>
 80094b0:	a809      	add	r0, sp, #36	; 0x24
 80094b2:	f007 fb5b 	bl	8010b6c <MDNS::Start()>
 80094b6:	4a9f      	ldr	r2, [pc, #636]	; (8009734 <main+0x328>)
 80094b8:	f642 1305 	movw	r3, #10501	; 0x2905
 80094bc:	4621      	mov	r1, r4
 80094be:	e9cd 4400 	strd	r4, r4, [sp]
 80094c2:	a809      	add	r0, sp, #36	; 0x24
 80094c4:	f007 fcc0 	bl	8010e48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80094c8:	4a9b      	ldr	r2, [pc, #620]	; (8009738 <main+0x32c>)
 80094ca:	2345      	movs	r3, #69	; 0x45
 80094cc:	4621      	mov	r1, r4
 80094ce:	e9cd 4400 	strd	r4, r4, [sp]
 80094d2:	a809      	add	r0, sp, #36	; 0x24
 80094d4:	f007 fcb8 	bl	8010e48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80094d8:	4b98      	ldr	r3, [pc, #608]	; (800973c <main+0x330>)
 80094da:	4a99      	ldr	r2, [pc, #612]	; (8009740 <main+0x334>)
 80094dc:	e9cd 4300 	strd	r4, r3, [sp]
 80094e0:	4621      	mov	r1, r4
 80094e2:	f44f 637d 	mov.w	r3, #4048	; 0xfd0
 80094e6:	a809      	add	r0, sp, #36	; 0x24
 80094e8:	f007 fcae 	bl	8010e48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80094ec:	2501      	movs	r5, #1
 80094ee:	4b95      	ldr	r3, [pc, #596]	; (8009744 <main+0x338>)
 80094f0:	4a95      	ldr	r2, [pc, #596]	; (8009748 <main+0x33c>)
 80094f2:	9301      	str	r3, [sp, #4]
 80094f4:	4621      	mov	r1, r4
 80094f6:	2350      	movs	r3, #80	; 0x50
 80094f8:	9500      	str	r5, [sp, #0]
 80094fa:	a809      	add	r0, sp, #36	; 0x24
 80094fc:	f007 fca4 	bl	8010e48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009500:	a809      	add	r0, sp, #36	; 0x24
 8009502:	f007 fde9 	bl	80110d8 <MDNS::Print()>
 8009506:	a854      	add	r0, sp, #336	; 0x150
 8009508:	f001 fee4 	bl	800b2d4 <HttpDaemon::HttpDaemon()>
 800950c:	a854      	add	r0, sp, #336	; 0x150
 800950e:	f001 fef5 	bl	800b2fc <HttpDaemon::Start()>
 8009512:	23aa      	movs	r3, #170	; 0xaa
 8009514:	2203      	movs	r2, #3
 8009516:	e9cd 2368 	strd	r2, r3, [sp, #416]	; 0x1a0
 800951a:	2206      	movs	r2, #6
 800951c:	e9cd 246a 	strd	r2, r4, [sp, #424]	; 0x1a8
 8009520:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8009524:	926c      	str	r2, [sp, #432]	; 0x1b0
 8009526:	f44f 7280 	mov.w	r2, #256	; 0x100
 800952a:	f8ad 21b4 	strh.w	r2, [sp, #436]	; 0x1b4
 800952e:	4a87      	ldr	r2, [pc, #540]	; (800974c <main+0x340>)
 8009530:	f8ad 51cc 	strh.w	r5, [sp, #460]	; 0x1cc
 8009534:	a813      	add	r0, sp, #76	; 0x4c
 8009536:	e9cd 256e 	strd	r2, r5, [sp, #440]	; 0x1b8
 800953a:	e9cd 5370 	strd	r5, r3, [sp, #448]	; 0x1c0
 800953e:	f009 fecf 	bl	80132e0 <StorePixelDmx::StorePixelDmx()>
 8009542:	a913      	add	r1, sp, #76	; 0x4c
 8009544:	a880      	add	r0, sp, #512	; 0x200
 8009546:	f005 f807 	bl	800e558 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800954a:	a880      	add	r0, sp, #512	; 0x200
 800954c:	f005 f824 	bl	800e598 <PixelDmxParams::Load()>
 8009550:	b130      	cbz	r0, 8009560 <main+0x154>
 8009552:	a880      	add	r0, sp, #512	; 0x200
 8009554:	f005 fb74 	bl	800ec40 <PixelDmxParams::Dump()>
 8009558:	a968      	add	r1, sp, #416	; 0x1a0
 800955a:	a880      	add	r0, sp, #512	; 0x200
 800955c:	f005 fb2b 	bl	800ebb6 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8009560:	a968      	add	r1, sp, #416	; 0x1a0
 8009562:	a8a3      	add	r0, sp, #652	; 0x28c
 8009564:	f004 ff10 	bl	800e388 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8009568:	2004      	movs	r0, #4
 800956a:	f00a fe49 	bl	8014200 <operator new(unsigned int)>
 800956e:	4b78      	ldr	r3, [pc, #480]	; (8009750 <main+0x344>)
 8009570:	6003      	str	r3, [r0, #0]
 8009572:	4604      	mov	r4, r0
 8009574:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009578:	4876      	ldr	r0, [pc, #472]	; (8009754 <main+0x348>)
 800957a:	2200      	movs	r2, #0
 800957c:	2101      	movs	r1, #1
 800957e:	f00b fe0f 	bl	80151a0 <gpio_mode_set>
 8009582:	2100      	movs	r1, #0
 8009584:	4873      	ldr	r0, [pc, #460]	; (8009754 <main+0x348>)
 8009586:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800958a:	2202      	movs	r2, #2
 800958c:	f00b fe28 	bl	80151e0 <gpio_output_options_set>
 8009590:	4b63      	ldr	r3, [pc, #396]	; (8009720 <main+0x314>)
 8009592:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009596:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800959a:	f50d 6091 	add.w	r0, sp, #1160	; 0x488
 800959e:	94b6      	str	r4, [sp, #728]	; 0x2d8
 80095a0:	f002 fa92 	bl	800bac8 <DdpDisplay::DdpDisplay()>
 80095a4:	9bad      	ldr	r3, [sp, #692]	; 0x2b4
 80095a6:	9ab4      	ldr	r2, [sp, #720]	; 0x2d0
 80095a8:	9eab      	ldr	r6, [sp, #684]	; 0x2ac
 80095aa:	f8cd 3498 	str.w	r3, [sp, #1176]	; 0x498
 80095ae:	2a04      	cmp	r2, #4
 80095b0:	fb02 f303 	mul.w	r3, r2, r3
 80095b4:	f8cd 349c 	str.w	r3, [sp, #1180]	; 0x49c
 80095b8:	bf0c      	ite	eq
 80095ba:	f44f 7300 	moveq.w	r3, #512	; 0x200
 80095be:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 80095c2:	2e0f      	cmp	r6, #15
 80095c4:	f8cd 34a0 	str.w	r3, [sp, #1184]	; 0x4a0
 80095c8:	f89d 5214 	ldrb.w	r5, [sp, #532]	; 0x214
 80095cc:	bf94      	ite	ls
 80095ce:	4633      	movls	r3, r6
 80095d0:	2310      	movhi	r3, #16
 80095d2:	4631      	mov	r1, r6
 80095d4:	a80a      	add	r0, sp, #40	; 0x28
 80095d6:	f8cd 34a4 	str.w	r3, [sp, #1188]	; 0x4a4
 80095da:	f005 fdc7 	bl	800f16c <PixelPatterns::PixelPatterns(unsigned int)>
 80095de:	4b5e      	ldr	r3, [pc, #376]	; (8009758 <main+0x34c>)
 80095e0:	2d05      	cmp	r5, #5
 80095e2:	601d      	str	r5, [r3, #0]
 80095e4:	f340 8222 	ble.w	8009a2c <main+0x620>
 80095e8:	a80b      	add	r0, sp, #44	; 0x2c
 80095ea:	f009 fc0f 	bl	8012e0c <StoreDmxSend::StoreDmxSend()>
 80095ee:	a90b      	add	r1, sp, #44	; 0x2c
 80095f0:	a81d      	add	r0, sp, #116	; 0x74
 80095f2:	f004 f8cd 	bl	800d790 <DmxParams::DmxParams(DmxParamsStore*)>
 80095f6:	a839      	add	r0, sp, #228	; 0xe4
 80095f8:	f004 fc20 	bl	800de3c <Dmx::Dmx()>
 80095fc:	a81d      	add	r0, sp, #116	; 0x74
 80095fe:	f004 f8d3 	bl	800d7a8 <DmxParams::Load()>
 8009602:	b130      	cbz	r0, 8009612 <main+0x206>
 8009604:	a81d      	add	r0, sp, #116	; 0x74
 8009606:	f004 fa21 	bl	800da4c <DmxParams::Dump()>
 800960a:	a939      	add	r1, sp, #228	; 0xe4
 800960c:	a81d      	add	r0, sp, #116	; 0x74
 800960e:	f004 f9ef 	bl	800d9f0 <DmxParams::Set(Dmx*)>
 8009612:	4b52      	ldr	r3, [pc, #328]	; (800975c <main+0x350>)
 8009614:	930c      	str	r3, [sp, #48]	; 0x30
 8009616:	a80c      	add	r0, sp, #48	; 0x30
 8009618:	f004 f860 	bl	800d6dc <DmxSend::Print()>
 800961c:	4b50      	ldr	r3, [pc, #320]	; (8009760 <main+0x354>)
 800961e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8009622:	6818      	ldr	r0, [r3, #0]
 8009624:	f007 fdd5 	bl	80111d2 <Network::Begin(unsigned short)>
 8009628:	4b4e      	ldr	r3, [pc, #312]	; (8009764 <main+0x358>)
 800962a:	6018      	str	r0, [r3, #0]
 800962c:	4b4a      	ldr	r3, [pc, #296]	; (8009758 <main+0x34c>)
 800962e:	681b      	ldr	r3, [r3, #0]
 8009630:	2b00      	cmp	r3, #0
 8009632:	f000 8294 	beq.w	8009b5e <main+0x752>
 8009636:	2300      	movs	r3, #0
 8009638:	4a4b      	ldr	r2, [pc, #300]	; (8009768 <main+0x35c>)
 800963a:	ac1a      	add	r4, sp, #104	; 0x68
 800963c:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
 8009640:	4620      	mov	r0, r4
 8009642:	ab0c      	add	r3, sp, #48	; 0x30
 8009644:	931c      	str	r3, [sp, #112]	; 0x70
 8009646:	f7ff fd8d 	bl	8009164 <LightSet64with4::Print()>
 800964a:	f8cd 44a8 	str.w	r4, [sp, #1192]	; 0x4a8
 800964e:	f50d 6091 	add.w	r0, sp, #1160	; 0x488
 8009652:	4c46      	ldr	r4, [pc, #280]	; (800976c <main+0x360>)
 8009654:	f002 fd58 	bl	800c108 <DdpDisplay::Print()>
 8009658:	4945      	ldr	r1, [pc, #276]	; (8009770 <main+0x364>)
 800965a:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 800965e:	2303      	movs	r3, #3
 8009660:	a88f      	add	r0, sp, #572	; 0x23c
 8009662:	f7ff fe71 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009666:	6823      	ldr	r3, [r4, #0]
 8009668:	6818      	ldr	r0, [r3, #0]
 800966a:	f005 fc51 	bl	800ef10 <PixelType::GetType(pixel::Type)>
 800966e:	6823      	ldr	r3, [r4, #0]
 8009670:	4a40      	ldr	r2, [pc, #256]	; (8009774 <main+0x368>)
 8009672:	685b      	ldr	r3, [r3, #4]
 8009674:	2120      	movs	r1, #32
 8009676:	e9cd 0300 	strd	r0, r3, [sp]
 800967a:	4633      	mov	r3, r6
 800967c:	a827      	add	r0, sp, #156	; 0x9c
 800967e:	f000 fe4b 	bl	800a318 <snprintf>
 8009682:	4a3d      	ldr	r2, [pc, #244]	; (8009778 <main+0x36c>)
 8009684:	2120      	movs	r1, #32
 8009686:	a830      	add	r0, sp, #192	; 0xc0
 8009688:	f000 fe46 	bl	800a318 <snprintf>
 800968c:	4604      	mov	r4, r0
 800968e:	202c      	movs	r0, #44	; 0x2c
 8009690:	f00a fdb6 	bl	8014200 <operator new(unsigned int)>
 8009694:	4603      	mov	r3, r0
 8009696:	2200      	movs	r2, #0
 8009698:	6042      	str	r2, [r0, #4]
 800969a:	6282      	str	r2, [r0, #40]	; 0x28
 800969c:	f100 0728 	add.w	r7, r0, #40	; 0x28
 80096a0:	f823 2b08 	strh.w	r2, [r3], #8
 80096a4:	aa27      	add	r2, sp, #156	; 0x9c
 80096a6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80096aa:	b111      	cbz	r1, 80096b2 <main+0x2a6>
 80096ac:	429f      	cmp	r7, r3
 80096ae:	f040 8258 	bne.w	8009b62 <main+0x756>
 80096b2:	2201      	movs	r2, #1
 80096b4:	a90d      	add	r1, sp, #52	; 0x34
 80096b6:	900d      	str	r0, [sp, #52]	; 0x34
 80096b8:	a8eb      	add	r0, sp, #940	; 0x3ac
 80096ba:	f002 ffdd 	bl	800c678 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 80096be:	f50d 608f 	add.w	r0, sp, #1144	; 0x478
 80096c2:	f002 fd55 	bl	800c170 <LLRPDevice::LLRPDevice()>
 80096c6:	4b2d      	ldr	r3, [pc, #180]	; (800977c <main+0x370>)
 80096c8:	93eb      	str	r3, [sp, #940]	; 0x3ac
 80096ca:	2100      	movs	r1, #0
 80096cc:	3324      	adds	r3, #36	; 0x24
 80096ce:	f20d 407c 	addw	r0, sp, #1148	; 0x47c
 80096d2:	f8cd 3478 	str.w	r3, [sp, #1144]	; 0x478
 80096d6:	f003 f9bb 	bl	800ca50 <RDMHandler::RDMHandler(bool)>
 80096da:	4b29      	ldr	r3, [pc, #164]	; (8009780 <main+0x374>)
 80096dc:	4929      	ldr	r1, [pc, #164]	; (8009784 <main+0x378>)
 80096de:	6818      	ldr	r0, [r3, #0]
 80096e0:	b2e4      	uxtb	r4, r4
 80096e2:	f00a fd2f 	bl	8014144 <Hardware::GetUuid(unsigned char*)>
 80096e6:	2c20      	cmp	r4, #32
 80096e8:	f89d 33b0 	ldrb.w	r3, [sp, #944]	; 0x3b0
 80096ec:	bf28      	it	cs
 80096ee:	2420      	movcs	r4, #32
 80096f0:	4622      	mov	r2, r4
 80096f2:	a930      	add	r1, sp, #192	; 0xc0
 80096f4:	2b00      	cmp	r3, #0
 80096f6:	f000 823a 	beq.w	8009b6e <main+0x762>
 80096fa:	f20d 30bb 	addw	r0, sp, #955	; 0x3bb
 80096fe:	f7ff fcb2 	bl	8009066 <memcpy>
 8009702:	f8dd 0428 	ldr.w	r0, [sp, #1064]	; 0x428
 8009706:	f88d 43db 	strb.w	r4, [sp, #987]	; 0x3db
 800970a:	2800      	cmp	r0, #0
 800970c:	d042      	beq.n	8009794 <main+0x388>
 800970e:	e03b      	b.n	8009788 <main+0x37c>
 8009710:	080168b0 	stmdaeq	r1, {r4, r5, r7, fp, sp, lr}
 8009714:	080168b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, sp, lr}
 8009718:	08016a89 	stmdaeq	r1, {r0, r3, r7, r9, fp, sp, lr}
 800971c:	080168c5 	stmdaeq	r1, {r0, r2, r6, r7, fp, sp, lr}
 8009720:	40020000 	andmi	r0, r2, r0
 8009724:	080169e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, sp, lr}
 8009728:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800972c:	08019141 	stmdaeq	r1, {r0, r6, r8, ip, pc}
 8009730:	08019130 	stmdaeq	r1, {r4, r5, r8, ip, pc}
 8009734:	080168ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, fp, sp, lr}
 8009738:	08016908 	stmdaeq	r1, {r3, r8, fp, sp, lr}
 800973c:	08016915 	stmdaeq	r1, {r0, r2, r4, r8, fp, sp, lr}
 8009740:	0801690f 	stmdaeq	r1, {r0, r1, r2, r3, r8, fp, sp, lr}
 8009744:	08016929 	stmdaeq	r1, {r0, r3, r5, r8, fp, sp, lr}
 8009748:	08016922 	stmdaeq	r1, {r1, r5, r8, fp, sp, lr}
 800974c:	08016a8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, fp, sp, lr}
 8009750:	080169fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 8009754:	40020400 	andmi	r0, r2, r0, lsl #8
 8009758:	200013a8 	andcs	r1, r0, r8, lsr #7
 800975c:	08018580 	stmdaeq	r1, {r7, r8, sl, pc}
 8009760:	2000fadc 	ldrdcs	pc, [r0], -ip
 8009764:	20000010 	andcs	r0, r0, r0, lsl r0
 8009768:	08016a14 	stmdaeq	r1, {r2, r4, r9, fp, sp, lr}
 800976c:	200013b0 			; <UNDEFINED> instruction: 0x200013b0
 8009770:	080180e8 	stmdaeq	r1, {r3, r5, r6, r7, pc}
 8009774:	0801693c 	stmdaeq	r1, {r2, r3, r4, r5, r8, fp, sp, lr}
 8009778:	08016958 	stmdaeq	r1, {r3, r4, r6, r8, fp, sp, lr}
 800977c:	08016a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, sp, lr}
 8009780:	2000fec4 	andcs	pc, r0, r4, asr #29
 8009784:	20000931 	andcs	r0, r0, r1, lsr r9
 8009788:	6803      	ldr	r3, [r0, #0]
 800978a:	4622      	mov	r2, r4
 800978c:	689b      	ldr	r3, [r3, #8]
 800978e:	f20d 31bb 	addw	r1, sp, #955	; 0x3bb
 8009792:	4798      	blx	r3
 8009794:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009798:	f8ad 33fe 	strh.w	r3, [sp, #1022]	; 0x3fe
 800979c:	a8eb      	add	r0, sp, #940	; 0x3ac
 800979e:	f240 6301 	movw	r3, #1537	; 0x601
 80097a2:	f8ad 3400 	strh.w	r3, [sp, #1024]	; 0x400
 80097a6:	f002 ffb5 	bl	800c714 <RDMDeviceResponder::Init()>
 80097aa:	a815      	add	r0, sp, #84	; 0x54
 80097ac:	f009 fdf8 	bl	80133a0 <StoreRDMDevice::StoreRDMDevice()>
 80097b0:	a915      	add	r1, sp, #84	; 0x54
 80097b2:	a874      	add	r0, sp, #464	; 0x1d0
 80097b4:	f002 feee 	bl	800c594 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 80097b8:	a874      	add	r0, sp, #464	; 0x1d0
 80097ba:	f002 fefd 	bl	800c5b8 <RDMDeviceParams::Load()>
 80097be:	b130      	cbz	r0, 80097ce <main+0x3c2>
 80097c0:	a874      	add	r0, sp, #464	; 0x1d0
 80097c2:	f002 ff3b 	bl	800c63c <RDMDeviceParams::Dump()>
 80097c6:	a9ec      	add	r1, sp, #944	; 0x3b0
 80097c8:	a874      	add	r0, sp, #464	; 0x1d0
 80097ca:	f002 ff00 	bl	800c5ce <RDMDeviceParams::Set(RDMDevice*)>
 80097ce:	ab16      	add	r3, sp, #88	; 0x58
 80097d0:	a8eb      	add	r0, sp, #940	; 0x3ac
 80097d2:	f8cd 3428 	str.w	r3, [sp, #1064]	; 0x428
 80097d6:	f002 fde3 	bl	800c3a0 <RDMNetDevice::Print()>
 80097da:	4baf      	ldr	r3, [pc, #700]	; (8009a98 <main+0x68c>)
 80097dc:	49af      	ldr	r1, [pc, #700]	; (8009a9c <main+0x690>)
 80097de:	681b      	ldr	r3, [r3, #0]
 80097e0:	4632      	mov	r2, r6
 80097e2:	685b      	ldr	r3, [r3, #4]
 80097e4:	a88f      	add	r0, sp, #572	; 0x23c
 80097e6:	f008 fdd5 	bl	8012394 <DisplayUdf::SetTitle(char const*, ...)>
 80097ea:	2203      	movs	r2, #3
 80097ec:	2102      	movs	r1, #2
 80097ee:	a88f      	add	r0, sp, #572	; 0x23c
 80097f0:	f008 fde3 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80097f4:	2207      	movs	r2, #7
 80097f6:	2103      	movs	r1, #3
 80097f8:	a88f      	add	r0, sp, #572	; 0x23c
 80097fa:	f008 fdde 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80097fe:	2202      	movs	r2, #2
 8009800:	2104      	movs	r1, #4
 8009802:	a88f      	add	r0, sp, #572	; 0x23c
 8009804:	f008 fdd9 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009808:	2212      	movs	r2, #18
 800980a:	2105      	movs	r1, #5
 800980c:	a88f      	add	r0, sp, #572	; 0x23c
 800980e:	f008 fdd4 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009812:	2213      	movs	r2, #19
 8009814:	2106      	movs	r1, #6
 8009816:	a88f      	add	r0, sp, #572	; 0x23c
 8009818:	f008 fdcf 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800981c:	9868      	ldr	r0, [sp, #416]	; 0x1a0
 800981e:	f005 fb77 	bl	800ef10 <PixelType::GetType(pixel::Type)>
 8009822:	9005      	str	r0, [sp, #20]
 8009824:	986a      	ldr	r0, [sp, #424]	; 0x1a8
 8009826:	9c69      	ldr	r4, [sp, #420]	; 0x1a4
 8009828:	9f70      	ldr	r7, [sp, #448]	; 0x1c0
 800982a:	f005 fbc9 	bl	800efc0 <PixelType::GetMap(pixel::Map)>
 800982e:	9b05      	ldr	r3, [sp, #20]
 8009830:	4a9b      	ldr	r2, [pc, #620]	; (8009aa0 <main+0x694>)
 8009832:	9400      	str	r4, [sp, #0]
 8009834:	2107      	movs	r1, #7
 8009836:	e9cd 7001 	strd	r7, r0, [sp, #4]
 800983a:	a88f      	add	r0, sp, #572	; 0x23c
 800983c:	f7ff fd32 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8009840:	a80e      	add	r0, sp, #56	; 0x38
 8009842:	f009 faad 	bl	8012da0 <StoreDisplayUdf::StoreDisplayUdf()>
 8009846:	a90e      	add	r1, sp, #56	; 0x38
 8009848:	a85e      	add	r0, sp, #376	; 0x178
 800984a:	f008 ff37 	bl	80126bc <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800984e:	a85e      	add	r0, sp, #376	; 0x178
 8009850:	f008 ff41 	bl	80126d6 <DisplayUdfParams::Load()>
 8009854:	b130      	cbz	r0, 8009864 <main+0x458>
 8009856:	a85e      	add	r0, sp, #376	; 0x178
 8009858:	a98f      	add	r1, sp, #572	; 0x23c
 800985a:	f009 f876 	bl	801294a <DisplayUdfParams::Set(DisplayUdf*)>
 800985e:	a85e      	add	r0, sp, #376	; 0x178
 8009860:	f009 f8a6 	bl	80129b0 <DisplayUdfParams::Dump()>
 8009864:	a88f      	add	r0, sp, #572	; 0x23c
 8009866:	f008 fe57 	bl	8012518 <DisplayUdf::Show()>
 800986a:	b17d      	cbz	r5, 800988c <main+0x480>
 800986c:	9895      	ldr	r0, [sp, #596]	; 0x254
 800986e:	b118      	cbz	r0, 8009878 <main+0x46c>
 8009870:	6803      	ldr	r3, [r0, #0]
 8009872:	2106      	movs	r1, #6
 8009874:	691b      	ldr	r3, [r3, #16]
 8009876:	4798      	blx	r3
 8009878:	4628      	mov	r0, r5
 800987a:	f005 fc9d 	bl	800f1b8 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 800987e:	4a89      	ldr	r2, [pc, #548]	; (8009aa4 <main+0x698>)
 8009880:	9500      	str	r5, [sp, #0]
 8009882:	4603      	mov	r3, r0
 8009884:	2106      	movs	r1, #6
 8009886:	a88f      	add	r0, sp, #572	; 0x23c
 8009888:	f7ff fd0c 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 800988c:	4633      	mov	r3, r6
 800988e:	2203      	movs	r2, #3
 8009890:	2108      	movs	r1, #8
 8009892:	a842      	add	r0, sp, #264	; 0x108
 8009894:	f001 f830 	bl	800a8f8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8009898:	a80f      	add	r0, sp, #60	; 0x3c
 800989a:	f009 fb87 	bl	8012fac <StoreRemoteConfig::StoreRemoteConfig()>
 800989e:	a90f      	add	r1, sp, #60	; 0x3c
 80098a0:	a84b      	add	r0, sp, #300	; 0x12c
 80098a2:	f001 fb01 	bl	800aea8 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80098a6:	a84b      	add	r0, sp, #300	; 0x12c
 80098a8:	f001 fb08 	bl	800aebc <RemoteConfigParams::Load()>
 80098ac:	b130      	cbz	r0, 80098bc <main+0x4b0>
 80098ae:	a84b      	add	r0, sp, #300	; 0x12c
 80098b0:	a942      	add	r1, sp, #264	; 0x108
 80098b2:	f001 fc2a 	bl	800b10a <RemoteConfigParams::Set(RemoteConfig*)>
 80098b6:	a84b      	add	r0, sp, #300	; 0x12c
 80098b8:	f001 fc47 	bl	800b14a <RemoteConfigParams::Dump()>
 80098bc:	a817      	add	r0, sp, #92	; 0x5c
 80098be:	f009 f9ed 	bl	8012c9c <ConfigStore::Flash()>
 80098c2:	2800      	cmp	r0, #0
 80098c4:	d1fa      	bne.n	80098bc <main+0x4b0>
 80098c6:	4c78      	ldr	r4, [pc, #480]	; (8009aa8 <main+0x69c>)
 80098c8:	4978      	ldr	r1, [pc, #480]	; (8009aac <main+0x6a0>)
 80098ca:	2303      	movs	r3, #3
 80098cc:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80098d0:	a88f      	add	r0, sp, #572	; 0x23c
 80098d2:	f7ff fd39 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80098d6:	f241 51c1 	movw	r1, #5569	; 0x15c1
 80098da:	6820      	ldr	r0, [r4, #0]
 80098dc:	f007 fc79 	bl	80111d2 <Network::Begin(unsigned short)>
 80098e0:	4b73      	ldr	r3, [pc, #460]	; (8009ab0 <main+0x6a4>)
 80098e2:	6018      	str	r0, [r3, #0]
 80098e4:	4b73      	ldr	r3, [pc, #460]	; (8009ab4 <main+0x6a8>)
 80098e6:	4601      	mov	r1, r0
 80098e8:	681a      	ldr	r2, [r3, #0]
 80098ea:	6820      	ldr	r0, [r4, #0]
 80098ec:	f007 fc82 	bl	80111f4 <Network::JoinGroup(int, unsigned int)>
 80098f0:	4971      	ldr	r1, [pc, #452]	; (8009ab8 <main+0x6ac>)
 80098f2:	2302      	movs	r3, #2
 80098f4:	f248 0280 	movw	r2, #32896	; 0x8080
 80098f8:	a88f      	add	r0, sp, #572	; 0x23c
 80098fa:	f7ff fd25 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80098fe:	496f      	ldr	r1, [pc, #444]	; (8009abc <main+0x6b0>)
 8009900:	2303      	movs	r3, #3
 8009902:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009906:	a88f      	add	r0, sp, #572	; 0x23c
 8009908:	f7ff fd1e 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800990c:	f50d 6091 	add.w	r0, sp, #1160	; 0x488
 8009910:	f002 f908 	bl	800bb24 <DdpDisplay::Start()>
 8009914:	2302      	movs	r3, #2
 8009916:	496a      	ldr	r1, [pc, #424]	; (8009ac0 <main+0x6b4>)
 8009918:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800991c:	a88f      	add	r0, sp, #572	; 0x23c
 800991e:	f7ff fd13 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009922:	2102      	movs	r1, #2
 8009924:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009928:	f00b fc10 	bl	801514c <fwdgt_config>
 800992c:	2801      	cmp	r0, #1
 800992e:	bf0c      	ite	eq
 8009930:	2301      	moveq	r3, #1
 8009932:	2300      	movne	r3, #0
 8009934:	f88d 301c 	strb.w	r3, [sp, #28]
 8009938:	d101      	bne.n	800993e <main+0x532>
 800993a:	f00b fbf7 	bl	801512c <fwdgt_enable>
 800993e:	4d61      	ldr	r5, [pc, #388]	; (8009ac4 <main+0x6b8>)
 8009940:	4e61      	ldr	r6, [pc, #388]	; (8009ac8 <main+0x6bc>)
 8009942:	4f62      	ldr	r7, [pc, #392]	; (8009acc <main+0x6c0>)
 8009944:	f00b fbfa 	bl	801513c <fwdgt_counter_reload>
 8009948:	f7fe fe0c 	bl	8008564 <net_handle>
 800994c:	f50d 6091 	add.w	r0, sp, #1160	; 0x488
 8009950:	f002 fbac 	bl	800c0ac <DdpDisplay::Run()>
 8009954:	a842      	add	r0, sp, #264	; 0x108
 8009956:	f001 f96b 	bl	800ac30 <RemoteConfig::Run()>
 800995a:	a817      	add	r0, sp, #92	; 0x5c
 800995c:	f009 f99e 	bl	8012c9c <ConfigStore::Flash()>
 8009960:	682b      	ldr	r3, [r5, #0]
 8009962:	b113      	cbz	r3, 800996a <main+0x55e>
 8009964:	a80a      	add	r0, sp, #40	; 0x28
 8009966:	f005 fe4b 	bl	800f600 <PixelPatterns::Run()>
 800996a:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 800996e:	4956      	ldr	r1, [pc, #344]	; (8009ac8 <main+0x6bc>)
 8009970:	7838      	ldrb	r0, [r7, #0]
 8009972:	aa10      	add	r2, sp, #64	; 0x40
 8009974:	f006 ff3a 	bl	80107ec <udp_recv2>
 8009978:	f1a0 030b 	sub.w	r3, r0, #11
 800997c:	b29b      	uxth	r3, r3
 800997e:	2b05      	cmp	r3, #5
 8009980:	4604      	mov	r4, r0
 8009982:	d82d      	bhi.n	80099e0 <main+0x5d4>
 8009984:	f8d6 8000 	ldr.w	r8, [r6]
 8009988:	4851      	ldr	r0, [pc, #324]	; (8009ad0 <main+0x6c4>)
 800998a:	2204      	movs	r2, #4
 800998c:	4641      	mov	r1, r8
 800998e:	f7ff fb5a 	bl	8009046 <memcmp>
 8009992:	bb28      	cbnz	r0, 80099e0 <main+0x5d4>
 8009994:	eb08 0304 	add.w	r3, r8, r4
 8009998:	f108 0104 	add.w	r1, r8, #4
 800999c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80099a0:	2b0a      	cmp	r3, #10
 80099a2:	bf04      	itt	eq
 80099a4:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 80099a8:	b2a4      	uxtheq	r4, r4
 80099aa:	2c0a      	cmp	r4, #10
 80099ac:	f000 80e6 	beq.w	8009b7c <main+0x770>
 80099b0:	2c0e      	cmp	r4, #14
 80099b2:	f200 80e3 	bhi.w	8009b7c <main+0x770>
 80099b6:	4847      	ldr	r0, [pc, #284]	; (8009ad4 <main+0x6c8>)
 80099b8:	9105      	str	r1, [sp, #20]
 80099ba:	2206      	movs	r2, #6
 80099bc:	f7ff fb43 	bl	8009046 <memcmp>
 80099c0:	9905      	ldr	r1, [sp, #20]
 80099c2:	2800      	cmp	r0, #0
 80099c4:	f040 80da 	bne.w	8009b7c <main+0x770>
 80099c8:	2104      	movs	r1, #4
 80099ca:	f108 000a 	add.w	r0, r8, #10
 80099ce:	f7ff fb69 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 80099d2:	285b      	cmp	r0, #91	; 0x5b
 80099d4:	4601      	mov	r1, r0
 80099d6:	d903      	bls.n	80099e0 <main+0x5d4>
 80099d8:	4b3f      	ldr	r3, [pc, #252]	; (8009ad8 <main+0x6cc>)
 80099da:	6818      	ldr	r0, [r3, #0]
 80099dc:	f004 fb0a 	bl	800dff4 <Dmx::SetDmxBreakTime(unsigned int)>
 80099e0:	a809      	add	r0, sp, #36	; 0x24
 80099e2:	f007 fb55 	bl	8011090 <MDNS::Run()>
 80099e6:	f50d 608f 	add.w	r0, sp, #1144	; 0x478
 80099ea:	f002 fc83 	bl	800c2f4 <LLRPDevice::Run()>
 80099ee:	a854      	add	r0, sp, #336	; 0x150
 80099f0:	f001 fef2 	bl	800b7d8 <HttpDaemon::Run()>
 80099f4:	9a94      	ldr	r2, [sp, #592]	; 0x250
 80099f6:	2a00      	cmp	r2, #0
 80099f8:	f040 810f 	bne.w	8009c1a <main+0x80e>
 80099fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80099fe:	2900      	cmp	r1, #0
 8009a00:	d0a0      	beq.n	8009944 <main+0x538>
 8009a02:	4a36      	ldr	r2, [pc, #216]	; (8009adc <main+0x6d0>)
 8009a04:	9826      	ldr	r0, [sp, #152]	; 0x98
 8009a06:	6813      	ldr	r3, [r2, #0]
 8009a08:	1a1b      	subs	r3, r3, r0
 8009a0a:	4299      	cmp	r1, r3
 8009a0c:	d89a      	bhi.n	8009944 <main+0x538>
 8009a0e:	6813      	ldr	r3, [r2, #0]
 8009a10:	9326      	str	r3, [sp, #152]	; 0x98
 8009a12:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8009a14:	f083 0201 	eor.w	r2, r3, #1
 8009a18:	9225      	str	r2, [sp, #148]	; 0x94
 8009a1a:	2b01      	cmp	r3, #1
 8009a1c:	4a30      	ldr	r2, [pc, #192]	; (8009ae0 <main+0x6d4>)
 8009a1e:	bf1a      	itte	ne
 8009a20:	2301      	movne	r3, #1
 8009a22:	f8c2 3818 	strne.w	r3, [r2, #2072]	; 0x818
 8009a26:	f8c2 3828 	streq.w	r3, [r2, #2088]	; 0x828
 8009a2a:	e78b      	b.n	8009944 <main+0x538>
 8009a2c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8009ae8 <main+0x6dc>
 8009a30:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 8009aec <main+0x6e0>
 8009a34:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 8009af0 <main+0x6e4>
 8009a38:	2400      	movs	r4, #0
 8009a3a:	2d05      	cmp	r5, #5
 8009a3c:	d80a      	bhi.n	8009a54 <main+0x648>
 8009a3e:	e8df f005 	tbb	[pc, r5]
 8009a42:	190f0365 	stmdbne	pc, {r0, r2, r5, r6, r8, r9}	; <UNPREDICTABLE>
 8009a46:	23005922 	movwcs	r5, #2338	; 0x922
 8009a4a:	2264      	movs	r2, #100	; 0x64
 8009a4c:	4621      	mov	r1, r4
 8009a4e:	a80a      	add	r0, sp, #40	; 0x28
 8009a50:	f005 fbbe 	bl	800f1d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8009a54:	3401      	adds	r4, #1
 8009a56:	2c10      	cmp	r4, #16
 8009a58:	f108 0820 	add.w	r8, r8, #32
 8009a5c:	d1ed      	bne.n	8009a3a <main+0x62e>
 8009a5e:	e5c3      	b.n	80095e8 <main+0x1dc>
 8009a60:	2364      	movs	r3, #100	; 0x64
 8009a62:	2200      	movs	r2, #0
 8009a64:	e9cd 3200 	strd	r3, r2, [sp]
 8009a68:	4621      	mov	r1, r4
 8009a6a:	4b1e      	ldr	r3, [pc, #120]	; (8009ae4 <main+0x6d8>)
 8009a6c:	a80a      	add	r0, sp, #40	; 0x28
 8009a6e:	f005 fbc5 	bl	800f1fc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009a72:	e7ef      	b.n	8009a54 <main+0x648>
 8009a74:	2300      	movs	r3, #0
 8009a76:	9300      	str	r3, [sp, #0]
 8009a78:	4a1a      	ldr	r2, [pc, #104]	; (8009ae4 <main+0x6d8>)
 8009a7a:	2364      	movs	r3, #100	; 0x64
 8009a7c:	4621      	mov	r1, r4
 8009a7e:	a80a      	add	r0, sp, #40	; 0x28
 8009a80:	f005 fbd8 	bl	800f234 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009a84:	e7e6      	b.n	8009a54 <main+0x648>
 8009a86:	2364      	movs	r3, #100	; 0x64
 8009a88:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8009a8c:	4621      	mov	r1, r4
 8009a8e:	a80a      	add	r0, sp, #40	; 0x28
 8009a90:	f005 fbea 	bl	800f268 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8009a94:	e7de      	b.n	8009a54 <main+0x648>
 8009a96:	bf00      	nop
 8009a98:	200013b0 			; <UNDEFINED> instruction: 0x200013b0
 8009a9c:	08016971 	stmdaeq	r1, {r0, r4, r5, r6, r8, fp, sp, lr}
 8009aa0:	08016981 	stmdaeq	r1, {r0, r7, r8, fp, sp, lr}
 8009aa4:	0801698e 	stmdaeq	r1, {r1, r2, r3, r7, r8, fp, sp, lr}
 8009aa8:	2000fadc 	ldrdcs	pc, [r0], -ip
 8009aac:	0801810a 	stmdaeq	r1, {r1, r3, r8, pc}
 8009ab0:	20000000 	andcs	r0, r0, r0
 8009ab4:	20000824 	andcs	r0, r0, r4, lsr #16
 8009ab8:	080180fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, pc}
 8009abc:	08016994 	stmdaeq	r1, {r2, r4, r7, r8, fp, sp, lr}
 8009ac0:	080169a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, sp, lr}
 8009ac4:	200013a8 	andcs	r1, r0, r8, lsr #7
 8009ac8:	20001194 	mulcs	r0, r4, r1
 8009acc:	20000010 	andcs	r0, r0, r0, lsl r0
 8009ad0:	080169bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, fp, sp, lr}
 8009ad4:	080169c2 	stmdaeq	r1, {r1, r6, r7, r8, fp, sp, lr}
 8009ad8:	20001190 	mulcs	r0, r0, r1
 8009adc:	2000fedc 	ldrdcs	pc, [r0], -ip
 8009ae0:	40020000 	andmi	r0, r2, r0
 8009ae4:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009ae8:	20001198 	mulcs	r0, r8, r1
 8009aec:	200013a4 	andcs	r1, r0, r4, lsr #7
 8009af0:	200013a0 	andcs	r1, r0, r0, lsr #7
 8009af4:	2364      	movs	r3, #100	; 0x64
 8009af6:	2200      	movs	r2, #0
 8009af8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009afc:	230a      	movs	r3, #10
 8009afe:	9300      	str	r3, [sp, #0]
 8009b00:	4621      	mov	r1, r4
 8009b02:	4b51      	ldr	r3, [pc, #324]	; (8009c48 <main+0x83c>)
 8009b04:	a80a      	add	r0, sp, #40	; 0x28
 8009b06:	f005 fbe3 	bl	800f2d0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b0a:	e7a3      	b.n	8009a54 <main+0x648>
 8009b0c:	2700      	movs	r7, #0
 8009b0e:	f8c8 701c 	str.w	r7, [r8, #28]
 8009b12:	f8da 3000 	ldr.w	r3, [sl]
 8009b16:	f8d9 0000 	ldr.w	r0, [r9]
 8009b1a:	429f      	cmp	r7, r3
 8009b1c:	d30a      	bcc.n	8009b34 <main+0x728>
 8009b1e:	f8d9 0000 	ldr.w	r0, [r9]
 8009b22:	f006 f9f9 	bl	800ff18 <WS28xxMulti::IsUpdating()>
 8009b26:	2800      	cmp	r0, #0
 8009b28:	d1f9      	bne.n	8009b1e <main+0x712>
 8009b2a:	f8d9 0000 	ldr.w	r0, [r9]
 8009b2e:	f006 f88d 	bl	800fc4c <WS28xxMulti::Update()>
 8009b32:	e78f      	b.n	8009a54 <main+0x648>
 8009b34:	6803      	ldr	r3, [r0, #0]
 8009b36:	2b07      	cmp	r3, #7
 8009b38:	f04f 0300 	mov.w	r3, #0
 8009b3c:	d007      	beq.n	8009b4e <main+0x742>
 8009b3e:	e9cd 3300 	strd	r3, r3, [sp]
 8009b42:	463a      	mov	r2, r7
 8009b44:	4621      	mov	r1, r4
 8009b46:	f006 fa67 	bl	8010018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8009b4a:	3701      	adds	r7, #1
 8009b4c:	e7e1      	b.n	8009b12 <main+0x706>
 8009b4e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009b52:	9300      	str	r3, [sp, #0]
 8009b54:	463a      	mov	r2, r7
 8009b56:	4621      	mov	r1, r4
 8009b58:	f006 fae0 	bl	801011c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009b5c:	e7f5      	b.n	8009b4a <main+0x73e>
 8009b5e:	aba3      	add	r3, sp, #652	; 0x28c
 8009b60:	e56a      	b.n	8009638 <main+0x22c>
 8009b62:	f803 1b01 	strb.w	r1, [r3], #1
 8009b66:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009b68:	3101      	adds	r1, #1
 8009b6a:	6281      	str	r1, [r0, #40]	; 0x28
 8009b6c:	e59b      	b.n	80096a6 <main+0x29a>
 8009b6e:	f20d 4002 	addw	r0, sp, #1026	; 0x402
 8009b72:	f7ff fa78 	bl	8009066 <memcpy>
 8009b76:	f88d 4422 	strb.w	r4, [sp, #1058]	; 0x422
 8009b7a:	e60b      	b.n	8009794 <main+0x388>
 8009b7c:	4833      	ldr	r0, [pc, #204]	; (8009c4c <main+0x840>)
 8009b7e:	9105      	str	r1, [sp, #20]
 8009b80:	2204      	movs	r2, #4
 8009b82:	f7ff fa60 	bl	8009046 <memcmp>
 8009b86:	9905      	ldr	r1, [sp, #20]
 8009b88:	b980      	cbnz	r0, 8009bac <main+0x7a0>
 8009b8a:	2107      	movs	r1, #7
 8009b8c:	f108 0008 	add.w	r0, r8, #8
 8009b90:	f7ff fa88 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009b94:	4b2e      	ldr	r3, [pc, #184]	; (8009c50 <main+0x844>)
 8009b96:	f1a0 020c 	sub.w	r2, r0, #12
 8009b9a:	429a      	cmp	r2, r3
 8009b9c:	4601      	mov	r1, r0
 8009b9e:	f63f af1f 	bhi.w	80099e0 <main+0x5d4>
 8009ba2:	4b2c      	ldr	r3, [pc, #176]	; (8009c54 <main+0x848>)
 8009ba4:	6818      	ldr	r0, [r3, #0]
 8009ba6:	f004 fa2f 	bl	800e008 <Dmx::SetDmxMabTime(unsigned int)>
 8009baa:	e719      	b.n	80099e0 <main+0x5d4>
 8009bac:	2c0c      	cmp	r4, #12
 8009bae:	d917      	bls.n	8009be0 <main+0x7d4>
 8009bb0:	2c0e      	cmp	r4, #14
 8009bb2:	d82f      	bhi.n	8009c14 <main+0x808>
 8009bb4:	4828      	ldr	r0, [pc, #160]	; (8009c58 <main+0x84c>)
 8009bb6:	9105      	str	r1, [sp, #20]
 8009bb8:	2208      	movs	r2, #8
 8009bba:	f7ff fa44 	bl	8009046 <memcmp>
 8009bbe:	9905      	ldr	r1, [sp, #20]
 8009bc0:	bb40      	cbnz	r0, 8009c14 <main+0x808>
 8009bc2:	2102      	movs	r1, #2
 8009bc4:	f108 000c 	add.w	r0, r8, #12
 8009bc8:	f7ff fa6c 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009bcc:	4601      	mov	r1, r0
 8009bce:	b110      	cbz	r0, 8009bd6 <main+0x7ca>
 8009bd0:	4b22      	ldr	r3, [pc, #136]	; (8009c5c <main+0x850>)
 8009bd2:	fbb3 f1f0 	udiv	r1, r3, r0
 8009bd6:	4b1f      	ldr	r3, [pc, #124]	; (8009c54 <main+0x848>)
 8009bd8:	6818      	ldr	r0, [r3, #0]
 8009bda:	f004 f9e3 	bl	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009bde:	e6ff      	b.n	80099e0 <main+0x5d4>
 8009be0:	2c0a      	cmp	r4, #10
 8009be2:	f43f aefd 	beq.w	80099e0 <main+0x5d4>
 8009be6:	481e      	ldr	r0, [pc, #120]	; (8009c60 <main+0x854>)
 8009be8:	2206      	movs	r2, #6
 8009bea:	f7ff fa2c 	bl	8009046 <memcmp>
 8009bee:	2800      	cmp	r0, #0
 8009bf0:	f47f aef6 	bne.w	80099e0 <main+0x5d4>
 8009bf4:	2103      	movs	r1, #3
 8009bf6:	f108 000a 	add.w	r0, r8, #10
 8009bfa:	f7ff fa53 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009bfe:	1e83      	subs	r3, r0, #2
 8009c00:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009c04:	f63f aeec 	bhi.w	80099e0 <main+0x5d4>
 8009c08:	4b12      	ldr	r3, [pc, #72]	; (8009c54 <main+0x848>)
 8009c0a:	b281      	uxth	r1, r0
 8009c0c:	6818      	ldr	r0, [r3, #0]
 8009c0e:	f004 fa05 	bl	800e01c <Dmx::SetDmxSlots(unsigned short)>
 8009c12:	e6e5      	b.n	80099e0 <main+0x5d4>
 8009c14:	2c0d      	cmp	r4, #13
 8009c16:	d0e6      	beq.n	8009be6 <main+0x7da>
 8009c18:	e6e2      	b.n	80099e0 <main+0x5d4>
 8009c1a:	f89d 324c 	ldrb.w	r3, [sp, #588]	; 0x24c
 8009c1e:	b95b      	cbnz	r3, 8009c38 <main+0x82c>
 8009c20:	4b10      	ldr	r3, [pc, #64]	; (8009c64 <main+0x858>)
 8009c22:	9990      	ldr	r1, [sp, #576]	; 0x240
 8009c24:	681b      	ldr	r3, [r3, #0]
 8009c26:	1a5b      	subs	r3, r3, r1
 8009c28:	429a      	cmp	r2, r3
 8009c2a:	f4bf aee7 	bcs.w	80099fc <main+0x5f0>
 8009c2e:	2101      	movs	r1, #1
 8009c30:	a88f      	add	r0, sp, #572	; 0x23c
 8009c32:	f7ff fbb1 	bl	8009398 <Display::SetSleep(bool)>
 8009c36:	e6e1      	b.n	80099fc <main+0x5f0>
 8009c38:	f7ff fbce 	bl	80093d8 <display::timeout::gpio_renew()>
 8009c3c:	2800      	cmp	r0, #0
 8009c3e:	f43f aedd 	beq.w	80099fc <main+0x5f0>
 8009c42:	2100      	movs	r1, #0
 8009c44:	e7f4      	b.n	8009c30 <main+0x824>
 8009c46:	bf00      	nop
 8009c48:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009c4c:	080169c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, sp, lr}
 8009c50:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8009c54:	20001190 	mulcs	r0, r0, r1
 8009c58:	080169ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, fp, sp, lr}
 8009c5c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009c60:	080169d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, fp, sp, lr}
 8009c64:	2000fedc 	ldrdcs	pc, [r0], -ip

08009c68 <StoreNetwork::SaveDhcp(bool)>:
 8009c68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009c6a:	2301      	movs	r3, #1
 8009c6c:	f88d 1017 	strb.w	r1, [sp, #23]
 8009c70:	2100      	movs	r1, #0
 8009c72:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009c76:	4805      	ldr	r0, [pc, #20]	; (8009c8c <StoreNetwork::SaveDhcp(bool)+0x24>)
 8009c78:	9300      	str	r3, [sp, #0]
 8009c7a:	6800      	ldr	r0, [r0, #0]
 8009c7c:	f10d 0317 	add.w	r3, sp, #23
 8009c80:	2214      	movs	r2, #20
 8009c82:	f008 ff99 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8009c86:	b007      	add	sp, #28
 8009c88:	f85d fb04 	ldr.w	pc, [sp], #4
 8009c8c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08009c90 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8009c90:	f1a0 0004 	sub.w	r0, r0, #4
 8009c94:	e7e8      	b.n	8009c68 <StoreNetwork::SaveDhcp(bool)>
 8009c96:	bf00      	nop

08009c98 <rdm::device::responder::factorydefaults()>:
 8009c98:	b508      	push	{r3, lr}
 8009c9a:	4b08      	ldr	r3, [pc, #32]	; (8009cbc <rdm::device::responder::factorydefaults()+0x24>)
 8009c9c:	2100      	movs	r1, #0
 8009c9e:	6818      	ldr	r0, [r3, #0]
 8009ca0:	f000 fe76 	bl	800a990 <RemoteConfig::SetDisable(bool)>
 8009ca4:	4b06      	ldr	r3, [pc, #24]	; (8009cc0 <rdm::device::responder::factorydefaults()+0x28>)
 8009ca6:	210b      	movs	r1, #11
 8009ca8:	6818      	ldr	r0, [r3, #0]
 8009caa:	f008 ff73 	bl	8012b94 <ConfigStore::ResetSetList(configstore::Store)>
 8009cae:	4b05      	ldr	r3, [pc, #20]	; (8009cc4 <rdm::device::responder::factorydefaults()+0x2c>)
 8009cb0:	2101      	movs	r1, #1
 8009cb2:	6818      	ldr	r0, [r3, #0]
 8009cb4:	f7ff ffd8 	bl	8009c68 <StoreNetwork::SaveDhcp(bool)>
 8009cb8:	bd08      	pop	{r3, pc}
 8009cba:	bf00      	nop
 8009cbc:	20000124 	andcs	r0, r0, r4, lsr #2
 8009cc0:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0
 8009cc4:	2000fdc0 	andcs	pc, r0, r0, asr #27

08009cc8 <RDMSoftwareVersion::GetVersion()>:
 8009cc8:	4800      	ldr	r0, [pc, #0]	; (8009ccc <RDMSoftwareVersion::GetVersion()+0x4>)
 8009cca:	4770      	bx	lr
 8009ccc:	08016b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, sp, lr}

08009cd0 <RDMSoftwareVersion::GetVersionLength()>:
 8009cd0:	2003      	movs	r0, #3
 8009cd2:	4770      	bx	lr

08009cd4 <RDMSoftwareVersion::GetVersionId()>:
 8009cd4:	4800      	ldr	r0, [pc, #0]	; (8009cd8 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009cd6:	4770      	bx	lr
 8009cd8:	63a848a1 			; <UNDEFINED> instruction: 0x63a848a1

08009cdc <_itostr>:
 8009cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009cde:	0fc7      	lsrs	r7, r0, #31
 8009ce0:	b091      	sub	sp, #68	; 0x44
 8009ce2:	bf18      	it	ne
 8009ce4:	4240      	negne	r0, r0
 8009ce6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009cea:	b9c8      	cbnz	r0, 8009d20 <_itostr+0x44>
 8009cec:	2330      	movs	r3, #48	; 0x30
 8009cee:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009cf2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009cf6:	b132      	cbz	r2, 8009d06 <_itostr+0x2a>
 8009cf8:	4668      	mov	r0, sp
 8009cfa:	2530      	movs	r5, #48	; 0x30
 8009cfc:	1ae6      	subs	r6, r4, r3
 8009cfe:	4296      	cmp	r6, r2
 8009d00:	da01      	bge.n	8009d06 <_itostr+0x2a>
 8009d02:	4283      	cmp	r3, r0
 8009d04:	d81c      	bhi.n	8009d40 <_itostr+0x64>
 8009d06:	b117      	cbz	r7, 8009d0e <_itostr+0x32>
 8009d08:	222d      	movs	r2, #45	; 0x2d
 8009d0a:	f803 2901 	strb.w	r2, [r3], #-1
 8009d0e:	3301      	adds	r3, #1
 8009d10:	1ae0      	subs	r0, r4, r3
 8009d12:	3901      	subs	r1, #1
 8009d14:	aa10      	add	r2, sp, #64	; 0x40
 8009d16:	4293      	cmp	r3, r2
 8009d18:	d315      	bcc.n	8009d46 <_itostr+0x6a>
 8009d1a:	3001      	adds	r0, #1
 8009d1c:	b011      	add	sp, #68	; 0x44
 8009d1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d20:	4623      	mov	r3, r4
 8009d22:	250a      	movs	r5, #10
 8009d24:	46ec      	mov	ip, sp
 8009d26:	fb90 f6f5 	sdiv	r6, r0, r5
 8009d2a:	fb05 0016 	mls	r0, r5, r6, r0
 8009d2e:	3030      	adds	r0, #48	; 0x30
 8009d30:	f803 0901 	strb.w	r0, [r3], #-1
 8009d34:	4630      	mov	r0, r6
 8009d36:	2e00      	cmp	r6, #0
 8009d38:	d0dd      	beq.n	8009cf6 <_itostr+0x1a>
 8009d3a:	4563      	cmp	r3, ip
 8009d3c:	d1f3      	bne.n	8009d26 <_itostr+0x4a>
 8009d3e:	e7da      	b.n	8009cf6 <_itostr+0x1a>
 8009d40:	f803 5901 	strb.w	r5, [r3], #-1
 8009d44:	e7da      	b.n	8009cfc <_itostr+0x20>
 8009d46:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009d4a:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009d4e:	e7e1      	b.n	8009d14 <_itostr+0x38>

08009d50 <_xputch>:
 8009d50:	4603      	mov	r3, r0
 8009d52:	b410      	push	{r4}
 8009d54:	4c09      	ldr	r4, [pc, #36]	; (8009d7c <_xputch+0x2c>)
 8009d56:	68da      	ldr	r2, [r3, #12]
 8009d58:	4608      	mov	r0, r1
 8009d5a:	6821      	ldr	r1, [r4, #0]
 8009d5c:	3201      	adds	r2, #1
 8009d5e:	60da      	str	r2, [r3, #12]
 8009d60:	b141      	cbz	r1, 8009d74 <_xputch+0x24>
 8009d62:	691b      	ldr	r3, [r3, #16]
 8009d64:	429a      	cmp	r2, r3
 8009d66:	da02      	bge.n	8009d6e <_xputch+0x1e>
 8009d68:	1c4b      	adds	r3, r1, #1
 8009d6a:	6023      	str	r3, [r4, #0]
 8009d6c:	7008      	strb	r0, [r1, #0]
 8009d6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d72:	4770      	bx	lr
 8009d74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d78:	f00a b882 	b.w	8013e80 <console_putc>
 8009d7c:	200000f8 	strdcs	r0, [r0], -r8

08009d80 <_format_int>:
 8009d80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d84:	4698      	mov	r8, r3
 8009d86:	b091      	sub	sp, #68	; 0x44
 8009d88:	ea52 0308 	orrs.w	r3, r2, r8
 8009d8c:	4606      	mov	r6, r0
 8009d8e:	4617      	mov	r7, r2
 8009d90:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009d94:	d133      	bne.n	8009dfe <_format_int+0x7e>
 8009d96:	2330      	movs	r3, #48	; 0x30
 8009d98:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009d9c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009da0:	6833      	ldr	r3, [r6, #0]
 8009da2:	07d8      	lsls	r0, r3, #31
 8009da4:	d507      	bpl.n	8009db6 <_format_int+0x36>
 8009da6:	6871      	ldr	r1, [r6, #4]
 8009da8:	466a      	mov	r2, sp
 8009daa:	2030      	movs	r0, #48	; 0x30
 8009dac:	1b2f      	subs	r7, r5, r4
 8009dae:	428f      	cmp	r7, r1
 8009db0:	da01      	bge.n	8009db6 <_format_int+0x36>
 8009db2:	4294      	cmp	r4, r2
 8009db4:	d839      	bhi.n	8009e2a <_format_int+0xaa>
 8009db6:	0699      	lsls	r1, r3, #26
 8009db8:	d507      	bpl.n	8009dca <_format_int+0x4a>
 8009dba:	68b1      	ldr	r1, [r6, #8]
 8009dbc:	466a      	mov	r2, sp
 8009dbe:	2030      	movs	r0, #48	; 0x30
 8009dc0:	1b2f      	subs	r7, r5, r4
 8009dc2:	428f      	cmp	r7, r1
 8009dc4:	da01      	bge.n	8009dca <_format_int+0x4a>
 8009dc6:	4294      	cmp	r4, r2
 8009dc8:	d832      	bhi.n	8009e30 <_format_int+0xb0>
 8009dca:	071a      	lsls	r2, r3, #28
 8009dcc:	bf44      	itt	mi
 8009dce:	222d      	movmi	r2, #45	; 0x2d
 8009dd0:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009dd4:	065b      	lsls	r3, r3, #25
 8009dd6:	d407      	bmi.n	8009de8 <_format_int+0x68>
 8009dd8:	68b2      	ldr	r2, [r6, #8]
 8009dda:	466b      	mov	r3, sp
 8009ddc:	2120      	movs	r1, #32
 8009dde:	1b28      	subs	r0, r5, r4
 8009de0:	4290      	cmp	r0, r2
 8009de2:	da01      	bge.n	8009de8 <_format_int+0x68>
 8009de4:	429c      	cmp	r4, r3
 8009de6:	d826      	bhi.n	8009e36 <_format_int+0xb6>
 8009de8:	1b2d      	subs	r5, r5, r4
 8009dea:	3401      	adds	r4, #1
 8009dec:	ab10      	add	r3, sp, #64	; 0x40
 8009dee:	429c      	cmp	r4, r3
 8009df0:	d324      	bcc.n	8009e3c <_format_int+0xbc>
 8009df2:	68b3      	ldr	r3, [r6, #8]
 8009df4:	42ab      	cmp	r3, r5
 8009df6:	dc27      	bgt.n	8009e48 <_format_int+0xc8>
 8009df8:	b011      	add	sp, #68	; 0x44
 8009dfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009dfe:	462c      	mov	r4, r5
 8009e00:	46e9      	mov	r9, sp
 8009e02:	4638      	mov	r0, r7
 8009e04:	4641      	mov	r1, r8
 8009e06:	220a      	movs	r2, #10
 8009e08:	2300      	movs	r3, #0
 8009e0a:	f7fe ff45 	bl	8008c98 <__aeabi_uldivmod>
 8009e0e:	3230      	adds	r2, #48	; 0x30
 8009e10:	f804 2901 	strb.w	r2, [r4], #-1
 8009e14:	463a      	mov	r2, r7
 8009e16:	4643      	mov	r3, r8
 8009e18:	2a0a      	cmp	r2, #10
 8009e1a:	f173 0300 	sbcs.w	r3, r3, #0
 8009e1e:	4607      	mov	r7, r0
 8009e20:	4688      	mov	r8, r1
 8009e22:	d3bd      	bcc.n	8009da0 <_format_int+0x20>
 8009e24:	454c      	cmp	r4, r9
 8009e26:	d1ec      	bne.n	8009e02 <_format_int+0x82>
 8009e28:	e7ba      	b.n	8009da0 <_format_int+0x20>
 8009e2a:	f804 0901 	strb.w	r0, [r4], #-1
 8009e2e:	e7bd      	b.n	8009dac <_format_int+0x2c>
 8009e30:	f804 0901 	strb.w	r0, [r4], #-1
 8009e34:	e7c4      	b.n	8009dc0 <_format_int+0x40>
 8009e36:	f804 1901 	strb.w	r1, [r4], #-1
 8009e3a:	e7d0      	b.n	8009dde <_format_int+0x5e>
 8009e3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009e40:	4630      	mov	r0, r6
 8009e42:	f7ff ff85 	bl	8009d50 <_xputch>
 8009e46:	e7d1      	b.n	8009dec <_format_int+0x6c>
 8009e48:	2120      	movs	r1, #32
 8009e4a:	4630      	mov	r0, r6
 8009e4c:	f7ff ff80 	bl	8009d50 <_xputch>
 8009e50:	3501      	adds	r5, #1
 8009e52:	e7ce      	b.n	8009df2 <_format_int+0x72>

08009e54 <_format_hex>:
 8009e54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e56:	b091      	sub	sp, #68	; 0x44
 8009e58:	6804      	ldr	r4, [r0, #0]
 8009e5a:	4606      	mov	r6, r0
 8009e5c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009e60:	bb61      	cbnz	r1, 8009ebc <_format_hex+0x68>
 8009e62:	2330      	movs	r3, #48	; 0x30
 8009e64:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009e68:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009e6c:	07e5      	lsls	r5, r4, #31
 8009e6e:	d507      	bpl.n	8009e80 <_format_hex+0x2c>
 8009e70:	6870      	ldr	r0, [r6, #4]
 8009e72:	4669      	mov	r1, sp
 8009e74:	2530      	movs	r5, #48	; 0x30
 8009e76:	1ad7      	subs	r7, r2, r3
 8009e78:	4287      	cmp	r7, r0
 8009e7a:	da01      	bge.n	8009e80 <_format_hex+0x2c>
 8009e7c:	428b      	cmp	r3, r1
 8009e7e:	d831      	bhi.n	8009ee4 <_format_hex+0x90>
 8009e80:	06a0      	lsls	r0, r4, #26
 8009e82:	d507      	bpl.n	8009e94 <_format_hex+0x40>
 8009e84:	68b0      	ldr	r0, [r6, #8]
 8009e86:	4669      	mov	r1, sp
 8009e88:	2530      	movs	r5, #48	; 0x30
 8009e8a:	1ad7      	subs	r7, r2, r3
 8009e8c:	4287      	cmp	r7, r0
 8009e8e:	da01      	bge.n	8009e94 <_format_hex+0x40>
 8009e90:	428b      	cmp	r3, r1
 8009e92:	d82a      	bhi.n	8009eea <_format_hex+0x96>
 8009e94:	0661      	lsls	r1, r4, #25
 8009e96:	d407      	bmi.n	8009ea8 <_format_hex+0x54>
 8009e98:	68b0      	ldr	r0, [r6, #8]
 8009e9a:	4669      	mov	r1, sp
 8009e9c:	2420      	movs	r4, #32
 8009e9e:	1ad5      	subs	r5, r2, r3
 8009ea0:	4285      	cmp	r5, r0
 8009ea2:	da01      	bge.n	8009ea8 <_format_hex+0x54>
 8009ea4:	428b      	cmp	r3, r1
 8009ea6:	d823      	bhi.n	8009ef0 <_format_hex+0x9c>
 8009ea8:	1ad5      	subs	r5, r2, r3
 8009eaa:	1c5c      	adds	r4, r3, #1
 8009eac:	ab10      	add	r3, sp, #64	; 0x40
 8009eae:	429c      	cmp	r4, r3
 8009eb0:	d321      	bcc.n	8009ef6 <_format_hex+0xa2>
 8009eb2:	68b3      	ldr	r3, [r6, #8]
 8009eb4:	429d      	cmp	r5, r3
 8009eb6:	db24      	blt.n	8009f02 <_format_hex+0xae>
 8009eb8:	b011      	add	sp, #68	; 0x44
 8009eba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ebc:	f014 0f02 	tst.w	r4, #2
 8009ec0:	bf0c      	ite	eq
 8009ec2:	2757      	moveq	r7, #87	; 0x57
 8009ec4:	2737      	movne	r7, #55	; 0x37
 8009ec6:	4613      	mov	r3, r2
 8009ec8:	466d      	mov	r5, sp
 8009eca:	f001 000f 	and.w	r0, r1, #15
 8009ece:	2809      	cmp	r0, #9
 8009ed0:	bf94      	ite	ls
 8009ed2:	3030      	addls	r0, #48	; 0x30
 8009ed4:	19c0      	addhi	r0, r0, r7
 8009ed6:	0909      	lsrs	r1, r1, #4
 8009ed8:	f803 0901 	strb.w	r0, [r3], #-1
 8009edc:	d0c6      	beq.n	8009e6c <_format_hex+0x18>
 8009ede:	42ab      	cmp	r3, r5
 8009ee0:	d1f3      	bne.n	8009eca <_format_hex+0x76>
 8009ee2:	e7c3      	b.n	8009e6c <_format_hex+0x18>
 8009ee4:	f803 5901 	strb.w	r5, [r3], #-1
 8009ee8:	e7c5      	b.n	8009e76 <_format_hex+0x22>
 8009eea:	f803 5901 	strb.w	r5, [r3], #-1
 8009eee:	e7cc      	b.n	8009e8a <_format_hex+0x36>
 8009ef0:	f803 4901 	strb.w	r4, [r3], #-1
 8009ef4:	e7d3      	b.n	8009e9e <_format_hex+0x4a>
 8009ef6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009efa:	4630      	mov	r0, r6
 8009efc:	f7ff ff28 	bl	8009d50 <_xputch>
 8009f00:	e7d4      	b.n	8009eac <_format_hex+0x58>
 8009f02:	2120      	movs	r1, #32
 8009f04:	4630      	mov	r0, r6
 8009f06:	f7ff ff23 	bl	8009d50 <_xputch>
 8009f0a:	3501      	adds	r5, #1
 8009f0c:	e7d1      	b.n	8009eb2 <_format_hex+0x5e>
	...

08009f10 <_vprintf>:
 8009f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009f14:	f04f 0800 	mov.w	r8, #0
 8009f18:	b096      	sub	sp, #88	; 0x58
 8009f1a:	e9cd 8004 	strd	r8, r0, [sp, #16]
 8009f1e:	4614      	mov	r4, r2
 8009f20:	af06      	add	r7, sp, #24
 8009f22:	780b      	ldrb	r3, [r1, #0]
 8009f24:	b91b      	cbnz	r3, 8009f2e <_vprintf+0x1e>
 8009f26:	9804      	ldr	r0, [sp, #16]
 8009f28:	b016      	add	sp, #88	; 0x58
 8009f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f2e:	2b25      	cmp	r3, #37	; 0x25
 8009f30:	f101 0601 	add.w	r6, r1, #1
 8009f34:	d005      	beq.n	8009f42 <_vprintf+0x32>
 8009f36:	4619      	mov	r1, r3
 8009f38:	a801      	add	r0, sp, #4
 8009f3a:	f7ff ff09 	bl	8009d50 <_xputch>
 8009f3e:	4631      	mov	r1, r6
 8009f40:	e7ef      	b.n	8009f22 <_vprintf+0x12>
 8009f42:	784b      	ldrb	r3, [r1, #1]
 8009f44:	f8cd 800c 	str.w	r8, [sp, #12]
 8009f48:	2b30      	cmp	r3, #48	; 0x30
 8009f4a:	e9cd 8801 	strd	r8, r8, [sp, #4]
 8009f4e:	d129      	bne.n	8009fa4 <_vprintf+0x94>
 8009f50:	2320      	movs	r3, #32
 8009f52:	9301      	str	r3, [sp, #4]
 8009f54:	1c8e      	adds	r6, r1, #2
 8009f56:	2200      	movs	r2, #0
 8009f58:	4635      	mov	r5, r6
 8009f5a:	4613      	mov	r3, r2
 8009f5c:	f04f 0c0a 	mov.w	ip, #10
 8009f60:	7829      	ldrb	r1, [r5, #0]
 8009f62:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8009f66:	2809      	cmp	r0, #9
 8009f68:	462e      	mov	r6, r5
 8009f6a:	f105 0501 	add.w	r5, r5, #1
 8009f6e:	d91d      	bls.n	8009fac <_vprintf+0x9c>
 8009f70:	b12a      	cbz	r2, 8009f7e <_vprintf+0x6e>
 8009f72:	9303      	str	r3, [sp, #12]
 8009f74:	b11b      	cbz	r3, 8009f7e <_vprintf+0x6e>
 8009f76:	9b01      	ldr	r3, [sp, #4]
 8009f78:	f043 0310 	orr.w	r3, r3, #16
 8009f7c:	9301      	str	r3, [sp, #4]
 8009f7e:	292e      	cmp	r1, #46	; 0x2e
 8009f80:	d123      	bne.n	8009fca <_vprintf+0xba>
 8009f82:	7873      	ldrb	r3, [r6, #1]
 8009f84:	2b2a      	cmp	r3, #42	; 0x2a
 8009f86:	d015      	beq.n	8009fb4 <_vprintf+0xa4>
 8009f88:	2100      	movs	r1, #0
 8009f8a:	1c70      	adds	r0, r6, #1
 8009f8c:	460a      	mov	r2, r1
 8009f8e:	250a      	movs	r5, #10
 8009f90:	7803      	ldrb	r3, [r0, #0]
 8009f92:	3b30      	subs	r3, #48	; 0x30
 8009f94:	2b09      	cmp	r3, #9
 8009f96:	4606      	mov	r6, r0
 8009f98:	f100 0001 	add.w	r0, r0, #1
 8009f9c:	d958      	bls.n	800a050 <_vprintf+0x140>
 8009f9e:	b181      	cbz	r1, 8009fc2 <_vprintf+0xb2>
 8009fa0:	9202      	str	r2, [sp, #8]
 8009fa2:	e00e      	b.n	8009fc2 <_vprintf+0xb2>
 8009fa4:	2b2d      	cmp	r3, #45	; 0x2d
 8009fa6:	d1d6      	bne.n	8009f56 <_vprintf+0x46>
 8009fa8:	2340      	movs	r3, #64	; 0x40
 8009faa:	e7d2      	b.n	8009f52 <_vprintf+0x42>
 8009fac:	fb0c 0303 	mla	r3, ip, r3, r0
 8009fb0:	2201      	movs	r2, #1
 8009fb2:	e7d5      	b.n	8009f60 <_vprintf+0x50>
 8009fb4:	f854 3b04 	ldr.w	r3, [r4], #4
 8009fb8:	2b00      	cmp	r3, #0
 8009fba:	bfb8      	it	lt
 8009fbc:	425b      	neglt	r3, r3
 8009fbe:	3602      	adds	r6, #2
 8009fc0:	9302      	str	r3, [sp, #8]
 8009fc2:	9b01      	ldr	r3, [sp, #4]
 8009fc4:	f043 0301 	orr.w	r3, r3, #1
 8009fc8:	9301      	str	r3, [sp, #4]
 8009fca:	7833      	ldrb	r3, [r6, #0]
 8009fcc:	2b6c      	cmp	r3, #108	; 0x6c
 8009fce:	bf04      	itt	eq
 8009fd0:	3601      	addeq	r6, #1
 8009fd2:	9b01      	ldreq	r3, [sp, #4]
 8009fd4:	7831      	ldrb	r1, [r6, #0]
 8009fd6:	bf04      	itt	eq
 8009fd8:	f043 0304 	orreq.w	r3, r3, #4
 8009fdc:	9301      	streq	r3, [sp, #4]
 8009fde:	2958      	cmp	r1, #88	; 0x58
 8009fe0:	f000 8169 	beq.w	800a2b6 <_vprintf+0x3a6>
 8009fe4:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009fe8:	b2da      	uxtb	r2, r3
 8009fea:	2a15      	cmp	r2, #21
 8009fec:	d8a4      	bhi.n	8009f38 <_vprintf+0x28>
 8009fee:	2b15      	cmp	r3, #21
 8009ff0:	d8a2      	bhi.n	8009f38 <_vprintf+0x28>
 8009ff2:	a201      	add	r2, pc, #4	; (adr r2, 8009ff8 <_vprintf+0xe8>)
 8009ff4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ff8:	0800a059 	stmdaeq	r0, {r0, r3, r4, r6, sp, pc}
 8009ffc:	0800a06b 	stmdaeq	r0, {r0, r1, r3, r5, r6, sp, pc}
 800a000:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a004:	0800a0a1 	stmdaeq	r0, {r0, r5, r7, sp, pc}
 800a008:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a00c:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a010:	0800a06b 	stmdaeq	r0, {r0, r1, r3, r5, r6, sp, pc}
 800a014:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a018:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a01c:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a020:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a024:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a028:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a02c:	0800a1f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sp, pc}
 800a030:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a034:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a038:	0800a221 	stmdaeq	r0, {r0, r5, r9, sp, pc}
 800a03c:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a040:	0800a297 	stmdaeq	r0, {r0, r1, r2, r4, r7, r9, sp, pc}
 800a044:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a048:	08009f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800a04c:	0800a2bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r9, sp, pc}
 800a050:	fb05 3202 	mla	r2, r5, r2, r3
 800a054:	2101      	movs	r1, #1
 800a056:	e79b      	b.n	8009f90 <_vprintf+0x80>
 800a058:	4625      	mov	r5, r4
 800a05a:	a801      	add	r0, sp, #4
 800a05c:	f855 1b04 	ldr.w	r1, [r5], #4
 800a060:	f7ff fe76 	bl	8009d50 <_xputch>
 800a064:	3601      	adds	r6, #1
 800a066:	462c      	mov	r4, r5
 800a068:	e769      	b.n	8009f3e <_vprintf+0x2e>
 800a06a:	9901      	ldr	r1, [sp, #4]
 800a06c:	074d      	lsls	r5, r1, #29
 800a06e:	bf4b      	itete	mi
 800a070:	3407      	addmi	r4, #7
 800a072:	4625      	movpl	r5, r4
 800a074:	f024 0407 	bicmi.w	r4, r4, #7
 800a078:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800a07c:	bf45      	ittet	mi
 800a07e:	6863      	ldrmi	r3, [r4, #4]
 800a080:	4625      	movmi	r5, r4
 800a082:	17d3      	asrpl	r3, r2, #31
 800a084:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800a088:	2b00      	cmp	r3, #0
 800a08a:	da05      	bge.n	800a098 <_vprintf+0x188>
 800a08c:	f041 0108 	orr.w	r1, r1, #8
 800a090:	4252      	negs	r2, r2
 800a092:	9101      	str	r1, [sp, #4]
 800a094:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a098:	a801      	add	r0, sp, #4
 800a09a:	f7ff fe71 	bl	8009d80 <_format_int>
 800a09e:	e7e1      	b.n	800a064 <_vprintf+0x154>
 800a0a0:	3407      	adds	r4, #7
 800a0a2:	f024 0507 	bic.w	r5, r4, #7
 800a0a6:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800a0aa:	f7fe fda5 	bl	8008bf8 <__aeabi_d2f>
 800a0ae:	9b01      	ldr	r3, [sp, #4]
 800a0b0:	ee07 0a90 	vmov	s15, r0
 800a0b4:	07dc      	lsls	r4, r3, #31
 800a0b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a0ba:	bf4c      	ite	mi
 800a0bc:	9c02      	ldrmi	r4, [sp, #8]
 800a0be:	2406      	movpl	r4, #6
 800a0c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0c4:	bf48      	it	mi
 800a0c6:	eef1 7a67 	vnegmi.f32	s15, s15
 800a0ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0ce:	bf4a      	itet	mi
 800a0d0:	f10d 0a19 	addmi.w	sl, sp, #25
 800a0d4:	46ba      	movpl	sl, r7
 800a0d6:	232d      	movmi	r3, #45	; 0x2d
 800a0d8:	ee17 0a10 	vmov	r0, s14
 800a0dc:	f04f 0200 	mov.w	r2, #0
 800a0e0:	4651      	mov	r1, sl
 800a0e2:	bf48      	it	mi
 800a0e4:	f88d 3018 	strbmi.w	r3, [sp, #24]
 800a0e8:	f7ff fdf8 	bl	8009cdc <_itostr>
 800a0ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a0f0:	232e      	movs	r3, #46	; 0x2e
 800a0f2:	f80a 3000 	strb.w	r3, [sl, r0]
 800a0f6:	eb0a 0900 	add.w	r9, sl, r0
 800a0fa:	230a      	movs	r3, #10
 800a0fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800a100:	1c62      	adds	r2, r4, #1
 800a102:	f109 0901 	add.w	r9, r9, #1
 800a106:	4619      	mov	r1, r3
 800a108:	2c00      	cmp	r4, #0
 800a10a:	dc3d      	bgt.n	800a188 <_vprintf+0x278>
 800a10c:	ee07 3a10 	vmov	s14, r3
 800a110:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a114:	4649      	mov	r1, r9
 800a116:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a11a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a11e:	ee17 0a90 	vmov	r0, s15
 800a122:	f7ff fddb 	bl	8009cdc <_itostr>
 800a126:	4448      	add	r0, r9
 800a128:	1bc0      	subs	r0, r0, r7
 800a12a:	1e44      	subs	r4, r0, #1
 800a12c:	193a      	adds	r2, r7, r4
 800a12e:	5d3b      	ldrb	r3, [r7, r4]
 800a130:	2b34      	cmp	r3, #52	; 0x34
 800a132:	d911      	bls.n	800a158 <_vprintf+0x248>
 800a134:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800a138:	292e      	cmp	r1, #46	; 0x2e
 800a13a:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800a13e:	d029      	beq.n	800a194 <_vprintf+0x284>
 800a140:	469c      	mov	ip, r3
 800a142:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800a146:	4663      	mov	r3, ip
 800a148:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800a14c:	2939      	cmp	r1, #57	; 0x39
 800a14e:	d01e      	beq.n	800a18e <_vprintf+0x27e>
 800a150:	292e      	cmp	r1, #46	; 0x2e
 800a152:	d01f      	beq.n	800a194 <_vprintf+0x284>
 800a154:	3101      	adds	r1, #1
 800a156:	7019      	strb	r1, [r3, #0]
 800a158:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800a15c:	446b      	add	r3, sp
 800a15e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800a162:	2b2e      	cmp	r3, #46	; 0x2e
 800a164:	bf08      	it	eq
 800a166:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800a16a:	46a1      	mov	r9, r4
 800a16c:	9b03      	ldr	r3, [sp, #12]
 800a16e:	4599      	cmp	r9, r3
 800a170:	db3b      	blt.n	800a1ea <_vprintf+0x2da>
 800a172:	46b9      	mov	r9, r7
 800a174:	2c00      	cmp	r4, #0
 800a176:	f77f af75 	ble.w	800a064 <_vprintf+0x154>
 800a17a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800a17e:	a801      	add	r0, sp, #4
 800a180:	f7ff fde6 	bl	8009d50 <_xputch>
 800a184:	3c01      	subs	r4, #1
 800a186:	e7f5      	b.n	800a174 <_vprintf+0x264>
 800a188:	434b      	muls	r3, r1
 800a18a:	3c01      	subs	r4, #1
 800a18c:	e7bc      	b.n	800a108 <_vprintf+0x1f8>
 800a18e:	f88c e001 	strb.w	lr, [ip, #1]
 800a192:	e7d8      	b.n	800a146 <_vprintf+0x236>
 800a194:	3b01      	subs	r3, #1
 800a196:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800a19a:	7819      	ldrb	r1, [r3, #0]
 800a19c:	2939      	cmp	r1, #57	; 0x39
 800a19e:	d112      	bne.n	800a1c6 <_vprintf+0x2b6>
 800a1a0:	42bb      	cmp	r3, r7
 800a1a2:	d20d      	bcs.n	800a1c0 <_vprintf+0x2b0>
 800a1a4:	1c5c      	adds	r4, r3, #1
 800a1a6:	1c99      	adds	r1, r3, #2
 800a1a8:	428c      	cmp	r4, r1
 800a1aa:	eba2 0203 	sub.w	r2, r2, r3
 800a1ae:	d913      	bls.n	800a1d8 <_vprintf+0x2c8>
 800a1b0:	4619      	mov	r1, r3
 800a1b2:	441a      	add	r2, r3
 800a1b4:	428a      	cmp	r2, r1
 800a1b6:	d10b      	bne.n	800a1d0 <_vprintf+0x2c0>
 800a1b8:	2231      	movs	r2, #49	; 0x31
 800a1ba:	705a      	strb	r2, [r3, #1]
 800a1bc:	4604      	mov	r4, r0
 800a1be:	e7cb      	b.n	800a158 <_vprintf+0x248>
 800a1c0:	f803 c901 	strb.w	ip, [r3], #-1
 800a1c4:	e7e9      	b.n	800a19a <_vprintf+0x28a>
 800a1c6:	42bb      	cmp	r3, r7
 800a1c8:	d3ec      	bcc.n	800a1a4 <_vprintf+0x294>
 800a1ca:	292d      	cmp	r1, #45	; 0x2d
 800a1cc:	d0ea      	beq.n	800a1a4 <_vprintf+0x294>
 800a1ce:	e7c1      	b.n	800a154 <_vprintf+0x244>
 800a1d0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a1d4:	704c      	strb	r4, [r1, #1]
 800a1d6:	e7ed      	b.n	800a1b4 <_vprintf+0x2a4>
 800a1d8:	4414      	add	r4, r2
 800a1da:	440a      	add	r2, r1
 800a1dc:	428a      	cmp	r2, r1
 800a1de:	d0eb      	beq.n	800a1b8 <_vprintf+0x2a8>
 800a1e0:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800a1e4:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800a1e8:	e7f8      	b.n	800a1dc <_vprintf+0x2cc>
 800a1ea:	2120      	movs	r1, #32
 800a1ec:	a801      	add	r0, sp, #4
 800a1ee:	f7ff fdaf 	bl	8009d50 <_xputch>
 800a1f2:	f109 0901 	add.w	r9, r9, #1
 800a1f6:	e7b9      	b.n	800a16c <_vprintf+0x25c>
 800a1f8:	4625      	mov	r5, r4
 800a1fa:	2308      	movs	r3, #8
 800a1fc:	f855 4b04 	ldr.w	r4, [r5], #4
 800a200:	9303      	str	r3, [sp, #12]
 800a202:	2130      	movs	r1, #48	; 0x30
 800a204:	2320      	movs	r3, #32
 800a206:	a801      	add	r0, sp, #4
 800a208:	9301      	str	r3, [sp, #4]
 800a20a:	f7ff fda1 	bl	8009d50 <_xputch>
 800a20e:	2178      	movs	r1, #120	; 0x78
 800a210:	a801      	add	r0, sp, #4
 800a212:	f7ff fd9d 	bl	8009d50 <_xputch>
 800a216:	4621      	mov	r1, r4
 800a218:	a801      	add	r0, sp, #4
 800a21a:	f7ff fe1b 	bl	8009e54 <_format_hex>
 800a21e:	e721      	b.n	800a064 <_vprintf+0x154>
 800a220:	4625      	mov	r5, r4
 800a222:	2400      	movs	r4, #0
 800a224:	f855 9b04 	ldr.w	r9, [r5], #4
 800a228:	f819 3004 	ldrb.w	r3, [r9, r4]
 800a22c:	b993      	cbnz	r3, 800a254 <_vprintf+0x344>
 800a22e:	9b01      	ldr	r3, [sp, #4]
 800a230:	07d9      	lsls	r1, r3, #31
 800a232:	d503      	bpl.n	800a23c <_vprintf+0x32c>
 800a234:	9b02      	ldr	r3, [sp, #8]
 800a236:	429c      	cmp	r4, r3
 800a238:	bfa8      	it	ge
 800a23a:	461c      	movge	r4, r3
 800a23c:	9b01      	ldr	r3, [sp, #4]
 800a23e:	065a      	lsls	r2, r3, #25
 800a240:	f104 0a01 	add.w	sl, r4, #1
 800a244:	d403      	bmi.n	800a24e <_vprintf+0x33e>
 800a246:	9b03      	ldr	r3, [sp, #12]
 800a248:	429c      	cmp	r4, r3
 800a24a:	db05      	blt.n	800a258 <_vprintf+0x348>
 800a24c:	4654      	mov	r4, sl
 800a24e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a252:	e00d      	b.n	800a270 <_vprintf+0x360>
 800a254:	3401      	adds	r4, #1
 800a256:	e7e7      	b.n	800a228 <_vprintf+0x318>
 800a258:	2120      	movs	r1, #32
 800a25a:	a801      	add	r0, sp, #4
 800a25c:	f7ff fd78 	bl	8009d50 <_xputch>
 800a260:	4654      	mov	r4, sl
 800a262:	e7eb      	b.n	800a23c <_vprintf+0x32c>
 800a264:	a801      	add	r0, sp, #4
 800a266:	f7ff fd73 	bl	8009d50 <_xputch>
 800a26a:	9b02      	ldr	r3, [sp, #8]
 800a26c:	3b01      	subs	r3, #1
 800a26e:	9302      	str	r3, [sp, #8]
 800a270:	9b01      	ldr	r3, [sp, #4]
 800a272:	07db      	lsls	r3, r3, #31
 800a274:	d501      	bpl.n	800a27a <_vprintf+0x36a>
 800a276:	9b02      	ldr	r3, [sp, #8]
 800a278:	b11b      	cbz	r3, 800a282 <_vprintf+0x372>
 800a27a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800a27e:	2900      	cmp	r1, #0
 800a280:	d1f0      	bne.n	800a264 <_vprintf+0x354>
 800a282:	9b03      	ldr	r3, [sp, #12]
 800a284:	429c      	cmp	r4, r3
 800a286:	f6bf aeed 	bge.w	800a064 <_vprintf+0x154>
 800a28a:	2120      	movs	r1, #32
 800a28c:	a801      	add	r0, sp, #4
 800a28e:	f7ff fd5f 	bl	8009d50 <_xputch>
 800a292:	3401      	adds	r4, #1
 800a294:	e7f5      	b.n	800a282 <_vprintf+0x372>
 800a296:	9b01      	ldr	r3, [sp, #4]
 800a298:	f013 0304 	ands.w	r3, r3, #4
 800a29c:	bf1d      	ittte	ne
 800a29e:	3407      	addne	r4, #7
 800a2a0:	f024 0407 	bicne.w	r4, r4, #7
 800a2a4:	4625      	movne	r5, r4
 800a2a6:	4625      	moveq	r5, r4
 800a2a8:	bf1a      	itte	ne
 800a2aa:	f855 2b08 	ldrne.w	r2, [r5], #8
 800a2ae:	6863      	ldrne	r3, [r4, #4]
 800a2b0:	f855 2b04 	ldreq.w	r2, [r5], #4
 800a2b4:	e6f0      	b.n	800a098 <_vprintf+0x188>
 800a2b6:	9b01      	ldr	r3, [sp, #4]
 800a2b8:	f043 0302 	orr.w	r3, r3, #2
 800a2bc:	9301      	str	r3, [sp, #4]
 800a2be:	4625      	mov	r5, r4
 800a2c0:	f855 1b04 	ldr.w	r1, [r5], #4
 800a2c4:	e7a8      	b.n	800a218 <_vprintf+0x308>
 800a2c6:	bf00      	nop

0800a2c8 <printf>:
 800a2c8:	b40f      	push	{r0, r1, r2, r3}
 800a2ca:	b507      	push	{r0, r1, r2, lr}
 800a2cc:	aa04      	add	r2, sp, #16
 800a2ce:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a2d2:	f852 1b04 	ldr.w	r1, [r2], #4
 800a2d6:	9201      	str	r2, [sp, #4]
 800a2d8:	f7ff fe1a 	bl	8009f10 <_vprintf>
 800a2dc:	b003      	add	sp, #12
 800a2de:	f85d eb04 	ldr.w	lr, [sp], #4
 800a2e2:	b004      	add	sp, #16
 800a2e4:	4770      	bx	lr
	...

0800a2e8 <sprintf>:
 800a2e8:	b40e      	push	{r1, r2, r3}
 800a2ea:	b517      	push	{r0, r1, r2, r4, lr}
 800a2ec:	4c09      	ldr	r4, [pc, #36]	; (800a314 <sprintf+0x2c>)
 800a2ee:	aa05      	add	r2, sp, #20
 800a2f0:	6020      	str	r0, [r4, #0]
 800a2f2:	f852 1b04 	ldr.w	r1, [r2], #4
 800a2f6:	9201      	str	r2, [sp, #4]
 800a2f8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a2fc:	f7ff fe08 	bl	8009f10 <_vprintf>
 800a300:	6822      	ldr	r2, [r4, #0]
 800a302:	2300      	movs	r3, #0
 800a304:	7013      	strb	r3, [r2, #0]
 800a306:	6023      	str	r3, [r4, #0]
 800a308:	b003      	add	sp, #12
 800a30a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a30e:	b003      	add	sp, #12
 800a310:	4770      	bx	lr
 800a312:	bf00      	nop
 800a314:	200000f8 	strdcs	r0, [r0], -r8

0800a318 <snprintf>:
 800a318:	b40c      	push	{r2, r3}
 800a31a:	b513      	push	{r0, r1, r4, lr}
 800a31c:	4c09      	ldr	r4, [pc, #36]	; (800a344 <snprintf+0x2c>)
 800a31e:	aa04      	add	r2, sp, #16
 800a320:	460b      	mov	r3, r1
 800a322:	6020      	str	r0, [r4, #0]
 800a324:	f852 1b04 	ldr.w	r1, [r2], #4
 800a328:	9201      	str	r2, [sp, #4]
 800a32a:	4618      	mov	r0, r3
 800a32c:	f7ff fdf0 	bl	8009f10 <_vprintf>
 800a330:	6822      	ldr	r2, [r4, #0]
 800a332:	2300      	movs	r3, #0
 800a334:	7013      	strb	r3, [r2, #0]
 800a336:	6023      	str	r3, [r4, #0]
 800a338:	b002      	add	sp, #8
 800a33a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a33e:	b002      	add	sp, #8
 800a340:	4770      	bx	lr
 800a342:	bf00      	nop
 800a344:	200000f8 	strdcs	r0, [r0], -r8

0800a348 <vsnprintf>:
 800a348:	b538      	push	{r3, r4, r5, lr}
 800a34a:	4c06      	ldr	r4, [pc, #24]	; (800a364 <vsnprintf+0x1c>)
 800a34c:	4605      	mov	r5, r0
 800a34e:	4608      	mov	r0, r1
 800a350:	4611      	mov	r1, r2
 800a352:	461a      	mov	r2, r3
 800a354:	6025      	str	r5, [r4, #0]
 800a356:	f7ff fddb 	bl	8009f10 <_vprintf>
 800a35a:	6822      	ldr	r2, [r4, #0]
 800a35c:	2300      	movs	r3, #0
 800a35e:	7013      	strb	r3, [r2, #0]
 800a360:	6023      	str	r3, [r4, #0]
 800a362:	bd38      	pop	{r3, r4, r5, pc}
 800a364:	200000f8 	strdcs	r0, [r0], -r8

0800a368 <__udivmoddi4>:
 800a368:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a36c:	9e08      	ldr	r6, [sp, #32]
 800a36e:	460d      	mov	r5, r1
 800a370:	4604      	mov	r4, r0
 800a372:	460f      	mov	r7, r1
 800a374:	2b00      	cmp	r3, #0
 800a376:	d14a      	bne.n	800a40e <__udivmoddi4+0xa6>
 800a378:	428a      	cmp	r2, r1
 800a37a:	4694      	mov	ip, r2
 800a37c:	d965      	bls.n	800a44a <__udivmoddi4+0xe2>
 800a37e:	fab2 f382 	clz	r3, r2
 800a382:	b143      	cbz	r3, 800a396 <__udivmoddi4+0x2e>
 800a384:	fa02 fc03 	lsl.w	ip, r2, r3
 800a388:	f1c3 0220 	rsb	r2, r3, #32
 800a38c:	409f      	lsls	r7, r3
 800a38e:	fa20 f202 	lsr.w	r2, r0, r2
 800a392:	4317      	orrs	r7, r2
 800a394:	409c      	lsls	r4, r3
 800a396:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800a39a:	fa1f f58c 	uxth.w	r5, ip
 800a39e:	fbb7 f1fe 	udiv	r1, r7, lr
 800a3a2:	0c22      	lsrs	r2, r4, #16
 800a3a4:	fb0e 7711 	mls	r7, lr, r1, r7
 800a3a8:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800a3ac:	fb01 f005 	mul.w	r0, r1, r5
 800a3b0:	4290      	cmp	r0, r2
 800a3b2:	d90a      	bls.n	800a3ca <__udivmoddi4+0x62>
 800a3b4:	eb1c 0202 	adds.w	r2, ip, r2
 800a3b8:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 800a3bc:	f080 811c 	bcs.w	800a5f8 <__udivmoddi4+0x290>
 800a3c0:	4290      	cmp	r0, r2
 800a3c2:	f240 8119 	bls.w	800a5f8 <__udivmoddi4+0x290>
 800a3c6:	3902      	subs	r1, #2
 800a3c8:	4462      	add	r2, ip
 800a3ca:	1a12      	subs	r2, r2, r0
 800a3cc:	b2a4      	uxth	r4, r4
 800a3ce:	fbb2 f0fe 	udiv	r0, r2, lr
 800a3d2:	fb0e 2210 	mls	r2, lr, r0, r2
 800a3d6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a3da:	fb00 f505 	mul.w	r5, r0, r5
 800a3de:	42a5      	cmp	r5, r4
 800a3e0:	d90a      	bls.n	800a3f8 <__udivmoddi4+0x90>
 800a3e2:	eb1c 0404 	adds.w	r4, ip, r4
 800a3e6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a3ea:	f080 8107 	bcs.w	800a5fc <__udivmoddi4+0x294>
 800a3ee:	42a5      	cmp	r5, r4
 800a3f0:	f240 8104 	bls.w	800a5fc <__udivmoddi4+0x294>
 800a3f4:	4464      	add	r4, ip
 800a3f6:	3802      	subs	r0, #2
 800a3f8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800a3fc:	1b64      	subs	r4, r4, r5
 800a3fe:	2100      	movs	r1, #0
 800a400:	b11e      	cbz	r6, 800a40a <__udivmoddi4+0xa2>
 800a402:	40dc      	lsrs	r4, r3
 800a404:	2300      	movs	r3, #0
 800a406:	e9c6 4300 	strd	r4, r3, [r6]
 800a40a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a40e:	428b      	cmp	r3, r1
 800a410:	d908      	bls.n	800a424 <__udivmoddi4+0xbc>
 800a412:	2e00      	cmp	r6, #0
 800a414:	f000 80ed 	beq.w	800a5f2 <__udivmoddi4+0x28a>
 800a418:	2100      	movs	r1, #0
 800a41a:	e9c6 0500 	strd	r0, r5, [r6]
 800a41e:	4608      	mov	r0, r1
 800a420:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a424:	fab3 f183 	clz	r1, r3
 800a428:	2900      	cmp	r1, #0
 800a42a:	d149      	bne.n	800a4c0 <__udivmoddi4+0x158>
 800a42c:	42ab      	cmp	r3, r5
 800a42e:	d302      	bcc.n	800a436 <__udivmoddi4+0xce>
 800a430:	4282      	cmp	r2, r0
 800a432:	f200 80f8 	bhi.w	800a626 <__udivmoddi4+0x2be>
 800a436:	1a84      	subs	r4, r0, r2
 800a438:	eb65 0203 	sbc.w	r2, r5, r3
 800a43c:	2001      	movs	r0, #1
 800a43e:	4617      	mov	r7, r2
 800a440:	2e00      	cmp	r6, #0
 800a442:	d0e2      	beq.n	800a40a <__udivmoddi4+0xa2>
 800a444:	e9c6 4700 	strd	r4, r7, [r6]
 800a448:	e7df      	b.n	800a40a <__udivmoddi4+0xa2>
 800a44a:	b902      	cbnz	r2, 800a44e <__udivmoddi4+0xe6>
 800a44c:	deff      	udf	#255	; 0xff
 800a44e:	fab2 f382 	clz	r3, r2
 800a452:	2b00      	cmp	r3, #0
 800a454:	f040 8090 	bne.w	800a578 <__udivmoddi4+0x210>
 800a458:	1a8a      	subs	r2, r1, r2
 800a45a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a45e:	fa1f fe8c 	uxth.w	lr, ip
 800a462:	2101      	movs	r1, #1
 800a464:	fbb2 f5f7 	udiv	r5, r2, r7
 800a468:	fb07 2015 	mls	r0, r7, r5, r2
 800a46c:	0c22      	lsrs	r2, r4, #16
 800a46e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a472:	fb0e f005 	mul.w	r0, lr, r5
 800a476:	4290      	cmp	r0, r2
 800a478:	d908      	bls.n	800a48c <__udivmoddi4+0x124>
 800a47a:	eb1c 0202 	adds.w	r2, ip, r2
 800a47e:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a482:	d202      	bcs.n	800a48a <__udivmoddi4+0x122>
 800a484:	4290      	cmp	r0, r2
 800a486:	f200 80cb 	bhi.w	800a620 <__udivmoddi4+0x2b8>
 800a48a:	4645      	mov	r5, r8
 800a48c:	1a12      	subs	r2, r2, r0
 800a48e:	b2a4      	uxth	r4, r4
 800a490:	fbb2 f0f7 	udiv	r0, r2, r7
 800a494:	fb07 2210 	mls	r2, r7, r0, r2
 800a498:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a49c:	fb0e fe00 	mul.w	lr, lr, r0
 800a4a0:	45a6      	cmp	lr, r4
 800a4a2:	d908      	bls.n	800a4b6 <__udivmoddi4+0x14e>
 800a4a4:	eb1c 0404 	adds.w	r4, ip, r4
 800a4a8:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a4ac:	d202      	bcs.n	800a4b4 <__udivmoddi4+0x14c>
 800a4ae:	45a6      	cmp	lr, r4
 800a4b0:	f200 80bb 	bhi.w	800a62a <__udivmoddi4+0x2c2>
 800a4b4:	4610      	mov	r0, r2
 800a4b6:	eba4 040e 	sub.w	r4, r4, lr
 800a4ba:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800a4be:	e79f      	b.n	800a400 <__udivmoddi4+0x98>
 800a4c0:	f1c1 0720 	rsb	r7, r1, #32
 800a4c4:	408b      	lsls	r3, r1
 800a4c6:	fa22 fc07 	lsr.w	ip, r2, r7
 800a4ca:	ea4c 0c03 	orr.w	ip, ip, r3
 800a4ce:	fa05 f401 	lsl.w	r4, r5, r1
 800a4d2:	fa20 f307 	lsr.w	r3, r0, r7
 800a4d6:	40fd      	lsrs	r5, r7
 800a4d8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800a4dc:	4323      	orrs	r3, r4
 800a4de:	fbb5 f8f9 	udiv	r8, r5, r9
 800a4e2:	fa1f fe8c 	uxth.w	lr, ip
 800a4e6:	fb09 5518 	mls	r5, r9, r8, r5
 800a4ea:	0c1c      	lsrs	r4, r3, #16
 800a4ec:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a4f0:	fb08 f50e 	mul.w	r5, r8, lr
 800a4f4:	42a5      	cmp	r5, r4
 800a4f6:	fa02 f201 	lsl.w	r2, r2, r1
 800a4fa:	fa00 f001 	lsl.w	r0, r0, r1
 800a4fe:	d90b      	bls.n	800a518 <__udivmoddi4+0x1b0>
 800a500:	eb1c 0404 	adds.w	r4, ip, r4
 800a504:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800a508:	f080 8088 	bcs.w	800a61c <__udivmoddi4+0x2b4>
 800a50c:	42a5      	cmp	r5, r4
 800a50e:	f240 8085 	bls.w	800a61c <__udivmoddi4+0x2b4>
 800a512:	f1a8 0802 	sub.w	r8, r8, #2
 800a516:	4464      	add	r4, ip
 800a518:	1b64      	subs	r4, r4, r5
 800a51a:	b29d      	uxth	r5, r3
 800a51c:	fbb4 f3f9 	udiv	r3, r4, r9
 800a520:	fb09 4413 	mls	r4, r9, r3, r4
 800a524:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800a528:	fb03 fe0e 	mul.w	lr, r3, lr
 800a52c:	45a6      	cmp	lr, r4
 800a52e:	d908      	bls.n	800a542 <__udivmoddi4+0x1da>
 800a530:	eb1c 0404 	adds.w	r4, ip, r4
 800a534:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 800a538:	d26c      	bcs.n	800a614 <__udivmoddi4+0x2ac>
 800a53a:	45a6      	cmp	lr, r4
 800a53c:	d96a      	bls.n	800a614 <__udivmoddi4+0x2ac>
 800a53e:	3b02      	subs	r3, #2
 800a540:	4464      	add	r4, ip
 800a542:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800a546:	fba3 9502 	umull	r9, r5, r3, r2
 800a54a:	eba4 040e 	sub.w	r4, r4, lr
 800a54e:	42ac      	cmp	r4, r5
 800a550:	46c8      	mov	r8, r9
 800a552:	46ae      	mov	lr, r5
 800a554:	d356      	bcc.n	800a604 <__udivmoddi4+0x29c>
 800a556:	d053      	beq.n	800a600 <__udivmoddi4+0x298>
 800a558:	b156      	cbz	r6, 800a570 <__udivmoddi4+0x208>
 800a55a:	ebb0 0208 	subs.w	r2, r0, r8
 800a55e:	eb64 040e 	sbc.w	r4, r4, lr
 800a562:	fa04 f707 	lsl.w	r7, r4, r7
 800a566:	40ca      	lsrs	r2, r1
 800a568:	40cc      	lsrs	r4, r1
 800a56a:	4317      	orrs	r7, r2
 800a56c:	e9c6 7400 	strd	r7, r4, [r6]
 800a570:	4618      	mov	r0, r3
 800a572:	2100      	movs	r1, #0
 800a574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a578:	f1c3 0120 	rsb	r1, r3, #32
 800a57c:	fa02 fc03 	lsl.w	ip, r2, r3
 800a580:	fa20 f201 	lsr.w	r2, r0, r1
 800a584:	fa25 f101 	lsr.w	r1, r5, r1
 800a588:	409d      	lsls	r5, r3
 800a58a:	432a      	orrs	r2, r5
 800a58c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a590:	fa1f fe8c 	uxth.w	lr, ip
 800a594:	fbb1 f0f7 	udiv	r0, r1, r7
 800a598:	fb07 1510 	mls	r5, r7, r0, r1
 800a59c:	0c11      	lsrs	r1, r2, #16
 800a59e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800a5a2:	fb00 f50e 	mul.w	r5, r0, lr
 800a5a6:	428d      	cmp	r5, r1
 800a5a8:	fa04 f403 	lsl.w	r4, r4, r3
 800a5ac:	d908      	bls.n	800a5c0 <__udivmoddi4+0x258>
 800a5ae:	eb1c 0101 	adds.w	r1, ip, r1
 800a5b2:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800a5b6:	d22f      	bcs.n	800a618 <__udivmoddi4+0x2b0>
 800a5b8:	428d      	cmp	r5, r1
 800a5ba:	d92d      	bls.n	800a618 <__udivmoddi4+0x2b0>
 800a5bc:	3802      	subs	r0, #2
 800a5be:	4461      	add	r1, ip
 800a5c0:	1b49      	subs	r1, r1, r5
 800a5c2:	b292      	uxth	r2, r2
 800a5c4:	fbb1 f5f7 	udiv	r5, r1, r7
 800a5c8:	fb07 1115 	mls	r1, r7, r5, r1
 800a5cc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a5d0:	fb05 f10e 	mul.w	r1, r5, lr
 800a5d4:	4291      	cmp	r1, r2
 800a5d6:	d908      	bls.n	800a5ea <__udivmoddi4+0x282>
 800a5d8:	eb1c 0202 	adds.w	r2, ip, r2
 800a5dc:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a5e0:	d216      	bcs.n	800a610 <__udivmoddi4+0x2a8>
 800a5e2:	4291      	cmp	r1, r2
 800a5e4:	d914      	bls.n	800a610 <__udivmoddi4+0x2a8>
 800a5e6:	3d02      	subs	r5, #2
 800a5e8:	4462      	add	r2, ip
 800a5ea:	1a52      	subs	r2, r2, r1
 800a5ec:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800a5f0:	e738      	b.n	800a464 <__udivmoddi4+0xfc>
 800a5f2:	4631      	mov	r1, r6
 800a5f4:	4630      	mov	r0, r6
 800a5f6:	e708      	b.n	800a40a <__udivmoddi4+0xa2>
 800a5f8:	4639      	mov	r1, r7
 800a5fa:	e6e6      	b.n	800a3ca <__udivmoddi4+0x62>
 800a5fc:	4610      	mov	r0, r2
 800a5fe:	e6fb      	b.n	800a3f8 <__udivmoddi4+0x90>
 800a600:	4548      	cmp	r0, r9
 800a602:	d2a9      	bcs.n	800a558 <__udivmoddi4+0x1f0>
 800a604:	ebb9 0802 	subs.w	r8, r9, r2
 800a608:	eb65 0e0c 	sbc.w	lr, r5, ip
 800a60c:	3b01      	subs	r3, #1
 800a60e:	e7a3      	b.n	800a558 <__udivmoddi4+0x1f0>
 800a610:	4645      	mov	r5, r8
 800a612:	e7ea      	b.n	800a5ea <__udivmoddi4+0x282>
 800a614:	462b      	mov	r3, r5
 800a616:	e794      	b.n	800a542 <__udivmoddi4+0x1da>
 800a618:	4640      	mov	r0, r8
 800a61a:	e7d1      	b.n	800a5c0 <__udivmoddi4+0x258>
 800a61c:	46d0      	mov	r8, sl
 800a61e:	e77b      	b.n	800a518 <__udivmoddi4+0x1b0>
 800a620:	3d02      	subs	r5, #2
 800a622:	4462      	add	r2, ip
 800a624:	e732      	b.n	800a48c <__udivmoddi4+0x124>
 800a626:	4608      	mov	r0, r1
 800a628:	e70a      	b.n	800a440 <__udivmoddi4+0xd8>
 800a62a:	4464      	add	r4, ip
 800a62c:	3802      	subs	r0, #2
 800a62e:	e742      	b.n	800a4b6 <__udivmoddi4+0x14e>

0800a630 <RemoteConfig::HandleList()>:
 800a630:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a634:	6801      	ldr	r1, [r0, #0]
 800a636:	4a2b      	ldr	r2, [pc, #172]	; (800a6e4 <RemoteConfig::HandleList()+0xb4>)
 800a638:	4b2b      	ldr	r3, [pc, #172]	; (800a6e8 <RemoteConfig::HandleList()+0xb8>)
 800a63a:	4e2c      	ldr	r6, [pc, #176]	; (800a6ec <RemoteConfig::HandleList()+0xbc>)
 800a63c:	681b      	ldr	r3, [r3, #0]
 800a63e:	6835      	ldr	r5, [r6, #0]
 800a640:	695f      	ldr	r7, [r3, #20]
 800a642:	4604      	mov	r4, r0
 800a644:	2012      	movs	r0, #18
 800a646:	fb00 2201 	mla	r2, r0, r1, r2
 800a64a:	6860      	ldr	r0, [r4, #4]
 800a64c:	4928      	ldr	r1, [pc, #160]	; (800a6f0 <RemoteConfig::HandleList()+0xc0>)
 800a64e:	f04f 080c 	mov.w	r8, #12
 800a652:	fb08 1100 	mla	r1, r8, r0, r1
 800a656:	4827      	ldr	r0, [pc, #156]	; (800a6f4 <RemoteConfig::HandleList()+0xc4>)
 800a658:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a65c:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a660:	b2fb      	uxtb	r3, r7
 800a662:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a666:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a66a:	b089      	sub	sp, #36	; 0x24
 800a66c:	3507      	adds	r5, #7
 800a66e:	0e3f      	lsrs	r7, r7, #24
 800a670:	f1b9 0f00 	cmp.w	r9, #0
 800a674:	d01d      	beq.n	800a6b2 <RemoteConfig::HandleList()+0x82>
 800a676:	3009      	adds	r0, #9
 800a678:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a67c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a680:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a684:	4a1c      	ldr	r2, [pc, #112]	; (800a6f8 <RemoteConfig::HandleList()+0xc8>)
 800a686:	f8cd c000 	str.w	ip, [sp]
 800a68a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a68e:	4628      	mov	r0, r5
 800a690:	f7ff fe42 	bl	800a318 <snprintf>
 800a694:	69e3      	ldr	r3, [r4, #28]
 800a696:	2b05      	cmp	r3, #5
 800a698:	d118      	bne.n	800a6cc <RemoteConfig::HandleList()+0x9c>
 800a69a:	f642 1305 	movw	r3, #10501	; 0x2905
 800a69e:	9300      	str	r3, [sp, #0]
 800a6a0:	69a3      	ldr	r3, [r4, #24]
 800a6a2:	b282      	uxth	r2, r0
 800a6a4:	4629      	mov	r1, r5
 800a6a6:	7d20      	ldrb	r0, [r4, #20]
 800a6a8:	f006 f8c6 	bl	8010838 <udp_send>
 800a6ac:	b009      	add	sp, #36	; 0x24
 800a6ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a6b2:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a6b6:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a6ba:	e9cd ce00 	strd	ip, lr, [sp]
 800a6be:	4a0f      	ldr	r2, [pc, #60]	; (800a6fc <RemoteConfig::HandleList()+0xcc>)
 800a6c0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a6c4:	4628      	mov	r0, r5
 800a6c6:	f7ff fe27 	bl	800a318 <snprintf>
 800a6ca:	e7e3      	b.n	800a694 <RemoteConfig::HandleList()+0x64>
 800a6cc:	2b06      	cmp	r3, #6
 800a6ce:	d1ed      	bne.n	800a6ac <RemoteConfig::HandleList()+0x7c>
 800a6d0:	6833      	ldr	r3, [r6, #0]
 800a6d2:	799b      	ldrb	r3, [r3, #6]
 800a6d4:	2b2a      	cmp	r3, #42	; 0x2a
 800a6d6:	d1e9      	bne.n	800a6ac <RemoteConfig::HandleList()+0x7c>
 800a6d8:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6dc:	9300      	str	r3, [sp, #0]
 800a6de:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a6e2:	e7de      	b.n	800a6a2 <RemoteConfig::HandleList()+0x72>
 800a6e4:	08016c7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, sp, lr}
 800a6e8:	2000fadc 	ldrdcs	pc, [r0], -ip
 800a6ec:	200000fc 	strdcs	r0, [r0], -ip
 800a6f0:	08016d42 	stmdaeq	r1, {r1, r6, r8, sl, fp, sp, lr}
 800a6f4:	20000100 	andcs	r0, r0, r0, lsl #2
 800a6f8:	08016b91 	stmdaeq	r1, {r0, r4, r7, r8, r9, fp, sp, lr}
 800a6fc:	08016baa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, fp, sp, lr}

0800a700 <RemoteConfig::HandleDisplayGet()>:
 800a700:	69c3      	ldr	r3, [r0, #28]
 800a702:	2b08      	cmp	r3, #8
 800a704:	d11b      	bne.n	800a73e <RemoteConfig::HandleDisplayGet()+0x3e>
 800a706:	4b0e      	ldr	r3, [pc, #56]	; (800a740 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a70c:	7c19      	ldrb	r1, [r3, #16]
 800a70e:	4d0d      	ldr	r5, [pc, #52]	; (800a744 <RemoteConfig::HandleDisplayGet()+0x44>)
 800a710:	4a0d      	ldr	r2, [pc, #52]	; (800a748 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a712:	4b0e      	ldr	r3, [pc, #56]	; (800a74c <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a714:	4604      	mov	r4, r0
 800a716:	2900      	cmp	r1, #0
 800a718:	bf18      	it	ne
 800a71a:	4613      	movne	r3, r2
 800a71c:	6828      	ldr	r0, [r5, #0]
 800a71e:	4a0c      	ldr	r2, [pc, #48]	; (800a750 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a720:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a724:	f7ff fdf8 	bl	800a318 <snprintf>
 800a728:	f642 1305 	movw	r3, #10501	; 0x2905
 800a72c:	9300      	str	r3, [sp, #0]
 800a72e:	b282      	uxth	r2, r0
 800a730:	69a3      	ldr	r3, [r4, #24]
 800a732:	6829      	ldr	r1, [r5, #0]
 800a734:	7d20      	ldrb	r0, [r4, #20]
 800a736:	f006 f87f 	bl	8010838 <udp_send>
 800a73a:	b003      	add	sp, #12
 800a73c:	bd30      	pop	{r4, r5, pc}
 800a73e:	4770      	bx	lr
 800a740:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800a744:	200000fc 	strdcs	r0, [r0], -ip
 800a748:	08016bc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, fp, sp, lr}
 800a74c:	08016bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, sp, lr}
 800a750:	08016bc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, fp, sp, lr}

0800a754 <RemoteConfig::HandleTftpGet()>:
 800a754:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a756:	4604      	mov	r4, r0
 800a758:	f000 fd7c 	bl	800b254 <RemoteConfig::PlatformHandleTftpGet()>
 800a75c:	69e3      	ldr	r3, [r4, #28]
 800a75e:	2b05      	cmp	r3, #5
 800a760:	d116      	bne.n	800a790 <RemoteConfig::HandleTftpGet()+0x3c>
 800a762:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a766:	4d0b      	ldr	r5, [pc, #44]	; (800a794 <RemoteConfig::HandleTftpGet()+0x40>)
 800a768:	4a0b      	ldr	r2, [pc, #44]	; (800a798 <RemoteConfig::HandleTftpGet()+0x44>)
 800a76a:	4b0c      	ldr	r3, [pc, #48]	; (800a79c <RemoteConfig::HandleTftpGet()+0x48>)
 800a76c:	6828      	ldr	r0, [r5, #0]
 800a76e:	2900      	cmp	r1, #0
 800a770:	bf08      	it	eq
 800a772:	4613      	moveq	r3, r2
 800a774:	4a0a      	ldr	r2, [pc, #40]	; (800a7a0 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a776:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a77a:	f7ff fdcd 	bl	800a318 <snprintf>
 800a77e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a782:	9300      	str	r3, [sp, #0]
 800a784:	b282      	uxth	r2, r0
 800a786:	69a3      	ldr	r3, [r4, #24]
 800a788:	6829      	ldr	r1, [r5, #0]
 800a78a:	7d20      	ldrb	r0, [r4, #20]
 800a78c:	f006 f854 	bl	8010838 <udp_send>
 800a790:	b003      	add	sp, #12
 800a792:	bd30      	pop	{r4, r5, pc}
 800a794:	200000fc 	strdcs	r0, [r0], -ip
 800a798:	08016bc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, fp, sp, lr}
 800a79c:	08016bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, sp, lr}
 800a7a0:	08016bd3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, fp, sp, lr}

0800a7a4 <RemoteConfig::HandleVersion()>:
 800a7a4:	69c3      	ldr	r3, [r0, #28]
 800a7a6:	2b08      	cmp	r3, #8
 800a7a8:	d114      	bne.n	800a7d4 <RemoteConfig::HandleVersion()+0x30>
 800a7aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7ac:	4d0a      	ldr	r5, [pc, #40]	; (800a7d8 <RemoteConfig::HandleVersion()+0x34>)
 800a7ae:	4b0b      	ldr	r3, [pc, #44]	; (800a7dc <RemoteConfig::HandleVersion()+0x38>)
 800a7b0:	4a0b      	ldr	r2, [pc, #44]	; (800a7e0 <RemoteConfig::HandleVersion()+0x3c>)
 800a7b2:	4604      	mov	r4, r0
 800a7b4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a7b8:	6828      	ldr	r0, [r5, #0]
 800a7ba:	f7ff fdad 	bl	800a318 <snprintf>
 800a7be:	f642 1305 	movw	r3, #10501	; 0x2905
 800a7c2:	9300      	str	r3, [sp, #0]
 800a7c4:	b282      	uxth	r2, r0
 800a7c6:	69a3      	ldr	r3, [r4, #24]
 800a7c8:	6829      	ldr	r1, [r5, #0]
 800a7ca:	7d20      	ldrb	r0, [r4, #20]
 800a7cc:	f006 f834 	bl	8010838 <udp_send>
 800a7d0:	b003      	add	sp, #12
 800a7d2:	bd30      	pop	{r4, r5, pc}
 800a7d4:	4770      	bx	lr
 800a7d6:	bf00      	nop
 800a7d8:	200000fc 	strdcs	r0, [r0], -ip
 800a7dc:	2000fe7a 	andcs	pc, r0, sl, ror lr	; <UNPREDICTABLE>
 800a7e0:	08016bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, sp, lr}

0800a7e4 <RemoteConfig::HandleUptime()>:
 800a7e4:	7bc3      	ldrb	r3, [r0, #15]
 800a7e6:	b1e3      	cbz	r3, 800a822 <RemoteConfig::HandleUptime()+0x3e>
 800a7e8:	4b0e      	ldr	r3, [pc, #56]	; (800a824 <RemoteConfig::HandleUptime()+0x40>)
 800a7ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7ec:	681a      	ldr	r2, [r3, #0]
 800a7ee:	69c3      	ldr	r3, [r0, #28]
 800a7f0:	2b07      	cmp	r3, #7
 800a7f2:	4604      	mov	r4, r0
 800a7f4:	d113      	bne.n	800a81e <RemoteConfig::HandleUptime()+0x3a>
 800a7f6:	4d0c      	ldr	r5, [pc, #48]	; (800a828 <RemoteConfig::HandleUptime()+0x44>)
 800a7f8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a7fc:	6828      	ldr	r0, [r5, #0]
 800a7fe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a802:	fbb2 f3f3 	udiv	r3, r2, r3
 800a806:	4a09      	ldr	r2, [pc, #36]	; (800a82c <RemoteConfig::HandleUptime()+0x48>)
 800a808:	f7ff fd86 	bl	800a318 <snprintf>
 800a80c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a810:	9300      	str	r3, [sp, #0]
 800a812:	b282      	uxth	r2, r0
 800a814:	69a3      	ldr	r3, [r4, #24]
 800a816:	6829      	ldr	r1, [r5, #0]
 800a818:	7d20      	ldrb	r0, [r4, #20]
 800a81a:	f006 f80d 	bl	8010838 <udp_send>
 800a81e:	b003      	add	sp, #12
 800a820:	bd30      	pop	{r4, r5, pc}
 800a822:	4770      	bx	lr
 800a824:	2000fedc 	ldrdcs	pc, [r0], -ip
 800a828:	200000fc 	strdcs	r0, [r0], -ip
 800a82c:	08016be7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, fp, sp, lr}

0800a830 <Display::Status(Display7SegmentMessage)>:
 800a830:	7c43      	ldrb	r3, [r0, #17]
 800a832:	b1bb      	cbz	r3, 800a864 <Display::Status(Display7SegmentMessage)+0x34>
 800a834:	b513      	push	{r0, r1, r4, lr}
 800a836:	2312      	movs	r3, #18
 800a838:	43c9      	mvns	r1, r1
 800a83a:	4604      	mov	r4, r0
 800a83c:	f88d 3004 	strb.w	r3, [sp, #4]
 800a840:	7a00      	ldrb	r0, [r0, #8]
 800a842:	f88d 1006 	strb.w	r1, [sp, #6]
 800a846:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800a84a:	f88d 3005 	strb.w	r3, [sp, #5]
 800a84e:	f00b fa25 	bl	8015c9c <gd32_i2c_set_address>
 800a852:	68e0      	ldr	r0, [r4, #12]
 800a854:	f00b fa1a 	bl	8015c8c <gd32_i2c_set_baudrate>
 800a858:	2103      	movs	r1, #3
 800a85a:	a801      	add	r0, sp, #4
 800a85c:	f00b fa24 	bl	8015ca8 <gd32_i2c_write>
 800a860:	b002      	add	sp, #8
 800a862:	bd10      	pop	{r4, pc}
 800a864:	4770      	bx	lr
	...

0800a868 <RemoteConfig::HandleDisplaySet()>:
 800a868:	b508      	push	{r3, lr}
 800a86a:	69c3      	ldr	r3, [r0, #28]
 800a86c:	2b09      	cmp	r3, #9
 800a86e:	d10a      	bne.n	800a886 <RemoteConfig::HandleDisplaySet()+0x1e>
 800a870:	4b05      	ldr	r3, [pc, #20]	; (800a888 <RemoteConfig::HandleDisplaySet()+0x20>)
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	7a59      	ldrb	r1, [r3, #9]
 800a876:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800a87a:	4259      	negs	r1, r3
 800a87c:	4159      	adcs	r1, r3
 800a87e:	4b03      	ldr	r3, [pc, #12]	; (800a88c <RemoteConfig::HandleDisplaySet()+0x24>)
 800a880:	6818      	ldr	r0, [r3, #0]
 800a882:	f7fe fd89 	bl	8009398 <Display::SetSleep(bool)>
 800a886:	bd08      	pop	{r3, pc}
 800a888:	200000fc 	strdcs	r0, [r0], -ip
 800a88c:	2000fdd4 	ldrdcs	pc, [r0], -r4

0800a890 <RemoteConfig::HandleTftpSet()>:
 800a890:	69c3      	ldr	r3, [r0, #28]
 800a892:	2b06      	cmp	r3, #6
 800a894:	d127      	bne.n	800a8e6 <RemoteConfig::HandleTftpSet()+0x56>
 800a896:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a898:	4b13      	ldr	r3, [pc, #76]	; (800a8e8 <RemoteConfig::HandleTftpSet()+0x58>)
 800a89a:	4d14      	ldr	r5, [pc, #80]	; (800a8ec <RemoteConfig::HandleTftpSet()+0x5c>)
 800a89c:	681b      	ldr	r3, [r3, #0]
 800a89e:	799b      	ldrb	r3, [r3, #6]
 800a8a0:	2b30      	cmp	r3, #48	; 0x30
 800a8a2:	bf14      	ite	ne
 800a8a4:	2301      	movne	r3, #1
 800a8a6:	2300      	moveq	r3, #0
 800a8a8:	4604      	mov	r4, r0
 800a8aa:	f880 3020 	strb.w	r3, [r0, #32]
 800a8ae:	6828      	ldr	r0, [r5, #0]
 800a8b0:	d012      	beq.n	800a8d8 <RemoteConfig::HandleTftpSet()+0x48>
 800a8b2:	2100      	movs	r1, #0
 800a8b4:	f7fe fd70 	bl	8009398 <Display::SetSleep(bool)>
 800a8b8:	6828      	ldr	r0, [r5, #0]
 800a8ba:	490d      	ldr	r1, [pc, #52]	; (800a8f0 <RemoteConfig::HandleTftpSet()+0x60>)
 800a8bc:	9001      	str	r0, [sp, #4]
 800a8be:	f7fe fd0d 	bl	80092dc <Display::TextStatus(char const*)>
 800a8c2:	f244 0171 	movw	r1, #16497	; 0x4071
 800a8c6:	9801      	ldr	r0, [sp, #4]
 800a8c8:	f7ff ffb2 	bl	800a830 <Display::Status(Display7SegmentMessage)>
 800a8cc:	4620      	mov	r0, r4
 800a8ce:	b003      	add	sp, #12
 800a8d0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a8d4:	f000 bcb6 	b.w	800b244 <RemoteConfig::PlatformHandleTftpSet()>
 800a8d8:	4906      	ldr	r1, [pc, #24]	; (800a8f4 <RemoteConfig::HandleTftpSet()+0x64>)
 800a8da:	9001      	str	r0, [sp, #4]
 800a8dc:	f7fe fcfe 	bl	80092dc <Display::TextStatus(char const*)>
 800a8e0:	f248 0171 	movw	r1, #32881	; 0x8071
 800a8e4:	e7ef      	b.n	800a8c6 <RemoteConfig::HandleTftpSet()+0x36>
 800a8e6:	4770      	bx	lr
 800a8e8:	200000fc 	strdcs	r0, [r0], -ip
 800a8ec:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800a8f0:	08016bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, sp, lr}
 800a8f4:	08016c06 	stmdaeq	r1, {r1, r2, sl, fp, sp, lr}

0800a8f8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a8f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a8fc:	2500      	movs	r5, #0
 800a8fe:	461f      	mov	r7, r3
 800a900:	6083      	str	r3, [r0, #8]
 800a902:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a906:	4e13      	ldr	r6, [pc, #76]	; (800a954 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 800a908:	f8df a050 	ldr.w	sl, [pc, #80]	; 800a95c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 800a90c:	60c5      	str	r5, [r0, #12]
 800a90e:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800a912:	4b11      	ldr	r3, [pc, #68]	; (800a958 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 800a914:	8205      	strh	r5, [r0, #16]
 800a916:	e9c0 1200 	strd	r1, r2, [r0]
 800a91a:	4604      	mov	r4, r0
 800a91c:	6018      	str	r0, [r3, #0]
 800a91e:	4689      	mov	r9, r1
 800a920:	61c5      	str	r5, [r0, #28]
 800a922:	f880 5020 	strb.w	r5, [r0, #32]
 800a926:	4631      	mov	r1, r6
 800a928:	f8da 0000 	ldr.w	r0, [sl]
 800a92c:	4690      	mov	r8, r2
 800a92e:	f006 fc56 	bl	80111de <Network::MacAddressCopyTo(unsigned char*)>
 800a932:	f8da 0000 	ldr.w	r0, [sl]
 800a936:	f886 9006 	strb.w	r9, [r6, #6]
 800a93a:	f642 1105 	movw	r1, #10501	; 0x2905
 800a93e:	f886 8007 	strb.w	r8, [r6, #7]
 800a942:	7237      	strb	r7, [r6, #8]
 800a944:	7275      	strb	r5, [r6, #9]
 800a946:	f006 fc44 	bl	80111d2 <Network::Begin(unsigned short)>
 800a94a:	6160      	str	r0, [r4, #20]
 800a94c:	4620      	mov	r0, r4
 800a94e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a952:	bf00      	nop
 800a954:	20000100 	andcs	r0, r0, r0, lsl #2
 800a958:	20000124 	andcs	r0, r0, r4, lsr #2
 800a95c:	2000fadc 	ldrdcs	pc, [r0], -ip

0800a960 <RemoteConfig::GetStringNode() const>:
 800a960:	4b03      	ldr	r3, [pc, #12]	; (800a970 <RemoteConfig::GetStringNode() const+0x10>)
 800a962:	7998      	ldrb	r0, [r3, #6]
 800a964:	4b03      	ldr	r3, [pc, #12]	; (800a974 <RemoteConfig::GetStringNode() const+0x14>)
 800a966:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a96a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a96e:	4770      	bx	lr
 800a970:	20000100 	andcs	r0, r0, r0, lsl #2
 800a974:	08016c7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, sp, lr}

0800a978 <RemoteConfig::GetStringOutput() const>:
 800a978:	4b03      	ldr	r3, [pc, #12]	; (800a988 <RemoteConfig::GetStringOutput() const+0x10>)
 800a97a:	79d8      	ldrb	r0, [r3, #7]
 800a97c:	4b03      	ldr	r3, [pc, #12]	; (800a98c <RemoteConfig::GetStringOutput() const+0x14>)
 800a97e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a982:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a986:	4770      	bx	lr
 800a988:	20000100 	andcs	r0, r0, r0, lsl #2
 800a98c:	08016d42 	stmdaeq	r1, {r1, r6, r8, sl, fp, sp, lr}

0800a990 <RemoteConfig::SetDisable(bool)>:
 800a990:	b538      	push	{r3, r4, r5, lr}
 800a992:	7b03      	ldrb	r3, [r0, #12]
 800a994:	4604      	mov	r4, r0
 800a996:	b161      	cbz	r1, 800a9b2 <RemoteConfig::SetDisable(bool)+0x22>
 800a998:	b953      	cbnz	r3, 800a9b0 <RemoteConfig::SetDisable(bool)+0x20>
 800a99a:	4b0c      	ldr	r3, [pc, #48]	; (800a9cc <RemoteConfig::SetDisable(bool)+0x3c>)
 800a99c:	f642 1105 	movw	r1, #10501	; 0x2905
 800a9a0:	6818      	ldr	r0, [r3, #0]
 800a9a2:	f006 fc19 	bl	80111d8 <Network::End(unsigned short)>
 800a9a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a9aa:	6163      	str	r3, [r4, #20]
 800a9ac:	2301      	movs	r3, #1
 800a9ae:	7323      	strb	r3, [r4, #12]
 800a9b0:	bd38      	pop	{r3, r4, r5, pc}
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	d0fc      	beq.n	800a9b0 <RemoteConfig::SetDisable(bool)+0x20>
 800a9b6:	4b05      	ldr	r3, [pc, #20]	; (800a9cc <RemoteConfig::SetDisable(bool)+0x3c>)
 800a9b8:	460d      	mov	r5, r1
 800a9ba:	6818      	ldr	r0, [r3, #0]
 800a9bc:	f642 1105 	movw	r1, #10501	; 0x2905
 800a9c0:	f006 fc07 	bl	80111d2 <Network::Begin(unsigned short)>
 800a9c4:	7325      	strb	r5, [r4, #12]
 800a9c6:	6160      	str	r0, [r4, #20]
 800a9c8:	e7f2      	b.n	800a9b0 <RemoteConfig::SetDisable(bool)+0x20>
 800a9ca:	bf00      	nop
 800a9cc:	2000fadc 	ldrdcs	pc, [r0], -ip

0800a9d0 <RemoteConfig::SetDisplayName(char const*)>:
 800a9d0:	4809      	ldr	r0, [pc, #36]	; (800a9f8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a9d2:	b508      	push	{r3, lr}
 800a9d4:	2217      	movs	r2, #23
 800a9d6:	1e4b      	subs	r3, r1, #1
 800a9d8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a9dc:	b911      	cbnz	r1, 800a9e4 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800a9de:	f009 fce5 	bl	80143ac <memset>
 800a9e2:	e003      	b.n	800a9ec <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a9e4:	3a01      	subs	r2, #1
 800a9e6:	f800 1b01 	strb.w	r1, [r0], #1
 800a9ea:	d1f5      	bne.n	800a9d8 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a9ec:	4b03      	ldr	r3, [pc, #12]	; (800a9fc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a9ee:	2200      	movs	r2, #0
 800a9f0:	f883 2020 	strb.w	r2, [r3, #32]
 800a9f4:	bd08      	pop	{r3, pc}
 800a9f6:	bf00      	nop
 800a9f8:	20000109 	andcs	r0, r0, r9, lsl #2
 800a9fc:	20000100 	andcs	r0, r0, r0, lsl #2

0800aa00 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800aa00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa02:	4f2a      	ldr	r7, [pc, #168]	; (800aaac <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800aa04:	b085      	sub	sp, #20
 800aa06:	4604      	mov	r4, r0
 800aa08:	4616      	mov	r6, r2
 800aa0a:	460d      	mov	r5, r1
 800aa0c:	b9a9      	cbnz	r1, 800aa3a <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800aa0e:	6839      	ldr	r1, [r7, #0]
 800aa10:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800aa14:	aa03      	add	r2, sp, #12
 800aa16:	3105      	adds	r1, #5
 800aa18:	9303      	str	r3, [sp, #12]
 800aa1a:	f000 fbe9 	bl	800b1f0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa1e:	1e03      	subs	r3, r0, #0
 800aa20:	da1b      	bge.n	800aa5a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800aa22:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa26:	9300      	str	r3, [sp, #0]
 800aa28:	4921      	ldr	r1, [pc, #132]	; (800aab0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800aa2a:	69a3      	ldr	r3, [r4, #24]
 800aa2c:	7d20      	ldrb	r0, [r4, #20]
 800aa2e:	220b      	movs	r2, #11
 800aa30:	f005 ff02 	bl	8010838 <udp_send>
 800aa34:	200c      	movs	r0, #12
 800aa36:	b005      	add	sp, #20
 800aa38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa3a:	9203      	str	r2, [sp, #12]
 800aa3c:	aa03      	add	r2, sp, #12
 800aa3e:	6039      	str	r1, [r7, #0]
 800aa40:	f000 fbd6 	bl	800b1f0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa44:	1e03      	subs	r3, r0, #0
 800aa46:	da08      	bge.n	800aa5a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800aa48:	2e0b      	cmp	r6, #11
 800aa4a:	4632      	mov	r2, r6
 800aa4c:	4918      	ldr	r1, [pc, #96]	; (800aab0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800aa4e:	bf28      	it	cs
 800aa50:	220b      	movcs	r2, #11
 800aa52:	4628      	mov	r0, r5
 800aa54:	f009 fc88 	bl	8014368 <memcpy>
 800aa58:	e7ec      	b.n	800aa34 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800aa5a:	4916      	ldr	r1, [pc, #88]	; (800aab4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800aa5c:	221c      	movs	r2, #28
 800aa5e:	4353      	muls	r3, r2
 800aa60:	18ca      	adds	r2, r1, r3
 800aa62:	58cb      	ldr	r3, [r1, r3]
 800aa64:	6852      	ldr	r2, [r2, #4]
 800aa66:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800aa6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aa6e:	07d2      	lsls	r2, r2, #31
 800aa70:	bf48      	it	mi
 800aa72:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800aa76:	a903      	add	r1, sp, #12
 800aa78:	bf48      	it	mi
 800aa7a:	58d3      	ldrmi	r3, [r2, r3]
 800aa7c:	4798      	blx	r3
 800aa7e:	b95d      	cbnz	r5, 800aa98 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800aa80:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa84:	9300      	str	r3, [sp, #0]
 800aa86:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800aa8a:	69a3      	ldr	r3, [r4, #24]
 800aa8c:	6839      	ldr	r1, [r7, #0]
 800aa8e:	7d20      	ldrb	r0, [r4, #20]
 800aa90:	f005 fed2 	bl	8010838 <udp_send>
 800aa94:	9803      	ldr	r0, [sp, #12]
 800aa96:	e7ce      	b.n	800aa36 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800aa98:	9a03      	ldr	r2, [sp, #12]
 800aa9a:	6839      	ldr	r1, [r7, #0]
 800aa9c:	42b2      	cmp	r2, r6
 800aa9e:	bf28      	it	cs
 800aaa0:	4632      	movcs	r2, r6
 800aaa2:	4628      	mov	r0, r5
 800aaa4:	f009 fc6b 	bl	801437e <memmove>
 800aaa8:	e7f4      	b.n	800aa94 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800aaaa:	bf00      	nop
 800aaac:	200000fc 	strdcs	r0, [r0], -ip
 800aab0:	08016c19 	stmdaeq	r1, {r0, r3, r4, sl, fp, sp, lr}
 800aab4:	08016f00 	stmdaeq	r1, {r8, r9, sl, fp, sp, lr}

0800aab8 <RemoteConfig::HandleGetNoParams()>:
 800aab8:	2200      	movs	r2, #0
 800aaba:	4611      	mov	r1, r2
 800aabc:	f7ff bfa0 	b.w	800aa00 <RemoteConfig::HandleGet(void*, unsigned int)>

0800aac0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800aac0:	b500      	push	{lr}
 800aac2:	4a09      	ldr	r2, [pc, #36]	; (800aae8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800aac4:	b08d      	sub	sp, #52	; 0x34
 800aac6:	a803      	add	r0, sp, #12
 800aac8:	9101      	str	r1, [sp, #4]
 800aaca:	6811      	ldr	r1, [r2, #0]
 800aacc:	f000 f9ec 	bl	800aea8 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800aad0:	4906      	ldr	r1, [pc, #24]	; (800aaec <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x2c>)
 800aad2:	9b01      	ldr	r3, [sp, #4]
 800aad4:	6809      	ldr	r1, [r1, #0]
 800aad6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aada:	a803      	add	r0, sp, #12
 800aadc:	f000 fb08 	bl	800b0f0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800aae0:	b00d      	add	sp, #52	; 0x34
 800aae2:	f85d fb04 	ldr.w	pc, [sp], #4
 800aae6:	bf00      	nop
 800aae8:	2000fdc4 	andcs	pc, r0, r4, asr #27
 800aaec:	200000fc 	strdcs	r0, [r0], -ip

0800aaf0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800aaf0:	b500      	push	{lr}
 800aaf2:	4a09      	ldr	r2, [pc, #36]	; (800ab18 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800aaf4:	b09d      	sub	sp, #116	; 0x74
 800aaf6:	a803      	add	r0, sp, #12
 800aaf8:	9101      	str	r1, [sp, #4]
 800aafa:	6811      	ldr	r1, [r2, #0]
 800aafc:	f006 fe62 	bl	80117c4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ab00:	4906      	ldr	r1, [pc, #24]	; (800ab1c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x2c>)
 800ab02:	9b01      	ldr	r3, [sp, #4]
 800ab04:	6809      	ldr	r1, [r1, #0]
 800ab06:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab0a:	a803      	add	r0, sp, #12
 800ab0c:	f007 f834 	bl	8011b78 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800ab10:	b01d      	add	sp, #116	; 0x74
 800ab12:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab16:	bf00      	nop
 800ab18:	2000fdc0 	andcs	pc, r0, r0, asr #27
 800ab1c:	200000fc 	strdcs	r0, [r0], -ip

0800ab20 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800ab20:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab22:	4a08      	ldr	r2, [pc, #32]	; (800ab44 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800ab24:	9101      	str	r1, [sp, #4]
 800ab26:	a802      	add	r0, sp, #8
 800ab28:	6811      	ldr	r1, [r2, #0]
 800ab2a:	f002 fe31 	bl	800d790 <DmxParams::DmxParams(DmxParamsStore*)>
 800ab2e:	4906      	ldr	r1, [pc, #24]	; (800ab48 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800ab30:	9b01      	ldr	r3, [sp, #4]
 800ab32:	6809      	ldr	r1, [r1, #0]
 800ab34:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab38:	a802      	add	r0, sp, #8
 800ab3a:	f002 ff4b 	bl	800d9d4 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800ab3e:	b007      	add	sp, #28
 800ab40:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab44:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800ab48:	200000fc 	strdcs	r0, [r0], -ip

0800ab4c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800ab4c:	b500      	push	{lr}
 800ab4e:	4a09      	ldr	r2, [pc, #36]	; (800ab74 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800ab50:	b093      	sub	sp, #76	; 0x4c
 800ab52:	a803      	add	r0, sp, #12
 800ab54:	9101      	str	r1, [sp, #4]
 800ab56:	6811      	ldr	r1, [r2, #0]
 800ab58:	f003 fcfe 	bl	800e558 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ab5c:	4906      	ldr	r1, [pc, #24]	; (800ab78 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x2c>)
 800ab5e:	9b01      	ldr	r3, [sp, #4]
 800ab60:	6809      	ldr	r1, [r1, #0]
 800ab62:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab66:	a803      	add	r0, sp, #12
 800ab68:	f004 f818 	bl	800eb9c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 800ab6c:	b013      	add	sp, #76	; 0x4c
 800ab6e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab72:	bf00      	nop
 800ab74:	2000fdc8 	andcs	pc, r0, r8, asr #27
 800ab78:	200000fc 	strdcs	r0, [r0], -ip

0800ab7c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800ab7c:	b500      	push	{lr}
 800ab7e:	4a09      	ldr	r2, [pc, #36]	; (800aba4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800ab80:	b08d      	sub	sp, #52	; 0x34
 800ab82:	a802      	add	r0, sp, #8
 800ab84:	9101      	str	r1, [sp, #4]
 800ab86:	6811      	ldr	r1, [r2, #0]
 800ab88:	f007 fd98 	bl	80126bc <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ab8c:	4906      	ldr	r1, [pc, #24]	; (800aba8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x2c>)
 800ab8e:	9b01      	ldr	r3, [sp, #4]
 800ab90:	6809      	ldr	r1, [r1, #0]
 800ab92:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab96:	a802      	add	r0, sp, #8
 800ab98:	f007 feca 	bl	8012930 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800ab9c:	b00d      	add	sp, #52	; 0x34
 800ab9e:	f85d fb04 	ldr.w	pc, [sp], #4
 800aba2:	bf00      	nop
 800aba4:	2000fdb8 			; <UNDEFINED> instruction: 0x2000fdb8
 800aba8:	200000fc 	strdcs	r0, [r0], -ip

0800abac <RemoteConfig::HandleSet(void*, unsigned int)>:
 800abac:	b530      	push	{r4, r5, lr}
 800abae:	b085      	sub	sp, #20
 800abb0:	4604      	mov	r4, r0
 800abb2:	9201      	str	r2, [sp, #4]
 800abb4:	b9d1      	cbnz	r1, 800abec <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800abb6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800abba:	9303      	str	r3, [sp, #12]
 800abbc:	4b19      	ldr	r3, [pc, #100]	; (800ac24 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800abbe:	6819      	ldr	r1, [r3, #0]
 800abc0:	aa03      	add	r2, sp, #12
 800abc2:	3101      	adds	r1, #1
 800abc4:	f000 fb14 	bl	800b1f0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800abc8:	2800      	cmp	r0, #0
 800abca:	db0d      	blt.n	800abe8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800abcc:	4b16      	ldr	r3, [pc, #88]	; (800ac28 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 800abce:	221c      	movs	r2, #28
 800abd0:	fb02 3300 	mla	r3, r2, r0, r3
 800abd4:	68da      	ldr	r2, [r3, #12]
 800abd6:	689b      	ldr	r3, [r3, #8]
 800abd8:	1051      	asrs	r1, r2, #1
 800abda:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800abde:	07d2      	lsls	r2, r2, #31
 800abe0:	bf44      	itt	mi
 800abe2:	5862      	ldrmi	r2, [r4, r1]
 800abe4:	58d3      	ldrmi	r3, [r2, r3]
 800abe6:	4798      	blx	r3
 800abe8:	b005      	add	sp, #20
 800abea:	bd30      	pop	{r4, r5, pc}
 800abec:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800abf0:	d8fa      	bhi.n	800abe8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800abf2:	4b0e      	ldr	r3, [pc, #56]	; (800ac2c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800abf4:	781b      	ldrb	r3, [r3, #0]
 800abf6:	460d      	mov	r5, r1
 800abf8:	07d9      	lsls	r1, r3, #31
 800abfa:	d50b      	bpl.n	800ac14 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800abfc:	782b      	ldrb	r3, [r5, #0]
 800abfe:	2b7b      	cmp	r3, #123	; 0x7b
 800ac00:	d108      	bne.n	800ac14 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ac02:	1e51      	subs	r1, r2, #1
 800ac04:	b289      	uxth	r1, r1
 800ac06:	2200      	movs	r2, #0
 800ac08:	4628      	mov	r0, r5
 800ac0a:	f008 fbd5 	bl	80133b8 <properties::convert_json_file(char*, unsigned short, bool)>
 800ac0e:	1e02      	subs	r2, r0, #0
 800ac10:	ddea      	ble.n	800abe8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ac12:	b292      	uxth	r2, r2
 800ac14:	4b03      	ldr	r3, [pc, #12]	; (800ac24 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800ac16:	61e2      	str	r2, [r4, #28]
 800ac18:	601d      	str	r5, [r3, #0]
 800ac1a:	aa01      	add	r2, sp, #4
 800ac1c:	1c69      	adds	r1, r5, #1
 800ac1e:	4620      	mov	r0, r4
 800ac20:	e7d0      	b.n	800abc4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ac22:	bf00      	nop
 800ac24:	200000fc 	strdcs	r0, [r0], -ip
 800ac28:	08016f00 	stmdaeq	r1, {r8, r9, sl, fp, sp, lr}
 800ac2c:	2000fdd0 	ldrdcs	pc, [r0], -r0

0800ac30 <RemoteConfig::Run()>:
 800ac30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ac34:	7b05      	ldrb	r5, [r0, #12]
 800ac36:	2d00      	cmp	r5, #0
 800ac38:	d156      	bne.n	800ace8 <RemoteConfig::Run()+0xb8>
 800ac3a:	4e45      	ldr	r6, [pc, #276]	; (800ad50 <RemoteConfig::Run()+0x120>)
 800ac3c:	4604      	mov	r4, r0
 800ac3e:	f100 0218 	add.w	r2, r0, #24
 800ac42:	f10d 030e 	add.w	r3, sp, #14
 800ac46:	7d00      	ldrb	r0, [r0, #20]
 800ac48:	4631      	mov	r1, r6
 800ac4a:	f005 fdcf 	bl	80107ec <udp_recv2>
 800ac4e:	2803      	cmp	r0, #3
 800ac50:	61e0      	str	r0, [r4, #28]
 800ac52:	d949      	bls.n	800ace8 <RemoteConfig::Run()+0xb8>
 800ac54:	1e43      	subs	r3, r0, #1
 800ac56:	6831      	ldr	r1, [r6, #0]
 800ac58:	5cca      	ldrb	r2, [r1, r3]
 800ac5a:	2a0a      	cmp	r2, #10
 800ac5c:	bf18      	it	ne
 800ac5e:	4603      	movne	r3, r0
 800ac60:	61e3      	str	r3, [r4, #28]
 800ac62:	7808      	ldrb	r0, [r1, #0]
 800ac64:	283f      	cmp	r0, #63	; 0x3f
 800ac66:	d137      	bne.n	800acd8 <RemoteConfig::Run()+0xa8>
 800ac68:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 800ad68 <RemoteConfig::Run()+0x138>
 800ac6c:	3b01      	subs	r3, #1
 800ac6e:	61e3      	str	r3, [r4, #28]
 800ac70:	462a      	mov	r2, r5
 800ac72:	4667      	mov	r7, ip
 800ac74:	f89c 500e 	ldrb.w	r5, [ip, #14]
 800ac78:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800ac7c:	b16d      	cbz	r5, 800ac9a <RemoteConfig::Run()+0x6a>
 800ac7e:	4283      	cmp	r3, r0
 800ac80:	d80d      	bhi.n	800ac9e <RemoteConfig::Run()+0x6e>
 800ac82:	3201      	adds	r2, #1
 800ac84:	2a09      	cmp	r2, #9
 800ac86:	f10c 0c10 	add.w	ip, ip, #16
 800ac8a:	d1f3      	bne.n	800ac74 <RemoteConfig::Run()+0x44>
 800ac8c:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac90:	9300      	str	r3, [sp, #0]
 800ac92:	69a3      	ldr	r3, [r4, #24]
 800ac94:	492f      	ldr	r1, [pc, #188]	; (800ad54 <RemoteConfig::Run()+0x124>)
 800ac96:	2208      	movs	r2, #8
 800ac98:	e04e      	b.n	800ad38 <RemoteConfig::Run()+0x108>
 800ac9a:	4283      	cmp	r3, r0
 800ac9c:	d1f1      	bne.n	800ac82 <RemoteConfig::Run()+0x52>
 800ac9e:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800aca2:	460e      	mov	r6, r1
 800aca4:	3d01      	subs	r5, #1
 800aca6:	4408      	add	r0, r1
 800aca8:	4286      	cmp	r6, r0
 800acaa:	d10b      	bne.n	800acc4 <RemoteConfig::Run()+0x94>
 800acac:	0113      	lsls	r3, r2, #4
 800acae:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800acb2:	58fb      	ldr	r3, [r7, r3]
 800acb4:	6852      	ldr	r2, [r2, #4]
 800acb6:	1051      	asrs	r1, r2, #1
 800acb8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800acbc:	07d2      	lsls	r2, r2, #31
 800acbe:	d408      	bmi.n	800acd2 <RemoteConfig::Run()+0xa2>
 800acc0:	4798      	blx	r3
 800acc2:	e011      	b.n	800ace8 <RemoteConfig::Run()+0xb8>
 800acc4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800acc8:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800accc:	45f0      	cmp	r8, lr
 800acce:	d0eb      	beq.n	800aca8 <RemoteConfig::Run()+0x78>
 800acd0:	e7d7      	b.n	800ac82 <RemoteConfig::Run()+0x52>
 800acd2:	5862      	ldr	r2, [r4, r1]
 800acd4:	58d3      	ldr	r3, [r2, r3]
 800acd6:	e7f3      	b.n	800acc0 <RemoteConfig::Run()+0x90>
 800acd8:	7b62      	ldrb	r2, [r4, #13]
 800acda:	b92a      	cbnz	r2, 800ace8 <RemoteConfig::Run()+0xb8>
 800acdc:	2823      	cmp	r0, #35	; 0x23
 800acde:	d106      	bne.n	800acee <RemoteConfig::Run()+0xbe>
 800ace0:	4611      	mov	r1, r2
 800ace2:	4620      	mov	r0, r4
 800ace4:	f7ff ff62 	bl	800abac <RemoteConfig::HandleSet(void*, unsigned int)>
 800ace8:	b004      	add	sp, #16
 800acea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800acee:	2821      	cmp	r0, #33	; 0x21
 800acf0:	d1fa      	bne.n	800ace8 <RemoteConfig::Run()+0xb8>
 800acf2:	3b01      	subs	r3, #1
 800acf4:	2b05      	cmp	r3, #5
 800acf6:	61e3      	str	r3, [r4, #28]
 800acf8:	d918      	bls.n	800ad2c <RemoteConfig::Run()+0xfc>
 800acfa:	4d17      	ldr	r5, [pc, #92]	; (800ad58 <RemoteConfig::Run()+0x128>)
 800acfc:	460a      	mov	r2, r1
 800acfe:	f101 0c05 	add.w	ip, r1, #5
 800ad02:	4608      	mov	r0, r1
 800ad04:	4560      	cmp	r0, ip
 800ad06:	d01b      	beq.n	800ad40 <RemoteConfig::Run()+0x110>
 800ad08:	f815 6b01 	ldrb.w	r6, [r5], #1
 800ad0c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800ad10:	42b7      	cmp	r7, r6
 800ad12:	d0f7      	beq.n	800ad04 <RemoteConfig::Run()+0xd4>
 800ad14:	2b08      	cmp	r3, #8
 800ad16:	d909      	bls.n	800ad2c <RemoteConfig::Run()+0xfc>
 800ad18:	4b10      	ldr	r3, [pc, #64]	; (800ad5c <RemoteConfig::Run()+0x12c>)
 800ad1a:	3108      	adds	r1, #8
 800ad1c:	428a      	cmp	r2, r1
 800ad1e:	d015      	beq.n	800ad4c <RemoteConfig::Run()+0x11c>
 800ad20:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ad24:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800ad28:	4285      	cmp	r5, r0
 800ad2a:	d0f7      	beq.n	800ad1c <RemoteConfig::Run()+0xec>
 800ad2c:	f642 1305 	movw	r3, #10501	; 0x2905
 800ad30:	9300      	str	r3, [sp, #0]
 800ad32:	69a3      	ldr	r3, [r4, #24]
 800ad34:	490a      	ldr	r1, [pc, #40]	; (800ad60 <RemoteConfig::Run()+0x130>)
 800ad36:	2208      	movs	r2, #8
 800ad38:	7d20      	ldrb	r0, [r4, #20]
 800ad3a:	f005 fd7d 	bl	8010838 <udp_send>
 800ad3e:	e7d3      	b.n	800ace8 <RemoteConfig::Run()+0xb8>
 800ad40:	2300      	movs	r3, #0
 800ad42:	4a08      	ldr	r2, [pc, #32]	; (800ad64 <RemoteConfig::Run()+0x134>)
 800ad44:	011b      	lsls	r3, r3, #4
 800ad46:	4620      	mov	r0, r4
 800ad48:	58d3      	ldr	r3, [r2, r3]
 800ad4a:	e7b9      	b.n	800acc0 <RemoteConfig::Run()+0x90>
 800ad4c:	2301      	movs	r3, #1
 800ad4e:	e7f8      	b.n	800ad42 <RemoteConfig::Run()+0x112>
 800ad50:	200000fc 	strdcs	r0, [r0], -ip
 800ad54:	08016c3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, fp, sp, lr}
 800ad58:	08016c25 	stmdaeq	r1, {r0, r2, r5, sl, fp, sp, lr}
 800ad5c:	08016c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, sp, lr}
 800ad60:	08016c34 	stmdaeq	r1, {r2, r4, r5, sl, fp, sp, lr}
 800ad64:	08016e64 	stmdaeq	r1, {r2, r5, r6, r9, sl, fp, sp, lr}
 800ad68:	08016dd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, sp, lr}

0800ad6c <RemoteConfig::HandleSetRconfig()>:
 800ad6c:	b510      	push	{r4, lr}
 800ad6e:	4b09      	ldr	r3, [pc, #36]	; (800ad94 <RemoteConfig::HandleSetRconfig()+0x28>)
 800ad70:	b08a      	sub	sp, #40	; 0x28
 800ad72:	4604      	mov	r4, r0
 800ad74:	6819      	ldr	r1, [r3, #0]
 800ad76:	a801      	add	r0, sp, #4
 800ad78:	f000 f896 	bl	800aea8 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ad7c:	4b06      	ldr	r3, [pc, #24]	; (800ad98 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800ad7e:	69e2      	ldr	r2, [r4, #28]
 800ad80:	6819      	ldr	r1, [r3, #0]
 800ad82:	a801      	add	r0, sp, #4
 800ad84:	f000 f8a6 	bl	800aed4 <RemoteConfigParams::Load(char const*, unsigned int)>
 800ad88:	4621      	mov	r1, r4
 800ad8a:	a801      	add	r0, sp, #4
 800ad8c:	f000 f9bd 	bl	800b10a <RemoteConfigParams::Set(RemoteConfig*)>
 800ad90:	b00a      	add	sp, #40	; 0x28
 800ad92:	bd10      	pop	{r4, pc}
 800ad94:	2000fdc4 	andcs	pc, r0, r4, asr #27
 800ad98:	200000fc 	strdcs	r0, [r0], -ip

0800ad9c <RemoteConfig::HandleSetNetworkTxt()>:
 800ad9c:	b510      	push	{r4, lr}
 800ad9e:	4b07      	ldr	r3, [pc, #28]	; (800adbc <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800ada0:	b09a      	sub	sp, #104	; 0x68
 800ada2:	6819      	ldr	r1, [r3, #0]
 800ada4:	4604      	mov	r4, r0
 800ada6:	a801      	add	r0, sp, #4
 800ada8:	f006 fd0c 	bl	80117c4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800adac:	4b04      	ldr	r3, [pc, #16]	; (800adc0 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800adae:	69e2      	ldr	r2, [r4, #28]
 800adb0:	6819      	ldr	r1, [r3, #0]
 800adb2:	a801      	add	r0, sp, #4
 800adb4:	f006 fd1e 	bl	80117f4 <NetworkParams::Load(char const*, unsigned int)>
 800adb8:	b01a      	add	sp, #104	; 0x68
 800adba:	bd10      	pop	{r4, pc}
 800adbc:	2000fdc0 	andcs	pc, r0, r0, asr #27
 800adc0:	200000fc 	strdcs	r0, [r0], -ip

0800adc4 <RemoteConfig::HandleSetParamsTxt()>:
 800adc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800adc6:	4b07      	ldr	r3, [pc, #28]	; (800ade4 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800adc8:	4604      	mov	r4, r0
 800adca:	6819      	ldr	r1, [r3, #0]
 800adcc:	4668      	mov	r0, sp
 800adce:	f002 fcdf 	bl	800d790 <DmxParams::DmxParams(DmxParamsStore*)>
 800add2:	4b05      	ldr	r3, [pc, #20]	; (800ade8 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800add4:	69e2      	ldr	r2, [r4, #28]
 800add6:	6819      	ldr	r1, [r3, #0]
 800add8:	4668      	mov	r0, sp
 800adda:	f002 fcf1 	bl	800d7c0 <DmxParams::Load(char const*, unsigned int)>
 800adde:	b004      	add	sp, #16
 800ade0:	bd10      	pop	{r4, pc}
 800ade2:	bf00      	nop
 800ade4:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800ade8:	200000fc 	strdcs	r0, [r0], -ip

0800adec <RemoteConfig::HandleSetDevicesTxt()>:
 800adec:	b510      	push	{r4, lr}
 800adee:	4b07      	ldr	r3, [pc, #28]	; (800ae0c <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800adf0:	b090      	sub	sp, #64	; 0x40
 800adf2:	6819      	ldr	r1, [r3, #0]
 800adf4:	4604      	mov	r4, r0
 800adf6:	a801      	add	r0, sp, #4
 800adf8:	f003 fbae 	bl	800e558 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800adfc:	4b04      	ldr	r3, [pc, #16]	; (800ae10 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800adfe:	69e2      	ldr	r2, [r4, #28]
 800ae00:	6819      	ldr	r1, [r3, #0]
 800ae02:	a801      	add	r0, sp, #4
 800ae04:	f003 fbd4 	bl	800e5b0 <PixelDmxParams::Load(char const*, unsigned int)>
 800ae08:	b010      	add	sp, #64	; 0x40
 800ae0a:	bd10      	pop	{r4, pc}
 800ae0c:	2000fdc8 	andcs	pc, r0, r8, asr #27
 800ae10:	200000fc 	strdcs	r0, [r0], -ip

0800ae14 <RemoteConfig::HandleSetDisplayTxt()>:
 800ae14:	b510      	push	{r4, lr}
 800ae16:	4b07      	ldr	r3, [pc, #28]	; (800ae34 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800ae18:	b08a      	sub	sp, #40	; 0x28
 800ae1a:	6819      	ldr	r1, [r3, #0]
 800ae1c:	4604      	mov	r4, r0
 800ae1e:	4668      	mov	r0, sp
 800ae20:	f007 fc4c 	bl	80126bc <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ae24:	4b04      	ldr	r3, [pc, #16]	; (800ae38 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800ae26:	69e2      	ldr	r2, [r4, #28]
 800ae28:	6819      	ldr	r1, [r3, #0]
 800ae2a:	4668      	mov	r0, sp
 800ae2c:	f007 fc60 	bl	80126f0 <DisplayUdfParams::Load(char const*, unsigned int)>
 800ae30:	b00a      	add	sp, #40	; 0x28
 800ae32:	bd10      	pop	{r4, pc}
 800ae34:	2000fdb8 			; <UNDEFINED> instruction: 0x2000fdb8
 800ae38:	200000fc 	strdcs	r0, [r0], -ip

0800ae3c <RemoteConfig::HandleFactory()>:
 800ae3c:	b538      	push	{r3, r4, r5, lr}
 800ae3e:	4d05      	ldr	r5, [pc, #20]	; (800ae54 <RemoteConfig::HandleFactory()+0x18>)
 800ae40:	2400      	movs	r4, #0
 800ae42:	4621      	mov	r1, r4
 800ae44:	6828      	ldr	r0, [r5, #0]
 800ae46:	3401      	adds	r4, #1
 800ae48:	f007 fea4 	bl	8012b94 <ConfigStore::ResetSetList(configstore::Store)>
 800ae4c:	2c1c      	cmp	r4, #28
 800ae4e:	d1f8      	bne.n	800ae42 <RemoteConfig::HandleFactory()+0x6>
 800ae50:	bd38      	pop	{r3, r4, r5, pc}
 800ae52:	bf00      	nop
 800ae54:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

0800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800ae58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae5a:	460b      	mov	r3, r1
 800ae5c:	8885      	ldrh	r5, [r0, #4]
 800ae5e:	88c1      	ldrh	r1, [r0, #6]
 800ae60:	42a9      	cmp	r1, r5
 800ae62:	d214      	bcs.n	800ae8e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800ae64:	4604      	mov	r4, r0
 800ae66:	6800      	ldr	r0, [r0, #0]
 800ae68:	1a6d      	subs	r5, r5, r1
 800ae6a:	4408      	add	r0, r1
 800ae6c:	7a21      	ldrb	r1, [r4, #8]
 800ae6e:	b91a      	cbnz	r2, 800ae78 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800ae70:	b919      	cbnz	r1, 800ae7a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800ae72:	4a0a      	ldr	r2, [pc, #40]	; (800ae9c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800ae74:	9100      	str	r1, [sp, #0]
 800ae76:	e002      	b.n	800ae7e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ae78:	b159      	cbz	r1, 800ae92 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ae7a:	9200      	str	r2, [sp, #0]
 800ae7c:	4a08      	ldr	r2, [pc, #32]	; (800aea0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ae7e:	4629      	mov	r1, r5
 800ae80:	f7ff fa4a 	bl	800a318 <snprintf>
 800ae84:	4285      	cmp	r5, r0
 800ae86:	bfa2      	ittt	ge
 800ae88:	88e3      	ldrhge	r3, [r4, #6]
 800ae8a:	181b      	addge	r3, r3, r0
 800ae8c:	80e3      	strhge	r3, [r4, #6]
 800ae8e:	b003      	add	sp, #12
 800ae90:	bd30      	pop	{r4, r5, pc}
 800ae92:	2201      	movs	r2, #1
 800ae94:	9200      	str	r2, [sp, #0]
 800ae96:	4a03      	ldr	r2, [pc, #12]	; (800aea4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800ae98:	e7f1      	b.n	800ae7e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ae9a:	bf00      	nop
 800ae9c:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800aea0:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800aea4:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

0800aea8 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800aea8:	b510      	push	{r4, lr}
 800aeaa:	2220      	movs	r2, #32
 800aeac:	4604      	mov	r4, r0
 800aeae:	f840 1b04 	str.w	r1, [r0], #4
 800aeb2:	2100      	movs	r1, #0
 800aeb4:	f009 fa7a 	bl	80143ac <memset>
 800aeb8:	4620      	mov	r0, r4
 800aeba:	bd10      	pop	{r4, pc}

0800aebc <RemoteConfigParams::Load()>:
 800aebc:	b508      	push	{r3, lr}
 800aebe:	2300      	movs	r3, #0
 800aec0:	4601      	mov	r1, r0
 800aec2:	6043      	str	r3, [r0, #4]
 800aec4:	6800      	ldr	r0, [r0, #0]
 800aec6:	b120      	cbz	r0, 800aed2 <RemoteConfigParams::Load()+0x16>
 800aec8:	6803      	ldr	r3, [r0, #0]
 800aeca:	3104      	adds	r1, #4
 800aecc:	68db      	ldr	r3, [r3, #12]
 800aece:	4798      	blx	r3
 800aed0:	2001      	movs	r0, #1
 800aed2:	bd08      	pop	{r3, pc}

0800aed4 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800aed4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aed6:	2300      	movs	r3, #0
 800aed8:	6043      	str	r3, [r0, #4]
 800aeda:	4604      	mov	r4, r0
 800aedc:	460d      	mov	r5, r1
 800aede:	4616      	mov	r6, r2
 800aee0:	490a      	ldr	r1, [pc, #40]	; (800af0c <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800aee2:	4602      	mov	r2, r0
 800aee4:	4668      	mov	r0, sp
 800aee6:	f008 fbb9 	bl	801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800aeea:	4632      	mov	r2, r6
 800aeec:	4629      	mov	r1, r5
 800aeee:	4668      	mov	r0, sp
 800aef0:	f008 fbb8 	bl	8013664 <ReadConfigFile::Read(char const*, unsigned int)>
 800aef4:	4621      	mov	r1, r4
 800aef6:	f851 0b04 	ldr.w	r0, [r1], #4
 800aefa:	6803      	ldr	r3, [r0, #0]
 800aefc:	689b      	ldr	r3, [r3, #8]
 800aefe:	4798      	blx	r3
 800af00:	4668      	mov	r0, sp
 800af02:	f008 fbae 	bl	8013662 <ReadConfigFile::~ReadConfigFile()>
 800af06:	b002      	add	sp, #8
 800af08:	bd70      	pop	{r4, r5, r6, pc}
 800af0a:	bf00      	nop
 800af0c:	0800afcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, fp, sp, pc}

0800af10 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800af10:	6843      	ldr	r3, [r0, #4]
 800af12:	b111      	cbz	r1, 800af1a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800af14:	431a      	orrs	r2, r3
 800af16:	6042      	str	r2, [r0, #4]
 800af18:	4770      	bx	lr
 800af1a:	ea23 0202 	bic.w	r2, r3, r2
 800af1e:	e7fa      	b.n	800af16 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800af20 <RemoteConfigParams::callbackFunction(char const*)>:
 800af20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af22:	460d      	mov	r5, r1
 800af24:	4604      	mov	r4, r0
 800af26:	4923      	ldr	r1, [pc, #140]	; (800afb4 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800af28:	f10d 0203 	add.w	r2, sp, #3
 800af2c:	4628      	mov	r0, r5
 800af2e:	f008 fcca 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af32:	b940      	cbnz	r0, 800af46 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800af34:	2201      	movs	r2, #1
 800af36:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800af3a:	4620      	mov	r0, r4
 800af3c:	b003      	add	sp, #12
 800af3e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800af42:	f7ff bfe5 	b.w	800af10 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800af46:	491c      	ldr	r1, [pc, #112]	; (800afb8 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800af48:	f10d 0203 	add.w	r2, sp, #3
 800af4c:	4628      	mov	r0, r5
 800af4e:	f008 fcba 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af52:	b908      	cbnz	r0, 800af58 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800af54:	2202      	movs	r2, #2
 800af56:	e7ee      	b.n	800af36 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af58:	4918      	ldr	r1, [pc, #96]	; (800afbc <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800af5a:	f10d 0203 	add.w	r2, sp, #3
 800af5e:	4628      	mov	r0, r5
 800af60:	f008 fcb1 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af64:	b908      	cbnz	r0, 800af6a <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800af66:	2204      	movs	r2, #4
 800af68:	e7e5      	b.n	800af36 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af6a:	4915      	ldr	r1, [pc, #84]	; (800afc0 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800af6c:	f10d 0203 	add.w	r2, sp, #3
 800af70:	4628      	mov	r0, r5
 800af72:	f008 fca8 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af76:	b908      	cbnz	r0, 800af7c <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800af78:	2208      	movs	r2, #8
 800af7a:	e7dc      	b.n	800af36 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af7c:	4911      	ldr	r1, [pc, #68]	; (800afc4 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800af7e:	f10d 0203 	add.w	r2, sp, #3
 800af82:	4628      	mov	r0, r5
 800af84:	f008 fc9f 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af88:	b908      	cbnz	r0, 800af8e <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800af8a:	2220      	movs	r2, #32
 800af8c:	e7d3      	b.n	800af36 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af8e:	2317      	movs	r3, #23
 800af90:	9301      	str	r3, [sp, #4]
 800af92:	490d      	ldr	r1, [pc, #52]	; (800afc8 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800af94:	ab01      	add	r3, sp, #4
 800af96:	f104 020c 	add.w	r2, r4, #12
 800af9a:	4628      	mov	r0, r5
 800af9c:	f008 fb96 	bl	80136cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800afa0:	b930      	cbnz	r0, 800afb0 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800afa2:	9b01      	ldr	r3, [sp, #4]
 800afa4:	4423      	add	r3, r4
 800afa6:	7318      	strb	r0, [r3, #12]
 800afa8:	6863      	ldr	r3, [r4, #4]
 800afaa:	f043 0310 	orr.w	r3, r3, #16
 800afae:	6063      	str	r3, [r4, #4]
 800afb0:	b003      	add	sp, #12
 800afb2:	bd30      	pop	{r4, r5, pc}
 800afb4:	08017267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, sp, lr}
 800afb8:	08017288 	stmdaeq	r1, {r3, r7, r9, ip, sp, lr}
 800afbc:	08017296 	stmdaeq	r1, {r1, r2, r4, r7, r9, ip, sp, lr}
 800afc0:	080172a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp, lr}
 800afc4:	080172b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, ip, sp, lr}
 800afc8:	0801727b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, ip, sp, lr}

0800afcc <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800afcc:	f7ff bfa8 	b.w	800af20 <RemoteConfigParams::callbackFunction(char const*)>

0800afd0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800afd0:	b570      	push	{r4, r5, r6, lr}
 800afd2:	4604      	mov	r4, r0
 800afd4:	b086      	sub	sp, #24
 800afd6:	4615      	mov	r5, r2
 800afd8:	461e      	mov	r6, r3
 800afda:	3004      	adds	r0, #4
 800afdc:	2900      	cmp	r1, #0
 800afde:	d041      	beq.n	800b064 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800afe0:	2220      	movs	r2, #32
 800afe2:	f009 f9cc 	bl	801437e <memmove>
 800afe6:	4633      	mov	r3, r6
 800afe8:	462a      	mov	r2, r5
 800afea:	4937      	ldr	r1, [pc, #220]	; (800b0c8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800afec:	a803      	add	r0, sp, #12
 800afee:	f008 fa95 	bl	801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800aff2:	6862      	ldr	r2, [r4, #4]
 800aff4:	4935      	ldr	r1, [pc, #212]	; (800b0cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800aff6:	f002 0201 	and.w	r2, r2, #1
 800affa:	a803      	add	r0, sp, #12
 800affc:	f7ff ff2c 	bl	800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b000:	6862      	ldr	r2, [r4, #4]
 800b002:	4933      	ldr	r1, [pc, #204]	; (800b0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b004:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800b008:	a803      	add	r0, sp, #12
 800b00a:	f7ff ff25 	bl	800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b00e:	6862      	ldr	r2, [r4, #4]
 800b010:	4930      	ldr	r1, [pc, #192]	; (800b0d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800b012:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800b016:	a803      	add	r0, sp, #12
 800b018:	f7ff ff1e 	bl	800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b01c:	6862      	ldr	r2, [r4, #4]
 800b01e:	492e      	ldr	r1, [pc, #184]	; (800b0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800b020:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800b024:	a803      	add	r0, sp, #12
 800b026:	f7ff ff17 	bl	800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b02a:	6862      	ldr	r2, [r4, #4]
 800b02c:	492b      	ldr	r1, [pc, #172]	; (800b0dc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800b02e:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800b032:	a803      	add	r0, sp, #12
 800b034:	f7ff ff10 	bl	800ae58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b038:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b03c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b040:	6862      	ldr	r2, [r4, #4]
 800b042:	42ab      	cmp	r3, r5
 800b044:	d223      	bcs.n	800b08e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800b046:	9803      	ldr	r0, [sp, #12]
 800b048:	06d2      	lsls	r2, r2, #27
 800b04a:	4418      	add	r0, r3
 800b04c:	eba5 0503 	sub.w	r5, r5, r3
 800b050:	f104 040c 	add.w	r4, r4, #12
 800b054:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b058:	d40b      	bmi.n	800b072 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800b05a:	b95b      	cbnz	r3, 800b074 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800b05c:	4b20      	ldr	r3, [pc, #128]	; (800b0e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b05e:	4a21      	ldr	r2, [pc, #132]	; (800b0e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b060:	9400      	str	r4, [sp, #0]
 800b062:	e00a      	b.n	800b07a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b064:	6823      	ldr	r3, [r4, #0]
 800b066:	681a      	ldr	r2, [r3, #0]
 800b068:	4601      	mov	r1, r0
 800b06a:	68d2      	ldr	r2, [r2, #12]
 800b06c:	4618      	mov	r0, r3
 800b06e:	4790      	blx	r2
 800b070:	e7b9      	b.n	800afe6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800b072:	b32b      	cbz	r3, 800b0c0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800b074:	4b1a      	ldr	r3, [pc, #104]	; (800b0e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b076:	4a1c      	ldr	r2, [pc, #112]	; (800b0e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800b078:	9400      	str	r4, [sp, #0]
 800b07a:	4629      	mov	r1, r5
 800b07c:	f7ff f94c 	bl	800a318 <snprintf>
 800b080:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b084:	4285      	cmp	r5, r0
 800b086:	bfa4      	itt	ge
 800b088:	181b      	addge	r3, r3, r0
 800b08a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b08e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b092:	b17b      	cbz	r3, 800b0b4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800b094:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b098:	9b03      	ldr	r3, [sp, #12]
 800b09a:	4413      	add	r3, r2
 800b09c:	227d      	movs	r2, #125	; 0x7d
 800b09e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b0a2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b0a6:	9903      	ldr	r1, [sp, #12]
 800b0a8:	54ca      	strb	r2, [r1, r3]
 800b0aa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b0ae:	3301      	adds	r3, #1
 800b0b0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b0b4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b0b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0ba:	601a      	str	r2, [r3, #0]
 800b0bc:	b006      	add	sp, #24
 800b0be:	bd70      	pop	{r4, r5, r6, pc}
 800b0c0:	4b07      	ldr	r3, [pc, #28]	; (800b0e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b0c2:	4a0a      	ldr	r2, [pc, #40]	; (800b0ec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b0c4:	9400      	str	r4, [sp, #0]
 800b0c6:	e7d8      	b.n	800b07a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b0c8:	0801726f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
 800b0cc:	08017267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, sp, lr}
 800b0d0:	08017288 	stmdaeq	r1, {r3, r7, r9, ip, sp, lr}
 800b0d4:	08017296 	stmdaeq	r1, {r1, r2, r4, r7, r9, ip, sp, lr}
 800b0d8:	080172a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp, lr}
 800b0dc:	080172b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, ip, sp, lr}
 800b0e0:	0801727b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, ip, sp, lr}
 800b0e4:	08016ea0 	stmdaeq	r1, {r5, r7, r9, sl, fp, sp, lr}
 800b0e8:	08016e95 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, fp, sp, lr}
 800b0ec:	08016ea1 	stmdaeq	r1, {r0, r5, r7, r9, sl, fp, sp, lr}

0800b0f0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b0f0:	b513      	push	{r0, r1, r4, lr}
 800b0f2:	6804      	ldr	r4, [r0, #0]
 800b0f4:	b914      	cbnz	r4, 800b0fc <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b0f6:	601c      	str	r4, [r3, #0]
 800b0f8:	b002      	add	sp, #8
 800b0fa:	bd10      	pop	{r4, pc}
 800b0fc:	9300      	str	r3, [sp, #0]
 800b0fe:	4613      	mov	r3, r2
 800b100:	460a      	mov	r2, r1
 800b102:	2100      	movs	r1, #0
 800b104:	f7ff ff64 	bl	800afd0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b108:	e7f6      	b.n	800b0f8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b10a <RemoteConfigParams::Set(RemoteConfig*)>:
 800b10a:	b538      	push	{r3, r4, r5, lr}
 800b10c:	460c      	mov	r4, r1
 800b10e:	6841      	ldr	r1, [r0, #4]
 800b110:	4605      	mov	r5, r0
 800b112:	f001 0101 	and.w	r1, r1, #1
 800b116:	4620      	mov	r0, r4
 800b118:	f7ff fc3a 	bl	800a990 <RemoteConfig::SetDisable(bool)>
 800b11c:	686b      	ldr	r3, [r5, #4]
 800b11e:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b122:	7362      	strb	r2, [r4, #13]
 800b124:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b128:	73a2      	strb	r2, [r4, #14]
 800b12a:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b12e:	73e2      	strb	r2, [r4, #15]
 800b130:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b134:	06db      	lsls	r3, r3, #27
 800b136:	7422      	strb	r2, [r4, #16]
 800b138:	d506      	bpl.n	800b148 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800b13a:	f105 010c 	add.w	r1, r5, #12
 800b13e:	4620      	mov	r0, r4
 800b140:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b144:	f7ff bc44 	b.w	800a9d0 <RemoteConfig::SetDisplayName(char const*)>
 800b148:	bd38      	pop	{r3, r4, r5, pc}

0800b14a <RemoteConfigParams::Dump()>:
 800b14a:	4770      	bx	lr

0800b14c <RemoteConfig::HandleReboot()>:
 800b14c:	7b83      	ldrb	r3, [r0, #14]
 800b14e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b150:	2b00      	cmp	r3, #0
 800b152:	d03c      	beq.n	800b1ce <RemoteConfig::HandleReboot()+0x82>
 800b154:	4c1f      	ldr	r4, [pc, #124]	; (800b1d4 <RemoteConfig::HandleReboot()+0x88>)
 800b156:	6825      	ldr	r5, [r4, #0]
 800b158:	2301      	movs	r3, #1
 800b15a:	7443      	strb	r3, [r0, #17]
 800b15c:	69a8      	ldr	r0, [r5, #24]
 800b15e:	b138      	cbz	r0, 800b170 <RemoteConfig::HandleReboot()+0x24>
 800b160:	6803      	ldr	r3, [r0, #0]
 800b162:	2100      	movs	r1, #0
 800b164:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b166:	7429      	strb	r1, [r5, #16]
 800b168:	4798      	blx	r3
 800b16a:	4b1b      	ldr	r3, [pc, #108]	; (800b1d8 <RemoteConfig::HandleReboot()+0x8c>)
 800b16c:	681b      	ldr	r3, [r3, #0]
 800b16e:	606b      	str	r3, [r5, #4]
 800b170:	4d1a      	ldr	r5, [pc, #104]	; (800b1dc <RemoteConfig::HandleReboot()+0x90>)
 800b172:	6828      	ldr	r0, [r5, #0]
 800b174:	f007 fd92 	bl	8012c9c <ConfigStore::Flash()>
 800b178:	2800      	cmp	r0, #0
 800b17a:	d1fa      	bne.n	800b172 <RemoteConfig::HandleReboot()+0x26>
 800b17c:	4b18      	ldr	r3, [pc, #96]	; (800b1e0 <RemoteConfig::HandleReboot()+0x94>)
 800b17e:	6818      	ldr	r0, [r3, #0]
 800b180:	f006 f820 	bl	80111c4 <Network::Shutdown()>
 800b184:	4817      	ldr	r0, [pc, #92]	; (800b1e4 <RemoteConfig::HandleReboot()+0x98>)
 800b186:	f7ff f89f 	bl	800a2c8 <printf>
 800b18a:	6823      	ldr	r3, [r4, #0]
 800b18c:	6998      	ldr	r0, [r3, #24]
 800b18e:	b110      	cbz	r0, 800b196 <RemoteConfig::HandleReboot()+0x4a>
 800b190:	6803      	ldr	r3, [r0, #0]
 800b192:	68db      	ldr	r3, [r3, #12]
 800b194:	4798      	blx	r3
 800b196:	6824      	ldr	r4, [r4, #0]
 800b198:	4913      	ldr	r1, [pc, #76]	; (800b1e8 <RemoteConfig::HandleReboot()+0x9c>)
 800b19a:	4620      	mov	r0, r4
 800b19c:	f7fe f89e 	bl	80092dc <Display::TextStatus(char const*)>
 800b1a0:	7c63      	ldrb	r3, [r4, #17]
 800b1a2:	b183      	cbz	r3, 800b1c6 <RemoteConfig::HandleReboot()+0x7a>
 800b1a4:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b1a8:	7a20      	ldrb	r0, [r4, #8]
 800b1aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b1ae:	23bf      	movs	r3, #191	; 0xbf
 800b1b0:	f88d 3006 	strb.w	r3, [sp, #6]
 800b1b4:	f00a fd72 	bl	8015c9c <gd32_i2c_set_address>
 800b1b8:	68e0      	ldr	r0, [r4, #12]
 800b1ba:	f00a fd67 	bl	8015c8c <gd32_i2c_set_baudrate>
 800b1be:	2103      	movs	r1, #3
 800b1c0:	a801      	add	r0, sp, #4
 800b1c2:	f00a fd71 	bl	8015ca8 <gd32_i2c_write>
 800b1c6:	4b09      	ldr	r3, [pc, #36]	; (800b1ec <RemoteConfig::HandleReboot()+0xa0>)
 800b1c8:	6818      	ldr	r0, [r3, #0]
 800b1ca:	f008 ffd7 	bl	801417c <Hardware::Reboot()>
 800b1ce:	b003      	add	sp, #12
 800b1d0:	bd30      	pop	{r4, r5, pc}
 800b1d2:	bf00      	nop
 800b1d4:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800b1d8:	2000fedc 	ldrdcs	pc, [r0], -ip
 800b1dc:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0
 800b1e0:	2000fadc 	ldrdcs	pc, [r0], -ip
 800b1e4:	08016ea8 	stmdaeq	r1, {r3, r5, r7, r9, sl, fp, sp, lr}
 800b1e8:	08016eb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r9, sl, fp, sp, lr}
 800b1ec:	2000fec4 	andcs	pc, r0, r4, asr #29

0800b1f0 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b1f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b1f4:	4d12      	ldr	r5, [pc, #72]	; (800b240 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b1f6:	2000      	movs	r0, #0
 800b1f8:	f10d 0c04 	add.w	ip, sp, #4
 800b1fc:	6814      	ldr	r4, [r2, #0]
 800b1fe:	7d2b      	ldrb	r3, [r5, #20]
 800b200:	9301      	str	r3, [sp, #4]
 800b202:	42a3      	cmp	r3, r4
 800b204:	bf34      	ite	cc
 800b206:	4664      	movcc	r4, ip
 800b208:	4614      	movcs	r4, r2
 800b20a:	692e      	ldr	r6, [r5, #16]
 800b20c:	6827      	ldr	r7, [r4, #0]
 800b20e:	3e01      	subs	r6, #1
 800b210:	440f      	add	r7, r1
 800b212:	460c      	mov	r4, r1
 800b214:	42bc      	cmp	r4, r7
 800b216:	d101      	bne.n	800b21c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b218:	6013      	str	r3, [r2, #0]
 800b21a:	e00c      	b.n	800b236 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b21c:	f894 8000 	ldrb.w	r8, [r4]
 800b220:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b224:	45f0      	cmp	r8, lr
 800b226:	d009      	beq.n	800b23c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b228:	3001      	adds	r0, #1
 800b22a:	2805      	cmp	r0, #5
 800b22c:	f105 051c 	add.w	r5, r5, #28
 800b230:	d1e4      	bne.n	800b1fc <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b232:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b236:	b002      	add	sp, #8
 800b238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b23c:	3401      	adds	r4, #1
 800b23e:	e7e9      	b.n	800b214 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b240:	08016f00 	stmdaeq	r1, {r8, r9, sl, fp, sp, lr}

0800b244 <RemoteConfig::PlatformHandleTftpSet()>:
 800b244:	f890 1020 	ldrb.w	r1, [r0, #32]
 800b248:	b109      	cbz	r1, 800b24e <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b24a:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b24e:	2001      	movs	r0, #1
 800b250:	f00a bc60 	b.w	8015b14 <bkp_data_write(bkp_data_register_enum, unsigned short)>

0800b254 <RemoteConfig::PlatformHandleTftpGet()>:
 800b254:	b510      	push	{r4, lr}
 800b256:	4604      	mov	r4, r0
 800b258:	2001      	movs	r0, #1
 800b25a:	f00a fc63 	bl	8015b24 <bkp_data_read(bkp_data_register_enum)>
 800b25e:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b262:	1ac3      	subs	r3, r0, r3
 800b264:	4258      	negs	r0, r3
 800b266:	4158      	adcs	r0, r3
 800b268:	f884 0020 	strb.w	r0, [r4, #32]
 800b26c:	bd10      	pop	{r4, pc}

0800b26e <strcmp>:
 800b26e:	1e43      	subs	r3, r0, #1
 800b270:	3901      	subs	r1, #1
 800b272:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b276:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b27a:	4290      	cmp	r0, r2
 800b27c:	d001      	beq.n	800b282 <strcmp+0x14>
 800b27e:	1a80      	subs	r0, r0, r2
 800b280:	e001      	b.n	800b286 <strcmp+0x18>
 800b282:	2800      	cmp	r0, #0
 800b284:	d1f5      	bne.n	800b272 <strcmp+0x4>
 800b286:	4770      	bx	lr

0800b288 <strcasecmp>:
 800b288:	b530      	push	{r4, r5, lr}
 800b28a:	1e42      	subs	r2, r0, #1
 800b28c:	3901      	subs	r1, #1
 800b28e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b292:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b296:	2b19      	cmp	r3, #25
 800b298:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b29c:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b2a0:	4604      	mov	r4, r0
 800b2a2:	bf98      	it	ls
 800b2a4:	f100 0420 	addls.w	r4, r0, #32
 800b2a8:	2d19      	cmp	r5, #25
 800b2aa:	bf98      	it	ls
 800b2ac:	3320      	addls	r3, #32
 800b2ae:	42a3      	cmp	r3, r4
 800b2b0:	d001      	beq.n	800b2b6 <strcasecmp+0x2e>
 800b2b2:	1ae0      	subs	r0, r4, r3
 800b2b4:	e001      	b.n	800b2ba <strcasecmp+0x32>
 800b2b6:	2800      	cmp	r0, #0
 800b2b8:	d1e9      	bne.n	800b28e <strcasecmp+0x6>
 800b2ba:	bd30      	pop	{r4, r5, pc}

0800b2bc <PropertiesConfig::EnableJSON(bool)>:
 800b2bc:	4a04      	ldr	r2, [pc, #16]	; (800b2d0 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b2be:	7813      	ldrb	r3, [r2, #0]
 800b2c0:	b118      	cbz	r0, 800b2ca <PropertiesConfig::EnableJSON(bool)+0xe>
 800b2c2:	f043 0301 	orr.w	r3, r3, #1
 800b2c6:	7013      	strb	r3, [r2, #0]
 800b2c8:	4770      	bx	lr
 800b2ca:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b2ce:	e7fa      	b.n	800b2c6 <PropertiesConfig::EnableJSON(bool)+0xa>
 800b2d0:	2000fdd0 	ldrdcs	pc, [r0], -r0

0800b2d4 <HttpDaemon::HttpDaemon()>:
 800b2d4:	4a08      	ldr	r2, [pc, #32]	; (800b2f8 <HttpDaemon::HttpDaemon()+0x24>)
 800b2d6:	6002      	str	r2, [r0, #0]
 800b2d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b2dc:	2200      	movs	r2, #0
 800b2de:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b2e2:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b2e6:	2102      	movs	r1, #2
 800b2e8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b2ec:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b2f0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800b2f4:	60c2      	str	r2, [r0, #12]
 800b2f6:	4770      	bx	lr
 800b2f8:	080171e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, ip, sp, lr}

0800b2fc <HttpDaemon::Start()>:
 800b2fc:	4b04      	ldr	r3, [pc, #16]	; (800b310 <HttpDaemon::Start()+0x14>)
 800b2fe:	b510      	push	{r4, lr}
 800b300:	2150      	movs	r1, #80	; 0x50
 800b302:	4604      	mov	r4, r0
 800b304:	6818      	ldr	r0, [r3, #0]
 800b306:	f006 fa51 	bl	80117ac <Network::TcpBegin(unsigned short)>
 800b30a:	6120      	str	r0, [r4, #16]
 800b30c:	bd10      	pop	{r4, pc}
 800b30e:	bf00      	nop
 800b310:	2000fadc 	ldrdcs	pc, [r0], -ip

0800b314 <HttpDaemon::ParseMethod(char*)>:
 800b314:	b538      	push	{r3, r4, r5, lr}
 800b316:	4604      	mov	r4, r0
 800b318:	4608      	mov	r0, r1
 800b31a:	491a      	ldr	r1, [pc, #104]	; (800b384 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b31c:	f009 f870 	bl	8014400 <strtok>
 800b320:	4605      	mov	r5, r0
 800b322:	b360      	cbz	r0, 800b37e <HttpDaemon::ParseMethod(char*)+0x6a>
 800b324:	4918      	ldr	r1, [pc, #96]	; (800b388 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b326:	f7ff ffa2 	bl	800b26e <strcmp>
 800b32a:	b128      	cbz	r0, 800b338 <HttpDaemon::ParseMethod(char*)+0x24>
 800b32c:	4917      	ldr	r1, [pc, #92]	; (800b38c <HttpDaemon::ParseMethod(char*)+0x78>)
 800b32e:	4628      	mov	r0, r5
 800b330:	f7ff ff9d 	bl	800b26e <strcmp>
 800b334:	bb18      	cbnz	r0, 800b37e <HttpDaemon::ParseMethod(char*)+0x6a>
 800b336:	2001      	movs	r0, #1
 800b338:	61e0      	str	r0, [r4, #28]
 800b33a:	4912      	ldr	r1, [pc, #72]	; (800b384 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b33c:	2000      	movs	r0, #0
 800b33e:	f009 f85f 	bl	8014400 <strtok>
 800b342:	b910      	cbnz	r0, 800b34a <HttpDaemon::ParseMethod(char*)+0x36>
 800b344:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b348:	bd38      	pop	{r3, r4, r5, pc}
 800b34a:	6060      	str	r0, [r4, #4]
 800b34c:	4910      	ldr	r1, [pc, #64]	; (800b390 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b34e:	2000      	movs	r0, #0
 800b350:	f009 f856 	bl	8014400 <strtok>
 800b354:	2800      	cmp	r0, #0
 800b356:	d0f5      	beq.n	800b344 <HttpDaemon::ParseMethod(char*)+0x30>
 800b358:	490e      	ldr	r1, [pc, #56]	; (800b394 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b35a:	f7ff ff88 	bl	800b26e <strcmp>
 800b35e:	2800      	cmp	r0, #0
 800b360:	d1f0      	bne.n	800b344 <HttpDaemon::ParseMethod(char*)+0x30>
 800b362:	490d      	ldr	r1, [pc, #52]	; (800b398 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b364:	f009 f84c 	bl	8014400 <strtok>
 800b368:	2800      	cmp	r0, #0
 800b36a:	d0eb      	beq.n	800b344 <HttpDaemon::ParseMethod(char*)+0x30>
 800b36c:	490b      	ldr	r1, [pc, #44]	; (800b39c <HttpDaemon::ParseMethod(char*)+0x88>)
 800b36e:	f7ff ff7e 	bl	800b26e <strcmp>
 800b372:	2800      	cmp	r0, #0
 800b374:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b378:	bf08      	it	eq
 800b37a:	20c8      	moveq	r0, #200	; 0xc8
 800b37c:	e7e4      	b.n	800b348 <HttpDaemon::ParseMethod(char*)+0x34>
 800b37e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b382:	e7e1      	b.n	800b348 <HttpDaemon::ParseMethod(char*)+0x34>
 800b384:	08016c17 	stmdaeq	r1, {r0, r1, r2, r4, sl, fp, sp, lr}
 800b388:	08016f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, sp, lr}
 800b38c:	08016f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, sp, lr}
 800b390:	08016ff8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b394:	08016f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp, sp, lr}
 800b398:	08016f9a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, fp, sp, lr}
 800b39c:	08016f9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sl, fp, sp, lr}

0800b3a0 <HttpDaemon::ParseHeaderField(char*)>:
 800b3a0:	b538      	push	{r3, r4, r5, lr}
 800b3a2:	4605      	mov	r5, r0
 800b3a4:	4608      	mov	r0, r1
 800b3a6:	491d      	ldr	r1, [pc, #116]	; (800b41c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b3a8:	f009 f82a 	bl	8014400 <strtok>
 800b3ac:	4604      	mov	r4, r0
 800b3ae:	b910      	cbnz	r0, 800b3b6 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b3b0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b3b4:	bd38      	pop	{r3, r4, r5, pc}
 800b3b6:	491a      	ldr	r1, [pc, #104]	; (800b420 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b3b8:	f7ff ff66 	bl	800b288 <strcasecmp>
 800b3bc:	b970      	cbnz	r0, 800b3dc <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b3be:	4919      	ldr	r1, [pc, #100]	; (800b424 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b3c0:	f009 f81e 	bl	8014400 <strtok>
 800b3c4:	2800      	cmp	r0, #0
 800b3c6:	d0f3      	beq.n	800b3b0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b3c8:	4917      	ldr	r1, [pc, #92]	; (800b428 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b3ca:	f7ff ff50 	bl	800b26e <strcmp>
 800b3ce:	b108      	cbz	r0, 800b3d4 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b3d0:	20c8      	movs	r0, #200	; 0xc8
 800b3d2:	e7ef      	b.n	800b3b4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b3d4:	2301      	movs	r3, #1
 800b3d6:	f885 3020 	strb.w	r3, [r5, #32]
 800b3da:	e7f9      	b.n	800b3d0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b3dc:	4620      	mov	r0, r4
 800b3de:	4913      	ldr	r1, [pc, #76]	; (800b42c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b3e0:	f7ff ff52 	bl	800b288 <strcasecmp>
 800b3e4:	4604      	mov	r4, r0
 800b3e6:	2800      	cmp	r0, #0
 800b3e8:	d1f2      	bne.n	800b3d0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b3ea:	4911      	ldr	r1, [pc, #68]	; (800b430 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b3ec:	f009 f808 	bl	8014400 <strtok>
 800b3f0:	2800      	cmp	r0, #0
 800b3f2:	d0dd      	beq.n	800b3b0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b3f4:	1e42      	subs	r2, r0, #1
 800b3f6:	4623      	mov	r3, r4
 800b3f8:	200a      	movs	r0, #10
 800b3fa:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b3fe:	b909      	cbnz	r1, 800b404 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800b400:	84eb      	strh	r3, [r5, #38]	; 0x26
 800b402:	e7e5      	b.n	800b3d0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b404:	3930      	subs	r1, #48	; 0x30
 800b406:	2909      	cmp	r1, #9
 800b408:	d8d2      	bhi.n	800b3b0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b40a:	fb00 1303 	mla	r3, r0, r3, r1
 800b40e:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b412:	d9f2      	bls.n	800b3fa <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b414:	f240 109d 	movw	r0, #413	; 0x19d
 800b418:	e7cc      	b.n	800b3b4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b41a:	bf00      	nop
 800b41c:	08017c2a 	stmdaeq	r1, {r1, r3, r5, sl, fp, ip, sp, lr}
 800b420:	08016fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, sp, lr}
 800b424:	08016fae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, fp, sp, lr}
 800b428:	08016fb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, fp, sp, lr}
 800b42c:	08016fc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, fp, sp, lr}
 800b430:	08016c17 	stmdaeq	r1, {r0, r1, r2, r4, sl, fp, sp, lr}

0800b434 <HttpDaemon::ParseRequest()>:
 800b434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b436:	68c1      	ldr	r1, [r0, #12]
 800b438:	2400      	movs	r4, #0
 800b43a:	4605      	mov	r5, r0
 800b43c:	f880 4020 	strb.w	r4, [r0, #32]
 800b440:	6244      	str	r4, [r0, #36]	; 0x24
 800b442:	4622      	mov	r2, r4
 800b444:	4626      	mov	r6, r4
 800b446:	8aab      	ldrh	r3, [r5, #20]
 800b448:	42a3      	cmp	r3, r4
 800b44a:	d91e      	bls.n	800b48a <HttpDaemon::ParseRequest()+0x56>
 800b44c:	68eb      	ldr	r3, [r5, #12]
 800b44e:	5d18      	ldrb	r0, [r3, r4]
 800b450:	280a      	cmp	r0, #10
 800b452:	d10f      	bne.n	800b474 <HttpDaemon::ParseRequest()+0x40>
 800b454:	4423      	add	r3, r4
 800b456:	1c57      	adds	r7, r2, #1
 800b458:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b45c:	b96a      	cbnz	r2, 800b47a <HttpDaemon::ParseRequest()+0x46>
 800b45e:	4628      	mov	r0, r5
 800b460:	f7ff ff58 	bl	800b314 <HttpDaemon::ParseMethod(char*)>
 800b464:	28c8      	cmp	r0, #200	; 0xc8
 800b466:	d111      	bne.n	800b48c <HttpDaemon::ParseRequest()+0x58>
 800b468:	68eb      	ldr	r3, [r5, #12]
 800b46a:	1c61      	adds	r1, r4, #1
 800b46c:	b28c      	uxth	r4, r1
 800b46e:	463a      	mov	r2, r7
 800b470:	fa13 f181 	uxtah	r1, r3, r1
 800b474:	3401      	adds	r4, #1
 800b476:	b2a4      	uxth	r4, r4
 800b478:	e7e5      	b.n	800b446 <HttpDaemon::ParseRequest()+0x12>
 800b47a:	7808      	ldrb	r0, [r1, #0]
 800b47c:	b968      	cbnz	r0, 800b49a <HttpDaemon::ParseRequest()+0x66>
 800b47e:	696b      	ldr	r3, [r5, #20]
 800b480:	3b01      	subs	r3, #1
 800b482:	1b1b      	subs	r3, r3, r4
 800b484:	b29b      	uxth	r3, r3
 800b486:	84ab      	strh	r3, [r5, #36]	; 0x24
 800b488:	b90b      	cbnz	r3, 800b48e <HttpDaemon::ParseRequest()+0x5a>
 800b48a:	20c8      	movs	r0, #200	; 0xc8
 800b48c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b48e:	68ea      	ldr	r2, [r5, #12]
 800b490:	3401      	adds	r4, #1
 800b492:	4414      	add	r4, r2
 800b494:	60ac      	str	r4, [r5, #8]
 800b496:	54e0      	strb	r0, [r4, r3]
 800b498:	e7f7      	b.n	800b48a <HttpDaemon::ParseRequest()+0x56>
 800b49a:	4628      	mov	r0, r5
 800b49c:	f7ff ff80 	bl	800b3a0 <HttpDaemon::ParseHeaderField(char*)>
 800b4a0:	e7e0      	b.n	800b464 <HttpDaemon::ParseRequest()+0x30>
	...

0800b4a4 <HttpDaemon::HandleGetTxt()>:
 800b4a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4a8:	6846      	ldr	r6, [r0, #4]
 800b4aa:	1db4      	adds	r4, r6, #6
 800b4ac:	4607      	mov	r7, r0
 800b4ae:	4622      	mov	r2, r4
 800b4b0:	4613      	mov	r3, r2
 800b4b2:	3201      	adds	r2, #1
 800b4b4:	7819      	ldrb	r1, [r3, #0]
 800b4b6:	2900      	cmp	r1, #0
 800b4b8:	d1fa      	bne.n	800b4b0 <HttpDaemon::HandleGetTxt()+0xc>
 800b4ba:	1b1b      	subs	r3, r3, r4
 800b4bc:	2b04      	cmp	r3, #4
 800b4be:	d803      	bhi.n	800b4c8 <HttpDaemon::HandleGetTxt()+0x24>
 800b4c0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b4c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4c8:	3b04      	subs	r3, #4
 800b4ca:	4914      	ldr	r1, [pc, #80]	; (800b51c <HttpDaemon::HandleGetTxt()+0x78>)
 800b4cc:	18e0      	adds	r0, r4, r3
 800b4ce:	f7ff fece 	bl	800b26e <strcmp>
 800b4d2:	2800      	cmp	r0, #0
 800b4d4:	d1f4      	bne.n	800b4c0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b4d6:	4b12      	ldr	r3, [pc, #72]	; (800b520 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b4d8:	2001      	movs	r0, #1
 800b4da:	f893 8000 	ldrb.w	r8, [r3]
 800b4de:	f7ff feed 	bl	800b2bc <PropertiesConfig::EnableJSON(bool)>
 800b4e2:	4b10      	ldr	r3, [pc, #64]	; (800b524 <HttpDaemon::HandleGetTxt()+0x80>)
 800b4e4:	f240 529b 	movw	r2, #1435	; 0x59b
 800b4e8:	6818      	ldr	r0, [r3, #0]
 800b4ea:	4621      	mov	r1, r4
 800b4ec:	f7ff fa88 	bl	800aa00 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b4f0:	f008 0801 	and.w	r8, r8, #1
 800b4f4:	4605      	mov	r5, r0
 800b4f6:	4640      	mov	r0, r8
 800b4f8:	f7ff fee0 	bl	800b2bc <PropertiesConfig::EnableJSON(bool)>
 800b4fc:	2d00      	cmp	r5, #0
 800b4fe:	d0df      	beq.n	800b4c0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b500:	847d      	strh	r5, [r7, #34]	; 0x22
 800b502:	4b09      	ldr	r3, [pc, #36]	; (800b528 <HttpDaemon::HandleGetTxt()+0x84>)
 800b504:	3506      	adds	r5, #6
 800b506:	442e      	add	r6, r5
 800b508:	42b4      	cmp	r4, r6
 800b50a:	d101      	bne.n	800b510 <HttpDaemon::HandleGetTxt()+0x6c>
 800b50c:	20c8      	movs	r0, #200	; 0xc8
 800b50e:	e7d9      	b.n	800b4c4 <HttpDaemon::HandleGetTxt()+0x20>
 800b510:	f814 2b01 	ldrb.w	r2, [r4], #1
 800b514:	f803 2b01 	strb.w	r2, [r3], #1
 800b518:	e7f6      	b.n	800b508 <HttpDaemon::HandleGetTxt()+0x64>
 800b51a:	bf00      	nop
 800b51c:	08016ecc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, fp, sp, lr}
 800b520:	2000fdd0 	ldrdcs	pc, [r0], -r0
 800b524:	20000124 	andcs	r0, r0, r4, lsr #2
 800b528:	20000128 	andcs	r0, r0, r8, lsr #2

0800b52c <HttpDaemon::HandleGet()>:
 800b52c:	b570      	push	{r4, r5, r6, lr}
 800b52e:	6845      	ldr	r5, [r0, #4]
 800b530:	493e      	ldr	r1, [pc, #248]	; (800b62c <HttpDaemon::HandleGet()+0x100>)
 800b532:	4604      	mov	r4, r0
 800b534:	4628      	mov	r0, r5
 800b536:	f7ff fe9a 	bl	800b26e <strcmp>
 800b53a:	b120      	cbz	r0, 800b546 <HttpDaemon::HandleGet()+0x1a>
 800b53c:	493c      	ldr	r1, [pc, #240]	; (800b630 <HttpDaemon::HandleGet()+0x104>)
 800b53e:	4628      	mov	r0, r5
 800b540:	f7ff fe95 	bl	800b26e <strcmp>
 800b544:	b950      	cbnz	r0, 800b55c <HttpDaemon::HandleGet()+0x30>
 800b546:	4b3b      	ldr	r3, [pc, #236]	; (800b634 <HttpDaemon::HandleGet()+0x108>)
 800b548:	493b      	ldr	r1, [pc, #236]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b54a:	483c      	ldr	r0, [pc, #240]	; (800b63c <HttpDaemon::HandleGet()+0x110>)
 800b54c:	6023      	str	r3, [r4, #0]
 800b54e:	f000 fa63 	bl	800ba18 <get_file_content(char const*, char*)>
 800b552:	2800      	cmp	r0, #0
 800b554:	dd2f      	ble.n	800b5b6 <HttpDaemon::HandleGet()+0x8a>
 800b556:	8460      	strh	r0, [r4, #34]	; 0x22
 800b558:	20c8      	movs	r0, #200	; 0xc8
 800b55a:	bd70      	pop	{r4, r5, r6, pc}
 800b55c:	4938      	ldr	r1, [pc, #224]	; (800b640 <HttpDaemon::HandleGet()+0x114>)
 800b55e:	4628      	mov	r0, r5
 800b560:	f7ff fe85 	bl	800b26e <strcmp>
 800b564:	b920      	cbnz	r0, 800b570 <HttpDaemon::HandleGet()+0x44>
 800b566:	4b37      	ldr	r3, [pc, #220]	; (800b644 <HttpDaemon::HandleGet()+0x118>)
 800b568:	4933      	ldr	r1, [pc, #204]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b56a:	4837      	ldr	r0, [pc, #220]	; (800b648 <HttpDaemon::HandleGet()+0x11c>)
 800b56c:	6023      	str	r3, [r4, #0]
 800b56e:	e7ee      	b.n	800b54e <HttpDaemon::HandleGet()+0x22>
 800b570:	4936      	ldr	r1, [pc, #216]	; (800b64c <HttpDaemon::HandleGet()+0x120>)
 800b572:	4628      	mov	r0, r5
 800b574:	f7ff fe7b 	bl	800b26e <strcmp>
 800b578:	b190      	cbz	r0, 800b5a0 <HttpDaemon::HandleGet()+0x74>
 800b57a:	4a35      	ldr	r2, [pc, #212]	; (800b650 <HttpDaemon::HandleGet()+0x124>)
 800b57c:	1e6b      	subs	r3, r5, #1
 800b57e:	1d69      	adds	r1, r5, #5
 800b580:	428b      	cmp	r3, r1
 800b582:	d112      	bne.n	800b5aa <HttpDaemon::HandleGet()+0x7e>
 800b584:	4b33      	ldr	r3, [pc, #204]	; (800b654 <HttpDaemon::HandleGet()+0x128>)
 800b586:	4934      	ldr	r1, [pc, #208]	; (800b658 <HttpDaemon::HandleGet()+0x12c>)
 800b588:	6023      	str	r3, [r4, #0]
 800b58a:	3506      	adds	r5, #6
 800b58c:	4628      	mov	r0, r5
 800b58e:	f7ff fe6e 	bl	800b26e <strcmp>
 800b592:	b998      	cbnz	r0, 800b5bc <HttpDaemon::HandleGet()+0x90>
 800b594:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b598:	4827      	ldr	r0, [pc, #156]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b59a:	f000 f9c9 	bl	800b930 <remoteconfig::json_get_list(char*, unsigned short)>
 800b59e:	e7d8      	b.n	800b552 <HttpDaemon::HandleGet()+0x26>
 800b5a0:	4b2e      	ldr	r3, [pc, #184]	; (800b65c <HttpDaemon::HandleGet()+0x130>)
 800b5a2:	4925      	ldr	r1, [pc, #148]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b5a4:	482e      	ldr	r0, [pc, #184]	; (800b660 <HttpDaemon::HandleGet()+0x134>)
 800b5a6:	6023      	str	r3, [r4, #0]
 800b5a8:	e7d1      	b.n	800b54e <HttpDaemon::HandleGet()+0x22>
 800b5aa:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b5ae:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b5b2:	4286      	cmp	r6, r0
 800b5b4:	d0e4      	beq.n	800b580 <HttpDaemon::HandleGet()+0x54>
 800b5b6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b5ba:	e7ce      	b.n	800b55a <HttpDaemon::HandleGet()+0x2e>
 800b5bc:	4929      	ldr	r1, [pc, #164]	; (800b664 <HttpDaemon::HandleGet()+0x138>)
 800b5be:	4628      	mov	r0, r5
 800b5c0:	f7ff fe55 	bl	800b26e <strcmp>
 800b5c4:	b928      	cbnz	r0, 800b5d2 <HttpDaemon::HandleGet()+0xa6>
 800b5c6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5ca:	481b      	ldr	r0, [pc, #108]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b5cc:	f000 f9e0 	bl	800b990 <remoteconfig::json_get_version(char*, unsigned short)>
 800b5d0:	e7bf      	b.n	800b552 <HttpDaemon::HandleGet()+0x26>
 800b5d2:	4925      	ldr	r1, [pc, #148]	; (800b668 <HttpDaemon::HandleGet()+0x13c>)
 800b5d4:	4628      	mov	r0, r5
 800b5d6:	f7ff fe4a 	bl	800b26e <strcmp>
 800b5da:	b948      	cbnz	r0, 800b5f0 <HttpDaemon::HandleGet()+0xc4>
 800b5dc:	4b23      	ldr	r3, [pc, #140]	; (800b66c <HttpDaemon::HandleGet()+0x140>)
 800b5de:	681b      	ldr	r3, [r3, #0]
 800b5e0:	7bdb      	ldrb	r3, [r3, #15]
 800b5e2:	b303      	cbz	r3, 800b626 <HttpDaemon::HandleGet()+0xfa>
 800b5e4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5e8:	4813      	ldr	r0, [pc, #76]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b5ea:	f000 f9ed 	bl	800b9c8 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b5ee:	e7b0      	b.n	800b552 <HttpDaemon::HandleGet()+0x26>
 800b5f0:	491f      	ldr	r1, [pc, #124]	; (800b670 <HttpDaemon::HandleGet()+0x144>)
 800b5f2:	4628      	mov	r0, r5
 800b5f4:	f7ff fe3b 	bl	800b26e <strcmp>
 800b5f8:	b928      	cbnz	r0, 800b606 <HttpDaemon::HandleGet()+0xda>
 800b5fa:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5fe:	480e      	ldr	r0, [pc, #56]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b600:	f000 f9f2 	bl	800b9e8 <remoteconfig::json_get_display(char*, unsigned short)>
 800b604:	e7a5      	b.n	800b552 <HttpDaemon::HandleGet()+0x26>
 800b606:	491b      	ldr	r1, [pc, #108]	; (800b674 <HttpDaemon::HandleGet()+0x148>)
 800b608:	4628      	mov	r0, r5
 800b60a:	f7ff fe30 	bl	800b26e <strcmp>
 800b60e:	b928      	cbnz	r0, 800b61c <HttpDaemon::HandleGet()+0xf0>
 800b610:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b614:	4808      	ldr	r0, [pc, #32]	; (800b638 <HttpDaemon::HandleGet()+0x10c>)
 800b616:	f000 f9f7 	bl	800ba08 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b61a:	e79a      	b.n	800b552 <HttpDaemon::HandleGet()+0x26>
 800b61c:	4620      	mov	r0, r4
 800b61e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b622:	f7ff bf3f 	b.w	800b4a4 <HttpDaemon::HandleGetTxt()>
 800b626:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b62a:	e796      	b.n	800b55a <HttpDaemon::HandleGet()+0x2e>
 800b62c:	08016ff8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b630:	08016fd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 800b634:	080171e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, ip, sp, lr}
 800b638:	20000128 	andcs	r0, r0, r8, lsr #2
 800b63c:	08016fd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 800b640:	08016fdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 800b644:	08017207 	stmdaeq	r1, {r0, r1, r2, r9, ip, sp, lr}
 800b648:	08016fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 800b64c:	08016fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b650:	08016ff3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b654:	08017247 	stmdaeq	r1, {r0, r1, r2, r6, r9, ip, sp, lr}
 800b658:	08016ffa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b65c:	08017227 	stmdaeq	r1, {r0, r1, r2, r5, r9, ip, sp, lr}
 800b660:	08016fea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b664:	08016fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800b668:	08017007 	stmdaeq	r1, {r0, r1, r2, ip, sp, lr}
 800b66c:	20000124 	andcs	r0, r0, r4, lsr #2
 800b670:	0801691a 	stmdaeq	r1, {r1, r3, r4, r8, fp, sp, lr}
 800b674:	0801700e 	stmdaeq	r1, {r1, r2, r3, ip, sp, lr}

0800b678 <HttpDaemon::HandlePost(bool)>:
 800b678:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b67a:	4604      	mov	r4, r0
 800b67c:	2900      	cmp	r1, #0
 800b67e:	f040 808a 	bne.w	800b796 <HttpDaemon::HandlePost(bool)+0x11e>
 800b682:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b686:	2b00      	cmp	r3, #0
 800b688:	d05a      	beq.n	800b740 <HttpDaemon::HandlePost(bool)+0xc8>
 800b68a:	6845      	ldr	r5, [r0, #4]
 800b68c:	4944      	ldr	r1, [pc, #272]	; (800b7a0 <HttpDaemon::HandlePost(bool)+0x128>)
 800b68e:	4628      	mov	r0, r5
 800b690:	f7ff fded 	bl	800b26e <strcmp>
 800b694:	2800      	cmp	r0, #0
 800b696:	bf0c      	ite	eq
 800b698:	2301      	moveq	r3, #1
 800b69a:	2300      	movne	r3, #0
 800b69c:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b6a0:	d052      	beq.n	800b748 <HttpDaemon::HandlePost(bool)+0xd0>
 800b6a2:	4940      	ldr	r1, [pc, #256]	; (800b7a4 <HttpDaemon::HandlePost(bool)+0x12c>)
 800b6a4:	4628      	mov	r0, r5
 800b6a6:	f7ff fde2 	bl	800b26e <strcmp>
 800b6aa:	2800      	cmp	r0, #0
 800b6ac:	d04c      	beq.n	800b748 <HttpDaemon::HandlePost(bool)+0xd0>
 800b6ae:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b6b2:	e047      	b.n	800b744 <HttpDaemon::HandlePost(bool)+0xcc>
 800b6b4:	493c      	ldr	r1, [pc, #240]	; (800b7a8 <HttpDaemon::HandlePost(bool)+0x130>)
 800b6b6:	68a0      	ldr	r0, [r4, #8]
 800b6b8:	f10d 0207 	add.w	r2, sp, #7
 800b6bc:	f008 f903 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b6c0:	b9d8      	cbnz	r0, 800b6fa <HttpDaemon::HandlePost(bool)+0x82>
 800b6c2:	4b3a      	ldr	r3, [pc, #232]	; (800b7ac <HttpDaemon::HandlePost(bool)+0x134>)
 800b6c4:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b6c8:	681d      	ldr	r5, [r3, #0]
 800b6ca:	69a8      	ldr	r0, [r5, #24]
 800b6cc:	fab6 f186 	clz	r1, r6
 800b6d0:	0949      	lsrs	r1, r1, #5
 800b6d2:	b138      	cbz	r0, 800b6e4 <HttpDaemon::HandlePost(bool)+0x6c>
 800b6d4:	6803      	ldr	r3, [r0, #0]
 800b6d6:	7429      	strb	r1, [r5, #16]
 800b6d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6da:	4798      	blx	r3
 800b6dc:	b116      	cbz	r6, 800b6e4 <HttpDaemon::HandlePost(bool)+0x6c>
 800b6de:	4b34      	ldr	r3, [pc, #208]	; (800b7b0 <HttpDaemon::HandlePost(bool)+0x138>)
 800b6e0:	681b      	ldr	r3, [r3, #0]
 800b6e2:	606b      	str	r3, [r5, #4]
 800b6e4:	4b33      	ldr	r3, [pc, #204]	; (800b7b4 <HttpDaemon::HandlePost(bool)+0x13c>)
 800b6e6:	4a34      	ldr	r2, [pc, #208]	; (800b7b8 <HttpDaemon::HandlePost(bool)+0x140>)
 800b6e8:	4834      	ldr	r0, [pc, #208]	; (800b7bc <HttpDaemon::HandlePost(bool)+0x144>)
 800b6ea:	6023      	str	r3, [r4, #0]
 800b6ec:	f240 519f 	movw	r1, #1439	; 0x59f
 800b6f0:	f7fe fe12 	bl	800a318 <snprintf>
 800b6f4:	8460      	strh	r0, [r4, #34]	; 0x22
 800b6f6:	20c8      	movs	r0, #200	; 0xc8
 800b6f8:	e024      	b.n	800b744 <HttpDaemon::HandlePost(bool)+0xcc>
 800b6fa:	4931      	ldr	r1, [pc, #196]	; (800b7c0 <HttpDaemon::HandlePost(bool)+0x148>)
 800b6fc:	68a0      	ldr	r0, [r4, #8]
 800b6fe:	f10d 0207 	add.w	r2, sp, #7
 800b702:	f008 f8e0 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b706:	b9d8      	cbnz	r0, 800b740 <HttpDaemon::HandlePost(bool)+0xc8>
 800b708:	4b2e      	ldr	r3, [pc, #184]	; (800b7c4 <HttpDaemon::HandlePost(bool)+0x14c>)
 800b70a:	6818      	ldr	r0, [r3, #0]
 800b70c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b710:	b11b      	cbz	r3, 800b71a <HttpDaemon::HandlePost(bool)+0xa2>
 800b712:	2104      	movs	r1, #4
 800b714:	f008 fc74 	bl	8014000 <LedBlink::SetMode(ledblink::Mode)>
 800b718:	e7e4      	b.n	800b6e4 <HttpDaemon::HandlePost(bool)+0x6c>
 800b71a:	2102      	movs	r1, #2
 800b71c:	e7fa      	b.n	800b714 <HttpDaemon::HandlePost(bool)+0x9c>
 800b71e:	4b2a      	ldr	r3, [pc, #168]	; (800b7c8 <HttpDaemon::HandlePost(bool)+0x150>)
 800b720:	2001      	movs	r0, #1
 800b722:	781d      	ldrb	r5, [r3, #0]
 800b724:	f7ff fdca 	bl	800b2bc <PropertiesConfig::EnableJSON(bool)>
 800b728:	4b28      	ldr	r3, [pc, #160]	; (800b7cc <HttpDaemon::HandlePost(bool)+0x154>)
 800b72a:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800b72c:	6818      	ldr	r0, [r3, #0]
 800b72e:	68a1      	ldr	r1, [r4, #8]
 800b730:	f005 0501 	and.w	r5, r5, #1
 800b734:	f7ff fa3a 	bl	800abac <RemoteConfig::HandleSet(void*, unsigned int)>
 800b738:	4628      	mov	r0, r5
 800b73a:	f7ff fdbf 	bl	800b2bc <PropertiesConfig::EnableJSON(bool)>
 800b73e:	e7d1      	b.n	800b6e4 <HttpDaemon::HandlePost(bool)+0x6c>
 800b740:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b744:	b002      	add	sp, #8
 800b746:	bd70      	pop	{r4, r5, r6, pc}
 800b748:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b74a:	6962      	ldr	r2, [r4, #20]
 800b74c:	429a      	cmp	r2, r3
 800b74e:	dbd2      	blt.n	800b6f6 <HttpDaemon::HandlePost(bool)+0x7e>
 800b750:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b752:	2b00      	cmp	r3, #0
 800b754:	d0cf      	beq.n	800b6f6 <HttpDaemon::HandlePost(bool)+0x7e>
 800b756:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b75a:	2b00      	cmp	r3, #0
 800b75c:	d0df      	beq.n	800b71e <HttpDaemon::HandlePost(bool)+0xa6>
 800b75e:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800b760:	68a0      	ldr	r0, [r4, #8]
 800b762:	2201      	movs	r2, #1
 800b764:	f007 fe28 	bl	80133b8 <properties::convert_json_file(char*, unsigned short, bool)>
 800b768:	2800      	cmp	r0, #0
 800b76a:	dde9      	ble.n	800b740 <HttpDaemon::HandlePost(bool)+0xc8>
 800b76c:	4918      	ldr	r1, [pc, #96]	; (800b7d0 <HttpDaemon::HandlePost(bool)+0x158>)
 800b76e:	68a0      	ldr	r0, [r4, #8]
 800b770:	f10d 0207 	add.w	r2, sp, #7
 800b774:	f008 f8a7 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b778:	2800      	cmp	r0, #0
 800b77a:	d19b      	bne.n	800b6b4 <HttpDaemon::HandlePost(bool)+0x3c>
 800b77c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b780:	2b00      	cmp	r3, #0
 800b782:	d0af      	beq.n	800b6e4 <HttpDaemon::HandlePost(bool)+0x6c>
 800b784:	4b11      	ldr	r3, [pc, #68]	; (800b7cc <HttpDaemon::HandlePost(bool)+0x154>)
 800b786:	681b      	ldr	r3, [r3, #0]
 800b788:	7b9b      	ldrb	r3, [r3, #14]
 800b78a:	2b00      	cmp	r3, #0
 800b78c:	d0d8      	beq.n	800b740 <HttpDaemon::HandlePost(bool)+0xc8>
 800b78e:	4b11      	ldr	r3, [pc, #68]	; (800b7d4 <HttpDaemon::HandlePost(bool)+0x15c>)
 800b790:	6818      	ldr	r0, [r3, #0]
 800b792:	f008 fcf3 	bl	801417c <Hardware::Reboot()>
 800b796:	68c3      	ldr	r3, [r0, #12]
 800b798:	6083      	str	r3, [r0, #8]
 800b79a:	6943      	ldr	r3, [r0, #20]
 800b79c:	8483      	strh	r3, [r0, #36]	; 0x24
 800b79e:	e7da      	b.n	800b756 <HttpDaemon::HandlePost(bool)+0xde>
 800b7a0:	08017018 	stmdaeq	r1, {r3, r4, ip, sp, lr}
 800b7a4:	08016fbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, fp, sp, lr}
 800b7a8:	0801691a 	stmdaeq	r1, {r1, r3, r4, r8, fp, sp, lr}
 800b7ac:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800b7b0:	2000fedc 	ldrdcs	pc, [r0], -ip
 800b7b4:	080171e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, ip, sp, lr}
 800b7b8:	08017035 	stmdaeq	r1, {r0, r2, r4, r5, ip, sp, lr}
 800b7bc:	20000128 	andcs	r0, r0, r8, lsr #2
 800b7c0:	0801702c 	stmdaeq	r1, {r2, r3, r5, ip, sp, lr}
 800b7c4:	2000fec0 	andcs	pc, r0, r0, asr #29
 800b7c8:	2000fdd0 	ldrdcs	pc, [r0], -r0
 800b7cc:	20000124 	andcs	r0, r0, r4, lsr #2
 800b7d0:	08017025 	stmdaeq	r1, {r0, r2, r5, ip, sp, lr}
 800b7d4:	2000fec4 	andcs	pc, r0, r4, asr #29

0800b7d8 <HttpDaemon::Run()>:
 800b7d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b7da:	4e46      	ldr	r6, [pc, #280]	; (800b8f4 <HttpDaemon::Run()+0x11c>)
 800b7dc:	6901      	ldr	r1, [r0, #16]
 800b7de:	4604      	mov	r4, r0
 800b7e0:	f100 020c 	add.w	r2, r0, #12
 800b7e4:	6830      	ldr	r0, [r6, #0]
 800b7e6:	f005 ffe4 	bl	80117b2 <Network::TcpRead(int, unsigned char const**)>
 800b7ea:	6160      	str	r0, [r4, #20]
 800b7ec:	2800      	cmp	r0, #0
 800b7ee:	d05b      	beq.n	800b8a8 <HttpDaemon::Run()+0xd0>
 800b7f0:	69a3      	ldr	r3, [r4, #24]
 800b7f2:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b7f6:	d159      	bne.n	800b8ac <HttpDaemon::Run()+0xd4>
 800b7f8:	4620      	mov	r0, r4
 800b7fa:	f7ff fe1b 	bl	800b434 <HttpDaemon::ParseRequest()>
 800b7fe:	28c8      	cmp	r0, #200	; 0xc8
 800b800:	61a0      	str	r0, [r4, #24]
 800b802:	d106      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b804:	69e3      	ldr	r3, [r4, #28]
 800b806:	2b00      	cmp	r3, #0
 800b808:	d142      	bne.n	800b890 <HttpDaemon::Run()+0xb8>
 800b80a:	4620      	mov	r0, r4
 800b80c:	f7ff fe8e 	bl	800b52c <HttpDaemon::HandleGet()>
 800b810:	61a0      	str	r0, [r4, #24]
 800b812:	69a3      	ldr	r3, [r4, #24]
 800b814:	2bc8      	cmp	r3, #200	; 0xc8
 800b816:	d06b      	beq.n	800b8f0 <HttpDaemon::Run()+0x118>
 800b818:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b81c:	d05e      	beq.n	800b8dc <HttpDaemon::Run()+0x104>
 800b81e:	dc4e      	bgt.n	800b8be <HttpDaemon::Run()+0xe6>
 800b820:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b824:	d05c      	beq.n	800b8e0 <HttpDaemon::Run()+0x108>
 800b826:	f240 129d 	movw	r2, #413	; 0x19d
 800b82a:	4293      	cmp	r3, r2
 800b82c:	d05a      	beq.n	800b8e4 <HttpDaemon::Run()+0x10c>
 800b82e:	4d32      	ldr	r5, [pc, #200]	; (800b8f8 <HttpDaemon::Run()+0x120>)
 800b830:	4a32      	ldr	r2, [pc, #200]	; (800b8fc <HttpDaemon::Run()+0x124>)
 800b832:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b836:	bf18      	it	ne
 800b838:	4615      	movne	r5, r2
 800b83a:	4a31      	ldr	r2, [pc, #196]	; (800b900 <HttpDaemon::Run()+0x128>)
 800b83c:	6022      	str	r2, [r4, #0]
 800b83e:	e9cd 5500 	strd	r5, r5, [sp]
 800b842:	4a30      	ldr	r2, [pc, #192]	; (800b904 <HttpDaemon::Run()+0x12c>)
 800b844:	4830      	ldr	r0, [pc, #192]	; (800b908 <HttpDaemon::Run()+0x130>)
 800b846:	f240 519f 	movw	r1, #1439	; 0x59f
 800b84a:	f7fe fd65 	bl	800a318 <snprintf>
 800b84e:	8460      	strh	r0, [r4, #34]	; 0x22
 800b850:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b852:	9303      	str	r3, [sp, #12]
 800b854:	6823      	ldr	r3, [r4, #0]
 800b856:	9302      	str	r3, [sp, #8]
 800b858:	4b2c      	ldr	r3, [pc, #176]	; (800b90c <HttpDaemon::Run()+0x134>)
 800b85a:	4a2d      	ldr	r2, [pc, #180]	; (800b910 <HttpDaemon::Run()+0x138>)
 800b85c:	68e0      	ldr	r0, [r4, #12]
 800b85e:	e9cd 5300 	strd	r5, r3, [sp]
 800b862:	f240 519f 	movw	r1, #1439	; 0x59f
 800b866:	69a3      	ldr	r3, [r4, #24]
 800b868:	f7fe fd56 	bl	800a318 <snprintf>
 800b86c:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b870:	b283      	uxth	r3, r0
 800b872:	6830      	ldr	r0, [r6, #0]
 800b874:	f005 ffa1 	bl	80117ba <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b878:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b87a:	4a23      	ldr	r2, [pc, #140]	; (800b908 <HttpDaemon::Run()+0x130>)
 800b87c:	6921      	ldr	r1, [r4, #16]
 800b87e:	6830      	ldr	r0, [r6, #0]
 800b880:	f005 ff9b 	bl	80117ba <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b884:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b888:	2302      	movs	r3, #2
 800b88a:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b88e:	e00b      	b.n	800b8a8 <HttpDaemon::Run()+0xd0>
 800b890:	2b01      	cmp	r3, #1
 800b892:	d1be      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b894:	2100      	movs	r1, #0
 800b896:	4620      	mov	r0, r4
 800b898:	f7ff feee 	bl	800b678 <HttpDaemon::HandlePost(bool)>
 800b89c:	28c8      	cmp	r0, #200	; 0xc8
 800b89e:	61a0      	str	r0, [r4, #24]
 800b8a0:	d1b7      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b8a2:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b8a4:	2b00      	cmp	r3, #0
 800b8a6:	d1b4      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b8a8:	b004      	add	sp, #16
 800b8aa:	bd70      	pop	{r4, r5, r6, pc}
 800b8ac:	2bc8      	cmp	r3, #200	; 0xc8
 800b8ae:	d1b0      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b8b0:	69e1      	ldr	r1, [r4, #28]
 800b8b2:	2901      	cmp	r1, #1
 800b8b4:	d1ad      	bne.n	800b812 <HttpDaemon::Run()+0x3a>
 800b8b6:	4620      	mov	r0, r4
 800b8b8:	f7ff fede 	bl	800b678 <HttpDaemon::HandlePost(bool)>
 800b8bc:	e7a8      	b.n	800b810 <HttpDaemon::Run()+0x38>
 800b8be:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b8c2:	4293      	cmp	r3, r2
 800b8c4:	d010      	beq.n	800b8e8 <HttpDaemon::Run()+0x110>
 800b8c6:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b8ca:	4293      	cmp	r3, r2
 800b8cc:	d00e      	beq.n	800b8ec <HttpDaemon::Run()+0x114>
 800b8ce:	4d11      	ldr	r5, [pc, #68]	; (800b914 <HttpDaemon::Run()+0x13c>)
 800b8d0:	4a0a      	ldr	r2, [pc, #40]	; (800b8fc <HttpDaemon::Run()+0x124>)
 800b8d2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b8d6:	bf18      	it	ne
 800b8d8:	4615      	movne	r5, r2
 800b8da:	e7ae      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8dc:	4d0e      	ldr	r5, [pc, #56]	; (800b918 <HttpDaemon::Run()+0x140>)
 800b8de:	e7ac      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8e0:	4d0e      	ldr	r5, [pc, #56]	; (800b91c <HttpDaemon::Run()+0x144>)
 800b8e2:	e7aa      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8e4:	4d0e      	ldr	r5, [pc, #56]	; (800b920 <HttpDaemon::Run()+0x148>)
 800b8e6:	e7a8      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8e8:	4d0e      	ldr	r5, [pc, #56]	; (800b924 <HttpDaemon::Run()+0x14c>)
 800b8ea:	e7a6      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8ec:	4d0e      	ldr	r5, [pc, #56]	; (800b928 <HttpDaemon::Run()+0x150>)
 800b8ee:	e7a4      	b.n	800b83a <HttpDaemon::Run()+0x62>
 800b8f0:	4d0e      	ldr	r5, [pc, #56]	; (800b92c <HttpDaemon::Run()+0x154>)
 800b8f2:	e7ad      	b.n	800b850 <HttpDaemon::Run()+0x78>
 800b8f4:	2000fadc 	ldrdcs	pc, [r0], -ip
 800b8f8:	08017091 	stmdaeq	r1, {r0, r4, r7, ip, sp, lr}
 800b8fc:	08017118 	stmdaeq	r1, {r3, r4, r8, ip, sp, lr}
 800b900:	080171e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, ip, sp, lr}
 800b904:	08017129 	stmdaeq	r1, {r0, r3, r5, r8, ip, sp, lr}
 800b908:	20000128 	andcs	r0, r0, r8, lsr #2
 800b90c:	080171dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip, sp, lr}
 800b910:	08017184 	stmdaeq	r1, {r2, r7, r8, ip, sp, lr}
 800b914:	080170d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, ip, sp, lr}
 800b918:	080170c0 	stmdaeq	r1, {r6, r7, ip, sp, lr}
 800b91c:	0801709d 	stmdaeq	r1, {r0, r2, r3, r4, r7, ip, sp, lr}
 800b920:	080170a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip, sp, lr}
 800b924:	080170eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, ip, sp, lr}
 800b928:	08017102 	stmdaeq	r1, {r1, r8, ip, sp, lr}
 800b92c:	08017126 	stmdaeq	r1, {r1, r2, r5, r8, ip, sp, lr}

0800b930 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b930:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b932:	4b13      	ldr	r3, [pc, #76]	; (800b980 <remoteconfig::json_get_list(char*, unsigned short)+0x50>)
 800b934:	4f13      	ldr	r7, [pc, #76]	; (800b984 <remoteconfig::json_get_list(char*, unsigned short)+0x54>)
 800b936:	681b      	ldr	r3, [r3, #0]
 800b938:	b08b      	sub	sp, #44	; 0x2c
 800b93a:	4605      	mov	r5, r0
 800b93c:	6838      	ldr	r0, [r7, #0]
 800b93e:	695c      	ldr	r4, [r3, #20]
 800b940:	9109      	str	r1, [sp, #36]	; 0x24
 800b942:	f7ff f80d 	bl	800a960 <RemoteConfig::GetStringNode() const>
 800b946:	4606      	mov	r6, r0
 800b948:	6838      	ldr	r0, [r7, #0]
 800b94a:	f7ff f815 	bl	800a978 <RemoteConfig::GetStringOutput() const>
 800b94e:	4b0e      	ldr	r3, [pc, #56]	; (800b988 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b950:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b952:	7a1a      	ldrb	r2, [r3, #8]
 800b954:	9604      	str	r6, [sp, #16]
 800b956:	3309      	adds	r3, #9
 800b958:	9303      	str	r3, [sp, #12]
 800b95a:	0e23      	lsrs	r3, r4, #24
 800b95c:	9302      	str	r3, [sp, #8]
 800b95e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b962:	9301      	str	r3, [sp, #4]
 800b964:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b968:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b96c:	9300      	str	r3, [sp, #0]
 800b96e:	4a07      	ldr	r2, [pc, #28]	; (800b98c <remoteconfig::json_get_list(char*, unsigned short)+0x5c>)
 800b970:	b2e3      	uxtb	r3, r4
 800b972:	4628      	mov	r0, r5
 800b974:	f7fe fcd0 	bl	800a318 <snprintf>
 800b978:	b280      	uxth	r0, r0
 800b97a:	b00b      	add	sp, #44	; 0x2c
 800b97c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b97e:	bf00      	nop
 800b980:	2000fadc 	ldrdcs	pc, [r0], -ip
 800b984:	20000124 	andcs	r0, r0, r4, lsr #2
 800b988:	20000100 	andcs	r0, r0, r0, lsl #2
 800b98c:	080172c1 	stmdaeq	r1, {r0, r6, r7, r9, ip, sp, lr}

0800b990 <remoteconfig::json_get_version(char*, unsigned short)>:
 800b990:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b992:	4b0a      	ldr	r3, [pc, #40]	; (800b9bc <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b994:	9305      	str	r3, [sp, #20]
 800b996:	2208      	movs	r2, #8
 800b998:	9204      	str	r2, [sp, #16]
 800b99a:	f1a3 020b 	sub.w	r2, r3, #11
 800b99e:	9203      	str	r2, [sp, #12]
 800b9a0:	220b      	movs	r2, #11
 800b9a2:	9202      	str	r2, [sp, #8]
 800b9a4:	3b0e      	subs	r3, #14
 800b9a6:	4a06      	ldr	r2, [pc, #24]	; (800b9c0 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b9a8:	9201      	str	r2, [sp, #4]
 800b9aa:	9300      	str	r3, [sp, #0]
 800b9ac:	4a05      	ldr	r2, [pc, #20]	; (800b9c4 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b9ae:	2303      	movs	r3, #3
 800b9b0:	f7fe fcb2 	bl	800a318 <snprintf>
 800b9b4:	b280      	uxth	r0, r0
 800b9b6:	b007      	add	sp, #28
 800b9b8:	f85d fb04 	ldr.w	pc, [sp], #4
 800b9bc:	2000fe72 	andcs	pc, r0, r2, ror lr	; <UNPREDICTABLE>
 800b9c0:	080171dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip, sp, lr}
 800b9c4:	08017320 	stmdaeq	r1, {r5, r8, r9, ip, sp, lr}

0800b9c8 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b9c8:	b508      	push	{r3, lr}
 800b9ca:	4b05      	ldr	r3, [pc, #20]	; (800b9e0 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b9cc:	681a      	ldr	r2, [r3, #0]
 800b9ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b9d2:	fbb2 f3f3 	udiv	r3, r2, r3
 800b9d6:	4a03      	ldr	r2, [pc, #12]	; (800b9e4 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b9d8:	f7fe fc9e 	bl	800a318 <snprintf>
 800b9dc:	b280      	uxth	r0, r0
 800b9de:	bd08      	pop	{r3, pc}
 800b9e0:	2000fedc 	ldrdcs	pc, [r0], -ip
 800b9e4:	08017366 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, ip, sp, lr}

0800b9e8 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b9e8:	b508      	push	{r3, lr}
 800b9ea:	4b05      	ldr	r3, [pc, #20]	; (800ba00 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b9ec:	4a05      	ldr	r2, [pc, #20]	; (800ba04 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b9ee:	681b      	ldr	r3, [r3, #0]
 800b9f0:	7c1b      	ldrb	r3, [r3, #16]
 800b9f2:	f083 0301 	eor.w	r3, r3, #1
 800b9f6:	f7fe fc8f 	bl	800a318 <snprintf>
 800b9fa:	b280      	uxth	r0, r0
 800b9fc:	bd08      	pop	{r3, pc}
 800b9fe:	bf00      	nop
 800ba00:	2000fdd4 	ldrdcs	pc, [r0], -r4
 800ba04:	08017375 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}

0800ba08 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ba08:	b508      	push	{r3, lr}
 800ba0a:	4a02      	ldr	r2, [pc, #8]	; (800ba14 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ba0c:	f7fe fc84 	bl	800a318 <snprintf>
 800ba10:	b280      	uxth	r0, r0
 800ba12:	bd08      	pop	{r3, pc}
 800ba14:	08017384 	stmdaeq	r1, {r2, r7, r8, r9, ip, sp, lr}

0800ba18 <get_file_content(char const*, char*)>:
 800ba18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba1a:	4a11      	ldr	r2, [pc, #68]	; (800ba60 <get_file_content(char const*, char*)+0x48>)
 800ba1c:	2300      	movs	r3, #0
 800ba1e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ba22:	1e46      	subs	r6, r0, #1
 800ba24:	3c01      	subs	r4, #1
 800ba26:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ba2a:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ba2e:	42bd      	cmp	r5, r7
 800ba30:	d005      	beq.n	800ba3e <get_file_content(char const*, char*)+0x26>
 800ba32:	3301      	adds	r3, #1
 800ba34:	2b03      	cmp	r3, #3
 800ba36:	d1f2      	bne.n	800ba1e <get_file_content(char const*, char*)+0x6>
 800ba38:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ba3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba3e:	2d00      	cmp	r5, #0
 800ba40:	d1f1      	bne.n	800ba26 <get_file_content(char const*, char*)+0xe>
 800ba42:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800ba46:	4608      	mov	r0, r1
 800ba48:	6853      	ldr	r3, [r2, #4]
 800ba4a:	3b01      	subs	r3, #1
 800ba4c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ba50:	f800 2b01 	strb.w	r2, [r0], #1
 800ba54:	2a00      	cmp	r2, #0
 800ba56:	d1f9      	bne.n	800ba4c <get_file_content(char const*, char*)+0x34>
 800ba58:	1a41      	subs	r1, r0, r1
 800ba5a:	1e48      	subs	r0, r1, #1
 800ba5c:	e7ee      	b.n	800ba3c <get_file_content(char const*, char*)+0x24>
 800ba5e:	bf00      	nop
 800ba60:	080176c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, ip, sp, lr}

0800ba64 <lightset::Data::Get()>:
 800ba64:	4b03      	ldr	r3, [pc, #12]	; (800ba74 <lightset::Data::Get()+0x10>)
 800ba66:	4804      	ldr	r0, [pc, #16]	; (800ba78 <lightset::Data::Get()+0x14>)
 800ba68:	681a      	ldr	r2, [r3, #0]
 800ba6a:	07d2      	lsls	r2, r2, #31
 800ba6c:	bf5c      	itt	pl
 800ba6e:	2201      	movpl	r2, #1
 800ba70:	601a      	strpl	r2, [r3, #0]
 800ba72:	4770      	bx	lr
 800ba74:	200006c8 	andcs	r0, r0, r8, asr #13
 800ba78:	20030000 	andcs	r0, r3, r0

0800ba7c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800ba7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba7e:	460c      	mov	r4, r1
 800ba80:	4616      	mov	r6, r2
 800ba82:	4605      	mov	r5, r0
 800ba84:	f7ff ffee 	bl	800ba64 <lightset::Data::Get()>
 800ba88:	f240 6304 	movw	r3, #1540	; 0x604
 800ba8c:	436b      	muls	r3, r5
 800ba8e:	1e5a      	subs	r2, r3, #1
 800ba90:	4402      	add	r2, r0
 800ba92:	19a7      	adds	r7, r4, r6
 800ba94:	4621      	mov	r1, r4
 800ba96:	42b9      	cmp	r1, r7
 800ba98:	d10b      	bne.n	800bab2 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x36>
 800ba9a:	f240 6204 	movw	r2, #1540	; 0x604
 800ba9e:	fb02 0505 	mla	r5, r2, r5, r0
 800baa2:	f203 33ff 	addw	r3, r3, #1023	; 0x3ff
 800baa6:	f8c5 6600 	str.w	r6, [r5, #1536]	; 0x600
 800baaa:	4418      	add	r0, r3
 800baac:	42bc      	cmp	r4, r7
 800baae:	d105      	bne.n	800babc <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x40>
 800bab0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bab2:	f811 cb01 	ldrb.w	ip, [r1], #1
 800bab6:	f802 cf01 	strb.w	ip, [r2, #1]!
 800baba:	e7ec      	b.n	800ba96 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x1a>
 800babc:	f814 3b01 	ldrb.w	r3, [r4], #1
 800bac0:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bac4:	e7f2      	b.n	800baac <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x30>
	...

0800bac8 <DdpDisplay::DdpDisplay()>:
 800bac8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bacc:	b510      	push	{r4, lr}
 800bace:	6083      	str	r3, [r0, #8]
 800bad0:	2300      	movs	r3, #0
 800bad2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800bad6:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800bada:	6203      	str	r3, [r0, #32]
 800badc:	4b04      	ldr	r3, [pc, #16]	; (800baf0 <DdpDisplay::DdpDisplay()+0x28>)
 800bade:	6018      	str	r0, [r3, #0]
 800bae0:	4b04      	ldr	r3, [pc, #16]	; (800baf4 <DdpDisplay::DdpDisplay()+0x2c>)
 800bae2:	4604      	mov	r4, r0
 800bae4:	4601      	mov	r1, r0
 800bae6:	6818      	ldr	r0, [r3, #0]
 800bae8:	f005 fb79 	bl	80111de <Network::MacAddressCopyTo(unsigned char*)>
 800baec:	4620      	mov	r0, r4
 800baee:	bd10      	pop	{r4, pc}
 800baf0:	2000081c 	andcs	r0, r0, ip, lsl r8
 800baf4:	2000fadc 	ldrdcs	pc, [r0], -ip

0800baf8 <DdpDisplay::CalculateOffsets()>:
 800baf8:	4909      	ldr	r1, [pc, #36]	; (800bb20 <DdpDisplay::CalculateOffsets()+0x28>)
 800bafa:	2200      	movs	r2, #0
 800bafc:	b530      	push	{r4, r5, lr}
 800bafe:	4613      	mov	r3, r2
 800bb00:	460c      	mov	r4, r1
 800bb02:	6945      	ldr	r5, [r0, #20]
 800bb04:	3201      	adds	r2, #1
 800bb06:	442b      	add	r3, r5
 800bb08:	2a10      	cmp	r2, #16
 800bb0a:	f841 3b04 	str.w	r3, [r1], #4
 800bb0e:	d1f8      	bne.n	800bb02 <DdpDisplay::CalculateOffsets()+0xa>
 800bb10:	f503 7200 	add.w	r2, r3, #512	; 0x200
 800bb14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800bb18:	6422      	str	r2, [r4, #64]	; 0x40
 800bb1a:	6463      	str	r3, [r4, #68]	; 0x44
 800bb1c:	bd30      	pop	{r4, r5, pc}
 800bb1e:	bf00      	nop
 800bb20:	200006cc 	andcs	r0, r0, ip, asr #13

0800bb24 <DdpDisplay::Start()>:
 800bb24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb26:	4d1c      	ldr	r5, [pc, #112]	; (800bb98 <DdpDisplay::Start()+0x74>)
 800bb28:	4604      	mov	r4, r0
 800bb2a:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800bb2e:	6828      	ldr	r0, [r5, #0]
 800bb30:	f005 fb4f 	bl	80111d2 <Network::Begin(unsigned short)>
 800bb34:	f104 0124 	add.w	r1, r4, #36	; 0x24
 800bb38:	60a0      	str	r0, [r4, #8]
 800bb3a:	f104 022e 	add.w	r2, r4, #46	; 0x2e
 800bb3e:	460b      	mov	r3, r1
 800bb40:	2000      	movs	r0, #0
 800bb42:	4293      	cmp	r3, r2
 800bb44:	d120      	bne.n	800bb88 <DdpDisplay::Start()+0x64>
 800bb46:	2344      	movs	r3, #68	; 0x44
 800bb48:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800bb4c:	23fb      	movs	r3, #251	; 0xfb
 800bb4e:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
 800bb52:	4623      	mov	r3, r4
 800bb54:	222b      	movs	r2, #43	; 0x2b
 800bb56:	f803 2f2d 	strb.w	r2, [r3, #45]!
 800bb5a:	4a10      	ldr	r2, [pc, #64]	; (800bb9c <DdpDisplay::Start()+0x78>)
 800bb5c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800bb60:	4298      	cmp	r0, r3
 800bb62:	d114      	bne.n	800bb8e <DdpDisplay::Start()+0x6a>
 800bb64:	682a      	ldr	r2, [r5, #0]
 800bb66:	69d0      	ldr	r0, [r2, #28]
 800bb68:	6953      	ldr	r3, [r2, #20]
 800bb6a:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800bb6e:	9200      	str	r2, [sp, #0]
 800bb70:	ea63 0300 	orn	r3, r3, r0
 800bb74:	2235      	movs	r2, #53	; 0x35
 800bb76:	7a20      	ldrb	r0, [r4, #8]
 800bb78:	f004 fe5e 	bl	8010838 <udp_send>
 800bb7c:	4620      	mov	r0, r4
 800bb7e:	b002      	add	sp, #8
 800bb80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb84:	f7ff bfb8 	b.w	800baf8 <DdpDisplay::CalculateOffsets()>
 800bb88:	f803 0b01 	strb.w	r0, [r3], #1
 800bb8c:	e7d9      	b.n	800bb42 <DdpDisplay::Start()+0x1e>
 800bb8e:	f812 6b01 	ldrb.w	r6, [r2], #1
 800bb92:	f803 6f01 	strb.w	r6, [r3, #1]!
 800bb96:	e7e3      	b.n	800bb60 <DdpDisplay::Start()+0x3c>
 800bb98:	2000fadc 	ldrdcs	pc, [r0], -ip
 800bb9c:	08017ff7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0800bba0 <DdpDisplay::Stop()>:
 800bba0:	b510      	push	{r4, lr}
 800bba2:	4b05      	ldr	r3, [pc, #20]	; (800bbb8 <DdpDisplay::Stop()+0x18>)
 800bba4:	4604      	mov	r4, r0
 800bba6:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800bbaa:	6818      	ldr	r0, [r3, #0]
 800bbac:	f005 fb14 	bl	80111d8 <Network::End(unsigned short)>
 800bbb0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bbb4:	60a3      	str	r3, [r4, #8]
 800bbb6:	bd10      	pop	{r4, pc}
 800bbb8:	2000fadc 	ldrdcs	pc, [r0], -ip

0800bbbc <DdpDisplay::HandleQuery()>:
 800bbbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbc0:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800bbc4:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800bbc8:	2bfb      	cmp	r3, #251	; 0xfb
 800bbca:	b0af      	sub	sp, #188	; 0xbc
 800bbcc:	4683      	mov	fp, r0
 800bbce:	d129      	bne.n	800bc24 <DdpDisplay::HandleQuery()+0x68>
 800bbd0:	7943      	ldrb	r3, [r0, #5]
 800bbd2:	9305      	str	r3, [sp, #20]
 800bbd4:	7903      	ldrb	r3, [r0, #4]
 800bbd6:	9304      	str	r3, [sp, #16]
 800bbd8:	78c3      	ldrb	r3, [r0, #3]
 800bbda:	9303      	str	r3, [sp, #12]
 800bbdc:	7883      	ldrb	r3, [r0, #2]
 800bbde:	9302      	str	r3, [sp, #8]
 800bbe0:	7843      	ldrb	r3, [r0, #1]
 800bbe2:	9301      	str	r3, [sp, #4]
 800bbe4:	7803      	ldrb	r3, [r0, #0]
 800bbe6:	4ac9      	ldr	r2, [pc, #804]	; (800bf0c <DdpDisplay::HandleQuery()+0x350>)
 800bbe8:	9300      	str	r3, [sp, #0]
 800bbea:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800bbee:	4bc8      	ldr	r3, [pc, #800]	; (800bf10 <DdpDisplay::HandleQuery()+0x354>)
 800bbf0:	302e      	adds	r0, #46	; 0x2e
 800bbf2:	f7fe fb91 	bl	800a318 <snprintf>
 800bbf6:	2345      	movs	r3, #69	; 0x45
 800bbf8:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
 800bbfc:	ba43      	rev16	r3, r0
 800bbfe:	f8ab 302c 	strh.w	r3, [fp, #44]	; 0x2c
 800bc02:	4bc4      	ldr	r3, [pc, #784]	; (800bf14 <DdpDisplay::HandleQuery()+0x358>)
 800bc04:	681a      	ldr	r2, [r3, #0]
 800bc06:	69d1      	ldr	r1, [r2, #28]
 800bc08:	6953      	ldr	r3, [r2, #20]
 800bc0a:	300a      	adds	r0, #10
 800bc0c:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800bc10:	9200      	str	r2, [sp, #0]
 800bc12:	ea63 0301 	orn	r3, r3, r1
 800bc16:	b282      	uxth	r2, r0
 800bc18:	f10b 0124 	add.w	r1, fp, #36	; 0x24
 800bc1c:	f89b 0008 	ldrb.w	r0, [fp, #8]
 800bc20:	f004 fe0a 	bl	8010838 <udp_send>
 800bc24:	f89b 3027 	ldrb.w	r3, [fp, #39]	; 0x27
 800bc28:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800bc2c:	2bfa      	cmp	r3, #250	; 0xfa
 800bc2e:	f040 80b4 	bne.w	800bd9a <DdpDisplay::HandleQuery()+0x1de>
 800bc32:	f10b 032e 	add.w	r3, fp, #46	; 0x2e
 800bc36:	ee07 3a90 	vmov	s15, r3
 800bc3a:	4bb6      	ldr	r3, [pc, #728]	; (800bf14 <DdpDisplay::HandleQuery()+0x358>)
 800bc3c:	f8db 001c 	ldr.w	r0, [fp, #28]
 800bc40:	6819      	ldr	r1, [r3, #0]
 800bc42:	694a      	ldr	r2, [r1, #20]
 800bc44:	b2d3      	uxtb	r3, r2
 800bc46:	ee07 3a10 	vmov	s14, r3
 800bc4a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc4e:	9323      	str	r3, [sp, #140]	; 0x8c
 800bc50:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc54:	9324      	str	r3, [sp, #144]	; 0x90
 800bc56:	0e13      	lsrs	r3, r2, #24
 800bc58:	69ca      	ldr	r2, [r1, #28]
 800bc5a:	9325      	str	r3, [sp, #148]	; 0x94
 800bc5c:	b2d3      	uxtb	r3, r2
 800bc5e:	9326      	str	r3, [sp, #152]	; 0x98
 800bc60:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc64:	9327      	str	r3, [sp, #156]	; 0x9c
 800bc66:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc6a:	9328      	str	r3, [sp, #160]	; 0xa0
 800bc6c:	0e13      	lsrs	r3, r2, #24
 800bc6e:	698a      	ldr	r2, [r1, #24]
 800bc70:	9329      	str	r3, [sp, #164]	; 0xa4
 800bc72:	b2d3      	uxtb	r3, r2
 800bc74:	932a      	str	r3, [sp, #168]	; 0xa8
 800bc76:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc7a:	932b      	str	r3, [sp, #172]	; 0xac
 800bc7c:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc80:	932c      	str	r3, [sp, #176]	; 0xb0
 800bc82:	0e13      	lsrs	r3, r2, #24
 800bc84:	932d      	str	r3, [sp, #180]	; 0xb4
 800bc86:	2800      	cmp	r0, #0
 800bc88:	f000 808a 	beq.w	800bda0 <DdpDisplay::HandleQuery()+0x1e4>
 800bc8c:	2801      	cmp	r0, #1
 800bc8e:	f8db 2010 	ldr.w	r2, [fp, #16]
 800bc92:	f000 8095 	beq.w	800bdc0 <DdpDisplay::HandleQuery()+0x204>
 800bc96:	2802      	cmp	r0, #2
 800bc98:	f000 80a2 	beq.w	800bde0 <DdpDisplay::HandleQuery()+0x224>
 800bc9c:	2803      	cmp	r0, #3
 800bc9e:	f000 80ae 	beq.w	800bdfe <DdpDisplay::HandleQuery()+0x242>
 800bca2:	2804      	cmp	r0, #4
 800bca4:	f000 80ba 	beq.w	800be1c <DdpDisplay::HandleQuery()+0x260>
 800bca8:	2805      	cmp	r0, #5
 800bcaa:	f000 80c6 	beq.w	800be3a <DdpDisplay::HandleQuery()+0x27e>
 800bcae:	2806      	cmp	r0, #6
 800bcb0:	f000 80d2 	beq.w	800be58 <DdpDisplay::HandleQuery()+0x29c>
 800bcb4:	2807      	cmp	r0, #7
 800bcb6:	f000 80de 	beq.w	800be76 <DdpDisplay::HandleQuery()+0x2ba>
 800bcba:	2808      	cmp	r0, #8
 800bcbc:	f000 80ea 	beq.w	800be94 <DdpDisplay::HandleQuery()+0x2d8>
 800bcc0:	2809      	cmp	r0, #9
 800bcc2:	f000 80f6 	beq.w	800beb2 <DdpDisplay::HandleQuery()+0x2f6>
 800bcc6:	280a      	cmp	r0, #10
 800bcc8:	f000 8102 	beq.w	800bed0 <DdpDisplay::HandleQuery()+0x314>
 800bccc:	280b      	cmp	r0, #11
 800bcce:	f000 810e 	beq.w	800beee <DdpDisplay::HandleQuery()+0x332>
 800bcd2:	280c      	cmp	r0, #12
 800bcd4:	f000 8122 	beq.w	800bf1c <DdpDisplay::HandleQuery()+0x360>
 800bcd8:	280d      	cmp	r0, #13
 800bcda:	f000 812e 	beq.w	800bf3a <DdpDisplay::HandleQuery()+0x37e>
 800bcde:	280e      	cmp	r0, #14
 800bce0:	f000 813a 	beq.w	800bf58 <DdpDisplay::HandleQuery()+0x39c>
 800bce4:	280f      	cmp	r0, #15
 800bce6:	e9cd 2221 	strd	r2, r2, [sp, #132]	; 0x84
 800bcea:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bcee:	4611      	mov	r1, r2
 800bcf0:	4692      	mov	sl, r2
 800bcf2:	4691      	mov	r9, r2
 800bcf4:	4690      	mov	r8, r2
 800bcf6:	4696      	mov	lr, r2
 800bcf8:	4694      	mov	ip, r2
 800bcfa:	4617      	mov	r7, r2
 800bcfc:	4616      	mov	r6, r2
 800bcfe:	4615      	mov	r5, r2
 800bd00:	4614      	mov	r4, r2
 800bd02:	d06b      	beq.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bd04:	4610      	mov	r0, r2
 800bd06:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bd0a:	e9cd 331b 	strd	r3, r3, [sp, #108]	; 0x6c
 800bd0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800bd10:	9318      	str	r3, [sp, #96]	; 0x60
 800bd12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bd14:	9317      	str	r3, [sp, #92]	; 0x5c
 800bd16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800bd18:	9316      	str	r3, [sp, #88]	; 0x58
 800bd1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800bd1c:	920b      	str	r2, [sp, #44]	; 0x2c
 800bd1e:	e9cd a314 	strd	sl, r3, [sp, #80]	; 0x50
 800bd22:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bd24:	930a      	str	r3, [sp, #40]	; 0x28
 800bd26:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800bd28:	9309      	str	r3, [sp, #36]	; 0x24
 800bd2a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800bd2c:	9308      	str	r3, [sp, #32]
 800bd2e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800bd30:	9307      	str	r3, [sp, #28]
 800bd32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bd34:	9306      	str	r3, [sp, #24]
 800bd36:	e9cd 1019 	strd	r1, r0, [sp, #100]	; 0x64
 800bd3a:	e9cd ce10 	strd	ip, lr, [sp, #64]	; 0x40
 800bd3e:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 800bd42:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
 800bd46:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 800bd4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bd4c:	9305      	str	r3, [sp, #20]
 800bd4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800bd50:	9304      	str	r3, [sp, #16]
 800bd52:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800bd54:	9303      	str	r3, [sp, #12]
 800bd56:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800bd58:	9302      	str	r3, [sp, #8]
 800bd5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800bd5c:	9301      	str	r3, [sp, #4]
 800bd5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800bd60:	4a6d      	ldr	r2, [pc, #436]	; (800bf18 <DdpDisplay::HandleQuery()+0x35c>)
 800bd62:	9300      	str	r3, [sp, #0]
 800bd64:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800bd68:	ee17 3a10 	vmov	r3, s14
 800bd6c:	ee17 0a90 	vmov	r0, s15
 800bd70:	f7fe fad2 	bl	800a318 <snprintf>
 800bd74:	2345      	movs	r3, #69	; 0x45
 800bd76:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
 800bd7a:	ba43      	rev16	r3, r0
 800bd7c:	f8ab 302c 	strh.w	r3, [fp, #44]	; 0x2c
 800bd80:	300a      	adds	r0, #10
 800bd82:	f44f 637d 	mov.w	r3, #4048	; 0xfd0
 800bd86:	9300      	str	r3, [sp, #0]
 800bd88:	b282      	uxth	r2, r0
 800bd8a:	f8db 300c 	ldr.w	r3, [fp, #12]
 800bd8e:	f89b 0008 	ldrb.w	r0, [fp, #8]
 800bd92:	f10b 0124 	add.w	r1, fp, #36	; 0x24
 800bd96:	f004 fd4f 	bl	8010838 <udp_send>
 800bd9a:	b02f      	add	sp, #188	; 0xbc
 800bd9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bda0:	e9cd 0021 	strd	r0, r0, [sp, #132]	; 0x84
 800bda4:	e9cd 001f 	strd	r0, r0, [sp, #124]	; 0x7c
 800bda8:	4601      	mov	r1, r0
 800bdaa:	4682      	mov	sl, r0
 800bdac:	4681      	mov	r9, r0
 800bdae:	4680      	mov	r8, r0
 800bdb0:	4686      	mov	lr, r0
 800bdb2:	4684      	mov	ip, r0
 800bdb4:	4607      	mov	r7, r0
 800bdb6:	4606      	mov	r6, r0
 800bdb8:	4605      	mov	r5, r0
 800bdba:	4604      	mov	r4, r0
 800bdbc:	4602      	mov	r2, r0
 800bdbe:	e7a2      	b.n	800bd06 <DdpDisplay::HandleQuery()+0x14a>
 800bdc0:	2100      	movs	r1, #0
 800bdc2:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bdc6:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bdca:	468a      	mov	sl, r1
 800bdcc:	4689      	mov	r9, r1
 800bdce:	4688      	mov	r8, r1
 800bdd0:	468e      	mov	lr, r1
 800bdd2:	468c      	mov	ip, r1
 800bdd4:	460f      	mov	r7, r1
 800bdd6:	460e      	mov	r6, r1
 800bdd8:	460d      	mov	r5, r1
 800bdda:	460c      	mov	r4, r1
 800bddc:	2000      	movs	r0, #0
 800bdde:	e792      	b.n	800bd06 <DdpDisplay::HandleQuery()+0x14a>
 800bde0:	2100      	movs	r1, #0
 800bde2:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bde6:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bdea:	4614      	mov	r4, r2
 800bdec:	468a      	mov	sl, r1
 800bdee:	4689      	mov	r9, r1
 800bdf0:	4688      	mov	r8, r1
 800bdf2:	468e      	mov	lr, r1
 800bdf4:	468c      	mov	ip, r1
 800bdf6:	460f      	mov	r7, r1
 800bdf8:	460e      	mov	r6, r1
 800bdfa:	460d      	mov	r5, r1
 800bdfc:	e7ee      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bdfe:	2100      	movs	r1, #0
 800be00:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be04:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be08:	4615      	mov	r5, r2
 800be0a:	4614      	mov	r4, r2
 800be0c:	468a      	mov	sl, r1
 800be0e:	4689      	mov	r9, r1
 800be10:	4688      	mov	r8, r1
 800be12:	468e      	mov	lr, r1
 800be14:	468c      	mov	ip, r1
 800be16:	460f      	mov	r7, r1
 800be18:	460e      	mov	r6, r1
 800be1a:	e7df      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800be1c:	2100      	movs	r1, #0
 800be1e:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be22:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be26:	4616      	mov	r6, r2
 800be28:	4615      	mov	r5, r2
 800be2a:	4614      	mov	r4, r2
 800be2c:	468a      	mov	sl, r1
 800be2e:	4689      	mov	r9, r1
 800be30:	4688      	mov	r8, r1
 800be32:	468e      	mov	lr, r1
 800be34:	468c      	mov	ip, r1
 800be36:	460f      	mov	r7, r1
 800be38:	e7d0      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800be3a:	2100      	movs	r1, #0
 800be3c:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be40:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be44:	4617      	mov	r7, r2
 800be46:	4616      	mov	r6, r2
 800be48:	4615      	mov	r5, r2
 800be4a:	4614      	mov	r4, r2
 800be4c:	468a      	mov	sl, r1
 800be4e:	4689      	mov	r9, r1
 800be50:	4688      	mov	r8, r1
 800be52:	468e      	mov	lr, r1
 800be54:	468c      	mov	ip, r1
 800be56:	e7c1      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800be58:	2100      	movs	r1, #0
 800be5a:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be5e:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be62:	4694      	mov	ip, r2
 800be64:	4617      	mov	r7, r2
 800be66:	4616      	mov	r6, r2
 800be68:	4615      	mov	r5, r2
 800be6a:	4614      	mov	r4, r2
 800be6c:	468a      	mov	sl, r1
 800be6e:	4689      	mov	r9, r1
 800be70:	4688      	mov	r8, r1
 800be72:	468e      	mov	lr, r1
 800be74:	e7b2      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800be76:	2100      	movs	r1, #0
 800be78:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be7c:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be80:	4696      	mov	lr, r2
 800be82:	4694      	mov	ip, r2
 800be84:	4617      	mov	r7, r2
 800be86:	4616      	mov	r6, r2
 800be88:	4615      	mov	r5, r2
 800be8a:	4614      	mov	r4, r2
 800be8c:	468a      	mov	sl, r1
 800be8e:	4689      	mov	r9, r1
 800be90:	4688      	mov	r8, r1
 800be92:	e7a3      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800be94:	2100      	movs	r1, #0
 800be96:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be9a:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be9e:	4690      	mov	r8, r2
 800bea0:	4696      	mov	lr, r2
 800bea2:	4694      	mov	ip, r2
 800bea4:	4617      	mov	r7, r2
 800bea6:	4616      	mov	r6, r2
 800bea8:	4615      	mov	r5, r2
 800beaa:	4614      	mov	r4, r2
 800beac:	468a      	mov	sl, r1
 800beae:	4689      	mov	r9, r1
 800beb0:	e794      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800beb2:	2100      	movs	r1, #0
 800beb4:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800beb8:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bebc:	4691      	mov	r9, r2
 800bebe:	4690      	mov	r8, r2
 800bec0:	4696      	mov	lr, r2
 800bec2:	4694      	mov	ip, r2
 800bec4:	4617      	mov	r7, r2
 800bec6:	4616      	mov	r6, r2
 800bec8:	4615      	mov	r5, r2
 800beca:	4614      	mov	r4, r2
 800becc:	468a      	mov	sl, r1
 800bece:	e785      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bed0:	2100      	movs	r1, #0
 800bed2:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bed6:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800beda:	4692      	mov	sl, r2
 800bedc:	4691      	mov	r9, r2
 800bede:	4690      	mov	r8, r2
 800bee0:	4696      	mov	lr, r2
 800bee2:	4694      	mov	ip, r2
 800bee4:	4617      	mov	r7, r2
 800bee6:	4616      	mov	r6, r2
 800bee8:	4615      	mov	r5, r2
 800beea:	4614      	mov	r4, r2
 800beec:	e776      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800beee:	2100      	movs	r1, #0
 800bef0:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bef4:	921f      	str	r2, [sp, #124]	; 0x7c
 800bef6:	4692      	mov	sl, r2
 800bef8:	4691      	mov	r9, r2
 800befa:	4690      	mov	r8, r2
 800befc:	4696      	mov	lr, r2
 800befe:	4694      	mov	ip, r2
 800bf00:	4617      	mov	r7, r2
 800bf02:	4616      	mov	r6, r2
 800bf04:	4615      	mov	r5, r2
 800bf06:	4614      	mov	r4, r2
 800bf08:	9120      	str	r1, [sp, #128]	; 0x80
 800bf0a:	e767      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bf0c:	08017f9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 800bf10:	08017c0a 	stmdaeq	r1, {r1, r3, sl, fp, ip, sp, lr}
 800bf14:	2000fadc 	ldrdcs	pc, [r0], -ip
 800bf18:	08017c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, ip, sp, lr}
 800bf1c:	2100      	movs	r1, #0
 800bf1e:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bf22:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bf26:	4692      	mov	sl, r2
 800bf28:	4691      	mov	r9, r2
 800bf2a:	4690      	mov	r8, r2
 800bf2c:	4696      	mov	lr, r2
 800bf2e:	4694      	mov	ip, r2
 800bf30:	4617      	mov	r7, r2
 800bf32:	4616      	mov	r6, r2
 800bf34:	4615      	mov	r5, r2
 800bf36:	4614      	mov	r4, r2
 800bf38:	e750      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bf3a:	2100      	movs	r1, #0
 800bf3c:	e9cd 2220 	strd	r2, r2, [sp, #128]	; 0x80
 800bf40:	921f      	str	r2, [sp, #124]	; 0x7c
 800bf42:	4692      	mov	sl, r2
 800bf44:	4691      	mov	r9, r2
 800bf46:	4690      	mov	r8, r2
 800bf48:	4696      	mov	lr, r2
 800bf4a:	4694      	mov	ip, r2
 800bf4c:	4617      	mov	r7, r2
 800bf4e:	4616      	mov	r6, r2
 800bf50:	4615      	mov	r5, r2
 800bf52:	4614      	mov	r4, r2
 800bf54:	9122      	str	r1, [sp, #136]	; 0x88
 800bf56:	e741      	b.n	800bddc <DdpDisplay::HandleQuery()+0x220>
 800bf58:	2000      	movs	r0, #0
 800bf5a:	e9cd 2221 	strd	r2, r2, [sp, #132]	; 0x84
 800bf5e:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bf62:	4692      	mov	sl, r2
 800bf64:	4691      	mov	r9, r2
 800bf66:	4690      	mov	r8, r2
 800bf68:	4696      	mov	lr, r2
 800bf6a:	4694      	mov	ip, r2
 800bf6c:	4617      	mov	r7, r2
 800bf6e:	4616      	mov	r6, r2
 800bf70:	4615      	mov	r5, r2
 800bf72:	4614      	mov	r4, r2
 800bf74:	4601      	mov	r1, r0
 800bf76:	e6c6      	b.n	800bd06 <DdpDisplay::HandleQuery()+0x14a>

0800bf78 <DdpDisplay::HandleData()>:
 800bf78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf7c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bf7e:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800bf80:	f8df b124 	ldr.w	fp, [pc, #292]	; 800c0a8 <DdpDisplay::HandleData()+0x130>
 800bf84:	b087      	sub	sp, #28
 800bf86:	ba5b      	rev16	r3, r3
 800bf88:	b29b      	uxth	r3, r3
 800bf8a:	2600      	movs	r6, #0
 800bf8c:	4604      	mov	r4, r0
 800bf8e:	ba2d      	rev	r5, r5
 800bf90:	9305      	str	r3, [sp, #20]
 800bf92:	f100 092e 	add.w	r9, r0, #46	; 0x2e
 800bf96:	4637      	mov	r7, r6
 800bf98:	69e2      	ldr	r2, [r4, #28]
 800bf9a:	9b05      	ldr	r3, [sp, #20]
 800bf9c:	42b2      	cmp	r2, r6
 800bf9e:	d900      	bls.n	800bfa2 <DdpDisplay::HandleData()+0x2a>
 800bfa0:	bb6b      	cbnz	r3, 800bffe <DdpDisplay::HandleData()+0x86>
 800bfa2:	f8df b104 	ldr.w	fp, [pc, #260]	; 800c0a8 <DdpDisplay::HandleData()+0x130>
 800bfa6:	f04f 0a10 	mov.w	sl, #16
 800bfaa:	2040      	movs	r0, #64	; 0x40
 800bfac:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800bfb0:	f1b8 0f00 	cmp.w	r8, #0
 800bfb4:	d01c      	beq.n	800bff0 <DdpDisplay::HandleData()+0x78>
 800bfb6:	f85b 202a 	ldr.w	r2, [fp, sl, lsl #2]
 800bfba:	42aa      	cmp	r2, r5
 800bfbc:	d915      	bls.n	800bfea <DdpDisplay::HandleData()+0x72>
 800bfbe:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 800bfc2:	bf34      	ite	cc
 800bfc4:	4646      	movcc	r6, r8
 800bfc6:	f44f 7600 	movcs.w	r6, #512	; 0x200
 800bfca:	4632      	mov	r2, r6
 800bfcc:	eb09 0107 	add.w	r1, r9, r7
 800bfd0:	9001      	str	r0, [sp, #4]
 800bfd2:	f7ff fd53 	bl	800ba7c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800bfd6:	9801      	ldr	r0, [sp, #4]
 800bfd8:	4b32      	ldr	r3, [pc, #200]	; (800c0a4 <DdpDisplay::HandleData()+0x12c>)
 800bfda:	4437      	add	r7, r6
 800bfdc:	f843 6020 	str.w	r6, [r3, r0, lsl #2]
 800bfe0:	4435      	add	r5, r6
 800bfe2:	eba8 0606 	sub.w	r6, r8, r6
 800bfe6:	9605      	str	r6, [sp, #20]
 800bfe8:	3001      	adds	r0, #1
 800bfea:	f1ba 0f11 	cmp.w	sl, #17
 800bfee:	d135      	bne.n	800c05c <DdpDisplay::HandleData()+0xe4>
 800bff0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800bff4:	07db      	lsls	r3, r3, #31
 800bff6:	d434      	bmi.n	800c062 <DdpDisplay::HandleData()+0xea>
 800bff8:	b007      	add	sp, #28
 800bffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bffe:	00b0      	lsls	r0, r6, #2
 800c000:	1d03      	adds	r3, r0, #4
 800c002:	f106 0a01 	add.w	sl, r6, #1
 800c006:	9301      	str	r3, [sp, #4]
 800c008:	f85b 2026 	ldr.w	r2, [fp, r6, lsl #2]
 800c00c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c010:	42aa      	cmp	r2, r5
 800c012:	d902      	bls.n	800c01a <DdpDisplay::HandleData()+0xa2>
 800c014:	9b01      	ldr	r3, [sp, #4]
 800c016:	4283      	cmp	r3, r0
 800c018:	d801      	bhi.n	800c01e <DdpDisplay::HandleData()+0xa6>
 800c01a:	4656      	mov	r6, sl
 800c01c:	e7bc      	b.n	800bf98 <DdpDisplay::HandleData()+0x20>
 800c01e:	69a3      	ldr	r3, [r4, #24]
 800c020:	6961      	ldr	r1, [r4, #20]
 800c022:	9002      	str	r0, [sp, #8]
 800c024:	4543      	cmp	r3, r8
 800c026:	bf8a      	itet	hi
 800c028:	4643      	movhi	r3, r8
 800c02a:	f104 0218 	addls.w	r2, r4, #24
 800c02e:	aa05      	addhi	r2, sp, #20
 800c030:	4299      	cmp	r1, r3
 800c032:	bf98      	it	ls
 800c034:	f104 0214 	addls.w	r2, r4, #20
 800c038:	eb09 0107 	add.w	r1, r9, r7
 800c03c:	6812      	ldr	r2, [r2, #0]
 800c03e:	9203      	str	r2, [sp, #12]
 800c040:	f7ff fd1c 	bl	800ba7c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800c044:	e9dd 0202 	ldrd	r0, r2, [sp, #8]
 800c048:	4b16      	ldr	r3, [pc, #88]	; (800c0a4 <DdpDisplay::HandleData()+0x12c>)
 800c04a:	4417      	add	r7, r2
 800c04c:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
 800c050:	4415      	add	r5, r2
 800c052:	eba8 0202 	sub.w	r2, r8, r2
 800c056:	9205      	str	r2, [sp, #20]
 800c058:	3001      	adds	r0, #1
 800c05a:	e7d5      	b.n	800c008 <DdpDisplay::HandleData()+0x90>
 800c05c:	f04f 0a11 	mov.w	sl, #17
 800c060:	e7a4      	b.n	800bfac <DdpDisplay::HandleData()+0x34>
 800c062:	2500      	movs	r5, #0
 800c064:	f240 6704 	movw	r7, #1540	; 0x604
 800c068:	462e      	mov	r6, r5
 800c06a:	f8d4 9020 	ldr.w	r9, [r4, #32]
 800c06e:	f7ff fcf9 	bl	800ba64 <lightset::Data::Get()>
 800c072:	fb07 f805 	mul.w	r8, r7, r5
 800c076:	f8d9 3000 	ldr.w	r3, [r9]
 800c07a:	eb00 0108 	add.w	r1, r0, r8
 800c07e:	f508 6280 	add.w	r2, r8, #1024	; 0x400
 800c082:	4402      	add	r2, r0
 800c084:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800c088:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800c08c:	4648      	mov	r0, r9
 800c08e:	4629      	mov	r1, r5
 800c090:	47d0      	blx	sl
 800c092:	f7ff fce7 	bl	800ba64 <lightset::Data::Get()>
 800c096:	3501      	adds	r5, #1
 800c098:	4440      	add	r0, r8
 800c09a:	2d42      	cmp	r5, #66	; 0x42
 800c09c:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800c0a0:	d1e3      	bne.n	800c06a <DdpDisplay::HandleData()+0xf2>
 800c0a2:	e7a9      	b.n	800bff8 <DdpDisplay::HandleData()+0x80>
 800c0a4:	20000714 	andcs	r0, r0, r4, lsl r7
 800c0a8:	200006cc 	andcs	r0, r0, ip, asr #13

0800c0ac <DdpDisplay::Run()>:
 800c0ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c0ae:	f10d 030e 	add.w	r3, sp, #14
 800c0b2:	9300      	str	r3, [sp, #0]
 800c0b4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800c0b8:	f100 030c 	add.w	r3, r0, #12
 800c0bc:	4604      	mov	r4, r0
 800c0be:	f240 52aa 	movw	r2, #1450	; 0x5aa
 800c0c2:	7a00      	ldrb	r0, [r0, #8]
 800c0c4:	f004 fb5c 	bl	8010780 <udp_recv>
 800c0c8:	2809      	cmp	r0, #9
 800c0ca:	d912      	bls.n	800c0f2 <DdpDisplay::Run()+0x46>
 800c0cc:	4b0d      	ldr	r3, [pc, #52]	; (800c104 <DdpDisplay::Run()+0x58>)
 800c0ce:	68e2      	ldr	r2, [r4, #12]
 800c0d0:	681b      	ldr	r3, [r3, #0]
 800c0d2:	695b      	ldr	r3, [r3, #20]
 800c0d4:	429a      	cmp	r2, r3
 800c0d6:	d00c      	beq.n	800c0f2 <DdpDisplay::Run()+0x46>
 800c0d8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800c0dc:	f003 02c0 	and.w	r2, r3, #192	; 0xc0
 800c0e0:	2a40      	cmp	r2, #64	; 0x40
 800c0e2:	d106      	bne.n	800c0f2 <DdpDisplay::Run()+0x46>
 800c0e4:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800c0e8:	2a01      	cmp	r2, #1
 800c0ea:	d104      	bne.n	800c0f6 <DdpDisplay::Run()+0x4a>
 800c0ec:	4620      	mov	r0, r4
 800c0ee:	f7ff ff43 	bl	800bf78 <DdpDisplay::HandleData()>
 800c0f2:	b004      	add	sp, #16
 800c0f4:	bd10      	pop	{r4, pc}
 800c0f6:	079b      	lsls	r3, r3, #30
 800c0f8:	d5fb      	bpl.n	800c0f2 <DdpDisplay::Run()+0x46>
 800c0fa:	4620      	mov	r0, r4
 800c0fc:	f7ff fd5e 	bl	800bbbc <DdpDisplay::HandleQuery()>
 800c100:	e7f7      	b.n	800c0f2 <DdpDisplay::Run()+0x46>
 800c102:	bf00      	nop
 800c104:	2000fadc 	ldrdcs	pc, [r0], -ip

0800c108 <DdpDisplay::Print()>:
 800c108:	b510      	push	{r4, lr}
 800c10a:	4604      	mov	r4, r0
 800c10c:	4809      	ldr	r0, [pc, #36]	; (800c134 <DdpDisplay::Print()+0x2c>)
 800c10e:	f008 f96e 	bl	80143ee <puts>
 800c112:	6921      	ldr	r1, [r4, #16]
 800c114:	4808      	ldr	r0, [pc, #32]	; (800c138 <DdpDisplay::Print()+0x30>)
 800c116:	f7fe f8d7 	bl	800a2c8 <printf>
 800c11a:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800c11e:	4807      	ldr	r0, [pc, #28]	; (800c13c <DdpDisplay::Print()+0x34>)
 800c120:	fbb1 f1f3 	udiv	r1, r1, r3
 800c124:	f7fe f8d0 	bl	800a2c8 <printf>
 800c128:	69e1      	ldr	r1, [r4, #28]
 800c12a:	4805      	ldr	r0, [pc, #20]	; (800c140 <DdpDisplay::Print()+0x38>)
 800c12c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c130:	f7fe b8ca 	b.w	800a2c8 <printf>
 800c134:	08017c1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, fp, ip, sp, lr}
 800c138:	08017c2c 	stmdaeq	r1, {r2, r3, r5, sl, fp, ip, sp, lr}
 800c13c:	08017c45 	stmdaeq	r1, {r0, r2, r6, sl, fp, ip, sp, lr}
 800c140:	08017c5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sl, fp, ip, sp, lr}

0800c144 <LLRPDevice::~LLRPDevice()>:
 800c144:	4770      	bx	lr

0800c146 <LLRPDevice::CopyUID(unsigned char*)>:
 800c146:	4770      	bx	lr

0800c148 <LLRPDevice::CopyCID(unsigned char*)>:
 800c148:	4770      	bx	lr

0800c14a <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800c14a:	2000      	movs	r0, #0
 800c14c:	4770      	bx	lr

0800c14e <LLRPDevice::~LLRPDevice()>:
 800c14e:	b510      	push	{r4, lr}
 800c150:	4604      	mov	r4, r0
 800c152:	f008 f851 	bl	80141f8 <operator delete(void*)>
 800c156:	4620      	mov	r0, r4
 800c158:	bd10      	pop	{r4, pc}

0800c15a <memcpy.isra.0>:
 800c15a:	3801      	subs	r0, #1
 800c15c:	440a      	add	r2, r1
 800c15e:	4291      	cmp	r1, r2
 800c160:	d100      	bne.n	800c164 <memcpy.isra.0+0xa>
 800c162:	4770      	bx	lr
 800c164:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c168:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c16c:	e7f7      	b.n	800c15e <memcpy.isra.0+0x4>
	...

0800c170 <LLRPDevice::LLRPDevice()>:
 800c170:	b513      	push	{r0, r1, r4, lr}
 800c172:	4b0a      	ldr	r3, [pc, #40]	; (800c19c <LLRPDevice::LLRPDevice()+0x2c>)
 800c174:	6003      	str	r3, [r0, #0]
 800c176:	4604      	mov	r4, r0
 800c178:	a901      	add	r1, sp, #4
 800c17a:	4809      	ldr	r0, [pc, #36]	; (800c1a0 <LLRPDevice::LLRPDevice()+0x30>)
 800c17c:	f008 f844 	bl	8014208 <inet_aton>
 800c180:	4b08      	ldr	r3, [pc, #32]	; (800c1a4 <LLRPDevice::LLRPDevice()+0x34>)
 800c182:	9a01      	ldr	r2, [sp, #4]
 800c184:	4808      	ldr	r0, [pc, #32]	; (800c1a8 <LLRPDevice::LLRPDevice()+0x38>)
 800c186:	601a      	str	r2, [r3, #0]
 800c188:	a901      	add	r1, sp, #4
 800c18a:	f008 f83d 	bl	8014208 <inet_aton>
 800c18e:	4b07      	ldr	r3, [pc, #28]	; (800c1ac <LLRPDevice::LLRPDevice()+0x3c>)
 800c190:	9a01      	ldr	r2, [sp, #4]
 800c192:	601a      	str	r2, [r3, #0]
 800c194:	4620      	mov	r0, r4
 800c196:	b002      	add	sp, #8
 800c198:	bd10      	pop	{r4, pc}
 800c19a:	bf00      	nop
 800c19c:	080180d4 	stmdaeq	r1, {r2, r4, r6, r7, pc}
 800c1a0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
 800c1a4:	20000824 	andcs	r0, r0, r4, lsr #16
 800c1a8:	08018033 	stmdaeq	r1, {r0, r1, r4, r5, pc}
 800c1ac:	20000828 	andcs	r0, r0, r8, lsr #16

0800c1b0 <LLRPDevice::HandleRequestMessage()>:
 800c1b0:	b530      	push	{r4, r5, lr}
 800c1b2:	4b24      	ldr	r3, [pc, #144]	; (800c244 <LLRPDevice::HandleRequestMessage()+0x94>)
 800c1b4:	681c      	ldr	r4, [r3, #0]
 800c1b6:	b089      	sub	sp, #36	; 0x24
 800c1b8:	2210      	movs	r2, #16
 800c1ba:	4605      	mov	r5, r0
 800c1bc:	f104 0117 	add.w	r1, r4, #23
 800c1c0:	eb0d 0002 	add.w	r0, sp, r2
 800c1c4:	9103      	str	r1, [sp, #12]
 800c1c6:	f7ff ffc8 	bl	800c15a <memcpy.isra.0>
 800c1ca:	2343      	movs	r3, #67	; 0x43
 800c1cc:	74a3      	strb	r3, [r4, #18]
 800c1ce:	682b      	ldr	r3, [r5, #0]
 800c1d0:	9903      	ldr	r1, [sp, #12]
 800c1d2:	68db      	ldr	r3, [r3, #12]
 800c1d4:	4628      	mov	r0, r5
 800c1d6:	4798      	blx	r3
 800c1d8:	232c      	movs	r3, #44	; 0x2c
 800c1da:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c1de:	2300      	movs	r3, #0
 800c1e0:	2210      	movs	r2, #16
 800c1e2:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800c1e6:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800c1ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c1ee:	2302      	movs	r3, #2
 800c1f0:	eb0d 0102 	add.w	r1, sp, r2
 800c1f4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800c1f8:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c1fc:	f7ff ffad 	bl	800c15a <memcpy.isra.0>
 800c200:	2311      	movs	r3, #17
 800c202:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c206:	2301      	movs	r3, #1
 800c208:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800c20c:	682b      	ldr	r3, [r5, #0]
 800c20e:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800c212:	4628      	mov	r0, r5
 800c214:	689b      	ldr	r3, [r3, #8]
 800c216:	4798      	blx	r3
 800c218:	4b0b      	ldr	r3, [pc, #44]	; (800c248 <LLRPDevice::HandleRequestMessage()+0x98>)
 800c21a:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800c21e:	6818      	ldr	r0, [r3, #0]
 800c220:	f004 ffdd 	bl	80111de <Network::MacAddressCopyTo(unsigned char*)>
 800c224:	23ff      	movs	r3, #255	; 0xff
 800c226:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800c22a:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c22e:	9300      	str	r3, [sp, #0]
 800c230:	4806      	ldr	r0, [pc, #24]	; (800c24c <LLRPDevice::HandleRequestMessage()+0x9c>)
 800c232:	4b07      	ldr	r3, [pc, #28]	; (800c250 <LLRPDevice::HandleRequestMessage()+0xa0>)
 800c234:	7800      	ldrb	r0, [r0, #0]
 800c236:	681b      	ldr	r3, [r3, #0]
 800c238:	2253      	movs	r2, #83	; 0x53
 800c23a:	4621      	mov	r1, r4
 800c23c:	f004 fafc 	bl	8010838 <udp_send>
 800c240:	b009      	add	sp, #36	; 0x24
 800c242:	bd30      	pop	{r4, r5, pc}
 800c244:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c248:	2000fadc 	ldrdcs	pc, [r0], -ip
 800c24c:	20000000 	andcs	r0, r0, r0
 800c250:	20000828 	andcs	r0, r0, r8, lsr #16

0800c254 <LLRPDevice::HandleRdmCommand()>:
 800c254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c258:	4b23      	ldr	r3, [pc, #140]	; (800c2e8 <LLRPDevice::HandleRdmCommand()+0x94>)
 800c25a:	681c      	ldr	r4, [r3, #0]
 800c25c:	6803      	ldr	r3, [r0, #0]
 800c25e:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800c262:	691b      	ldr	r3, [r3, #16]
 800c264:	b089      	sub	sp, #36	; 0x24
 800c266:	4649      	mov	r1, r9
 800c268:	4607      	mov	r7, r0
 800c26a:	4798      	blx	r3
 800c26c:	4605      	mov	r5, r0
 800c26e:	2800      	cmp	r0, #0
 800c270:	d036      	beq.n	800c2e0 <LLRPDevice::HandleRdmCommand()+0x8c>
 800c272:	7803      	ldrb	r3, [r0, #0]
 800c274:	2bcc      	cmp	r3, #204	; 0xcc
 800c276:	d133      	bne.n	800c2e0 <LLRPDevice::HandleRdmCommand()+0x8c>
 800c278:	2210      	movs	r2, #16
 800c27a:	eb0d 0002 	add.w	r0, sp, r2
 800c27e:	f104 0117 	add.w	r1, r4, #23
 800c282:	9103      	str	r1, [sp, #12]
 800c284:	f7ff ff69 	bl	800c15a <memcpy.isra.0>
 800c288:	78ae      	ldrb	r6, [r5, #2]
 800c28a:	9903      	ldr	r1, [sp, #12]
 800c28c:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800c290:	fa5f f888 	uxtb.w	r8, r8
 800c294:	f884 8012 	strb.w	r8, [r4, #18]
 800c298:	683b      	ldr	r3, [r7, #0]
 800c29a:	4638      	mov	r0, r7
 800c29c:	68db      	ldr	r3, [r3, #12]
 800c29e:	4798      	blx	r3
 800c2a0:	f106 0320 	add.w	r3, r6, #32
 800c2a4:	2210      	movs	r2, #16
 800c2a6:	eb0d 0102 	add.w	r1, sp, r2
 800c2aa:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c2ae:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c2b2:	f7ff ff52 	bl	800c15a <memcpy.isra.0>
 800c2b6:	1d73      	adds	r3, r6, #5
 800c2b8:	1c72      	adds	r2, r6, #1
 800c2ba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c2be:	b2d2      	uxtb	r2, r2
 800c2c0:	1c69      	adds	r1, r5, #1
 800c2c2:	4648      	mov	r0, r9
 800c2c4:	f7ff ff49 	bl	800c15a <memcpy.isra.0>
 800c2c8:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c2cc:	9300      	str	r3, [sp, #0]
 800c2ce:	4807      	ldr	r0, [pc, #28]	; (800c2ec <LLRPDevice::HandleRdmCommand()+0x98>)
 800c2d0:	4b07      	ldr	r3, [pc, #28]	; (800c2f0 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800c2d2:	7800      	ldrb	r0, [r0, #0]
 800c2d4:	681b      	ldr	r3, [r3, #0]
 800c2d6:	f108 0210 	add.w	r2, r8, #16
 800c2da:	4621      	mov	r1, r4
 800c2dc:	f004 faac 	bl	8010838 <udp_send>
 800c2e0:	b009      	add	sp, #36	; 0x24
 800c2e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2e6:	bf00      	nop
 800c2e8:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c2ec:	20000000 	andcs	r0, r0, r0
 800c2f0:	20000828 	andcs	r0, r0, r8, lsr #16

0800c2f4 <LLRPDevice::Run()>:
 800c2f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2f6:	4d0f      	ldr	r5, [pc, #60]	; (800c334 <LLRPDevice::Run()+0x40>)
 800c2f8:	4a0f      	ldr	r2, [pc, #60]	; (800c338 <LLRPDevice::Run()+0x44>)
 800c2fa:	4604      	mov	r4, r0
 800c2fc:	480f      	ldr	r0, [pc, #60]	; (800c33c <LLRPDevice::Run()+0x48>)
 800c2fe:	f10d 0306 	add.w	r3, sp, #6
 800c302:	7800      	ldrb	r0, [r0, #0]
 800c304:	4629      	mov	r1, r5
 800c306:	f004 fa71 	bl	80107ec <udp_recv2>
 800c30a:	2841      	cmp	r0, #65	; 0x41
 800c30c:	d908      	bls.n	800c320 <LLRPDevice::Run()+0x2c>
 800c30e:	682b      	ldr	r3, [r5, #0]
 800c310:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800c314:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c318:	ba1a      	rev	r2, r3
 800c31a:	d003      	beq.n	800c324 <LLRPDevice::Run()+0x30>
 800c31c:	2a03      	cmp	r2, #3
 800c31e:	d005      	beq.n	800c32c <LLRPDevice::Run()+0x38>
 800c320:	b003      	add	sp, #12
 800c322:	bd30      	pop	{r4, r5, pc}
 800c324:	4620      	mov	r0, r4
 800c326:	f7ff ff43 	bl	800c1b0 <LLRPDevice::HandleRequestMessage()>
 800c32a:	e7f9      	b.n	800c320 <LLRPDevice::Run()+0x2c>
 800c32c:	4620      	mov	r0, r4
 800c32e:	f7ff ff91 	bl	800c254 <LLRPDevice::HandleRdmCommand()>
 800c332:	e7f5      	b.n	800c320 <LLRPDevice::Run()+0x2c>
 800c334:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c338:	20000820 	andcs	r0, r0, r0, lsr #16
 800c33c:	20000000 	andcs	r0, r0, r0

0800c340 <LLRPDevice::Print()>:
 800c340:	b507      	push	{r0, r1, r2, lr}
 800c342:	4811      	ldr	r0, [pc, #68]	; (800c388 <LLRPDevice::Print()+0x48>)
 800c344:	f7fd ffc0 	bl	800a2c8 <printf>
 800c348:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800c34c:	480f      	ldr	r0, [pc, #60]	; (800c38c <LLRPDevice::Print()+0x4c>)
 800c34e:	f7fd ffbb 	bl	800a2c8 <printf>
 800c352:	4b0f      	ldr	r3, [pc, #60]	; (800c390 <LLRPDevice::Print()+0x50>)
 800c354:	480f      	ldr	r0, [pc, #60]	; (800c394 <LLRPDevice::Print()+0x54>)
 800c356:	6819      	ldr	r1, [r3, #0]
 800c358:	0e0b      	lsrs	r3, r1, #24
 800c35a:	9300      	str	r3, [sp, #0]
 800c35c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c360:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c364:	b2c9      	uxtb	r1, r1
 800c366:	f7fd ffaf 	bl	800a2c8 <printf>
 800c36a:	4b0b      	ldr	r3, [pc, #44]	; (800c398 <LLRPDevice::Print()+0x58>)
 800c36c:	480b      	ldr	r0, [pc, #44]	; (800c39c <LLRPDevice::Print()+0x5c>)
 800c36e:	6819      	ldr	r1, [r3, #0]
 800c370:	0e0b      	lsrs	r3, r1, #24
 800c372:	9300      	str	r3, [sp, #0]
 800c374:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c378:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c37c:	b2c9      	uxtb	r1, r1
 800c37e:	f7fd ffa3 	bl	800a2c8 <printf>
 800c382:	b003      	add	sp, #12
 800c384:	f85d fb04 	ldr.w	pc, [sp], #4
 800c388:	08018043 	stmdaeq	r1, {r0, r1, r6, pc}
 800c38c:	0801805e 	stmdaeq	r1, {r1, r2, r3, r4, r6, pc}
 800c390:	20000824 	andcs	r0, r0, r4, lsr #16
 800c394:	0801807c 	stmdaeq	r1, {r2, r3, r4, r5, r6, pc}
 800c398:	20000828 	andcs	r0, r0, r8, lsr #16
 800c39c:	080180a3 	stmdaeq	r1, {r0, r1, r5, r7, pc}

0800c3a0 <RDMNetDevice::Print()>:
 800c3a0:	b510      	push	{r4, lr}
 800c3a2:	b08a      	sub	sp, #40	; 0x28
 800c3a4:	2300      	movs	r3, #0
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	4669      	mov	r1, sp
 800c3aa:	480a      	ldr	r0, [pc, #40]	; (800c3d4 <RDMNetDevice::Print()+0x34>)
 800c3ac:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c3b0:	f001 f944 	bl	800d63c <uuid_unparse>
 800c3b4:	4808      	ldr	r0, [pc, #32]	; (800c3d8 <RDMNetDevice::Print()+0x38>)
 800c3b6:	f7fd ff87 	bl	800a2c8 <printf>
 800c3ba:	4669      	mov	r1, sp
 800c3bc:	4807      	ldr	r0, [pc, #28]	; (800c3dc <RDMNetDevice::Print()+0x3c>)
 800c3be:	f7fd ff83 	bl	800a2c8 <printf>
 800c3c2:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800c3c6:	f7ff ffbb 	bl	800c340 <LLRPDevice::Print()>
 800c3ca:	4620      	mov	r0, r4
 800c3cc:	f000 fa36 	bl	800c83c <RDMDeviceResponder::Print()>
 800c3d0:	b00a      	add	sp, #40	; 0x28
 800c3d2:	bd10      	pop	{r4, pc}
 800c3d4:	20000931 	andcs	r0, r0, r1, lsr r9
 800c3d8:	0801811a 	stmdaeq	r1, {r1, r3, r4, r8, pc}
 800c3dc:	08018122 	stmdaeq	r1, {r1, r5, r8, pc}

0800c3e0 <RDMSensors::RDMSensors()>:
 800c3e0:	2200      	movs	r2, #0
 800c3e2:	6002      	str	r2, [r0, #0]
 800c3e4:	7102      	strb	r2, [r0, #4]
 800c3e6:	4a01      	ldr	r2, [pc, #4]	; (800c3ec <RDMSensors::RDMSensors()+0xc>)
 800c3e8:	6010      	str	r0, [r2, #0]
 800c3ea:	4770      	bx	lr
 800c3ec:	20000944 	andcs	r0, r0, r4, asr #18

0800c3f0 <RDMSensors::~RDMSensors()>:
 800c3f0:	b570      	push	{r4, r5, r6, lr}
 800c3f2:	2500      	movs	r5, #0
 800c3f4:	4604      	mov	r4, r0
 800c3f6:	462e      	mov	r6, r5
 800c3f8:	7923      	ldrb	r3, [r4, #4]
 800c3fa:	6820      	ldr	r0, [r4, #0]
 800c3fc:	42ab      	cmp	r3, r5
 800c3fe:	d804      	bhi.n	800c40a <RDMSensors::~RDMSensors()+0x1a>
 800c400:	b108      	cbz	r0, 800c406 <RDMSensors::~RDMSensors()+0x16>
 800c402:	f007 fefb 	bl	80141fc <operator delete[](void*)>
 800c406:	4620      	mov	r0, r4
 800c408:	bd70      	pop	{r4, r5, r6, pc}
 800c40a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c40e:	b128      	cbz	r0, 800c41c <RDMSensors::~RDMSensors()+0x2c>
 800c410:	6803      	ldr	r3, [r0, #0]
 800c412:	685b      	ldr	r3, [r3, #4]
 800c414:	4798      	blx	r3
 800c416:	6823      	ldr	r3, [r4, #0]
 800c418:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800c41c:	3501      	adds	r5, #1
 800c41e:	e7eb      	b.n	800c3f8 <RDMSensors::~RDMSensors()+0x8>

0800c420 <RDMSubDevices::RDMSubDevices()>:
 800c420:	2200      	movs	r2, #0
 800c422:	6002      	str	r2, [r0, #0]
 800c424:	8082      	strh	r2, [r0, #4]
 800c426:	4a01      	ldr	r2, [pc, #4]	; (800c42c <RDMSubDevices::RDMSubDevices()+0xc>)
 800c428:	6010      	str	r0, [r2, #0]
 800c42a:	4770      	bx	lr
 800c42c:	20000948 	andcs	r0, r0, r8, asr #18

0800c430 <RDMSubDevices::~RDMSubDevices()>:
 800c430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c432:	2500      	movs	r5, #0
 800c434:	4604      	mov	r4, r0
 800c436:	462e      	mov	r6, r5
 800c438:	88a3      	ldrh	r3, [r4, #4]
 800c43a:	6820      	ldr	r0, [r4, #0]
 800c43c:	42ab      	cmp	r3, r5
 800c43e:	d804      	bhi.n	800c44a <RDMSubDevices::~RDMSubDevices()+0x1a>
 800c440:	b108      	cbz	r0, 800c446 <RDMSubDevices::~RDMSubDevices()+0x16>
 800c442:	f007 fedb 	bl	80141fc <operator delete[](void*)>
 800c446:	4620      	mov	r0, r4
 800c448:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c44a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c44e:	00af      	lsls	r7, r5, #2
 800c450:	b110      	cbz	r0, 800c458 <RDMSubDevices::~RDMSubDevices()+0x28>
 800c452:	6803      	ldr	r3, [r0, #0]
 800c454:	685b      	ldr	r3, [r3, #4]
 800c456:	4798      	blx	r3
 800c458:	6823      	ldr	r3, [r4, #0]
 800c45a:	3501      	adds	r5, #1
 800c45c:	51de      	str	r6, [r3, r7]
 800c45e:	e7eb      	b.n	800c438 <RDMSubDevices::~RDMSubDevices()+0x8>

0800c460 <RDMSubDevices::GetInfo(unsigned short)>:
 800c460:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800c464:	6803      	ldr	r3, [r0, #0]
 800c466:	3901      	subs	r1, #1
 800c468:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800c46c:	3010      	adds	r0, #16
 800c46e:	4770      	bx	lr

0800c470 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800c470:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800c474:	6800      	ldr	r0, [r0, #0]
 800c476:	3b01      	subs	r3, #1
 800c478:	4611      	mov	r1, r2
 800c47a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800c47e:	f000 b830 	b.w	800c4e2 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800c482 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800c482:	b410      	push	{r4}
 800c484:	460c      	mov	r4, r1
 800c486:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800c48a:	3c01      	subs	r4, #1
 800c48c:	6800      	ldr	r0, [r0, #0]
 800c48e:	4611      	mov	r1, r2
 800c490:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c494:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c498:	461a      	mov	r2, r3
 800c49a:	f000 b837 	b.w	800c50c <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800c49e <RDMSubDevices::GetFactoryDefaults()>:
 800c49e:	b538      	push	{r3, r4, r5, lr}
 800c4a0:	4605      	mov	r5, r0
 800c4a2:	2400      	movs	r4, #0
 800c4a4:	88ab      	ldrh	r3, [r5, #4]
 800c4a6:	42a3      	cmp	r3, r4
 800c4a8:	d801      	bhi.n	800c4ae <RDMSubDevices::GetFactoryDefaults()+0x10>
 800c4aa:	2001      	movs	r0, #1
 800c4ac:	e009      	b.n	800c4c2 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800c4ae:	682b      	ldr	r3, [r5, #0]
 800c4b0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c4b4:	b908      	cbnz	r0, 800c4ba <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800c4b6:	3401      	adds	r4, #1
 800c4b8:	e7f4      	b.n	800c4a4 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800c4ba:	f000 f85c 	bl	800c576 <RDMSubDevice::GetFactoryDefaults()>
 800c4be:	2800      	cmp	r0, #0
 800c4c0:	d1f9      	bne.n	800c4b6 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800c4c2:	bd38      	pop	{r3, r4, r5, pc}

0800c4c4 <RDMSubDevices::SetFactoryDefaults()>:
 800c4c4:	b538      	push	{r3, r4, r5, lr}
 800c4c6:	4605      	mov	r5, r0
 800c4c8:	2400      	movs	r4, #0
 800c4ca:	88ab      	ldrh	r3, [r5, #4]
 800c4cc:	42a3      	cmp	r3, r4
 800c4ce:	d800      	bhi.n	800c4d2 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800c4d0:	bd38      	pop	{r3, r4, r5, pc}
 800c4d2:	682b      	ldr	r3, [r5, #0]
 800c4d4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c4d8:	b108      	cbz	r0, 800c4de <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800c4da:	f000 f826 	bl	800c52a <RDMSubDevice::SetFactoryDefaults()>
 800c4de:	3401      	adds	r4, #1
 800c4e0:	e7f3      	b.n	800c4ca <RDMSubDevices::SetFactoryDefaults()+0x6>

0800c4e2 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800c4e2:	f100 0316 	add.w	r3, r0, #22
 800c4e6:	600b      	str	r3, [r1, #0]
 800c4e8:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c4ec:	710b      	strb	r3, [r1, #4]
 800c4ee:	4770      	bx	lr

0800c4f0 <RDMSubDevice::SetLabel(char const*)>:
 800c4f0:	b510      	push	{r4, lr}
 800c4f2:	2300      	movs	r3, #0
 800c4f4:	f100 0415 	add.w	r4, r0, #21
 800c4f8:	5cca      	ldrb	r2, [r1, r3]
 800c4fa:	b122      	cbz	r2, 800c506 <RDMSubDevice::SetLabel(char const*)+0x16>
 800c4fc:	3301      	adds	r3, #1
 800c4fe:	2b20      	cmp	r3, #32
 800c500:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c504:	d1f8      	bne.n	800c4f8 <RDMSubDevice::SetLabel(char const*)+0x8>
 800c506:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c50a:	bd10      	pop	{r4, pc}

0800c50c <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800c50c:	b530      	push	{r4, r5, lr}
 800c50e:	2300      	movs	r3, #0
 800c510:	f100 0415 	add.w	r4, r0, #21
 800c514:	429a      	cmp	r2, r3
 800c516:	d905      	bls.n	800c524 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800c518:	5ccd      	ldrb	r5, [r1, r3]
 800c51a:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c51e:	3301      	adds	r3, #1
 800c520:	2b20      	cmp	r3, #32
 800c522:	d1f7      	bne.n	800c514 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800c524:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c528:	bd30      	pop	{r4, r5, pc}

0800c52a <RDMSubDevice::SetFactoryDefaults()>:
 800c52a:	7a03      	ldrb	r3, [r0, #8]
 800c52c:	b510      	push	{r4, lr}
 800c52e:	b94b      	cbnz	r3, 800c544 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800c530:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800c534:	f7ff ffdc 	bl	800c4f0 <RDMSubDevice::SetLabel(char const*)>
 800c538:	8983      	ldrh	r3, [r0, #12]
 800c53a:	8243      	strh	r3, [r0, #18]
 800c53c:	7b83      	ldrb	r3, [r0, #14]
 800c53e:	7503      	strb	r3, [r0, #20]
 800c540:	2301      	movs	r3, #1
 800c542:	7203      	strb	r3, [r0, #8]
 800c544:	bd10      	pop	{r4, pc}

0800c546 <RDMSubDevice::CalculateChecksum()>:
 800c546:	b510      	push	{r4, lr}
 800c548:	8a43      	ldrh	r3, [r0, #18]
 800c54a:	7d02      	ldrb	r2, [r0, #20]
 800c54c:	f890 4036 	ldrb.w	r4, [r0, #54]	; 0x36
 800c550:	4413      	add	r3, r2
 800c552:	f100 0215 	add.w	r2, r0, #21
 800c556:	f1c0 20ff 	rsb	r0, r0, #4278255360	; 0xff00ff00
 800c55a:	f500 007f 	add.w	r0, r0, #16711680	; 0xff0000
 800c55e:	b29b      	uxth	r3, r3
 800c560:	30eb      	adds	r0, #235	; 0xeb
 800c562:	1881      	adds	r1, r0, r2
 800c564:	428c      	cmp	r4, r1
 800c566:	d801      	bhi.n	800c56c <RDMSubDevice::CalculateChecksum()+0x26>
 800c568:	4618      	mov	r0, r3
 800c56a:	bd10      	pop	{r4, pc}
 800c56c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c570:	440b      	add	r3, r1
 800c572:	b29b      	uxth	r3, r3
 800c574:	e7f5      	b.n	800c562 <RDMSubDevice::CalculateChecksum()+0x1c>

0800c576 <RDMSubDevice::GetFactoryDefaults()>:
 800c576:	7a03      	ldrb	r3, [r0, #8]
 800c578:	b510      	push	{r4, lr}
 800c57a:	4604      	mov	r4, r0
 800c57c:	b133      	cbz	r3, 800c58c <RDMSubDevice::GetFactoryDefaults()+0x16>
 800c57e:	f7ff ffe2 	bl	800c546 <RDMSubDevice::CalculateChecksum()>
 800c582:	8963      	ldrh	r3, [r4, #10]
 800c584:	4283      	cmp	r3, r0
 800c586:	bf1c      	itt	ne
 800c588:	2300      	movne	r3, #0
 800c58a:	7223      	strbne	r3, [r4, #8]
 800c58c:	7a20      	ldrb	r0, [r4, #8]
 800c58e:	bd10      	pop	{r4, pc}

0800c590 <memcpy.isra.0>:
 800c590:	f007 beea 	b.w	8014368 <memcpy>

0800c594 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800c594:	b510      	push	{r4, lr}
 800c596:	6001      	str	r1, [r0, #0]
 800c598:	2100      	movs	r1, #0
 800c59a:	4604      	mov	r4, r0
 800c59c:	6041      	str	r1, [r0, #4]
 800c59e:	2220      	movs	r2, #32
 800c5a0:	3008      	adds	r0, #8
 800c5a2:	f007 ff03 	bl	80143ac <memset>
 800c5a6:	4b03      	ldr	r3, [pc, #12]	; (800c5b4 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800c5a8:	62a3      	str	r3, [r4, #40]	; 0x28
 800c5aa:	237f      	movs	r3, #127	; 0x7f
 800c5ac:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c5b0:	4620      	mov	r0, r4
 800c5b2:	bd10      	pop	{r4, pc}
 800c5b4:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800c5b8 <RDMDeviceParams::Load()>:
 800c5b8:	4601      	mov	r1, r0
 800c5ba:	6800      	ldr	r0, [r0, #0]
 800c5bc:	b130      	cbz	r0, 800c5cc <RDMDeviceParams::Load()+0x14>
 800c5be:	b508      	push	{r3, lr}
 800c5c0:	6803      	ldr	r3, [r0, #0]
 800c5c2:	3104      	adds	r1, #4
 800c5c4:	68db      	ldr	r3, [r3, #12]
 800c5c6:	4798      	blx	r3
 800c5c8:	2001      	movs	r0, #1
 800c5ca:	bd08      	pop	{r3, pc}
 800c5cc:	4770      	bx	lr

0800c5ce <RDMDeviceParams::Set(RDMDevice*)>:
 800c5ce:	6843      	ldr	r3, [r0, #4]
 800c5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5d4:	460c      	mov	r4, r1
 800c5d6:	07d9      	lsls	r1, r3, #31
 800c5d8:	4605      	mov	r5, r0
 800c5da:	d518      	bpl.n	800c60e <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800c5dc:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800c5e0:	7823      	ldrb	r3, [r4, #0]
 800c5e2:	2e20      	cmp	r6, #32
 800c5e4:	f100 0108 	add.w	r1, r0, #8
 800c5e8:	bf28      	it	cs
 800c5ea:	2620      	movcs	r6, #32
 800c5ec:	b1f3      	cbz	r3, 800c62c <RDMDeviceParams::Set(RDMDevice*)+0x5e>
 800c5ee:	f104 070b 	add.w	r7, r4, #11
 800c5f2:	4638      	mov	r0, r7
 800c5f4:	4632      	mov	r2, r6
 800c5f6:	f7ff ffcb 	bl	800c590 <memcpy.isra.0>
 800c5fa:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800c5fc:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
 800c600:	b128      	cbz	r0, 800c60e <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800c602:	6802      	ldr	r2, [r0, #0]
 800c604:	4639      	mov	r1, r7
 800c606:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800c60a:	4632      	mov	r2, r6
 800c60c:	47c0      	blx	r8
 800c60e:	686b      	ldr	r3, [r5, #4]
 800c610:	079a      	lsls	r2, r3, #30
 800c612:	bf44      	itt	mi
 800c614:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800c618:	f8a4 204e 	strhmi.w	r2, [r4, #78]	; 0x4e
 800c61c:	075b      	lsls	r3, r3, #29
 800c61e:	bf44      	itt	mi
 800c620:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800c624:	f8a4 3050 	strhmi.w	r3, [r4, #80]	; 0x50
 800c628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c62c:	4632      	mov	r2, r6
 800c62e:	f104 0052 	add.w	r0, r4, #82	; 0x52
 800c632:	f7ff ffad 	bl	800c590 <memcpy.isra.0>
 800c636:	f884 6072 	strb.w	r6, [r4, #114]	; 0x72
 800c63a:	e7e8      	b.n	800c60e <RDMDeviceParams::Set(RDMDevice*)+0x40>

0800c63c <RDMDeviceParams::Dump()>:
 800c63c:	4770      	bx	lr

0800c63e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800c63e:	4770      	bx	lr

0800c640 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800c640:	4770      	bx	lr
	...

0800c644 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c644:	b510      	push	{r4, lr}
 800c646:	4b06      	ldr	r3, [pc, #24]	; (800c660 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800c648:	4604      	mov	r4, r0
 800c64a:	f840 3b8c 	str.w	r3, [r0], #140
 800c64e:	f7ff feef 	bl	800c430 <RDMSubDevices::~RDMSubDevices()>
 800c652:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800c656:	f7ff fecb 	bl	800c3f0 <RDMSensors::~RDMSensors()>
 800c65a:	4620      	mov	r0, r4
 800c65c:	bd10      	pop	{r4, pc}
 800c65e:	bf00      	nop
 800c660:	080181ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, pc}

0800c664 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c664:	b510      	push	{r4, lr}
 800c666:	4604      	mov	r4, r0
 800c668:	f7ff ffec 	bl	800c644 <RDMDeviceResponder::~RDMDeviceResponder()>
 800c66c:	4620      	mov	r0, r4
 800c66e:	f007 fdc3 	bl	80141f8 <operator delete(void*)>
 800c672:	4620      	mov	r0, r4
 800c674:	bd10      	pop	{r4, pc}
	...

0800c678 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800c678:	b570      	push	{r4, r5, r6, lr}
 800c67a:	4604      	mov	r4, r0
 800c67c:	3004      	adds	r0, #4
 800c67e:	460e      	mov	r6, r1
 800c680:	4615      	mov	r5, r2
 800c682:	f000 fee1 	bl	800d448 <RDMDevice::RDMDevice()>
 800c686:	4620      	mov	r0, r4
 800c688:	4b20      	ldr	r3, [pc, #128]	; (800c70c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x94>)
 800c68a:	f840 3b80 	str.w	r3, [r0], #128
 800c68e:	f000 fceb 	bl	800d068 <RDMIdentify::RDMIdentify()>
 800c692:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800c696:	f7ff fea3 	bl	800c3e0 <RDMSensors::RDMSensors()>
 800c69a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800c69e:	f7ff febf 	bl	800c420 <RDMSubDevices::RDMSubDevices()>
 800c6a2:	4b1b      	ldr	r3, [pc, #108]	; (800c710 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800c6a4:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800c6a8:	601c      	str	r4, [r3, #0]
 800c6aa:	2365      	movs	r3, #101	; 0x65
 800c6ac:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800c6b0:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800c6b4:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800c6b8:	2301      	movs	r3, #1
 800c6ba:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800c6be:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800c6c2:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800c6c6:	2100      	movs	r1, #0
 800c6c8:	4293      	cmp	r3, r2
 800c6ca:	d119      	bne.n	800c700 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800c6cc:	f104 02c3 	add.w	r2, r4, #195	; 0xc3
 800c6d0:	2100      	movs	r1, #0
 800c6d2:	4293      	cmp	r3, r2
 800c6d4:	d117      	bne.n	800c706 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8e>
 800c6d6:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800c6da:	f7fd faf5 	bl	8009cc8 <RDMSoftwareVersion::GetVersion()>
 800c6de:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800c6e2:	f7fd faf5 	bl	8009cd0 <RDMSoftwareVersion::GetVersionLength()>
 800c6e6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c6ea:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800c6ee:	681b      	ldr	r3, [r3, #0]
 800c6f0:	685b      	ldr	r3, [r3, #4]
 800c6f2:	b91b      	cbnz	r3, 800c6fc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x84>
 800c6f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c6f8:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	bd70      	pop	{r4, r5, r6, pc}
 800c700:	f803 1b01 	strb.w	r1, [r3], #1
 800c704:	e7e0      	b.n	800c6c8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x50>
 800c706:	f803 1b01 	strb.w	r1, [r3], #1
 800c70a:	e7e2      	b.n	800c6d2 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5a>
 800c70c:	080181ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, pc}
 800c710:	2000094c 	andcs	r0, r0, ip, asr #18

0800c714 <RDMDeviceResponder::Init()>:
 800c714:	b570      	push	{r4, r5, r6, lr}
 800c716:	2301      	movs	r3, #1
 800c718:	4604      	mov	r4, r0
 800c71a:	7103      	strb	r3, [r0, #4]
 800c71c:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800c720:	2a20      	cmp	r2, #32
 800c722:	bf28      	it	cs
 800c724:	2220      	movcs	r2, #32
 800c726:	3056      	adds	r0, #86	; 0x56
 800c728:	f104 010f 	add.w	r1, r4, #15
 800c72c:	4613      	mov	r3, r2
 800c72e:	3b01      	subs	r3, #1
 800c730:	d25d      	bcs.n	800c7ee <RDMDeviceResponder::Init()+0xda>
 800c732:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 800c734:	f884 202f 	strb.w	r2, [r4, #47]	; 0x2f
 800c738:	b110      	cbz	r0, 800c740 <RDMDeviceResponder::Init()+0x2c>
 800c73a:	6803      	ldr	r3, [r0, #0]
 800c73c:	689b      	ldr	r3, [r3, #8]
 800c73e:	4798      	blx	r3
 800c740:	f06f 050d 	mvn.w	r5, #13
 800c744:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800c748:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800c74c:	f104 020e 	add.w	r2, r4, #14
 800c750:	1b2d      	subs	r5, r5, r4
 800c752:	18a9      	adds	r1, r5, r2
 800c754:	4288      	cmp	r0, r1
 800c756:	d84f      	bhi.n	800c7f8 <RDMDeviceResponder::Init()+0xe4>
 800c758:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800c75c:	f7fd faba 	bl	8009cd4 <RDMSoftwareVersion::GetVersionId()>
 800c760:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800c764:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800c768:	2201      	movs	r2, #1
 800c76a:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800c76e:	2200      	movs	r2, #0
 800c770:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800c774:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800c778:	0a1a      	lsrs	r2, r3, #8
 800c77a:	0e03      	lsrs	r3, r0, #24
 800c77c:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800c780:	0c03      	lsrs	r3, r0, #16
 800c782:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800c786:	0a03      	lsrs	r3, r0, #8
 800c788:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c78c:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c790:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800c794:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800c798:	681b      	ldr	r3, [r3, #0]
 800c79a:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800c79e:	685d      	ldr	r5, [r3, #4]
 800c7a0:	bb7d      	cbnz	r5, 800c802 <RDMDeviceResponder::Init()+0xee>
 800c7a2:	f8b4 00c8 	ldrh.w	r0, [r4, #200]	; 0xc8
 800c7a6:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800c7aa:	0a03      	lsrs	r3, r0, #8
 800c7ac:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800c7b0:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800c7b4:	2301      	movs	r3, #1
 800c7b6:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c7ba:	0a33      	lsrs	r3, r6, #8
 800c7bc:	b2c0      	uxtb	r0, r0
 800c7be:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800c7c2:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800c7c6:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800c7ca:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800c7ce:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800c7d2:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800c7d6:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800c7da:	4293      	cmp	r3, r2
 800c7dc:	d12a      	bne.n	800c834 <RDMDeviceResponder::Init()+0x120>
 800c7de:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c7e2:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800c7e6:	4413      	add	r3, r2
 800c7e8:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800c7ec:	bd70      	pop	{r4, r5, r6, pc}
 800c7ee:	f810 5b01 	ldrb.w	r5, [r0], #1
 800c7f2:	f800 5c48 	strb.w	r5, [r0, #-72]
 800c7f6:	e79a      	b.n	800c72e <RDMDeviceResponder::Init()+0x1a>
 800c7f8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c7fc:	440b      	add	r3, r1
 800c7fe:	b29b      	uxth	r3, r3
 800c800:	e7a7      	b.n	800c752 <RDMDeviceResponder::Init()+0x3e>
 800c802:	682b      	ldr	r3, [r5, #0]
 800c804:	4628      	mov	r0, r5
 800c806:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c808:	4798      	blx	r3
 800c80a:	0a00      	lsrs	r0, r0, #8
 800c80c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c810:	682b      	ldr	r3, [r5, #0]
 800c812:	4628      	mov	r0, r5
 800c814:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c816:	4798      	blx	r3
 800c818:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c81c:	682b      	ldr	r3, [r5, #0]
 800c81e:	4628      	mov	r0, r5
 800c820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c822:	4798      	blx	r3
 800c824:	0a00      	lsrs	r0, r0, #8
 800c826:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800c82a:	682b      	ldr	r3, [r5, #0]
 800c82c:	4628      	mov	r0, r5
 800c82e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c830:	4798      	blx	r3
 800c832:	e7bf      	b.n	800c7b4 <RDMDeviceResponder::Init()+0xa0>
 800c834:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c838:	7499      	strb	r1, [r3, #18]
 800c83a:	e7ce      	b.n	800c7da <RDMDeviceResponder::Init()+0xc6>

0800c83c <RDMDeviceResponder::Print()>:
 800c83c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c83e:	4604      	mov	r4, r0
 800c840:	3004      	adds	r0, #4
 800c842:	f000 fe75 	bl	800d530 <RDMDevice::Print()>
 800c846:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c84a:	481c      	ldr	r0, [pc, #112]	; (800c8bc <RDMDeviceResponder::Print()+0x80>)
 800c84c:	681d      	ldr	r5, [r3, #0]
 800c84e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800c850:	f7fd fd3a 	bl	800a2c8 <printf>
 800c854:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800c858:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800c85c:	4818      	ldr	r0, [pc, #96]	; (800c8c0 <RDMDeviceResponder::Print()+0x84>)
 800c85e:	f7fd fd33 	bl	800a2c8 <printf>
 800c862:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c866:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800c86a:	4816      	ldr	r0, [pc, #88]	; (800c8c4 <RDMDeviceResponder::Print()+0x88>)
 800c86c:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c870:	f7fd fd2a 	bl	800a2c8 <printf>
 800c874:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c878:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800c87c:	4812      	ldr	r0, [pc, #72]	; (800c8c8 <RDMDeviceResponder::Print()+0x8c>)
 800c87e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c882:	3508      	adds	r5, #8
 800c884:	f7fd fd20 	bl	800a2c8 <printf>
 800c888:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800c88c:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800c890:	9500      	str	r5, [sp, #0]
 800c892:	b2f3      	uxtb	r3, r6
 800c894:	480d      	ldr	r0, [pc, #52]	; (800c8cc <RDMDeviceResponder::Print()+0x90>)
 800c896:	f7fd fd17 	bl	800a2c8 <printf>
 800c89a:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800c89e:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800c8a2:	480b      	ldr	r0, [pc, #44]	; (800c8d0 <RDMDeviceResponder::Print()+0x94>)
 800c8a4:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c8a8:	f7fd fd0e 	bl	800a2c8 <printf>
 800c8ac:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800c8b0:	4808      	ldr	r0, [pc, #32]	; (800c8d4 <RDMDeviceResponder::Print()+0x98>)
 800c8b2:	b002      	add	sp, #8
 800c8b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8b8:	f7fd bd06 	b.w	800a2c8 <printf>
 800c8bc:	0801812d 	stmdaeq	r1, {r0, r2, r3, r5, r8, pc}
 800c8c0:	0801814a 	stmdaeq	r1, {r1, r3, r6, r8, pc}
 800c8c4:	08018163 	stmdaeq	r1, {r0, r1, r5, r6, r8, pc}
 800c8c8:	0801817b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, pc}
 800c8cc:	08018193 	stmdaeq	r1, {r0, r1, r4, r7, r8, pc}
 800c8d0:	080181b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, pc}
 800c8d4:	080181c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, pc}

0800c8d8 <memcmp>:
 800c8d8:	b510      	push	{r4, lr}
 800c8da:	3901      	subs	r1, #1
 800c8dc:	4402      	add	r2, r0
 800c8de:	4290      	cmp	r0, r2
 800c8e0:	d101      	bne.n	800c8e6 <memcmp+0xe>
 800c8e2:	2000      	movs	r0, #0
 800c8e4:	e005      	b.n	800c8f2 <memcmp+0x1a>
 800c8e6:	7803      	ldrb	r3, [r0, #0]
 800c8e8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c8ec:	42a3      	cmp	r3, r4
 800c8ee:	d001      	beq.n	800c8f4 <memcmp+0x1c>
 800c8f0:	1b18      	subs	r0, r3, r4
 800c8f2:	bd10      	pop	{r4, pc}
 800c8f4:	3001      	adds	r0, #1
 800c8f6:	e7f2      	b.n	800c8de <memcmp+0x6>

0800c8f8 <memcpy.isra.0>:
 800c8f8:	3801      	subs	r0, #1
 800c8fa:	440a      	add	r2, r1
 800c8fc:	4291      	cmp	r1, r2
 800c8fe:	d100      	bne.n	800c902 <memcpy.isra.0+0xa>
 800c900:	4770      	bx	lr
 800c902:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c906:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c90a:	e7f7      	b.n	800c8fc <memcpy.isra.0+0x4>

0800c90c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800c90c:	b570      	push	{r4, r5, r6, lr}
 800c90e:	790d      	ldrb	r5, [r1, #4]
 800c910:	7803      	ldrb	r3, [r0, #0]
 800c912:	6809      	ldr	r1, [r1, #0]
 800c914:	2d20      	cmp	r5, #32
 800c916:	4604      	mov	r4, r0
 800c918:	bf28      	it	cs
 800c91a:	2520      	movcs	r5, #32
 800c91c:	b18b      	cbz	r3, 800c942 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800c91e:	f100 060b 	add.w	r6, r0, #11
 800c922:	4630      	mov	r0, r6
 800c924:	462a      	mov	r2, r5
 800c926:	f7ff ffe7 	bl	800c8f8 <memcpy.isra.0>
 800c92a:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800c92c:	f884 502b 	strb.w	r5, [r4, #43]	; 0x2b
 800c930:	b168      	cbz	r0, 800c94e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800c932:	6802      	ldr	r2, [r0, #0]
 800c934:	6894      	ldr	r4, [r2, #8]
 800c936:	4631      	mov	r1, r6
 800c938:	462a      	mov	r2, r5
 800c93a:	4623      	mov	r3, r4
 800c93c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c940:	4718      	bx	r3
 800c942:	462a      	mov	r2, r5
 800c944:	3052      	adds	r0, #82	; 0x52
 800c946:	f7ff ffd7 	bl	800c8f8 <memcpy.isra.0>
 800c94a:	f884 5072 	strb.w	r5, [r4, #114]	; 0x72
 800c94e:	bd70      	pop	{r4, r5, r6, pc}

0800c950 <RDMDeviceResponder::SetFactoryDefaults()>:
 800c950:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c952:	f100 0356 	add.w	r3, r0, #86	; 0x56
 800c956:	4604      	mov	r4, r0
 800c958:	9300      	str	r3, [sp, #0]
 800c95a:	4669      	mov	r1, sp
 800c95c:	f890 3076 	ldrb.w	r3, [r0, #118]	; 0x76
 800c960:	f88d 3004 	strb.w	r3, [sp, #4]
 800c964:	3004      	adds	r0, #4
 800c966:	f7ff ffd1 	bl	800c90c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c96a:	f06f 050d 	mvn.w	r5, #13
 800c96e:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800c972:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800c976:	f104 020e 	add.w	r2, r4, #14
 800c97a:	1b2d      	subs	r5, r5, r4
 800c97c:	18a8      	adds	r0, r5, r2
 800c97e:	4288      	cmp	r0, r1
 800c980:	d361      	bcc.n	800ca46 <RDMDeviceResponder::SetFactoryDefaults()+0xf6>
 800c982:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800c986:	2301      	movs	r3, #1
 800c988:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c98c:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c990:	681b      	ldr	r3, [r3, #0]
 800c992:	685d      	ldr	r5, [r3, #4]
 800c994:	b1f5      	cbz	r5, 800c9d4 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800c996:	682b      	ldr	r3, [r5, #0]
 800c998:	4628      	mov	r0, r5
 800c99a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c99c:	4798      	blx	r3
 800c99e:	0a00      	lsrs	r0, r0, #8
 800c9a0:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c9a4:	682b      	ldr	r3, [r5, #0]
 800c9a6:	4628      	mov	r0, r5
 800c9a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c9aa:	4798      	blx	r3
 800c9ac:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c9b0:	682b      	ldr	r3, [r5, #0]
 800c9b2:	4628      	mov	r0, r5
 800c9b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9b6:	4798      	blx	r3
 800c9b8:	0a00      	lsrs	r0, r0, #8
 800c9ba:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800c9be:	682b      	ldr	r3, [r5, #0]
 800c9c0:	4628      	mov	r0, r5
 800c9c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9c4:	4798      	blx	r3
 800c9c6:	6823      	ldr	r3, [r4, #0]
 800c9c8:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800c9cc:	689b      	ldr	r3, [r3, #8]
 800c9ce:	4629      	mov	r1, r5
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	4798      	blx	r3
 800c9d4:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800c9d8:	1e6b      	subs	r3, r5, #1
 800c9da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c9de:	d218      	bcs.n	800ca12 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800c9e0:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800c9e4:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800c9e8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800c9ec:	3b01      	subs	r3, #1
 800c9ee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c9f2:	6858      	ldr	r0, [r3, #4]
 800c9f4:	b168      	cbz	r0, 800ca12 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800c9f6:	6803      	ldr	r3, [r0, #0]
 800c9f8:	4629      	mov	r1, r5
 800c9fa:	6a1b      	ldr	r3, [r3, #32]
 800c9fc:	4798      	blx	r3
 800c9fe:	b120      	cbz	r0, 800ca0a <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800ca00:	0a2b      	lsrs	r3, r5, #8
 800ca02:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800ca06:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800ca0a:	6823      	ldr	r3, [r4, #0]
 800ca0c:	4620      	mov	r0, r4
 800ca0e:	68db      	ldr	r3, [r3, #12]
 800ca10:	4798      	blx	r3
 800ca12:	2213      	movs	r2, #19
 800ca14:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800ca18:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800ca1c:	f7ff ff6c 	bl	800c8f8 <memcpy.isra.0>
 800ca20:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800ca24:	f7ff fd4e 	bl	800c4c4 <RDMSubDevices::SetFactoryDefaults()>
 800ca28:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800ca2c:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800ca30:	4413      	add	r3, r2
 800ca32:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800ca36:	2301      	movs	r3, #1
 800ca38:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800ca3c:	b003      	add	sp, #12
 800ca3e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca42:	f7fd b929 	b.w	8009c98 <rdm::device::responder::factorydefaults()>
 800ca46:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ca4a:	4403      	add	r3, r0
 800ca4c:	b29b      	uxth	r3, r3
 800ca4e:	e795      	b.n	800c97c <RDMDeviceResponder::SetFactoryDefaults()+0x2c>

0800ca50 <RDMHandler::RDMHandler(bool)>:
 800ca50:	2200      	movs	r2, #0
 800ca52:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800ca56:	7001      	strb	r1, [r0, #0]
 800ca58:	7042      	strb	r2, [r0, #1]
 800ca5a:	4770      	bx	lr

0800ca5c <RDMHandler::HandleString(char const*, unsigned int)>:
 800ca5c:	6883      	ldr	r3, [r0, #8]
 800ca5e:	f803 2f17 	strb.w	r2, [r3, #23]!
 800ca62:	440a      	add	r2, r1
 800ca64:	4291      	cmp	r1, r2
 800ca66:	d100      	bne.n	800ca6a <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800ca68:	4770      	bx	lr
 800ca6a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ca6e:	f803 0f01 	strb.w	r0, [r3, #1]!
 800ca72:	e7f7      	b.n	800ca64 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800ca74 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800ca74:	b570      	push	{r4, r5, r6, lr}
 800ca76:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800ca7a:	25cc      	movs	r5, #204	; 0xcc
 800ca7c:	701d      	strb	r5, [r3, #0]
 800ca7e:	7825      	ldrb	r5, [r4, #0]
 800ca80:	705d      	strb	r5, [r3, #1]
 800ca82:	7ba5      	ldrb	r5, [r4, #14]
 800ca84:	73dd      	strb	r5, [r3, #15]
 800ca86:	2500      	movs	r5, #0
 800ca88:	745d      	strb	r5, [r3, #17]
 800ca8a:	7c65      	ldrb	r5, [r4, #17]
 800ca8c:	749d      	strb	r5, [r3, #18]
 800ca8e:	7ca5      	ldrb	r5, [r4, #18]
 800ca90:	74dd      	strb	r5, [r3, #19]
 800ca92:	7ce5      	ldrb	r5, [r4, #19]
 800ca94:	3501      	adds	r5, #1
 800ca96:	751d      	strb	r5, [r3, #20]
 800ca98:	7d25      	ldrb	r5, [r4, #20]
 800ca9a:	755d      	strb	r5, [r3, #21]
 800ca9c:	7d65      	ldrb	r5, [r4, #21]
 800ca9e:	759d      	strb	r5, [r3, #22]
 800caa0:	b119      	cbz	r1, 800caaa <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800caa2:	1e4d      	subs	r5, r1, #1
 800caa4:	2d01      	cmp	r5, #1
 800caa6:	d921      	bls.n	800caec <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800caa8:	bd70      	pop	{r4, r5, r6, pc}
 800caaa:	7dda      	ldrb	r2, [r3, #23]
 800caac:	7419      	strb	r1, [r3, #16]
 800caae:	3218      	adds	r2, #24
 800cab0:	709a      	strb	r2, [r3, #2]
 800cab2:	4a15      	ldr	r2, [pc, #84]	; (800cb08 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800cab4:	6812      	ldr	r2, [r2, #0]
 800cab6:	1de1      	adds	r1, r4, #7
 800cab8:	1c9d      	adds	r5, r3, #2
 800caba:	3204      	adds	r2, #4
 800cabc:	340d      	adds	r4, #13
 800cabe:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800cac2:	f805 6f01 	strb.w	r6, [r5, #1]!
 800cac6:	42a1      	cmp	r1, r4
 800cac8:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800cacc:	71ae      	strb	r6, [r5, #6]
 800cace:	d1f6      	bne.n	800cabe <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800cad0:	2200      	movs	r2, #0
 800cad2:	6884      	ldr	r4, [r0, #8]
 800cad4:	7899      	ldrb	r1, [r3, #2]
 800cad6:	4613      	mov	r3, r2
 800cad8:	428a      	cmp	r2, r1
 800cada:	eb04 0502 	add.w	r5, r4, r2
 800cade:	d30e      	bcc.n	800cafe <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800cae0:	0a1a      	lsrs	r2, r3, #8
 800cae2:	702a      	strb	r2, [r5, #0]
 800cae4:	6882      	ldr	r2, [r0, #8]
 800cae6:	440a      	add	r2, r1
 800cae8:	7053      	strb	r3, [r2, #1]
 800caea:	e7dd      	b.n	800caa8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800caec:	7419      	strb	r1, [r3, #16]
 800caee:	2102      	movs	r1, #2
 800caf0:	251a      	movs	r5, #26
 800caf2:	75d9      	strb	r1, [r3, #23]
 800caf4:	0a11      	lsrs	r1, r2, #8
 800caf6:	709d      	strb	r5, [r3, #2]
 800caf8:	7619      	strb	r1, [r3, #24]
 800cafa:	765a      	strb	r2, [r3, #25]
 800cafc:	e7d9      	b.n	800cab2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800cafe:	5ca5      	ldrb	r5, [r4, r2]
 800cb00:	442b      	add	r3, r5
 800cb02:	b29b      	uxth	r3, r3
 800cb04:	3201      	adds	r2, #1
 800cb06:	e7e7      	b.n	800cad8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800cb08:	2000094c 	andcs	r0, r0, ip, asr #18

0800cb0c <RDMHandler::RespondMessageAck()>:
 800cb0c:	6843      	ldr	r3, [r0, #4]
 800cb0e:	7d9a      	ldrb	r2, [r3, #22]
 800cb10:	b90a      	cbnz	r2, 800cb16 <RDMHandler::RespondMessageAck()+0xa>
 800cb12:	2218      	movs	r2, #24
 800cb14:	705a      	strb	r2, [r3, #1]
 800cb16:	2200      	movs	r2, #0
 800cb18:	4611      	mov	r1, r2
 800cb1a:	f7ff bfab 	b.w	800ca74 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800cb20 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800cb20:	b538      	push	{r3, r4, r5, lr}
 800cb22:	4b18      	ldr	r3, [pc, #96]	; (800cb84 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800cb24:	4605      	mov	r5, r0
 800cb26:	681c      	ldr	r4, [r3, #0]
 800cb28:	b349      	cbz	r1, 800cb7e <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800cb2a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800cb2e:	f7ff fc97 	bl	800c460 <RDMSubDevices::GetInfo(unsigned short)>
 800cb32:	b1b8      	cbz	r0, 800cb64 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800cb34:	8803      	ldrh	r3, [r0, #0]
 800cb36:	0a1b      	lsrs	r3, r3, #8
 800cb38:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800cb3c:	8803      	ldrh	r3, [r0, #0]
 800cb3e:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800cb42:	7903      	ldrb	r3, [r0, #4]
 800cb44:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800cb48:	7943      	ldrb	r3, [r0, #5]
 800cb4a:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800cb4e:	8843      	ldrh	r3, [r0, #2]
 800cb50:	0a1b      	lsrs	r3, r3, #8
 800cb52:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800cb56:	8843      	ldrh	r3, [r0, #2]
 800cb58:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800cb5c:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800cb60:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800cb64:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800cb68:	68a8      	ldr	r0, [r5, #8]
 800cb6a:	2213      	movs	r2, #19
 800cb6c:	75c2      	strb	r2, [r0, #23]
 800cb6e:	3018      	adds	r0, #24
 800cb70:	f7ff fec2 	bl	800c8f8 <memcpy.isra.0>
 800cb74:	4628      	mov	r0, r5
 800cb76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cb7a:	f7ff bfc7 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cb7e:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800cb82:	e7f1      	b.n	800cb68 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800cb84:	2000094c 	andcs	r0, r0, ip, asr #18

0800cb88 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800cb88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb8a:	6886      	ldr	r6, [r0, #8]
 800cb8c:	2301      	movs	r3, #1
 800cb8e:	75f3      	strb	r3, [r6, #23]
 800cb90:	4b1c      	ldr	r3, [pc, #112]	; (800cc04 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800cb92:	681c      	ldr	r4, [r3, #0]
 800cb94:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800cb98:	4605      	mov	r5, r0
 800cb9a:	b37b      	cbz	r3, 800cbfc <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800cb9c:	f06f 0c0d 	mvn.w	ip, #13
 800cba0:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800cba4:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800cba8:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800cbac:	f104 020e 	add.w	r2, r4, #14
 800cbb0:	ebac 0c04 	sub.w	ip, ip, r4
 800cbb4:	eb0c 0702 	add.w	r7, ip, r2
 800cbb8:	4287      	cmp	r7, r0
 800cbba:	d30a      	bcc.n	800cbd2 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800cbbc:	4299      	cmp	r1, r3
 800cbbe:	d00d      	beq.n	800cbdc <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800cbc0:	2300      	movs	r3, #0
 800cbc2:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800cbc6:	7633      	strb	r3, [r6, #24]
 800cbc8:	4628      	mov	r0, r5
 800cbca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cbce:	f7ff bf9d 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cbd2:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800cbd6:	443b      	add	r3, r7
 800cbd8:	b29b      	uxth	r3, r3
 800cbda:	e7eb      	b.n	800cbb4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800cbdc:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800cbe0:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800cbe4:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800cbe8:	440b      	add	r3, r1
 800cbea:	429a      	cmp	r2, r3
 800cbec:	d1e8      	bne.n	800cbc0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800cbee:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800cbf2:	f7ff fc54 	bl	800c49e <RDMSubDevices::GetFactoryDefaults()>
 800cbf6:	4603      	mov	r3, r0
 800cbf8:	2800      	cmp	r0, #0
 800cbfa:	d0e2      	beq.n	800cbc2 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800cbfc:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800cc00:	e7e1      	b.n	800cbc6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800cc02:	bf00      	nop
 800cc04:	2000094c 	andcs	r0, r0, ip, asr #18

0800cc08 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800cc08:	b510      	push	{r4, lr}
 800cc0a:	4905      	ldr	r1, [pc, #20]	; (800cc20 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800cc0c:	4604      	mov	r4, r0
 800cc0e:	220a      	movs	r2, #10
 800cc10:	f7ff ff24 	bl	800ca5c <RDMHandler::HandleString(char const*, unsigned int)>
 800cc14:	4620      	mov	r0, r4
 800cc16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc1a:	f7ff bf77 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cc1e:	bf00      	nop
 800cc20:	080171dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip, sp, lr}

0800cc24 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800cc24:	b510      	push	{r4, lr}
 800cc26:	4b06      	ldr	r3, [pc, #24]	; (800cc40 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800cc28:	6819      	ldr	r1, [r3, #0]
 800cc2a:	4604      	mov	r4, r0
 800cc2c:	f891 2050 	ldrb.w	r2, [r1, #80]	; 0x50
 800cc30:	3130      	adds	r1, #48	; 0x30
 800cc32:	f7ff ff13 	bl	800ca5c <RDMHandler::HandleString(char const*, unsigned int)>
 800cc36:	4620      	mov	r0, r4
 800cc38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc3c:	f7ff bf66 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cc40:	2000094c 	andcs	r0, r0, ip, asr #18

0800cc44 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800cc44:	4b0d      	ldr	r3, [pc, #52]	; (800cc7c <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800cc46:	b513      	push	{r0, r1, r4, lr}
 800cc48:	4604      	mov	r4, r0
 800cc4a:	6818      	ldr	r0, [r3, #0]
 800cc4c:	b171      	cbz	r1, 800cc6c <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800cc4e:	466a      	mov	r2, sp
 800cc50:	308c      	adds	r0, #140	; 0x8c
 800cc52:	f7ff fc0d 	bl	800c470 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800cc56:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800cc5a:	9900      	ldr	r1, [sp, #0]
 800cc5c:	4620      	mov	r0, r4
 800cc5e:	f7ff fefd 	bl	800ca5c <RDMHandler::HandleString(char const*, unsigned int)>
 800cc62:	4620      	mov	r0, r4
 800cc64:	f7ff ff52 	bl	800cb0c <RDMHandler::RespondMessageAck()>
 800cc68:	b002      	add	sp, #8
 800cc6a:	bd10      	pop	{r4, pc}
 800cc6c:	f100 030f 	add.w	r3, r0, #15
 800cc70:	9300      	str	r3, [sp, #0]
 800cc72:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800cc76:	f88d 3004 	strb.w	r3, [sp, #4]
 800cc7a:	e7ec      	b.n	800cc56 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800cc7c:	2000094c 	andcs	r0, r0, ip, asr #18

0800cc80 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800cc80:	6883      	ldr	r3, [r0, #8]
 800cc82:	2201      	movs	r2, #1
 800cc84:	75da      	strb	r2, [r3, #23]
 800cc86:	4a02      	ldr	r2, [pc, #8]	; (800cc90 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800cc88:	7812      	ldrb	r2, [r2, #0]
 800cc8a:	761a      	strb	r2, [r3, #24]
 800cc8c:	f7ff bf3e 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cc90:	20000950 	andcs	r0, r0, r0, asr r9

0800cc94 <RDMHandler::RespondMessageNack(unsigned short)>:
 800cc94:	460a      	mov	r2, r1
 800cc96:	2102      	movs	r1, #2
 800cc98:	f7ff beec 	b.w	800ca74 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800cc9c <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800cc9c:	b510      	push	{r4, lr}
 800cc9e:	6843      	ldr	r3, [r0, #4]
 800cca0:	7d9a      	ldrb	r2, [r3, #22]
 800cca2:	2a01      	cmp	r2, #1
 800cca4:	4604      	mov	r4, r0
 800cca6:	d004      	beq.n	800ccb2 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800cca8:	2101      	movs	r1, #1
 800ccaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ccae:	f7ff bff1 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800ccb2:	7ddb      	ldrb	r3, [r3, #23]
 800ccb4:	2b01      	cmp	r3, #1
 800ccb6:	d003      	beq.n	800ccc0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800ccb8:	2bff      	cmp	r3, #255	; 0xff
 800ccba:	d001      	beq.n	800ccc0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800ccbc:	2106      	movs	r1, #6
 800ccbe:	e7f4      	b.n	800ccaa <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800ccc0:	68a2      	ldr	r2, [r4, #8]
 800ccc2:	2100      	movs	r1, #0
 800ccc4:	2bff      	cmp	r3, #255	; 0xff
 800ccc6:	75d1      	strb	r1, [r2, #23]
 800ccc8:	d102      	bne.n	800ccd0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800ccca:	2104      	movs	r1, #4
 800cccc:	4620      	mov	r0, r4
 800ccce:	e7ec      	b.n	800ccaa <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800ccd0:	4b03      	ldr	r3, [pc, #12]	; (800cce0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800ccd2:	6818      	ldr	r0, [r3, #0]
 800ccd4:	f007 fa52 	bl	801417c <Hardware::Reboot()>
 800ccd8:	2800      	cmp	r0, #0
 800ccda:	d0f6      	beq.n	800ccca <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800ccdc:	bd10      	pop	{r4, pc}
 800ccde:	bf00      	nop
 800cce0:	2000fec4 	andcs	pc, r0, r4, asr #29

0800cce4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800cce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cce6:	6843      	ldr	r3, [r0, #4]
 800cce8:	460d      	mov	r5, r1
 800ccea:	7d99      	ldrb	r1, [r3, #22]
 800ccec:	2901      	cmp	r1, #1
 800ccee:	4604      	mov	r4, r0
 800ccf0:	d004      	beq.n	800ccfc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800ccf2:	2101      	movs	r1, #1
 800ccf4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ccf8:	f7ff bfcc 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800ccfc:	7ddb      	ldrb	r3, [r3, #23]
 800ccfe:	2b01      	cmp	r3, #1
 800cd00:	d901      	bls.n	800cd06 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800cd02:	2106      	movs	r1, #6
 800cd04:	e7f6      	b.n	800ccf4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800cd06:	4a12      	ldr	r2, [pc, #72]	; (800cd50 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800cd08:	4f12      	ldr	r7, [pc, #72]	; (800cd54 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800cd0a:	6816      	ldr	r6, [r2, #0]
 800cd0c:	4a12      	ldr	r2, [pc, #72]	; (800cd58 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800cd0e:	6810      	ldr	r0, [r2, #0]
 800cd10:	4a12      	ldr	r2, [pc, #72]	; (800cd5c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800cd12:	b983      	cbnz	r3, 800cd36 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800cd14:	2102      	movs	r1, #2
 800cd16:	7013      	strb	r3, [r2, #0]
 800cd18:	f007 f972 	bl	8014000 <LedBlink::SetMode(ledblink::Mode)>
 800cd1c:	7839      	ldrb	r1, [r7, #0]
 800cd1e:	b111      	cbz	r1, 800cd26 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd20:	4630      	mov	r0, r6
 800cd22:	f000 f9a8 	bl	800d076 <RDMIdentify::Off(rdm::identify::Mode)>
 800cd26:	b98d      	cbnz	r5, 800cd4c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800cd28:	68a3      	ldr	r3, [r4, #8]
 800cd2a:	75dd      	strb	r5, [r3, #23]
 800cd2c:	4620      	mov	r0, r4
 800cd2e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cd32:	f7ff beeb 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cd36:	7011      	strb	r1, [r2, #0]
 800cd38:	2104      	movs	r1, #4
 800cd3a:	f007 f961 	bl	8014000 <LedBlink::SetMode(ledblink::Mode)>
 800cd3e:	7839      	ldrb	r1, [r7, #0]
 800cd40:	2900      	cmp	r1, #0
 800cd42:	d0f0      	beq.n	800cd26 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd44:	4630      	mov	r0, r6
 800cd46:	f000 f995 	bl	800d074 <RDMIdentify::On(rdm::identify::Mode)>
 800cd4a:	e7ec      	b.n	800cd26 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd4e:	bf00      	nop
 800cd50:	20000954 	andcs	r0, r0, r4, asr r9
 800cd54:	20000951 	andcs	r0, r0, r1, asr r9
 800cd58:	2000fec0 	andcs	pc, r0, r0, asr #29
 800cd5c:	20000950 	andcs	r0, r0, r0, asr r9

0800cd60 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800cd60:	b538      	push	{r3, r4, r5, lr}
 800cd62:	6843      	ldr	r3, [r0, #4]
 800cd64:	7d9b      	ldrb	r3, [r3, #22]
 800cd66:	4604      	mov	r4, r0
 800cd68:	460d      	mov	r5, r1
 800cd6a:	b123      	cbz	r3, 800cd76 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800cd6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cd70:	2101      	movs	r1, #1
 800cd72:	f7ff bf8f 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800cd76:	4b06      	ldr	r3, [pc, #24]	; (800cd90 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800cd78:	6818      	ldr	r0, [r3, #0]
 800cd7a:	f7ff fde9 	bl	800c950 <RDMDeviceResponder::SetFactoryDefaults()>
 800cd7e:	b935      	cbnz	r5, 800cd8e <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800cd80:	68a3      	ldr	r3, [r4, #8]
 800cd82:	75dd      	strb	r5, [r3, #23]
 800cd84:	4620      	mov	r0, r4
 800cd86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cd8a:	f7ff bebf 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cd8e:	bd38      	pop	{r3, r4, r5, pc}
 800cd90:	2000094c 	andcs	r0, r0, ip, asr #18

0800cd94 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800cd94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd96:	6845      	ldr	r5, [r0, #4]
 800cd98:	7dab      	ldrb	r3, [r5, #22]
 800cd9a:	2b20      	cmp	r3, #32
 800cd9c:	460e      	mov	r6, r1
 800cd9e:	4604      	mov	r4, r0
 800cda0:	4611      	mov	r1, r2
 800cda2:	d905      	bls.n	800cdb0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800cda4:	2101      	movs	r1, #1
 800cda6:	b002      	add	sp, #8
 800cda8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdac:	f7ff bf72 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800cdb0:	4a0d      	ldr	r2, [pc, #52]	; (800cde8 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800cdb2:	6810      	ldr	r0, [r2, #0]
 800cdb4:	f105 0217 	add.w	r2, r5, #23
 800cdb8:	b159      	cbz	r1, 800cdd2 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800cdba:	308c      	adds	r0, #140	; 0x8c
 800cdbc:	f7ff fb61 	bl	800c482 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800cdc0:	b97e      	cbnz	r6, 800cde2 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800cdc2:	68a3      	ldr	r3, [r4, #8]
 800cdc4:	4620      	mov	r0, r4
 800cdc6:	75de      	strb	r6, [r3, #23]
 800cdc8:	b002      	add	sp, #8
 800cdca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdce:	f7ff be9d 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800cdd2:	4669      	mov	r1, sp
 800cdd4:	3004      	adds	r0, #4
 800cdd6:	9200      	str	r2, [sp, #0]
 800cdd8:	f88d 3004 	strb.w	r3, [sp, #4]
 800cddc:	f7ff fd96 	bl	800c90c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800cde0:	e7ee      	b.n	800cdc0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800cde2:	b002      	add	sp, #8
 800cde4:	bd70      	pop	{r4, r5, r6, pc}
 800cde6:	bf00      	nop
 800cde8:	2000094c 	andcs	r0, r0, ip, asr #18

0800cdec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800cdec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cdf0:	4616      	mov	r6, r2
 800cdf2:	4604      	mov	r4, r0
 800cdf4:	f006 00ef 	and.w	r0, r6, #239	; 0xef
 800cdf8:	2700      	movs	r7, #0
 800cdfa:	2820      	cmp	r0, #32
 800cdfc:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800ce00:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800ce04:	46be      	mov	lr, r7
 800ce06:	d005      	beq.n	800ce14 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
 800ce08:	2105      	movs	r1, #5
 800ce0a:	4620      	mov	r0, r4
 800ce0c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce10:	f7ff bf40 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800ce14:	482b      	ldr	r0, [pc, #172]	; (800cec4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd8>)
 800ce16:	6800      	ldr	r0, [r0, #0]
 800ce18:	8880      	ldrh	r0, [r0, #4]
 800ce1a:	4290      	cmp	r0, r2
 800ce1c:	d205      	bcs.n	800ce2a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800ce1e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ce22:	4282      	cmp	r2, r0
 800ce24:	d001      	beq.n	800ce2a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800ce26:	2109      	movs	r1, #9
 800ce28:	e7ef      	b.n	800ce0a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce2a:	4d27      	ldr	r5, [pc, #156]	; (800cec8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800ce2c:	f04f 0c14 	mov.w	ip, #20
 800ce30:	2000      	movs	r0, #0
 800ce32:	f8b5 9000 	ldrh.w	r9, [r5]
 800ce36:	4599      	cmp	r9, r3
 800ce38:	bf02      	ittt	eq
 800ce3a:	7daf      	ldrbeq	r7, [r5, #22]
 800ce3c:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800ce40:	4628      	moveq	r0, r5
 800ce42:	f1bc 0c01 	subs.w	ip, ip, #1
 800ce46:	f105 0518 	add.w	r5, r5, #24
 800ce4a:	d1f2      	bne.n	800ce32 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x46>
 800ce4c:	b908      	cbnz	r0, 800ce52 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x66>
 800ce4e:	2100      	movs	r1, #0
 800ce50:	e7db      	b.n	800ce0a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce52:	7823      	ldrb	r3, [r4, #0]
 800ce54:	b193      	cbz	r3, 800ce7c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
 800ce56:	2f00      	cmp	r7, #0
 800ce58:	d0f9      	beq.n	800ce4e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800ce5a:	2e20      	cmp	r6, #32
 800ce5c:	d11f      	bne.n	800ce9e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800ce5e:	bb71      	cbnz	r1, 800cebe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd2>
 800ce60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce64:	429a      	cmp	r2, r3
 800ce66:	d0de      	beq.n	800ce26 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800ce68:	6843      	ldr	r3, [r0, #4]
 800ce6a:	b913      	cbnz	r3, 800ce72 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x86>
 800ce6c:	6881      	ldr	r1, [r0, #8]
 800ce6e:	07cd      	lsls	r5, r1, #31
 800ce70:	d5ca      	bpl.n	800ce08 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800ce72:	7d01      	ldrb	r1, [r0, #20]
 800ce74:	4541      	cmp	r1, r8
 800ce76:	d005      	beq.n	800ce84 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x98>
 800ce78:	2101      	movs	r1, #1
 800ce7a:	e7c6      	b.n	800ce0a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce7c:	f1be 0f00 	cmp.w	lr, #0
 800ce80:	d1eb      	bne.n	800ce5a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6e>
 800ce82:	e7e4      	b.n	800ce4e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800ce84:	6881      	ldr	r1, [r0, #8]
 800ce86:	104d      	asrs	r5, r1, #1
 800ce88:	eb04 0061 	add.w	r0, r4, r1, asr #1
 800ce8c:	07c9      	lsls	r1, r1, #31
 800ce8e:	bf48      	it	mi
 800ce90:	5961      	ldrmi	r1, [r4, r5]
 800ce92:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce96:	bf48      	it	mi
 800ce98:	58cb      	ldrmi	r3, [r1, r3]
 800ce9a:	4611      	mov	r1, r2
 800ce9c:	4718      	bx	r3
 800ce9e:	e9d0 3003 	ldrd	r3, r0, [r0, #12]
 800cea2:	f000 0501 	and.w	r5, r0, #1
 800cea6:	b90b      	cbnz	r3, 800ceac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800cea8:	2d00      	cmp	r5, #0
 800ceaa:	d0ad      	beq.n	800ce08 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800ceac:	1046      	asrs	r6, r0, #1
 800ceae:	eb04 0060 	add.w	r0, r4, r0, asr #1
 800ceb2:	b10d      	cbz	r5, 800ceb8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800ceb4:	59a4      	ldr	r4, [r4, r6]
 800ceb6:	58e3      	ldr	r3, [r4, r3]
 800ceb8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cebc:	4718      	bx	r3
 800cebe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cec2:	bf00      	nop
 800cec4:	20000948 	andcs	r0, r0, r8, asr #18
 800cec8:	08018204 	stmdaeq	r1, {r2, r9, pc}

0800cecc <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800cecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ced0:	23ff      	movs	r3, #255	; 0xff
 800ced2:	7013      	strb	r3, [r2, #0]
 800ced4:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ced8:	b085      	sub	sp, #20
 800ceda:	7ccb      	ldrb	r3, [r1, #19]
 800cedc:	7d4f      	ldrb	r7, [r1, #21]
 800cede:	9303      	str	r3, [sp, #12]
 800cee0:	7d0b      	ldrb	r3, [r1, #20]
 800cee2:	f101 0a02 	add.w	sl, r1, #2
 800cee6:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800ceea:	4b5c      	ldr	r3, [pc, #368]	; (800d05c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800ceec:	4606      	mov	r6, r0
 800ceee:	460d      	mov	r5, r1
 800cef0:	4614      	mov	r4, r2
 800cef2:	495b      	ldr	r1, [pc, #364]	; (800d060 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800cef4:	f8d3 8000 	ldr.w	r8, [r3]
 800cef8:	2206      	movs	r2, #6
 800cefa:	4650      	mov	r0, sl
 800cefc:	f7ff fcec 	bl	800c8d8 <memcmp>
 800cf00:	f108 0905 	add.w	r9, r8, #5
 800cf04:	4683      	mov	fp, r0
 800cf06:	2202      	movs	r2, #2
 800cf08:	4649      	mov	r1, r9
 800cf0a:	4650      	mov	r0, sl
 800cf0c:	b2bf      	uxth	r7, r7
 800cf0e:	f7ff fce3 	bl	800c8d8 <memcmp>
 800cf12:	b928      	cbnz	r0, 800cf20 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800cf14:	2204      	movs	r2, #4
 800cf16:	4952      	ldr	r1, [pc, #328]	; (800d060 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800cf18:	18a8      	adds	r0, r5, r2
 800cf1a:	f7ff fcdd 	bl	800c8d8 <memcmp>
 800cf1e:	b158      	cbz	r0, 800cf38 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800cf20:	2206      	movs	r2, #6
 800cf22:	4649      	mov	r1, r9
 800cf24:	4650      	mov	r0, sl
 800cf26:	f7ff fcd7 	bl	800c8d8 <memcmp>
 800cf2a:	b130      	cbz	r0, 800cf3a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800cf2c:	f1bb 0f00 	cmp.w	fp, #0
 800cf30:	d04b      	beq.n	800cfca <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800cf32:	b005      	add	sp, #20
 800cf34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf38:	2001      	movs	r0, #1
 800cf3a:	2301      	movs	r3, #1
 800cf3c:	9a03      	ldr	r2, [sp, #12]
 800cf3e:	2a10      	cmp	r2, #16
 800cf40:	d177      	bne.n	800d032 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800cf42:	2f01      	cmp	r7, #1
 800cf44:	d144      	bne.n	800cfd0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800cf46:	7873      	ldrb	r3, [r6, #1]
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	d1f2      	bne.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf4c:	2206      	movs	r2, #6
 800cf4e:	4649      	mov	r1, r9
 800cf50:	f105 0017 	add.w	r0, r5, #23
 800cf54:	f7ff fcc0 	bl	800c8d8 <memcmp>
 800cf58:	2800      	cmp	r0, #0
 800cf5a:	dcea      	bgt.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf5c:	2206      	movs	r2, #6
 800cf5e:	f105 011d 	add.w	r1, r5, #29
 800cf62:	4648      	mov	r0, r9
 800cf64:	f7ff fcb8 	bl	800c8d8 <memcmp>
 800cf68:	2800      	cmp	r0, #0
 800cf6a:	dce2      	bgt.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf6c:	23fe      	movs	r3, #254	; 0xfe
 800cf6e:	7023      	strb	r3, [r4, #0]
 800cf70:	7063      	strb	r3, [r4, #1]
 800cf72:	70a3      	strb	r3, [r4, #2]
 800cf74:	70e3      	strb	r3, [r4, #3]
 800cf76:	7123      	strb	r3, [r4, #4]
 800cf78:	7163      	strb	r3, [r4, #5]
 800cf7a:	71a3      	strb	r3, [r4, #6]
 800cf7c:	23aa      	movs	r3, #170	; 0xaa
 800cf7e:	71e3      	strb	r3, [r4, #7]
 800cf80:	f108 0204 	add.w	r2, r8, #4
 800cf84:	4621      	mov	r1, r4
 800cf86:	f108 080a 	add.w	r8, r8, #10
 800cf8a:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800cf8e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cf92:	f060 0055 	orn	r0, r0, #85	; 0x55
 800cf96:	7208      	strb	r0, [r1, #8]
 800cf98:	7810      	ldrb	r0, [r2, #0]
 800cf9a:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800cf9e:	7248      	strb	r0, [r1, #9]
 800cfa0:	7810      	ldrb	r0, [r2, #0]
 800cfa2:	4542      	cmp	r2, r8
 800cfa4:	4403      	add	r3, r0
 800cfa6:	b29b      	uxth	r3, r3
 800cfa8:	f101 0102 	add.w	r1, r1, #2
 800cfac:	d1ef      	bne.n	800cf8e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc2>
 800cfae:	0a1a      	lsrs	r2, r3, #8
 800cfb0:	f062 0155 	orn	r1, r2, #85	; 0x55
 800cfb4:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800cfb8:	7562      	strb	r2, [r4, #21]
 800cfba:	f063 0255 	orn	r2, r3, #85	; 0x55
 800cfbe:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800cfc2:	7521      	strb	r1, [r4, #20]
 800cfc4:	75a2      	strb	r2, [r4, #22]
 800cfc6:	75e3      	strb	r3, [r4, #23]
 800cfc8:	e7b3      	b.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cfca:	4658      	mov	r0, fp
 800cfcc:	465b      	mov	r3, fp
 800cfce:	e7b5      	b.n	800cf3c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800cfd0:	2f03      	cmp	r7, #3
 800cfd2:	d11a      	bne.n	800d00a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800cfd4:	7daa      	ldrb	r2, [r5, #22]
 800cfd6:	2a00      	cmp	r2, #0
 800cfd8:	d1ab      	bne.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cfda:	7072      	strb	r2, [r6, #1]
 800cfdc:	f1bb 0f00 	cmp.w	fp, #0
 800cfe0:	d0a7      	beq.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cfe2:	2b00      	cmp	r3, #0
 800cfe4:	d0a5      	beq.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cfe6:	2302      	movs	r3, #2
 800cfe8:	75e3      	strb	r3, [r4, #23]
 800cfea:	4b1e      	ldr	r3, [pc, #120]	; (800d064 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800cfec:	7622      	strb	r2, [r4, #24]
 800cfee:	681b      	ldr	r3, [r3, #0]
 800cff0:	7662      	strb	r2, [r4, #25]
 800cff2:	889b      	ldrh	r3, [r3, #4]
 800cff4:	3b00      	subs	r3, #0
 800cff6:	bf18      	it	ne
 800cff8:	2301      	movne	r3, #1
 800cffa:	005b      	lsls	r3, r3, #1
 800cffc:	4630      	mov	r0, r6
 800cffe:	7663      	strb	r3, [r4, #25]
 800d000:	b005      	add	sp, #20
 800d002:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d006:	f7ff bd81 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d00a:	2f02      	cmp	r7, #2
 800d00c:	d191      	bne.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d00e:	7daa      	ldrb	r2, [r5, #22]
 800d010:	2a00      	cmp	r2, #0
 800d012:	d18e      	bne.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d014:	2101      	movs	r1, #1
 800d016:	7071      	strb	r1, [r6, #1]
 800d018:	2b00      	cmp	r3, #0
 800d01a:	d08a      	beq.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d01c:	4b11      	ldr	r3, [pc, #68]	; (800d064 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800d01e:	75e7      	strb	r7, [r4, #23]
 800d020:	681b      	ldr	r3, [r3, #0]
 800d022:	7622      	strb	r2, [r4, #24]
 800d024:	7662      	strb	r2, [r4, #25]
 800d026:	889b      	ldrh	r3, [r3, #4]
 800d028:	3b00      	subs	r3, #0
 800d02a:	bf18      	it	ne
 800d02c:	2301      	movne	r3, #1
 800d02e:	408b      	lsls	r3, r1
 800d030:	e7e4      	b.n	800cffc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800d032:	7c6a      	ldrb	r2, [r5, #17]
 800d034:	7cab      	ldrb	r3, [r5, #18]
 800d036:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d03a:	b29b      	uxth	r3, r3
 800d03c:	f1bb 0f00 	cmp.w	fp, #0
 800d040:	9301      	str	r3, [sp, #4]
 800d042:	7dab      	ldrb	r3, [r5, #22]
 800d044:	9300      	str	r3, [sp, #0]
 800d046:	bf18      	it	ne
 800d048:	4601      	movne	r1, r0
 800d04a:	9a03      	ldr	r2, [sp, #12]
 800d04c:	463b      	mov	r3, r7
 800d04e:	bf08      	it	eq
 800d050:	2101      	moveq	r1, #1
 800d052:	4630      	mov	r0, r6
 800d054:	f7ff feca 	bl	800cdec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800d058:	e76b      	b.n	800cf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d05a:	bf00      	nop
 800d05c:	2000094c 	andcs	r0, r0, ip, asr #18
 800d060:	080181fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, pc}
 800d064:	20000948 	andcs	r0, r0, r8, asr #18

0800d068 <RDMIdentify::RDMIdentify()>:
 800d068:	4b01      	ldr	r3, [pc, #4]	; (800d070 <RDMIdentify::RDMIdentify()+0x8>)
 800d06a:	6018      	str	r0, [r3, #0]
 800d06c:	4770      	bx	lr
 800d06e:	bf00      	nop
 800d070:	20000954 	andcs	r0, r0, r4, asr r9

0800d074 <RDMIdentify::On(rdm::identify::Mode)>:
 800d074:	4770      	bx	lr

0800d076 <RDMIdentify::Off(rdm::identify::Mode)>:
 800d076:	4770      	bx	lr

0800d078 <memcpy.constprop.0.isra.0>:
 800d078:	3801      	subs	r0, #1
 800d07a:	1d0b      	adds	r3, r1, #4
 800d07c:	4299      	cmp	r1, r3
 800d07e:	d100      	bne.n	800d082 <memcpy.constprop.0.isra.0+0xa>
 800d080:	4770      	bx	lr
 800d082:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d086:	f800 2f01 	strb.w	r2, [r0, #1]!
 800d08a:	e7f7      	b.n	800d07c <memcpy.constprop.0.isra.0+0x4>

0800d08c <RDMHandler::GetInterfaceList(unsigned short)>:
 800d08c:	4a08      	ldr	r2, [pc, #32]	; (800d0b0 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800d08e:	6883      	ldr	r3, [r0, #8]
 800d090:	6812      	ldr	r2, [r2, #0]
 800d092:	6892      	ldr	r2, [r2, #8]
 800d094:	76da      	strb	r2, [r3, #27]
 800d096:	0e11      	lsrs	r1, r2, #24
 800d098:	7619      	strb	r1, [r3, #24]
 800d09a:	0c11      	lsrs	r1, r2, #16
 800d09c:	7659      	strb	r1, [r3, #25]
 800d09e:	0a11      	lsrs	r1, r2, #8
 800d0a0:	2200      	movs	r2, #0
 800d0a2:	771a      	strb	r2, [r3, #28]
 800d0a4:	2206      	movs	r2, #6
 800d0a6:	7699      	strb	r1, [r3, #26]
 800d0a8:	775a      	strb	r2, [r3, #29]
 800d0aa:	75da      	strb	r2, [r3, #23]
 800d0ac:	f7ff bd2e 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d0b0:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d0b4 <RDMHandler::GetInterfaceName(unsigned short)>:
 800d0b4:	b538      	push	{r3, r4, r5, lr}
 800d0b6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d0ba:	4604      	mov	r4, r0
 800d0bc:	3117      	adds	r1, #23
 800d0be:	f105 0018 	add.w	r0, r5, #24
 800d0c2:	f7ff ffd9 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d0c6:	4a0d      	ldr	r2, [pc, #52]	; (800d0fc <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800d0c8:	6813      	ldr	r3, [r2, #0]
 800d0ca:	f105 001b 	add.w	r0, r5, #27
 800d0ce:	33a6      	adds	r3, #166	; 0xa6
 800d0d0:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d0d4:	f800 1f01 	strb.w	r1, [r0, #1]!
 800d0d8:	2900      	cmp	r1, #0
 800d0da:	d1f9      	bne.n	800d0d0 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800d0dc:	6812      	ldr	r2, [r2, #0]
 800d0de:	32a6      	adds	r2, #166	; 0xa6
 800d0e0:	4611      	mov	r1, r2
 800d0e2:	460b      	mov	r3, r1
 800d0e4:	3101      	adds	r1, #1
 800d0e6:	7818      	ldrb	r0, [r3, #0]
 800d0e8:	2800      	cmp	r0, #0
 800d0ea:	d1fa      	bne.n	800d0e2 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800d0ec:	1a9b      	subs	r3, r3, r2
 800d0ee:	3304      	adds	r3, #4
 800d0f0:	75eb      	strb	r3, [r5, #23]
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d0f8:	f7ff bd08 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d0fc:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d100 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800d100:	b538      	push	{r3, r4, r5, lr}
 800d102:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d106:	4604      	mov	r4, r0
 800d108:	3117      	adds	r1, #23
 800d10a:	f105 0018 	add.w	r0, r5, #24
 800d10e:	f7ff ffb3 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d112:	4b06      	ldr	r3, [pc, #24]	; (800d12c <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800d114:	f105 011c 	add.w	r1, r5, #28
 800d118:	6818      	ldr	r0, [r3, #0]
 800d11a:	f004 f860 	bl	80111de <Network::MacAddressCopyTo(unsigned char*)>
 800d11e:	230a      	movs	r3, #10
 800d120:	75eb      	strb	r3, [r5, #23]
 800d122:	4620      	mov	r0, r4
 800d124:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d128:	f7ff bcf0 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d12c:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d130 <RDMHandler::GetDHCPMode(unsigned short)>:
 800d130:	b538      	push	{r3, r4, r5, lr}
 800d132:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d136:	4604      	mov	r4, r0
 800d138:	3117      	adds	r1, #23
 800d13a:	f105 0018 	add.w	r0, r5, #24
 800d13e:	f7ff ff9b 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d142:	4b05      	ldr	r3, [pc, #20]	; (800d158 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800d144:	681b      	ldr	r3, [r3, #0]
 800d146:	795b      	ldrb	r3, [r3, #5]
 800d148:	772b      	strb	r3, [r5, #28]
 800d14a:	2305      	movs	r3, #5
 800d14c:	75eb      	strb	r3, [r5, #23]
 800d14e:	4620      	mov	r0, r4
 800d150:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d154:	f7ff bcda 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d158:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d15c <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800d15c:	4b10      	ldr	r3, [pc, #64]	; (800d1a0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800d15e:	6842      	ldr	r2, [r0, #4]
 800d160:	681b      	ldr	r3, [r3, #0]
 800d162:	7919      	ldrb	r1, [r3, #4]
 800d164:	b510      	push	{r4, lr}
 800d166:	4604      	mov	r4, r0
 800d168:	b921      	cbnz	r1, 800d174 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800d16a:	210b      	movs	r1, #11
 800d16c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d170:	f7ff bd90 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d174:	7ed2      	ldrb	r2, [r2, #27]
 800d176:	2a01      	cmp	r2, #1
 800d178:	d109      	bne.n	800d18e <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800d17a:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800d17e:	f042 0204 	orr.w	r2, r2, #4
 800d182:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800d186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d18a:	f7ff bcbf 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d18e:	b92a      	cbnz	r2, 800d19c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800d190:	4618      	mov	r0, r3
 800d192:	4611      	mov	r1, r2
 800d194:	f004 fa40 	bl	8011618 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d198:	4620      	mov	r0, r4
 800d19a:	e7f4      	b.n	800d186 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800d19c:	2106      	movs	r1, #6
 800d19e:	e7e5      	b.n	800d16c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800d1a0:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d1a4 <RDMHandler::GetNameServers(unsigned short)>:
 800d1a4:	6842      	ldr	r2, [r0, #4]
 800d1a6:	7dd2      	ldrb	r2, [r2, #23]
 800d1a8:	2a02      	cmp	r2, #2
 800d1aa:	d902      	bls.n	800d1b2 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800d1ac:	2106      	movs	r1, #6
 800d1ae:	f7ff bd71 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d1b2:	6883      	ldr	r3, [r0, #8]
 800d1b4:	2200      	movs	r2, #0
 800d1b6:	765a      	strb	r2, [r3, #25]
 800d1b8:	769a      	strb	r2, [r3, #26]
 800d1ba:	76da      	strb	r2, [r3, #27]
 800d1bc:	771a      	strb	r2, [r3, #28]
 800d1be:	2205      	movs	r2, #5
 800d1c0:	75da      	strb	r2, [r3, #23]
 800d1c2:	f7ff bca3 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
	...

0800d1c8 <RDMHandler::GetZeroconf(unsigned short)>:
 800d1c8:	b538      	push	{r3, r4, r5, lr}
 800d1ca:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d1ce:	4604      	mov	r4, r0
 800d1d0:	3117      	adds	r1, #23
 800d1d2:	f105 0018 	add.w	r0, r5, #24
 800d1d6:	f7ff ff4f 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d1da:	4b06      	ldr	r3, [pc, #24]	; (800d1f4 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800d1dc:	681a      	ldr	r2, [r3, #0]
 800d1de:	7993      	ldrb	r3, [r2, #6]
 800d1e0:	b103      	cbz	r3, 800d1e4 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800d1e2:	79d3      	ldrb	r3, [r2, #7]
 800d1e4:	772b      	strb	r3, [r5, #28]
 800d1e6:	2305      	movs	r3, #5
 800d1e8:	75eb      	strb	r3, [r5, #23]
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1f0:	f7ff bc8c 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d1f4:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d1f8 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800d1f8:	4b10      	ldr	r3, [pc, #64]	; (800d23c <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800d1fa:	6842      	ldr	r2, [r0, #4]
 800d1fc:	681b      	ldr	r3, [r3, #0]
 800d1fe:	7999      	ldrb	r1, [r3, #6]
 800d200:	b510      	push	{r4, lr}
 800d202:	4604      	mov	r4, r0
 800d204:	b921      	cbnz	r1, 800d210 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800d206:	210b      	movs	r1, #11
 800d208:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d20c:	f7ff bd42 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d210:	7ed2      	ldrb	r2, [r2, #27]
 800d212:	2a01      	cmp	r2, #1
 800d214:	d109      	bne.n	800d22a <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800d216:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800d21a:	f042 0208 	orr.w	r2, r2, #8
 800d21e:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800d222:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d226:	f7ff bc71 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d22a:	b92a      	cbnz	r2, 800d238 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800d22c:	4618      	mov	r0, r3
 800d22e:	4611      	mov	r1, r2
 800d230:	f004 f9f2 	bl	8011618 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d234:	4620      	mov	r0, r4
 800d236:	e7f4      	b.n	800d222 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800d238:	2106      	movs	r1, #6
 800d23a:	e7e5      	b.n	800d208 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800d23c:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d240 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800d240:	4b09      	ldr	r3, [pc, #36]	; (800d268 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800d242:	681b      	ldr	r3, [r3, #0]
 800d244:	795a      	ldrb	r2, [r3, #5]
 800d246:	b510      	push	{r4, lr}
 800d248:	4604      	mov	r4, r0
 800d24a:	b922      	cbnz	r2, 800d256 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800d24c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d250:	210b      	movs	r1, #11
 800d252:	f7ff bd1f 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d256:	4618      	mov	r0, r3
 800d258:	f004 f998 	bl	801158c <Network::EnableDhcp()>
 800d25c:	4620      	mov	r0, r4
 800d25e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d262:	f7ff bc53 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d266:	bf00      	nop
 800d268:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d26c <RDMHandler::GetAddressNetmask(unsigned short)>:
 800d26c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d26e:	4e10      	ldr	r6, [pc, #64]	; (800d2b0 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800d270:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d274:	6833      	ldr	r3, [r6, #0]
 800d276:	4604      	mov	r4, r0
 800d278:	695b      	ldr	r3, [r3, #20]
 800d27a:	9301      	str	r3, [sp, #4]
 800d27c:	f105 0018 	add.w	r0, r5, #24
 800d280:	3117      	adds	r1, #23
 800d282:	f7ff fef9 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d286:	a901      	add	r1, sp, #4
 800d288:	f105 001c 	add.w	r0, r5, #28
 800d28c:	f7ff fef4 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d290:	6836      	ldr	r6, [r6, #0]
 800d292:	69f0      	ldr	r0, [r6, #28]
 800d294:	f009 faec 	bl	8016870 <__popcountsi2>
 800d298:	f885 0020 	strb.w	r0, [r5, #32]
 800d29c:	7973      	ldrb	r3, [r6, #5]
 800d29e:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800d2a2:	230a      	movs	r3, #10
 800d2a4:	75eb      	strb	r3, [r5, #23]
 800d2a6:	4620      	mov	r0, r4
 800d2a8:	f7ff fc30 	bl	800cb0c <RDMHandler::RespondMessageAck()>
 800d2ac:	b002      	add	sp, #8
 800d2ae:	bd70      	pop	{r4, r5, r6, pc}
 800d2b0:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d2b4 <RDMHandler::GetStaticAddress(unsigned short)>:
 800d2b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2b6:	4e0f      	ldr	r6, [pc, #60]	; (800d2f4 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800d2b8:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d2bc:	6833      	ldr	r3, [r6, #0]
 800d2be:	4604      	mov	r4, r0
 800d2c0:	695b      	ldr	r3, [r3, #20]
 800d2c2:	9301      	str	r3, [sp, #4]
 800d2c4:	f105 0018 	add.w	r0, r5, #24
 800d2c8:	3117      	adds	r1, #23
 800d2ca:	f7ff fed5 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d2ce:	a901      	add	r1, sp, #4
 800d2d0:	f105 001c 	add.w	r0, r5, #28
 800d2d4:	f7ff fed0 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d2d8:	6833      	ldr	r3, [r6, #0]
 800d2da:	69d8      	ldr	r0, [r3, #28]
 800d2dc:	f009 fac8 	bl	8016870 <__popcountsi2>
 800d2e0:	2309      	movs	r3, #9
 800d2e2:	f885 0020 	strb.w	r0, [r5, #32]
 800d2e6:	75eb      	strb	r3, [r5, #23]
 800d2e8:	4620      	mov	r0, r4
 800d2ea:	f7ff fc0f 	bl	800cb0c <RDMHandler::RespondMessageAck()>
 800d2ee:	b002      	add	sp, #8
 800d2f0:	bd70      	pop	{r4, r5, r6, pc}
 800d2f2:	bf00      	nop
 800d2f4:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d2f8 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800d2f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d2fa:	6845      	ldr	r5, [r0, #4]
 800d2fc:	7dab      	ldrb	r3, [r5, #22]
 800d2fe:	2b09      	cmp	r3, #9
 800d300:	4604      	mov	r4, r0
 800d302:	d005      	beq.n	800d310 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800d304:	2101      	movs	r1, #1
 800d306:	b003      	add	sp, #12
 800d308:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d30c:	f7ff bcc2 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d310:	f105 011b 	add.w	r1, r5, #27
 800d314:	a801      	add	r0, sp, #4
 800d316:	f7ff feaf 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d31a:	4b09      	ldr	r3, [pc, #36]	; (800d340 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800d31c:	7fea      	ldrb	r2, [r5, #31]
 800d31e:	6818      	ldr	r0, [r3, #0]
 800d320:	9901      	ldr	r1, [sp, #4]
 800d322:	b12a      	cbz	r2, 800d330 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800d324:	f1c2 0220 	rsb	r2, r2, #32
 800d328:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d32c:	4093      	lsls	r3, r2
 800d32e:	ba1a      	rev	r2, r3
 800d330:	f004 f972 	bl	8011618 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d334:	4620      	mov	r0, r4
 800d336:	f7ff fbe9 	bl	800cb0c <RDMHandler::RespondMessageAck()>
 800d33a:	b003      	add	sp, #12
 800d33c:	bd30      	pop	{r4, r5, pc}
 800d33e:	bf00      	nop
 800d340:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d344 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800d344:	4b08      	ldr	r3, [pc, #32]	; (800d368 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800d346:	b510      	push	{r4, lr}
 800d348:	4604      	mov	r4, r0
 800d34a:	6818      	ldr	r0, [r3, #0]
 800d34c:	f004 f971 	bl	8011632 <Network::ApplyQueuedConfig()>
 800d350:	b120      	cbz	r0, 800d35c <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800d352:	4620      	mov	r0, r4
 800d354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d358:	f7ff bbd8 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d35c:	4620      	mov	r0, r4
 800d35e:	2101      	movs	r1, #1
 800d360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d364:	f7ff bc96 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d368:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d36c <RDMHandler::GetDefaultRoute(unsigned short)>:
 800d36c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d36e:	4b0c      	ldr	r3, [pc, #48]	; (800d3a0 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800d370:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d374:	681b      	ldr	r3, [r3, #0]
 800d376:	4604      	mov	r4, r0
 800d378:	699b      	ldr	r3, [r3, #24]
 800d37a:	9301      	str	r3, [sp, #4]
 800d37c:	f105 0018 	add.w	r0, r5, #24
 800d380:	3117      	adds	r1, #23
 800d382:	f7ff fe79 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d386:	a901      	add	r1, sp, #4
 800d388:	f105 001c 	add.w	r0, r5, #28
 800d38c:	f7ff fe74 	bl	800d078 <memcpy.constprop.0.isra.0>
 800d390:	2308      	movs	r3, #8
 800d392:	75eb      	strb	r3, [r5, #23]
 800d394:	4620      	mov	r0, r4
 800d396:	f7ff fbb9 	bl	800cb0c <RDMHandler::RespondMessageAck()>
 800d39a:	b003      	add	sp, #12
 800d39c:	bd30      	pop	{r4, r5, pc}
 800d39e:	bf00      	nop
 800d3a0:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d3a4 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800d3a4:	210b      	movs	r1, #11
 800d3a6:	f7ff bc75 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d3ac <RDMHandler::GetHostName(unsigned short)>:
 800d3ac:	4b0a      	ldr	r3, [pc, #40]	; (800d3d8 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800d3ae:	b513      	push	{r0, r1, r4, lr}
 800d3b0:	6819      	ldr	r1, [r3, #0]
 800d3b2:	3120      	adds	r1, #32
 800d3b4:	460b      	mov	r3, r1
 800d3b6:	461a      	mov	r2, r3
 800d3b8:	3301      	adds	r3, #1
 800d3ba:	7814      	ldrb	r4, [r2, #0]
 800d3bc:	2c00      	cmp	r4, #0
 800d3be:	d1fa      	bne.n	800d3b6 <RDMHandler::GetHostName(unsigned short)+0xa>
 800d3c0:	1a52      	subs	r2, r2, r1
 800d3c2:	b292      	uxth	r2, r2
 800d3c4:	9001      	str	r0, [sp, #4]
 800d3c6:	f7ff fb49 	bl	800ca5c <RDMHandler::HandleString(char const*, unsigned int)>
 800d3ca:	9801      	ldr	r0, [sp, #4]
 800d3cc:	b002      	add	sp, #8
 800d3ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d3d2:	f7ff bb9b 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d3d6:	bf00      	nop
 800d3d8:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d3dc <RDMHandler::SetHostName(bool, unsigned short)>:
 800d3dc:	b510      	push	{r4, lr}
 800d3de:	6841      	ldr	r1, [r0, #4]
 800d3e0:	7d8b      	ldrb	r3, [r1, #22]
 800d3e2:	2b3f      	cmp	r3, #63	; 0x3f
 800d3e4:	4604      	mov	r4, r0
 800d3e6:	d904      	bls.n	800d3f2 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800d3e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d3ec:	2102      	movs	r1, #2
 800d3ee:	f7ff bc51 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
 800d3f2:	440b      	add	r3, r1
 800d3f4:	2200      	movs	r2, #0
 800d3f6:	75da      	strb	r2, [r3, #23]
 800d3f8:	4b04      	ldr	r3, [pc, #16]	; (800d40c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800d3fa:	3117      	adds	r1, #23
 800d3fc:	6818      	ldr	r0, [r3, #0]
 800d3fe:	f004 f88a 	bl	8011516 <Network::SetHostName(char const*)>
 800d402:	4620      	mov	r0, r4
 800d404:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d408:	f7ff bb80 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d40c:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d410 <RDMHandler::GetDomainName(unsigned short)>:
 800d410:	4b0a      	ldr	r3, [pc, #40]	; (800d43c <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800d412:	b513      	push	{r0, r1, r4, lr}
 800d414:	6819      	ldr	r1, [r3, #0]
 800d416:	3160      	adds	r1, #96	; 0x60
 800d418:	460b      	mov	r3, r1
 800d41a:	461a      	mov	r2, r3
 800d41c:	3301      	adds	r3, #1
 800d41e:	7814      	ldrb	r4, [r2, #0]
 800d420:	2c00      	cmp	r4, #0
 800d422:	d1fa      	bne.n	800d41a <RDMHandler::GetDomainName(unsigned short)+0xa>
 800d424:	1a52      	subs	r2, r2, r1
 800d426:	b292      	uxth	r2, r2
 800d428:	9001      	str	r0, [sp, #4]
 800d42a:	f7ff fb17 	bl	800ca5c <RDMHandler::HandleString(char const*, unsigned int)>
 800d42e:	9801      	ldr	r0, [sp, #4]
 800d430:	b002      	add	sp, #8
 800d432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d436:	f7ff bb69 	b.w	800cb0c <RDMHandler::RespondMessageAck()>
 800d43a:	bf00      	nop
 800d43c:	2000fadc 	ldrdcs	pc, [r0], -ip

0800d440 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800d440:	210b      	movs	r1, #11
 800d442:	f7ff bc27 	b.w	800cc94 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d448 <RDMDevice::RDMDevice()>:
 800d448:	4a34      	ldr	r2, [pc, #208]	; (800d51c <RDMDevice::RDMDevice()+0xd4>)
 800d44a:	2300      	movs	r3, #0
 800d44c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d44e:	4604      	mov	r4, r0
 800d450:	7003      	strb	r3, [r0, #0]
 800d452:	f880 3072 	strb.w	r3, [r0, #114]	; 0x72
 800d456:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
 800d45a:	6783      	str	r3, [r0, #120]	; 0x78
 800d45c:	4611      	mov	r1, r2
 800d45e:	4613      	mov	r3, r2
 800d460:	3201      	adds	r2, #1
 800d462:	7818      	ldrb	r0, [r3, #0]
 800d464:	2800      	cmp	r0, #0
 800d466:	d1fa      	bne.n	800d45e <RDMDevice::RDMDevice()+0x16>
 800d468:	1a5b      	subs	r3, r3, r1
 800d46a:	2b20      	cmp	r3, #32
 800d46c:	bf28      	it	cs
 800d46e:	2320      	movcs	r3, #32
 800d470:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800d474:	4829      	ldr	r0, [pc, #164]	; (800d51c <RDMDevice::RDMDevice()+0xd4>)
 800d476:	4629      	mov	r1, r5
 800d478:	461a      	mov	r2, r3
 800d47a:	3a01      	subs	r2, #1
 800d47c:	d23e      	bcs.n	800d4fc <RDMDevice::RDMDevice()+0xb4>
 800d47e:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800d482:	4b27      	ldr	r3, [pc, #156]	; (800d520 <RDMDevice::RDMDevice()+0xd8>)
 800d484:	4e27      	ldr	r6, [pc, #156]	; (800d524 <RDMDevice::RDMDevice()+0xdc>)
 800d486:	781a      	ldrb	r2, [r3, #0]
 800d488:	7062      	strb	r2, [r4, #1]
 800d48a:	785b      	ldrb	r3, [r3, #1]
 800d48c:	6830      	ldr	r0, [r6, #0]
 800d48e:	70a3      	strb	r3, [r4, #2]
 800d490:	4669      	mov	r1, sp
 800d492:	f003 fea4 	bl	80111de <Network::MacAddressCopyTo(unsigned char*)>
 800d496:	6833      	ldr	r3, [r6, #0]
 800d498:	695b      	ldr	r3, [r3, #20]
 800d49a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d49e:	0e18      	lsrs	r0, r3, #24
 800d4a0:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800d4a4:	b2db      	uxtb	r3, r3
 800d4a6:	70e3      	strb	r3, [r4, #3]
 800d4a8:	72a3      	strb	r3, [r4, #10]
 800d4aa:	4b1f      	ldr	r3, [pc, #124]	; (800d528 <RDMDevice::RDMDevice()+0xe0>)
 800d4ac:	7122      	strb	r2, [r4, #4]
 800d4ae:	7262      	strb	r2, [r4, #9]
 800d4b0:	71a0      	strb	r0, [r4, #6]
 800d4b2:	7161      	strb	r1, [r4, #5]
 800d4b4:	71e0      	strb	r0, [r4, #7]
 800d4b6:	7221      	strb	r1, [r4, #8]
 800d4b8:	461a      	mov	r2, r3
 800d4ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d4be:	2900      	cmp	r1, #0
 800d4c0:	d1fb      	bne.n	800d4ba <RDMDevice::RDMDevice()+0x72>
 800d4c2:	1a9b      	subs	r3, r3, r2
 800d4c4:	2b20      	cmp	r3, #32
 800d4c6:	bf28      	it	cs
 800d4c8:	2320      	movcs	r3, #32
 800d4ca:	4917      	ldr	r1, [pc, #92]	; (800d528 <RDMDevice::RDMDevice()+0xe0>)
 800d4cc:	461a      	mov	r2, r3
 800d4ce:	3a01      	subs	r2, #1
 800d4d0:	d219      	bcs.n	800d506 <RDMDevice::RDMDevice()+0xbe>
 800d4d2:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800d4d6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d4da:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d4de:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800d4e2:	4a12      	ldr	r2, [pc, #72]	; (800d52c <RDMDevice::RDMDevice()+0xe4>)
 800d4e4:	2315      	movs	r3, #21
 800d4e6:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
 800d4ea:	f104 0166 	add.w	r1, r4, #102	; 0x66
 800d4ee:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800d4f2:	4299      	cmp	r1, r3
 800d4f4:	d10c      	bne.n	800d510 <RDMDevice::RDMDevice()+0xc8>
 800d4f6:	4620      	mov	r0, r4
 800d4f8:	b002      	add	sp, #8
 800d4fa:	bd70      	pop	{r4, r5, r6, pc}
 800d4fc:	f810 6b01 	ldrb.w	r6, [r0], #1
 800d500:	f801 6f01 	strb.w	r6, [r1, #1]!
 800d504:	e7b9      	b.n	800d47a <RDMDevice::RDMDevice()+0x32>
 800d506:	f811 0b01 	ldrb.w	r0, [r1], #1
 800d50a:	f805 0f01 	strb.w	r0, [r5, #1]!
 800d50e:	e7de      	b.n	800d4ce <RDMDevice::RDMDevice()+0x86>
 800d510:	f812 0b01 	ldrb.w	r0, [r2], #1
 800d514:	f803 0f01 	strb.w	r0, [r3, #1]!
 800d518:	e7eb      	b.n	800d4f2 <RDMDevice::RDMDevice()+0xaa>
 800d51a:	bf00      	nop
 800d51c:	080184d0 	stmdaeq	r1, {r4, r6, r7, sl, pc}
 800d520:	080184ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, pc}
 800d524:	2000fadc 	ldrdcs	pc, [r0], -ip
 800d528:	08017c0a 	stmdaeq	r1, {r1, r3, sl, fp, ip, sp, lr}
 800d52c:	080184b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, pc}

0800d530 <RDMDevice::Print()>:
 800d530:	b513      	push	{r0, r1, r4, lr}
 800d532:	4604      	mov	r4, r0
 800d534:	4818      	ldr	r0, [pc, #96]	; (800d598 <RDMDevice::Print()+0x68>)
 800d536:	f7fc fec7 	bl	800a2c8 <printf>
 800d53a:	f894 104c 	ldrb.w	r1, [r4, #76]	; 0x4c
 800d53e:	4817      	ldr	r0, [pc, #92]	; (800d59c <RDMDevice::Print()+0x6c>)
 800d540:	f104 022c 	add.w	r2, r4, #44	; 0x2c
 800d544:	f7fc fec0 	bl	800a2c8 <printf>
 800d548:	78a2      	ldrb	r2, [r4, #2]
 800d54a:	7861      	ldrb	r1, [r4, #1]
 800d54c:	4814      	ldr	r0, [pc, #80]	; (800d5a0 <RDMDevice::Print()+0x70>)
 800d54e:	f7fc febb 	bl	800a2c8 <printf>
 800d552:	79e3      	ldrb	r3, [r4, #7]
 800d554:	7a62      	ldrb	r2, [r4, #9]
 800d556:	7aa1      	ldrb	r1, [r4, #10]
 800d558:	9300      	str	r3, [sp, #0]
 800d55a:	4812      	ldr	r0, [pc, #72]	; (800d5a4 <RDMDevice::Print()+0x74>)
 800d55c:	7a23      	ldrb	r3, [r4, #8]
 800d55e:	f7fc feb3 	bl	800a2c8 <printf>
 800d562:	f894 102b 	ldrb.w	r1, [r4, #43]	; 0x2b
 800d566:	4810      	ldr	r0, [pc, #64]	; (800d5a8 <RDMDevice::Print()+0x78>)
 800d568:	f104 020b 	add.w	r2, r4, #11
 800d56c:	f7fc feac 	bl	800a2c8 <printf>
 800d570:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800d574:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800d578:	480c      	ldr	r0, [pc, #48]	; (800d5ac <RDMDevice::Print()+0x7c>)
 800d57a:	0a09      	lsrs	r1, r1, #8
 800d57c:	f7fc fea4 	bl	800a2c8 <printf>
 800d580:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800d584:	f894 2050 	ldrb.w	r2, [r4, #80]	; 0x50
 800d588:	4809      	ldr	r0, [pc, #36]	; (800d5b0 <RDMDevice::Print()+0x80>)
 800d58a:	0a09      	lsrs	r1, r1, #8
 800d58c:	b002      	add	sp, #8
 800d58e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d592:	f7fc be99 	b.w	800a2c8 <printf>
 800d596:	bf00      	nop
 800d598:	080183e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, pc}
 800d59c:	080183fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 800d5a0:	08018419 	stmdaeq	r1, {r0, r3, r4, sl, pc}
 800d5a4:	08018438 	stmdaeq	r1, {r3, r4, r5, sl, pc}
 800d5a8:	0801845f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, sl, pc}
 800d5ac:	0801847a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, pc}
 800d5b0:	08018499 	stmdaeq	r1, {r0, r3, r4, r7, sl, pc}

0800d5b4 <uuid_unparse_x>:
 800d5b4:	b530      	push	{r4, r5, lr}
 800d5b6:	4603      	mov	r3, r0
 800d5b8:	4608      	mov	r0, r1
 800d5ba:	4611      	mov	r1, r2
 800d5bc:	681a      	ldr	r2, [r3, #0]
 800d5be:	891c      	ldrh	r4, [r3, #8]
 800d5c0:	b08f      	sub	sp, #60	; 0x3c
 800d5c2:	ba12      	rev	r2, r2
 800d5c4:	920a      	str	r2, [sp, #40]	; 0x28
 800d5c6:	889a      	ldrh	r2, [r3, #4]
 800d5c8:	ba52      	rev16	r2, r2
 800d5ca:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d5ce:	88da      	ldrh	r2, [r3, #6]
 800d5d0:	ba64      	rev16	r4, r4
 800d5d2:	ba52      	rev16	r2, r2
 800d5d4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d5d8:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800d5dc:	f103 020a 	add.w	r2, r3, #10
 800d5e0:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800d5e4:	3310      	adds	r3, #16
 800d5e6:	4293      	cmp	r3, r2
 800d5e8:	d122      	bne.n	800d630 <uuid_unparse_x+0x7c>
 800d5ea:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800d5ee:	9208      	str	r2, [sp, #32]
 800d5f0:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800d5f4:	9207      	str	r2, [sp, #28]
 800d5f6:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800d5fa:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800d5fe:	9206      	str	r2, [sp, #24]
 800d600:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800d604:	9205      	str	r2, [sp, #20]
 800d606:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800d60a:	9204      	str	r2, [sp, #16]
 800d60c:	0a1b      	lsrs	r3, r3, #8
 800d60e:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800d612:	9203      	str	r2, [sp, #12]
 800d614:	9301      	str	r3, [sp, #4]
 800d616:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800d61a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d61e:	9202      	str	r2, [sp, #8]
 800d620:	9300      	str	r3, [sp, #0]
 800d622:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d624:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800d628:	f7fc fe5e 	bl	800a2e8 <sprintf>
 800d62c:	b00f      	add	sp, #60	; 0x3c
 800d62e:	bd30      	pop	{r4, r5, pc}
 800d630:	f812 5b01 	ldrb.w	r5, [r2], #1
 800d634:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d638:	e7d5      	b.n	800d5e6 <uuid_unparse_x+0x32>
	...

0800d63c <uuid_unparse>:
 800d63c:	4a01      	ldr	r2, [pc, #4]	; (800d644 <uuid_unparse+0x8>)
 800d63e:	f7ff bfb9 	b.w	800d5b4 <uuid_unparse_x>
 800d642:	bf00      	nop
 800d644:	080184ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, pc}

0800d648 <DmxSend::~DmxSend()>:
 800d648:	4770      	bx	lr
	...

0800d64c <DmxSend::Start(unsigned int)>:
 800d64c:	b430      	push	{r4, r5}
 800d64e:	4c09      	ldr	r4, [pc, #36]	; (800d674 <DmxSend::Start(unsigned int)+0x28>)
 800d650:	2301      	movs	r3, #1
 800d652:	7822      	ldrb	r2, [r4, #0]
 800d654:	fa03 f001 	lsl.w	r0, r3, r1
 800d658:	ea30 0502 	bics.w	r5, r0, r2
 800d65c:	d007      	beq.n	800d66e <DmxSend::Start(unsigned int)+0x22>
 800d65e:	4302      	orrs	r2, r0
 800d660:	4805      	ldr	r0, [pc, #20]	; (800d678 <DmxSend::Start(unsigned int)+0x2c>)
 800d662:	7022      	strb	r2, [r4, #0]
 800d664:	6800      	ldr	r0, [r0, #0]
 800d666:	bc30      	pop	{r4, r5}
 800d668:	2200      	movs	r2, #0
 800d66a:	f000 bbab 	b.w	800ddc4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d66e:	bc30      	pop	{r4, r5}
 800d670:	4770      	bx	lr
 800d672:	bf00      	nop
 800d674:	20000958 	andcs	r0, r0, r8, asr r9
 800d678:	20001190 	mulcs	r0, r0, r1

0800d67c <DmxSend::Stop(unsigned int)>:
 800d67c:	b410      	push	{r4}
 800d67e:	480b      	ldr	r0, [pc, #44]	; (800d6ac <DmxSend::Stop(unsigned int)+0x30>)
 800d680:	2201      	movs	r2, #1
 800d682:	7803      	ldrb	r3, [r0, #0]
 800d684:	408a      	lsls	r2, r1
 800d686:	ea03 0402 	and.w	r4, r3, r2
 800d68a:	439a      	bics	r2, r3
 800d68c:	d10a      	bne.n	800d6a4 <DmxSend::Stop(unsigned int)+0x28>
 800d68e:	ea23 0304 	bic.w	r3, r3, r4
 800d692:	7003      	strb	r3, [r0, #0]
 800d694:	4806      	ldr	r0, [pc, #24]	; (800d6b0 <DmxSend::Stop(unsigned int)+0x34>)
 800d696:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d69a:	6800      	ldr	r0, [r0, #0]
 800d69c:	2300      	movs	r3, #0
 800d69e:	461a      	mov	r2, r3
 800d6a0:	f000 bb90 	b.w	800ddc4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d6a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d6a8:	4770      	bx	lr
 800d6aa:	bf00      	nop
 800d6ac:	20000958 	andcs	r0, r0, r8, asr r9
 800d6b0:	20001190 	mulcs	r0, r0, r1

0800d6b4 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800d6b4:	b11b      	cbz	r3, 800d6be <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800d6b6:	4802      	ldr	r0, [pc, #8]	; (800d6c0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800d6b8:	6800      	ldr	r0, [r0, #0]
 800d6ba:	f000 bcc5 	b.w	800e048 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800d6be:	4770      	bx	lr
 800d6c0:	20001190 	mulcs	r0, r0, r1

0800d6c4 <DmxSend::Blackout(bool)>:
 800d6c4:	4b01      	ldr	r3, [pc, #4]	; (800d6cc <DmxSend::Blackout(bool)+0x8>)
 800d6c6:	6818      	ldr	r0, [r3, #0]
 800d6c8:	f000 bce4 	b.w	800e094 <Dmx::Blackout()>
 800d6cc:	20001190 	mulcs	r0, r0, r1

0800d6d0 <DmxSend::FullOn()>:
 800d6d0:	4b01      	ldr	r3, [pc, #4]	; (800d6d8 <DmxSend::FullOn()+0x8>)
 800d6d2:	6818      	ldr	r0, [r3, #0]
 800d6d4:	f000 bd22 	b.w	800e11c <Dmx::FullOn()>
 800d6d8:	20001190 	mulcs	r0, r0, r1

0800d6dc <DmxSend::Print()>:
 800d6dc:	b510      	push	{r4, lr}
 800d6de:	4c0e      	ldr	r4, [pc, #56]	; (800d718 <DmxSend::Print()+0x3c>)
 800d6e0:	480e      	ldr	r0, [pc, #56]	; (800d71c <DmxSend::Print()+0x40>)
 800d6e2:	f7fc fdf1 	bl	800a2c8 <printf>
 800d6e6:	6823      	ldr	r3, [r4, #0]
 800d6e8:	480d      	ldr	r0, [pc, #52]	; (800d720 <DmxSend::Print()+0x44>)
 800d6ea:	6819      	ldr	r1, [r3, #0]
 800d6ec:	f7fc fdec 	bl	800a2c8 <printf>
 800d6f0:	6823      	ldr	r3, [r4, #0]
 800d6f2:	480c      	ldr	r0, [pc, #48]	; (800d724 <DmxSend::Print()+0x48>)
 800d6f4:	6859      	ldr	r1, [r3, #4]
 800d6f6:	f7fc fde7 	bl	800a2c8 <printf>
 800d6fa:	6823      	ldr	r3, [r4, #0]
 800d6fc:	490a      	ldr	r1, [pc, #40]	; (800d728 <DmxSend::Print()+0x4c>)
 800d6fe:	689b      	ldr	r3, [r3, #8]
 800d700:	480a      	ldr	r0, [pc, #40]	; (800d72c <DmxSend::Print()+0x50>)
 800d702:	fbb1 f1f3 	udiv	r1, r1, r3
 800d706:	f7fc fddf 	bl	800a2c8 <printf>
 800d70a:	6823      	ldr	r3, [r4, #0]
 800d70c:	4808      	ldr	r0, [pc, #32]	; (800d730 <DmxSend::Print()+0x54>)
 800d70e:	8a19      	ldrh	r1, [r3, #16]
 800d710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d714:	f7fc bdd8 	b.w	800a2c8 <printf>
 800d718:	20001190 	mulcs	r0, r0, r1
 800d71c:	0801851d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, pc}
 800d720:	08018527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, pc}
 800d724:	0801853b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, sl, pc}
 800d728:	000f4240 	andeq	r4, pc, r0, asr #4
 800d72c:	0801854f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sl, pc}
 800d730:	08018563 	stmdaeq	r1, {r0, r1, r5, r6, r8, sl, pc}

0800d734 <DmxSend::~DmxSend()>:
 800d734:	b510      	push	{r4, lr}
 800d736:	4604      	mov	r4, r0
 800d738:	f006 fd5e 	bl	80141f8 <operator delete(void*)>
 800d73c:	4620      	mov	r0, r4
 800d73e:	bd10      	pop	{r4, pc}

0800d740 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800d740:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d742:	88c6      	ldrh	r6, [r0, #6]
 800d744:	8885      	ldrh	r5, [r0, #4]
 800d746:	42ae      	cmp	r6, r5
 800d748:	d216      	bcs.n	800d778 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800d74a:	4604      	mov	r4, r0
 800d74c:	6800      	ldr	r0, [r0, #0]
 800d74e:	1bad      	subs	r5, r5, r6
 800d750:	4430      	add	r0, r6
 800d752:	7a26      	ldrb	r6, [r4, #8]
 800d754:	b923      	cbnz	r3, 800d760 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800d756:	b926      	cbnz	r6, 800d762 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800d758:	9200      	str	r2, [sp, #0]
 800d75a:	460b      	mov	r3, r1
 800d75c:	4a09      	ldr	r2, [pc, #36]	; (800d784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800d75e:	e003      	b.n	800d768 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d760:	b166      	cbz	r6, 800d77c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800d762:	9200      	str	r2, [sp, #0]
 800d764:	4a08      	ldr	r2, [pc, #32]	; (800d788 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800d766:	460b      	mov	r3, r1
 800d768:	4629      	mov	r1, r5
 800d76a:	f7fc fdd5 	bl	800a318 <snprintf>
 800d76e:	4285      	cmp	r5, r0
 800d770:	bfa2      	ittt	ge
 800d772:	88e3      	ldrhge	r3, [r4, #6]
 800d774:	181b      	addge	r3, r3, r0
 800d776:	80e3      	strhge	r3, [r4, #6]
 800d778:	b002      	add	sp, #8
 800d77a:	bd70      	pop	{r4, r5, r6, pc}
 800d77c:	9200      	str	r2, [sp, #0]
 800d77e:	460b      	mov	r3, r1
 800d780:	4a02      	ldr	r2, [pc, #8]	; (800d78c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d782:	e7f1      	b.n	800d768 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d784:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800d788:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800d78c:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

0800d790 <DmxParams::DmxParams(DmxParamsStore*)>:
 800d790:	4a04      	ldr	r2, [pc, #16]	; (800d7a4 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800d792:	6001      	str	r1, [r0, #0]
 800d794:	2100      	movs	r1, #0
 800d796:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800d79a:	f64f 7228 	movw	r2, #65320	; 0xff28
 800d79e:	8182      	strh	r2, [r0, #12]
 800d7a0:	4770      	bx	lr
 800d7a2:	bf00      	nop
 800d7a4:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800d7a8 <DmxParams::Load()>:
 800d7a8:	b508      	push	{r3, lr}
 800d7aa:	2300      	movs	r3, #0
 800d7ac:	4601      	mov	r1, r0
 800d7ae:	6043      	str	r3, [r0, #4]
 800d7b0:	6800      	ldr	r0, [r0, #0]
 800d7b2:	b120      	cbz	r0, 800d7be <DmxParams::Load()+0x16>
 800d7b4:	6803      	ldr	r3, [r0, #0]
 800d7b6:	3104      	adds	r1, #4
 800d7b8:	68db      	ldr	r3, [r3, #12]
 800d7ba:	4798      	blx	r3
 800d7bc:	2001      	movs	r0, #1
 800d7be:	bd08      	pop	{r3, pc}

0800d7c0 <DmxParams::Load(char const*, unsigned int)>:
 800d7c0:	6803      	ldr	r3, [r0, #0]
 800d7c2:	b1d3      	cbz	r3, 800d7fa <DmxParams::Load(char const*, unsigned int)+0x3a>
 800d7c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d7c6:	2300      	movs	r3, #0
 800d7c8:	6043      	str	r3, [r0, #4]
 800d7ca:	4604      	mov	r4, r0
 800d7cc:	460d      	mov	r5, r1
 800d7ce:	4616      	mov	r6, r2
 800d7d0:	490a      	ldr	r1, [pc, #40]	; (800d7fc <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800d7d2:	4602      	mov	r2, r0
 800d7d4:	4668      	mov	r0, sp
 800d7d6:	f005 ff41 	bl	801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d7da:	4632      	mov	r2, r6
 800d7dc:	4629      	mov	r1, r5
 800d7de:	4668      	mov	r0, sp
 800d7e0:	f005 ff40 	bl	8013664 <ReadConfigFile::Read(char const*, unsigned int)>
 800d7e4:	4621      	mov	r1, r4
 800d7e6:	f851 0b04 	ldr.w	r0, [r1], #4
 800d7ea:	6803      	ldr	r3, [r0, #0]
 800d7ec:	689b      	ldr	r3, [r3, #8]
 800d7ee:	4798      	blx	r3
 800d7f0:	4668      	mov	r0, sp
 800d7f2:	f005 ff36 	bl	8013662 <ReadConfigFile::~ReadConfigFile()>
 800d7f6:	b002      	add	sp, #8
 800d7f8:	bd70      	pop	{r4, r5, r6, pc}
 800d7fa:	4770      	bx	lr
 800d7fc:	0800d8cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, fp, ip, lr, pc}

0800d800 <DmxParams::callbackFunction(char const*)>:
 800d800:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d802:	460d      	mov	r5, r1
 800d804:	4604      	mov	r4, r0
 800d806:	492d      	ldr	r1, [pc, #180]	; (800d8bc <DmxParams::callbackFunction(char const*)+0xbc>)
 800d808:	f10d 0206 	add.w	r2, sp, #6
 800d80c:	4628      	mov	r0, r5
 800d80e:	f006 f812 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d812:	b988      	cbnz	r0, 800d838 <DmxParams::callbackFunction(char const*)+0x38>
 800d814:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d818:	6863      	ldr	r3, [r4, #4]
 800d81a:	2a5b      	cmp	r2, #91	; 0x5b
 800d81c:	d907      	bls.n	800d82e <DmxParams::callbackFunction(char const*)+0x2e>
 800d81e:	2ab0      	cmp	r2, #176	; 0xb0
 800d820:	d005      	beq.n	800d82e <DmxParams::callbackFunction(char const*)+0x2e>
 800d822:	8122      	strh	r2, [r4, #8]
 800d824:	f043 0301 	orr.w	r3, r3, #1
 800d828:	6063      	str	r3, [r4, #4]
 800d82a:	b003      	add	sp, #12
 800d82c:	bd30      	pop	{r4, r5, pc}
 800d82e:	22b0      	movs	r2, #176	; 0xb0
 800d830:	8122      	strh	r2, [r4, #8]
 800d832:	f023 0301 	bic.w	r3, r3, #1
 800d836:	e7f7      	b.n	800d828 <DmxParams::callbackFunction(char const*)+0x28>
 800d838:	4921      	ldr	r1, [pc, #132]	; (800d8c0 <DmxParams::callbackFunction(char const*)+0xc0>)
 800d83a:	f10d 0206 	add.w	r2, sp, #6
 800d83e:	4628      	mov	r0, r5
 800d840:	f005 fff9 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d844:	b968      	cbnz	r0, 800d862 <DmxParams::callbackFunction(char const*)+0x62>
 800d846:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d84a:	6863      	ldr	r3, [r4, #4]
 800d84c:	2a0c      	cmp	r2, #12
 800d84e:	bf93      	iteet	ls
 800d850:	220c      	movls	r2, #12
 800d852:	8162      	strhhi	r2, [r4, #10]
 800d854:	f043 0302 	orrhi.w	r3, r3, #2
 800d858:	8162      	strhls	r2, [r4, #10]
 800d85a:	bf98      	it	ls
 800d85c:	f023 0302 	bicls.w	r3, r3, #2
 800d860:	e7e2      	b.n	800d828 <DmxParams::callbackFunction(char const*)+0x28>
 800d862:	4918      	ldr	r1, [pc, #96]	; (800d8c4 <DmxParams::callbackFunction(char const*)+0xc4>)
 800d864:	f10d 0205 	add.w	r2, sp, #5
 800d868:	4628      	mov	r0, r5
 800d86a:	f006 f82c 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d86e:	b950      	cbnz	r0, 800d886 <DmxParams::callbackFunction(char const*)+0x86>
 800d870:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800d874:	6863      	ldr	r3, [r4, #4]
 800d876:	7322      	strb	r2, [r4, #12]
 800d878:	2a28      	cmp	r2, #40	; 0x28
 800d87a:	bf14      	ite	ne
 800d87c:	f043 0304 	orrne.w	r3, r3, #4
 800d880:	f023 0304 	biceq.w	r3, r3, #4
 800d884:	e7d0      	b.n	800d828 <DmxParams::callbackFunction(char const*)+0x28>
 800d886:	4910      	ldr	r1, [pc, #64]	; (800d8c8 <DmxParams::callbackFunction(char const*)+0xc8>)
 800d888:	f10d 0206 	add.w	r2, sp, #6
 800d88c:	4628      	mov	r0, r5
 800d88e:	f005 ffd2 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d892:	2800      	cmp	r0, #0
 800d894:	d1c9      	bne.n	800d82a <DmxParams::callbackFunction(char const*)+0x2a>
 800d896:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d89a:	6863      	ldr	r3, [r4, #4]
 800d89c:	1e91      	subs	r1, r2, #2
 800d89e:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800d8a2:	bf3b      	ittet	cc
 800d8a4:	0852      	lsrcc	r2, r2, #1
 800d8a6:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800d8aa:	22ff      	movcs	r2, #255	; 0xff
 800d8ac:	7362      	strbcc	r2, [r4, #13]
 800d8ae:	bf32      	itee	cc
 800d8b0:	f043 0308 	orrcc.w	r3, r3, #8
 800d8b4:	7362      	strbcs	r2, [r4, #13]
 800d8b6:	f023 0308 	biccs.w	r3, r3, #8
 800d8ba:	e7b5      	b.n	800d828 <DmxParams::callbackFunction(char const*)+0x28>
 800d8bc:	080185b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, pc}
 800d8c0:	080185d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, pc}
 800d8c4:	080185c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sl, pc}
 800d8c8:	080185bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, pc}

0800d8cc <DmxParams::staticCallbackFunction(void*, char const*)>:
 800d8cc:	f7ff bf98 	b.w	800d800 <DmxParams::callbackFunction(char const*)>

0800d8d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800d8d0:	b570      	push	{r4, r5, r6, lr}
 800d8d2:	4604      	mov	r4, r0
 800d8d4:	b086      	sub	sp, #24
 800d8d6:	4615      	mov	r5, r2
 800d8d8:	461e      	mov	r6, r3
 800d8da:	3004      	adds	r0, #4
 800d8dc:	b369      	cbz	r1, 800d93a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800d8de:	220a      	movs	r2, #10
 800d8e0:	f006 fd4d 	bl	801437e <memmove>
 800d8e4:	462a      	mov	r2, r5
 800d8e6:	4933      	ldr	r1, [pc, #204]	; (800d9b4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800d8e8:	4633      	mov	r3, r6
 800d8ea:	a803      	add	r0, sp, #12
 800d8ec:	f005 fe16 	bl	801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d8f0:	6863      	ldr	r3, [r4, #4]
 800d8f2:	8922      	ldrh	r2, [r4, #8]
 800d8f4:	4930      	ldr	r1, [pc, #192]	; (800d9b8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800d8f6:	f003 0301 	and.w	r3, r3, #1
 800d8fa:	a803      	add	r0, sp, #12
 800d8fc:	f7ff ff20 	bl	800d740 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d900:	6863      	ldr	r3, [r4, #4]
 800d902:	8962      	ldrh	r2, [r4, #10]
 800d904:	492d      	ldr	r1, [pc, #180]	; (800d9bc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800d906:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d90a:	a803      	add	r0, sp, #12
 800d90c:	f7ff ff18 	bl	800d740 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d910:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d914:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d918:	7b23      	ldrb	r3, [r4, #12]
 800d91a:	6861      	ldr	r1, [r4, #4]
 800d91c:	42aa      	cmp	r2, r5
 800d91e:	d221      	bcs.n	800d964 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800d920:	9803      	ldr	r0, [sp, #12]
 800d922:	0749      	lsls	r1, r1, #29
 800d924:	4410      	add	r0, r2
 800d926:	eba5 0502 	sub.w	r5, r5, r2
 800d92a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d92e:	d40b      	bmi.n	800d948 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800d930:	b95a      	cbnz	r2, 800d94a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800d932:	9300      	str	r3, [sp, #0]
 800d934:	4a22      	ldr	r2, [pc, #136]	; (800d9c0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800d936:	4b23      	ldr	r3, [pc, #140]	; (800d9c4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d938:	e00a      	b.n	800d950 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d93a:	6823      	ldr	r3, [r4, #0]
 800d93c:	681a      	ldr	r2, [r3, #0]
 800d93e:	4601      	mov	r1, r0
 800d940:	68d2      	ldr	r2, [r2, #12]
 800d942:	4618      	mov	r0, r3
 800d944:	4790      	blx	r2
 800d946:	e7cd      	b.n	800d8e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d948:	b37a      	cbz	r2, 800d9aa <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800d94a:	9300      	str	r3, [sp, #0]
 800d94c:	4a1e      	ldr	r2, [pc, #120]	; (800d9c8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800d94e:	4b1d      	ldr	r3, [pc, #116]	; (800d9c4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d950:	4629      	mov	r1, r5
 800d952:	f7fc fce1 	bl	800a318 <snprintf>
 800d956:	4285      	cmp	r5, r0
 800d958:	bfa2      	ittt	ge
 800d95a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d95e:	18c0      	addge	r0, r0, r3
 800d960:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d964:	7b62      	ldrb	r2, [r4, #13]
 800d966:	6863      	ldr	r3, [r4, #4]
 800d968:	4918      	ldr	r1, [pc, #96]	; (800d9cc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800d96a:	3201      	adds	r2, #1
 800d96c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d970:	0052      	lsls	r2, r2, #1
 800d972:	a803      	add	r0, sp, #12
 800d974:	f7ff fee4 	bl	800d740 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d978:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d97c:	b17b      	cbz	r3, 800d99e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800d97e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d982:	9b03      	ldr	r3, [sp, #12]
 800d984:	4413      	add	r3, r2
 800d986:	227d      	movs	r2, #125	; 0x7d
 800d988:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d98c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d990:	9903      	ldr	r1, [sp, #12]
 800d992:	54ca      	strb	r2, [r1, r3]
 800d994:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d998:	3301      	adds	r3, #1
 800d99a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d99e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9a4:	601a      	str	r2, [r3, #0]
 800d9a6:	b006      	add	sp, #24
 800d9a8:	bd70      	pop	{r4, r5, r6, pc}
 800d9aa:	9300      	str	r3, [sp, #0]
 800d9ac:	4a08      	ldr	r2, [pc, #32]	; (800d9d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800d9ae:	4b05      	ldr	r3, [pc, #20]	; (800d9c4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d9b0:	e7ce      	b.n	800d950 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d9b2:	bf00      	nop
 800d9b4:	080185dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, pc}
 800d9b8:	080185b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, pc}
 800d9bc:	080185d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, pc}
 800d9c0:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800d9c4:	080185c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sl, pc}
 800d9c8:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800d9cc:	080185bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, pc}
 800d9d0:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

0800d9d4 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800d9d4:	b513      	push	{r0, r1, r4, lr}
 800d9d6:	6804      	ldr	r4, [r0, #0]
 800d9d8:	b914      	cbnz	r4, 800d9e0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d9da:	601c      	str	r4, [r3, #0]
 800d9dc:	b002      	add	sp, #8
 800d9de:	bd10      	pop	{r4, pc}
 800d9e0:	9300      	str	r3, [sp, #0]
 800d9e2:	4613      	mov	r3, r2
 800d9e4:	460a      	mov	r2, r1
 800d9e6:	2100      	movs	r1, #0
 800d9e8:	f7ff ff72 	bl	800d8d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800d9ec:	e7f6      	b.n	800d9dc <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800d9f0 <DmxParams::Set(Dmx*)>:
 800d9f0:	b513      	push	{r0, r1, r4, lr}
 800d9f2:	4604      	mov	r4, r0
 800d9f4:	4608      	mov	r0, r1
 800d9f6:	6863      	ldr	r3, [r4, #4]
 800d9f8:	07db      	lsls	r3, r3, #31
 800d9fa:	d504      	bpl.n	800da06 <DmxParams::Set(Dmx*)+0x16>
 800d9fc:	8921      	ldrh	r1, [r4, #8]
 800d9fe:	9001      	str	r0, [sp, #4]
 800da00:	f000 faf8 	bl	800dff4 <Dmx::SetDmxBreakTime(unsigned int)>
 800da04:	9801      	ldr	r0, [sp, #4]
 800da06:	6863      	ldr	r3, [r4, #4]
 800da08:	0799      	lsls	r1, r3, #30
 800da0a:	d504      	bpl.n	800da16 <DmxParams::Set(Dmx*)+0x26>
 800da0c:	8961      	ldrh	r1, [r4, #10]
 800da0e:	9001      	str	r0, [sp, #4]
 800da10:	f000 fafa 	bl	800e008 <Dmx::SetDmxMabTime(unsigned int)>
 800da14:	9801      	ldr	r0, [sp, #4]
 800da16:	6863      	ldr	r3, [r4, #4]
 800da18:	075a      	lsls	r2, r3, #29
 800da1a:	d508      	bpl.n	800da2e <DmxParams::Set(Dmx*)+0x3e>
 800da1c:	7b21      	ldrb	r1, [r4, #12]
 800da1e:	b111      	cbz	r1, 800da26 <DmxParams::Set(Dmx*)+0x36>
 800da20:	4b09      	ldr	r3, [pc, #36]	; (800da48 <DmxParams::Set(Dmx*)+0x58>)
 800da22:	fbb3 f1f1 	udiv	r1, r3, r1
 800da26:	9001      	str	r0, [sp, #4]
 800da28:	f000 fabc 	bl	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 800da2c:	9801      	ldr	r0, [sp, #4]
 800da2e:	6863      	ldr	r3, [r4, #4]
 800da30:	071b      	lsls	r3, r3, #28
 800da32:	d507      	bpl.n	800da44 <DmxParams::Set(Dmx*)+0x54>
 800da34:	7b61      	ldrb	r1, [r4, #13]
 800da36:	3101      	adds	r1, #1
 800da38:	0049      	lsls	r1, r1, #1
 800da3a:	b002      	add	sp, #8
 800da3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da40:	f000 baec 	b.w	800e01c <Dmx::SetDmxSlots(unsigned short)>
 800da44:	b002      	add	sp, #8
 800da46:	bd10      	pop	{r4, pc}
 800da48:	000f4240 	andeq	r4, pc, r0, asr #4

0800da4c <DmxParams::Dump()>:
 800da4c:	4770      	bx	lr

0800da4e <_gpio_mode_output(unsigned int, unsigned int)>:
 800da4e:	b513      	push	{r0, r1, r4, lr}
 800da50:	460a      	mov	r2, r1
 800da52:	9101      	str	r1, [sp, #4]
 800da54:	2100      	movs	r1, #0
 800da56:	4604      	mov	r4, r0
 800da58:	f007 fbdd 	bl	8015216 <gpio_af_set>
 800da5c:	9b01      	ldr	r3, [sp, #4]
 800da5e:	2200      	movs	r2, #0
 800da60:	2101      	movs	r1, #1
 800da62:	4620      	mov	r0, r4
 800da64:	b002      	add	sp, #8
 800da66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da6a:	f007 bb99 	b.w	80151a0 <gpio_mode_set>
	...

0800da70 <_port_to_uart(unsigned int)>:
 800da70:	4a03      	ldr	r2, [pc, #12]	; (800da80 <_port_to_uart(unsigned int)+0x10>)
 800da72:	4b04      	ldr	r3, [pc, #16]	; (800da84 <_port_to_uart(unsigned int)+0x14>)
 800da74:	2800      	cmp	r0, #0
 800da76:	bf14      	ite	ne
 800da78:	4610      	movne	r0, r2
 800da7a:	4618      	moveq	r0, r3
 800da7c:	4770      	bx	lr
 800da7e:	bf00      	nop
 800da80:	40011400 	andmi	r1, r1, r0, lsl #8
 800da84:	40004800 	andmi	r4, r0, r0, lsl #16

0800da88 <TIMER1_IRQHandler>:
 800da88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da8a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800da8e:	4d47      	ldr	r5, [pc, #284]	; (800dbac <TIMER1_IRQHandler+0x124>)
 800da90:	691e      	ldr	r6, [r3, #16]
 800da92:	4f47      	ldr	r7, [pc, #284]	; (800dbb0 <TIMER1_IRQHandler+0x128>)
 800da94:	882c      	ldrh	r4, [r5, #0]
 800da96:	2308      	movs	r3, #8
 800da98:	07b1      	lsls	r1, r6, #30
 800da9a:	b2a4      	uxth	r4, r4
 800da9c:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
 800daa0:	d528      	bpl.n	800daf4 <TIMER1_IRQHandler+0x6c>
 800daa2:	07e2      	lsls	r2, r4, #31
 800daa4:	d50d      	bpl.n	800dac2 <TIMER1_IRQHandler+0x3a>
 800daa6:	882b      	ldrh	r3, [r5, #0]
 800daa8:	4842      	ldr	r0, [pc, #264]	; (800dbb4 <TIMER1_IRQHandler+0x12c>)
 800daaa:	b29b      	uxth	r3, r3
 800daac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dab0:	f44f 7180 	mov.w	r1, #256	; 0x100
 800dab4:	802b      	strh	r3, [r5, #0]
 800dab6:	f7ff ffca 	bl	800da4e <_gpio_mode_output(unsigned int, unsigned int)>
 800daba:	f44f 7380 	mov.w	r3, #256	; 0x100
 800dabe:	f8c7 3c28 	str.w	r3, [r7, #3112]	; 0xc28
 800dac2:	07a3      	lsls	r3, r4, #30
 800dac4:	d50c      	bpl.n	800dae0 <TIMER1_IRQHandler+0x58>
 800dac6:	882b      	ldrh	r3, [r5, #0]
 800dac8:	483b      	ldr	r0, [pc, #236]	; (800dbb8 <TIMER1_IRQHandler+0x130>)
 800daca:	b29b      	uxth	r3, r3
 800dacc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800dad0:	2140      	movs	r1, #64	; 0x40
 800dad2:	802b      	strh	r3, [r5, #0]
 800dad4:	f7ff ffbb 	bl	800da4e <_gpio_mode_output(unsigned int, unsigned int)>
 800dad8:	4b35      	ldr	r3, [pc, #212]	; (800dbb0 <TIMER1_IRQHandler+0x128>)
 800dada:	2240      	movs	r2, #64	; 0x40
 800dadc:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800dae0:	4631      	mov	r1, r6
 800dae2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dae6:	f007 fd80 	bl	80155ea <timer_interrupt_flag_clear>
 800daea:	4b31      	ldr	r3, [pc, #196]	; (800dbb0 <TIMER1_IRQHandler+0x128>)
 800daec:	2208      	movs	r2, #8
 800daee:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800daf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800daf4:	0777      	lsls	r7, r6, #29
 800daf6:	d51c      	bpl.n	800db32 <TIMER1_IRQHandler+0xaa>
 800daf8:	05e5      	lsls	r5, r4, #23
 800dafa:	d50c      	bpl.n	800db16 <TIMER1_IRQHandler+0x8e>
 800dafc:	482d      	ldr	r0, [pc, #180]	; (800dbb4 <TIMER1_IRQHandler+0x12c>)
 800dafe:	2201      	movs	r2, #1
 800db00:	2102      	movs	r1, #2
 800db02:	f44f 7380 	mov.w	r3, #256	; 0x100
 800db06:	f007 fb4b 	bl	80151a0 <gpio_mode_set>
 800db0a:	482a      	ldr	r0, [pc, #168]	; (800dbb4 <TIMER1_IRQHandler+0x12c>)
 800db0c:	f44f 7280 	mov.w	r2, #256	; 0x100
 800db10:	2107      	movs	r1, #7
 800db12:	f007 fb80 	bl	8015216 <gpio_af_set>
 800db16:	05a0      	lsls	r0, r4, #22
 800db18:	d5e2      	bpl.n	800dae0 <TIMER1_IRQHandler+0x58>
 800db1a:	4827      	ldr	r0, [pc, #156]	; (800dbb8 <TIMER1_IRQHandler+0x130>)
 800db1c:	2340      	movs	r3, #64	; 0x40
 800db1e:	2201      	movs	r2, #1
 800db20:	2102      	movs	r1, #2
 800db22:	f007 fb3d 	bl	80151a0 <gpio_mode_set>
 800db26:	4824      	ldr	r0, [pc, #144]	; (800dbb8 <TIMER1_IRQHandler+0x130>)
 800db28:	2240      	movs	r2, #64	; 0x40
 800db2a:	2108      	movs	r1, #8
 800db2c:	f007 fb73 	bl	8015216 <gpio_af_set>
 800db30:	e7d6      	b.n	800dae0 <TIMER1_IRQHandler+0x58>
 800db32:	0731      	lsls	r1, r6, #28
 800db34:	d5d4      	bpl.n	800dae0 <TIMER1_IRQHandler+0x58>
 800db36:	05e2      	lsls	r2, r4, #23
 800db38:	d516      	bpl.n	800db68 <TIMER1_IRQHandler+0xe0>
 800db3a:	4d20      	ldr	r5, [pc, #128]	; (800dbbc <TIMER1_IRQHandler+0x134>)
 800db3c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800db3e:	f023 0301 	bic.w	r3, r3, #1
 800db42:	65ab      	str	r3, [r5, #88]	; 0x58
 800db44:	2103      	movs	r1, #3
 800db46:	4628      	mov	r0, r5
 800db48:	2220      	movs	r2, #32
 800db4a:	f006 fefd 	bl	8014948 <dma_interrupt_flag_clear>
 800db4e:	4b1c      	ldr	r3, [pc, #112]	; (800dbc0 <TIMER1_IRQHandler+0x138>)
 800db50:	666b      	str	r3, [r5, #100]	; 0x64
 800db52:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800db56:	65eb      	str	r3, [r5, #92]	; 0x5c
 800db58:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800db5a:	481a      	ldr	r0, [pc, #104]	; (800dbc4 <TIMER1_IRQHandler+0x13c>)
 800db5c:	f043 0301 	orr.w	r3, r3, #1
 800db60:	65ab      	str	r3, [r5, #88]	; 0x58
 800db62:	2180      	movs	r1, #128	; 0x80
 800db64:	f007 ff88 	bl	8015a78 <usart_dma_transmit_config>
 800db68:	05a3      	lsls	r3, r4, #22
 800db6a:	d5b9      	bpl.n	800dae0 <TIMER1_IRQHandler+0x58>
 800db6c:	4c13      	ldr	r4, [pc, #76]	; (800dbbc <TIMER1_IRQHandler+0x134>)
 800db6e:	4816      	ldr	r0, [pc, #88]	; (800dbc8 <TIMER1_IRQHandler+0x140>)
 800db70:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800db74:	f023 0301 	bic.w	r3, r3, #1
 800db78:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800db7c:	2220      	movs	r2, #32
 800db7e:	2106      	movs	r1, #6
 800db80:	f006 fee2 	bl	8014948 <dma_interrupt_flag_clear>
 800db84:	4b0e      	ldr	r3, [pc, #56]	; (800dbc0 <TIMER1_IRQHandler+0x138>)
 800db86:	4811      	ldr	r0, [pc, #68]	; (800dbcc <TIMER1_IRQHandler+0x144>)
 800db88:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800db8c:	f8b3 3406 	ldrh.w	r3, [r3, #1030]	; 0x406
 800db90:	f8c4 24ac 	str.w	r2, [r4, #1196]	; 0x4ac
 800db94:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 800db98:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800db9c:	f043 0301 	orr.w	r3, r3, #1
 800dba0:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800dba4:	2180      	movs	r1, #128	; 0x80
 800dba6:	f007 ff67 	bl	8015a78 <usart_dma_transmit_config>
 800dbaa:	e799      	b.n	800dae0 <TIMER1_IRQHandler+0x58>
 800dbac:	2000118c 	andcs	r1, r0, ip, lsl #3
 800dbb0:	40020000 	andmi	r0, r2, r0
 800dbb4:	40020c00 	andmi	r0, r2, r0, lsl #24
 800dbb8:	40020800 	andmi	r0, r2, r0, lsl #16
 800dbbc:	40026000 	andmi	r6, r2, r0
 800dbc0:	20000d7c 	andcs	r0, r0, ip, ror sp
 800dbc4:	40004800 	andmi	r4, r0, r0, lsl #16
 800dbc8:	40026400 	andmi	r6, r2, r0, lsl #8
 800dbcc:	40011400 	andmi	r1, r1, r0, lsl #8

0800dbd0 <Dmx::ClearData(unsigned int)>:
 800dbd0:	4a0a      	ldr	r2, [pc, #40]	; (800dbfc <Dmx::ClearData(unsigned int)+0x2c>)
 800dbd2:	f44f 7301 	mov.w	r3, #516	; 0x204
 800dbd6:	fb03 2301 	mla	r3, r3, r1, r2
 800dbda:	b510      	push	{r4, lr}
 800dbdc:	f203 2002 	addw	r0, r3, #514	; 0x202
 800dbe0:	2400      	movs	r4, #0
 800dbe2:	f823 4b02 	strh.w	r4, [r3], #2
 800dbe6:	4283      	cmp	r3, r0
 800dbe8:	d1fb      	bne.n	800dbe2 <Dmx::ClearData(unsigned int)+0x12>
 800dbea:	f44f 7301 	mov.w	r3, #516	; 0x204
 800dbee:	fb03 2101 	mla	r1, r3, r1, r2
 800dbf2:	f240 2301 	movw	r3, #513	; 0x201
 800dbf6:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 800dbfa:	bd10      	pop	{r4, pc}
 800dbfc:	20000d7c 	andcs	r0, r0, ip, ror sp

0800dc00 <Dmx::StartData(unsigned int, unsigned int)>:
 800dc00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc02:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800dc06:	b085      	sub	sp, #20
 800dc08:	6943      	ldr	r3, [r0, #20]
 800dc0a:	460c      	mov	r4, r1
 800dc0c:	4615      	mov	r5, r2
 800dc0e:	2b00      	cmp	r3, #0
 800dc10:	d168      	bne.n	800dce4 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800dc12:	4e41      	ldr	r6, [pc, #260]	; (800dd18 <Dmx::StartData(unsigned int, unsigned int)+0x118>)
 800dc14:	8834      	ldrh	r4, [r6, #0]
 800dc16:	b2a4      	uxth	r4, r4
 800dc18:	2c00      	cmp	r4, #0
 800dc1a:	d157      	bne.n	800dccc <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 800dc1c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800dc20:	f007 fb3a 	bl	8015298 <rcu_periph_clock_enable>
 800dc24:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc28:	f007 fbf2 	bl	8015410 <timer_deinit>
 800dc2c:	4b3b      	ldr	r3, [pc, #236]	; (800dd1c <Dmx::StartData(unsigned int, unsigned int)+0x11c>)
 800dc2e:	f88d 400c 	strb.w	r4, [sp, #12]
 800dc32:	681b      	ldr	r3, [r3, #0]
 800dc34:	9302      	str	r3, [sp, #8]
 800dc36:	4669      	mov	r1, sp
 800dc38:	23c7      	movs	r3, #199	; 0xc7
 800dc3a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc3e:	e9cd 3400 	strd	r3, r4, [sp]
 800dc42:	f007 fc8b 	bl	801555c <timer_init>
 800dc46:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800dc4a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc4e:	f007 fccf 	bl	80155f0 <timer_flag_clear>
 800dc52:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800dc56:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc5a:	f007 fcc6 	bl	80155ea <timer_interrupt_flag_clear>
 800dc5e:	2210      	movs	r2, #16
 800dc60:	4621      	mov	r1, r4
 800dc62:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc66:	f007 fdb3 	bl	80157d0 <timer_channel_output_mode_config>
 800dc6a:	2210      	movs	r2, #16
 800dc6c:	2101      	movs	r1, #1
 800dc6e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc72:	f007 fdad 	bl	80157d0 <timer_channel_output_mode_config>
 800dc76:	4f2a      	ldr	r7, [pc, #168]	; (800dd20 <Dmx::StartData(unsigned int, unsigned int)+0x120>)
 800dc78:	2210      	movs	r2, #16
 800dc7a:	2102      	movs	r1, #2
 800dc7c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc80:	f007 fda6 	bl	80157d0 <timer_channel_output_mode_config>
 800dc84:	4622      	mov	r2, r4
 800dc86:	4621      	mov	r1, r4
 800dc88:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc8c:	f007 fdc6 	bl	801581c <timer_channel_output_pulse_value_config>
 800dc90:	683a      	ldr	r2, [r7, #0]
 800dc92:	2101      	movs	r1, #1
 800dc94:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc98:	f007 fdc0 	bl	801581c <timer_channel_output_pulse_value_config>
 800dc9c:	4b21      	ldr	r3, [pc, #132]	; (800dd24 <Dmx::StartData(unsigned int, unsigned int)+0x124>)
 800dc9e:	683a      	ldr	r2, [r7, #0]
 800dca0:	681b      	ldr	r3, [r3, #0]
 800dca2:	2102      	movs	r1, #2
 800dca4:	441a      	add	r2, r3
 800dca6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dcaa:	f007 fdb7 	bl	801581c <timer_channel_output_pulse_value_config>
 800dcae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dcb2:	210e      	movs	r1, #14
 800dcb4:	f007 fc95 	bl	80155e2 <timer_interrupt_enable>
 800dcb8:	4b1b      	ldr	r3, [pc, #108]	; (800dd28 <Dmx::StartData(unsigned int, unsigned int)+0x128>)
 800dcba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcbe:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800dcc2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dcc6:	601a      	str	r2, [r3, #0]
 800dcc8:	f007 fc86 	bl	80155d8 <timer_enable>
 800dccc:	8831      	ldrh	r1, [r6, #0]
 800dcce:	2201      	movs	r2, #1
 800dcd0:	fa02 f305 	lsl.w	r3, r2, r5
 800dcd4:	430b      	orrs	r3, r1
 800dcd6:	b29b      	uxth	r3, r3
 800dcd8:	8033      	strh	r3, [r6, #0]
 800dcda:	4b14      	ldr	r3, [pc, #80]	; (800dd2c <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800dcdc:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800dce0:	b005      	add	sp, #20
 800dce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dce4:	4b12      	ldr	r3, [pc, #72]	; (800dd30 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800dce6:	f44f 7204 	mov.w	r2, #528	; 0x210
 800dcea:	fb02 3305 	mla	r3, r2, r5, r3
 800dcee:	2200      	movs	r2, #0
 800dcf0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dcf4:	2107      	movs	r1, #7
 800dcf6:	4620      	mov	r0, r4
 800dcf8:	f007 fec4 	bl	8015a84 <usart_flag_get>
 800dcfc:	2800      	cmp	r0, #0
 800dcfe:	d0f9      	beq.n	800dcf4 <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 800dd00:	490c      	ldr	r1, [pc, #48]	; (800dd34 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800dd02:	4620      	mov	r0, r4
 800dd04:	f007 fee0 	bl	8015ac8 <usart_interrupt_flag_clear>
 800dd08:	f240 3105 	movw	r1, #773	; 0x305
 800dd0c:	4620      	mov	r0, r4
 800dd0e:	f007 fecf 	bl	8015ab0 <usart_interrupt_enable>
 800dd12:	4b06      	ldr	r3, [pc, #24]	; (800dd2c <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800dd14:	2202      	movs	r2, #2
 800dd16:	e7e1      	b.n	800dcdc <Dmx::StartData(unsigned int, unsigned int)+0xdc>
 800dd18:	2000118c 	andcs	r1, r0, ip, lsl #3
 800dd1c:	20000004 	andcs	r0, r0, r4
 800dd20:	2000000c 	andcs	r0, r0, ip
 800dd24:	20000008 	andcs	r0, r0, r8
 800dd28:	e000e100 	and	lr, r0, r0, lsl #2
 800dd2c:	20001184 	andcs	r1, r0, r4, lsl #3
 800dd30:	2000095c 	andcs	r0, r0, ip, asr r9
 800dd34:	00050305 	andeq	r0, r5, r5, lsl #6

0800dd38 <Dmx::StopData(unsigned int, unsigned int)>:
 800dd38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd3c:	4f1e      	ldr	r7, [pc, #120]	; (800ddb8 <Dmx::StopData(unsigned int, unsigned int)+0x80>)
 800dd3e:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800dd42:	4688      	mov	r8, r1
 800dd44:	4614      	mov	r4, r2
 800dd46:	b333      	cbz	r3, 800dd96 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800dd48:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800dd4c:	6943      	ldr	r3, [r0, #20]
 800dd4e:	bb23      	cbnz	r3, 800dd9a <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800dd50:	4d1a      	ldr	r5, [pc, #104]	; (800ddbc <Dmx::StopData(unsigned int, unsigned int)+0x84>)
 800dd52:	882b      	ldrh	r3, [r5, #0]
 800dd54:	2601      	movs	r6, #1
 800dd56:	fa06 f202 	lsl.w	r2, r6, r2
 800dd5a:	b29b      	uxth	r3, r3
 800dd5c:	ea23 0302 	bic.w	r3, r3, r2
 800dd60:	802b      	strh	r3, [r5, #0]
 800dd62:	f3bf 8f5f 	dmb	sy
 800dd66:	882b      	ldrh	r3, [r5, #0]
 800dd68:	f104 0208 	add.w	r2, r4, #8
 800dd6c:	b29b      	uxth	r3, r3
 800dd6e:	4096      	lsls	r6, r2
 800dd70:	ea36 0303 	bics.w	r3, r6, r3
 800dd74:	d105      	bne.n	800dd82 <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800dd76:	2107      	movs	r1, #7
 800dd78:	4640      	mov	r0, r8
 800dd7a:	f007 fe83 	bl	8015a84 <usart_flag_get>
 800dd7e:	2801      	cmp	r0, #1
 800dd80:	d1f9      	bne.n	800dd76 <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800dd82:	882b      	ldrh	r3, [r5, #0]
 800dd84:	b29b      	uxth	r3, r3
 800dd86:	ea23 0306 	bic.w	r3, r3, r6
 800dd8a:	802b      	strh	r3, [r5, #0]
 800dd8c:	f3bf 8f4f 	dsb	sy
 800dd90:	2300      	movs	r3, #0
 800dd92:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800dd96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd9a:	f240 3105 	movw	r1, #773	; 0x305
 800dd9e:	4640      	mov	r0, r8
 800dda0:	f007 fe90 	bl	8015ac4 <usart_interrupt_disable>
 800dda4:	4b06      	ldr	r3, [pc, #24]	; (800ddc0 <Dmx::StopData(unsigned int, unsigned int)+0x88>)
 800dda6:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ddaa:	fb02 3304 	mla	r3, r2, r4, r3
 800ddae:	2200      	movs	r2, #0
 800ddb0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ddb4:	e7ec      	b.n	800dd90 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800ddb6:	bf00      	nop
 800ddb8:	20001184 	andcs	r1, r0, r4, lsl #3
 800ddbc:	2000118c 	andcs	r1, r0, ip, lsl #3
 800ddc0:	2000095c 	andcs	r0, r0, ip, asr r9

0800ddc4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800ddc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ddc6:	4605      	mov	r5, r0
 800ddc8:	460c      	mov	r4, r1
 800ddca:	4608      	mov	r0, r1
 800ddcc:	4616      	mov	r6, r2
 800ddce:	461f      	mov	r7, r3
 800ddd0:	f7ff fe4e 	bl	800da70 <_port_to_uart(unsigned int)>
 800ddd4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ddd8:	4601      	mov	r1, r0
 800ddda:	695a      	ldr	r2, [r3, #20]
 800dddc:	42b2      	cmp	r2, r6
 800ddde:	d01b      	beq.n	800de18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800dde0:	9001      	str	r0, [sp, #4]
 800dde2:	615e      	str	r6, [r3, #20]
 800dde4:	4622      	mov	r2, r4
 800dde6:	4628      	mov	r0, r5
 800dde8:	f7ff ffa6 	bl	800dd38 <Dmx::StopData(unsigned int, unsigned int)>
 800ddec:	9901      	ldr	r1, [sp, #4]
 800ddee:	b94e      	cbnz	r6, 800de04 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800ddf0:	4b11      	ldr	r3, [pc, #68]	; (800de38 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800ddf2:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800ddf6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800ddfa:	685b      	ldr	r3, [r3, #4]
 800ddfc:	6193      	str	r3, [r2, #24]
 800ddfe:	b967      	cbnz	r7, 800de1a <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800de00:	b003      	add	sp, #12
 800de02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de04:	2e01      	cmp	r6, #1
 800de06:	d1fa      	bne.n	800ddfe <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800de08:	4b0b      	ldr	r3, [pc, #44]	; (800de38 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800de0a:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800de0e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800de12:	685b      	ldr	r3, [r3, #4]
 800de14:	6293      	str	r3, [r2, #40]	; 0x28
 800de16:	e7f2      	b.n	800ddfe <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800de18:	b137      	cbz	r7, 800de28 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800de1a:	4622      	mov	r2, r4
 800de1c:	4628      	mov	r0, r5
 800de1e:	b003      	add	sp, #12
 800de20:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800de24:	f7ff beec 	b.w	800dc00 <Dmx::StartData(unsigned int, unsigned int)>
 800de28:	4622      	mov	r2, r4
 800de2a:	4628      	mov	r0, r5
 800de2c:	b003      	add	sp, #12
 800de2e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800de32:	f7ff bf81 	b.w	800dd38 <Dmx::StopData(unsigned int, unsigned int)>
 800de36:	bf00      	nop
 800de38:	080185e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, pc}

0800de3c <Dmx::Dmx()>:
 800de3c:	230c      	movs	r3, #12
 800de3e:	225c      	movs	r2, #92	; 0x5c
 800de40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de44:	e9c0 2300 	strd	r2, r3, [r0]
 800de48:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800de4c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800de50:	f44f 7300 	mov.w	r3, #512	; 0x200
 800de54:	8203      	strh	r3, [r0, #16]
 800de56:	4b46      	ldr	r3, [pc, #280]	; (800df70 <Dmx::Dmx()+0x134>)
 800de58:	4f46      	ldr	r7, [pc, #280]	; (800df74 <Dmx::Dmx()+0x138>)
 800de5a:	6018      	str	r0, [r3, #0]
 800de5c:	4b46      	ldr	r3, [pc, #280]	; (800df78 <Dmx::Dmx()+0x13c>)
 800de5e:	2400      	movs	r4, #0
 800de60:	b08e      	sub	sp, #56	; 0x38
 800de62:	4605      	mov	r5, r0
 800de64:	801c      	strh	r4, [r3, #0]
 800de66:	4626      	mov	r6, r4
 800de68:	e9d7 0800 	ldrd	r0, r8, [r7]
 800de6c:	2202      	movs	r2, #2
 800de6e:	4643      	mov	r3, r8
 800de70:	2101      	movs	r1, #1
 800de72:	9003      	str	r0, [sp, #12]
 800de74:	f007 f994 	bl	80151a0 <gpio_mode_set>
 800de78:	4643      	mov	r3, r8
 800de7a:	9803      	ldr	r0, [sp, #12]
 800de7c:	2202      	movs	r2, #2
 800de7e:	2100      	movs	r1, #0
 800de80:	f007 f9ae 	bl	80151e0 <gpio_output_options_set>
 800de84:	4642      	mov	r2, r8
 800de86:	9803      	ldr	r0, [sp, #12]
 800de88:	2100      	movs	r1, #0
 800de8a:	f007 f9c4 	bl	8015216 <gpio_af_set>
 800de8e:	4621      	mov	r1, r4
 800de90:	4628      	mov	r0, r5
 800de92:	f7ff fe9d 	bl	800dbd0 <Dmx::ClearData(unsigned int)>
 800de96:	4b39      	ldr	r3, [pc, #228]	; (800df7c <Dmx::Dmx()+0x140>)
 800de98:	2201      	movs	r2, #1
 800de9a:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800de9e:	4621      	mov	r1, r4
 800dea0:	2300      	movs	r3, #0
 800dea2:	4628      	mov	r0, r5
 800dea4:	f7ff ff8e 	bl	800ddc4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800dea8:	4b35      	ldr	r3, [pc, #212]	; (800df80 <Dmx::Dmx()+0x144>)
 800deaa:	f44f 7204 	mov.w	r2, #528	; 0x210
 800deae:	fb02 3304 	mla	r3, r2, r4, r3
 800deb2:	3708      	adds	r7, #8
 800deb4:	f8c3 620c 	str.w	r6, [r3, #524]	; 0x20c
 800deb8:	2c00      	cmp	r4, #0
 800deba:	d056      	beq.n	800df6a <Dmx::Dmx()+0x12e>
 800debc:	f640 4015 	movw	r0, #3093	; 0xc15
 800dec0:	f007 f9ea 	bl	8015298 <rcu_periph_clock_enable>
 800dec4:	f640 4016 	movw	r0, #3094	; 0xc16
 800dec8:	f007 f9e6 	bl	8015298 <rcu_periph_clock_enable>
 800decc:	482d      	ldr	r0, [pc, #180]	; (800df84 <Dmx::Dmx()+0x148>)
 800dece:	2103      	movs	r1, #3
 800ded0:	f006 fc98 	bl	8014804 <dma_deinit>
 800ded4:	4b2c      	ldr	r3, [pc, #176]	; (800df88 <Dmx::Dmx()+0x14c>)
 800ded6:	482b      	ldr	r0, [pc, #172]	; (800df84 <Dmx::Dmx()+0x148>)
 800ded8:	9608      	str	r6, [sp, #32]
 800deda:	aa05      	add	r2, sp, #20
 800dedc:	f04f 0840 	mov.w	r8, #64	; 0x40
 800dee0:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800dee4:	2103      	movs	r1, #3
 800dee6:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800deea:	9609      	str	r6, [sp, #36]	; 0x24
 800deec:	970d      	str	r7, [sp, #52]	; 0x34
 800deee:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800def2:	f006 fcbe 	bl	8014872 <dma_single_data_mode_init>
 800def6:	4823      	ldr	r0, [pc, #140]	; (800df84 <Dmx::Dmx()+0x148>)
 800def8:	2103      	movs	r1, #3
 800defa:	f006 fcf9 	bl	80148f0 <dma_circulation_disable>
 800defe:	2204      	movs	r2, #4
 800df00:	4820      	ldr	r0, [pc, #128]	; (800df84 <Dmx::Dmx()+0x148>)
 800df02:	2103      	movs	r1, #3
 800df04:	f006 fcfc 	bl	8014900 <dma_channel_subperipheral_select>
 800df08:	4820      	ldr	r0, [pc, #128]	; (800df8c <Dmx::Dmx()+0x150>)
 800df0a:	2106      	movs	r1, #6
 800df0c:	f006 fc7a 	bl	8014804 <dma_deinit>
 800df10:	4b1f      	ldr	r3, [pc, #124]	; (800df90 <Dmx::Dmx()+0x154>)
 800df12:	481e      	ldr	r0, [pc, #120]	; (800df8c <Dmx::Dmx()+0x150>)
 800df14:	9608      	str	r6, [sp, #32]
 800df16:	aa05      	add	r2, sp, #20
 800df18:	2106      	movs	r1, #6
 800df1a:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800df1e:	9609      	str	r6, [sp, #36]	; 0x24
 800df20:	970d      	str	r7, [sp, #52]	; 0x34
 800df22:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800df26:	f006 fca4 	bl	8014872 <dma_single_data_mode_init>
 800df2a:	4818      	ldr	r0, [pc, #96]	; (800df8c <Dmx::Dmx()+0x150>)
 800df2c:	4c19      	ldr	r4, [pc, #100]	; (800df94 <Dmx::Dmx()+0x158>)
 800df2e:	2106      	movs	r1, #6
 800df30:	f006 fcde 	bl	80148f0 <dma_circulation_disable>
 800df34:	2702      	movs	r7, #2
 800df36:	4815      	ldr	r0, [pc, #84]	; (800df8c <Dmx::Dmx()+0x150>)
 800df38:	2205      	movs	r2, #5
 800df3a:	2106      	movs	r1, #6
 800df3c:	f006 fce0 	bl	8014900 <dma_channel_subperipheral_select>
 800df40:	2680      	movs	r6, #128	; 0x80
 800df42:	4915      	ldr	r1, [pc, #84]	; (800df98 <Dmx::Dmx()+0x15c>)
 800df44:	4815      	ldr	r0, [pc, #84]	; (800df9c <Dmx::Dmx()+0x160>)
 800df46:	9700      	str	r7, [sp, #0]
 800df48:	2300      	movs	r3, #0
 800df4a:	2208      	movs	r2, #8
 800df4c:	f008 f8f2 	bl	8016134 <gd32_uart_begin>
 800df50:	6066      	str	r6, [r4, #4]
 800df52:	4911      	ldr	r1, [pc, #68]	; (800df98 <Dmx::Dmx()+0x15c>)
 800df54:	4812      	ldr	r0, [pc, #72]	; (800dfa0 <Dmx::Dmx()+0x164>)
 800df56:	9700      	str	r7, [sp, #0]
 800df58:	2300      	movs	r3, #0
 800df5a:	2208      	movs	r2, #8
 800df5c:	f008 f8ea 	bl	8016134 <gd32_uart_begin>
 800df60:	4628      	mov	r0, r5
 800df62:	60a6      	str	r6, [r4, #8]
 800df64:	b00e      	add	sp, #56	; 0x38
 800df66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df6a:	2401      	movs	r4, #1
 800df6c:	e77c      	b.n	800de68 <Dmx::Dmx()+0x2c>
 800df6e:	bf00      	nop
 800df70:	20001190 	mulcs	r0, r0, r1
 800df74:	080185e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, pc}
 800df78:	2000118c 	andcs	r1, r0, ip, lsl #3
 800df7c:	20001184 	andcs	r1, r0, r4, lsl #3
 800df80:	2000095c 	andcs	r0, r0, ip, asr r9
 800df84:	40026000 	andmi	r6, r2, r0
 800df88:	40004804 	andmi	r4, r0, r4, lsl #16
 800df8c:	40026400 	andmi	r6, r2, r0, lsl #8
 800df90:	40011404 	andmi	r1, r1, r4, lsl #8
 800df94:	e000e100 	and	lr, r0, r0, lsl #2
 800df98:	0003d090 	muleq	r3, r0, r0
 800df9c:	40004800 	andmi	r4, r0, r0, lsl #16
 800dfa0:	40011400 	andmi	r1, r1, r0, lsl #8

0800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800dfa4:	4b0f      	ldr	r3, [pc, #60]	; (800dfe4 <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 800dfa6:	60c1      	str	r1, [r0, #12]
 800dfa8:	f8b3 2406 	ldrh.w	r2, [r3, #1030]	; 0x406
 800dfac:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800dfb0:	480d      	ldr	r0, [pc, #52]	; (800dfe8 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 800dfb2:	429a      	cmp	r2, r3
 800dfb4:	bf38      	it	cc
 800dfb6:	461a      	movcc	r2, r3
 800dfb8:	4b0c      	ldr	r3, [pc, #48]	; (800dfec <Dmx::SetDmxPeriodTime(unsigned int)+0x48>)
 800dfba:	6800      	ldr	r0, [r0, #0]
 800dfbc:	681b      	ldr	r3, [r3, #0]
 800dfbe:	4403      	add	r3, r0
 800dfc0:	202c      	movs	r0, #44	; 0x2c
 800dfc2:	fb00 3302 	mla	r3, r0, r2, r3
 800dfc6:	b151      	cbz	r1, 800dfde <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800dfc8:	4299      	cmp	r1, r3
 800dfca:	d205      	bcs.n	800dfd8 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800dfcc:	1819      	adds	r1, r3, r0
 800dfce:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800dfd2:	4299      	cmp	r1, r3
 800dfd4:	bf38      	it	cc
 800dfd6:	4619      	movcc	r1, r3
 800dfd8:	4b05      	ldr	r3, [pc, #20]	; (800dff0 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>)
 800dfda:	6019      	str	r1, [r3, #0]
 800dfdc:	4770      	bx	lr
 800dfde:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800dfe2:	e7f4      	b.n	800dfce <Dmx::SetDmxPeriodTime(unsigned int)+0x2a>
 800dfe4:	20000d7c 	andcs	r0, r0, ip, ror sp
 800dfe8:	20000008 	andcs	r0, r0, r8
 800dfec:	2000000c 	andcs	r0, r0, ip
 800dff0:	20000004 	andcs	r0, r0, r4

0800dff4 <Dmx::SetDmxBreakTime(unsigned int)>:
 800dff4:	295c      	cmp	r1, #92	; 0x5c
 800dff6:	4b03      	ldr	r3, [pc, #12]	; (800e004 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800dff8:	bf38      	it	cc
 800dffa:	215c      	movcc	r1, #92	; 0x5c
 800dffc:	6019      	str	r1, [r3, #0]
 800dffe:	68c1      	ldr	r1, [r0, #12]
 800e000:	f7ff bfd0 	b.w	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e004:	2000000c 	andcs	r0, r0, ip

0800e008 <Dmx::SetDmxMabTime(unsigned int)>:
 800e008:	290c      	cmp	r1, #12
 800e00a:	4b03      	ldr	r3, [pc, #12]	; (800e018 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800e00c:	bf38      	it	cc
 800e00e:	210c      	movcc	r1, #12
 800e010:	6019      	str	r1, [r3, #0]
 800e012:	68c1      	ldr	r1, [r0, #12]
 800e014:	f7ff bfc6 	b.w	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e018:	20000008 	andcs	r0, r0, r8

0800e01c <Dmx::SetDmxSlots(unsigned short)>:
 800e01c:	1e8b      	subs	r3, r1, #2
 800e01e:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800e022:	d80f      	bhi.n	800e044 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800e024:	69c3      	ldr	r3, [r0, #28]
 800e026:	8201      	strh	r1, [r0, #16]
 800e028:	b11b      	cbz	r3, 800e032 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800e02a:	4299      	cmp	r1, r3
 800e02c:	bf94      	ite	ls
 800e02e:	61c1      	strls	r1, [r0, #28]
 800e030:	61c3      	strhi	r3, [r0, #28]
 800e032:	6a03      	ldr	r3, [r0, #32]
 800e034:	b11b      	cbz	r3, 800e03e <Dmx::SetDmxSlots(unsigned short)+0x22>
 800e036:	4299      	cmp	r1, r3
 800e038:	bf94      	ite	ls
 800e03a:	6201      	strls	r1, [r0, #32]
 800e03c:	6203      	strhi	r3, [r0, #32]
 800e03e:	68c1      	ldr	r1, [r0, #12]
 800e040:	f7ff bfb0 	b.w	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e044:	4770      	bx	lr
	...

0800e048 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800e048:	b470      	push	{r4, r5, r6}
 800e04a:	8a04      	ldrh	r4, [r0, #16]
 800e04c:	f892 f000 	pld	[r2]
 800e050:	42a3      	cmp	r3, r4
 800e052:	bf28      	it	cs
 800e054:	4623      	movcs	r3, r4
 800e056:	4c0e      	ldr	r4, [pc, #56]	; (800e090 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800e058:	f44f 7501 	mov.w	r5, #516	; 0x204
 800e05c:	fb05 4401 	mla	r4, r5, r1, r4
 800e060:	1c5d      	adds	r5, r3, #1
 800e062:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800e066:	18d5      	adds	r5, r2, r3
 800e068:	4295      	cmp	r5, r2
 800e06a:	d109      	bne.n	800e080 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800e06c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e070:	69ca      	ldr	r2, [r1, #28]
 800e072:	429a      	cmp	r2, r3
 800e074:	d009      	beq.n	800e08a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800e076:	61cb      	str	r3, [r1, #28]
 800e078:	bc70      	pop	{r4, r5, r6}
 800e07a:	68c1      	ldr	r1, [r0, #12]
 800e07c:	f7ff bf92 	b.w	800dfa4 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e080:	f812 6b01 	ldrb.w	r6, [r2], #1
 800e084:	f804 6f01 	strb.w	r6, [r4, #1]!
 800e088:	e7ee      	b.n	800e068 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800e08a:	bc70      	pop	{r4, r5, r6}
 800e08c:	4770      	bx	lr
 800e08e:	bf00      	nop
 800e090:	20000d7c 	andcs	r0, r0, ip, ror sp

0800e094 <Dmx::Blackout()>:
 800e094:	b538      	push	{r3, r4, r5, lr}
 800e096:	4c1e      	ldr	r4, [pc, #120]	; (800e110 <Dmx::Blackout()+0x7c>)
 800e098:	8823      	ldrh	r3, [r4, #0]
 800e09a:	b29b      	uxth	r3, r3
 800e09c:	b3bb      	cbz	r3, 800e10e <Dmx::Blackout()+0x7a>
 800e09e:	f3bf 8f5f 	dmb	sy
 800e0a2:	8823      	ldrh	r3, [r4, #0]
 800e0a4:	05da      	lsls	r2, r3, #23
 800e0a6:	d515      	bpl.n	800e0d4 <Dmx::Blackout()+0x40>
 800e0a8:	2000      	movs	r0, #0
 800e0aa:	f7ff fce1 	bl	800da70 <_port_to_uart(unsigned int)>
 800e0ae:	4605      	mov	r5, r0
 800e0b0:	2107      	movs	r1, #7
 800e0b2:	4628      	mov	r0, r5
 800e0b4:	f007 fce6 	bl	8015a84 <usart_flag_get>
 800e0b8:	2801      	cmp	r0, #1
 800e0ba:	d1f9      	bne.n	800e0b0 <Dmx::Blackout()+0x1c>
 800e0bc:	4b15      	ldr	r3, [pc, #84]	; (800e114 <Dmx::Blackout()+0x80>)
 800e0be:	2000      	movs	r0, #0
 800e0c0:	461a      	mov	r2, r3
 800e0c2:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e0c6:	f823 0b02 	strh.w	r0, [r3], #2
 800e0ca:	428b      	cmp	r3, r1
 800e0cc:	d1fb      	bne.n	800e0c6 <Dmx::Blackout()+0x32>
 800e0ce:	f04f 0300 	mov.w	r3, #0
 800e0d2:	7013      	strb	r3, [r2, #0]
 800e0d4:	f3bf 8f5f 	dmb	sy
 800e0d8:	8823      	ldrh	r3, [r4, #0]
 800e0da:	059b      	lsls	r3, r3, #22
 800e0dc:	d517      	bpl.n	800e10e <Dmx::Blackout()+0x7a>
 800e0de:	2001      	movs	r0, #1
 800e0e0:	f7ff fcc6 	bl	800da70 <_port_to_uart(unsigned int)>
 800e0e4:	4604      	mov	r4, r0
 800e0e6:	2107      	movs	r1, #7
 800e0e8:	4620      	mov	r0, r4
 800e0ea:	f007 fccb 	bl	8015a84 <usart_flag_get>
 800e0ee:	2801      	cmp	r0, #1
 800e0f0:	d1f9      	bne.n	800e0e6 <Dmx::Blackout()+0x52>
 800e0f2:	4b09      	ldr	r3, [pc, #36]	; (800e118 <Dmx::Blackout()+0x84>)
 800e0f4:	2000      	movs	r0, #0
 800e0f6:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e0fa:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e0fe:	f823 0b02 	strh.w	r0, [r3], #2
 800e102:	428b      	cmp	r3, r1
 800e104:	d1fb      	bne.n	800e0fe <Dmx::Blackout()+0x6a>
 800e106:	f04f 0300 	mov.w	r3, #0
 800e10a:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e10e:	bd38      	pop	{r3, r4, r5, pc}
 800e110:	2000118c 	andcs	r1, r0, ip, lsl #3
 800e114:	20000d7c 	andcs	r0, r0, ip, ror sp
 800e118:	20000f80 	andcs	r0, r0, r0, lsl #31

0800e11c <Dmx::FullOn()>:
 800e11c:	b538      	push	{r3, r4, r5, lr}
 800e11e:	4c1e      	ldr	r4, [pc, #120]	; (800e198 <Dmx::FullOn()+0x7c>)
 800e120:	8823      	ldrh	r3, [r4, #0]
 800e122:	b29b      	uxth	r3, r3
 800e124:	b3bb      	cbz	r3, 800e196 <Dmx::FullOn()+0x7a>
 800e126:	f3bf 8f5f 	dmb	sy
 800e12a:	8823      	ldrh	r3, [r4, #0]
 800e12c:	05da      	lsls	r2, r3, #23
 800e12e:	d515      	bpl.n	800e15c <Dmx::FullOn()+0x40>
 800e130:	2000      	movs	r0, #0
 800e132:	f7ff fc9d 	bl	800da70 <_port_to_uart(unsigned int)>
 800e136:	4605      	mov	r5, r0
 800e138:	2107      	movs	r1, #7
 800e13a:	4628      	mov	r0, r5
 800e13c:	f007 fca2 	bl	8015a84 <usart_flag_get>
 800e140:	2801      	cmp	r0, #1
 800e142:	d1f9      	bne.n	800e138 <Dmx::FullOn()+0x1c>
 800e144:	4b15      	ldr	r3, [pc, #84]	; (800e19c <Dmx::FullOn()+0x80>)
 800e146:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e14a:	461a      	mov	r2, r3
 800e14c:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e150:	f823 0b02 	strh.w	r0, [r3], #2
 800e154:	428b      	cmp	r3, r1
 800e156:	d1fb      	bne.n	800e150 <Dmx::FullOn()+0x34>
 800e158:	2300      	movs	r3, #0
 800e15a:	7013      	strb	r3, [r2, #0]
 800e15c:	f3bf 8f5f 	dmb	sy
 800e160:	8823      	ldrh	r3, [r4, #0]
 800e162:	059b      	lsls	r3, r3, #22
 800e164:	d517      	bpl.n	800e196 <Dmx::FullOn()+0x7a>
 800e166:	2001      	movs	r0, #1
 800e168:	f7ff fc82 	bl	800da70 <_port_to_uart(unsigned int)>
 800e16c:	4604      	mov	r4, r0
 800e16e:	2107      	movs	r1, #7
 800e170:	4620      	mov	r0, r4
 800e172:	f007 fc87 	bl	8015a84 <usart_flag_get>
 800e176:	2801      	cmp	r0, #1
 800e178:	d1f9      	bne.n	800e16e <Dmx::FullOn()+0x52>
 800e17a:	4b09      	ldr	r3, [pc, #36]	; (800e1a0 <Dmx::FullOn()+0x84>)
 800e17c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e180:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e184:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e188:	f823 0b02 	strh.w	r0, [r3], #2
 800e18c:	428b      	cmp	r3, r1
 800e18e:	d1fb      	bne.n	800e188 <Dmx::FullOn()+0x6c>
 800e190:	2300      	movs	r3, #0
 800e192:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e196:	bd38      	pop	{r3, r4, r5, pc}
 800e198:	2000118c 	andcs	r1, r0, ip, lsl #3
 800e19c:	20000d7c 	andcs	r0, r0, ip, ror sp
 800e1a0:	20000f80 	andcs	r0, r0, r0, lsl #31

0800e1a4 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800e1a4:	2000      	movs	r0, #0
 800e1a6:	4770      	bx	lr

0800e1a8 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800e1a8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e1ac:	4770      	bx	lr

0800e1ae <WS28xxDmxMulti::GetDmxFootprint()>:
 800e1ae:	2000      	movs	r0, #0
 800e1b0:	4770      	bx	lr

0800e1b2 <WS28xxDmxMulti::Start(unsigned int)>:
 800e1b2:	b538      	push	{r3, r4, r5, lr}
 800e1b4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e1b6:	4604      	mov	r4, r0
 800e1b8:	460d      	mov	r5, r1
 800e1ba:	b923      	cbnz	r3, 800e1c6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800e1bc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e1be:	b110      	cbz	r0, 800e1c6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800e1c0:	6803      	ldr	r3, [r0, #0]
 800e1c2:	689b      	ldr	r3, [r3, #8]
 800e1c4:	4798      	blx	r3
 800e1c6:	2301      	movs	r3, #1
 800e1c8:	fa03 f105 	lsl.w	r1, r3, r5
 800e1cc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e1ce:	430b      	orrs	r3, r1
 800e1d0:	6523      	str	r3, [r4, #80]	; 0x50
 800e1d2:	bd38      	pop	{r3, r4, r5, pc}

0800e1d4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800e1d4:	b538      	push	{r3, r4, r5, lr}
 800e1d6:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800e1d8:	4b05      	ldr	r3, [pc, #20]	; (800e1f0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800e1da:	6003      	str	r3, [r0, #0]
 800e1dc:	4604      	mov	r4, r0
 800e1de:	b12d      	cbz	r5, 800e1ec <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800e1e0:	4628      	mov	r0, r5
 800e1e2:	f001 fab3 	bl	800f74c <WS28xxMulti::~WS28xxMulti()>
 800e1e6:	4628      	mov	r0, r5
 800e1e8:	f006 f806 	bl	80141f8 <operator delete(void*)>
 800e1ec:	4620      	mov	r0, r4
 800e1ee:	bd38      	pop	{r3, r4, r5, pc}
 800e1f0:	08018600 	stmdaeq	r1, {r9, sl, pc}

0800e1f4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800e1f4:	b510      	push	{r4, lr}
 800e1f6:	4604      	mov	r4, r0
 800e1f8:	f7ff ffec 	bl	800e1d4 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800e1fc:	4620      	mov	r0, r4
 800e1fe:	f005 fffb 	bl	80141f8 <operator delete(void*)>
 800e202:	4620      	mov	r0, r4
 800e204:	bd10      	pop	{r4, pc}

0800e206 <WS28xxDmxMulti::Blackout(bool)>:
 800e206:	b538      	push	{r3, r4, r5, lr}
 800e208:	4604      	mov	r4, r0
 800e20a:	460d      	mov	r5, r1
 800e20c:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e210:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e212:	f001 fe81 	bl	800ff18 <WS28xxMulti::IsUpdating()>
 800e216:	2800      	cmp	r0, #0
 800e218:	d1fa      	bne.n	800e210 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800e21a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e21c:	b11d      	cbz	r5, 800e226 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800e21e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e222:	f001 bdb7 	b.w	800fd94 <WS28xxMulti::Blackout()>
 800e226:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e22a:	f001 bd0f 	b.w	800fc4c <WS28xxMulti::Update()>

0800e22e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e22e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e232:	b089      	sub	sp, #36	; 0x24
 800e234:	4691      	mov	r9, r2
 800e236:	9306      	str	r3, [sp, #24]
 800e238:	460b      	mov	r3, r1
 800e23a:	f003 0203 	and.w	r2, r3, #3
 800e23e:	2a02      	cmp	r2, #2
 800e240:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800e242:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800e244:	9105      	str	r1, [sp, #20]
 800e246:	4604      	mov	r4, r0
 800e248:	ea4f 0191 	mov.w	r1, r1, lsr #2
 800e24c:	9806      	ldr	r0, [sp, #24]
 800e24e:	fbb0 f3f3 	udiv	r3, r0, r3
 800e252:	d032      	beq.n	800e2ba <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8c>
 800e254:	2a03      	cmp	r2, #3
 800e256:	d032      	beq.n	800e2be <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800e258:	2a01      	cmp	r2, #1
 800e25a:	d028      	beq.n	800e2ae <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x80>
 800e25c:	429e      	cmp	r6, r3
 800e25e:	bf28      	it	cs
 800e260:	461e      	movcs	r6, r3
 800e262:	2500      	movs	r5, #0
 800e264:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e266:	9107      	str	r1, [sp, #28]
 800e268:	f001 fe56 	bl	800ff18 <WS28xxMulti::IsUpdating()>
 800e26c:	9907      	ldr	r1, [sp, #28]
 800e26e:	2800      	cmp	r0, #0
 800e270:	d1f8      	bne.n	800e264 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x36>
 800e272:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e274:	f8d4 a024 	ldr.w	sl, [r4, #36]	; 0x24
 800e278:	2b03      	cmp	r3, #3
 800e27a:	46c8      	mov	r8, r9
 800e27c:	fb0a f705 	mul.w	r7, sl, r5
 800e280:	d041      	beq.n	800e306 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd8>
 800e282:	42b5      	cmp	r5, r6
 800e284:	d241      	bcs.n	800e30a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e286:	9a06      	ldr	r2, [sp, #24]
 800e288:	eba8 0309 	sub.w	r3, r8, r9
 800e28c:	429a      	cmp	r2, r3
 800e28e:	d93c      	bls.n	800e30a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e290:	f898 f000 	pld	[r8]
 800e294:	f04f 0b00 	mov.w	fp, #0
 800e298:	fa1f f28b 	uxth.w	r2, fp
 800e29c:	4552      	cmp	r2, sl
 800e29e:	f10b 0b01 	add.w	fp, fp, #1
 800e2a2:	d33c      	bcc.n	800e31e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf0>
 800e2a4:	3501      	adds	r5, #1
 800e2a6:	f108 0804 	add.w	r8, r8, #4
 800e2aa:	4457      	add	r7, sl
 800e2ac:	e7e9      	b.n	800e282 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x54>
 800e2ae:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800e2b0:	442b      	add	r3, r5
 800e2b2:	429e      	cmp	r6, r3
 800e2b4:	bf28      	it	cs
 800e2b6:	461e      	movcs	r6, r3
 800e2b8:	e7d4      	b.n	800e264 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x36>
 800e2ba:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 800e2bc:	e7f8      	b.n	800e2b0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800e2be:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 800e2c0:	e7f6      	b.n	800e2b0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800e2c2:	f898 3002 	ldrb.w	r3, [r8, #2]
 800e2c6:	9301      	str	r3, [sp, #4]
 800e2c8:	f898 3001 	ldrb.w	r3, [r8, #1]
 800e2cc:	9300      	str	r3, [sp, #0]
 800e2ce:	f898 3000 	ldrb.w	r3, [r8]
 800e2d2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e2d4:	9107      	str	r1, [sp, #28]
 800e2d6:	443a      	add	r2, r7
 800e2d8:	f001 fe9e 	bl	8010018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e2dc:	9907      	ldr	r1, [sp, #28]
 800e2de:	e008      	b.n	800e2f2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc4>
 800e2e0:	9a06      	ldr	r2, [sp, #24]
 800e2e2:	eba8 0309 	sub.w	r3, r8, r9
 800e2e6:	429a      	cmp	r2, r3
 800e2e8:	d90f      	bls.n	800e30a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e2ea:	f898 f000 	pld	[r8]
 800e2ee:	f04f 0b00 	mov.w	fp, #0
 800e2f2:	fa1f f28b 	uxth.w	r2, fp
 800e2f6:	4552      	cmp	r2, sl
 800e2f8:	f10b 0b01 	add.w	fp, fp, #1
 800e2fc:	d3e1      	bcc.n	800e2c2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x94>
 800e2fe:	3501      	adds	r5, #1
 800e300:	f108 0803 	add.w	r8, r8, #3
 800e304:	4457      	add	r7, sl
 800e306:	42b5      	cmp	r5, r6
 800e308:	d3ea      	bcc.n	800e2e0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xb2>
 800e30a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e30c:	9a05      	ldr	r2, [sp, #20]
 800e30e:	4293      	cmp	r3, r2
 800e310:	d117      	bne.n	800e342 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x114>
 800e312:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e314:	b009      	add	sp, #36	; 0x24
 800e316:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e31a:	f001 bc97 	b.w	800fc4c <WS28xxMulti::Update()>
 800e31e:	f898 3003 	ldrb.w	r3, [r8, #3]
 800e322:	9302      	str	r3, [sp, #8]
 800e324:	f898 3002 	ldrb.w	r3, [r8, #2]
 800e328:	9301      	str	r3, [sp, #4]
 800e32a:	f898 3001 	ldrb.w	r3, [r8, #1]
 800e32e:	9300      	str	r3, [sp, #0]
 800e330:	f898 3000 	ldrb.w	r3, [r8]
 800e334:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e336:	9107      	str	r1, [sp, #28]
 800e338:	443a      	add	r2, r7
 800e33a:	f001 feef 	bl	801011c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e33e:	9907      	ldr	r1, [sp, #28]
 800e340:	e7aa      	b.n	800e298 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800e342:	b009      	add	sp, #36	; 0x24
 800e344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e348 <WS28xxDmxMulti::FullOn()>:
 800e348:	b510      	push	{r4, lr}
 800e34a:	4604      	mov	r4, r0
 800e34c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e34e:	f001 fde3 	bl	800ff18 <WS28xxMulti::IsUpdating()>
 800e352:	2800      	cmp	r0, #0
 800e354:	d1fa      	bne.n	800e34c <WS28xxDmxMulti::FullOn()+0x4>
 800e356:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e35c:	f001 bd7c 	b.w	800fe58 <WS28xxMulti::FullOn()>

0800e360 <WS28xxDmxMulti::Print()>:
 800e360:	3004      	adds	r0, #4
 800e362:	f000 bcb1 	b.w	800ecc8 <PixelDmxConfiguration::Print()>

0800e366 <WS28xxDmxMulti::Stop(unsigned int)>:
 800e366:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e368:	fa23 f201 	lsr.w	r2, r3, r1
 800e36c:	07d2      	lsls	r2, r2, #31
 800e36e:	bf41      	itttt	mi
 800e370:	2201      	movmi	r2, #1
 800e372:	408a      	lslmi	r2, r1
 800e374:	4393      	bicmi	r3, r2
 800e376:	6503      	strmi	r3, [r0, #80]	; 0x50
 800e378:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e37a:	b923      	cbnz	r3, 800e386 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800e37c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e37e:	b110      	cbz	r0, 800e386 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800e380:	6803      	ldr	r3, [r0, #0]
 800e382:	68db      	ldr	r3, [r3, #12]
 800e384:	4718      	bx	r3
 800e386:	4770      	bx	lr

0800e388 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800e388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e38a:	4604      	mov	r4, r0
 800e38c:	4b14      	ldr	r3, [pc, #80]	; (800e3e0 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800e38e:	f844 3b04 	str.w	r3, [r4], #4
 800e392:	460d      	mov	r5, r1
 800e394:	4606      	mov	r6, r0
 800e396:	460f      	mov	r7, r1
 800e398:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e39a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e39c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e39e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e3a0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800e3a4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e3a8:	2300      	movs	r3, #0
 800e3aa:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800e3ae:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800e3b2:	6533      	str	r3, [r6, #80]	; 0x50
 800e3b4:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800e3b8:	2110      	movs	r1, #16
 800e3ba:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800e3be:	1d30      	adds	r0, r6, #4
 800e3c0:	f000 fc3f 	bl	800ec42 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800e3c4:	2020      	movs	r0, #32
 800e3c6:	f005 ff1b 	bl	8014200 <operator new(unsigned int)>
 800e3ca:	4639      	mov	r1, r7
 800e3cc:	4604      	mov	r4, r0
 800e3ce:	f001 fbdf 	bl	800fb90 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800e3d2:	4620      	mov	r0, r4
 800e3d4:	64b4      	str	r4, [r6, #72]	; 0x48
 800e3d6:	f001 fcdd 	bl	800fd94 <WS28xxMulti::Blackout()>
 800e3da:	4630      	mov	r0, r6
 800e3dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3de:	bf00      	nop
 800e3e0:	08018600 	stmdaeq	r1, {r9, sl, pc}

0800e3e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e3e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e3e6:	88c6      	ldrh	r6, [r0, #6]
 800e3e8:	8885      	ldrh	r5, [r0, #4]
 800e3ea:	42ae      	cmp	r6, r5
 800e3ec:	d216      	bcs.n	800e41c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e3ee:	4604      	mov	r4, r0
 800e3f0:	6800      	ldr	r0, [r0, #0]
 800e3f2:	1bad      	subs	r5, r5, r6
 800e3f4:	4430      	add	r0, r6
 800e3f6:	7a26      	ldrb	r6, [r4, #8]
 800e3f8:	b923      	cbnz	r3, 800e404 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e3fa:	b926      	cbnz	r6, 800e406 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e3fc:	9200      	str	r2, [sp, #0]
 800e3fe:	460b      	mov	r3, r1
 800e400:	4a09      	ldr	r2, [pc, #36]	; (800e428 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e402:	e003      	b.n	800e40c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e404:	b166      	cbz	r6, 800e420 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e406:	9200      	str	r2, [sp, #0]
 800e408:	4a08      	ldr	r2, [pc, #32]	; (800e42c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e40a:	460b      	mov	r3, r1
 800e40c:	4629      	mov	r1, r5
 800e40e:	f7fb ff83 	bl	800a318 <snprintf>
 800e412:	4285      	cmp	r5, r0
 800e414:	bfa2      	ittt	ge
 800e416:	88e3      	ldrhge	r3, [r4, #6]
 800e418:	181b      	addge	r3, r3, r0
 800e41a:	80e3      	strhge	r3, [r4, #6]
 800e41c:	b002      	add	sp, #8
 800e41e:	bd70      	pop	{r4, r5, r6, pc}
 800e420:	9200      	str	r2, [sp, #0]
 800e422:	460b      	mov	r3, r1
 800e424:	4a02      	ldr	r2, [pc, #8]	; (800e430 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e426:	e7f1      	b.n	800e40c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e428:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800e42c:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800e430:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

0800e434 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800e434:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e436:	88c6      	ldrh	r6, [r0, #6]
 800e438:	8885      	ldrh	r5, [r0, #4]
 800e43a:	42ae      	cmp	r6, r5
 800e43c:	d216      	bcs.n	800e46c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800e43e:	4604      	mov	r4, r0
 800e440:	6800      	ldr	r0, [r0, #0]
 800e442:	1bad      	subs	r5, r5, r6
 800e444:	4430      	add	r0, r6
 800e446:	7a26      	ldrb	r6, [r4, #8]
 800e448:	b923      	cbnz	r3, 800e454 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800e44a:	b926      	cbnz	r6, 800e456 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800e44c:	9200      	str	r2, [sp, #0]
 800e44e:	460b      	mov	r3, r1
 800e450:	4a09      	ldr	r2, [pc, #36]	; (800e478 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800e452:	e003      	b.n	800e45c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e454:	b166      	cbz	r6, 800e470 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800e456:	9200      	str	r2, [sp, #0]
 800e458:	4a08      	ldr	r2, [pc, #32]	; (800e47c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800e45a:	460b      	mov	r3, r1
 800e45c:	4629      	mov	r1, r5
 800e45e:	f7fb ff5b 	bl	800a318 <snprintf>
 800e462:	4285      	cmp	r5, r0
 800e464:	bfa2      	ittt	ge
 800e466:	88e3      	ldrhge	r3, [r4, #6]
 800e468:	181b      	addge	r3, r3, r0
 800e46a:	80e3      	strhge	r3, [r4, #6]
 800e46c:	b002      	add	sp, #8
 800e46e:	bd70      	pop	{r4, r5, r6, pc}
 800e470:	9200      	str	r2, [sp, #0]
 800e472:	460b      	mov	r3, r1
 800e474:	4a02      	ldr	r2, [pc, #8]	; (800e480 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e476:	e7f1      	b.n	800e45c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e478:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800e47c:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800e480:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

0800e484 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800e484:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e486:	88c6      	ldrh	r6, [r0, #6]
 800e488:	8885      	ldrh	r5, [r0, #4]
 800e48a:	42ae      	cmp	r6, r5
 800e48c:	d216      	bcs.n	800e4bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800e48e:	4604      	mov	r4, r0
 800e490:	6800      	ldr	r0, [r0, #0]
 800e492:	1bad      	subs	r5, r5, r6
 800e494:	4430      	add	r0, r6
 800e496:	7a26      	ldrb	r6, [r4, #8]
 800e498:	b923      	cbnz	r3, 800e4a4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800e49a:	b926      	cbnz	r6, 800e4a6 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800e49c:	9200      	str	r2, [sp, #0]
 800e49e:	460b      	mov	r3, r1
 800e4a0:	4a09      	ldr	r2, [pc, #36]	; (800e4c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800e4a2:	e003      	b.n	800e4ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800e4a4:	b166      	cbz	r6, 800e4c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800e4a6:	9200      	str	r2, [sp, #0]
 800e4a8:	4a08      	ldr	r2, [pc, #32]	; (800e4cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800e4aa:	460b      	mov	r3, r1
 800e4ac:	4629      	mov	r1, r5
 800e4ae:	f7fb ff33 	bl	800a318 <snprintf>
 800e4b2:	4285      	cmp	r5, r0
 800e4b4:	bfa2      	ittt	ge
 800e4b6:	88e3      	ldrhge	r3, [r4, #6]
 800e4b8:	181b      	addge	r3, r3, r0
 800e4ba:	80e3      	strhge	r3, [r4, #6]
 800e4bc:	b002      	add	sp, #8
 800e4be:	bd70      	pop	{r4, r5, r6, pc}
 800e4c0:	9200      	str	r2, [sp, #0]
 800e4c2:	460b      	mov	r3, r1
 800e4c4:	4a02      	ldr	r2, [pc, #8]	; (800e4d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e4c6:	e7f1      	b.n	800e4ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800e4c8:	08016ea0 	stmdaeq	r1, {r5, r7, r9, sl, fp, sp, lr}
 800e4cc:	08016e95 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, fp, sp, lr}
 800e4d0:	08016ea1 	stmdaeq	r1, {r0, r5, r7, r9, sl, fp, sp, lr}

0800e4d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800e4d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e4d8:	8885      	ldrh	r5, [r0, #4]
 800e4da:	4698      	mov	r8, r3
 800e4dc:	88c3      	ldrh	r3, [r0, #6]
 800e4de:	42ab      	cmp	r3, r5
 800e4e0:	4604      	mov	r4, r0
 800e4e2:	d229      	bcs.n	800e538 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800e4e4:	6826      	ldr	r6, [r4, #0]
 800e4e6:	f894 9008 	ldrb.w	r9, [r4, #8]
 800e4ea:	4692      	mov	sl, r2
 800e4ec:	ee10 0a10 	vmov	r0, s0
 800e4f0:	460f      	mov	r7, r1
 800e4f2:	441e      	add	r6, r3
 800e4f4:	1aed      	subs	r5, r5, r3
 800e4f6:	f7fa fd4d 	bl	8008f94 <__aeabi_f2d>
 800e4fa:	f1ba 0f00 	cmp.w	sl, #0
 800e4fe:	d109      	bne.n	800e514 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800e500:	f1b9 0f00 	cmp.w	r9, #0
 800e504:	d109      	bne.n	800e51a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800e506:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e50a:	4a10      	ldr	r2, [pc, #64]	; (800e54c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800e50c:	f8cd 8000 	str.w	r8, [sp]
 800e510:	463b      	mov	r3, r7
 800e512:	e008      	b.n	800e526 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800e514:	f1b9 0f00 	cmp.w	r9, #0
 800e518:	d011      	beq.n	800e53e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800e51a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e51e:	4a0c      	ldr	r2, [pc, #48]	; (800e550 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800e520:	f8cd 8000 	str.w	r8, [sp]
 800e524:	463b      	mov	r3, r7
 800e526:	4629      	mov	r1, r5
 800e528:	4630      	mov	r0, r6
 800e52a:	f7fb fef5 	bl	800a318 <snprintf>
 800e52e:	4285      	cmp	r5, r0
 800e530:	bfa2      	ittt	ge
 800e532:	88e3      	ldrhge	r3, [r4, #6]
 800e534:	18c0      	addge	r0, r0, r3
 800e536:	80e0      	strhge	r0, [r4, #6]
 800e538:	b004      	add	sp, #16
 800e53a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e53e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e542:	4a04      	ldr	r2, [pc, #16]	; (800e554 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800e544:	f8cd 8000 	str.w	r8, [sp]
 800e548:	463b      	mov	r3, r7
 800e54a:	e7ec      	b.n	800e526 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800e54c:	0801863b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, pc}
 800e550:	08018630 	stmdaeq	r1, {r4, r5, r9, sl, pc}
 800e554:	0801863c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, pc}

0800e558 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800e558:	6001      	str	r1, [r0, #0]
 800e55a:	2106      	movs	r1, #6
 800e55c:	2200      	movs	r2, #0
 800e55e:	75c1      	strb	r1, [r0, #23]
 800e560:	490b      	ldr	r1, [pc, #44]	; (800e590 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800e562:	7582      	strb	r2, [r0, #22]
 800e564:	8302      	strh	r2, [r0, #24]
 800e566:	6042      	str	r2, [r0, #4]
 800e568:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 800e56c:	e9c0 1202 	strd	r1, r2, [r0, #8]
 800e570:	2301      	movs	r3, #1
 800e572:	4a08      	ldr	r2, [pc, #32]	; (800e594 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800e574:	6102      	str	r2, [r0, #16]
 800e576:	7543      	strb	r3, [r0, #21]
 800e578:	f100 0218 	add.w	r2, r0, #24
 800e57c:	f822 3f02 	strh.w	r3, [r2, #2]!
 800e580:	3304      	adds	r3, #4
 800e582:	b29b      	uxth	r3, r3
 800e584:	2b41      	cmp	r3, #65	; 0x41
 800e586:	d1f9      	bne.n	800e57c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>
 800e588:	2300      	movs	r3, #0
 800e58a:	7503      	strb	r3, [r0, #20]
 800e58c:	4770      	bx	lr
 800e58e:	bf00      	nop
 800e590:	0100aa03 	tsteq	r0, r3, lsl #20
 800e594:	01ff003d 	mvnseq	r0, sp, lsr r0

0800e598 <PixelDmxParams::Load()>:
 800e598:	b508      	push	{r3, lr}
 800e59a:	2300      	movs	r3, #0
 800e59c:	4601      	mov	r1, r0
 800e59e:	6043      	str	r3, [r0, #4]
 800e5a0:	6800      	ldr	r0, [r0, #0]
 800e5a2:	b120      	cbz	r0, 800e5ae <PixelDmxParams::Load()+0x16>
 800e5a4:	6803      	ldr	r3, [r0, #0]
 800e5a6:	3104      	adds	r1, #4
 800e5a8:	68db      	ldr	r3, [r3, #12]
 800e5aa:	4798      	blx	r3
 800e5ac:	2001      	movs	r0, #1
 800e5ae:	bd08      	pop	{r3, pc}

0800e5b0 <PixelDmxParams::Load(char const*, unsigned int)>:
 800e5b0:	6803      	ldr	r3, [r0, #0]
 800e5b2:	b1d3      	cbz	r3, 800e5ea <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800e5b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e5b6:	2300      	movs	r3, #0
 800e5b8:	6043      	str	r3, [r0, #4]
 800e5ba:	4604      	mov	r4, r0
 800e5bc:	460d      	mov	r5, r1
 800e5be:	4616      	mov	r6, r2
 800e5c0:	490a      	ldr	r1, [pc, #40]	; (800e5ec <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800e5c2:	4602      	mov	r2, r0
 800e5c4:	4668      	mov	r0, sp
 800e5c6:	f005 f849 	bl	801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e5ca:	4632      	mov	r2, r6
 800e5cc:	4629      	mov	r1, r5
 800e5ce:	4668      	mov	r0, sp
 800e5d0:	f005 f848 	bl	8013664 <ReadConfigFile::Read(char const*, unsigned int)>
 800e5d4:	4621      	mov	r1, r4
 800e5d6:	f851 0b04 	ldr.w	r0, [r1], #4
 800e5da:	6803      	ldr	r3, [r0, #0]
 800e5dc:	689b      	ldr	r3, [r3, #8]
 800e5de:	4798      	blx	r3
 800e5e0:	4668      	mov	r0, sp
 800e5e2:	f005 f83e 	bl	8013662 <ReadConfigFile::~ReadConfigFile()>
 800e5e6:	b002      	add	sp, #8
 800e5e8:	bd70      	pop	{r4, r5, r6, pc}
 800e5ea:	4770      	bx	lr
 800e5ec:	0800e8b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, sp, lr, pc}

0800e5f0 <PixelDmxParams::callbackFunction(char const*)>:
 800e5f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e5f4:	b08a      	sub	sp, #40	; 0x28
 800e5f6:	460d      	mov	r5, r1
 800e5f8:	2308      	movs	r3, #8
 800e5fa:	4604      	mov	r4, r0
 800e5fc:	9304      	str	r3, [sp, #16]
 800e5fe:	499e      	ldr	r1, [pc, #632]	; (800e878 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800e600:	ab04      	add	r3, sp, #16
 800e602:	aa06      	add	r2, sp, #24
 800e604:	4628      	mov	r0, r5
 800e606:	f005 f861 	bl	80136cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e60a:	b9a0      	cbnz	r0, 800e636 <PixelDmxParams::callbackFunction(char const*)+0x46>
 800e60c:	9b04      	ldr	r3, [sp, #16]
 800e60e:	3328      	adds	r3, #40	; 0x28
 800e610:	446b      	add	r3, sp
 800e612:	f803 0c10 	strb.w	r0, [r3, #-16]
 800e616:	a806      	add	r0, sp, #24
 800e618:	f000 fc86 	bl	800ef28 <PixelType::GetType(char const*)>
 800e61c:	6863      	ldr	r3, [r4, #4]
 800e61e:	280e      	cmp	r0, #14
 800e620:	bf0d      	iteet	eq
 800e622:	2203      	moveq	r2, #3
 800e624:	7220      	strbne	r0, [r4, #8]
 800e626:	f043 0301 	orrne.w	r3, r3, #1
 800e62a:	7222      	strbeq	r2, [r4, #8]
 800e62c:	bf08      	it	eq
 800e62e:	f023 0301 	biceq.w	r3, r3, #1
 800e632:	6063      	str	r3, [r4, #4]
 800e634:	e033      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e636:	4991      	ldr	r1, [pc, #580]	; (800e87c <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800e638:	f10d 020a 	add.w	r2, sp, #10
 800e63c:	4628      	mov	r0, r5
 800e63e:	f005 f8fa 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e642:	b990      	cbnz	r0, 800e66a <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800e644:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e648:	6863      	ldr	r3, [r4, #4]
 800e64a:	1e51      	subs	r1, r2, #1
 800e64c:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800e650:	bf2d      	iteet	cs
 800e652:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800e656:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800e65a:	f043 0302 	orrcc.w	r3, r3, #2
 800e65e:	7262      	strbcs	r2, [r4, #9]
 800e660:	bf24      	itt	cs
 800e662:	72a0      	strbcs	r0, [r4, #10]
 800e664:	f023 0302 	biccs.w	r3, r3, #2
 800e668:	e7e3      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e66a:	2303      	movs	r3, #3
 800e66c:	9304      	str	r3, [sp, #16]
 800e66e:	4984      	ldr	r1, [pc, #528]	; (800e880 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800e670:	ab04      	add	r3, sp, #16
 800e672:	aa06      	add	r2, sp, #24
 800e674:	4628      	mov	r0, r5
 800e676:	f005 f829 	bl	80136cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e67a:	b998      	cbnz	r0, 800e6a4 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800e67c:	9b04      	ldr	r3, [sp, #16]
 800e67e:	3328      	adds	r3, #40	; 0x28
 800e680:	446b      	add	r3, sp
 800e682:	f803 0c10 	strb.w	r0, [r3, #-16]
 800e686:	a806      	add	r0, sp, #24
 800e688:	f000 fc72 	bl	800ef70 <PixelType::GetMap(char const*)>
 800e68c:	6863      	ldr	r3, [r4, #4]
 800e68e:	75e0      	strb	r0, [r4, #23]
 800e690:	2806      	cmp	r0, #6
 800e692:	bf14      	ite	ne
 800e694:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800e698:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800e69c:	6063      	str	r3, [r4, #4]
 800e69e:	b00a      	add	sp, #40	; 0x28
 800e6a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e6a4:	4977      	ldr	r1, [pc, #476]	; (800e884 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800e6a6:	aa03      	add	r2, sp, #12
 800e6a8:	4628      	mov	r0, r5
 800e6aa:	f005 f828 	bl	80136fe <Sscan::Float(char const*, char const*, float&)>
 800e6ae:	b968      	cbnz	r0, 800e6cc <PixelDmxParams::callbackFunction(char const*)+0xdc>
 800e6b0:	ed9d 0a03 	vldr	s0, [sp, #12]
 800e6b4:	f000 fcc8 	bl	800f048 <PixelType::ConvertTxH(float)>
 800e6b8:	6863      	ldr	r3, [r4, #4]
 800e6ba:	b120      	cbz	r0, 800e6c6 <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800e6bc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800e6c0:	6063      	str	r3, [r4, #4]
 800e6c2:	7620      	strb	r0, [r4, #24]
 800e6c4:	e7eb      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e6c6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800e6ca:	e7f9      	b.n	800e6c0 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800e6cc:	496e      	ldr	r1, [pc, #440]	; (800e888 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800e6ce:	aa03      	add	r2, sp, #12
 800e6d0:	4628      	mov	r0, r5
 800e6d2:	f005 f814 	bl	80136fe <Sscan::Float(char const*, char const*, float&)>
 800e6d6:	b968      	cbnz	r0, 800e6f4 <PixelDmxParams::callbackFunction(char const*)+0x104>
 800e6d8:	ed9d 0a03 	vldr	s0, [sp, #12]
 800e6dc:	f000 fcb4 	bl	800f048 <PixelType::ConvertTxH(float)>
 800e6e0:	6863      	ldr	r3, [r4, #4]
 800e6e2:	b120      	cbz	r0, 800e6ee <PixelDmxParams::callbackFunction(char const*)+0xfe>
 800e6e4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800e6e8:	6063      	str	r3, [r4, #4]
 800e6ea:	7660      	strb	r0, [r4, #25]
 800e6ec:	e7d7      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e6ee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800e6f2:	e7f9      	b.n	800e6e8 <PixelDmxParams::callbackFunction(char const*)+0xf8>
 800e6f4:	4965      	ldr	r1, [pc, #404]	; (800e88c <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800e6f6:	f10d 020a 	add.w	r2, sp, #10
 800e6fa:	4628      	mov	r0, r5
 800e6fc:	f005 f89b 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e700:	b998      	cbnz	r0, 800e72a <PixelDmxParams::callbackFunction(char const*)+0x13a>
 800e702:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e706:	6863      	ldr	r3, [r4, #4]
 800e708:	1e8a      	subs	r2, r1, #2
 800e70a:	b292      	uxth	r2, r2
 800e70c:	f240 25a6 	movw	r5, #678	; 0x2a6
 800e710:	42aa      	cmp	r2, r5
 800e712:	bf81      	itttt	hi
 800e714:	2201      	movhi	r2, #1
 800e716:	7562      	strbhi	r2, [r4, #21]
 800e718:	75a0      	strbhi	r0, [r4, #22]
 800e71a:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800e71e:	bf9c      	itt	ls
 800e720:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800e724:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800e728:	e783      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e72a:	4959      	ldr	r1, [pc, #356]	; (800e890 <PixelDmxParams::callbackFunction(char const*)+0x2a0>)
 800e72c:	aa05      	add	r2, sp, #20
 800e72e:	4628      	mov	r0, r5
 800e730:	f005 f8a0 	bl	8013874 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800e734:	b960      	cbnz	r0, 800e750 <PixelDmxParams::callbackFunction(char const*)+0x160>
 800e736:	9a05      	ldr	r2, [sp, #20]
 800e738:	4956      	ldr	r1, [pc, #344]	; (800e894 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800e73a:	6863      	ldr	r3, [r4, #4]
 800e73c:	f8c4 200e 	str.w	r2, [r4, #14]
 800e740:	428a      	cmp	r2, r1
 800e742:	bf14      	ite	ne
 800e744:	f043 0310 	orrne.w	r3, r3, #16
 800e748:	f023 0310 	biceq.w	r3, r3, #16
 800e74c:	6063      	str	r3, [r4, #4]
 800e74e:	e7a6      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e750:	4951      	ldr	r1, [pc, #324]	; (800e898 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800e752:	f10d 0209 	add.w	r2, sp, #9
 800e756:	4628      	mov	r0, r5
 800e758:	f005 f8b5 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e75c:	b988      	cbnz	r0, 800e782 <PixelDmxParams::callbackFunction(char const*)+0x192>
 800e75e:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800e762:	6863      	ldr	r3, [r4, #4]
 800e764:	1e4a      	subs	r2, r1, #1
 800e766:	b2d2      	uxtb	r2, r2
 800e768:	2afd      	cmp	r2, #253	; 0xfd
 800e76a:	bf89      	itett	hi
 800e76c:	f023 0320 	bichi.w	r3, r3, #32
 800e770:	f043 0320 	orrls.w	r3, r3, #32
 800e774:	6063      	strhi	r3, [r4, #4]
 800e776:	23ff      	movhi	r3, #255	; 0xff
 800e778:	bf9a      	itte	ls
 800e77a:	6063      	strls	r3, [r4, #4]
 800e77c:	74a1      	strbls	r1, [r4, #18]
 800e77e:	74a3      	strbhi	r3, [r4, #18]
 800e780:	e78d      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e782:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800e8ac <PixelDmxParams::callbackFunction(char const*)+0x2bc>
 800e786:	f104 071a 	add.w	r7, r4, #26
 800e78a:	2600      	movs	r6, #0
 800e78c:	f04f 0814 	mov.w	r8, #20
 800e790:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800e794:	f10d 020a 	add.w	r2, sp, #10
 800e798:	fb08 9106 	mla	r1, r8, r6, r9
 800e79c:	4628      	mov	r0, r5
 800e79e:	f005 f84a 	bl	8013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e7a2:	b940      	cbnz	r0, 800e7b6 <PixelDmxParams::callbackFunction(char const*)+0x1c6>
 800e7a4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e7a8:	6863      	ldr	r3, [r4, #4]
 800e7aa:	fa0a f106 	lsl.w	r1, sl, r6
 800e7ae:	b1ea      	cbz	r2, 800e7ec <PixelDmxParams::callbackFunction(char const*)+0x1fc>
 800e7b0:	803a      	strh	r2, [r7, #0]
 800e7b2:	430b      	orrs	r3, r1
 800e7b4:	6063      	str	r3, [r4, #4]
 800e7b6:	3601      	adds	r6, #1
 800e7b8:	2e10      	cmp	r6, #16
 800e7ba:	f107 0702 	add.w	r7, r7, #2
 800e7be:	d1e9      	bne.n	800e794 <PixelDmxParams::callbackFunction(char const*)+0x1a4>
 800e7c0:	4936      	ldr	r1, [pc, #216]	; (800e89c <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800e7c2:	f10d 0209 	add.w	r2, sp, #9
 800e7c6:	4628      	mov	r0, r5
 800e7c8:	f005 f87d 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e7cc:	b9a0      	cbnz	r0, 800e7f8 <PixelDmxParams::callbackFunction(char const*)+0x208>
 800e7ce:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800e7d2:	6863      	ldr	r3, [r4, #4]
 800e7d4:	1e91      	subs	r1, r2, #2
 800e7d6:	290e      	cmp	r1, #14
 800e7d8:	bf8d      	iteet	hi
 800e7da:	2201      	movhi	r2, #1
 800e7dc:	74e2      	strbls	r2, [r4, #19]
 800e7de:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800e7e2:	74e2      	strbhi	r2, [r4, #19]
 800e7e4:	bf88      	it	hi
 800e7e6:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800e7ea:	e722      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e7ec:	00b2      	lsls	r2, r6, #2
 800e7ee:	3201      	adds	r2, #1
 800e7f0:	803a      	strh	r2, [r7, #0]
 800e7f2:	ea23 0301 	bic.w	r3, r3, r1
 800e7f6:	e7dd      	b.n	800e7b4 <PixelDmxParams::callbackFunction(char const*)+0x1c4>
 800e7f8:	4929      	ldr	r1, [pc, #164]	; (800e8a0 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800e7fa:	f10d 0209 	add.w	r2, sp, #9
 800e7fe:	4628      	mov	r0, r5
 800e800:	f005 f861 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e804:	b960      	cbnz	r0, 800e820 <PixelDmxParams::callbackFunction(char const*)+0x230>
 800e806:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800e80a:	6863      	ldr	r3, [r4, #4]
 800e80c:	1e51      	subs	r1, r2, #1
 800e80e:	2904      	cmp	r1, #4
 800e810:	bf99      	ittee	ls
 800e812:	7522      	strbls	r2, [r4, #20]
 800e814:	f043 0308 	orrls.w	r3, r3, #8
 800e818:	7520      	strbhi	r0, [r4, #20]
 800e81a:	f023 0308 	bichi.w	r3, r3, #8
 800e81e:	e708      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e820:	4920      	ldr	r1, [pc, #128]	; (800e8a4 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800e822:	f10d 0209 	add.w	r2, sp, #9
 800e826:	4628      	mov	r0, r5
 800e828:	f005 f84d 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e82c:	b948      	cbnz	r0, 800e842 <PixelDmxParams::callbackFunction(char const*)+0x252>
 800e82e:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800e832:	6863      	ldr	r3, [r4, #4]
 800e834:	b112      	cbz	r2, 800e83c <PixelDmxParams::callbackFunction(char const*)+0x24c>
 800e836:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e83a:	e6fa      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e83c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e840:	e6f7      	b.n	800e632 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e842:	4919      	ldr	r1, [pc, #100]	; (800e8a8 <PixelDmxParams::callbackFunction(char const*)+0x2b8>)
 800e844:	aa03      	add	r2, sp, #12
 800e846:	4628      	mov	r0, r5
 800e848:	f004 ff59 	bl	80136fe <Sscan::Float(char const*, char const*, float&)>
 800e84c:	2800      	cmp	r0, #0
 800e84e:	f47f af26 	bne.w	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e852:	eddd 7a03 	vldr	s15, [sp, #12]
 800e856:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800e85a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e85e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e862:	edcd 7a01 	vstr	s15, [sp, #4]
 800e866:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800e86a:	f1a3 0214 	sub.w	r2, r3, #20
 800e86e:	2a05      	cmp	r2, #5
 800e870:	bf8c      	ite	hi
 800e872:	7360      	strbhi	r0, [r4, #13]
 800e874:	7363      	strbls	r3, [r4, #13]
 800e876:	e712      	b.n	800e69e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e878:	08019686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip, pc}
 800e87c:	0801968f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, ip, pc}
 800e880:	08019676 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, ip, pc}
 800e884:	08019699 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, ip, pc}
 800e888:	080196a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, ip, pc}
 800e88c:	08019643 	stmdaeq	r1, {r0, r1, r6, r9, sl, ip, pc}
 800e890:	08019627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, ip, pc}
 800e894:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800e898:	08019664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip, pc}
 800e89c:	08019610 	stmdaeq	r1, {r4, r9, sl, ip, pc}
 800e8a0:	08019636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, ip, pc}
 800e8a4:	08019653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, ip, pc}
 800e8a8:	0801961b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, ip, pc}
 800e8ac:	08019722 	stmdaeq	r1, {r1, r5, r8, r9, sl, ip, pc}

0800e8b0 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800e8b0:	f7ff be9e 	b.w	800e5f0 <PixelDmxParams::callbackFunction(char const*)>

0800e8b4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e8b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8b8:	4604      	mov	r4, r0
 800e8ba:	b086      	sub	sp, #24
 800e8bc:	4615      	mov	r5, r2
 800e8be:	461e      	mov	r6, r3
 800e8c0:	3004      	adds	r0, #4
 800e8c2:	b389      	cbz	r1, 800e928 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800e8c4:	2236      	movs	r2, #54	; 0x36
 800e8c6:	f005 fd5a 	bl	801437e <memmove>
 800e8ca:	462a      	mov	r2, r5
 800e8cc:	499b      	ldr	r1, [pc, #620]	; (800eb3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800e8ce:	4633      	mov	r3, r6
 800e8d0:	a803      	add	r0, sp, #12
 800e8d2:	f004 fe23 	bl	801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e8d6:	7a20      	ldrb	r0, [r4, #8]
 800e8d8:	f000 fb1a 	bl	800ef10 <PixelType::GetType(pixel::Type)>
 800e8dc:	6863      	ldr	r3, [r4, #4]
 800e8de:	4998      	ldr	r1, [pc, #608]	; (800eb40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800e8e0:	4602      	mov	r2, r0
 800e8e2:	f003 0301 	and.w	r3, r3, #1
 800e8e6:	a803      	add	r0, sp, #12
 800e8e8:	f7ff fdcc 	bl	800e484 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e8ec:	6863      	ldr	r3, [r4, #4]
 800e8ee:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800e8f2:	4994      	ldr	r1, [pc, #592]	; (800eb44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800e8f4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800e8f8:	a803      	add	r0, sp, #12
 800e8fa:	f7ff fd9b 	bl	800e434 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e8fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e902:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e906:	6863      	ldr	r3, [r4, #4]
 800e908:	42aa      	cmp	r2, r5
 800e90a:	d227      	bcs.n	800e95c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800e90c:	9803      	ldr	r0, [sp, #12]
 800e90e:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800e912:	4410      	add	r0, r2
 800e914:	eba5 0502 	sub.w	r5, r5, r2
 800e918:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e91c:	d10b      	bne.n	800e936 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e91e:	b96a      	cbnz	r2, 800e93c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800e920:	9200      	str	r2, [sp, #0]
 800e922:	4b89      	ldr	r3, [pc, #548]	; (800eb48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800e924:	4a89      	ldr	r2, [pc, #548]	; (800eb4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800e926:	e00f      	b.n	800e948 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800e928:	6823      	ldr	r3, [r4, #0]
 800e92a:	681a      	ldr	r2, [r3, #0]
 800e92c:	4601      	mov	r1, r0
 800e92e:	68d2      	ldr	r2, [r2, #12]
 800e930:	4618      	mov	r0, r3
 800e932:	4790      	blx	r2
 800e934:	e7c9      	b.n	800e8ca <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e936:	2a00      	cmp	r2, #0
 800e938:	f000 8087 	beq.w	800ea4a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800e93c:	3b00      	subs	r3, #0
 800e93e:	bf18      	it	ne
 800e940:	2301      	movne	r3, #1
 800e942:	9300      	str	r3, [sp, #0]
 800e944:	4a82      	ldr	r2, [pc, #520]	; (800eb50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800e946:	4b80      	ldr	r3, [pc, #512]	; (800eb48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800e948:	4629      	mov	r1, r5
 800e94a:	f7fb fce5 	bl	800a318 <snprintf>
 800e94e:	4285      	cmp	r5, r0
 800e950:	bfa2      	ittt	ge
 800e952:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e956:	18c0      	addge	r0, r0, r3
 800e958:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e95c:	7b63      	ldrb	r3, [r4, #13]
 800e95e:	2b00      	cmp	r3, #0
 800e960:	d178      	bne.n	800ea54 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800e962:	4a7c      	ldr	r2, [pc, #496]	; (800eb54 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800e964:	497c      	ldr	r1, [pc, #496]	; (800eb58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800e966:	a803      	add	r0, sp, #12
 800e968:	f7ff fd8c 	bl	800e484 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e96c:	497b      	ldr	r1, [pc, #492]	; (800eb5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800e96e:	a803      	add	r0, sp, #12
 800e970:	f004 fe5a 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800e974:	6863      	ldr	r3, [r4, #4]
 800e976:	059e      	lsls	r6, r3, #22
 800e978:	d403      	bmi.n	800e982 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800e97a:	7a20      	ldrb	r0, [r4, #8]
 800e97c:	f000 fb2c 	bl	800efd8 <PixelType::GetMap(pixel::Type)>
 800e980:	75e0      	strb	r0, [r4, #23]
 800e982:	7de0      	ldrb	r0, [r4, #23]
 800e984:	f000 fb1c 	bl	800efc0 <PixelType::GetMap(pixel::Map)>
 800e988:	6863      	ldr	r3, [r4, #4]
 800e98a:	4975      	ldr	r1, [pc, #468]	; (800eb60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800e98c:	4602      	mov	r2, r0
 800e98e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800e992:	a803      	add	r0, sp, #12
 800e994:	f7ff fd76 	bl	800e484 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e998:	6863      	ldr	r3, [r4, #4]
 800e99a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800e99e:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800e9a2:	d011      	beq.n	800e9c8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800e9a4:	f10d 020b 	add.w	r2, sp, #11
 800e9a8:	7a20      	ldrb	r0, [r4, #8]
 800e9aa:	f10d 010a 	add.w	r1, sp, #10
 800e9ae:	f000 f9a3 	bl	800ecf8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800e9b2:	6863      	ldr	r3, [r4, #4]
 800e9b4:	055d      	lsls	r5, r3, #21
 800e9b6:	bf5c      	itt	pl
 800e9b8:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800e9bc:	7622      	strbpl	r2, [r4, #24]
 800e9be:	0518      	lsls	r0, r3, #20
 800e9c0:	bf5c      	itt	pl
 800e9c2:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800e9c6:	7663      	strbpl	r3, [r4, #25]
 800e9c8:	4966      	ldr	r1, [pc, #408]	; (800eb64 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800e9ca:	a803      	add	r0, sp, #12
 800e9cc:	f004 fe2c 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800e9d0:	7e20      	ldrb	r0, [r4, #24]
 800e9d2:	f000 fb0b 	bl	800efec <PixelType::ConvertTxH(unsigned char)>
 800e9d6:	6862      	ldr	r2, [r4, #4]
 800e9d8:	4963      	ldr	r1, [pc, #396]	; (800eb68 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800e9da:	2302      	movs	r3, #2
 800e9dc:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800e9e0:	a803      	add	r0, sp, #12
 800e9e2:	f7ff fd77 	bl	800e4d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800e9e6:	7e60      	ldrb	r0, [r4, #25]
 800e9e8:	f000 fb00 	bl	800efec <PixelType::ConvertTxH(unsigned char)>
 800e9ec:	6862      	ldr	r2, [r4, #4]
 800e9ee:	495f      	ldr	r1, [pc, #380]	; (800eb6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800e9f0:	2302      	movs	r3, #2
 800e9f2:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800e9f6:	a803      	add	r0, sp, #12
 800e9f8:	f7ff fd6c 	bl	800e4d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800e9fc:	495c      	ldr	r1, [pc, #368]	; (800eb70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800e9fe:	a803      	add	r0, sp, #12
 800ea00:	f004 fe12 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800ea04:	6863      	ldr	r3, [r4, #4]
 800ea06:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800ea0a:	495a      	ldr	r1, [pc, #360]	; (800eb74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800ea0c:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800ea10:	a803      	add	r0, sp, #12
 800ea12:	f7ff fd0f 	bl	800e434 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ea16:	4958      	ldr	r1, [pc, #352]	; (800eb78 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800ea18:	a803      	add	r0, sp, #12
 800ea1a:	f004 fe05 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800ea1e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ea22:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ea26:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800ea2a:	6861      	ldr	r1, [r4, #4]
 800ea2c:	42aa      	cmp	r2, r5
 800ea2e:	d22f      	bcs.n	800ea90 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800ea30:	9803      	ldr	r0, [sp, #12]
 800ea32:	06c9      	lsls	r1, r1, #27
 800ea34:	4410      	add	r0, r2
 800ea36:	eba5 0502 	sub.w	r5, r5, r2
 800ea3a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ea3e:	d418      	bmi.n	800ea72 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1be>
 800ea40:	b9ca      	cbnz	r2, 800ea76 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800ea42:	9300      	str	r3, [sp, #0]
 800ea44:	4a41      	ldr	r2, [pc, #260]	; (800eb4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ea46:	4b4d      	ldr	r3, [pc, #308]	; (800eb7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800ea48:	e018      	b.n	800ea7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800ea4a:	2301      	movs	r3, #1
 800ea4c:	9300      	str	r3, [sp, #0]
 800ea4e:	4a4c      	ldr	r2, [pc, #304]	; (800eb80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ea50:	4b3d      	ldr	r3, [pc, #244]	; (800eb48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ea52:	e779      	b.n	800e948 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800ea54:	ee07 3a90 	vmov	s15, r3
 800ea58:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ea5c:	2301      	movs	r3, #1
 800ea5e:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 800ea62:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800ea66:	493c      	ldr	r1, [pc, #240]	; (800eb58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800ea68:	461a      	mov	r2, r3
 800ea6a:	a803      	add	r0, sp, #12
 800ea6c:	f7ff fd32 	bl	800e4d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ea70:	e77c      	b.n	800e96c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800ea72:	2a00      	cmp	r2, #0
 800ea74:	d05e      	beq.n	800eb34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>
 800ea76:	9300      	str	r3, [sp, #0]
 800ea78:	4a35      	ldr	r2, [pc, #212]	; (800eb50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ea7a:	4b40      	ldr	r3, [pc, #256]	; (800eb7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800ea7c:	4629      	mov	r1, r5
 800ea7e:	f7fb fc4b 	bl	800a318 <snprintf>
 800ea82:	4285      	cmp	r5, r0
 800ea84:	bfa2      	ittt	ge
 800ea86:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ea8a:	18c0      	addge	r0, r0, r3
 800ea8c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ea90:	493c      	ldr	r1, [pc, #240]	; (800eb84 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800ea92:	4e3d      	ldr	r6, [pc, #244]	; (800eb88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800ea94:	a803      	add	r0, sp, #12
 800ea96:	f004 fdc7 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800ea9a:	6863      	ldr	r3, [r4, #4]
 800ea9c:	7ca2      	ldrb	r2, [r4, #18]
 800ea9e:	493b      	ldr	r1, [pc, #236]	; (800eb8c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800eaa0:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800eaa4:	a803      	add	r0, sp, #12
 800eaa6:	f7ff fc9d 	bl	800e3e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800eaaa:	f104 0718 	add.w	r7, r4, #24
 800eaae:	2500      	movs	r5, #0
 800eab0:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800eab4:	6862      	ldr	r2, [r4, #4]
 800eab6:	fa08 f305 	lsl.w	r3, r8, r5
 800eaba:	4393      	bics	r3, r2
 800eabc:	bf0c      	ite	eq
 800eabe:	2301      	moveq	r3, #1
 800eac0:	2300      	movne	r3, #0
 800eac2:	4631      	mov	r1, r6
 800eac4:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800eac8:	a803      	add	r0, sp, #12
 800eaca:	3501      	adds	r5, #1
 800eacc:	f7ff fcb2 	bl	800e434 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ead0:	2d10      	cmp	r5, #16
 800ead2:	f106 0614 	add.w	r6, r6, #20
 800ead6:	d1ed      	bne.n	800eab4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800ead8:	6863      	ldr	r3, [r4, #4]
 800eada:	7ce2      	ldrb	r2, [r4, #19]
 800eadc:	492c      	ldr	r1, [pc, #176]	; (800eb90 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800eade:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800eae2:	a803      	add	r0, sp, #12
 800eae4:	f7ff fc7e 	bl	800e3e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800eae8:	492a      	ldr	r1, [pc, #168]	; (800eb94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800eaea:	a803      	add	r0, sp, #12
 800eaec:	f004 fd9c 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 800eaf0:	6863      	ldr	r3, [r4, #4]
 800eaf2:	7d22      	ldrb	r2, [r4, #20]
 800eaf4:	4928      	ldr	r1, [pc, #160]	; (800eb98 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800eaf6:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800eafa:	a803      	add	r0, sp, #12
 800eafc:	f7ff fc72 	bl	800e3e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800eb00:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800eb04:	b17b      	cbz	r3, 800eb26 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x272>
 800eb06:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eb0a:	9b03      	ldr	r3, [sp, #12]
 800eb0c:	4413      	add	r3, r2
 800eb0e:	227d      	movs	r2, #125	; 0x7d
 800eb10:	f803 2c01 	strb.w	r2, [r3, #-1]
 800eb14:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eb18:	9903      	ldr	r1, [sp, #12]
 800eb1a:	54ca      	strb	r2, [r1, r3]
 800eb1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eb20:	3301      	adds	r3, #1
 800eb22:	f8ad 3012 	strh.w	r3, [sp, #18]
 800eb26:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eb2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800eb2c:	601a      	str	r2, [r3, #0]
 800eb2e:	b006      	add	sp, #24
 800eb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb34:	9300      	str	r3, [sp, #0]
 800eb36:	4a12      	ldr	r2, [pc, #72]	; (800eb80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800eb38:	4b10      	ldr	r3, [pc, #64]	; (800eb7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800eb3a:	e79f      	b.n	800ea7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800eb3c:	080196a9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, ip, pc}
 800eb40:	08019686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip, pc}
 800eb44:	0801968f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, ip, pc}
 800eb48:	08019653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, ip, pc}
 800eb4c:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 800eb50:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 800eb54:	08018645 	stmdaeq	r1, {r0, r2, r6, r9, sl, pc}
 800eb58:	0801961b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, ip, pc}
 800eb5c:	0801864f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, sl, pc}
 800eb60:	08019676 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, ip, pc}
 800eb64:	08018663 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, pc}
 800eb68:	08019699 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, ip, pc}
 800eb6c:	080196a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, ip, pc}
 800eb70:	08018679 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, pc}
 800eb74:	08019643 	stmdaeq	r1, {r0, r1, r6, r9, sl, ip, pc}
 800eb78:	08018682 	stmdaeq	r1, {r1, r7, r9, sl, pc}
 800eb7c:	08019627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, ip, pc}
 800eb80:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}
 800eb84:	08018694 	stmdaeq	r1, {r2, r4, r7, r9, sl, pc}
 800eb88:	08019722 	stmdaeq	r1, {r1, r5, r8, r9, sl, ip, pc}
 800eb8c:	08019664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip, pc}
 800eb90:	08019610 	stmdaeq	r1, {r4, r9, sl, ip, pc}
 800eb94:	080186a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, pc}
 800eb98:	08019636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, ip, pc}

0800eb9c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800eb9c:	b513      	push	{r0, r1, r4, lr}
 800eb9e:	6804      	ldr	r4, [r0, #0]
 800eba0:	b914      	cbnz	r4, 800eba8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800eba2:	601c      	str	r4, [r3, #0]
 800eba4:	b002      	add	sp, #8
 800eba6:	bd10      	pop	{r4, pc}
 800eba8:	9300      	str	r3, [sp, #0]
 800ebaa:	4613      	mov	r3, r2
 800ebac:	460a      	mov	r2, r1
 800ebae:	2100      	movs	r1, #0
 800ebb0:	f7ff fe80 	bl	800e8b4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800ebb4:	e7f6      	b.n	800eba4 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ebb6 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800ebb6:	6843      	ldr	r3, [r0, #4]
 800ebb8:	07da      	lsls	r2, r3, #31
 800ebba:	bf44      	itt	mi
 800ebbc:	7a02      	ldrbmi	r2, [r0, #8]
 800ebbe:	600a      	strmi	r2, [r1, #0]
 800ebc0:	079a      	lsls	r2, r3, #30
 800ebc2:	d505      	bpl.n	800ebd0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800ebc4:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800ebc8:	2a00      	cmp	r2, #0
 800ebca:	bf08      	it	eq
 800ebcc:	22aa      	moveq	r2, #170	; 0xaa
 800ebce:	604a      	str	r2, [r1, #4]
 800ebd0:	059a      	lsls	r2, r3, #22
 800ebd2:	bf44      	itt	mi
 800ebd4:	7dc2      	ldrbmi	r2, [r0, #23]
 800ebd6:	608a      	strmi	r2, [r1, #8]
 800ebd8:	055a      	lsls	r2, r3, #21
 800ebda:	bf44      	itt	mi
 800ebdc:	7e02      	ldrbmi	r2, [r0, #24]
 800ebde:	740a      	strbmi	r2, [r1, #16]
 800ebe0:	051a      	lsls	r2, r3, #20
 800ebe2:	bf44      	itt	mi
 800ebe4:	7e42      	ldrbmi	r2, [r0, #25]
 800ebe6:	744a      	strbmi	r2, [r1, #17]
 800ebe8:	06da      	lsls	r2, r3, #27
 800ebea:	bf44      	itt	mi
 800ebec:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800ebf0:	60ca      	strmi	r2, [r1, #12]
 800ebf2:	069a      	lsls	r2, r3, #26
 800ebf4:	bf44      	itt	mi
 800ebf6:	7c82      	ldrbmi	r2, [r0, #18]
 800ebf8:	748a      	strbmi	r2, [r1, #18]
 800ebfa:	061a      	lsls	r2, r3, #24
 800ebfc:	d504      	bpl.n	800ec08 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800ebfe:	2201      	movs	r2, #1
 800ec00:	750a      	strb	r2, [r1, #20]
 800ec02:	7b42      	ldrb	r2, [r0, #13]
 800ec04:	b102      	cbz	r2, 800ec08 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800ec06:	74ca      	strb	r2, [r1, #19]
 800ec08:	075a      	lsls	r2, r3, #29
 800ec0a:	d50f      	bpl.n	800ec2c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800ec0c:	7ac2      	ldrb	r2, [r0, #11]
 800ec0e:	b510      	push	{r4, lr}
 800ec10:	7b04      	ldrb	r4, [r0, #12]
 800ec12:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800ec16:	858a      	strh	r2, [r1, #44]	; 0x2c
 800ec18:	05da      	lsls	r2, r3, #23
 800ec1a:	bf44      	itt	mi
 800ec1c:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800ec20:	620a      	strmi	r2, [r1, #32]
 800ec22:	065c      	lsls	r4, r3, #25
 800ec24:	bf44      	itt	mi
 800ec26:	7cc3      	ldrbmi	r3, [r0, #19]
 800ec28:	61cb      	strmi	r3, [r1, #28]
 800ec2a:	bd10      	pop	{r4, pc}
 800ec2c:	05da      	lsls	r2, r3, #23
 800ec2e:	bf44      	itt	mi
 800ec30:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800ec34:	620a      	strmi	r2, [r1, #32]
 800ec36:	065b      	lsls	r3, r3, #25
 800ec38:	bf44      	itt	mi
 800ec3a:	7cc3      	ldrbmi	r3, [r0, #19]
 800ec3c:	61cb      	strmi	r3, [r1, #28]
 800ec3e:	4770      	bx	lr

0800ec40 <PixelDmxParams::Dump()>:
 800ec40:	4770      	bx	lr

0800ec42 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800ec42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec44:	4604      	mov	r4, r0
 800ec46:	460e      	mov	r6, r1
 800ec48:	4611      	mov	r1, r2
 800ec4a:	9201      	str	r2, [sp, #4]
 800ec4c:	461d      	mov	r5, r3
 800ec4e:	f000 f861 	bl	800ed14 <PixelConfiguration::Validate(unsigned int&)>
 800ec52:	7d62      	ldrb	r2, [r4, #21]
 800ec54:	b94a      	cbnz	r2, 800ec6a <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800ec56:	6823      	ldr	r3, [r4, #0]
 800ec58:	9901      	ldr	r1, [sp, #4]
 800ec5a:	b11b      	cbz	r3, 800ec64 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x22>
 800ec5c:	3b0b      	subs	r3, #11
 800ec5e:	2b01      	cmp	r3, #1
 800ec60:	bf88      	it	hi
 800ec62:	6022      	strhi	r2, [r4, #0]
 800ec64:	4620      	mov	r0, r4
 800ec66:	f000 f855 	bl	800ed14 <PixelConfiguration::Validate(unsigned int&)>
 800ec6a:	6823      	ldr	r3, [r4, #0]
 800ec6c:	2b07      	cmp	r3, #7
 800ec6e:	bf15      	itete	ne
 800ec70:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800ec74:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800ec78:	23aa      	movne	r3, #170	; 0xaa
 800ec7a:	2380      	moveq	r3, #128	; 0x80
 800ec7c:	e9c5 3100 	strd	r3, r1, [r5]
 800ec80:	6a21      	ldr	r1, [r4, #32]
 800ec82:	bf14      	ite	ne
 800ec84:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800ec88:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800ec8c:	60aa      	str	r2, [r5, #8]
 800ec8e:	6862      	ldr	r2, [r4, #4]
 800ec90:	b109      	cbz	r1, 800ec96 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800ec92:	4291      	cmp	r1, r2
 800ec94:	d900      	bls.n	800ec98 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800ec96:	6222      	str	r2, [r4, #32]
 800ec98:	69e0      	ldr	r0, [r4, #28]
 800ec9a:	6a21      	ldr	r1, [r4, #32]
 800ec9c:	fbb2 f2f1 	udiv	r2, r2, r1
 800eca0:	42b0      	cmp	r0, r6
 800eca2:	bf28      	it	cs
 800eca4:	4630      	movcs	r0, r6
 800eca6:	6262      	str	r2, [r4, #36]	; 0x24
 800eca8:	2e01      	cmp	r6, #1
 800ecaa:	f103 0301 	add.w	r3, r3, #1
 800ecae:	fbb2 f2f3 	udiv	r2, r2, r3
 800ecb2:	f102 0301 	add.w	r3, r2, #1
 800ecb6:	62a3      	str	r3, [r4, #40]	; 0x28
 800ecb8:	bf1c      	itt	ne
 800ecba:	eb03 0380 	addne.w	r3, r3, r0, lsl #2
 800ecbe:	1f5a      	subne	r2, r3, #5
 800ecc0:	61e0      	str	r0, [r4, #28]
 800ecc2:	60ea      	str	r2, [r5, #12]
 800ecc4:	b002      	add	sp, #8
 800ecc6:	bd70      	pop	{r4, r5, r6, pc}

0800ecc8 <PixelDmxConfiguration::Print()>:
 800ecc8:	b510      	push	{r4, lr}
 800ecca:	4604      	mov	r4, r0
 800eccc:	f000 f8b8 	bl	800ee40 <PixelConfiguration::Print()>
 800ecd0:	4806      	ldr	r0, [pc, #24]	; (800ecec <PixelDmxConfiguration::Print()+0x24>)
 800ecd2:	f7fb faf9 	bl	800a2c8 <printf>
 800ecd6:	69e1      	ldr	r1, [r4, #28]
 800ecd8:	4805      	ldr	r0, [pc, #20]	; (800ecf0 <PixelDmxConfiguration::Print()+0x28>)
 800ecda:	f7fb faf5 	bl	800a2c8 <printf>
 800ecde:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800ece2:	4804      	ldr	r0, [pc, #16]	; (800ecf4 <PixelDmxConfiguration::Print()+0x2c>)
 800ece4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ece8:	f7fb baee 	b.w	800a2c8 <printf>
 800ecec:	080186af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, pc}
 800ecf0:	080186c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, pc}
 800ecf4:	080186d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, pc}

0800ecf8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800ecf8:	23c0      	movs	r3, #192	; 0xc0
 800ecfa:	2803      	cmp	r0, #3
 800ecfc:	700b      	strb	r3, [r1, #0]
 800ecfe:	d006      	beq.n	800ed0e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800ed00:	3808      	subs	r0, #8
 800ed02:	2803      	cmp	r0, #3
 800ed04:	bf34      	ite	cc
 800ed06:	23fc      	movcc	r3, #252	; 0xfc
 800ed08:	23f0      	movcs	r3, #240	; 0xf0
 800ed0a:	7013      	strb	r3, [r2, #0]
 800ed0c:	4770      	bx	lr
 800ed0e:	23f8      	movs	r3, #248	; 0xf8
 800ed10:	e7fb      	b.n	800ed0a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800ed14 <PixelConfiguration::Validate(unsigned int&)>:
 800ed14:	b513      	push	{r0, r1, r4, lr}
 800ed16:	4604      	mov	r4, r0
 800ed18:	6800      	ldr	r0, [r0, #0]
 800ed1a:	6863      	ldr	r3, [r4, #4]
 800ed1c:	68a2      	ldr	r2, [r4, #8]
 800ed1e:	2807      	cmp	r0, #7
 800ed20:	d127      	bne.n	800ed72 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800ed22:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ed26:	bf28      	it	cs
 800ed28:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800ed2c:	6063      	str	r3, [r4, #4]
 800ed2e:	2304      	movs	r3, #4
 800ed30:	600b      	str	r3, [r1, #0]
 800ed32:	2301      	movs	r3, #1
 800ed34:	2a06      	cmp	r2, #6
 800ed36:	7563      	strb	r3, [r4, #21]
 800ed38:	d102      	bne.n	800ed40 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800ed3a:	f000 f94d 	bl	800efd8 <PixelType::GetMap(pixel::Type)>
 800ed3e:	60a0      	str	r0, [r4, #8]
 800ed40:	7c63      	ldrb	r3, [r4, #17]
 800ed42:	7c22      	ldrb	r2, [r4, #16]
 800ed44:	6820      	ldr	r0, [r4, #0]
 800ed46:	429a      	cmp	r2, r3
 800ed48:	bf24      	itt	cs
 800ed4a:	2300      	movcs	r3, #0
 800ed4c:	8223      	strhcs	r3, [r4, #16]
 800ed4e:	f10d 0207 	add.w	r2, sp, #7
 800ed52:	f10d 0106 	add.w	r1, sp, #6
 800ed56:	f7ff ffcf 	bl	800ecf8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800ed5a:	7c23      	ldrb	r3, [r4, #16]
 800ed5c:	b913      	cbnz	r3, 800ed64 <PixelConfiguration::Validate(unsigned int&)+0x50>
 800ed5e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800ed62:	7423      	strb	r3, [r4, #16]
 800ed64:	7c63      	ldrb	r3, [r4, #17]
 800ed66:	b913      	cbnz	r3, 800ed6e <PixelConfiguration::Validate(unsigned int&)+0x5a>
 800ed68:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ed6c:	7463      	strb	r3, [r4, #17]
 800ed6e:	4b2a      	ldr	r3, [pc, #168]	; (800ee18 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800ed70:	e01e      	b.n	800edb0 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800ed72:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800ed76:	bf28      	it	cs
 800ed78:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800ed7c:	6063      	str	r3, [r4, #4]
 800ed7e:	2303      	movs	r3, #3
 800ed80:	600b      	str	r3, [r1, #0]
 800ed82:	f1a0 030b 	sub.w	r3, r0, #11
 800ed86:	2b01      	cmp	r3, #1
 800ed88:	d806      	bhi.n	800ed98 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800ed8a:	7ca3      	ldrb	r3, [r4, #18]
 800ed8c:	2b1f      	cmp	r3, #31
 800ed8e:	d83d      	bhi.n	800ee0c <PixelConfiguration::Validate(unsigned int&)+0xf8>
 800ed90:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800ed94:	74a3      	strb	r3, [r4, #18]
 800ed96:	e001      	b.n	800ed9c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800ed98:	2800      	cmp	r0, #0
 800ed9a:	d139      	bne.n	800ee10 <PixelConfiguration::Validate(unsigned int&)+0xfc>
 800ed9c:	2300      	movs	r3, #0
 800ed9e:	2a06      	cmp	r2, #6
 800eda0:	bf08      	it	eq
 800eda2:	60a3      	streq	r3, [r4, #8]
 800eda4:	280d      	cmp	r0, #13
 800eda6:	7563      	strb	r3, [r4, #21]
 800eda8:	68e3      	ldr	r3, [r4, #12]
 800edaa:	d119      	bne.n	800ede0 <PixelConfiguration::Validate(unsigned int&)+0xcc>
 800edac:	b913      	cbnz	r3, 800edb4 <PixelConfiguration::Validate(unsigned int&)+0xa0>
 800edae:	4b1b      	ldr	r3, [pc, #108]	; (800ee1c <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800edb0:	60e3      	str	r3, [r4, #12]
 800edb2:	e003      	b.n	800edbc <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800edb4:	4a1a      	ldr	r2, [pc, #104]	; (800ee20 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800edb6:	4293      	cmp	r3, r2
 800edb8:	d900      	bls.n	800edbc <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800edba:	60e2      	str	r2, [r4, #12]
 800edbc:	7d23      	ldrb	r3, [r4, #20]
 800edbe:	b31b      	cbz	r3, 800ee08 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800edc0:	7ce3      	ldrb	r3, [r4, #19]
 800edc2:	b9ab      	cbnz	r3, 800edf0 <PixelConfiguration::Validate(unsigned int&)+0xdc>
 800edc4:	6822      	ldr	r2, [r4, #0]
 800edc6:	b17a      	cbz	r2, 800ede8 <PixelConfiguration::Validate(unsigned int&)+0xd4>
 800edc8:	f1a2 030b 	sub.w	r3, r2, #11
 800edcc:	2b01      	cmp	r3, #1
 800edce:	d90d      	bls.n	800edec <PixelConfiguration::Validate(unsigned int&)+0xd8>
 800edd0:	4b14      	ldr	r3, [pc, #80]	; (800ee24 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800edd2:	4915      	ldr	r1, [pc, #84]	; (800ee28 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800edd4:	2a0d      	cmp	r2, #13
 800edd6:	bf08      	it	eq
 800edd8:	460b      	moveq	r3, r1
 800edda:	61a3      	str	r3, [r4, #24]
 800eddc:	b002      	add	sp, #8
 800edde:	bd10      	pop	{r4, pc}
 800ede0:	2b00      	cmp	r3, #0
 800ede2:	d0e4      	beq.n	800edae <PixelConfiguration::Validate(unsigned int&)+0x9a>
 800ede4:	4a11      	ldr	r2, [pc, #68]	; (800ee2c <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800ede6:	e7e6      	b.n	800edb6 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800ede8:	4b11      	ldr	r3, [pc, #68]	; (800ee30 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800edea:	e7f6      	b.n	800edda <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800edec:	4b11      	ldr	r3, [pc, #68]	; (800ee34 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800edee:	e7f4      	b.n	800edda <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800edf0:	f1a3 0214 	sub.w	r2, r3, #20
 800edf4:	2a05      	cmp	r2, #5
 800edf6:	d807      	bhi.n	800ee08 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800edf8:	3b15      	subs	r3, #21
 800edfa:	2b04      	cmp	r3, #4
 800edfc:	bf96      	itet	ls
 800edfe:	4a0e      	ldrls	r2, [pc, #56]	; (800ee38 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800ee00:	4b0e      	ldrhi	r3, [pc, #56]	; (800ee3c <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800ee02:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800ee06:	e7e8      	b.n	800edda <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ee08:	4b07      	ldr	r3, [pc, #28]	; (800ee28 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ee0a:	e7e6      	b.n	800edda <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ee0c:	23ff      	movs	r3, #255	; 0xff
 800ee0e:	e7c1      	b.n	800ed94 <PixelConfiguration::Validate(unsigned int&)+0x80>
 800ee10:	280d      	cmp	r0, #13
 800ee12:	d18e      	bne.n	800ed32 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800ee14:	e7c2      	b.n	800ed9c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800ee16:	bf00      	nop
 800ee18:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800ee1c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ee20:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800ee24:	08018ad0 	stmdaeq	r1, {r4, r6, r7, r9, fp, pc}
 800ee28:	080187d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, pc}
 800ee2c:	017d7840 	cmneq	sp, r0, asr #16
 800ee30:	08018dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, pc}
 800ee34:	08018ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, pc}
 800ee38:	080187bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, pc}
 800ee3c:	080188d0 	stmdaeq	r1, {r4, r6, r7, fp, pc}

0800ee40 <PixelConfiguration::Print()>:
 800ee40:	b513      	push	{r0, r1, r4, lr}
 800ee42:	4604      	mov	r4, r0
 800ee44:	4827      	ldr	r0, [pc, #156]	; (800eee4 <PixelConfiguration::Print()+0xa4>)
 800ee46:	f7fb fa3f 	bl	800a2c8 <printf>
 800ee4a:	6820      	ldr	r0, [r4, #0]
 800ee4c:	f000 f860 	bl	800ef10 <PixelType::GetType(pixel::Type)>
 800ee50:	6822      	ldr	r2, [r4, #0]
 800ee52:	4601      	mov	r1, r0
 800ee54:	4824      	ldr	r0, [pc, #144]	; (800eee8 <PixelConfiguration::Print()+0xa8>)
 800ee56:	f7fb fa37 	bl	800a2c8 <printf>
 800ee5a:	6861      	ldr	r1, [r4, #4]
 800ee5c:	4823      	ldr	r0, [pc, #140]	; (800eeec <PixelConfiguration::Print()+0xac>)
 800ee5e:	f7fb fa33 	bl	800a2c8 <printf>
 800ee62:	7d63      	ldrb	r3, [r4, #21]
 800ee64:	2b00      	cmp	r3, #0
 800ee66:	d034      	beq.n	800eed2 <PixelConfiguration::Print()+0x92>
 800ee68:	68a0      	ldr	r0, [r4, #8]
 800ee6a:	f000 f8a9 	bl	800efc0 <PixelType::GetMap(pixel::Map)>
 800ee6e:	68a2      	ldr	r2, [r4, #8]
 800ee70:	4601      	mov	r1, r0
 800ee72:	481f      	ldr	r0, [pc, #124]	; (800eef0 <PixelConfiguration::Print()+0xb0>)
 800ee74:	f7fb fa28 	bl	800a2c8 <printf>
 800ee78:	7c20      	ldrb	r0, [r4, #16]
 800ee7a:	f000 f8b7 	bl	800efec <PixelType::ConvertTxH(unsigned char)>
 800ee7e:	ee10 0a10 	vmov	r0, s0
 800ee82:	f7fa f887 	bl	8008f94 <__aeabi_f2d>
 800ee86:	460b      	mov	r3, r1
 800ee88:	7c21      	ldrb	r1, [r4, #16]
 800ee8a:	9100      	str	r1, [sp, #0]
 800ee8c:	4602      	mov	r2, r0
 800ee8e:	4819      	ldr	r0, [pc, #100]	; (800eef4 <PixelConfiguration::Print()+0xb4>)
 800ee90:	f7fb fa1a 	bl	800a2c8 <printf>
 800ee94:	7c60      	ldrb	r0, [r4, #17]
 800ee96:	f000 f8a9 	bl	800efec <PixelType::ConvertTxH(unsigned char)>
 800ee9a:	ee10 0a10 	vmov	r0, s0
 800ee9e:	f7fa f879 	bl	8008f94 <__aeabi_f2d>
 800eea2:	460b      	mov	r3, r1
 800eea4:	7c61      	ldrb	r1, [r4, #17]
 800eea6:	9100      	str	r1, [sp, #0]
 800eea8:	4602      	mov	r2, r0
 800eeaa:	4813      	ldr	r0, [pc, #76]	; (800eef8 <PixelConfiguration::Print()+0xb8>)
 800eeac:	f7fb fa0c 	bl	800a2c8 <printf>
 800eeb0:	7d21      	ldrb	r1, [r4, #20]
 800eeb2:	4a12      	ldr	r2, [pc, #72]	; (800eefc <PixelConfiguration::Print()+0xbc>)
 800eeb4:	4b12      	ldr	r3, [pc, #72]	; (800ef00 <PixelConfiguration::Print()+0xc0>)
 800eeb6:	4813      	ldr	r0, [pc, #76]	; (800ef04 <PixelConfiguration::Print()+0xc4>)
 800eeb8:	2900      	cmp	r1, #0
 800eeba:	bf14      	ite	ne
 800eebc:	4611      	movne	r1, r2
 800eebe:	4619      	moveq	r1, r3
 800eec0:	f7fb fa02 	bl	800a2c8 <printf>
 800eec4:	68e1      	ldr	r1, [r4, #12]
 800eec6:	4810      	ldr	r0, [pc, #64]	; (800ef08 <PixelConfiguration::Print()+0xc8>)
 800eec8:	b002      	add	sp, #8
 800eeca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eece:	f7fb b9fb 	b.w	800a2c8 <printf>
 800eed2:	6823      	ldr	r3, [r4, #0]
 800eed4:	3b0b      	subs	r3, #11
 800eed6:	2b01      	cmp	r3, #1
 800eed8:	d8ea      	bhi.n	800eeb0 <PixelConfiguration::Print()+0x70>
 800eeda:	7ca1      	ldrb	r1, [r4, #18]
 800eedc:	480b      	ldr	r0, [pc, #44]	; (800ef0c <PixelConfiguration::Print()+0xcc>)
 800eede:	f7fb f9f3 	bl	800a2c8 <printf>
 800eee2:	e7e5      	b.n	800eeb0 <PixelConfiguration::Print()+0x70>
 800eee4:	08018702 	stmdaeq	r1, {r1, r8, r9, sl, pc}
 800eee8:	08018717 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, sl, pc}
 800eeec:	0801872b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, pc}
 800eef0:	0801873a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, pc}
 800eef4:	0801874e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, pc}
 800eef8:	08018766 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sl, pc}
 800eefc:	080186fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, pc}
 800ef00:	080186ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, pc}
 800ef04:	08018795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, pc}
 800ef08:	080187ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, pc}
 800ef0c:	0801877e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sl, pc}

0800ef10 <PixelType::GetType(pixel::Type)>:
 800ef10:	280d      	cmp	r0, #13
 800ef12:	bfda      	itte	le
 800ef14:	4b02      	ldrle	r3, [pc, #8]	; (800ef20 <PixelType::GetType(pixel::Type)+0x10>)
 800ef16:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800ef1a:	4802      	ldrgt	r0, [pc, #8]	; (800ef24 <PixelType::GetType(pixel::Type)+0x14>)
 800ef1c:	4770      	bx	lr
 800ef1e:	bf00      	nop
 800ef20:	08019004 	stmdaeq	r1, {r2, ip, pc}
 800ef24:	08018fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp, pc}

0800ef28 <PixelType::GetType(char const*)>:
 800ef28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef2a:	4c10      	ldr	r4, [pc, #64]	; (800ef6c <PixelType::GetType(char const*)+0x44>)
 800ef2c:	2300      	movs	r3, #0
 800ef2e:	1e47      	subs	r7, r0, #1
 800ef30:	1e66      	subs	r6, r4, #1
 800ef32:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 800ef36:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
 800ef3a:	2a19      	cmp	r2, #25
 800ef3c:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800ef40:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800ef44:	460d      	mov	r5, r1
 800ef46:	bf98      	it	ls
 800ef48:	f101 0520 	addls.w	r5, r1, #32
 800ef4c:	f1bc 0f19 	cmp.w	ip, #25
 800ef50:	bf98      	it	ls
 800ef52:	3220      	addls	r2, #32
 800ef54:	42aa      	cmp	r2, r5
 800ef56:	d005      	beq.n	800ef64 <PixelType::GetType(char const*)+0x3c>
 800ef58:	3301      	adds	r3, #1
 800ef5a:	2b0e      	cmp	r3, #14
 800ef5c:	f104 0408 	add.w	r4, r4, #8
 800ef60:	d1e5      	bne.n	800ef2e <PixelType::GetType(char const*)+0x6>
 800ef62:	e001      	b.n	800ef68 <PixelType::GetType(char const*)+0x40>
 800ef64:	2900      	cmp	r1, #0
 800ef66:	d1e4      	bne.n	800ef32 <PixelType::GetType(char const*)+0xa>
 800ef68:	4618      	mov	r0, r3
 800ef6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef6c:	08019004 	stmdaeq	r1, {r2, ip, pc}

0800ef70 <PixelType::GetMap(char const*)>:
 800ef70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef72:	4a12      	ldr	r2, [pc, #72]	; (800efbc <PixelType::GetMap(char const*)+0x4c>)
 800ef74:	2300      	movs	r3, #0
 800ef76:	1e55      	subs	r5, r2, #1
 800ef78:	1e46      	subs	r6, r0, #1
 800ef7a:	f102 0c02 	add.w	ip, r2, #2
 800ef7e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800ef82:	f1a1 0441 	sub.w	r4, r1, #65	; 0x41
 800ef86:	2c19      	cmp	r4, #25
 800ef88:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800ef8c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800ef90:	460f      	mov	r7, r1
 800ef92:	bf98      	it	ls
 800ef94:	f101 0720 	addls.w	r7, r1, #32
 800ef98:	f1be 0f19 	cmp.w	lr, #25
 800ef9c:	bf98      	it	ls
 800ef9e:	3420      	addls	r4, #32
 800efa0:	42bc      	cmp	r4, r7
 800efa2:	d006      	beq.n	800efb2 <PixelType::GetMap(char const*)+0x42>
 800efa4:	3301      	adds	r3, #1
 800efa6:	2b06      	cmp	r3, #6
 800efa8:	f102 0204 	add.w	r2, r2, #4
 800efac:	d1e3      	bne.n	800ef76 <PixelType::GetMap(char const*)+0x6>
 800efae:	4618      	mov	r0, r3
 800efb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efb2:	2900      	cmp	r1, #0
 800efb4:	d0fb      	beq.n	800efae <PixelType::GetMap(char const*)+0x3e>
 800efb6:	4565      	cmp	r5, ip
 800efb8:	d1e1      	bne.n	800ef7e <PixelType::GetMap(char const*)+0xe>
 800efba:	e7f8      	b.n	800efae <PixelType::GetMap(char const*)+0x3e>
 800efbc:	08018fec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sl, fp, pc}

0800efc0 <PixelType::GetMap(pixel::Map)>:
 800efc0:	2805      	cmp	r0, #5
 800efc2:	bfda      	itte	le
 800efc4:	4b02      	ldrle	r3, [pc, #8]	; (800efd0 <PixelType::GetMap(pixel::Map)+0x10>)
 800efc6:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800efca:	4802      	ldrgt	r0, [pc, #8]	; (800efd4 <PixelType::GetMap(pixel::Map)+0x14>)
 800efcc:	4770      	bx	lr
 800efce:	bf00      	nop
 800efd0:	08018fec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sl, fp, pc}
 800efd4:	08018fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, pc}

0800efd8 <PixelType::GetMap(pixel::Type)>:
 800efd8:	3801      	subs	r0, #1
 800efda:	2809      	cmp	r0, #9
 800efdc:	bf9a      	itte	ls
 800efde:	4b02      	ldrls	r3, [pc, #8]	; (800efe8 <PixelType::GetMap(pixel::Type)+0x10>)
 800efe0:	5618      	ldrsbls	r0, [r3, r0]
 800efe2:	2002      	movhi	r0, #2
 800efe4:	4770      	bx	lr
 800efe6:	bf00      	nop
 800efe8:	08018fe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, pc}

0800efec <PixelType::ConvertTxH(unsigned char)>:
 800efec:	28f0      	cmp	r0, #240	; 0xf0
 800efee:	d017      	beq.n	800f020 <PixelType::ConvertTxH(unsigned char)+0x34>
 800eff0:	d80c      	bhi.n	800f00c <PixelType::ConvertTxH(unsigned char)+0x20>
 800eff2:	28c0      	cmp	r0, #192	; 0xc0
 800eff4:	d017      	beq.n	800f026 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800eff6:	28e0      	cmp	r0, #224	; 0xe0
 800eff8:	d018      	beq.n	800f02c <PixelType::ConvertTxH(unsigned char)+0x40>
 800effa:	ed9f 0a11 	vldr	s0, [pc, #68]	; 800f040 <PixelType::ConvertTxH(unsigned char)+0x54>
 800effe:	2880      	cmp	r0, #128	; 0x80
 800f000:	eef4 7a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
 800f004:	bf08      	it	eq
 800f006:	eeb0 0a67 	vmoveq.f32	s0, s15
 800f00a:	4770      	bx	lr
 800f00c:	28fc      	cmp	r0, #252	; 0xfc
 800f00e:	d010      	beq.n	800f032 <PixelType::ConvertTxH(unsigned char)+0x46>
 800f010:	28fe      	cmp	r0, #254	; 0xfe
 800f012:	d011      	beq.n	800f038 <PixelType::ConvertTxH(unsigned char)+0x4c>
 800f014:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 800f040 <PixelType::ConvertTxH(unsigned char)+0x54>
 800f018:	28f8      	cmp	r0, #248	; 0xf8
 800f01a:	eef6 7a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
 800f01e:	e7f1      	b.n	800f004 <PixelType::ConvertTxH(unsigned char)+0x18>
 800f020:	eeb6 0a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
 800f024:	4770      	bx	lr
 800f026:	eeb5 0a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
 800f02a:	4770      	bx	lr
 800f02c:	eeb5 0a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
 800f030:	4770      	bx	lr
 800f032:	eeb6 0a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
 800f036:	4770      	bx	lr
 800f038:	ed9f 0a02 	vldr	s0, [pc, #8]	; 800f044 <PixelType::ConvertTxH(unsigned char)+0x58>
 800f03c:	4770      	bx	lr
 800f03e:	bf00      	nop
 800f040:	00000000 	andeq	r0, r0, r0
 800f044:	3f8c0000 	svccc	0x008c0000

0800f048 <PixelType::ConvertTxH(float)>:
 800f048:	eddf 7a24 	vldr	s15, [pc, #144]	; 800f0dc <PixelType::ConvertTxH(float)+0x94>
 800f04c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f054:	d433      	bmi.n	800f0be <PixelType::ConvertTxH(float)+0x76>
 800f056:	eef4 7a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
 800f05a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f05e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f062:	d42e      	bmi.n	800f0c2 <PixelType::ConvertTxH(float)+0x7a>
 800f064:	eef5 7a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
 800f068:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f06c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f070:	d429      	bmi.n	800f0c6 <PixelType::ConvertTxH(float)+0x7e>
 800f072:	eddf 7a1b 	vldr	s15, [pc, #108]	; 800f0e0 <PixelType::ConvertTxH(float)+0x98>
 800f076:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f07a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f07e:	d424      	bmi.n	800f0ca <PixelType::ConvertTxH(float)+0x82>
 800f080:	eddf 7a18 	vldr	s15, [pc, #96]	; 800f0e4 <PixelType::ConvertTxH(float)+0x9c>
 800f084:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f08c:	d41f      	bmi.n	800f0ce <PixelType::ConvertTxH(float)+0x86>
 800f08e:	eddf 7a16 	vldr	s15, [pc, #88]	; 800f0e8 <PixelType::ConvertTxH(float)+0xa0>
 800f092:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f09a:	d41a      	bmi.n	800f0d2 <PixelType::ConvertTxH(float)+0x8a>
 800f09c:	eddf 7a13 	vldr	s15, [pc, #76]	; 800f0ec <PixelType::ConvertTxH(float)+0xa4>
 800f0a0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0a8:	d415      	bmi.n	800f0d6 <PixelType::ConvertTxH(float)+0x8e>
 800f0aa:	eddf 7a11 	vldr	s15, [pc, #68]	; 800f0f0 <PixelType::ConvertTxH(float)+0xa8>
 800f0ae:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f0b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0b6:	bf4c      	ite	mi
 800f0b8:	20fe      	movmi	r0, #254	; 0xfe
 800f0ba:	2000      	movpl	r0, #0
 800f0bc:	4770      	bx	lr
 800f0be:	2000      	movs	r0, #0
 800f0c0:	4770      	bx	lr
 800f0c2:	2080      	movs	r0, #128	; 0x80
 800f0c4:	4770      	bx	lr
 800f0c6:	20c0      	movs	r0, #192	; 0xc0
 800f0c8:	4770      	bx	lr
 800f0ca:	20e0      	movs	r0, #224	; 0xe0
 800f0cc:	4770      	bx	lr
 800f0ce:	20f0      	movs	r0, #240	; 0xf0
 800f0d0:	4770      	bx	lr
 800f0d2:	20f8      	movs	r0, #248	; 0xf8
 800f0d4:	4770      	bx	lr
 800f0d6:	20fc      	movs	r0, #252	; 0xfc
 800f0d8:	4770      	bx	lr
 800f0da:	bf00      	nop
 800f0dc:	3da00000 	stccc	0, cr0, [r0]
 800f0e0:	3f0c0000 	svccc	0x000c0000
 800f0e4:	3f340000 	svccc	0x00340000
 800f0e8:	3f5c0000 	svccc	0x005c0000
 800f0ec:	3f820000 	svccc	0x00820000
 800f0f0:	3f960000 	svccc	0x00960000

0800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800f0f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f0f6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800f0fa:	f3c2 2607 	ubfx	r6, r2, #8, #8
 800f0fe:	b2d4      	uxtb	r4, r2
 800f100:	4a10      	ldr	r2, [pc, #64]	; (800f144 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 800f102:	4605      	mov	r5, r0
 800f104:	6810      	ldr	r0, [r2, #0]
 800f106:	6802      	ldr	r2, [r0, #0]
 800f108:	2a07      	cmp	r2, #7
 800f10a:	d007      	beq.n	800f11c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 800f10c:	460a      	mov	r2, r1
 800f10e:	e9cd 6400 	strd	r6, r4, [sp]
 800f112:	4629      	mov	r1, r5
 800f114:	f000 ff80 	bl	8010018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f118:	b004      	add	sp, #16
 800f11a:	bd70      	pop	{r4, r5, r6, pc}
 800f11c:	42b3      	cmp	r3, r6
 800f11e:	f04f 0200 	mov.w	r2, #0
 800f122:	d10a      	bne.n	800f13a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800f124:	42a3      	cmp	r3, r4
 800f126:	d108      	bne.n	800f13a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800f128:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f12c:	9200      	str	r2, [sp, #0]
 800f12e:	4613      	mov	r3, r2
 800f130:	460a      	mov	r2, r1
 800f132:	4629      	mov	r1, r5
 800f134:	f000 fff2 	bl	801011c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f138:	e7ee      	b.n	800f118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800f13a:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800f13e:	9600      	str	r6, [sp, #0]
 800f140:	e7f6      	b.n	800f130 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 800f142:	bf00      	nop
 800f144:	200013a4 	andcs	r1, r0, r4, lsr #7

0800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800f148:	b570      	push	{r4, r5, r6, lr}
 800f14a:	4d07      	ldr	r5, [pc, #28]	; (800f168 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800f14c:	4606      	mov	r6, r0
 800f14e:	2400      	movs	r4, #0
 800f150:	682b      	ldr	r3, [r5, #0]
 800f152:	429c      	cmp	r4, r3
 800f154:	d300      	bcc.n	800f158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800f156:	bd70      	pop	{r4, r5, r6, pc}
 800f158:	4621      	mov	r1, r4
 800f15a:	2200      	movs	r2, #0
 800f15c:	4630      	mov	r0, r6
 800f15e:	f7ff ffc9 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f162:	3401      	adds	r4, #1
 800f164:	e7f4      	b.n	800f150 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800f166:	bf00      	nop
 800f168:	200013a0 	andcs	r1, r0, r0, lsr #7

0800f16c <PixelPatterns::PixelPatterns(unsigned int)>:
 800f16c:	4b0c      	ldr	r3, [pc, #48]	; (800f1a0 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800f16e:	4a0d      	ldr	r2, [pc, #52]	; (800f1a4 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800f170:	681b      	ldr	r3, [r3, #0]
 800f172:	b510      	push	{r4, lr}
 800f174:	2910      	cmp	r1, #16
 800f176:	6013      	str	r3, [r2, #0]
 800f178:	4a0b      	ldr	r2, [pc, #44]	; (800f1a8 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800f17a:	bf28      	it	cs
 800f17c:	2110      	movcs	r1, #16
 800f17e:	6011      	str	r1, [r2, #0]
 800f180:	685a      	ldr	r2, [r3, #4]
 800f182:	4b0a      	ldr	r3, [pc, #40]	; (800f1ac <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800f184:	601a      	str	r2, [r3, #0]
 800f186:	4b0a      	ldr	r3, [pc, #40]	; (800f1b0 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800f188:	681c      	ldr	r4, [r3, #0]
 800f18a:	4b0a      	ldr	r3, [pc, #40]	; (800f1b4 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800f18c:	2210      	movs	r2, #16
 800f18e:	2100      	movs	r1, #0
 800f190:	3a01      	subs	r2, #1
 800f192:	61d9      	str	r1, [r3, #28]
 800f194:	601c      	str	r4, [r3, #0]
 800f196:	6199      	str	r1, [r3, #24]
 800f198:	f103 0320 	add.w	r3, r3, #32
 800f19c:	d1f8      	bne.n	800f190 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800f19e:	bd10      	pop	{r4, pc}
 800f1a0:	200013b0 			; <UNDEFINED> instruction: 0x200013b0
 800f1a4:	200013a4 	andcs	r1, r0, r4, lsr #7
 800f1a8:	20001398 	mulcs	r0, r8, r3
 800f1ac:	200013a0 	andcs	r1, r0, r0, lsr #7
 800f1b0:	2000fedc 	ldrdcs	pc, [r0], -ip
 800f1b4:	20001198 	mulcs	r0, r8, r1

0800f1b8 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800f1b8:	2805      	cmp	r0, #5
 800f1ba:	bfdd      	ittte	le
 800f1bc:	4b02      	ldrle	r3, [pc, #8]	; (800f1c8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800f1be:	220e      	movle	r2, #14
 800f1c0:	fb02 3000 	mlale	r0, r2, r0, r3
 800f1c4:	4801      	ldrgt	r0, [pc, #4]	; (800f1cc <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800f1c6:	4770      	bx	lr
 800f1c8:	08019074 	stmdaeq	r1, {r2, r4, r5, r6, ip, pc}
 800f1cc:	08018fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp, pc}

0800f1d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f1d0:	b5e0      	push	{r5, r6, r7, lr}
 800f1d2:	4608      	mov	r0, r1
 800f1d4:	460d      	mov	r5, r1
 800f1d6:	4617      	mov	r7, r2
 800f1d8:	461e      	mov	r6, r3
 800f1da:	f7ff ffb5 	bl	800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f1de:	4906      	ldr	r1, [pc, #24]	; (800f1f8 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800f1e0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f1e4:	2301      	movs	r3, #1
 800f1e6:	61cb      	str	r3, [r1, #28]
 800f1e8:	22ff      	movs	r2, #255	; 0xff
 800f1ea:	2300      	movs	r3, #0
 800f1ec:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800f1f0:	604f      	str	r7, [r1, #4]
 800f1f2:	618e      	str	r6, [r1, #24]
 800f1f4:	bde0      	pop	{r5, r6, r7, pc}
 800f1f6:	bf00      	nop
 800f1f8:	20001198 	mulcs	r0, r8, r1

0800f1fc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f1fc:	b5e0      	push	{r5, r6, r7, lr}
 800f1fe:	4608      	mov	r0, r1
 800f200:	460d      	mov	r5, r1
 800f202:	461e      	mov	r6, r3
 800f204:	4617      	mov	r7, r2
 800f206:	f7ff ff9f 	bl	800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f20a:	4908      	ldr	r1, [pc, #32]	; (800f22c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f20c:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f210:	2302      	movs	r3, #2
 800f212:	61cb      	str	r3, [r1, #28]
 800f214:	9b04      	ldr	r3, [sp, #16]
 800f216:	604b      	str	r3, [r1, #4]
 800f218:	4b05      	ldr	r3, [pc, #20]	; (800f230 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800f21a:	681b      	ldr	r3, [r3, #0]
 800f21c:	610b      	str	r3, [r1, #16]
 800f21e:	2300      	movs	r3, #0
 800f220:	614b      	str	r3, [r1, #20]
 800f222:	9b05      	ldr	r3, [sp, #20]
 800f224:	618b      	str	r3, [r1, #24]
 800f226:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800f22a:	bde0      	pop	{r5, r6, r7, pc}
 800f22c:	20001198 	mulcs	r0, r8, r1
 800f230:	200013a0 	andcs	r1, r0, r0, lsr #7

0800f234 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f234:	b5e0      	push	{r5, r6, r7, lr}
 800f236:	4608      	mov	r0, r1
 800f238:	460d      	mov	r5, r1
 800f23a:	461f      	mov	r7, r3
 800f23c:	4616      	mov	r6, r2
 800f23e:	f7ff ff83 	bl	800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f242:	4907      	ldr	r1, [pc, #28]	; (800f260 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800f244:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f248:	2303      	movs	r3, #3
 800f24a:	61cb      	str	r3, [r1, #28]
 800f24c:	4b05      	ldr	r3, [pc, #20]	; (800f264 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f24e:	604f      	str	r7, [r1, #4]
 800f250:	681b      	ldr	r3, [r3, #0]
 800f252:	610b      	str	r3, [r1, #16]
 800f254:	2300      	movs	r3, #0
 800f256:	614b      	str	r3, [r1, #20]
 800f258:	9b04      	ldr	r3, [sp, #16]
 800f25a:	608e      	str	r6, [r1, #8]
 800f25c:	618b      	str	r3, [r1, #24]
 800f25e:	bde0      	pop	{r5, r6, r7, pc}
 800f260:	20001198 	mulcs	r0, r8, r1
 800f264:	200013a0 	andcs	r1, r0, r0, lsr #7

0800f268 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800f268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f26a:	4608      	mov	r0, r1
 800f26c:	460d      	mov	r5, r1
 800f26e:	461f      	mov	r7, r3
 800f270:	4616      	mov	r6, r2
 800f272:	4c14      	ldr	r4, [pc, #80]	; (800f2c4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800f274:	f7ff ff68 	bl	800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f278:	4913      	ldr	r1, [pc, #76]	; (800f2c8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800f27a:	6820      	ldr	r0, [r4, #0]
 800f27c:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f280:	2304      	movs	r3, #4
 800f282:	61cb      	str	r3, [r1, #28]
 800f284:	1e43      	subs	r3, r0, #1
 800f286:	005b      	lsls	r3, r3, #1
 800f288:	b29b      	uxth	r3, r3
 800f28a:	4d10      	ldr	r5, [pc, #64]	; (800f2cc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800f28c:	610b      	str	r3, [r1, #16]
 800f28e:	2300      	movs	r3, #0
 800f290:	614b      	str	r3, [r1, #20]
 800f292:	682b      	ldr	r3, [r5, #0]
 800f294:	604f      	str	r7, [r1, #4]
 800f296:	608e      	str	r6, [r1, #8]
 800f298:	b97b      	cbnz	r3, 800f2ba <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800f29a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800f29e:	4298      	cmp	r0, r3
 800f2a0:	bf34      	ite	cc
 800f2a2:	0080      	lslcc	r0, r0, #2
 800f2a4:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800f2a8:	f004 ffac 	bl	8014204 <operator new[](unsigned int)>
 800f2ac:	6823      	ldr	r3, [r4, #0]
 800f2ae:	6028      	str	r0, [r5, #0]
 800f2b0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800f2b4:	2200      	movs	r2, #0
 800f2b6:	4298      	cmp	r0, r3
 800f2b8:	d100      	bne.n	800f2bc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800f2ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f2bc:	f840 2b04 	str.w	r2, [r0], #4
 800f2c0:	e7f9      	b.n	800f2b6 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800f2c2:	bf00      	nop
 800f2c4:	200013a0 	andcs	r1, r0, r0, lsr #7
 800f2c8:	20001198 	mulcs	r0, r8, r1
 800f2cc:	2000139c 	mulcs	r0, ip, r3

0800f2d0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f2d0:	b5e0      	push	{r5, r6, r7, lr}
 800f2d2:	4608      	mov	r0, r1
 800f2d4:	460d      	mov	r5, r1
 800f2d6:	461e      	mov	r6, r3
 800f2d8:	4617      	mov	r7, r2
 800f2da:	f7ff ff35 	bl	800f148 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f2de:	4908      	ldr	r1, [pc, #32]	; (800f300 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f2e0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f2e4:	2305      	movs	r3, #5
 800f2e6:	61cb      	str	r3, [r1, #28]
 800f2e8:	9b05      	ldr	r3, [sp, #20]
 800f2ea:	604b      	str	r3, [r1, #4]
 800f2ec:	9b04      	ldr	r3, [sp, #16]
 800f2ee:	610b      	str	r3, [r1, #16]
 800f2f0:	2300      	movs	r3, #0
 800f2f2:	614b      	str	r3, [r1, #20]
 800f2f4:	9b06      	ldr	r3, [sp, #24]
 800f2f6:	618b      	str	r3, [r1, #24]
 800f2f8:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800f2fc:	bde0      	pop	{r5, r6, r7, pc}
 800f2fe:	bf00      	nop
 800f300:	20001198 	mulcs	r0, r8, r1

0800f304 <PixelPatterns::Wheel(unsigned char)>:
 800f304:	43cb      	mvns	r3, r1
 800f306:	b2db      	uxtb	r3, r3
 800f308:	2b54      	cmp	r3, #84	; 0x54
 800f30a:	d809      	bhi.n	800f320 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800f30c:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800f310:	b2db      	uxtb	r3, r3
 800f312:	1e5a      	subs	r2, r3, #1
 800f314:	4258      	negs	r0, r3
 800f316:	b2d2      	uxtb	r2, r2
 800f318:	b2c0      	uxtb	r0, r0
 800f31a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800f31e:	4770      	bx	lr
 800f320:	2ba9      	cmp	r3, #169	; 0xa9
 800f322:	d809      	bhi.n	800f338 <PixelPatterns::Wheel(unsigned char)+0x34>
 800f324:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800f328:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f32c:	b2c9      	uxtb	r1, r1
 800f32e:	43c8      	mvns	r0, r1
 800f330:	b2c0      	uxtb	r0, r0
 800f332:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800f336:	4770      	bx	lr
 800f338:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800f33c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f340:	b2c9      	uxtb	r1, r1
 800f342:	0208      	lsls	r0, r1, #8
 800f344:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800f348:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800f34c:	4770      	bx	lr
	...

0800f350 <PixelPatterns::Increment(unsigned int)>:
 800f350:	4a0d      	ldr	r2, [pc, #52]	; (800f388 <PixelPatterns::Increment(unsigned int)+0x38>)
 800f352:	b510      	push	{r4, lr}
 800f354:	014c      	lsls	r4, r1, #5
 800f356:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800f35a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800f35e:	b930      	cbnz	r0, 800f36e <PixelPatterns::Increment(unsigned int)+0x1e>
 800f360:	690a      	ldr	r2, [r1, #16]
 800f362:	3301      	adds	r3, #1
 800f364:	4293      	cmp	r3, r2
 800f366:	bf18      	it	ne
 800f368:	4618      	movne	r0, r3
 800f36a:	6148      	str	r0, [r1, #20]
 800f36c:	bd10      	pop	{r4, pc}
 800f36e:	b92b      	cbnz	r3, 800f37c <PixelPatterns::Increment(unsigned int)+0x2c>
 800f370:	4422      	add	r2, r4
 800f372:	6913      	ldr	r3, [r2, #16]
 800f374:	3b01      	subs	r3, #1
 800f376:	b29b      	uxth	r3, r3
 800f378:	6153      	str	r3, [r2, #20]
 800f37a:	e7f7      	b.n	800f36c <PixelPatterns::Increment(unsigned int)+0x1c>
 800f37c:	3b01      	subs	r3, #1
 800f37e:	614b      	str	r3, [r1, #20]
 800f380:	2b00      	cmp	r3, #0
 800f382:	d1f3      	bne.n	800f36c <PixelPatterns::Increment(unsigned int)+0x1c>
 800f384:	e7f4      	b.n	800f370 <PixelPatterns::Increment(unsigned int)+0x20>
 800f386:	bf00      	nop
 800f388:	20001198 	mulcs	r0, r8, r1

0800f38c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800f38c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f390:	4b12      	ldr	r3, [pc, #72]	; (800f3dc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800f392:	f8df 804c 	ldr.w	r8, [pc, #76]	; 800f3e0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800f396:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f39a:	4605      	mov	r5, r0
 800f39c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800f3a0:	460c      	mov	r4, r1
 800f3a2:	2700      	movs	r7, #0
 800f3a4:	f8d8 3000 	ldr.w	r3, [r8]
 800f3a8:	b2be      	uxth	r6, r7
 800f3aa:	42b3      	cmp	r3, r6
 800f3ac:	f107 0701 	add.w	r7, r7, #1
 800f3b0:	d805      	bhi.n	800f3be <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800f3b2:	4621      	mov	r1, r4
 800f3b4:	4628      	mov	r0, r5
 800f3b6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f3ba:	f7ff bfc9 	b.w	800f350 <PixelPatterns::Increment(unsigned int)>
 800f3be:	0231      	lsls	r1, r6, #8
 800f3c0:	fbb1 f1f3 	udiv	r1, r1, r3
 800f3c4:	4449      	add	r1, r9
 800f3c6:	b2c9      	uxtb	r1, r1
 800f3c8:	4628      	mov	r0, r5
 800f3ca:	f7ff ff9b 	bl	800f304 <PixelPatterns::Wheel(unsigned char)>
 800f3ce:	4631      	mov	r1, r6
 800f3d0:	4602      	mov	r2, r0
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	f7ff fe8e 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f3d8:	e7e4      	b.n	800f3a4 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800f3da:	bf00      	nop
 800f3dc:	20001198 	mulcs	r0, r8, r1
 800f3e0:	200013a0 	andcs	r1, r0, r0, lsr #7

0800f3e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800f3e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3e8:	4b13      	ldr	r3, [pc, #76]	; (800f438 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800f3ea:	4e14      	ldr	r6, [pc, #80]	; (800f43c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800f3ec:	f8df a050 	ldr.w	sl, [pc, #80]	; 800f440 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800f3f0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f3f4:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800f3f8:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800f3fc:	4605      	mov	r5, r0
 800f3fe:	460c      	mov	r4, r1
 800f400:	f04f 0b00 	mov.w	fp, #0
 800f404:	6833      	ldr	r3, [r6, #0]
 800f406:	fa1f f18b 	uxth.w	r1, fp
 800f40a:	428b      	cmp	r3, r1
 800f40c:	d805      	bhi.n	800f41a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800f40e:	4621      	mov	r1, r4
 800f410:	4628      	mov	r0, r5
 800f412:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f416:	f7ff bf9b 	b.w	800f350 <PixelPatterns::Increment(unsigned int)>
 800f41a:	eb09 0301 	add.w	r3, r9, r1
 800f41e:	fb0a f303 	mul.w	r3, sl, r3
 800f422:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800f426:	bf94      	ite	ls
 800f428:	463a      	movls	r2, r7
 800f42a:	4642      	movhi	r2, r8
 800f42c:	4620      	mov	r0, r4
 800f42e:	f7ff fe61 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f432:	f10b 0b01 	add.w	fp, fp, #1
 800f436:	e7e5      	b.n	800f404 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800f438:	20001198 	mulcs	r0, r8, r1
 800f43c:	200013a0 	andcs	r1, r0, r0, lsr #7
 800f440:	aaaaaaab 	bge	6ab9ef4 <__stack_size+0x6ab5ef4>

0800f444 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800f444:	b538      	push	{r3, r4, r5, lr}
 800f446:	4b08      	ldr	r3, [pc, #32]	; (800f468 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800f448:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f44c:	460c      	mov	r4, r1
 800f44e:	4605      	mov	r5, r0
 800f450:	6959      	ldr	r1, [r3, #20]
 800f452:	689a      	ldr	r2, [r3, #8]
 800f454:	4620      	mov	r0, r4
 800f456:	f7ff fe4d 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f45a:	4621      	mov	r1, r4
 800f45c:	4628      	mov	r0, r5
 800f45e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f462:	f7ff bf75 	b.w	800f350 <PixelPatterns::Increment(unsigned int)>
 800f466:	bf00      	nop
 800f468:	20001198 	mulcs	r0, r8, r1

0800f46c <PixelPatterns::ScannerUpdate(unsigned int)>:
 800f46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f470:	4b29      	ldr	r3, [pc, #164]	; (800f518 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>)
 800f472:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 800f51c <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800f476:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 800f520 <PixelPatterns::ScannerUpdate(unsigned int)+0xb4>
 800f47a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f47e:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800f482:	b085      	sub	sp, #20
 800f484:	689d      	ldr	r5, [r3, #8]
 800f486:	00b3      	lsls	r3, r6, #2
 800f488:	4680      	mov	r8, r0
 800f48a:	9301      	str	r3, [sp, #4]
 800f48c:	4608      	mov	r0, r1
 800f48e:	f04f 0900 	mov.w	r9, #0
 800f492:	1bbf      	subs	r7, r7, r6
 800f494:	f8da 2000 	ldr.w	r2, [sl]
 800f498:	fa1f f489 	uxth.w	r4, r9
 800f49c:	42a2      	cmp	r2, r4
 800f49e:	d806      	bhi.n	800f4ae <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800f4a0:	4601      	mov	r1, r0
 800f4a2:	4640      	mov	r0, r8
 800f4a4:	b005      	add	sp, #20
 800f4a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4aa:	f7ff bf51 	b.w	800f350 <PixelPatterns::Increment(unsigned int)>
 800f4ae:	42a6      	cmp	r6, r4
 800f4b0:	d10c      	bne.n	800f4cc <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800f4b2:	462a      	mov	r2, r5
 800f4b4:	4631      	mov	r1, r6
 800f4b6:	9002      	str	r0, [sp, #8]
 800f4b8:	f7ff fe1c 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f4bc:	f8db 2000 	ldr.w	r2, [fp]
 800f4c0:	9b01      	ldr	r3, [sp, #4]
 800f4c2:	50d5      	str	r5, [r2, r3]
 800f4c4:	9802      	ldr	r0, [sp, #8]
 800f4c6:	f109 0901 	add.w	r9, r9, #1
 800f4ca:	e7e3      	b.n	800f494 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800f4cc:	42a7      	cmp	r7, r4
 800f4ce:	d109      	bne.n	800f4e4 <PixelPatterns::ScannerUpdate(unsigned int)+0x78>
 800f4d0:	462a      	mov	r2, r5
 800f4d2:	4639      	mov	r1, r7
 800f4d4:	9002      	str	r0, [sp, #8]
 800f4d6:	f7ff fe0d 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f4da:	f8db 2000 	ldr.w	r2, [fp]
 800f4de:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800f4e2:	e7ef      	b.n	800f4c4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800f4e4:	f8db 2000 	ldr.w	r2, [fp]
 800f4e8:	9002      	str	r0, [sp, #8]
 800f4ea:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800f4ee:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800f4f2:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800f4f6:	0212      	lsls	r2, r2, #8
 800f4f8:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800f4fc:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800f500:	430a      	orrs	r2, r1
 800f502:	4621      	mov	r1, r4
 800f504:	9203      	str	r2, [sp, #12]
 800f506:	f7ff fdf5 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f50a:	f8db 1000 	ldr.w	r1, [fp]
 800f50e:	9a03      	ldr	r2, [sp, #12]
 800f510:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800f514:	e7d6      	b.n	800f4c4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800f516:	bf00      	nop
 800f518:	20001198 	mulcs	r0, r8, r1
 800f51c:	200013a0 	andcs	r1, r0, r0, lsr #7
 800f520:	2000139c 	mulcs	r0, ip, r3

0800f524 <PixelPatterns::FadeUpdate(unsigned int)>:
 800f524:	4a20      	ldr	r2, [pc, #128]	; (800f5a8 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800f526:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800f52a:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800f52e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f532:	460e      	mov	r6, r1
 800f534:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800f538:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f53c:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800f540:	437a      	muls	r2, r7
 800f542:	4605      	mov	r5, r0
 800f544:	1bc8      	subs	r0, r1, r7
 800f546:	fb00 2204 	mla	r2, r0, r4, r2
 800f54a:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800f54e:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800f552:	437c      	muls	r4, r7
 800f554:	fb00 440e 	mla	r4, r0, lr, r4
 800f558:	b2db      	uxtb	r3, r3
 800f55a:	fbb2 f2f1 	udiv	r2, r2, r1
 800f55e:	fbb4 f4f1 	udiv	r4, r4, r1
 800f562:	0212      	lsls	r2, r2, #8
 800f564:	0424      	lsls	r4, r4, #16
 800f566:	437b      	muls	r3, r7
 800f568:	b292      	uxth	r2, r2
 800f56a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800f56e:	fa5f fc8c 	uxtb.w	ip, ip
 800f572:	4314      	orrs	r4, r2
 800f574:	fb00 330c 	mla	r3, r0, ip, r3
 800f578:	f8df 8030 	ldr.w	r8, [pc, #48]	; 800f5ac <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800f57c:	fbb3 f3f1 	udiv	r3, r3, r1
 800f580:	b2db      	uxtb	r3, r3
 800f582:	431c      	orrs	r4, r3
 800f584:	2700      	movs	r7, #0
 800f586:	f8d8 3000 	ldr.w	r3, [r8]
 800f58a:	429f      	cmp	r7, r3
 800f58c:	d305      	bcc.n	800f59a <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800f58e:	4631      	mov	r1, r6
 800f590:	4628      	mov	r0, r5
 800f592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f596:	f7ff bedb 	b.w	800f350 <PixelPatterns::Increment(unsigned int)>
 800f59a:	4639      	mov	r1, r7
 800f59c:	4622      	mov	r2, r4
 800f59e:	4630      	mov	r0, r6
 800f5a0:	f7ff fda8 	bl	800f0f4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f5a4:	3701      	adds	r7, #1
 800f5a6:	e7ee      	b.n	800f586 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800f5a8:	20001198 	mulcs	r0, r8, r1
 800f5ac:	200013a0 	andcs	r1, r0, r0, lsr #7

0800f5b0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800f5b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5b2:	4b12      	ldr	r3, [pc, #72]	; (800f5fc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800f5b4:	014e      	lsls	r6, r1, #5
 800f5b6:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800f5ba:	599c      	ldr	r4, [r3, r6]
 800f5bc:	686f      	ldr	r7, [r5, #4]
 800f5be:	1b14      	subs	r4, r2, r4
 800f5c0:	42bc      	cmp	r4, r7
 800f5c2:	d319      	bcc.n	800f5f8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800f5c4:	519a      	str	r2, [r3, r6]
 800f5c6:	69eb      	ldr	r3, [r5, #28]
 800f5c8:	3b01      	subs	r3, #1
 800f5ca:	2b04      	cmp	r3, #4
 800f5cc:	d814      	bhi.n	800f5f8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800f5ce:	e8df f003 	tbb	[pc, r3]
 800f5d2:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800f5d6:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800f5da:	fed8 2001 	cdp2	0, 13, cr2, cr8, cr1, {0}
 800f5de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f5e0:	f7ff ff00 	bl	800f3e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800f5e4:	e7fa      	b.n	800f5dc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f5e6:	f7ff ff2d 	bl	800f444 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800f5ea:	e7f7      	b.n	800f5dc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f5ec:	f7ff ff3e 	bl	800f46c <PixelPatterns::ScannerUpdate(unsigned int)>
 800f5f0:	e7f4      	b.n	800f5dc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f5f2:	f7ff ff97 	bl	800f524 <PixelPatterns::FadeUpdate(unsigned int)>
 800f5f6:	e7f1      	b.n	800f5dc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f5f8:	2000      	movs	r0, #0
 800f5fa:	e7f0      	b.n	800f5de <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800f5fc:	20001198 	mulcs	r0, r8, r1

0800f600 <PixelPatterns::Run()>:
 800f600:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f604:	4f11      	ldr	r7, [pc, #68]	; (800f64c <PixelPatterns::Run()+0x4c>)
 800f606:	4606      	mov	r6, r0
 800f608:	6838      	ldr	r0, [r7, #0]
 800f60a:	f000 fc85 	bl	800ff18 <WS28xxMulti::IsUpdating()>
 800f60e:	4604      	mov	r4, r0
 800f610:	b9c8      	cbnz	r0, 800f646 <PixelPatterns::Run()+0x46>
 800f612:	4b0f      	ldr	r3, [pc, #60]	; (800f650 <PixelPatterns::Run()+0x50>)
 800f614:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800f654 <PixelPatterns::Run()+0x54>
 800f618:	f8d3 9000 	ldr.w	r9, [r3]
 800f61c:	4605      	mov	r5, r0
 800f61e:	f8d8 3000 	ldr.w	r3, [r8]
 800f622:	b2e9      	uxtb	r1, r5
 800f624:	428b      	cmp	r3, r1
 800f626:	f105 0501 	add.w	r5, r5, #1
 800f62a:	d805      	bhi.n	800f638 <PixelPatterns::Run()+0x38>
 800f62c:	b15c      	cbz	r4, 800f646 <PixelPatterns::Run()+0x46>
 800f62e:	6838      	ldr	r0, [r7, #0]
 800f630:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f634:	f000 bb0a 	b.w	800fc4c <WS28xxMulti::Update()>
 800f638:	464a      	mov	r2, r9
 800f63a:	4630      	mov	r0, r6
 800f63c:	f7ff ffb8 	bl	800f5b0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800f640:	4320      	orrs	r0, r4
 800f642:	b2c4      	uxtb	r4, r0
 800f644:	e7eb      	b.n	800f61e <PixelPatterns::Run()+0x1e>
 800f646:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f64a:	bf00      	nop
 800f64c:	200013a4 	andcs	r1, r0, r4, lsr #7
 800f650:	2000fedc 	ldrdcs	pc, [r0], -ip
 800f654:	20001398 	mulcs	r0, r8, r3

0800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800f658:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f65a:	4c20      	ldr	r4, [pc, #128]	; (800f6dc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 800f65c:	f89d e014 	ldrb.w	lr, [sp, #20]
 800f660:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800f664:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 800f668:	4c1d      	ldr	r4, [pc, #116]	; (800f6e0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x88>)
 800f66a:	b2c0      	uxtb	r0, r0
 800f66c:	440c      	add	r4, r1
 800f66e:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 800f672:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 800f676:	f500 7000 	add.w	r0, r0, #512	; 0x200
 800f67a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f67e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f682:	0089      	lsls	r1, r1, #2
 800f684:	2080      	movs	r0, #128	; 0x80
 800f686:	2601      	movs	r6, #1
 800f688:	ea12 0400 	ands.w	r4, r2, r0
 800f68c:	bf0b      	itete	eq
 800f68e:	f5ac 67c0 	subeq.w	r7, ip, #1536	; 0x600
 800f692:	f5ac 64c0 	subne.w	r4, ip, #1536	; 0x600
 800f696:	603c      	streq	r4, [r7, #0]
 800f698:	6026      	strne	r6, [r4, #0]
 800f69a:	ea13 0400 	ands.w	r4, r3, r0
 800f69e:	bf0b      	itete	eq
 800f6a0:	f5ac 6780 	subeq.w	r7, ip, #1024	; 0x400
 800f6a4:	f5ac 6480 	subne.w	r4, ip, #1024	; 0x400
 800f6a8:	603c      	streq	r4, [r7, #0]
 800f6aa:	6026      	strne	r6, [r4, #0]
 800f6ac:	ea1e 0400 	ands.w	r4, lr, r0
 800f6b0:	bf15      	itete	ne
 800f6b2:	f5ac 7400 	subne.w	r4, ip, #512	; 0x200
 800f6b6:	f5ac 7700 	subeq.w	r7, ip, #512	; 0x200
 800f6ba:	6026      	strne	r6, [r4, #0]
 800f6bc:	603c      	streq	r4, [r7, #0]
 800f6be:	ea15 0400 	ands.w	r4, r5, r0
 800f6c2:	bf14      	ite	ne
 800f6c4:	f8cc 6000 	strne.w	r6, [ip]
 800f6c8:	f8cc 4000 	streq.w	r4, [ip]
 800f6cc:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 800f6d0:	4561      	cmp	r1, ip
 800f6d2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800f6d6:	d1d7      	bne.n	800f688 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x30>
 800f6d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6da:	bf00      	nop
 800f6dc:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 800f6e0:	e1100030 	tst	r0, r0, lsr r0

0800f6e4 <TIMER3_IRQHandler>:
 800f6e4:	f3bf 8f5f 	dmb	sy
 800f6e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f6ec:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 800f6f0:	0791      	lsls	r1, r2, #30
 800f6f2:	d51e      	bpl.n	800f732 <TIMER3_IRQHandler+0x4e>
 800f6f4:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800f6f8:	f021 0101 	bic.w	r1, r1, #1
 800f6fc:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800f700:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f704:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800f708:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800f70c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f710:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800f714:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800f718:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f71c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 800f720:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800f724:	4b07      	ldr	r3, [pc, #28]	; (800f744 <TIMER3_IRQHandler+0x60>)
 800f726:	2100      	movs	r1, #0
 800f728:	7019      	strb	r1, [r3, #0]
 800f72a:	4b07      	ldr	r3, [pc, #28]	; (800f748 <TIMER3_IRQHandler+0x64>)
 800f72c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f730:	6299      	str	r1, [r3, #40]	; 0x28
 800f732:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f736:	43d2      	mvns	r2, r2
 800f738:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 800f73c:	f3bf 8f5f 	dmb	sy
 800f740:	4770      	bx	lr
 800f742:	bf00      	nop
 800f744:	200013ac 	andcs	r1, r0, ip, lsr #7
 800f748:	40021000 	andmi	r1, r2, r0

0800f74c <WS28xxMulti::~WS28xxMulti()>:
 800f74c:	4b01      	ldr	r3, [pc, #4]	; (800f754 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800f74e:	2200      	movs	r2, #0
 800f750:	601a      	str	r2, [r3, #0]
 800f752:	4770      	bx	lr
 800f754:	200013b0 			; <UNDEFINED> instruction: 0x200013b0

0800f758 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800f758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f75c:	4680      	mov	r8, r0
 800f75e:	b08e      	sub	sp, #56	; 0x38
 800f760:	4608      	mov	r0, r1
 800f762:	4614      	mov	r4, r2
 800f764:	f007 f884 	bl	8016870 <__popcountsi2>
 800f768:	4607      	mov	r7, r0
 800f76a:	4620      	mov	r0, r4
 800f76c:	f007 f880 	bl	8016870 <__popcountsi2>
 800f770:	4c70      	ldr	r4, [pc, #448]	; (800f934 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 800f772:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 800f948 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 800f776:	4606      	mov	r6, r0
 800f778:	f241 0001 	movw	r0, #4097	; 0x1001
 800f77c:	f005 fd8c 	bl	8015298 <rcu_periph_clock_enable>
 800f780:	4620      	mov	r0, r4
 800f782:	f005 fe45 	bl	8015410 <timer_deinit>
 800f786:	2500      	movs	r5, #0
 800f788:	23f9      	movs	r3, #249	; 0xf9
 800f78a:	a901      	add	r1, sp, #4
 800f78c:	4620      	mov	r0, r4
 800f78e:	9303      	str	r3, [sp, #12]
 800f790:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800f794:	f005 fee2 	bl	801555c <timer_init>
 800f798:	4620      	mov	r0, r4
 800f79a:	2101      	movs	r1, #1
 800f79c:	f006 f88a 	bl	80158b4 <timer_master_slave_mode_config>
 800f7a0:	4620      	mov	r0, r4
 800f7a2:	2130      	movs	r1, #48	; 0x30
 800f7a4:	f006 f876 	bl	8015894 <timer_master_output_trigger_source_select>
 800f7a8:	4629      	mov	r1, r5
 800f7aa:	4620      	mov	r0, r4
 800f7ac:	2210      	movs	r2, #16
 800f7ae:	f006 f80f 	bl	80157d0 <timer_channel_output_mode_config>
 800f7b2:	4620      	mov	r0, r4
 800f7b4:	2210      	movs	r2, #16
 800f7b6:	2102      	movs	r1, #2
 800f7b8:	f006 f80a 	bl	80157d0 <timer_channel_output_mode_config>
 800f7bc:	4620      	mov	r0, r4
 800f7be:	2210      	movs	r2, #16
 800f7c0:	2103      	movs	r1, #3
 800f7c2:	f006 f805 	bl	80157d0 <timer_channel_output_mode_config>
 800f7c6:	f04f 09fa 	mov.w	r9, #250	; 0xfa
 800f7ca:	4629      	mov	r1, r5
 800f7cc:	4620      	mov	r0, r4
 800f7ce:	2201      	movs	r2, #1
 800f7d0:	f006 f824 	bl	801581c <timer_channel_output_pulse_value_config>
 800f7d4:	fb09 f207 	mul.w	r2, r9, r7
 800f7d8:	4620      	mov	r0, r4
 800f7da:	08d2      	lsrs	r2, r2, #3
 800f7dc:	2102      	movs	r1, #2
 800f7de:	f006 f81d 	bl	801581c <timer_channel_output_pulse_value_config>
 800f7e2:	fb09 f206 	mul.w	r2, r9, r6
 800f7e6:	08d2      	lsrs	r2, r2, #3
 800f7e8:	2103      	movs	r1, #3
 800f7ea:	4620      	mov	r0, r4
 800f7ec:	f006 f816 	bl	801581c <timer_channel_output_pulse_value_config>
 800f7f0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800f7f4:	f241 0002 	movw	r0, #4098	; 0x1002
 800f7f8:	f005 fd4e 	bl	8015298 <rcu_periph_clock_enable>
 800f7fc:	4620      	mov	r0, r4
 800f7fe:	f005 fe07 	bl	8015410 <timer_deinit>
 800f802:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f806:	a901      	add	r1, sp, #4
 800f808:	4620      	mov	r0, r4
 800f80a:	9303      	str	r3, [sp, #12]
 800f80c:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800f810:	f005 fea4 	bl	801555c <timer_init>
 800f814:	4620      	mov	r0, r4
 800f816:	2101      	movs	r1, #1
 800f818:	f006 f84c 	bl	80158b4 <timer_master_slave_mode_config>
 800f81c:	4620      	mov	r0, r4
 800f81e:	2107      	movs	r1, #7
 800f820:	f006 f840 	bl	80158a4 <timer_slave_mode_select>
 800f824:	4620      	mov	r0, r4
 800f826:	2120      	movs	r1, #32
 800f828:	f006 f82c 	bl	8015884 <timer_input_trigger_source_select>
 800f82c:	4629      	mov	r1, r5
 800f82e:	4620      	mov	r0, r4
 800f830:	2210      	movs	r2, #16
 800f832:	f005 ffcd 	bl	80157d0 <timer_channel_output_mode_config>
 800f836:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800f83a:	4629      	mov	r1, r5
 800f83c:	3201      	adds	r2, #1
 800f83e:	4620      	mov	r0, r4
 800f840:	f005 ffec 	bl	801581c <timer_channel_output_pulse_value_config>
 800f844:	2102      	movs	r1, #2
 800f846:	4620      	mov	r0, r4
 800f848:	f005 fecb 	bl	80155e2 <timer_interrupt_enable>
 800f84c:	4b3a      	ldr	r3, [pc, #232]	; (800f938 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 800f84e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800f852:	f504 3416 	add.w	r4, r4, #153600	; 0x25800
 800f856:	f883 531e 	strb.w	r5, [r3, #798]	; 0x31e
 800f85a:	f640 4015 	movw	r0, #3093	; 0xc15
 800f85e:	601a      	str	r2, [r3, #0]
 800f860:	f005 fd1a 	bl	8015298 <rcu_periph_clock_enable>
 800f864:	2104      	movs	r1, #4
 800f866:	4620      	mov	r0, r4
 800f868:	f004 ffcc 	bl	8014804 <dma_deinit>
 800f86c:	a805      	add	r0, sp, #20
 800f86e:	f004 fff4 	bl	801485a <dma_single_data_para_struct_init>
 800f872:	4b32      	ldr	r3, [pc, #200]	; (800f93c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 800f874:	f8cd a01c 	str.w	sl, [sp, #28]
 800f878:	2601      	movs	r6, #1
 800f87a:	f04f 0940 	mov.w	r9, #64	; 0x40
 800f87e:	f44f 6800 	mov.w	r8, #2048	; 0x800
 800f882:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800f886:	aa05      	add	r2, sp, #20
 800f888:	4620      	mov	r0, r4
 800f88a:	2104      	movs	r1, #4
 800f88c:	e9cd 3605 	strd	r3, r6, [sp, #20]
 800f890:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800f894:	9608      	str	r6, [sp, #32]
 800f896:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800f89a:	970d      	str	r7, [sp, #52]	; 0x34
 800f89c:	f004 ffe9 	bl	8014872 <dma_single_data_mode_init>
 800f8a0:	4620      	mov	r0, r4
 800f8a2:	2104      	movs	r1, #4
 800f8a4:	f005 f824 	bl	80148f0 <dma_circulation_disable>
 800f8a8:	2205      	movs	r2, #5
 800f8aa:	4620      	mov	r0, r4
 800f8ac:	2104      	movs	r1, #4
 800f8ae:	f005 f827 	bl	8014900 <dma_channel_subperipheral_select>
 800f8b2:	2107      	movs	r1, #7
 800f8b4:	4620      	mov	r0, r4
 800f8b6:	f004 ffa5 	bl	8014804 <dma_deinit>
 800f8ba:	a805      	add	r0, sp, #20
 800f8bc:	f004 ffcd 	bl	801485a <dma_single_data_para_struct_init>
 800f8c0:	4b1f      	ldr	r3, [pc, #124]	; (800f940 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 800f8c2:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800f8c6:	e9cd 3507 	strd	r3, r5, [sp, #28]
 800f8ca:	4d1e      	ldr	r5, [pc, #120]	; (800f944 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>)
 800f8cc:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800f8d0:	aa05      	add	r2, sp, #20
 800f8d2:	4620      	mov	r0, r4
 800f8d4:	2107      	movs	r1, #7
 800f8d6:	e9cd 5605 	strd	r5, r6, [sp, #20]
 800f8da:	970d      	str	r7, [sp, #52]	; 0x34
 800f8dc:	f004 ffc9 	bl	8014872 <dma_single_data_mode_init>
 800f8e0:	4620      	mov	r0, r4
 800f8e2:	2107      	movs	r1, #7
 800f8e4:	f005 f804 	bl	80148f0 <dma_circulation_disable>
 800f8e8:	2205      	movs	r2, #5
 800f8ea:	4620      	mov	r0, r4
 800f8ec:	2107      	movs	r1, #7
 800f8ee:	f005 f807 	bl	8014900 <dma_channel_subperipheral_select>
 800f8f2:	2102      	movs	r1, #2
 800f8f4:	4620      	mov	r0, r4
 800f8f6:	f004 ff85 	bl	8014804 <dma_deinit>
 800f8fa:	a805      	add	r0, sp, #20
 800f8fc:	f004 ffad 	bl	801485a <dma_single_data_para_struct_init>
 800f900:	aa05      	add	r2, sp, #20
 800f902:	4620      	mov	r0, r4
 800f904:	2102      	movs	r1, #2
 800f906:	e9cd a607 	strd	sl, r6, [sp, #28]
 800f90a:	e9cd 5605 	strd	r5, r6, [sp, #20]
 800f90e:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800f912:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800f916:	970d      	str	r7, [sp, #52]	; 0x34
 800f918:	f004 ffab 	bl	8014872 <dma_single_data_mode_init>
 800f91c:	4620      	mov	r0, r4
 800f91e:	2102      	movs	r1, #2
 800f920:	f004 ffe6 	bl	80148f0 <dma_circulation_disable>
 800f924:	2205      	movs	r2, #5
 800f926:	2102      	movs	r1, #2
 800f928:	4620      	mov	r0, r4
 800f92a:	f004 ffe9 	bl	8014900 <dma_channel_subperipheral_select>
 800f92e:	b00e      	add	sp, #56	; 0x38
 800f930:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f934:	40000400 	andmi	r0, r0, r0, lsl #8
 800f938:	e000e100 	and	lr, r0, r0, lsl #2
 800f93c:	40021018 	andmi	r1, r2, r8, lsl r0
 800f940:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 800f944:	40021028 	andmi	r1, r2, r8, lsr #32
 800f948:	080190c8 	stmdaeq	r1, {r3, r6, r7, ip, pc}

0800f94c <WS28xxMulti::Setup(unsigned int)>:
 800f94c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f950:	4680      	mov	r8, r0
 800f952:	b092      	sub	sp, #72	; 0x48
 800f954:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 800f958:	460c      	mov	r4, r1
 800f95a:	f005 fc9d 	bl	8015298 <rcu_periph_clock_enable>
 800f95e:	4882      	ldr	r0, [pc, #520]	; (800fb68 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800f960:	4d82      	ldr	r5, [pc, #520]	; (800fb6c <WS28xxMulti::Setup(unsigned int)+0x220>)
 800f962:	2340      	movs	r3, #64	; 0x40
 800f964:	2200      	movs	r2, #0
 800f966:	2102      	movs	r1, #2
 800f968:	f005 fc1a 	bl	80151a0 <gpio_mode_set>
 800f96c:	2340      	movs	r3, #64	; 0x40
 800f96e:	487e      	ldr	r0, [pc, #504]	; (800fb68 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800f970:	2202      	movs	r2, #2
 800f972:	2100      	movs	r1, #0
 800f974:	f005 fc34 	bl	80151e0 <gpio_output_options_set>
 800f978:	2240      	movs	r2, #64	; 0x40
 800f97a:	2102      	movs	r1, #2
 800f97c:	487a      	ldr	r0, [pc, #488]	; (800fb68 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800f97e:	f005 fc4a 	bl	8015216 <gpio_af_set>
 800f982:	fbb5 f5f4 	udiv	r5, r5, r4
 800f986:	f241 0001 	movw	r0, #4097	; 0x1001
 800f98a:	2d0c      	cmp	r5, #12
 800f98c:	bf38      	it	cc
 800f98e:	250c      	movcc	r5, #12
 800f990:	f005 fc82 	bl	8015298 <rcu_periph_clock_enable>
 800f994:	4876      	ldr	r0, [pc, #472]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f996:	2400      	movs	r4, #0
 800f998:	f005 fd3a 	bl	8015410 <timer_deinit>
 800f99c:	1e6b      	subs	r3, r5, #1
 800f99e:	4874      	ldr	r0, [pc, #464]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9a0:	9307      	str	r3, [sp, #28]
 800f9a2:	a905      	add	r1, sp, #20
 800f9a4:	2602      	movs	r6, #2
 800f9a6:	2701      	movs	r7, #1
 800f9a8:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800f9ac:	f88d 4020 	strb.w	r4, [sp, #32]
 800f9b0:	f005 fdd4 	bl	801555c <timer_init>
 800f9b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f9b8:	486d      	ldr	r0, [pc, #436]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9ba:	9304      	str	r3, [sp, #16]
 800f9bc:	aa02      	add	r2, sp, #8
 800f9be:	4621      	mov	r1, r4
 800f9c0:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800f9c4:	f005 fe1c 	bl	8015600 <timer_channel_output_config>
 800f9c8:	fa25 f207 	lsr.w	r2, r5, r7
 800f9cc:	4868      	ldr	r0, [pc, #416]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9ce:	3a01      	subs	r2, #1
 800f9d0:	4621      	mov	r1, r4
 800f9d2:	f005 ff23 	bl	801581c <timer_channel_output_pulse_value_config>
 800f9d6:	4866      	ldr	r0, [pc, #408]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9d8:	2260      	movs	r2, #96	; 0x60
 800f9da:	4621      	mov	r1, r4
 800f9dc:	f005 fef8 	bl	80157d0 <timer_channel_output_mode_config>
 800f9e0:	4863      	ldr	r0, [pc, #396]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9e2:	4622      	mov	r2, r4
 800f9e4:	4621      	mov	r1, r4
 800f9e6:	f005 ff27 	bl	8015838 <timer_channel_output_shadow_config>
 800f9ea:	4861      	ldr	r0, [pc, #388]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9ec:	2210      	movs	r2, #16
 800f9ee:	4631      	mov	r1, r6
 800f9f0:	f005 feee 	bl	80157d0 <timer_channel_output_mode_config>
 800f9f4:	485e      	ldr	r0, [pc, #376]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f9f6:	2210      	movs	r2, #16
 800f9f8:	2103      	movs	r1, #3
 800f9fa:	f005 fee9 	bl	80157d0 <timer_channel_output_mode_config>
 800f9fe:	485c      	ldr	r0, [pc, #368]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fa00:	463a      	mov	r2, r7
 800fa02:	4631      	mov	r1, r6
 800fa04:	f005 ff0a 	bl	801581c <timer_channel_output_pulse_value_config>
 800fa08:	fa25 f206 	lsr.w	r2, r5, r6
 800fa0c:	3a01      	subs	r2, #1
 800fa0e:	4858      	ldr	r0, [pc, #352]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fa10:	2103      	movs	r1, #3
 800fa12:	f005 ff03 	bl	801581c <timer_channel_output_pulse_value_config>
 800fa16:	4856      	ldr	r0, [pc, #344]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fa18:	4639      	mov	r1, r7
 800fa1a:	f005 ff4b 	bl	80158b4 <timer_master_slave_mode_config>
 800fa1e:	2130      	movs	r1, #48	; 0x30
 800fa20:	4853      	ldr	r0, [pc, #332]	; (800fb70 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fa22:	f005 ff37 	bl	8015894 <timer_master_output_trigger_source_select>
 800fa26:	f241 0002 	movw	r0, #4098	; 0x1002
 800fa2a:	f005 fc35 	bl	8015298 <rcu_periph_clock_enable>
 800fa2e:	4851      	ldr	r0, [pc, #324]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa30:	f005 fcee 	bl	8015410 <timer_deinit>
 800fa34:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fa38:	484e      	ldr	r0, [pc, #312]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa3a:	9307      	str	r3, [sp, #28]
 800fa3c:	a905      	add	r1, sp, #20
 800fa3e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800fa42:	f005 fd8b 	bl	801555c <timer_init>
 800fa46:	484b      	ldr	r0, [pc, #300]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa48:	4639      	mov	r1, r7
 800fa4a:	f005 ff33 	bl	80158b4 <timer_master_slave_mode_config>
 800fa4e:	4849      	ldr	r0, [pc, #292]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa50:	2107      	movs	r1, #7
 800fa52:	f005 ff27 	bl	80158a4 <timer_slave_mode_select>
 800fa56:	4847      	ldr	r0, [pc, #284]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa58:	2120      	movs	r1, #32
 800fa5a:	f005 ff13 	bl	8015884 <timer_input_trigger_source_select>
 800fa5e:	4845      	ldr	r0, [pc, #276]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa60:	2210      	movs	r2, #16
 800fa62:	4621      	mov	r1, r4
 800fa64:	f005 feb4 	bl	80157d0 <timer_channel_output_mode_config>
 800fa68:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800fa6c:	4841      	ldr	r0, [pc, #260]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa6e:	4621      	mov	r1, r4
 800fa70:	f005 fed4 	bl	801581c <timer_channel_output_pulse_value_config>
 800fa74:	4631      	mov	r1, r6
 800fa76:	483f      	ldr	r0, [pc, #252]	; (800fb74 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fa78:	f005 fdb3 	bl	80155e2 <timer_interrupt_enable>
 800fa7c:	4b3e      	ldr	r3, [pc, #248]	; (800fb78 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 800fa7e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800fa82:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800fa86:	f640 4015 	movw	r0, #3093	; 0xc15
 800fa8a:	601a      	str	r2, [r3, #0]
 800fa8c:	f005 fc04 	bl	8015298 <rcu_periph_clock_enable>
 800fa90:	2107      	movs	r1, #7
 800fa92:	483a      	ldr	r0, [pc, #232]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fa94:	f004 feb6 	bl	8014804 <dma_deinit>
 800fa98:	a809      	add	r0, sp, #36	; 0x24
 800fa9a:	f004 fede 	bl	801485a <dma_single_data_para_struct_init>
 800fa9e:	4b38      	ldr	r3, [pc, #224]	; (800fb80 <WS28xxMulti::Setup(unsigned int)+0x234>)
 800faa0:	4836      	ldr	r0, [pc, #216]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800faa2:	e9cd 370b 	strd	r3, r7, [sp, #44]	; 0x2c
 800faa6:	4b37      	ldr	r3, [pc, #220]	; (800fb84 <WS28xxMulti::Setup(unsigned int)+0x238>)
 800faa8:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 800faac:	aa09      	add	r2, sp, #36	; 0x24
 800faae:	f04f 0a40 	mov.w	sl, #64	; 0x40
 800fab2:	f44f 6900 	mov.w	r9, #2048	; 0x800
 800fab6:	2107      	movs	r1, #7
 800fab8:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 800fabc:	9511      	str	r5, [sp, #68]	; 0x44
 800fabe:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800fac2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fac6:	f004 fed4 	bl	8014872 <dma_single_data_mode_init>
 800faca:	482c      	ldr	r0, [pc, #176]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800facc:	2107      	movs	r1, #7
 800face:	f004 ff0f 	bl	80148f0 <dma_circulation_disable>
 800fad2:	2205      	movs	r2, #5
 800fad4:	4829      	ldr	r0, [pc, #164]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fad6:	2107      	movs	r1, #7
 800fad8:	f004 ff12 	bl	8014900 <dma_channel_subperipheral_select>
 800fadc:	4631      	mov	r1, r6
 800fade:	4827      	ldr	r0, [pc, #156]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fae0:	f004 fe90 	bl	8014804 <dma_deinit>
 800fae4:	a809      	add	r0, sp, #36	; 0x24
 800fae6:	f004 feb8 	bl	801485a <dma_single_data_para_struct_init>
 800faea:	4b27      	ldr	r3, [pc, #156]	; (800fb88 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 800faec:	4823      	ldr	r0, [pc, #140]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800faee:	9511      	str	r5, [sp, #68]	; 0x44
 800faf0:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
 800faf4:	4b25      	ldr	r3, [pc, #148]	; (800fb8c <WS28xxMulti::Setup(unsigned int)+0x240>)
 800faf6:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800fafa:	aa09      	add	r2, sp, #36	; 0x24
 800fafc:	4631      	mov	r1, r6
 800fafe:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 800fb02:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fb06:	f004 feb4 	bl	8014872 <dma_single_data_mode_init>
 800fb0a:	481c      	ldr	r0, [pc, #112]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fb0c:	4631      	mov	r1, r6
 800fb0e:	f004 feef 	bl	80148f0 <dma_circulation_disable>
 800fb12:	481a      	ldr	r0, [pc, #104]	; (800fb7c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fb14:	2205      	movs	r2, #5
 800fb16:	4631      	mov	r1, r6
 800fb18:	f004 fef2 	bl	8014900 <dma_channel_subperipheral_select>
 800fb1c:	f8d8 5000 	ldr.w	r5, [r8]
 800fb20:	3d0b      	subs	r5, #11
 800fb22:	42b5      	cmp	r5, r6
 800fb24:	d81c      	bhi.n	800fb60 <WS28xxMulti::Setup(unsigned int)+0x214>
 800fb26:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800fb2a:	4627      	mov	r7, r4
 800fb2c:	3601      	adds	r6, #1
 800fb2e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800fb32:	2300      	movs	r3, #0
 800fb34:	461a      	mov	r2, r3
 800fb36:	4619      	mov	r1, r3
 800fb38:	4620      	mov	r0, r4
 800fb3a:	e9cd 7700 	strd	r7, r7, [sp]
 800fb3e:	f7ff fd8b 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fb42:	2d02      	cmp	r5, #2
 800fb44:	bf1b      	ittet	ne
 800fb46:	23ff      	movne	r3, #255	; 0xff
 800fb48:	e9cd 8800 	strdne	r8, r8, [sp]
 800fb4c:	e9cd 7700 	strdeq	r7, r7, [sp]
 800fb50:	461a      	movne	r2, r3
 800fb52:	4620      	mov	r0, r4
 800fb54:	4631      	mov	r1, r6
 800fb56:	3401      	adds	r4, #1
 800fb58:	f7ff fd7e 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fb5c:	2c10      	cmp	r4, #16
 800fb5e:	d1e8      	bne.n	800fb32 <WS28xxMulti::Setup(unsigned int)+0x1e6>
 800fb60:	b012      	add	sp, #72	; 0x48
 800fb62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb66:	bf00      	nop
 800fb68:	40020000 	andmi	r0, r2, r0
 800fb6c:	0bebc200 	bleq	7b00374 <__stack_size+0x7afc374>
 800fb70:	40000400 	andmi	r0, r0, r0, lsl #8
 800fb74:	40000800 	andmi	r0, r0, r0, lsl #16
 800fb78:	e000e100 	and	lr, r0, r0, lsl #2
 800fb7c:	40026000 	andmi	r6, r2, r0
 800fb80:	080190c8 	stmdaeq	r1, {r3, r6, r7, ip, pc}
 800fb84:	40021028 	andmi	r1, r2, r8, lsr #32
 800fb88:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 800fb8c:	40021018 	andmi	r1, r2, r8, lsl r0

0800fb90 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800fb90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fb92:	460f      	mov	r7, r1
 800fb94:	4604      	mov	r4, r0
 800fb96:	460d      	mov	r5, r1
 800fb98:	4606      	mov	r6, r0
 800fb9a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fb9c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800fb9e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800fba2:	2300      	movs	r3, #0
 800fba4:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800fba8:	61e3      	str	r3, [r4, #28]
 800fbaa:	4b26      	ldr	r3, [pc, #152]	; (800fc44 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb4>)
 800fbac:	a901      	add	r1, sp, #4
 800fbae:	4628      	mov	r0, r5
 800fbb0:	601c      	str	r4, [r3, #0]
 800fbb2:	f7ff f8af 	bl	800ed14 <PixelConfiguration::Validate(unsigned int&)>
 800fbb6:	6826      	ldr	r6, [r4, #0]
 800fbb8:	3e0b      	subs	r6, #11
 800fbba:	2e02      	cmp	r6, #2
 800fbbc:	d80a      	bhi.n	800fbd4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800fbbe:	686b      	ldr	r3, [r5, #4]
 800fbc0:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800fbc4:	d906      	bls.n	800fbd4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800fbc6:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 800fbca:	606b      	str	r3, [r5, #4]
 800fbcc:	a901      	add	r1, sp, #4
 800fbce:	4628      	mov	r0, r5
 800fbd0:	f7ff f8a0 	bl	800ed14 <PixelConfiguration::Validate(unsigned int&)>
 800fbd4:	6863      	ldr	r3, [r4, #4]
 800fbd6:	9a01      	ldr	r2, [sp, #4]
 800fbd8:	2e02      	cmp	r6, #2
 800fbda:	fb03 f202 	mul.w	r2, r3, r2
 800fbde:	bf9b      	ittet	ls
 800fbe0:	3308      	addls	r3, #8
 800fbe2:	189b      	addls	r3, r3, r2
 800fbe4:	61e2      	strhi	r2, [r4, #28]
 800fbe6:	61e3      	strls	r3, [r4, #28]
 800fbe8:	69e3      	ldr	r3, [r4, #28]
 800fbea:	4e17      	ldr	r6, [pc, #92]	; (800fc48 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb8>)
 800fbec:	00db      	lsls	r3, r3, #3
 800fbee:	61e3      	str	r3, [r4, #28]
 800fbf0:	f640 4004 	movw	r0, #3076	; 0xc04
 800fbf4:	f005 fb50 	bl	8015298 <rcu_periph_clock_enable>
 800fbf8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fbfc:	2100      	movs	r1, #0
 800fbfe:	4630      	mov	r0, r6
 800fc00:	f005 fb09 	bl	8015216 <gpio_af_set>
 800fc04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fc08:	2202      	movs	r2, #2
 800fc0a:	2101      	movs	r1, #1
 800fc0c:	4630      	mov	r0, r6
 800fc0e:	f005 fac7 	bl	80151a0 <gpio_mode_set>
 800fc12:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fc16:	2202      	movs	r2, #2
 800fc18:	2100      	movs	r1, #0
 800fc1a:	4630      	mov	r0, r6
 800fc1c:	f005 fae0 	bl	80151e0 <gpio_output_options_set>
 800fc20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fc24:	62b3      	str	r3, [r6, #40]	; 0x28
 800fc26:	7d6b      	ldrb	r3, [r5, #21]
 800fc28:	b13b      	cbz	r3, 800fc3a <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xaa>
 800fc2a:	7c6a      	ldrb	r2, [r5, #17]
 800fc2c:	7c29      	ldrb	r1, [r5, #16]
 800fc2e:	4620      	mov	r0, r4
 800fc30:	f7ff fd92 	bl	800f758 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800fc34:	4620      	mov	r0, r4
 800fc36:	b003      	add	sp, #12
 800fc38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc3a:	68e9      	ldr	r1, [r5, #12]
 800fc3c:	4620      	mov	r0, r4
 800fc3e:	f7ff fe85 	bl	800f94c <WS28xxMulti::Setup(unsigned int)>
 800fc42:	e7f7      	b.n	800fc34 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa4>
 800fc44:	200013b0 			; <UNDEFINED> instruction: 0x200013b0
 800fc48:	40021000 	andmi	r1, r2, r0

0800fc4c <WS28xxMulti::Update()>:
 800fc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc4e:	4b4c      	ldr	r3, [pc, #304]	; (800fd80 <WS28xxMulti::Update()+0x134>)
 800fc50:	4e4c      	ldr	r6, [pc, #304]	; (800fd84 <WS28xxMulti::Update()+0x138>)
 800fc52:	4c4d      	ldr	r4, [pc, #308]	; (800fd88 <WS28xxMulti::Update()+0x13c>)
 800fc54:	4f4d      	ldr	r7, [pc, #308]	; (800fd8c <WS28xxMulti::Update()+0x140>)
 800fc56:	2201      	movs	r2, #1
 800fc58:	701a      	strb	r2, [r3, #0]
 800fc5a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fc5e:	2100      	movs	r1, #0
 800fc60:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800fc64:	f022 0201 	bic.w	r2, r2, #1
 800fc68:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800fc6c:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 800fc70:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800fc74:	f022 0201 	bic.w	r2, r2, #1
 800fc78:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800fc7c:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 800fc80:	7d43      	ldrb	r3, [r0, #21]
 800fc82:	4605      	mov	r5, r0
 800fc84:	2b00      	cmp	r3, #0
 800fc86:	d053      	beq.n	800fd30 <WS28xxMulti::Update()+0xe4>
 800fc88:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800fc8a:	f023 0301 	bic.w	r3, r3, #1
 800fc8e:	6723      	str	r3, [r4, #112]	; 0x70
 800fc90:	2220      	movs	r2, #32
 800fc92:	2104      	movs	r1, #4
 800fc94:	4620      	mov	r0, r4
 800fc96:	f004 fe57 	bl	8014948 <dma_interrupt_flag_clear>
 800fc9a:	67e6      	str	r6, [r4, #124]	; 0x7c
 800fc9c:	8bab      	ldrh	r3, [r5, #28]
 800fc9e:	6763      	str	r3, [r4, #116]	; 0x74
 800fca0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800fca2:	f043 0301 	orr.w	r3, r3, #1
 800fca6:	6723      	str	r3, [r4, #112]	; 0x70
 800fca8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800fcac:	f023 0301 	bic.w	r3, r3, #1
 800fcb0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800fcb4:	2220      	movs	r2, #32
 800fcb6:	2107      	movs	r1, #7
 800fcb8:	4620      	mov	r0, r4
 800fcba:	f004 fe45 	bl	8014948 <dma_interrupt_flag_clear>
 800fcbe:	f8c4 70c4 	str.w	r7, [r4, #196]	; 0xc4
 800fcc2:	8bab      	ldrh	r3, [r5, #28]
 800fcc4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 800fcc8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800fccc:	f043 0301 	orr.w	r3, r3, #1
 800fcd0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800fcd4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800fcd6:	f023 0301 	bic.w	r3, r3, #1
 800fcda:	6423      	str	r3, [r4, #64]	; 0x40
 800fcdc:	2102      	movs	r1, #2
 800fcde:	4620      	mov	r0, r4
 800fce0:	2220      	movs	r2, #32
 800fce2:	f004 fe31 	bl	8014948 <dma_interrupt_flag_clear>
 800fce6:	64e6      	str	r6, [r4, #76]	; 0x4c
 800fce8:	8bab      	ldrh	r3, [r5, #28]
 800fcea:	6463      	str	r3, [r4, #68]	; 0x44
 800fcec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800fcee:	4828      	ldr	r0, [pc, #160]	; (800fd90 <WS28xxMulti::Update()+0x144>)
 800fcf0:	f043 0301 	orr.w	r3, r3, #1
 800fcf4:	6423      	str	r3, [r4, #64]	; 0x40
 800fcf6:	f44f 7100 	mov.w	r1, #512	; 0x200
 800fcfa:	f005 fc7c 	bl	80155f6 <timer_dma_enable>
 800fcfe:	4824      	ldr	r0, [pc, #144]	; (800fd90 <WS28xxMulti::Update()+0x144>)
 800fd00:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800fd04:	f005 fc77 	bl	80155f6 <timer_dma_enable>
 800fd08:	4821      	ldr	r0, [pc, #132]	; (800fd90 <WS28xxMulti::Update()+0x144>)
 800fd0a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800fd0e:	f005 fc72 	bl	80155f6 <timer_dma_enable>
 800fd12:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fd16:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800fd1a:	f042 0201 	orr.w	r2, r2, #1
 800fd1e:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800fd22:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800fd26:	f042 0201 	orr.w	r2, r2, #1
 800fd2a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800fd2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fd30:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800fd34:	f023 0301 	bic.w	r3, r3, #1
 800fd38:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800fd3c:	2220      	movs	r2, #32
 800fd3e:	2107      	movs	r1, #7
 800fd40:	4620      	mov	r0, r4
 800fd42:	f004 fe01 	bl	8014948 <dma_interrupt_flag_clear>
 800fd46:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 800fd4a:	8bab      	ldrh	r3, [r5, #28]
 800fd4c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 800fd50:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800fd54:	f043 0301 	orr.w	r3, r3, #1
 800fd58:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800fd5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800fd5e:	f023 0301 	bic.w	r3, r3, #1
 800fd62:	6423      	str	r3, [r4, #64]	; 0x40
 800fd64:	2220      	movs	r2, #32
 800fd66:	2102      	movs	r1, #2
 800fd68:	4620      	mov	r0, r4
 800fd6a:	f004 fded 	bl	8014948 <dma_interrupt_flag_clear>
 800fd6e:	64e7      	str	r7, [r4, #76]	; 0x4c
 800fd70:	8bab      	ldrh	r3, [r5, #28]
 800fd72:	6463      	str	r3, [r4, #68]	; 0x44
 800fd74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800fd76:	f043 0301 	orr.w	r3, r3, #1
 800fd7a:	6423      	str	r3, [r4, #64]	; 0x40
 800fd7c:	e7bf      	b.n	800fcfe <WS28xxMulti::Update()+0xb2>
 800fd7e:	bf00      	nop
 800fd80:	200013ac 	andcs	r1, r0, ip, lsr #7
 800fd84:	080190c8 	stmdaeq	r1, {r3, r6, r7, ip, pc}
 800fd88:	40026000 	andmi	r6, r2, r0
 800fd8c:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 800fd90:	40000400 	andmi	r0, r0, r0, lsl #8

0800fd94 <WS28xxMulti::Blackout()>:
 800fd94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd98:	4f2d      	ldr	r7, [pc, #180]	; (800fe50 <WS28xxMulti::Blackout()+0xbc>)
 800fd9a:	4605      	mov	r5, r0
 800fd9c:	f3bf 8f5f 	dmb	sy
 800fda0:	783a      	ldrb	r2, [r7, #0]
 800fda2:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800fda6:	2a00      	cmp	r2, #0
 800fda8:	d1f8      	bne.n	800fd9c <WS28xxMulti::Blackout()+0x8>
 800fdaa:	7d6c      	ldrb	r4, [r5, #21]
 800fdac:	b19c      	cbz	r4, 800fdd6 <WS28xxMulti::Blackout()+0x42>
 800fdae:	4a29      	ldr	r2, [pc, #164]	; (800fe54 <WS28xxMulti::Blackout()+0xc0>)
 800fdb0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800fdb4:	3301      	adds	r3, #1
 800fdb6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800fdba:	f842 1b04 	str.w	r1, [r2], #4
 800fdbe:	d1f9      	bne.n	800fdb4 <WS28xxMulti::Blackout()+0x20>
 800fdc0:	4628      	mov	r0, r5
 800fdc2:	f7ff ff43 	bl	800fc4c <WS28xxMulti::Update()>
 800fdc6:	f3bf 8f5f 	dmb	sy
 800fdca:	783b      	ldrb	r3, [r7, #0]
 800fdcc:	2b00      	cmp	r3, #0
 800fdce:	d1fa      	bne.n	800fdc6 <WS28xxMulti::Blackout()+0x32>
 800fdd0:	b003      	add	sp, #12
 800fdd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdd6:	682b      	ldr	r3, [r5, #0]
 800fdd8:	f1a3 080b 	sub.w	r8, r3, #11
 800fddc:	f1b8 0f02 	cmp.w	r8, #2
 800fde0:	d908      	bls.n	800fdf4 <WS28xxMulti::Blackout()+0x60>
 800fde2:	4b1c      	ldr	r3, [pc, #112]	; (800fe54 <WS28xxMulti::Blackout()+0xc0>)
 800fde4:	4622      	mov	r2, r4
 800fde6:	3401      	adds	r4, #1
 800fde8:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800fdec:	f843 2b04 	str.w	r2, [r3], #4
 800fdf0:	d1f9      	bne.n	800fde6 <WS28xxMulti::Blackout()+0x52>
 800fdf2:	e7e5      	b.n	800fdc0 <WS28xxMulti::Blackout()+0x2c>
 800fdf4:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800fdf8:	4626      	mov	r6, r4
 800fdfa:	f10a 0b01 	add.w	fp, sl, #1
 800fdfe:	2300      	movs	r3, #0
 800fe00:	e9cd 6600 	strd	r6, r6, [sp]
 800fe04:	461a      	mov	r2, r3
 800fe06:	4619      	mov	r1, r3
 800fe08:	4620      	mov	r0, r4
 800fe0a:	f7ff fc25 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fe0e:	f04f 0901 	mov.w	r9, #1
 800fe12:	45ca      	cmp	sl, r9
 800fe14:	d211      	bcs.n	800fe3a <WS28xxMulti::Blackout()+0xa6>
 800fe16:	f1b8 0f02 	cmp.w	r8, #2
 800fe1a:	bf15      	itete	ne
 800fe1c:	23ff      	movne	r3, #255	; 0xff
 800fe1e:	2300      	moveq	r3, #0
 800fe20:	e9cd 3300 	strdne	r3, r3, [sp]
 800fe24:	e9cd 6600 	strdeq	r6, r6, [sp]
 800fe28:	4620      	mov	r0, r4
 800fe2a:	461a      	mov	r2, r3
 800fe2c:	4659      	mov	r1, fp
 800fe2e:	3401      	adds	r4, #1
 800fe30:	f7ff fc12 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fe34:	2c10      	cmp	r4, #16
 800fe36:	d1e2      	bne.n	800fdfe <WS28xxMulti::Blackout()+0x6a>
 800fe38:	e7c2      	b.n	800fdc0 <WS28xxMulti::Blackout()+0x2c>
 800fe3a:	4649      	mov	r1, r9
 800fe3c:	e9cd 6600 	strd	r6, r6, [sp]
 800fe40:	2300      	movs	r3, #0
 800fe42:	22e0      	movs	r2, #224	; 0xe0
 800fe44:	4620      	mov	r0, r4
 800fe46:	f7ff fc07 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fe4a:	f109 0901 	add.w	r9, r9, #1
 800fe4e:	e7e0      	b.n	800fe12 <WS28xxMulti::Blackout()+0x7e>
 800fe50:	200013ac 	andcs	r1, r0, ip, lsr #7
 800fe54:	200013b4 			; <UNDEFINED> instruction: 0x200013b4

0800fe58 <WS28xxMulti::FullOn()>:
 800fe58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe5c:	4f2c      	ldr	r7, [pc, #176]	; (800ff10 <WS28xxMulti::FullOn()+0xb8>)
 800fe5e:	4605      	mov	r5, r0
 800fe60:	f3bf 8f5f 	dmb	sy
 800fe64:	783a      	ldrb	r2, [r7, #0]
 800fe66:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800fe6a:	2a00      	cmp	r2, #0
 800fe6c:	d1f8      	bne.n	800fe60 <WS28xxMulti::FullOn()+0x8>
 800fe6e:	7d6c      	ldrb	r4, [r5, #21]
 800fe70:	b194      	cbz	r4, 800fe98 <WS28xxMulti::FullOn()+0x40>
 800fe72:	4a28      	ldr	r2, [pc, #160]	; (800ff14 <WS28xxMulti::FullOn()+0xbc>)
 800fe74:	4619      	mov	r1, r3
 800fe76:	3301      	adds	r3, #1
 800fe78:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800fe7c:	f842 1b04 	str.w	r1, [r2], #4
 800fe80:	d1f9      	bne.n	800fe76 <WS28xxMulti::FullOn()+0x1e>
 800fe82:	4628      	mov	r0, r5
 800fe84:	f7ff fee2 	bl	800fc4c <WS28xxMulti::Update()>
 800fe88:	f3bf 8f5f 	dmb	sy
 800fe8c:	783b      	ldrb	r3, [r7, #0]
 800fe8e:	2b00      	cmp	r3, #0
 800fe90:	d1fa      	bne.n	800fe88 <WS28xxMulti::FullOn()+0x30>
 800fe92:	b003      	add	sp, #12
 800fe94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe98:	682e      	ldr	r6, [r5, #0]
 800fe9a:	3e0b      	subs	r6, #11
 800fe9c:	2e02      	cmp	r6, #2
 800fe9e:	d908      	bls.n	800feb2 <WS28xxMulti::FullOn()+0x5a>
 800fea0:	4b1c      	ldr	r3, [pc, #112]	; (800ff14 <WS28xxMulti::FullOn()+0xbc>)
 800fea2:	22ff      	movs	r2, #255	; 0xff
 800fea4:	3401      	adds	r4, #1
 800fea6:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800feaa:	f843 2b04 	str.w	r2, [r3], #4
 800feae:	d1f9      	bne.n	800fea4 <WS28xxMulti::FullOn()+0x4c>
 800feb0:	e7e7      	b.n	800fe82 <WS28xxMulti::FullOn()+0x2a>
 800feb2:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800feb6:	46a0      	mov	r8, r4
 800feb8:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800febc:	2300      	movs	r3, #0
 800febe:	e9cd 8800 	strd	r8, r8, [sp]
 800fec2:	461a      	mov	r2, r3
 800fec4:	4619      	mov	r1, r3
 800fec6:	4620      	mov	r0, r4
 800fec8:	f7ff fbc6 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fecc:	f04f 0b01 	mov.w	fp, #1
 800fed0:	45da      	cmp	sl, fp
 800fed2:	d211      	bcs.n	800fef8 <WS28xxMulti::FullOn()+0xa0>
 800fed4:	2e02      	cmp	r6, #2
 800fed6:	bf15      	itete	ne
 800fed8:	23ff      	movne	r3, #255	; 0xff
 800feda:	2300      	moveq	r3, #0
 800fedc:	e9cd 9900 	strdne	r9, r9, [sp]
 800fee0:	e9cd 8800 	strdeq	r8, r8, [sp]
 800fee4:	4620      	mov	r0, r4
 800fee6:	f10a 0101 	add.w	r1, sl, #1
 800feea:	461a      	mov	r2, r3
 800feec:	3401      	adds	r4, #1
 800feee:	f7ff fbb3 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fef2:	2c10      	cmp	r4, #16
 800fef4:	d1e2      	bne.n	800febc <WS28xxMulti::FullOn()+0x64>
 800fef6:	e7c4      	b.n	800fe82 <WS28xxMulti::FullOn()+0x2a>
 800fef8:	4659      	mov	r1, fp
 800fefa:	e9cd 9900 	strd	r9, r9, [sp]
 800fefe:	23ff      	movs	r3, #255	; 0xff
 800ff00:	22e0      	movs	r2, #224	; 0xe0
 800ff02:	4620      	mov	r0, r4
 800ff04:	f7ff fba8 	bl	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800ff08:	f10b 0b01 	add.w	fp, fp, #1
 800ff0c:	e7e0      	b.n	800fed0 <WS28xxMulti::FullOn()+0x78>
 800ff0e:	bf00      	nop
 800ff10:	200013ac 	andcs	r1, r0, ip, lsr #7
 800ff14:	200013b4 			; <UNDEFINED> instruction: 0x200013b4

0800ff18 <WS28xxMulti::IsUpdating()>:
 800ff18:	f3bf 8f5f 	dmb	sy
 800ff1c:	4b01      	ldr	r3, [pc, #4]	; (800ff24 <WS28xxMulti::IsUpdating()+0xc>)
 800ff1e:	7818      	ldrb	r0, [r3, #0]
 800ff20:	4770      	bx	lr
 800ff22:	bf00      	nop
 800ff24:	200013ac 	andcs	r1, r0, ip, lsr #7

0800ff28 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800ff28:	b2c8      	uxtb	r0, r1
 800ff2a:	491c      	ldr	r1, [pc, #112]	; (800ff9c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800ff2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ff30:	b570      	push	{r4, r5, r6, lr}
 800ff32:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 800ff36:	4a1a      	ldr	r2, [pc, #104]	; (800ffa0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800ff38:	f89d e010 	ldrb.w	lr, [sp, #16]
 800ff3c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800ff40:	440a      	add	r2, r1
 800ff42:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 800ff46:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 800ff4a:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 800ff4e:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 800ff52:	0092      	lsls	r2, r2, #2
 800ff54:	0080      	lsls	r0, r0, #2
 800ff56:	2180      	movs	r1, #128	; 0x80
 800ff58:	2400      	movs	r4, #0
 800ff5a:	2501      	movs	r5, #1
 800ff5c:	420b      	tst	r3, r1
 800ff5e:	f5a2 6c80 	sub.w	ip, r2, #1024	; 0x400
 800ff62:	bf16      	itet	ne
 800ff64:	f5a2 6c80 	subne.w	ip, r2, #1024	; 0x400
 800ff68:	f8cc 5000 	streq.w	r5, [ip]
 800ff6c:	f8cc 4000 	strne.w	r4, [ip]
 800ff70:	ea1e 0f01 	tst.w	lr, r1
 800ff74:	f5a2 7c00 	sub.w	ip, r2, #512	; 0x200
 800ff78:	bf16      	itet	ne
 800ff7a:	f5a2 7c00 	subne.w	ip, r2, #512	; 0x200
 800ff7e:	f8cc 5000 	streq.w	r5, [ip]
 800ff82:	f8cc 4000 	strne.w	r4, [ip]
 800ff86:	420e      	tst	r6, r1
 800ff88:	bf0c      	ite	eq
 800ff8a:	6015      	streq	r5, [r2, #0]
 800ff8c:	6014      	strne	r4, [r2, #0]
 800ff8e:	3240      	adds	r2, #64	; 0x40
 800ff90:	4290      	cmp	r0, r2
 800ff92:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800ff96:	d1e1      	bne.n	800ff5c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 800ff98:	bd70      	pop	{r4, r5, r6, pc}
 800ff9a:	bf00      	nop
 800ff9c:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 800ffa0:	e1100020 	tst	r0, r0, lsr #32

0800ffa4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800ffa4:	b2c8      	uxtb	r0, r1
 800ffa6:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 800ffaa:	4a19      	ldr	r2, [pc, #100]	; (8010010 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>)
 800ffac:	b570      	push	{r4, r5, r6, lr}
 800ffae:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800ffb2:	4918      	ldr	r1, [pc, #96]	; (8010014 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 800ffb4:	f89d c010 	ldrb.w	ip, [sp, #16]
 800ffb8:	f89d e014 	ldrb.w	lr, [sp, #20]
 800ffbc:	4411      	add	r1, r2
 800ffbe:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ffc2:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 800ffc6:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 800ffca:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 800ffce:	0089      	lsls	r1, r1, #2
 800ffd0:	0080      	lsls	r0, r0, #2
 800ffd2:	2280      	movs	r2, #128	; 0x80
 800ffd4:	2401      	movs	r4, #1
 800ffd6:	ea13 0502 	ands.w	r5, r3, r2
 800ffda:	f5a1 6680 	sub.w	r6, r1, #1024	; 0x400
 800ffde:	bf0a      	itet	eq
 800ffe0:	f5a1 6680 	subeq.w	r6, r1, #1024	; 0x400
 800ffe4:	6034      	strne	r4, [r6, #0]
 800ffe6:	6035      	streq	r5, [r6, #0]
 800ffe8:	ea1c 0502 	ands.w	r5, ip, r2
 800ffec:	f5a1 7600 	sub.w	r6, r1, #512	; 0x200
 800fff0:	bf0a      	itet	eq
 800fff2:	f5a1 7600 	subeq.w	r6, r1, #512	; 0x200
 800fff6:	6034      	strne	r4, [r6, #0]
 800fff8:	6035      	streq	r5, [r6, #0]
 800fffa:	ea1e 0502 	ands.w	r5, lr, r2
 800fffe:	bf14      	ite	ne
 8010000:	600c      	strne	r4, [r1, #0]
 8010002:	600d      	streq	r5, [r1, #0]
 8010004:	3140      	adds	r1, #64	; 0x40
 8010006:	4288      	cmp	r0, r1
 8010008:	ea4f 0252 	mov.w	r2, r2, lsr #1
 801000c:	d1e3      	bne.n	800ffd6 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x32>
 801000e:	bd70      	pop	{r4, r5, r6, pc}
 8010010:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 8010014:	e1100020 	tst	r0, r0, lsr #32

08010018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8010018:	b530      	push	{r4, r5, lr}
 801001a:	6984      	ldr	r4, [r0, #24]
 801001c:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8010020:	468c      	mov	ip, r1
 8010022:	4611      	mov	r1, r2
 8010024:	5ce2      	ldrb	r2, [r4, r3]
 8010026:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801002a:	5d65      	ldrb	r5, [r4, r5]
 801002c:	5ce3      	ldrb	r3, [r4, r3]
 801002e:	7d44      	ldrb	r4, [r0, #21]
 8010030:	bb1c      	cbnz	r4, 801007a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x62>
 8010032:	6804      	ldr	r4, [r0, #0]
 8010034:	b1cc      	cbz	r4, 801006a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x52>
 8010036:	3c0b      	subs	r4, #11
 8010038:	2c01      	cmp	r4, #1
 801003a:	9204      	str	r2, [sp, #16]
 801003c:	d94a      	bls.n	80100d4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 801003e:	ea6f 0493 	mvn.w	r4, r3, lsr #2
 8010042:	9503      	str	r5, [sp, #12]
 8010044:	f004 0430 	and.w	r4, r4, #48	; 0x30
 8010048:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 801004c:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 8010050:	f005 050c 	and.w	r5, r5, #12
 8010054:	ea44 1292 	orr.w	r2, r4, r2, lsr #6
 8010058:	432a      	orrs	r2, r5
 801005a:	3101      	adds	r1, #1
 801005c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010060:	4660      	mov	r0, ip
 8010062:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8010066:	f7ff baf7 	b.w	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801006a:	6884      	ldr	r4, [r0, #8]
 801006c:	2c05      	cmp	r4, #5
 801006e:	d854      	bhi.n	801011a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x102>
 8010070:	e8df f004 	tbb	[pc, r4]
 8010074:	4c484440 	cfstrdmi	mvd4, [r8], {64}	; 0x40
 8010078:	68843850 	stmvs	r4, {r4, r6, fp, ip, sp}
 801007c:	2c05      	cmp	r4, #5
 801007e:	d826      	bhi.n	80100ce <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 8010080:	e8df f004 	tbb	[pc, r4]
 8010084:	0b141821 	bleq	8516110 <__exidx_end+0x4fc454>
 8010088:	e9cd2503 	stmib	sp, {r0, r1, r8, sl, sp}^
 801008c:	2503      	movs	r5, #3
 801008e:	460a      	mov	r2, r1
 8010090:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010094:	4661      	mov	r1, ip
 8010096:	f7ff bf47 	b.w	800ff28 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801009a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801009e:	462b      	mov	r3, r5
 80100a0:	460a      	mov	r2, r1
 80100a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80100a6:	4661      	mov	r1, ip
 80100a8:	f7ff bf3e 	b.w	800ff28 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80100ac:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80100b0:	462b      	mov	r3, r5
 80100b2:	e7f5      	b.n	80100a0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x88>
 80100b4:	e9cd 3503 	strd	r3, r5, [sp, #12]
 80100b8:	4613      	mov	r3, r2
 80100ba:	460a      	mov	r2, r1
 80100bc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80100c0:	4661      	mov	r1, ip
 80100c2:	f7ff bf31 	b.w	800ff28 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80100c6:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80100ca:	4613      	mov	r3, r2
 80100cc:	e7f5      	b.n	80100ba <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa2>
 80100ce:	e9cd 5203 	strd	r5, r2, [sp, #12]
 80100d2:	e7dc      	b.n	801008e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x76>
 80100d4:	7c82      	ldrb	r2, [r0, #18]
 80100d6:	9503      	str	r5, [sp, #12]
 80100d8:	3101      	adds	r1, #1
 80100da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80100de:	4660      	mov	r0, ip
 80100e0:	f7ff baba 	b.w	800f658 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80100e4:	e9cd 5203 	strd	r5, r2, [sp, #12]
 80100e8:	460a      	mov	r2, r1
 80100ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80100ee:	4661      	mov	r1, ip
 80100f0:	f7ff bf58 	b.w	800ffa4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80100f4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80100f8:	4613      	mov	r3, r2
 80100fa:	e7f5      	b.n	80100e8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80100fc:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8010100:	4613      	mov	r3, r2
 8010102:	e7f1      	b.n	80100e8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8010104:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8010108:	462b      	mov	r3, r5
 801010a:	e7ed      	b.n	80100e8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 801010c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8010110:	462b      	mov	r3, r5
 8010112:	e7e9      	b.n	80100e8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8010114:	e9cd 2503 	strd	r2, r5, [sp, #12]
 8010118:	e7e6      	b.n	80100e8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 801011a:	bf00      	nop

0801011c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 801011c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801011e:	6980      	ldr	r0, [r0, #24]
 8010120:	f89d 4014 	ldrb.w	r4, [sp, #20]
 8010124:	f810 c003 	ldrb.w	ip, [r0, r3]
 8010128:	4b1c      	ldr	r3, [pc, #112]	; (801019c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>)
 801012a:	f810 e004 	ldrb.w	lr, [r0, r4]
 801012e:	eb03 1282 	add.w	r2, r3, r2, lsl #6
 8010132:	4b1b      	ldr	r3, [pc, #108]	; (80101a0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x84>)
 8010134:	b2c9      	uxtb	r1, r1
 8010136:	4413      	add	r3, r2
 8010138:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801013c:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 8010140:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8010144:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8010148:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801014c:	5c45      	ldrb	r5, [r0, r1]
 801014e:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8010152:	009b      	lsls	r3, r3, #2
 8010154:	5c46      	ldrb	r6, [r0, r1]
 8010156:	0092      	lsls	r2, r2, #2
 8010158:	2180      	movs	r1, #128	; 0x80
 801015a:	2000      	movs	r0, #0
 801015c:	2401      	movs	r4, #1
 801015e:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 8010162:	ea1e 0f01 	tst.w	lr, r1
 8010166:	bf0c      	ite	eq
 8010168:	603c      	streq	r4, [r7, #0]
 801016a:	6038      	strne	r0, [r7, #0]
 801016c:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 8010170:	ea1c 0f01 	tst.w	ip, r1
 8010174:	bf0c      	ite	eq
 8010176:	603c      	streq	r4, [r7, #0]
 8010178:	6038      	strne	r0, [r7, #0]
 801017a:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 801017e:	420d      	tst	r5, r1
 8010180:	bf0c      	ite	eq
 8010182:	603c      	streq	r4, [r7, #0]
 8010184:	6038      	strne	r0, [r7, #0]
 8010186:	420e      	tst	r6, r1
 8010188:	bf0c      	ite	eq
 801018a:	601c      	streq	r4, [r3, #0]
 801018c:	6018      	strne	r0, [r3, #0]
 801018e:	3340      	adds	r3, #64	; 0x40
 8010190:	429a      	cmp	r2, r3
 8010192:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8010196:	d1e2      	bne.n	801015e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x42>
 8010198:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801019a:	bf00      	nop
 801019c:	200013b4 			; <UNDEFINED> instruction: 0x200013b4
 80101a0:	e1100030 	tst	r0, r0, lsr r0

080101a4 <net_set_ip>:
 80101a4:	b510      	push	{r4, lr}
 80101a6:	4c05      	ldr	r4, [pc, #20]	; (80101bc <net_set_ip+0x18>)
 80101a8:	6020      	str	r0, [r4, #0]
 80101aa:	4621      	mov	r1, r4
 80101ac:	4804      	ldr	r0, [pc, #16]	; (80101c0 <net_set_ip+0x1c>)
 80101ae:	f7f8 f8b3 	bl	8008318 <arp_init>
 80101b2:	4620      	mov	r0, r4
 80101b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101b8:	f002 b884 	b.w	80122c4 <ip_set_ip>
 80101bc:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 80101c0:	200093c0 	andcs	r9, r0, r0, asr #7

080101c4 <net_set_dhcp>:
 80101c4:	b570      	push	{r4, r5, r6, lr}
 80101c6:	2400      	movs	r4, #0
 80101c8:	7014      	strb	r4, [r2, #0]
 80101ca:	4605      	mov	r5, r0
 80101cc:	4616      	mov	r6, r2
 80101ce:	4810      	ldr	r0, [pc, #64]	; (8010210 <net_set_dhcp+0x4c>)
 80101d0:	460a      	mov	r2, r1
 80101d2:	4910      	ldr	r1, [pc, #64]	; (8010214 <net_set_dhcp+0x50>)
 80101d4:	f001 fe5c 	bl	8011e90 <dhcp_client>
 80101d8:	42a0      	cmp	r0, r4
 80101da:	da17      	bge.n	801020c <net_set_dhcp+0x48>
 80101dc:	480d      	ldr	r0, [pc, #52]	; (8010214 <net_set_dhcp+0x50>)
 80101de:	f000 f859 	bl	8010294 <rfc3927>
 80101e2:	7030      	strb	r0, [r6, #0]
 80101e4:	490b      	ldr	r1, [pc, #44]	; (8010214 <net_set_dhcp+0x50>)
 80101e6:	480a      	ldr	r0, [pc, #40]	; (8010210 <net_set_dhcp+0x4c>)
 80101e8:	f7f8 f896 	bl	8008318 <arp_init>
 80101ec:	4809      	ldr	r0, [pc, #36]	; (8010214 <net_set_dhcp+0x50>)
 80101ee:	f002 f869 	bl	80122c4 <ip_set_ip>
 80101f2:	4a08      	ldr	r2, [pc, #32]	; (8010214 <net_set_dhcp+0x50>)
 80101f4:	1e6b      	subs	r3, r5, #1
 80101f6:	350b      	adds	r5, #11
 80101f8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80101fc:	f803 1f01 	strb.w	r1, [r3, #1]!
 8010200:	42ab      	cmp	r3, r5
 8010202:	d1f9      	bne.n	80101f8 <net_set_dhcp+0x34>
 8010204:	4b04      	ldr	r3, [pc, #16]	; (8010218 <net_set_dhcp+0x54>)
 8010206:	4620      	mov	r0, r4
 8010208:	701c      	strb	r4, [r3, #0]
 801020a:	bd70      	pop	{r4, r5, r6, pc}
 801020c:	2401      	movs	r4, #1
 801020e:	e7e9      	b.n	80101e4 <net_set_dhcp+0x20>
 8010210:	200093c0 	andcs	r9, r0, r0, asr #7
 8010214:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 8010218:	200093c6 	andcs	r9, r0, r6, asr #7

0801021c <net_dhcp_release>:
 801021c:	b508      	push	{r3, lr}
 801021e:	f001 ff3f 	bl	80120a0 <dhcp_client_release>
 8010222:	4b02      	ldr	r3, [pc, #8]	; (801022c <net_dhcp_release+0x10>)
 8010224:	2200      	movs	r2, #0
 8010226:	701a      	strb	r2, [r3, #0]
 8010228:	bd08      	pop	{r3, pc}
 801022a:	bf00      	nop
 801022c:	200093c6 	andcs	r9, r0, r6, asr #7

08010230 <net_set_zeroconf>:
 8010230:	b538      	push	{r3, r4, r5, lr}
 8010232:	4604      	mov	r4, r0
 8010234:	480c      	ldr	r0, [pc, #48]	; (8010268 <net_set_zeroconf+0x38>)
 8010236:	f000 f82d 	bl	8010294 <rfc3927>
 801023a:	4605      	mov	r5, r0
 801023c:	b190      	cbz	r0, 8010264 <net_set_zeroconf+0x34>
 801023e:	490a      	ldr	r1, [pc, #40]	; (8010268 <net_set_zeroconf+0x38>)
 8010240:	480a      	ldr	r0, [pc, #40]	; (801026c <net_set_zeroconf+0x3c>)
 8010242:	f7f8 f869 	bl	8008318 <arp_init>
 8010246:	4808      	ldr	r0, [pc, #32]	; (8010268 <net_set_zeroconf+0x38>)
 8010248:	f002 f83c 	bl	80122c4 <ip_set_ip>
 801024c:	4a06      	ldr	r2, [pc, #24]	; (8010268 <net_set_zeroconf+0x38>)
 801024e:	1e63      	subs	r3, r4, #1
 8010250:	340b      	adds	r4, #11
 8010252:	f812 1b01 	ldrb.w	r1, [r2], #1
 8010256:	f803 1f01 	strb.w	r1, [r3, #1]!
 801025a:	42a3      	cmp	r3, r4
 801025c:	d1f9      	bne.n	8010252 <net_set_zeroconf+0x22>
 801025e:	4b04      	ldr	r3, [pc, #16]	; (8010270 <net_set_zeroconf+0x40>)
 8010260:	2200      	movs	r2, #0
 8010262:	701a      	strb	r2, [r3, #0]
 8010264:	4628      	mov	r0, r5
 8010266:	bd38      	pop	{r3, r4, r5, pc}
 8010268:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 801026c:	200093c0 	andcs	r9, r0, r0, asr #7
 8010270:	200093c6 	andcs	r9, r0, r6, asr #7

08010274 <net_timers_run>:
 8010274:	4b05      	ldr	r3, [pc, #20]	; (801028c <net_timers_run+0x18>)
 8010276:	4a06      	ldr	r2, [pc, #24]	; (8010290 <net_timers_run+0x1c>)
 8010278:	681b      	ldr	r3, [r3, #0]
 801027a:	6811      	ldr	r1, [r2, #0]
 801027c:	4299      	cmp	r1, r3
 801027e:	d803      	bhi.n	8010288 <net_timers_run+0x14>
 8010280:	3364      	adds	r3, #100	; 0x64
 8010282:	6013      	str	r3, [r2, #0]
 8010284:	f001 bf98 	b.w	80121b8 <igmp_timer>
 8010288:	4770      	bx	lr
 801028a:	bf00      	nop
 801028c:	2000fedc 	ldrdcs	pc, [r0], -ip
 8010290:	200093cc 	andcs	r9, r0, ip, asr #7

08010294 <rfc3927>:
 8010294:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010298:	4b19      	ldr	r3, [pc, #100]	; (8010300 <rfc3927+0x6c>)
 801029a:	4f1a      	ldr	r7, [pc, #104]	; (8010304 <rfc3927+0x70>)
 801029c:	791a      	ldrb	r2, [r3, #4]
 801029e:	78dc      	ldrb	r4, [r3, #3]
 80102a0:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8010308 <rfc3927+0x74>
 80102a4:	f8d7 9000 	ldr.w	r9, [r7]
 80102a8:	f8df b060 	ldr.w	fp, [pc, #96]	; 801030c <rfc3927+0x78>
 80102ac:	f8df a060 	ldr.w	sl, [pc, #96]	; 8010310 <rfc3927+0x7c>
 80102b0:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 80102b4:	4606      	mov	r6, r0
 80102b6:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 80102ba:	25ff      	movs	r5, #255	; 0xff
 80102bc:	4659      	mov	r1, fp
 80102be:	4620      	mov	r0, r4
 80102c0:	f001 fcda 	bl	8011c78 <arp_cache_lookup>
 80102c4:	b190      	cbz	r0, 80102ec <rfc3927+0x58>
 80102c6:	ba24      	rev	r4, r4
 80102c8:	3401      	adds	r4, #1
 80102ca:	3d01      	subs	r5, #1
 80102cc:	ba24      	rev	r4, r4
 80102ce:	b2ad      	uxth	r5, r5
 80102d0:	4554      	cmp	r4, sl
 80102d2:	bf08      	it	eq
 80102d4:	4644      	moveq	r4, r8
 80102d6:	b18d      	cbz	r5, 80102fc <rfc3927+0x68>
 80102d8:	683b      	ldr	r3, [r7, #0]
 80102da:	eba3 0309 	sub.w	r3, r3, r9
 80102de:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80102e2:	d3eb      	bcc.n	80102bc <rfc3927+0x28>
 80102e4:	2400      	movs	r4, #0
 80102e6:	4623      	mov	r3, r4
 80102e8:	4620      	mov	r0, r4
 80102ea:	e002      	b.n	80102f2 <rfc3927+0x5e>
 80102ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80102f0:	2001      	movs	r0, #1
 80102f2:	e9c6 3401 	strd	r3, r4, [r6, #4]
 80102f6:	6034      	str	r4, [r6, #0]
 80102f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102fc:	462c      	mov	r4, r5
 80102fe:	e7f2      	b.n	80102e6 <rfc3927+0x52>
 8010300:	200093d0 	ldrdcs	r9, [r0], -r0
 8010304:	2000fedc 	ldrdcs	pc, [r0], -ip
 8010308:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 801030c:	200093d8 	ldrdcs	r9, [r0], -r8
 8010310:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

08010314 <_init_tcb>:
 8010314:	b510      	push	{r4, lr}
 8010316:	f100 0244 	add.w	r2, r0, #68	; 0x44
 801031a:	4603      	mov	r3, r0
 801031c:	2400      	movs	r4, #0
 801031e:	4293      	cmp	r3, r2
 8010320:	d10d      	bne.n	801033e <_init_tcb+0x2a>
 8010322:	4b08      	ldr	r3, [pc, #32]	; (8010344 <_init_tcb+0x30>)
 8010324:	681b      	ldr	r3, [r3, #0]
 8010326:	6283      	str	r3, [r0, #40]	; 0x28
 8010328:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801032c:	f640 3268 	movw	r2, #2920	; 0xb68
 8010330:	6243      	str	r3, [r0, #36]	; 0x24
 8010332:	2301      	movs	r3, #1
 8010334:	8001      	strh	r1, [r0, #0]
 8010336:	8702      	strh	r2, [r0, #56]	; 0x38
 8010338:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 801033c:	bd10      	pop	{r4, pc}
 801033e:	f803 4b01 	strb.w	r4, [r3], #1
 8010342:	e7ec      	b.n	801031e <_init_tcb+0xa>
 8010344:	2000fedc 	ldrdcs	pc, [r0], -ip

08010348 <memcpy.isra.0>:
 8010348:	3801      	subs	r0, #1
 801034a:	440a      	add	r2, r1
 801034c:	4291      	cmp	r1, r2
 801034e:	d100      	bne.n	8010352 <memcpy.isra.0+0xa>
 8010350:	4770      	bx	lr
 8010352:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010356:	f800 3f01 	strb.w	r3, [r0, #1]!
 801035a:	e7f7      	b.n	801034c <memcpy.isra.0+0x4>

0801035c <_bswap32>:
 801035c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801035e:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 8010362:	2204      	movs	r2, #4
 8010364:	4629      	mov	r1, r5
 8010366:	4604      	mov	r4, r0
 8010368:	eb0d 0002 	add.w	r0, sp, r2
 801036c:	f7ff ffec 	bl	8010348 <memcpy.isra.0>
 8010370:	9b01      	ldr	r3, [sp, #4]
 8010372:	2204      	movs	r2, #4
 8010374:	ba1b      	rev	r3, r3
 8010376:	eb0d 0102 	add.w	r1, sp, r2
 801037a:	4628      	mov	r0, r5
 801037c:	9301      	str	r3, [sp, #4]
 801037e:	3426      	adds	r4, #38	; 0x26
 8010380:	f7ff ffe2 	bl	8010348 <memcpy.isra.0>
 8010384:	2204      	movs	r2, #4
 8010386:	eb0d 0002 	add.w	r0, sp, r2
 801038a:	4621      	mov	r1, r4
 801038c:	f7ff ffdc 	bl	8010348 <memcpy.isra.0>
 8010390:	9b01      	ldr	r3, [sp, #4]
 8010392:	2204      	movs	r2, #4
 8010394:	ba1b      	rev	r3, r3
 8010396:	eb0d 0102 	add.w	r1, sp, r2
 801039a:	4620      	mov	r0, r4
 801039c:	9301      	str	r3, [sp, #4]
 801039e:	f7ff ffd3 	bl	8010348 <memcpy.isra.0>
 80103a2:	b003      	add	sp, #12
 80103a4:	bd30      	pop	{r4, r5, pc}
	...

080103a8 <_tcp_send_package>:
 80103a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80103ac:	7a0b      	ldrb	r3, [r1, #8]
 80103ae:	4c4c      	ldr	r4, [pc, #304]	; (80104e0 <_tcp_send_package+0x138>)
 80103b0:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 80103b2:	f013 0f02 	tst.w	r3, #2
 80103b6:	4605      	mov	r5, r0
 80103b8:	bf0c      	ite	eq
 80103ba:	f04f 0805 	moveq.w	r8, #5
 80103be:	f04f 0806 	movne.w	r8, #6
 80103c2:	460f      	mov	r7, r1
 80103c4:	2206      	movs	r2, #6
 80103c6:	f100 0108 	add.w	r1, r0, #8
 80103ca:	4620      	mov	r0, r4
 80103cc:	f7ff ffbc 	bl	8010348 <memcpy.isra.0>
 80103d0:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 80103d4:	f8b4 35ec 	ldrh.w	r3, [r4, #1516]	; 0x5ec
 80103d8:	8263      	strh	r3, [r4, #18]
 80103da:	b2b6      	uxth	r6, r6
 80103dc:	1c5a      	adds	r2, r3, #1
 80103de:	f105 0904 	add.w	r9, r5, #4
 80103e2:	f106 0314 	add.w	r3, r6, #20
 80103e6:	ba5b      	rev16	r3, r3
 80103e8:	f8a4 25ec 	strh.w	r2, [r4, #1516]	; 0x5ec
 80103ec:	4649      	mov	r1, r9
 80103ee:	2204      	movs	r2, #4
 80103f0:	f104 001e 	add.w	r0, r4, #30
 80103f4:	8223      	strh	r3, [r4, #16]
 80103f6:	f04f 0a00 	mov.w	sl, #0
 80103fa:	f7ff ffa5 	bl	8010348 <memcpy.isra.0>
 80103fe:	2114      	movs	r1, #20
 8010400:	f104 000e 	add.w	r0, r4, #14
 8010404:	f8a4 a018 	strh.w	sl, [r4, #24]
 8010408:	f001 ff65 	bl	80122d6 <net_chksum>
 801040c:	882b      	ldrh	r3, [r5, #0]
 801040e:	8463      	strh	r3, [r4, #34]	; 0x22
 8010410:	886b      	ldrh	r3, [r5, #2]
 8010412:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010414:	683b      	ldr	r3, [r7, #0]
 8010416:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 801041a:	ea4f 1808 	mov.w	r8, r8, lsl #4
 801041e:	687b      	ldr	r3, [r7, #4]
 8010420:	8320      	strh	r0, [r4, #24]
 8010422:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 8010426:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 801042a:	7a3b      	ldrb	r3, [r7, #8]
 801042c:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 8010430:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 8010432:	8622      	strh	r2, [r4, #48]	; 0x30
 8010434:	079b      	lsls	r3, r3, #30
 8010436:	8baa      	ldrh	r2, [r5, #28]
 8010438:	86a2      	strh	r2, [r4, #52]	; 0x34
 801043a:	bf41      	itttt	mi
 801043c:	f240 4302 	movwmi	r3, #1026	; 0x402
 8010440:	4622      	movmi	r2, r4
 8010442:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 8010444:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8010448:	bf48      	it	mi
 801044a:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 801044e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8010450:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 8010454:	bf58      	it	pl
 8010456:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 801045a:	2b00      	cmp	r3, #0
 801045c:	d13e      	bne.n	80104dc <_tcp_send_package+0x134>
 801045e:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8010460:	481f      	ldr	r0, [pc, #124]	; (80104e0 <_tcp_send_package+0x138>)
 8010462:	ba5b      	rev16	r3, r3
 8010464:	8463      	strh	r3, [r4, #34]	; 0x22
 8010466:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8010468:	ba5b      	rev16	r3, r3
 801046a:	84a3      	strh	r3, [r4, #36]	; 0x24
 801046c:	f7ff ff76 	bl	801035c <_bswap32>
 8010470:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010472:	491c      	ldr	r1, [pc, #112]	; (80104e4 <_tcp_send_package+0x13c>)
 8010474:	ba5b      	rev16	r3, r3
 8010476:	8623      	strh	r3, [r4, #48]	; 0x30
 8010478:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801047a:	a801      	add	r0, sp, #4
 801047c:	ba5b      	rev16	r3, r3
 801047e:	220c      	movs	r2, #12
 8010480:	86a3      	strh	r3, [r4, #52]	; 0x34
 8010482:	f7ff ff61 	bl	8010348 <memcpy.isra.0>
 8010486:	4918      	ldr	r1, [pc, #96]	; (80104e8 <_tcp_send_package+0x140>)
 8010488:	4816      	ldr	r0, [pc, #88]	; (80104e4 <_tcp_send_package+0x13c>)
 801048a:	2204      	movs	r2, #4
 801048c:	f7ff ff5c 	bl	8010348 <memcpy.isra.0>
 8010490:	2204      	movs	r2, #4
 8010492:	4649      	mov	r1, r9
 8010494:	4815      	ldr	r0, [pc, #84]	; (80104ec <_tcp_send_package+0x144>)
 8010496:	f7ff ff57 	bl	8010348 <memcpy.isra.0>
 801049a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801049e:	83e3      	strh	r3, [r4, #30]
 80104a0:	f106 010c 	add.w	r1, r6, #12
 80104a4:	ba73      	rev16	r3, r6
 80104a6:	480f      	ldr	r0, [pc, #60]	; (80104e4 <_tcp_send_package+0x13c>)
 80104a8:	8423      	strh	r3, [r4, #32]
 80104aa:	f001 ff14 	bl	80122d6 <net_chksum>
 80104ae:	a901      	add	r1, sp, #4
 80104b0:	4605      	mov	r5, r0
 80104b2:	220c      	movs	r2, #12
 80104b4:	480b      	ldr	r0, [pc, #44]	; (80104e4 <_tcp_send_package+0x13c>)
 80104b6:	f7ff ff47 	bl	8010348 <memcpy.isra.0>
 80104ba:	4809      	ldr	r0, [pc, #36]	; (80104e0 <_tcp_send_package+0x138>)
 80104bc:	8665      	strh	r5, [r4, #50]	; 0x32
 80104be:	f106 0122 	add.w	r1, r6, #34	; 0x22
 80104c2:	b004      	add	sp, #16
 80104c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104c8:	f005 bb22 	b.w	8015b10 <emac_eth_send>
 80104cc:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80104ce:	5cc9      	ldrb	r1, [r1, r3]
 80104d0:	54d1      	strb	r1, [r2, r3]
 80104d2:	3301      	adds	r3, #1
 80104d4:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 80104d6:	4299      	cmp	r1, r3
 80104d8:	d8f8      	bhi.n	80104cc <_tcp_send_package+0x124>
 80104da:	e7c0      	b.n	801045e <_tcp_send_package+0xb6>
 80104dc:	2300      	movs	r3, #0
 80104de:	e7f9      	b.n	80104d4 <_tcp_send_package+0x12c>
 80104e0:	10000000 	andne	r0, r0, r0
 80104e4:	10000016 	andne	r0, r0, r6, lsl r0
 80104e8:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
 80104ec:	1000001a 	andne	r0, r0, sl, lsl r0

080104f0 <_send_reset>:
 80104f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80104f2:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80104f6:	075a      	lsls	r2, r3, #29
 80104f8:	4604      	mov	r4, r0
 80104fa:	460e      	mov	r6, r1
 80104fc:	d421      	bmi.n	8010542 <_send_reset+0x52>
 80104fe:	2204      	movs	r2, #4
 8010500:	f013 0310 	ands.w	r3, r3, #16
 8010504:	f88d 200c 	strb.w	r2, [sp, #12]
 8010508:	d01d      	beq.n	8010546 <_send_reset+0x56>
 801050a:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 801050e:	4668      	mov	r0, sp
 8010510:	f7ff ff1a 	bl	8010348 <memcpy.isra.0>
 8010514:	9b00      	ldr	r3, [sp, #0]
 8010516:	9301      	str	r3, [sp, #4]
 8010518:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 801051c:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8010520:	f3c3 0540 	ubfx	r5, r3, #1, #1
 8010524:	4668      	mov	r0, sp
 8010526:	07db      	lsls	r3, r3, #31
 8010528:	f04f 0204 	mov.w	r2, #4
 801052c:	bf48      	it	mi
 801052e:	3501      	addmi	r5, #1
 8010530:	f7ff ff0a 	bl	8010348 <memcpy.isra.0>
 8010534:	9b00      	ldr	r3, [sp, #0]
 8010536:	a901      	add	r1, sp, #4
 8010538:	441d      	add	r5, r3
 801053a:	4630      	mov	r0, r6
 801053c:	9502      	str	r5, [sp, #8]
 801053e:	f7ff ff33 	bl	80103a8 <_tcp_send_package>
 8010542:	b004      	add	sp, #16
 8010544:	bd70      	pop	{r4, r5, r6, pc}
 8010546:	9301      	str	r3, [sp, #4]
 8010548:	2314      	movs	r3, #20
 801054a:	f88d 300c 	strb.w	r3, [sp, #12]
 801054e:	e7e3      	b.n	8010518 <_send_reset+0x28>

08010550 <tcp_begin>:
 8010550:	b508      	push	{r3, lr}
 8010552:	4b0b      	ldr	r3, [pc, #44]	; (8010580 <tcp_begin+0x30>)
 8010554:	f8b3 25f0 	ldrh.w	r2, [r3, #1520]	; 0x5f0
 8010558:	4282      	cmp	r2, r0
 801055a:	4601      	mov	r1, r0
 801055c:	d102      	bne.n	8010564 <tcp_begin+0x14>
 801055e:	f893 0630 	ldrb.w	r0, [r3, #1584]	; 0x630
 8010562:	b130      	cbz	r0, 8010572 <tcp_begin+0x22>
 8010564:	b12a      	cbz	r2, 8010572 <tcp_begin+0x22>
 8010566:	4807      	ldr	r0, [pc, #28]	; (8010584 <tcp_begin+0x34>)
 8010568:	f003 fcb0 	bl	8013ecc <console_error>
 801056c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010570:	bd08      	pop	{r3, pc}
 8010572:	4805      	ldr	r0, [pc, #20]	; (8010588 <tcp_begin+0x38>)
 8010574:	f8a3 15f0 	strh.w	r1, [r3, #1520]	; 0x5f0
 8010578:	f7ff fecc 	bl	8010314 <_init_tcb>
 801057c:	2000      	movs	r0, #0
 801057e:	e7f7      	b.n	8010570 <tcp_begin+0x20>
 8010580:	10000000 	andne	r0, r0, r0
 8010584:	080190ca 	stmdaeq	r1, {r1, r3, r6, r7, ip, pc}
 8010588:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

0801058c <tcp_write>:
 801058c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8010590:	b530      	push	{r4, r5, lr}
 8010592:	429a      	cmp	r2, r3
 8010594:	bf28      	it	cs
 8010596:	461a      	movcs	r2, r3
 8010598:	4615      	mov	r5, r2
 801059a:	4b12      	ldr	r3, [pc, #72]	; (80105e4 <tcp_write+0x58>)
 801059c:	2244      	movs	r2, #68	; 0x44
 801059e:	4350      	muls	r0, r2
 80105a0:	181c      	adds	r4, r3, r0
 80105a2:	b085      	sub	sp, #20
 80105a4:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80105a8:	9201      	str	r2, [sp, #4]
 80105aa:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 80105ae:	f8d4 2624 	ldr.w	r2, [r4, #1572]	; 0x624
 80105b2:	f8c4 161c 	str.w	r1, [r4, #1564]	; 0x61c
 80105b6:	9202      	str	r2, [sp, #8]
 80105b8:	4418      	add	r0, r3
 80105ba:	2218      	movs	r2, #24
 80105bc:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
 80105c0:	a901      	add	r1, sp, #4
 80105c2:	f88d 200c 	strb.w	r2, [sp, #12]
 80105c6:	f7ff feef 	bl	80103a8 <_tcp_send_package>
 80105ca:	2300      	movs	r3, #0
 80105cc:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 80105d0:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 80105d4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80105d8:	442b      	add	r3, r5
 80105da:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 80105de:	b005      	add	sp, #20
 80105e0:	bd30      	pop	{r4, r5, pc}
 80105e2:	bf00      	nop
 80105e4:	10000000 	andne	r0, r0, r0

080105e8 <tcp_read>:
 80105e8:	4b23      	ldr	r3, [pc, #140]	; (8010678 <tcp_read+0x90>)
 80105ea:	2244      	movs	r2, #68	; 0x44
 80105ec:	4342      	muls	r2, r0
 80105ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105f0:	189c      	adds	r4, r3, r2
 80105f2:	b085      	sub	sp, #20
 80105f4:	f894 5630 	ldrb.w	r5, [r4, #1584]	; 0x630
 80105f8:	2d07      	cmp	r5, #7
 80105fa:	d118      	bne.n	801062e <tcp_read+0x46>
 80105fc:	f8d4 1604 	ldr.w	r1, [r4, #1540]	; 0x604
 8010600:	9101      	str	r1, [sp, #4]
 8010602:	f8d4 1624 	ldr.w	r1, [r4, #1572]	; 0x624
 8010606:	9102      	str	r1, [sp, #8]
 8010608:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 801060c:	2111      	movs	r1, #17
 801060e:	f88d 100c 	strb.w	r1, [sp, #12]
 8010612:	1898      	adds	r0, r3, r2
 8010614:	a901      	add	r1, sp, #4
 8010616:	f7ff fec7 	bl	80103a8 <_tcp_send_package>
 801061a:	2309      	movs	r3, #9
 801061c:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 8010620:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8010624:	3301      	adds	r3, #1
 8010626:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 801062a:	2000      	movs	r0, #0
 801062c:	e022      	b.n	8010674 <tcp_read+0x8c>
 801062e:	f44f 6237 	mov.w	r2, #2928	; 0xb70
 8010632:	4350      	muls	r0, r2
 8010634:	181e      	adds	r6, r3, r0
 8010636:	f8b6 5636 	ldrh.w	r5, [r6, #1590]	; 0x636
 801063a:	f8b6 2634 	ldrh.w	r2, [r6, #1588]	; 0x634
 801063e:	42aa      	cmp	r2, r5
 8010640:	d0f3      	beq.n	801062a <tcp_read+0x42>
 8010642:	f240 52b6 	movw	r2, #1462	; 0x5b6
 8010646:	f100 0c04 	add.w	ip, r0, #4
 801064a:	436a      	muls	r2, r5
 801064c:	f203 6734 	addw	r7, r3, #1588	; 0x634
 8010650:	4494      	add	ip, r2
 8010652:	4467      	add	r7, ip
 8010654:	600f      	str	r7, [r1, #0]
 8010656:	4402      	add	r2, r0
 8010658:	441a      	add	r2, r3
 801065a:	f8b4 3628 	ldrh.w	r3, [r4, #1576]	; 0x628
 801065e:	f8b2 0bec 	ldrh.w	r0, [r2, #3052]	; 0xbec
 8010662:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
 8010666:	f8a4 3628 	strh.w	r3, [r4, #1576]	; 0x628
 801066a:	1c6b      	adds	r3, r5, #1
 801066c:	f003 0301 	and.w	r3, r3, #1
 8010670:	f8a6 3636 	strh.w	r3, [r6, #1590]	; 0x636
 8010674:	b005      	add	sp, #20
 8010676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010678:	10000000 	andne	r0, r0, r0

0801067c <memcpy.isra.0>:
 801067c:	3801      	subs	r0, #1
 801067e:	440a      	add	r2, r1
 8010680:	4291      	cmp	r1, r2
 8010682:	d100      	bne.n	8010686 <memcpy.isra.0+0xa>
 8010684:	4770      	bx	lr
 8010686:	f811 3b01 	ldrb.w	r3, [r1], #1
 801068a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801068e:	e7f7      	b.n	8010680 <memcpy.isra.0+0x4>

08010690 <net_memcpy>:
 8010690:	ea40 0301 	orr.w	r3, r0, r1
 8010694:	079b      	lsls	r3, r3, #30
 8010696:	b570      	push	{r4, r5, r6, lr}
 8010698:	d108      	bne.n	80106ac <net_memcpy+0x1c>
 801069a:	f022 0303 	bic.w	r3, r2, #3
 801069e:	1f04      	subs	r4, r0, #4
 80106a0:	18cd      	adds	r5, r1, r3
 80106a2:	42a9      	cmp	r1, r5
 80106a4:	d108      	bne.n	80106b8 <net_memcpy+0x28>
 80106a6:	1ad2      	subs	r2, r2, r3
 80106a8:	4403      	add	r3, r0
 80106aa:	e000      	b.n	80106ae <net_memcpy+0x1e>
 80106ac:	4603      	mov	r3, r0
 80106ae:	3b01      	subs	r3, #1
 80106b0:	440a      	add	r2, r1
 80106b2:	4291      	cmp	r1, r2
 80106b4:	d105      	bne.n	80106c2 <net_memcpy+0x32>
 80106b6:	bd70      	pop	{r4, r5, r6, pc}
 80106b8:	f851 6b04 	ldr.w	r6, [r1], #4
 80106bc:	f844 6f04 	str.w	r6, [r4, #4]!
 80106c0:	e7ef      	b.n	80106a2 <net_memcpy+0x12>
 80106c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80106c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80106ca:	e7f2      	b.n	80106b2 <net_memcpy+0x22>

080106cc <udp_set_ip>:
 80106cc:	b513      	push	{r0, r1, r4, lr}
 80106ce:	2204      	movs	r2, #4
 80106d0:	4604      	mov	r4, r0
 80106d2:	6803      	ldr	r3, [r0, #0]
 80106d4:	4809      	ldr	r0, [pc, #36]	; (80106fc <udp_set_ip+0x30>)
 80106d6:	9301      	str	r3, [sp, #4]
 80106d8:	eb0d 0102 	add.w	r1, sp, r2
 80106dc:	f7ff ffce 	bl	801067c <memcpy.isra.0>
 80106e0:	6862      	ldr	r2, [r4, #4]
 80106e2:	4b07      	ldr	r3, [pc, #28]	; (8010700 <udp_set_ip+0x34>)
 80106e4:	43d1      	mvns	r1, r2
 80106e6:	6019      	str	r1, [r3, #0]
 80106e8:	6823      	ldr	r3, [r4, #0]
 80106ea:	4013      	ands	r3, r2
 80106ec:	4a05      	ldr	r2, [pc, #20]	; (8010704 <udp_set_ip+0x38>)
 80106ee:	6013      	str	r3, [r2, #0]
 80106f0:	68a2      	ldr	r2, [r4, #8]
 80106f2:	4b05      	ldr	r3, [pc, #20]	; (8010708 <udp_set_ip+0x3c>)
 80106f4:	601a      	str	r2, [r3, #0]
 80106f6:	b002      	add	sp, #8
 80106f8:	bd10      	pop	{r4, pc}
 80106fa:	bf00      	nop
 80106fc:	2000f0ca 	andcs	pc, r0, sl, asr #1
 8010700:	200093e0 	andcs	r9, r0, r0, ror #7
 8010704:	200093e8 	andcs	r9, r0, r8, ror #7
 8010708:	200093e4 	andcs	r9, r0, r4, ror #7

0801070c <udp_bind>:
 801070c:	4a0a      	ldr	r2, [pc, #40]	; (8010738 <udp_bind+0x2c>)
 801070e:	b510      	push	{r4, lr}
 8010710:	2300      	movs	r3, #0
 8010712:	4614      	mov	r4, r2
 8010714:	f852 1b04 	ldr.w	r1, [r2], #4
 8010718:	4281      	cmp	r1, r0
 801071a:	d008      	beq.n	801072e <udp_bind+0x22>
 801071c:	b149      	cbz	r1, 8010732 <udp_bind+0x26>
 801071e:	3301      	adds	r3, #1
 8010720:	2b08      	cmp	r3, #8
 8010722:	d1f7      	bne.n	8010714 <udp_bind+0x8>
 8010724:	4805      	ldr	r0, [pc, #20]	; (801073c <udp_bind+0x30>)
 8010726:	f003 fbd1 	bl	8013ecc <console_error>
 801072a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801072e:	4618      	mov	r0, r3
 8010730:	bd10      	pop	{r4, pc}
 8010732:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 8010736:	e7fa      	b.n	801072e <udp_bind+0x22>
 8010738:	200093f0 	strdcs	r9, [r0], -r0
 801073c:	080190ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip, pc}

08010740 <udp_unbind>:
 8010740:	b510      	push	{r4, lr}
 8010742:	4a0c      	ldr	r2, [pc, #48]	; (8010774 <udp_unbind+0x34>)
 8010744:	2300      	movs	r3, #0
 8010746:	4611      	mov	r1, r2
 8010748:	f852 4b04 	ldr.w	r4, [r2], #4
 801074c:	4284      	cmp	r4, r0
 801074e:	d108      	bne.n	8010762 <udp_unbind+0x22>
 8010750:	2000      	movs	r0, #0
 8010752:	f640 3294 	movw	r2, #2964	; 0xb94
 8010756:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 801075a:	4353      	muls	r3, r2
 801075c:	4a06      	ldr	r2, [pc, #24]	; (8010778 <udp_unbind+0x38>)
 801075e:	50d0      	str	r0, [r2, r3]
 8010760:	bd10      	pop	{r4, pc}
 8010762:	3301      	adds	r3, #1
 8010764:	2b08      	cmp	r3, #8
 8010766:	d1ef      	bne.n	8010748 <udp_unbind+0x8>
 8010768:	4804      	ldr	r0, [pc, #16]	; (801077c <udp_unbind+0x3c>)
 801076a:	f003 fbaf 	bl	8013ecc <console_error>
 801076e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010772:	e7f5      	b.n	8010760 <udp_unbind+0x20>
 8010774:	200093f0 	strdcs	r9, [r0], -r0
 8010778:	20009410 	andcs	r9, r0, r0, lsl r4
 801077c:	080190ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, ip, pc}

08010780 <udp_recv>:
 8010780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010784:	4604      	mov	r4, r0
 8010786:	4698      	mov	r8, r3
 8010788:	4608      	mov	r0, r1
 801078a:	f640 3394 	movw	r3, #2964	; 0xb94
 801078e:	4916      	ldr	r1, [pc, #88]	; (80107e8 <udp_recv+0x68>)
 8010790:	435c      	muls	r4, r3
 8010792:	190f      	adds	r7, r1, r4
 8010794:	5b0b      	ldrh	r3, [r1, r4]
 8010796:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 801079a:	4563      	cmp	r3, ip
 801079c:	d021      	beq.n	80107e2 <udp_recv+0x62>
 801079e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80107a2:	fb03 fc0c 	mul.w	ip, r3, ip
 80107a6:	eb0c 0604 	add.w	r6, ip, r4
 80107aa:	440e      	add	r6, r1
 80107ac:	3404      	adds	r4, #4
 80107ae:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 80107b2:	4295      	cmp	r5, r2
 80107b4:	bf28      	it	cs
 80107b6:	4615      	movcs	r5, r2
 80107b8:	4464      	add	r4, ip
 80107ba:	462a      	mov	r2, r5
 80107bc:	4421      	add	r1, r4
 80107be:	f7ff ff67 	bl	8010690 <net_memcpy>
 80107c2:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 80107c6:	f8c8 3000 	str.w	r3, [r8]
 80107ca:	9b06      	ldr	r3, [sp, #24]
 80107cc:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 80107d0:	801a      	strh	r2, [r3, #0]
 80107d2:	887b      	ldrh	r3, [r7, #2]
 80107d4:	3301      	adds	r3, #1
 80107d6:	f003 0301 	and.w	r3, r3, #1
 80107da:	807b      	strh	r3, [r7, #2]
 80107dc:	4628      	mov	r0, r5
 80107de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107e2:	2500      	movs	r5, #0
 80107e4:	e7fa      	b.n	80107dc <udp_recv+0x5c>
 80107e6:	bf00      	nop
 80107e8:	20009410 	andcs	r9, r0, r0, lsl r4

080107ec <udp_recv2>:
 80107ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107ee:	4c11      	ldr	r4, [pc, #68]	; (8010834 <udp_recv2+0x48>)
 80107f0:	f640 3594 	movw	r5, #2964	; 0xb94
 80107f4:	4368      	muls	r0, r5
 80107f6:	1827      	adds	r7, r4, r0
 80107f8:	5a26      	ldrh	r6, [r4, r0]
 80107fa:	887d      	ldrh	r5, [r7, #2]
 80107fc:	42ae      	cmp	r6, r5
 80107fe:	d017      	beq.n	8010830 <udp_recv2+0x44>
 8010800:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8010804:	1d06      	adds	r6, r0, #4
 8010806:	fb0c f505 	mul.w	r5, ip, r5
 801080a:	442e      	add	r6, r5
 801080c:	4405      	add	r5, r0
 801080e:	4426      	add	r6, r4
 8010810:	442c      	add	r4, r5
 8010812:	600e      	str	r6, [r1, #0]
 8010814:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8010818:	6011      	str	r1, [r2, #0]
 801081a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 801081e:	801a      	strh	r2, [r3, #0]
 8010820:	887b      	ldrh	r3, [r7, #2]
 8010822:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8010826:	3301      	adds	r3, #1
 8010828:	f003 0301 	and.w	r3, r3, #1
 801082c:	807b      	strh	r3, [r7, #2]
 801082e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010830:	2000      	movs	r0, #0
 8010832:	e7fc      	b.n	801082e <udp_recv2+0x42>
 8010834:	20009410 	andcs	r9, r0, r0, lsl r4

08010838 <udp_send>:
 8010838:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801083c:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8010990 <udp_send+0x158>
 8010840:	461c      	mov	r4, r3
 8010842:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8010846:	4607      	mov	r7, r0
 8010848:	4688      	mov	r8, r1
 801084a:	4616      	mov	r6, r2
 801084c:	2b00      	cmp	r3, #0
 801084e:	f000 808b 	beq.w	8010968 <udp_send+0x130>
 8010852:	1c63      	adds	r3, r4, #1
 8010854:	d141      	bne.n	80108da <udp_send+0xa2>
 8010856:	4a46      	ldr	r2, [pc, #280]	; (8010970 <udp_send+0x138>)
 8010858:	2307      	movs	r3, #7
 801085a:	4611      	mov	r1, r2
 801085c:	20ff      	movs	r0, #255	; 0xff
 801085e:	e001      	b.n	8010864 <udp_send+0x2c>
 8010860:	f802 0b01 	strb.w	r0, [r2], #1
 8010864:	3b01      	subs	r3, #1
 8010866:	d1fb      	bne.n	8010860 <udp_send+0x28>
 8010868:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801086c:	83cb      	strh	r3, [r1, #30]
 801086e:	840b      	strh	r3, [r1, #32]
 8010870:	f8df a120 	ldr.w	sl, [pc, #288]	; 8010994 <udp_send+0x15c>
 8010874:	4c3e      	ldr	r4, [pc, #248]	; (8010970 <udp_send+0x138>)
 8010876:	f8ba 3000 	ldrh.w	r3, [sl]
 801087a:	8263      	strh	r3, [r4, #18]
 801087c:	f106 031c 	add.w	r3, r6, #28
 8010880:	ba5b      	rev16	r3, r3
 8010882:	2500      	movs	r5, #0
 8010884:	2114      	movs	r1, #20
 8010886:	f104 000e 	add.w	r0, r4, #14
 801088a:	8223      	strh	r3, [r4, #16]
 801088c:	8325      	strh	r5, [r4, #24]
 801088e:	f001 fd22 	bl	80122d6 <net_chksum>
 8010892:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8010896:	8320      	strh	r0, [r4, #24]
 8010898:	ba5b      	rev16	r3, r3
 801089a:	8463      	strh	r3, [r4, #34]	; 0x22
 801089c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80108a0:	ba5b      	rev16	r3, r3
 80108a2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80108a6:	84a3      	strh	r3, [r4, #36]	; 0x24
 80108a8:	f106 0308 	add.w	r3, r6, #8
 80108ac:	ba5b      	rev16	r3, r3
 80108ae:	4632      	mov	r2, r6
 80108b0:	4641      	mov	r1, r8
 80108b2:	bf28      	it	cs
 80108b4:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 80108b8:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 80108bc:	84e3      	strh	r3, [r4, #38]	; 0x26
 80108be:	f7ff fee7 	bl	8010690 <net_memcpy>
 80108c2:	4620      	mov	r0, r4
 80108c4:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 80108c8:	f005 f922 	bl	8015b10 <emac_eth_send>
 80108cc:	f8ba 3000 	ldrh.w	r3, [sl]
 80108d0:	3301      	adds	r3, #1
 80108d2:	f8aa 3000 	strh.w	r3, [sl]
 80108d6:	4628      	mov	r0, r5
 80108d8:	e037      	b.n	801094a <udp_send+0x112>
 80108da:	4b26      	ldr	r3, [pc, #152]	; (8010974 <udp_send+0x13c>)
 80108dc:	681b      	ldr	r3, [r3, #0]
 80108de:	43a3      	bics	r3, r4
 80108e0:	d10f      	bne.n	8010902 <udp_send+0xca>
 80108e2:	4a23      	ldr	r2, [pc, #140]	; (8010970 <udp_send+0x138>)
 80108e4:	2307      	movs	r3, #7
 80108e6:	21ff      	movs	r1, #255	; 0xff
 80108e8:	e001      	b.n	80108ee <udp_send+0xb6>
 80108ea:	f802 1b01 	strb.w	r1, [r2], #1
 80108ee:	3b01      	subs	r3, #1
 80108f0:	d1fb      	bne.n	80108ea <udp_send+0xb2>
 80108f2:	2204      	movs	r2, #4
 80108f4:	4820      	ldr	r0, [pc, #128]	; (8010978 <udp_send+0x140>)
 80108f6:	9401      	str	r4, [sp, #4]
 80108f8:	eb0d 0102 	add.w	r1, sp, r2
 80108fc:	f7ff febe 	bl	801067c <memcpy.isra.0>
 8010900:	e7b6      	b.n	8010870 <udp_send+0x38>
 8010902:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8010906:	2be0      	cmp	r3, #224	; 0xe0
 8010908:	d10e      	bne.n	8010928 <udp_send+0xf0>
 801090a:	491c      	ldr	r1, [pc, #112]	; (801097c <udp_send+0x144>)
 801090c:	4818      	ldr	r0, [pc, #96]	; (8010970 <udp_send+0x138>)
 801090e:	f3c4 2206 	ubfx	r2, r4, #8, #7
 8010912:	70ca      	strb	r2, [r1, #3]
 8010914:	f3c4 4207 	ubfx	r2, r4, #16, #8
 8010918:	710a      	strb	r2, [r1, #4]
 801091a:	f3c4 6207 	ubfx	r2, r4, #24, #8
 801091e:	714a      	strb	r2, [r1, #5]
 8010920:	2206      	movs	r2, #6
 8010922:	f7ff feab 	bl	801067c <memcpy.isra.0>
 8010926:	e7e4      	b.n	80108f2 <udp_send+0xba>
 8010928:	4b15      	ldr	r3, [pc, #84]	; (8010980 <udp_send+0x148>)
 801092a:	681b      	ldr	r3, [r3, #0]
 801092c:	43a3      	bics	r3, r4
 801092e:	d00f      	beq.n	8010950 <udp_send+0x118>
 8010930:	4d14      	ldr	r5, [pc, #80]	; (8010984 <udp_send+0x14c>)
 8010932:	490f      	ldr	r1, [pc, #60]	; (8010970 <udp_send+0x138>)
 8010934:	6828      	ldr	r0, [r5, #0]
 8010936:	f001 f99f 	bl	8011c78 <arp_cache_lookup>
 801093a:	682b      	ldr	r3, [r5, #0]
 801093c:	4298      	cmp	r0, r3
 801093e:	d0d8      	beq.n	80108f2 <udp_send+0xba>
 8010940:	4811      	ldr	r0, [pc, #68]	; (8010988 <udp_send+0x150>)
 8010942:	f003 fac3 	bl	8013ecc <console_error>
 8010946:	f06f 0002 	mvn.w	r0, #2
 801094a:	b002      	add	sp, #8
 801094c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010950:	4907      	ldr	r1, [pc, #28]	; (8010970 <udp_send+0x138>)
 8010952:	4620      	mov	r0, r4
 8010954:	f001 f990 	bl	8011c78 <arp_cache_lookup>
 8010958:	42a0      	cmp	r0, r4
 801095a:	d0ca      	beq.n	80108f2 <udp_send+0xba>
 801095c:	480b      	ldr	r0, [pc, #44]	; (801098c <udp_send+0x154>)
 801095e:	f003 fab5 	bl	8013ecc <console_error>
 8010962:	f06f 0001 	mvn.w	r0, #1
 8010966:	e7f0      	b.n	801094a <udp_send+0x112>
 8010968:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801096c:	e7ed      	b.n	801094a <udp_send+0x112>
 801096e:	bf00      	nop
 8010970:	2000f0b0 	strhcs	pc, [r0], -r0	; <UNPREDICTABLE>
 8010974:	200093e0 	andcs	r9, r0, r0, ror #7
 8010978:	2000f0ce 	andcs	pc, r0, lr, asr #1
 801097c:	20000014 	andcs	r0, r0, r4, lsl r0
 8010980:	200093e8 	andcs	r9, r0, r8, ror #7
 8010984:	200093e4 	andcs	r9, r0, r4, ror #7
 8010988:	080190f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, ip, pc}
 801098c:	0801911d 	stmdaeq	r1, {r0, r2, r3, r4, r8, ip, pc}
 8010990:	200093f0 	strdcs	r9, [r0], -r0
 8010994:	200093ec 	andcs	r9, r0, ip, ror #7

08010998 <strlen>:
 8010998:	4603      	mov	r3, r0
 801099a:	461a      	mov	r2, r3
 801099c:	3301      	adds	r3, #1
 801099e:	7811      	ldrb	r1, [r2, #0]
 80109a0:	2900      	cmp	r1, #0
 80109a2:	d1fa      	bne.n	801099a <strlen+0x2>
 80109a4:	1a10      	subs	r0, r2, r0
 80109a6:	4770      	bx	lr

080109a8 <strcmp>:
 80109a8:	1e43      	subs	r3, r0, #1
 80109aa:	3901      	subs	r1, #1
 80109ac:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80109b0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80109b4:	4290      	cmp	r0, r2
 80109b6:	d001      	beq.n	80109bc <strcmp+0x14>
 80109b8:	1a80      	subs	r0, r0, r2
 80109ba:	e001      	b.n	80109c0 <strcmp+0x18>
 80109bc:	2800      	cmp	r0, #0
 80109be:	d1f5      	bne.n	80109ac <strcmp+0x4>
 80109c0:	4770      	bx	lr

080109c2 <strcpy.isra.0>:
 80109c2:	3801      	subs	r0, #1
 80109c4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80109c8:	f800 3f01 	strb.w	r3, [r0, #1]!
 80109cc:	2b00      	cmp	r3, #0
 80109ce:	d1f9      	bne.n	80109c4 <strcpy.isra.0+0x2>
 80109d0:	4770      	bx	lr

080109d2 <strcat.isra.0>:
 80109d2:	b513      	push	{r0, r1, r4, lr}
 80109d4:	4604      	mov	r4, r0
 80109d6:	9101      	str	r1, [sp, #4]
 80109d8:	f7ff ffde 	bl	8010998 <strlen>
 80109dc:	9901      	ldr	r1, [sp, #4]
 80109de:	4420      	add	r0, r4
 80109e0:	b002      	add	sp, #8
 80109e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109e6:	f7ff bfec 	b.w	80109c2 <strcpy.isra.0>
	...

080109ec <MDNS::MDNS()>:
 80109ec:	b513      	push	{r0, r1, r4, lr}
 80109ee:	4604      	mov	r4, r0
 80109f0:	a901      	add	r1, sp, #4
 80109f2:	4804      	ldr	r0, [pc, #16]	; (8010a04 <MDNS::MDNS()+0x18>)
 80109f4:	f003 fc08 	bl	8014208 <inet_aton>
 80109f8:	4b03      	ldr	r3, [pc, #12]	; (8010a08 <MDNS::MDNS()+0x1c>)
 80109fa:	9a01      	ldr	r2, [sp, #4]
 80109fc:	601a      	str	r2, [r3, #0]
 80109fe:	4620      	mov	r0, r4
 8010a00:	b002      	add	sp, #8
 8010a02:	bd10      	pop	{r4, pc}
 8010a04:	0801914e 	stmdaeq	r1, {r1, r2, r3, r6, r8, ip, pc}
 8010a08:	2000f6a4 	andcs	pc, r0, r4, lsr #13

08010a0c <MDNS::SetName(char const*)>:
 8010a0c:	b538      	push	{r3, r4, r5, lr}
 8010a0e:	4d0b      	ldr	r5, [pc, #44]	; (8010a3c <MDNS::SetName(char const*)+0x30>)
 8010a10:	6828      	ldr	r0, [r5, #0]
 8010a12:	460c      	mov	r4, r1
 8010a14:	b108      	cbz	r0, 8010a1a <MDNS::SetName(char const*)+0xe>
 8010a16:	f003 fbf1 	bl	80141fc <operator delete[](void*)>
 8010a1a:	4620      	mov	r0, r4
 8010a1c:	f7ff ffbc 	bl	8010998 <strlen>
 8010a20:	3007      	adds	r0, #7
 8010a22:	f003 fbef 	bl	8014204 <operator new[](unsigned int)>
 8010a26:	4621      	mov	r1, r4
 8010a28:	6028      	str	r0, [r5, #0]
 8010a2a:	f7ff ffca 	bl	80109c2 <strcpy.isra.0>
 8010a2e:	6828      	ldr	r0, [r5, #0]
 8010a30:	4903      	ldr	r1, [pc, #12]	; (8010a40 <MDNS::SetName(char const*)+0x34>)
 8010a32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a36:	f7ff bfcc 	b.w	80109d2 <strcat.isra.0>
 8010a3a:	bf00      	nop
 8010a3c:	2000fad4 	ldrdcs	pc, [r0], -r4
 8010a40:	0801915e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, ip, pc}

08010a44 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8010a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a48:	f04f 0e00 	mov.w	lr, #0
 8010a4c:	4e1c      	ldr	r6, [pc, #112]	; (8010ac0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 8010a4e:	4f1d      	ldr	r7, [pc, #116]	; (8010ac4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 8010a50:	4675      	mov	r5, lr
 8010a52:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8010a56:	780b      	ldrb	r3, [r1, #0]
 8010a58:	1c68      	adds	r0, r5, #1
 8010a5a:	b913      	cbnz	r3, 8010a62 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 8010a5c:	7013      	strb	r3, [r2, #0]
 8010a5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a62:	2b3f      	cmp	r3, #63	; 0x3f
 8010a64:	d91c      	bls.n	8010aa0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 8010a66:	7849      	ldrb	r1, [r1, #1]
 8010a68:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8010a6c:	430b      	orrs	r3, r1
 8010a6e:	6839      	ldr	r1, [r7, #0]
 8010a70:	5ccc      	ldrb	r4, [r1, r3]
 8010a72:	3301      	adds	r3, #1
 8010a74:	4419      	add	r1, r3
 8010a76:	f1be 0f00 	cmp.w	lr, #0
 8010a7a:	bf08      	it	eq
 8010a7c:	4605      	moveq	r5, r0
 8010a7e:	2300      	movs	r3, #0
 8010a80:	42a3      	cmp	r3, r4
 8010a82:	5cc8      	ldrb	r0, [r1, r3]
 8010a84:	d309      	bcc.n	8010a9a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 8010a86:	4421      	add	r1, r4
 8010a88:	f04f 0e01 	mov.w	lr, #1
 8010a8c:	4414      	add	r4, r2
 8010a8e:	780b      	ldrb	r3, [r1, #0]
 8010a90:	b10b      	cbz	r3, 8010a96 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 8010a92:	f804 cb01 	strb.w	ip, [r4], #1
 8010a96:	4622      	mov	r2, r4
 8010a98:	e7dd      	b.n	8010a56 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8010a9a:	54d0      	strb	r0, [r2, r3]
 8010a9c:	3301      	adds	r3, #1
 8010a9e:	e7ef      	b.n	8010a80 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8010aa0:	4688      	mov	r8, r1
 8010aa2:	18d4      	adds	r4, r2, r3
 8010aa4:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8010aa8:	f802 9b01 	strb.w	r9, [r2], #1
 8010aac:	4294      	cmp	r4, r2
 8010aae:	d1f9      	bne.n	8010aa4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8010ab0:	1c5a      	adds	r2, r3, #1
 8010ab2:	4411      	add	r1, r2
 8010ab4:	f1be 0f00 	cmp.w	lr, #0
 8010ab8:	d1e9      	bne.n	8010a8e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8010aba:	181d      	adds	r5, r3, r0
 8010abc:	e7e7      	b.n	8010a8e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8010abe:	bf00      	nop
 8010ac0:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8010ac4:	2000fad8 	ldrdcs	pc, [r0], -r8

08010ac8 <MDNS::FindFirstDotFromRight(char const*) const>:
 8010ac8:	b510      	push	{r4, lr}
 8010aca:	4608      	mov	r0, r1
 8010acc:	460c      	mov	r4, r1
 8010ace:	f7ff ff63 	bl	8010998 <strlen>
 8010ad2:	4420      	add	r0, r4
 8010ad4:	42a0      	cmp	r0, r4
 8010ad6:	d903      	bls.n	8010ae0 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8010ad8:	f810 3901 	ldrb.w	r3, [r0], #-1
 8010adc:	2b2e      	cmp	r3, #46	; 0x2e
 8010ade:	d1f9      	bne.n	8010ad4 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8010ae0:	3001      	adds	r0, #1
 8010ae2:	bd10      	pop	{r4, pc}

08010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>:
 8010ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ae6:	4610      	mov	r0, r2
 8010ae8:	1c44      	adds	r4, r0, #1
 8010aea:	460f      	mov	r7, r1
 8010aec:	463d      	mov	r5, r7
 8010aee:	f817 6b01 	ldrb.w	r6, [r7], #1
 8010af2:	b946      	cbnz	r6, 8010b06 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 8010af4:	1a69      	subs	r1, r5, r1
 8010af6:	7001      	strb	r1, [r0, #0]
 8010af8:	7829      	ldrb	r1, [r5, #0]
 8010afa:	b949      	cbnz	r1, 8010b10 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8010afc:	b10b      	cbz	r3, 8010b02 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8010afe:	f804 1b01 	strb.w	r1, [r4], #1
 8010b02:	1aa0      	subs	r0, r4, r2
 8010b04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b06:	2e2e      	cmp	r6, #46	; 0x2e
 8010b08:	d0f4      	beq.n	8010af4 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8010b0a:	f804 6b01 	strb.w	r6, [r4], #1
 8010b0e:	e7ed      	b.n	8010aec <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8010b10:	1c69      	adds	r1, r5, #1
 8010b12:	4620      	mov	r0, r4
 8010b14:	e7e8      	b.n	8010ae8 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08010b18 <MDNS::CreateAnswerLocalIpAddress()>:
 8010b18:	b510      	push	{r4, lr}
 8010b1a:	4c10      	ldr	r4, [pc, #64]	; (8010b5c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8010b1c:	4910      	ldr	r1, [pc, #64]	; (8010b60 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8010b1e:	2384      	movs	r3, #132	; 0x84
 8010b20:	80e3      	strh	r3, [r4, #6]
 8010b22:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8010b26:	2300      	movs	r3, #0
 8010b28:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8010b2c:	6809      	ldr	r1, [r1, #0]
 8010b2e:	f104 0210 	add.w	r2, r4, #16
 8010b32:	2301      	movs	r3, #1
 8010b34:	f7ff ffd6 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010b38:	490a      	ldr	r1, [pc, #40]	; (8010b64 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8010b3a:	5011      	str	r1, [r2, r0]
 8010b3c:	1813      	adds	r3, r2, r0
 8010b3e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8010b42:	605a      	str	r2, [r3, #4]
 8010b44:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010b48:	811a      	strh	r2, [r3, #8]
 8010b4a:	4a07      	ldr	r2, [pc, #28]	; (8010b68 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8010b4c:	6812      	ldr	r2, [r2, #0]
 8010b4e:	6952      	ldr	r2, [r2, #20]
 8010b50:	f8c3 200a 	str.w	r2, [r3, #10]
 8010b54:	1b1b      	subs	r3, r3, r4
 8010b56:	330a      	adds	r3, #10
 8010b58:	6023      	str	r3, [r4, #0]
 8010b5a:	bd10      	pop	{r4, pc}
 8010b5c:	2000f6a8 	andcs	pc, r0, r8, lsr #13
 8010b60:	2000fad4 	ldrdcs	pc, [r0], -r4
 8010b64:	01800100 	orreq	r0, r0, r0, lsl #2
 8010b68:	2000fadc 	ldrdcs	pc, [r0], -ip

08010b6c <MDNS::Start()>:
 8010b6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010b6e:	4c1d      	ldr	r4, [pc, #116]	; (8010be4 <MDNS::Start()+0x78>)
 8010b70:	4e1d      	ldr	r6, [pc, #116]	; (8010be8 <MDNS::Start()+0x7c>)
 8010b72:	4f1e      	ldr	r7, [pc, #120]	; (8010bec <MDNS::Start()+0x80>)
 8010b74:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8010b78:	4605      	mov	r5, r0
 8010b7a:	6820      	ldr	r0, [r4, #0]
 8010b7c:	f000 fb29 	bl	80111d2 <Network::Begin(unsigned short)>
 8010b80:	683a      	ldr	r2, [r7, #0]
 8010b82:	6030      	str	r0, [r6, #0]
 8010b84:	4601      	mov	r1, r0
 8010b86:	6820      	ldr	r0, [r4, #0]
 8010b88:	f000 fb34 	bl	80111f4 <Network::JoinGroup(int, unsigned int)>
 8010b8c:	4b18      	ldr	r3, [pc, #96]	; (8010bf0 <MDNS::Start()+0x84>)
 8010b8e:	681b      	ldr	r3, [r3, #0]
 8010b90:	b923      	cbnz	r3, 8010b9c <MDNS::Start()+0x30>
 8010b92:	6821      	ldr	r1, [r4, #0]
 8010b94:	4628      	mov	r0, r5
 8010b96:	3120      	adds	r1, #32
 8010b98:	f7ff ff38 	bl	8010a0c <MDNS::SetName(char const*)>
 8010b9c:	4628      	mov	r0, r5
 8010b9e:	f7ff ffbb 	bl	8010b18 <MDNS::CreateAnswerLocalIpAddress()>
 8010ba2:	4914      	ldr	r1, [pc, #80]	; (8010bf4 <MDNS::Start()+0x88>)
 8010ba4:	7830      	ldrb	r0, [r6, #0]
 8010ba6:	f831 2b04 	ldrh.w	r2, [r1], #4
 8010baa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010bae:	9300      	str	r3, [sp, #0]
 8010bb0:	683b      	ldr	r3, [r7, #0]
 8010bb2:	f7ff fe41 	bl	8010838 <udp_send>
 8010bb6:	6820      	ldr	r0, [r4, #0]
 8010bb8:	4c0f      	ldr	r4, [pc, #60]	; (8010bf8 <MDNS::Start()+0x8c>)
 8010bba:	f100 0260 	add.w	r2, r0, #96	; 0x60
 8010bbe:	233f      	movs	r3, #63	; 0x3f
 8010bc0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8010bc4:	b929      	cbnz	r1, 8010bd2 <MDNS::Start()+0x66>
 8010bc6:	4413      	add	r3, r2
 8010bc8:	429a      	cmp	r2, r3
 8010bca:	d006      	beq.n	8010bda <MDNS::Start()+0x6e>
 8010bcc:	f802 1b01 	strb.w	r1, [r2], #1
 8010bd0:	e7fa      	b.n	8010bc8 <MDNS::Start()+0x5c>
 8010bd2:	3b01      	subs	r3, #1
 8010bd4:	f802 1b01 	strb.w	r1, [r2], #1
 8010bd8:	d1f2      	bne.n	8010bc0 <MDNS::Start()+0x54>
 8010bda:	2300      	movs	r3, #0
 8010bdc:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 8010be0:	b003      	add	sp, #12
 8010be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010be4:	2000fadc 	ldrdcs	pc, [r0], -ip
 8010be8:	2000001c 	andcs	r0, r0, ip, lsl r0
 8010bec:	2000f6a4 	andcs	pc, r0, r4, lsr #13
 8010bf0:	2000fad4 	ldrdcs	pc, [r0], -r4
 8010bf4:	2000f6a8 	andcs	pc, r0, r8, lsr #13
 8010bf8:	0801915e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, ip, pc}

08010bfc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8010bfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010bfe:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8010c02:	4c1b      	ldr	r4, [pc, #108]	; (8010c70 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 8010c04:	2300      	movs	r3, #0
 8010c06:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8010c0a:	f854 100c 	ldr.w	r1, [r4, ip]
 8010c0e:	4607      	mov	r7, r0
 8010c10:	f7ff ff68 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c14:	4616      	mov	r6, r2
 8010c16:	7bac      	ldrb	r4, [r5, #14]
 8010c18:	4916      	ldr	r1, [pc, #88]	; (8010c74 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8010c1a:	4402      	add	r2, r0
 8010c1c:	4816      	ldr	r0, [pc, #88]	; (8010c78 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8010c1e:	2301      	movs	r3, #1
 8010c20:	429c      	cmp	r4, r3
 8010c22:	bf18      	it	ne
 8010c24:	4601      	movne	r1, r0
 8010c26:	4638      	mov	r0, r7
 8010c28:	f7ff ff5c 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c2c:	4b13      	ldr	r3, [pc, #76]	; (8010c7c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8010c2e:	5013      	str	r3, [r2, r0]
 8010c30:	1814      	adds	r4, r2, r0
 8010c32:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010c36:	6063      	str	r3, [r4, #4]
 8010c38:	4b11      	ldr	r3, [pc, #68]	; (8010c80 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8010c3a:	6819      	ldr	r1, [r3, #0]
 8010c3c:	9101      	str	r1, [sp, #4]
 8010c3e:	4608      	mov	r0, r1
 8010c40:	f7ff feaa 	bl	8010998 <strlen>
 8010c44:	f100 0308 	add.w	r3, r0, #8
 8010c48:	ba5b      	rev16	r3, r3
 8010c4a:	8123      	strh	r3, [r4, #8]
 8010c4c:	2300      	movs	r3, #0
 8010c4e:	f8c4 300a 	str.w	r3, [r4, #10]
 8010c52:	89ab      	ldrh	r3, [r5, #12]
 8010c54:	9901      	ldr	r1, [sp, #4]
 8010c56:	ba5b      	rev16	r3, r3
 8010c58:	81e3      	strh	r3, [r4, #14]
 8010c5a:	f104 0210 	add.w	r2, r4, #16
 8010c5e:	2301      	movs	r3, #1
 8010c60:	4638      	mov	r0, r7
 8010c62:	f7ff ff3f 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c66:	4410      	add	r0, r2
 8010c68:	1b80      	subs	r0, r0, r6
 8010c6a:	b003      	add	sp, #12
 8010c6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c6e:	bf00      	nop
 8010c70:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 8010c74:	0801915a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, pc}
 8010c78:	08019177 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, ip, pc}
 8010c7c:	01802100 	orreq	r2, r0, r0, lsl #2
 8010c80:	2000fad4 	ldrdcs	pc, [r0], -r4

08010c84 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8010c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c88:	4e19      	ldr	r6, [pc, #100]	; (8010cf0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8010c8a:	010f      	lsls	r7, r1, #4
 8010c8c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8010c90:	2300      	movs	r3, #0
 8010c92:	59f1      	ldr	r1, [r6, r7]
 8010c94:	4604      	mov	r4, r0
 8010c96:	f7ff ff25 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c9a:	4690      	mov	r8, r2
 8010c9c:	7bae      	ldrb	r6, [r5, #14]
 8010c9e:	4915      	ldr	r1, [pc, #84]	; (8010cf4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8010ca0:	4402      	add	r2, r0
 8010ca2:	4815      	ldr	r0, [pc, #84]	; (8010cf8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8010ca4:	2301      	movs	r3, #1
 8010ca6:	429e      	cmp	r6, r3
 8010ca8:	bf18      	it	ne
 8010caa:	4601      	movne	r1, r0
 8010cac:	4620      	mov	r0, r4
 8010cae:	f7ff ff19 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010cb2:	4b12      	ldr	r3, [pc, #72]	; (8010cfc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8010cb4:	5013      	str	r3, [r2, r0]
 8010cb6:	1816      	adds	r6, r2, r0
 8010cb8:	68a8      	ldr	r0, [r5, #8]
 8010cba:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010cbe:	6073      	str	r3, [r6, #4]
 8010cc0:	f106 040b 	add.w	r4, r6, #11
 8010cc4:	b938      	cbnz	r0, 8010cd6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8010cc6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010cca:	8133      	strh	r3, [r6, #8]
 8010ccc:	72b0      	strb	r0, [r6, #10]
 8010cce:	eba4 0008 	sub.w	r0, r4, r8
 8010cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010cd6:	f7ff fe5f 	bl	8010998 <strlen>
 8010cda:	1c43      	adds	r3, r0, #1
 8010cdc:	72b0      	strb	r0, [r6, #10]
 8010cde:	ba5b      	rev16	r3, r3
 8010ce0:	4607      	mov	r7, r0
 8010ce2:	68a9      	ldr	r1, [r5, #8]
 8010ce4:	8133      	strh	r3, [r6, #8]
 8010ce6:	4620      	mov	r0, r4
 8010ce8:	f7ff fe6b 	bl	80109c2 <strcpy.isra.0>
 8010cec:	443c      	add	r4, r7
 8010cee:	e7ee      	b.n	8010cce <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8010cf0:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 8010cf4:	0801915a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, pc}
 8010cf8:	08019177 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, ip, pc}
 8010cfc:	01801000 	orreq	r1, r0, r0

08010d00 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8010d00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010d04:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8010d78 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x78>
 8010d08:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8010d0c:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8010d10:	2301      	movs	r3, #1
 8010d12:	6869      	ldr	r1, [r5, #4]
 8010d14:	4607      	mov	r7, r0
 8010d16:	f7ff fee5 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d1a:	f858 1009 	ldr.w	r1, [r8, r9]
 8010d1e:	4b13      	ldr	r3, [pc, #76]	; (8010d6c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8010d20:	5013      	str	r3, [r2, r0]
 8010d22:	1816      	adds	r6, r2, r0
 8010d24:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010d28:	6073      	str	r3, [r6, #4]
 8010d2a:	4608      	mov	r0, r1
 8010d2c:	4614      	mov	r4, r2
 8010d2e:	9101      	str	r1, [sp, #4]
 8010d30:	f7ff fe32 	bl	8010998 <strlen>
 8010d34:	f100 030d 	add.w	r3, r0, #13
 8010d38:	ba5b      	rev16	r3, r3
 8010d3a:	9901      	ldr	r1, [sp, #4]
 8010d3c:	8133      	strh	r3, [r6, #8]
 8010d3e:	f106 020a 	add.w	r2, r6, #10
 8010d42:	2300      	movs	r3, #0
 8010d44:	4638      	mov	r0, r7
 8010d46:	f7ff fecd 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d4a:	7bad      	ldrb	r5, [r5, #14]
 8010d4c:	4908      	ldr	r1, [pc, #32]	; (8010d70 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8010d4e:	4402      	add	r2, r0
 8010d50:	4808      	ldr	r0, [pc, #32]	; (8010d74 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 8010d52:	2301      	movs	r3, #1
 8010d54:	429d      	cmp	r5, r3
 8010d56:	bf18      	it	ne
 8010d58:	4601      	movne	r1, r0
 8010d5a:	4638      	mov	r0, r7
 8010d5c:	f7ff fec2 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d60:	4410      	add	r0, r2
 8010d62:	1b00      	subs	r0, r0, r4
 8010d64:	b003      	add	sp, #12
 8010d66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d6a:	bf00      	nop
 8010d6c:	01000c00 	tsteq	r0, r0, lsl #24
 8010d70:	0801915a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, pc}
 8010d74:	08019177 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, ip, pc}
 8010d78:	2000f8ac 	andcs	pc, r0, ip, lsr #17

08010d7c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8010d7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010d7e:	2301      	movs	r3, #1
 8010d80:	460f      	mov	r7, r1
 8010d82:	4910      	ldr	r1, [pc, #64]	; (8010dc4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8010d84:	4606      	mov	r6, r0
 8010d86:	f7ff fead 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d8a:	490f      	ldr	r1, [pc, #60]	; (8010dc8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8010d8c:	4b0f      	ldr	r3, [pc, #60]	; (8010dcc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x50>)
 8010d8e:	5013      	str	r3, [r2, r0]
 8010d90:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 8010d94:	1815      	adds	r5, r2, r0
 8010d96:	6849      	ldr	r1, [r1, #4]
 8010d98:	9101      	str	r1, [sp, #4]
 8010d9a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010d9e:	606b      	str	r3, [r5, #4]
 8010da0:	4608      	mov	r0, r1
 8010da2:	4614      	mov	r4, r2
 8010da4:	f7ff fdf8 	bl	8010998 <strlen>
 8010da8:	1c83      	adds	r3, r0, #2
 8010daa:	ba5b      	rev16	r3, r3
 8010dac:	812b      	strh	r3, [r5, #8]
 8010dae:	f105 020a 	add.w	r2, r5, #10
 8010db2:	9901      	ldr	r1, [sp, #4]
 8010db4:	2301      	movs	r3, #1
 8010db6:	4630      	mov	r0, r6
 8010db8:	f7ff fe94 	bl	8010ae4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010dbc:	4410      	add	r0, r2
 8010dbe:	1b00      	subs	r0, r0, r4
 8010dc0:	b003      	add	sp, #12
 8010dc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dc4:	08019165 	stmdaeq	r1, {r0, r2, r5, r6, r8, ip, pc}
 8010dc8:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 8010dcc:	01000c00 	tsteq	r0, r0, lsl #24

08010dd0 <MDNS::CreateMDNSMessage(unsigned int)>:
 8010dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010dd2:	4d1a      	ldr	r5, [pc, #104]	; (8010e3c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 8010dd4:	2384      	movs	r3, #132	; 0x84
 8010dd6:	80eb      	strh	r3, [r5, #6]
 8010dd8:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8010ddc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010de0:	f105 0410 	add.w	r4, r5, #16
 8010de4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8010de8:	4622      	mov	r2, r4
 8010dea:	4606      	mov	r6, r0
 8010dec:	460f      	mov	r7, r1
 8010dee:	f7ff ff05 	bl	8010bfc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8010df2:	4404      	add	r4, r0
 8010df4:	4622      	mov	r2, r4
 8010df6:	4639      	mov	r1, r7
 8010df8:	4630      	mov	r0, r6
 8010dfa:	f7ff ff43 	bl	8010c84 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8010dfe:	4404      	add	r4, r0
 8010e00:	4622      	mov	r2, r4
 8010e02:	4639      	mov	r1, r7
 8010e04:	4630      	mov	r0, r6
 8010e06:	f7ff ffb9 	bl	8010d7c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 8010e0a:	4404      	add	r4, r0
 8010e0c:	4622      	mov	r2, r4
 8010e0e:	4639      	mov	r1, r7
 8010e10:	4630      	mov	r0, r6
 8010e12:	f7ff ff75 	bl	8010d00 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8010e16:	4a0a      	ldr	r2, [pc, #40]	; (8010e40 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8010e18:	f852 3b10 	ldr.w	r3, [r2], #16
 8010e1c:	4420      	add	r0, r4
 8010e1e:	3b0c      	subs	r3, #12
 8010e20:	1e44      	subs	r4, r0, #1
 8010e22:	4619      	mov	r1, r3
 8010e24:	3901      	subs	r1, #1
 8010e26:	d204      	bcs.n	8010e32 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8010e28:	18c4      	adds	r4, r0, r3
 8010e2a:	4b06      	ldr	r3, [pc, #24]	; (8010e44 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 8010e2c:	1ae4      	subs	r4, r4, r3
 8010e2e:	602c      	str	r4, [r5, #0]
 8010e30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e32:	f812 6b01 	ldrb.w	r6, [r2], #1
 8010e36:	f804 6f01 	strb.w	r6, [r4, #1]!
 8010e3a:	e7f3      	b.n	8010e24 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8010e3c:	2000f8d0 	ldrdcs	pc, [r0], -r0
 8010e40:	2000f6a8 	andcs	pc, r0, r8, lsr #13
 8010e44:	2000f8d4 	ldrdcs	pc, [r0], -r4

08010e48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8010e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e4c:	4d41      	ldr	r5, [pc, #260]	; (8010f54 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8010e4e:	b085      	sub	sp, #20
 8010e50:	682c      	ldr	r4, [r5, #0]
 8010e52:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
 8010e56:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8010e5a:	4607      	mov	r7, r0
 8010e5c:	4616      	mov	r6, r2
 8010e5e:	b11c      	cbz	r4, 8010e68 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x20>
 8010e60:	692a      	ldr	r2, [r5, #16]
 8010e62:	2a00      	cmp	r2, #0
 8010e64:	d172      	bne.n	8010f4c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>
 8010e66:	2401      	movs	r4, #1
 8010e68:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 8010e6c:	ea4f 1804 	mov.w	r8, r4, lsl #4
 8010e70:	8193      	strh	r3, [r2, #12]
 8010e72:	f882 a00e 	strb.w	sl, [r2, #14]
 8010e76:	2900      	cmp	r1, #0
 8010e78:	d158      	bne.n	8010f2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe4>
 8010e7a:	4b37      	ldr	r3, [pc, #220]	; (8010f58 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8010e7c:	6818      	ldr	r0, [r3, #0]
 8010e7e:	3020      	adds	r0, #32
 8010e80:	f7ff fd8a 	bl	8010998 <strlen>
 8010e84:	4683      	mov	fp, r0
 8010e86:	4630      	mov	r0, r6
 8010e88:	f7ff fd86 	bl	8010998 <strlen>
 8010e8c:	4458      	add	r0, fp
 8010e8e:	3001      	adds	r0, #1
 8010e90:	f003 f9b8 	bl	8014204 <operator new[](unsigned int)>
 8010e94:	4b30      	ldr	r3, [pc, #192]	; (8010f58 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8010e96:	f845 0008 	str.w	r0, [r5, r8]
 8010e9a:	6819      	ldr	r1, [r3, #0]
 8010e9c:	3120      	adds	r1, #32
 8010e9e:	f7ff fd90 	bl	80109c2 <strcpy.isra.0>
 8010ea2:	f855 0008 	ldr.w	r0, [r5, r8]
 8010ea6:	4631      	mov	r1, r6
 8010ea8:	f7ff fd93 	bl	80109d2 <strcat.isra.0>
 8010eac:	4631      	mov	r1, r6
 8010eae:	4638      	mov	r0, r7
 8010eb0:	f7ff fe0a 	bl	8010ac8 <MDNS::FindFirstDotFromRight(char const*) const>
 8010eb4:	9003      	str	r0, [sp, #12]
 8010eb6:	f7ff fd6f 	bl	8010998 <strlen>
 8010eba:	300d      	adds	r0, #13
 8010ebc:	f003 f9a2 	bl	8014204 <operator new[](unsigned int)>
 8010ec0:	eb05 0b08 	add.w	fp, r5, r8
 8010ec4:	9903      	ldr	r1, [sp, #12]
 8010ec6:	f8cb 0004 	str.w	r0, [fp, #4]
 8010eca:	f7ff fd7a 	bl	80109c2 <strcpy.isra.0>
 8010ece:	4923      	ldr	r1, [pc, #140]	; (8010f5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8010ed0:	f8db 0004 	ldr.w	r0, [fp, #4]
 8010ed4:	f7ff fd7d 	bl	80109d2 <strcat.isra.0>
 8010ed8:	4921      	ldr	r1, [pc, #132]	; (8010f60 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 8010eda:	4b22      	ldr	r3, [pc, #136]	; (8010f64 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8010edc:	f8db 0004 	ldr.w	r0, [fp, #4]
 8010ee0:	f1ba 0f01 	cmp.w	sl, #1
 8010ee4:	bf18      	it	ne
 8010ee6:	4619      	movne	r1, r3
 8010ee8:	f7ff fd73 	bl	80109d2 <strcat.isra.0>
 8010eec:	f1b9 0f00 	cmp.w	r9, #0
 8010ef0:	d00a      	beq.n	8010f08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xc0>
 8010ef2:	4648      	mov	r0, r9
 8010ef4:	f7ff fd50 	bl	8010998 <strlen>
 8010ef8:	3001      	adds	r0, #1
 8010efa:	f003 f983 	bl	8014204 <operator new[](unsigned int)>
 8010efe:	4649      	mov	r1, r9
 8010f00:	f8cb 0008 	str.w	r0, [fp, #8]
 8010f04:	f7ff fd5d 	bl	80109c2 <strcpy.isra.0>
 8010f08:	4621      	mov	r1, r4
 8010f0a:	4638      	mov	r0, r7
 8010f0c:	f7ff ff60 	bl	8010dd0 <MDNS::CreateMDNSMessage(unsigned int)>
 8010f10:	4915      	ldr	r1, [pc, #84]	; (8010f68 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 8010f12:	4816      	ldr	r0, [pc, #88]	; (8010f6c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 8010f14:	f831 2b04 	ldrh.w	r2, [r1], #4
 8010f18:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010f1c:	9300      	str	r3, [sp, #0]
 8010f1e:	4b14      	ldr	r3, [pc, #80]	; (8010f70 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x128>)
 8010f20:	7800      	ldrb	r0, [r0, #0]
 8010f22:	681b      	ldr	r3, [r3, #0]
 8010f24:	f7ff fc88 	bl	8010838 <udp_send>
 8010f28:	2001      	movs	r0, #1
 8010f2a:	e010      	b.n	8010f4e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x106>
 8010f2c:	4608      	mov	r0, r1
 8010f2e:	9103      	str	r1, [sp, #12]
 8010f30:	f7ff fd32 	bl	8010998 <strlen>
 8010f34:	4683      	mov	fp, r0
 8010f36:	4630      	mov	r0, r6
 8010f38:	f7ff fd2e 	bl	8010998 <strlen>
 8010f3c:	4458      	add	r0, fp
 8010f3e:	3001      	adds	r0, #1
 8010f40:	f003 f960 	bl	8014204 <operator new[](unsigned int)>
 8010f44:	9903      	ldr	r1, [sp, #12]
 8010f46:	f845 0008 	str.w	r0, [r5, r8]
 8010f4a:	e7a8      	b.n	8010e9e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x56>
 8010f4c:	2000      	movs	r0, #0
 8010f4e:	b005      	add	sp, #20
 8010f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f54:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 8010f58:	2000fadc 	ldrdcs	pc, [r0], -ip
 8010f5c:	08016ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, sp, lr}
 8010f60:	0801915a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, pc}
 8010f64:	08019177 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, ip, pc}
 8010f68:	2000f8d0 	ldrdcs	pc, [r0], -r0
 8010f6c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8010f70:	2000f6a4 	andcs	pc, r0, r4, lsr #13

08010f74 <MDNS::HandleRequest(unsigned short)>:
 8010f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f78:	b0c5      	sub	sp, #276	; 0x114
 8010f7a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8011060 <MDNS::HandleRequest(unsigned short)+0xec>
 8010f7e:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 8011064 <MDNS::HandleRequest(unsigned short)+0xf0>
 8010f82:	9103      	str	r1, [sp, #12]
 8010f84:	4605      	mov	r5, r0
 8010f86:	2700      	movs	r7, #0
 8010f88:	f04f 080c 	mov.w	r8, #12
 8010f8c:	9b03      	ldr	r3, [sp, #12]
 8010f8e:	42bb      	cmp	r3, r7
 8010f90:	d802      	bhi.n	8010f98 <MDNS::HandleRequest(unsigned short)+0x24>
 8010f92:	b045      	add	sp, #276	; 0x114
 8010f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f98:	f8da 1000 	ldr.w	r1, [sl]
 8010f9c:	aa04      	add	r2, sp, #16
 8010f9e:	4441      	add	r1, r8
 8010fa0:	4628      	mov	r0, r5
 8010fa2:	f7ff fd4f 	bl	8010a44 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 8010fa6:	f8da 2000 	ldr.w	r2, [sl]
 8010faa:	4440      	add	r0, r8
 8010fac:	1813      	adds	r3, r2, r0
 8010fae:	f100 0804 	add.w	r8, r0, #4
 8010fb2:	885b      	ldrh	r3, [r3, #2]
 8010fb4:	ba5b      	rev16	r3, r3
 8010fb6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8010fba:	2b01      	cmp	r3, #1
 8010fbc:	d13d      	bne.n	801103a <MDNS::HandleRequest(unsigned short)+0xc6>
 8010fbe:	5a14      	ldrh	r4, [r2, r0]
 8010fc0:	4b20      	ldr	r3, [pc, #128]	; (8011044 <MDNS::HandleRequest(unsigned short)+0xd0>)
 8010fc2:	ba64      	rev16	r4, r4
 8010fc4:	6818      	ldr	r0, [r3, #0]
 8010fc6:	a904      	add	r1, sp, #16
 8010fc8:	b2a4      	uxth	r4, r4
 8010fca:	f7ff fced 	bl	80109a8 <strcmp>
 8010fce:	b968      	cbnz	r0, 8010fec <MDNS::HandleRequest(unsigned short)+0x78>
 8010fd0:	2c01      	cmp	r4, #1
 8010fd2:	d10b      	bne.n	8010fec <MDNS::HandleRequest(unsigned short)+0x78>
 8010fd4:	491c      	ldr	r1, [pc, #112]	; (8011048 <MDNS::HandleRequest(unsigned short)+0xd4>)
 8010fd6:	481d      	ldr	r0, [pc, #116]	; (801104c <MDNS::HandleRequest(unsigned short)+0xd8>)
 8010fd8:	f831 2b04 	ldrh.w	r2, [r1], #4
 8010fdc:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010fe0:	9300      	str	r3, [sp, #0]
 8010fe2:	4b1b      	ldr	r3, [pc, #108]	; (8011050 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8010fe4:	7800      	ldrb	r0, [r0, #0]
 8010fe6:	681b      	ldr	r3, [r3, #0]
 8010fe8:	f7ff fc26 	bl	8010838 <udp_send>
 8010fec:	4819      	ldr	r0, [pc, #100]	; (8011054 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8010fee:	4e1a      	ldr	r6, [pc, #104]	; (8011058 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010ff0:	a904      	add	r1, sp, #16
 8010ff2:	f7ff fcd9 	bl	80109a8 <strcmp>
 8010ff6:	f04f 0900 	mov.w	r9, #0
 8010ffa:	9002      	str	r0, [sp, #8]
 8010ffc:	6833      	ldr	r3, [r6, #0]
 8010ffe:	b1c3      	cbz	r3, 8011032 <MDNS::HandleRequest(unsigned short)+0xbe>
 8011000:	9b02      	ldr	r3, [sp, #8]
 8011002:	b123      	cbz	r3, 801100e <MDNS::HandleRequest(unsigned short)+0x9a>
 8011004:	6870      	ldr	r0, [r6, #4]
 8011006:	a904      	add	r1, sp, #16
 8011008:	f7ff fcce 	bl	80109a8 <strcmp>
 801100c:	b988      	cbnz	r0, 8011032 <MDNS::HandleRequest(unsigned short)+0xbe>
 801100e:	2c0c      	cmp	r4, #12
 8011010:	d10f      	bne.n	8011032 <MDNS::HandleRequest(unsigned short)+0xbe>
 8011012:	4649      	mov	r1, r9
 8011014:	4628      	mov	r0, r5
 8011016:	f7ff fedb 	bl	8010dd0 <MDNS::CreateMDNSMessage(unsigned int)>
 801101a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801101e:	9300      	str	r3, [sp, #0]
 8011020:	480a      	ldr	r0, [pc, #40]	; (801104c <MDNS::HandleRequest(unsigned short)+0xd8>)
 8011022:	4b0b      	ldr	r3, [pc, #44]	; (8011050 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8011024:	f8bb 2000 	ldrh.w	r2, [fp]
 8011028:	681b      	ldr	r3, [r3, #0]
 801102a:	490c      	ldr	r1, [pc, #48]	; (801105c <MDNS::HandleRequest(unsigned short)+0xe8>)
 801102c:	7800      	ldrb	r0, [r0, #0]
 801102e:	f7ff fc03 	bl	8010838 <udp_send>
 8011032:	3610      	adds	r6, #16
 8011034:	f1b9 0f00 	cmp.w	r9, #0
 8011038:	d001      	beq.n	801103e <MDNS::HandleRequest(unsigned short)+0xca>
 801103a:	3701      	adds	r7, #1
 801103c:	e7a6      	b.n	8010f8c <MDNS::HandleRequest(unsigned short)+0x18>
 801103e:	f04f 0901 	mov.w	r9, #1
 8011042:	e7db      	b.n	8010ffc <MDNS::HandleRequest(unsigned short)+0x88>
 8011044:	2000fad4 	ldrdcs	pc, [r0], -r4
 8011048:	2000f6a8 	andcs	pc, r0, r8, lsr #13
 801104c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011050:	2000f6a4 	andcs	pc, r0, r4, lsr #13
 8011054:	08019165 	stmdaeq	r1, {r0, r2, r5, r6, r8, ip, pc}
 8011058:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 801105c:	2000f8d4 	ldrdcs	pc, [r0], -r4
 8011060:	2000fad8 	ldrdcs	pc, [r0], -r8
 8011064:	2000f8d0 	ldrdcs	pc, [r0], -r0

08011068 <MDNS::Parse()>:
 8011068:	4b08      	ldr	r3, [pc, #32]	; (801108c <MDNS::Parse()+0x24>)
 801106a:	681a      	ldr	r2, [r3, #0]
 801106c:	8853      	ldrh	r3, [r2, #2]
 801106e:	ba5b      	rev16	r3, r3
 8011070:	b299      	uxth	r1, r3
 8011072:	041b      	lsls	r3, r3, #16
 8011074:	d408      	bmi.n	8011088 <MDNS::Parse()+0x20>
 8011076:	0b89      	lsrs	r1, r1, #14
 8011078:	d106      	bne.n	8011088 <MDNS::Parse()+0x20>
 801107a:	8891      	ldrh	r1, [r2, #4]
 801107c:	b28b      	uxth	r3, r1
 801107e:	b11b      	cbz	r3, 8011088 <MDNS::Parse()+0x20>
 8011080:	ba49      	rev16	r1, r1
 8011082:	b289      	uxth	r1, r1
 8011084:	f7ff bf76 	b.w	8010f74 <MDNS::HandleRequest(unsigned short)>
 8011088:	4770      	bx	lr
 801108a:	bf00      	nop
 801108c:	2000fad8 	ldrdcs	pc, [r0], -r8

08011090 <MDNS::Run()>:
 8011090:	b538      	push	{r3, r4, r5, lr}
 8011092:	4d0c      	ldr	r5, [pc, #48]	; (80110c4 <MDNS::Run()+0x34>)
 8011094:	490c      	ldr	r1, [pc, #48]	; (80110c8 <MDNS::Run()+0x38>)
 8011096:	4a0d      	ldr	r2, [pc, #52]	; (80110cc <MDNS::Run()+0x3c>)
 8011098:	4604      	mov	r4, r0
 801109a:	480d      	ldr	r0, [pc, #52]	; (80110d0 <MDNS::Run()+0x40>)
 801109c:	462b      	mov	r3, r5
 801109e:	7800      	ldrb	r0, [r0, #0]
 80110a0:	f7ff fba4 	bl	80107ec <udp_recv2>
 80110a4:	4b0b      	ldr	r3, [pc, #44]	; (80110d4 <MDNS::Run()+0x44>)
 80110a6:	8829      	ldrh	r1, [r5, #0]
 80110a8:	8018      	strh	r0, [r3, #0]
 80110aa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80110ae:	4299      	cmp	r1, r3
 80110b0:	d106      	bne.n	80110c0 <MDNS::Run()+0x30>
 80110b2:	280c      	cmp	r0, #12
 80110b4:	d904      	bls.n	80110c0 <MDNS::Run()+0x30>
 80110b6:	4620      	mov	r0, r4
 80110b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80110bc:	f7ff bfd4 	b.w	8011068 <MDNS::Parse()>
 80110c0:	bd38      	pop	{r3, r4, r5, pc}
 80110c2:	bf00      	nop
 80110c4:	2000f6a0 	andcs	pc, r0, r0, lsr #13
 80110c8:	2000fad8 	ldrdcs	pc, [r0], -r8
 80110cc:	2000f69c 	mulcs	r0, ip, r6
 80110d0:	2000001c 	andcs	r0, r0, ip, lsl r0
 80110d4:	2000f8cc 	andcs	pc, r0, ip, asr #17

080110d8 <MDNS::Print()>:
 80110d8:	b510      	push	{r4, lr}
 80110da:	4816      	ldr	r0, [pc, #88]	; (8011134 <MDNS::Print()+0x5c>)
 80110dc:	f7f9 f8f4 	bl	800a2c8 <printf>
 80110e0:	4b15      	ldr	r3, [pc, #84]	; (8011138 <MDNS::Print()+0x60>)
 80110e2:	681b      	ldr	r3, [r3, #0]
 80110e4:	3301      	adds	r3, #1
 80110e6:	d104      	bne.n	80110f2 <MDNS::Print()+0x1a>
 80110e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110ec:	4813      	ldr	r0, [pc, #76]	; (801113c <MDNS::Print()+0x64>)
 80110ee:	f7f9 b8eb 	b.w	800a2c8 <printf>
 80110f2:	4b13      	ldr	r3, [pc, #76]	; (8011140 <MDNS::Print()+0x68>)
 80110f4:	4c13      	ldr	r4, [pc, #76]	; (8011144 <MDNS::Print()+0x6c>)
 80110f6:	6819      	ldr	r1, [r3, #0]
 80110f8:	4813      	ldr	r0, [pc, #76]	; (8011148 <MDNS::Print()+0x70>)
 80110fa:	f7f9 f8e5 	bl	800a2c8 <printf>
 80110fe:	6823      	ldr	r3, [r4, #0]
 8011100:	b14b      	cbz	r3, 8011116 <MDNS::Print()+0x3e>
 8011102:	4a12      	ldr	r2, [pc, #72]	; (801114c <MDNS::Print()+0x74>)
 8011104:	68a3      	ldr	r3, [r4, #8]
 8011106:	6861      	ldr	r1, [r4, #4]
 8011108:	4811      	ldr	r0, [pc, #68]	; (8011150 <MDNS::Print()+0x78>)
 801110a:	2b00      	cmp	r3, #0
 801110c:	bf08      	it	eq
 801110e:	4613      	moveq	r3, r2
 8011110:	89a2      	ldrh	r2, [r4, #12]
 8011112:	f7f9 f8d9 	bl	800a2c8 <printf>
 8011116:	6923      	ldr	r3, [r4, #16]
 8011118:	b15b      	cbz	r3, 8011132 <MDNS::Print()+0x5a>
 801111a:	69a3      	ldr	r3, [r4, #24]
 801111c:	4a0b      	ldr	r2, [pc, #44]	; (801114c <MDNS::Print()+0x74>)
 801111e:	6961      	ldr	r1, [r4, #20]
 8011120:	480b      	ldr	r0, [pc, #44]	; (8011150 <MDNS::Print()+0x78>)
 8011122:	2b00      	cmp	r3, #0
 8011124:	bf08      	it	eq
 8011126:	4613      	moveq	r3, r2
 8011128:	8ba2      	ldrh	r2, [r4, #28]
 801112a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801112e:	f7f9 b8cb 	b.w	800a2c8 <printf>
 8011132:	bd10      	pop	{r4, pc}
 8011134:	08019182 	stmdaeq	r1, {r1, r7, r8, ip, pc}
 8011138:	2000001c 	andcs	r0, r0, ip, lsl r0
 801113c:	08019188 	stmdaeq	r1, {r3, r7, r8, ip, pc}
 8011140:	2000fad4 	ldrdcs	pc, [r0], -r4
 8011144:	2000f8ac 	andcs	pc, r0, ip, lsr #17
 8011148:	08019196 	stmdaeq	r1, {r1, r2, r4, r7, r8, ip, pc}
 801114c:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 8011150:	080191a2 	stmdaeq	r1, {r1, r5, r7, r8, ip, pc}

08011154 <strncpy.constprop.0.isra.0>:
 8011154:	3901      	subs	r1, #1
 8011156:	233f      	movs	r3, #63	; 0x3f
 8011158:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 801115c:	b92a      	cbnz	r2, 801116a <strncpy.constprop.0.isra.0+0x16>
 801115e:	4403      	add	r3, r0
 8011160:	4298      	cmp	r0, r3
 8011162:	d006      	beq.n	8011172 <strncpy.constprop.0.isra.0+0x1e>
 8011164:	f800 2b01 	strb.w	r2, [r0], #1
 8011168:	e7fa      	b.n	8011160 <strncpy.constprop.0.isra.0+0xc>
 801116a:	3b01      	subs	r3, #1
 801116c:	f800 2b01 	strb.w	r2, [r0], #1
 8011170:	d1f2      	bne.n	8011158 <strncpy.constprop.0.isra.0+0x4>
 8011172:	4770      	bx	lr

08011174 <Network::Network()>:
 8011174:	4a11      	ldr	r2, [pc, #68]	; (80111bc <Network::Network()+0x48>)
 8011176:	2300      	movs	r3, #0
 8011178:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 801117c:	6010      	str	r0, [r2, #0]
 801117e:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 8011182:	2201      	movs	r2, #1
 8011184:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 8011188:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801118c:	e9c0 2100 	strd	r2, r1, [r0]
 8011190:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8011194:	490a      	ldr	r1, [pc, #40]	; (80111c0 <Network::Network()+0x4c>)
 8011196:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 801119a:	2200      	movs	r2, #0
 801119c:	6102      	str	r2, [r0, #16]
 801119e:	61c3      	str	r3, [r0, #28]
 80111a0:	f880 3020 	strb.w	r3, [r0, #32]
 80111a4:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80111a8:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 80111ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 80111b0:	f802 3f01 	strb.w	r3, [r2, #1]!
 80111b4:	2b00      	cmp	r3, #0
 80111b6:	d1f9      	bne.n	80111ac <Network::Network()+0x38>
 80111b8:	4770      	bx	lr
 80111ba:	bf00      	nop
 80111bc:	2000fadc 	ldrdcs	pc, [r0], -ip
 80111c0:	080191ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, ip, pc}

080111c4 <Network::Shutdown()>:
 80111c4:	b508      	push	{r3, lr}
 80111c6:	f001 fc13 	bl	80129f0 <network::display_emac_shutdown()>
 80111ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80111ce:	f7f7 b839 	b.w	8008244 <net_shutdown>

080111d2 <Network::Begin(unsigned short)>:
 80111d2:	4608      	mov	r0, r1
 80111d4:	f7ff ba9a 	b.w	801070c <udp_bind>

080111d8 <Network::End(unsigned short)>:
 80111d8:	4608      	mov	r0, r1
 80111da:	f7ff bab1 	b.w	8010740 <udp_unbind>

080111de <Network::MacAddressCopyTo(unsigned char*)>:
 80111de:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 80111e2:	3901      	subs	r1, #1
 80111e4:	30a5      	adds	r0, #165	; 0xa5
 80111e6:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80111ea:	f801 2f01 	strb.w	r2, [r1, #1]!
 80111ee:	4283      	cmp	r3, r0
 80111f0:	d1f9      	bne.n	80111e6 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 80111f2:	4770      	bx	lr

080111f4 <Network::JoinGroup(int, unsigned int)>:
 80111f4:	4610      	mov	r0, r2
 80111f6:	f000 bff9 	b.w	80121ec <igmp_join>

080111fa <Network::SetDefaultIp()>:
 80111fa:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80111fe:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 8011202:	041b      	lsls	r3, r3, #16
 8011204:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8011208:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 801120c:	3302      	adds	r3, #2
 801120e:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8011212:	22ff      	movs	r2, #255	; 0xff
 8011214:	e9c0 3206 	strd	r3, r2, [r0, #24]
 8011218:	6143      	str	r3, [r0, #20]
 801121a:	4770      	bx	lr

0801121c <Network::Init(NetworkParamsStore*)>:
 801121c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011220:	b0a5      	sub	sp, #148	; 0x94
 8011222:	4604      	mov	r4, r0
 8011224:	a80b      	add	r0, sp, #44	; 0x2c
 8011226:	f000 facd 	bl	80117c4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 801122a:	a80b      	add	r0, sp, #44	; 0x2c
 801122c:	f000 fad6 	bl	80117dc <NetworkParams::Load()>
 8011230:	b110      	cbz	r0, 8011238 <Network::Init(NetworkParamsStore*)+0x1c>
 8011232:	a80b      	add	r0, sp, #44	; 0x2c
 8011234:	f000 fcad 	bl	8011b92 <NetworkParams::Dump()>
 8011238:	f001 fbbc 	bl	80129b4 <network::display_emac_start()>
 801123c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801123e:	9308      	str	r3, [sp, #32]
 8011240:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011242:	9309      	str	r3, [sp, #36]	; 0x24
 8011244:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011246:	930a      	str	r3, [sp, #40]	; 0x28
 8011248:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801124c:	7163      	strb	r3, [r4, #5]
 801124e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011250:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8011254:	bf18      	it	ne
 8011256:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 801125a:	60e2      	str	r2, [r4, #12]
 801125c:	061b      	lsls	r3, r3, #24
 801125e:	bf4c      	ite	mi
 8011260:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 8011264:	2300      	movpl	r3, #0
 8011266:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 801126a:	6123      	str	r3, [r4, #16]
 801126c:	4630      	mov	r0, r6
 801126e:	f005 f83d 	bl	80162ec <emac_start(unsigned char*)>
 8011272:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 8011276:	f104 0720 	add.w	r7, r4, #32
 801127a:	2b00      	cmp	r3, #0
 801127c:	f040 80c5 	bne.w	801140a <Network::Init(NetworkParamsStore*)+0x1ee>
 8011280:	4982      	ldr	r1, [pc, #520]	; (801148c <Network::Init(NetworkParamsStore*)+0x270>)
 8011282:	f104 001f 	add.w	r0, r4, #31
 8011286:	f811 2b01 	ldrb.w	r2, [r1], #1
 801128a:	1c5d      	adds	r5, r3, #1
 801128c:	2a00      	cmp	r2, #0
 801128e:	f040 80b8 	bne.w	8011402 <Network::Init(NetworkParamsStore*)+0x1e6>
 8011292:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8011296:	0910      	lsrs	r0, r2, #4
 8011298:	2a9f      	cmp	r2, #159	; 0x9f
 801129a:	f002 020f 	and.w	r2, r2, #15
 801129e:	bf94      	ite	ls
 80112a0:	3030      	addls	r0, #48	; 0x30
 80112a2:	3037      	addhi	r0, #55	; 0x37
 80112a4:	18e1      	adds	r1, r4, r3
 80112a6:	2a09      	cmp	r2, #9
 80112a8:	4425      	add	r5, r4
 80112aa:	bf94      	ite	ls
 80112ac:	3230      	addls	r2, #48	; 0x30
 80112ae:	3237      	addhi	r2, #55	; 0x37
 80112b0:	f881 0020 	strb.w	r0, [r1, #32]
 80112b4:	f885 2020 	strb.w	r2, [r5, #32]
 80112b8:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 80112bc:	f103 0e02 	add.w	lr, r3, #2
 80112c0:	0910      	lsrs	r0, r2, #4
 80112c2:	2a9f      	cmp	r2, #159	; 0x9f
 80112c4:	eb04 050e 	add.w	r5, r4, lr
 80112c8:	f002 020f 	and.w	r2, r2, #15
 80112cc:	bf94      	ite	ls
 80112ce:	3030      	addls	r0, #48	; 0x30
 80112d0:	3037      	addhi	r0, #55	; 0x37
 80112d2:	f103 0c03 	add.w	ip, r3, #3
 80112d6:	f885 0020 	strb.w	r0, [r5, #32]
 80112da:	2a09      	cmp	r2, #9
 80112dc:	eb04 000c 	add.w	r0, r4, ip
 80112e0:	bf94      	ite	ls
 80112e2:	3230      	addls	r2, #48	; 0x30
 80112e4:	3237      	addhi	r2, #55	; 0x37
 80112e6:	f880 2020 	strb.w	r2, [r0, #32]
 80112ea:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 80112ee:	1d1d      	adds	r5, r3, #4
 80112f0:	0910      	lsrs	r0, r2, #4
 80112f2:	2a9f      	cmp	r2, #159	; 0x9f
 80112f4:	f103 0305 	add.w	r3, r3, #5
 80112f8:	f002 020f 	and.w	r2, r2, #15
 80112fc:	bf94      	ite	ls
 80112fe:	3030      	addls	r0, #48	; 0x30
 8011300:	3037      	addhi	r0, #55	; 0x37
 8011302:	4423      	add	r3, r4
 8011304:	2a09      	cmp	r2, #9
 8011306:	4425      	add	r5, r4
 8011308:	bf94      	ite	ls
 801130a:	3230      	addls	r2, #48	; 0x30
 801130c:	3237      	addhi	r2, #55	; 0x37
 801130e:	f885 0020 	strb.w	r0, [r5, #32]
 8011312:	f883 2020 	strb.w	r2, [r3, #32]
 8011316:	2300      	movs	r3, #0
 8011318:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 801131c:	f000 fff5 	bl	801230a <net::link_register_read()>
 8011320:	7963      	ldrb	r3, [r4, #5]
 8011322:	6020      	str	r0, [r4, #0]
 8011324:	2800      	cmp	r0, #0
 8011326:	f040 809b 	bne.w	8011460 <Network::Init(NetworkParamsStore*)+0x244>
 801132a:	2b00      	cmp	r3, #0
 801132c:	f040 80a9 	bne.w	8011482 <Network::Init(NetworkParamsStore*)+0x266>
 8011330:	9b08      	ldr	r3, [sp, #32]
 8011332:	2b00      	cmp	r3, #0
 8011334:	d172      	bne.n	801141c <Network::Init(NetworkParamsStore*)+0x200>
 8011336:	4620      	mov	r0, r4
 8011338:	f7ff ff5f 	bl	80111fa <Network::SetDefaultIp()>
 801133c:	6963      	ldr	r3, [r4, #20]
 801133e:	69e2      	ldr	r2, [r4, #28]
 8011340:	9308      	str	r3, [sp, #32]
 8011342:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8011346:	f104 0905 	add.w	r9, r4, #5
 801134a:	f104 0a07 	add.w	sl, r4, #7
 801134e:	464b      	mov	r3, r9
 8011350:	f8cd a000 	str.w	sl, [sp]
 8011354:	463a      	mov	r2, r7
 8011356:	a908      	add	r1, sp, #32
 8011358:	4630      	mov	r0, r6
 801135a:	f7f6 ff27 	bl	80081ac <net_init>
 801135e:	79e3      	ldrb	r3, [r4, #7]
 8011360:	b113      	cbz	r3, 8011368 <Network::Init(NetworkParamsStore*)+0x14c>
 8011362:	2004      	movs	r0, #4
 8011364:	f001 fb4a 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8011368:	f89d 508d 	ldrb.w	r5, [sp, #141]	; 0x8d
 801136c:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 8011370:	9302      	str	r3, [sp, #8]
 8011372:	ebc5 1505 	rsb	r5, r5, r5, lsl #4
 8011376:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801137a:	9303      	str	r3, [sp, #12]
 801137c:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8011494 <Network::Init(NetworkParamsStore*)+0x278>
 8011380:	f8df b114 	ldr.w	fp, [pc, #276]	; 8011498 <Network::Init(NetworkParamsStore*)+0x27c>
 8011384:	00ab      	lsls	r3, r5, #2
 8011386:	9305      	str	r3, [sp, #20]
 8011388:	79e3      	ldrb	r3, [r4, #7]
 801138a:	b37b      	cbz	r3, 80113ec <Network::Init(NetworkParamsStore*)+0x1d0>
 801138c:	9b02      	ldr	r3, [sp, #8]
 801138e:	b36b      	cbz	r3, 80113ec <Network::Init(NetworkParamsStore*)+0x1d0>
 8011390:	9b03      	ldr	r3, [sp, #12]
 8011392:	b35b      	cbz	r3, 80113ec <Network::Init(NetworkParamsStore*)+0x1d0>
 8011394:	2104      	movs	r1, #4
 8011396:	f8d8 0000 	ldr.w	r0, [r8]
 801139a:	f002 fe31 	bl	8014000 <LedBlink::SetMode(ledblink::Mode)>
 801139e:	2003      	movs	r0, #3
 80113a0:	f001 fb2c 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 80113a4:	2000      	movs	r0, #0
 80113a6:	f003 f909 	bl	80145bc <time>
 80113aa:	9004      	str	r0, [sp, #16]
 80113ac:	2000      	movs	r0, #0
 80113ae:	f003 f905 	bl	80145bc <time>
 80113b2:	9b04      	ldr	r3, [sp, #16]
 80113b4:	4936      	ldr	r1, [pc, #216]	; (8011490 <Network::Init(NetworkParamsStore*)+0x274>)
 80113b6:	1ac0      	subs	r0, r0, r3
 80113b8:	9b05      	ldr	r3, [sp, #20]
 80113ba:	4298      	cmp	r0, r3
 80113bc:	db36      	blt.n	801142c <Network::Init(NetworkParamsStore*)+0x210>
 80113be:	2001      	movs	r0, #1
 80113c0:	f001 fb1c 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 80113c4:	f8d8 0000 	ldr.w	r0, [r8]
 80113c8:	2101      	movs	r1, #1
 80113ca:	f002 fe19 	bl	8014000 <LedBlink::SetMode(ledblink::Mode)>
 80113ce:	2301      	movs	r3, #1
 80113d0:	7163      	strb	r3, [r4, #5]
 80113d2:	2300      	movs	r3, #0
 80113d4:	71e3      	strb	r3, [r4, #7]
 80113d6:	f8cd a000 	str.w	sl, [sp]
 80113da:	464b      	mov	r3, r9
 80113dc:	463a      	mov	r2, r7
 80113de:	a908      	add	r1, sp, #32
 80113e0:	4630      	mov	r0, r6
 80113e2:	f7f6 fee3 	bl	80081ac <net_init>
 80113e6:	7963      	ldrb	r3, [r4, #5]
 80113e8:	2b00      	cmp	r3, #0
 80113ea:	d0cd      	beq.n	8011388 <Network::Init(NetworkParamsStore*)+0x16c>
 80113ec:	9b08      	ldr	r3, [sp, #32]
 80113ee:	6163      	str	r3, [r4, #20]
 80113f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80113f2:	61e3      	str	r3, [r4, #28]
 80113f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80113f6:	61a3      	str	r3, [r4, #24]
 80113f8:	f001 fae2 	bl	80129c0 <network::display_ip()>
 80113fc:	b025      	add	sp, #148	; 0x94
 80113fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011402:	f800 2f01 	strb.w	r2, [r0, #1]!
 8011406:	462b      	mov	r3, r5
 8011408:	e73d      	b.n	8011286 <Network::Init(NetworkParamsStore*)+0x6a>
 801140a:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 801140e:	4638      	mov	r0, r7
 8011410:	f7ff fea0 	bl	8011154 <strncpy.constprop.0.isra.0>
 8011414:	2300      	movs	r3, #0
 8011416:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 801141a:	e77f      	b.n	801131c <Network::Init(NetworkParamsStore*)+0x100>
 801141c:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8011420:	69e1      	ldr	r1, [r4, #28]
 8011422:	4053      	eors	r3, r2
 8011424:	420b      	tst	r3, r1
 8011426:	bf18      	it	ne
 8011428:	920a      	strne	r2, [sp, #40]	; 0x28
 801142a:	e78c      	b.n	8011346 <Network::Init(NetworkParamsStore*)+0x12a>
 801142c:	f8d8 3000 	ldr.w	r3, [r8]
 8011430:	68da      	ldr	r2, [r3, #12]
 8011432:	2a00      	cmp	r2, #0
 8011434:	d0ba      	beq.n	80113ac <Network::Init(NetworkParamsStore*)+0x190>
 8011436:	f8db 0000 	ldr.w	r0, [fp]
 801143a:	695d      	ldr	r5, [r3, #20]
 801143c:	1b40      	subs	r0, r0, r5
 801143e:	4282      	cmp	r2, r0
 8011440:	d8b4      	bhi.n	80113ac <Network::Init(NetworkParamsStore*)+0x190>
 8011442:	f8db 0000 	ldr.w	r0, [fp]
 8011446:	6158      	str	r0, [r3, #20]
 8011448:	6918      	ldr	r0, [r3, #16]
 801144a:	2801      	cmp	r0, #1
 801144c:	f080 0201 	eor.w	r2, r0, #1
 8011450:	611a      	str	r2, [r3, #16]
 8011452:	bf1a      	itte	ne
 8011454:	2301      	movne	r3, #1
 8011456:	f8c1 3818 	strne.w	r3, [r1, #2072]	; 0x818
 801145a:	f8c1 0828 	streq.w	r0, [r1, #2088]	; 0x828
 801145e:	e7a5      	b.n	80113ac <Network::Init(NetworkParamsStore*)+0x190>
 8011460:	b11b      	cbz	r3, 801146a <Network::Init(NetworkParamsStore*)+0x24e>
 8011462:	2300      	movs	r3, #0
 8011464:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8011468:	9308      	str	r3, [sp, #32]
 801146a:	2300      	movs	r3, #0
 801146c:	f88d 301f 	strb.w	r3, [sp, #31]
 8011470:	f10d 031f 	add.w	r3, sp, #31
 8011474:	9300      	str	r3, [sp, #0]
 8011476:	463a      	mov	r2, r7
 8011478:	a908      	add	r1, sp, #32
 801147a:	4630      	mov	r0, r6
 801147c:	f7f6 fe96 	bl	80081ac <net_init>
 8011480:	e7b4      	b.n	80113ec <Network::Init(NetworkParamsStore*)+0x1d0>
 8011482:	2001      	movs	r0, #1
 8011484:	f001 faba 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8011488:	e75d      	b.n	8011346 <Network::Init(NetworkParamsStore*)+0x12a>
 801148a:	bf00      	nop
 801148c:	080191b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, ip, pc}
 8011490:	40020000 	andmi	r0, r2, r0
 8011494:	2000fec0 	andcs	pc, r0, r0, asr #29
 8011498:	2000fedc 	ldrdcs	pc, [r0], -ip

0801149c <Network::SetIp(unsigned int)>:
 801149c:	7943      	ldrb	r3, [r0, #5]
 801149e:	b570      	push	{r4, r5, r6, lr}
 80114a0:	4604      	mov	r4, r0
 80114a2:	460d      	mov	r5, r1
 80114a4:	2600      	movs	r6, #0
 80114a6:	b113      	cbz	r3, 80114ae <Network::SetIp(unsigned int)+0x12>
 80114a8:	7146      	strb	r6, [r0, #5]
 80114aa:	f7fe feb7 	bl	801021c <net_dhcp_release>
 80114ae:	71e6      	strb	r6, [r4, #7]
 80114b0:	b95d      	cbnz	r5, 80114ca <Network::SetIp(unsigned int)+0x2e>
 80114b2:	4620      	mov	r0, r4
 80114b4:	f7ff fea1 	bl	80111fa <Network::SetDefaultIp()>
 80114b8:	6960      	ldr	r0, [r4, #20]
 80114ba:	f7fe fe73 	bl	80101a4 <net_set_ip>
 80114be:	f001 fa7f 	bl	80129c0 <network::display_ip()>
 80114c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114c6:	f001 ba81 	b.w	80129cc <network::display_netmask()>
 80114ca:	4628      	mov	r0, r5
 80114cc:	f7fe fe6a 	bl	80101a4 <net_set_ip>
 80114d0:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80114d4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80114d8:	2800      	cmp	r0, #0
 80114da:	d0f0      	beq.n	80114be <Network::SetIp(unsigned int)+0x22>
 80114dc:	6803      	ldr	r3, [r0, #0]
 80114de:	4629      	mov	r1, r5
 80114e0:	689b      	ldr	r3, [r3, #8]
 80114e2:	4798      	blx	r3
 80114e4:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80114e8:	6803      	ldr	r3, [r0, #0]
 80114ea:	2100      	movs	r1, #0
 80114ec:	699b      	ldr	r3, [r3, #24]
 80114ee:	4798      	blx	r3
 80114f0:	e7e5      	b.n	80114be <Network::SetIp(unsigned int)+0x22>

080114f2 <Network::SetNetmask(unsigned int)>:
 80114f2:	69c2      	ldr	r2, [r0, #28]
 80114f4:	428a      	cmp	r2, r1
 80114f6:	b508      	push	{r3, lr}
 80114f8:	d00c      	beq.n	8011514 <Network::SetNetmask(unsigned int)+0x22>
 80114fa:	61c1      	str	r1, [r0, #28]
 80114fc:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 8011500:	b110      	cbz	r0, 8011508 <Network::SetNetmask(unsigned int)+0x16>
 8011502:	6803      	ldr	r3, [r0, #0]
 8011504:	68db      	ldr	r3, [r3, #12]
 8011506:	4798      	blx	r3
 8011508:	f001 fa5a 	bl	80129c0 <network::display_ip()>
 801150c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011510:	f001 ba5c 	b.w	80129cc <network::display_netmask()>
 8011514:	bd08      	pop	{r3, pc}

08011516 <Network::SetHostName(char const*)>:
 8011516:	b538      	push	{r3, r4, r5, lr}
 8011518:	4604      	mov	r4, r0
 801151a:	f100 0520 	add.w	r5, r0, #32
 801151e:	4628      	mov	r0, r5
 8011520:	f7ff fe18 	bl	8011154 <strncpy.constprop.0.isra.0>
 8011524:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8011528:	2300      	movs	r3, #0
 801152a:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 801152e:	b158      	cbz	r0, 8011548 <Network::SetHostName(char const*)+0x32>
 8011530:	6803      	ldr	r3, [r0, #0]
 8011532:	695c      	ldr	r4, [r3, #20]
 8011534:	462b      	mov	r3, r5
 8011536:	461a      	mov	r2, r3
 8011538:	3301      	adds	r3, #1
 801153a:	7811      	ldrb	r1, [r2, #0]
 801153c:	2900      	cmp	r1, #0
 801153e:	d1fa      	bne.n	8011536 <Network::SetHostName(char const*)+0x20>
 8011540:	1b52      	subs	r2, r2, r5
 8011542:	b292      	uxth	r2, r2
 8011544:	4629      	mov	r1, r5
 8011546:	47a0      	blx	r4
 8011548:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801154c:	f001 ba4a 	b.w	80129e4 <network::display_hostname()>

08011550 <Network::SetZeroconf()>:
 8011550:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011552:	4604      	mov	r4, r0
 8011554:	a801      	add	r0, sp, #4
 8011556:	f7fe fe6b 	bl	8010230 <net_set_zeroconf>
 801155a:	71e0      	strb	r0, [r4, #7]
 801155c:	b170      	cbz	r0, 801157c <Network::SetZeroconf()+0x2c>
 801155e:	9b01      	ldr	r3, [sp, #4]
 8011560:	6163      	str	r3, [r4, #20]
 8011562:	9b02      	ldr	r3, [sp, #8]
 8011564:	61e3      	str	r3, [r4, #28]
 8011566:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 801156a:	9b03      	ldr	r3, [sp, #12]
 801156c:	61a3      	str	r3, [r4, #24]
 801156e:	2300      	movs	r3, #0
 8011570:	7163      	strb	r3, [r4, #5]
 8011572:	b118      	cbz	r0, 801157c <Network::SetZeroconf()+0x2c>
 8011574:	6803      	ldr	r3, [r0, #0]
 8011576:	2101      	movs	r1, #1
 8011578:	699b      	ldr	r3, [r3, #24]
 801157a:	4798      	blx	r3
 801157c:	f001 fa20 	bl	80129c0 <network::display_ip()>
 8011580:	f001 fa24 	bl	80129cc <network::display_netmask()>
 8011584:	79e0      	ldrb	r0, [r4, #7]
 8011586:	b004      	add	sp, #16
 8011588:	bd10      	pop	{r4, pc}
	...

0801158c <Network::EnableDhcp()>:
 801158c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801158e:	4d21      	ldr	r5, [pc, #132]	; (8011614 <Network::EnableDhcp()+0x88>)
 8011590:	682b      	ldr	r3, [r5, #0]
 8011592:	781e      	ldrb	r6, [r3, #0]
 8011594:	4604      	mov	r4, r0
 8011596:	b136      	cbz	r6, 80115a6 <Network::EnableDhcp()+0x1a>
 8011598:	2200      	movs	r2, #0
 801159a:	701a      	strb	r2, [r3, #0]
 801159c:	2104      	movs	r1, #4
 801159e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80115a2:	f003 fdd3 	bl	801514c <fwdgt_config>
 80115a6:	2001      	movs	r0, #1
 80115a8:	f001 fa28 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 80115ac:	1de2      	adds	r2, r4, #7
 80115ae:	f104 0120 	add.w	r1, r4, #32
 80115b2:	a801      	add	r0, sp, #4
 80115b4:	f7fe fe06 	bl	80101c4 <net_set_dhcp>
 80115b8:	79e3      	ldrb	r3, [r4, #7]
 80115ba:	7160      	strb	r0, [r4, #5]
 80115bc:	b33b      	cbz	r3, 801160e <Network::EnableDhcp()+0x82>
 80115be:	2004      	movs	r0, #4
 80115c0:	f001 fa1c 	bl	80129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>
 80115c4:	b16e      	cbz	r6, 80115e2 <Network::EnableDhcp()+0x56>
 80115c6:	2102      	movs	r1, #2
 80115c8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80115cc:	682d      	ldr	r5, [r5, #0]
 80115ce:	f003 fdbd 	bl	801514c <fwdgt_config>
 80115d2:	2801      	cmp	r0, #1
 80115d4:	bf0c      	ite	eq
 80115d6:	2301      	moveq	r3, #1
 80115d8:	2300      	movne	r3, #0
 80115da:	702b      	strb	r3, [r5, #0]
 80115dc:	d101      	bne.n	80115e2 <Network::EnableDhcp()+0x56>
 80115de:	f003 fda5 	bl	801512c <fwdgt_enable>
 80115e2:	9b01      	ldr	r3, [sp, #4]
 80115e4:	6163      	str	r3, [r4, #20]
 80115e6:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80115ea:	9b02      	ldr	r3, [sp, #8]
 80115ec:	61e3      	str	r3, [r4, #28]
 80115ee:	9b03      	ldr	r3, [sp, #12]
 80115f0:	61a3      	str	r3, [r4, #24]
 80115f2:	b118      	cbz	r0, 80115fc <Network::EnableDhcp()+0x70>
 80115f4:	6803      	ldr	r3, [r0, #0]
 80115f6:	7961      	ldrb	r1, [r4, #5]
 80115f8:	699b      	ldr	r3, [r3, #24]
 80115fa:	4798      	blx	r3
 80115fc:	f001 f9e0 	bl	80129c0 <network::display_ip()>
 8011600:	f001 f9e4 	bl	80129cc <network::display_netmask()>
 8011604:	f001 f9e8 	bl	80129d8 <network::display_gateway()>
 8011608:	7960      	ldrb	r0, [r4, #5]
 801160a:	b004      	add	sp, #16
 801160c:	bd70      	pop	{r4, r5, r6, pc}
 801160e:	2002      	movs	r0, #2
 8011610:	e7d6      	b.n	80115c0 <Network::EnableDhcp()+0x34>
 8011612:	bf00      	nop
 8011614:	2000fec4 	andcs	pc, r0, r4, asr #29

08011618 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8011618:	b109      	cbz	r1, 801161e <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801161a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 801161e:	b10a      	cbz	r2, 8011624 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8011620:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 8011624:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8011628:	f043 0303 	orr.w	r3, r3, #3
 801162c:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8011630:	4770      	bx	lr

08011632 <Network::ApplyQueuedConfig()>:
 8011632:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8011636:	b510      	push	{r4, lr}
 8011638:	4604      	mov	r4, r0
 801163a:	b3c3      	cbz	r3, 80116ae <Network::ApplyQueuedConfig()+0x7c>
 801163c:	079a      	lsls	r2, r3, #30
 801163e:	d01a      	beq.n	8011676 <Network::ApplyQueuedConfig()+0x44>
 8011640:	079b      	lsls	r3, r3, #30
 8011642:	d509      	bpl.n	8011658 <Network::ApplyQueuedConfig()+0x26>
 8011644:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8011648:	f7ff ff53 	bl	80114f2 <Network::SetNetmask(unsigned int)>
 801164c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8011650:	f023 0302 	bic.w	r3, r3, #2
 8011654:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011658:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801165c:	07d9      	lsls	r1, r3, #31
 801165e:	d50a      	bpl.n	8011676 <Network::ApplyQueuedConfig()+0x44>
 8011660:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8011664:	4620      	mov	r0, r4
 8011666:	f7ff ff19 	bl	801149c <Network::SetIp(unsigned int)>
 801166a:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801166e:	f023 0301 	bic.w	r3, r3, #1
 8011672:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011676:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801167a:	075a      	lsls	r2, r3, #29
 801167c:	d508      	bpl.n	8011690 <Network::ApplyQueuedConfig()+0x5e>
 801167e:	4620      	mov	r0, r4
 8011680:	f7ff ff84 	bl	801158c <Network::EnableDhcp()>
 8011684:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8011688:	f023 0304 	bic.w	r3, r3, #4
 801168c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011690:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8011694:	071b      	lsls	r3, r3, #28
 8011696:	d508      	bpl.n	80116aa <Network::ApplyQueuedConfig()+0x78>
 8011698:	4620      	mov	r0, r4
 801169a:	f7ff ff59 	bl	8011550 <Network::SetZeroconf()>
 801169e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80116a2:	f023 0308 	bic.w	r3, r3, #8
 80116a6:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80116aa:	2001      	movs	r0, #1
 80116ac:	e000      	b.n	80116b0 <Network::ApplyQueuedConfig()+0x7e>
 80116ae:	4618      	mov	r0, r3
 80116b0:	bd10      	pop	{r4, pc}
	...

080116b4 <Network::Print()>:
 80116b4:	b530      	push	{r4, r5, lr}
 80116b6:	4604      	mov	r4, r0
 80116b8:	b085      	sub	sp, #20
 80116ba:	4832      	ldr	r0, [pc, #200]	; (8011784 <Network::Print()+0xd0>)
 80116bc:	f7f8 fe04 	bl	800a2c8 <printf>
 80116c0:	f104 0120 	add.w	r1, r4, #32
 80116c4:	4830      	ldr	r0, [pc, #192]	; (8011788 <Network::Print()+0xd4>)
 80116c6:	f7f8 fdff 	bl	800a2c8 <printf>
 80116ca:	68a1      	ldr	r1, [r4, #8]
 80116cc:	482f      	ldr	r0, [pc, #188]	; (801178c <Network::Print()+0xd8>)
 80116ce:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 80116d2:	f7f8 fdf9 	bl	800a2c8 <printf>
 80116d6:	69e0      	ldr	r0, [r4, #28]
 80116d8:	6965      	ldr	r5, [r4, #20]
 80116da:	f005 f8c9 	bl	8016870 <__popcountsi2>
 80116de:	0e2b      	lsrs	r3, r5, #24
 80116e0:	9001      	str	r0, [sp, #4]
 80116e2:	9300      	str	r3, [sp, #0]
 80116e4:	f3c5 2207 	ubfx	r2, r5, #8, #8
 80116e8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80116ec:	b2e9      	uxtb	r1, r5
 80116ee:	4828      	ldr	r0, [pc, #160]	; (8011790 <Network::Print()+0xdc>)
 80116f0:	f7f8 fdea 	bl	800a2c8 <printf>
 80116f4:	69e1      	ldr	r1, [r4, #28]
 80116f6:	4827      	ldr	r0, [pc, #156]	; (8011794 <Network::Print()+0xe0>)
 80116f8:	0e0b      	lsrs	r3, r1, #24
 80116fa:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80116fe:	9300      	str	r3, [sp, #0]
 8011700:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011704:	b2c9      	uxtb	r1, r1
 8011706:	f7f8 fddf 	bl	800a2c8 <printf>
 801170a:	69a1      	ldr	r1, [r4, #24]
 801170c:	4822      	ldr	r0, [pc, #136]	; (8011798 <Network::Print()+0xe4>)
 801170e:	0e0b      	lsrs	r3, r1, #24
 8011710:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011714:	9300      	str	r3, [sp, #0]
 8011716:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801171a:	b2c9      	uxtb	r1, r1
 801171c:	f7f8 fdd4 	bl	800a2c8 <printf>
 8011720:	69e3      	ldr	r3, [r4, #28]
 8011722:	6961      	ldr	r1, [r4, #20]
 8011724:	481d      	ldr	r0, [pc, #116]	; (801179c <Network::Print()+0xe8>)
 8011726:	ea61 0103 	orn	r1, r1, r3
 801172a:	0e0b      	lsrs	r3, r1, #24
 801172c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011730:	9300      	str	r3, [sp, #0]
 8011732:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011736:	b2c9      	uxtb	r1, r1
 8011738:	f7f8 fdc6 	bl	800a2c8 <printf>
 801173c:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8011740:	9302      	str	r3, [sp, #8]
 8011742:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8011746:	9301      	str	r3, [sp, #4]
 8011748:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 801174c:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8011750:	9300      	str	r3, [sp, #0]
 8011752:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8011756:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 801175a:	4811      	ldr	r0, [pc, #68]	; (80117a0 <Network::Print()+0xec>)
 801175c:	f7f8 fdb4 	bl	800a2c8 <printf>
 8011760:	4b10      	ldr	r3, [pc, #64]	; (80117a4 <Network::Print()+0xf0>)
 8011762:	681b      	ldr	r3, [r3, #0]
 8011764:	79da      	ldrb	r2, [r3, #7]
 8011766:	b952      	cbnz	r2, 801177e <Network::Print()+0xca>
 8011768:	795b      	ldrb	r3, [r3, #5]
 801176a:	2b00      	cmp	r3, #0
 801176c:	bf14      	ite	ne
 801176e:	2144      	movne	r1, #68	; 0x44
 8011770:	2153      	moveq	r1, #83	; 0x53
 8011772:	480d      	ldr	r0, [pc, #52]	; (80117a8 <Network::Print()+0xf4>)
 8011774:	b005      	add	sp, #20
 8011776:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801177a:	f7f8 bda5 	b.w	800a2c8 <printf>
 801177e:	215a      	movs	r1, #90	; 0x5a
 8011780:	e7f7      	b.n	8011772 <Network::Print()+0xbe>
 8011782:	bf00      	nop
 8011784:	080191be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, ip, pc}
 8011788:	080191c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, ip, pc}
 801178c:	080191d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, ip, pc}
 8011790:	080191ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, ip, pc}
 8011794:	0801920a 	stmdaeq	r1, {r1, r3, r9, ip, pc}
 8011798:	08019224 	stmdaeq	r1, {r2, r5, r9, ip, pc}
 801179c:	0801923e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, ip, pc}
 80117a0:	08019258 	stmdaeq	r1, {r3, r4, r6, r9, ip, pc}
 80117a4:	2000fadc 	ldrdcs	pc, [r0], -ip
 80117a8:	08019284 	stmdaeq	r1, {r2, r7, r9, ip, pc}

080117ac <Network::TcpBegin(unsigned short)>:
 80117ac:	4608      	mov	r0, r1
 80117ae:	f7fe becf 	b.w	8010550 <tcp_begin>

080117b2 <Network::TcpRead(int, unsigned char const**)>:
 80117b2:	4608      	mov	r0, r1
 80117b4:	4611      	mov	r1, r2
 80117b6:	f7fe bf17 	b.w	80105e8 <tcp_read>

080117ba <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80117ba:	4608      	mov	r0, r1
 80117bc:	4611      	mov	r1, r2
 80117be:	461a      	mov	r2, r3
 80117c0:	f7fe bee4 	b.w	801058c <tcp_write>

080117c4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80117c4:	b510      	push	{r4, lr}
 80117c6:	225e      	movs	r2, #94	; 0x5e
 80117c8:	4604      	mov	r4, r0
 80117ca:	f840 1b04 	str.w	r1, [r0], #4
 80117ce:	2100      	movs	r1, #0
 80117d0:	f002 fdec 	bl	80143ac <memset>
 80117d4:	2301      	movs	r3, #1
 80117d6:	7623      	strb	r3, [r4, #24]
 80117d8:	4620      	mov	r0, r4
 80117da:	bd10      	pop	{r4, pc}

080117dc <NetworkParams::Load()>:
 80117dc:	b508      	push	{r3, lr}
 80117de:	2300      	movs	r3, #0
 80117e0:	4601      	mov	r1, r0
 80117e2:	6043      	str	r3, [r0, #4]
 80117e4:	6800      	ldr	r0, [r0, #0]
 80117e6:	b120      	cbz	r0, 80117f2 <NetworkParams::Load()+0x16>
 80117e8:	6803      	ldr	r3, [r0, #0]
 80117ea:	3104      	adds	r1, #4
 80117ec:	68db      	ldr	r3, [r3, #12]
 80117ee:	4798      	blx	r3
 80117f0:	2001      	movs	r0, #1
 80117f2:	bd08      	pop	{r3, pc}

080117f4 <NetworkParams::Load(char const*, unsigned int)>:
 80117f4:	6803      	ldr	r3, [r0, #0]
 80117f6:	b1d3      	cbz	r3, 801182e <NetworkParams::Load(char const*, unsigned int)+0x3a>
 80117f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80117fa:	2300      	movs	r3, #0
 80117fc:	6043      	str	r3, [r0, #4]
 80117fe:	4604      	mov	r4, r0
 8011800:	460d      	mov	r5, r1
 8011802:	4616      	mov	r6, r2
 8011804:	490a      	ldr	r1, [pc, #40]	; (8011830 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8011806:	4602      	mov	r2, r0
 8011808:	4668      	mov	r0, sp
 801180a:	f001 ff27 	bl	801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801180e:	4632      	mov	r2, r6
 8011810:	4629      	mov	r1, r5
 8011812:	4668      	mov	r0, sp
 8011814:	f001 ff26 	bl	8013664 <ReadConfigFile::Read(char const*, unsigned int)>
 8011818:	4621      	mov	r1, r4
 801181a:	f851 0b04 	ldr.w	r0, [r1], #4
 801181e:	6803      	ldr	r3, [r0, #0]
 8011820:	689b      	ldr	r3, [r3, #8]
 8011822:	4798      	blx	r3
 8011824:	4668      	mov	r0, sp
 8011826:	f001 ff1c 	bl	8013662 <ReadConfigFile::~ReadConfigFile()>
 801182a:	b002      	add	sp, #8
 801182c:	bd70      	pop	{r4, r5, r6, pc}
 801182e:	4770      	bx	lr
 8011830:	08011961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip}

08011834 <NetworkParams::callbackFunction(char const*)>:
 8011834:	b530      	push	{r4, r5, lr}
 8011836:	460d      	mov	r5, r1
 8011838:	b085      	sub	sp, #20
 801183a:	4604      	mov	r4, r0
 801183c:	4942      	ldr	r1, [pc, #264]	; (8011948 <NetworkParams::callbackFunction(char const*)+0x114>)
 801183e:	f10d 0207 	add.w	r2, sp, #7
 8011842:	4628      	mov	r0, r5
 8011844:	f002 f83f 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011848:	b978      	cbnz	r0, 801186a <NetworkParams::callbackFunction(char const*)+0x36>
 801184a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801184e:	6863      	ldr	r3, [r4, #4]
 8011850:	b142      	cbz	r2, 8011864 <NetworkParams::callbackFunction(char const*)+0x30>
 8011852:	f023 0301 	bic.w	r3, r3, #1
 8011856:	3a00      	subs	r2, #0
 8011858:	bf18      	it	ne
 801185a:	2201      	movne	r2, #1
 801185c:	6063      	str	r3, [r4, #4]
 801185e:	7622      	strb	r2, [r4, #24]
 8011860:	b005      	add	sp, #20
 8011862:	bd30      	pop	{r4, r5, pc}
 8011864:	f043 0301 	orr.w	r3, r3, #1
 8011868:	e7f5      	b.n	8011856 <NetworkParams::callbackFunction(char const*)+0x22>
 801186a:	4938      	ldr	r1, [pc, #224]	; (801194c <NetworkParams::callbackFunction(char const*)+0x118>)
 801186c:	f10d 0207 	add.w	r2, sp, #7
 8011870:	4628      	mov	r0, r5
 8011872:	f002 f828 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011876:	b980      	cbnz	r0, 801189a <NetworkParams::callbackFunction(char const*)+0x66>
 8011878:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801187c:	6863      	ldr	r3, [r4, #4]
 801187e:	1e51      	subs	r1, r2, #1
 8011880:	2904      	cmp	r1, #4
 8011882:	bf97      	itett	ls
 8011884:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8011888:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 801188c:	6063      	strls	r3, [r4, #4]
 801188e:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8011892:	bf84      	itt	hi
 8011894:	6063      	strhi	r3, [r4, #4]
 8011896:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 801189a:	492d      	ldr	r1, [pc, #180]	; (8011950 <NetworkParams::callbackFunction(char const*)+0x11c>)
 801189c:	aa02      	add	r2, sp, #8
 801189e:	4628      	mov	r0, r5
 80118a0:	f001 ff88 	bl	80137b4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80118a4:	b9e8      	cbnz	r0, 80118e2 <NetworkParams::callbackFunction(char const*)+0xae>
 80118a6:	9a02      	ldr	r2, [sp, #8]
 80118a8:	6863      	ldr	r3, [r4, #4]
 80118aa:	b2d1      	uxtb	r1, r2
 80118ac:	29ac      	cmp	r1, #172	; 0xac
 80118ae:	f3c2 2007 	ubfx	r0, r2, #8, #8
 80118b2:	d007      	beq.n	80118c4 <NetworkParams::callbackFunction(char const*)+0x90>
 80118b4:	29c0      	cmp	r1, #192	; 0xc0
 80118b6:	d00c      	beq.n	80118d2 <NetworkParams::callbackFunction(char const*)+0x9e>
 80118b8:	290a      	cmp	r1, #10
 80118ba:	d10d      	bne.n	80118d8 <NetworkParams::callbackFunction(char const*)+0xa4>
 80118bc:	60a2      	str	r2, [r4, #8]
 80118be:	f043 0302 	orr.w	r3, r3, #2
 80118c2:	e004      	b.n	80118ce <NetworkParams::callbackFunction(char const*)+0x9a>
 80118c4:	3810      	subs	r0, #16
 80118c6:	280f      	cmp	r0, #15
 80118c8:	d9f8      	bls.n	80118bc <NetworkParams::callbackFunction(char const*)+0x88>
 80118ca:	f023 0302 	bic.w	r3, r3, #2
 80118ce:	6063      	str	r3, [r4, #4]
 80118d0:	e7c6      	b.n	8011860 <NetworkParams::callbackFunction(char const*)+0x2c>
 80118d2:	28a8      	cmp	r0, #168	; 0xa8
 80118d4:	d1f9      	bne.n	80118ca <NetworkParams::callbackFunction(char const*)+0x96>
 80118d6:	e7f1      	b.n	80118bc <NetworkParams::callbackFunction(char const*)+0x88>
 80118d8:	2902      	cmp	r1, #2
 80118da:	d0ef      	beq.n	80118bc <NetworkParams::callbackFunction(char const*)+0x88>
 80118dc:	2a00      	cmp	r2, #0
 80118de:	d0ed      	beq.n	80118bc <NetworkParams::callbackFunction(char const*)+0x88>
 80118e0:	e7f3      	b.n	80118ca <NetworkParams::callbackFunction(char const*)+0x96>
 80118e2:	491c      	ldr	r1, [pc, #112]	; (8011954 <NetworkParams::callbackFunction(char const*)+0x120>)
 80118e4:	aa02      	add	r2, sp, #8
 80118e6:	4628      	mov	r0, r5
 80118e8:	f001 ff64 	bl	80137b4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80118ec:	b970      	cbnz	r0, 801190c <NetworkParams::callbackFunction(char const*)+0xd8>
 80118ee:	9a02      	ldr	r2, [sp, #8]
 80118f0:	6863      	ldr	r3, [r4, #4]
 80118f2:	b142      	cbz	r2, 8011906 <NetworkParams::callbackFunction(char const*)+0xd2>
 80118f4:	ba11      	rev	r1, r2
 80118f6:	43c8      	mvns	r0, r1
 80118f8:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 80118fc:	d103      	bne.n	8011906 <NetworkParams::callbackFunction(char const*)+0xd2>
 80118fe:	60e2      	str	r2, [r4, #12]
 8011900:	f043 0304 	orr.w	r3, r3, #4
 8011904:	e7e3      	b.n	80118ce <NetworkParams::callbackFunction(char const*)+0x9a>
 8011906:	f023 0304 	bic.w	r3, r3, #4
 801190a:	e7e0      	b.n	80118ce <NetworkParams::callbackFunction(char const*)+0x9a>
 801190c:	4912      	ldr	r1, [pc, #72]	; (8011958 <NetworkParams::callbackFunction(char const*)+0x124>)
 801190e:	aa02      	add	r2, sp, #8
 8011910:	4628      	mov	r0, r5
 8011912:	f001 ff4f 	bl	80137b4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011916:	b928      	cbnz	r0, 8011924 <NetworkParams::callbackFunction(char const*)+0xf0>
 8011918:	9b02      	ldr	r3, [sp, #8]
 801191a:	6123      	str	r3, [r4, #16]
 801191c:	6863      	ldr	r3, [r4, #4]
 801191e:	f043 0308 	orr.w	r3, r3, #8
 8011922:	e7d4      	b.n	80118ce <NetworkParams::callbackFunction(char const*)+0x9a>
 8011924:	233f      	movs	r3, #63	; 0x3f
 8011926:	9303      	str	r3, [sp, #12]
 8011928:	490c      	ldr	r1, [pc, #48]	; (801195c <NetworkParams::callbackFunction(char const*)+0x128>)
 801192a:	ab03      	add	r3, sp, #12
 801192c:	f104 0219 	add.w	r2, r4, #25
 8011930:	4628      	mov	r0, r5
 8011932:	f001 fecb 	bl	80136cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8011936:	2800      	cmp	r0, #0
 8011938:	d192      	bne.n	8011860 <NetworkParams::callbackFunction(char const*)+0x2c>
 801193a:	9b03      	ldr	r3, [sp, #12]
 801193c:	4423      	add	r3, r4
 801193e:	7658      	strb	r0, [r3, #25]
 8011940:	6863      	ldr	r3, [r4, #4]
 8011942:	f043 0320 	orr.w	r3, r3, #32
 8011946:	e7c2      	b.n	80118ce <NetworkParams::callbackFunction(char const*)+0x9a>
 8011948:	080192dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, pc}
 801194c:	080192ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, pc}
 8011950:	0801929f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8011954:	080192d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, ip, pc}
 8011958:	080192aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, ip, pc}
 801195c:	080192ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, ip, pc}

08011960 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8011960:	f7ff bf68 	b.w	8011834 <NetworkParams::callbackFunction(char const*)>

08011964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8011964:	b570      	push	{r4, r5, r6, lr}
 8011966:	4604      	mov	r4, r0
 8011968:	b086      	sub	sp, #24
 801196a:	4615      	mov	r5, r2
 801196c:	461e      	mov	r6, r3
 801196e:	3004      	adds	r0, #4
 8011970:	2900      	cmp	r1, #0
 8011972:	d02a      	beq.n	80119ca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x66>
 8011974:	225e      	movs	r2, #94	; 0x5e
 8011976:	f002 fd02 	bl	801437e <memmove>
 801197a:	462a      	mov	r2, r5
 801197c:	4633      	mov	r3, r6
 801197e:	496f      	ldr	r1, [pc, #444]	; (8011b3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>)
 8011980:	a803      	add	r0, sp, #12
 8011982:	f001 fdcb 	bl	801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011986:	6863      	ldr	r3, [r4, #4]
 8011988:	079a      	lsls	r2, r3, #30
 801198a:	bf5f      	itttt	pl
 801198c:	4a6c      	ldrpl	r2, [pc, #432]	; (8011b40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 801198e:	6812      	ldrpl	r2, [r2, #0]
 8011990:	6952      	ldrpl	r2, [r2, #20]
 8011992:	60a2      	strpl	r2, [r4, #8]
 8011994:	075e      	lsls	r6, r3, #29
 8011996:	bf5f      	itttt	pl
 8011998:	4a69      	ldrpl	r2, [pc, #420]	; (8011b40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 801199a:	6812      	ldrpl	r2, [r2, #0]
 801199c:	69d2      	ldrpl	r2, [r2, #28]
 801199e:	60e2      	strpl	r2, [r4, #12]
 80119a0:	071d      	lsls	r5, r3, #28
 80119a2:	bf5f      	itttt	pl
 80119a4:	4a66      	ldrpl	r2, [pc, #408]	; (8011b40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80119a6:	6812      	ldrpl	r2, [r2, #0]
 80119a8:	6992      	ldrpl	r2, [r2, #24]
 80119aa:	6122      	strpl	r2, [r4, #16]
 80119ac:	0698      	lsls	r0, r3, #26
 80119ae:	f104 0519 	add.w	r5, r4, #25
 80119b2:	d418      	bmi.n	80119e6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80119b4:	4b62      	ldr	r3, [pc, #392]	; (8011b40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80119b6:	681b      	ldr	r3, [r3, #0]
 80119b8:	4628      	mov	r0, r5
 80119ba:	331f      	adds	r3, #31
 80119bc:	223f      	movs	r2, #63	; 0x3f
 80119be:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80119c2:	b949      	cbnz	r1, 80119d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 80119c4:	f002 fcf2 	bl	80143ac <memset>
 80119c8:	e00a      	b.n	80119e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 80119ca:	6823      	ldr	r3, [r4, #0]
 80119cc:	681a      	ldr	r2, [r3, #0]
 80119ce:	4601      	mov	r1, r0
 80119d0:	68d2      	ldr	r2, [r2, #12]
 80119d2:	4618      	mov	r0, r3
 80119d4:	4790      	blx	r2
 80119d6:	e7d0      	b.n	801197a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80119d8:	3a01      	subs	r2, #1
 80119da:	f800 1b01 	strb.w	r1, [r0], #1
 80119de:	d1ee      	bne.n	80119be <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 80119e0:	2300      	movs	r3, #0
 80119e2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80119e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80119ea:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80119ee:	7e23      	ldrb	r3, [r4, #24]
 80119f0:	6861      	ldr	r1, [r4, #4]
 80119f2:	42b2      	cmp	r2, r6
 80119f4:	d21a      	bcs.n	8011a2c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 80119f6:	9803      	ldr	r0, [sp, #12]
 80119f8:	07c9      	lsls	r1, r1, #31
 80119fa:	4410      	add	r0, r2
 80119fc:	eba6 0602 	sub.w	r6, r6, r2
 8011a00:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011a04:	d404      	bmi.n	8011a10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8011a06:	b922      	cbnz	r2, 8011a12 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8011a08:	9300      	str	r3, [sp, #0]
 8011a0a:	4a4e      	ldr	r2, [pc, #312]	; (8011b44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011a0c:	4b4e      	ldr	r3, [pc, #312]	; (8011b48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8011a0e:	e003      	b.n	8011a18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8011a10:	b312      	cbz	r2, 8011a58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf4>
 8011a12:	9300      	str	r3, [sp, #0]
 8011a14:	4a4d      	ldr	r2, [pc, #308]	; (8011b4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8011a16:	4b4c      	ldr	r3, [pc, #304]	; (8011b48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8011a18:	4631      	mov	r1, r6
 8011a1a:	f7f8 fc7d 	bl	800a318 <snprintf>
 8011a1e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011a22:	4286      	cmp	r6, r0
 8011a24:	bfa4      	itt	ge
 8011a26:	181b      	addge	r3, r3, r0
 8011a28:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011a2c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011a30:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8011a34:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011a38:	6861      	ldr	r1, [r4, #4]
 8011a3a:	42b2      	cmp	r2, r6
 8011a3c:	d21f      	bcs.n	8011a7e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11a>
 8011a3e:	9803      	ldr	r0, [sp, #12]
 8011a40:	05c9      	lsls	r1, r1, #23
 8011a42:	4410      	add	r0, r2
 8011a44:	eba6 0602 	sub.w	r6, r6, r2
 8011a48:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011a4c:	d408      	bmi.n	8011a60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8011a4e:	b94a      	cbnz	r2, 8011a64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x100>
 8011a50:	9300      	str	r3, [sp, #0]
 8011a52:	4a3c      	ldr	r2, [pc, #240]	; (8011b44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011a54:	4b3e      	ldr	r3, [pc, #248]	; (8011b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8011a56:	e008      	b.n	8011a6a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8011a58:	9300      	str	r3, [sp, #0]
 8011a5a:	4a3e      	ldr	r2, [pc, #248]	; (8011b54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8011a5c:	4b3a      	ldr	r3, [pc, #232]	; (8011b48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8011a5e:	e7db      	b.n	8011a18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8011a60:	2a00      	cmp	r2, #0
 8011a62:	d03c      	beq.n	8011ade <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17a>
 8011a64:	9300      	str	r3, [sp, #0]
 8011a66:	4a39      	ldr	r2, [pc, #228]	; (8011b4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8011a68:	4b39      	ldr	r3, [pc, #228]	; (8011b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8011a6a:	4631      	mov	r1, r6
 8011a6c:	f7f8 fc54 	bl	800a318 <snprintf>
 8011a70:	4286      	cmp	r6, r0
 8011a72:	bfa2      	ittt	ge
 8011a74:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011a78:	18c0      	addge	r0, r0, r3
 8011a7a:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8011a7e:	4936      	ldr	r1, [pc, #216]	; (8011b58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8011a80:	a803      	add	r0, sp, #12
 8011a82:	f001 fdd1 	bl	8013628 <PropertiesBuilder::AddComment(char const*)>
 8011a86:	6863      	ldr	r3, [r4, #4]
 8011a88:	68a2      	ldr	r2, [r4, #8]
 8011a8a:	4934      	ldr	r1, [pc, #208]	; (8011b5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8011a8c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8011a90:	a803      	add	r0, sp, #12
 8011a92:	f001 fd85 	bl	80135a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011a96:	6863      	ldr	r3, [r4, #4]
 8011a98:	68e2      	ldr	r2, [r4, #12]
 8011a9a:	4931      	ldr	r1, [pc, #196]	; (8011b60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8011a9c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8011aa0:	a803      	add	r0, sp, #12
 8011aa2:	f001 fd7d 	bl	80135a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011aa6:	6863      	ldr	r3, [r4, #4]
 8011aa8:	6922      	ldr	r2, [r4, #16]
 8011aaa:	492e      	ldr	r1, [pc, #184]	; (8011b64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8011aac:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8011ab0:	a803      	add	r0, sp, #12
 8011ab2:	f001 fd75 	bl	80135a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011ab6:	6862      	ldr	r2, [r4, #4]
 8011ab8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011abc:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8011ac0:	42a3      	cmp	r3, r4
 8011ac2:	d21e      	bcs.n	8011b02 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 8011ac4:	9803      	ldr	r0, [sp, #12]
 8011ac6:	0692      	lsls	r2, r2, #26
 8011ac8:	4418      	add	r0, r3
 8011aca:	eba4 0403 	sub.w	r4, r4, r3
 8011ace:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011ad2:	d408      	bmi.n	8011ae6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x182>
 8011ad4:	b943      	cbnz	r3, 8011ae8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 8011ad6:	4b24      	ldr	r3, [pc, #144]	; (8011b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8011ad8:	4a24      	ldr	r2, [pc, #144]	; (8011b6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8011ada:	9500      	str	r5, [sp, #0]
 8011adc:	e007      	b.n	8011aee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8011ade:	9300      	str	r3, [sp, #0]
 8011ae0:	4a1c      	ldr	r2, [pc, #112]	; (8011b54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8011ae2:	4b1b      	ldr	r3, [pc, #108]	; (8011b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8011ae4:	e7c1      	b.n	8011a6a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8011ae6:	b32b      	cbz	r3, 8011b34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d0>
 8011ae8:	4b1f      	ldr	r3, [pc, #124]	; (8011b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8011aea:	4a21      	ldr	r2, [pc, #132]	; (8011b70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 8011aec:	9500      	str	r5, [sp, #0]
 8011aee:	4621      	mov	r1, r4
 8011af0:	f7f8 fc12 	bl	800a318 <snprintf>
 8011af4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011af8:	4284      	cmp	r4, r0
 8011afa:	bfa4      	itt	ge
 8011afc:	181b      	addge	r3, r3, r0
 8011afe:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011b02:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011b06:	b17b      	cbz	r3, 8011b28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 8011b08:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011b0c:	9b03      	ldr	r3, [sp, #12]
 8011b0e:	4413      	add	r3, r2
 8011b10:	227d      	movs	r2, #125	; 0x7d
 8011b12:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011b16:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011b1a:	9903      	ldr	r1, [sp, #12]
 8011b1c:	54ca      	strb	r2, [r1, r3]
 8011b1e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011b22:	3301      	adds	r3, #1
 8011b24:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011b28:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011b2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011b2e:	601a      	str	r2, [r3, #0]
 8011b30:	b006      	add	sp, #24
 8011b32:	bd70      	pop	{r4, r5, r6, pc}
 8011b34:	4b0c      	ldr	r3, [pc, #48]	; (8011b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8011b36:	4a0f      	ldr	r2, [pc, #60]	; (8011b74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8011b38:	9500      	str	r5, [sp, #0]
 8011b3a:	e7d8      	b.n	8011aee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8011b3c:	080192e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, ip, pc}
 8011b40:	2000fadc 	ldrdcs	pc, [r0], -ip
 8011b44:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 8011b48:	080192dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, pc}
 8011b4c:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 8011b50:	080192ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, pc}
 8011b54:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}
 8011b58:	08019295 	stmdaeq	r1, {r0, r2, r4, r7, r9, ip, pc}
 8011b5c:	0801929f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8011b60:	080192d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, ip, pc}
 8011b64:	080192aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, ip, pc}
 8011b68:	080192ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, ip, pc}
 8011b6c:	08016ea0 	stmdaeq	r1, {r5, r7, r9, sl, fp, sp, lr}
 8011b70:	08016e95 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, fp, sp, lr}
 8011b74:	08016ea1 	stmdaeq	r1, {r0, r5, r7, r9, sl, fp, sp, lr}

08011b78 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8011b78:	b513      	push	{r0, r1, r4, lr}
 8011b7a:	6804      	ldr	r4, [r0, #0]
 8011b7c:	b914      	cbnz	r4, 8011b84 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011b7e:	601c      	str	r4, [r3, #0]
 8011b80:	b002      	add	sp, #8
 8011b82:	bd10      	pop	{r4, pc}
 8011b84:	9300      	str	r3, [sp, #0]
 8011b86:	4613      	mov	r3, r2
 8011b88:	460a      	mov	r2, r1
 8011b8a:	2100      	movs	r1, #0
 8011b8c:	f7ff feea 	bl	8011964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8011b90:	e7f6      	b.n	8011b80 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011b92 <NetworkParams::Dump()>:
 8011b92:	4770      	bx	lr

08011b94 <memcpy.isra.0>:
 8011b94:	3801      	subs	r0, #1
 8011b96:	440a      	add	r2, r1
 8011b98:	4291      	cmp	r1, r2
 8011b9a:	d100      	bne.n	8011b9e <memcpy.isra.0+0xa>
 8011b9c:	4770      	bx	lr
 8011b9e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011ba2:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011ba6:	e7f7      	b.n	8011b98 <memcpy.isra.0+0x4>

08011ba8 <arp_announce>:
 8011ba8:	4803      	ldr	r0, [pc, #12]	; (8011bb8 <arp_announce+0x10>)
 8011baa:	69c3      	ldr	r3, [r0, #28]
 8011bac:	b113      	cbz	r3, 8011bb4 <arp_announce+0xc>
 8011bae:	212a      	movs	r1, #42	; 0x2a
 8011bb0:	f003 bfae 	b.w	8015b10 <emac_eth_send>
 8011bb4:	4770      	bx	lr
 8011bb6:	bf00      	nop
 8011bb8:	2000fae0 	andcs	pc, r0, r0, ror #21

08011bbc <arp_handle_request>:
 8011bbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011bbe:	2204      	movs	r2, #4
 8011bc0:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8011bc4:	4604      	mov	r4, r0
 8011bc6:	eb0d 0002 	add.w	r0, sp, r2
 8011bca:	f7ff ffe3 	bl	8011b94 <memcpy.isra.0>
 8011bce:	4b0d      	ldr	r3, [pc, #52]	; (8011c04 <arp_handle_request+0x48>)
 8011bd0:	9a01      	ldr	r2, [sp, #4]
 8011bd2:	69db      	ldr	r3, [r3, #28]
 8011bd4:	429a      	cmp	r2, r3
 8011bd6:	d113      	bne.n	8011c00 <arp_handle_request+0x44>
 8011bd8:	4d0b      	ldr	r5, [pc, #44]	; (8011c08 <arp_handle_request+0x4c>)
 8011bda:	2206      	movs	r2, #6
 8011bdc:	18a1      	adds	r1, r4, r2
 8011bde:	4628      	mov	r0, r5
 8011be0:	f7ff ffd8 	bl	8011b94 <memcpy.isra.0>
 8011be4:	f104 0116 	add.w	r1, r4, #22
 8011be8:	f105 0020 	add.w	r0, r5, #32
 8011bec:	2206      	movs	r2, #6
 8011bee:	f7ff ffd1 	bl	8011b94 <memcpy.isra.0>
 8011bf2:	69e3      	ldr	r3, [r4, #28]
 8011bf4:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8011bf8:	212a      	movs	r1, #42	; 0x2a
 8011bfa:	4628      	mov	r0, r5
 8011bfc:	f003 ff88 	bl	8015b10 <emac_eth_send>
 8011c00:	b003      	add	sp, #12
 8011c02:	bd30      	pop	{r4, r5, pc}
 8011c04:	2000fae0 	andcs	pc, r0, r0, ror #21
 8011c08:	2000fb0c 	andcs	pc, r0, ip, lsl #22

08011c0c <arp_handle_reply>:
 8011c0c:	69c1      	ldr	r1, [r0, #28]
 8011c0e:	3016      	adds	r0, #22
 8011c10:	f000 b80a 	b.w	8011c28 <arp_cache_update>

08011c14 <arp_send_request>:
 8011c14:	4b03      	ldr	r3, [pc, #12]	; (8011c24 <arp_send_request+0x10>)
 8011c16:	212a      	movs	r1, #42	; 0x2a
 8011c18:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8011c1c:	4618      	mov	r0, r3
 8011c1e:	f003 bf77 	b.w	8015b10 <emac_eth_send>
 8011c22:	bf00      	nop
 8011c24:	2000fb38 	andcs	pc, r0, r8, lsr fp	; <UNPREDICTABLE>

08011c28 <arp_cache_update>:
 8011c28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c2a:	4c12      	ldr	r4, [pc, #72]	; (8011c74 <arp_cache_update+0x4c>)
 8011c2c:	8823      	ldrh	r3, [r4, #0]
 8011c2e:	2b20      	cmp	r3, #32
 8011c30:	d019      	beq.n	8011c66 <arp_cache_update+0x3e>
 8011c32:	2500      	movs	r5, #0
 8011c34:	1d22      	adds	r2, r4, #4
 8011c36:	260c      	movs	r6, #12
 8011c38:	b2af      	uxth	r7, r5
 8011c3a:	42bb      	cmp	r3, r7
 8011c3c:	d80c      	bhi.n	8011c58 <arp_cache_update+0x30>
 8011c3e:	fb06 2203 	mla	r2, r6, r3, r2
 8011c42:	3203      	adds	r2, #3
 8011c44:	1d85      	adds	r5, r0, #6
 8011c46:	42a8      	cmp	r0, r5
 8011c48:	d10e      	bne.n	8011c68 <arp_cache_update+0x40>
 8011c4a:	220c      	movs	r2, #12
 8011c4c:	fb02 4203 	mla	r2, r2, r3, r4
 8011c50:	3301      	adds	r3, #1
 8011c52:	6051      	str	r1, [r2, #4]
 8011c54:	8023      	strh	r3, [r4, #0]
 8011c56:	e006      	b.n	8011c66 <arp_cache_update+0x3e>
 8011c58:	3501      	adds	r5, #1
 8011c5a:	fb06 2705 	mla	r7, r6, r5, r2
 8011c5e:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8011c62:	428f      	cmp	r7, r1
 8011c64:	d1e8      	bne.n	8011c38 <arp_cache_update+0x10>
 8011c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c68:	f810 6b01 	ldrb.w	r6, [r0], #1
 8011c6c:	f802 6f01 	strb.w	r6, [r2, #1]!
 8011c70:	e7e9      	b.n	8011c46 <arp_cache_update+0x1e>
 8011c72:	bf00      	nop
 8011c74:	100011a4 	andne	r1, r0, r4, lsr #3

08011c78 <arp_cache_lookup>:
 8011c78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c7c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8011d0c <arp_cache_lookup+0x94>
 8011c80:	4606      	mov	r6, r0
 8011c82:	460c      	mov	r4, r1
 8011c84:	2200      	movs	r2, #0
 8011c86:	200c      	movs	r0, #12
 8011c88:	fb00 f302 	mul.w	r3, r0, r2
 8011c8c:	f853 1008 	ldr.w	r1, [r3, r8]
 8011c90:	42b1      	cmp	r1, r6
 8011c92:	d10d      	bne.n	8011cb0 <arp_cache_lookup+0x38>
 8011c94:	3304      	adds	r3, #4
 8011c96:	4443      	add	r3, r8
 8011c98:	3c01      	subs	r4, #1
 8011c9a:	1d9a      	adds	r2, r3, #6
 8011c9c:	4293      	cmp	r3, r2
 8011c9e:	d102      	bne.n	8011ca6 <arp_cache_lookup+0x2e>
 8011ca0:	4630      	mov	r0, r6
 8011ca2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011ca6:	f813 1b01 	ldrb.w	r1, [r3], #1
 8011caa:	f804 1f01 	strb.w	r1, [r4, #1]!
 8011cae:	e7f5      	b.n	8011c9c <arp_cache_lookup+0x24>
 8011cb0:	b111      	cbz	r1, 8011cb8 <arp_cache_lookup+0x40>
 8011cb2:	3201      	adds	r2, #1
 8011cb4:	2a20      	cmp	r2, #32
 8011cb6:	d1e7      	bne.n	8011c88 <arp_cache_lookup+0x10>
 8011cb8:	f8df a054 	ldr.w	sl, [pc, #84]	; 8011d10 <arp_cache_lookup+0x98>
 8011cbc:	f8ba 5000 	ldrh.w	r5, [sl]
 8011cc0:	2704      	movs	r7, #4
 8011cc2:	3f01      	subs	r7, #1
 8011cc4:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8011cc8:	d101      	bne.n	8011cce <arp_cache_lookup+0x56>
 8011cca:	463e      	mov	r6, r7
 8011ccc:	e7e8      	b.n	8011ca0 <arp_cache_lookup+0x28>
 8011cce:	4630      	mov	r0, r6
 8011cd0:	f7ff ffa0 	bl	8011c14 <arp_send_request>
 8011cd4:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8011cd8:	f1b9 0901 	subs.w	r9, r9, #1
 8011cdc:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ce0:	d011      	beq.n	8011d06 <arp_cache_lookup+0x8e>
 8011ce2:	429d      	cmp	r5, r3
 8011ce4:	d00c      	beq.n	8011d00 <arp_cache_lookup+0x88>
 8011ce6:	230c      	movs	r3, #12
 8011ce8:	fb03 8505 	mla	r5, r3, r5, r8
 8011cec:	1d2b      	adds	r3, r5, #4
 8011cee:	3c01      	subs	r4, #1
 8011cf0:	350a      	adds	r5, #10
 8011cf2:	42ab      	cmp	r3, r5
 8011cf4:	d0d4      	beq.n	8011ca0 <arp_cache_lookup+0x28>
 8011cf6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011cfa:	f804 2f01 	strb.w	r2, [r4, #1]!
 8011cfe:	e7f8      	b.n	8011cf2 <arp_cache_lookup+0x7a>
 8011d00:	f7f6 fc30 	bl	8008564 <net_handle>
 8011d04:	e7e8      	b.n	8011cd8 <arp_cache_lookup+0x60>
 8011d06:	429d      	cmp	r5, r3
 8011d08:	d0db      	beq.n	8011cc2 <arp_cache_lookup+0x4a>
 8011d0a:	e7ec      	b.n	8011ce6 <arp_cache_lookup+0x6e>
 8011d0c:	100011a8 	andne	r1, r0, r8, lsr #3
 8011d10:	100011a4 	andne	r1, r0, r4, lsr #3

08011d14 <_parse_response>:
 8011d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d18:	2400      	movs	r4, #0
 8011d1a:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8011d1e:	4e52      	ldr	r6, [pc, #328]	; (8011e68 <_parse_response+0x154>)
 8011d20:	9009      	str	r0, [sp, #36]	; 0x24
 8011d22:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8011d26:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8011d2a:	6833      	ldr	r3, [r6, #0]
 8011d2c:	9402      	str	r4, [sp, #8]
 8011d2e:	460d      	mov	r5, r1
 8011d30:	46a3      	mov	fp, r4
 8011d32:	4627      	mov	r7, r4
 8011d34:	46a2      	mov	sl, r4
 8011d36:	46a1      	mov	r9, r4
 8011d38:	9407      	str	r4, [sp, #28]
 8011d3a:	46a0      	mov	r8, r4
 8011d3c:	9308      	str	r3, [sp, #32]
 8011d3e:	f7f6 fc11 	bl	8008564 <net_handle>
 8011d42:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8011d46:	9300      	str	r3, [sp, #0]
 8011d48:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8011d4c:	ab0c      	add	r3, sp, #48	; 0x30
 8011d4e:	f44f 7209 	mov.w	r2, #548	; 0x224
 8011d52:	a90d      	add	r1, sp, #52	; 0x34
 8011d54:	f7fe fd14 	bl	8010780 <udp_recv>
 8011d58:	2800      	cmp	r0, #0
 8011d5a:	d040      	beq.n	8011dde <_parse_response+0xca>
 8011d5c:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011d60:	2b43      	cmp	r3, #67	; 0x43
 8011d62:	d13c      	bne.n	8011dde <_parse_response+0xca>
 8011d64:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8011d68:	1e6b      	subs	r3, r5, #1
 8011d6a:	1d69      	adds	r1, r5, #5
 8011d6c:	4299      	cmp	r1, r3
 8011d6e:	d130      	bne.n	8011dd2 <_parse_response+0xbe>
 8011d70:	2500      	movs	r5, #0
 8011d72:	ab0d      	add	r3, sp, #52	; 0x34
 8011d74:	4418      	add	r0, r3
 8011d76:	46ac      	mov	ip, r5
 8011d78:	462e      	mov	r6, r5
 8011d7a:	ab49      	add	r3, sp, #292	; 0x124
 8011d7c:	4629      	mov	r1, r5
 8011d7e:	4283      	cmp	r3, r0
 8011d80:	d338      	bcc.n	8011df4 <_parse_response+0xe0>
 8011d82:	b145      	cbz	r5, 8011d96 <_parse_response+0x82>
 8011d84:	4b39      	ldr	r3, [pc, #228]	; (8011e6c <_parse_response+0x158>)
 8011d86:	9a07      	ldr	r2, [sp, #28]
 8011d88:	709a      	strb	r2, [r3, #2]
 8011d8a:	9a06      	ldr	r2, [sp, #24]
 8011d8c:	705a      	strb	r2, [r3, #1]
 8011d8e:	9a05      	ldr	r2, [sp, #20]
 8011d90:	f883 8003 	strb.w	r8, [r3, #3]
 8011d94:	701a      	strb	r2, [r3, #0]
 8011d96:	f1bc 0f00 	cmp.w	ip, #0
 8011d9a:	d007      	beq.n	8011dac <_parse_response+0x98>
 8011d9c:	4b34      	ldr	r3, [pc, #208]	; (8011e70 <_parse_response+0x15c>)
 8011d9e:	9a04      	ldr	r2, [sp, #16]
 8011da0:	70da      	strb	r2, [r3, #3]
 8011da2:	9a03      	ldr	r2, [sp, #12]
 8011da4:	709a      	strb	r2, [r3, #2]
 8011da6:	9a02      	ldr	r2, [sp, #8]
 8011da8:	705c      	strb	r4, [r3, #1]
 8011daa:	701a      	strb	r2, [r3, #0]
 8011dac:	b13e      	cbz	r6, 8011dbe <_parse_response+0xaa>
 8011dae:	4b31      	ldr	r3, [pc, #196]	; (8011e74 <_parse_response+0x160>)
 8011db0:	70df      	strb	r7, [r3, #3]
 8011db2:	f883 a002 	strb.w	sl, [r3, #2]
 8011db6:	f883 9001 	strb.w	r9, [r3, #1]
 8011dba:	f883 b000 	strb.w	fp, [r3]
 8011dbe:	2902      	cmp	r1, #2
 8011dc0:	bf02      	ittt	eq
 8011dc2:	4b2d      	ldreq	r3, [pc, #180]	; (8011e78 <_parse_response+0x164>)
 8011dc4:	9a11      	ldreq	r2, [sp, #68]	; 0x44
 8011dc6:	601a      	streq	r2, [r3, #0]
 8011dc8:	4608      	mov	r0, r1
 8011dca:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8011dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dd2:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8011dd6:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8011dda:	45e6      	cmp	lr, ip
 8011ddc:	d0c6      	beq.n	8011d6c <_parse_response+0x58>
 8011dde:	6833      	ldr	r3, [r6, #0]
 8011de0:	9a08      	ldr	r2, [sp, #32]
 8011de2:	1a9b      	subs	r3, r3, r2
 8011de4:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011de8:	d3a9      	bcc.n	8011d3e <_parse_response+0x2a>
 8011dea:	2800      	cmp	r0, #0
 8011dec:	d1c0      	bne.n	8011d70 <_parse_response+0x5c>
 8011dee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011df2:	e7ea      	b.n	8011dca <_parse_response+0xb6>
 8011df4:	781a      	ldrb	r2, [r3, #0]
 8011df6:	2a35      	cmp	r2, #53	; 0x35
 8011df8:	d011      	beq.n	8011e1e <_parse_response+0x10a>
 8011dfa:	d808      	bhi.n	8011e0e <_parse_response+0xfa>
 8011dfc:	2a01      	cmp	r2, #1
 8011dfe:	d011      	beq.n	8011e24 <_parse_response+0x110>
 8011e00:	2a03      	cmp	r2, #3
 8011e02:	d019      	beq.n	8011e38 <_parse_response+0x124>
 8011e04:	b14a      	cbz	r2, 8011e1a <_parse_response+0x106>
 8011e06:	1c9a      	adds	r2, r3, #2
 8011e08:	785b      	ldrb	r3, [r3, #1]
 8011e0a:	4413      	add	r3, r2
 8011e0c:	e7b7      	b.n	8011d7e <_parse_response+0x6a>
 8011e0e:	2a36      	cmp	r2, #54	; 0x36
 8011e10:	d01f      	beq.n	8011e52 <_parse_response+0x13e>
 8011e12:	2aff      	cmp	r2, #255	; 0xff
 8011e14:	d1f7      	bne.n	8011e06 <_parse_response+0xf2>
 8011e16:	4603      	mov	r3, r0
 8011e18:	e7b1      	b.n	8011d7e <_parse_response+0x6a>
 8011e1a:	3301      	adds	r3, #1
 8011e1c:	e7af      	b.n	8011d7e <_parse_response+0x6a>
 8011e1e:	7899      	ldrb	r1, [r3, #2]
 8011e20:	3303      	adds	r3, #3
 8011e22:	e7ac      	b.n	8011d7e <_parse_response+0x6a>
 8011e24:	f893 b002 	ldrb.w	fp, [r3, #2]
 8011e28:	f893 9003 	ldrb.w	r9, [r3, #3]
 8011e2c:	f893 a004 	ldrb.w	sl, [r3, #4]
 8011e30:	795f      	ldrb	r7, [r3, #5]
 8011e32:	4616      	mov	r6, r2
 8011e34:	3306      	adds	r3, #6
 8011e36:	e7a2      	b.n	8011d7e <_parse_response+0x6a>
 8011e38:	789a      	ldrb	r2, [r3, #2]
 8011e3a:	9202      	str	r2, [sp, #8]
 8011e3c:	791a      	ldrb	r2, [r3, #4]
 8011e3e:	9203      	str	r2, [sp, #12]
 8011e40:	795a      	ldrb	r2, [r3, #5]
 8011e42:	9204      	str	r2, [sp, #16]
 8011e44:	785a      	ldrb	r2, [r3, #1]
 8011e46:	78dc      	ldrb	r4, [r3, #3]
 8011e48:	4413      	add	r3, r2
 8011e4a:	3302      	adds	r3, #2
 8011e4c:	f04f 0c01 	mov.w	ip, #1
 8011e50:	e795      	b.n	8011d7e <_parse_response+0x6a>
 8011e52:	789a      	ldrb	r2, [r3, #2]
 8011e54:	9205      	str	r2, [sp, #20]
 8011e56:	78da      	ldrb	r2, [r3, #3]
 8011e58:	9206      	str	r2, [sp, #24]
 8011e5a:	791a      	ldrb	r2, [r3, #4]
 8011e5c:	f893 8005 	ldrb.w	r8, [r3, #5]
 8011e60:	9207      	str	r2, [sp, #28]
 8011e62:	3306      	adds	r3, #6
 8011e64:	2501      	movs	r5, #1
 8011e66:	e78a      	b.n	8011d7e <_parse_response+0x6a>
 8011e68:	2000fedc 	ldrdcs	pc, [r0], -ip
 8011e6c:	2000fd94 	mulcs	r0, r4, sp
 8011e70:	2000fb64 	andcs	pc, r0, r4, ror #22
 8011e74:	2000fb6c 	andcs	pc, r0, ip, ror #22
 8011e78:	2000fb68 	andcs	pc, r0, r8, ror #22

08011e7c <memcpy.isra.0>:
 8011e7c:	3801      	subs	r0, #1
 8011e7e:	440a      	add	r2, r1
 8011e80:	4291      	cmp	r1, r2
 8011e82:	d100      	bne.n	8011e86 <memcpy.isra.0+0xa>
 8011e84:	4770      	bx	lr
 8011e86:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011e8a:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011e8e:	e7f7      	b.n	8011e80 <memcpy.isra.0+0x4>

08011e90 <dhcp_client>:
 8011e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e94:	b087      	sub	sp, #28
 8011e96:	460f      	mov	r7, r1
 8011e98:	9203      	str	r2, [sp, #12]
 8011e9a:	4a77      	ldr	r2, [pc, #476]	; (8012078 <dhcp_client+0x1e8>)
 8011e9c:	4605      	mov	r5, r0
 8011e9e:	f44f 7309 	mov.w	r3, #548	; 0x224
 8011ea2:	4614      	mov	r4, r2
 8011ea4:	2100      	movs	r1, #0
 8011ea6:	3b01      	subs	r3, #1
 8011ea8:	f802 1b01 	strb.w	r1, [r2], #1
 8011eac:	d1fb      	bne.n	8011ea6 <dhcp_client+0x16>
 8011eae:	f240 1301 	movw	r3, #257	; 0x101
 8011eb2:	2206      	movs	r2, #6
 8011eb4:	4871      	ldr	r0, [pc, #452]	; (801207c <dhcp_client+0x1ec>)
 8011eb6:	8023      	strh	r3, [r4, #0]
 8011eb8:	4629      	mov	r1, r5
 8011eba:	70a2      	strb	r2, [r4, #2]
 8011ebc:	f7ff ffde 	bl	8011e7c <memcpy.isra.0>
 8011ec0:	4b6f      	ldr	r3, [pc, #444]	; (8012080 <dhcp_client+0x1f0>)
 8011ec2:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8011ec6:	f240 1335 	movw	r3, #309	; 0x135
 8011eca:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8011ece:	2044      	movs	r0, #68	; 0x44
 8011ed0:	f7fe fc1c 	bl	801070c <udp_bind>
 8011ed4:	1e06      	subs	r6, r0, #0
 8011ed6:	f2c0 80c9 	blt.w	801206c <dhcp_client+0x1dc>
 8011eda:	f8df a19c 	ldr.w	sl, [pc, #412]	; 8012078 <dhcp_client+0x1e8>
 8011ede:	f04f 0915 	mov.w	r9, #21
 8011ee2:	f1b9 0901 	subs.w	r9, r9, #1
 8011ee6:	d11f      	bne.n	8011f28 <dhcp_client+0x98>
 8011ee8:	464c      	mov	r4, r9
 8011eea:	2044      	movs	r0, #68	; 0x44
 8011eec:	f7fe fc28 	bl	8010740 <udp_unbind>
 8011ef0:	2c00      	cmp	r4, #0
 8011ef2:	f000 80be 	beq.w	8012072 <dhcp_client+0x1e2>
 8011ef6:	4963      	ldr	r1, [pc, #396]	; (8012084 <dhcp_client+0x1f4>)
 8011ef8:	2204      	movs	r2, #4
 8011efa:	a805      	add	r0, sp, #20
 8011efc:	f7ff ffbe 	bl	8011e7c <memcpy.isra.0>
 8011f00:	9b05      	ldr	r3, [sp, #20]
 8011f02:	4961      	ldr	r1, [pc, #388]	; (8012088 <dhcp_client+0x1f8>)
 8011f04:	603b      	str	r3, [r7, #0]
 8011f06:	2204      	movs	r2, #4
 8011f08:	a805      	add	r0, sp, #20
 8011f0a:	f7ff ffb7 	bl	8011e7c <memcpy.isra.0>
 8011f0e:	9b05      	ldr	r3, [sp, #20]
 8011f10:	60bb      	str	r3, [r7, #8]
 8011f12:	a805      	add	r0, sp, #20
 8011f14:	495d      	ldr	r1, [pc, #372]	; (801208c <dhcp_client+0x1fc>)
 8011f16:	2204      	movs	r2, #4
 8011f18:	f7ff ffb0 	bl	8011e7c <memcpy.isra.0>
 8011f1c:	9b05      	ldr	r3, [sp, #20]
 8011f1e:	607b      	str	r3, [r7, #4]
 8011f20:	2000      	movs	r0, #0
 8011f22:	b007      	add	sp, #28
 8011f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f28:	f643 5301 	movw	r3, #15617	; 0x3d01
 8011f2c:	f240 1807 	movw	r8, #263	; 0x107
 8011f30:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011f34:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011f38:	782b      	ldrb	r3, [r5, #0]
 8011f3a:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011f3e:	786b      	ldrb	r3, [r5, #1]
 8011f40:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011f44:	78ab      	ldrb	r3, [r5, #2]
 8011f46:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011f4a:	78eb      	ldrb	r3, [r5, #3]
 8011f4c:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011f50:	792b      	ldrb	r3, [r5, #4]
 8011f52:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011f56:	796b      	ldrb	r3, [r5, #5]
 8011f58:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011f5c:	4a4c      	ldr	r2, [pc, #304]	; (8012090 <dhcp_client+0x200>)
 8011f5e:	4b4d      	ldr	r3, [pc, #308]	; (8012094 <dhcp_client+0x204>)
 8011f60:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8011f64:	23ff      	movs	r3, #255	; 0xff
 8011f66:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8011f6a:	fa5f fb86 	uxtb.w	fp, r6
 8011f6e:	2343      	movs	r3, #67	; 0x43
 8011f70:	9300      	str	r3, [sp, #0]
 8011f72:	f240 1205 	movw	r2, #261	; 0x105
 8011f76:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011f7a:	4651      	mov	r1, sl
 8011f7c:	4658      	mov	r0, fp
 8011f7e:	f7fe fc5b 	bl	8010838 <udp_send>
 8011f82:	4629      	mov	r1, r5
 8011f84:	4630      	mov	r0, r6
 8011f86:	f7ff fec5 	bl	8011d14 <_parse_response>
 8011f8a:	2802      	cmp	r0, #2
 8011f8c:	d1a9      	bne.n	8011ee2 <dhcp_client+0x52>
 8011f8e:	f643 5303 	movw	r3, #15619	; 0x3d03
 8011f92:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011f96:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011f9a:	782b      	ldrb	r3, [r5, #0]
 8011f9c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011fa0:	786b      	ldrb	r3, [r5, #1]
 8011fa2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011fa6:	78ab      	ldrb	r3, [r5, #2]
 8011fa8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011fac:	78eb      	ldrb	r3, [r5, #3]
 8011fae:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011fb2:	792b      	ldrb	r3, [r5, #4]
 8011fb4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011fb8:	796b      	ldrb	r3, [r5, #5]
 8011fba:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011fbe:	f240 4332 	movw	r3, #1074	; 0x432
 8011fc2:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8011fc6:	4b2f      	ldr	r3, [pc, #188]	; (8012084 <dhcp_client+0x1f4>)
 8011fc8:	f8df c0d0 	ldr.w	ip, [pc, #208]	; 801209c <dhcp_client+0x20c>
 8011fcc:	881a      	ldrh	r2, [r3, #0]
 8011fce:	885b      	ldrh	r3, [r3, #2]
 8011fd0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011fd4:	f240 4336 	movw	r3, #1078	; 0x436
 8011fd8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8011fdc:	4b2e      	ldr	r3, [pc, #184]	; (8012098 <dhcp_client+0x208>)
 8011fde:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8011fe2:	681b      	ldr	r3, [r3, #0]
 8011fe4:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8011fe8:	230c      	movs	r3, #12
 8011fea:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8011fee:	9b03      	ldr	r3, [sp, #12]
 8011ff0:	221e      	movs	r2, #30
 8011ff2:	1e58      	subs	r0, r3, #1
 8011ff4:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8011ff8:	f1a2 0e1e 	sub.w	lr, r2, #30
 8011ffc:	1c51      	adds	r1, r2, #1
 8011ffe:	bb8b      	cbnz	r3, 8012064 <dhcp_client+0x1d4>
 8012000:	18a3      	adds	r3, r4, r2
 8012002:	2037      	movs	r0, #55	; 0x37
 8012004:	4421      	add	r1, r4
 8012006:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 801200a:	2006      	movs	r0, #6
 801200c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8012010:	2103      	movs	r1, #3
 8012012:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8012016:	210f      	movs	r1, #15
 8012018:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 801201c:	213a      	movs	r1, #58	; 0x3a
 801201e:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8012022:	213b      	movs	r1, #59	; 0x3b
 8012024:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8012028:	f04f 0801 	mov.w	r8, #1
 801202c:	21ff      	movs	r1, #255	; 0xff
 801202e:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8012032:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8012036:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 801203a:	32f5      	adds	r2, #245	; 0xf5
 801203c:	2343      	movs	r3, #67	; 0x43
 801203e:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8012042:	b292      	uxth	r2, r2
 8012044:	9300      	str	r3, [sp, #0]
 8012046:	4651      	mov	r1, sl
 8012048:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801204c:	4658      	mov	r0, fp
 801204e:	f7fe fbf3 	bl	8010838 <udp_send>
 8012052:	4629      	mov	r1, r5
 8012054:	4630      	mov	r0, r6
 8012056:	f7ff fe5d 	bl	8011d14 <_parse_response>
 801205a:	2805      	cmp	r0, #5
 801205c:	f47f af41 	bne.w	8011ee2 <dhcp_client+0x52>
 8012060:	4644      	mov	r4, r8
 8012062:	e742      	b.n	8011eea <dhcp_client+0x5a>
 8012064:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8012068:	460a      	mov	r2, r1
 801206a:	e7c3      	b.n	8011ff4 <dhcp_client+0x164>
 801206c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012070:	e757      	b.n	8011f22 <dhcp_client+0x92>
 8012072:	f06f 0001 	mvn.w	r0, #1
 8012076:	e754      	b.n	8011f22 <dhcp_client+0x92>
 8012078:	2000fb70 	andcs	pc, r0, r0, ror fp	; <UNPREDICTABLE>
 801207c:	2000fb8c 	andcs	pc, r0, ip, lsl #23
 8012080:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8012084:	2000fb68 	andcs	pc, r0, r8, ror #22
 8012088:	2000fb64 	andcs	pc, r0, r4, ror #22
 801208c:	2000fb6c 	andcs	pc, r0, ip, ror #22
 8012090:	03010637 	movweq	r0, #5687	; 0x1637
 8012094:	3b3a0f06 	blcc	8e95cb4 <__exidx_end+0xe7bff8>
 8012098:	2000fd94 	mulcs	r0, r4, sp
 801209c:	2000fc79 	andcs	pc, r0, r9, ror ip	; <UNPREDICTABLE>

080120a0 <dhcp_client_release>:
 80120a0:	b507      	push	{r0, r1, r2, lr}
 80120a2:	2044      	movs	r0, #68	; 0x44
 80120a4:	f7fe fb32 	bl	801070c <udp_bind>
 80120a8:	4912      	ldr	r1, [pc, #72]	; (80120f4 <dhcp_client_release+0x54>)
 80120aa:	f243 6307 	movw	r3, #13831	; 0x3607
 80120ae:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 80120b2:	2304      	movs	r3, #4
 80120b4:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 80120b8:	4b0f      	ldr	r3, [pc, #60]	; (80120f8 <dhcp_client_release+0x58>)
 80120ba:	781a      	ldrb	r2, [r3, #0]
 80120bc:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 80120c0:	785a      	ldrb	r2, [r3, #1]
 80120c2:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 80120c6:	789a      	ldrb	r2, [r3, #2]
 80120c8:	78db      	ldrb	r3, [r3, #3]
 80120ca:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80120ce:	23ff      	movs	r3, #255	; 0xff
 80120d0:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80120d4:	2343      	movs	r3, #67	; 0x43
 80120d6:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 80120da:	b2c0      	uxtb	r0, r0
 80120dc:	9300      	str	r3, [sp, #0]
 80120de:	22fa      	movs	r2, #250	; 0xfa
 80120e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80120e4:	f7fe fba8 	bl	8010838 <udp_send>
 80120e8:	2044      	movs	r0, #68	; 0x44
 80120ea:	b003      	add	sp, #12
 80120ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80120f0:	f7fe bb26 	b.w	8010740 <udp_unbind>
 80120f4:	2000fb70 	andcs	pc, r0, r0, ror fp	; <UNPREDICTABLE>
 80120f8:	2000fd94 	mulcs	r0, r4, sp

080120fc <memcpy.isra.0>:
 80120fc:	3801      	subs	r0, #1
 80120fe:	440a      	add	r2, r1
 8012100:	4291      	cmp	r1, r2
 8012102:	d100      	bne.n	8012106 <memcpy.isra.0+0xa>
 8012104:	4770      	bx	lr
 8012106:	f811 3b01 	ldrb.w	r3, [r1], #1
 801210a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801210e:	e7f7      	b.n	8012100 <memcpy.isra.0+0x4>

08012110 <_send_report>:
 8012110:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012112:	4c1d      	ldr	r4, [pc, #116]	; (8012188 <_send_report+0x78>)
 8012114:	9001      	str	r0, [sp, #4]
 8012116:	f3c0 2306 	ubfx	r3, r0, #8, #7
 801211a:	70e3      	strb	r3, [r4, #3]
 801211c:	f104 0508 	add.w	r5, r4, #8
 8012120:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8012124:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8012128:	7160      	strb	r0, [r4, #5]
 801212a:	4621      	mov	r1, r4
 801212c:	4628      	mov	r0, r5
 801212e:	2206      	movs	r2, #6
 8012130:	7123      	strb	r3, [r4, #4]
 8012132:	f7ff ffe3 	bl	80120fc <memcpy.isra.0>
 8012136:	2204      	movs	r2, #4
 8012138:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801213a:	8363      	strh	r3, [r4, #26]
 801213c:	eb0d 0102 	add.w	r1, sp, r2
 8012140:	f104 0026 	add.w	r0, r4, #38	; 0x26
 8012144:	f104 0616 	add.w	r6, r4, #22
 8012148:	f7ff ffd8 	bl	80120fc <memcpy.isra.0>
 801214c:	2700      	movs	r7, #0
 801214e:	2118      	movs	r1, #24
 8012150:	4630      	mov	r0, r6
 8012152:	8427      	strh	r7, [r4, #32]
 8012154:	f000 f8bf 	bl	80122d6 <net_chksum>
 8012158:	2204      	movs	r2, #4
 801215a:	eb0d 0102 	add.w	r1, sp, r2
 801215e:	8420      	strh	r0, [r4, #32]
 8012160:	f104 0032 	add.w	r0, r4, #50	; 0x32
 8012164:	f7ff ffca 	bl	80120fc <memcpy.isra.0>
 8012168:	2120      	movs	r1, #32
 801216a:	4630      	mov	r0, r6
 801216c:	8627      	strh	r7, [r4, #48]	; 0x30
 801216e:	f000 f8b2 	bl	80122d6 <net_chksum>
 8012172:	212e      	movs	r1, #46	; 0x2e
 8012174:	8620      	strh	r0, [r4, #48]	; 0x30
 8012176:	4628      	mov	r0, r5
 8012178:	f003 fcca 	bl	8015b10 <emac_eth_send>
 801217c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801217e:	3301      	adds	r3, #1
 8012180:	8723      	strh	r3, [r4, #56]	; 0x38
 8012182:	b003      	add	sp, #12
 8012184:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012186:	bf00      	nop
 8012188:	10001328 	andne	r1, r0, r8, lsr #6

0801218c <igmp_set_ip>:
 801218c:	b513      	push	{r0, r1, r4, lr}
 801218e:	4c09      	ldr	r4, [pc, #36]	; (80121b4 <igmp_set_ip+0x28>)
 8012190:	6803      	ldr	r3, [r0, #0]
 8012192:	9301      	str	r3, [sp, #4]
 8012194:	2204      	movs	r2, #4
 8012196:	eb0d 0102 	add.w	r1, sp, r2
 801219a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 801219e:	f7ff ffad 	bl	80120fc <memcpy.isra.0>
 80121a2:	2204      	movs	r2, #4
 80121a4:	eb0d 0102 	add.w	r1, sp, r2
 80121a8:	f104 0056 	add.w	r0, r4, #86	; 0x56
 80121ac:	f7ff ffa6 	bl	80120fc <memcpy.isra.0>
 80121b0:	b002      	add	sp, #8
 80121b2:	bd10      	pop	{r4, pc}
 80121b4:	10001328 	andne	r1, r0, r8, lsr #6

080121b8 <igmp_timer>:
 80121b8:	b570      	push	{r4, r5, r6, lr}
 80121ba:	4c0b      	ldr	r4, [pc, #44]	; (80121e8 <igmp_timer+0x30>)
 80121bc:	2500      	movs	r5, #0
 80121be:	2602      	movs	r6, #2
 80121c0:	7963      	ldrb	r3, [r4, #5]
 80121c2:	2b01      	cmp	r3, #1
 80121c4:	d109      	bne.n	80121da <igmp_timer+0x22>
 80121c6:	7923      	ldrb	r3, [r4, #4]
 80121c8:	b13b      	cbz	r3, 80121da <igmp_timer+0x22>
 80121ca:	3b01      	subs	r3, #1
 80121cc:	b2db      	uxtb	r3, r3
 80121ce:	7123      	strb	r3, [r4, #4]
 80121d0:	b91b      	cbnz	r3, 80121da <igmp_timer+0x22>
 80121d2:	6820      	ldr	r0, [r4, #0]
 80121d4:	f7ff ff9c 	bl	8012110 <_send_report>
 80121d8:	7166      	strb	r6, [r4, #5]
 80121da:	3501      	adds	r5, #1
 80121dc:	2d24      	cmp	r5, #36	; 0x24
 80121de:	f104 0408 	add.w	r4, r4, #8
 80121e2:	d1ed      	bne.n	80121c0 <igmp_timer+0x8>
 80121e4:	bd70      	pop	{r4, r5, r6, pc}
 80121e6:	bf00      	nop
 80121e8:	10001394 	mulne	r0, r4, r3

080121ec <igmp_join>:
 80121ec:	b538      	push	{r3, r4, r5, lr}
 80121ee:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 80121f2:	2be0      	cmp	r3, #224	; 0xe0
 80121f4:	d11e      	bne.n	8012234 <igmp_join+0x48>
 80121f6:	4a12      	ldr	r2, [pc, #72]	; (8012240 <igmp_join+0x54>)
 80121f8:	f8d2 418c 	ldr.w	r4, [r2, #396]	; 0x18c
 80121fc:	2c24      	cmp	r4, #36	; 0x24
 80121fe:	d01c      	beq.n	801223a <igmp_join+0x4e>
 8012200:	2300      	movs	r3, #0
 8012202:	f102 016c 	add.w	r1, r2, #108	; 0x6c
 8012206:	429c      	cmp	r4, r3
 8012208:	dc0e      	bgt.n	8012228 <igmp_join+0x3c>
 801220a:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
 801220e:	f44f 7181 	mov.w	r1, #258	; 0x102
 8012212:	66d8      	str	r0, [r3, #108]	; 0x6c
 8012214:	f8a3 1070 	strh.w	r1, [r3, #112]	; 0x70
 8012218:	1c63      	adds	r3, r4, #1
 801221a:	f8c2 318c 	str.w	r3, [r2, #396]	; 0x18c
 801221e:	f7ff ff77 	bl	8012110 <_send_report>
 8012222:	4623      	mov	r3, r4
 8012224:	4618      	mov	r0, r3
 8012226:	bd38      	pop	{r3, r4, r5, pc}
 8012228:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
 801222c:	4285      	cmp	r5, r0
 801222e:	d0f9      	beq.n	8012224 <igmp_join+0x38>
 8012230:	3301      	adds	r3, #1
 8012232:	e7e8      	b.n	8012206 <igmp_join+0x1a>
 8012234:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012238:	e7f4      	b.n	8012224 <igmp_join+0x38>
 801223a:	f06f 0301 	mvn.w	r3, #1
 801223e:	e7f1      	b.n	8012224 <igmp_join+0x38>
 8012240:	10001328 	andne	r1, r0, r8, lsr #6

08012244 <igmp_leave>:
 8012244:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012246:	4c1d      	ldr	r4, [pc, #116]	; (80122bc <igmp_leave+0x78>)
 8012248:	2600      	movs	r6, #0
 801224a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 801224e:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 8012252:	4282      	cmp	r2, r0
 8012254:	d006      	beq.n	8012264 <igmp_leave+0x20>
 8012256:	3601      	adds	r6, #1
 8012258:	2e24      	cmp	r6, #36	; 0x24
 801225a:	d1f8      	bne.n	801224e <igmp_leave+0xa>
 801225c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012260:	b002      	add	sp, #8
 8012262:	bd70      	pop	{r4, r5, r6, pc}
 8012264:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012266:	9001      	str	r0, [sp, #4]
 8012268:	2500      	movs	r5, #0
 801226a:	2118      	movs	r1, #24
 801226c:	f104 0016 	add.w	r0, r4, #22
 8012270:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012274:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8012278:	f000 f82d 	bl	80122d6 <net_chksum>
 801227c:	2204      	movs	r2, #4
 801227e:	eb0d 0102 	add.w	r1, sp, r2
 8012282:	f8a4 0054 	strh.w	r0, [r4, #84]	; 0x54
 8012286:	f104 0066 	add.w	r0, r4, #102	; 0x66
 801228a:	f7ff ff37 	bl	80120fc <memcpy.isra.0>
 801228e:	2120      	movs	r1, #32
 8012290:	f104 004a 	add.w	r0, r4, #74	; 0x4a
 8012294:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8012298:	f000 f81d 	bl	80122d6 <net_chksum>
 801229c:	212e      	movs	r1, #46	; 0x2e
 801229e:	f8a4 0064 	strh.w	r0, [r4, #100]	; 0x64
 80122a2:	4807      	ldr	r0, [pc, #28]	; (80122c0 <igmp_leave+0x7c>)
 80122a4:	f003 fc34 	bl	8015b10 <emac_eth_send>
 80122a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80122aa:	3301      	adds	r3, #1
 80122ac:	8723      	strh	r3, [r4, #56]	; 0x38
 80122ae:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80122b2:	4628      	mov	r0, r5
 80122b4:	66e5      	str	r5, [r4, #108]	; 0x6c
 80122b6:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 80122ba:	e7d1      	b.n	8012260 <igmp_leave+0x1c>
 80122bc:	10001328 	andne	r1, r0, r8, lsr #6
 80122c0:	10001364 	andne	r1, r0, r4, ror #6

080122c4 <ip_set_ip>:
 80122c4:	b510      	push	{r4, lr}
 80122c6:	4604      	mov	r4, r0
 80122c8:	f7fe fa00 	bl	80106cc <udp_set_ip>
 80122cc:	4620      	mov	r0, r4
 80122ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122d2:	f7ff bf5b 	b.w	801218c <igmp_set_ip>

080122d6 <net_chksum>:
 80122d6:	f021 0201 	bic.w	r2, r1, #1
 80122da:	b530      	push	{r4, r5, lr}
 80122dc:	2300      	movs	r3, #0
 80122de:	1884      	adds	r4, r0, r2
 80122e0:	42a0      	cmp	r0, r4
 80122e2:	d10b      	bne.n	80122fc <net_chksum+0x26>
 80122e4:	4291      	cmp	r1, r2
 80122e6:	d004      	beq.n	80122f2 <net_chksum+0x1c>
 80122e8:	7802      	ldrb	r2, [r0, #0]
 80122ea:	0212      	lsls	r2, r2, #8
 80122ec:	ba52      	rev16	r2, r2
 80122ee:	fa13 f382 	uxtah	r3, r3, r2
 80122f2:	0c1a      	lsrs	r2, r3, #16
 80122f4:	d106      	bne.n	8012304 <net_chksum+0x2e>
 80122f6:	43d8      	mvns	r0, r3
 80122f8:	b280      	uxth	r0, r0
 80122fa:	bd30      	pop	{r4, r5, pc}
 80122fc:	f830 5b02 	ldrh.w	r5, [r0], #2
 8012300:	442b      	add	r3, r5
 8012302:	e7ed      	b.n	80122e0 <net_chksum+0xa>
 8012304:	fa12 f383 	uxtah	r3, r2, r3
 8012308:	e7f3      	b.n	80122f2 <net_chksum+0x1c>

0801230a <net::link_register_read()>:
 801230a:	b507      	push	{r0, r1, r2, lr}
 801230c:	2201      	movs	r2, #1
 801230e:	f10d 0306 	add.w	r3, sp, #6
 8012312:	4611      	mov	r1, r2
 8012314:	2000      	movs	r0, #0
 8012316:	f002 fc2d 	bl	8014b74 <enet_phy_write_read>
 801231a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801231e:	f080 0004 	eor.w	r0, r0, #4
 8012322:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012326:	b003      	add	sp, #12
 8012328:	f85d fb04 	ldr.w	pc, [sp], #4

0801232c <memcpy.isra.0>:
 801232c:	3801      	subs	r0, #1
 801232e:	440a      	add	r2, r1
 8012330:	4291      	cmp	r1, r2
 8012332:	d100      	bne.n	8012336 <memcpy.isra.0+0xa>
 8012334:	4770      	bx	lr
 8012336:	f811 3b01 	ldrb.w	r3, [r1], #1
 801233a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801233e:	e7f7      	b.n	8012330 <memcpy.isra.0+0x4>

08012340 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8012340:	b430      	push	{r4, r5}
 8012342:	b168      	cbz	r0, 8012360 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8012344:	7905      	ldrb	r5, [r0, #4]
 8012346:	2300      	movs	r3, #0
 8012348:	5cd4      	ldrb	r4, [r2, r3]
 801234a:	b11c      	cbz	r4, 8012354 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 801234c:	1c5c      	adds	r4, r3, #1
 801234e:	429d      	cmp	r5, r3
 8012350:	4623      	mov	r3, r4
 8012352:	dcf9      	bgt.n	8012348 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8012354:	6804      	ldr	r4, [r0, #0]
 8012356:	69e4      	ldr	r4, [r4, #28]
 8012358:	b2db      	uxtb	r3, r3
 801235a:	46a4      	mov	ip, r4
 801235c:	bc30      	pop	{r4, r5}
 801235e:	4760      	bx	ip
 8012360:	bc30      	pop	{r4, r5}
 8012362:	4770      	bx	lr

08012364 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8012364:	b110      	cbz	r0, 801236c <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8012366:	6803      	ldr	r3, [r0, #0]
 8012368:	691b      	ldr	r3, [r3, #16]
 801236a:	4718      	bx	r3
 801236c:	4770      	bx	lr
	...

08012370 <DisplayUdf::DisplayUdf()>:
 8012370:	b510      	push	{r4, lr}
 8012372:	4604      	mov	r4, r0
 8012374:	f001 fb68 	bl	8013a48 <Display::Display()>
 8012378:	4b05      	ldr	r3, [pc, #20]	; (8012390 <DisplayUdf::DisplayUdf()+0x20>)
 801237a:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 801237e:	601c      	str	r4, [r3, #0]
 8012380:	2301      	movs	r3, #1
 8012382:	f802 3f01 	strb.w	r3, [r2, #1]!
 8012386:	3301      	adds	r3, #1
 8012388:	2b15      	cmp	r3, #21
 801238a:	d1fa      	bne.n	8012382 <DisplayUdf::DisplayUdf()+0x12>
 801238c:	4620      	mov	r0, r4
 801238e:	bd10      	pop	{r4, pc}
 8012390:	2000fd98 	mulcs	r0, r8, sp

08012394 <DisplayUdf::SetTitle(char const*, ...)>:
 8012394:	b40e      	push	{r1, r2, r3}
 8012396:	b517      	push	{r0, r1, r2, r4, lr}
 8012398:	ab05      	add	r3, sp, #20
 801239a:	4604      	mov	r4, r0
 801239c:	f853 2b04 	ldr.w	r2, [r3], #4
 80123a0:	9301      	str	r3, [sp, #4]
 80123a2:	211f      	movs	r1, #31
 80123a4:	301c      	adds	r0, #28
 80123a6:	f7f7 ffcf 	bl	800a348 <vsnprintf>
 80123aa:	4420      	add	r0, r4
 80123ac:	2300      	movs	r3, #0
 80123ae:	7703      	strb	r3, [r0, #28]
 80123b0:	b003      	add	sp, #12
 80123b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123b6:	b003      	add	sp, #12
 80123b8:	4770      	bx	lr

080123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80123ba:	1e4b      	subs	r3, r1, #1
 80123bc:	2b05      	cmp	r3, #5
 80123be:	b530      	push	{r4, r5, lr}
 80123c0:	d80f      	bhi.n	80123e2 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80123c2:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80123c6:	2300      	movs	r3, #0
 80123c8:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80123cc:	428d      	cmp	r5, r1
 80123ce:	d109      	bne.n	80123e4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80123d0:	1884      	adds	r4, r0, r2
 80123d2:	4403      	add	r3, r0
 80123d4:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80123d8:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80123dc:	4402      	add	r2, r0
 80123de:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
 80123e2:	bd30      	pop	{r4, r5, pc}
 80123e4:	3301      	adds	r3, #1
 80123e6:	2b14      	cmp	r3, #20
 80123e8:	d1ee      	bne.n	80123c8 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80123ea:	e7f7      	b.n	80123dc <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080123ec <DisplayUdf::ShowEmacStart()>:
 80123ec:	b510      	push	{r4, lr}
 80123ee:	4604      	mov	r4, r0
 80123f0:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80123f4:	6980      	ldr	r0, [r0, #24]
 80123f6:	f7ff ffb5 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80123fa:	4a03      	ldr	r2, [pc, #12]	; (8012408 <DisplayUdf::ShowEmacStart()+0x1c>)
 80123fc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012400:	4620      	mov	r0, r4
 8012402:	f7f6 ff4f 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8012406:	bd10      	pop	{r4, pc}
 8012408:	080192f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, ip, pc}

0801240c <DisplayUdf::ShowIpAddress()>:
 801240c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012410:	4604      	mov	r4, r0
 8012412:	b088      	sub	sp, #32
 8012414:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8012418:	6980      	ldr	r0, [r0, #24]
 801241a:	f7ff ffa3 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801241e:	4b13      	ldr	r3, [pc, #76]	; (801246c <DisplayUdf::ShowIpAddress()+0x60>)
 8012420:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012424:	681d      	ldr	r5, [r3, #0]
 8012426:	9107      	str	r1, [sp, #28]
 8012428:	696e      	ldr	r6, [r5, #20]
 801242a:	69e8      	ldr	r0, [r5, #28]
 801242c:	b2f3      	uxtb	r3, r6
 801242e:	9306      	str	r3, [sp, #24]
 8012430:	f004 fa1e 	bl	8016870 <__popcountsi2>
 8012434:	79ea      	ldrb	r2, [r5, #7]
 8012436:	f3c6 2707 	ubfx	r7, r6, #8, #8
 801243a:	f3c6 4807 	ubfx	r8, r6, #16, #8
 801243e:	e9dd 3106 	ldrd	r3, r1, [sp, #24]
 8012442:	0e36      	lsrs	r6, r6, #24
 8012444:	b982      	cbnz	r2, 8012468 <DisplayUdf::ShowIpAddress()+0x5c>
 8012446:	796a      	ldrb	r2, [r5, #5]
 8012448:	2a00      	cmp	r2, #0
 801244a:	bf14      	ite	ne
 801244c:	2244      	movne	r2, #68	; 0x44
 801244e:	2253      	moveq	r2, #83	; 0x53
 8012450:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8012454:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8012458:	4a05      	ldr	r2, [pc, #20]	; (8012470 <DisplayUdf::ShowIpAddress()+0x64>)
 801245a:	9700      	str	r7, [sp, #0]
 801245c:	4620      	mov	r0, r4
 801245e:	f7f6 ff21 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8012462:	b008      	add	sp, #32
 8012464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012468:	225a      	movs	r2, #90	; 0x5a
 801246a:	e7f1      	b.n	8012450 <DisplayUdf::ShowIpAddress()+0x44>
 801246c:	2000fadc 	ldrdcs	pc, [r0], -ip
 8012470:	08019300 	stmdaeq	r1, {r8, r9, ip, pc}

08012474 <DisplayUdf::ShowNetmask()>:
 8012474:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012476:	4b0c      	ldr	r3, [pc, #48]	; (80124a8 <DisplayUdf::ShowNetmask()+0x34>)
 8012478:	681b      	ldr	r3, [r3, #0]
 801247a:	69db      	ldr	r3, [r3, #28]
 801247c:	0e1a      	lsrs	r2, r3, #24
 801247e:	9202      	str	r2, [sp, #8]
 8012480:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012484:	9201      	str	r2, [sp, #4]
 8012486:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801248a:	9200      	str	r2, [sp, #0]
 801248c:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8012490:	4a06      	ldr	r2, [pc, #24]	; (80124ac <DisplayUdf::ShowNetmask()+0x38>)
 8012492:	b2db      	uxtb	r3, r3
 8012494:	4604      	mov	r4, r0
 8012496:	f7f6 ff05 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 801249a:	4620      	mov	r0, r4
 801249c:	b004      	add	sp, #16
 801249e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124a2:	f7ff bfb3 	b.w	801240c <DisplayUdf::ShowIpAddress()>
 80124a6:	bf00      	nop
 80124a8:	2000fadc 	ldrdcs	pc, [r0], -ip
 80124ac:	08019312 	stmdaeq	r1, {r1, r4, r8, r9, ip, pc}

080124b0 <DisplayUdf::ShowGatewayIp()>:
 80124b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80124b2:	4604      	mov	r4, r0
 80124b4:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80124b8:	6980      	ldr	r0, [r0, #24]
 80124ba:	f7ff ff53 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80124be:	4b0a      	ldr	r3, [pc, #40]	; (80124e8 <DisplayUdf::ShowGatewayIp()+0x38>)
 80124c0:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80124c4:	681b      	ldr	r3, [r3, #0]
 80124c6:	699b      	ldr	r3, [r3, #24]
 80124c8:	0e1a      	lsrs	r2, r3, #24
 80124ca:	9202      	str	r2, [sp, #8]
 80124cc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80124d0:	9201      	str	r2, [sp, #4]
 80124d2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80124d6:	9200      	str	r2, [sp, #0]
 80124d8:	b2db      	uxtb	r3, r3
 80124da:	4a04      	ldr	r2, [pc, #16]	; (80124ec <DisplayUdf::ShowGatewayIp()+0x3c>)
 80124dc:	4620      	mov	r0, r4
 80124de:	f7f6 fee1 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80124e2:	b004      	add	sp, #16
 80124e4:	bd10      	pop	{r4, pc}
 80124e6:	bf00      	nop
 80124e8:	2000fadc 	ldrdcs	pc, [r0], -ip
 80124ec:	08019321 	stmdaeq	r1, {r0, r5, r8, r9, ip, pc}

080124f0 <DisplayUdf::ShowHostName()>:
 80124f0:	b510      	push	{r4, lr}
 80124f2:	4604      	mov	r4, r0
 80124f4:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80124f8:	6980      	ldr	r0, [r0, #24]
 80124fa:	f7ff ff33 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80124fe:	4b05      	ldr	r3, [pc, #20]	; (8012514 <DisplayUdf::ShowHostName()+0x24>)
 8012500:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8012504:	681a      	ldr	r2, [r3, #0]
 8012506:	69a0      	ldr	r0, [r4, #24]
 8012508:	3220      	adds	r2, #32
 801250a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801250e:	f7ff bf17 	b.w	8012340 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012512:	bf00      	nop
 8012514:	2000fadc 	ldrdcs	pc, [r0], -ip

08012518 <DisplayUdf::Show()>:
 8012518:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801251a:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 801251e:	4604      	mov	r4, r0
 8012520:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8012524:	21ff      	movs	r1, #255	; 0xff
 8012526:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801252a:	2806      	cmp	r0, #6
 801252c:	bf88      	it	hi
 801252e:	7019      	strbhi	r1, [r3, #0]
 8012530:	429a      	cmp	r2, r3
 8012532:	d1f8      	bne.n	8012526 <DisplayUdf::Show()+0xe>
 8012534:	2501      	movs	r5, #1
 8012536:	4629      	mov	r1, r5
 8012538:	3501      	adds	r5, #1
 801253a:	69a0      	ldr	r0, [r4, #24]
 801253c:	b2ed      	uxtb	r5, r5
 801253e:	f7ff ff11 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012542:	2d06      	cmp	r5, #6
 8012544:	d1f7      	bne.n	8012536 <DisplayUdf::Show()+0x1e>
 8012546:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 801254a:	69a0      	ldr	r0, [r4, #24]
 801254c:	f104 021c 	add.w	r2, r4, #28
 8012550:	f7ff fef6 	bl	8012340 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012554:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8012558:	69a0      	ldr	r0, [r4, #24]
 801255a:	4a0d      	ldr	r2, [pc, #52]	; (8012590 <DisplayUdf::Show()+0x78>)
 801255c:	f7ff fef0 	bl	8012340 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012560:	4b0c      	ldr	r3, [pc, #48]	; (8012594 <DisplayUdf::Show()+0x7c>)
 8012562:	4a0d      	ldr	r2, [pc, #52]	; (8012598 <DisplayUdf::Show()+0x80>)
 8012564:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8012568:	9300      	str	r3, [sp, #0]
 801256a:	4620      	mov	r0, r4
 801256c:	2303      	movs	r3, #3
 801256e:	f7f6 fe99 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8012572:	4620      	mov	r0, r4
 8012574:	f7ff ff4a 	bl	801240c <DisplayUdf::ShowIpAddress()>
 8012578:	4620      	mov	r0, r4
 801257a:	f7ff ff99 	bl	80124b0 <DisplayUdf::ShowGatewayIp()>
 801257e:	4620      	mov	r0, r4
 8012580:	f7ff ff78 	bl	8012474 <DisplayUdf::ShowNetmask()>
 8012584:	4620      	mov	r0, r4
 8012586:	b003      	add	sp, #12
 8012588:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801258c:	f7ff bfb0 	b.w	80124f0 <DisplayUdf::ShowHostName()>
 8012590:	080171dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip, sp, lr}
 8012594:	2000fe64 	andcs	pc, r0, r4, ror #28
 8012598:	08019330 	stmdaeq	r1, {r4, r5, r8, r9, ip, pc}

0801259c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 801259c:	3901      	subs	r1, #1
 801259e:	b510      	push	{r4, lr}
 80125a0:	4604      	mov	r4, r0
 80125a2:	2903      	cmp	r1, #3
 80125a4:	d814      	bhi.n	80125d0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80125a6:	e8df f001 	tbb	[pc, r1]
 80125aa:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80125ae:	4b14      	ldr	r3, [pc, #80]	; (8012600 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80125b0:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80125b4:	6818      	ldr	r0, [r3, #0]
 80125b6:	f7f8 f93b 	bl	800a830 <Display::Status(Display7SegmentMessage)>
 80125ba:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80125be:	69a0      	ldr	r0, [r4, #24]
 80125c0:	f7ff fed0 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80125c4:	4a0f      	ldr	r2, [pc, #60]	; (8012604 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80125c6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80125ca:	4620      	mov	r0, r4
 80125cc:	f7f6 fe6a 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80125d0:	bd10      	pop	{r4, pc}
 80125d2:	f248 0180 	movw	r1, #32896	; 0x8080
 80125d6:	4b0a      	ldr	r3, [pc, #40]	; (8012600 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80125d8:	6818      	ldr	r0, [r3, #0]
 80125da:	f7f8 f929 	bl	800a830 <Display::Status(Display7SegmentMessage)>
 80125de:	e7f7      	b.n	80125d0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80125e0:	4b07      	ldr	r3, [pc, #28]	; (8012600 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80125e2:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80125e6:	6818      	ldr	r0, [r3, #0]
 80125e8:	f7f8 f922 	bl	800a830 <Display::Status(Display7SegmentMessage)>
 80125ec:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80125f0:	69a0      	ldr	r0, [r4, #24]
 80125f2:	f7ff feb7 	bl	8012364 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80125f6:	4a04      	ldr	r2, [pc, #16]	; (8012608 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80125f8:	e7e5      	b.n	80125c6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80125fa:	f645 3179 	movw	r1, #23417	; 0x5b79
 80125fe:	e7ea      	b.n	80125d6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8012600:	2000fdd4 	ldrdcs	pc, [r0], -r4
 8012604:	0801933f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, pc}
 8012608:	0801934d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, ip, pc}

0801260c <DisplayUdf::ShowShutdown()>:
 801260c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801260e:	4604      	mov	r4, r0
 8012610:	6980      	ldr	r0, [r0, #24]
 8012612:	b1c0      	cbz	r0, 8012646 <DisplayUdf::ShowShutdown()+0x3a>
 8012614:	7947      	ldrb	r7, [r0, #5]
 8012616:	6803      	ldr	r3, [r0, #0]
 8012618:	7905      	ldrb	r5, [r0, #4]
 801261a:	6a1b      	ldr	r3, [r3, #32]
 801261c:	1e7a      	subs	r2, r7, #1
 801261e:	b2d2      	uxtb	r2, r2
 8012620:	9201      	str	r2, [sp, #4]
 8012622:	2100      	movs	r1, #0
 8012624:	4798      	blx	r3
 8012626:	9a01      	ldr	r2, [sp, #4]
 8012628:	2600      	movs	r6, #0
 801262a:	3d01      	subs	r5, #1
 801262c:	42ae      	cmp	r6, r5
 801262e:	69a0      	ldr	r0, [r4, #24]
 8012630:	d310      	bcc.n	8012654 <DisplayUdf::ShowShutdown()+0x48>
 8012632:	b118      	cbz	r0, 801263c <DisplayUdf::ShowShutdown()+0x30>
 8012634:	6803      	ldr	r3, [r0, #0]
 8012636:	2100      	movs	r1, #0
 8012638:	6a1b      	ldr	r3, [r3, #32]
 801263a:	4798      	blx	r3
 801263c:	4a0a      	ldr	r2, [pc, #40]	; (8012668 <DisplayUdf::ShowShutdown()+0x5c>)
 801263e:	69a0      	ldr	r0, [r4, #24]
 8012640:	4639      	mov	r1, r7
 8012642:	f7ff fe7d 	bl	8012340 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012646:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801264a:	4620      	mov	r0, r4
 801264c:	f7f8 f8f0 	bl	800a830 <Display::Status(Display7SegmentMessage)>
 8012650:	b003      	add	sp, #12
 8012652:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012654:	b128      	cbz	r0, 8012662 <DisplayUdf::ShowShutdown()+0x56>
 8012656:	6803      	ldr	r3, [r0, #0]
 8012658:	9201      	str	r2, [sp, #4]
 801265a:	695b      	ldr	r3, [r3, #20]
 801265c:	2120      	movs	r1, #32
 801265e:	4798      	blx	r3
 8012660:	9a01      	ldr	r2, [sp, #4]
 8012662:	3601      	adds	r6, #1
 8012664:	e7e2      	b.n	801262c <DisplayUdf::ShowShutdown()+0x20>
 8012666:	bf00      	nop
 8012668:	0801935b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, ip, pc}

0801266c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 801266c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801266e:	88c6      	ldrh	r6, [r0, #6]
 8012670:	8885      	ldrh	r5, [r0, #4]
 8012672:	42ae      	cmp	r6, r5
 8012674:	d216      	bcs.n	80126a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8012676:	4604      	mov	r4, r0
 8012678:	6800      	ldr	r0, [r0, #0]
 801267a:	1bad      	subs	r5, r5, r6
 801267c:	4430      	add	r0, r6
 801267e:	7a26      	ldrb	r6, [r4, #8]
 8012680:	b923      	cbnz	r3, 801268c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8012682:	b926      	cbnz	r6, 801268e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8012684:	9200      	str	r2, [sp, #0]
 8012686:	460b      	mov	r3, r1
 8012688:	4a09      	ldr	r2, [pc, #36]	; (80126b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 801268a:	e003      	b.n	8012694 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 801268c:	b166      	cbz	r6, 80126a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 801268e:	9200      	str	r2, [sp, #0]
 8012690:	4a08      	ldr	r2, [pc, #32]	; (80126b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8012692:	460b      	mov	r3, r1
 8012694:	4629      	mov	r1, r5
 8012696:	f7f7 fe3f 	bl	800a318 <snprintf>
 801269a:	4285      	cmp	r5, r0
 801269c:	bfa2      	ittt	ge
 801269e:	88e3      	ldrhge	r3, [r4, #6]
 80126a0:	181b      	addge	r3, r3, r0
 80126a2:	80e3      	strhge	r3, [r4, #6]
 80126a4:	b002      	add	sp, #8
 80126a6:	bd70      	pop	{r4, r5, r6, pc}
 80126a8:	9200      	str	r2, [sp, #0]
 80126aa:	460b      	mov	r3, r1
 80126ac:	4a02      	ldr	r2, [pc, #8]	; (80126b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 80126ae:	e7f1      	b.n	8012694 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80126b0:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 80126b4:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 80126b8:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

080126bc <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80126bc:	b510      	push	{r4, lr}
 80126be:	2220      	movs	r2, #32
 80126c0:	4604      	mov	r4, r0
 80126c2:	f840 1b04 	str.w	r1, [r0], #4
 80126c6:	2100      	movs	r1, #0
 80126c8:	f001 fe70 	bl	80143ac <memset>
 80126cc:	f647 7305 	movw	r3, #32517	; 0x7f05
 80126d0:	84a3      	strh	r3, [r4, #36]	; 0x24
 80126d2:	4620      	mov	r0, r4
 80126d4:	bd10      	pop	{r4, pc}

080126d6 <DisplayUdfParams::Load()>:
 80126d6:	b508      	push	{r3, lr}
 80126d8:	2300      	movs	r3, #0
 80126da:	4601      	mov	r1, r0
 80126dc:	6043      	str	r3, [r0, #4]
 80126de:	6800      	ldr	r0, [r0, #0]
 80126e0:	b120      	cbz	r0, 80126ec <DisplayUdfParams::Load()+0x16>
 80126e2:	6803      	ldr	r3, [r0, #0]
 80126e4:	3104      	adds	r1, #4
 80126e6:	68db      	ldr	r3, [r3, #12]
 80126e8:	4798      	blx	r3
 80126ea:	2001      	movs	r0, #1
 80126ec:	bd08      	pop	{r3, pc}
	...

080126f0 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80126f0:	6803      	ldr	r3, [r0, #0]
 80126f2:	b1d3      	cbz	r3, 801272a <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80126f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80126f6:	2300      	movs	r3, #0
 80126f8:	6043      	str	r3, [r0, #4]
 80126fa:	4604      	mov	r4, r0
 80126fc:	460d      	mov	r5, r1
 80126fe:	4616      	mov	r6, r2
 8012700:	490a      	ldr	r1, [pc, #40]	; (801272c <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8012702:	4602      	mov	r2, r0
 8012704:	4668      	mov	r0, sp
 8012706:	f000 ffa9 	bl	801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801270a:	4632      	mov	r2, r6
 801270c:	4629      	mov	r1, r5
 801270e:	4668      	mov	r0, sp
 8012710:	f000 ffa8 	bl	8013664 <ReadConfigFile::Read(char const*, unsigned int)>
 8012714:	4621      	mov	r1, r4
 8012716:	f851 0b04 	ldr.w	r0, [r1], #4
 801271a:	6803      	ldr	r3, [r0, #0]
 801271c:	689b      	ldr	r3, [r3, #8]
 801271e:	4798      	blx	r3
 8012720:	4668      	mov	r0, sp
 8012722:	f000 ff9e 	bl	8013662 <ReadConfigFile::~ReadConfigFile()>
 8012726:	b002      	add	sp, #8
 8012728:	bd70      	pop	{r4, r5, r6, pc}
 801272a:	4770      	bx	lr
 801272c:	080127f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, sp}

08012730 <DisplayUdfParams::callbackFunction(char const*)>:
 8012730:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012732:	460e      	mov	r6, r1
 8012734:	4604      	mov	r4, r0
 8012736:	492c      	ldr	r1, [pc, #176]	; (80127e8 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8012738:	f10d 0207 	add.w	r2, sp, #7
 801273c:	4630      	mov	r0, r6
 801273e:	f001 f8c2 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012742:	b968      	cbnz	r0, 8012760 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012744:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012748:	6863      	ldr	r3, [r4, #4]
 801274a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 801274e:	2a7f      	cmp	r2, #127	; 0x7f
 8012750:	bf14      	ite	ne
 8012752:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8012756:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 801275a:	6063      	str	r3, [r4, #4]
 801275c:	b003      	add	sp, #12
 801275e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012760:	4922      	ldr	r1, [pc, #136]	; (80127ec <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8012762:	f10d 0207 	add.w	r2, sp, #7
 8012766:	4630      	mov	r0, r6
 8012768:	f001 f8ad 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801276c:	b958      	cbnz	r0, 8012786 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 801276e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012772:	6863      	ldr	r3, [r4, #4]
 8012774:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8012778:	2a05      	cmp	r2, #5
 801277a:	bf14      	ite	ne
 801277c:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8012780:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8012784:	e7e9      	b.n	801275a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012786:	491a      	ldr	r1, [pc, #104]	; (80127f0 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8012788:	f10d 0207 	add.w	r2, sp, #7
 801278c:	4630      	mov	r0, r6
 801278e:	f001 f89a 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012792:	b948      	cbnz	r0, 80127a8 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012794:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012798:	6863      	ldr	r3, [r4, #4]
 801279a:	b112      	cbz	r2, 80127a2 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 801279c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80127a0:	e7db      	b.n	801275a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127a2:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80127a6:	e7d8      	b.n	801275a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127a8:	4f12      	ldr	r7, [pc, #72]	; (80127f4 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 80127aa:	2500      	movs	r5, #0
 80127ac:	f857 1b04 	ldr.w	r1, [r7], #4
 80127b0:	f10d 0207 	add.w	r2, sp, #7
 80127b4:	4630      	mov	r0, r6
 80127b6:	f001 f886 	bl	80138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80127ba:	b988      	cbnz	r0, 80127e0 <DisplayUdfParams::callbackFunction(char const*)+0xb0>
 80127bc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80127c0:	6862      	ldr	r2, [r4, #4]
 80127c2:	1e4e      	subs	r6, r1, #1
 80127c4:	2301      	movs	r3, #1
 80127c6:	2e05      	cmp	r6, #5
 80127c8:	fa03 f305 	lsl.w	r3, r3, r5
 80127cc:	4425      	add	r5, r4
 80127ce:	d802      	bhi.n	80127d6 <DisplayUdfParams::callbackFunction(char const*)+0xa6>
 80127d0:	7229      	strb	r1, [r5, #8]
 80127d2:	4313      	orrs	r3, r2
 80127d4:	e7c1      	b.n	801275a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127d6:	ea22 0203 	bic.w	r2, r2, r3
 80127da:	7228      	strb	r0, [r5, #8]
 80127dc:	6062      	str	r2, [r4, #4]
 80127de:	e7bd      	b.n	801275c <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80127e0:	3501      	adds	r5, #1
 80127e2:	2d14      	cmp	r5, #20
 80127e4:	d1e2      	bne.n	80127ac <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80127e6:	e7b9      	b.n	801275c <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80127e8:	0801941a 	stmdaeq	r1, {r1, r3, r4, sl, ip, pc}
 80127ec:	080193e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, ip, pc}
 80127f0:	080193f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, ip, pc}
 80127f4:	0801936c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, pc}

080127f8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80127f8:	f7ff bf9a 	b.w	8012730 <DisplayUdfParams::callbackFunction(char const*)>

080127fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80127fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012800:	4604      	mov	r4, r0
 8012802:	b086      	sub	sp, #24
 8012804:	4615      	mov	r5, r2
 8012806:	461e      	mov	r6, r3
 8012808:	3004      	adds	r0, #4
 801280a:	b379      	cbz	r1, 801286c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 801280c:	2222      	movs	r2, #34	; 0x22
 801280e:	f001 fdb6 	bl	801437e <memmove>
 8012812:	462a      	mov	r2, r5
 8012814:	493e      	ldr	r1, [pc, #248]	; (8012910 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8012816:	4633      	mov	r3, r6
 8012818:	a803      	add	r0, sp, #12
 801281a:	f000 fe7f 	bl	801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801281e:	6863      	ldr	r3, [r4, #4]
 8012820:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8012824:	493b      	ldr	r1, [pc, #236]	; (8012914 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8012826:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801282a:	a803      	add	r0, sp, #12
 801282c:	f7ff ff1e 	bl	801266c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012830:	6863      	ldr	r3, [r4, #4]
 8012832:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8012836:	4938      	ldr	r1, [pc, #224]	; (8012918 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012838:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801283c:	a803      	add	r0, sp, #12
 801283e:	f7ff ff15 	bl	801266c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012842:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012846:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801284a:	6863      	ldr	r3, [r4, #4]
 801284c:	42aa      	cmp	r2, r5
 801284e:	d226      	bcs.n	801289e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8012850:	9803      	ldr	r0, [sp, #12]
 8012852:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8012856:	4410      	add	r0, r2
 8012858:	eba5 0502 	sub.w	r5, r5, r2
 801285c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012860:	d10b      	bne.n	801287a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8012862:	b962      	cbnz	r2, 801287e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8012864:	9200      	str	r2, [sp, #0]
 8012866:	4b2d      	ldr	r3, [pc, #180]	; (801291c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8012868:	4a2d      	ldr	r2, [pc, #180]	; (8012920 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 801286a:	e00e      	b.n	801288a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 801286c:	6823      	ldr	r3, [r4, #0]
 801286e:	681a      	ldr	r2, [r3, #0]
 8012870:	4601      	mov	r1, r0
 8012872:	68d2      	ldr	r2, [r2, #12]
 8012874:	4618      	mov	r0, r3
 8012876:	4790      	blx	r2
 8012878:	e7cb      	b.n	8012812 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 801287a:	2a00      	cmp	r2, #0
 801287c:	d042      	beq.n	8012904 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 801287e:	3b00      	subs	r3, #0
 8012880:	bf18      	it	ne
 8012882:	2301      	movne	r3, #1
 8012884:	9300      	str	r3, [sp, #0]
 8012886:	4a27      	ldr	r2, [pc, #156]	; (8012924 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8012888:	4b24      	ldr	r3, [pc, #144]	; (801291c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801288a:	4629      	mov	r1, r5
 801288c:	f7f7 fd44 	bl	800a318 <snprintf>
 8012890:	4285      	cmp	r5, r0
 8012892:	bfa2      	ittt	ge
 8012894:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012898:	181b      	addge	r3, r3, r0
 801289a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801289e:	4e22      	ldr	r6, [pc, #136]	; (8012928 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80128a0:	2500      	movs	r5, #0
 80128a2:	2701      	movs	r7, #1
 80128a4:	f104 0808 	add.w	r8, r4, #8
 80128a8:	f856 1b04 	ldr.w	r1, [r6], #4
 80128ac:	780b      	ldrb	r3, [r1, #0]
 80128ae:	b163      	cbz	r3, 80128ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 80128b0:	6862      	ldr	r2, [r4, #4]
 80128b2:	fa07 f305 	lsl.w	r3, r7, r5
 80128b6:	4393      	bics	r3, r2
 80128b8:	bf08      	it	eq
 80128ba:	2301      	moveq	r3, #1
 80128bc:	f818 2005 	ldrb.w	r2, [r8, r5]
 80128c0:	bf18      	it	ne
 80128c2:	2300      	movne	r3, #0
 80128c4:	a803      	add	r0, sp, #12
 80128c6:	f7ff fed1 	bl	801266c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80128ca:	3501      	adds	r5, #1
 80128cc:	2d14      	cmp	r5, #20
 80128ce:	d1eb      	bne.n	80128a8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80128d0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80128d4:	b17b      	cbz	r3, 80128f6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xfa>
 80128d6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80128da:	9b03      	ldr	r3, [sp, #12]
 80128dc:	4413      	add	r3, r2
 80128de:	227d      	movs	r2, #125	; 0x7d
 80128e0:	f803 2c01 	strb.w	r2, [r3, #-1]
 80128e4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80128e8:	9903      	ldr	r1, [sp, #12]
 80128ea:	54ca      	strb	r2, [r1, r3]
 80128ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80128f0:	3301      	adds	r3, #1
 80128f2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80128f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80128fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80128fc:	601a      	str	r2, [r3, #0]
 80128fe:	b006      	add	sp, #24
 8012900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012904:	2301      	movs	r3, #1
 8012906:	9300      	str	r3, [sp, #0]
 8012908:	4a08      	ldr	r2, [pc, #32]	; (801292c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x130>)
 801290a:	4b04      	ldr	r3, [pc, #16]	; (801291c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801290c:	e7bd      	b.n	801288a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 801290e:	bf00      	nop
 8012910:	0801940e 	stmdaeq	r1, {r1, r2, r3, sl, ip, pc}
 8012914:	0801941a 	stmdaeq	r1, {r1, r3, r4, sl, ip, pc}
 8012918:	080193e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, ip, pc}
 801291c:	080193f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, ip, pc}
 8012920:	08016e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, sp, lr}
 8012924:	08016e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, sp, lr}
 8012928:	0801936c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, pc}
 801292c:	08016e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, sp, lr}

08012930 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8012930:	b513      	push	{r0, r1, r4, lr}
 8012932:	6804      	ldr	r4, [r0, #0]
 8012934:	b914      	cbnz	r4, 801293c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8012936:	601c      	str	r4, [r3, #0]
 8012938:	b002      	add	sp, #8
 801293a:	bd10      	pop	{r4, pc}
 801293c:	9300      	str	r3, [sp, #0]
 801293e:	4613      	mov	r3, r2
 8012940:	460a      	mov	r2, r1
 8012942:	2100      	movs	r1, #0
 8012944:	f7ff ff5a 	bl	80127fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8012948:	e7f6      	b.n	8012938 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801294a <DisplayUdfParams::Set(DisplayUdf*)>:
 801294a:	6843      	ldr	r3, [r0, #4]
 801294c:	009a      	lsls	r2, r3, #2
 801294e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012952:	4604      	mov	r4, r0
 8012954:	460e      	mov	r6, r1
 8012956:	d506      	bpl.n	8012966 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8012958:	6988      	ldr	r0, [r1, #24]
 801295a:	b120      	cbz	r0, 8012966 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 801295c:	6803      	ldr	r3, [r0, #0]
 801295e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8012962:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012964:	4798      	blx	r3
 8012966:	6863      	ldr	r3, [r4, #4]
 8012968:	69b0      	ldr	r0, [r6, #24]
 801296a:	00db      	lsls	r3, r3, #3
 801296c:	bf41      	itttt	mi
 801296e:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8012972:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8012976:	4353      	mulmi	r3, r2
 8012978:	6173      	strmi	r3, [r6, #20]
 801297a:	6861      	ldr	r1, [r4, #4]
 801297c:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8012980:	b110      	cbz	r0, 8012988 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8012982:	6803      	ldr	r3, [r0, #0]
 8012984:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012986:	4798      	blx	r3
 8012988:	2500      	movs	r5, #0
 801298a:	2701      	movs	r7, #1
 801298c:	f104 0808 	add.w	r8, r4, #8
 8012990:	6862      	ldr	r2, [r4, #4]
 8012992:	fa07 f305 	lsl.w	r3, r7, r5
 8012996:	4393      	bics	r3, r2
 8012998:	d105      	bne.n	80129a6 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 801299a:	f818 1005 	ldrb.w	r1, [r8, r5]
 801299e:	462a      	mov	r2, r5
 80129a0:	4630      	mov	r0, r6
 80129a2:	f7ff fd0a 	bl	80123ba <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80129a6:	3501      	adds	r5, #1
 80129a8:	2d14      	cmp	r5, #20
 80129aa:	d1f1      	bne.n	8012990 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80129ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080129b0 <DisplayUdfParams::Dump()>:
 80129b0:	4770      	bx	lr
	...

080129b4 <network::display_emac_start()>:
 80129b4:	4b01      	ldr	r3, [pc, #4]	; (80129bc <network::display_emac_start()+0x8>)
 80129b6:	6818      	ldr	r0, [r3, #0]
 80129b8:	f7ff bd18 	b.w	80123ec <DisplayUdf::ShowEmacStart()>
 80129bc:	2000fd98 	mulcs	r0, r8, sp

080129c0 <network::display_ip()>:
 80129c0:	4b01      	ldr	r3, [pc, #4]	; (80129c8 <network::display_ip()+0x8>)
 80129c2:	6818      	ldr	r0, [r3, #0]
 80129c4:	f7ff bd22 	b.w	801240c <DisplayUdf::ShowIpAddress()>
 80129c8:	2000fd98 	mulcs	r0, r8, sp

080129cc <network::display_netmask()>:
 80129cc:	4b01      	ldr	r3, [pc, #4]	; (80129d4 <network::display_netmask()+0x8>)
 80129ce:	6818      	ldr	r0, [r3, #0]
 80129d0:	f7ff bd50 	b.w	8012474 <DisplayUdf::ShowNetmask()>
 80129d4:	2000fd98 	mulcs	r0, r8, sp

080129d8 <network::display_gateway()>:
 80129d8:	4b01      	ldr	r3, [pc, #4]	; (80129e0 <network::display_gateway()+0x8>)
 80129da:	6818      	ldr	r0, [r3, #0]
 80129dc:	f7ff bd68 	b.w	80124b0 <DisplayUdf::ShowGatewayIp()>
 80129e0:	2000fd98 	mulcs	r0, r8, sp

080129e4 <network::display_hostname()>:
 80129e4:	4b01      	ldr	r3, [pc, #4]	; (80129ec <network::display_hostname()+0x8>)
 80129e6:	6818      	ldr	r0, [r3, #0]
 80129e8:	f7ff bd82 	b.w	80124f0 <DisplayUdf::ShowHostName()>
 80129ec:	2000fd98 	mulcs	r0, r8, sp

080129f0 <network::display_emac_shutdown()>:
 80129f0:	4b01      	ldr	r3, [pc, #4]	; (80129f8 <network::display_emac_shutdown()+0x8>)
 80129f2:	6818      	ldr	r0, [r3, #0]
 80129f4:	f7ff be0a 	b.w	801260c <DisplayUdf::ShowShutdown()>
 80129f8:	2000fd98 	mulcs	r0, r8, sp

080129fc <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 80129fc:	4b02      	ldr	r3, [pc, #8]	; (8012a08 <network::display_dhcp_status(network::dhcp::ClientStatus)+0xc>)
 80129fe:	4601      	mov	r1, r0
 8012a00:	6818      	ldr	r0, [r3, #0]
 8012a02:	f7ff bdcb 	b.w	801259c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012a06:	bf00      	nop
 8012a08:	2000fd98 	mulcs	r0, r8, sp

08012a0c <ConfigStore::GetStoreOffset(configstore::Store)>:
 8012a0c:	b510      	push	{r4, lr}
 8012a0e:	4a05      	ldr	r2, [pc, #20]	; (8012a24 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8012a10:	2300      	movs	r3, #0
 8012a12:	2020      	movs	r0, #32
 8012a14:	428b      	cmp	r3, r1
 8012a16:	d100      	bne.n	8012a1a <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8012a18:	bd10      	pop	{r4, pc}
 8012a1a:	f852 4b04 	ldr.w	r4, [r2], #4
 8012a1e:	3301      	adds	r3, #1
 8012a20:	4420      	add	r0, r4
 8012a22:	e7f7      	b.n	8012a14 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8012a24:	08019424 	stmdaeq	r1, {r2, r5, sl, ip, pc}

08012a28 <ConfigStore::Init()>:
 8012a28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a2c:	b085      	sub	sp, #20
 8012a2e:	4607      	mov	r7, r0
 8012a30:	f000 fb4f 	bl	80130d2 <StoreDevice::GetSectorSize() const>
 8012a34:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8012a38:	4605      	mov	r5, r0
 8012a3a:	d004      	beq.n	8012a46 <ConfigStore::Init()+0x1e>
 8012a3c:	2500      	movs	r5, #0
 8012a3e:	4628      	mov	r0, r5
 8012a40:	b005      	add	sp, #20
 8012a42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a46:	4638      	mov	r0, r7
 8012a48:	f000 fb40 	bl	80130cc <StoreDevice::GetSize() const>
 8012a4c:	4b3a      	ldr	r3, [pc, #232]	; (8012b38 <ConfigStore::Init()+0x110>)
 8012a4e:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8012a52:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8012a56:	6019      	str	r1, [r3, #0]
 8012a58:	2e00      	cmp	r6, #0
 8012a5a:	d1ef      	bne.n	8012a3c <ConfigStore::Init()+0x14>
 8012a5c:	4c37      	ldr	r4, [pc, #220]	; (8012b3c <ConfigStore::Init()+0x114>)
 8012a5e:	ab03      	add	r3, sp, #12
 8012a60:	462a      	mov	r2, r5
 8012a62:	9300      	str	r3, [sp, #0]
 8012a64:	4638      	mov	r0, r7
 8012a66:	4623      	mov	r3, r4
 8012a68:	f000 fb36 	bl	80130d8 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 8012a6c:	7823      	ldrb	r3, [r4, #0]
 8012a6e:	2b41      	cmp	r3, #65	; 0x41
 8012a70:	bf1c      	itt	ne
 8012a72:	2341      	movne	r3, #65	; 0x41
 8012a74:	7023      	strbne	r3, [r4, #0]
 8012a76:	7863      	ldrb	r3, [r4, #1]
 8012a78:	bf14      	ite	ne
 8012a7a:	4635      	movne	r5, r6
 8012a7c:	2501      	moveq	r5, #1
 8012a7e:	2b76      	cmp	r3, #118	; 0x76
 8012a80:	bf1c      	itt	ne
 8012a82:	2376      	movne	r3, #118	; 0x76
 8012a84:	7063      	strbne	r3, [r4, #1]
 8012a86:	78a3      	ldrb	r3, [r4, #2]
 8012a88:	bf18      	it	ne
 8012a8a:	2500      	movne	r5, #0
 8012a8c:	2b56      	cmp	r3, #86	; 0x56
 8012a8e:	bf1c      	itt	ne
 8012a90:	2356      	movne	r3, #86	; 0x56
 8012a92:	70a3      	strbne	r3, [r4, #2]
 8012a94:	78e3      	ldrb	r3, [r4, #3]
 8012a96:	bf18      	it	ne
 8012a98:	2500      	movne	r5, #0
 8012a9a:	2b10      	cmp	r3, #16
 8012a9c:	d01f      	beq.n	8012ade <ConfigStore::Init()+0xb6>
 8012a9e:	2310      	movs	r3, #16
 8012aa0:	70e3      	strb	r3, [r4, #3]
 8012aa2:	4b27      	ldr	r3, [pc, #156]	; (8012b40 <ConfigStore::Init()+0x118>)
 8012aa4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8012b48 <ConfigStore::Init()+0x120>
 8012aa8:	2201      	movs	r2, #1
 8012aaa:	701a      	strb	r2, [r3, #0]
 8012aac:	2500      	movs	r5, #0
 8012aae:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8012ab2:	4631      	mov	r1, r6
 8012ab4:	4638      	mov	r0, r7
 8012ab6:	f7ff ffa9 	bl	8012a0c <ConfigStore::GetStoreOffset(configstore::Store)>
 8012aba:	1823      	adds	r3, r4, r0
 8012abc:	5425      	strb	r5, [r4, r0]
 8012abe:	705d      	strb	r5, [r3, #1]
 8012ac0:	709d      	strb	r5, [r3, #2]
 8012ac2:	70dd      	strb	r5, [r3, #3]
 8012ac4:	f858 3b04 	ldr.w	r3, [r8], #4
 8012ac8:	1d02      	adds	r2, r0, #4
 8012aca:	4403      	add	r3, r0
 8012acc:	429a      	cmp	r2, r3
 8012ace:	d32f      	bcc.n	8012b30 <ConfigStore::Init()+0x108>
 8012ad0:	3601      	adds	r6, #1
 8012ad2:	2e1c      	cmp	r6, #28
 8012ad4:	d1ed      	bne.n	8012ab2 <ConfigStore::Init()+0x8a>
 8012ad6:	4b1b      	ldr	r3, [pc, #108]	; (8012b44 <ConfigStore::Init()+0x11c>)
 8012ad8:	2501      	movs	r5, #1
 8012ada:	601d      	str	r5, [r3, #0]
 8012adc:	e7af      	b.n	8012a3e <ConfigStore::Init()+0x16>
 8012ade:	2d00      	cmp	r5, #0
 8012ae0:	d0df      	beq.n	8012aa2 <ConfigStore::Init()+0x7a>
 8012ae2:	f04f 0900 	mov.w	r9, #0
 8012ae6:	46c8      	mov	r8, r9
 8012ae8:	4631      	mov	r1, r6
 8012aea:	4638      	mov	r0, r7
 8012aec:	f7ff ff8e 	bl	8012a0c <ConfigStore::GetStoreOffset(configstore::Store)>
 8012af0:	5c23      	ldrb	r3, [r4, r0]
 8012af2:	2bff      	cmp	r3, #255	; 0xff
 8012af4:	d112      	bne.n	8012b1c <ConfigStore::Init()+0xf4>
 8012af6:	1823      	adds	r3, r4, r0
 8012af8:	785a      	ldrb	r2, [r3, #1]
 8012afa:	2aff      	cmp	r2, #255	; 0xff
 8012afc:	d10e      	bne.n	8012b1c <ConfigStore::Init()+0xf4>
 8012afe:	789a      	ldrb	r2, [r3, #2]
 8012b00:	2aff      	cmp	r2, #255	; 0xff
 8012b02:	d10b      	bne.n	8012b1c <ConfigStore::Init()+0xf4>
 8012b04:	78da      	ldrb	r2, [r3, #3]
 8012b06:	2aff      	cmp	r2, #255	; 0xff
 8012b08:	d108      	bne.n	8012b1c <ConfigStore::Init()+0xf4>
 8012b0a:	f804 8000 	strb.w	r8, [r4, r0]
 8012b0e:	46a9      	mov	r9, r5
 8012b10:	f883 8001 	strb.w	r8, [r3, #1]
 8012b14:	f883 8002 	strb.w	r8, [r3, #2]
 8012b18:	f883 8003 	strb.w	r8, [r3, #3]
 8012b1c:	3601      	adds	r6, #1
 8012b1e:	2e1c      	cmp	r6, #28
 8012b20:	d1e2      	bne.n	8012ae8 <ConfigStore::Init()+0xc0>
 8012b22:	f1b9 0f00 	cmp.w	r9, #0
 8012b26:	d08a      	beq.n	8012a3e <ConfigStore::Init()+0x16>
 8012b28:	4b06      	ldr	r3, [pc, #24]	; (8012b44 <ConfigStore::Init()+0x11c>)
 8012b2a:	2201      	movs	r2, #1
 8012b2c:	601a      	str	r2, [r3, #0]
 8012b2e:	e786      	b.n	8012a3e <ConfigStore::Init()+0x16>
 8012b30:	f804 9002 	strb.w	r9, [r4, r2]
 8012b34:	3201      	adds	r2, #1
 8012b36:	e7c9      	b.n	8012acc <ConfigStore::Init()+0xa4>
 8012b38:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8012b3c:	40024000 	andmi	r4, r2, r0
 8012b40:	2000fdb4 			; <UNDEFINED> instruction: 0x2000fdb4
 8012b44:	2000fdac 	andcs	pc, r0, ip, lsr #27
 8012b48:	08019424 	stmdaeq	r1, {r2, r5, sl, ip, pc}

08012b4c <ConfigStore::ConfigStore()>:
 8012b4c:	b538      	push	{r3, r4, r5, lr}
 8012b4e:	4604      	mov	r4, r0
 8012b50:	f000 fa8e 	bl	8013070 <StoreDevice::StoreDevice()>
 8012b54:	4b0b      	ldr	r3, [pc, #44]	; (8012b84 <ConfigStore::ConfigStore()+0x38>)
 8012b56:	4d0c      	ldr	r5, [pc, #48]	; (8012b88 <ConfigStore::ConfigStore()+0x3c>)
 8012b58:	601c      	str	r4, [r3, #0]
 8012b5a:	7aa3      	ldrb	r3, [r4, #10]
 8012b5c:	b11b      	cbz	r3, 8012b66 <ConfigStore::ConfigStore()+0x1a>
 8012b5e:	4620      	mov	r0, r4
 8012b60:	f7ff ff62 	bl	8012a28 <ConfigStore::Init()>
 8012b64:	7028      	strb	r0, [r5, #0]
 8012b66:	782b      	ldrb	r3, [r5, #0]
 8012b68:	b153      	cbz	r3, 8012b80 <ConfigStore::ConfigStore()+0x34>
 8012b6a:	4908      	ldr	r1, [pc, #32]	; (8012b8c <ConfigStore::ConfigStore()+0x40>)
 8012b6c:	2320      	movs	r3, #32
 8012b6e:	2200      	movs	r2, #0
 8012b70:	f851 0b04 	ldr.w	r0, [r1], #4
 8012b74:	3201      	adds	r2, #1
 8012b76:	2a1c      	cmp	r2, #28
 8012b78:	4403      	add	r3, r0
 8012b7a:	d1f9      	bne.n	8012b70 <ConfigStore::ConfigStore()+0x24>
 8012b7c:	4a04      	ldr	r2, [pc, #16]	; (8012b90 <ConfigStore::ConfigStore()+0x44>)
 8012b7e:	6013      	str	r3, [r2, #0]
 8012b80:	4620      	mov	r0, r4
 8012b82:	bd38      	pop	{r3, r4, r5, pc}
 8012b84:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0
 8012b88:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8012b8c:	08019424 	stmdaeq	r1, {r2, r5, sl, ip, pc}
 8012b90:	2000fda8 	andcs	pc, r0, r8, lsr #27

08012b94 <ConfigStore::ResetSetList(configstore::Store)>:
 8012b94:	b508      	push	{r3, lr}
 8012b96:	f7ff ff39 	bl	8012a0c <ConfigStore::GetStoreOffset(configstore::Store)>
 8012b9a:	4905      	ldr	r1, [pc, #20]	; (8012bb0 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 8012b9c:	1842      	adds	r2, r0, r1
 8012b9e:	2300      	movs	r3, #0
 8012ba0:	540b      	strb	r3, [r1, r0]
 8012ba2:	7053      	strb	r3, [r2, #1]
 8012ba4:	7093      	strb	r3, [r2, #2]
 8012ba6:	70d3      	strb	r3, [r2, #3]
 8012ba8:	4b02      	ldr	r3, [pc, #8]	; (8012bb4 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 8012baa:	2201      	movs	r2, #1
 8012bac:	601a      	str	r2, [r3, #0]
 8012bae:	bd08      	pop	{r3, pc}
 8012bb0:	40024000 	andmi	r4, r2, r0
 8012bb4:	2000fdac 	andcs	pc, r0, ip, lsr #27

08012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8012bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bbc:	461c      	mov	r4, r3
 8012bbe:	4b19      	ldr	r3, [pc, #100]	; (8012c24 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8012bc0:	9d07      	ldr	r5, [sp, #28]
 8012bc2:	781f      	ldrb	r7, [r3, #0]
 8012bc4:	4616      	mov	r6, r2
 8012bc6:	b307      	cbz	r7, 8012c0a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8012bc8:	f7ff ff20 	bl	8012a0c <ConfigStore::GetStoreOffset(configstore::Store)>
 8012bcc:	4a16      	ldr	r2, [pc, #88]	; (8012c28 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8012bce:	1831      	adds	r1, r6, r0
 8012bd0:	1e63      	subs	r3, r4, #1
 8012bd2:	9c06      	ldr	r4, [sp, #24]
 8012bd4:	4411      	add	r1, r2
 8012bd6:	440c      	add	r4, r1
 8012bd8:	f04f 0c00 	mov.w	ip, #0
 8012bdc:	42a1      	cmp	r1, r4
 8012bde:	d116      	bne.n	8012c0e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8012be0:	f1bc 0f00 	cmp.w	ip, #0
 8012be4:	d011      	beq.n	8012c0a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8012be6:	4b11      	ldr	r3, [pc, #68]	; (8012c2c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8012be8:	6819      	ldr	r1, [r3, #0]
 8012bea:	b109      	cbz	r1, 8012bf0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8012bec:	2906      	cmp	r1, #6
 8012bee:	d101      	bne.n	8012bf4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8012bf0:	2101      	movs	r1, #1
 8012bf2:	6019      	str	r1, [r3, #0]
 8012bf4:	4b0e      	ldr	r3, [pc, #56]	; (8012c30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8012bf6:	6819      	ldr	r1, [r3, #0]
 8012bf8:	4b0e      	ldr	r3, [pc, #56]	; (8012c34 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8012bfa:	6019      	str	r1, [r3, #0]
 8012bfc:	b12e      	cbz	r6, 8012c0a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8012bfe:	b125      	cbz	r5, 8012c0a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8012c00:	9b08      	ldr	r3, [sp, #32]
 8012c02:	4418      	add	r0, r3
 8012c04:	5813      	ldr	r3, [r2, r0]
 8012c06:	432b      	orrs	r3, r5
 8012c08:	5013      	str	r3, [r2, r0]
 8012c0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c0e:	f891 8000 	ldrb.w	r8, [r1]
 8012c12:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8012c16:	45f0      	cmp	r8, lr
 8012c18:	bf1c      	itt	ne
 8012c1a:	f881 e000 	strbne.w	lr, [r1]
 8012c1e:	46bc      	movne	ip, r7
 8012c20:	3101      	adds	r1, #1
 8012c22:	e7db      	b.n	8012bdc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8012c24:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8012c28:	40024000 	andmi	r4, r2, r0
 8012c2c:	2000fdac 	andcs	pc, r0, ip, lsr #27
 8012c30:	2000fedc 	ldrdcs	pc, [r0], -ip
 8012c34:	2000fd9c 	mulcs	r0, ip, sp

08012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8012c38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012c3c:	461d      	mov	r5, r3
 8012c3e:	4b15      	ldr	r3, [pc, #84]	; (8012c94 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8012c40:	b085      	sub	sp, #20
 8012c42:	781b      	ldrb	r3, [r3, #0]
 8012c44:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8012c48:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8012c4c:	4607      	mov	r7, r0
 8012c4e:	4614      	mov	r4, r2
 8012c50:	b193      	cbz	r3, 8012c78 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8012c52:	f7ff fedb 	bl	8012a0c <ConfigStore::GetStoreOffset(configstore::Store)>
 8012c56:	4a10      	ldr	r2, [pc, #64]	; (8012c98 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8012c58:	eb08 0600 	add.w	r6, r8, r0
 8012c5c:	18b3      	adds	r3, r6, r2
 8012c5e:	f1b9 0f00 	cmp.w	r9, #0
 8012c62:	d013      	beq.n	8012c8c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8012c64:	5990      	ldr	r0, [r2, r6]
 8012c66:	b988      	cbnz	r0, 8012c8c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8012c68:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8012c6c:	9500      	str	r5, [sp, #0]
 8012c6e:	4623      	mov	r3, r4
 8012c70:	4642      	mov	r2, r8
 8012c72:	4638      	mov	r0, r7
 8012c74:	f7ff ffa0 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012c78:	b005      	add	sp, #20
 8012c7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c7e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012c82:	f804 2f01 	strb.w	r2, [r4, #1]!
 8012c86:	429d      	cmp	r5, r3
 8012c88:	d1f9      	bne.n	8012c7e <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8012c8a:	e7f5      	b.n	8012c78 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8012c8c:	3c01      	subs	r4, #1
 8012c8e:	441d      	add	r5, r3
 8012c90:	e7f9      	b.n	8012c86 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8012c92:	bf00      	nop
 8012c94:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8012c98:	40024000 	andmi	r4, r2, r0

08012c9c <ConfigStore::Flash()>:
 8012c9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012c9e:	4c24      	ldr	r4, [pc, #144]	; (8012d30 <ConfigStore::Flash()+0x94>)
 8012ca0:	6823      	ldr	r3, [r4, #0]
 8012ca2:	2b00      	cmp	r3, #0
 8012ca4:	d041      	beq.n	8012d2a <ConfigStore::Flash()+0x8e>
 8012ca6:	3b01      	subs	r3, #1
 8012ca8:	2b05      	cmp	r3, #5
 8012caa:	d82f      	bhi.n	8012d0c <ConfigStore::Flash()+0x70>
 8012cac:	e8df f003 	tbb	[pc, r3]
 8012cb0:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8012cb4:	4b1f2e23 	blmi	87de548 <__exidx_end+0x7c488c>
 8012cb8:	681a      	ldr	r2, [r3, #0]
 8012cba:	4b1f      	ldr	r3, [pc, #124]	; (8012d38 <ConfigStore::Flash()+0x9c>)
 8012cbc:	601a      	str	r2, [r3, #0]
 8012cbe:	2302      	movs	r3, #2
 8012cc0:	6023      	str	r3, [r4, #0]
 8012cc2:	2001      	movs	r0, #1
 8012cc4:	e02f      	b.n	8012d26 <ConfigStore::Flash()+0x8a>
 8012cc6:	4b1b      	ldr	r3, [pc, #108]	; (8012d34 <ConfigStore::Flash()+0x98>)
 8012cc8:	4a1b      	ldr	r2, [pc, #108]	; (8012d38 <ConfigStore::Flash()+0x9c>)
 8012cca:	681b      	ldr	r3, [r3, #0]
 8012ccc:	6812      	ldr	r2, [r2, #0]
 8012cce:	1a9b      	subs	r3, r3, r2
 8012cd0:	2b63      	cmp	r3, #99	; 0x63
 8012cd2:	d9f6      	bls.n	8012cc2 <ConfigStore::Flash()+0x26>
 8012cd4:	2303      	movs	r3, #3
 8012cd6:	e7f3      	b.n	8012cc0 <ConfigStore::Flash()+0x24>
 8012cd8:	4918      	ldr	r1, [pc, #96]	; (8012d3c <ConfigStore::Flash()+0xa0>)
 8012cda:	ab03      	add	r3, sp, #12
 8012cdc:	6809      	ldr	r1, [r1, #0]
 8012cde:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012ce2:	f000 fa1d 	bl	8013120 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8012ce6:	2800      	cmp	r0, #0
 8012ce8:	d0eb      	beq.n	8012cc2 <ConfigStore::Flash()+0x26>
 8012cea:	4b12      	ldr	r3, [pc, #72]	; (8012d34 <ConfigStore::Flash()+0x98>)
 8012cec:	681a      	ldr	r2, [r3, #0]
 8012cee:	4b12      	ldr	r3, [pc, #72]	; (8012d38 <ConfigStore::Flash()+0x9c>)
 8012cf0:	601a      	str	r2, [r3, #0]
 8012cf2:	2305      	movs	r3, #5
 8012cf4:	e7e4      	b.n	8012cc0 <ConfigStore::Flash()+0x24>
 8012cf6:	4b0f      	ldr	r3, [pc, #60]	; (8012d34 <ConfigStore::Flash()+0x98>)
 8012cf8:	4a0f      	ldr	r2, [pc, #60]	; (8012d38 <ConfigStore::Flash()+0x9c>)
 8012cfa:	681b      	ldr	r3, [r3, #0]
 8012cfc:	6812      	ldr	r2, [r2, #0]
 8012cfe:	1a9b      	subs	r3, r3, r2
 8012d00:	2b63      	cmp	r3, #99	; 0x63
 8012d02:	d9de      	bls.n	8012cc2 <ConfigStore::Flash()+0x26>
 8012d04:	2304      	movs	r3, #4
 8012d06:	e7db      	b.n	8012cc0 <ConfigStore::Flash()+0x24>
 8012d08:	2306      	movs	r3, #6
 8012d0a:	e7d9      	b.n	8012cc0 <ConfigStore::Flash()+0x24>
 8012d0c:	ab03      	add	r3, sp, #12
 8012d0e:	4a0c      	ldr	r2, [pc, #48]	; (8012d40 <ConfigStore::Flash()+0xa4>)
 8012d10:	490a      	ldr	r1, [pc, #40]	; (8012d3c <ConfigStore::Flash()+0xa0>)
 8012d12:	9300      	str	r3, [sp, #0]
 8012d14:	6812      	ldr	r2, [r2, #0]
 8012d16:	4b0b      	ldr	r3, [pc, #44]	; (8012d44 <ConfigStore::Flash()+0xa8>)
 8012d18:	6809      	ldr	r1, [r1, #0]
 8012d1a:	f000 fa05 	bl	8013128 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 8012d1e:	2800      	cmp	r0, #0
 8012d20:	d0cf      	beq.n	8012cc2 <ConfigStore::Flash()+0x26>
 8012d22:	2000      	movs	r0, #0
 8012d24:	6020      	str	r0, [r4, #0]
 8012d26:	b004      	add	sp, #16
 8012d28:	bd10      	pop	{r4, pc}
 8012d2a:	4618      	mov	r0, r3
 8012d2c:	e7fb      	b.n	8012d26 <ConfigStore::Flash()+0x8a>
 8012d2e:	bf00      	nop
 8012d30:	2000fdac 	andcs	pc, r0, ip, lsr #27
 8012d34:	2000fedc 	ldrdcs	pc, [r0], -ip
 8012d38:	2000fd9c 	mulcs	r0, ip, sp
 8012d3c:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8012d40:	2000fda8 	andcs	pc, r0, r8, lsr #27
 8012d44:	40024000 	andmi	r4, r2, r0

08012d48 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8012d48:	4770      	bx	lr
	...

08012d4c <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8012d4c:	b507      	push	{r0, r1, r2, lr}
 8012d4e:	2300      	movs	r3, #0
 8012d50:	460a      	mov	r2, r1
 8012d52:	2101      	movs	r1, #1
 8012d54:	e9cd 3100 	strd	r3, r1, [sp]
 8012d58:	4804      	ldr	r0, [pc, #16]	; (8012d6c <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 8012d5a:	2322      	movs	r3, #34	; 0x22
 8012d5c:	6800      	ldr	r0, [r0, #0]
 8012d5e:	210f      	movs	r1, #15
 8012d60:	f7ff ff6a 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8012d64:	b003      	add	sp, #12
 8012d66:	f85d fb04 	ldr.w	pc, [sp], #4
 8012d6a:	bf00      	nop
 8012d6c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012d70 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8012d70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012d72:	2200      	movs	r2, #0
 8012d74:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8012d78:	460b      	mov	r3, r1
 8012d7a:	4805      	ldr	r0, [pc, #20]	; (8012d90 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8012d7c:	2122      	movs	r1, #34	; 0x22
 8012d7e:	9100      	str	r1, [sp, #0]
 8012d80:	6800      	ldr	r0, [r0, #0]
 8012d82:	210f      	movs	r1, #15
 8012d84:	f7ff ff18 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012d88:	b005      	add	sp, #20
 8012d8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8012d8e:	bf00      	nop
 8012d90:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012d94 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8012d94:	b510      	push	{r4, lr}
 8012d96:	4604      	mov	r4, r0
 8012d98:	f001 fa2e 	bl	80141f8 <operator delete(void*)>
 8012d9c:	4620      	mov	r0, r4
 8012d9e:	bd10      	pop	{r4, pc}

08012da0 <StoreDisplayUdf::StoreDisplayUdf()>:
 8012da0:	4a02      	ldr	r2, [pc, #8]	; (8012dac <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 8012da2:	6002      	str	r2, [r0, #0]
 8012da4:	4a02      	ldr	r2, [pc, #8]	; (8012db0 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 8012da6:	6010      	str	r0, [r2, #0]
 8012da8:	4770      	bx	lr
 8012daa:	bf00      	nop
 8012dac:	0801949c 	stmdaeq	r1, {r2, r3, r4, r7, sl, ip, pc}
 8012db0:	2000fdb8 			; <UNDEFINED> instruction: 0x2000fdb8

08012db4 <StoreDmxSend::~StoreDmxSend()>:
 8012db4:	4770      	bx	lr
	...

08012db8 <StoreDmxSend::Copy(TDmxParams*)>:
 8012db8:	b507      	push	{r0, r1, r2, lr}
 8012dba:	2300      	movs	r3, #0
 8012dbc:	460a      	mov	r2, r1
 8012dbe:	2101      	movs	r1, #1
 8012dc0:	e9cd 3100 	strd	r3, r1, [sp]
 8012dc4:	4804      	ldr	r0, [pc, #16]	; (8012dd8 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 8012dc6:	230a      	movs	r3, #10
 8012dc8:	6800      	ldr	r0, [r0, #0]
 8012dca:	2102      	movs	r1, #2
 8012dcc:	f7ff ff34 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8012dd0:	b003      	add	sp, #12
 8012dd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8012dd6:	bf00      	nop
 8012dd8:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012ddc <StoreDmxSend::Update(TDmxParams const*)>:
 8012ddc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012dde:	2200      	movs	r2, #0
 8012de0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8012de4:	460b      	mov	r3, r1
 8012de6:	4805      	ldr	r0, [pc, #20]	; (8012dfc <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 8012de8:	210a      	movs	r1, #10
 8012dea:	9100      	str	r1, [sp, #0]
 8012dec:	6800      	ldr	r0, [r0, #0]
 8012dee:	2102      	movs	r1, #2
 8012df0:	f7ff fee2 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012df4:	b005      	add	sp, #20
 8012df6:	f85d fb04 	ldr.w	pc, [sp], #4
 8012dfa:	bf00      	nop
 8012dfc:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012e00 <StoreDmxSend::~StoreDmxSend()>:
 8012e00:	b510      	push	{r4, lr}
 8012e02:	4604      	mov	r4, r0
 8012e04:	f001 f9f8 	bl	80141f8 <operator delete(void*)>
 8012e08:	4620      	mov	r0, r4
 8012e0a:	bd10      	pop	{r4, pc}

08012e0c <StoreDmxSend::StoreDmxSend()>:
 8012e0c:	4a02      	ldr	r2, [pc, #8]	; (8012e18 <StoreDmxSend::StoreDmxSend()+0xc>)
 8012e0e:	6002      	str	r2, [r0, #0]
 8012e10:	4a02      	ldr	r2, [pc, #8]	; (8012e1c <StoreDmxSend::StoreDmxSend()+0x10>)
 8012e12:	6010      	str	r0, [r2, #0]
 8012e14:	4770      	bx	lr
 8012e16:	bf00      	nop
 8012e18:	080194b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, ip, pc}
 8012e1c:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc

08012e20 <StoreNetwork::~StoreNetwork()>:
 8012e20:	4770      	bx	lr

08012e22 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8012e22:	3804      	subs	r0, #4
 8012e24:	4770      	bx	lr
	...

08012e28 <StoreNetwork::Update(networkparams::Params const*)>:
 8012e28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e2a:	2200      	movs	r2, #0
 8012e2c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8012e30:	460b      	mov	r3, r1
 8012e32:	4805      	ldr	r0, [pc, #20]	; (8012e48 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 8012e34:	215e      	movs	r1, #94	; 0x5e
 8012e36:	9100      	str	r1, [sp, #0]
 8012e38:	6800      	ldr	r0, [r0, #0]
 8012e3a:	4611      	mov	r1, r2
 8012e3c:	f7ff febc 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012e40:	b005      	add	sp, #20
 8012e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8012e46:	bf00      	nop
 8012e48:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012e4c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 8012e4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012e4e:	2308      	movs	r3, #8
 8012e50:	9105      	str	r1, [sp, #20]
 8012e52:	2100      	movs	r1, #0
 8012e54:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012e58:	4805      	ldr	r0, [pc, #20]	; (8012e70 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 8012e5a:	2304      	movs	r3, #4
 8012e5c:	9300      	str	r3, [sp, #0]
 8012e5e:	6800      	ldr	r0, [r0, #0]
 8012e60:	ab05      	add	r3, sp, #20
 8012e62:	220c      	movs	r2, #12
 8012e64:	f7ff fea8 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012e68:	b007      	add	sp, #28
 8012e6a:	f85d fb04 	ldr.w	pc, [sp], #4
 8012e6e:	bf00      	nop
 8012e70:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012e74 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 8012e74:	f1a0 0004 	sub.w	r0, r0, #4
 8012e78:	e7e8      	b.n	8012e4c <StoreNetwork::SaveGatewayIp(unsigned int)>
 8012e7a:	bf00      	nop

08012e7c <StoreNetwork::SaveNetMask(unsigned int)>:
 8012e7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012e7e:	2304      	movs	r3, #4
 8012e80:	9105      	str	r1, [sp, #20]
 8012e82:	2100      	movs	r1, #0
 8012e84:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012e88:	4804      	ldr	r0, [pc, #16]	; (8012e9c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8012e8a:	9300      	str	r3, [sp, #0]
 8012e8c:	6800      	ldr	r0, [r0, #0]
 8012e8e:	ab05      	add	r3, sp, #20
 8012e90:	2208      	movs	r2, #8
 8012e92:	f7ff fe91 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012e96:	b007      	add	sp, #28
 8012e98:	f85d fb04 	ldr.w	pc, [sp], #4
 8012e9c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012ea0 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8012ea0:	f1a0 0004 	sub.w	r0, r0, #4
 8012ea4:	e7ea      	b.n	8012e7c <StoreNetwork::SaveNetMask(unsigned int)>
 8012ea6:	bf00      	nop

08012ea8 <StoreNetwork::SaveIp(unsigned int)>:
 8012ea8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012eaa:	2302      	movs	r3, #2
 8012eac:	9105      	str	r1, [sp, #20]
 8012eae:	2100      	movs	r1, #0
 8012eb0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012eb4:	2204      	movs	r2, #4
 8012eb6:	4804      	ldr	r0, [pc, #16]	; (8012ec8 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8012eb8:	9200      	str	r2, [sp, #0]
 8012eba:	6800      	ldr	r0, [r0, #0]
 8012ebc:	ab05      	add	r3, sp, #20
 8012ebe:	f7ff fe7b 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012ec2:	b007      	add	sp, #28
 8012ec4:	f85d fb04 	ldr.w	pc, [sp], #4
 8012ec8:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012ecc <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8012ecc:	f1a0 0004 	sub.w	r0, r0, #4
 8012ed0:	e7ea      	b.n	8012ea8 <StoreNetwork::SaveIp(unsigned int)>
 8012ed2:	bf00      	nop

08012ed4 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8012ed4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012ed6:	460b      	mov	r3, r1
 8012ed8:	2000      	movs	r0, #0
 8012eda:	2120      	movs	r1, #32
 8012edc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8012ee0:	2a40      	cmp	r2, #64	; 0x40
 8012ee2:	bf28      	it	cs
 8012ee4:	2240      	movcs	r2, #64	; 0x40
 8012ee6:	4601      	mov	r1, r0
 8012ee8:	4804      	ldr	r0, [pc, #16]	; (8012efc <StoreNetwork::SaveHostName(char const*, unsigned int)+0x28>)
 8012eea:	9200      	str	r2, [sp, #0]
 8012eec:	6800      	ldr	r0, [r0, #0]
 8012eee:	2215      	movs	r2, #21
 8012ef0:	f7ff fe62 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012ef4:	b005      	add	sp, #20
 8012ef6:	f85d fb04 	ldr.w	pc, [sp], #4
 8012efa:	bf00      	nop
 8012efc:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012f00 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8012f00:	f1a0 0004 	sub.w	r0, r0, #4
 8012f04:	e7e6      	b.n	8012ed4 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 8012f06:	bf00      	nop

08012f08 <StoreNetwork::~StoreNetwork()>:
 8012f08:	b510      	push	{r4, lr}
 8012f0a:	4604      	mov	r4, r0
 8012f0c:	f001 f974 	bl	80141f8 <operator delete(void*)>
 8012f10:	4620      	mov	r0, r4
 8012f12:	bd10      	pop	{r4, pc}

08012f14 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8012f14:	f1a0 0004 	sub.w	r0, r0, #4
 8012f18:	e7f6      	b.n	8012f08 <StoreNetwork::~StoreNetwork()>
	...

08012f1c <StoreNetwork::Copy(networkparams::Params*)>:
 8012f1c:	b507      	push	{r0, r1, r2, lr}
 8012f1e:	2301      	movs	r3, #1
 8012f20:	460a      	mov	r2, r1
 8012f22:	2100      	movs	r1, #0
 8012f24:	e9cd 1300 	strd	r1, r3, [sp]
 8012f28:	4803      	ldr	r0, [pc, #12]	; (8012f38 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 8012f2a:	235e      	movs	r3, #94	; 0x5e
 8012f2c:	6800      	ldr	r0, [r0, #0]
 8012f2e:	f7ff fe83 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8012f32:	b003      	add	sp, #12
 8012f34:	f85d fb04 	ldr.w	pc, [sp], #4
 8012f38:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012f3c <StoreNetwork::StoreNetwork()>:
 8012f3c:	4a03      	ldr	r2, [pc, #12]	; (8012f4c <StoreNetwork::StoreNetwork()+0x10>)
 8012f3e:	6002      	str	r2, [r0, #0]
 8012f40:	322c      	adds	r2, #44	; 0x2c
 8012f42:	6042      	str	r2, [r0, #4]
 8012f44:	4a02      	ldr	r2, [pc, #8]	; (8012f50 <StoreNetwork::StoreNetwork()+0x14>)
 8012f46:	6010      	str	r0, [r2, #0]
 8012f48:	4770      	bx	lr
 8012f4a:	bf00      	nop
 8012f4c:	080194cc 	stmdaeq	r1, {r2, r3, r6, r7, sl, ip, pc}
 8012f50:	2000fdc0 	andcs	pc, r0, r0, asr #27

08012f54 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8012f54:	4770      	bx	lr
	...

08012f58 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8012f58:	b507      	push	{r0, r1, r2, lr}
 8012f5a:	2300      	movs	r3, #0
 8012f5c:	460a      	mov	r2, r1
 8012f5e:	2101      	movs	r1, #1
 8012f60:	e9cd 3100 	strd	r3, r1, [sp]
 8012f64:	4804      	ldr	r0, [pc, #16]	; (8012f78 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 8012f66:	2320      	movs	r3, #32
 8012f68:	6800      	ldr	r0, [r0, #0]
 8012f6a:	210c      	movs	r1, #12
 8012f6c:	f7ff fe64 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8012f70:	b003      	add	sp, #12
 8012f72:	f85d fb04 	ldr.w	pc, [sp], #4
 8012f76:	bf00      	nop
 8012f78:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012f7c <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8012f7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012f7e:	2200      	movs	r2, #0
 8012f80:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8012f84:	460b      	mov	r3, r1
 8012f86:	4805      	ldr	r0, [pc, #20]	; (8012f9c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8012f88:	2120      	movs	r1, #32
 8012f8a:	9100      	str	r1, [sp, #0]
 8012f8c:	6800      	ldr	r0, [r0, #0]
 8012f8e:	210c      	movs	r1, #12
 8012f90:	f7ff fe12 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012f94:	b005      	add	sp, #20
 8012f96:	f85d fb04 	ldr.w	pc, [sp], #4
 8012f9a:	bf00      	nop
 8012f9c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08012fa0 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8012fa0:	b510      	push	{r4, lr}
 8012fa2:	4604      	mov	r4, r0
 8012fa4:	f001 f928 	bl	80141f8 <operator delete(void*)>
 8012fa8:	4620      	mov	r0, r4
 8012faa:	bd10      	pop	{r4, pc}

08012fac <StoreRemoteConfig::StoreRemoteConfig()>:
 8012fac:	4a02      	ldr	r2, [pc, #8]	; (8012fb8 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 8012fae:	6002      	str	r2, [r0, #0]
 8012fb0:	4a02      	ldr	r2, [pc, #8]	; (8012fbc <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 8012fb2:	6010      	str	r0, [r2, #0]
 8012fb4:	4770      	bx	lr
 8012fb6:	bf00      	nop
 8012fb8:	0801951c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, pc}
 8012fbc:	2000fdc4 	andcs	pc, r0, r4, asr #27

08012fc0 <HAL_I2C::Setup()>:
 8012fc0:	b510      	push	{r4, lr}
 8012fc2:	4604      	mov	r4, r0
 8012fc4:	7800      	ldrb	r0, [r0, #0]
 8012fc6:	f002 fe69 	bl	8015c9c <gd32_i2c_set_address>
 8012fca:	6860      	ldr	r0, [r4, #4]
 8012fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012fd0:	f002 be5c 	b.w	8015c8c <gd32_i2c_set_baudrate>

08012fd4 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>:
 8012fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012fd8:	b08d      	sub	sp, #52	; 0x34
 8012fda:	4606      	mov	r6, r0
 8012fdc:	9301      	str	r3, [sp, #4]
 8012fde:	7a03      	ldrb	r3, [r0, #8]
 8012fe0:	460c      	mov	r4, r1
 8012fe2:	4617      	mov	r7, r2
 8012fe4:	2b00      	cmp	r3, #0
 8012fe6:	d13c      	bne.n	8013062 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8012fe8:	b00d      	add	sp, #52	; 0x34
 8012fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fee:	2101      	movs	r1, #1
 8012ff0:	4640      	mov	r0, r8
 8012ff2:	f002 febf 	bl	8015d74 <gd32_i2c_read>
 8012ff6:	2800      	cmp	r0, #0
 8012ff8:	d1f9      	bne.n	8012fee <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8012ffa:	7a73      	ldrb	r3, [r6, #9]
 8012ffc:	f8cd 9008 	str.w	r9, [sp, #8]
 8013000:	2d1d      	cmp	r5, #29
 8013002:	bf8c      	ite	hi
 8013004:	a902      	addhi	r1, sp, #8
 8013006:	a901      	addls	r1, sp, #4
 8013008:	fbb4 f2f3 	udiv	r2, r4, r3
 801300c:	fb03 4212 	mls	r2, r3, r2, r4
 8013010:	1a9b      	subs	r3, r3, r2
 8013012:	680a      	ldr	r2, [r1, #0]
 8013014:	9303      	str	r3, [sp, #12]
 8013016:	4293      	cmp	r3, r2
 8013018:	bf98      	it	ls
 801301a:	4641      	movls	r1, r8
 801301c:	ba63      	rev16	r3, r4
 801301e:	f8d1 a000 	ldr.w	sl, [r1]
 8013022:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013026:	eb07 030b 	add.w	r3, r7, fp
 801302a:	f10d 0211 	add.w	r2, sp, #17
 801302e:	eb03 010a 	add.w	r1, r3, sl
 8013032:	428b      	cmp	r3, r1
 8013034:	d110      	bne.n	8013058 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x84>
 8013036:	4630      	mov	r0, r6
 8013038:	f7ff ffc2 	bl	8012fc0 <HAL_I2C::Setup()>
 801303c:	eba5 050a 	sub.w	r5, r5, sl
 8013040:	f10a 0102 	add.w	r1, sl, #2
 8013044:	a804      	add	r0, sp, #16
 8013046:	f002 fe2f 	bl	8015ca8 <gd32_i2c_write>
 801304a:	4454      	add	r4, sl
 801304c:	9501      	str	r5, [sp, #4]
 801304e:	44d3      	add	fp, sl
 8013050:	9d01      	ldr	r5, [sp, #4]
 8013052:	2d00      	cmp	r5, #0
 8013054:	d1cb      	bne.n	8012fee <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8013056:	e7c7      	b.n	8012fe8 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x14>
 8013058:	f813 0b01 	ldrb.w	r0, [r3], #1
 801305c:	f802 0f01 	strb.w	r0, [r2, #1]!
 8013060:	e7e7      	b.n	8013032 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x5e>
 8013062:	f04f 0b00 	mov.w	fp, #0
 8013066:	f10d 080c 	add.w	r8, sp, #12
 801306a:	f04f 091e 	mov.w	r9, #30
 801306e:	e7ef      	b.n	8013050 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x7c>

08013070 <StoreDevice::StoreDevice()>:
 8013070:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013072:	4604      	mov	r4, r0
 8013074:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013078:	2050      	movs	r0, #80	; 0x50
 801307a:	4d11      	ldr	r5, [pc, #68]	; (80130c0 <StoreDevice::StoreDevice()+0x50>)
 801307c:	8123      	strh	r3, [r4, #8]
 801307e:	7020      	strb	r0, [r4, #0]
 8013080:	6065      	str	r5, [r4, #4]
 8013082:	f002 fe0b 	bl	8015c9c <gd32_i2c_set_address>
 8013086:	4628      	mov	r0, r5
 8013088:	f002 fe00 	bl	8015c8c <gd32_i2c_set_baudrate>
 801308c:	2101      	movs	r1, #1
 801308e:	f10d 0007 	add.w	r0, sp, #7
 8013092:	f002 fe6f 	bl	8015d74 <gd32_i2c_read>
 8013096:	2800      	cmp	r0, #0
 8013098:	bf0c      	ite	eq
 801309a:	2301      	moveq	r3, #1
 801309c:	2300      	movne	r3, #0
 801309e:	7223      	strb	r3, [r4, #8]
 80130a0:	72a3      	strb	r3, [r4, #10]
 80130a2:	d006      	beq.n	80130b2 <StoreDevice::StoreDevice()+0x42>
 80130a4:	7821      	ldrb	r1, [r4, #0]
 80130a6:	4807      	ldr	r0, [pc, #28]	; (80130c4 <StoreDevice::StoreDevice()+0x54>)
 80130a8:	f7f7 f90e 	bl	800a2c8 <printf>
 80130ac:	4620      	mov	r0, r4
 80130ae:	b003      	add	sp, #12
 80130b0:	bd30      	pop	{r4, r5, pc}
 80130b2:	2204      	movs	r2, #4
 80130b4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80130b8:	4803      	ldr	r0, [pc, #12]	; (80130c8 <StoreDevice::StoreDevice()+0x58>)
 80130ba:	f7f7 f905 	bl	800a2c8 <printf>
 80130be:	e7f5      	b.n	80130ac <StoreDevice::StoreDevice()+0x3c>
 80130c0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80130c4:	0801952c 	stmdaeq	r1, {r2, r3, r5, r8, sl, ip, pc}
 80130c8:	0801954b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, ip, pc}

080130cc <StoreDevice::GetSize() const>:
 80130cc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80130d0:	4770      	bx	lr

080130d2 <StoreDevice::GetSectorSize() const>:
 80130d2:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80130d6:	4770      	bx	lr

080130d8 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 80130d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80130da:	461e      	mov	r6, r3
 80130dc:	7a03      	ldrb	r3, [r0, #8]
 80130de:	4604      	mov	r4, r0
 80130e0:	460d      	mov	r5, r1
 80130e2:	4617      	mov	r7, r2
 80130e4:	b1b3      	cbz	r3, 8013114 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x3c>
 80130e6:	2101      	movs	r1, #1
 80130e8:	a801      	add	r0, sp, #4
 80130ea:	f002 fe43 	bl	8015d74 <gd32_i2c_read>
 80130ee:	2800      	cmp	r0, #0
 80130f0:	d1f9      	bne.n	80130e6 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xe>
 80130f2:	4620      	mov	r0, r4
 80130f4:	ba6d      	rev16	r5, r5
 80130f6:	f8ad 5004 	strh.w	r5, [sp, #4]
 80130fa:	f7ff ff61 	bl	8012fc0 <HAL_I2C::Setup()>
 80130fe:	2102      	movs	r1, #2
 8013100:	a801      	add	r0, sp, #4
 8013102:	f002 fdd1 	bl	8015ca8 <gd32_i2c_write>
 8013106:	4620      	mov	r0, r4
 8013108:	f7ff ff5a 	bl	8012fc0 <HAL_I2C::Setup()>
 801310c:	4639      	mov	r1, r7
 801310e:	4630      	mov	r0, r6
 8013110:	f002 fe30 	bl	8015d74 <gd32_i2c_read>
 8013114:	9b08      	ldr	r3, [sp, #32]
 8013116:	2200      	movs	r2, #0
 8013118:	2001      	movs	r0, #1
 801311a:	601a      	str	r2, [r3, #0]
 801311c:	b003      	add	sp, #12
 801311e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013120 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8013120:	2200      	movs	r2, #0
 8013122:	601a      	str	r2, [r3, #0]
 8013124:	2001      	movs	r0, #1
 8013126:	4770      	bx	lr

08013128 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8013128:	b510      	push	{r4, lr}
 801312a:	4614      	mov	r4, r2
 801312c:	461a      	mov	r2, r3
 801312e:	4623      	mov	r3, r4
 8013130:	f7ff ff50 	bl	8012fd4 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>
 8013134:	9b02      	ldr	r3, [sp, #8]
 8013136:	2200      	movs	r2, #0
 8013138:	601a      	str	r2, [r3, #0]
 801313a:	2001      	movs	r0, #1
 801313c:	bd10      	pop	{r4, pc}

0801313e <StorePixelDmx::~StorePixelDmx()>:
 801313e:	4770      	bx	lr

08013140 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8013140:	3804      	subs	r0, #4
 8013142:	4770      	bx	lr

08013144 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 8013144:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013146:	2200      	movs	r2, #0
 8013148:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801314c:	460b      	mov	r3, r1
 801314e:	4805      	ldr	r0, [pc, #20]	; (8013164 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8013150:	2136      	movs	r1, #54	; 0x36
 8013152:	9100      	str	r1, [sp, #0]
 8013154:	6800      	ldr	r0, [r0, #0]
 8013156:	2103      	movs	r1, #3
 8013158:	f7ff fd2e 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801315c:	b005      	add	sp, #20
 801315e:	f85d fb04 	ldr.w	pc, [sp], #4
 8013162:	bf00      	nop
 8013164:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013168 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8013168:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801316a:	2304      	movs	r3, #4
 801316c:	2200      	movs	r2, #0
 801316e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8013172:	4807      	ldr	r0, [pc, #28]	; (8013190 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 8013174:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013178:	2302      	movs	r3, #2
 801317a:	9300      	str	r3, [sp, #0]
 801317c:	6800      	ldr	r0, [r0, #0]
 801317e:	f10d 0316 	add.w	r3, sp, #22
 8013182:	2207      	movs	r2, #7
 8013184:	2103      	movs	r1, #3
 8013186:	f7ff fd17 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801318a:	b007      	add	sp, #28
 801318c:	f85d fb04 	ldr.w	pc, [sp], #4
 8013190:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013194 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8013194:	f1a0 0004 	sub.w	r0, r0, #4
 8013198:	e7e6      	b.n	8013168 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 801319a:	bf00      	nop

0801319c <StorePixelDmx::SaveTestPattern(unsigned char)>:
 801319c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801319e:	2308      	movs	r3, #8
 80131a0:	2200      	movs	r2, #0
 80131a2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80131a6:	4807      	ldr	r0, [pc, #28]	; (80131c4 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 80131a8:	f88d 1017 	strb.w	r1, [sp, #23]
 80131ac:	2301      	movs	r3, #1
 80131ae:	9300      	str	r3, [sp, #0]
 80131b0:	6800      	ldr	r0, [r0, #0]
 80131b2:	f10d 0317 	add.w	r3, sp, #23
 80131b6:	2210      	movs	r2, #16
 80131b8:	2103      	movs	r1, #3
 80131ba:	f7ff fcfd 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80131be:	b007      	add	sp, #28
 80131c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80131c4:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

080131c8 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 80131c8:	f1a0 0004 	sub.w	r0, r0, #4
 80131cc:	e7e6      	b.n	801319c <StorePixelDmx::SaveTestPattern(unsigned char)>
 80131ce:	bf00      	nop

080131d0 <StorePixelDmx::SaveMap(unsigned char)>:
 80131d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80131d2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80131d6:	2200      	movs	r2, #0
 80131d8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80131dc:	4807      	ldr	r0, [pc, #28]	; (80131fc <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 80131de:	f88d 1017 	strb.w	r1, [sp, #23]
 80131e2:	2301      	movs	r3, #1
 80131e4:	9300      	str	r3, [sp, #0]
 80131e6:	6800      	ldr	r0, [r0, #0]
 80131e8:	f10d 0317 	add.w	r3, sp, #23
 80131ec:	2213      	movs	r2, #19
 80131ee:	2103      	movs	r1, #3
 80131f0:	f7ff fce2 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80131f4:	b007      	add	sp, #28
 80131f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80131fa:	bf00      	nop
 80131fc:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013200 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 8013200:	f1a0 0004 	sub.w	r0, r0, #4
 8013204:	e7e4      	b.n	80131d0 <StorePixelDmx::SaveMap(unsigned char)>
 8013206:	bf00      	nop

08013208 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8013208:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801320a:	f44f 7380 	mov.w	r3, #256	; 0x100
 801320e:	2200      	movs	r2, #0
 8013210:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8013214:	4807      	ldr	r0, [pc, #28]	; (8013234 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 8013216:	f8ad 1016 	strh.w	r1, [sp, #22]
 801321a:	2302      	movs	r3, #2
 801321c:	9300      	str	r3, [sp, #0]
 801321e:	6800      	ldr	r0, [r0, #0]
 8013220:	f10d 0316 	add.w	r3, sp, #22
 8013224:	2211      	movs	r2, #17
 8013226:	2103      	movs	r1, #3
 8013228:	f7ff fcc6 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801322c:	b007      	add	sp, #28
 801322e:	f85d fb04 	ldr.w	pc, [sp], #4
 8013232:	bf00      	nop
 8013234:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013238 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8013238:	f1a0 0004 	sub.w	r0, r0, #4
 801323c:	e7e4      	b.n	8013208 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 801323e:	bf00      	nop

08013240 <StorePixelDmx::SaveCount(unsigned short)>:
 8013240:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013242:	2302      	movs	r3, #2
 8013244:	2200      	movs	r2, #0
 8013246:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801324a:	4807      	ldr	r0, [pc, #28]	; (8013268 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 801324c:	9300      	str	r3, [sp, #0]
 801324e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013252:	6800      	ldr	r0, [r0, #0]
 8013254:	f10d 0316 	add.w	r3, sp, #22
 8013258:	2205      	movs	r2, #5
 801325a:	2103      	movs	r1, #3
 801325c:	f7ff fcac 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013260:	b007      	add	sp, #28
 8013262:	f85d fb04 	ldr.w	pc, [sp], #4
 8013266:	bf00      	nop
 8013268:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

0801326c <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 801326c:	f1a0 0004 	sub.w	r0, r0, #4
 8013270:	e7e6      	b.n	8013240 <StorePixelDmx::SaveCount(unsigned short)>
 8013272:	bf00      	nop

08013274 <StorePixelDmx::SaveType(unsigned char)>:
 8013274:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013276:	2301      	movs	r3, #1
 8013278:	2200      	movs	r2, #0
 801327a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801327e:	4807      	ldr	r0, [pc, #28]	; (801329c <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8013280:	9300      	str	r3, [sp, #0]
 8013282:	f88d 1017 	strb.w	r1, [sp, #23]
 8013286:	6800      	ldr	r0, [r0, #0]
 8013288:	f10d 0317 	add.w	r3, sp, #23
 801328c:	2204      	movs	r2, #4
 801328e:	2103      	movs	r1, #3
 8013290:	f7ff fc92 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013294:	b007      	add	sp, #28
 8013296:	f85d fb04 	ldr.w	pc, [sp], #4
 801329a:	bf00      	nop
 801329c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

080132a0 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 80132a0:	f1a0 0004 	sub.w	r0, r0, #4
 80132a4:	e7e6      	b.n	8013274 <StorePixelDmx::SaveType(unsigned char)>
 80132a6:	bf00      	nop

080132a8 <StorePixelDmx::~StorePixelDmx()>:
 80132a8:	b510      	push	{r4, lr}
 80132aa:	4604      	mov	r4, r0
 80132ac:	f000 ffa4 	bl	80141f8 <operator delete(void*)>
 80132b0:	4620      	mov	r0, r4
 80132b2:	bd10      	pop	{r4, pc}

080132b4 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 80132b4:	f1a0 0004 	sub.w	r0, r0, #4
 80132b8:	e7f6      	b.n	80132a8 <StorePixelDmx::~StorePixelDmx()>
	...

080132bc <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 80132bc:	b507      	push	{r0, r1, r2, lr}
 80132be:	2300      	movs	r3, #0
 80132c0:	460a      	mov	r2, r1
 80132c2:	2101      	movs	r1, #1
 80132c4:	e9cd 3100 	strd	r3, r1, [sp]
 80132c8:	4804      	ldr	r0, [pc, #16]	; (80132dc <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 80132ca:	2336      	movs	r3, #54	; 0x36
 80132cc:	6800      	ldr	r0, [r0, #0]
 80132ce:	2103      	movs	r1, #3
 80132d0:	f7ff fcb2 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80132d4:	b003      	add	sp, #12
 80132d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80132da:	bf00      	nop
 80132dc:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

080132e0 <StorePixelDmx::StorePixelDmx()>:
 80132e0:	4a03      	ldr	r2, [pc, #12]	; (80132f0 <StorePixelDmx::StorePixelDmx()+0x10>)
 80132e2:	6002      	str	r2, [r0, #0]
 80132e4:	3230      	adds	r2, #48	; 0x30
 80132e6:	6042      	str	r2, [r0, #4]
 80132e8:	4a02      	ldr	r2, [pc, #8]	; (80132f4 <StorePixelDmx::StorePixelDmx()+0x14>)
 80132ea:	6010      	str	r0, [r2, #0]
 80132ec:	4770      	bx	lr
 80132ee:	bf00      	nop
 80132f0:	08019590 	stmdaeq	r1, {r4, r7, r8, sl, ip, pc}
 80132f4:	2000fdc8 	andcs	pc, r0, r8, asr #27

080132f8 <StoreRDMDevice::~StoreRDMDevice()>:
 80132f8:	4770      	bx	lr

080132fa <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80132fa:	3804      	subs	r0, #4
 80132fc:	4770      	bx	lr
	...

08013300 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8013300:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013302:	2200      	movs	r2, #0
 8013304:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8013308:	460b      	mov	r3, r1
 801330a:	4805      	ldr	r0, [pc, #20]	; (8013320 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 801330c:	2129      	movs	r1, #41	; 0x29
 801330e:	9100      	str	r1, [sp, #0]
 8013310:	6800      	ldr	r0, [r0, #0]
 8013312:	210b      	movs	r1, #11
 8013314:	f7ff fc50 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013318:	b005      	add	sp, #20
 801331a:	f85d fb04 	ldr.w	pc, [sp], #4
 801331e:	bf00      	nop
 8013320:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013324 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8013324:	b570      	push	{r4, r5, r6, lr}
 8013326:	4d0d      	ldr	r5, [pc, #52]	; (801335c <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8013328:	b086      	sub	sp, #24
 801332a:	2401      	movs	r4, #1
 801332c:	2600      	movs	r6, #0
 801332e:	6828      	ldr	r0, [r5, #0]
 8013330:	f88d 2017 	strb.w	r2, [sp, #23]
 8013334:	460b      	mov	r3, r1
 8013336:	9200      	str	r2, [sp, #0]
 8013338:	e9cd 4601 	strd	r4, r6, [sp, #4]
 801333c:	2204      	movs	r2, #4
 801333e:	210b      	movs	r1, #11
 8013340:	f7ff fc3a 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013344:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8013348:	6828      	ldr	r0, [r5, #0]
 801334a:	9400      	str	r4, [sp, #0]
 801334c:	f10d 0317 	add.w	r3, sp, #23
 8013350:	2224      	movs	r2, #36	; 0x24
 8013352:	210b      	movs	r1, #11
 8013354:	f7ff fc30 	bl	8012bb8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013358:	b006      	add	sp, #24
 801335a:	bd70      	pop	{r4, r5, r6, pc}
 801335c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

08013360 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8013360:	f1a0 0004 	sub.w	r0, r0, #4
 8013364:	e7de      	b.n	8013324 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8013366:	bf00      	nop

08013368 <StoreRDMDevice::~StoreRDMDevice()>:
 8013368:	b510      	push	{r4, lr}
 801336a:	4604      	mov	r4, r0
 801336c:	f000 ff44 	bl	80141f8 <operator delete(void*)>
 8013370:	4620      	mov	r0, r4
 8013372:	bd10      	pop	{r4, pc}

08013374 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8013374:	f1a0 0004 	sub.w	r0, r0, #4
 8013378:	e7f6      	b.n	8013368 <StoreRDMDevice::~StoreRDMDevice()>
	...

0801337c <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 801337c:	b507      	push	{r0, r1, r2, lr}
 801337e:	2300      	movs	r3, #0
 8013380:	460a      	mov	r2, r1
 8013382:	2101      	movs	r1, #1
 8013384:	e9cd 3100 	strd	r3, r1, [sp]
 8013388:	4804      	ldr	r0, [pc, #16]	; (801339c <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 801338a:	2329      	movs	r3, #41	; 0x29
 801338c:	6800      	ldr	r0, [r0, #0]
 801338e:	210b      	movs	r1, #11
 8013390:	f7ff fc52 	bl	8012c38 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8013394:	b003      	add	sp, #12
 8013396:	f85d fb04 	ldr.w	pc, [sp], #4
 801339a:	bf00      	nop
 801339c:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

080133a0 <StoreRDMDevice::StoreRDMDevice()>:
 80133a0:	4a03      	ldr	r2, [pc, #12]	; (80133b0 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 80133a2:	6002      	str	r2, [r0, #0]
 80133a4:	321c      	adds	r2, #28
 80133a6:	6042      	str	r2, [r0, #4]
 80133a8:	4a02      	ldr	r2, [pc, #8]	; (80133b4 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 80133aa:	6010      	str	r0, [r2, #0]
 80133ac:	4770      	bx	lr
 80133ae:	bf00      	nop
 80133b0:	080195e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, ip, pc}
 80133b4:	2000fdcc 	andcs	pc, r0, ip, asr #27

080133b8 <properties::convert_json_file(char*, unsigned short, bool)>:
 80133b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133bc:	7803      	ldrb	r3, [r0, #0]
 80133be:	2b7b      	cmp	r3, #123	; 0x7b
 80133c0:	f040 80a4 	bne.w	801350c <properties::convert_json_file(char*, unsigned short, bool)+0x154>
 80133c4:	b182      	cbz	r2, 80133e8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80133c6:	2401      	movs	r4, #1
 80133c8:	4606      	mov	r6, r0
 80133ca:	4623      	mov	r3, r4
 80133cc:	2a00      	cmp	r2, #0
 80133ce:	bf0c      	ite	eq
 80133d0:	f04f 0c0a 	moveq.w	ip, #10
 80133d4:	f04f 0c00 	movne.w	ip, #0
 80133d8:	273d      	movs	r7, #61	; 0x3d
 80133da:	42a1      	cmp	r1, r4
 80133dc:	d852      	bhi.n	8013484 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 80133de:	4618      	mov	r0, r3
 80133e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80133e4:	463c      	mov	r4, r7
 80133e6:	e7f1      	b.n	80133cc <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 80133e8:	2323      	movs	r3, #35	; 0x23
 80133ea:	f800 3b01 	strb.w	r3, [r0], #1
 80133ee:	2701      	movs	r7, #1
 80133f0:	4604      	mov	r4, r0
 80133f2:	42b9      	cmp	r1, r7
 80133f4:	d811      	bhi.n	801341a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 80133f6:	2301      	movs	r3, #1
 80133f8:	4606      	mov	r6, r0
 80133fa:	200a      	movs	r0, #10
 80133fc:	f806 0b01 	strb.w	r0, [r6], #1
 8013400:	3301      	adds	r3, #1
 8013402:	4625      	mov	r5, r4
 8013404:	4628      	mov	r0, r5
 8013406:	3501      	adds	r5, #1
 8013408:	7804      	ldrb	r4, [r0, #0]
 801340a:	2c7b      	cmp	r4, #123	; 0x7b
 801340c:	d0ea      	beq.n	80133e4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 801340e:	42b9      	cmp	r1, r7
 8013410:	f107 0401 	add.w	r4, r7, #1
 8013414:	d9da      	bls.n	80133cc <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 8013416:	4627      	mov	r7, r4
 8013418:	e7f4      	b.n	8013404 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 801341a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801341e:	2b22      	cmp	r3, #34	; 0x22
 8013420:	d119      	bne.n	8013456 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8013422:	46a4      	mov	ip, r4
 8013424:	4605      	mov	r5, r0
 8013426:	2601      	movs	r6, #1
 8013428:	f89c e000 	ldrb.w	lr, [ip]
 801342c:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8013430:	4664      	mov	r4, ip
 8013432:	4628      	mov	r0, r5
 8013434:	4633      	mov	r3, r6
 8013436:	f10c 0c01 	add.w	ip, ip, #1
 801343a:	f105 0501 	add.w	r5, r5, #1
 801343e:	f106 0601 	add.w	r6, r6, #1
 8013442:	d0d9      	beq.n	80133f8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8013444:	3701      	adds	r7, #1
 8013446:	42b9      	cmp	r1, r7
 8013448:	4664      	mov	r4, ip
 801344a:	f805 ec01 	strb.w	lr, [r5, #-1]
 801344e:	d8eb      	bhi.n	8013428 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8013450:	4633      	mov	r3, r6
 8013452:	4628      	mov	r0, r5
 8013454:	e7d0      	b.n	80133f8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8013456:	3701      	adds	r7, #1
 8013458:	e7cb      	b.n	80133f2 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801345a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801345e:	d111      	bne.n	8013484 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8013460:	eba3 0800 	sub.w	r8, r3, r0
 8013464:	eb08 0300 	add.w	r3, r8, r0
 8013468:	4602      	mov	r2, r0
 801346a:	f810 eb01 	ldrb.w	lr, [r0], #1
 801346e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8013472:	f104 0501 	add.w	r5, r4, #1
 8013476:	d04c      	beq.n	8013512 <properties::convert_json_file(char*, unsigned short, bool)+0x15a>
 8013478:	42a1      	cmp	r1, r4
 801347a:	d911      	bls.n	80134a0 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 801347c:	f806 eb01 	strb.w	lr, [r6], #1
 8013480:	462c      	mov	r4, r5
 8013482:	e7ef      	b.n	8013464 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8013484:	42a1      	cmp	r1, r4
 8013486:	f890 e000 	ldrb.w	lr, [r0]
 801348a:	4605      	mov	r5, r0
 801348c:	f104 0401 	add.w	r4, r4, #1
 8013490:	f100 0001 	add.w	r0, r0, #1
 8013494:	d8e1      	bhi.n	801345a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8013496:	4628      	mov	r0, r5
 8013498:	e7e2      	b.n	8013460 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 801349a:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 801349e:	d009      	beq.n	80134b4 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 80134a0:	42a9      	cmp	r1, r5
 80134a2:	f892 e000 	ldrb.w	lr, [r2]
 80134a6:	4614      	mov	r4, r2
 80134a8:	f105 0501 	add.w	r5, r5, #1
 80134ac:	f102 0201 	add.w	r2, r2, #1
 80134b0:	d8f3      	bhi.n	801349a <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 80134b2:	4622      	mov	r2, r4
 80134b4:	7814      	ldrb	r4, [r2, #0]
 80134b6:	2c2f      	cmp	r4, #47	; 0x2f
 80134b8:	4696      	mov	lr, r2
 80134ba:	4628      	mov	r0, r5
 80134bc:	f102 0201 	add.w	r2, r2, #1
 80134c0:	f105 0501 	add.w	r5, r5, #1
 80134c4:	d81a      	bhi.n	80134fc <properties::convert_json_file(char*, unsigned short, bool)+0x144>
 80134c6:	4281      	cmp	r1, r0
 80134c8:	d8f4      	bhi.n	80134b4 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 80134ca:	2c22      	cmp	r4, #34	; 0x22
 80134cc:	bf08      	it	eq
 80134ce:	4696      	moveq	lr, r2
 80134d0:	4670      	mov	r0, lr
 80134d2:	1c6c      	adds	r4, r5, #1
 80134d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80134d8:	2a22      	cmp	r2, #34	; 0x22
 80134da:	d011      	beq.n	8013500 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80134dc:	2a2c      	cmp	r2, #44	; 0x2c
 80134de:	d00f      	beq.n	8013500 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80134e0:	2a7d      	cmp	r2, #125	; 0x7d
 80134e2:	d00d      	beq.n	8013500 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80134e4:	42a9      	cmp	r1, r5
 80134e6:	d90f      	bls.n	8013508 <properties::convert_json_file(char*, unsigned short, bool)+0x150>
 80134e8:	f1a2 0520 	sub.w	r5, r2, #32
 80134ec:	2d5a      	cmp	r5, #90	; 0x5a
 80134ee:	d803      	bhi.n	80134f8 <properties::convert_json_file(char*, unsigned short, bool)+0x140>
 80134f0:	f806 2b01 	strb.w	r2, [r6], #1
 80134f4:	3301      	adds	r3, #1
 80134f6:	4686      	mov	lr, r0
 80134f8:	4625      	mov	r5, r4
 80134fa:	e7e9      	b.n	80134d0 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 80134fc:	4605      	mov	r5, r0
 80134fe:	e7e7      	b.n	80134d0 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8013500:	f806 cb01 	strb.w	ip, [r6], #1
 8013504:	3301      	adds	r3, #1
 8013506:	462c      	mov	r4, r5
 8013508:	3401      	adds	r4, #1
 801350a:	e766      	b.n	80133da <properties::convert_json_file(char*, unsigned short, bool)+0x22>
 801350c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013510:	e766      	b.n	80133e0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8013512:	f806 7b01 	strb.w	r7, [r6], #1
 8013516:	3301      	adds	r3, #1
 8013518:	4625      	mov	r5, r4
 801351a:	e7c1      	b.n	80134a0 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>

0801351c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 801351c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013520:	6002      	str	r2, [r0, #0]
 8013522:	4614      	mov	r4, r2
 8013524:	2200      	movs	r2, #0
 8013526:	80c2      	strh	r2, [r0, #6]
 8013528:	4a1c      	ldr	r2, [pc, #112]	; (801359c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801352a:	8083      	strh	r3, [r0, #4]
 801352c:	7812      	ldrb	r2, [r2, #0]
 801352e:	f002 0201 	and.w	r2, r2, #1
 8013532:	4606      	mov	r6, r0
 8013534:	7202      	strb	r2, [r0, #8]
 8013536:	4608      	mov	r0, r1
 8013538:	4605      	mov	r5, r0
 801353a:	3001      	adds	r0, #1
 801353c:	782f      	ldrb	r7, [r5, #0]
 801353e:	2f00      	cmp	r7, #0
 8013540:	d1fa      	bne.n	8013538 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8013542:	1a6d      	subs	r5, r5, r1
 8013544:	b29b      	uxth	r3, r3
 8013546:	b1d2      	cbz	r2, 801357e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8013548:	1d2f      	adds	r7, r5, #4
 801354a:	429f      	cmp	r7, r3
 801354c:	d814      	bhi.n	8013578 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801354e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8013552:	f04f 0922 	mov.w	r9, #34	; 0x22
 8013556:	462a      	mov	r2, r5
 8013558:	f884 8000 	strb.w	r8, [r4]
 801355c:	f884 9001 	strb.w	r9, [r4, #1]
 8013560:	1ca0      	adds	r0, r4, #2
 8013562:	f000 ff0c 	bl	801437e <memmove>
 8013566:	1963      	adds	r3, r4, r5
 8013568:	223a      	movs	r2, #58	; 0x3a
 801356a:	f883 9002 	strb.w	r9, [r3, #2]
 801356e:	70da      	strb	r2, [r3, #3]
 8013570:	3505      	adds	r5, #5
 8013572:	f804 8007 	strb.w	r8, [r4, r7]
 8013576:	80f5      	strh	r5, [r6, #6]
 8013578:	4630      	mov	r0, r6
 801357a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801357e:	1caf      	adds	r7, r5, #2
 8013580:	429f      	cmp	r7, r3
 8013582:	d8f9      	bhi.n	8013578 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8013584:	4620      	mov	r0, r4
 8013586:	2323      	movs	r3, #35	; 0x23
 8013588:	f800 3b01 	strb.w	r3, [r0], #1
 801358c:	462a      	mov	r2, r5
 801358e:	442c      	add	r4, r5
 8013590:	f000 fef5 	bl	801437e <memmove>
 8013594:	230a      	movs	r3, #10
 8013596:	7063      	strb	r3, [r4, #1]
 8013598:	80f7      	strh	r7, [r6, #6]
 801359a:	e7ed      	b.n	8013578 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801359c:	2000fdd0 	ldrdcs	pc, [r0], -r0

080135a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80135a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135a2:	469c      	mov	ip, r3
 80135a4:	8885      	ldrh	r5, [r0, #4]
 80135a6:	88c3      	ldrh	r3, [r0, #6]
 80135a8:	42ab      	cmp	r3, r5
 80135aa:	b085      	sub	sp, #20
 80135ac:	d302      	bcc.n	80135b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80135ae:	2000      	movs	r0, #0
 80135b0:	b005      	add	sp, #20
 80135b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80135b4:	4604      	mov	r4, r0
 80135b6:	6800      	ldr	r0, [r0, #0]
 80135b8:	f894 e008 	ldrb.w	lr, [r4, #8]
 80135bc:	4418      	add	r0, r3
 80135be:	1aed      	subs	r5, r5, r3
 80135c0:	b2d6      	uxtb	r6, r2
 80135c2:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80135c6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80135ca:	0e12      	lsrs	r2, r2, #24
 80135cc:	f1bc 0f00 	cmp.w	ip, #0
 80135d0:	d109      	bne.n	80135e6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80135d2:	f1be 0f00 	cmp.w	lr, #0
 80135d6:	d109      	bne.n	80135ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80135d8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80135dc:	e9cd 6700 	strd	r6, r7, [sp]
 80135e0:	4a0e      	ldr	r2, [pc, #56]	; (801361c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80135e2:	460b      	mov	r3, r1
 80135e4:	e008      	b.n	80135f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80135e6:	f1be 0f00 	cmp.w	lr, #0
 80135ea:	d00f      	beq.n	801360c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80135ec:	e9cd 6700 	strd	r6, r7, [sp]
 80135f0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80135f4:	4a0a      	ldr	r2, [pc, #40]	; (8013620 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80135f6:	460b      	mov	r3, r1
 80135f8:	4629      	mov	r1, r5
 80135fa:	f7f6 fe8d 	bl	800a318 <snprintf>
 80135fe:	4285      	cmp	r5, r0
 8013600:	dbd5      	blt.n	80135ae <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8013602:	88e3      	ldrh	r3, [r4, #6]
 8013604:	4403      	add	r3, r0
 8013606:	80e3      	strh	r3, [r4, #6]
 8013608:	2001      	movs	r0, #1
 801360a:	e7d1      	b.n	80135b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 801360c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013610:	e9cd 6700 	strd	r6, r7, [sp]
 8013614:	4a03      	ldr	r2, [pc, #12]	; (8013624 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8013616:	460b      	mov	r3, r1
 8013618:	e7ee      	b.n	80135f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801361a:	bf00      	nop
 801361c:	080196c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sl, ip, pc}
 8013620:	080196b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, pc}
 8013624:	080196ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, ip, pc}

08013628 <PropertiesBuilder::AddComment(char const*)>:
 8013628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801362a:	7a06      	ldrb	r6, [r0, #8]
 801362c:	b996      	cbnz	r6, 8013654 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801362e:	4604      	mov	r4, r0
 8013630:	88c0      	ldrh	r0, [r0, #6]
 8013632:	88a5      	ldrh	r5, [r4, #4]
 8013634:	42a8      	cmp	r0, r5
 8013636:	d20d      	bcs.n	8013654 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013638:	6827      	ldr	r7, [r4, #0]
 801363a:	4a07      	ldr	r2, [pc, #28]	; (8013658 <PropertiesBuilder::AddComment(char const*)+0x30>)
 801363c:	1a2d      	subs	r5, r5, r0
 801363e:	460b      	mov	r3, r1
 8013640:	4438      	add	r0, r7
 8013642:	4629      	mov	r1, r5
 8013644:	f7f6 fe68 	bl	800a318 <snprintf>
 8013648:	4285      	cmp	r5, r0
 801364a:	bfa1      	itttt	ge
 801364c:	88e3      	ldrhge	r3, [r4, #6]
 801364e:	18c0      	addge	r0, r0, r3
 8013650:	80e0      	strhge	r0, [r4, #6]
 8013652:	2601      	movge	r6, #1
 8013654:	4630      	mov	r0, r6
 8013656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013658:	080196da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip, pc}

0801365c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 801365c:	e9c0 1200 	strd	r1, r2, [r0]
 8013660:	4770      	bx	lr

08013662 <ReadConfigFile::~ReadConfigFile()>:
 8013662:	4770      	bx	lr

08013664 <ReadConfigFile::Read(char const*, unsigned int)>:
 8013664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013668:	4606      	mov	r6, r0
 801366a:	b0a0      	sub	sp, #128	; 0x80
 801366c:	460d      	mov	r5, r1
 801366e:	4614      	mov	r4, r2
 8013670:	f04f 0800 	mov.w	r8, #0
 8013674:	b33c      	cbz	r4, 80136c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8013676:	466b      	mov	r3, sp
 8013678:	462a      	mov	r2, r5
 801367a:	4619      	mov	r1, r3
 801367c:	e007      	b.n	801368e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 801367e:	f803 7b01 	strb.w	r7, [r3], #1
 8013682:	1a58      	subs	r0, r3, r1
 8013684:	287f      	cmp	r0, #127	; 0x7f
 8013686:	4615      	mov	r5, r2
 8013688:	dc1d      	bgt.n	80136c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801368a:	3c01      	subs	r4, #1
 801368c:	d00f      	beq.n	80136ae <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801368e:	7817      	ldrb	r7, [r2, #0]
 8013690:	2f0d      	cmp	r7, #13
 8013692:	4610      	mov	r0, r2
 8013694:	f102 0201 	add.w	r2, r2, #1
 8013698:	d001      	beq.n	801369e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801369a:	2f0a      	cmp	r7, #10
 801369c:	d1ef      	bne.n	801367e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 801369e:	4605      	mov	r5, r0
 80136a0:	b12c      	cbz	r4, 80136ae <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80136a2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80136a6:	2a0d      	cmp	r2, #13
 80136a8:	d00b      	beq.n	80136c2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80136aa:	2a0a      	cmp	r2, #10
 80136ac:	d009      	beq.n	80136c2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80136ae:	f89d 2000 	ldrb.w	r2, [sp]
 80136b2:	2a60      	cmp	r2, #96	; 0x60
 80136b4:	d9de      	bls.n	8013674 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80136b6:	f883 8000 	strb.w	r8, [r3]
 80136ba:	e9d6 3000 	ldrd	r3, r0, [r6]
 80136be:	4798      	blx	r3
 80136c0:	e7d8      	b.n	8013674 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80136c2:	3c01      	subs	r4, #1
 80136c4:	e7eb      	b.n	801369e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80136c6:	b020      	add	sp, #128	; 0x80
 80136c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080136cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80136cc:	b570      	push	{r4, r5, r6, lr}
 80136ce:	4615      	mov	r5, r2
 80136d0:	461c      	mov	r4, r3
 80136d2:	f000 f916 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 80136d6:	b180      	cbz	r0, 80136fa <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80136d8:	2100      	movs	r1, #0
 80136da:	5c43      	ldrb	r3, [r0, r1]
 80136dc:	6826      	ldr	r6, [r4, #0]
 80136de:	b28a      	uxth	r2, r1
 80136e0:	b143      	cbz	r3, 80136f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80136e2:	42b2      	cmp	r2, r6
 80136e4:	d303      	bcc.n	80136ee <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80136e6:	2b0a      	cmp	r3, #10
 80136e8:	d004      	beq.n	80136f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80136ea:	2002      	movs	r0, #2
 80136ec:	e004      	b.n	80136f8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80136ee:	546b      	strb	r3, [r5, r1]
 80136f0:	3101      	adds	r1, #1
 80136f2:	e7f2      	b.n	80136da <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80136f4:	6022      	str	r2, [r4, #0]
 80136f6:	2000      	movs	r0, #0
 80136f8:	bd70      	pop	{r4, r5, r6, pc}
 80136fa:	2001      	movs	r0, #1
 80136fc:	e7fc      	b.n	80136f8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

080136fe <Sscan::Float(char const*, char const*, float&)>:
 80136fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013700:	4614      	mov	r4, r2
 8013702:	f000 f8fe 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 8013706:	2800      	cmp	r0, #0
 8013708:	d052      	beq.n	80137b0 <Sscan::Float(char const*, char const*, float&)+0xb2>
 801370a:	7803      	ldrb	r3, [r0, #0]
 801370c:	2b2d      	cmp	r3, #45	; 0x2d
 801370e:	bf04      	itt	eq
 8013710:	3001      	addeq	r0, #1
 8013712:	2601      	moveq	r6, #1
 8013714:	7803      	ldrb	r3, [r0, #0]
 8013716:	bf18      	it	ne
 8013718:	2600      	movne	r6, #0
 801371a:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801371e:	d101      	bne.n	8013724 <Sscan::Float(char const*, char const*, float&)+0x26>
 8013720:	2002      	movs	r0, #2
 8013722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013724:	2300      	movs	r3, #0
 8013726:	210a      	movs	r1, #10
 8013728:	7802      	ldrb	r2, [r0, #0]
 801372a:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 801372e:	2d09      	cmp	r5, #9
 8013730:	d8f6      	bhi.n	8013720 <Sscan::Float(char const*, char const*, float&)+0x22>
 8013732:	fb01 2303 	mla	r3, r1, r3, r2
 8013736:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 801373a:	2a2e      	cmp	r2, #46	; 0x2e
 801373c:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 8013740:	d002      	beq.n	8013748 <Sscan::Float(char const*, char const*, float&)+0x4a>
 8013742:	f012 0fdf 	tst.w	r2, #223	; 0xdf
 8013746:	d1ef      	bne.n	8013728 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8013748:	ee07 3a90 	vmov	s15, r3
 801374c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8013750:	edc4 7a00 	vstr	s15, [r4]
 8013754:	7803      	ldrb	r3, [r0, #0]
 8013756:	2b2e      	cmp	r3, #46	; 0x2e
 8013758:	d007      	beq.n	801376a <Sscan::Float(char const*, char const*, float&)+0x6c>
 801375a:	b90e      	cbnz	r6, 8013760 <Sscan::Float(char const*, char const*, float&)+0x62>
 801375c:	2000      	movs	r0, #0
 801375e:	e7e0      	b.n	8013722 <Sscan::Float(char const*, char const*, float&)+0x24>
 8013760:	eef1 7a67 	vneg.f32	s15, s15
 8013764:	edc4 7a00 	vstr	s15, [r4]
 8013768:	e7f8      	b.n	801375c <Sscan::Float(char const*, char const*, float&)+0x5e>
 801376a:	4603      	mov	r3, r0
 801376c:	2101      	movs	r1, #1
 801376e:	2500      	movs	r5, #0
 8013770:	270a      	movs	r7, #10
 8013772:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8013776:	f012 00df 	ands.w	r0, r2, #223	; 0xdf
 801377a:	d112      	bne.n	80137a2 <Sscan::Float(char const*, char const*, float&)+0xa4>
 801377c:	ee07 5a10 	vmov	s14, r5
 8013780:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8013784:	ee07 1a10 	vmov	s14, r1
 8013788:	eef8 6a47 	vcvt.f32.u32	s13, s14
 801378c:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8013790:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013794:	2e00      	cmp	r6, #0
 8013796:	d0e5      	beq.n	8013764 <Sscan::Float(char const*, char const*, float&)+0x66>
 8013798:	eef1 7a67 	vneg.f32	s15, s15
 801379c:	edc4 7a00 	vstr	s15, [r4]
 80137a0:	e7bf      	b.n	8013722 <Sscan::Float(char const*, char const*, float&)+0x24>
 80137a2:	3a30      	subs	r2, #48	; 0x30
 80137a4:	2a09      	cmp	r2, #9
 80137a6:	d8bb      	bhi.n	8013720 <Sscan::Float(char const*, char const*, float&)+0x22>
 80137a8:	fb07 2505 	mla	r5, r7, r5, r2
 80137ac:	4379      	muls	r1, r7
 80137ae:	e7e0      	b.n	8013772 <Sscan::Float(char const*, char const*, float&)+0x74>
 80137b0:	2001      	movs	r0, #1
 80137b2:	e7b6      	b.n	8013722 <Sscan::Float(char const*, char const*, float&)+0x24>

080137b4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80137b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80137b6:	4615      	mov	r5, r2
 80137b8:	f000 f8a3 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 80137bc:	bb58      	cbnz	r0, 8013816 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 80137be:	2001      	movs	r0, #1
 80137c0:	e027      	b.n	8013812 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80137c2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80137c6:	2b09      	cmp	r3, #9
 80137c8:	d822      	bhi.n	8013810 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80137ca:	fb0c 2101 	mla	r1, ip, r1, r2
 80137ce:	3930      	subs	r1, #48	; 0x30
 80137d0:	4603      	mov	r3, r0
 80137d2:	4618      	mov	r0, r3
 80137d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80137d8:	2a2e      	cmp	r2, #46	; 0x2e
 80137da:	d115      	bne.n	8013808 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80137dc:	29ff      	cmp	r1, #255	; 0xff
 80137de:	d817      	bhi.n	8013810 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80137e0:	3401      	adds	r4, #1
 80137e2:	2c03      	cmp	r4, #3
 80137e4:	f806 1b01 	strb.w	r1, [r6], #1
 80137e8:	d119      	bne.n	801381e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 80137ea:	1d1a      	adds	r2, r3, #4
 80137ec:	2400      	movs	r4, #0
 80137ee:	260a      	movs	r6, #10
 80137f0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80137f4:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80137f8:	d115      	bne.n	8013826 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 80137fa:	2cff      	cmp	r4, #255	; 0xff
 80137fc:	d808      	bhi.n	8013810 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80137fe:	f88d 4007 	strb.w	r4, [sp, #7]
 8013802:	9b01      	ldr	r3, [sp, #4]
 8013804:	602b      	str	r3, [r5, #0]
 8013806:	e004      	b.n	8013812 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8013808:	2a00      	cmp	r2, #0
 801380a:	d0e7      	beq.n	80137dc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801380c:	42b8      	cmp	r0, r7
 801380e:	d1d8      	bne.n	80137c2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8013810:	2002      	movs	r0, #2
 8013812:	b003      	add	sp, #12
 8013814:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013816:	ae01      	add	r6, sp, #4
 8013818:	2400      	movs	r4, #0
 801381a:	f04f 0c0a 	mov.w	ip, #10
 801381e:	4603      	mov	r3, r0
 8013820:	1d07      	adds	r7, r0, #4
 8013822:	2100      	movs	r1, #0
 8013824:	e7d5      	b.n	80137d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8013826:	4293      	cmp	r3, r2
 8013828:	d0f2      	beq.n	8013810 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801382a:	3930      	subs	r1, #48	; 0x30
 801382c:	2909      	cmp	r1, #9
 801382e:	d8ef      	bhi.n	8013810 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013830:	fb06 1404 	mla	r4, r6, r4, r1
 8013834:	e7dc      	b.n	80137f0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08013836 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8013836:	b538      	push	{r3, r4, r5, lr}
 8013838:	4614      	mov	r4, r2
 801383a:	f000 f862 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 801383e:	b1a8      	cbz	r0, 801386c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x36>
 8013840:	2100      	movs	r1, #0
 8013842:	220a      	movs	r2, #10
 8013844:	7803      	ldrb	r3, [r0, #0]
 8013846:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 801384a:	2d09      	cmp	r5, #9
 801384c:	d810      	bhi.n	8013870 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 801384e:	fb02 3101 	mla	r1, r2, r1, r3
 8013852:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8013856:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 801385a:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 801385e:	d1f1      	bne.n	8013844 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8013860:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8013864:	d204      	bcs.n	8013870 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8013866:	8021      	strh	r1, [r4, #0]
 8013868:	4618      	mov	r0, r3
 801386a:	bd38      	pop	{r3, r4, r5, pc}
 801386c:	2301      	movs	r3, #1
 801386e:	e7fb      	b.n	8013868 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8013870:	2302      	movs	r3, #2
 8013872:	e7f9      	b.n	8013868 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08013874 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8013874:	b570      	push	{r4, r5, r6, lr}
 8013876:	4614      	mov	r4, r2
 8013878:	f000 f843 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 801387c:	b1f8      	cbz	r0, 80138be <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 801387e:	2300      	movs	r3, #0
 8013880:	461a      	mov	r2, r3
 8013882:	260a      	movs	r6, #10
 8013884:	7805      	ldrb	r5, [r0, #0]
 8013886:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
 801388a:	2909      	cmp	r1, #9
 801388c:	d819      	bhi.n	80138c2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801388e:	fba3 3106 	umull	r3, r1, r3, r6
 8013892:	fb06 1102 	mla	r1, r6, r2, r1
 8013896:	3b30      	subs	r3, #48	; 0x30
 8013898:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 801389c:	18eb      	adds	r3, r5, r3
 801389e:	f141 0200 	adc.w	r2, r1, #0
 80138a2:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 80138a6:	f011 01df 	ands.w	r1, r1, #223	; 0xdf
 80138aa:	d1eb      	bne.n	8013884 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x10>
 80138ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80138b0:	4298      	cmp	r0, r3
 80138b2:	eb71 0202 	sbcs.w	r2, r1, r2
 80138b6:	d304      	bcc.n	80138c2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80138b8:	6023      	str	r3, [r4, #0]
 80138ba:	4608      	mov	r0, r1
 80138bc:	bd70      	pop	{r4, r5, r6, pc}
 80138be:	2101      	movs	r1, #1
 80138c0:	e7fb      	b.n	80138ba <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>
 80138c2:	2102      	movs	r1, #2
 80138c4:	e7f9      	b.n	80138ba <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>

080138c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80138c6:	b538      	push	{r3, r4, r5, lr}
 80138c8:	4614      	mov	r4, r2
 80138ca:	f000 f81a 	bl	8013902 <Sscan::checkName(char const*, char const*)>
 80138ce:	b1a0      	cbz	r0, 80138fa <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 80138d0:	2100      	movs	r1, #0
 80138d2:	220a      	movs	r2, #10
 80138d4:	7803      	ldrb	r3, [r0, #0]
 80138d6:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 80138da:	2d09      	cmp	r5, #9
 80138dc:	d80f      	bhi.n	80138fe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 80138de:	fb02 3101 	mla	r1, r2, r1, r3
 80138e2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80138e6:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 80138ea:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 80138ee:	d1f1      	bne.n	80138d4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 80138f0:	29ff      	cmp	r1, #255	; 0xff
 80138f2:	d804      	bhi.n	80138fe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 80138f4:	7021      	strb	r1, [r4, #0]
 80138f6:	4618      	mov	r0, r3
 80138f8:	bd38      	pop	{r3, r4, r5, pc}
 80138fa:	2301      	movs	r3, #1
 80138fc:	e7fb      	b.n	80138f6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80138fe:	2302      	movs	r3, #2
 8013900:	e7f9      	b.n	80138f6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08013902 <Sscan::checkName(char const*, char const*)>:
 8013902:	b510      	push	{r4, lr}
 8013904:	3901      	subs	r1, #1
 8013906:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801390a:	4604      	mov	r4, r0
 801390c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013910:	b123      	cbz	r3, 801391c <Sscan::checkName(char const*, char const*)+0x1a>
 8013912:	b10a      	cbz	r2, 8013918 <Sscan::checkName(char const*, char const*)+0x16>
 8013914:	4293      	cmp	r3, r2
 8013916:	d0f6      	beq.n	8013906 <Sscan::checkName(char const*, char const*)+0x4>
 8013918:	2000      	movs	r0, #0
 801391a:	e006      	b.n	801392a <Sscan::checkName(char const*, char const*)+0x28>
 801391c:	2a3d      	cmp	r2, #61	; 0x3d
 801391e:	d1fb      	bne.n	8013918 <Sscan::checkName(char const*, char const*)+0x16>
 8013920:	7860      	ldrb	r0, [r4, #1]
 8013922:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8013926:	d000      	beq.n	801392a <Sscan::checkName(char const*, char const*)+0x28>
 8013928:	1c60      	adds	r0, r4, #1
 801392a:	bd10      	pop	{r4, pc}

0801392c <LightSet::GetDmxStartAddress()>:
 801392c:	2001      	movs	r0, #1
 801392e:	4770      	bx	lr

08013930 <LightSet::GetDmxFootprint()>:
 8013930:	f44f 7000 	mov.w	r0, #512	; 0x200
 8013934:	4770      	bx	lr

08013936 <LightSet::SetDmxStartAddress(unsigned short)>:
 8013936:	2000      	movs	r0, #0
 8013938:	4770      	bx	lr

0801393a <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 801393a:	2300      	movs	r3, #0
 801393c:	2001      	movs	r0, #1
 801393e:	7093      	strb	r3, [r2, #2]
 8013940:	8010      	strh	r0, [r2, #0]
 8013942:	4770      	bx	lr

08013944 <Display::PrintInfo() [clone .isra.0]>:
 8013944:	b910      	cbnz	r0, 801394c <Display::PrintInfo() [clone .isra.0]+0x8>
 8013946:	4803      	ldr	r0, [pc, #12]	; (8013954 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8013948:	f000 bd51 	b.w	80143ee <puts>
 801394c:	6803      	ldr	r3, [r0, #0]
 801394e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013950:	4718      	bx	r3
 8013952:	bf00      	nop
 8013954:	0801987d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, fp, ip, pc}

08013958 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8013958:	b513      	push	{r0, r1, r4, lr}
 801395a:	4604      	mov	r4, r0
 801395c:	0a13      	lsrs	r3, r2, #8
 801395e:	7800      	ldrb	r0, [r0, #0]
 8013960:	f88d 1004 	strb.w	r1, [sp, #4]
 8013964:	f88d 3005 	strb.w	r3, [sp, #5]
 8013968:	f88d 2006 	strb.w	r2, [sp, #6]
 801396c:	f002 f996 	bl	8015c9c <gd32_i2c_set_address>
 8013970:	6860      	ldr	r0, [r4, #4]
 8013972:	f002 f98b 	bl	8015c8c <gd32_i2c_set_baudrate>
 8013976:	2103      	movs	r1, #3
 8013978:	a801      	add	r0, sp, #4
 801397a:	f002 f995 	bl	8015ca8 <gd32_i2c_write>
 801397e:	b002      	add	sp, #8
 8013980:	bd10      	pop	{r4, pc}

08013982 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8013982:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013984:	460d      	mov	r5, r1
 8013986:	4604      	mov	r4, r0
 8013988:	f002 f988 	bl	8015c9c <gd32_i2c_set_address>
 801398c:	4628      	mov	r0, r5
 801398e:	f002 f97d 	bl	8015c8c <gd32_i2c_set_baudrate>
 8013992:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013996:	2b07      	cmp	r3, #7
 8013998:	d902      	bls.n	80139a0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801399a:	3c50      	subs	r4, #80	; 0x50
 801399c:	2c0f      	cmp	r4, #15
 801399e:	d809      	bhi.n	80139b4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80139a0:	2101      	movs	r1, #1
 80139a2:	f10d 0007 	add.w	r0, sp, #7
 80139a6:	f002 f9e5 	bl	8015d74 <gd32_i2c_read>
 80139aa:	fab0 f080 	clz	r0, r0
 80139ae:	0940      	lsrs	r0, r0, #5
 80139b0:	b003      	add	sp, #12
 80139b2:	bd30      	pop	{r4, r5, pc}
 80139b4:	2100      	movs	r1, #0
 80139b6:	4608      	mov	r0, r1
 80139b8:	f002 f976 	bl	8015ca8 <gd32_i2c_write>
 80139bc:	e7f5      	b.n	80139aa <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080139be <Display::Detect7Segment()>:
 80139be:	b513      	push	{r0, r1, r4, lr}
 80139c0:	68c1      	ldr	r1, [r0, #12]
 80139c2:	4604      	mov	r4, r0
 80139c4:	7a00      	ldrb	r0, [r0, #8]
 80139c6:	f7ff ffdc 	bl	8013982 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80139ca:	7460      	strb	r0, [r4, #17]
 80139cc:	b170      	cbz	r0, 80139ec <Display::Detect7Segment()+0x2e>
 80139ce:	2200      	movs	r2, #0
 80139d0:	f104 0008 	add.w	r0, r4, #8
 80139d4:	4611      	mov	r1, r2
 80139d6:	9001      	str	r0, [sp, #4]
 80139d8:	f7ff ffbe 	bl	8013958 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80139dc:	7c63      	ldrb	r3, [r4, #17]
 80139de:	9801      	ldr	r0, [sp, #4]
 80139e0:	b123      	cbz	r3, 80139ec <Display::Detect7Segment()+0x2e>
 80139e2:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80139e6:	2112      	movs	r1, #18
 80139e8:	f7ff ffb6 	bl	8013958 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80139ec:	b002      	add	sp, #8
 80139ee:	bd10      	pop	{r4, pc}

080139f0 <Display::Detect(display::Type)>:
 80139f0:	2902      	cmp	r1, #2
 80139f2:	b538      	push	{r3, r4, r5, lr}
 80139f4:	4604      	mov	r4, r0
 80139f6:	d014      	beq.n	8013a22 <Display::Detect(display::Type)+0x32>
 80139f8:	2904      	cmp	r1, #4
 80139fa:	d01b      	beq.n	8013a34 <Display::Detect(display::Type)+0x44>
 80139fc:	69a0      	ldr	r0, [r4, #24]
 80139fe:	b168      	cbz	r0, 8013a1c <Display::Detect(display::Type)+0x2c>
 8013a00:	6803      	ldr	r3, [r0, #0]
 8013a02:	689b      	ldr	r3, [r3, #8]
 8013a04:	4798      	blx	r3
 8013a06:	69a3      	ldr	r3, [r4, #24]
 8013a08:	b9b0      	cbnz	r0, 8013a38 <Display::Detect(display::Type)+0x48>
 8013a0a:	b11b      	cbz	r3, 8013a14 <Display::Detect(display::Type)+0x24>
 8013a0c:	681a      	ldr	r2, [r3, #0]
 8013a0e:	4618      	mov	r0, r3
 8013a10:	6852      	ldr	r2, [r2, #4]
 8013a12:	4790      	blx	r2
 8013a14:	2300      	movs	r3, #0
 8013a16:	61a3      	str	r3, [r4, #24]
 8013a18:	2304      	movs	r3, #4
 8013a1a:	6023      	str	r3, [r4, #0]
 8013a1c:	2300      	movs	r3, #0
 8013a1e:	6163      	str	r3, [r4, #20]
 8013a20:	e011      	b.n	8013a46 <Display::Detect(display::Type)+0x56>
 8013a22:	2018      	movs	r0, #24
 8013a24:	f000 fbec 	bl	8014200 <operator new(unsigned int)>
 8013a28:	2100      	movs	r1, #0
 8013a2a:	4605      	mov	r5, r0
 8013a2c:	f000 f896 	bl	8013b5c <Ssd1306::Ssd1306(TOledPanel)>
 8013a30:	61a5      	str	r5, [r4, #24]
 8013a32:	e7e3      	b.n	80139fc <Display::Detect(display::Type)+0xc>
 8013a34:	6001      	str	r1, [r0, #0]
 8013a36:	e7e1      	b.n	80139fc <Display::Detect(display::Type)+0xc>
 8013a38:	681a      	ldr	r2, [r3, #0]
 8013a3a:	4618      	mov	r0, r3
 8013a3c:	68d2      	ldr	r2, [r2, #12]
 8013a3e:	4790      	blx	r2
 8013a40:	69a3      	ldr	r3, [r4, #24]
 8013a42:	2b00      	cmp	r3, #0
 8013a44:	d0ea      	beq.n	8013a1c <Display::Detect(display::Type)+0x2c>
 8013a46:	bd38      	pop	{r3, r4, r5, pc}

08013a48 <Display::Display()>:
 8013a48:	2304      	movs	r3, #4
 8013a4a:	b510      	push	{r4, lr}
 8013a4c:	6003      	str	r3, [r0, #0]
 8013a4e:	4b0f      	ldr	r3, [pc, #60]	; (8013a8c <Display::Display()+0x44>)
 8013a50:	4a0f      	ldr	r2, [pc, #60]	; (8013a90 <Display::Display()+0x48>)
 8013a52:	681b      	ldr	r3, [r3, #0]
 8013a54:	6043      	str	r3, [r0, #4]
 8013a56:	2321      	movs	r3, #33	; 0x21
 8013a58:	7203      	strb	r3, [r0, #8]
 8013a5a:	4b0e      	ldr	r3, [pc, #56]	; (8013a94 <Display::Display()+0x4c>)
 8013a5c:	60c3      	str	r3, [r0, #12]
 8013a5e:	2300      	movs	r3, #0
 8013a60:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8013a64:	8203      	strh	r3, [r0, #16]
 8013a66:	4b0c      	ldr	r3, [pc, #48]	; (8013a98 <Display::Display()+0x50>)
 8013a68:	4604      	mov	r4, r0
 8013a6a:	2102      	movs	r1, #2
 8013a6c:	6018      	str	r0, [r3, #0]
 8013a6e:	f7ff ffbf 	bl	80139f0 <Display::Detect(display::Type)>
 8013a72:	4620      	mov	r0, r4
 8013a74:	f7ff ffa3 	bl	80139be <Display::Detect7Segment()>
 8013a78:	69a3      	ldr	r3, [r4, #24]
 8013a7a:	b10b      	cbz	r3, 8013a80 <Display::Display()+0x38>
 8013a7c:	f7f5 fc9c 	bl	80093b8 <display::timeout::gpio_init()>
 8013a80:	69a0      	ldr	r0, [r4, #24]
 8013a82:	f7ff ff5f 	bl	8013944 <Display::PrintInfo() [clone .isra.0]>
 8013a86:	4620      	mov	r0, r4
 8013a88:	bd10      	pop	{r4, pc}
 8013a8a:	bf00      	nop
 8013a8c:	2000fedc 	ldrdcs	pc, [r0], -ip
 8013a90:	000493e0 	andeq	r9, r4, r0, ror #7
 8013a94:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013a98:	2000fdd4 	ldrdcs	pc, [r0], -r4

08013a9c <Ssd1306::~Ssd1306()>:
 8013a9c:	4770      	bx	lr

08013a9e <Ssd1306::SetCursor(unsigned int)>:
 8013a9e:	4770      	bx	lr

08013aa0 <Ssd1306::PrintInfo()>:
 8013aa0:	b410      	push	{r4}
 8013aa2:	4906      	ldr	r1, [pc, #24]	; (8013abc <Ssd1306::PrintInfo()+0x1c>)
 8013aa4:	7c44      	ldrb	r4, [r0, #17]
 8013aa6:	7903      	ldrb	r3, [r0, #4]
 8013aa8:	7942      	ldrb	r2, [r0, #5]
 8013aaa:	4805      	ldr	r0, [pc, #20]	; (8013ac0 <Ssd1306::PrintInfo()+0x20>)
 8013aac:	2c00      	cmp	r4, #0
 8013aae:	bf08      	it	eq
 8013ab0:	4601      	moveq	r1, r0
 8013ab2:	4804      	ldr	r0, [pc, #16]	; (8013ac4 <Ssd1306::PrintInfo()+0x24>)
 8013ab4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013ab8:	f7f6 bc06 	b.w	800a2c8 <printf>
 8013abc:	0801988e 	stmdaeq	r1, {r1, r2, r3, r7, fp, ip, pc}
 8013ac0:	08019895 	stmdaeq	r1, {r0, r2, r4, r7, fp, ip, pc}
 8013ac4:	0801989d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, ip, pc}

08013ac8 <Ssd1306::~Ssd1306()>:
 8013ac8:	b510      	push	{r4, lr}
 8013aca:	4604      	mov	r4, r0
 8013acc:	f000 fb94 	bl	80141f8 <operator delete(void*)>
 8013ad0:	4620      	mov	r0, r4
 8013ad2:	bd10      	pop	{r4, pc}

08013ad4 <Ssd1306::PutChar(int)>:
 8013ad4:	b510      	push	{r4, lr}
 8013ad6:	3920      	subs	r1, #32
 8013ad8:	295f      	cmp	r1, #95	; 0x5f
 8013ada:	f100 0008 	add.w	r0, r0, #8
 8013ade:	bf94      	ite	ls
 8013ae0:	460c      	movls	r4, r1
 8013ae2:	2400      	movhi	r4, #0
 8013ae4:	f7ff fa6c 	bl	8012fc0 <HAL_I2C::Setup()>
 8013ae8:	4804      	ldr	r0, [pc, #16]	; (8013afc <Ssd1306::PutChar(int)+0x28>)
 8013aea:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013aee:	4420      	add	r0, r4
 8013af0:	2107      	movs	r1, #7
 8013af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013af6:	f002 b8d7 	b.w	8015ca8 <gd32_i2c_write>
 8013afa:	bf00      	nop
 8013afc:	080198b0 	stmdaeq	r1, {r4, r5, r7, fp, ip, pc}

08013b00 <Ssd1306::PutString(char const*)>:
 8013b00:	b538      	push	{r3, r4, r5, lr}
 8013b02:	4605      	mov	r5, r0
 8013b04:	1e4c      	subs	r4, r1, #1
 8013b06:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8013b0a:	b901      	cbnz	r1, 8013b0e <Ssd1306::PutString(char const*)+0xe>
 8013b0c:	bd38      	pop	{r3, r4, r5, pc}
 8013b0e:	4628      	mov	r0, r5
 8013b10:	f7ff ffe0 	bl	8013ad4 <Ssd1306::PutChar(int)>
 8013b14:	e7f7      	b.n	8013b06 <Ssd1306::PutString(char const*)+0x6>

08013b16 <Ssd1306::Text(char const*, unsigned int)>:
 8013b16:	b570      	push	{r4, r5, r6, lr}
 8013b18:	7903      	ldrb	r3, [r0, #4]
 8013b1a:	4605      	mov	r5, r0
 8013b1c:	460c      	mov	r4, r1
 8013b1e:	4293      	cmp	r3, r2
 8013b20:	bf94      	ite	ls
 8013b22:	18ce      	addls	r6, r1, r3
 8013b24:	188e      	addhi	r6, r1, r2
 8013b26:	42b4      	cmp	r4, r6
 8013b28:	d100      	bne.n	8013b2c <Ssd1306::Text(char const*, unsigned int)+0x16>
 8013b2a:	bd70      	pop	{r4, r5, r6, pc}
 8013b2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013b30:	4628      	mov	r0, r5
 8013b32:	f7ff ffcf 	bl	8013ad4 <Ssd1306::PutChar(int)>
 8013b36:	e7f6      	b.n	8013b26 <Ssd1306::Text(char const*, unsigned int)+0x10>

08013b38 <Ssd1306::InitMembers()>:
 8013b38:	7c03      	ldrb	r3, [r0, #16]
 8013b3a:	b14b      	cbz	r3, 8013b50 <Ssd1306::InitMembers()+0x18>
 8013b3c:	3b01      	subs	r3, #1
 8013b3e:	2b01      	cmp	r3, #1
 8013b40:	d909      	bls.n	8013b56 <Ssd1306::InitMembers()+0x1e>
 8013b42:	2308      	movs	r3, #8
 8013b44:	2204      	movs	r2, #4
 8013b46:	2115      	movs	r1, #21
 8013b48:	7101      	strb	r1, [r0, #4]
 8013b4a:	7143      	strb	r3, [r0, #5]
 8013b4c:	6142      	str	r2, [r0, #20]
 8013b4e:	4770      	bx	lr
 8013b50:	2308      	movs	r3, #8
 8013b52:	461a      	mov	r2, r3
 8013b54:	e7f7      	b.n	8013b46 <Ssd1306::InitMembers()+0xe>
 8013b56:	2304      	movs	r3, #4
 8013b58:	e7fb      	b.n	8013b52 <Ssd1306::InitMembers()+0x1a>
	...

08013b5c <Ssd1306::Ssd1306(TOledPanel)>:
 8013b5c:	4a08      	ldr	r2, [pc, #32]	; (8013b80 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8013b5e:	6002      	str	r2, [r0, #0]
 8013b60:	227f      	movs	r2, #127	; 0x7f
 8013b62:	b508      	push	{r3, lr}
 8013b64:	80c2      	strh	r2, [r0, #6]
 8013b66:	223c      	movs	r2, #60	; 0x3c
 8013b68:	7202      	strb	r2, [r0, #8]
 8013b6a:	4a06      	ldr	r2, [pc, #24]	; (8013b84 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8013b6c:	60c2      	str	r2, [r0, #12]
 8013b6e:	2200      	movs	r2, #0
 8013b70:	7442      	strb	r2, [r0, #17]
 8013b72:	4a05      	ldr	r2, [pc, #20]	; (8013b88 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8013b74:	7401      	strb	r1, [r0, #16]
 8013b76:	6010      	str	r0, [r2, #0]
 8013b78:	f7ff ffde 	bl	8013b38 <Ssd1306::InitMembers()>
 8013b7c:	bd08      	pop	{r3, pc}
 8013b7e:	bf00      	nop
 8013b80:	08019b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip, pc}
 8013b84:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013b88:	2000fe60 	andcs	pc, r0, r0, ror #28

08013b8c <Ssd1306::SendCommand(unsigned char)>:
 8013b8c:	b507      	push	{r0, r1, r2, lr}
 8013b8e:	2300      	movs	r3, #0
 8013b90:	3008      	adds	r0, #8
 8013b92:	f88d 3004 	strb.w	r3, [sp, #4]
 8013b96:	f88d 1005 	strb.w	r1, [sp, #5]
 8013b9a:	f7ff fa11 	bl	8012fc0 <HAL_I2C::Setup()>
 8013b9e:	2102      	movs	r1, #2
 8013ba0:	a801      	add	r0, sp, #4
 8013ba2:	f002 f881 	bl	8015ca8 <gd32_i2c_write>
 8013ba6:	b003      	add	sp, #12
 8013ba8:	f85d fb04 	ldr.w	pc, [sp], #4

08013bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8013bac:	2914      	cmp	r1, #20
 8013bae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013bb0:	4615      	mov	r5, r2
 8013bb2:	d81d      	bhi.n	8013bf0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8013bb4:	7943      	ldrb	r3, [r0, #5]
 8013bb6:	4293      	cmp	r3, r2
 8013bb8:	d91a      	bls.n	8013bf0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8013bba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013bbe:	7c43      	ldrb	r3, [r0, #17]
 8013bc0:	004c      	lsls	r4, r1, #1
 8013bc2:	b2e4      	uxtb	r4, r4
 8013bc4:	b10b      	cbz	r3, 8013bca <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 8013bc6:	3404      	adds	r4, #4
 8013bc8:	b2e4      	uxtb	r4, r4
 8013bca:	f004 010e 	and.w	r1, r4, #14
 8013bce:	9001      	str	r0, [sp, #4]
 8013bd0:	f7ff ffdc 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013bd4:	0921      	lsrs	r1, r4, #4
 8013bd6:	9801      	ldr	r0, [sp, #4]
 8013bd8:	f041 0110 	orr.w	r1, r1, #16
 8013bdc:	f7ff ffd6 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013be0:	9801      	ldr	r0, [sp, #4]
 8013be2:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 8013be6:	b003      	add	sp, #12
 8013be8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013bec:	f7ff bfce 	b.w	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013bf0:	b003      	add	sp, #12
 8013bf2:	bd30      	pop	{r4, r5, pc}

08013bf4 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8013bf4:	b5e0      	push	{r5, r6, r7, lr}
 8013bf6:	461f      	mov	r7, r3
 8013bf8:	7943      	ldrb	r3, [r0, #5]
 8013bfa:	428b      	cmp	r3, r1
 8013bfc:	4605      	mov	r5, r0
 8013bfe:	4616      	mov	r6, r2
 8013c00:	d30b      	bcc.n	8013c1a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8013c02:	1e4a      	subs	r2, r1, #1
 8013c04:	b2d2      	uxtb	r2, r2
 8013c06:	2100      	movs	r1, #0
 8013c08:	f7ff ffd0 	bl	8013bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013c0c:	463a      	mov	r2, r7
 8013c0e:	4631      	mov	r1, r6
 8013c10:	4628      	mov	r0, r5
 8013c12:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8013c16:	f7ff bf7e 	b.w	8013b16 <Ssd1306::Text(char const*, unsigned int)>
 8013c1a:	bde0      	pop	{r5, r6, r7, pc}

08013c1c <Ssd1306::ClearLine(unsigned char)>:
 8013c1c:	b513      	push	{r0, r1, r4, lr}
 8013c1e:	7943      	ldrb	r3, [r0, #5]
 8013c20:	428b      	cmp	r3, r1
 8013c22:	4604      	mov	r4, r0
 8013c24:	d315      	bcc.n	8013c52 <Ssd1306::ClearLine(unsigned char)+0x36>
 8013c26:	1e4a      	subs	r2, r1, #1
 8013c28:	b2d2      	uxtb	r2, r2
 8013c2a:	2100      	movs	r1, #0
 8013c2c:	9201      	str	r2, [sp, #4]
 8013c2e:	f7ff ffbd 	bl	8013bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013c32:	f104 0008 	add.w	r0, r4, #8
 8013c36:	f7ff f9c3 	bl	8012fc0 <HAL_I2C::Setup()>
 8013c3a:	2181      	movs	r1, #129	; 0x81
 8013c3c:	4806      	ldr	r0, [pc, #24]	; (8013c58 <Ssd1306::ClearLine(unsigned char)+0x3c>)
 8013c3e:	f002 f833 	bl	8015ca8 <gd32_i2c_write>
 8013c42:	9a01      	ldr	r2, [sp, #4]
 8013c44:	2100      	movs	r1, #0
 8013c46:	4620      	mov	r0, r4
 8013c48:	b002      	add	sp, #8
 8013c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c4e:	f7ff bfad 	b.w	8013bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013c52:	b002      	add	sp, #8
 8013c54:	bd10      	pop	{r4, pc}
 8013c56:	bf00      	nop
 8013c58:	2000fdd8 	ldrdcs	pc, [r0], -r8

08013c5c <Ssd1306::SetSleep(bool)>:
 8013c5c:	b111      	cbz	r1, 8013c64 <Ssd1306::SetSleep(bool)+0x8>
 8013c5e:	21ae      	movs	r1, #174	; 0xae
 8013c60:	f7ff bf94 	b.w	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013c64:	21af      	movs	r1, #175	; 0xaf
 8013c66:	e7fb      	b.n	8013c60 <Ssd1306::SetSleep(bool)+0x4>

08013c68 <Ssd1306::SetContrast(unsigned char)>:
 8013c68:	b538      	push	{r3, r4, r5, lr}
 8013c6a:	4604      	mov	r4, r0
 8013c6c:	460d      	mov	r5, r1
 8013c6e:	7181      	strb	r1, [r0, #6]
 8013c70:	2181      	movs	r1, #129	; 0x81
 8013c72:	f7ff ff8b 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013c76:	4629      	mov	r1, r5
 8013c78:	4620      	mov	r0, r4
 8013c7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013c7e:	f7ff bf85 	b.w	8013b8c <Ssd1306::SendCommand(unsigned char)>

08013c82 <Ssd1306::SetFlipVertically(bool)>:
 8013c82:	b510      	push	{r4, lr}
 8013c84:	4604      	mov	r4, r0
 8013c86:	71c1      	strb	r1, [r0, #7]
 8013c88:	b141      	cbz	r1, 8013c9c <Ssd1306::SetFlipVertically(bool)+0x1a>
 8013c8a:	21c0      	movs	r1, #192	; 0xc0
 8013c8c:	f7ff ff7e 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013c90:	21a0      	movs	r1, #160	; 0xa0
 8013c92:	4620      	mov	r0, r4
 8013c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c98:	f7ff bf78 	b.w	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013c9c:	21c8      	movs	r1, #200	; 0xc8
 8013c9e:	f7ff ff75 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013ca2:	21a1      	movs	r1, #161	; 0xa1
 8013ca4:	e7f5      	b.n	8013c92 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08013ca8 <Ssd1306::CheckSH1106()>:
 8013ca8:	b530      	push	{r4, r5, lr}
 8013caa:	2100      	movs	r1, #0
 8013cac:	b087      	sub	sp, #28
 8013cae:	4604      	mov	r4, r0
 8013cb0:	f7ff ff6c 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cb4:	2190      	movs	r1, #144	; 0x90
 8013cb6:	4620      	mov	r0, r4
 8013cb8:	f7ff ff68 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cbc:	21b0      	movs	r1, #176	; 0xb0
 8013cbe:	4620      	mov	r0, r4
 8013cc0:	f7ff ff64 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cc4:	4b22      	ldr	r3, [pc, #136]	; (8013d50 <Ssd1306::CheckSH1106()+0xa8>)
 8013cc6:	f104 0508 	add.w	r5, r4, #8
 8013cca:	6818      	ldr	r0, [r3, #0]
 8013ccc:	9002      	str	r0, [sp, #8]
 8013cce:	791b      	ldrb	r3, [r3, #4]
 8013cd0:	f88d 300c 	strb.w	r3, [sp, #12]
 8013cd4:	4628      	mov	r0, r5
 8013cd6:	f7ff f973 	bl	8012fc0 <HAL_I2C::Setup()>
 8013cda:	2105      	movs	r1, #5
 8013cdc:	a802      	add	r0, sp, #8
 8013cde:	f001 ffe3 	bl	8015ca8 <gd32_i2c_write>
 8013ce2:	2100      	movs	r1, #0
 8013ce4:	4620      	mov	r0, r4
 8013ce6:	f7ff ff51 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cea:	2190      	movs	r1, #144	; 0x90
 8013cec:	4620      	mov	r0, r4
 8013cee:	f7ff ff4d 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cf2:	21b0      	movs	r1, #176	; 0xb0
 8013cf4:	4620      	mov	r0, r4
 8013cf6:	f7ff ff49 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013cfa:	2300      	movs	r3, #0
 8013cfc:	9304      	str	r3, [sp, #16]
 8013cfe:	f88d 3014 	strb.w	r3, [sp, #20]
 8013d02:	4628      	mov	r0, r5
 8013d04:	2340      	movs	r3, #64	; 0x40
 8013d06:	f88d 3007 	strb.w	r3, [sp, #7]
 8013d0a:	f7ff f959 	bl	8012fc0 <HAL_I2C::Setup()>
 8013d0e:	2101      	movs	r1, #1
 8013d10:	f10d 0007 	add.w	r0, sp, #7
 8013d14:	f001 ffc8 	bl	8015ca8 <gd32_i2c_write>
 8013d18:	4628      	mov	r0, r5
 8013d1a:	f7ff f951 	bl	8012fc0 <HAL_I2C::Setup()>
 8013d1e:	2105      	movs	r1, #5
 8013d20:	a804      	add	r0, sp, #16
 8013d22:	f002 f827 	bl	8015d74 <gd32_i2c_read>
 8013d26:	aa02      	add	r2, sp, #8
 8013d28:	a904      	add	r1, sp, #16
 8013d2a:	2004      	movs	r0, #4
 8013d2c:	3801      	subs	r0, #1
 8013d2e:	d201      	bcs.n	8013d34 <Ssd1306::CheckSH1106()+0x8c>
 8013d30:	2300      	movs	r3, #0
 8013d32:	e006      	b.n	8013d42 <Ssd1306::CheckSH1106()+0x9a>
 8013d34:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8013d38:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8013d3c:	42ab      	cmp	r3, r5
 8013d3e:	d0f5      	beq.n	8013d2c <Ssd1306::CheckSH1106()+0x84>
 8013d40:	1b5b      	subs	r3, r3, r5
 8013d42:	fab3 f383 	clz	r3, r3
 8013d46:	095b      	lsrs	r3, r3, #5
 8013d48:	7463      	strb	r3, [r4, #17]
 8013d4a:	b007      	add	sp, #28
 8013d4c:	bd30      	pop	{r4, r5, pc}
 8013d4e:	bf00      	nop
 8013d50:	080198a9 	stmdaeq	r1, {r0, r3, r5, r7, fp, ip, pc}

08013d54 <Ssd1306::Cls()>:
 8013d54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d58:	7c45      	ldrb	r5, [r0, #17]
 8013d5a:	00ad      	lsls	r5, r5, #2
 8013d5c:	b2ed      	uxtb	r5, r5
 8013d5e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8013d62:	4604      	mov	r4, r0
 8013d64:	2600      	movs	r6, #0
 8013d66:	f045 0810 	orr.w	r8, r5, #16
 8013d6a:	b2ff      	uxtb	r7, r7
 8013d6c:	6963      	ldr	r3, [r4, #20]
 8013d6e:	42b3      	cmp	r3, r6
 8013d70:	4629      	mov	r1, r5
 8013d72:	4620      	mov	r0, r4
 8013d74:	d80b      	bhi.n	8013d8e <Ssd1306::Cls()+0x3a>
 8013d76:	f7ff ff09 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013d7a:	4641      	mov	r1, r8
 8013d7c:	4620      	mov	r0, r4
 8013d7e:	f7ff ff05 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013d82:	4620      	mov	r0, r4
 8013d84:	21b0      	movs	r1, #176	; 0xb0
 8013d86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013d8a:	f7ff beff 	b.w	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013d8e:	f7ff fefd 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013d92:	4641      	mov	r1, r8
 8013d94:	4620      	mov	r0, r4
 8013d96:	f7ff fef9 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013d9a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8013d9e:	b2c9      	uxtb	r1, r1
 8013da0:	4620      	mov	r0, r4
 8013da2:	f7ff fef3 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013da6:	7c23      	ldrb	r3, [r4, #16]
 8013da8:	b123      	cbz	r3, 8013db4 <Ssd1306::Cls()+0x60>
 8013daa:	3b01      	subs	r3, #1
 8013dac:	2b01      	cmp	r3, #1
 8013dae:	d901      	bls.n	8013db4 <Ssd1306::Cls()+0x60>
 8013db0:	3601      	adds	r6, #1
 8013db2:	e7db      	b.n	8013d6c <Ssd1306::Cls()+0x18>
 8013db4:	f104 0008 	add.w	r0, r4, #8
 8013db8:	f7ff f902 	bl	8012fc0 <HAL_I2C::Setup()>
 8013dbc:	4639      	mov	r1, r7
 8013dbe:	4802      	ldr	r0, [pc, #8]	; (8013dc8 <Ssd1306::Cls()+0x74>)
 8013dc0:	f001 ff72 	bl	8015ca8 <gd32_i2c_write>
 8013dc4:	e7f4      	b.n	8013db0 <Ssd1306::Cls()+0x5c>
 8013dc6:	bf00      	nop
 8013dc8:	2000fdd8 	ldrdcs	pc, [r0], -r8

08013dcc <Ssd1306::Start()>:
 8013dcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013dce:	7a04      	ldrb	r4, [r0, #8]
 8013dd0:	68c6      	ldr	r6, [r0, #12]
 8013dd2:	4605      	mov	r5, r0
 8013dd4:	4620      	mov	r0, r4
 8013dd6:	f001 ff61 	bl	8015c9c <gd32_i2c_set_address>
 8013dda:	4630      	mov	r0, r6
 8013ddc:	f001 ff56 	bl	8015c8c <gd32_i2c_set_baudrate>
 8013de0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013de4:	2b07      	cmp	r3, #7
 8013de6:	d902      	bls.n	8013dee <Ssd1306::Start()+0x22>
 8013de8:	3c50      	subs	r4, #80	; 0x50
 8013dea:	2c0f      	cmp	r4, #15
 8013dec:	d80f      	bhi.n	8013e0e <Ssd1306::Start()+0x42>
 8013dee:	2101      	movs	r1, #1
 8013df0:	f10d 0007 	add.w	r0, sp, #7
 8013df4:	f001 ffbe 	bl	8015d74 <gd32_i2c_read>
 8013df8:	fab0 f480 	clz	r4, r0
 8013dfc:	0964      	lsrs	r4, r4, #5
 8013dfe:	b35c      	cbz	r4, 8013e58 <Ssd1306::Start()+0x8c>
 8013e00:	7c2e      	ldrb	r6, [r5, #16]
 8013e02:	b14e      	cbz	r6, 8013e18 <Ssd1306::Start()+0x4c>
 8013e04:	3e01      	subs	r6, #1
 8013e06:	2e01      	cmp	r6, #1
 8013e08:	d929      	bls.n	8013e5e <Ssd1306::Start()+0x92>
 8013e0a:	2400      	movs	r4, #0
 8013e0c:	e024      	b.n	8013e58 <Ssd1306::Start()+0x8c>
 8013e0e:	2100      	movs	r1, #0
 8013e10:	4608      	mov	r0, r1
 8013e12:	f001 ff49 	bl	8015ca8 <gd32_i2c_write>
 8013e16:	e7ef      	b.n	8013df8 <Ssd1306::Start()+0x2c>
 8013e18:	4f16      	ldr	r7, [pc, #88]	; (8013e74 <Ssd1306::Start()+0xa8>)
 8013e1a:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013e1e:	4628      	mov	r0, r5
 8013e20:	3601      	adds	r6, #1
 8013e22:	f7ff feb3 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013e26:	2e18      	cmp	r6, #24
 8013e28:	d1f7      	bne.n	8013e1a <Ssd1306::Start()+0x4e>
 8013e2a:	4a13      	ldr	r2, [pc, #76]	; (8013e78 <Ssd1306::Start()+0xac>)
 8013e2c:	2300      	movs	r3, #0
 8013e2e:	4611      	mov	r1, r2
 8013e30:	4618      	mov	r0, r3
 8013e32:	3301      	adds	r3, #1
 8013e34:	2b86      	cmp	r3, #134	; 0x86
 8013e36:	f802 0b01 	strb.w	r0, [r2], #1
 8013e3a:	d1fa      	bne.n	8013e32 <Ssd1306::Start()+0x66>
 8013e3c:	2340      	movs	r3, #64	; 0x40
 8013e3e:	700b      	strb	r3, [r1, #0]
 8013e40:	4628      	mov	r0, r5
 8013e42:	f7ff ff31 	bl	8013ca8 <Ssd1306::CheckSH1106()>
 8013e46:	4628      	mov	r0, r5
 8013e48:	f7ff ff84 	bl	8013d54 <Ssd1306::Cls()>
 8013e4c:	21af      	movs	r1, #175	; 0xaf
 8013e4e:	4628      	mov	r0, r5
 8013e50:	f7ff fe9c 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013e54:	2301      	movs	r3, #1
 8013e56:	71eb      	strb	r3, [r5, #7]
 8013e58:	4620      	mov	r0, r4
 8013e5a:	b003      	add	sp, #12
 8013e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e5e:	4f07      	ldr	r7, [pc, #28]	; (8013e7c <Ssd1306::Start()+0xb0>)
 8013e60:	2600      	movs	r6, #0
 8013e62:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013e66:	4628      	mov	r0, r5
 8013e68:	3601      	adds	r6, #1
 8013e6a:	f7ff fe8f 	bl	8013b8c <Ssd1306::SendCommand(unsigned char)>
 8013e6e:	2e18      	cmp	r6, #24
 8013e70:	d1f7      	bne.n	8013e62 <Ssd1306::Start()+0x96>
 8013e72:	e7da      	b.n	8013e2a <Ssd1306::Start()+0x5e>
 8013e74:	08019b68 	stmdaeq	r1, {r3, r5, r6, r8, r9, fp, ip, pc}
 8013e78:	2000fdd8 	ldrdcs	pc, [r0], -r8
 8013e7c:	08019b50 	stmdaeq	r1, {r4, r6, r8, r9, fp, ip, pc}

08013e80 <console_putc>:
 8013e80:	f000 bbb8 	b.w	80145f4 <uart0_putc>

08013e84 <console_puts>:
 8013e84:	f000 bbd0 	b.w	8014628 <uart0_puts>

08013e88 <console_set_fg_color>:
 8013e88:	2807      	cmp	r0, #7
 8013e8a:	d810      	bhi.n	8013eae <console_set_fg_color+0x26>
 8013e8c:	e8df f000 	tbb	[pc, r0]
 8013e90:	0b090704 	bleq	8255aa8 <__exidx_end+0x23bdec>
 8013e94:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8013e60 <Ssd1306::Start()+0x94>
 8013e98:	4806      	ldr	r0, [pc, #24]	; (8013eb4 <console_set_fg_color+0x2c>)
 8013e9a:	f000 bbc5 	b.w	8014628 <uart0_puts>
 8013e9e:	4806      	ldr	r0, [pc, #24]	; (8013eb8 <console_set_fg_color+0x30>)
 8013ea0:	e7fb      	b.n	8013e9a <console_set_fg_color+0x12>
 8013ea2:	4806      	ldr	r0, [pc, #24]	; (8013ebc <console_set_fg_color+0x34>)
 8013ea4:	e7f9      	b.n	8013e9a <console_set_fg_color+0x12>
 8013ea6:	4806      	ldr	r0, [pc, #24]	; (8013ec0 <console_set_fg_color+0x38>)
 8013ea8:	e7f7      	b.n	8013e9a <console_set_fg_color+0x12>
 8013eaa:	4806      	ldr	r0, [pc, #24]	; (8013ec4 <console_set_fg_color+0x3c>)
 8013eac:	e7f5      	b.n	8013e9a <console_set_fg_color+0x12>
 8013eae:	4806      	ldr	r0, [pc, #24]	; (8013ec8 <console_set_fg_color+0x40>)
 8013eb0:	e7f3      	b.n	8013e9a <console_set_fg_color+0x12>
 8013eb2:	bf00      	nop
 8013eb4:	08019bc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, fp, ip, pc}
 8013eb8:	08019bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, pc}
 8013ebc:	08019bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, ip, pc}
 8013ec0:	08019bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, ip, pc}
 8013ec4:	080168f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, fp, sp, lr}
 8013ec8:	08019bde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, fp, ip, pc}

08013ecc <console_error>:
 8013ecc:	b510      	push	{r4, lr}
 8013ece:	4604      	mov	r4, r0
 8013ed0:	4805      	ldr	r0, [pc, #20]	; (8013ee8 <console_error+0x1c>)
 8013ed2:	f000 fba9 	bl	8014628 <uart0_puts>
 8013ed6:	4620      	mov	r0, r4
 8013ed8:	f000 fba6 	bl	8014628 <uart0_puts>
 8013edc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ee0:	4802      	ldr	r0, [pc, #8]	; (8013eec <console_error+0x20>)
 8013ee2:	f000 bba1 	b.w	8014628 <uart0_puts>
 8013ee6:	bf00      	nop
 8013ee8:	08019bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, pc}
 8013eec:	080168f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, fp, sp, lr}

08013ef0 <console_status>:
 8013ef0:	b510      	push	{r4, lr}
 8013ef2:	b280      	uxth	r0, r0
 8013ef4:	460c      	mov	r4, r1
 8013ef6:	f7ff ffc7 	bl	8013e88 <console_set_fg_color>
 8013efa:	4807      	ldr	r0, [pc, #28]	; (8013f18 <console_status+0x28>)
 8013efc:	f000 fb94 	bl	8014628 <uart0_puts>
 8013f00:	4620      	mov	r0, r4
 8013f02:	f000 fb91 	bl	8014628 <uart0_puts>
 8013f06:	200a      	movs	r0, #10
 8013f08:	f000 fb74 	bl	80145f4 <uart0_putc>
 8013f0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f10:	4802      	ldr	r0, [pc, #8]	; (8013f1c <console_status+0x2c>)
 8013f12:	f000 bb89 	b.w	8014628 <uart0_puts>
 8013f16:	bf00      	nop
 8013f18:	08019bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, ip, pc}
 8013f1c:	080168f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, fp, sp, lr}

08013f20 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8013f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f24:	4d15      	ldr	r5, [pc, #84]	; (8013f7c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8013f26:	461e      	mov	r6, r3
 8013f28:	4b15      	ldr	r3, [pc, #84]	; (8013f80 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8013f2a:	b086      	sub	sp, #24
 8013f2c:	6018      	str	r0, [r3, #0]
 8013f2e:	4604      	mov	r4, r0
 8013f30:	4617      	mov	r7, r2
 8013f32:	f105 0803 	add.w	r8, r5, #3
 8013f36:	2203      	movs	r2, #3
 8013f38:	4628      	mov	r0, r5
 8013f3a:	f000 fa20 	bl	801437e <memmove>
 8013f3e:	4639      	mov	r1, r7
 8013f40:	220b      	movs	r2, #11
 8013f42:	4640      	mov	r0, r8
 8013f44:	f000 fa1b 	bl	801437e <memmove>
 8013f48:	f105 030e 	add.w	r3, r5, #14
 8013f4c:	4631      	mov	r1, r6
 8013f4e:	2208      	movs	r2, #8
 8013f50:	4618      	mov	r0, r3
 8013f52:	f000 fa14 	bl	801437e <memmove>
 8013f56:	2308      	movs	r3, #8
 8013f58:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8013f5c:	230b      	movs	r3, #11
 8013f5e:	9302      	str	r3, [sp, #8]
 8013f60:	4b08      	ldr	r3, [pc, #32]	; (8013f84 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8013f62:	9005      	str	r0, [sp, #20]
 8013f64:	e9cd 5300 	strd	r5, r3, [sp]
 8013f68:	4a07      	ldr	r2, [pc, #28]	; (8013f88 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8013f6a:	4808      	ldr	r0, [pc, #32]	; (8013f8c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8013f6c:	2303      	movs	r3, #3
 8013f6e:	213f      	movs	r1, #63	; 0x3f
 8013f70:	f7f6 f9d2 	bl	800a318 <snprintf>
 8013f74:	4620      	mov	r0, r4
 8013f76:	b006      	add	sp, #24
 8013f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f7c:	2000fe64 	andcs	pc, r0, r4, ror #28
 8013f80:	2000febc 			; <UNDEFINED> instruction: 0x2000febc
 8013f84:	080171dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip, sp, lr}
 8013f88:	08019be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, ip, pc}
 8013f8c:	2000fe7a 	andcs	pc, r0, sl, ror lr	; <UNPREDICTABLE>

08013f90 <FirmwareVersion::Print(char const*)>:
 8013f90:	b510      	push	{r4, lr}
 8013f92:	4805      	ldr	r0, [pc, #20]	; (8013fa8 <FirmwareVersion::Print(char const*)+0x18>)
 8013f94:	460c      	mov	r4, r1
 8013f96:	f000 fa2a 	bl	80143ee <puts>
 8013f9a:	b124      	cbz	r4, 8013fa6 <FirmwareVersion::Print(char const*)+0x16>
 8013f9c:	4620      	mov	r0, r4
 8013f9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013fa2:	f000 ba24 	b.w	80143ee <puts>
 8013fa6:	bd10      	pop	{r4, pc}
 8013fa8:	2000fe7a 	andcs	pc, r0, sl, ror lr	; <UNPREDICTABLE>

08013fac <LedBlink::LedBlink()>:
 8013fac:	b538      	push	{r3, r4, r5, lr}
 8013fae:	2500      	movs	r5, #0
 8013fb0:	2305      	movs	r3, #5
 8013fb2:	e9c0 5300 	strd	r5, r3, [r0]
 8013fb6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8013fba:	e9c0 3503 	strd	r3, r5, [r0, #12]
 8013fbe:	4b0d      	ldr	r3, [pc, #52]	; (8013ff4 <LedBlink::LedBlink()+0x48>)
 8013fc0:	6085      	str	r5, [r0, #8]
 8013fc2:	4604      	mov	r4, r0
 8013fc4:	6145      	str	r5, [r0, #20]
 8013fc6:	6018      	str	r0, [r3, #0]
 8013fc8:	f640 4002 	movw	r0, #3074	; 0xc02
 8013fcc:	f001 f964 	bl	8015298 <rcu_periph_clock_enable>
 8013fd0:	2301      	movs	r3, #1
 8013fd2:	462a      	mov	r2, r5
 8013fd4:	4619      	mov	r1, r3
 8013fd6:	4808      	ldr	r0, [pc, #32]	; (8013ff8 <LedBlink::LedBlink()+0x4c>)
 8013fd8:	f001 f8e2 	bl	80151a0 <gpio_mode_set>
 8013fdc:	4806      	ldr	r0, [pc, #24]	; (8013ff8 <LedBlink::LedBlink()+0x4c>)
 8013fde:	2301      	movs	r3, #1
 8013fe0:	2202      	movs	r2, #2
 8013fe2:	4629      	mov	r1, r5
 8013fe4:	f001 f8fc 	bl	80151e0 <gpio_output_options_set>
 8013fe8:	4b04      	ldr	r3, [pc, #16]	; (8013ffc <LedBlink::LedBlink()+0x50>)
 8013fea:	2201      	movs	r2, #1
 8013fec:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8013ff0:	4620      	mov	r0, r4
 8013ff2:	bd38      	pop	{r3, r4, r5, pc}
 8013ff4:	2000fec0 	andcs	pc, r0, r0, asr #29
 8013ff8:	40020800 	andmi	r0, r2, r0, lsl #16
 8013ffc:	40020000 	andmi	r0, r2, r0

08014000 <LedBlink::SetMode(ledblink::Mode)>:
 8014000:	6843      	ldr	r3, [r0, #4]
 8014002:	428b      	cmp	r3, r1
 8014004:	d02b      	beq.n	801405e <LedBlink::SetMode(ledblink::Mode)+0x5e>
 8014006:	6041      	str	r1, [r0, #4]
 8014008:	2904      	cmp	r1, #4
 801400a:	d820      	bhi.n	801404e <LedBlink::SetMode(ledblink::Mode)+0x4e>
 801400c:	e8df f001 	tbb	[pc, r1]
 8014010:	1610031f 			; <UNDEFINED> instruction: 0x1610031f
 8014014:	23ff001b 	mvnscs	r0, #27
 8014018:	6003      	str	r3, [r0, #0]
 801401a:	2300      	movs	r3, #0
 801401c:	60c3      	str	r3, [r0, #12]
 801401e:	4b10      	ldr	r3, [pc, #64]	; (8014060 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 8014020:	2201      	movs	r2, #1
 8014022:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 8014026:	6880      	ldr	r0, [r0, #8]
 8014028:	b1c8      	cbz	r0, 801405e <LedBlink::SetMode(ledblink::Mode)+0x5e>
 801402a:	6803      	ldr	r3, [r0, #0]
 801402c:	689b      	ldr	r3, [r3, #8]
 801402e:	4718      	bx	r3
 8014030:	2301      	movs	r3, #1
 8014032:	6003      	str	r3, [r0, #0]
 8014034:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014038:	60c3      	str	r3, [r0, #12]
 801403a:	e7f4      	b.n	8014026 <LedBlink::SetMode(ledblink::Mode)+0x26>
 801403c:	2303      	movs	r3, #3
 801403e:	6003      	str	r3, [r0, #0]
 8014040:	f240 134d 	movw	r3, #333	; 0x14d
 8014044:	e7f8      	b.n	8014038 <LedBlink::SetMode(ledblink::Mode)+0x38>
 8014046:	2305      	movs	r3, #5
 8014048:	6003      	str	r3, [r0, #0]
 801404a:	23c8      	movs	r3, #200	; 0xc8
 801404c:	e7f4      	b.n	8014038 <LedBlink::SetMode(ledblink::Mode)+0x38>
 801404e:	2300      	movs	r3, #0
 8014050:	6003      	str	r3, [r0, #0]
 8014052:	60c3      	str	r3, [r0, #12]
 8014054:	4b02      	ldr	r3, [pc, #8]	; (8014060 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 8014056:	2201      	movs	r2, #1
 8014058:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 801405c:	e7e3      	b.n	8014026 <LedBlink::SetMode(ledblink::Mode)+0x26>
 801405e:	4770      	bx	lr
 8014060:	40020000 	andmi	r0, r2, r0

08014064 <Hardware::Hardware()>:
 8014064:	b530      	push	{r4, r5, lr}
 8014066:	4b31      	ldr	r3, [pc, #196]	; (801412c <Hardware::Hardware()+0xc8>)
 8014068:	2400      	movs	r4, #0
 801406a:	b091      	sub	sp, #68	; 0x44
 801406c:	7004      	strb	r4, [r0, #0]
 801406e:	6018      	str	r0, [r3, #0]
 8014070:	4605      	mov	r5, r0
 8014072:	f7f4 fa67 	bl	8008544 <console_init>
 8014076:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 801407a:	f001 f939 	bl	80152f0 <rcu_timer_clock_prescaler_config>
 801407e:	f000 fae3 	bl	8014648 <systick_config>
 8014082:	f002 f907 	bl	8016294 <udelay_init()>
 8014086:	f002 f8e5 	bl	8016254 <micros_init()>
 801408a:	f241 001c 	movw	r0, #4124	; 0x101c
 801408e:	f001 f903 	bl	8015298 <rcu_periph_clock_enable>
 8014092:	f44f 7000 	mov.w	r0, #512	; 0x200
 8014096:	f001 f8eb 	bl	8015270 <pmu_backup_ldo_config>
 801409a:	f640 4012 	movw	r0, #3090	; 0xc12
 801409e:	f001 f8fb 	bl	8015298 <rcu_periph_clock_enable>
 80140a2:	f001 f8f1 	bl	8015288 <pmu_backup_write_enable>
 80140a6:	4621      	mov	r1, r4
 80140a8:	2001      	movs	r0, #1
 80140aa:	f001 fd33 	bl	8015b14 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 80140ae:	4a20      	ldr	r2, [pc, #128]	; (8014130 <Hardware::Hardware()+0xcc>)
 80140b0:	4b20      	ldr	r3, [pc, #128]	; (8014134 <Hardware::Hardware()+0xd0>)
 80140b2:	1a9b      	subs	r3, r3, r2
 80140b4:	3b01      	subs	r3, #1
 80140b6:	d232      	bcs.n	801411e <Hardware::Hardware()+0xba>
 80140b8:	4b1f      	ldr	r3, [pc, #124]	; (8014138 <Hardware::Hardware()+0xd4>)
 80140ba:	4c20      	ldr	r4, [pc, #128]	; (801413c <Hardware::Hardware()+0xd8>)
 80140bc:	2200      	movs	r2, #0
 80140be:	1ae4      	subs	r4, r4, r3
 80140c0:	3c01      	subs	r4, #1
 80140c2:	d22f      	bcs.n	8014124 <Hardware::Hardware()+0xc0>
 80140c4:	f241 0004 	movw	r0, #4100	; 0x1004
 80140c8:	f001 f8e6 	bl	8015298 <rcu_periph_clock_enable>
 80140cc:	481c      	ldr	r0, [pc, #112]	; (8014140 <Hardware::Hardware()+0xdc>)
 80140ce:	f001 f99f 	bl	8015410 <timer_deinit>
 80140d2:	a903      	add	r1, sp, #12
 80140d4:	23c7      	movs	r3, #199	; 0xc7
 80140d6:	481a      	ldr	r0, [pc, #104]	; (8014140 <Hardware::Hardware()+0xdc>)
 80140d8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80140dc:	9405      	str	r4, [sp, #20]
 80140de:	f001 fa3d 	bl	801555c <timer_init>
 80140e2:	4817      	ldr	r0, [pc, #92]	; (8014140 <Hardware::Hardware()+0xdc>)
 80140e4:	f001 fa78 	bl	80155d8 <timer_enable>
 80140e8:	f001 fd26 	bl	8015b38 <gd32_adc_init()>
 80140ec:	2219      	movs	r2, #25
 80140ee:	230b      	movs	r3, #11
 80140f0:	2400      	movs	r4, #0
 80140f2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80140f6:	a807      	add	r0, sp, #28
 80140f8:	237a      	movs	r3, #122	; 0x7a
 80140fa:	930c      	str	r3, [sp, #48]	; 0x30
 80140fc:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8014100:	9407      	str	r4, [sp, #28]
 8014102:	940f      	str	r4, [sp, #60]	; 0x3c
 8014104:	f000 f9cc 	bl	80144a0 <mktime>
 8014108:	4621      	mov	r1, r4
 801410a:	e9cd 0401 	strd	r0, r4, [sp, #4]
 801410e:	a801      	add	r0, sp, #4
 8014110:	f000 fa3c 	bl	801458c <settimeofday>
 8014114:	f001 fd70 	bl	8015bf8 <gd32_i2c_begin>
 8014118:	4628      	mov	r0, r5
 801411a:	b011      	add	sp, #68	; 0x44
 801411c:	bd30      	pop	{r4, r5, pc}
 801411e:	f802 4b01 	strb.w	r4, [r2], #1
 8014122:	e7c7      	b.n	80140b4 <Hardware::Hardware()+0x50>
 8014124:	f803 2b01 	strb.w	r2, [r3], #1
 8014128:	e7ca      	b.n	80140c0 <Hardware::Hardware()+0x5c>
 801412a:	bf00      	nop
 801412c:	2000fec4 	andcs	pc, r0, r4, asr #29
 8014130:	10000000 	andne	r0, r0, r0
 8014134:	100014b8 			; <UNDEFINED> instruction: 0x100014b8
 8014138:	20030000 	andcs	r0, r3, r0
 801413c:	20048d08 	andcs	r8, r4, r8, lsl #26
 8014140:	40001000 	andmi	r1, r0, r0

08014144 <Hardware::GetUuid(unsigned char*)>:
 8014144:	4a0c      	ldr	r2, [pc, #48]	; (8014178 <Hardware::GetUuid(unsigned char*)+0x34>)
 8014146:	b084      	sub	sp, #16
 8014148:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 801414c:	9300      	str	r3, [sp, #0]
 801414e:	f8d2 0a14 	ldr.w	r0, [r2, #2580]	; 0xa14
 8014152:	9001      	str	r0, [sp, #4]
 8014154:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	; 0xa18
 8014158:	9202      	str	r2, [sp, #8]
 801415a:	4403      	add	r3, r0
 801415c:	4413      	add	r3, r2
 801415e:	9303      	str	r3, [sp, #12]
 8014160:	466a      	mov	r2, sp
 8014162:	1e4b      	subs	r3, r1, #1
 8014164:	310f      	adds	r1, #15
 8014166:	428b      	cmp	r3, r1
 8014168:	d101      	bne.n	801416e <Hardware::GetUuid(unsigned char*)+0x2a>
 801416a:	b004      	add	sp, #16
 801416c:	4770      	bx	lr
 801416e:	f812 0b01 	ldrb.w	r0, [r2], #1
 8014172:	f803 0f01 	strb.w	r0, [r3, #1]!
 8014176:	e7f6      	b.n	8014166 <Hardware::GetUuid(unsigned char*)+0x22>
 8014178:	1fff7000 	svcne	0x00ff7000

0801417c <Hardware::Reboot()>:
 801417c:	b508      	push	{r3, lr}
 801417e:	2300      	movs	r3, #0
 8014180:	7003      	strb	r3, [r0, #0]
 8014182:	4604      	mov	r4, r0
 8014184:	2104      	movs	r1, #4
 8014186:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801418a:	f000 ffdf 	bl	801514c <fwdgt_config>
 801418e:	4620      	mov	r0, r4
 8014190:	f7f5 f92c 	bl	80093ec <Hardware::RebootHandler()>
 8014194:	2102      	movs	r1, #2
 8014196:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801419a:	f000 ffd7 	bl	801514c <fwdgt_config>
 801419e:	2801      	cmp	r0, #1
 80141a0:	bf0c      	ite	eq
 80141a2:	2301      	moveq	r3, #1
 80141a4:	2300      	movne	r3, #0
 80141a6:	7023      	strb	r3, [r4, #0]
 80141a8:	d101      	bne.n	80141ae <Hardware::Reboot()+0x32>
 80141aa:	f000 ffbf 	bl	801512c <fwdgt_enable>
 80141ae:	4b0f      	ldr	r3, [pc, #60]	; (80141ec <Hardware::Reboot()+0x70>)
 80141b0:	480f      	ldr	r0, [pc, #60]	; (80141f0 <Hardware::Reboot()+0x74>)
 80141b2:	681b      	ldr	r3, [r3, #0]
 80141b4:	490f      	ldr	r1, [pc, #60]	; (80141f4 <Hardware::Reboot()+0x78>)
 80141b6:	2208      	movs	r2, #8
 80141b8:	601a      	str	r2, [r3, #0]
 80141ba:	227d      	movs	r2, #125	; 0x7d
 80141bc:	60da      	str	r2, [r3, #12]
 80141be:	2501      	movs	r5, #1
 80141c0:	68dc      	ldr	r4, [r3, #12]
 80141c2:	b904      	cbnz	r4, 80141c6 <Hardware::Reboot()+0x4a>
 80141c4:	e7fe      	b.n	80141c4 <Hardware::Reboot()+0x48>
 80141c6:	6802      	ldr	r2, [r0, #0]
 80141c8:	695e      	ldr	r6, [r3, #20]
 80141ca:	1b92      	subs	r2, r2, r6
 80141cc:	4294      	cmp	r4, r2
 80141ce:	d8f8      	bhi.n	80141c2 <Hardware::Reboot()+0x46>
 80141d0:	6802      	ldr	r2, [r0, #0]
 80141d2:	615a      	str	r2, [r3, #20]
 80141d4:	691a      	ldr	r2, [r3, #16]
 80141d6:	2a01      	cmp	r2, #1
 80141d8:	f082 0401 	eor.w	r4, r2, #1
 80141dc:	611c      	str	r4, [r3, #16]
 80141de:	bf14      	ite	ne
 80141e0:	f8c1 5818 	strne.w	r5, [r1, #2072]	; 0x818
 80141e4:	f8c1 2828 	streq.w	r2, [r1, #2088]	; 0x828
 80141e8:	e7ea      	b.n	80141c0 <Hardware::Reboot()+0x44>
 80141ea:	bf00      	nop
 80141ec:	2000fec0 	andcs	pc, r0, r0, asr #29
 80141f0:	2000fedc 	ldrdcs	pc, [r0], -ip
 80141f4:	40020000 	andmi	r0, r2, r0

080141f8 <operator delete(void*)>:
 80141f8:	f000 b890 	b.w	801431c <free>

080141fc <operator delete[](void*)>:
 80141fc:	f000 b88e 	b.w	801431c <free>

08014200 <operator new(unsigned int)>:
 8014200:	f000 b842 	b.w	8014288 <malloc>

08014204 <operator new[](unsigned int)>:
 8014204:	f000 b840 	b.w	8014288 <malloc>

08014208 <inet_aton>:
 8014208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801420a:	f04f 0c0a 	mov.w	ip, #10
 801420e:	ae01      	add	r6, sp, #4
 8014210:	2500      	movs	r5, #0
 8014212:	4603      	mov	r3, r0
 8014214:	1d07      	adds	r7, r0, #4
 8014216:	2200      	movs	r2, #0
 8014218:	e007      	b.n	801422a <inet_aton+0x22>
 801421a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801421e:	2b09      	cmp	r3, #9
 8014220:	d820      	bhi.n	8014264 <inet_aton+0x5c>
 8014222:	fb0c 4202 	mla	r2, ip, r2, r4
 8014226:	3a30      	subs	r2, #48	; 0x30
 8014228:	4603      	mov	r3, r0
 801422a:	4618      	mov	r0, r3
 801422c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8014230:	2c2e      	cmp	r4, #46	; 0x2e
 8014232:	d111      	bne.n	8014258 <inet_aton+0x50>
 8014234:	3501      	adds	r5, #1
 8014236:	2d03      	cmp	r5, #3
 8014238:	f806 2b01 	strb.w	r2, [r6], #1
 801423c:	d1e9      	bne.n	8014212 <inet_aton+0xa>
 801423e:	1d1c      	adds	r4, r3, #4
 8014240:	2200      	movs	r2, #0
 8014242:	250a      	movs	r5, #10
 8014244:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8014248:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 801424c:	d10d      	bne.n	801426a <inet_aton+0x62>
 801424e:	f88d 2007 	strb.w	r2, [sp, #7]
 8014252:	b9b1      	cbnz	r1, 8014282 <inet_aton+0x7a>
 8014254:	2001      	movs	r0, #1
 8014256:	e006      	b.n	8014266 <inet_aton+0x5e>
 8014258:	2c00      	cmp	r4, #0
 801425a:	d0eb      	beq.n	8014234 <inet_aton+0x2c>
 801425c:	2c0a      	cmp	r4, #10
 801425e:	d0e9      	beq.n	8014234 <inet_aton+0x2c>
 8014260:	42b8      	cmp	r0, r7
 8014262:	d1da      	bne.n	801421a <inet_aton+0x12>
 8014264:	2000      	movs	r0, #0
 8014266:	b003      	add	sp, #12
 8014268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801426a:	280a      	cmp	r0, #10
 801426c:	d0ef      	beq.n	801424e <inet_aton+0x46>
 801426e:	42a3      	cmp	r3, r4
 8014270:	d0f8      	beq.n	8014264 <inet_aton+0x5c>
 8014272:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8014276:	2e09      	cmp	r6, #9
 8014278:	d8f4      	bhi.n	8014264 <inet_aton+0x5c>
 801427a:	fb05 0202 	mla	r2, r5, r2, r0
 801427e:	3a30      	subs	r2, #48	; 0x30
 8014280:	e7e0      	b.n	8014244 <inet_aton+0x3c>
 8014282:	9b01      	ldr	r3, [sp, #4]
 8014284:	600b      	str	r3, [r1, #0]
 8014286:	e7e5      	b.n	8014254 <inet_aton+0x4c>

08014288 <malloc>:
 8014288:	b538      	push	{r3, r4, r5, lr}
 801428a:	4601      	mov	r1, r0
 801428c:	4604      	mov	r4, r0
 801428e:	481c      	ldr	r0, [pc, #112]	; (8014300 <malloc+0x78>)
 8014290:	f7f6 f81a 	bl	800a2c8 <printf>
 8014294:	b17c      	cbz	r4, 80142b6 <malloc+0x2e>
 8014296:	4b1b      	ldr	r3, [pc, #108]	; (8014304 <malloc+0x7c>)
 8014298:	6818      	ldr	r0, [r3, #0]
 801429a:	b978      	cbnz	r0, 80142bc <malloc+0x34>
 801429c:	4a1a      	ldr	r2, [pc, #104]	; (8014308 <malloc+0x80>)
 801429e:	481b      	ldr	r0, [pc, #108]	; (801430c <malloc+0x84>)
 80142a0:	6811      	ldr	r1, [r2, #0]
 80142a2:	f104 031b 	add.w	r3, r4, #27
 80142a6:	f023 030f 	bic.w	r3, r3, #15
 80142aa:	440b      	add	r3, r1
 80142ac:	4283      	cmp	r3, r0
 80142ae:	d921      	bls.n	80142f4 <malloc+0x6c>
 80142b0:	4817      	ldr	r0, [pc, #92]	; (8014310 <malloc+0x88>)
 80142b2:	f7f6 f809 	bl	800a2c8 <printf>
 80142b6:	2500      	movs	r5, #0
 80142b8:	4628      	mov	r0, r5
 80142ba:	bd38      	pop	{r3, r4, r5, pc}
 80142bc:	4284      	cmp	r4, r0
 80142be:	d80a      	bhi.n	80142d6 <malloc+0x4e>
 80142c0:	685a      	ldr	r2, [r3, #4]
 80142c2:	6899      	ldr	r1, [r3, #8]
 80142c4:	3201      	adds	r2, #1
 80142c6:	428a      	cmp	r2, r1
 80142c8:	605a      	str	r2, [r3, #4]
 80142ca:	d900      	bls.n	80142ce <malloc+0x46>
 80142cc:	609a      	str	r2, [r3, #8]
 80142ce:	68d9      	ldr	r1, [r3, #12]
 80142d0:	b919      	cbnz	r1, 80142da <malloc+0x52>
 80142d2:	4604      	mov	r4, r0
 80142d4:	e7e2      	b.n	801429c <malloc+0x14>
 80142d6:	3310      	adds	r3, #16
 80142d8:	e7de      	b.n	8014298 <malloc+0x10>
 80142da:	688a      	ldr	r2, [r1, #8]
 80142dc:	60da      	str	r2, [r3, #12]
 80142de:	4604      	mov	r4, r0
 80142e0:	2300      	movs	r3, #0
 80142e2:	f101 050c 	add.w	r5, r1, #12
 80142e6:	608b      	str	r3, [r1, #8]
 80142e8:	4622      	mov	r2, r4
 80142ea:	462b      	mov	r3, r5
 80142ec:	4809      	ldr	r0, [pc, #36]	; (8014314 <malloc+0x8c>)
 80142ee:	f7f5 ffeb 	bl	800a2c8 <printf>
 80142f2:	e7e1      	b.n	80142b8 <malloc+0x30>
 80142f4:	6013      	str	r3, [r2, #0]
 80142f6:	4b08      	ldr	r3, [pc, #32]	; (8014318 <malloc+0x90>)
 80142f8:	e9c1 3400 	strd	r3, r4, [r1]
 80142fc:	e7f0      	b.n	80142e0 <malloc+0x58>
 80142fe:	bf00      	nop
 8014300:	08019c08 	stmdaeq	r1, {r3, sl, fp, ip, pc}
 8014304:	20000024 	andcs	r0, r0, r4, lsr #32
 8014308:	20000020 	andcs	r0, r0, r0, lsr #32
 801430c:	1000c000 	andne	ip, r0, r0
 8014310:	08019c14 	stmdaeq	r1, {r2, r4, sl, fp, ip, pc}
 8014314:	08019c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, pc}
 8014318:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0801431c <free>:
 801431c:	b538      	push	{r3, r4, r5, lr}
 801431e:	4604      	mov	r4, r0
 8014320:	b1c8      	cbz	r0, 8014356 <free+0x3a>
 8014322:	f1a0 050c 	sub.w	r5, r0, #12
 8014326:	4602      	mov	r2, r0
 8014328:	4629      	mov	r1, r5
 801432a:	480c      	ldr	r0, [pc, #48]	; (801435c <free+0x40>)
 801432c:	f7f5 ffcc 	bl	800a2c8 <printf>
 8014330:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8014334:	4b0a      	ldr	r3, [pc, #40]	; (8014360 <free+0x44>)
 8014336:	429a      	cmp	r2, r3
 8014338:	d10d      	bne.n	8014356 <free+0x3a>
 801433a:	4b0a      	ldr	r3, [pc, #40]	; (8014364 <free+0x48>)
 801433c:	681a      	ldr	r2, [r3, #0]
 801433e:	b152      	cbz	r2, 8014356 <free+0x3a>
 8014340:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8014344:	4291      	cmp	r1, r2
 8014346:	d107      	bne.n	8014358 <free+0x3c>
 8014348:	68da      	ldr	r2, [r3, #12]
 801434a:	f844 2c04 	str.w	r2, [r4, #-4]
 801434e:	685a      	ldr	r2, [r3, #4]
 8014350:	60dd      	str	r5, [r3, #12]
 8014352:	3a01      	subs	r2, #1
 8014354:	605a      	str	r2, [r3, #4]
 8014356:	bd38      	pop	{r3, r4, r5, pc}
 8014358:	3310      	adds	r3, #16
 801435a:	e7ef      	b.n	801433c <free+0x20>
 801435c:	08019c5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, fp, ip, pc}
 8014360:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8014364:	20000024 	andcs	r0, r0, r4, lsr #32

08014368 <memcpy>:
 8014368:	b510      	push	{r4, lr}
 801436a:	1e43      	subs	r3, r0, #1
 801436c:	440a      	add	r2, r1
 801436e:	4291      	cmp	r1, r2
 8014370:	d100      	bne.n	8014374 <memcpy+0xc>
 8014372:	bd10      	pop	{r4, pc}
 8014374:	f811 4b01 	ldrb.w	r4, [r1], #1
 8014378:	f803 4f01 	strb.w	r4, [r3, #1]!
 801437c:	e7f7      	b.n	801436e <memcpy+0x6>

0801437e <memmove>:
 801437e:	4288      	cmp	r0, r1
 8014380:	b510      	push	{r4, lr}
 8014382:	eb01 0302 	add.w	r3, r1, r2
 8014386:	d208      	bcs.n	801439a <memmove+0x1c>
 8014388:	1e42      	subs	r2, r0, #1
 801438a:	4299      	cmp	r1, r3
 801438c:	d100      	bne.n	8014390 <memmove+0x12>
 801438e:	bd10      	pop	{r4, pc}
 8014390:	f811 4b01 	ldrb.w	r4, [r1], #1
 8014394:	f802 4f01 	strb.w	r4, [r2, #1]!
 8014398:	e7f7      	b.n	801438a <memmove+0xc>
 801439a:	4402      	add	r2, r0
 801439c:	4601      	mov	r1, r0
 801439e:	428a      	cmp	r2, r1
 80143a0:	d0f5      	beq.n	801438e <memmove+0x10>
 80143a2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80143a6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80143aa:	e7f8      	b.n	801439e <memmove+0x20>

080143ac <memset>:
 80143ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143ae:	b1c2      	cbz	r2, 80143e2 <memset+0x36>
 80143b0:	b2c9      	uxtb	r1, r1
 80143b2:	4603      	mov	r3, r0
 80143b4:	075c      	lsls	r4, r3, #29
 80143b6:	d110      	bne.n	80143da <memset+0x2e>
 80143b8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80143bc:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80143c0:	f022 0407 	bic.w	r4, r2, #7
 80143c4:	463d      	mov	r5, r7
 80143c6:	441c      	add	r4, r3
 80143c8:	461e      	mov	r6, r3
 80143ca:	42a6      	cmp	r6, r4
 80143cc:	d10a      	bne.n	80143e4 <memset+0x38>
 80143ce:	441a      	add	r2, r3
 80143d0:	4294      	cmp	r4, r2
 80143d2:	d006      	beq.n	80143e2 <memset+0x36>
 80143d4:	f804 1b01 	strb.w	r1, [r4], #1
 80143d8:	e7fa      	b.n	80143d0 <memset+0x24>
 80143da:	3a01      	subs	r2, #1
 80143dc:	f803 1b01 	strb.w	r1, [r3], #1
 80143e0:	d1e8      	bne.n	80143b4 <memset+0x8>
 80143e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80143e4:	f846 7b08 	str.w	r7, [r6], #8
 80143e8:	f846 5c04 	str.w	r5, [r6, #-4]
 80143ec:	e7ed      	b.n	80143ca <memset+0x1e>

080143ee <puts>:
 80143ee:	b508      	push	{r3, lr}
 80143f0:	f7ff fd48 	bl	8013e84 <console_puts>
 80143f4:	200a      	movs	r0, #10
 80143f6:	f7ff fd43 	bl	8013e80 <console_putc>
 80143fa:	2001      	movs	r0, #1
 80143fc:	bd08      	pop	{r3, pc}
	...

08014400 <strtok>:
 8014400:	b530      	push	{r4, r5, lr}
 8014402:	b910      	cbnz	r0, 801440a <strtok+0xa>
 8014404:	4b12      	ldr	r3, [pc, #72]	; (8014450 <strtok+0x50>)
 8014406:	6818      	ldr	r0, [r3, #0]
 8014408:	b158      	cbz	r0, 8014422 <strtok+0x22>
 801440a:	4603      	mov	r3, r0
 801440c:	4618      	mov	r0, r3
 801440e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014412:	460d      	mov	r5, r1
 8014414:	f815 4b01 	ldrb.w	r4, [r5], #1
 8014418:	b924      	cbnz	r4, 8014424 <strtok+0x24>
 801441a:	b94a      	cbnz	r2, 8014430 <strtok+0x30>
 801441c:	4b0c      	ldr	r3, [pc, #48]	; (8014450 <strtok+0x50>)
 801441e:	4610      	mov	r0, r2
 8014420:	601a      	str	r2, [r3, #0]
 8014422:	bd30      	pop	{r4, r5, pc}
 8014424:	42a2      	cmp	r2, r4
 8014426:	d1f5      	bne.n	8014414 <strtok+0x14>
 8014428:	e7f0      	b.n	801440c <strtok+0xc>
 801442a:	4613      	mov	r3, r2
 801442c:	e00c      	b.n	8014448 <strtok+0x48>
 801442e:	b914      	cbnz	r4, 8014436 <strtok+0x36>
 8014430:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014434:	460d      	mov	r5, r1
 8014436:	f815 4b01 	ldrb.w	r4, [r5], #1
 801443a:	42a2      	cmp	r2, r4
 801443c:	d1f7      	bne.n	801442e <strtok+0x2e>
 801443e:	2a00      	cmp	r2, #0
 8014440:	d0f3      	beq.n	801442a <strtok+0x2a>
 8014442:	2200      	movs	r2, #0
 8014444:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014448:	4a01      	ldr	r2, [pc, #4]	; (8014450 <strtok+0x50>)
 801444a:	6013      	str	r3, [r2, #0]
 801444c:	e7e9      	b.n	8014422 <strtok+0x22>
 801444e:	bf00      	nop
 8014450:	2000fec8 	andcs	pc, r0, r8, asr #29

08014454 <isleapyear>:
 8014454:	2264      	movs	r2, #100	; 0x64
 8014456:	fb90 f3f2 	sdiv	r3, r0, r2
 801445a:	fb02 0313 	mls	r3, r2, r3, r0
 801445e:	b94b      	cbnz	r3, 8014474 <isleapyear+0x20>
 8014460:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8014464:	fb90 f2f3 	sdiv	r2, r0, r3
 8014468:	fb03 0012 	mls	r0, r3, r2, r0
 801446c:	fab0 f080 	clz	r0, r0
 8014470:	0940      	lsrs	r0, r0, #5
 8014472:	4770      	bx	lr
 8014474:	f010 0f03 	tst.w	r0, #3
 8014478:	bf0c      	ite	eq
 801447a:	2001      	moveq	r0, #1
 801447c:	2000      	movne	r0, #0
 801447e:	4770      	bx	lr

08014480 <getdaysofmonth>:
 8014480:	b510      	push	{r4, lr}
 8014482:	4604      	mov	r4, r0
 8014484:	2c01      	cmp	r4, #1
 8014486:	4608      	mov	r0, r1
 8014488:	d102      	bne.n	8014490 <getdaysofmonth+0x10>
 801448a:	f7ff ffe3 	bl	8014454 <isleapyear>
 801448e:	b918      	cbnz	r0, 8014498 <getdaysofmonth+0x18>
 8014490:	4b02      	ldr	r3, [pc, #8]	; (801449c <getdaysofmonth+0x1c>)
 8014492:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8014496:	bd10      	pop	{r4, pc}
 8014498:	201d      	movs	r0, #29
 801449a:	e7fc      	b.n	8014496 <getdaysofmonth+0x16>
 801449c:	08019c84 	stmdaeq	r1, {r2, r7, sl, fp, ip, pc}

080144a0 <mktime>:
 80144a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80144a4:	4604      	mov	r4, r0
 80144a6:	2800      	cmp	r0, #0
 80144a8:	d043      	beq.n	8014532 <mktime+0x92>
 80144aa:	6941      	ldr	r1, [r0, #20]
 80144ac:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80144b0:	2b45      	cmp	r3, #69	; 0x45
 80144b2:	d83e      	bhi.n	8014532 <mktime+0x92>
 80144b4:	2600      	movs	r6, #0
 80144b6:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80144ba:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80144be:	f240 186d 	movw	r8, #365	; 0x16d
 80144c2:	42af      	cmp	r7, r5
 80144c4:	da24      	bge.n	8014510 <mktime+0x70>
 80144c6:	6927      	ldr	r7, [r4, #16]
 80144c8:	2f0b      	cmp	r7, #11
 80144ca:	d832      	bhi.n	8014532 <mktime+0x92>
 80144cc:	2500      	movs	r5, #0
 80144ce:	42af      	cmp	r7, r5
 80144d0:	d129      	bne.n	8014526 <mktime+0x86>
 80144d2:	68e5      	ldr	r5, [r4, #12]
 80144d4:	2d00      	cmp	r5, #0
 80144d6:	dd2c      	ble.n	8014532 <mktime+0x92>
 80144d8:	4638      	mov	r0, r7
 80144da:	f7ff ffd1 	bl	8014480 <getdaysofmonth>
 80144de:	4285      	cmp	r5, r0
 80144e0:	dc27      	bgt.n	8014532 <mktime+0x92>
 80144e2:	3d01      	subs	r5, #1
 80144e4:	2318      	movs	r3, #24
 80144e6:	4435      	add	r5, r6
 80144e8:	435d      	muls	r5, r3
 80144ea:	68a3      	ldr	r3, [r4, #8]
 80144ec:	2b17      	cmp	r3, #23
 80144ee:	d820      	bhi.n	8014532 <mktime+0x92>
 80144f0:	442b      	add	r3, r5
 80144f2:	213c      	movs	r1, #60	; 0x3c
 80144f4:	fb01 f203 	mul.w	r2, r1, r3
 80144f8:	6863      	ldr	r3, [r4, #4]
 80144fa:	2b3b      	cmp	r3, #59	; 0x3b
 80144fc:	d819      	bhi.n	8014532 <mktime+0x92>
 80144fe:	6820      	ldr	r0, [r4, #0]
 8014500:	4413      	add	r3, r2
 8014502:	283b      	cmp	r0, #59	; 0x3b
 8014504:	fb01 f303 	mul.w	r3, r1, r3
 8014508:	d813      	bhi.n	8014532 <mktime+0x92>
 801450a:	4418      	add	r0, r3
 801450c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014510:	4628      	mov	r0, r5
 8014512:	f7ff ff9f 	bl	8014454 <isleapyear>
 8014516:	2800      	cmp	r0, #0
 8014518:	bf14      	ite	ne
 801451a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801451e:	4643      	moveq	r3, r8
 8014520:	441e      	add	r6, r3
 8014522:	3501      	adds	r5, #1
 8014524:	e7cd      	b.n	80144c2 <mktime+0x22>
 8014526:	4628      	mov	r0, r5
 8014528:	f7ff ffaa 	bl	8014480 <getdaysofmonth>
 801452c:	3501      	adds	r5, #1
 801452e:	4406      	add	r6, r0
 8014530:	e7cd      	b.n	80144ce <mktime+0x2e>
 8014532:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014536:	e7e9      	b.n	801450c <mktime+0x6c>

08014538 <gettimeofday>:
 8014538:	b538      	push	{r3, r4, r5, lr}
 801453a:	4a10      	ldr	r2, [pc, #64]	; (801457c <gettimeofday+0x44>)
 801453c:	4b10      	ldr	r3, [pc, #64]	; (8014580 <gettimeofday+0x48>)
 801453e:	6814      	ldr	r4, [r2, #0]
 8014540:	681b      	ldr	r3, [r3, #0]
 8014542:	6013      	str	r3, [r2, #0]
 8014544:	429c      	cmp	r4, r3
 8014546:	bf2c      	ite	cs
 8014548:	1ae4      	subcs	r4, r4, r3
 801454a:	1b1c      	subcc	r4, r3, r4
 801454c:	4b0d      	ldr	r3, [pc, #52]	; (8014584 <gettimeofday+0x4c>)
 801454e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014552:	4354      	muls	r4, r2
 8014554:	e9d3 2100 	ldrd	r2, r1, [r3]
 8014558:	18a4      	adds	r4, r4, r2
 801455a:	f141 0100 	adc.w	r1, r1, #0
 801455e:	4605      	mov	r5, r0
 8014560:	e9c3 4100 	strd	r4, r1, [r3]
 8014564:	4a08      	ldr	r2, [pc, #32]	; (8014588 <gettimeofday+0x50>)
 8014566:	2300      	movs	r3, #0
 8014568:	4620      	mov	r0, r4
 801456a:	f7f4 fb95 	bl	8008c98 <__aeabi_uldivmod>
 801456e:	4b06      	ldr	r3, [pc, #24]	; (8014588 <gettimeofday+0x50>)
 8014570:	6028      	str	r0, [r5, #0]
 8014572:	fb03 4410 	mls	r4, r3, r0, r4
 8014576:	606c      	str	r4, [r5, #4]
 8014578:	2000      	movs	r0, #0
 801457a:	bd38      	pop	{r3, r4, r5, pc}
 801457c:	2000fed8 	ldrdcs	pc, [r0], -r8
 8014580:	2000fedc 	ldrdcs	pc, [r0], -ip
 8014584:	2000fed0 	ldrdcs	pc, [r0], -r0
 8014588:	000f4240 	andeq	r4, pc, r0, asr #4

0801458c <settimeofday>:
 801458c:	4b07      	ldr	r3, [pc, #28]	; (80145ac <settimeofday+0x20>)
 801458e:	4908      	ldr	r1, [pc, #32]	; (80145b0 <settimeofday+0x24>)
 8014590:	681a      	ldr	r2, [r3, #0]
 8014592:	4b08      	ldr	r3, [pc, #32]	; (80145b4 <settimeofday+0x28>)
 8014594:	b510      	push	{r4, lr}
 8014596:	601a      	str	r2, [r3, #0]
 8014598:	6843      	ldr	r3, [r0, #4]
 801459a:	6804      	ldr	r4, [r0, #0]
 801459c:	4806      	ldr	r0, [pc, #24]	; (80145b8 <settimeofday+0x2c>)
 801459e:	17da      	asrs	r2, r3, #31
 80145a0:	fbc4 3200 	smlal	r3, r2, r4, r0
 80145a4:	e9c1 3200 	strd	r3, r2, [r1]
 80145a8:	2000      	movs	r0, #0
 80145aa:	bd10      	pop	{r4, pc}
 80145ac:	2000fedc 	ldrdcs	pc, [r0], -ip
 80145b0:	2000fed0 	ldrdcs	pc, [r0], -r0
 80145b4:	2000fed8 	ldrdcs	pc, [r0], -r8
 80145b8:	000f4240 	andeq	r4, pc, r0, asr #4

080145bc <time>:
 80145bc:	b513      	push	{r0, r1, r4, lr}
 80145be:	4604      	mov	r4, r0
 80145c0:	2100      	movs	r1, #0
 80145c2:	4668      	mov	r0, sp
 80145c4:	f7ff ffb8 	bl	8014538 <gettimeofday>
 80145c8:	9800      	ldr	r0, [sp, #0]
 80145ca:	b104      	cbz	r4, 80145ce <time+0x12>
 80145cc:	6020      	str	r0, [r4, #0]
 80145ce:	b002      	add	sp, #8
 80145d0:	bd10      	pop	{r4, pc}
	...

080145d4 <uart0_init>:
 80145d4:	b507      	push	{r0, r1, r2, lr}
 80145d6:	2301      	movs	r3, #1
 80145d8:	9300      	str	r3, [sp, #0]
 80145da:	4805      	ldr	r0, [pc, #20]	; (80145f0 <uart0_init+0x1c>)
 80145dc:	2300      	movs	r3, #0
 80145de:	2208      	movs	r2, #8
 80145e0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80145e4:	f001 fda6 	bl	8016134 <gd32_uart_begin>
 80145e8:	b003      	add	sp, #12
 80145ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80145ee:	bf00      	nop
 80145f0:	40011000 	andmi	r1, r1, r0

080145f4 <uart0_putc>:
 80145f4:	280a      	cmp	r0, #10
 80145f6:	b570      	push	{r4, r5, r6, lr}
 80145f8:	4d0a      	ldr	r5, [pc, #40]	; (8014624 <uart0_putc+0x30>)
 80145fa:	4604      	mov	r4, r0
 80145fc:	d107      	bne.n	801460e <uart0_putc+0x1a>
 80145fe:	2107      	movs	r1, #7
 8014600:	4628      	mov	r0, r5
 8014602:	f001 fa3f 	bl	8015a84 <usart_flag_get>
 8014606:	2800      	cmp	r0, #0
 8014608:	d0f9      	beq.n	80145fe <uart0_putc+0xa>
 801460a:	230d      	movs	r3, #13
 801460c:	606b      	str	r3, [r5, #4]
 801460e:	4e05      	ldr	r6, [pc, #20]	; (8014624 <uart0_putc+0x30>)
 8014610:	2107      	movs	r1, #7
 8014612:	4630      	mov	r0, r6
 8014614:	f001 fa36 	bl	8015a84 <usart_flag_get>
 8014618:	2800      	cmp	r0, #0
 801461a:	d0f9      	beq.n	8014610 <uart0_putc+0x1c>
 801461c:	b2e4      	uxtb	r4, r4
 801461e:	606c      	str	r4, [r5, #4]
 8014620:	bd70      	pop	{r4, r5, r6, pc}
 8014622:	bf00      	nop
 8014624:	40011000 	andmi	r1, r1, r0

08014628 <uart0_puts>:
 8014628:	b510      	push	{r4, lr}
 801462a:	1e44      	subs	r4, r0, #1
 801462c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8014630:	b903      	cbnz	r3, 8014634 <uart0_puts+0xc>
 8014632:	bd10      	pop	{r4, pc}
 8014634:	2b0a      	cmp	r3, #10
 8014636:	d102      	bne.n	801463e <uart0_puts+0x16>
 8014638:	200d      	movs	r0, #13
 801463a:	f7ff ffdb 	bl	80145f4 <uart0_putc>
 801463e:	7820      	ldrb	r0, [r4, #0]
 8014640:	f7ff ffd8 	bl	80145f4 <uart0_putc>
 8014644:	e7f2      	b.n	801462c <uart0_puts+0x4>
	...

08014648 <systick_config>:
 8014648:	4b0c      	ldr	r3, [pc, #48]	; (801467c <systick_config+0x34>)
 801464a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801464e:	681b      	ldr	r3, [r3, #0]
 8014650:	fbb3 f3f2 	udiv	r3, r3, r2
 8014654:	3b01      	subs	r3, #1
 8014656:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801465a:	d20d      	bcs.n	8014678 <systick_config+0x30>
 801465c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8014660:	21f0      	movs	r1, #240	; 0xf0
 8014662:	6153      	str	r3, [r2, #20]
 8014664:	4b06      	ldr	r3, [pc, #24]	; (8014680 <systick_config+0x38>)
 8014666:	2007      	movs	r0, #7
 8014668:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801466c:	2100      	movs	r1, #0
 801466e:	6191      	str	r1, [r2, #24]
 8014670:	6110      	str	r0, [r2, #16]
 8014672:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8014676:	4770      	bx	lr
 8014678:	e7fe      	b.n	8014678 <systick_config+0x30>
 801467a:	bf00      	nop
 801467c:	200000f4 	strdcs	r0, [r0], -r4
 8014680:	e000ed00 	and	lr, r0, r0, lsl #26

08014684 <SysTick_Handler>:
 8014684:	4a02      	ldr	r2, [pc, #8]	; (8014690 <SysTick_Handler+0xc>)
 8014686:	6813      	ldr	r3, [r2, #0]
 8014688:	3301      	adds	r3, #1
 801468a:	6013      	str	r3, [r2, #0]
 801468c:	4770      	bx	lr
 801468e:	bf00      	nop
 8014690:	2000fedc 	ldrdcs	pc, [r0], -ip

08014694 <SystemInit>:
 8014694:	4a56      	ldr	r2, [pc, #344]	; (80147f0 <SystemInit+0x15c>)
 8014696:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 801469a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801469e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80146a2:	4b54      	ldr	r3, [pc, #336]	; (80147f4 <SystemInit+0x160>)
 80146a4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80146a8:	f042 0201 	orr.w	r2, r2, #1
 80146ac:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80146b0:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80146b4:	b082      	sub	sp, #8
 80146b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80146ba:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80146be:	2200      	movs	r2, #0
 80146c0:	9201      	str	r2, [sp, #4]
 80146c2:	f24c 314f 	movw	r1, #49999	; 0xc34f
 80146c6:	9a01      	ldr	r2, [sp, #4]
 80146c8:	428a      	cmp	r2, r1
 80146ca:	d93e      	bls.n	801474a <SystemInit+0xb6>
 80146cc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80146d0:	f042 0290 	orr.w	r2, r2, #144	; 0x90
 80146d4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80146d8:	2300      	movs	r3, #0
 80146da:	9301      	str	r3, [sp, #4]
 80146dc:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80146e0:	9b01      	ldr	r3, [sp, #4]
 80146e2:	4293      	cmp	r3, r2
 80146e4:	d935      	bls.n	8014752 <SystemInit+0xbe>
 80146e6:	4b43      	ldr	r3, [pc, #268]	; (80147f4 <SystemInit+0x160>)
 80146e8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80146ec:	f022 0203 	bic.w	r2, r2, #3
 80146f0:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80146f4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80146f8:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80146fc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8014700:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014704:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014708:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801470c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014710:	2200      	movs	r2, #0
 8014712:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014716:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 801471a:	4937      	ldr	r1, [pc, #220]	; (80147f8 <SystemInit+0x164>)
 801471c:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8014720:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 8014724:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014728:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 801472c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014730:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014734:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8014738:	0389      	lsls	r1, r1, #14
 801473a:	d401      	bmi.n	8014740 <SystemInit+0xac>
 801473c:	3a01      	subs	r2, #1
 801473e:	d1f9      	bne.n	8014734 <SystemInit+0xa0>
 8014740:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014744:	0392      	lsls	r2, r2, #14
 8014746:	d408      	bmi.n	801475a <SystemInit+0xc6>
 8014748:	e7fe      	b.n	8014748 <SystemInit+0xb4>
 801474a:	9a01      	ldr	r2, [sp, #4]
 801474c:	3201      	adds	r2, #1
 801474e:	9201      	str	r2, [sp, #4]
 8014750:	e7b9      	b.n	80146c6 <SystemInit+0x32>
 8014752:	9b01      	ldr	r3, [sp, #4]
 8014754:	3301      	adds	r3, #1
 8014756:	9301      	str	r3, [sp, #4]
 8014758:	e7c2      	b.n	80146e0 <SystemInit+0x4c>
 801475a:	f8d3 2840 	ldr.w	r2, [r3, #2112]	; 0x840
 801475e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8014762:	f8c3 2840 	str.w	r2, [r3, #2112]	; 0x840
 8014766:	4a25      	ldr	r2, [pc, #148]	; (80147fc <SystemInit+0x168>)
 8014768:	6811      	ldr	r1, [r2, #0]
 801476a:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 801476e:	6011      	str	r1, [r2, #0]
 8014770:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014774:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014778:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 801477c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8014780:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014784:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014788:	f441 51a0 	orr.w	r1, r1, #5120	; 0x1400
 801478c:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014790:	491b      	ldr	r1, [pc, #108]	; (8014800 <SystemInit+0x16c>)
 8014792:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8014796:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 801479a:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 801479e:	f8c3 1800 	str.w	r1, [r3, #2048]	; 0x800
 80147a2:	4914      	ldr	r1, [pc, #80]	; (80147f4 <SystemInit+0x160>)
 80147a4:	f8d1 3800 	ldr.w	r3, [r1, #2048]	; 0x800
 80147a8:	019b      	lsls	r3, r3, #6
 80147aa:	d5fb      	bpl.n	80147a4 <SystemInit+0x110>
 80147ac:	6813      	ldr	r3, [r2, #0]
 80147ae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80147b2:	6013      	str	r3, [r2, #0]
 80147b4:	4b11      	ldr	r3, [pc, #68]	; (80147fc <SystemInit+0x168>)
 80147b6:	685a      	ldr	r2, [r3, #4]
 80147b8:	03d0      	lsls	r0, r2, #15
 80147ba:	d5fc      	bpl.n	80147b6 <SystemInit+0x122>
 80147bc:	681a      	ldr	r2, [r3, #0]
 80147be:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80147c2:	601a      	str	r2, [r3, #0]
 80147c4:	685a      	ldr	r2, [r3, #4]
 80147c6:	0391      	lsls	r1, r2, #14
 80147c8:	d5fc      	bpl.n	80147c4 <SystemInit+0x130>
 80147ca:	4b0a      	ldr	r3, [pc, #40]	; (80147f4 <SystemInit+0x160>)
 80147cc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80147d0:	f022 0203 	bic.w	r2, r2, #3
 80147d4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80147d8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80147dc:	f042 0202 	orr.w	r2, r2, #2
 80147e0:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80147e4:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80147e8:	0712      	lsls	r2, r2, #28
 80147ea:	d5fb      	bpl.n	80147e4 <SystemInit+0x150>
 80147ec:	b002      	add	sp, #8
 80147ee:	4770      	bx	lr
 80147f0:	e000ed00 	and	lr, r0, r0, lsl #26
 80147f4:	40023000 	andmi	r3, r2, r0
 80147f8:	24003010 	strcs	r3, [r0], #-16
 80147fc:	40007000 	andmi	r7, r0, r0
 8014800:	09406419 	stmdbeq	r0, {r0, r3, r4, sl, sp, lr}^

08014804 <dma_deinit>:
 8014804:	2318      	movs	r3, #24
 8014806:	fb03 0301 	mla	r3, r3, r1, r0
 801480a:	b510      	push	{r4, lr}
 801480c:	691a      	ldr	r2, [r3, #16]
 801480e:	f022 0201 	bic.w	r2, r2, #1
 8014812:	611a      	str	r2, [r3, #16]
 8014814:	2903      	cmp	r1, #3
 8014816:	f04f 0200 	mov.w	r2, #0
 801481a:	611a      	str	r2, [r3, #16]
 801481c:	615a      	str	r2, [r3, #20]
 801481e:	619a      	str	r2, [r3, #24]
 8014820:	61da      	str	r2, [r3, #28]
 8014822:	621a      	str	r2, [r3, #32]
 8014824:	625a      	str	r2, [r3, #36]	; 0x24
 8014826:	d80a      	bhi.n	801483e <dma_deinit+0x3a>
 8014828:	2406      	movs	r4, #6
 801482a:	084b      	lsrs	r3, r1, #1
 801482c:	4361      	muls	r1, r4
 801482e:	6882      	ldr	r2, [r0, #8]
 8014830:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014834:	233d      	movs	r3, #61	; 0x3d
 8014836:	408b      	lsls	r3, r1
 8014838:	4313      	orrs	r3, r2
 801483a:	6083      	str	r3, [r0, #8]
 801483c:	bd10      	pop	{r4, pc}
 801483e:	3904      	subs	r1, #4
 8014840:	b2ca      	uxtb	r2, r1
 8014842:	2306      	movs	r3, #6
 8014844:	435a      	muls	r2, r3
 8014846:	f3c1 0140 	ubfx	r1, r1, #1, #1
 801484a:	68c4      	ldr	r4, [r0, #12]
 801484c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8014850:	233d      	movs	r3, #61	; 0x3d
 8014852:	4093      	lsls	r3, r2
 8014854:	4323      	orrs	r3, r4
 8014856:	60c3      	str	r3, [r0, #12]
 8014858:	e7f0      	b.n	801483c <dma_deinit+0x38>

0801485a <dma_single_data_para_struct_init>:
 801485a:	2300      	movs	r3, #0
 801485c:	2201      	movs	r2, #1
 801485e:	e9c0 3200 	strd	r3, r2, [r0]
 8014862:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8014866:	e9c0 3204 	strd	r3, r2, [r0, #16]
 801486a:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801486e:	6203      	str	r3, [r0, #32]
 8014870:	4770      	bx	lr

08014872 <dma_single_data_mode_init>:
 8014872:	2318      	movs	r3, #24
 8014874:	fb03 0101 	mla	r1, r3, r1, r0
 8014878:	b530      	push	{r4, r5, lr}
 801487a:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 801487c:	f023 0304 	bic.w	r3, r3, #4
 8014880:	624b      	str	r3, [r1, #36]	; 0x24
 8014882:	6813      	ldr	r3, [r2, #0]
 8014884:	618b      	str	r3, [r1, #24]
 8014886:	6893      	ldr	r3, [r2, #8]
 8014888:	61cb      	str	r3, [r1, #28]
 801488a:	69d3      	ldr	r3, [r2, #28]
 801488c:	614b      	str	r3, [r1, #20]
 801488e:	6914      	ldr	r4, [r2, #16]
 8014890:	6a13      	ldr	r3, [r2, #32]
 8014892:	6908      	ldr	r0, [r1, #16]
 8014894:	6995      	ldr	r5, [r2, #24]
 8014896:	4323      	orrs	r3, r4
 8014898:	f420 305e 	bic.w	r0, r0, #227328	; 0x37800
 801489c:	432b      	orrs	r3, r5
 801489e:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 80148a2:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 80148a6:	4303      	orrs	r3, r0
 80148a8:	610b      	str	r3, [r1, #16]
 80148aa:	6853      	ldr	r3, [r2, #4]
 80148ac:	b983      	cbnz	r3, 80148d0 <dma_single_data_mode_init+0x5e>
 80148ae:	690b      	ldr	r3, [r1, #16]
 80148b0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80148b4:	610b      	str	r3, [r1, #16]
 80148b6:	68d3      	ldr	r3, [r2, #12]
 80148b8:	b993      	cbnz	r3, 80148e0 <dma_single_data_mode_init+0x6e>
 80148ba:	690b      	ldr	r3, [r1, #16]
 80148bc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80148c0:	610b      	str	r3, [r1, #16]
 80148c2:	6953      	ldr	r3, [r2, #20]
 80148c4:	b983      	cbnz	r3, 80148e8 <dma_single_data_mode_init+0x76>
 80148c6:	690b      	ldr	r3, [r1, #16]
 80148c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80148cc:	610b      	str	r3, [r1, #16]
 80148ce:	bd30      	pop	{r4, r5, pc}
 80148d0:	2b01      	cmp	r3, #1
 80148d2:	690b      	ldr	r3, [r1, #16]
 80148d4:	bf0c      	ite	eq
 80148d6:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 80148da:	f443 4300 	orrne.w	r3, r3, #32768	; 0x8000
 80148de:	e7e9      	b.n	80148b4 <dma_single_data_mode_init+0x42>
 80148e0:	690b      	ldr	r3, [r1, #16]
 80148e2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80148e6:	e7eb      	b.n	80148c0 <dma_single_data_mode_init+0x4e>
 80148e8:	690b      	ldr	r3, [r1, #16]
 80148ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80148ee:	e7ed      	b.n	80148cc <dma_single_data_mode_init+0x5a>

080148f0 <dma_circulation_disable>:
 80148f0:	2318      	movs	r3, #24
 80148f2:	4359      	muls	r1, r3
 80148f4:	3010      	adds	r0, #16
 80148f6:	580b      	ldr	r3, [r1, r0]
 80148f8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80148fc:	500b      	str	r3, [r1, r0]
 80148fe:	4770      	bx	lr

08014900 <dma_channel_subperipheral_select>:
 8014900:	2318      	movs	r3, #24
 8014902:	4359      	muls	r1, r3
 8014904:	3010      	adds	r0, #16
 8014906:	580b      	ldr	r3, [r1, r0]
 8014908:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 801490c:	ea43 6242 	orr.w	r2, r3, r2, lsl #25
 8014910:	500a      	str	r2, [r1, r0]
 8014912:	4770      	bx	lr

08014914 <dma_flag_clear>:
 8014914:	2903      	cmp	r1, #3
 8014916:	b530      	push	{r4, r5, lr}
 8014918:	d809      	bhi.n	801492e <dma_flag_clear+0x1a>
 801491a:	2506      	movs	r5, #6
 801491c:	084c      	lsrs	r4, r1, #1
 801491e:	4369      	muls	r1, r5
 8014920:	6883      	ldr	r3, [r0, #8]
 8014922:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8014926:	408a      	lsls	r2, r1
 8014928:	4313      	orrs	r3, r2
 801492a:	6083      	str	r3, [r0, #8]
 801492c:	bd30      	pop	{r4, r5, pc}
 801492e:	3904      	subs	r1, #4
 8014930:	b2cb      	uxtb	r3, r1
 8014932:	2506      	movs	r5, #6
 8014934:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8014938:	436b      	muls	r3, r5
 801493a:	68c4      	ldr	r4, [r0, #12]
 801493c:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8014940:	409a      	lsls	r2, r3
 8014942:	4322      	orrs	r2, r4
 8014944:	60c2      	str	r2, [r0, #12]
 8014946:	e7f1      	b.n	801492c <dma_flag_clear+0x18>

08014948 <dma_interrupt_flag_clear>:
 8014948:	f7ff bfe4 	b.w	8014914 <dma_flag_clear>

0801494c <enet_delay>:
 801494c:	b082      	sub	sp, #8
 801494e:	2300      	movs	r3, #0
 8014950:	9301      	str	r3, [sp, #4]
 8014952:	9001      	str	r0, [sp, #4]
 8014954:	9b01      	ldr	r3, [sp, #4]
 8014956:	b90b      	cbnz	r3, 801495c <enet_delay+0x10>
 8014958:	b002      	add	sp, #8
 801495a:	4770      	bx	lr
 801495c:	9b01      	ldr	r3, [sp, #4]
 801495e:	3b01      	subs	r3, #1
 8014960:	9301      	str	r3, [sp, #4]
 8014962:	e7f7      	b.n	8014954 <enet_delay+0x8>

08014964 <enet_software_reset>:
 8014964:	4b07      	ldr	r3, [pc, #28]	; (8014984 <enet_software_reset+0x20>)
 8014966:	681a      	ldr	r2, [r3, #0]
 8014968:	f042 0201 	orr.w	r2, r2, #1
 801496c:	601a      	str	r2, [r3, #0]
 801496e:	4a06      	ldr	r2, [pc, #24]	; (8014988 <enet_software_reset+0x24>)
 8014970:	6819      	ldr	r1, [r3, #0]
 8014972:	07c9      	lsls	r1, r1, #31
 8014974:	d501      	bpl.n	801497a <enet_software_reset+0x16>
 8014976:	3a01      	subs	r2, #1
 8014978:	d1fa      	bne.n	8014970 <enet_software_reset+0xc>
 801497a:	6818      	ldr	r0, [r3, #0]
 801497c:	43c0      	mvns	r0, r0
 801497e:	f000 0001 	and.w	r0, r0, #1
 8014982:	4770      	bx	lr
 8014984:	40029000 	andmi	r9, r2, r0
 8014988:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801498c <enet_descriptors_chain_init>:
 801498c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8014990:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014992:	4a19      	ldr	r2, [pc, #100]	; (80149f8 <enet_descriptors_chain_init+0x6c>)
 8014994:	d125      	bne.n	80149e2 <enet_descriptors_chain_init+0x56>
 8014996:	4b19      	ldr	r3, [pc, #100]	; (80149fc <enet_descriptors_chain_init+0x70>)
 8014998:	6113      	str	r3, [r2, #16]
 801499a:	4a19      	ldr	r2, [pc, #100]	; (8014a00 <enet_descriptors_chain_init+0x74>)
 801499c:	4c19      	ldr	r4, [pc, #100]	; (8014a04 <enet_descriptors_chain_init+0x78>)
 801499e:	6013      	str	r3, [r2, #0]
 80149a0:	2500      	movs	r5, #0
 80149a2:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80149a6:	2008      	movs	r0, #8
 80149a8:	4917      	ldr	r1, [pc, #92]	; (8014a08 <enet_descriptors_chain_init+0x7c>)
 80149aa:	2200      	movs	r2, #0
 80149ac:	600a      	str	r2, [r1, #0]
 80149ae:	4917      	ldr	r1, [pc, #92]	; (8014a0c <enet_descriptors_chain_init+0x80>)
 80149b0:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80149b4:	600a      	str	r2, [r1, #0]
 80149b6:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80149ba:	f103 0110 	add.w	r1, r3, #16
 80149be:	fb0e 4702 	mla	r7, lr, r2, r4
 80149c2:	f841 7c08 	str.w	r7, [r1, #-8]
 80149c6:	4594      	cmp	ip, r2
 80149c8:	bf94      	ite	ls
 80149ca:	461f      	movls	r7, r3
 80149cc:	460f      	movhi	r7, r1
 80149ce:	3201      	adds	r2, #1
 80149d0:	4290      	cmp	r0, r2
 80149d2:	e941 6504 	strd	r6, r5, [r1, #-16]
 80149d6:	f841 7c04 	str.w	r7, [r1, #-4]
 80149da:	f101 0110 	add.w	r1, r1, #16
 80149de:	d1ee      	bne.n	80149be <enet_descriptors_chain_init+0x32>
 80149e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80149e2:	4b0b      	ldr	r3, [pc, #44]	; (8014a10 <enet_descriptors_chain_init+0x84>)
 80149e4:	60d3      	str	r3, [r2, #12]
 80149e6:	4a0b      	ldr	r2, [pc, #44]	; (8014a14 <enet_descriptors_chain_init+0x88>)
 80149e8:	4c0b      	ldr	r4, [pc, #44]	; (8014a18 <enet_descriptors_chain_init+0x8c>)
 80149ea:	6013      	str	r3, [r2, #0]
 80149ec:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80149f0:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80149f4:	2046      	movs	r0, #70	; 0x46
 80149f6:	e7d7      	b.n	80149a8 <enet_descriptors_chain_init+0x1c>
 80149f8:	40029000 	andmi	r9, r2, r0
 80149fc:	2002d3e4 	andcs	sp, r2, r4, ror #7
 8014a00:	2000feec 	andcs	pc, r0, ip, ror #29
 8014a04:	2002a444 	andcs	sl, r2, r4, asr #8
 8014a08:	2000fee0 	andcs	pc, r0, r0, ror #29
 8014a0c:	2000fee4 	andcs	pc, r0, r4, ror #29
 8014a10:	20029fe4 	andcs	r9, r2, r4, ror #31
 8014a14:	2000fee8 	andcs	pc, r0, r8, ror #29
 8014a18:	2000ff2c 	andcs	pc, r0, ip, lsr #30

08014a1c <enet_frame_receive>:
 8014a1c:	4b22      	ldr	r3, [pc, #136]	; (8014aa8 <enet_frame_receive+0x8c>)
 8014a1e:	681a      	ldr	r2, [r3, #0]
 8014a20:	6812      	ldr	r2, [r2, #0]
 8014a22:	2a00      	cmp	r2, #0
 8014a24:	b570      	push	{r4, r5, r6, lr}
 8014a26:	db3c      	blt.n	8014aa2 <enet_frame_receive+0x86>
 8014a28:	b970      	cbnz	r0, 8014a48 <enet_frame_receive+0x2c>
 8014a2a:	681a      	ldr	r2, [r3, #0]
 8014a2c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8014a30:	6011      	str	r1, [r2, #0]
 8014a32:	491e      	ldr	r1, [pc, #120]	; (8014aac <enet_frame_receive+0x90>)
 8014a34:	6948      	ldr	r0, [r1, #20]
 8014a36:	0600      	lsls	r0, r0, #24
 8014a38:	d422      	bmi.n	8014a80 <enet_frame_receive+0x64>
 8014a3a:	6851      	ldr	r1, [r2, #4]
 8014a3c:	0448      	lsls	r0, r1, #17
 8014a3e:	d524      	bpl.n	8014a8a <enet_frame_receive+0x6e>
 8014a40:	68d2      	ldr	r2, [r2, #12]
 8014a42:	601a      	str	r2, [r3, #0]
 8014a44:	2001      	movs	r0, #1
 8014a46:	bd70      	pop	{r4, r5, r6, pc}
 8014a48:	f402 4403 	and.w	r4, r2, #33536	; 0x8300
 8014a4c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8014a50:	d127      	bne.n	8014aa2 <enet_frame_receive+0x86>
 8014a52:	4e17      	ldr	r6, [pc, #92]	; (8014ab0 <enet_frame_receive+0x94>)
 8014a54:	6836      	ldr	r6, [r6, #0]
 8014a56:	f3c2 450d 	ubfx	r5, r2, #16, #14
 8014a5a:	01b6      	lsls	r6, r6, #6
 8014a5c:	f1a5 0404 	sub.w	r4, r5, #4
 8014a60:	d503      	bpl.n	8014a6a <enet_frame_receive+0x4e>
 8014a62:	f012 0f20 	tst.w	r2, #32
 8014a66:	bf18      	it	ne
 8014a68:	462c      	movne	r4, r5
 8014a6a:	428c      	cmp	r4, r1
 8014a6c:	d819      	bhi.n	8014aa2 <enet_frame_receive+0x86>
 8014a6e:	2200      	movs	r2, #0
 8014a70:	42a2      	cmp	r2, r4
 8014a72:	6819      	ldr	r1, [r3, #0]
 8014a74:	d0d9      	beq.n	8014a2a <enet_frame_receive+0xe>
 8014a76:	6889      	ldr	r1, [r1, #8]
 8014a78:	5c51      	ldrb	r1, [r2, r1]
 8014a7a:	5481      	strb	r1, [r0, r2]
 8014a7c:	3201      	adds	r2, #1
 8014a7e:	e7f7      	b.n	8014a70 <enet_frame_receive+0x54>
 8014a80:	2080      	movs	r0, #128	; 0x80
 8014a82:	6148      	str	r0, [r1, #20]
 8014a84:	2000      	movs	r0, #0
 8014a86:	6088      	str	r0, [r1, #8]
 8014a88:	e7d7      	b.n	8014a3a <enet_frame_receive+0x1e>
 8014a8a:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8014a8e:	4907      	ldr	r1, [pc, #28]	; (8014aac <enet_frame_receive+0x90>)
 8014a90:	bf09      	itett	eq
 8014a92:	6809      	ldreq	r1, [r1, #0]
 8014a94:	68ca      	ldrne	r2, [r1, #12]
 8014a96:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014a9a:	3210      	addeq	r2, #16
 8014a9c:	bf08      	it	eq
 8014a9e:	1852      	addeq	r2, r2, r1
 8014aa0:	e7cf      	b.n	8014a42 <enet_frame_receive+0x26>
 8014aa2:	2000      	movs	r0, #0
 8014aa4:	e7cf      	b.n	8014a46 <enet_frame_receive+0x2a>
 8014aa6:	bf00      	nop
 8014aa8:	2000fee8 	andcs	pc, r0, r8, ror #29
 8014aac:	40029000 	andmi	r9, r2, r0
 8014ab0:	40028000 	andmi	r8, r2, r0

08014ab4 <enet_frame_transmit>:
 8014ab4:	4a1e      	ldr	r2, [pc, #120]	; (8014b30 <enet_frame_transmit+0x7c>)
 8014ab6:	6813      	ldr	r3, [r2, #0]
 8014ab8:	681b      	ldr	r3, [r3, #0]
 8014aba:	2b00      	cmp	r3, #0
 8014abc:	b530      	push	{r4, r5, lr}
 8014abe:	db34      	blt.n	8014b2a <enet_frame_transmit+0x76>
 8014ac0:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8014ac4:	4299      	cmp	r1, r3
 8014ac6:	d830      	bhi.n	8014b2a <enet_frame_transmit+0x76>
 8014ac8:	b9e8      	cbnz	r0, 8014b06 <enet_frame_transmit+0x52>
 8014aca:	6813      	ldr	r3, [r2, #0]
 8014acc:	4819      	ldr	r0, [pc, #100]	; (8014b34 <enet_frame_transmit+0x80>)
 8014ace:	6059      	str	r1, [r3, #4]
 8014ad0:	6819      	ldr	r1, [r3, #0]
 8014ad2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8014ad6:	6019      	str	r1, [r3, #0]
 8014ad8:	6941      	ldr	r1, [r0, #20]
 8014ada:	6944      	ldr	r4, [r0, #20]
 8014adc:	f001 0104 	and.w	r1, r1, #4
 8014ae0:	f004 0420 	and.w	r4, r4, #32
 8014ae4:	4321      	orrs	r1, r4
 8014ae6:	d110      	bne.n	8014b0a <enet_frame_transmit+0x56>
 8014ae8:	6819      	ldr	r1, [r3, #0]
 8014aea:	02c8      	lsls	r0, r1, #11
 8014aec:	d511      	bpl.n	8014b12 <enet_frame_transmit+0x5e>
 8014aee:	68db      	ldr	r3, [r3, #12]
 8014af0:	6013      	str	r3, [r2, #0]
 8014af2:	2001      	movs	r0, #1
 8014af4:	bd30      	pop	{r4, r5, pc}
 8014af6:	68a4      	ldr	r4, [r4, #8]
 8014af8:	5cc5      	ldrb	r5, [r0, r3]
 8014afa:	551d      	strb	r5, [r3, r4]
 8014afc:	3301      	adds	r3, #1
 8014afe:	428b      	cmp	r3, r1
 8014b00:	6814      	ldr	r4, [r2, #0]
 8014b02:	d1f8      	bne.n	8014af6 <enet_frame_transmit+0x42>
 8014b04:	e7e1      	b.n	8014aca <enet_frame_transmit+0x16>
 8014b06:	2300      	movs	r3, #0
 8014b08:	e7f9      	b.n	8014afe <enet_frame_transmit+0x4a>
 8014b0a:	6141      	str	r1, [r0, #20]
 8014b0c:	2100      	movs	r1, #0
 8014b0e:	6041      	str	r1, [r0, #4]
 8014b10:	e7ea      	b.n	8014ae8 <enet_frame_transmit+0x34>
 8014b12:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8014b16:	4907      	ldr	r1, [pc, #28]	; (8014b34 <enet_frame_transmit+0x80>)
 8014b18:	bf09      	itett	eq
 8014b1a:	6809      	ldreq	r1, [r1, #0]
 8014b1c:	690b      	ldrne	r3, [r1, #16]
 8014b1e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014b22:	3310      	addeq	r3, #16
 8014b24:	bf08      	it	eq
 8014b26:	185b      	addeq	r3, r3, r1
 8014b28:	e7e2      	b.n	8014af0 <enet_frame_transmit+0x3c>
 8014b2a:	2000      	movs	r0, #0
 8014b2c:	e7e2      	b.n	8014af4 <enet_frame_transmit+0x40>
 8014b2e:	bf00      	nop
 8014b30:	2000feec 	andcs	pc, r0, ip, ror #29
 8014b34:	40029000 	andmi	r9, r2, r0

08014b38 <enet_transmit_checksum_config>:
 8014b38:	6803      	ldr	r3, [r0, #0]
 8014b3a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8014b3e:	430b      	orrs	r3, r1
 8014b40:	6003      	str	r3, [r0, #0]
 8014b42:	4770      	bx	lr

08014b44 <enet_mac_address_set>:
 8014b44:	4b03      	ldr	r3, [pc, #12]	; (8014b54 <enet_mac_address_set+0x10>)
 8014b46:	888a      	ldrh	r2, [r1, #4]
 8014b48:	50c2      	str	r2, [r0, r3]
 8014b4a:	3304      	adds	r3, #4
 8014b4c:	680a      	ldr	r2, [r1, #0]
 8014b4e:	50c2      	str	r2, [r0, r3]
 8014b50:	4770      	bx	lr
 8014b52:	bf00      	nop
 8014b54:	40028040 	andmi	r8, r2, r0, asr #32

08014b58 <enet_rx_enable>:
 8014b58:	4a05      	ldr	r2, [pc, #20]	; (8014b70 <enet_rx_enable+0x18>)
 8014b5a:	6813      	ldr	r3, [r2, #0]
 8014b5c:	f043 0304 	orr.w	r3, r3, #4
 8014b60:	6013      	str	r3, [r2, #0]
 8014b62:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8014b66:	6993      	ldr	r3, [r2, #24]
 8014b68:	f043 0302 	orr.w	r3, r3, #2
 8014b6c:	6193      	str	r3, [r2, #24]
 8014b6e:	4770      	bx	lr
 8014b70:	40028000 	andmi	r8, r2, r0

08014b74 <enet_phy_write_read>:
 8014b74:	b530      	push	{r4, r5, lr}
 8014b76:	4d12      	ldr	r5, [pc, #72]	; (8014bc0 <enet_phy_write_read+0x4c>)
 8014b78:	4604      	mov	r4, r0
 8014b7a:	6928      	ldr	r0, [r5, #16]
 8014b7c:	0192      	lsls	r2, r2, #6
 8014b7e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8014b82:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8014b86:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8014b8a:	4302      	orrs	r2, r0
 8014b8c:	02c9      	lsls	r1, r1, #11
 8014b8e:	b289      	uxth	r1, r1
 8014b90:	4322      	orrs	r2, r4
 8014b92:	430a      	orrs	r2, r1
 8014b94:	2c02      	cmp	r4, #2
 8014b96:	bf04      	itt	eq
 8014b98:	8819      	ldrheq	r1, [r3, #0]
 8014b9a:	6169      	streq	r1, [r5, #20]
 8014b9c:	f042 0201 	orr.w	r2, r2, #1
 8014ba0:	612a      	str	r2, [r5, #16]
 8014ba2:	4907      	ldr	r1, [pc, #28]	; (8014bc0 <enet_phy_write_read+0x4c>)
 8014ba4:	4a07      	ldr	r2, [pc, #28]	; (8014bc4 <enet_phy_write_read+0x50>)
 8014ba6:	6908      	ldr	r0, [r1, #16]
 8014ba8:	07c0      	lsls	r0, r0, #31
 8014baa:	d501      	bpl.n	8014bb0 <enet_phy_write_read+0x3c>
 8014bac:	3a01      	subs	r2, #1
 8014bae:	d1fa      	bne.n	8014ba6 <enet_phy_write_read+0x32>
 8014bb0:	690a      	ldr	r2, [r1, #16]
 8014bb2:	43d2      	mvns	r2, r2
 8014bb4:	f002 0001 	and.w	r0, r2, #1
 8014bb8:	b90c      	cbnz	r4, 8014bbe <enet_phy_write_read+0x4a>
 8014bba:	694a      	ldr	r2, [r1, #20]
 8014bbc:	801a      	strh	r2, [r3, #0]
 8014bbe:	bd30      	pop	{r4, r5, pc}
 8014bc0:	40028000 	andmi	r8, r2, r0
 8014bc4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014bc8 <enet_phy_config>:
 8014bc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014bca:	4d26      	ldr	r5, [pc, #152]	; (8014c64 <enet_phy_config+0x9c>)
 8014bcc:	2001      	movs	r0, #1
 8014bce:	692c      	ldr	r4, [r5, #16]
 8014bd0:	f000 fb9e 	bl	8015310 <rcu_clock_freq_get>
 8014bd4:	4b24      	ldr	r3, [pc, #144]	; (8014c68 <enet_phy_config+0xa0>)
 8014bd6:	4a25      	ldr	r2, [pc, #148]	; (8014c6c <enet_phy_config+0xa4>)
 8014bd8:	4403      	add	r3, r0
 8014bda:	4293      	cmp	r3, r2
 8014bdc:	f024 041c 	bic.w	r4, r4, #28
 8014be0:	d21f      	bcs.n	8014c22 <enet_phy_config+0x5a>
 8014be2:	f044 0408 	orr.w	r4, r4, #8
 8014be6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014bea:	612c      	str	r4, [r5, #16]
 8014bec:	2200      	movs	r2, #0
 8014bee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014bf2:	2101      	movs	r1, #1
 8014bf4:	f10d 0306 	add.w	r3, sp, #6
 8014bf8:	2002      	movs	r0, #2
 8014bfa:	f7ff ffbb 	bl	8014b74 <enet_phy_write_read>
 8014bfe:	b350      	cbz	r0, 8014c56 <enet_phy_config+0x8e>
 8014c00:	481b      	ldr	r0, [pc, #108]	; (8014c70 <enet_phy_config+0xa8>)
 8014c02:	2200      	movs	r2, #0
 8014c04:	f7ff fea2 	bl	801494c <enet_delay>
 8014c08:	2101      	movs	r1, #1
 8014c0a:	f10d 0306 	add.w	r3, sp, #6
 8014c0e:	4610      	mov	r0, r2
 8014c10:	f7ff ffb0 	bl	8014b74 <enet_phy_write_read>
 8014c14:	b1f8      	cbz	r0, 8014c56 <enet_phy_config+0x8e>
 8014c16:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014c1a:	43c0      	mvns	r0, r0
 8014c1c:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8014c20:	e01a      	b.n	8014c58 <enet_phy_config+0x90>
 8014c22:	4b14      	ldr	r3, [pc, #80]	; (8014c74 <enet_phy_config+0xac>)
 8014c24:	4a14      	ldr	r2, [pc, #80]	; (8014c78 <enet_phy_config+0xb0>)
 8014c26:	4403      	add	r3, r0
 8014c28:	4293      	cmp	r3, r2
 8014c2a:	d802      	bhi.n	8014c32 <enet_phy_config+0x6a>
 8014c2c:	f044 040c 	orr.w	r4, r4, #12
 8014c30:	e7d9      	b.n	8014be6 <enet_phy_config+0x1e>
 8014c32:	4b12      	ldr	r3, [pc, #72]	; (8014c7c <enet_phy_config+0xb4>)
 8014c34:	4a12      	ldr	r2, [pc, #72]	; (8014c80 <enet_phy_config+0xb8>)
 8014c36:	4403      	add	r3, r0
 8014c38:	4293      	cmp	r3, r2
 8014c3a:	d3d4      	bcc.n	8014be6 <enet_phy_config+0x1e>
 8014c3c:	4b11      	ldr	r3, [pc, #68]	; (8014c84 <enet_phy_config+0xbc>)
 8014c3e:	4a12      	ldr	r2, [pc, #72]	; (8014c88 <enet_phy_config+0xc0>)
 8014c40:	4403      	add	r3, r0
 8014c42:	4293      	cmp	r3, r2
 8014c44:	d802      	bhi.n	8014c4c <enet_phy_config+0x84>
 8014c46:	f044 0404 	orr.w	r4, r4, #4
 8014c4a:	e7cc      	b.n	8014be6 <enet_phy_config+0x1e>
 8014c4c:	4b0f      	ldr	r3, [pc, #60]	; (8014c8c <enet_phy_config+0xc4>)
 8014c4e:	4a10      	ldr	r2, [pc, #64]	; (8014c90 <enet_phy_config+0xc8>)
 8014c50:	4403      	add	r3, r0
 8014c52:	4293      	cmp	r3, r2
 8014c54:	d902      	bls.n	8014c5c <enet_phy_config+0x94>
 8014c56:	2000      	movs	r0, #0
 8014c58:	b003      	add	sp, #12
 8014c5a:	bd30      	pop	{r4, r5, pc}
 8014c5c:	f044 0410 	orr.w	r4, r4, #16
 8014c60:	e7c1      	b.n	8014be6 <enet_phy_config+0x1e>
 8014c62:	bf00      	nop
 8014c64:	40028000 	andmi	r8, r2, r0
 8014c68:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8014c6c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8014c70:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014c74:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8014c78:	017d783f 	cmneq	sp, pc, lsr r8
 8014c7c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8014c80:	02625a00 	rsbeq	r5, r2, #0, 20
 8014c84:	fa0a1f00 	blx	829c88c <__exidx_end+0x282bd0>
 8014c88:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8014c8c:	f70f2e80 			; <UNDEFINED> instruction: 0xf70f2e80
 8014c90:	02faf080 	rscseq	pc, sl, #128	; 0x80

08014c94 <enet_init>:
 8014c94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014c96:	2300      	movs	r3, #0
 8014c98:	4604      	mov	r4, r0
 8014c9a:	460d      	mov	r5, r1
 8014c9c:	4616      	mov	r6, r2
 8014c9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014ca2:	f7ff ff91 	bl	8014bc8 <enet_phy_config>
 8014ca6:	2800      	cmp	r0, #0
 8014ca8:	d032      	beq.n	8014d10 <enet_init+0x7c>
 8014caa:	4b39      	ldr	r3, [pc, #228]	; (8014d90 <enet_init+0xfc>)
 8014cac:	4a39      	ldr	r2, [pc, #228]	; (8014d94 <enet_init+0x100>)
 8014cae:	6819      	ldr	r1, [r3, #0]
 8014cb0:	400a      	ands	r2, r1
 8014cb2:	601a      	str	r2, [r3, #0]
 8014cb4:	2200      	movs	r2, #0
 8014cb6:	605a      	str	r2, [r3, #4]
 8014cb8:	609a      	str	r2, [r3, #8]
 8014cba:	60da      	str	r2, [r3, #12]
 8014cbc:	6999      	ldr	r1, [r3, #24]
 8014cbe:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8014cc2:	0409      	lsls	r1, r1, #16
 8014cc4:	0c09      	lsrs	r1, r1, #16
 8014cc6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8014cca:	6199      	str	r1, [r3, #24]
 8014ccc:	4932      	ldr	r1, [pc, #200]	; (8014d98 <enet_init+0x104>)
 8014cce:	61da      	str	r2, [r3, #28]
 8014cd0:	6988      	ldr	r0, [r1, #24]
 8014cd2:	4b32      	ldr	r3, [pc, #200]	; (8014d9c <enet_init+0x108>)
 8014cd4:	4003      	ands	r3, r0
 8014cd6:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8014cda:	618b      	str	r3, [r1, #24]
 8014cdc:	680b      	ldr	r3, [r1, #0]
 8014cde:	4b30      	ldr	r3, [pc, #192]	; (8014da0 <enet_init+0x10c>)
 8014ce0:	600b      	str	r3, [r1, #0]
 8014ce2:	2c01      	cmp	r4, #1
 8014ce4:	d01e      	beq.n	8014d24 <enet_init+0x90>
 8014ce6:	08e3      	lsrs	r3, r4, #3
 8014ce8:	0861      	lsrs	r1, r4, #1
 8014cea:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8014cee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014cf2:	430b      	orrs	r3, r1
 8014cf4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014cf8:	2101      	movs	r1, #1
 8014cfa:	f10d 0306 	add.w	r3, sp, #6
 8014cfe:	2002      	movs	r0, #2
 8014d00:	f7ff ff38 	bl	8014b74 <enet_phy_write_read>
 8014d04:	b158      	cbz	r0, 8014d1e <enet_init+0x8a>
 8014d06:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8014d0a:	f7ff fe1f 	bl	801494c <enet_delay>
 8014d0e:	e05e      	b.n	8014dce <enet_init+0x13a>
 8014d10:	4824      	ldr	r0, [pc, #144]	; (8014da4 <enet_init+0x110>)
 8014d12:	f7ff fe1b 	bl	801494c <enet_delay>
 8014d16:	f7ff ff57 	bl	8014bc8 <enet_phy_config>
 8014d1a:	2800      	cmp	r0, #0
 8014d1c:	d1c5      	bne.n	8014caa <enet_init+0x16>
 8014d1e:	2000      	movs	r0, #0
 8014d20:	b003      	add	sp, #12
 8014d22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014d24:	4f20      	ldr	r7, [pc, #128]	; (8014da8 <enet_init+0x114>)
 8014d26:	4614      	mov	r4, r2
 8014d28:	2201      	movs	r2, #1
 8014d2a:	4611      	mov	r1, r2
 8014d2c:	f10d 0306 	add.w	r3, sp, #6
 8014d30:	2000      	movs	r0, #0
 8014d32:	f7ff ff1f 	bl	8014b74 <enet_phy_write_read>
 8014d36:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014d3a:	f002 0204 	and.w	r2, r2, #4
 8014d3e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014d42:	3401      	adds	r4, #1
 8014d44:	b912      	cbnz	r2, 8014d4c <enet_init+0xb8>
 8014d46:	42bc      	cmp	r4, r7
 8014d48:	d1ee      	bne.n	8014d28 <enet_init+0x94>
 8014d4a:	e7e8      	b.n	8014d1e <enet_init+0x8a>
 8014d4c:	42bc      	cmp	r4, r7
 8014d4e:	d0e6      	beq.n	8014d1e <enet_init+0x8a>
 8014d50:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8014d54:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014d58:	2101      	movs	r1, #1
 8014d5a:	2200      	movs	r2, #0
 8014d5c:	2002      	movs	r0, #2
 8014d5e:	f7ff ff09 	bl	8014b74 <enet_phy_write_read>
 8014d62:	2800      	cmp	r0, #0
 8014d64:	d0db      	beq.n	8014d1e <enet_init+0x8a>
 8014d66:	4f10      	ldr	r7, [pc, #64]	; (8014da8 <enet_init+0x114>)
 8014d68:	2400      	movs	r4, #0
 8014d6a:	2201      	movs	r2, #1
 8014d6c:	4611      	mov	r1, r2
 8014d6e:	f10d 0306 	add.w	r3, sp, #6
 8014d72:	2000      	movs	r0, #0
 8014d74:	f7ff fefe 	bl	8014b74 <enet_phy_write_read>
 8014d78:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014d7c:	f002 0220 	and.w	r2, r2, #32
 8014d80:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014d84:	3401      	adds	r4, #1
 8014d86:	b98a      	cbnz	r2, 8014dac <enet_init+0x118>
 8014d88:	42bc      	cmp	r4, r7
 8014d8a:	d1ee      	bne.n	8014d6a <enet_init+0xd6>
 8014d8c:	e7c7      	b.n	8014d1e <enet_init+0x8a>
 8014d8e:	bf00      	nop
 8014d90:	40028000 	andmi	r8, r2, r0
 8014d94:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8014d98:	40029000 	andmi	r9, r2, r0
 8014d9c:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8014da0:	02c16000 	sbceq	r6, r1, #0
 8014da4:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8014da8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014dac:	42bc      	cmp	r4, r7
 8014dae:	d0b6      	beq.n	8014d1e <enet_init+0x8a>
 8014db0:	2101      	movs	r1, #1
 8014db2:	2210      	movs	r2, #16
 8014db4:	2000      	movs	r0, #0
 8014db6:	f7ff fedd 	bl	8014b74 <enet_phy_write_read>
 8014dba:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8014dbe:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8014dc2:	0799      	lsls	r1, r3, #30
 8014dc4:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8014dc8:	d401      	bmi.n	8014dce <enet_init+0x13a>
 8014dca:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8014dce:	4b69      	ldr	r3, [pc, #420]	; (8014f74 <enet_init+0x2e0>)
 8014dd0:	681a      	ldr	r2, [r3, #0]
 8014dd2:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8014dd6:	4314      	orrs	r4, r2
 8014dd8:	056a      	lsls	r2, r5, #21
 8014dda:	601c      	str	r4, [r3, #0]
 8014ddc:	d50b      	bpl.n	8014df6 <enet_init+0x162>
 8014dde:	681a      	ldr	r2, [r3, #0]
 8014de0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8014de4:	601a      	str	r2, [r3, #0]
 8014de6:	4a64      	ldr	r2, [pc, #400]	; (8014f78 <enet_init+0x2e4>)
 8014de8:	6993      	ldr	r3, [r2, #24]
 8014dea:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8014dee:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8014df2:	431d      	orrs	r5, r3
 8014df4:	6195      	str	r5, [r2, #24]
 8014df6:	485f      	ldr	r0, [pc, #380]	; (8014f74 <enet_init+0x2e0>)
 8014df8:	6843      	ldr	r3, [r0, #4]
 8014dfa:	431e      	orrs	r6, r3
 8014dfc:	4b5f      	ldr	r3, [pc, #380]	; (8014f7c <enet_init+0x2e8>)
 8014dfe:	6046      	str	r6, [r0, #4]
 8014e00:	681a      	ldr	r2, [r3, #0]
 8014e02:	07d7      	lsls	r7, r2, #31
 8014e04:	d513      	bpl.n	8014e2e <enet_init+0x19a>
 8014e06:	6801      	ldr	r1, [r0, #0]
 8014e08:	685a      	ldr	r2, [r3, #4]
 8014e0a:	4c5d      	ldr	r4, [pc, #372]	; (8014f80 <enet_init+0x2ec>)
 8014e0c:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
 8014e10:	4014      	ands	r4, r2
 8014e12:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8014e16:	4321      	orrs	r1, r4
 8014e18:	6001      	str	r1, [r0, #0]
 8014e1a:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 8014e1e:	0892      	lsrs	r2, r2, #2
 8014e20:	6981      	ldr	r1, [r0, #24]
 8014e22:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8014e26:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8014e2a:	430a      	orrs	r2, r1
 8014e2c:	6182      	str	r2, [r0, #24]
 8014e2e:	681a      	ldr	r2, [r3, #0]
 8014e30:	0796      	lsls	r6, r2, #30
 8014e32:	d508      	bpl.n	8014e46 <enet_init+0x1b2>
 8014e34:	4950      	ldr	r1, [pc, #320]	; (8014f78 <enet_init+0x2e4>)
 8014e36:	6898      	ldr	r0, [r3, #8]
 8014e38:	680a      	ldr	r2, [r1, #0]
 8014e3a:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 8014e3e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8014e42:	4302      	orrs	r2, r0
 8014e44:	600a      	str	r2, [r1, #0]
 8014e46:	681a      	ldr	r2, [r3, #0]
 8014e48:	0755      	lsls	r5, r2, #29
 8014e4a:	d508      	bpl.n	8014e5e <enet_init+0x1ca>
 8014e4c:	494a      	ldr	r1, [pc, #296]	; (8014f78 <enet_init+0x2e4>)
 8014e4e:	68d8      	ldr	r0, [r3, #12]
 8014e50:	680a      	ldr	r2, [r1, #0]
 8014e52:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8014e56:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8014e5a:	4302      	orrs	r2, r0
 8014e5c:	600a      	str	r2, [r1, #0]
 8014e5e:	681a      	ldr	r2, [r3, #0]
 8014e60:	0714      	lsls	r4, r2, #28
 8014e62:	d508      	bpl.n	8014e76 <enet_init+0x1e2>
 8014e64:	4944      	ldr	r1, [pc, #272]	; (8014f78 <enet_init+0x2e4>)
 8014e66:	6918      	ldr	r0, [r3, #16]
 8014e68:	680a      	ldr	r2, [r1, #0]
 8014e6a:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8014e6e:	f022 0202 	bic.w	r2, r2, #2
 8014e72:	4302      	orrs	r2, r0
 8014e74:	600a      	str	r2, [r1, #0]
 8014e76:	681a      	ldr	r2, [r3, #0]
 8014e78:	06d0      	lsls	r0, r2, #27
 8014e7a:	d506      	bpl.n	8014e8a <enet_init+0x1f6>
 8014e7c:	493e      	ldr	r1, [pc, #248]	; (8014f78 <enet_init+0x2e4>)
 8014e7e:	4a41      	ldr	r2, [pc, #260]	; (8014f84 <enet_init+0x2f0>)
 8014e80:	6988      	ldr	r0, [r1, #24]
 8014e82:	4002      	ands	r2, r0
 8014e84:	6958      	ldr	r0, [r3, #20]
 8014e86:	4302      	orrs	r2, r0
 8014e88:	618a      	str	r2, [r1, #24]
 8014e8a:	681a      	ldr	r2, [r3, #0]
 8014e8c:	0691      	lsls	r1, r2, #26
 8014e8e:	d511      	bpl.n	8014eb4 <enet_init+0x220>
 8014e90:	4839      	ldr	r0, [pc, #228]	; (8014f78 <enet_init+0x2e4>)
 8014e92:	699a      	ldr	r2, [r3, #24]
 8014e94:	6981      	ldr	r1, [r0, #24]
 8014e96:	4c3c      	ldr	r4, [pc, #240]	; (8014f88 <enet_init+0x2f4>)
 8014e98:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8014e9c:	4014      	ands	r4, r2
 8014e9e:	f021 0104 	bic.w	r1, r1, #4
 8014ea2:	4321      	orrs	r1, r4
 8014ea4:	6181      	str	r1, [r0, #24]
 8014ea6:	6801      	ldr	r1, [r0, #0]
 8014ea8:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8014eac:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8014eb0:	430a      	orrs	r2, r1
 8014eb2:	6002      	str	r2, [r0, #0]
 8014eb4:	681a      	ldr	r2, [r3, #0]
 8014eb6:	0652      	lsls	r2, r2, #25
 8014eb8:	d506      	bpl.n	8014ec8 <enet_init+0x234>
 8014eba:	492e      	ldr	r1, [pc, #184]	; (8014f74 <enet_init+0x2e0>)
 8014ebc:	69d8      	ldr	r0, [r3, #28]
 8014ebe:	69ca      	ldr	r2, [r1, #28]
 8014ec0:	0c52      	lsrs	r2, r2, #17
 8014ec2:	0452      	lsls	r2, r2, #17
 8014ec4:	4302      	orrs	r2, r0
 8014ec6:	61ca      	str	r2, [r1, #28]
 8014ec8:	681a      	ldr	r2, [r3, #0]
 8014eca:	0617      	lsls	r7, r2, #24
 8014ecc:	d517      	bpl.n	8014efe <enet_init+0x26a>
 8014ece:	4c29      	ldr	r4, [pc, #164]	; (8014f74 <enet_init+0x2e0>)
 8014ed0:	6a1a      	ldr	r2, [r3, #32]
 8014ed2:	69a0      	ldr	r0, [r4, #24]
 8014ed4:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8014ed8:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8014edc:	0400      	lsls	r0, r0, #16
 8014ede:	0c00      	lsrs	r0, r0, #16
 8014ee0:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8014ee4:	4301      	orrs	r1, r0
 8014ee6:	4824      	ldr	r0, [pc, #144]	; (8014f78 <enet_init+0x2e4>)
 8014ee8:	61a1      	str	r1, [r4, #24]
 8014eea:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8014eee:	0a12      	lsrs	r2, r2, #8
 8014ef0:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8014ef4:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8014ef8:	430a      	orrs	r2, r1
 8014efa:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8014efe:	681a      	ldr	r2, [r3, #0]
 8014f00:	05d6      	lsls	r6, r2, #23
 8014f02:	bf42      	ittt	mi
 8014f04:	4a1b      	ldrmi	r2, [pc, #108]	; (8014f74 <enet_init+0x2e0>)
 8014f06:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8014f08:	6091      	strmi	r1, [r2, #8]
 8014f0a:	681a      	ldr	r2, [r3, #0]
 8014f0c:	0595      	lsls	r5, r2, #22
 8014f0e:	bf42      	ittt	mi
 8014f10:	4a18      	ldrmi	r2, [pc, #96]	; (8014f74 <enet_init+0x2e0>)
 8014f12:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8014f14:	60d1      	strmi	r1, [r2, #12]
 8014f16:	681a      	ldr	r2, [r3, #0]
 8014f18:	0554      	lsls	r4, r2, #21
 8014f1a:	d508      	bpl.n	8014f2e <enet_init+0x29a>
 8014f1c:	4915      	ldr	r1, [pc, #84]	; (8014f74 <enet_init+0x2e0>)
 8014f1e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8014f20:	684a      	ldr	r2, [r1, #4]
 8014f22:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8014f26:	f022 0206 	bic.w	r2, r2, #6
 8014f2a:	4302      	orrs	r2, r0
 8014f2c:	604a      	str	r2, [r1, #4]
 8014f2e:	681a      	ldr	r2, [r3, #0]
 8014f30:	0510      	lsls	r0, r2, #20
 8014f32:	d508      	bpl.n	8014f46 <enet_init+0x2b2>
 8014f34:	490f      	ldr	r1, [pc, #60]	; (8014f74 <enet_init+0x2e0>)
 8014f36:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8014f38:	680a      	ldr	r2, [r1, #0]
 8014f3a:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8014f3e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014f42:	4302      	orrs	r2, r0
 8014f44:	600a      	str	r2, [r1, #0]
 8014f46:	681a      	ldr	r2, [r3, #0]
 8014f48:	04d1      	lsls	r1, r2, #19
 8014f4a:	d506      	bpl.n	8014f5a <enet_init+0x2c6>
 8014f4c:	4909      	ldr	r1, [pc, #36]	; (8014f74 <enet_init+0x2e0>)
 8014f4e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8014f50:	680a      	ldr	r2, [r1, #0]
 8014f52:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8014f56:	4302      	orrs	r2, r0
 8014f58:	600a      	str	r2, [r1, #0]
 8014f5a:	681a      	ldr	r2, [r3, #0]
 8014f5c:	0492      	lsls	r2, r2, #18
 8014f5e:	d506      	bpl.n	8014f6e <enet_init+0x2da>
 8014f60:	4904      	ldr	r1, [pc, #16]	; (8014f74 <enet_init+0x2e0>)
 8014f62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f64:	680a      	ldr	r2, [r1, #0]
 8014f66:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8014f6a:	4313      	orrs	r3, r2
 8014f6c:	600b      	str	r3, [r1, #0]
 8014f6e:	2001      	movs	r0, #1
 8014f70:	e6d6      	b.n	8014d20 <enet_init+0x8c>
 8014f72:	bf00      	nop
 8014f74:	40028000 	andmi	r8, r2, r0
 8014f78:	40029000 	andmi	r9, r2, r0
 8014f7c:	2000fef0 	strdcs	pc, [r0], -r0
 8014f80:	02000080 	andeq	r0, r0, #128	; 0x80
 8014f84:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c
 8014f88:	01000004 	tsteq	r0, r4

08014f8c <enet_txfifo_flush>:
 8014f8c:	4b06      	ldr	r3, [pc, #24]	; (8014fa8 <enet_txfifo_flush+0x1c>)
 8014f8e:	4807      	ldr	r0, [pc, #28]	; (8014fac <enet_txfifo_flush+0x20>)
 8014f90:	699a      	ldr	r2, [r3, #24]
 8014f92:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8014f96:	619a      	str	r2, [r3, #24]
 8014f98:	699a      	ldr	r2, [r3, #24]
 8014f9a:	02d2      	lsls	r2, r2, #11
 8014f9c:	d502      	bpl.n	8014fa4 <enet_txfifo_flush+0x18>
 8014f9e:	3801      	subs	r0, #1
 8014fa0:	d1fa      	bne.n	8014f98 <enet_txfifo_flush+0xc>
 8014fa2:	4770      	bx	lr
 8014fa4:	2001      	movs	r0, #1
 8014fa6:	4770      	bx	lr
 8014fa8:	40029000 	andmi	r9, r2, r0
 8014fac:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014fb0 <enet_tx_enable>:
 8014fb0:	4a06      	ldr	r2, [pc, #24]	; (8014fcc <enet_tx_enable+0x1c>)
 8014fb2:	b508      	push	{r3, lr}
 8014fb4:	6813      	ldr	r3, [r2, #0]
 8014fb6:	f043 0308 	orr.w	r3, r3, #8
 8014fba:	6013      	str	r3, [r2, #0]
 8014fbc:	f7ff ffe6 	bl	8014f8c <enet_txfifo_flush>
 8014fc0:	4a03      	ldr	r2, [pc, #12]	; (8014fd0 <enet_tx_enable+0x20>)
 8014fc2:	6993      	ldr	r3, [r2, #24]
 8014fc4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014fc8:	6193      	str	r3, [r2, #24]
 8014fca:	bd08      	pop	{r3, pc}
 8014fcc:	40028000 	andmi	r8, r2, r0
 8014fd0:	40029000 	andmi	r9, r2, r0

08014fd4 <enet_enable>:
 8014fd4:	b508      	push	{r3, lr}
 8014fd6:	f7ff ffeb 	bl	8014fb0 <enet_tx_enable>
 8014fda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014fde:	f7ff bdbb 	b.w	8014b58 <enet_rx_enable>
	...

08014fe4 <enet_desc_information_get>:
 8014fe4:	2905      	cmp	r1, #5
 8014fe6:	d820      	bhi.n	801502a <enet_desc_information_get+0x46>
 8014fe8:	e8df f001 	tbb	[pc, r1]
 8014fec:	0309191b 	movweq	r1, #39195	; 0x991b
 8014ff0:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8014ff4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014ff8:	4770      	bx	lr
 8014ffa:	88c0      	ldrh	r0, [r0, #6]
 8014ffc:	e7fa      	b.n	8014ff4 <enet_desc_information_get+0x10>
 8014ffe:	6802      	ldr	r2, [r0, #0]
 8015000:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8015004:	2b04      	cmp	r3, #4
 8015006:	d913      	bls.n	8015030 <enet_desc_information_get+0x4c>
 8015008:	490a      	ldr	r1, [pc, #40]	; (8015034 <enet_desc_information_get+0x50>)
 801500a:	6809      	ldr	r1, [r1, #0]
 801500c:	0189      	lsls	r1, r1, #6
 801500e:	f1a3 0004 	sub.w	r0, r3, #4
 8015012:	d50e      	bpl.n	8015032 <enet_desc_information_get+0x4e>
 8015014:	f012 0f20 	tst.w	r2, #32
 8015018:	bf18      	it	ne
 801501a:	4618      	movne	r0, r3
 801501c:	4770      	bx	lr
 801501e:	6880      	ldr	r0, [r0, #8]
 8015020:	4770      	bx	lr
 8015022:	6800      	ldr	r0, [r0, #0]
 8015024:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8015028:	4770      	bx	lr
 801502a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801502e:	4770      	bx	lr
 8015030:	2000      	movs	r0, #0
 8015032:	4770      	bx	lr
 8015034:	40028000 	andmi	r8, r2, r0

08015038 <enet_rxframe_drop>:
 8015038:	4815      	ldr	r0, [pc, #84]	; (8015090 <enet_rxframe_drop+0x58>)
 801503a:	4916      	ldr	r1, [pc, #88]	; (8015094 <enet_rxframe_drop+0x5c>)
 801503c:	6802      	ldr	r2, [r0, #0]
 801503e:	b510      	push	{r4, lr}
 8015040:	6854      	ldr	r4, [r2, #4]
 8015042:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8015046:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801504a:	6013      	str	r3, [r2, #0]
 801504c:	680b      	ldr	r3, [r1, #0]
 801504e:	d009      	beq.n	8015064 <enet_rxframe_drop+0x2c>
 8015050:	b12b      	cbz	r3, 801505e <enet_rxframe_drop+0x26>
 8015052:	68da      	ldr	r2, [r3, #12]
 8015054:	6002      	str	r2, [r0, #0]
 8015056:	681a      	ldr	r2, [r3, #0]
 8015058:	b1ba      	cbz	r2, 801508a <enet_rxframe_drop+0x52>
 801505a:	600a      	str	r2, [r1, #0]
 801505c:	bd10      	pop	{r4, pc}
 801505e:	68d3      	ldr	r3, [r2, #12]
 8015060:	6003      	str	r3, [r0, #0]
 8015062:	e7fb      	b.n	801505c <enet_rxframe_drop+0x24>
 8015064:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8015068:	4c0b      	ldr	r4, [pc, #44]	; (8015098 <enet_rxframe_drop+0x60>)
 801506a:	d006      	beq.n	801507a <enet_rxframe_drop+0x42>
 801506c:	68e2      	ldr	r2, [r4, #12]
 801506e:	6002      	str	r2, [r0, #0]
 8015070:	2b00      	cmp	r3, #0
 8015072:	d0f3      	beq.n	801505c <enet_rxframe_drop+0x24>
 8015074:	681b      	ldr	r3, [r3, #0]
 8015076:	600b      	str	r3, [r1, #0]
 8015078:	e7f0      	b.n	801505c <enet_rxframe_drop+0x24>
 801507a:	6824      	ldr	r4, [r4, #0]
 801507c:	3210      	adds	r2, #16
 801507e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8015082:	4422      	add	r2, r4
 8015084:	6002      	str	r2, [r0, #0]
 8015086:	2b00      	cmp	r3, #0
 8015088:	d0e8      	beq.n	801505c <enet_rxframe_drop+0x24>
 801508a:	3310      	adds	r3, #16
 801508c:	e7f3      	b.n	8015076 <enet_rxframe_drop+0x3e>
 801508e:	bf00      	nop
 8015090:	2000fee8 	andcs	pc, r0, r8, ror #29
 8015094:	2000fee0 	andcs	pc, r0, r0, ror #29
 8015098:	40029000 	andmi	r9, r2, r0

0801509c <enet_rxframe_size_get>:
 801509c:	b508      	push	{r3, lr}
 801509e:	4b10      	ldr	r3, [pc, #64]	; (80150e0 <enet_rxframe_size_get+0x44>)
 80150a0:	681b      	ldr	r3, [r3, #0]
 80150a2:	681b      	ldr	r3, [r3, #0]
 80150a4:	2b00      	cmp	r3, #0
 80150a6:	db19      	blt.n	80150dc <enet_rxframe_size_get+0x40>
 80150a8:	f403 4203 	and.w	r2, r3, #33536	; 0x8300
 80150ac:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80150b0:	d003      	beq.n	80150ba <enet_rxframe_size_get+0x1e>
 80150b2:	f7ff ffc1 	bl	8015038 <enet_rxframe_drop>
 80150b6:	2001      	movs	r0, #1
 80150b8:	bd08      	pop	{r3, pc}
 80150ba:	f003 0221 	and.w	r2, r3, #33	; 0x21
 80150be:	2a21      	cmp	r2, #33	; 0x21
 80150c0:	d0f7      	beq.n	80150b2 <enet_rxframe_size_get+0x16>
 80150c2:	4908      	ldr	r1, [pc, #32]	; (80150e4 <enet_rxframe_size_get+0x48>)
 80150c4:	6809      	ldr	r1, [r1, #0]
 80150c6:	f3c3 420d 	ubfx	r2, r3, #16, #14
 80150ca:	0189      	lsls	r1, r1, #6
 80150cc:	f1a2 0004 	sub.w	r0, r2, #4
 80150d0:	d5f2      	bpl.n	80150b8 <enet_rxframe_size_get+0x1c>
 80150d2:	f013 0f20 	tst.w	r3, #32
 80150d6:	bf18      	it	ne
 80150d8:	4610      	movne	r0, r2
 80150da:	e7ed      	b.n	80150b8 <enet_rxframe_size_get+0x1c>
 80150dc:	2000      	movs	r0, #0
 80150de:	e7eb      	b.n	80150b8 <enet_rxframe_size_get+0x1c>
 80150e0:	2000fee8 	andcs	pc, r0, r8, ror #29
 80150e4:	40028000 	andmi	r8, r2, r0

080150e8 <enet_initpara_reset>:
 80150e8:	4b08      	ldr	r3, [pc, #32]	; (801510c <enet_initpara_reset+0x24>)
 80150ea:	2200      	movs	r2, #0
 80150ec:	e9c3 2200 	strd	r2, r2, [r3]
 80150f0:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80150f4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80150f8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80150fc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8015100:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8015104:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8015108:	639a      	str	r2, [r3, #56]	; 0x38
 801510a:	4770      	bx	lr
 801510c:	2000fef0 	strdcs	pc, [r0], -r0

08015110 <enet_deinit>:
 8015110:	b508      	push	{r3, lr}
 8015112:	f240 4019 	movw	r0, #1049	; 0x419
 8015116:	f000 f8da 	bl	80152ce <rcu_periph_reset_enable>
 801511a:	f240 4019 	movw	r0, #1049	; 0x419
 801511e:	f000 f8d8 	bl	80152d2 <rcu_periph_reset_disable>
 8015122:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015126:	f7ff bfdf 	b.w	80150e8 <enet_initpara_reset>
	...

0801512c <fwdgt_enable>:
 801512c:	4b02      	ldr	r3, [pc, #8]	; (8015138 <fwdgt_enable+0xc>)
 801512e:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8015132:	601a      	str	r2, [r3, #0]
 8015134:	4770      	bx	lr
 8015136:	bf00      	nop
 8015138:	40003000 	andmi	r3, r0, r0

0801513c <fwdgt_counter_reload>:
 801513c:	4b02      	ldr	r3, [pc, #8]	; (8015148 <fwdgt_counter_reload+0xc>)
 801513e:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8015142:	601a      	str	r2, [r3, #0]
 8015144:	4770      	bx	lr
 8015146:	bf00      	nop
 8015148:	40003000 	andmi	r3, r0, r0

0801514c <fwdgt_config>:
 801514c:	4a12      	ldr	r2, [pc, #72]	; (8015198 <fwdgt_config+0x4c>)
 801514e:	b510      	push	{r4, lr}
 8015150:	f245 5355 	movw	r3, #21845	; 0x5555
 8015154:	4c11      	ldr	r4, [pc, #68]	; (801519c <fwdgt_config+0x50>)
 8015156:	6013      	str	r3, [r2, #0]
 8015158:	68d3      	ldr	r3, [r2, #12]
 801515a:	3c01      	subs	r4, #1
 801515c:	f003 0301 	and.w	r3, r3, #1
 8015160:	d013      	beq.n	801518a <fwdgt_config+0x3e>
 8015162:	2b00      	cmp	r3, #0
 8015164:	d1f8      	bne.n	8015158 <fwdgt_config+0xc>
 8015166:	6051      	str	r1, [r2, #4]
 8015168:	490c      	ldr	r1, [pc, #48]	; (801519c <fwdgt_config+0x50>)
 801516a:	4a0b      	ldr	r2, [pc, #44]	; (8015198 <fwdgt_config+0x4c>)
 801516c:	68d3      	ldr	r3, [r2, #12]
 801516e:	3901      	subs	r1, #1
 8015170:	f003 0302 	and.w	r3, r3, #2
 8015174:	d00d      	beq.n	8015192 <fwdgt_config+0x46>
 8015176:	2b00      	cmp	r3, #0
 8015178:	d1f8      	bne.n	801516c <fwdgt_config+0x20>
 801517a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801517e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8015182:	6090      	str	r0, [r2, #8]
 8015184:	6013      	str	r3, [r2, #0]
 8015186:	2001      	movs	r0, #1
 8015188:	e002      	b.n	8015190 <fwdgt_config+0x44>
 801518a:	2b00      	cmp	r3, #0
 801518c:	d0eb      	beq.n	8015166 <fwdgt_config+0x1a>
 801518e:	2000      	movs	r0, #0
 8015190:	bd10      	pop	{r4, pc}
 8015192:	2b00      	cmp	r3, #0
 8015194:	d1fb      	bne.n	801518e <fwdgt_config+0x42>
 8015196:	e7f0      	b.n	801517a <fwdgt_config+0x2e>
 8015198:	40003000 	andmi	r3, r0, r0
 801519c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080151a0 <gpio_mode_set>:
 80151a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80151a4:	6805      	ldr	r5, [r0, #0]
 80151a6:	68c4      	ldr	r4, [r0, #12]
 80151a8:	2600      	movs	r6, #0
 80151aa:	f04f 0e03 	mov.w	lr, #3
 80151ae:	fa23 f706 	lsr.w	r7, r3, r6
 80151b2:	07ff      	lsls	r7, r7, #31
 80151b4:	d50d      	bpl.n	80151d2 <gpio_mode_set+0x32>
 80151b6:	0077      	lsls	r7, r6, #1
 80151b8:	fa0e fc07 	lsl.w	ip, lr, r7
 80151bc:	fa01 f807 	lsl.w	r8, r1, r7
 80151c0:	ea25 050c 	bic.w	r5, r5, ip
 80151c4:	ea24 040c 	bic.w	r4, r4, ip
 80151c8:	fa02 f707 	lsl.w	r7, r2, r7
 80151cc:	ea48 0505 	orr.w	r5, r8, r5
 80151d0:	433c      	orrs	r4, r7
 80151d2:	3601      	adds	r6, #1
 80151d4:	2e10      	cmp	r6, #16
 80151d6:	d1ea      	bne.n	80151ae <gpio_mode_set+0xe>
 80151d8:	6005      	str	r5, [r0, #0]
 80151da:	60c4      	str	r4, [r0, #12]
 80151dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080151e0 <gpio_output_options_set>:
 80151e0:	2901      	cmp	r1, #1
 80151e2:	6841      	ldr	r1, [r0, #4]
 80151e4:	bf0c      	ite	eq
 80151e6:	4319      	orreq	r1, r3
 80151e8:	4399      	bicne	r1, r3
 80151ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80151ec:	6041      	str	r1, [r0, #4]
 80151ee:	6881      	ldr	r1, [r0, #8]
 80151f0:	2400      	movs	r4, #0
 80151f2:	2603      	movs	r6, #3
 80151f4:	fa23 f504 	lsr.w	r5, r3, r4
 80151f8:	07ed      	lsls	r5, r5, #31
 80151fa:	d507      	bpl.n	801520c <gpio_output_options_set+0x2c>
 80151fc:	0065      	lsls	r5, r4, #1
 80151fe:	fa06 f705 	lsl.w	r7, r6, r5
 8015202:	ea21 0107 	bic.w	r1, r1, r7
 8015206:	fa02 f505 	lsl.w	r5, r2, r5
 801520a:	4329      	orrs	r1, r5
 801520c:	3401      	adds	r4, #1
 801520e:	2c10      	cmp	r4, #16
 8015210:	d1f0      	bne.n	80151f4 <gpio_output_options_set+0x14>
 8015212:	6081      	str	r1, [r0, #8]
 8015214:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015216 <gpio_af_set>:
 8015216:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015218:	6a06      	ldr	r6, [r0, #32]
 801521a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 801521c:	2300      	movs	r3, #0
 801521e:	f04f 0c0f 	mov.w	ip, #15
 8015222:	fa22 f403 	lsr.w	r4, r2, r3
 8015226:	07e7      	lsls	r7, r4, #31
 8015228:	d507      	bpl.n	801523a <gpio_af_set+0x24>
 801522a:	009c      	lsls	r4, r3, #2
 801522c:	fa0c f704 	lsl.w	r7, ip, r4
 8015230:	ea26 0607 	bic.w	r6, r6, r7
 8015234:	fa01 f404 	lsl.w	r4, r1, r4
 8015238:	4326      	orrs	r6, r4
 801523a:	3301      	adds	r3, #1
 801523c:	2b08      	cmp	r3, #8
 801523e:	d1f0      	bne.n	8015222 <gpio_af_set+0xc>
 8015240:	2300      	movs	r3, #0
 8015242:	f04f 0c0f 	mov.w	ip, #15
 8015246:	f103 0408 	add.w	r4, r3, #8
 801524a:	fa22 f404 	lsr.w	r4, r2, r4
 801524e:	07e4      	lsls	r4, r4, #31
 8015250:	d507      	bpl.n	8015262 <gpio_af_set+0x4c>
 8015252:	009c      	lsls	r4, r3, #2
 8015254:	fa0c f704 	lsl.w	r7, ip, r4
 8015258:	ea25 0507 	bic.w	r5, r5, r7
 801525c:	fa01 f404 	lsl.w	r4, r1, r4
 8015260:	4325      	orrs	r5, r4
 8015262:	3301      	adds	r3, #1
 8015264:	2b08      	cmp	r3, #8
 8015266:	d1ee      	bne.n	8015246 <gpio_af_set+0x30>
 8015268:	6206      	str	r6, [r0, #32]
 801526a:	6245      	str	r5, [r0, #36]	; 0x24
 801526c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015270 <pmu_backup_ldo_config>:
 8015270:	4b04      	ldr	r3, [pc, #16]	; (8015284 <pmu_backup_ldo_config+0x14>)
 8015272:	685a      	ldr	r2, [r3, #4]
 8015274:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8015278:	605a      	str	r2, [r3, #4]
 801527a:	685a      	ldr	r2, [r3, #4]
 801527c:	4310      	orrs	r0, r2
 801527e:	6058      	str	r0, [r3, #4]
 8015280:	4770      	bx	lr
 8015282:	bf00      	nop
 8015284:	40007000 	andmi	r7, r0, r0

08015288 <pmu_backup_write_enable>:
 8015288:	4a02      	ldr	r2, [pc, #8]	; (8015294 <pmu_backup_write_enable+0xc>)
 801528a:	6813      	ldr	r3, [r2, #0]
 801528c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015290:	6013      	str	r3, [r2, #0]
 8015292:	4770      	bx	lr
 8015294:	40007000 	andmi	r7, r0, r0

08015298 <rcu_periph_clock_enable>:
 8015298:	0983      	lsrs	r3, r0, #6
 801529a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801529e:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80152a2:	f000 001f 	and.w	r0, r0, #31
 80152a6:	6819      	ldr	r1, [r3, #0]
 80152a8:	2201      	movs	r2, #1
 80152aa:	4082      	lsls	r2, r0
 80152ac:	430a      	orrs	r2, r1
 80152ae:	601a      	str	r2, [r3, #0]
 80152b0:	4770      	bx	lr

080152b2 <rcu_periph_clock_disable>:
 80152b2:	0983      	lsrs	r3, r0, #6
 80152b4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80152b8:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80152bc:	f000 001f 	and.w	r0, r0, #31
 80152c0:	681a      	ldr	r2, [r3, #0]
 80152c2:	2101      	movs	r1, #1
 80152c4:	4081      	lsls	r1, r0
 80152c6:	ea22 0201 	bic.w	r2, r2, r1
 80152ca:	601a      	str	r2, [r3, #0]
 80152cc:	4770      	bx	lr

080152ce <rcu_periph_reset_enable>:
 80152ce:	f7ff bfe3 	b.w	8015298 <rcu_periph_clock_enable>

080152d2 <rcu_periph_reset_disable>:
 80152d2:	f7ff bfee 	b.w	80152b2 <rcu_periph_clock_disable>
	...

080152d8 <rcu_ckout0_config>:
 80152d8:	4a04      	ldr	r2, [pc, #16]	; (80152ec <rcu_ckout0_config+0x14>)
 80152da:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 80152de:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 80152e2:	4319      	orrs	r1, r3
 80152e4:	4308      	orrs	r0, r1
 80152e6:	f8c2 0808 	str.w	r0, [r2, #2056]	; 0x808
 80152ea:	4770      	bx	lr
 80152ec:	40023000 	andmi	r3, r2, r0

080152f0 <rcu_timer_clock_prescaler_config>:
 80152f0:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 80152f4:	4298      	cmp	r0, r3
 80152f6:	4b05      	ldr	r3, [pc, #20]	; (801530c <rcu_timer_clock_prescaler_config+0x1c>)
 80152f8:	f8d3 288c 	ldr.w	r2, [r3, #2188]	; 0x88c
 80152fc:	bf0c      	ite	eq
 80152fe:	f022 7280 	biceq.w	r2, r2, #16777216	; 0x1000000
 8015302:	4302      	orrne	r2, r0
 8015304:	f8c3 288c 	str.w	r2, [r3, #2188]	; 0x88c
 8015308:	4770      	bx	lr
 801530a:	bf00      	nop
 801530c:	40023000 	andmi	r3, r2, r0

08015310 <rcu_clock_freq_get>:
 8015310:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015312:	4b35      	ldr	r3, [pc, #212]	; (80153e8 <rcu_clock_freq_get+0xd8>)
 8015314:	b089      	sub	sp, #36	; 0x24
 8015316:	4604      	mov	r4, r0
 8015318:	ad04      	add	r5, sp, #16
 801531a:	f103 0610 	add.w	r6, r3, #16
 801531e:	461f      	mov	r7, r3
 8015320:	6818      	ldr	r0, [r3, #0]
 8015322:	6859      	ldr	r1, [r3, #4]
 8015324:	462a      	mov	r2, r5
 8015326:	c203      	stmia	r2!, {r0, r1}
 8015328:	3308      	adds	r3, #8
 801532a:	42b3      	cmp	r3, r6
 801532c:	4615      	mov	r5, r2
 801532e:	d1f7      	bne.n	8015320 <rcu_clock_freq_get+0x10>
 8015330:	6938      	ldr	r0, [r7, #16]
 8015332:	6871      	ldr	r1, [r6, #4]
 8015334:	4a2d      	ldr	r2, [pc, #180]	; (80153ec <rcu_clock_freq_get+0xdc>)
 8015336:	466b      	mov	r3, sp
 8015338:	c303      	stmia	r3!, {r0, r1}
 801533a:	c303      	stmia	r3!, {r0, r1}
 801533c:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8015340:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015344:	2b01      	cmp	r3, #1
 8015346:	d03f      	beq.n	80153c8 <rcu_clock_freq_get+0xb8>
 8015348:	2b02      	cmp	r3, #2
 801534a:	d13f      	bne.n	80153cc <rcu_clock_freq_get+0xbc>
 801534c:	f8d2 0804 	ldr.w	r0, [r2, #2052]	; 0x804
 8015350:	f8d2 1804 	ldr.w	r1, [r2, #2052]	; 0x804
 8015354:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8015358:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 801535c:	4d24      	ldr	r5, [pc, #144]	; (80153f0 <rcu_clock_freq_get+0xe0>)
 801535e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8015362:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 8015366:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801536a:	f103 0301 	add.w	r3, r3, #1
 801536e:	4a21      	ldr	r2, [pc, #132]	; (80153f4 <rcu_clock_freq_get+0xe4>)
 8015370:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8015374:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8015378:	bf08      	it	eq
 801537a:	462a      	moveq	r2, r5
 801537c:	fbb2 f2f0 	udiv	r2, r2, r0
 8015380:	434a      	muls	r2, r1
 8015382:	fbb2 f0f3 	udiv	r0, r2, r3
 8015386:	4919      	ldr	r1, [pc, #100]	; (80153ec <rcu_clock_freq_get+0xdc>)
 8015388:	f8d1 3808 	ldr.w	r3, [r1, #2056]	; 0x808
 801538c:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8015390:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8015394:	3220      	adds	r2, #32
 8015396:	446a      	add	r2, sp
 8015398:	f3c3 1303 	ubfx	r3, r3, #4, #4
 801539c:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80153a0:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 80153a4:	3320      	adds	r3, #32
 80153a6:	446b      	add	r3, sp
 80153a8:	f3c2 3242 	ubfx	r2, r2, #13, #3
 80153ac:	3220      	adds	r2, #32
 80153ae:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80153b2:	446a      	add	r2, sp
 80153b4:	fa20 f303 	lsr.w	r3, r0, r3
 80153b8:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80153bc:	2c03      	cmp	r4, #3
 80153be:	d810      	bhi.n	80153e2 <rcu_clock_freq_get+0xd2>
 80153c0:	e8df f004 	tbb	[pc, r4]
 80153c4:	0c090607 	stceq	6, cr0, [r9], {7}
 80153c8:	480a      	ldr	r0, [pc, #40]	; (80153f4 <rcu_clock_freq_get+0xe4>)
 80153ca:	e7dc      	b.n	8015386 <rcu_clock_freq_get+0x76>
 80153cc:	4808      	ldr	r0, [pc, #32]	; (80153f0 <rcu_clock_freq_get+0xe0>)
 80153ce:	e7da      	b.n	8015386 <rcu_clock_freq_get+0x76>
 80153d0:	4618      	mov	r0, r3
 80153d2:	b009      	add	sp, #36	; 0x24
 80153d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80153d6:	fa23 f005 	lsr.w	r0, r3, r5
 80153da:	e7fa      	b.n	80153d2 <rcu_clock_freq_get+0xc2>
 80153dc:	fa23 f002 	lsr.w	r0, r3, r2
 80153e0:	e7f7      	b.n	80153d2 <rcu_clock_freq_get+0xc2>
 80153e2:	2000      	movs	r0, #0
 80153e4:	e7f5      	b.n	80153d2 <rcu_clock_freq_get+0xc2>
 80153e6:	bf00      	nop
 80153e8:	08016898 	stmdaeq	r1, {r3, r4, r7, fp, sp, lr}
 80153ec:	40023000 	andmi	r3, r2, r0
 80153f0:	00f42400 	rscseq	r2, r4, r0, lsl #8
 80153f4:	017d7840 	cmneq	sp, r0, asr #16

080153f8 <syscfg_enet_phy_interface_config>:
 80153f8:	4a04      	ldr	r2, [pc, #16]	; (801540c <syscfg_enet_phy_interface_config+0x14>)
 80153fa:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 80153fe:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8015402:	4318      	orrs	r0, r3
 8015404:	f8c2 0804 	str.w	r0, [r2, #2052]	; 0x804
 8015408:	4770      	bx	lr
 801540a:	bf00      	nop
 801540c:	40013000 	andmi	r3, r1, r0

08015410 <timer_deinit>:
 8015410:	b508      	push	{r3, lr}
 8015412:	4b4e      	ldr	r3, [pc, #312]	; (801554c <timer_deinit+0x13c>)
 8015414:	4298      	cmp	r0, r3
 8015416:	f000 8092 	beq.w	801553e <timer_deinit+0x12e>
 801541a:	d822      	bhi.n	8015462 <timer_deinit+0x52>
 801541c:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8015420:	4298      	cmp	r0, r3
 8015422:	d062      	beq.n	80154ea <timer_deinit+0xda>
 8015424:	d80b      	bhi.n	801543e <timer_deinit+0x2e>
 8015426:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801542a:	4298      	cmp	r0, r3
 801542c:	d04f      	beq.n	80154ce <timer_deinit+0xbe>
 801542e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015432:	4298      	cmp	r0, r3
 8015434:	d052      	beq.n	80154dc <timer_deinit+0xcc>
 8015436:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801543a:	d041      	beq.n	80154c0 <timer_deinit+0xb0>
 801543c:	bd08      	pop	{r3, pc}
 801543e:	4b44      	ldr	r3, [pc, #272]	; (8015550 <timer_deinit+0x140>)
 8015440:	4298      	cmp	r0, r3
 8015442:	d059      	beq.n	80154f8 <timer_deinit+0xe8>
 8015444:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015448:	4298      	cmp	r0, r3
 801544a:	d071      	beq.n	8015530 <timer_deinit+0x120>
 801544c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015450:	4298      	cmp	r0, r3
 8015452:	d1f3      	bne.n	801543c <timer_deinit+0x2c>
 8015454:	f640 0004 	movw	r0, #2052	; 0x804
 8015458:	f7ff ff39 	bl	80152ce <rcu_periph_reset_enable>
 801545c:	f640 0004 	movw	r0, #2052	; 0x804
 8015460:	e02a      	b.n	80154b8 <timer_deinit+0xa8>
 8015462:	4b3c      	ldr	r3, [pc, #240]	; (8015554 <timer_deinit+0x144>)
 8015464:	4298      	cmp	r0, r3
 8015466:	d055      	beq.n	8015514 <timer_deinit+0x104>
 8015468:	d812      	bhi.n	8015490 <timer_deinit+0x80>
 801546a:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 801546e:	4298      	cmp	r0, r3
 8015470:	d01c      	beq.n	80154ac <timer_deinit+0x9c>
 8015472:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015476:	4298      	cmp	r0, r3
 8015478:	d045      	beq.n	8015506 <timer_deinit+0xf6>
 801547a:	f5a3 4364 	sub.w	r3, r3, #58368	; 0xe400
 801547e:	4298      	cmp	r0, r3
 8015480:	d1dc      	bne.n	801543c <timer_deinit+0x2c>
 8015482:	f640 0008 	movw	r0, #2056	; 0x808
 8015486:	f7ff ff22 	bl	80152ce <rcu_periph_reset_enable>
 801548a:	f640 0008 	movw	r0, #2056	; 0x808
 801548e:	e013      	b.n	80154b8 <timer_deinit+0xa8>
 8015490:	4b31      	ldr	r3, [pc, #196]	; (8015558 <timer_deinit+0x148>)
 8015492:	4298      	cmp	r0, r3
 8015494:	d045      	beq.n	8015522 <timer_deinit+0x112>
 8015496:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801549a:	4298      	cmp	r0, r3
 801549c:	d1ce      	bne.n	801543c <timer_deinit+0x2c>
 801549e:	f640 1012 	movw	r0, #2322	; 0x912
 80154a2:	f7ff ff14 	bl	80152ce <rcu_periph_reset_enable>
 80154a6:	f640 1012 	movw	r0, #2322	; 0x912
 80154aa:	e005      	b.n	80154b8 <timer_deinit+0xa8>
 80154ac:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80154b0:	f7ff ff0d 	bl	80152ce <rcu_periph_reset_enable>
 80154b4:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80154b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80154bc:	f7ff bf09 	b.w	80152d2 <rcu_periph_reset_disable>
 80154c0:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80154c4:	f7ff ff03 	bl	80152ce <rcu_periph_reset_enable>
 80154c8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80154cc:	e7f4      	b.n	80154b8 <timer_deinit+0xa8>
 80154ce:	f640 0001 	movw	r0, #2049	; 0x801
 80154d2:	f7ff fefc 	bl	80152ce <rcu_periph_reset_enable>
 80154d6:	f640 0001 	movw	r0, #2049	; 0x801
 80154da:	e7ed      	b.n	80154b8 <timer_deinit+0xa8>
 80154dc:	f640 0002 	movw	r0, #2050	; 0x802
 80154e0:	f7ff fef5 	bl	80152ce <rcu_periph_reset_enable>
 80154e4:	f640 0002 	movw	r0, #2050	; 0x802
 80154e8:	e7e6      	b.n	80154b8 <timer_deinit+0xa8>
 80154ea:	f640 0003 	movw	r0, #2051	; 0x803
 80154ee:	f7ff feee 	bl	80152ce <rcu_periph_reset_enable>
 80154f2:	f640 0003 	movw	r0, #2051	; 0x803
 80154f6:	e7df      	b.n	80154b8 <timer_deinit+0xa8>
 80154f8:	f640 0005 	movw	r0, #2053	; 0x805
 80154fc:	f7ff fee7 	bl	80152ce <rcu_periph_reset_enable>
 8015500:	f640 0005 	movw	r0, #2053	; 0x805
 8015504:	e7d8      	b.n	80154b8 <timer_deinit+0xa8>
 8015506:	f640 1001 	movw	r0, #2305	; 0x901
 801550a:	f7ff fee0 	bl	80152ce <rcu_periph_reset_enable>
 801550e:	f640 1001 	movw	r0, #2305	; 0x901
 8015512:	e7d1      	b.n	80154b8 <timer_deinit+0xa8>
 8015514:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8015518:	f7ff fed9 	bl	80152ce <rcu_periph_reset_enable>
 801551c:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8015520:	e7ca      	b.n	80154b8 <timer_deinit+0xa8>
 8015522:	f640 1011 	movw	r0, #2321	; 0x911
 8015526:	f7ff fed2 	bl	80152ce <rcu_periph_reset_enable>
 801552a:	f640 1011 	movw	r0, #2321	; 0x911
 801552e:	e7c3      	b.n	80154b8 <timer_deinit+0xa8>
 8015530:	f640 0006 	movw	r0, #2054	; 0x806
 8015534:	f7ff fecb 	bl	80152ce <rcu_periph_reset_enable>
 8015538:	f640 0006 	movw	r0, #2054	; 0x806
 801553c:	e7bc      	b.n	80154b8 <timer_deinit+0xa8>
 801553e:	f640 0007 	movw	r0, #2055	; 0x807
 8015542:	f7ff fec4 	bl	80152ce <rcu_periph_reset_enable>
 8015546:	f640 0007 	movw	r0, #2055	; 0x807
 801554a:	e7b5      	b.n	80154b8 <timer_deinit+0xa8>
 801554c:	40001c00 	andmi	r1, r0, r0, lsl #24
 8015550:	40001400 	andmi	r1, r0, r0, lsl #8
 8015554:	40014000 	andmi	r4, r1, r0
 8015558:	40014400 	andmi	r4, r1, r0, lsl #8

0801555c <timer_init>:
 801555c:	880b      	ldrh	r3, [r1, #0]
 801555e:	6283      	str	r3, [r0, #40]	; 0x28
 8015560:	4b1a      	ldr	r3, [pc, #104]	; (80155cc <timer_init+0x70>)
 8015562:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8015566:	429a      	cmp	r2, r3
 8015568:	d004      	beq.n	8015574 <timer_init+0x18>
 801556a:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 801556e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015572:	d10b      	bne.n	801558c <timer_init+0x30>
 8015574:	6803      	ldr	r3, [r0, #0]
 8015576:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801557a:	6003      	str	r3, [r0, #0]
 801557c:	6802      	ldr	r2, [r0, #0]
 801557e:	884b      	ldrh	r3, [r1, #2]
 8015580:	4313      	orrs	r3, r2
 8015582:	6003      	str	r3, [r0, #0]
 8015584:	6802      	ldr	r2, [r0, #0]
 8015586:	888b      	ldrh	r3, [r1, #4]
 8015588:	4313      	orrs	r3, r2
 801558a:	6003      	str	r3, [r0, #0]
 801558c:	688b      	ldr	r3, [r1, #8]
 801558e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8015590:	4b0f      	ldr	r3, [pc, #60]	; (80155d0 <timer_init+0x74>)
 8015592:	4298      	cmp	r0, r3
 8015594:	d003      	beq.n	801559e <timer_init+0x42>
 8015596:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801559a:	4298      	cmp	r0, r3
 801559c:	d104      	bne.n	80155a8 <timer_init+0x4c>
 801559e:	6943      	ldr	r3, [r0, #20]
 80155a0:	f043 0301 	orr.w	r3, r3, #1
 80155a4:	6143      	str	r3, [r0, #20]
 80155a6:	4770      	bx	lr
 80155a8:	6803      	ldr	r3, [r0, #0]
 80155aa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80155ae:	6003      	str	r3, [r0, #0]
 80155b0:	6802      	ldr	r2, [r0, #0]
 80155b2:	88cb      	ldrh	r3, [r1, #6]
 80155b4:	4313      	orrs	r3, r2
 80155b6:	6003      	str	r3, [r0, #0]
 80155b8:	4b04      	ldr	r3, [pc, #16]	; (80155cc <timer_init+0x70>)
 80155ba:	4298      	cmp	r0, r3
 80155bc:	d002      	beq.n	80155c4 <timer_init+0x68>
 80155be:	4b05      	ldr	r3, [pc, #20]	; (80155d4 <timer_init+0x78>)
 80155c0:	4298      	cmp	r0, r3
 80155c2:	d1ec      	bne.n	801559e <timer_init+0x42>
 80155c4:	7b0b      	ldrb	r3, [r1, #12]
 80155c6:	6303      	str	r3, [r0, #48]	; 0x30
 80155c8:	e7e9      	b.n	801559e <timer_init+0x42>
 80155ca:	bf00      	nop
 80155cc:	40010000 	andmi	r0, r1, r0
 80155d0:	40001000 	andmi	r1, r0, r0
 80155d4:	40010400 	andmi	r0, r1, r0, lsl #8

080155d8 <timer_enable>:
 80155d8:	6803      	ldr	r3, [r0, #0]
 80155da:	f043 0301 	orr.w	r3, r3, #1
 80155de:	6003      	str	r3, [r0, #0]
 80155e0:	4770      	bx	lr

080155e2 <timer_interrupt_enable>:
 80155e2:	68c3      	ldr	r3, [r0, #12]
 80155e4:	4319      	orrs	r1, r3
 80155e6:	60c1      	str	r1, [r0, #12]
 80155e8:	4770      	bx	lr

080155ea <timer_interrupt_flag_clear>:
 80155ea:	43c9      	mvns	r1, r1
 80155ec:	6101      	str	r1, [r0, #16]
 80155ee:	4770      	bx	lr

080155f0 <timer_flag_clear>:
 80155f0:	43c9      	mvns	r1, r1
 80155f2:	6101      	str	r1, [r0, #16]
 80155f4:	4770      	bx	lr

080155f6 <timer_dma_enable>:
 80155f6:	68c3      	ldr	r3, [r0, #12]
 80155f8:	4319      	orrs	r1, r3
 80155fa:	60c1      	str	r1, [r0, #12]
 80155fc:	4770      	bx	lr
	...

08015600 <timer_channel_output_config>:
 8015600:	2903      	cmp	r1, #3
 8015602:	d83e      	bhi.n	8015682 <timer_channel_output_config+0x82>
 8015604:	e8df f011 	tbh	[pc, r1, lsl #1]
 8015608:	003e0004 	eorseq	r0, lr, r4
 801560c:	00bc007d 	adcseq	r0, ip, sp, ror r0
 8015610:	6a03      	ldr	r3, [r0, #32]
 8015612:	f023 0301 	bic.w	r3, r3, #1
 8015616:	6203      	str	r3, [r0, #32]
 8015618:	6983      	ldr	r3, [r0, #24]
 801561a:	f023 0303 	bic.w	r3, r3, #3
 801561e:	6183      	str	r3, [r0, #24]
 8015620:	6a01      	ldr	r1, [r0, #32]
 8015622:	8813      	ldrh	r3, [r2, #0]
 8015624:	430b      	orrs	r3, r1
 8015626:	6203      	str	r3, [r0, #32]
 8015628:	6a03      	ldr	r3, [r0, #32]
 801562a:	f023 0302 	bic.w	r3, r3, #2
 801562e:	6203      	str	r3, [r0, #32]
 8015630:	6a01      	ldr	r1, [r0, #32]
 8015632:	8893      	ldrh	r3, [r2, #4]
 8015634:	430b      	orrs	r3, r1
 8015636:	6203      	str	r3, [r0, #32]
 8015638:	4b64      	ldr	r3, [pc, #400]	; (80157cc <timer_channel_output_config+0x1cc>)
 801563a:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 801563e:	4299      	cmp	r1, r3
 8015640:	d11f      	bne.n	8015682 <timer_channel_output_config+0x82>
 8015642:	6a03      	ldr	r3, [r0, #32]
 8015644:	f023 0304 	bic.w	r3, r3, #4
 8015648:	6203      	str	r3, [r0, #32]
 801564a:	6a01      	ldr	r1, [r0, #32]
 801564c:	8853      	ldrh	r3, [r2, #2]
 801564e:	430b      	orrs	r3, r1
 8015650:	6203      	str	r3, [r0, #32]
 8015652:	6a03      	ldr	r3, [r0, #32]
 8015654:	f023 0308 	bic.w	r3, r3, #8
 8015658:	6203      	str	r3, [r0, #32]
 801565a:	6a01      	ldr	r1, [r0, #32]
 801565c:	88d3      	ldrh	r3, [r2, #6]
 801565e:	430b      	orrs	r3, r1
 8015660:	6203      	str	r3, [r0, #32]
 8015662:	6843      	ldr	r3, [r0, #4]
 8015664:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015668:	6043      	str	r3, [r0, #4]
 801566a:	6841      	ldr	r1, [r0, #4]
 801566c:	8913      	ldrh	r3, [r2, #8]
 801566e:	430b      	orrs	r3, r1
 8015670:	6043      	str	r3, [r0, #4]
 8015672:	6843      	ldr	r3, [r0, #4]
 8015674:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8015678:	6043      	str	r3, [r0, #4]
 801567a:	6841      	ldr	r1, [r0, #4]
 801567c:	8953      	ldrh	r3, [r2, #10]
 801567e:	430b      	orrs	r3, r1
 8015680:	6043      	str	r3, [r0, #4]
 8015682:	4770      	bx	lr
 8015684:	6a03      	ldr	r3, [r0, #32]
 8015686:	8811      	ldrh	r1, [r2, #0]
 8015688:	f023 0310 	bic.w	r3, r3, #16
 801568c:	6203      	str	r3, [r0, #32]
 801568e:	6983      	ldr	r3, [r0, #24]
 8015690:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8015694:	6183      	str	r3, [r0, #24]
 8015696:	6a03      	ldr	r3, [r0, #32]
 8015698:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 801569c:	6203      	str	r3, [r0, #32]
 801569e:	6a03      	ldr	r3, [r0, #32]
 80156a0:	8891      	ldrh	r1, [r2, #4]
 80156a2:	f023 0320 	bic.w	r3, r3, #32
 80156a6:	6203      	str	r3, [r0, #32]
 80156a8:	6a03      	ldr	r3, [r0, #32]
 80156aa:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156ae:	6203      	str	r3, [r0, #32]
 80156b0:	4b46      	ldr	r3, [pc, #280]	; (80157cc <timer_channel_output_config+0x1cc>)
 80156b2:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80156b6:	4299      	cmp	r1, r3
 80156b8:	d1e3      	bne.n	8015682 <timer_channel_output_config+0x82>
 80156ba:	6a03      	ldr	r3, [r0, #32]
 80156bc:	8851      	ldrh	r1, [r2, #2]
 80156be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80156c2:	6203      	str	r3, [r0, #32]
 80156c4:	6a03      	ldr	r3, [r0, #32]
 80156c6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156ca:	6203      	str	r3, [r0, #32]
 80156cc:	6a03      	ldr	r3, [r0, #32]
 80156ce:	88d1      	ldrh	r1, [r2, #6]
 80156d0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80156d4:	6203      	str	r3, [r0, #32]
 80156d6:	6a03      	ldr	r3, [r0, #32]
 80156d8:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156dc:	6203      	str	r3, [r0, #32]
 80156de:	6843      	ldr	r3, [r0, #4]
 80156e0:	8911      	ldrh	r1, [r2, #8]
 80156e2:	8952      	ldrh	r2, [r2, #10]
 80156e4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80156e8:	6043      	str	r3, [r0, #4]
 80156ea:	6843      	ldr	r3, [r0, #4]
 80156ec:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 80156f0:	6043      	str	r3, [r0, #4]
 80156f2:	6843      	ldr	r3, [r0, #4]
 80156f4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80156f8:	6043      	str	r3, [r0, #4]
 80156fa:	6843      	ldr	r3, [r0, #4]
 80156fc:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8015700:	e7be      	b.n	8015680 <timer_channel_output_config+0x80>
 8015702:	6a03      	ldr	r3, [r0, #32]
 8015704:	8811      	ldrh	r1, [r2, #0]
 8015706:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801570a:	6203      	str	r3, [r0, #32]
 801570c:	69c3      	ldr	r3, [r0, #28]
 801570e:	f023 0303 	bic.w	r3, r3, #3
 8015712:	61c3      	str	r3, [r0, #28]
 8015714:	6a03      	ldr	r3, [r0, #32]
 8015716:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 801571a:	6203      	str	r3, [r0, #32]
 801571c:	6a03      	ldr	r3, [r0, #32]
 801571e:	8891      	ldrh	r1, [r2, #4]
 8015720:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8015724:	6203      	str	r3, [r0, #32]
 8015726:	6a03      	ldr	r3, [r0, #32]
 8015728:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 801572c:	6203      	str	r3, [r0, #32]
 801572e:	4b27      	ldr	r3, [pc, #156]	; (80157cc <timer_channel_output_config+0x1cc>)
 8015730:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8015734:	4299      	cmp	r1, r3
 8015736:	d1a4      	bne.n	8015682 <timer_channel_output_config+0x82>
 8015738:	6a03      	ldr	r3, [r0, #32]
 801573a:	8851      	ldrh	r1, [r2, #2]
 801573c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8015740:	6203      	str	r3, [r0, #32]
 8015742:	6a03      	ldr	r3, [r0, #32]
 8015744:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015748:	6203      	str	r3, [r0, #32]
 801574a:	6a03      	ldr	r3, [r0, #32]
 801574c:	88d1      	ldrh	r1, [r2, #6]
 801574e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8015752:	6203      	str	r3, [r0, #32]
 8015754:	6a03      	ldr	r3, [r0, #32]
 8015756:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 801575a:	6203      	str	r3, [r0, #32]
 801575c:	6843      	ldr	r3, [r0, #4]
 801575e:	8911      	ldrh	r1, [r2, #8]
 8015760:	8952      	ldrh	r2, [r2, #10]
 8015762:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8015766:	6043      	str	r3, [r0, #4]
 8015768:	6843      	ldr	r3, [r0, #4]
 801576a:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 801576e:	6043      	str	r3, [r0, #4]
 8015770:	6843      	ldr	r3, [r0, #4]
 8015772:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8015776:	6043      	str	r3, [r0, #4]
 8015778:	6843      	ldr	r3, [r0, #4]
 801577a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 801577e:	e77f      	b.n	8015680 <timer_channel_output_config+0x80>
 8015780:	6a03      	ldr	r3, [r0, #32]
 8015782:	8811      	ldrh	r1, [r2, #0]
 8015784:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8015788:	6203      	str	r3, [r0, #32]
 801578a:	69c3      	ldr	r3, [r0, #28]
 801578c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8015790:	61c3      	str	r3, [r0, #28]
 8015792:	6a03      	ldr	r3, [r0, #32]
 8015794:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8015798:	6203      	str	r3, [r0, #32]
 801579a:	6a03      	ldr	r3, [r0, #32]
 801579c:	8891      	ldrh	r1, [r2, #4]
 801579e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80157a2:	6203      	str	r3, [r0, #32]
 80157a4:	6a03      	ldr	r3, [r0, #32]
 80157a6:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80157aa:	6203      	str	r3, [r0, #32]
 80157ac:	4b07      	ldr	r3, [pc, #28]	; (80157cc <timer_channel_output_config+0x1cc>)
 80157ae:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80157b2:	4299      	cmp	r1, r3
 80157b4:	f47f af65 	bne.w	8015682 <timer_channel_output_config+0x82>
 80157b8:	6843      	ldr	r3, [r0, #4]
 80157ba:	8912      	ldrh	r2, [r2, #8]
 80157bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80157c0:	6043      	str	r3, [r0, #4]
 80157c2:	6843      	ldr	r3, [r0, #4]
 80157c4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80157c8:	e75a      	b.n	8015680 <timer_channel_output_config+0x80>
 80157ca:	bf00      	nop
 80157cc:	40010000 	andmi	r0, r1, r0

080157d0 <timer_channel_output_mode_config>:
 80157d0:	2903      	cmp	r1, #3
 80157d2:	d81a      	bhi.n	801580a <timer_channel_output_mode_config+0x3a>
 80157d4:	e8df f001 	tbb	[pc, r1]
 80157d8:	1a120a02 	bne	8497fe8 <__exidx_end+0x47e32c>
 80157dc:	6983      	ldr	r3, [r0, #24]
 80157de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80157e2:	6183      	str	r3, [r0, #24]
 80157e4:	6983      	ldr	r3, [r0, #24]
 80157e6:	4313      	orrs	r3, r2
 80157e8:	6183      	str	r3, [r0, #24]
 80157ea:	4770      	bx	lr
 80157ec:	6983      	ldr	r3, [r0, #24]
 80157ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80157f2:	6183      	str	r3, [r0, #24]
 80157f4:	6983      	ldr	r3, [r0, #24]
 80157f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80157fa:	e7f5      	b.n	80157e8 <timer_channel_output_mode_config+0x18>
 80157fc:	69c3      	ldr	r3, [r0, #28]
 80157fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8015802:	61c3      	str	r3, [r0, #28]
 8015804:	69c3      	ldr	r3, [r0, #28]
 8015806:	4313      	orrs	r3, r2
 8015808:	61c3      	str	r3, [r0, #28]
 801580a:	4770      	bx	lr
 801580c:	69c3      	ldr	r3, [r0, #28]
 801580e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8015812:	61c3      	str	r3, [r0, #28]
 8015814:	69c3      	ldr	r3, [r0, #28]
 8015816:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801581a:	e7f5      	b.n	8015808 <timer_channel_output_mode_config+0x38>

0801581c <timer_channel_output_pulse_value_config>:
 801581c:	2903      	cmp	r1, #3
 801581e:	d80a      	bhi.n	8015836 <timer_channel_output_pulse_value_config+0x1a>
 8015820:	e8df f001 	tbb	[pc, r1]
 8015824:	08060402 	stmdaeq	r6, {r1, sl}
 8015828:	6342      	str	r2, [r0, #52]	; 0x34
 801582a:	4770      	bx	lr
 801582c:	6382      	str	r2, [r0, #56]	; 0x38
 801582e:	4770      	bx	lr
 8015830:	63c2      	str	r2, [r0, #60]	; 0x3c
 8015832:	4770      	bx	lr
 8015834:	6402      	str	r2, [r0, #64]	; 0x40
 8015836:	4770      	bx	lr

08015838 <timer_channel_output_shadow_config>:
 8015838:	2903      	cmp	r1, #3
 801583a:	d81a      	bhi.n	8015872 <timer_channel_output_shadow_config+0x3a>
 801583c:	e8df f001 	tbb	[pc, r1]
 8015840:	1a120a02 	bne	8498050 <__exidx_end+0x47e394>
 8015844:	6983      	ldr	r3, [r0, #24]
 8015846:	f023 0308 	bic.w	r3, r3, #8
 801584a:	6183      	str	r3, [r0, #24]
 801584c:	6983      	ldr	r3, [r0, #24]
 801584e:	4313      	orrs	r3, r2
 8015850:	6183      	str	r3, [r0, #24]
 8015852:	4770      	bx	lr
 8015854:	6983      	ldr	r3, [r0, #24]
 8015856:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801585a:	6183      	str	r3, [r0, #24]
 801585c:	6983      	ldr	r3, [r0, #24]
 801585e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015862:	e7f5      	b.n	8015850 <timer_channel_output_shadow_config+0x18>
 8015864:	69c3      	ldr	r3, [r0, #28]
 8015866:	f023 0308 	bic.w	r3, r3, #8
 801586a:	61c3      	str	r3, [r0, #28]
 801586c:	69c3      	ldr	r3, [r0, #28]
 801586e:	4313      	orrs	r3, r2
 8015870:	61c3      	str	r3, [r0, #28]
 8015872:	4770      	bx	lr
 8015874:	69c3      	ldr	r3, [r0, #28]
 8015876:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801587a:	61c3      	str	r3, [r0, #28]
 801587c:	69c3      	ldr	r3, [r0, #28]
 801587e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015882:	e7f5      	b.n	8015870 <timer_channel_output_shadow_config+0x38>

08015884 <timer_input_trigger_source_select>:
 8015884:	6883      	ldr	r3, [r0, #8]
 8015886:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801588a:	6083      	str	r3, [r0, #8]
 801588c:	6883      	ldr	r3, [r0, #8]
 801588e:	4319      	orrs	r1, r3
 8015890:	6081      	str	r1, [r0, #8]
 8015892:	4770      	bx	lr

08015894 <timer_master_output_trigger_source_select>:
 8015894:	6843      	ldr	r3, [r0, #4]
 8015896:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801589a:	6043      	str	r3, [r0, #4]
 801589c:	6843      	ldr	r3, [r0, #4]
 801589e:	4319      	orrs	r1, r3
 80158a0:	6041      	str	r1, [r0, #4]
 80158a2:	4770      	bx	lr

080158a4 <timer_slave_mode_select>:
 80158a4:	6883      	ldr	r3, [r0, #8]
 80158a6:	f023 0307 	bic.w	r3, r3, #7
 80158aa:	6083      	str	r3, [r0, #8]
 80158ac:	6883      	ldr	r3, [r0, #8]
 80158ae:	4319      	orrs	r1, r3
 80158b0:	6081      	str	r1, [r0, #8]
 80158b2:	4770      	bx	lr

080158b4 <timer_master_slave_mode_config>:
 80158b4:	b921      	cbnz	r1, 80158c0 <timer_master_slave_mode_config+0xc>
 80158b6:	6883      	ldr	r3, [r0, #8]
 80158b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80158bc:	6083      	str	r3, [r0, #8]
 80158be:	4770      	bx	lr
 80158c0:	2901      	cmp	r1, #1
 80158c2:	d1fc      	bne.n	80158be <timer_master_slave_mode_config+0xa>
 80158c4:	6883      	ldr	r3, [r0, #8]
 80158c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80158ca:	e7f7      	b.n	80158bc <timer_master_slave_mode_config+0x8>

080158cc <usart_deinit>:
 80158cc:	b508      	push	{r3, lr}
 80158ce:	4b2d      	ldr	r3, [pc, #180]	; (8015984 <usart_deinit+0xb8>)
 80158d0:	4298      	cmp	r0, r3
 80158d2:	d050      	beq.n	8015976 <usart_deinit+0xaa>
 80158d4:	d817      	bhi.n	8015906 <usart_deinit+0x3a>
 80158d6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80158da:	4298      	cmp	r0, r3
 80158dc:	d044      	beq.n	8015968 <usart_deinit+0x9c>
 80158de:	d808      	bhi.n	80158f2 <usart_deinit+0x26>
 80158e0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80158e4:	4298      	cmp	r0, r3
 80158e6:	d02a      	beq.n	801593e <usart_deinit+0x72>
 80158e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80158ec:	4298      	cmp	r0, r3
 80158ee:	d02d      	beq.n	801594c <usart_deinit+0x80>
 80158f0:	bd08      	pop	{r3, pc}
 80158f2:	4b25      	ldr	r3, [pc, #148]	; (8015988 <usart_deinit+0xbc>)
 80158f4:	4298      	cmp	r0, r3
 80158f6:	d1fb      	bne.n	80158f0 <usart_deinit+0x24>
 80158f8:	f640 0014 	movw	r0, #2068	; 0x814
 80158fc:	f7ff fce7 	bl	80152ce <rcu_periph_reset_enable>
 8015900:	f640 0014 	movw	r0, #2068	; 0x814
 8015904:	e017      	b.n	8015936 <usart_deinit+0x6a>
 8015906:	4b21      	ldr	r3, [pc, #132]	; (801598c <usart_deinit+0xc0>)
 8015908:	4298      	cmp	r0, r3
 801590a:	d00e      	beq.n	801592a <usart_deinit+0x5e>
 801590c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015910:	4298      	cmp	r0, r3
 8015912:	d022      	beq.n	801595a <usart_deinit+0x8e>
 8015914:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8015918:	4298      	cmp	r0, r3
 801591a:	d1e9      	bne.n	80158f0 <usart_deinit+0x24>
 801591c:	f640 001f 	movw	r0, #2079	; 0x81f
 8015920:	f7ff fcd5 	bl	80152ce <rcu_periph_reset_enable>
 8015924:	f640 001f 	movw	r0, #2079	; 0x81f
 8015928:	e005      	b.n	8015936 <usart_deinit+0x6a>
 801592a:	f640 1004 	movw	r0, #2308	; 0x904
 801592e:	f7ff fcce 	bl	80152ce <rcu_periph_reset_enable>
 8015932:	f640 1004 	movw	r0, #2308	; 0x904
 8015936:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801593a:	f7ff bcca 	b.w	80152d2 <rcu_periph_reset_disable>
 801593e:	f640 0011 	movw	r0, #2065	; 0x811
 8015942:	f7ff fcc4 	bl	80152ce <rcu_periph_reset_enable>
 8015946:	f640 0011 	movw	r0, #2065	; 0x811
 801594a:	e7f4      	b.n	8015936 <usart_deinit+0x6a>
 801594c:	f640 0012 	movw	r0, #2066	; 0x812
 8015950:	f7ff fcbd 	bl	80152ce <rcu_periph_reset_enable>
 8015954:	f640 0012 	movw	r0, #2066	; 0x812
 8015958:	e7ed      	b.n	8015936 <usart_deinit+0x6a>
 801595a:	f640 1005 	movw	r0, #2309	; 0x905
 801595e:	f7ff fcb6 	bl	80152ce <rcu_periph_reset_enable>
 8015962:	f640 1005 	movw	r0, #2309	; 0x905
 8015966:	e7e6      	b.n	8015936 <usart_deinit+0x6a>
 8015968:	f640 0013 	movw	r0, #2067	; 0x813
 801596c:	f7ff fcaf 	bl	80152ce <rcu_periph_reset_enable>
 8015970:	f640 0013 	movw	r0, #2067	; 0x813
 8015974:	e7df      	b.n	8015936 <usart_deinit+0x6a>
 8015976:	f640 001e 	movw	r0, #2078	; 0x81e
 801597a:	f7ff fca8 	bl	80152ce <rcu_periph_reset_enable>
 801597e:	f640 001e 	movw	r0, #2078	; 0x81e
 8015982:	e7d8      	b.n	8015936 <usart_deinit+0x6a>
 8015984:	40007800 	andmi	r7, r0, r0, lsl #16
 8015988:	40005000 	andmi	r5, r0, r0
 801598c:	40011000 	andmi	r1, r1, r0

08015990 <usart_baudrate_set>:
 8015990:	b538      	push	{r3, r4, r5, lr}
 8015992:	4b1e      	ldr	r3, [pc, #120]	; (8015a0c <usart_baudrate_set+0x7c>)
 8015994:	4298      	cmp	r0, r3
 8015996:	4604      	mov	r4, r0
 8015998:	460d      	mov	r5, r1
 801599a:	d02e      	beq.n	80159fa <usart_baudrate_set+0x6a>
 801599c:	d821      	bhi.n	80159e2 <usart_baudrate_set+0x52>
 801599e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80159a2:	4298      	cmp	r0, r3
 80159a4:	d029      	beq.n	80159fa <usart_baudrate_set+0x6a>
 80159a6:	d81a      	bhi.n	80159de <usart_baudrate_set+0x4e>
 80159a8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80159ac:	4298      	cmp	r0, r3
 80159ae:	d024      	beq.n	80159fa <usart_baudrate_set+0x6a>
 80159b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80159b4:	429c      	cmp	r4, r3
 80159b6:	d020      	beq.n	80159fa <usart_baudrate_set+0x6a>
 80159b8:	2000      	movs	r0, #0
 80159ba:	68e2      	ldr	r2, [r4, #12]
 80159bc:	0412      	lsls	r2, r2, #16
 80159be:	ea4f 0355 	mov.w	r3, r5, lsr #1
 80159c2:	d51c      	bpl.n	80159fe <usart_baudrate_set+0x6e>
 80159c4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80159c8:	fbb3 f1f5 	udiv	r1, r3, r5
 80159cc:	f3c1 0342 	ubfx	r3, r1, #1, #3
 80159d0:	f021 010f 	bic.w	r1, r1, #15
 80159d4:	0409      	lsls	r1, r1, #16
 80159d6:	0c09      	lsrs	r1, r1, #16
 80159d8:	430b      	orrs	r3, r1
 80159da:	60a3      	str	r3, [r4, #8]
 80159dc:	bd38      	pop	{r3, r4, r5, pc}
 80159de:	4b0c      	ldr	r3, [pc, #48]	; (8015a10 <usart_baudrate_set+0x80>)
 80159e0:	e7e8      	b.n	80159b4 <usart_baudrate_set+0x24>
 80159e2:	4b0c      	ldr	r3, [pc, #48]	; (8015a14 <usart_baudrate_set+0x84>)
 80159e4:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 80159e8:	429a      	cmp	r2, r3
 80159ea:	d002      	beq.n	80159f2 <usart_baudrate_set+0x62>
 80159ec:	f5a3 4314 	sub.w	r3, r3, #37888	; 0x9400
 80159f0:	e7e0      	b.n	80159b4 <usart_baudrate_set+0x24>
 80159f2:	2003      	movs	r0, #3
 80159f4:	f7ff fc8c 	bl	8015310 <rcu_clock_freq_get>
 80159f8:	e7df      	b.n	80159ba <usart_baudrate_set+0x2a>
 80159fa:	2002      	movs	r0, #2
 80159fc:	e7fa      	b.n	80159f4 <usart_baudrate_set+0x64>
 80159fe:	4403      	add	r3, r0
 8015a00:	fbb3 f1f5 	udiv	r1, r3, r5
 8015a04:	b289      	uxth	r1, r1
 8015a06:	60a1      	str	r1, [r4, #8]
 8015a08:	e7e8      	b.n	80159dc <usart_baudrate_set+0x4c>
 8015a0a:	bf00      	nop
 8015a0c:	40007800 	andmi	r7, r0, r0, lsl #16
 8015a10:	40005000 	andmi	r5, r0, r0
 8015a14:	40011000 	andmi	r1, r1, r0

08015a18 <usart_parity_config>:
 8015a18:	68c3      	ldr	r3, [r0, #12]
 8015a1a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8015a1e:	60c3      	str	r3, [r0, #12]
 8015a20:	68c3      	ldr	r3, [r0, #12]
 8015a22:	4319      	orrs	r1, r3
 8015a24:	60c1      	str	r1, [r0, #12]
 8015a26:	4770      	bx	lr

08015a28 <usart_word_length_set>:
 8015a28:	68c3      	ldr	r3, [r0, #12]
 8015a2a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8015a2e:	60c3      	str	r3, [r0, #12]
 8015a30:	68c3      	ldr	r3, [r0, #12]
 8015a32:	4319      	orrs	r1, r3
 8015a34:	60c1      	str	r1, [r0, #12]
 8015a36:	4770      	bx	lr

08015a38 <usart_stop_bit_set>:
 8015a38:	6903      	ldr	r3, [r0, #16]
 8015a3a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8015a3e:	6103      	str	r3, [r0, #16]
 8015a40:	6903      	ldr	r3, [r0, #16]
 8015a42:	4319      	orrs	r1, r3
 8015a44:	6101      	str	r1, [r0, #16]
 8015a46:	4770      	bx	lr

08015a48 <usart_transmit_config>:
 8015a48:	68c3      	ldr	r3, [r0, #12]
 8015a4a:	f023 0308 	bic.w	r3, r3, #8
 8015a4e:	4319      	orrs	r1, r3
 8015a50:	60c1      	str	r1, [r0, #12]
 8015a52:	4770      	bx	lr

08015a54 <usart_receive_config>:
 8015a54:	68c3      	ldr	r3, [r0, #12]
 8015a56:	f023 0304 	bic.w	r3, r3, #4
 8015a5a:	4319      	orrs	r1, r3
 8015a5c:	60c1      	str	r1, [r0, #12]
 8015a5e:	4770      	bx	lr

08015a60 <usart_hardware_flow_rts_config>:
 8015a60:	6943      	ldr	r3, [r0, #20]
 8015a62:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015a66:	4319      	orrs	r1, r3
 8015a68:	6141      	str	r1, [r0, #20]
 8015a6a:	4770      	bx	lr

08015a6c <usart_hardware_flow_cts_config>:
 8015a6c:	6943      	ldr	r3, [r0, #20]
 8015a6e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8015a72:	4319      	orrs	r1, r3
 8015a74:	6141      	str	r1, [r0, #20]
 8015a76:	4770      	bx	lr

08015a78 <usart_dma_transmit_config>:
 8015a78:	6943      	ldr	r3, [r0, #20]
 8015a7a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8015a7e:	4319      	orrs	r1, r3
 8015a80:	6141      	str	r1, [r0, #20]
 8015a82:	4770      	bx	lr

08015a84 <usart_flag_get>:
 8015a84:	098b      	lsrs	r3, r1, #6
 8015a86:	f001 011f 	and.w	r1, r1, #31
 8015a8a:	581a      	ldr	r2, [r3, r0]
 8015a8c:	2301      	movs	r3, #1
 8015a8e:	408b      	lsls	r3, r1
 8015a90:	4213      	tst	r3, r2
 8015a92:	bf14      	ite	ne
 8015a94:	2001      	movne	r0, #1
 8015a96:	2000      	moveq	r0, #0
 8015a98:	4770      	bx	lr

08015a9a <usart_flag_clear>:
 8015a9a:	b510      	push	{r4, lr}
 8015a9c:	098c      	lsrs	r4, r1, #6
 8015a9e:	2201      	movs	r2, #1
 8015aa0:	5823      	ldr	r3, [r4, r0]
 8015aa2:	f001 011f 	and.w	r1, r1, #31
 8015aa6:	408a      	lsls	r2, r1
 8015aa8:	ea23 0302 	bic.w	r3, r3, r2
 8015aac:	5023      	str	r3, [r4, r0]
 8015aae:	bd10      	pop	{r4, pc}

08015ab0 <usart_interrupt_enable>:
 8015ab0:	098a      	lsrs	r2, r1, #6
 8015ab2:	b510      	push	{r4, lr}
 8015ab4:	f001 011f 	and.w	r1, r1, #31
 8015ab8:	5814      	ldr	r4, [r2, r0]
 8015aba:	2301      	movs	r3, #1
 8015abc:	408b      	lsls	r3, r1
 8015abe:	4323      	orrs	r3, r4
 8015ac0:	5013      	str	r3, [r2, r0]
 8015ac2:	bd10      	pop	{r4, pc}

08015ac4 <usart_interrupt_disable>:
 8015ac4:	f7ff bfe9 	b.w	8015a9a <usart_flag_clear>

08015ac8 <usart_interrupt_flag_clear>:
 8015ac8:	b510      	push	{r4, lr}
 8015aca:	0d8c      	lsrs	r4, r1, #22
 8015acc:	2201      	movs	r2, #1
 8015ace:	5823      	ldr	r3, [r4, r0]
 8015ad0:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8015ad4:	408a      	lsls	r2, r1
 8015ad6:	ea23 0302 	bic.w	r3, r3, r2
 8015ada:	5023      	str	r3, [r4, r0]
 8015adc:	bd10      	pop	{r4, pc}
	...

08015ae0 <emac_eth_recv>:
 8015ae0:	b538      	push	{r3, r4, r5, lr}
 8015ae2:	4605      	mov	r5, r0
 8015ae4:	f7ff fada 	bl	801509c <enet_rxframe_size_get>
 8015ae8:	4604      	mov	r4, r0
 8015aea:	b138      	cbz	r0, 8015afc <emac_eth_recv+0x1c>
 8015aec:	4b05      	ldr	r3, [pc, #20]	; (8015b04 <emac_eth_recv+0x24>)
 8015aee:	2105      	movs	r1, #5
 8015af0:	6818      	ldr	r0, [r3, #0]
 8015af2:	f7ff fa77 	bl	8014fe4 <enet_desc_information_get>
 8015af6:	6028      	str	r0, [r5, #0]
 8015af8:	4620      	mov	r0, r4
 8015afa:	bd38      	pop	{r3, r4, r5, pc}
 8015afc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015b00:	e7fb      	b.n	8015afa <emac_eth_recv+0x1a>
 8015b02:	bf00      	nop
 8015b04:	2000fee8 	andcs	pc, r0, r8, ror #29

08015b08 <emac_free_pkt>:
 8015b08:	2100      	movs	r1, #0
 8015b0a:	4608      	mov	r0, r1
 8015b0c:	f7fe bf86 	b.w	8014a1c <enet_frame_receive>

08015b10 <emac_eth_send>:
 8015b10:	f7fe bfd0 	b.w	8014ab4 <enet_frame_transmit>

08015b14 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 8015b14:	2801      	cmp	r0, #1
 8015b16:	bf9c      	itt	ls
 8015b18:	4b01      	ldrls	r3, [pc, #4]	; (8015b20 <bkp_data_write(bkp_data_register_enum, unsigned short)+0xc>)
 8015b1a:	f823 1010 	strhls.w	r1, [r3, r0, lsl #1]
 8015b1e:	4770      	bx	lr
 8015b20:	40024010 	andmi	r4, r2, r0, lsl r0

08015b24 <bkp_data_read(bkp_data_register_enum)>:
 8015b24:	2801      	cmp	r0, #1
 8015b26:	bf9d      	ittte	ls
 8015b28:	4b02      	ldrls	r3, [pc, #8]	; (8015b34 <bkp_data_read(bkp_data_register_enum)+0x10>)
 8015b2a:	f833 0010 	ldrhls.w	r0, [r3, r0, lsl #1]
 8015b2e:	b280      	uxthls	r0, r0
 8015b30:	2000      	movhi	r0, #0
 8015b32:	4770      	bx	lr
 8015b34:	40024010 	andmi	r4, r2, r0, lsl r0

08015b38 <gd32_adc_init()>:
 8015b38:	b510      	push	{r4, lr}
 8015b3a:	f241 1008 	movw	r0, #4360	; 0x1108
 8015b3e:	4c24      	ldr	r4, [pc, #144]	; (8015bd0 <gd32_adc_init()+0x98>)
 8015b40:	f7ff fbaa 	bl	8015298 <rcu_periph_clock_enable>
 8015b44:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8015b48:	f000 fce6 	bl	8016518 <adc_clock_config>
 8015b4c:	4620      	mov	r0, r4
 8015b4e:	2203      	movs	r2, #3
 8015b50:	2102      	movs	r1, #2
 8015b52:	f000 fd63 	bl	801661c <adc_channel_length_config>
 8015b56:	4620      	mov	r0, r4
 8015b58:	2306      	movs	r3, #6
 8015b5a:	2210      	movs	r2, #16
 8015b5c:	2100      	movs	r1, #0
 8015b5e:	f000 fd7a 	bl	8016656 <adc_inserted_channel_config>
 8015b62:	4620      	mov	r0, r4
 8015b64:	2306      	movs	r3, #6
 8015b66:	2211      	movs	r2, #17
 8015b68:	2101      	movs	r1, #1
 8015b6a:	f000 fd74 	bl	8016656 <adc_inserted_channel_config>
 8015b6e:	2306      	movs	r3, #6
 8015b70:	4620      	mov	r0, r4
 8015b72:	2212      	movs	r2, #18
 8015b74:	2102      	movs	r1, #2
 8015b76:	f000 fd6e 	bl	8016656 <adc_inserted_channel_config>
 8015b7a:	2200      	movs	r2, #0
 8015b7c:	4620      	mov	r0, r4
 8015b7e:	2102      	movs	r1, #2
 8015b80:	f000 fd98 	bl	80166b4 <adc_external_trigger_config>
 8015b84:	4620      	mov	r0, r4
 8015b86:	2100      	movs	r1, #0
 8015b88:	f000 fcfe 	bl	8016588 <adc_data_alignment_config>
 8015b8c:	2201      	movs	r2, #1
 8015b8e:	4620      	mov	r0, r4
 8015b90:	f44f 7180 	mov.w	r1, #256	; 0x100
 8015b94:	f000 fcd0 	bl	8016538 <adc_special_function_config>
 8015b98:	2101      	movs	r1, #1
 8015b9a:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8015b9e:	f000 fd15 	bl	80165cc <adc_channel_16_to_18>
 8015ba2:	2101      	movs	r1, #1
 8015ba4:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8015ba8:	f000 fd10 	bl	80165cc <adc_channel_16_to_18>
 8015bac:	4620      	mov	r0, r4
 8015bae:	f000 fcf4 	bl	801659a <adc_enable>
 8015bb2:	2100      	movs	r1, #0
 8015bb4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8015bb8:	f000 fb80 	bl	80162bc <udelay(unsigned int, unsigned int)>
 8015bbc:	4620      	mov	r0, r4
 8015bbe:	f000 fcf4 	bl	80165aa <adc_calibration_enable>
 8015bc2:	4620      	mov	r0, r4
 8015bc4:	2102      	movs	r1, #2
 8015bc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bca:	f000 bd89 	b.w	80166e0 <adc_software_trigger_enable>
 8015bce:	bf00      	nop
 8015bd0:	40012000 	andmi	r2, r1, r0

08015bd4 <_stop() [clone .isra.0]>:
 8015bd4:	b508      	push	{r3, lr}
 8015bd6:	4806      	ldr	r0, [pc, #24]	; (8015bf0 <_stop() [clone .isra.0]+0x1c>)
 8015bd8:	f000 fe10 	bl	80167fc <i2c_stop_on_bus>
 8015bdc:	4905      	ldr	r1, [pc, #20]	; (8015bf4 <_stop() [clone .isra.0]+0x20>)
 8015bde:	f640 73ff 	movw	r3, #4095	; 0xfff
 8015be2:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8015be6:	0592      	lsls	r2, r2, #22
 8015be8:	d501      	bpl.n	8015bee <_stop() [clone .isra.0]+0x1a>
 8015bea:	3b01      	subs	r3, #1
 8015bec:	d1f9      	bne.n	8015be2 <_stop() [clone .isra.0]+0xe>
 8015bee:	bd08      	pop	{r3, pc}
 8015bf0:	40005400 	andmi	r5, r0, r0, lsl #8
 8015bf4:	40005000 	andmi	r5, r0, r0

08015bf8 <gd32_i2c_begin>:
 8015bf8:	b508      	push	{r3, lr}
 8015bfa:	f241 0015 	movw	r0, #4117	; 0x1015
 8015bfe:	f7ff fb4b 	bl	8015298 <rcu_periph_clock_enable>
 8015c02:	f640 4001 	movw	r0, #3073	; 0xc01
 8015c06:	f7ff fb47 	bl	8015298 <rcu_periph_clock_enable>
 8015c0a:	f640 4001 	movw	r0, #3073	; 0xc01
 8015c0e:	f7ff fb43 	bl	8015298 <rcu_periph_clock_enable>
 8015c12:	481b      	ldr	r0, [pc, #108]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c14:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015c18:	2104      	movs	r1, #4
 8015c1a:	f7ff fafc 	bl	8015216 <gpio_af_set>
 8015c1e:	4818      	ldr	r0, [pc, #96]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c20:	f44f 7200 	mov.w	r2, #512	; 0x200
 8015c24:	2104      	movs	r1, #4
 8015c26:	f7ff faf6 	bl	8015216 <gpio_af_set>
 8015c2a:	4815      	ldr	r0, [pc, #84]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c2c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015c30:	2201      	movs	r2, #1
 8015c32:	2102      	movs	r1, #2
 8015c34:	f7ff fab4 	bl	80151a0 <gpio_mode_set>
 8015c38:	4811      	ldr	r0, [pc, #68]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c3a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015c3e:	2202      	movs	r2, #2
 8015c40:	2101      	movs	r1, #1
 8015c42:	f7ff facd 	bl	80151e0 <gpio_output_options_set>
 8015c46:	480e      	ldr	r0, [pc, #56]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c48:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015c4c:	2201      	movs	r2, #1
 8015c4e:	2102      	movs	r1, #2
 8015c50:	f7ff faa6 	bl	80151a0 <gpio_mode_set>
 8015c54:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015c58:	4809      	ldr	r0, [pc, #36]	; (8015c80 <gd32_i2c_begin+0x88>)
 8015c5a:	2202      	movs	r2, #2
 8015c5c:	2101      	movs	r1, #1
 8015c5e:	f7ff fabf 	bl	80151e0 <gpio_output_options_set>
 8015c62:	4908      	ldr	r1, [pc, #32]	; (8015c84 <gd32_i2c_begin+0x8c>)
 8015c64:	4808      	ldr	r0, [pc, #32]	; (8015c88 <gd32_i2c_begin+0x90>)
 8015c66:	2200      	movs	r2, #0
 8015c68:	f000 fd48 	bl	80166fc <i2c_clock_config>
 8015c6c:	4806      	ldr	r0, [pc, #24]	; (8015c88 <gd32_i2c_begin+0x90>)
 8015c6e:	f000 fdbb 	bl	80167e8 <i2c_enable>
 8015c72:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015c76:	4804      	ldr	r0, [pc, #16]	; (8015c88 <gd32_i2c_begin+0x90>)
 8015c78:	2101      	movs	r1, #1
 8015c7a:	f000 bd9b 	b.w	80167b4 <i2c_ack_config>
 8015c7e:	bf00      	nop
 8015c80:	40020400 	andmi	r0, r2, r0, lsl #8
 8015c84:	00061a80 	andeq	r1, r6, r0, lsl #21
 8015c88:	40005400 	andmi	r5, r0, r0, lsl #8

08015c8c <gd32_i2c_set_baudrate>:
 8015c8c:	4601      	mov	r1, r0
 8015c8e:	2200      	movs	r2, #0
 8015c90:	4801      	ldr	r0, [pc, #4]	; (8015c98 <gd32_i2c_set_baudrate+0xc>)
 8015c92:	f000 bd33 	b.w	80166fc <i2c_clock_config>
 8015c96:	bf00      	nop
 8015c98:	40005400 	andmi	r5, r0, r0, lsl #8

08015c9c <gd32_i2c_set_address>:
 8015c9c:	4b01      	ldr	r3, [pc, #4]	; (8015ca4 <gd32_i2c_set_address+0x8>)
 8015c9e:	0040      	lsls	r0, r0, #1
 8015ca0:	7018      	strb	r0, [r3, #0]
 8015ca2:	4770      	bx	lr
 8015ca4:	2002d464 	andcs	sp, r2, r4, ror #8

08015ca8 <gd32_i2c_write>:
 8015ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015caa:	4e30      	ldr	r6, [pc, #192]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015cac:	4604      	mov	r4, r0
 8015cae:	460f      	mov	r7, r1
 8015cb0:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015cb4:	f240 6101 	movw	r1, #1537	; 0x601
 8015cb8:	4630      	mov	r0, r6
 8015cba:	f000 fda9 	bl	8016810 <i2c_flag_get>
 8015cbe:	b9b0      	cbnz	r0, 8015cee <gd32_i2c_write+0x46>
 8015cc0:	482a      	ldr	r0, [pc, #168]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015cc2:	4e2a      	ldr	r6, [pc, #168]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015cc4:	f000 fd95 	bl	80167f2 <i2c_start_on_bus>
 8015cc8:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015ccc:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8015cd0:	4630      	mov	r0, r6
 8015cd2:	f000 fd9d 	bl	8016810 <i2c_flag_get>
 8015cd6:	b190      	cbz	r0, 8015cfe <gd32_i2c_write+0x56>
 8015cd8:	4b25      	ldr	r3, [pc, #148]	; (8015d70 <gd32_i2c_write+0xc8>)
 8015cda:	4824      	ldr	r0, [pc, #144]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015cdc:	7819      	ldrb	r1, [r3, #0]
 8015cde:	4e23      	ldr	r6, [pc, #140]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015ce0:	f06f 0201 	mvn.w	r2, #1
 8015ce4:	f000 fd78 	bl	80167d8 <i2c_master_addressing>
 8015ce8:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015cec:	e00c      	b.n	8015d08 <gd32_i2c_write+0x60>
 8015cee:	3d01      	subs	r5, #1
 8015cf0:	d1e0      	bne.n	8015cb4 <gd32_i2c_write+0xc>
 8015cf2:	f7ff ff6f 	bl	8015bd4 <_stop() [clone .isra.0]>
 8015cf6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015cfa:	4240      	negs	r0, r0
 8015cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cfe:	3d01      	subs	r5, #1
 8015d00:	d1e4      	bne.n	8015ccc <gd32_i2c_write+0x24>
 8015d02:	e7f6      	b.n	8015cf2 <gd32_i2c_write+0x4a>
 8015d04:	3d01      	subs	r5, #1
 8015d06:	d0f4      	beq.n	8015cf2 <gd32_i2c_write+0x4a>
 8015d08:	f240 5101 	movw	r1, #1281	; 0x501
 8015d0c:	4630      	mov	r0, r6
 8015d0e:	f000 fd7f 	bl	8016810 <i2c_flag_get>
 8015d12:	2800      	cmp	r0, #0
 8015d14:	d0f6      	beq.n	8015d04 <gd32_i2c_write+0x5c>
 8015d16:	4815      	ldr	r0, [pc, #84]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015d18:	4e14      	ldr	r6, [pc, #80]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015d1a:	f240 5101 	movw	r1, #1281	; 0x501
 8015d1e:	f000 fd82 	bl	8016826 <i2c_flag_clear>
 8015d22:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015d26:	f240 5107 	movw	r1, #1287	; 0x507
 8015d2a:	4630      	mov	r0, r6
 8015d2c:	f000 fd70 	bl	8016810 <i2c_flag_get>
 8015d30:	2801      	cmp	r0, #1
 8015d32:	d107      	bne.n	8015d44 <gd32_i2c_write+0x9c>
 8015d34:	4e0d      	ldr	r6, [pc, #52]	; (8015d6c <gd32_i2c_write+0xc4>)
 8015d36:	4427      	add	r7, r4
 8015d38:	42a7      	cmp	r7, r4
 8015d3a:	d106      	bne.n	8015d4a <gd32_i2c_write+0xa2>
 8015d3c:	f7ff ff4a 	bl	8015bd4 <_stop() [clone .isra.0]>
 8015d40:	2000      	movs	r0, #0
 8015d42:	e7da      	b.n	8015cfa <gd32_i2c_write+0x52>
 8015d44:	3d01      	subs	r5, #1
 8015d46:	d1ee      	bne.n	8015d26 <gd32_i2c_write+0x7e>
 8015d48:	e7d3      	b.n	8015cf2 <gd32_i2c_write+0x4a>
 8015d4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015d4e:	4630      	mov	r0, r6
 8015d50:	f000 fd59 	bl	8016806 <i2c_data_transmit>
 8015d54:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015d58:	f240 5102 	movw	r1, #1282	; 0x502
 8015d5c:	4630      	mov	r0, r6
 8015d5e:	f000 fd57 	bl	8016810 <i2c_flag_get>
 8015d62:	2800      	cmp	r0, #0
 8015d64:	d1e8      	bne.n	8015d38 <gd32_i2c_write+0x90>
 8015d66:	3d01      	subs	r5, #1
 8015d68:	d1f6      	bne.n	8015d58 <gd32_i2c_write+0xb0>
 8015d6a:	e7c2      	b.n	8015cf2 <gd32_i2c_write+0x4a>
 8015d6c:	40005400 	andmi	r5, r0, r0, lsl #8
 8015d70:	2002d464 	andcs	sp, r2, r4, ror #8

08015d74 <gd32_i2c_read>:
 8015d74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015d78:	4f4d      	ldr	r7, [pc, #308]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015d7a:	4680      	mov	r8, r0
 8015d7c:	460c      	mov	r4, r1
 8015d7e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8015d82:	f240 6101 	movw	r1, #1537	; 0x601
 8015d86:	4638      	mov	r0, r7
 8015d88:	f000 fd42 	bl	8016810 <i2c_flag_get>
 8015d8c:	4605      	mov	r5, r0
 8015d8e:	bb08      	cbnz	r0, 8015dd4 <gd32_i2c_read+0x60>
 8015d90:	2c02      	cmp	r4, #2
 8015d92:	d103      	bne.n	8015d9c <gd32_i2c_read+0x28>
 8015d94:	4601      	mov	r1, r0
 8015d96:	4846      	ldr	r0, [pc, #280]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015d98:	f000 fd15 	bl	80167c6 <i2c_ackpos_config>
 8015d9c:	4844      	ldr	r0, [pc, #272]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015d9e:	4f44      	ldr	r7, [pc, #272]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015da0:	f000 fd27 	bl	80167f2 <i2c_start_on_bus>
 8015da4:	f640 76ff 	movw	r6, #4095	; 0xfff
 8015da8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8015dac:	4638      	mov	r0, r7
 8015dae:	f000 fd2f 	bl	8016810 <i2c_flag_get>
 8015db2:	b1a8      	cbz	r0, 8015de0 <gd32_i2c_read+0x6c>
 8015db4:	4b3f      	ldr	r3, [pc, #252]	; (8015eb4 <gd32_i2c_read+0x140>)
 8015db6:	483e      	ldr	r0, [pc, #248]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015db8:	7819      	ldrb	r1, [r3, #0]
 8015dba:	2201      	movs	r2, #1
 8015dbc:	f000 fd0c 	bl	80167d8 <i2c_master_addressing>
 8015dc0:	2c02      	cmp	r4, #2
 8015dc2:	d803      	bhi.n	8015dcc <gd32_i2c_read+0x58>
 8015dc4:	483a      	ldr	r0, [pc, #232]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015dc6:	2100      	movs	r1, #0
 8015dc8:	f000 fcf4 	bl	80167b4 <i2c_ack_config>
 8015dcc:	4f38      	ldr	r7, [pc, #224]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015dce:	f640 76ff 	movw	r6, #4095	; 0xfff
 8015dd2:	e00a      	b.n	8015dea <gd32_i2c_read+0x76>
 8015dd4:	3e01      	subs	r6, #1
 8015dd6:	d1d4      	bne.n	8015d82 <gd32_i2c_read+0xe>
 8015dd8:	f7ff fefc 	bl	8015bd4 <_stop() [clone .isra.0]>
 8015ddc:	2504      	movs	r5, #4
 8015dde:	e04d      	b.n	8015e7c <gd32_i2c_read+0x108>
 8015de0:	3e01      	subs	r6, #1
 8015de2:	d1e1      	bne.n	8015da8 <gd32_i2c_read+0x34>
 8015de4:	e7f8      	b.n	8015dd8 <gd32_i2c_read+0x64>
 8015de6:	3e01      	subs	r6, #1
 8015de8:	d0f6      	beq.n	8015dd8 <gd32_i2c_read+0x64>
 8015dea:	f240 5101 	movw	r1, #1281	; 0x501
 8015dee:	4638      	mov	r0, r7
 8015df0:	f000 fd0e 	bl	8016810 <i2c_flag_get>
 8015df4:	2800      	cmp	r0, #0
 8015df6:	d0f6      	beq.n	8015de6 <gd32_i2c_read+0x72>
 8015df8:	482d      	ldr	r0, [pc, #180]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015dfa:	f240 5101 	movw	r1, #1281	; 0x501
 8015dfe:	f000 fd12 	bl	8016826 <i2c_flag_clear>
 8015e02:	2c01      	cmp	r4, #1
 8015e04:	d102      	bne.n	8015e0c <gd32_i2c_read+0x98>
 8015e06:	482a      	ldr	r0, [pc, #168]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015e08:	f000 fcf8 	bl	80167fc <i2c_stop_on_bus>
 8015e0c:	4e28      	ldr	r6, [pc, #160]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015e0e:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015e12:	e022      	b.n	8015e5a <gd32_i2c_read+0xe6>
 8015e14:	2c03      	cmp	r4, #3
 8015e16:	d134      	bne.n	8015e82 <gd32_i2c_read+0x10e>
 8015e18:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015e1c:	e002      	b.n	8015e24 <gd32_i2c_read+0xb0>
 8015e1e:	f1b9 0901 	subs.w	r9, r9, #1
 8015e22:	d0d9      	beq.n	8015dd8 <gd32_i2c_read+0x64>
 8015e24:	f240 5102 	movw	r1, #1282	; 0x502
 8015e28:	4630      	mov	r0, r6
 8015e2a:	f000 fcf1 	bl	8016810 <i2c_flag_get>
 8015e2e:	2800      	cmp	r0, #0
 8015e30:	d0f5      	beq.n	8015e1e <gd32_i2c_read+0xaa>
 8015e32:	2100      	movs	r1, #0
 8015e34:	4630      	mov	r0, r6
 8015e36:	f000 fcbd 	bl	80167b4 <i2c_ack_config>
 8015e3a:	f240 5106 	movw	r1, #1286	; 0x506
 8015e3e:	4630      	mov	r0, r6
 8015e40:	f000 fce6 	bl	8016810 <i2c_flag_get>
 8015e44:	b138      	cbz	r0, 8015e56 <gd32_i2c_read+0xe2>
 8015e46:	4630      	mov	r0, r6
 8015e48:	f000 fcdf 	bl	801680a <i2c_data_receive>
 8015e4c:	f808 0b01 	strb.w	r0, [r8], #1
 8015e50:	3c01      	subs	r4, #1
 8015e52:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015e56:	3f01      	subs	r7, #1
 8015e58:	d0be      	beq.n	8015dd8 <gd32_i2c_read+0x64>
 8015e5a:	2c00      	cmp	r4, #0
 8015e5c:	d1da      	bne.n	8015e14 <gd32_i2c_read+0xa0>
 8015e5e:	4916      	ldr	r1, [pc, #88]	; (8015eb8 <gd32_i2c_read+0x144>)
 8015e60:	f640 73ff 	movw	r3, #4095	; 0xfff
 8015e64:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8015e68:	0592      	lsls	r2, r2, #22
 8015e6a:	d41d      	bmi.n	8015ea8 <gd32_i2c_read+0x134>
 8015e6c:	4810      	ldr	r0, [pc, #64]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015e6e:	2101      	movs	r1, #1
 8015e70:	f000 fca0 	bl	80167b4 <i2c_ack_config>
 8015e74:	480e      	ldr	r0, [pc, #56]	; (8015eb0 <gd32_i2c_read+0x13c>)
 8015e76:	2101      	movs	r1, #1
 8015e78:	f000 fca5 	bl	80167c6 <i2c_ackpos_config>
 8015e7c:	4628      	mov	r0, r5
 8015e7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015e82:	2c02      	cmp	r4, #2
 8015e84:	d1d9      	bne.n	8015e3a <gd32_i2c_read+0xc6>
 8015e86:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015e8a:	e002      	b.n	8015e92 <gd32_i2c_read+0x11e>
 8015e8c:	f1b9 0901 	subs.w	r9, r9, #1
 8015e90:	d0a2      	beq.n	8015dd8 <gd32_i2c_read+0x64>
 8015e92:	f240 5102 	movw	r1, #1282	; 0x502
 8015e96:	4630      	mov	r0, r6
 8015e98:	f000 fcba 	bl	8016810 <i2c_flag_get>
 8015e9c:	2800      	cmp	r0, #0
 8015e9e:	d0f5      	beq.n	8015e8c <gd32_i2c_read+0x118>
 8015ea0:	4630      	mov	r0, r6
 8015ea2:	f000 fcab 	bl	80167fc <i2c_stop_on_bus>
 8015ea6:	e7c8      	b.n	8015e3a <gd32_i2c_read+0xc6>
 8015ea8:	3b01      	subs	r3, #1
 8015eaa:	d1db      	bne.n	8015e64 <gd32_i2c_read+0xf0>
 8015eac:	e796      	b.n	8015ddc <gd32_i2c_read+0x68>
 8015eae:	bf00      	nop
 8015eb0:	40005400 	andmi	r5, r0, r0, lsl #8
 8015eb4:	2002d464 	andcs	sp, r2, r4, ror #8
 8015eb8:	40005000 	andmi	r5, r0, r0

08015ebc <_gpio_init(unsigned int)>:
 8015ebc:	4b96      	ldr	r3, [pc, #600]	; (8016118 <_gpio_init(unsigned int)+0x25c>)
 8015ebe:	4298      	cmp	r0, r3
 8015ec0:	b510      	push	{r4, lr}
 8015ec2:	f000 8104 	beq.w	80160ce <_gpio_init(unsigned int)+0x212>
 8015ec6:	d831      	bhi.n	8015f2c <_gpio_init(unsigned int)+0x70>
 8015ec8:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015ecc:	4298      	cmp	r0, r3
 8015ece:	f000 8098 	beq.w	8016002 <_gpio_init(unsigned int)+0x146>
 8015ed2:	f200 80bd 	bhi.w	8016050 <_gpio_init(unsigned int)+0x194>
 8015ed6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015eda:	4298      	cmp	r0, r3
 8015edc:	d070      	beq.n	8015fc0 <_gpio_init(unsigned int)+0x104>
 8015ede:	488f      	ldr	r0, [pc, #572]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015ee0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015ee4:	2107      	movs	r1, #7
 8015ee6:	f7ff f996 	bl	8015216 <gpio_af_set>
 8015eea:	488c      	ldr	r0, [pc, #560]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015eec:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015ef0:	2201      	movs	r2, #1
 8015ef2:	2102      	movs	r1, #2
 8015ef4:	f7ff f954 	bl	80151a0 <gpio_mode_set>
 8015ef8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015efc:	4887      	ldr	r0, [pc, #540]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015efe:	2202      	movs	r2, #2
 8015f00:	2100      	movs	r1, #0
 8015f02:	f7ff f96d 	bl	80151e0 <gpio_output_options_set>
 8015f06:	4885      	ldr	r0, [pc, #532]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015f08:	f44f 7200 	mov.w	r2, #512	; 0x200
 8015f0c:	2107      	movs	r1, #7
 8015f0e:	f7ff f982 	bl	8015216 <gpio_af_set>
 8015f12:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015f16:	4881      	ldr	r0, [pc, #516]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015f18:	2201      	movs	r2, #1
 8015f1a:	2102      	movs	r1, #2
 8015f1c:	f7ff f940 	bl	80151a0 <gpio_mode_set>
 8015f20:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015f24:	487d      	ldr	r0, [pc, #500]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8015f26:	2202      	movs	r2, #2
 8015f28:	2100      	movs	r1, #0
 8015f2a:	e045      	b.n	8015fb8 <_gpio_init(unsigned int)+0xfc>
 8015f2c:	4b7c      	ldr	r3, [pc, #496]	; (8016120 <_gpio_init(unsigned int)+0x264>)
 8015f2e:	4298      	cmp	r0, r3
 8015f30:	d022      	beq.n	8015f78 <_gpio_init(unsigned int)+0xbc>
 8015f32:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015f36:	4298      	cmp	r0, r3
 8015f38:	f000 80ab 	beq.w	8016092 <_gpio_init(unsigned int)+0x1d6>
 8015f3c:	4879      	ldr	r0, [pc, #484]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8015f3e:	2202      	movs	r2, #2
 8015f40:	2108      	movs	r1, #8
 8015f42:	f7ff f968 	bl	8015216 <gpio_af_set>
 8015f46:	2302      	movs	r3, #2
 8015f48:	4619      	mov	r1, r3
 8015f4a:	4876      	ldr	r0, [pc, #472]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8015f4c:	2201      	movs	r2, #1
 8015f4e:	f7ff f927 	bl	80151a0 <gpio_mode_set>
 8015f52:	2302      	movs	r3, #2
 8015f54:	461a      	mov	r2, r3
 8015f56:	4873      	ldr	r0, [pc, #460]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8015f58:	2100      	movs	r1, #0
 8015f5a:	f7ff f941 	bl	80151e0 <gpio_output_options_set>
 8015f5e:	4871      	ldr	r0, [pc, #452]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8015f60:	2201      	movs	r2, #1
 8015f62:	2108      	movs	r1, #8
 8015f64:	f7ff f957 	bl	8015216 <gpio_af_set>
 8015f68:	2301      	movs	r3, #1
 8015f6a:	461a      	mov	r2, r3
 8015f6c:	486d      	ldr	r0, [pc, #436]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8015f6e:	2102      	movs	r1, #2
 8015f70:	f7ff f916 	bl	80151a0 <gpio_mode_set>
 8015f74:	2301      	movs	r3, #1
 8015f76:	e0ca      	b.n	801610e <_gpio_init(unsigned int)+0x252>
 8015f78:	486b      	ldr	r0, [pc, #428]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015f7a:	2240      	movs	r2, #64	; 0x40
 8015f7c:	2107      	movs	r1, #7
 8015f7e:	f7ff f94a 	bl	8015216 <gpio_af_set>
 8015f82:	4869      	ldr	r0, [pc, #420]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015f84:	2340      	movs	r3, #64	; 0x40
 8015f86:	2201      	movs	r2, #1
 8015f88:	2102      	movs	r1, #2
 8015f8a:	f7ff f909 	bl	80151a0 <gpio_mode_set>
 8015f8e:	2340      	movs	r3, #64	; 0x40
 8015f90:	4865      	ldr	r0, [pc, #404]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015f92:	2202      	movs	r2, #2
 8015f94:	2100      	movs	r1, #0
 8015f96:	f7ff f923 	bl	80151e0 <gpio_output_options_set>
 8015f9a:	4863      	ldr	r0, [pc, #396]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015f9c:	2280      	movs	r2, #128	; 0x80
 8015f9e:	2107      	movs	r1, #7
 8015fa0:	f7ff f939 	bl	8015216 <gpio_af_set>
 8015fa4:	4860      	ldr	r0, [pc, #384]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015fa6:	2380      	movs	r3, #128	; 0x80
 8015fa8:	2201      	movs	r2, #1
 8015faa:	2102      	movs	r1, #2
 8015fac:	f7ff f8f8 	bl	80151a0 <gpio_mode_set>
 8015fb0:	485d      	ldr	r0, [pc, #372]	; (8016128 <_gpio_init(unsigned int)+0x26c>)
 8015fb2:	2380      	movs	r3, #128	; 0x80
 8015fb4:	2202      	movs	r2, #2
 8015fb6:	2100      	movs	r1, #0
 8015fb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015fbc:	f7ff b910 	b.w	80151e0 <gpio_output_options_set>
 8015fc0:	485a      	ldr	r0, [pc, #360]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015fc2:	2204      	movs	r2, #4
 8015fc4:	2107      	movs	r1, #7
 8015fc6:	f7ff f926 	bl	8015216 <gpio_af_set>
 8015fca:	4858      	ldr	r0, [pc, #352]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015fcc:	2304      	movs	r3, #4
 8015fce:	2201      	movs	r2, #1
 8015fd0:	2102      	movs	r1, #2
 8015fd2:	f7ff f8e5 	bl	80151a0 <gpio_mode_set>
 8015fd6:	2304      	movs	r3, #4
 8015fd8:	4854      	ldr	r0, [pc, #336]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015fda:	2202      	movs	r2, #2
 8015fdc:	2100      	movs	r1, #0
 8015fde:	f7ff f8ff 	bl	80151e0 <gpio_output_options_set>
 8015fe2:	4852      	ldr	r0, [pc, #328]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015fe4:	2208      	movs	r2, #8
 8015fe6:	2107      	movs	r1, #7
 8015fe8:	f7ff f915 	bl	8015216 <gpio_af_set>
 8015fec:	484f      	ldr	r0, [pc, #316]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015fee:	2308      	movs	r3, #8
 8015ff0:	2201      	movs	r2, #1
 8015ff2:	2102      	movs	r1, #2
 8015ff4:	f7ff f8d4 	bl	80151a0 <gpio_mode_set>
 8015ff8:	484c      	ldr	r0, [pc, #304]	; (801612c <_gpio_init(unsigned int)+0x270>)
 8015ffa:	2308      	movs	r3, #8
 8015ffc:	2202      	movs	r2, #2
 8015ffe:	2100      	movs	r1, #0
 8016000:	e7da      	b.n	8015fb8 <_gpio_init(unsigned int)+0xfc>
 8016002:	484b      	ldr	r0, [pc, #300]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016004:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016008:	2108      	movs	r1, #8
 801600a:	f7ff f904 	bl	8015216 <gpio_af_set>
 801600e:	4848      	ldr	r0, [pc, #288]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016010:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8016014:	2201      	movs	r2, #1
 8016016:	2102      	movs	r1, #2
 8016018:	f7ff f8c2 	bl	80151a0 <gpio_mode_set>
 801601c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8016020:	4843      	ldr	r0, [pc, #268]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016022:	2202      	movs	r2, #2
 8016024:	2100      	movs	r1, #0
 8016026:	f7ff f8db 	bl	80151e0 <gpio_output_options_set>
 801602a:	4841      	ldr	r0, [pc, #260]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 801602c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8016030:	2108      	movs	r1, #8
 8016032:	f7ff f8f0 	bl	8015216 <gpio_af_set>
 8016036:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801603a:	483d      	ldr	r0, [pc, #244]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 801603c:	2201      	movs	r2, #1
 801603e:	2102      	movs	r1, #2
 8016040:	f7ff f8ae 	bl	80151a0 <gpio_mode_set>
 8016044:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8016048:	4839      	ldr	r0, [pc, #228]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 801604a:	2202      	movs	r2, #2
 801604c:	2100      	movs	r1, #0
 801604e:	e7b3      	b.n	8015fb8 <_gpio_init(unsigned int)+0xfc>
 8016050:	4837      	ldr	r0, [pc, #220]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016052:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8016056:	2108      	movs	r1, #8
 8016058:	f7ff f8dd 	bl	8015216 <gpio_af_set>
 801605c:	4834      	ldr	r0, [pc, #208]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 801605e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8016062:	2201      	movs	r2, #1
 8016064:	2102      	movs	r1, #2
 8016066:	f7ff f89b 	bl	80151a0 <gpio_mode_set>
 801606a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801606e:	4830      	ldr	r0, [pc, #192]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016070:	2202      	movs	r2, #2
 8016072:	2100      	movs	r1, #0
 8016074:	f7ff f8b4 	bl	80151e0 <gpio_output_options_set>
 8016078:	4828      	ldr	r0, [pc, #160]	; (801611c <_gpio_init(unsigned int)+0x260>)
 801607a:	2204      	movs	r2, #4
 801607c:	2108      	movs	r1, #8
 801607e:	f7ff f8ca 	bl	8015216 <gpio_af_set>
 8016082:	2304      	movs	r3, #4
 8016084:	4825      	ldr	r0, [pc, #148]	; (801611c <_gpio_init(unsigned int)+0x260>)
 8016086:	2201      	movs	r2, #1
 8016088:	2102      	movs	r1, #2
 801608a:	f7ff f889 	bl	80151a0 <gpio_mode_set>
 801608e:	2304      	movs	r3, #4
 8016090:	e748      	b.n	8015f24 <_gpio_init(unsigned int)+0x68>
 8016092:	4827      	ldr	r0, [pc, #156]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 8016094:	2240      	movs	r2, #64	; 0x40
 8016096:	2108      	movs	r1, #8
 8016098:	f7ff f8bd 	bl	8015216 <gpio_af_set>
 801609c:	4824      	ldr	r0, [pc, #144]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 801609e:	2340      	movs	r3, #64	; 0x40
 80160a0:	2201      	movs	r2, #1
 80160a2:	2102      	movs	r1, #2
 80160a4:	f7ff f87c 	bl	80151a0 <gpio_mode_set>
 80160a8:	2340      	movs	r3, #64	; 0x40
 80160aa:	4821      	ldr	r0, [pc, #132]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 80160ac:	2202      	movs	r2, #2
 80160ae:	2100      	movs	r1, #0
 80160b0:	f7ff f896 	bl	80151e0 <gpio_output_options_set>
 80160b4:	481e      	ldr	r0, [pc, #120]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 80160b6:	2280      	movs	r2, #128	; 0x80
 80160b8:	2108      	movs	r1, #8
 80160ba:	f7ff f8ac 	bl	8015216 <gpio_af_set>
 80160be:	2380      	movs	r3, #128	; 0x80
 80160c0:	481b      	ldr	r0, [pc, #108]	; (8016130 <_gpio_init(unsigned int)+0x274>)
 80160c2:	2201      	movs	r2, #1
 80160c4:	2102      	movs	r1, #2
 80160c6:	f7ff f86b 	bl	80151a0 <gpio_mode_set>
 80160ca:	2380      	movs	r3, #128	; 0x80
 80160cc:	e7bc      	b.n	8016048 <_gpio_init(unsigned int)+0x18c>
 80160ce:	4815      	ldr	r0, [pc, #84]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 80160d0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80160d4:	2108      	movs	r1, #8
 80160d6:	f7ff f89e 	bl	8015216 <gpio_af_set>
 80160da:	4812      	ldr	r0, [pc, #72]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 80160dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80160e0:	2201      	movs	r2, #1
 80160e2:	2102      	movs	r1, #2
 80160e4:	f7ff f85c 	bl	80151a0 <gpio_mode_set>
 80160e8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80160ec:	480d      	ldr	r0, [pc, #52]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 80160ee:	2202      	movs	r2, #2
 80160f0:	2100      	movs	r1, #0
 80160f2:	f7ff f875 	bl	80151e0 <gpio_output_options_set>
 80160f6:	480b      	ldr	r0, [pc, #44]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 80160f8:	2280      	movs	r2, #128	; 0x80
 80160fa:	2108      	movs	r1, #8
 80160fc:	f7ff f88b 	bl	8015216 <gpio_af_set>
 8016100:	2380      	movs	r3, #128	; 0x80
 8016102:	4808      	ldr	r0, [pc, #32]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8016104:	2201      	movs	r2, #1
 8016106:	2102      	movs	r1, #2
 8016108:	f7ff f84a 	bl	80151a0 <gpio_mode_set>
 801610c:	2380      	movs	r3, #128	; 0x80
 801610e:	4805      	ldr	r0, [pc, #20]	; (8016124 <_gpio_init(unsigned int)+0x268>)
 8016110:	2202      	movs	r2, #2
 8016112:	2100      	movs	r1, #0
 8016114:	e750      	b.n	8015fb8 <_gpio_init(unsigned int)+0xfc>
 8016116:	bf00      	nop
 8016118:	40007800 	andmi	r7, r0, r0, lsl #16
 801611c:	40020c00 	andmi	r0, r2, r0, lsl #24
 8016120:	40011000 	andmi	r1, r1, r0
 8016124:	40021000 	andmi	r1, r2, r0
 8016128:	40020400 	andmi	r0, r2, r0, lsl #8
 801612c:	40020000 	andmi	r0, r2, r0
 8016130:	40020800 	andmi	r0, r2, r0, lsl #16

08016134 <gd32_uart_begin>:
 8016134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016136:	461e      	mov	r6, r3
 8016138:	4b44      	ldr	r3, [pc, #272]	; (801624c <gd32_uart_begin+0x118>)
 801613a:	4298      	cmp	r0, r3
 801613c:	4604      	mov	r4, r0
 801613e:	460f      	mov	r7, r1
 8016140:	4615      	mov	r5, r2
 8016142:	d076      	beq.n	8016232 <gd32_uart_begin+0xfe>
 8016144:	d80f      	bhi.n	8016166 <gd32_uart_begin+0x32>
 8016146:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801614a:	4298      	cmp	r0, r3
 801614c:	d060      	beq.n	8016210 <gd32_uart_begin+0xdc>
 801614e:	d866      	bhi.n	801621e <gd32_uart_begin+0xea>
 8016150:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016154:	4298      	cmp	r0, r3
 8016156:	d054      	beq.n	8016202 <gd32_uart_begin+0xce>
 8016158:	f241 0012 	movw	r0, #4114	; 0x1012
 801615c:	f7ff f89c 	bl	8015298 <rcu_periph_clock_enable>
 8016160:	f640 4003 	movw	r0, #3075	; 0xc03
 8016164:	e00f      	b.n	8016186 <gd32_uart_begin+0x52>
 8016166:	4b3a      	ldr	r3, [pc, #232]	; (8016250 <gd32_uart_begin+0x11c>)
 8016168:	4298      	cmp	r0, r3
 801616a:	d006      	beq.n	801617a <gd32_uart_begin+0x46>
 801616c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016170:	4298      	cmp	r0, r3
 8016172:	d05b      	beq.n	801622c <gd32_uart_begin+0xf8>
 8016174:	f241 001f 	movw	r0, #4127	; 0x101f
 8016178:	e05d      	b.n	8016236 <gd32_uart_begin+0x102>
 801617a:	f241 1004 	movw	r0, #4356	; 0x1104
 801617e:	f7ff f88b 	bl	8015298 <rcu_periph_clock_enable>
 8016182:	f640 4001 	movw	r0, #3073	; 0xc01
 8016186:	f7ff f887 	bl	8015298 <rcu_periph_clock_enable>
 801618a:	4620      	mov	r0, r4
 801618c:	f7ff fe96 	bl	8015ebc <_gpio_init(unsigned int)>
 8016190:	4620      	mov	r0, r4
 8016192:	f7ff fb9b 	bl	80158cc <usart_deinit>
 8016196:	68e3      	ldr	r3, [r4, #12]
 8016198:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801619c:	60e3      	str	r3, [r4, #12]
 801619e:	4639      	mov	r1, r7
 80161a0:	4620      	mov	r0, r4
 80161a2:	f7ff fbf5 	bl	8015990 <usart_baudrate_set>
 80161a6:	f1a5 0309 	sub.w	r3, r5, #9
 80161aa:	4259      	negs	r1, r3
 80161ac:	4159      	adcs	r1, r3
 80161ae:	0309      	lsls	r1, r1, #12
 80161b0:	4620      	mov	r0, r4
 80161b2:	f7ff fc39 	bl	8015a28 <usart_word_length_set>
 80161b6:	9906      	ldr	r1, [sp, #24]
 80161b8:	1e8a      	subs	r2, r1, #2
 80161ba:	4251      	negs	r1, r2
 80161bc:	4151      	adcs	r1, r2
 80161be:	0349      	lsls	r1, r1, #13
 80161c0:	4620      	mov	r0, r4
 80161c2:	f7ff fc39 	bl	8015a38 <usart_stop_bit_set>
 80161c6:	2e01      	cmp	r6, #1
 80161c8:	d03a      	beq.n	8016240 <gd32_uart_begin+0x10c>
 80161ca:	2e02      	cmp	r6, #2
 80161cc:	d13b      	bne.n	8016246 <gd32_uart_begin+0x112>
 80161ce:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80161d2:	4620      	mov	r0, r4
 80161d4:	f7ff fc20 	bl	8015a18 <usart_parity_config>
 80161d8:	2100      	movs	r1, #0
 80161da:	4620      	mov	r0, r4
 80161dc:	f7ff fc40 	bl	8015a60 <usart_hardware_flow_rts_config>
 80161e0:	2100      	movs	r1, #0
 80161e2:	4620      	mov	r0, r4
 80161e4:	f7ff fc42 	bl	8015a6c <usart_hardware_flow_cts_config>
 80161e8:	2104      	movs	r1, #4
 80161ea:	4620      	mov	r0, r4
 80161ec:	f7ff fc32 	bl	8015a54 <usart_receive_config>
 80161f0:	2108      	movs	r1, #8
 80161f2:	4620      	mov	r0, r4
 80161f4:	f7ff fc28 	bl	8015a48 <usart_transmit_config>
 80161f8:	68e3      	ldr	r3, [r4, #12]
 80161fa:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80161fe:	60e3      	str	r3, [r4, #12]
 8016200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016202:	f241 0011 	movw	r0, #4113	; 0x1011
 8016206:	f7ff f847 	bl	8015298 <rcu_periph_clock_enable>
 801620a:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 801620e:	e7ba      	b.n	8016186 <gd32_uart_begin+0x52>
 8016210:	f241 0013 	movw	r0, #4115	; 0x1013
 8016214:	f7ff f840 	bl	8015298 <rcu_periph_clock_enable>
 8016218:	f640 4002 	movw	r0, #3074	; 0xc02
 801621c:	e7b3      	b.n	8016186 <gd32_uart_begin+0x52>
 801621e:	f241 0014 	movw	r0, #4116	; 0x1014
 8016222:	f7ff f839 	bl	8015298 <rcu_periph_clock_enable>
 8016226:	f640 4002 	movw	r0, #3074	; 0xc02
 801622a:	e797      	b.n	801615c <gd32_uart_begin+0x28>
 801622c:	f241 1005 	movw	r0, #4357	; 0x1105
 8016230:	e7f0      	b.n	8016214 <gd32_uart_begin+0xe0>
 8016232:	f241 001e 	movw	r0, #4126	; 0x101e
 8016236:	f7ff f82f 	bl	8015298 <rcu_periph_clock_enable>
 801623a:	f640 4004 	movw	r0, #3076	; 0xc04
 801623e:	e7a2      	b.n	8016186 <gd32_uart_begin+0x52>
 8016240:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8016244:	e7c5      	b.n	80161d2 <gd32_uart_begin+0x9e>
 8016246:	2100      	movs	r1, #0
 8016248:	e7c3      	b.n	80161d2 <gd32_uart_begin+0x9e>
 801624a:	bf00      	nop
 801624c:	40007800 	andmi	r7, r0, r0, lsl #16
 8016250:	40011000 	andmi	r1, r1, r0

08016254 <micros_init()>:
 8016254:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8016256:	f241 0003 	movw	r0, #4099	; 0x1003
 801625a:	f7ff f81d 	bl	8015298 <rcu_periph_clock_enable>
 801625e:	480c      	ldr	r0, [pc, #48]	; (8016290 <micros_init()+0x3c>)
 8016260:	f7ff f8d6 	bl	8015410 <timer_deinit>
 8016264:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016268:	2300      	movs	r3, #0
 801626a:	f8c2 3c24 	str.w	r3, [r2, #3108]	; 0xc24
 801626e:	22c7      	movs	r2, #199	; 0xc7
 8016270:	e9cd 2300 	strd	r2, r3, [sp]
 8016274:	4669      	mov	r1, sp
 8016276:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801627a:	4805      	ldr	r0, [pc, #20]	; (8016290 <micros_init()+0x3c>)
 801627c:	9302      	str	r3, [sp, #8]
 801627e:	f7ff f96d 	bl	801555c <timer_init>
 8016282:	4803      	ldr	r0, [pc, #12]	; (8016290 <micros_init()+0x3c>)
 8016284:	f7ff f9a8 	bl	80155d8 <timer_enable>
 8016288:	b005      	add	sp, #20
 801628a:	f85d fb04 	ldr.w	pc, [sp], #4
 801628e:	bf00      	nop
 8016290:	40000c00 	andmi	r0, r0, r0, lsl #24

08016294 <udelay_init()>:
 8016294:	4a07      	ldr	r2, [pc, #28]	; (80162b4 <udelay_init()+0x20>)
 8016296:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801629a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801629e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80162a2:	4b05      	ldr	r3, [pc, #20]	; (80162b8 <udelay_init()+0x24>)
 80162a4:	2200      	movs	r2, #0
 80162a6:	605a      	str	r2, [r3, #4]
 80162a8:	681a      	ldr	r2, [r3, #0]
 80162aa:	f042 0201 	orr.w	r2, r2, #1
 80162ae:	601a      	str	r2, [r3, #0]
 80162b0:	4770      	bx	lr
 80162b2:	bf00      	nop
 80162b4:	e000ed00 	and	lr, r0, r0, lsl #26
 80162b8:	e0001000 	and	r1, r0, r0

080162bc <udelay(unsigned int, unsigned int)>:
 80162bc:	23c8      	movs	r3, #200	; 0xc8
 80162be:	b530      	push	{r4, r5, lr}
 80162c0:	4358      	muls	r0, r3
 80162c2:	b909      	cbnz	r1, 80162c8 <udelay(unsigned int, unsigned int)+0xc>
 80162c4:	4b08      	ldr	r3, [pc, #32]	; (80162e8 <udelay(unsigned int, unsigned int)+0x2c>)
 80162c6:	6859      	ldr	r1, [r3, #4]
 80162c8:	4c07      	ldr	r4, [pc, #28]	; (80162e8 <udelay(unsigned int, unsigned int)+0x2c>)
 80162ca:	2300      	movs	r3, #0
 80162cc:	6862      	ldr	r2, [r4, #4]
 80162ce:	4291      	cmp	r1, r2
 80162d0:	d0fc      	beq.n	80162cc <udelay(unsigned int, unsigned int)+0x10>
 80162d2:	bf2a      	itet	cs
 80162d4:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80162d8:	189b      	addcc	r3, r3, r2
 80162da:	195b      	addcs	r3, r3, r5
 80162dc:	1a5b      	subs	r3, r3, r1
 80162de:	4283      	cmp	r3, r0
 80162e0:	d300      	bcc.n	80162e4 <udelay(unsigned int, unsigned int)+0x28>
 80162e2:	bd30      	pop	{r4, r5, pc}
 80162e4:	4611      	mov	r1, r2
 80162e6:	e7f1      	b.n	80162cc <udelay(unsigned int, unsigned int)+0x10>
 80162e8:	e0001000 	and	r1, r0, r0

080162ec <emac_start(unsigned char*)>:
 80162ec:	b570      	push	{r4, r5, r6, lr}
 80162ee:	4605      	mov	r5, r0
 80162f0:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80162f4:	f7fe ffd0 	bl	8015298 <rcu_periph_clock_enable>
 80162f8:	f640 4001 	movw	r0, #3073	; 0xc01
 80162fc:	f7fe ffcc 	bl	8015298 <rcu_periph_clock_enable>
 8016300:	f640 4002 	movw	r0, #3074	; 0xc02
 8016304:	f7fe ffc8 	bl	8015298 <rcu_periph_clock_enable>
 8016308:	f241 100e 	movw	r0, #4366	; 0x110e
 801630c:	f7fe ffc4 	bl	8015298 <rcu_periph_clock_enable>
 8016310:	487d      	ldr	r0, [pc, #500]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016312:	f44f 7280 	mov.w	r2, #256	; 0x100
 8016316:	2100      	movs	r1, #0
 8016318:	f7fe ff7d 	bl	8015216 <gpio_af_set>
 801631c:	487a      	ldr	r0, [pc, #488]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 801631e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8016322:	2200      	movs	r2, #0
 8016324:	2102      	movs	r1, #2
 8016326:	f7fe ff3b 	bl	80151a0 <gpio_mode_set>
 801632a:	f44f 7380 	mov.w	r3, #256	; 0x100
 801632e:	2203      	movs	r2, #3
 8016330:	4875      	ldr	r0, [pc, #468]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016332:	2100      	movs	r1, #0
 8016334:	f7fe ff54 	bl	80151e0 <gpio_output_options_set>
 8016338:	f04f 61c0 	mov.w	r1, #100663296	; 0x6000000
 801633c:	f44f 00c0 	mov.w	r0, #6291456	; 0x600000
 8016340:	f7fe ffca 	bl	80152d8 <rcu_ckout0_config>
 8016344:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8016348:	f7ff f856 	bl	80153f8 <syscfg_enet_phy_interface_config>
 801634c:	2302      	movs	r3, #2
 801634e:	4619      	mov	r1, r3
 8016350:	486d      	ldr	r0, [pc, #436]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016352:	2200      	movs	r2, #0
 8016354:	f7fe ff24 	bl	80151a0 <gpio_mode_set>
 8016358:	486b      	ldr	r0, [pc, #428]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 801635a:	2302      	movs	r3, #2
 801635c:	2203      	movs	r2, #3
 801635e:	2100      	movs	r1, #0
 8016360:	f7fe ff3e 	bl	80151e0 <gpio_output_options_set>
 8016364:	4868      	ldr	r0, [pc, #416]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016366:	2304      	movs	r3, #4
 8016368:	2200      	movs	r2, #0
 801636a:	2102      	movs	r1, #2
 801636c:	f7fe ff18 	bl	80151a0 <gpio_mode_set>
 8016370:	4865      	ldr	r0, [pc, #404]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016372:	2304      	movs	r3, #4
 8016374:	2203      	movs	r2, #3
 8016376:	2100      	movs	r1, #0
 8016378:	f7fe ff32 	bl	80151e0 <gpio_output_options_set>
 801637c:	4862      	ldr	r0, [pc, #392]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 801637e:	2380      	movs	r3, #128	; 0x80
 8016380:	2200      	movs	r2, #0
 8016382:	2102      	movs	r1, #2
 8016384:	f7fe ff0c 	bl	80151a0 <gpio_mode_set>
 8016388:	2380      	movs	r3, #128	; 0x80
 801638a:	485f      	ldr	r0, [pc, #380]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 801638c:	2203      	movs	r2, #3
 801638e:	2100      	movs	r1, #0
 8016390:	f7fe ff26 	bl	80151e0 <gpio_output_options_set>
 8016394:	485c      	ldr	r0, [pc, #368]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 8016396:	2202      	movs	r2, #2
 8016398:	210b      	movs	r1, #11
 801639a:	f7fe ff3c 	bl	8015216 <gpio_af_set>
 801639e:	485a      	ldr	r0, [pc, #360]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 80163a0:	2204      	movs	r2, #4
 80163a2:	210b      	movs	r1, #11
 80163a4:	f7fe ff37 	bl	8015216 <gpio_af_set>
 80163a8:	4857      	ldr	r0, [pc, #348]	; (8016508 <emac_start(unsigned char*)+0x21c>)
 80163aa:	2280      	movs	r2, #128	; 0x80
 80163ac:	210b      	movs	r1, #11
 80163ae:	f7fe ff32 	bl	8015216 <gpio_af_set>
 80163b2:	4856      	ldr	r0, [pc, #344]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163b4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80163b8:	2200      	movs	r2, #0
 80163ba:	2102      	movs	r1, #2
 80163bc:	f7fe fef0 	bl	80151a0 <gpio_mode_set>
 80163c0:	4852      	ldr	r0, [pc, #328]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163c2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80163c6:	2203      	movs	r2, #3
 80163c8:	2100      	movs	r1, #0
 80163ca:	f7fe ff09 	bl	80151e0 <gpio_output_options_set>
 80163ce:	484f      	ldr	r0, [pc, #316]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80163d4:	2200      	movs	r2, #0
 80163d6:	2102      	movs	r1, #2
 80163d8:	f7fe fee2 	bl	80151a0 <gpio_mode_set>
 80163dc:	484b      	ldr	r0, [pc, #300]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163de:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80163e2:	2203      	movs	r2, #3
 80163e4:	2100      	movs	r1, #0
 80163e6:	f7fe fefb 	bl	80151e0 <gpio_output_options_set>
 80163ea:	4848      	ldr	r0, [pc, #288]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80163f0:	2200      	movs	r2, #0
 80163f2:	2102      	movs	r1, #2
 80163f4:	f7fe fed4 	bl	80151a0 <gpio_mode_set>
 80163f8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80163fc:	4843      	ldr	r0, [pc, #268]	; (801650c <emac_start(unsigned char*)+0x220>)
 80163fe:	2203      	movs	r2, #3
 8016400:	2100      	movs	r1, #0
 8016402:	f7fe feed 	bl	80151e0 <gpio_output_options_set>
 8016406:	4841      	ldr	r0, [pc, #260]	; (801650c <emac_start(unsigned char*)+0x220>)
 8016408:	f44f 6200 	mov.w	r2, #2048	; 0x800
 801640c:	210b      	movs	r1, #11
 801640e:	f7fe ff02 	bl	8015216 <gpio_af_set>
 8016412:	483e      	ldr	r0, [pc, #248]	; (801650c <emac_start(unsigned char*)+0x220>)
 8016414:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8016418:	210b      	movs	r1, #11
 801641a:	f7fe fefc 	bl	8015216 <gpio_af_set>
 801641e:	483b      	ldr	r0, [pc, #236]	; (801650c <emac_start(unsigned char*)+0x220>)
 8016420:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8016424:	210b      	movs	r1, #11
 8016426:	f7fe fef6 	bl	8015216 <gpio_af_set>
 801642a:	2302      	movs	r3, #2
 801642c:	4619      	mov	r1, r3
 801642e:	4838      	ldr	r0, [pc, #224]	; (8016510 <emac_start(unsigned char*)+0x224>)
 8016430:	2200      	movs	r2, #0
 8016432:	f7fe feb5 	bl	80151a0 <gpio_mode_set>
 8016436:	4836      	ldr	r0, [pc, #216]	; (8016510 <emac_start(unsigned char*)+0x224>)
 8016438:	2302      	movs	r3, #2
 801643a:	2203      	movs	r2, #3
 801643c:	2100      	movs	r1, #0
 801643e:	f7fe fecf 	bl	80151e0 <gpio_output_options_set>
 8016442:	4833      	ldr	r0, [pc, #204]	; (8016510 <emac_start(unsigned char*)+0x224>)
 8016444:	2310      	movs	r3, #16
 8016446:	2200      	movs	r2, #0
 8016448:	2102      	movs	r1, #2
 801644a:	f7fe fea9 	bl	80151a0 <gpio_mode_set>
 801644e:	4830      	ldr	r0, [pc, #192]	; (8016510 <emac_start(unsigned char*)+0x224>)
 8016450:	2310      	movs	r3, #16
 8016452:	2203      	movs	r2, #3
 8016454:	2100      	movs	r1, #0
 8016456:	f7fe fec3 	bl	80151e0 <gpio_output_options_set>
 801645a:	482d      	ldr	r0, [pc, #180]	; (8016510 <emac_start(unsigned char*)+0x224>)
 801645c:	2320      	movs	r3, #32
 801645e:	2200      	movs	r2, #0
 8016460:	2102      	movs	r1, #2
 8016462:	f7fe fe9d 	bl	80151a0 <gpio_mode_set>
 8016466:	2320      	movs	r3, #32
 8016468:	4829      	ldr	r0, [pc, #164]	; (8016510 <emac_start(unsigned char*)+0x224>)
 801646a:	2203      	movs	r2, #3
 801646c:	2100      	movs	r1, #0
 801646e:	f7fe feb7 	bl	80151e0 <gpio_output_options_set>
 8016472:	4827      	ldr	r0, [pc, #156]	; (8016510 <emac_start(unsigned char*)+0x224>)
 8016474:	2202      	movs	r2, #2
 8016476:	210b      	movs	r1, #11
 8016478:	f7fe fecd 	bl	8015216 <gpio_af_set>
 801647c:	4824      	ldr	r0, [pc, #144]	; (8016510 <emac_start(unsigned char*)+0x224>)
 801647e:	2210      	movs	r2, #16
 8016480:	210b      	movs	r1, #11
 8016482:	f7fe fec8 	bl	8015216 <gpio_af_set>
 8016486:	2220      	movs	r2, #32
 8016488:	210b      	movs	r1, #11
 801648a:	4821      	ldr	r0, [pc, #132]	; (8016510 <emac_start(unsigned char*)+0x224>)
 801648c:	f7fe fec3 	bl	8015216 <gpio_af_set>
 8016490:	f640 4019 	movw	r0, #3097	; 0xc19
 8016494:	f7fe ff00 	bl	8015298 <rcu_periph_clock_enable>
 8016498:	f640 401a 	movw	r0, #3098	; 0xc1a
 801649c:	f7fe fefc 	bl	8015298 <rcu_periph_clock_enable>
 80164a0:	f640 401b 	movw	r0, #3099	; 0xc1b
 80164a4:	f7fe fef8 	bl	8015298 <rcu_periph_clock_enable>
 80164a8:	f7fe fe32 	bl	8015110 <enet_deinit>
 80164ac:	f7fe fa5a 	bl	8014964 <enet_software_reset>
 80164b0:	4604      	mov	r4, r0
 80164b2:	b138      	cbz	r0, 80164c4 <emac_start(unsigned char*)+0x1d8>
 80164b4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80164b8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80164bc:	2001      	movs	r0, #1
 80164be:	f7fe fbe9 	bl	8014c94 <enet_init>
 80164c2:	4604      	mov	r4, r0
 80164c4:	4628      	mov	r0, r5
 80164c6:	f000 f9c1 	bl	801684c <mac_address_get(unsigned char*)>
 80164ca:	4629      	mov	r1, r5
 80164cc:	2000      	movs	r0, #0
 80164ce:	f7fe fb39 	bl	8014b44 <enet_mac_address_set>
 80164d2:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80164d6:	f7fe fa59 	bl	801498c <enet_descriptors_chain_init>
 80164da:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80164de:	f7fe fa55 	bl	801498c <enet_descriptors_chain_init>
 80164e2:	4e0c      	ldr	r6, [pc, #48]	; (8016514 <emac_start(unsigned char*)+0x228>)
 80164e4:	2500      	movs	r5, #0
 80164e6:	4630      	mov	r0, r6
 80164e8:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80164ec:	3501      	adds	r5, #1
 80164ee:	f7fe fb23 	bl	8014b38 <enet_transmit_checksum_config>
 80164f2:	2d08      	cmp	r5, #8
 80164f4:	f106 0610 	add.w	r6, r6, #16
 80164f8:	d1f5      	bne.n	80164e6 <emac_start(unsigned char*)+0x1fa>
 80164fa:	f7fe fd6b 	bl	8014fd4 <enet_enable>
 80164fe:	fab4 f084 	clz	r0, r4
 8016502:	0940      	lsrs	r0, r0, #5
 8016504:	4240      	negs	r0, r0
 8016506:	bd70      	pop	{r4, r5, r6, pc}
 8016508:	40020000 	andmi	r0, r2, r0
 801650c:	40020400 	andmi	r0, r2, r0, lsl #8
 8016510:	40020800 	andmi	r0, r2, r0, lsl #16
 8016514:	2002d3e4 	andcs	sp, r2, r4, ror #7

08016518 <adc_clock_config>:
 8016518:	4b06      	ldr	r3, [pc, #24]	; (8016534 <adc_clock_config+0x1c>)
 801651a:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 801651e:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8016522:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 8016526:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 801652a:	4310      	orrs	r0, r2
 801652c:	f8c3 0304 	str.w	r0, [r3, #772]	; 0x304
 8016530:	4770      	bx	lr
 8016532:	bf00      	nop
 8016534:	40012000 	andmi	r2, r1, r0

08016538 <adc_special_function_config>:
 8016538:	b510      	push	{r4, lr}
 801653a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801653e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8016542:	f001 0102 	and.w	r1, r1, #2
 8016546:	b17a      	cbz	r2, 8016568 <adc_special_function_config+0x30>
 8016548:	b11b      	cbz	r3, 8016552 <adc_special_function_config+0x1a>
 801654a:	6843      	ldr	r3, [r0, #4]
 801654c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016550:	6043      	str	r3, [r0, #4]
 8016552:	b11c      	cbz	r4, 801655c <adc_special_function_config+0x24>
 8016554:	6843      	ldr	r3, [r0, #4]
 8016556:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801655a:	6043      	str	r3, [r0, #4]
 801655c:	b119      	cbz	r1, 8016566 <adc_special_function_config+0x2e>
 801655e:	6883      	ldr	r3, [r0, #8]
 8016560:	f043 0302 	orr.w	r3, r3, #2
 8016564:	6083      	str	r3, [r0, #8]
 8016566:	bd10      	pop	{r4, pc}
 8016568:	b11b      	cbz	r3, 8016572 <adc_special_function_config+0x3a>
 801656a:	6843      	ldr	r3, [r0, #4]
 801656c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016570:	6043      	str	r3, [r0, #4]
 8016572:	b11c      	cbz	r4, 801657c <adc_special_function_config+0x44>
 8016574:	6843      	ldr	r3, [r0, #4]
 8016576:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801657a:	6043      	str	r3, [r0, #4]
 801657c:	2900      	cmp	r1, #0
 801657e:	d0f2      	beq.n	8016566 <adc_special_function_config+0x2e>
 8016580:	6883      	ldr	r3, [r0, #8]
 8016582:	f023 0302 	bic.w	r3, r3, #2
 8016586:	e7ed      	b.n	8016564 <adc_special_function_config+0x2c>

08016588 <adc_data_alignment_config>:
 8016588:	6883      	ldr	r3, [r0, #8]
 801658a:	b119      	cbz	r1, 8016594 <adc_data_alignment_config+0xc>
 801658c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8016590:	6083      	str	r3, [r0, #8]
 8016592:	4770      	bx	lr
 8016594:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016598:	e7fa      	b.n	8016590 <adc_data_alignment_config+0x8>

0801659a <adc_enable>:
 801659a:	6883      	ldr	r3, [r0, #8]
 801659c:	07db      	lsls	r3, r3, #31
 801659e:	bf5e      	ittt	pl
 80165a0:	6883      	ldrpl	r3, [r0, #8]
 80165a2:	f043 0301 	orrpl.w	r3, r3, #1
 80165a6:	6083      	strpl	r3, [r0, #8]
 80165a8:	4770      	bx	lr

080165aa <adc_calibration_enable>:
 80165aa:	6883      	ldr	r3, [r0, #8]
 80165ac:	f043 0308 	orr.w	r3, r3, #8
 80165b0:	f100 0208 	add.w	r2, r0, #8
 80165b4:	6083      	str	r3, [r0, #8]
 80165b6:	6813      	ldr	r3, [r2, #0]
 80165b8:	0719      	lsls	r1, r3, #28
 80165ba:	d4fc      	bmi.n	80165b6 <adc_calibration_enable+0xc>
 80165bc:	6883      	ldr	r3, [r0, #8]
 80165be:	f043 0304 	orr.w	r3, r3, #4
 80165c2:	6083      	str	r3, [r0, #8]
 80165c4:	6813      	ldr	r3, [r2, #0]
 80165c6:	075b      	lsls	r3, r3, #29
 80165c8:	d4fc      	bmi.n	80165c4 <adc_calibration_enable+0x1a>
 80165ca:	4770      	bx	lr

080165cc <adc_channel_16_to_18>:
 80165cc:	f400 0380 	and.w	r3, r0, #4194304	; 0x400000
 80165d0:	f400 0000 	and.w	r0, r0, #8388608	; 0x800000
 80165d4:	b181      	cbz	r1, 80165f8 <adc_channel_16_to_18+0x2c>
 80165d6:	b133      	cbz	r3, 80165e6 <adc_channel_16_to_18+0x1a>
 80165d8:	4a0f      	ldr	r2, [pc, #60]	; (8016618 <adc_channel_16_to_18+0x4c>)
 80165da:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80165de:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80165e2:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80165e6:	b130      	cbz	r0, 80165f6 <adc_channel_16_to_18+0x2a>
 80165e8:	4a0b      	ldr	r2, [pc, #44]	; (8016618 <adc_channel_16_to_18+0x4c>)
 80165ea:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80165ee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80165f2:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80165f6:	4770      	bx	lr
 80165f8:	b133      	cbz	r3, 8016608 <adc_channel_16_to_18+0x3c>
 80165fa:	4a07      	ldr	r2, [pc, #28]	; (8016618 <adc_channel_16_to_18+0x4c>)
 80165fc:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8016600:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8016604:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8016608:	2800      	cmp	r0, #0
 801660a:	d0f4      	beq.n	80165f6 <adc_channel_16_to_18+0x2a>
 801660c:	4a02      	ldr	r2, [pc, #8]	; (8016618 <adc_channel_16_to_18+0x4c>)
 801660e:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8016612:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8016616:	e7ec      	b.n	80165f2 <adc_channel_16_to_18+0x26>
 8016618:	40012000 	andmi	r2, r1, r0

0801661c <adc_channel_length_config>:
 801661c:	2901      	cmp	r1, #1
 801661e:	d002      	beq.n	8016626 <adc_channel_length_config+0xa>
 8016620:	2902      	cmp	r1, #2
 8016622:	d00c      	beq.n	801663e <adc_channel_length_config+0x22>
 8016624:	4770      	bx	lr
 8016626:	3a01      	subs	r2, #1
 8016628:	2a0f      	cmp	r2, #15
 801662a:	d813      	bhi.n	8016654 <adc_channel_length_config+0x38>
 801662c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801662e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8016632:	62c3      	str	r3, [r0, #44]	; 0x2c
 8016634:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016636:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801663a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801663c:	4770      	bx	lr
 801663e:	3a01      	subs	r2, #1
 8016640:	2a03      	cmp	r2, #3
 8016642:	d807      	bhi.n	8016654 <adc_channel_length_config+0x38>
 8016644:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8016646:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801664a:	6383      	str	r3, [r0, #56]	; 0x38
 801664c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801664e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8016652:	6383      	str	r3, [r0, #56]	; 0x38
 8016654:	4770      	bx	lr

08016656 <adc_inserted_channel_config>:
 8016656:	2903      	cmp	r1, #3
 8016658:	b530      	push	{r4, r5, lr}
 801665a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801665c:	d80f      	bhi.n	801667e <adc_inserted_channel_config+0x28>
 801665e:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8016662:	1a61      	subs	r1, r4, r1
 8016664:	f06f 0404 	mvn.w	r4, #4
 8016668:	4361      	muls	r1, r4
 801666a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801666c:	310f      	adds	r1, #15
 801666e:	241f      	movs	r4, #31
 8016670:	408c      	lsls	r4, r1
 8016672:	ea25 0404 	bic.w	r4, r5, r4
 8016676:	fa02 f101 	lsl.w	r1, r2, r1
 801667a:	4321      	orrs	r1, r4
 801667c:	6381      	str	r1, [r0, #56]	; 0x38
 801667e:	2a09      	cmp	r2, #9
 8016680:	d80a      	bhi.n	8016698 <adc_inserted_channel_config+0x42>
 8016682:	6901      	ldr	r1, [r0, #16]
 8016684:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016688:	2407      	movs	r4, #7
 801668a:	4094      	lsls	r4, r2
 801668c:	ea21 0104 	bic.w	r1, r1, r4
 8016690:	4093      	lsls	r3, r2
 8016692:	430b      	orrs	r3, r1
 8016694:	6103      	str	r3, [r0, #16]
 8016696:	bd30      	pop	{r4, r5, pc}
 8016698:	2a12      	cmp	r2, #18
 801669a:	d8fc      	bhi.n	8016696 <adc_inserted_channel_config+0x40>
 801669c:	3a0a      	subs	r2, #10
 801669e:	68c1      	ldr	r1, [r0, #12]
 80166a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80166a4:	2407      	movs	r4, #7
 80166a6:	4094      	lsls	r4, r2
 80166a8:	ea21 0104 	bic.w	r1, r1, r4
 80166ac:	4093      	lsls	r3, r2
 80166ae:	430b      	orrs	r3, r1
 80166b0:	60c3      	str	r3, [r0, #12]
 80166b2:	e7f0      	b.n	8016696 <adc_inserted_channel_config+0x40>

080166b4 <adc_external_trigger_config>:
 80166b4:	2901      	cmp	r1, #1
 80166b6:	d002      	beq.n	80166be <adc_external_trigger_config+0xa>
 80166b8:	2902      	cmp	r1, #2
 80166ba:	d009      	beq.n	80166d0 <adc_external_trigger_config+0x1c>
 80166bc:	4770      	bx	lr
 80166be:	6883      	ldr	r3, [r0, #8]
 80166c0:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80166c4:	6083      	str	r3, [r0, #8]
 80166c6:	6883      	ldr	r3, [r0, #8]
 80166c8:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80166cc:	6083      	str	r3, [r0, #8]
 80166ce:	4770      	bx	lr
 80166d0:	6883      	ldr	r3, [r0, #8]
 80166d2:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80166d6:	6083      	str	r3, [r0, #8]
 80166d8:	6883      	ldr	r3, [r0, #8]
 80166da:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80166de:	e7f5      	b.n	80166cc <adc_external_trigger_config+0x18>

080166e0 <adc_software_trigger_enable>:
 80166e0:	2901      	cmp	r1, #1
 80166e2:	d002      	beq.n	80166ea <adc_software_trigger_enable+0xa>
 80166e4:	2902      	cmp	r1, #2
 80166e6:	d005      	beq.n	80166f4 <adc_software_trigger_enable+0x14>
 80166e8:	4770      	bx	lr
 80166ea:	6883      	ldr	r3, [r0, #8]
 80166ec:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80166f0:	6083      	str	r3, [r0, #8]
 80166f2:	4770      	bx	lr
 80166f4:	6883      	ldr	r3, [r0, #8]
 80166f6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80166fa:	e7f9      	b.n	80166f0 <adc_software_trigger_enable+0x10>

080166fc <i2c_clock_config>:
 80166fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80166fe:	4605      	mov	r5, r0
 8016700:	2002      	movs	r0, #2
 8016702:	460c      	mov	r4, r1
 8016704:	4617      	mov	r7, r2
 8016706:	f7fe fe03 	bl	8015310 <rcu_clock_freq_get>
 801670a:	4a26      	ldr	r2, [pc, #152]	; (80167a4 <i2c_clock_config+0xa8>)
 801670c:	686e      	ldr	r6, [r5, #4]
 801670e:	4603      	mov	r3, r0
 8016710:	4825      	ldr	r0, [pc, #148]	; (80167a8 <i2c_clock_config+0xac>)
 8016712:	fbb3 f0f0 	udiv	r0, r3, r0
 8016716:	4293      	cmp	r3, r2
 8016718:	bf94      	ite	ls
 801671a:	4601      	movls	r1, r0
 801671c:	2132      	movhi	r1, #50	; 0x32
 801671e:	4a23      	ldr	r2, [pc, #140]	; (80167ac <i2c_clock_config+0xb0>)
 8016720:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8016724:	430e      	orrs	r6, r1
 8016726:	4294      	cmp	r4, r2
 8016728:	606e      	str	r6, [r5, #4]
 801672a:	d811      	bhi.n	8016750 <i2c_clock_config+0x54>
 801672c:	3001      	adds	r0, #1
 801672e:	2831      	cmp	r0, #49	; 0x31
 8016730:	bf86      	itte	hi
 8016732:	2232      	movhi	r2, #50	; 0x32
 8016734:	622a      	strhi	r2, [r5, #32]
 8016736:	6228      	strls	r0, [r5, #32]
 8016738:	0064      	lsls	r4, r4, #1
 801673a:	fbb3 f4f4 	udiv	r4, r3, r4
 801673e:	2c04      	cmp	r4, #4
 8016740:	69ea      	ldr	r2, [r5, #28]
 8016742:	bf38      	it	cc
 8016744:	2404      	movcc	r4, #4
 8016746:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801674a:	4314      	orrs	r4, r2
 801674c:	61ec      	str	r4, [r5, #28]
 801674e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016750:	4a17      	ldr	r2, [pc, #92]	; (80167b0 <i2c_clock_config+0xb4>)
 8016752:	4294      	cmp	r4, r2
 8016754:	d8fb      	bhi.n	801674e <i2c_clock_config+0x52>
 8016756:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801675a:	4351      	muls	r1, r2
 801675c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8016760:	fbb1 f1f2 	udiv	r1, r1, r2
 8016764:	3101      	adds	r1, #1
 8016766:	6229      	str	r1, [r5, #32]
 8016768:	b9a7      	cbnz	r7, 8016794 <i2c_clock_config+0x98>
 801676a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801676e:	fbb3 f4f4 	udiv	r4, r3, r4
 8016772:	69eb      	ldr	r3, [r5, #28]
 8016774:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016778:	61eb      	str	r3, [r5, #28]
 801677a:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801677e:	b90b      	cbnz	r3, 8016784 <i2c_clock_config+0x88>
 8016780:	f044 0401 	orr.w	r4, r4, #1
 8016784:	69eb      	ldr	r3, [r5, #28]
 8016786:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801678a:	61eb      	str	r3, [r5, #28]
 801678c:	69eb      	ldr	r3, [r5, #28]
 801678e:	4323      	orrs	r3, r4
 8016790:	61eb      	str	r3, [r5, #28]
 8016792:	e7dc      	b.n	801674e <i2c_clock_config+0x52>
 8016794:	2219      	movs	r2, #25
 8016796:	4354      	muls	r4, r2
 8016798:	fbb3 f4f4 	udiv	r4, r3, r4
 801679c:	69eb      	ldr	r3, [r5, #28]
 801679e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80167a2:	e7e9      	b.n	8016778 <i2c_clock_config+0x7c>
 80167a4:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 80167a8:	000f4240 	andeq	r4, pc, r0, asr #4
 80167ac:	000186a0 	andeq	r8, r1, r0, lsr #13
 80167b0:	00061a80 	andeq	r1, r6, r0, lsl #21

080167b4 <i2c_ack_config>:
 80167b4:	6803      	ldr	r3, [r0, #0]
 80167b6:	2901      	cmp	r1, #1
 80167b8:	bf0c      	ite	eq
 80167ba:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80167be:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80167c2:	6003      	str	r3, [r0, #0]
 80167c4:	4770      	bx	lr

080167c6 <i2c_ackpos_config>:
 80167c6:	6803      	ldr	r3, [r0, #0]
 80167c8:	b919      	cbnz	r1, 80167d2 <i2c_ackpos_config+0xc>
 80167ca:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80167ce:	6003      	str	r3, [r0, #0]
 80167d0:	4770      	bx	lr
 80167d2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80167d6:	e7fa      	b.n	80167ce <i2c_ackpos_config+0x8>

080167d8 <i2c_master_addressing>:
 80167d8:	3202      	adds	r2, #2
 80167da:	bf0c      	ite	eq
 80167dc:	f021 0101 	biceq.w	r1, r1, #1
 80167e0:	f041 0101 	orrne.w	r1, r1, #1
 80167e4:	6101      	str	r1, [r0, #16]
 80167e6:	4770      	bx	lr

080167e8 <i2c_enable>:
 80167e8:	6803      	ldr	r3, [r0, #0]
 80167ea:	f043 0301 	orr.w	r3, r3, #1
 80167ee:	6003      	str	r3, [r0, #0]
 80167f0:	4770      	bx	lr

080167f2 <i2c_start_on_bus>:
 80167f2:	6803      	ldr	r3, [r0, #0]
 80167f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80167f8:	6003      	str	r3, [r0, #0]
 80167fa:	4770      	bx	lr

080167fc <i2c_stop_on_bus>:
 80167fc:	6803      	ldr	r3, [r0, #0]
 80167fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8016802:	6003      	str	r3, [r0, #0]
 8016804:	4770      	bx	lr

08016806 <i2c_data_transmit>:
 8016806:	6101      	str	r1, [r0, #16]
 8016808:	4770      	bx	lr

0801680a <i2c_data_receive>:
 801680a:	6900      	ldr	r0, [r0, #16]
 801680c:	b2c0      	uxtb	r0, r0
 801680e:	4770      	bx	lr

08016810 <i2c_flag_get>:
 8016810:	098b      	lsrs	r3, r1, #6
 8016812:	f001 011f 	and.w	r1, r1, #31
 8016816:	581a      	ldr	r2, [r3, r0]
 8016818:	2301      	movs	r3, #1
 801681a:	408b      	lsls	r3, r1
 801681c:	4213      	tst	r3, r2
 801681e:	bf14      	ite	ne
 8016820:	2001      	movne	r0, #1
 8016822:	2000      	moveq	r0, #0
 8016824:	4770      	bx	lr

08016826 <i2c_flag_clear>:
 8016826:	f240 5301 	movw	r3, #1281	; 0x501
 801682a:	4299      	cmp	r1, r3
 801682c:	b510      	push	{r4, lr}
 801682e:	d102      	bne.n	8016836 <i2c_flag_clear+0x10>
 8016830:	6943      	ldr	r3, [r0, #20]
 8016832:	6983      	ldr	r3, [r0, #24]
 8016834:	bd10      	pop	{r4, pc}
 8016836:	098c      	lsrs	r4, r1, #6
 8016838:	2201      	movs	r2, #1
 801683a:	5823      	ldr	r3, [r4, r0]
 801683c:	f001 011f 	and.w	r1, r1, #31
 8016840:	408a      	lsls	r2, r1
 8016842:	ea23 0302 	bic.w	r3, r3, r2
 8016846:	5023      	str	r3, [r4, r0]
 8016848:	e7f4      	b.n	8016834 <i2c_flag_clear+0xe>
	...

0801684c <mac_address_get(unsigned char*)>:
 801684c:	4a07      	ldr	r2, [pc, #28]	; (801686c <mac_address_get(unsigned char*)+0x20>)
 801684e:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8016852:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	; 0xa14
 8016856:	7042      	strb	r2, [r0, #1]
 8016858:	0e1a      	lsrs	r2, r3, #24
 801685a:	7082      	strb	r2, [r0, #2]
 801685c:	0c1a      	lsrs	r2, r3, #16
 801685e:	2102      	movs	r1, #2
 8016860:	70c2      	strb	r2, [r0, #3]
 8016862:	0a1a      	lsrs	r2, r3, #8
 8016864:	7001      	strb	r1, [r0, #0]
 8016866:	7102      	strb	r2, [r0, #4]
 8016868:	7143      	strb	r3, [r0, #5]
 801686a:	4770      	bx	lr
 801686c:	1fff7000 	svcne	0x00ff7000

08016870 <__popcountsi2>:
 8016870:	0843      	lsrs	r3, r0, #1
 8016872:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8016876:	1ac0      	subs	r0, r0, r3
 8016878:	0883      	lsrs	r3, r0, #2
 801687a:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 801687e:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8016882:	4418      	add	r0, r3
 8016884:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8016888:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 801688c:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8016890:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8016894:	0e00      	lsrs	r0, r0, #24
 8016896:	4770      	bx	lr

Disassembly of section .rodata:

08016898 <vtable for DisplayHandler-0x148>:
	...
 80168a0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80168a4:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80168a8:	00000000 	andeq	r0, r0, r0
 80168ac:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80168b0:	353a3331 	ldrcc	r3, [sl, #-817]!	; 0xfffffccf
 80168b4:	35303a37 	ldrcc	r3, [r0, #-2615]!	; 0xfffff5c9
 80168b8:	63654400 	cmnvs	r5, #0, 8
 80168bc:	20353220 	eorscs	r3, r5, r0, lsr #4
 80168c0:	32323032 	eorscc	r3, r2, #50	; 0x32
 80168c4:	335b1b00 	cmpcc	fp, #0, 22
 80168c8:	44446d32 	strbmi	r6, [r4], #-3378	; 0xfffff2ce
 80168cc:	69502050 	ldmdbvs	r0, {r4, r6, sp}^
 80168d0:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80168d4:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 80168d8:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 80168dc:	7b207265 	blvc	8833278 <__exidx_end+0x8195bc>
 80168e0:	20783631 	rsbscs	r3, r8, r1, lsr r6
 80168e4:	6e552034 	mrcvs	0, 2, r2, cr5, cr4, {1}
 80168e8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80168ec:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
 80168f0:	32202f20 	eorcc	r2, r0, #32, 30	; 0x80
 80168f4:	4d442078 	stclmi	0, cr2, [r4, #-480]	; 0xfffffe20
 80168f8:	335b1b58 	cmpcc	fp, #88, 22	; 0x16000
 80168fc:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8016900:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8016904:	00676966 	rsbeq	r6, r7, r6, ror #18
 8016908:	66745f2e 	ldrbtvs	r5, [r4], -lr, lsr #30
 801690c:	2e007074 	mcrcs	0, 0, r7, cr0, cr4, {3}
 8016910:	7064645f 	rsbvc	r6, r4, pc, asr r4
 8016914:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8016918:	69643d65 	stmdbvs	r4!, {r0, r2, r5, r6, r8, sl, fp, ip, sp}^
 801691c:	616c7073 	smcvs	50947	; 0xc703
 8016920:	5f2e0079 	svcpl	0x002e0079
 8016924:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8016928:	646f6e00 	strbtvs	r6, [pc], #-3584	; 8016930 <_etext+0x98>
 801692c:	44443d65 	strbmi	r3, [r4], #-3429	; 0xfffff29b
 8016930:	69502050 	ldmdbvs	r0, {r4, r6, sp}^
 8016934:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8016938:	00584d44 	subseq	r4, r8, r4, asr #26
 801693c:	20504444 	subscs	r4, r0, r4, asr #8
 8016940:	70736944 	rsbsvc	r6, r3, r4, asr #18
 8016944:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8016948:	252d7525 	strcs	r7, [sp, #-1317]!	; 0xfffffadb
 801694c:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8016950:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8016954:	00783220 	rsbseq	r3, r8, r0, lsr #4
 8016958:	6e61724f 	cdpvs	2, 6, cr7, cr1, cr15, {2}
 801695c:	50206567 	eorpl	r6, r0, r7, ror #10
 8016960:	655a2069 	ldrbvs	r2, [sl, #-105]	; 0xffffff97
 8016964:	50206f72 	eorpl	r6, r0, r2, ror pc
 8016968:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801696c:	584d442d 	stmdapl	sp, {r0, r2, r3, r5, sl, lr}^
 8016970:	50444400 	subpl	r4, r4, r0, lsl #8
 8016974:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8016978:	25206c65 	strcs	r6, [r0, #-3173]!	; 0xfffff39b
 801697c:	75257875 	strvc	r7, [r5, #-2165]!	; 0xfffff78b
 8016980:	3a732500 	bcc	9cdfd88 <__exidx_end+0x1cc60cc>
 8016984:	47206425 	strmi	r6, [r0, -r5, lsr #8]!
 8016988:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 801698c:	73250073 			; <UNDEFINED> instruction: 0x73250073
 8016990:	0075253a 	rsbseq	r2, r5, sl, lsr r5
 8016994:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8016998:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801699c:	50444420 	subpl	r4, r4, r0, lsr #8
 80169a0:	73694420 	cmnvc	r9, #32, 8	; 0x20000000
 80169a4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80169a8:	50444400 	subpl	r4, r4, r0, lsl #8
 80169ac:	73694420 	cmnvc	r9, #32, 8	; 0x20000000
 80169b0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80169b4:	61745320 	cmnvs	r4, r0, lsr #6
 80169b8:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 80169bc:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 80169c0:	72620021 	rsbvc	r0, r2, #33	; 0x21
 80169c4:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 80169c8:	62616d00 	rsbvs	r6, r1, #0, 26
 80169cc:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 80169d0:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 80169d4:	73002368 	movwvc	r2, #872	; 0x368
 80169d8:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 80169dc:	00000023 	andeq	r0, r0, r3, lsr #32

080169e0 <vtable for DisplayHandler>:
	...
 80169e8:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 80169ec:	080091c1 	stmdaeq	r0, {r0, r6, r7, r8, ip, pc}
 80169f0:	08009215 	stmdaeq	r0, {r0, r2, r4, r9, ip, pc}

080169f4 <vtable for PixelDmxStartStop>:
	...
 80169fc:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8016a00:	080091d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, ip, pc}
 8016a04:	08009085 	stmdaeq	r0, {r0, r2, r7, ip, pc}
 8016a08:	08009095 	stmdaeq	r0, {r0, r2, r4, r7, ip, pc}

08016a0c <vtable for LightSet64with4>:
	...
 8016a14:	080090c9 	stmdaeq	r0, {r0, r3, r6, r7, ip, pc}
 8016a18:	080091cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, ip, pc}
 8016a1c:	080090cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, ip, pc}
 8016a20:	080090ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, pc}
 8016a24:	0800910f 	stmdaeq	r0, {r0, r1, r2, r3, r8, ip, pc}
 8016a28:	08009143 	stmdaeq	r0, {r0, r1, r6, r8, ip, pc}
 8016a2c:	0800907f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, ip, pc}
 8016a30:	08009165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip, pc}
 8016a34:	08009183 	stmdaeq	r0, {r0, r1, r7, r8, ip, pc}
 8016a38:	08009187 	stmdaeq	r0, {r0, r1, r2, r7, r8, ip, pc}
 8016a3c:	0800918d 	stmdaeq	r0, {r0, r2, r3, r7, r8, ip, pc}
 8016a40:	08009191 	stmdaeq	r0, {r0, r4, r7, r8, ip, pc}

08016a44 <vtable for RDMNetDevice>:
	...
 8016a4c:	08009265 	stmdaeq	r0, {r0, r2, r5, r6, r9, ip, pc}
 8016a50:	0800928d 	stmdaeq	r0, {r0, r2, r3, r7, r9, ip, pc}
 8016a54:	0800c63f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r9, sl, lr, pc}
 8016a58:	0800c641 	stmdaeq	r0, {r0, r6, r9, sl, lr, pc}
 8016a5c:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8016a60:	080091a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, ip, pc}
 8016a64:	080091e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, ip, pc}
 8016a68:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8016a6c:	00000000 	andeq	r0, r0, r0
 8016a70:	08009285 	stmdaeq	r0, {r0, r2, r7, r9, ip, pc}
 8016a74:	0800929f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8016a78:	080091a1 	stmdaeq	r0, {r0, r5, r7, r8, ip, pc}
 8016a7c:	080091b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, pc}
 8016a80:	080091f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, pc}

08016a84 <CSWTCH.129>:
 8016a84:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8016a88:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08016a89 <SOFTWARE_VERSION>:
 8016a89:	00342e31 	eorseq	r2, r4, r1, lsr lr

08016a8d <gamma10_0>:
 8016a8d:	03020100 	movweq	r0, #8448	; 0x2100
 8016a91:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8016a95:	0b0a0908 	bleq	8298ebd <__exidx_end+0x27f201>
 8016a99:	0f0e0d0c 	svceq	0x000e0d0c
 8016a9d:	13121110 	tstne	r2, #16, 2
 8016aa1:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8016aa5:	1b1a1918 	blne	869cf0d <__exidx_end+0x683251>
 8016aa9:	1f1e1d1c 	svcne	0x001e1d1c
 8016aad:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016ab1:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8016ab5:	2b2a2928 	blcs	8aa0f5d <__exidx_end+0xa872a1>
 8016ab9:	2f2e2d2c 	svccs	0x002e2d2c
 8016abd:	33323130 	teqcc	r2, #48, 2
 8016ac1:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016ac5:	3b3a3938 	blcc	8ea4fad <__exidx_end+0xe8b2f1>
 8016ac9:	3f3e3d3c 	svccc	0x003e3d3c
 8016acd:	43424140 	movtmi	r4, #8512	; 0x2140
 8016ad1:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016ad5:	4b4a4948 	blmi	92a8ffd <__exidx_end+0x128f341>
 8016ad9:	4f4e4d4c 	svcmi	0x004e4d4c
 8016add:	53525150 	cmppl	r2, #80, 2
 8016ae1:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8016ae5:	5b5a5958 	blpl	96ad04d <__exidx_end+0x1693391>
 8016ae9:	5f5e5d5c 	svcpl	0x005e5d5c
 8016aed:	63626160 	cmnvs	r2, #96, 2
 8016af1:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8016af5:	6b6a6968 	blvs	9ab109d <__exidx_end+0x1a973e1>
 8016af9:	6f6e6d6c 	svcvs	0x006e6d6c
 8016afd:	73727170 	cmnvc	r2, #112, 2
 8016b01:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016b05:	7b7a7978 	blvc	9eb50ed <__exidx_end+0x1e9b431>
 8016b09:	7f7e7d7c 	svcvc	0x007e7d7c
 8016b0d:	83828180 	orrhi	r8, r2, #128, 2
 8016b11:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016b15:	8b8a8988 	blhi	62b913d <__stack_size+0x62b513d>
 8016b19:	8f8e8d8c 	svchi	0x008e8d8c
 8016b1d:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016b21:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016b25:	9b9a9998 	blls	66bd18d <__stack_size+0x66b918d>
 8016b29:	9f9e9d9c 	svcls	0x009e9d9c
 8016b2d:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016b31:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8016b35:	abaaa9a8 	blge	6ac11dd <__stack_size+0x6abd1dd>
 8016b39:	afaeadac 	svcge	0x00aeadac
 8016b3d:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016b41:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8016b45:	bbbab9b8 	bllt	6ec522d <__stack_size+0x6ec122d>
 8016b49:	bfbebdbc 	svclt	0x00bebdbc
 8016b4d:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016b51:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8016b55:	cbcac9c8 	blgt	72c927d <__stack_size+0x72c527d>
 8016b59:	cfcecdcc 	svcgt	0x00cecdcc
 8016b5d:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8016b61:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8016b65:	dbdad9d8 	blle	76cd2cd <__stack_size+0x76c92cd>
 8016b69:	dfdedddc 	svcle	0x00dedddc
 8016b6d:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8016b71:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8016b75:	ebeae9e8 	bl	7ad131d <__stack_size+0x7acd31d>
 8016b79:	efeeedec 	svc	0x00eeedec
 8016b7d:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8016b81:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8016b85:	fbfaf9f8 	blx	7ed536f <__stack_size+0x7ed136f>
 8016b89:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08016b8d <SOFTWARE_VERSION>:
 8016b8d:	00342e31 	eorseq	r2, r4, r1, lsr lr
 8016b91:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016b95:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016b99:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8016b9d:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8016ba1:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8016ba5:	0a73252c 	beq	9ce005d <__exidx_end+0x1cc63a1>
 8016ba9:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8016bad:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016bb1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016bb5:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8016bb9:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8016bbd:	4f000a64 	svcmi	0x00000a64
 8016bc1:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8016bc5:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8016bc9:	616c7073 	smcvs	50947	; 0xc703
 8016bcd:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8016bd1:	6674000a 	ldrbtvs	r0, [r4], -sl
 8016bd5:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8016bd9:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8016bdd:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016be1:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8016be5:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8016be9:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016bed:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016bf1:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8016bf5:	20505446 	subscs	r5, r0, r6, asr #8
 8016bf9:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8016bfd:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8016c01:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8016c05:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8016c09:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8016c0d:	525b2066 	subspl	r2, fp, #102	; 0x66
 8016c11:	6f6f6265 	svcvs	0x006f6265
 8016c15:	00205d74 	eoreq	r5, r0, r4, ror sp
 8016c19:	4f525245 	svcmi	0x00525245
 8016c1d:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8016c21:	000a7465 	andeq	r7, sl, r5, ror #8
 8016c25:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8016c29:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8016c2d:	616c7073 	smcvs	50947	; 0xc703
 8016c31:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8016c35:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8016c39:	000a2123 	andeq	r2, sl, r3, lsr #2
 8016c3d:	4f525245 	svcmi	0x00525245
 8016c41:	0a3f2352 	beq	8fdf991 <__exidx_end+0xfc5cd5>
 8016c45:	62657200 	rsbvs	r7, r5, #0, 4
 8016c49:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8016c4d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8016c51:	00237473 	eoreq	r7, r3, r3, ror r4
 8016c55:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016c59:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8016c5d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016c61:	76002365 	strvc	r2, [r0], -r5, ror #6
 8016c65:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016c69:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8016c6d:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8016c71:	63616600 	cmnvs	r1, #0, 12
 8016c75:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016c79:	 	tstmi	r0, r3, lsr #6

08016c7c <s_Node>:
 8016c7c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8016c80:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8016c8c:	41730000 	cmnmi	r3, r0
 8016c90:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8016c94:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8016ca0:	2043534f 	subcs	r5, r3, pc, asr #6
 8016ca4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8016ca8:	00007265 	andeq	r7, r0, r5, ror #4
 8016cac:	00000000 	andeq	r0, r0, r0
 8016cb0:	544c0000 	strbpl	r0, [ip], #-0
 8016cb4:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8016cc4:	2043534f 	subcs	r5, r3, pc, asr #6
 8016cc8:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8016ccc:	0000746e 	andeq	r7, r0, lr, ror #8
 8016cd0:	00000000 	andeq	r0, r0, r0
 8016cd4:	44520000 	ldrbmi	r0, [r2], #-0
 8016cd8:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8016cdc:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8016ce0:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8016ce4:	0000796c 	andeq	r7, r0, ip, ror #18
 8016ce8:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8016cec:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8016cf8:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8016cfc:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8016d0c:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8016d1c:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8016d20:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8016d24:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8016d28:	00000072 	andeq	r0, r0, r2, ror r0
 8016d2c:	00000000 	andeq	r0, r0, r0
 8016d30:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08016d42 <s_Output>:
 8016d42:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8016d4e:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8016d5a:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8016d5e:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8016d62:	00000000 	andeq	r0, r0, r0
 8016d66:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8016d6a:	0000006c 	andeq	r0, r0, ip, rrx
 8016d6e:	00000000 	andeq	r0, r0, r0
 8016d72:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8016d76:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8016d7a:	00000000 	andeq	r0, r0, r0
 8016d7e:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8016d8a:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8016d8e:	00006769 	andeq	r6, r0, r9, ror #14
 8016d92:	00000000 	andeq	r0, r0, r0
 8016d96:	70657453 	rsbvc	r7, r5, r3, asr r4
 8016d9a:	00726570 	rsbseq	r6, r2, r0, ror r5
 8016d9e:	00000000 	andeq	r0, r0, r0
 8016da2:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8016da6:	00007265 	andeq	r7, r0, r5, ror #4
 8016daa:	00000000 	andeq	r0, r0, r0
 8016dae:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8016db2:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8016db6:	00000000 	andeq	r0, r0, r0
 8016dba:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8016dbe:	00006c61 	andeq	r6, r0, r1, ror #24
 8016dc2:	00000000 	andeq	r0, r0, r0
 8016dc6:	20424752 	subcs	r4, r2, r2, asr r7
 8016dca:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8016dce:	0000006c 	andeq	r0, r0, ip, rrx
	...

08016dd4 <RemoteConfig::s_GET>:
 8016dd4:	0800b14d 	stmdaeq	r0, {r0, r2, r3, r6, r8, ip, sp, pc}
 8016dd8:	00000000 	andeq	r0, r0, r0
 8016ddc:	08016c46 	stmdaeq	r1, {r1, r2, r6, sl, fp, sp, lr}
 8016de0:	00000008 	andeq	r0, r0, r8
 8016de4:	0800a631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp, pc}
 8016de8:	00000000 	andeq	r0, r0, r0
 8016dec:	08016c4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, fp, sp, lr}
 8016df0:	00000005 	andeq	r0, r0, r5
 8016df4:	0800a631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp, pc}
 8016df8:	00000000 	andeq	r0, r0, r0
 8016dfc:	08016c55 	stmdaeq	r1, {r0, r2, r4, r6, sl, fp, sp, lr}
 8016e00:	00000006 	andeq	r0, r0, r6
 8016e04:	0800a7e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, sp, pc}
 8016e08:	00000000 	andeq	r0, r0, r0
 8016e0c:	08016c5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, sp, lr}
 8016e10:	00000007 	andeq	r0, r0, r7
 8016e14:	0800a7a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, sp, pc}
 8016e18:	00000000 	andeq	r0, r0, r0
 8016e1c:	08016c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, sp, lr}
 8016e20:	00000008 	andeq	r0, r0, r8
 8016e24:	0800a701 	stmdaeq	r0, {r0, r8, r9, sl, sp, pc}
 8016e28:	00000000 	andeq	r0, r0, r0
 8016e2c:	08016c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, sp, lr}
 8016e30:	00000008 	andeq	r0, r0, r8
 8016e34:	0800aab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp, sp, pc}
 8016e38:	00000000 	andeq	r0, r0, r0
 8016e3c:	08016c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, sp, lr}
 8016e40:	00010004 	andeq	r0, r1, r4
 8016e44:	0800a755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, sp, pc}
 8016e48:	00000000 	andeq	r0, r0, r0
 8016e4c:	08016c25 	stmdaeq	r1, {r0, r2, r5, sl, fp, sp, lr}
 8016e50:	00000005 	andeq	r0, r0, r5
 8016e54:	0800ae3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, fp, sp, pc}
 8016e58:	00000000 	andeq	r0, r0, r0
 8016e5c:	08016c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, sp, lr}
 8016e60:	00000009 	andeq	r0, r0, r9

08016e64 <RemoteConfig::s_SET>:
 8016e64:	0800a891 	stmdaeq	r0, {r0, r4, r7, fp, sp, pc}
 8016e68:	00000000 	andeq	r0, r0, r0
 8016e6c:	08016c25 	stmdaeq	r1, {r0, r2, r5, sl, fp, sp, lr}
 8016e70:	00010005 	andeq	r0, r1, r5
 8016e74:	0800a869 	stmdaeq	r0, {r0, r3, r5, r6, fp, sp, pc}
 8016e78:	00000000 	andeq	r0, r0, r0
 8016e7c:	08016c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, sp, lr}
 8016e80:	00010008 	andeq	r0, r1, r8
 8016e84:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016e88:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8016e8c:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8016e90:	0a64253d 	beq	992038c <__exidx_end+0x19066d0>
 8016e94:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8016e98:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016e9c:	002c2273 	eoreq	r2, ip, r3, ror r2
 8016ea0:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8016ea4:	000a7325 	andeq	r7, sl, r5, lsr #6
 8016ea8:	6f626552 	svcvs	0x00626552
 8016eac:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8016eb0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8016eb4:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8016eb8:	6f6f6265 	svcvs	0x006f6265
 8016ebc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8016ec0:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8016ec4:	6f637200 	svcvs	0x00637200
 8016ec8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016ecc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016ed0:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8016ed4:	6b726f77 	blvs	9cb2cb8 <__exidx_end+0x1c98ffc>
 8016ed8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016edc:	73696400 	cmnvc	r9, #0, 8
 8016ee0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016ee4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016ee8:	72617000 	rsbvc	r7, r1, #0
 8016eec:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8016ef0:	00747874 	rsbseq	r7, r4, r4, ror r8
 8016ef4:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8016ef8:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8016efc:	00747874 	rsbseq	r7, r4, r4, ror r8

08016f00 <RemoteConfig::s_TXT>:
 8016f00:	0800aac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, sp, pc}
 8016f04:	00000000 	andeq	r0, r0, r0
 8016f08:	0800ad6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, pc}
 8016f0c:	00000000 	andeq	r0, r0, r0
 8016f10:	08016ec5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, fp, sp, lr}
 8016f14:	0000000b 	andeq	r0, r0, fp
 8016f18:	0000000c 	andeq	r0, r0, ip
 8016f1c:	0800aaf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, sp, pc}
 8016f20:	00000000 	andeq	r0, r0, r0
 8016f24:	0800ad9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, sp, pc}
 8016f28:	00000000 	andeq	r0, r0, r0
 8016f2c:	08016ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, sp, lr}
 8016f30:	0000000b 	andeq	r0, r0, fp
 8016f34:	00000000 	andeq	r0, r0, r0
 8016f38:	0800ab7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, sp, pc}
 8016f3c:	00000000 	andeq	r0, r0, r0
 8016f40:	0800ae15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, sp, pc}
 8016f44:	00000000 	andeq	r0, r0, r0
 8016f48:	08016edd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, sl, fp, sp, lr}
 8016f4c:	0000000b 	andeq	r0, r0, fp
 8016f50:	0000000f 	andeq	r0, r0, pc
 8016f54:	0800ab21 	stmdaeq	r0, {r0, r5, r8, r9, fp, sp, pc}
 8016f58:	00000000 	andeq	r0, r0, r0
 8016f5c:	0800adc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, sp, pc}
 8016f60:	00000000 	andeq	r0, r0, r0
 8016f64:	08016ee9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 8016f68:	0000000a 	andeq	r0, r0, sl
 8016f6c:	00000002 	andeq	r0, r0, r2
 8016f70:	0800ab4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp, sp, pc}
 8016f74:	00000000 	andeq	r0, r0, r0
 8016f78:	0800aded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, sp, pc}
 8016f7c:	00000000 	andeq	r0, r0, r0
 8016f80:	08016ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, sp, lr}
 8016f84:	0000000b 	andeq	r0, r0, fp
 8016f88:	00000003 	andeq	r0, r0, r3
 8016f8c:	00544547 	subseq	r4, r4, r7, asr #10
 8016f90:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8016f94:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8016f98:	0a200050 	beq	88170e0 <__exidx_end+0x7fd424>
 8016f9c:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8016fa0:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8016fa4:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8016fa8:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8016fac:	3b200065 	blcc	8817148 <__exidx_end+0x7fd48c>
 8016fb0:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8016fb4:	6163696c 	cmnvs	r3, ip, ror #18
 8016fb8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016fbc:	6f736a2f 	svcvs	0x00736a2f
 8016fc0:	6f43006e 	svcvs	0x0043006e
 8016fc4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016fc8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8016fcc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8016fd0:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8016fd4:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8016fd8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016fdc:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8016fe0:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8016fe4:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8016fe8:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8016fec:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8016ff0:	2f00736a 	svccs	0x0000736a
 8016ff4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016ff8:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8016ffc:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8017000:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017004:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8017008:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801700c:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8017010:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017014:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8017018:	6f736a2f 	svcvs	0x00736a2f
 801701c:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8017020:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017024:	62657200 	rsbvs	r7, r5, #0, 4
 8017028:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 801702c:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8017030:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8017034:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8017038:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 801703c:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8017040:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8017044:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8017048:	0a3e6c6d 	beq	8fb2204 <__exidx_end+0xf98548>
 801704c:	6165683c 	cmnvs	r5, ip, lsr r8
 8017050:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8017054:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8017058:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 801705c:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8017060:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8017064:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8017068:	6165682f 	cmnvs	r5, pc, lsr #16
 801706c:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8017070:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017074:	31683c3e 	cmncc	r8, lr, lsr ip
 8017078:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 801707c:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8017080:	6f622f3c 	svcvs	0x00622f3c
 8017084:	0a3e7964 	beq	8fb561c <__exidx_end+0xf9b960>
 8017088:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 801708c:	0a3e6c6d 	beq	8fb2248 <__exidx_end+0xf9858c>
 8017090:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 8017094:	71655220 	cmnvc	r5, r0, lsr #4
 8017098:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 801709c:	746f4e00 	strbtvc	r4, [pc], #-3584	; 80170a4 <RemoteConfig::s_TXT+0x1a4>
 80170a0:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8016a88 <CSWTCH.129+0x4>
 80170a4:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 80170a8:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 80170ac:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 80170b0:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 80170b4:	6f542079 	svcvs	0x00542079
 80170b8:	614c206f 	cmpvs	ip, pc, rrx
 80170bc:	00656772 	rsbeq	r6, r5, r2, ror r7
 80170c0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 80170c4:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 80170c8:	20495255 	subcs	r5, r9, r5, asr r2
 80170cc:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80170d0:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80170d4:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 80170d8:	616e7265 	cmnvs	lr, r5, ror #4
 80170dc:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 80170e0:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 80170e4:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 80170e8:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 80170ec:	6f687465 	svcvs	0x00687465
 80170f0:	6f4e2064 	svcvs	0x004e2064
 80170f4:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 80170f8:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 80170fc:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017100:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 8017104:	6f697372 	svcvs	0x00697372
 8017108:	6f4e206e 	svcvs	0x004e206e
 801710c:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 8017110:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 8017114:	00646574 	rsbeq	r6, r4, r4, ror r5
 8017118:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801711c:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8017120:	6f727245 	svcvs	0x00727245
 8017124:	4b4f0072 	blmi	93d72f4 <__exidx_end+0x13bd638>
 8017128:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 801712c:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8017130:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8017134:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8017138:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 801713c:	0a3e6c6d 	beq	8fb22f8 <__exidx_end+0xf9863c>
 8017140:	6165683c 	cmnvs	r5, ip, lsr r8
 8017144:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8017148:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 801714c:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8017150:	2f3c7325 	svccs	0x003c7325
 8017154:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8017158:	2f3c3e65 	svccs	0x003c3e65
 801715c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8017160:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8017164:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8017168:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801716c:	2f3c7325 	svccs	0x003c7325
 8017170:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8017174:	646f622f 	strbtvs	r6, [pc], #-559	; 801717c <RemoteConfig::s_TXT+0x27c>
 8017178:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 801717c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8017180:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8017184:	50545448 	subspl	r5, r4, r8, asr #8
 8017188:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 801718c:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8017190:	0a0d7325 	beq	8373e2c <__exidx_end+0x35a170>
 8017194:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8017198:	203a7265 	eorscs	r7, sl, r5, ror #4
 801719c:	0a0d7325 	beq	8373e38 <__exidx_end+0x35a17c>
 80171a0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80171a4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80171a8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80171ac:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80171b0:	6f430a0d 	svcvs	0x00430a0d
 80171b4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80171b8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80171bc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80171c0:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80171c4:	6f430a0d 	svcvs	0x00430a0d
 80171c8:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80171cc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80171d0:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 80171d4:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 80171d8:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 80171dc:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80171e0:	30353446 	eorscc	r3, r5, r6, asr #8
 80171e4:	 	strvc	r4, [r0], #-2390	; 0xfffff6aa

080171e7 <contentType>:
 80171e7:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80171eb:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80171ef:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8017207:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801720b:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8017227:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801722b:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801722f:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8017233:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8017247:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801724b:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801724f:	2f6e6f69 	svccs	0x006e6f69
 8017253:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08017267 <RemoteConfigConst::PARAMS_DISABLE>:
 8017267:	61736964 	cmnvs	r3, r4, ror #18
 801726b:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801726f <RemoteConfigConst::PARAMS_FILE_NAME>:
 801726f:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8017273:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8017277:	00747874 	rsbseq	r7, r4, r4, ror r8

0801727b <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801727b:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801727f:	5f79616c 	svcpl	0x0079616c
 8017283:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08017288 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8017288:	61736964 	cmnvs	r3, r4, ror #18
 801728c:	5f656c62 	svcpl	0x00656c62
 8017290:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8017294:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08017296 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8017296:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801729a:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 801729e:	6f6f6265 	svcvs	0x006f6265
 80172a2:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080172a4 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80172a4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80172a8:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8016d44 <s_Output+0x2>
 80172ac:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80172b0:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080172b2 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80172b2:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80172b6:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80172ba:	6f746361 	svcvs	0x00746361
 80172be:	7b007972 	blvc	803588e <__exidx_end+0x1bbd2>
 80172c2:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80172c6:	7b3a2274 	blvc	8e9fc9e <__exidx_end+0xe85fe2>
 80172ca:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80172ce:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80172d2:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80172d6:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80172da:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80172de:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80172e2:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80172e6:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80172ea:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80172ee:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80172f2:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80172f6:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80172fa:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80172fe:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017302:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8017306:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801730a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801730e:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8017312:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017316:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801731a:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801731e:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8017322:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017326:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801732a:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801732e:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8017332:	616f6222 	cmnvs	pc, r2, lsr #4
 8017336:	3a226472 	bcc	88b0506 <__exidx_end+0x89684a>
 801733a:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801733e:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8017342:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8017346:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801734a:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801734e:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8017352:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8017356:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801735a:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801735e:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8017362:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8017366:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801736a:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801736e:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8017372:	7b000a7d 	blvc	8019d6e <__exidx_end+0xb2>
 8017376:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801737a:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801737e:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8017382:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8017386:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801738a:	7b3a2273 	blvc	8e9fd5e <__exidx_end+0xe860a2>
 801738e:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8017392:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8017396:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 801739a:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 801739e:	72542058 	subsvc	r2, r4, #88	; 0x58
 80173a2:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80173a6:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80173aa:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80173ae:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80173b2:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80173b6:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80173ba:	5020584d 	eorpl	r5, r0, sp, asr #16
 80173be:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80173c2:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 80173c6:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80173ca:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 80173ce:	3a227478 	bcc	88b45b6 <__exidx_end+0x89a8fa>
 80173d2:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 80173d6:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80173da:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 80173de:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80173e2:	6f777465 	svcvs	0x00777465
 80173e6:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 80173ea:	3a227478 	bcc	88b45d2 <__exidx_end+0x89a916>
 80173ee:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 80173f2:	6b726f77 	blvs	9cb31d6 <__exidx_end+0x1c9951a>
 80173f6:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 80173fa:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80173fe:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8017402:	3a227478 	bcc	88b45ea <__exidx_end+0x89a92e>
 8017406:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 801740a:	2065746f 	rsbcs	r7, r5, pc, ror #8
 801740e:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8017412:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8017416:	6f697461 	svcvs	0x00697461
 801741a:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

0801741f <index_html>:
 801741f:	4f44213c 	svcmi	0x0044213c
 8017423:	50595443 	subspl	r5, r9, r3, asr #8
 8017427:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 801742b:	0a3e6c6d 	beq	8fb25e7 <__exidx_end+0xf9892b>
 801742f:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8017433:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8017437:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801743b:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801743f:	6b6e696c 	blvs	9bb19f7 <__exidx_end+0x1b97d3b>
 8017443:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8017447:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 801744b:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801744f:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8017453:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8017457:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801745b:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801745f:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8017463:	20227373 	eorcs	r7, r2, r3, ror r3
 8017467:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801746b:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801746f:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8017473:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8017477:	0a3e656c 	beq	8fb0a2f <__exidx_end+0xf96d73>
 801747b:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801747f:	0a3e6461 	beq	8fb060b <__exidx_end+0xf9694f>
 8017483:	646f623c 	strbtvs	r6, [pc], #-572	; 801748b <index_html+0x6c>
 8017487:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801748b:	6165683c 	cmnvs	r5, ip, lsr r8
 801748f:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8017493:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8017497:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 801749b:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801749f:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80174a3:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80174a7:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80174ab:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80174af:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80174b3:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80174b7:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80174bb:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80174bf:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80174c3:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80174c7:	6f746365 	svcvs	0x00746365
 80174cb:	20227972 	eorcs	r7, r2, r2, ror r9
 80174cf:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80174d3:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80174d7:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80174db:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80174df:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80174e3:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80174e7:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80174eb:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80174ef:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80174f3:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80174f7:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80174fb:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80174ff:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8017503:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8017507:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 801750b:	20227478 	eorcs	r7, r2, r8, ror r4
 801750f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8017513:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8017517:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 801751b:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801751f:	0a3e656c 	beq	8fb0ad7 <__exidx_end+0xf96e1b>
 8017523:	6f663c09 	svcvs	0x00663c09
 8017527:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 801752b:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801752f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8017533:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8017537:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801753b:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801753f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8017543:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8017547:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801754b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801754f:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8017553:	20747069 	rsbscs	r7, r4, r9, rrx
 8017557:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801755b:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801755f:	6a2e7865 	bvs	8bb56fb <__exidx_end+0xb9ba3f>
 8017563:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8017567:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 801756b:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801756f:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8017573:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8017577:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801757b:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801757f:	 	svcvs	0x0062000a

08017581 <styles_css>:
 8017581:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017585:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8017589:	63616220 	cmnvs	r1, #32, 4
 801758d:	6f72676b 	svcvs	0x0072676b
 8017591:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8017595:	6f6c6f63 	svcvs	0x006c6f63
 8017599:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801759d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80175a1:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80175a5:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80175a9:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80175ad:	6f6c6f63 	svcvs	0x006c6f63
 80175b1:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80175b5:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80175b9:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80175bd:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80175c1:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80175c5:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80175c9:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80175cd:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80175d1:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80175d5:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80175d9:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80175dd:	0a3b7865 	beq	8ef5779 <__exidx_end+0xedbabd>
 80175e1:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80175e5:	0a7b2069 	beq	9edf791 <__exidx_end+0x1ec5ad5>
 80175e9:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80175ed:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80175f1:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80175f5:	6f6e203a 	svcvs	0x006e203a
 80175f9:	0a3b656e 	beq	8ef0bb9 <__exidx_end+0xed6efd>
 80175fd:	616d2020 	cmnvs	sp, r0, lsr #32
 8017601:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8017605:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8017609:	70352078 	eorsvc	r2, r5, r8, ror r0
 801760d:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8017611:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8017615:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8017619:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801761d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8017621:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017625:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8017629:	0a3b7865 	beq	8ef57c5 <__exidx_end+0xedbb09>
 801762d:	6f622020 	svcvs	0x00622020
 8017631:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8017635:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8017639:	3a737569 	bcc	9cf4be5 <__exidx_end+0x1cdaf29>
 801763d:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8017641:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8017645:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8017649:	203a7265 	eorscs	r7, sl, r5, ror #4
 801764d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017651:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8017655:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8017659:	0a3b7870 	beq	8ef5821 <__exidx_end+0xedbb65>
 801765d:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8017661:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8017665:	0a7b2072 	beq	9edf835 <__exidx_end+0x1ec5b79>
 8017669:	69642020 	stmdbvs	r4!, {r5, sp}^
 801766d:	616c7073 	smcvs	50947	; 0xc703
 8017671:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8017675:	3b78656c 	blcc	9e30c2d <__exidx_end+0x1e16f71>
 8017679:	6a20200a 	bvs	881f6a9 <__exidx_end+0x8059ed>
 801767d:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8017681:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8017685:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8017689:	203a746e 	eorscs	r7, sl, lr, ror #8
 801768d:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8017691:	0a3b7265 	beq	8ef402d <__exidx_end+0xeda371>
 8017695:	6f622020 	svcvs	0x00622020
 8017699:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801769d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80176a1:	3a737569 	bcc	9cf4c4d <__exidx_end+0x1cdaf91>
 80176a5:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80176a9:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80176ad:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80176b1:	203a7265 	eorscs	r7, sl, r5, ror #4
 80176b5:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80176b9:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80176bd:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80176c1:	0a3b7870 	beq	8ef5889 <__exidx_end+0xedbbcd>
 80176c5:	 			; <UNDEFINED> instruction: 0xde000a7d

080176c8 <HttpContent>:
 80176c8:	08016fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 80176cc:	08017581 	stmdaeq	r1, {r0, r7, r8, sl, ip, sp, lr}
 80176d0:	08016fea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 80176d4:	080176e0 	stmdaeq	r1, {r5, r6, r7, r9, sl, ip, sp, lr}
 80176d8:	08016fd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 80176dc:	0801741f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip, sp, lr}

080176e0 <index_js>:
 80176e0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80176e4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80176e8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80176ec:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80176f0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80176f4:	6a284e4f 	bvs	8a2b038 <__exidx_end+0xa1137c>
 80176f8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80176fc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017700:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017704:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8017708:	6a2f273d 	bvs	8be1404 <__exidx_end+0xbc7748>
 801770c:	2f6e6f73 	svccs	0x006e6f73
 8017710:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8017714:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8017718:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 801771c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8017720:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8017724:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8017728:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 801772c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8017730:	20746961 	rsbscs	r6, r4, r1, ror #18
 8017734:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8017738:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 801773c:	0a3b296c 	beq	8ee1cf4 <__exidx_end+0xec8038>
 8017740:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017744:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8017748:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 801774c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017750:	73657220 	cmnvc	r5, #32, 4
 8017754:	6f736a2e 	svcvs	0x00736a2e
 8017758:	3b29286e 	blcc	8a61918 <__exidx_end+0xa47c5c>
 801775c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8017760:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8017764:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8017768:	6f727265 	svcvs	0x00727265
 801776c:	7b202972 	blvc	8821d3c <__exidx_end+0x808080>
 8017770:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017774:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8017778:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801777c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8017780:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8017784:	3b29726f 	blcc	8a74148 <__exidx_end+0xa5a48c>
 8017788:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801778c:	0a0a7d0a 	beq	82b6bbc <__exidx_end+0x29cf00>
 8017790:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017794:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017798:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801779c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80177a0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80177a4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80177a8:	20292874 	eorcs	r2, r9, r4, ror r8
 80177ac:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80177b0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80177b4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80177b8:	6177613d 	cmnvs	r7, sp, lsr r1
 80177bc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80177c0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80177c4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80177c8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80177cc:	0a3b2927 	beq	8ee1c70 <__exidx_end+0xec7fb4>
 80177d0:	6f640909 	svcvs	0x00640909
 80177d4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80177d8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80177dc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80177e0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80177e4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80177e8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80177ec:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80177f0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80177f4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80177f8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80177fc:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8017800:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017804:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8017808:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801780c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8017810:	2b656d61 	blcs	9972d9c <__exidx_end+0x19590e0>
 8017814:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017794 <index_js+0xb4>
 8017818:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801781c:	2b223e69 	blcs	88a71c8 <__exidx_end+0x88d50c>
 8017820:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017824:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017828:	6f6e2e74 	svcvs	0x006e2e74
 801782c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8017830:	2b657079 	blcs	9973a1c <__exidx_end+0x1959d60>
 8017834:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80177b4 <index_js+0xd4>
 8017838:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801783c:	2b223e69 	blcs	88a71e8 <__exidx_end+0x88d52c>
 8017840:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017844:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017848:	6f6e2e74 	svcvs	0x006e2e74
 801784c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8017850:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8017854:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8017858:	2f3c222b 	svccs	0x003c222b
 801785c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017860:	0a7d0a3b 	beq	9f5a154 <__exidx_end+0x1f40498>
 8017864:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8017868:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801786c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017870:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8017874:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017878:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801787c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017880:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8017884:	0a7b2029 	beq	9edf930 <__exidx_end+0x1ec5c74>
 8017888:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801788c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8017890:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017894:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017898:	6177613d 	cmnvs	r7, sp, lsr r1
 801789c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80178a0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80178a4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80178a8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80178ac:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80178b0:	3b292779 	blcc	8a6169c <__exidx_end+0xa479e0>
 80178b4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80178b8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80178bc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80178c0:	0a22223d 	beq	88a01bc <__exidx_end+0x886500>
 80178c4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80178c8:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80178cc:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80178d0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80178d4:	6a624f3d 	bvs	98ab5d0 <__exidx_end+0x1891914>
 80178d8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80178dc:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80178e0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80178e4:	6f746365 	svcvs	0x00746365
 80178e8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80178ec:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80178f0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80178f4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80178f8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80178fc:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8017900:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8017904:	6145726f 	cmpvs	r5, pc, ror #4
 8017908:	66286863 	strtvs	r6, [r8], -r3, ror #16
 801790c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017910:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017914:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8017918:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801791c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017920:	20726176 	rsbscs	r6, r2, r6, ror r1
 8017924:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8017928:	203d2065 	eorscs	r2, sp, r5, rrx
 801792c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017930:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017934:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8017938:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801793c:	6b5b5d22 	blvs	96eedcc <__exidx_end+0x16d5110>
 8017940:	3b5d7965 	blcc	9775edc <__exidx_end+0x175c220>
 8017944:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017948:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801794c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8017950:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8017954:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017958:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801795c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8017960:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017964:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8017968:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801796c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8017970:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8017974:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017978:	0a3b223e 	beq	8ee0278 <__exidx_end+0xec65bc>
 801797c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8017980:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017984:	6f640909 	svcvs	0x00640909
 8017988:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801798c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8017990:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017994:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8017998:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801799c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80179a0:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80179a4:	6f746365 	svcvs	0x00746365
 80179a8:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80179ac:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80179b0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80179b4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80179b8:	3b6c6d74 	blcc	9b32f90 <__exidx_end+0x1b192d4>
 80179bc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80179c0:	5f746567 	svcpl	0x00746567
 80179c4:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80179c8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80179cc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80179d0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80179d4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80179d8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80179dc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80179e0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80179e4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80179e8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80179ec:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80179f0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80179f4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80179f8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80179fc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017a00:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8017a04:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8017a08:	6177613d 	cmnvs	r7, sp, lsr r1
 8017a0c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017a10:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017a14:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8017a18:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017a1c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8017a20:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017a24:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8017a28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8017a2c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8017a30:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8017a34:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8017a38:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8017a3c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8017a40:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8017a44:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8017a48:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8017a4c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8017a50:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8017a54:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8017a58:	2b22563e 	blcs	88ad358 <__exidx_end+0x89369c>
 8017a5c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017a60:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8017a64:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017a68:	2b6e6f69 	blcs	9bb3814 <__exidx_end+0x1b99b58>
 8017a6c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80179ec <index_js+0x30c>
 8017a70:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017a74:	2b223e69 	blcs	88a7420 <__exidx_end+0x88d764>
 8017a78:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017a7c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8017a80:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8017a84:	61642e64 	cmnvs	r4, r4, ror #28
 8017a88:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8017a8c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8017a90:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8017a94:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8017a98:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017a9c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8017aa0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8017aa4:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8017aa8:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8017aac:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8017ab0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8017ab4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8017ab8:	6f697372 	svcvs	0x00697372
 8017abc:	6f622e6e 	svcvs	0x00622e6e
 8017ac0:	2b647261 	blcs	993444c <__exidx_end+0x191a790>
 8017ac4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017a44 <index_js+0x364>
 8017ac8:	3b223e69 	blcc	88a7474 <__exidx_end+0x88d7b8>
 8017acc:	0a0a7d0a 	beq	82b6efc <__exidx_end+0x29d240>
 8017ad0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017ad4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017ad8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017adc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017ae0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8017ae8 <index_js+0x408>
 8017ae4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8017ae8:	20296c65 	eorcs	r6, r9, r5, ror #24
 8017aec:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8017af0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8017af4:	613d7478 	teqvs	sp, r8, ror r4
 8017af8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017afc:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8017b00:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8017b04:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8017b08:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017b0c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017b10:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017b14:	3b22223d 	blcc	88a0410 <__exidx_end+0x886754>
 8017b18:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8017b1c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8017b20:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8017b24:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8017b28:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017b2c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8017b30:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8017b34:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8017b38:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017b3c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017b40:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8017b44:	0a7b2029 	beq	9edfbf0 <__exidx_end+0x1ec5f34>
 8017b48:	61760909 	cmnvs	r6, r9, lsl #18
 8017b4c:	61762072 	cmnvs	r6, r2, ror r0
 8017b50:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8017b54:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8017b58:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017b5c:	6b5b5d6c 	blvs	96ef114 <__exidx_end+0x16d5458>
 8017b60:	3b5d7965 	blcc	97760fc <__exidx_end+0x175c440>
 8017b64:	2009090a 	andcs	r0, r9, sl, lsl #18
 8017b68:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017b6c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8017b70:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8017b74:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017b78:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017b7c:	2f3c222b 	svccs	0x003c222b
 8017b80:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8017b84:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017b88:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017b8c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8017b90:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8017b94:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8017b9c <index_js+0x4bc>
 8017b98:	3b223e72 	blcc	88a7568 <__exidx_end+0x88d8ac>
 8017b9c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8017ba0:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8017ba4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8017ba8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8017bac:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8017bb0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8017bb4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8017bb8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8017bbc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8017bc0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8017bc4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8017bc8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017bcc:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8017bd0:	0a3b6c6d 	beq	8ef2d8c <__exidx_end+0xed90d0>
 8017bd4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8017bd8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017bdc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8017be0:	3b292874 	blcc	8a61db8 <__exidx_end+0xa480fc>
 8017be4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8017be8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8017bec:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017bf0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017bf4:	0a3b2928 	beq	8ee209c <__exidx_end+0xec83e0>
 8017bf8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017bfc:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8017c00:	6f697372 	svcvs	0x00697372
 8017c04:	3b29286e 	blcc	8a61dc4 <__exidx_end+0xa48108>
 8017c08:	7468000a 	strbtvc	r0, [r8], #-10
 8017c0c:	3a737074 	bcc	9cf3de4 <__exidx_end+0x1cda128>
 8017c10:	64672f2f 	strbtvs	r2, [r7], #-3887	; 0xfffff0d1
 8017c14:	642d3233 	strtvs	r3, [sp], #-563	; 0xfffffdcd
 8017c18:	6f2e786d 	svcvs	0x002e786d
 8017c1c:	44006772 	strmi	r6, [r0], #-1906	; 0xfffff88e
 8017c20:	44205044 	strtmi	r5, [r0], #-68	; 0xffffffbc
 8017c24:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017c28:	003a7961 	eorseq	r7, sl, r1, ror #18
 8017c2c:	756f4320 	strbvc	r4, [pc, #-800]!	; 8017914 <index_js+0x234>
 8017c30:	2020746e 	eorcs	r7, r0, lr, ror #8
 8017c34:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017c38:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017c3c:	3a202020 	bcc	881fcc4 <__exidx_end+0x806008>
 8017c40:	0a752520 	beq	9d610c8 <__exidx_end+0x1d4740c>
 8017c44:	68432000 	stmdavs	r3, {sp}^
 8017c48:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
 8017c4c:	7020736c 	eorvc	r7, r0, ip, ror #6
 8017c50:	70207265 	eorvc	r7, r0, r5, ror #4
 8017c54:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8017c58:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8017c5c:	4120000a 			; <UNDEFINED> instruction: 0x4120000a
 8017c60:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 8017c64:	6f702065 	svcvs	0x00702065
 8017c68:	20737472 	rsbscs	r7, r3, r2, ror r4
 8017c6c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017c70:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017c74:	 	blvc	801a650 <__exidx_end+0x994>

08017c77 <json::CONFIG_REPLY>:
 8017c77:	6f63227b 	svcvs	0x0063227b
 8017c7b:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017c7f:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8017c83:	3a227069 	bcc	88b3e2f <__exidx_end+0x89a173>
 8017c87:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 8017c8b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017c8f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017c93:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8017c97:	223a226d 	eorscs	r2, sl, #-805306362	; 0xd0000006
 8017c9b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017c9f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017ca3:	2264252e 	rsbcs	r2, r4, #192937984	; 0xb800000
 8017ca7:	7767222c 	strbvc	r2, [r7, -ip, lsr #4]!
 8017cab:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017caf:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017cb3:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017cb7:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8017cbb:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 8017cbf:	3a227374 	bcc	88b4a97 <__exidx_end+0x89addb>
 8017cc3:	70227b5b 	eorvc	r7, r2, fp, asr fp
 8017cc7:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017ccb:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8017ccf:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017cd3:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017cd7:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017cdb:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017cdf:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017ce3:	3a227373 	bcc	88b4ab7 <__exidx_end+0x89adfb>
 8017ce7:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017ceb:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017cef:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017cf3:	2231223a 	eorscs	r2, r1, #-1610612733	; 0xa0000003
 8017cf7:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017cfb:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017cff:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017d03:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017d07:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017d0b:	3a227373 	bcc	88b4adf <__exidx_end+0x89ae23>
 8017d0f:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017d13:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017d17:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017d1b:	2232223a 	eorscs	r2, r2, #-1610612733	; 0xa0000003
 8017d1f:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017d23:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017d27:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017d2b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017d2f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017d33:	3a227373 	bcc	88b4b07 <__exidx_end+0x89ae4b>
 8017d37:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017d3b:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017d3f:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017d43:	2233223a 	eorscs	r2, r3, #-1610612733	; 0xa0000003
 8017d47:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017d4b:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017d4f:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017d53:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017d57:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017d5b:	3a227373 	bcc	88b4b2f <__exidx_end+0x89ae73>
 8017d5f:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017d63:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017d67:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017d6b:	2234223a 	eorscs	r2, r4, #-1610612733	; 0xa0000003
 8017d6f:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017d73:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017d77:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017d7b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017d7f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017d83:	3a227373 	bcc	88b4b57 <__exidx_end+0x89ae9b>
 8017d87:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017d8b:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017d8f:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017d93:	2235223a 	eorscs	r2, r5, #-1610612733	; 0xa0000003
 8017d97:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017d9b:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017d9f:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017da3:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017da7:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017dab:	3a227373 	bcc	88b4b7f <__exidx_end+0x89aec3>
 8017daf:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017db3:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017db7:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017dbb:	2236223a 	eorscs	r2, r6, #-1610612733	; 0xa0000003
 8017dbf:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017dc3:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017dc7:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017dcb:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017dcf:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017dd3:	3a227373 	bcc	88b4ba7 <__exidx_end+0x89aeeb>
 8017dd7:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017ddb:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017ddf:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017de3:	2237223a 	eorscs	r2, r7, #-1610612733	; 0xa0000003
 8017de7:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017deb:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017def:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017df3:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017df7:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017dfb:	3a227373 	bcc	88b4bcf <__exidx_end+0x89af13>
 8017dff:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017e03:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017e07:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017e0b:	2238223a 	eorscs	r2, r8, #-1610612733	; 0xa0000003
 8017e0f:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017e13:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017e17:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017e1b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017e1f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017e23:	3a227373 	bcc	88b4bf7 <__exidx_end+0x89af3b>
 8017e27:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017e2b:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017e2f:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017e33:	2239223a 	eorscs	r2, r9, #-1610612733	; 0xa0000003
 8017e37:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017e3b:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017e3f:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017e43:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017e47:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017e4b:	3a227373 	bcc	88b4c1f <__exidx_end+0x89af63>
 8017e4f:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017e53:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017e57:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017e5b:	3031223a 	eorscc	r2, r1, sl, lsr r2
 8017e5f:	74222c22 	strtvc	r2, [r2], #-3106	; 0xfffff3de
 8017e63:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8017e67:	222c2230 	eorcs	r2, ip, #48, 4
 8017e6b:	223a226c 	eorscs	r2, sl, #108, 4	; 0xc0000006
 8017e6f:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8017e73:	22737322 	rsbscs	r7, r3, #-2013265920	; 0x88000000
 8017e77:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8017e7b:	227b2c7d 	rsbscs	r2, fp, #32000	; 0x7d00
 8017e7f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017e83:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 8017e87:	222c2231 	eorcs	r2, ip, #268435459	; 0x10000003
 8017e8b:	3a227374 	bcc	88b4c63 <__exidx_end+0x89afa7>
 8017e8f:	2c223022 	stccs	0, cr3, [r2], #-136	; 0xffffff78
 8017e93:	3a226c22 	bcc	88b2f23 <__exidx_end+0x899267>
 8017e97:	22642522 	rsbcs	r2, r4, #142606336	; 0x8800000
 8017e9b:	7373222c 	cmnvc	r3, #44, 4	; 0xc0000002
 8017e9f:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017ea3:	7b2c7d22 	blvc	8b37333 <__exidx_end+0xb1d677>
 8017ea7:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 8017eab:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8017eaf:	2c223231 	sfmcs	f3, 4, [r2], #-196	; 0xffffff3c
 8017eb3:	22737422 	rsbscs	r7, r3, #570425344	; 0x22000000
 8017eb7:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8017ebb:	226c222c 	rsbcs	r2, ip, #44, 4	; 0xc0000002
 8017ebf:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8017ec3:	73222c22 			; <UNDEFINED> instruction: 0x73222c22
 8017ec7:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8017ecb:	2c7d2230 	lfmcs	f2, 2, [sp], #-192	; 0xffffff40
 8017ecf:	6f70227b 	svcvs	0x0070227b
 8017ed3:	3a227472 	bcc	88b50a3 <__exidx_end+0x89b3e7>
 8017ed7:	22333122 	eorscs	r3, r3, #-2147483640	; 0x80000008
 8017edb:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017edf:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017ee3:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017ee7:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017eeb:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017eef:	3a227373 	bcc	88b4cc3 <__exidx_end+0x89b007>
 8017ef3:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017ef7:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8017efb:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8017eff:	3431223a 	ldrtcc	r2, [r1], #-570	; 0xfffffdc6
 8017f03:	74222c22 	strtvc	r2, [r2], #-3106	; 0xfffff3de
 8017f07:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8017f0b:	222c2230 	eorcs	r2, ip, #48, 4
 8017f0f:	223a226c 	eorscs	r2, sl, #108, 4	; 0xc0000006
 8017f13:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8017f17:	22737322 	rsbscs	r7, r3, #-2013265920	; 0x88000000
 8017f1b:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8017f1f:	227b2c7d 	rsbscs	r2, fp, #32000	; 0x7d00
 8017f23:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017f27:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 8017f2b:	222c2235 	eorcs	r2, ip, #1342177283	; 0x50000003
 8017f2f:	3a227374 	bcc	88b4d07 <__exidx_end+0x89b04b>
 8017f33:	2c223022 	stccs	0, cr3, [r2], #-136	; 0xffffff78
 8017f37:	3a226c22 	bcc	88b2fc7 <__exidx_end+0x89930b>
 8017f3b:	22642522 	rsbcs	r2, r4, #142606336	; 0x8800000
 8017f3f:	7373222c 	cmnvc	r3, #44, 4	; 0xc0000002
 8017f43:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017f47:	7b2c7d22 	blvc	8b373d7 <__exidx_end+0xb1d71b>
 8017f4b:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 8017f4f:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8017f53:	2c223631 	stccs	6, cr3, [r2], #-196	; 0xffffff3c
 8017f57:	22737422 	rsbscs	r7, r3, #570425344	; 0x22000000
 8017f5b:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8017f5f:	226c222c 	rsbcs	r2, ip, #44, 4	; 0xc0000002
 8017f63:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8017f67:	73222c22 			; <UNDEFINED> instruction: 0x73222c22
 8017f6b:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8017f6f:	2c7d2230 	lfmcs	f2, 2, [sp], #-192	; 0xffffff40
 8017f73:	6f70227b 	svcvs	0x0070227b
 8017f77:	3a227472 	bcc	88b5147 <__exidx_end+0x89b48b>
 8017f7b:	22373122 	eorscs	r3, r7, #-2147483640	; 0x80000008
 8017f7f:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8017f83:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8017f87:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8017f8b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017f8f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8017f93:	3a227373 	bcc	88b4d67 <__exidx_end+0x89b0ab>
 8017f97:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8017f9b:	007d7d5d 	rsbseq	r7, sp, sp, asr sp

08017f9f <json::DISCOVER_REPLY>:
 8017f9f:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 8017fa3:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 8017fa7:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8017fab:	226e616d 	rsbcs	r6, lr, #1073741851	; 0x4000001b
 8017faf:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 8017fb3:	6d222c22 	stcvs	12, cr2, [r2, #-136]!	; 0xffffff78
 8017fb7:	3a22646f 	bcc	88b117b <__exidx_end+0x8974bf>
 8017fbb:	78695022 	stmdavc	r9!, {r1, r5, ip, lr}^
 8017fbf:	2c226c65 	stccs	12, cr6, [r2], #-404	; 0xfffffe6c
 8017fc3:	72657622 	rsbvc	r7, r5, #35651584	; 0x2200000
 8017fc7:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 8017fcb:	2c22302e 	stccs	0, cr3, [r2], #-184	; 0xffffff48
 8017fcf:	63616d22 	cmnvs	r1, #2176	; 0x880
 8017fd3:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017fd7:	3a78322e 	bcc	9e24897 <__exidx_end+0x1e0abdb>
 8017fdb:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017fdf:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017fe3:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8017fe7:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017feb:	3a78322e 	bcc	9e248ab <__exidx_end+0x1e0abef>
 8017fef:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017ff3:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

08017ff7 <json::START>:
 8017ff7:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 8017ffb:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 8017fff:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8018003:	61647075 	smcvs	18181	; 0x4705
 8018007:	3a226574 	bcc	88b15df <__exidx_end+0x897923>
 801800b:	61686322 	cmnvs	r8, r2, lsr #6
 801800f:	2265676e 	rsbcs	r6, r5, #28835840	; 0x1b80000
 8018013:	7473222c 	ldrbtvc	r2, [r3], #-556	; 0xfffffdd4
 8018017:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801801b:	7075223a 	rsbsvc	r2, r5, sl, lsr r2
 801801f:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8018023:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8018027:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 801802b:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 801802f:	00333331 	eorseq	r3, r3, r1, lsr r3
 8018033:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8018037:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 801803b:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 801803f:	00343331 	eorseq	r3, r4, r1, lsr r3
 8018043:	50524c4c 	subspl	r4, r2, ip, asr #24
 8018047:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 801804b:	20656369 	rsbcs	r6, r5, r9, ror #6
 801804f:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018053:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8018057:	6f697461 	svcvs	0x00697461
 801805b:	20000a6e 	andcs	r0, r0, lr, ror #20
 801805f:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 8018063:	50445520 	subpl	r5, r4, r0, lsr #10
 8018067:	20202020 	eorcs	r2, r0, r0, lsr #32
 801806b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801806f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018073:	3a202020 	bcc	88200fb <__exidx_end+0x80643f>
 8018077:	0a642520 	beq	99214ff <__exidx_end+0x1907843>
 801807b:	754d2000 	strbvc	r2, [sp, #-0]
 801807f:	6369746c 	cmnvs	r9, #108, 8	; 0x6c000000
 8018083:	20747361 	rsbscs	r7, r4, r1, ror #6
 8018087:	6e696f6a 	cdpvs	15, 6, cr6, cr9, cr10, {3}
 801808b:	71655220 	cmnvc	r5, r0, lsr #4
 801808f:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8018093:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018097:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801809b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801809f:	000a6425 	andeq	r6, sl, r5, lsr #8
 80180a3:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 80180a7:	61636974 	smcvs	13972	; 0x3694
 80180ab:	52207473 	eorpl	r7, r0, #1929379840	; 0x73000000
 80180af:	6f707365 	svcvs	0x00707365
 80180b3:	2065736e 	rsbcs	r7, r5, lr, ror #6
 80180b7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80180bb:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80180bf:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80180c3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80180c7:	00000a64 	andeq	r0, r0, r4, ror #20
	...

080180cc <vtable for LLRPDevice>:
	...
 80180d4:	0800c145 	stmdaeq	r0, {r0, r2, r6, r8, lr, pc}
 80180d8:	0800c14f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, lr, pc}
 80180dc:	0800c147 	stmdaeq	r0, {r0, r1, r2, r6, r8, lr, pc}
 80180e0:	0800c149 	stmdaeq	r0, {r0, r3, r6, r8, lr, pc}
 80180e4:	0800c14b 	stmdaeq	r0, {r0, r1, r3, r6, r8, lr, pc}

080180e8 <RDMNetConst::MSG_CONFIG>:
 80180e8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80180ec:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80180f0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80180f4:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80180f8:	 	andpl	r7, r0, #1694498816	; 0x65000000

080180fb <RDMNetConst::MSG_STARTED>:
 80180fb:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80180ff:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8018103:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8018107:	 	movwpl	r6, #1125	; 0x465

0801810a <RDMNetConst::MSG_START>:
 801810a:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801810e:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8018112:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8018116:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801811a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801811e:	000a7465 	andeq	r7, sl, r5, ror #8
 8018122:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8018126:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801812a:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 801812e:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8018132:	6f707365 	svcvs	0x00707365
 8018136:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 801813a:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801813e:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8018142:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8018146:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801814a:	6f725020 	svcvs	0x00725020
 801814e:	6f636f74 	svcvs	0x00636f74
 8018152:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8018156:	6f697372 	svcvs	0x00697372
 801815a:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 801815e:	0a64252e 	beq	992161e <__exidx_end+0x1907962>
 8018162:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8018166:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 801816a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801816e:	20202073 	eorcs	r2, r0, r3, ror r0
 8018172:	3a202020 	bcc	88201fa <__exidx_end+0x80653e>
 8018176:	0a642520 	beq	99215fe <__exidx_end+0x1907942>
 801817a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801817e:	6f462058 	svcvs	0x00462058
 8018182:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8018186:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801818a:	3a202020 	bcc	8820212 <__exidx_end+0x806556>
 801818e:	0a642520 	beq	9921616 <__exidx_end+0x190795a>
 8018192:	65502000 	ldrbvs	r2, [r0, #-0]
 8018196:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801819a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801819e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 80181a2:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 80181a6:	5b206425 	blpl	8831242 <__exidx_end+0x817586>
 80181aa:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80181ae:	20000a5d 	andcs	r0, r0, sp, asr sl
 80181b2:	20627553 	rsbcs	r7, r2, r3, asr r5
 80181b6:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80181ba:	20736563 	rsbscs	r6, r3, r3, ror #10
 80181be:	20202020 	eorcs	r2, r0, r0, lsr #32
 80181c2:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80181c6:	20000a64 	andcs	r0, r0, r4, ror #20
 80181ca:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 80181ce:	2073726f 	rsbscs	r7, r3, pc, ror #4
 80181d2:	20202020 	eorcs	r2, r0, r0, lsr #32
 80181d6:	20202020 	eorcs	r2, r0, r0, lsr #32
 80181da:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80181de:	00000a64 	andeq	r0, r0, r4, ror #20
	...

080181e4 <vtable for RDMDeviceResponder>:
	...
 80181ec:	0800c645 	stmdaeq	r0, {r0, r2, r6, r9, sl, lr, pc}
 80181f0:	0800c665 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, lr, pc}
 80181f4:	0800c63f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r9, sl, lr, pc}
 80181f8:	0800c641 	stmdaeq	r0, {r0, r6, r9, sl, lr, pc}

080181fc <UID_ALL>:
 80181fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8018200:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08018204 <RDMHandler::PID_DEFINITIONS>:
 8018204:	00000060 	andeq	r0, r0, r0, rrx
 8018208:	0800cb21 	stmdaeq	r0, {r0, r5, r8, r9, fp, lr, pc}
	...
 8018218:	01010000 	mrseq	r0, (UNDEF: 1)
 801821c:	00000080 	andeq	r0, r0, r0, lsl #1
 8018220:	0800cc09 	stmdaeq	r0, {r0, r3, sl, fp, lr, pc}
	...
 8018230:	01010100 	mrseq	r0, (UNDEF: 17)
 8018234:	00000081 	andeq	r0, r0, r1, lsl #1
 8018238:	0800cc25 	stmdaeq	r0, {r0, r2, r5, sl, fp, lr, pc}
	...
 8018248:	01010100 	mrseq	r0, (UNDEF: 17)
 801824c:	00000082 	andeq	r0, r0, r2, lsl #1
 8018250:	0800cc45 	stmdaeq	r0, {r0, r2, r6, sl, fp, lr, pc}
 8018254:	00000000 	andeq	r0, r0, r0
 8018258:	0800cd95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp, lr, pc}
 801825c:	00000000 	andeq	r0, r0, r0
 8018260:	01010100 	mrseq	r0, (UNDEF: 17)
 8018264:	00000090 	muleq	r0, r0, r0
 8018268:	0800cb89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, lr, pc}
 801826c:	00000000 	andeq	r0, r0, r0
 8018270:	0800cd61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, lr, pc}
 8018274:	00000000 	andeq	r0, r0, r0
 8018278:	01010100 	mrseq	r0, (UNDEF: 17)
 801827c:	00001000 	andeq	r1, r0, r0
 8018280:	0800cc81 	stmdaeq	r0, {r0, r7, sl, fp, lr, pc}
 8018284:	00000000 	andeq	r0, r0, r0
 8018288:	0800cce5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, fp, lr, pc}
 801828c:	00000000 	andeq	r0, r0, r0
 8018290:	01010000 	mrseq	r0, (UNDEF: 1)
 8018294:	00001001 	andeq	r1, r0, r1
	...
 80182a0:	0800cc9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, lr, pc}
 80182a4:	00000000 	andeq	r0, r0, r0
 80182a8:	01010100 	mrseq	r0, (UNDEF: 17)
 80182ac:	00000700 	andeq	r0, r0, r0, lsl #14
 80182b0:	0800d08d 	stmdaeq	r0, {r0, r2, r3, r7, ip, lr, pc}
	...
 80182c0:	01000000 	mrseq	r0, (UNDEF: 0)
 80182c4:	00000701 	andeq	r0, r0, r1, lsl #14
 80182c8:	0800d0b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, ip, lr, pc}
	...
 80182d8:	01000004 	tsteq	r0, r4
 80182dc:	00000702 	andeq	r0, r0, r2, lsl #14
 80182e0:	0800d101 	stmdaeq	r0, {r0, r8, ip, lr, pc}
	...
 80182f0:	01000004 	tsteq	r0, r4
 80182f4:	00000703 	andeq	r0, r0, r3, lsl #14
 80182f8:	0800d131 	stmdaeq	r0, {r0, r4, r5, r8, ip, lr, pc}
 80182fc:	00000000 	andeq	r0, r0, r0
 8018300:	0800d15d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, ip, lr, pc}
 8018304:	00000000 	andeq	r0, r0, r0
 8018308:	01000004 	tsteq	r0, r4
 801830c:	00000704 	andeq	r0, r0, r4, lsl #14
 8018310:	0800d1c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, ip, lr, pc}
 8018314:	00000000 	andeq	r0, r0, r0
 8018318:	0800d1f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, lr, pc}
 801831c:	00000000 	andeq	r0, r0, r0
 8018320:	01000004 	tsteq	r0, r4
 8018324:	00000705 	andeq	r0, r0, r5, lsl #14
 8018328:	0800d26d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, ip, lr, pc}
	...
 8018338:	01000004 	tsteq	r0, r4
 801833c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8018348:	0800d241 	stmdaeq	r0, {r0, r6, r9, ip, lr, pc}
 801834c:	00000000 	andeq	r0, r0, r0
 8018350:	01000004 	tsteq	r0, r4
 8018354:	00000706 	andeq	r0, r0, r6, lsl #14
 8018358:	0800d2b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, ip, lr, pc}
 801835c:	00000000 	andeq	r0, r0, r0
 8018360:	0800d2f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, ip, lr, pc}
 8018364:	00000000 	andeq	r0, r0, r0
 8018368:	01000004 	tsteq	r0, r4
 801836c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8018378:	0800d345 	stmdaeq	r0, {r0, r2, r6, r8, r9, ip, lr, pc}
 801837c:	00000000 	andeq	r0, r0, r0
 8018380:	01000004 	tsteq	r0, r4
 8018384:	0000070b 	andeq	r0, r0, fp, lsl #14
 8018388:	0800d1a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, ip, lr, pc}
	...
 8018398:	01000001 	tsteq	r0, r1
 801839c:	0000070a 	andeq	r0, r0, sl, lsl #14
 80183a0:	0800d36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, ip, lr, pc}
 80183a4:	00000000 	andeq	r0, r0, r0
 80183a8:	0800d3a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip, lr, pc}
 80183ac:	00000000 	andeq	r0, r0, r0
 80183b0:	01000004 	tsteq	r0, r4
 80183b4:	0000070c 	andeq	r0, r0, ip, lsl #14
 80183b8:	0800d3ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, lr, pc}
 80183bc:	00000000 	andeq	r0, r0, r0
 80183c0:	0800d3dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
 80183c4:	00000000 	andeq	r0, r0, r0
 80183c8:	01000000 	mrseq	r0, (UNDEF: 0)
 80183cc:	0000070d 	andeq	r0, r0, sp, lsl #14
 80183d0:	0800d411 	stmdaeq	r0, {r0, r4, sl, ip, lr, pc}
 80183d4:	00000000 	andeq	r0, r0, r0
 80183d8:	0800d441 	stmdaeq	r0, {r0, r6, sl, ip, lr, pc}
 80183dc:	00000000 	andeq	r0, r0, r0
 80183e0:	01000000 	mrseq	r0, (UNDEF: 0)
 80183e4:	204d4452 	subcs	r4, sp, r2, asr r4
 80183e8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80183ec:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80183f0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80183f4:	61727567 	cmnvs	r2, r7, ror #10
 80183f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80183fc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8018400:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8018404:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8018408:	20726572 	rsbscs	r6, r2, r2, ror r5
 801840c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8018410:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018414:	0a732a2e 	beq	9ce2cd4 <__exidx_end+0x1cc9018>
 8018418:	614d2000 	mrsvs	r2, (UNDEF: 77)
 801841c:	6166756e 	cmnvs	r6, lr, ror #10
 8018420:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 8018424:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 8018428:	20202044 	eorcs	r2, r0, r4, asr #32
 801842c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8018430:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8018434:	000a5832 	andeq	r5, sl, r2, lsr r8
 8018438:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 801843c:	206c6169 	rsbcs	r6, ip, r9, ror #2
 8018440:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 8018444:	20207265 	eorcs	r7, r0, r5, ror #4
 8018448:	3a202020 	bcc	88204d0 <__exidx_end+0x806814>
 801844c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8018450:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8018454:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8018458:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 801845c:	20000a58 	andcs	r0, r0, r8, asr sl
 8018460:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8018468 <RDMHandler::PID_DEFINITIONS+0x264>
 8018464:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8018468:	20206c65 	eorcs	r6, r0, r5, ror #24
 801846c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018470:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8018474:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8018478:	5020000a 	eorpl	r0, r0, sl
 801847c:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8018480:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8018484:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8018488:	2079726f 	rsbscs	r7, r9, pc, ror #4
 801848c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018490:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8018494:	0a58322e 	beq	9624d54 <__exidx_end+0x160b098>
 8018498:	72502000 	subsvc	r2, r0, #0
 801849c:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 80184a0:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 80184a4:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 80184a8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80184ac:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80184b0:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80184b4:	000a5832 	andeq	r5, sl, r2, lsr r8

080184b8 <DEVICE_LABEL>:
 80184b8:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80184bc:	30353446 	eorscc	r3, r5, r6, asr #8
 80184c0:	52204956 	eorpl	r4, r0, #1409024	; 0x158000
 80184c4:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80184c8:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80184cc:	 	subseq	r0, r0, r5, rrx

080184ce <RDMConst::MANUFACTURER_ID>:
 80184ce:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080184d0 <RDMConst::MANUFACTURER_NAME>:
 80184d0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80184d4:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80184d8:	6f2e7777 	svcvs	0x002e7777
 80184dc:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80184e0:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80184e4:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80184e8:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80184ec:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80184f0:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80184f4:	30252d78 	eorcc	r2, r5, r8, ror sp
 80184f8:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 80184fc:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8018500:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8018504:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018508:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801850c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018510:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018514:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018518:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801851c:	584d4400 	stmdapl	sp, {sl, lr}^
 8018520:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 8018524:	20000a64 	andcs	r0, r0, r4, ror #20
 8018528:	61657242 	cmnvs	r5, r2, asr #4
 801852c:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 8018530:	2020656d 	eorcs	r6, r0, sp, ror #10
 8018534:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018538:	20000a75 	andcs	r0, r0, r5, ror sl
 801853c:	2042414d 	subcs	r4, r2, sp, asr #2
 8018540:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8018544:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018548:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801854c:	20000a75 	andcs	r0, r0, r5, ror sl
 8018550:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 8018554:	20687365 	rsbcs	r7, r8, r5, ror #6
 8018558:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 801855c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018560:	20000a75 	andcs	r0, r0, r5, ror sl
 8018564:	746f6c53 	strbtvc	r6, [pc], #-3155	; 801856c <RDMConst::MANUFACTURER_NAME+0x9c>
 8018568:	20202073 	eorcs	r2, r0, r3, ror r0
 801856c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018570:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018574:	00000a75 	andeq	r0, r0, r5, ror sl

08018578 <vtable for DmxSend>:
	...
 8018580:	0800d649 	stmdaeq	r0, {r0, r3, r6, r9, sl, ip, lr, pc}
 8018584:	0800d735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, ip, lr, pc}
 8018588:	0800d64d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, ip, lr, pc}
 801858c:	0800d67d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, ip, lr, pc}
 8018590:	0800d6b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, ip, lr, pc}
 8018594:	0800d6c5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, ip, lr, pc}
 8018598:	0800d6d1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, ip, lr, pc}
 801859c:	0800d6dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, ip, lr, pc}
 80185a0:	08013937 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, fp, ip, sp}
 80185a4:	0801392d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip, sp}
 80185a8:	08013931 	stmdaeq	r1, {r0, r4, r5, r8, fp, ip, sp}
 80185ac:	0801393b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip, sp}

080185b0 <DmxParamsConst::BREAK_TIME>:
 80185b0:	61657262 	cmnvs	r5, r2, ror #4
 80185b4:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80185b8:	 	movwvc	r6, #1389	; 0x56d

080185bb <DmxParamsConst::SLOTS_COUNT>:
 80185bb:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80185c3 <DmxParamsConst::SLOTS_COUNT+0x8>
 80185bf:	6f635f73 	svcvs	0x00635f73
 80185c3:	00746e75 	rsbseq	r6, r4, r5, ror lr

080185c7 <DmxParamsConst::REFRESH_RATE>:
 80185c7:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80185cb:	5f687365 	svcpl	0x00687365
 80185cf:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080185d4 <DmxParamsConst::MAB_TIME>:
 80185d4:	5f62616d 	svcpl	0x0062616d
 80185d8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080185dd <DmxParamsConst::FILE_NAME>:
 80185dd:	61726170 	cmnvs	r2, r0, ror r1
 80185e1:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80185e5:	 	andeq	r7, r0, r8, ror r4

080185e8 <s_DirGpio>:
 80185e8:	40020c00 	andmi	r0, r2, r0, lsl #24
 80185ec:	00000001 	andeq	r0, r0, r1
 80185f0:	40020c00 	andmi	r0, r2, r0, lsl #24
 80185f4:	00000002 	andeq	r0, r0, r2

080185f8 <vtable for WS28xxDmxMulti>:
	...
 8018600:	0800e1d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sp, lr, pc}
 8018604:	0800e1f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp, lr, pc}
 8018608:	0800e1b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, sp, lr, pc}
 801860c:	0800e367 	stmdaeq	r0, {r0, r1, r2, r5, r6, r8, r9, sp, lr, pc}
 8018610:	0800e22f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r9, sp, lr, pc}
 8018614:	0800e207 	stmdaeq	r0, {r0, r1, r2, r9, sp, lr, pc}
 8018618:	0800e349 	stmdaeq	r0, {r0, r3, r6, r8, r9, sp, lr, pc}
 801861c:	0800e361 	stmdaeq	r0, {r0, r5, r6, r8, r9, sp, lr, pc}
 8018620:	0800e1a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sp, lr, pc}
 8018624:	0800e1a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sp, lr, pc}
 8018628:	0800e1af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r8, sp, lr, pc}
 801862c:	0801393b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip, sp}
 8018630:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018634:	2a2e253a 	bcs	8ba1b24 <__exidx_end+0xb87e68>
 8018638:	23002c66 	movwcs	r2, #3174	; 0xc66
 801863c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8018640:	0a662a2e 	beq	99a2f00 <__exidx_end+0x1989244>
 8018644:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 8018648:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801864c:	4f003e74 	svcmi	0x00003e74
 8018650:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8018654:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8018658:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801865c:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8018660:	4f007465 	svcmi	0x00007465
 8018664:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8018668:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801866c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8018670:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8018674:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8018678:	6f724700 	svcvs	0x00724700
 801867c:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8018680:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8018684:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8018688:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 801868c:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8018690:	00737069 	rsbseq	r7, r3, r9, rrx
 8018694:	31415041 	cmpcc	r1, r1, asr #32
 8018698:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 801869c:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 80186a0:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 80186a4:	70207473 	eorvc	r7, r0, r3, ror r4
 80186a8:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 80186ac:	50006e72 	andpl	r6, r0, r2, ror lr
 80186b0:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80186b4:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80186b8:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80186bc:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80186c0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80186c4:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80186c8:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 80186cc:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 80186d0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80186d4:	20000a64 	andcs	r0, r0, r4, ror #20
 80186d8:	756f7247 	strbvc	r7, [pc, #-583]!	; 8018499 <RDMHandler::PID_DEFINITIONS+0x295>
 80186dc:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80186e0:	756f6320 	strbvc	r6, [pc, #-800]!	; 80183c8 <RDMHandler::PID_DEFINITIONS+0x1c4>
 80186e4:	3a20746e 	bcc	88358a4 <__exidx_end+0x81bbe8>
 80186e8:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80186ec:	6f72475b 	svcvs	0x0072475b
 80186f0:	20737075 	rsbscs	r7, r3, r5, ror r0
 80186f4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80186f8:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 80186fc:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 8018700:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 8018704:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8018708:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801870c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8018710:	6f697461 	svcvs	0x00697461
 8018714:	20000a6e 	andcs	r0, r0, lr, ror #20
 8018718:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801871c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018720:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8018724:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8018728:	20000a5d 	andcs	r0, r0, sp, asr sl
 801872c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8018730:	20202074 	eorcs	r2, r0, r4, ror r0
 8018734:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018738:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801873c:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8018740:	3a20676e 	bcc	8832500 <__exidx_end+0x818844>
 8018744:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8018748:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801874c:	5420000a 	strtpl	r0, [r0], #-10
 8018750:	20204830 	eorcs	r4, r0, r0, lsr r8
 8018754:	3a202020 	bcc	88207dc <__exidx_end+0x806b20>
 8018758:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801875c:	305b2066 	subscc	r2, fp, r6, rrx
 8018760:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8018764:	5420000a 	strtpl	r0, [r0], #-10
 8018768:	20204831 	eorcs	r4, r0, r1, lsr r8
 801876c:	3a202020 	bcc	88207f4 <__exidx_end+0x806b38>
 8018770:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8018774:	305b2066 	subscc	r2, fp, r6, rrx
 8018778:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 801877c:	4720000a 	strmi	r0, [r0, -sl]!
 8018780:	61626f6c 	cmnvs	r2, ip, ror #30
 8018784:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 8018788:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 801878c:	3a737365 	bcc	9cf5528 <__exidx_end+0x1cdb86c>
 8018790:	0a752520 	beq	9d61c18 <__exidx_end+0x1d47f5c>
 8018794:	61472000 	mrsvs	r2, (UNDEF: 71)
 8018798:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 801879c:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 80187a0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80187a4:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80187a8:	20000a73 	andcs	r0, r0, r3, ror sl
 80187ac:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80187b0:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 80187b4:	7a482075 	bvc	9220990 <__exidx_end+0x1206cd4>
 80187b8:	0000000a 	andeq	r0, r0, sl

080187bc <CSWTCH.9>:
 80187bc:	080189d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, pc}
 80187c0:	08018ad0 	stmdaeq	r1, {r4, r6, r7, r9, fp, pc}
 80187c4:	08018bd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, fp, pc}
 80187c8:	08018cd0 	stmdaeq	r1, {r4, r6, r7, sl, fp, pc}
 80187cc:	08018dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, pc}

080187d0 <gamma10_0>:
 80187d0:	03020100 	movweq	r0, #8448	; 0x2100
 80187d4:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80187d8:	0b0a0908 	bleq	829ac00 <__exidx_end+0x280f44>
 80187dc:	0f0e0d0c 	svceq	0x000e0d0c
 80187e0:	13121110 	tstne	r2, #16, 2
 80187e4:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80187e8:	1b1a1918 	blne	869ec50 <__exidx_end+0x684f94>
 80187ec:	1f1e1d1c 	svcne	0x001e1d1c
 80187f0:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80187f4:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80187f8:	2b2a2928 	blcs	8aa2ca0 <__exidx_end+0xa88fe4>
 80187fc:	2f2e2d2c 	svccs	0x002e2d2c
 8018800:	33323130 	teqcc	r2, #48, 2
 8018804:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018808:	3b3a3938 	blcc	8ea6cf0 <__exidx_end+0xe8d034>
 801880c:	3f3e3d3c 	svccc	0x003e3d3c
 8018810:	43424140 	movtmi	r4, #8512	; 0x2140
 8018814:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018818:	4b4a4948 	blmi	92aad40 <__exidx_end+0x1291084>
 801881c:	4f4e4d4c 	svcmi	0x004e4d4c
 8018820:	53525150 	cmppl	r2, #80, 2
 8018824:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8018828:	5b5a5958 	blpl	96aed90 <__exidx_end+0x16950d4>
 801882c:	5f5e5d5c 	svcpl	0x005e5d5c
 8018830:	63626160 	cmnvs	r2, #96, 2
 8018834:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8018838:	6b6a6968 	blvs	9ab2de0 <__exidx_end+0x1a99124>
 801883c:	6f6e6d6c 	svcvs	0x006e6d6c
 8018840:	73727170 	cmnvc	r2, #112, 2
 8018844:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8018848:	7b7a7978 	blvc	9eb6e30 <__exidx_end+0x1e9d174>
 801884c:	7f7e7d7c 	svcvc	0x007e7d7c
 8018850:	83828180 	orrhi	r8, r2, #128, 2
 8018854:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8018858:	8b8a8988 	blhi	62bae80 <__stack_size+0x62b6e80>
 801885c:	8f8e8d8c 	svchi	0x008e8d8c
 8018860:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8018864:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8018868:	9b9a9998 	blls	66beed0 <__stack_size+0x66baed0>
 801886c:	9f9e9d9c 	svcls	0x009e9d9c
 8018870:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8018874:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8018878:	abaaa9a8 	blge	6ac2f20 <__stack_size+0x6abef20>
 801887c:	afaeadac 	svcge	0x00aeadac
 8018880:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8018884:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8018888:	bbbab9b8 	bllt	6ec6f70 <__stack_size+0x6ec2f70>
 801888c:	bfbebdbc 	svclt	0x00bebdbc
 8018890:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8018894:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8018898:	cbcac9c8 	blgt	72cafc0 <__stack_size+0x72c6fc0>
 801889c:	cfcecdcc 	svcgt	0x00cecdcc
 80188a0:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80188a4:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 80188a8:	dbdad9d8 	blle	76cf010 <__stack_size+0x76cb010>
 80188ac:	dfdedddc 	svcle	0x00dedddc
 80188b0:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 80188b4:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 80188b8:	ebeae9e8 	bl	7ad3060 <__stack_size+0x7acf060>
 80188bc:	efeeedec 	svc	0x00eeedec
 80188c0:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80188c4:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80188c8:	fbfaf9f8 	blx	7ed70b2 <__stack_size+0x7ed30b2>
 80188cc:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080188d0 <gamma20_0>:
	...
 80188dc:	01010101 	tsteq	r1, r1, lsl #2
 80188e0:	01010101 	tsteq	r1, r1, lsl #2
 80188e4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80188e8:	03030202 	movweq	r0, #12802	; 0x3202
 80188ec:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80188f0:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 80188f4:	06060505 	streq	r0, [r6], -r5, lsl #10
 80188f8:	07070706 	streq	r0, [r7, -r6, lsl #14]
 80188fc:	09080808 	stmdbeq	r8, {r3, fp}
 8018900:	0a0a0909 	beq	829ad2c <__exidx_end+0x281070>
 8018904:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018908:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801890c:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8018910:	12111110 	andsne	r1, r1, #16, 2
 8018914:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8018918:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801891c:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8018920:	1b1a1a19 	blne	869f18c <__exidx_end+0x6854d0>
 8018924:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8018928:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801892c:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8018930:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8018934:	2a292827 	bcs	8a629d8 <__exidx_end+0xa48d1c>
 8018938:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801893c:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8018940:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018944:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018948:	3b3a3938 	blcc	8ea6e30 <__exidx_end+0xe8d174>
 801894c:	3f3e3d3c 	svccc	0x003e3d3c
 8018950:	43424140 	movtmi	r4, #8512	; 0x2140
 8018954:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018958:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801895c:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8018960:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8018964:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8018968:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 801896c:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8018970:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8018974:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8018978:	7371706f 	cmnvc	r1, #111	; 0x6f
 801897c:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8018980:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8018984:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8018988:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 801898c:	8f8e8c8b 	svchi	0x008e8c8b
 8018990:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8018994:	9b9a9897 	blls	66bebf8 <__stack_size+0x66babf8>
 8018998:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 801899c:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 80189a0:	afadabaa 	svcge	0x00adabaa
 80189a4:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 80189a8:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 80189ac:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 80189b0:	cac8c7c5 	bgt	724a8cc <__stack_size+0x72468cc>
 80189b4:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 80189b8:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 80189bc:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 80189c0:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 80189c4:	efedebe9 	svc	0x00edebe9
 80189c8:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 80189cc:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

080189d0 <gamma21_0>:
	...
 80189dc:	01010000 	mrseq	r0, (UNDEF: 1)
 80189e0:	01010101 	tsteq	r1, r1, lsl #2
 80189e4:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 80189e8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80189ec:	03030302 	movweq	r0, #13058	; 0x3302
 80189f0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80189f4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 80189f8:	06060505 	streq	r0, [r6], -r5, lsl #10
 80189fc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018a00:	09080808 	stmdbeq	r8, {r3, fp}
 8018a04:	0a0a0909 	beq	829ae30 <__exidx_end+0x281174>
 8018a08:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018a0c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018a10:	0f0f0e0e 	svceq	0x000f0e0e
 8018a14:	11111010 	tstne	r1, r0, lsl r0
 8018a18:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8018a1c:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8018a20:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8018a24:	1b1a1919 	blne	869ee90 <__exidx_end+0x6851d4>
 8018a28:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8018a2c:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8018a30:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018a34:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8018a38:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8018a3c:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8018a40:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018a44:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8018a48:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018a4c:	3b3a3938 	blcc	8ea6f34 <__exidx_end+0xe8d278>
 8018a50:	3f3e3d3c 	svccc	0x003e3d3c
 8018a54:	43424140 	movtmi	r4, #8512	; 0x2140
 8018a58:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018a5c:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8018a60:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8018a64:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8018a68:	5a585756 	bpl	962e7c8 <__exidx_end+0x1614b0c>
 8018a6c:	5f5d5c5b 	svcpl	0x005d5c5b
 8018a70:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8018a74:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8018a78:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8018a7c:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8018a80:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8018a84:	7f7e7c7b 	svcvc	0x007e7c7b
 8018a88:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8018a8c:	8b898886 	blhi	627acac <__stack_size+0x6276cac>
 8018a90:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8018a94:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8018a98:	9e9c9b99 	vmovls.32	r9, d28[0]
 8018a9c:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8018aa0:	abaaa8a6 	blge	6ac2d40 <__stack_size+0x6abed40>
 8018aa4:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8018aa8:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8018aac:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8018ab0:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8018ab4:	cfcdcbca 	svcgt	0x00cdcbca
 8018ab8:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8018abc:	dfdddbd9 	svcle	0x00dddbd9
 8018ac0:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8018ac4:	eeeceae8 	vfms.f32	s29, s25, s17
 8018ac8:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8018acc:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08018ad0 <gamma22_0>:
	...
 8018adc:	01000000 	mrseq	r0, (UNDEF: 0)
 8018ae0:	01010101 	tsteq	r1, r1, lsl #2
 8018ae4:	01010101 	tsteq	r1, r1, lsl #2
 8018ae8:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8018aec:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018af0:	03030303 	movweq	r0, #13059	; 0x3303
 8018af4:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8018af8:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018afc:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018b00:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018b04:	09080808 	stmdbeq	r8, {r3, fp}
 8018b08:	0a0a0909 	beq	829af34 <__exidx_end+0x281278>
 8018b0c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018b10:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018b14:	0f0f0e0e 	svceq	0x000f0e0e
 8018b18:	11111010 	tstne	r1, r0, lsl r0
 8018b1c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018b20:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018b24:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018b28:	1a1a1919 	bne	869ef94 <__exidx_end+0x6852d8>
 8018b2c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018b30:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018b34:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018b38:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018b3c:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8018b40:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8018b44:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018b48:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8018b4c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018b50:	3b3a3938 	blcc	8ea7038 <__exidx_end+0xe8d37c>
 8018b54:	3f3e3d3c 	svccc	0x003e3d3c
 8018b58:	43424140 	movtmi	r4, #8512	; 0x2140
 8018b5c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018b60:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018b64:	514f4e4d 	cmppl	pc, sp, asr #28
 8018b68:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8018b6c:	5a595857 	bpl	966ecd0 <__exidx_end+0x1655014>
 8018b70:	5f5e5d5b 	svcpl	0x005e5d5b
 8018b74:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8018b78:	6a696766 	bvs	9a72918 <__exidx_end+0x1a58c5c>
 8018b7c:	6f6e6d6b 	svcvs	0x006e6d6b
 8018b80:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8018b84:	7b797877 	blvc	9e76d68 <__exidx_end+0x1e5d0ac>
 8018b88:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8018b8c:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8018b90:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8018b94:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8018b98:	9a999795 	bls	667e9f4 <__stack_size+0x667a9f4>
 8018b9c:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8018ba0:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8018ba4:	afadacaa 	svcge	0x00adacaa
 8018ba8:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8018bac:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8018bb0:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8018bb4:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8018bb8:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8018bbc:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8018bc0:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8018bc4:	eeeceae7 	vfms.f32	s29, s25, s15
 8018bc8:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8018bcc:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08018bd0 <gamma23_0>:
	...
 8018be0:	01010100 	mrseq	r0, (UNDEF: 17)
 8018be4:	01010101 	tsteq	r1, r1, lsl #2
 8018be8:	01010101 	tsteq	r1, r1, lsl #2
 8018bec:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018bf0:	03020202 	movweq	r0, #8706	; 0x2202
 8018bf4:	03030303 	movweq	r0, #13059	; 0x3303
 8018bf8:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8018bfc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018c00:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018c04:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8018c08:	09080808 	stmdbeq	r8, {r3, fp}
 8018c0c:	0a0a0a09 	beq	829b438 <__exidx_end+0x28177c>
 8018c10:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018c14:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018c18:	0f0f0e0e 	svceq	0x000f0e0e
 8018c1c:	11111010 	tstne	r1, r0, lsl r0
 8018c20:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018c24:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8018c28:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018c2c:	1a1a1918 	bne	869f094 <__exidx_end+0x6853d8>
 8018c30:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018c34:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018c38:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018c3c:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018c40:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8018c44:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8018c48:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018c4c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8018c50:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018c54:	3b3a3938 	blcc	8ea713c <__exidx_end+0xe8d480>
 8018c58:	3f3e3d3c 	svccc	0x003e3d3c
 8018c5c:	43424140 	movtmi	r4, #8512	; 0x2140
 8018c60:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8018c64:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018c68:	51504f4e 	cmppl	r0, lr, asr #30
 8018c6c:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8018c70:	5b5a5957 	blpl	96af1d4 <__exidx_end+0x1695518>
 8018c74:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8018c78:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8018c7c:	6b6a6867 	blvs	9ab2e20 <__exidx_end+0x1a99164>
 8018c80:	71706e6d 	cmnvc	r0, sp, ror #28
 8018c84:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8018c88:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8018c8c:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8018c90:	8a888685 	bhi	623a6ac <__stack_size+0x62366ac>
 8018c94:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8018c98:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8018c9c:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8018ca0:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8018ca4:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8018ca8:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8018cac:	bbb9b7b6 	bllt	6e86b8c <__stack_size+0x6e82b8c>
 8018cb0:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8018cb4:	cbc9c7c5 	blgt	728abd0 <__stack_size+0x7286bd0>
 8018cb8:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8018cbc:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8018cc0:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8018cc4:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8018cc8:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8018ccc:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08018cd0 <gamma24_0>:
	...
 8018ce0:	01000000 	mrseq	r0, (UNDEF: 0)
 8018ce4:	01010101 	tsteq	r1, r1, lsl #2
 8018ce8:	01010101 	tsteq	r1, r1, lsl #2
 8018cec:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8018cf0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018cf4:	03030202 	movweq	r0, #12802	; 0x3202
 8018cf8:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8018cfc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8018d00:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8018d04:	06060606 	streq	r0, [r6], -r6, lsl #12
 8018d08:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8018d0c:	09090808 	stmdbeq	r9, {r3, fp}
 8018d10:	0a0a0a09 	beq	829b53c <__exidx_end+0x281880>
 8018d14:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018d18:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018d1c:	0f0f0e0e 	svceq	0x000f0e0e
 8018d20:	11111010 	tstne	r1, r0, lsl r0
 8018d24:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018d28:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018d2c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018d30:	1a1a1918 	bne	869f198 <__exidx_end+0x6854dc>
 8018d34:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018d38:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018d3c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018d40:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018d44:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8018d48:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8018d4c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018d50:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018d54:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8018d58:	3b3a3938 	blcc	8ea7240 <__exidx_end+0xe8d584>
 8018d5c:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8018d60:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8018d64:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8018d68:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8018d6c:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8018d70:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8018d74:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8018d78:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8018d7c:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8018d80:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8018d84:	7372706f 	cmnvc	r2, #111	; 0x6f
 8018d88:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8018d8c:	7f7e7c7b 	svcvc	0x007e7c7b
 8018d90:	86848381 	strhi	r8, [r4], r1, lsl #7
 8018d94:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8018d98:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8018d9c:	9b999795 	blls	667ebf8 <__stack_size+0x667abf8>
 8018da0:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8018da4:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8018da8:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8018dac:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8018db0:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8018db4:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8018db8:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8018dbc:	dad8d6d4 	ble	764e914 <__stack_size+0x764a914>
 8018dc0:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8018dc4:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8018dc8:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8018dcc:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08018dd0 <gamma25_0>:
	...
 8018de4:	01010000 	mrseq	r0, (UNDEF: 1)
 8018de8:	01010101 	tsteq	r1, r1, lsl #2
 8018dec:	01010101 	tsteq	r1, r1, lsl #2
 8018df0:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8018df4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018df8:	03030302 	movweq	r0, #13058	; 0x3302
 8018dfc:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8018e00:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8018e04:	06050505 	streq	r0, [r5], -r5, lsl #10
 8018e08:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8018e0c:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8018e10:	09090808 	stmdbeq	r9, {r3, fp}
 8018e14:	0a0a0a09 	beq	829b640 <__exidx_end+0x281984>
 8018e18:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8018e1c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018e20:	0f0f0f0e 	svceq	0x000f0f0e
 8018e24:	11111010 	tstne	r1, r0, lsl r0
 8018e28:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018e2c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018e30:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018e34:	1a1a1919 	bne	869f2a0 <__exidx_end+0x6855e4>
 8018e38:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018e3c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018e40:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018e44:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8018e48:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8018e4c:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8018e50:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8018e54:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018e58:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018e5c:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8018e60:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8018e64:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8018e68:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8018e6c:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8018e70:	53525150 	cmppl	r2, #80, 2
 8018e74:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8018e78:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8018e7c:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8018e80:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8018e84:	6f6e6c6b 	svcvs	0x006e6c6b
 8018e88:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8018e8c:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8018e90:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8018e94:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8018e98:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8018e9c:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8018ea0:	9f9d9b99 	svcls	0x009d9b99
 8018ea4:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8018ea8:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8018eac:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8018eb0:	bfbdbab8 	svclt	0x00bdbab8
 8018eb4:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8018eb8:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8018ebc:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8018ec0:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8018ec4:	ebe9e7e4 	bl	7a92e5c <__stack_size+0x7a8ee5c>
 8018ec8:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8018ecc:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08018ed0 <gamma25_5>:
 8018ed0:	01010100 	mrseq	r0, (UNDEF: 17)
 8018ed4:	01010101 	tsteq	r1, r1, lsl #2
 8018ed8:	01010101 	tsteq	r1, r1, lsl #2
 8018edc:	01010101 	tsteq	r1, r1, lsl #2
 8018ee0:	01010101 	tsteq	r1, r1, lsl #2
 8018ee4:	01010101 	tsteq	r1, r1, lsl #2
 8018ee8:	01010101 	tsteq	r1, r1, lsl #2
 8018eec:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018ef0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018ef4:	03030302 	movweq	r0, #13058	; 0x3302
 8018ef8:	03030303 	movweq	r0, #13059	; 0x3303
 8018efc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8018f00:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018f04:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018f08:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018f0c:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8018f10:	0a090909 	beq	825b33c <__exidx_end+0x241680>
 8018f14:	0b0b0a0a 	bleq	82db744 <__exidx_end+0x2c1a88>
 8018f18:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8018f1c:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8018f20:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8018f24:	12111110 	andsne	r1, r1, #16, 2
 8018f28:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8018f2c:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8018f30:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8018f34:	1b1a1a19 	blne	869f7a0 <__exidx_end+0x685ae4>
 8018f38:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8018f3c:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8018f40:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8018f44:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8018f48:	2a292827 	bcs	8a62fec <__exidx_end+0xa49330>
 8018f4c:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8018f50:	31302f2e 	teqcc	r0, lr, lsr #30
 8018f54:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8018f58:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018f5c:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8018f60:	41403f3e 	cmpmi	r0, lr, lsr pc
 8018f64:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8018f68:	4a494846 	bmi	926b088 <__exidx_end+0x12513cc>
 8018f6c:	4f4e4c4b 	svcmi	0x004e4c4b
 8018f70:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8018f74:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8018f78:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8018f7c:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8018f80:	6a686765 	bvs	9a32d1c <__exidx_end+0x1a19060>
 8018f84:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 8018f88:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8018f8c:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8018f90:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8018f94:	8a888685 	bhi	623a9b0 <__stack_size+0x62369b0>
 8018f98:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8018f9c:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8018fa0:	9f9d9c9a 	svcls	0x009d9c9a
 8018fa4:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 8018fa8:	afadaba9 	svcge	0x00adaba9
 8018fac:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8018fb0:	bfbdbbb9 	svclt	0x00bdbbb9
 8018fb4:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 8018fb8:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 8018fbc:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8018fc0:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 8018fc4:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 8018fc8:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 8018fcc:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 8018fd0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8018fd4:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8018fd8:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 8018fdc:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 8018fe0:	 	andeq	r0, r0, #100	; 0x64

08018fe2 <CSWTCH.18>:
 8018fe2:	02020200 	andeq	r0, r2, #0, 4
 8018fe6:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8018fea:	 	ldrbmi	r0, [r2, -r0, lsl #10]

08018fec <PixelType::MAPS>:
 8018fec:	00424752 	subeq	r4, r2, r2, asr r7
 8018ff0:	00474252 	subeq	r4, r7, r2, asr r2
 8018ff4:	00425247 	subeq	r5, r2, r7, asr #4
 8018ff8:	00524247 	subseq	r4, r2, r7, asr #4
 8018ffc:	00475242 	subeq	r5, r7, r2, asr #4
 8019000:	00524742 	subseq	r4, r2, r2, asr #14

08019004 <PixelType::TYPES>:
 8019004:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019008:	00003130 	andeq	r3, r0, r0, lsr r1
 801900c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019010:	00003131 	andeq	r3, r0, r1, lsr r1
 8019014:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019018:	00003231 	andeq	r3, r0, r1, lsr r2
 801901c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019020:	00423231 	subeq	r3, r2, r1, lsr r2
 8019024:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019028:	00003331 	andeq	r3, r0, r1, lsr r3
 801902c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019030:	00003531 	andeq	r3, r0, r1, lsr r5
 8019034:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019038:	00003231 	andeq	r3, r0, r1, lsr r2
 801903c:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019040:	00573231 	subseq	r3, r7, r1, lsr r2
 8019044:	31534355 	cmpcc	r3, r5, asr r3
 8019048:	00333039 	eorseq	r3, r3, r9, lsr r0
 801904c:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8019050:	00333039 	eorseq	r3, r3, r9, lsr r0
 8019054:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8019058:	00003231 	andeq	r3, r0, r1, lsr r2
 801905c:	31415041 	cmpcc	r1, r1, asr #32
 8019060:	00003230 	andeq	r3, r0, r0, lsr r2
 8019064:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019068:	00003232 	andeq	r3, r0, r2, lsr r2
 801906c:	31383950 	teqcc	r8, r0, asr r9
 8019070:	00000033 	andeq	r0, r0, r3, lsr r0

08019074 <s_patternName>:
 8019074:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8019080:	61520000 	cmpvs	r2, r0
 8019084:	6f626e69 	svcvs	0x00626e69
 8019088:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801908c:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8019090:	61656854 	cmnvs	r5, r4, asr r8
 8019094:	20726574 	rsbscs	r6, r2, r4, ror r5
 8019098:	73616863 	cmnvc	r1, #6488064	; 0x630000
 801909c:	6f430065 	svcvs	0x00430065
 80190a0:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 80190a4:	70697720 	rsbvc	r7, r9, r0, lsr #14
 80190a8:	00000065 	andeq	r0, r0, r5, rrx
 80190ac:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 80190b0:	0072656e 	rsbseq	r6, r2, lr, ror #10
 80190b4:	00000000 	andeq	r0, r0, r0
 80190b8:	61460000 	mrsvs	r0, (UNDEF: 70)
 80190bc:	00006564 	andeq	r6, r0, r4, ror #10
	...

080190c8 <pixel::s_GPIO_PINs>:
 80190c8:	6374ffff 	cmnvs	r4, #1020	; 0x3fc	; <UNPREDICTABLE>
 80190cc:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 80190d0:	3a6e6967 	bcc	9bb3674 <__exidx_end+0x1b999b8>
 80190d4:	6f6f7420 	svcvs	0x006f7420
 80190d8:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 80190dc:	6f632079 	svcvs	0x00632079
 80190e0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80190e4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80190e8:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80190ec:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80190f0:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80190f4:	41000a64 	tstmi	r0, r4, ror #20
 80190f8:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80190fc:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8019100:	61662070 	smcvs	25088	; 0x6200
 8019104:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8019108:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801910c:	61666564 	cmnvs	r6, r4, ror #10
 8019110:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8019114:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8019118:	0a796177 	beq	9e716fc <__exidx_end+0x1e57a40>
 801911c:	50524100 	subspl	r4, r2, r0, lsl #2
 8019120:	6f6f6c20 	svcvs	0x006f6c20
 8019124:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8019128:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801912c:	000a6465 	andeq	r6, sl, r5, ror #8

08019130 <NetworkConst::MSG_MDNS_CONFIG>:
 8019130:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019134:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019138:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801913c:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08019141 <NetworkConst::MSG_NETWORK_INIT>:
 8019141:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8019145:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8019149:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801914d:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8019151:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8019155:	3135322e 	teqcc	r5, lr, lsr #4
 8019159:	63745f00 	cmnvs	r4, #0, 30
 801915d:	6f6c2e70 	svcvs	0x006c2e70
 8019161:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8019165:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8019169:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801916d:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8019175 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8019171:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8019175:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8018319 <RDMHandler::PID_DEFINITIONS+0x115>
 8019179:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801917d:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8019181:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8019185:	20000a53 	andcs	r0, r0, r3, asr sl
 8019189:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801918d:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8019191:	0a676e69 	beq	99f4b3d <__exidx_end+0x19dae81>
 8019195:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8019199:	3a20656d 	bcc	8832755 <__exidx_end+0x818a99>
 801919d:	0a732520 	beq	9ce2625 <__exidx_end+0x1cc8969>
 80191a1:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80191a5:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80191a9:	000a7325 	andeq	r7, sl, r5, lsr #6
 80191ad:	30687465 	rsbcc	r7, r8, r5, ror #8
 80191b1:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 80191b5:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80191b9:	5f656369 	svcpl	0x00656369
 80191bd:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 80191c1:	6b726f77 	blvs	9cb4fa5 <__exidx_end+0x1c9b2e9>
 80191c5:	4820000a 	stmdami	r0!, {r1, r3}
 80191c9:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80191cd:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80191d1:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80191d5:	20000a73 	andcs	r0, r0, r3, ror sl
 80191d9:	614e6649 	cmpvs	lr, r9, asr #12
 80191dd:	2020656d 	eorcs	r6, r0, sp, ror #10
 80191e1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80191e5:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80191e9:	000a7325 	andeq	r7, sl, r5, lsr #6
 80191ed:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80191f1:	20202074 	eorcs	r2, r0, r4, ror r0
 80191f5:	3a202020 	bcc	882127d <__exidx_end+0x8075c1>
 80191f9:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80191fd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019201:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019205:	0a64252f 	beq	99226c9 <__exidx_end+0x1908a0d>
 8019209:	654e2000 	strbvs	r2, [lr, #-0]
 801920d:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8019211:	2020206b 	eorcs	r2, r0, fp, rrx
 8019215:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019219:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801921d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019221:	20000a64 	andcs	r0, r0, r4, ror #20
 8019225:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8019229:	20796177 	rsbscs	r6, r9, r7, ror r1
 801922d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019231:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019235:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019239:	0a64252e 	beq	99226f9 <__exidx_end+0x1908a3d>
 801923d:	72422000 	subvc	r2, r2, #0
 8019241:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8019245:	20747361 	rsbscs	r7, r4, r1, ror #6
 8019249:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801924d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019251:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019255:	20000a64 	andcs	r0, r0, r4, ror #20
 8019259:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801925d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019261:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019265:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8019269:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801926d:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8019271:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8019275:	3a78322e 	bcc	9e25b35 <__exidx_end+0x1e0be79>
 8019279:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801927d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8019281:	20000a78 	andcs	r0, r0, r8, ror sl
 8019285:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8019289:	20202020 	eorcs	r2, r0, r0, lsr #32
 801928d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019291:	000a6325 	andeq	r6, sl, r5, lsr #6
 8019295:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8019299:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801929d:	 	rsbvc	r0, r9, r0, asr r0

0801929f <NetworkParamsConst::IP_ADDRESS>:
 801929f:	615f7069 	cmpvs	pc, r9, rrx
 80192a3:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80192a7:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080192aa <NetworkParamsConst::DEFAULT_GATEWAY>:
 80192aa:	61666564 	cmnvs	r6, r4, ror #10
 80192ae:	5f746c75 	svcpl	0x00746c75
 80192b2:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80192b6:	00796177 	rsbseq	r6, r9, r7, ror r1

080192ba <NetworkParamsConst::DHCP_RETRY_TIME>:
 80192ba:	70636864 	rsbvc	r6, r3, r4, ror #16
 80192be:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80192c2:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80192ca <NetworkParamsConst::HOSTNAME>
 80192c6:	00656d69 	rsbeq	r6, r5, r9, ror #26

080192ca <NetworkParamsConst::HOSTNAME>:
 80192ca:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80192ce:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080192d3 <NetworkParamsConst::NET_MASK>:
 80192d3:	5f74656e 	svcpl	0x0074656e
 80192d7:	6b73616d 	blvs	9cf1893 <__exidx_end+0x1cd7bd7>
	...

080192dc <NetworkParamsConst::USE_DHCP>:
 80192dc:	5f657375 	svcpl	0x00657375
 80192e0:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080192e5 <NetworkParamsConst::FILE_NAME>:
 80192e5:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80192e9:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80192ed:	00747874 	rsbseq	r7, r4, r4, ror r8
 80192f1:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80192f5:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80192f9:	61747320 	cmnvs	r4, r0, lsr #6
 80192fd:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8019301:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019305:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019309:	252f6425 	strcs	r6, [pc, #-1061]!	; 8018eec <gamma25_5+0x1c>
 801930d:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8019311:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8019315:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019319:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801931d:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8019321:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8019325:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019329:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801932d:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8019331:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8019335:	20657261 	rsbcs	r7, r5, r1, ror #4
 8019339:	2a2e2556 	bcs	8ba2899 <__exidx_end+0xb88bdd>
 801933d:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8019341:	72205043 	eorvc	r5, r0, #67	; 0x43
 8019345:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8019349:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801934d:	50434844 	subpl	r4, r3, r4, asr #16
 8019351:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8019355:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8019359:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801935d:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8019361:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8019365:	6f647475 	svcvs	0x00647475
 8019369:	 	andeq	r6, r0, r7, ror lr

0801936c <pArray>:
 801936c:	08019400 	stmdaeq	r1, {sl, ip, pc}
 8019370:	080193bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, pc}
 8019374:	0801929f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8019378:	08019406 	stmdaeq	r1, {r1, r2, sl, ip, pc}
 801937c:	08019874 	stmdaeq	r1, {r2, r4, r5, r6, fp, ip, pc}
 8019380:	080193c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, ip, pc}
 8019384:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 8019388:	080192ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, ip, pc}
 801938c:	080196e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, ip, pc}
 8019390:	080196f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sl, ip, pc}
 8019394:	08019702 	stmdaeq	r1, {r1, r8, r9, sl, ip, pc}
 8019398:	08019712 	stmdaeq	r1, {r1, r4, r8, r9, sl, ip, pc}
 801939c:	080192d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, ip, pc}
 80193a0:	08019862 	stmdaeq	r1, {r1, r5, r6, fp, ip, pc}
 80193a4:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 80193a8:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 80193ac:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 80193b0:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 80193b4:	080192aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, ip, pc}
 80193b8:	080193d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, ip, pc}

080193bc <DisplayUdfParamsConst::BOARD_NAME>:
 80193bc:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80193c0:	616e5f64 	cmnvs	lr, r4, ror #30
 80193c4:	 	tstvs	r0, sp, ror #10

080193c7 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80193c7:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80193cb:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80193cf:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080193d4 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80193d4:	5f786d64 	svcpl	0x00786d64
 80193d8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80193dc:	6f697463 	svcvs	0x00697463
 80193e0:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080193e2 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80193e2:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80193e6:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80193ea:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8018e85 <gamma25_0+0xb5>
 80193ee:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080193f0 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80193f0:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80193f4:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80193f8:	61636974 	smcvs	13972	; 0x3694
 80193fc:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08019400 <DisplayUdfParamsConst::TITLE>:
 8019400:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8019404:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08019406 <DisplayUdfParamsConst::VERSION>:
 8019406:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801940a:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801940e <DisplayUdfParamsConst::FILE_NAME>:
 801940e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8019412:	2e79616c 	rpwcsez	f6, f1, #4.0
 8019416:	00747874 	rsbseq	r7, r4, r4, ror r8

0801941a <DisplayUdfParamsConst::INTENSITY>:
 801941a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801941e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8019422:	 	rsbeq	r0, r0, r9, ror r0

08019424 <s_aStorSize>:
 8019424:	00000060 	andeq	r0, r0, r0, rrx
 8019428:	00000090 	muleq	r0, r0, r0
 801942c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019430:	00000040 	andeq	r0, r0, r0, asr #32
 8019434:	00000060 	andeq	r0, r0, r0, rrx
 8019438:	00000040 	andeq	r0, r0, r0, asr #32
 801943c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019440:	00000020 	andeq	r0, r0, r0, lsr #32
 8019444:	000001e0 	andeq	r0, r0, r0, ror #3
 8019448:	00000040 	andeq	r0, r0, r0, asr #32
 801944c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019450:	00000060 	andeq	r0, r0, r0, rrx
 8019454:	00000030 	andeq	r0, r0, r0, lsr r0
 8019458:	00000020 	andeq	r0, r0, r0, lsr #32
 801945c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8019460:	00000030 	andeq	r0, r0, r0, lsr r0
 8019464:	00000040 	andeq	r0, r0, r0, asr #32
 8019468:	00000020 	andeq	r0, r0, r0, lsr #32
 801946c:	00000060 	andeq	r0, r0, r0, rrx
 8019470:	00000020 	andeq	r0, r0, r0, lsr #32
 8019474:	00000400 	andeq	r0, r0, r0, lsl #8
 8019478:	00000020 	andeq	r0, r0, r0, lsr #32
 801947c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019480:	00000040 	andeq	r0, r0, r0, asr #32
 8019484:	00000060 	andeq	r0, r0, r0, rrx
 8019488:	00000020 	andeq	r0, r0, r0, lsr #32
 801948c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019490:	000000c0 	andeq	r0, r0, r0, asr #1

08019494 <vtable for StoreDisplayUdf>:
	...
 801949c:	08012d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp, sp}
 80194a0:	08012d95 	stmdaeq	r1, {r0, r2, r4, r7, r8, sl, fp, sp}
 80194a4:	08012d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, sp}
 80194a8:	08012d4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, fp, sp}

080194ac <vtable for StoreDmxSend>:
	...
 80194b4:	08012db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, sp}
 80194b8:	08012e01 	stmdaeq	r1, {r0, r9, sl, fp, sp}
 80194bc:	08012ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp, sp}
 80194c0:	08012db9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, fp, sp}

080194c4 <vtable for StoreNetwork>:
	...
 80194cc:	08012e21 	stmdaeq	r1, {r0, r5, r9, sl, fp, sp}
 80194d0:	08012f09 	stmdaeq	r1, {r0, r3, r8, r9, sl, fp, sp}
 80194d4:	08012e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, sp}
 80194d8:	08012f1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, fp, sp}
 80194dc:	08012ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp, sp}
 80194e0:	08012e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, sp}
 80194e4:	08012e4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, fp, sp}
 80194e8:	08012ed5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, fp, sp}
 80194ec:	08009c69 	stmdaeq	r0, {r0, r3, r5, r6, sl, fp, ip, pc}
 80194f0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80194f4:	00000000 	andeq	r0, r0, r0
 80194f8:	08012e23 	stmdaeq	r1, {r0, r1, r5, r9, sl, fp, sp}
 80194fc:	08012f15 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, fp, sp}
 8019500:	08012ecd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, fp, sp}
 8019504:	08012ea1 	stmdaeq	r1, {r0, r5, r7, r9, sl, fp, sp}
 8019508:	08012e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, sp}
 801950c:	08012f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, sp}
 8019510:	08009c91 	stmdaeq	r0, {r0, r4, r7, sl, fp, ip, pc}

08019514 <vtable for StoreRemoteConfig>:
	...
 801951c:	08012f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp, sp}
 8019520:	08012fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, sp}
 8019524:	08012f7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, sp}
 8019528:	08012f59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, fp, sp}
 801952c:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
 8019530:	76654465 	strbtvc	r4, [r5], -r5, ror #8
 8019534:	3a656369 	bcc	99722e0 <__exidx_end+0x1958624>
 8019538:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
 801953c:	34325441 	ldrtcc	r5, [r2], #-1089	; 0xfffffbbf
 8019540:	20323343 	eorscs	r3, r2, r3, asr #6
 8019544:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8019548:	53007832 	movwpl	r7, #2098	; 0x832
 801954c:	65726f74 	ldrbvs	r6, [r2, #-3956]!	; 0xfffff08c
 8019550:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8019554:	203a6563 	eorscs	r6, sl, r3, ror #10
 8019558:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 801955c:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 8019560:	32544120 	subscc	r4, r4, #32, 2
 8019564:	32334334 	eorscc	r4, r3, #52, 6	; 0xd0000000
 8019568:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801956c:	6f742068 	svcvs	0x00742068
 8019570:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8019574:	62207525 	eorvs	r7, r0, #155189248	; 0x9400000
 8019578:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801957c:	75255b20 	strvc	r5, [r5, #-2848]!	; 0xfffff4e0
 8019580:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8019584:	0000000a 	andeq	r0, r0, sl

08019588 <vtable for StorePixelDmx>:
	...
 8019590:	0801313f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, ip, sp}
 8019594:	080132a9 	stmdaeq	r1, {r0, r3, r5, r7, r9, ip, sp}
 8019598:	08013145 	stmdaeq	r1, {r0, r2, r6, r8, ip, sp}
 801959c:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80195a0:	08013275 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, ip, sp}
 80195a4:	08013241 	stmdaeq	r1, {r0, r6, r9, ip, sp}
 80195a8:	08013209 	stmdaeq	r1, {r0, r3, r9, ip, sp}
 80195ac:	080131d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, ip, sp}
 80195b0:	0801319d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, ip, sp}
 80195b4:	08013169 	stmdaeq	r1, {r0, r3, r5, r6, r8, ip, sp}
 80195b8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80195bc:	00000000 	andeq	r0, r0, r0
 80195c0:	08013141 	stmdaeq	r1, {r0, r6, r8, ip, sp}
 80195c4:	080132b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, ip, sp}
 80195c8:	080132a1 	stmdaeq	r1, {r0, r5, r7, r9, ip, sp}
 80195cc:	0801326d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, ip, sp}
 80195d0:	08013239 	stmdaeq	r1, {r0, r3, r4, r5, r9, ip, sp}
 80195d4:	08013201 	stmdaeq	r1, {r0, r9, ip, sp}
 80195d8:	080131c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, ip, sp}
 80195dc:	08013195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, sp}

080195e0 <vtable for StoreRDMDevice>:
	...
 80195e8:	080132f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, ip, sp}
 80195ec:	08013369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip, sp}
 80195f0:	08013301 	stmdaeq	r1, {r0, r8, r9, ip, sp}
 80195f4:	0801337d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, ip, sp}
 80195f8:	08013325 	stmdaeq	r1, {r0, r2, r5, r8, r9, ip, sp}
 80195fc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019600:	00000000 	andeq	r0, r0, r0
 8019604:	080132fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, ip, sp}
 8019608:	08013375 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, ip, sp}
 801960c:	08013361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp}

08019610 <DevicesParamsConst::ACTIVE_OUT>:
 8019610:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019614:	6f5f6576 	svcvs	0x005f6576
 8019618:	 	smlsdxvs	r0, r5, r4, r7

0801961b <DevicesParamsConst::GAMMA_VALUE>:
 801961b:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801961f:	61765f61 	cmnvs	r6, r1, ror #30
 8019623:	0065756c 	rsbeq	r7, r5, ip, ror #10

08019627 <DevicesParamsConst::SPI_SPEED_HZ>:
 8019627:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801962b:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801962f:	5f646565 	svcpl	0x00646565
 8019633:	 	strvc	r7, [r0], #-2664	; 0xfffff598

08019636 <DevicesParamsConst::TEST_PATTERN>:
 8019636:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801963a:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801963e:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08019643 <DevicesParamsConst::GROUPING_COUNT>:
 8019643:	5f64656c 	svcpl	0x0064656c
 8019647:	756f7267 	strbvc	r7, [pc, #-615]!	; 80193e8 <DisplayUdfParamsConst::SLEEP_TIMEOUT+0x6>
 801964b:	6f635f70 	svcvs	0x00635f70
 801964f:	00746e75 	rsbseq	r6, r4, r5, ror lr

08019653 <DevicesParamsConst::GAMMA_CORRECTION>:
 8019653:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 8019657:	6f635f61 	svcvs	0x00635f61
 801965b:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 801965f:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

08019664 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8019664:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8019668:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801966c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8019670:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8019674:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08019676 <DevicesParamsConst::MAP>:
 8019676:	5f64656c 	svcpl	0x0064656c
 801967a:	5f626772 	svcpl	0x00626772
 801967e:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8019682:	00676e69 	rsbeq	r6, r7, r9, ror #28

08019686 <DevicesParamsConst::TYPE>:
 8019686:	5f64656c 	svcpl	0x0064656c
 801968a:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801968f <DevicesParamsConst::COUNT>:
 801968f:	5f64656c 	svcpl	0x0064656c
 8019693:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8019697:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08019699 <DevicesParamsConst::LED_T0H>:
 8019699:	5f64656c 	svcpl	0x0064656c
 801969d:	00683074 	rsbeq	r3, r8, r4, ror r0

080196a1 <DevicesParamsConst::LED_T1H>:
 80196a1:	5f64656c 	svcpl	0x0064656c
 80196a5:	00683174 	rsbeq	r3, r8, r4, ror r1

080196a9 <DevicesParamsConst::FILE_NAME>:
 80196a9:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80196ad:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80196b1:	00747874 	rsbseq	r7, r4, r4, ror r8
 80196b5:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80196b9:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80196bd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80196c1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80196c5:	002c2264 	eoreq	r2, ip, r4, ror #4
 80196c9:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80196cd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80196d1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80196d5:	0a64252e 	beq	9922b95 <__exidx_end+0x1908ed9>
 80196d9:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80196dd:	0a232073 	beq	88e18b1 <__exidx_end+0x8c7bf5>
	...

080196e2 <LightSetParamsConst::UNIVERSE_PORT>:
 80196e2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80196e6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80196ea:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80196ee:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80196f2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80196f6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80196fa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80196fe:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8019702:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019706:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801970a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801970e:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8019712:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019716:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801971a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801971e:	00645f74 	rsbeq	r5, r4, r4, ror pc

08019722 <LightSetParamsConst::START_UNI_PORT>:
 8019722:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019726:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801972a:	6f705f69 	svcvs	0x00705f69
 801972e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019732:	00000000 	andeq	r0, r0, r0
 8019736:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801973a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801973e:	6f705f69 	svcvs	0x00705f69
 8019742:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 8019746:	00000000 	andeq	r0, r0, r0
 801974a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801974e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019752:	6f705f69 	svcvs	0x00705f69
 8019756:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801975a:	00000000 	andeq	r0, r0, r0
 801975e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019762:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019766:	6f705f69 	svcvs	0x00705f69
 801976a:	345f7472 	ldrbcc	r7, [pc], #-1138	; 8019772 <LightSetParamsConst::START_UNI_PORT+0x50>
 801976e:	00000000 	andeq	r0, r0, r0
 8019772:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019776:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801977a:	6f705f69 	svcvs	0x00705f69
 801977e:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8019314 <NetworkParamsConst::FILE_NAME+0x2f>
 8019782:	00000000 	andeq	r0, r0, r0
 8019786:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801978a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801978e:	6f705f69 	svcvs	0x00705f69
 8019792:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 8019796:	00000000 	andeq	r0, r0, r0
 801979a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801979e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80197a2:	6f705f69 	svcvs	0x00705f69
 80197a6:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 80197aa:	00000000 	andeq	r0, r0, r0
 80197ae:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80197b2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80197b6:	6f705f69 	svcvs	0x00705f69
 80197ba:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 80197be:	00000000 	andeq	r0, r0, r0
 80197c2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80197c6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80197ca:	6f705f69 	svcvs	0x00705f69
 80197ce:	395f7472 	ldmdbcc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 80197d2:	00000000 	andeq	r0, r0, r0
 80197d6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80197da:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80197de:	6f705f69 	svcvs	0x00705f69
 80197e2:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 80197e6:	00000030 	andeq	r0, r0, r0, lsr r0
 80197ea:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80197ee:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80197f2:	6f705f69 	svcvs	0x00705f69
 80197f6:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 80197fa:	00000031 	andeq	r0, r0, r1, lsr r0
 80197fe:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019802:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019806:	6f705f69 	svcvs	0x00705f69
 801980a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801980e:	00000032 	andeq	r0, r0, r2, lsr r0
 8019812:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019816:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801981a:	6f705f69 	svcvs	0x00705f69
 801981e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019822:	00000033 	andeq	r0, r0, r3, lsr r0
 8019826:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801982a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801982e:	6f705f69 	svcvs	0x00705f69
 8019832:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019836:	00000034 	andeq	r0, r0, r4, lsr r0
 801983a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801983e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019842:	6f705f69 	svcvs	0x00705f69
 8019846:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801984a:	00000035 	andeq	r0, r0, r5, lsr r0
 801984e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019852:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019856:	6f705f69 	svcvs	0x00705f69
 801985a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801985e:	00000036 	andeq	r0, r0, r6, lsr r0

08019862 <LightSetParamsConst::DMX_START_ADDRESS>:
 8019862:	5f786d64 	svcpl	0x00786d64
 8019866:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801986a:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801986e:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8019872:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08019874 <LightSetParamsConst::UNIVERSE>:
 8019874:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019878:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801987c:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8019880:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8019884:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8019888:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 801988c:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8019890:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8019894:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 8019898:	36303331 			; <UNDEFINED> instruction: 0x36303331
 801989c:	20732500 	rsbscs	r2, r3, r0, lsl #10
 80198a0:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 80198a4:	0a296425 	beq	8a72940 <__exidx_end+0xa58c84>
 80198a8:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 80198ac:	0000eeaa 	andeq	lr, r0, sl, lsr #29

080198b0 <_OledFont8x6>:
 80198b0:	00000040 	andeq	r0, r0, r0, asr #32
 80198b4:	40000000 	andmi	r0, r0, r0
 80198b8:	005f0000 	subseq	r0, pc, r0
 80198bc:	00400000 	subeq	r0, r0, r0
 80198c0:	00070007 	andeq	r0, r7, r7
 80198c4:	7f144000 	svcvc	0x00144000
 80198c8:	00147f14 	andseq	r7, r4, r4, lsl pc
 80198cc:	7f2a2440 	svcvc	0x002a2440
 80198d0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80198d4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80198d8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80198dc:	50205649 	eorpl	r5, r0, r9, asr #12
 80198e0:	08004000 	stmdaeq	r0, {lr}
 80198e4:	00000307 	andeq	r0, r0, r7, lsl #6
 80198e8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80198ec:	40000041 	andmi	r0, r0, r1, asr #32
 80198f0:	1c224100 	stfnes	f4, [r2], #-0
 80198f4:	2a400000 	bcs	90198fc <__exidx_end+0xfffc40>
 80198f8:	2a1c7f1c 	bcs	8739570 <__exidx_end+0x71f8b4>
 80198fc:	08084000 	stmdaeq	r8, {lr}
 8019900:	0008083e 	andeq	r0, r8, lr, lsr r8
 8019904:	70800040 	addvc	r0, r0, r0, asr #32
 8019908:	40000030 	andmi	r0, r0, r0, lsr r0
 801990c:	08080808 	stmdaeq	r8, {r3, fp}
 8019910:	00400008 	subeq	r0, r0, r8
 8019914:	00606000 	rsbeq	r6, r0, r0
 8019918:	10204000 	eorne	r4, r0, r0
 801991c:	00020408 	andeq	r0, r2, r8, lsl #8
 8019920:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8019924:	40003e45 	andmi	r3, r0, r5, asr #28
 8019928:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801992c:	72400000 	subvc	r0, r0, #0
 8019930:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8019934:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8019938:	00334d49 	eorseq	r4, r3, r9, asr #26
 801993c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8019940:	4000107f 	andmi	r1, r0, pc, ror r0
 8019944:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8019948:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801994c:	3149494a 	cmpcc	r9, sl, asr #18
 8019950:	21414000 	mrscs	r4, (UNDEF: 65)
 8019954:	00070911 	andeq	r0, r7, r1, lsl r9
 8019958:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801995c:	40003649 	andmi	r3, r0, r9, asr #12
 8019960:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8019964:	0040001e 	subeq	r0, r0, lr, lsl r0
 8019968:	00001400 	andeq	r1, r0, r0, lsl #8
 801996c:	40004000 	andmi	r4, r0, r0
 8019970:	00000034 	andeq	r0, r0, r4, lsr r0
 8019974:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8019978:	40004122 	andmi	r4, r0, r2, lsr #2
 801997c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8019980:	00400014 	subeq	r0, r0, r4, lsl r0
 8019984:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8019988:	01024000 	mrseq	r4, (UNDEF: 2)
 801998c:	00060959 	andeq	r0, r6, r9, asr r9
 8019990:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8019994:	40004e59 	andmi	r4, r0, r9, asr lr
 8019998:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801999c:	7f40007c 	svcvc	0x0040007c
 80199a0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80199a4:	413e4000 	teqmi	lr, r0
 80199a8:	00224141 	eoreq	r4, r2, r1, asr #2
 80199ac:	41417f40 	cmpmi	r1, r0, asr #30
 80199b0:	40003e41 	andmi	r3, r0, r1, asr #28
 80199b4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80199b8:	7f400041 	svcvc	0x00400041
 80199bc:	01090909 	tsteq	r9, r9, lsl #18
 80199c0:	413e4000 	teqmi	lr, r0
 80199c4:	00735141 	rsbseq	r5, r3, r1, asr #2
 80199c8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80199cc:	40007f08 	andmi	r7, r0, r8, lsl #30
 80199d0:	417f4100 	cmnmi	pc, r0, lsl #2
 80199d4:	20400000 	subcs	r0, r0, r0
 80199d8:	013f4140 	teqeq	pc, r0, asr #2
 80199dc:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80199e0:	00412214 	subeq	r2, r1, r4, lsl r2
 80199e4:	40407f40 	submi	r7, r0, r0, asr #30
 80199e8:	40004040 	andmi	r4, r0, r0, asr #32
 80199ec:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80199f0:	7f40007f 	svcvc	0x0040007f
 80199f4:	7f100804 	svcvc	0x00100804
 80199f8:	413e4000 	teqmi	lr, r0
 80199fc:	003e4141 	eorseq	r4, lr, r1, asr #2
 8019a00:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8019a04:	40000609 	andmi	r0, r0, r9, lsl #12
 8019a08:	2151413e 	cmpcs	r1, lr, lsr r1
 8019a0c:	7f40005e 	svcvc	0x0040005e
 8019a10:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8019a14:	49264000 	stmdbmi	r6!, {lr}
 8019a18:	00324949 	eorseq	r4, r2, r9, asr #18
 8019a1c:	7f010340 	svcvc	0x00010340
 8019a20:	40000301 	andmi	r0, r0, r1, lsl #6
 8019a24:	4040403f 	submi	r4, r0, pc, lsr r0
 8019a28:	1f40003f 	svcne	0x0040003f
 8019a2c:	1f204020 	svcne	0x00204020
 8019a30:	403f4000 	eorsmi	r4, pc, r0
 8019a34:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8019a38:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8019a3c:	40006314 	andmi	r6, r0, r4, lsl r3
 8019a40:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8019a44:	61400003 	cmpvs	r0, r3
 8019a48:	434d4959 	movtmi	r4, #55641	; 0xd959
 8019a4c:	7f004000 	svcvc	0x00004000
 8019a50:	00414141 	subeq	r4, r1, r1, asr #2
 8019a54:	08040240 	stmdaeq	r4, {r6, r9}
 8019a58:	40002010 	andmi	r2, r0, r0, lsl r0
 8019a5c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8019a60:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8019a64:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8019a68:	40404000 	submi	r4, r0, r0
 8019a6c:	00404040 	subeq	r4, r0, r0, asr #32
 8019a70:	07030040 	streq	r0, [r3, -r0, asr #32]
 8019a74:	40000008 	andmi	r0, r0, r8
 8019a78:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8019a7c:	7f400040 	svcvc	0x00400040
 8019a80:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8019a84:	44384000 	ldrtmi	r4, [r8], #-0
 8019a88:	00284444 	eoreq	r4, r8, r4, asr #8
 8019a8c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8019a90:	40007f28 	andmi	r7, r0, r8, lsr #30
 8019a94:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8019a98:	00400018 	subeq	r0, r0, r8, lsl r0
 8019a9c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8019aa0:	a4184000 	ldrge	r4, [r8], #-0
 8019aa4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8019aa8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8019aac:	40007804 	andmi	r7, r0, r4, lsl #16
 8019ab0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8019ab4:	20400000 	subcs	r0, r0, r0
 8019ab8:	003d4040 	eorseq	r4, sp, r0, asr #32
 8019abc:	107f4000 	rsbsne	r4, pc, r0
 8019ac0:	00004428 	andeq	r4, r0, r8, lsr #8
 8019ac4:	7f410040 	svcvc	0x00410040
 8019ac8:	40000040 	andmi	r0, r0, r0, asr #32
 8019acc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8019ad0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8019ad4:	78040408 	stmdavc	r4, {r3, sl}
 8019ad8:	44384000 	ldrtmi	r4, [r8], #-0
 8019adc:	00384444 	eorseq	r4, r8, r4, asr #8
 8019ae0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8019ae4:	40001824 	andmi	r1, r0, r4, lsr #16
 8019ae8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8019aec:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8019af0:	08040408 	stmdaeq	r4, {r3, sl}
 8019af4:	54484000 	strbpl	r4, [r8], #-0
 8019af8:	00245454 	eoreq	r5, r4, r4, asr r4
 8019afc:	3f040440 	svccc	0x00040440
 8019b00:	40002444 	andmi	r2, r0, r4, asr #8
 8019b04:	2040403c 	subcs	r4, r0, ip, lsr r0
 8019b08:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8019b0c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8019b10:	403c4000 	eorsmi	r4, ip, r0
 8019b14:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8019b18:	10284440 	eorne	r4, r8, r0, asr #8
 8019b1c:	40004428 	andmi	r4, r0, r8, lsr #8
 8019b20:	9090904c 	addsls	r9, r0, ip, asr #32
 8019b24:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8019b28:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8019b2c:	08004000 	stmdaeq	r0, {lr}
 8019b30:	00004136 	andeq	r4, r0, r6, lsr r1
 8019b34:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8019b38:	40000000 	andmi	r0, r0, r0
 8019b3c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8019b40:	02400000 	subeq	r0, r0, #0
 8019b44:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8019b48:	263c4000 	ldrtcs	r4, [ip], -r0
 8019b4c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08019b50 <oled_128x32_init>:
 8019b50:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8019b54:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8019b58:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8019b5c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8019b60:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8019b64:	a6a440db 	ssatge	r4, #5, fp, asr #1

08019b68 <oled_128x64_init>:
 8019b68:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8019b6c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8019b70:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8019b74:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8019b78:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8019b7c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08019b80 <vtable for Ssd1306>:
	...
 8019b88:	08013a9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, fp, ip, sp}
 8019b8c:	08013ac9 	stmdaeq	r1, {r0, r3, r6, r7, r9, fp, ip, sp}
 8019b90:	08013dcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, sl, fp, ip, sp}
 8019b94:	08013d55 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, fp, ip, sp}
 8019b98:	08013c1d 	stmdaeq	r1, {r0, r2, r3, r4, sl, fp, ip, sp}
 8019b9c:	08013ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp, ip, sp}
 8019ba0:	08013b01 	stmdaeq	r1, {r0, r8, r9, fp, ip, sp}
 8019ba4:	08013bf5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, fp, ip, sp}
 8019ba8:	08013bad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, fp, ip, sp}
 8019bac:	08013a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, ip, sp}
 8019bb0:	08013c5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, fp, ip, sp}
 8019bb4:	08013c69 	stmdaeq	r1, {r0, r3, r5, r6, sl, fp, ip, sp}
 8019bb8:	08013c83 	stmdaeq	r1, {r0, r1, r7, sl, fp, ip, sp}
 8019bbc:	08013aa1 	stmdaeq	r1, {r0, r5, r7, r9, fp, ip, sp}
 8019bc0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8019bc4:	5b1b006d 	blpl	86d9d80 <__exidx_end+0x6c00c4>
 8019bc8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8019bcc:	31335b1b 	teqcc	r3, fp, lsl fp
 8019bd0:	5b1b006d 	blpl	86d9d8c <__exidx_end+0x6c00d0>
 8019bd4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8019bd8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8019bdc:	5b1b006d 	blpl	86d9d98 <__exidx_end+0x6c00dc>
 8019be0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8019be4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8019be8:	205d732a 	subscs	r7, sp, sl, lsr #6
 8019bec:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8019bf0:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8019bf4:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8019bf8:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8019bfc:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8019c00:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8019c04:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8019c08:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019c0c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019c10:	000a7525 	andeq	r7, sl, r5, lsr #10
 8019c14:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019c18:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019c1c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8019c20:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8019c24:	6b636f6c 	blvs	98f59dc <__exidx_end+0x18dbd20>
 8019c28:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8019c2c:	000a7469 	andeq	r7, sl, r9, ror #8
 8019c30:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019c34:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019c38:	6f6c4270 	svcvs	0x006c4270
 8019c3c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8019c40:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8019c44:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8019c48:	7a697320 	bvc	9a768d0 <__exidx_end+0x1a5cc14>
 8019c4c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8019c50:	6164202c 	cmnvs	r4, ip, lsr #32
 8019c54:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8019c58:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8019c5c:	3a656572 	bcc	997322c <__exidx_end+0x1959570>
 8019c60:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8019c64:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019c68:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8019c6c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8019c70:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8019c74:	6f6c4270 	svcvs	0x006c4270
 8019c78:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8019c7c:	0a702520 	beq	9c23104 <__exidx_end+0x1c09448>
 8019c80:	00000000 	andeq	r0, r0, r0

08019c84 <days_of_month>:
 8019c84:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019c88:	0000001c 	andeq	r0, r0, ip, lsl r0
 8019c8c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019c90:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019c94:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019c98:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019c9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019ca0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019ca4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019ca8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019cac:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019cb0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08019cb4 <__exidx_start>:
 8019cb4:	7fff06b4 	svcvc	0x00ff06b4
 8019cb8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08019cbc <.ARM.attributes>:
 8019cbc:	00003441 	andeq	r3, r0, r1, asr #8
 8019cc0:	61656100 	cmnvs	r5, r0, lsl #2
 8019cc4:	01006962 	tsteq	r0, r2, ror #18
 8019cc8:	0000002a 	andeq	r0, r0, sl, lsr #32
 8019ccc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8019cd0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8019cd4:	0600344d 	streq	r3, [r0], -sp, asr #8
 8019cd8:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 8019cdc:	12060a02 	andne	r0, r6, #8192	; 0x2000
 8019ce0:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 8019ce4:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 8019ce8:	1b011a01 	blne	80604f4 <__exidx_end+0x46838>
 8019cec:	22011c01 	andcs	r1, r1, #256	; 0x100
 8019cf0:	Address 0x0000000008019cf0 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	1000a000 	andne	sl, r0, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	0bebc200 	bleq	1faf08fc <_sp+0xfae08fc>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <DdpDisplay::s_nOffsetCompare>:
	...

20000714 <DdpDisplay::s_nLightsetPortLength>:
	...

2000081c <DdpDisplay::s_pThis>:
2000081c:	00000000 	andeq	r0, r0, r0

20000820 <LLRPDevice::s_nIpAddressFrom>:
20000820:	00000000 	andeq	r0, r0, r0

20000824 <LLRPDevice::m_nIpAddresLLRPRequest>:
20000824:	00000000 	andeq	r0, r0, r0

20000828 <LLRPDevice::m_nIpAddressLLRPResponse>:
20000828:	00000000 	andeq	r0, r0, r0

2000082c <LLRPDevice::m_pLLRP>:
2000082c:	00000000 	andeq	r0, r0, r0

20000830 <RDMNetDevice::s_RdmCommand>:
	...

20000931 <RDMNetDevice::s_Cid>:
	...

20000944 <RDMSensors::s_pThis>:
20000944:	00000000 	andeq	r0, r0, r0

20000948 <RDMSubDevices::s_pThis>:
20000948:	00000000 	andeq	r0, r0, r0

2000094c <RDMDeviceResponder::s_pThis>:
2000094c:	00000000 	andeq	r0, r0, r0

20000950 <RDMIdentify::m_bIsEnabled>:
	...

20000951 <RDMIdentify::m_nMode>:
20000951:	 	andeq	r0, r0, r0

20000954 <RDMIdentify::s_pThis>:
20000954:	00000000 	andeq	r0, r0, r0

20000958 <DmxSend::s_nStarted>:
20000958:	00000000 	andeq	r0, r0, r0

2000095c <s_RxBuffer>:
	...

20000d7c <s_TxBuffer>:
	...

20001184 <sv_PortState>:
	...

2000118c <sv_nUartsSending>:
2000118c:	00000000 	andeq	r0, r0, r0

20001190 <Dmx::s_pThis>:
20001190:	00000000 	andeq	r0, r0, r0

20001194 <DmxConfigUdp::s_pUdpBuffer>:
20001194:	00000000 	andeq	r0, r0, r0

20001198 <PixelPatterns::m_PortConfig>:
	...

20001398 <PixelPatterns::m_nActivePorts>:
20001398:	00000000 	andeq	r0, r0, r0

2000139c <PixelPatterns::m_pScannerColours>:
2000139c:	00000000 	andeq	r0, r0, r0

200013a0 <PixelPatterns::m_nCount>:
200013a0:	00000000 	andeq	r0, r0, r0

200013a4 <PixelPatterns::m_pOutput>:
200013a4:	00000000 	andeq	r0, r0, r0

200013a8 <PixelTestPattern::s_Pattern>:
200013a8:	00000000 	andeq	r0, r0, r0

200013ac <sv_isRunning>:
200013ac:	00000000 	andeq	r0, r0, r0

200013b0 <WS28xxMulti::s_pThis>:
200013b0:	00000000 	andeq	r0, r0, r0

200013b4 <pixel::s_DmaBuffer>:
	...

200093b4 <g_ip_info>:
	...

200093c0 <g_mac_address>:
200093c0:	00000000 	andeq	r0, r0, r0
	...

200093c6 <s_is_dhcp>:
	...

200093c8 <s_p>:
200093c8:	00000000 	andeq	r0, r0, r0

200093cc <s_ticker>:
200093cc:	00000000 	andeq	r0, r0, r0

200093d0 <s_mac_address>:
	...

200093d8 <s_mac_address_arp_reply>:
	...

200093e0 <broadcast_mask>:
200093e0:	00000000 	andeq	r0, r0, r0

200093e4 <gw_ip>:
200093e4:	00000000 	andeq	r0, r0, r0

200093e8 <on_network_mask>:
200093e8:	00000000 	andeq	r0, r0, r0

200093ec <s_id>:
200093ec:	00000000 	andeq	r0, r0, r0

200093f0 <s_ports_allowed>:
	...

20009410 <s_recv_queue>:
	...

2000f0b0 <s_send_packet>:
	...

2000f69c <MDNS::s_nRemoteIp>:
2000f69c:	00000000 	andeq	r0, r0, r0

2000f6a0 <MDNS::s_nRemotePort>:
2000f6a0:	00000000 	andeq	r0, r0, r0

2000f6a4 <MDNS::s_nMulticastIp>:
2000f6a4:	00000000 	andeq	r0, r0, r0

2000f6a8 <MDNS::s_AnswerLocalIp>:
	...

2000f8ac <MDNS::s_ServiceRecords>:
	...

2000f8cc <MDNS::s_nBytesReceived>:
2000f8cc:	00000000 	andeq	r0, r0, r0

2000f8d0 <MDNS::s_ServiceRecordsData>:
	...

2000fad4 <MDNS::s_pName>:
2000fad4:	00000000 	andeq	r0, r0, r0

2000fad8 <MDNS::s_pBuffer>:
2000fad8:	00000000 	andeq	r0, r0, r0

2000fadc <Network::s_pThis>:
2000fadc:	00000000 	andeq	r0, r0, r0

2000fae0 <s_arp_announce>:
	...

2000fb0c <s_arp_reply>:
	...

2000fb38 <s_arp_request>:
	...

2000fb64 <s_dhcp_allocated_gw>:
2000fb64:	00000000 	andeq	r0, r0, r0

2000fb68 <s_dhcp_allocated_ip>:
2000fb68:	00000000 	andeq	r0, r0, r0

2000fb6c <s_dhcp_allocated_netmask>:
2000fb6c:	00000000 	andeq	r0, r0, r0

2000fb70 <s_dhcp_message>:
	...

2000fd94 <s_dhcp_server_ip>:
2000fd94:	00000000 	andeq	r0, r0, r0

2000fd98 <DisplayUdf::s_pThis>:
2000fd98:	00000000 	andeq	r0, r0, r0

2000fd9c <ConfigStore::s_nWaitMillis>:
2000fd9c:	00000000 	andeq	r0, r0, r0

2000fda0 <ConfigStore::s_nStartAddress>:
2000fda0:	00000000 	andeq	r0, r0, r0

2000fda4 <ConfigStore::s_bHaveFlashChip>:
2000fda4:	00000000 	andeq	r0, r0, r0

2000fda8 <ConfigStore::s_nSpiFlashStoreSize>:
2000fda8:	00000000 	andeq	r0, r0, r0

2000fdac <ConfigStore::s_State>:
2000fdac:	00000000 	andeq	r0, r0, r0

2000fdb0 <ConfigStore::s_pThis>:
2000fdb0:	00000000 	andeq	r0, r0, r0

2000fdb4 <ConfigStore::s_bIsNew>:
2000fdb4:	00000000 	andeq	r0, r0, r0

2000fdb8 <StoreDisplayUdf::s_pThis>:
2000fdb8:	00000000 	andeq	r0, r0, r0

2000fdbc <StoreDmxSend::s_pThis>:
2000fdbc:	00000000 	andeq	r0, r0, r0

2000fdc0 <StoreNetwork::s_pThis>:
2000fdc0:	00000000 	andeq	r0, r0, r0

2000fdc4 <StoreRemoteConfig::s_pThis>:
2000fdc4:	00000000 	andeq	r0, r0, r0

2000fdc8 <StorePixelDmx::s_pThis>:
2000fdc8:	00000000 	andeq	r0, r0, r0

2000fdcc <StoreRDMDevice::s_pThis>:
2000fdcc:	00000000 	andeq	r0, r0, r0

2000fdd0 <PropertiesConfig::s_Config>:
2000fdd0:	00000000 	andeq	r0, r0, r0

2000fdd4 <Display::s_pThis>:
2000fdd4:	00000000 	andeq	r0, r0, r0

2000fdd8 <_ClearBuffer>:
	...

2000fe60 <Ssd1306::s_pThis>:
2000fe60:	00000000 	andeq	r0, r0, r0

2000fe64 <FirmwareVersion::s_FirmwareVersion>:
	...

2000fe7a <FirmwareVersion::s_Print>:
	...

2000febc <FirmwareVersion::s_pThis>:
2000febc:	00000000 	andeq	r0, r0, r0

2000fec0 <LedBlink::s_pThis>:
2000fec0:	00000000 	andeq	r0, r0, r0

2000fec4 <Hardware::s_pThis>:
2000fec4:	00000000 	andeq	r0, r0, r0

2000fec8 <last.0>:
	...

2000fed0 <s_micros>:
	...

2000fed8 <set_timer>:
2000fed8:	00000000 	andeq	r0, r0, r0

2000fedc <s_nSysTickMillis>:
2000fedc:	00000000 	andeq	r0, r0, r0

2000fee0 <dma_current_ptp_rxdesc>:
2000fee0:	00000000 	andeq	r0, r0, r0

2000fee4 <dma_current_ptp_txdesc>:
2000fee4:	00000000 	andeq	r0, r0, r0

2000fee8 <dma_current_rxdesc>:
2000fee8:	00000000 	andeq	r0, r0, r0

2000feec <dma_current_txdesc>:
2000feec:	00000000 	andeq	r0, r0, r0

2000fef0 <enet_initpara>:
	...

2000ff2c <rx_buff>:
	...

20029fe4 <rxdesc_tab>:
	...

2002a444 <tx_buff>:
	...

2002d3e4 <txdesc_tab>:
	...

2002d464 <s_nAddress>:
2002d464:	00000000 	andeq	r0, r0, r0

Disassembly of section .tcmsram:

10000000 <s_tcp>:
	...

100005ec <s_id>:
100005ec:	00000000 	andeq	r0, r0, r0

100005f0 <s_tcb>:
	...

10000634 <s_recv_queue>:
	...

100011a4 <s_entry_current>:
100011a4:	00000000 	andeq	r0, r0, r0

100011a8 <s_arp_records>:
	...

10001328 <s_multicast_mac>:
	...

10001330 <s_report>:
	...

10001360 <s_id>:
10001360:	00000000 	andeq	r0, r0, r0

10001364 <s_leave>:
	...

10001394 <s_groups>:
	...

100014b4 <s_joins_allowed_index>:
100014b4:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

1000a000 <heap_low>:
	...

Disassembly of section .stack:

1000c000 <_sp-0x4000>:
	...

Disassembly of section .ramadd:

20030000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
