
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10010000 	andne	r0, r1, r0
 8008004:	08008bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, pc}
 8008008:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800800c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008010:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008014:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008018:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
	...
 800802c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008030:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800803c:	080149b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, fp, lr}
 8008040:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008044:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008048:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800804c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008050:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008054:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008058:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800805c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008060:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008064:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008068:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800806c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008070:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008074:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008078:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800807c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008080:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008084:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008088:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800808c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008090:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008094:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008098:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800809c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ac:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b0:	0800dd61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, lr, pc}
 80080b4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b8:	0800f9c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, ip, sp, lr, pc}
 80080bc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080cc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080dc:	0800dd49 	stmdaeq	r0, {r0, r3, r6, r8, sl, fp, ip, lr, pc}
 80080e0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ec:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080fc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008100:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008104:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008108:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800810c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008110:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008114:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008118:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800811c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008120:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008124:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008128:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800812c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008130:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008134:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008138:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800813c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008140:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008144:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008148:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800814c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008150:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008154:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008158:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800815c:	0800dd55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, ip, lr, pc}
 8008160:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008164:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008168:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800816c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008170:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008174:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008178:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008184:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008188:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800818c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008190:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008194:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008198:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

Disassembly of section .text:

080081ac <net_init>:
 80081ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081ae:	9e08      	ldr	r6, [sp, #32]
 80081b0:	460c      	mov	r4, r1
 80081b2:	4921      	ldr	r1, [pc, #132]	; (8008238 <net_init+0x8c>)
 80081b4:	461d      	mov	r5, r3
 80081b6:	1e43      	subs	r3, r0, #1
 80081b8:	3005      	adds	r0, #5
 80081ba:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80081be:	f801 7b01 	strb.w	r7, [r1], #1
 80081c2:	4283      	cmp	r3, r0
 80081c4:	d1f9      	bne.n	80081ba <net_init+0xe>
 80081c6:	491d      	ldr	r1, [pc, #116]	; (800823c <net_init+0x90>)
 80081c8:	f104 000c 	add.w	r0, r4, #12
 80081cc:	4623      	mov	r3, r4
 80081ce:	f813 7b01 	ldrb.w	r7, [r3], #1
 80081d2:	f801 7b01 	strb.w	r7, [r1], #1
 80081d6:	4283      	cmp	r3, r0
 80081d8:	d1f9      	bne.n	80081ce <net_init+0x22>
 80081da:	4918      	ldr	r1, [pc, #96]	; (800823c <net_init+0x90>)
 80081dc:	4816      	ldr	r0, [pc, #88]	; (8008238 <net_init+0x8c>)
 80081de:	9201      	str	r2, [sp, #4]
 80081e0:	2700      	movs	r7, #0
 80081e2:	f000 f99d 	bl	8008520 <ip_init>
 80081e6:	4814      	ldr	r0, [pc, #80]	; (8008238 <net_init+0x8c>)
 80081e8:	f000 f83a 	bl	8008260 <rfc3927_init>
 80081ec:	7037      	strb	r7, [r6, #0]
 80081ee:	782b      	ldrb	r3, [r5, #0]
 80081f0:	9a01      	ldr	r2, [sp, #4]
 80081f2:	b153      	cbz	r3, 800820a <net_init+0x5e>
 80081f4:	4911      	ldr	r1, [pc, #68]	; (800823c <net_init+0x90>)
 80081f6:	4810      	ldr	r0, [pc, #64]	; (8008238 <net_init+0x8c>)
 80081f8:	f00a fcce 	bl	8012b98 <dhcp_client>
 80081fc:	42b8      	cmp	r0, r7
 80081fe:	da04      	bge.n	800820a <net_init+0x5e>
 8008200:	480e      	ldr	r0, [pc, #56]	; (800823c <net_init+0x90>)
 8008202:	702f      	strb	r7, [r5, #0]
 8008204:	f008 fea6 	bl	8010f54 <rfc3927>
 8008208:	7030      	strb	r0, [r6, #0]
 800820a:	490c      	ldr	r1, [pc, #48]	; (800823c <net_init+0x90>)
 800820c:	480a      	ldr	r0, [pc, #40]	; (8008238 <net_init+0x8c>)
 800820e:	f000 f883 	bl	8008318 <arp_init>
 8008212:	480a      	ldr	r0, [pc, #40]	; (800823c <net_init+0x90>)
 8008214:	f00a feda 	bl	8012fcc <ip_set_ip>
 8008218:	f000 f82e 	bl	8008278 <tcp_init>
 800821c:	4a07      	ldr	r2, [pc, #28]	; (800823c <net_init+0x90>)
 800821e:	1e63      	subs	r3, r4, #1
 8008220:	340b      	adds	r4, #11
 8008222:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008226:	f803 1f01 	strb.w	r1, [r3, #1]!
 800822a:	429c      	cmp	r4, r3
 800822c:	d1f9      	bne.n	8008222 <net_init+0x76>
 800822e:	782a      	ldrb	r2, [r5, #0]
 8008230:	4b03      	ldr	r3, [pc, #12]	; (8008240 <net_init+0x94>)
 8008232:	701a      	strb	r2, [r3, #0]
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008238:	20009418 	andcs	r9, r0, r8, lsl r4
 800823c:	2000940c 	andcs	r9, r0, ip, lsl #8
 8008240:	2000941e 	andcs	r9, r0, lr, lsl r4

08008244 <net_shutdown>:
 8008244:	b508      	push	{r3, lr}
 8008246:	f000 f976 	bl	8008536 <ip_shutdown>
 800824a:	4b04      	ldr	r3, [pc, #16]	; (800825c <net_shutdown+0x18>)
 800824c:	781b      	ldrb	r3, [r3, #0]
 800824e:	b11b      	cbz	r3, 8008258 <net_shutdown+0x14>
 8008250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008254:	f00a bda8 	b.w	8012da8 <dhcp_client_release>
 8008258:	bd08      	pop	{r3, pc}
 800825a:	bf00      	nop
 800825c:	2000941e 	andcs	r9, r0, lr, lsl r4

08008260 <rfc3927_init>:
 8008260:	4b04      	ldr	r3, [pc, #16]	; (8008274 <rfc3927_init+0x14>)
 8008262:	1d82      	adds	r2, r0, #6
 8008264:	4290      	cmp	r0, r2
 8008266:	d100      	bne.n	800826a <rfc3927_init+0xa>
 8008268:	4770      	bx	lr
 800826a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800826e:	f803 1b01 	strb.w	r1, [r3], #1
 8008272:	e7f7      	b.n	8008264 <rfc3927_init+0x4>
 8008274:	20009428 	andcs	r9, r0, r8, lsr #8

08008278 <tcp_init>:
 8008278:	b513      	push	{r0, r1, r4, lr}
 800827a:	4c0c      	ldr	r4, [pc, #48]	; (80082ac <tcp_init+0x34>)
 800827c:	490c      	ldr	r1, [pc, #48]	; (80082b0 <tcp_init+0x38>)
 800827e:	2206      	movs	r2, #6
 8008280:	18a0      	adds	r0, r4, r2
 8008282:	f008 fec1 	bl	8011008 <memcpy.isra.0>
 8008286:	2308      	movs	r3, #8
 8008288:	81a3      	strh	r3, [r4, #12]
 800828a:	4b0a      	ldr	r3, [pc, #40]	; (80082b4 <tcp_init+0x3c>)
 800828c:	2204      	movs	r2, #4
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	eb0d 0102 	add.w	r1, sp, r2
 8008296:	f104 001a 	add.w	r0, r4, #26
 800829a:	f008 feb5 	bl	8011008 <memcpy.isra.0>
 800829e:	2345      	movs	r3, #69	; 0x45
 80082a0:	81e3      	strh	r3, [r4, #14]
 80082a2:	4b05      	ldr	r3, [pc, #20]	; (80082b8 <tcp_init+0x40>)
 80082a4:	6163      	str	r3, [r4, #20]
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	10000000 	andne	r0, r0, r0
 80082b0:	20009418 	andcs	r9, r0, r8, lsl r4
 80082b4:	2000940c 	andcs	r9, r0, ip, lsl #8
 80082b8:	06400040 	strbeq	r0, [r0], -r0, asr #32

080082bc <udp_init>:
 80082bc:	b570      	push	{r4, r5, r6, lr}
 80082be:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <udp_init+0x40>)
 80082c0:	460e      	mov	r6, r1
 80082c2:	490f      	ldr	r1, [pc, #60]	; (8008300 <udp_init+0x44>)
 80082c4:	2408      	movs	r4, #8
 80082c6:	2200      	movs	r2, #0
 80082c8:	3c01      	subs	r4, #1
 80082ca:	801a      	strh	r2, [r3, #0]
 80082cc:	805a      	strh	r2, [r3, #2]
 80082ce:	f841 2b04 	str.w	r2, [r1], #4
 80082d2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80082d6:	d1f7      	bne.n	80082c8 <udp_init+0xc>
 80082d8:	4d0a      	ldr	r5, [pc, #40]	; (8008304 <udp_init+0x48>)
 80082da:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <udp_init+0x4c>)
 80082dc:	2206      	movs	r2, #6
 80082de:	4601      	mov	r1, r0
 80082e0:	18a8      	adds	r0, r5, r2
 80082e2:	801c      	strh	r4, [r3, #0]
 80082e4:	f009 f82a 	bl	801133c <memcpy.isra.0>
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <udp_init+0x50>)
 80082ea:	60eb      	str	r3, [r5, #12]
 80082ec:	4630      	mov	r0, r6
 80082ee:	4b08      	ldr	r3, [pc, #32]	; (8008310 <udp_init+0x54>)
 80082f0:	616b      	str	r3, [r5, #20]
 80082f2:	f009 f84b 	bl	801138c <udp_set_ip>
 80082f6:	852c      	strh	r4, [r5, #40]	; 0x28
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	20009468 	andcs	r9, r0, r8, ror #8
 8008300:	20009448 	andcs	r9, r0, r8, asr #8
 8008304:	2000f108 	andcs	pc, r0, r8, lsl #2
 8008308:	20009444 	andcs	r9, r0, r4, asr #8
 800830c:	00450008 	subeq	r0, r5, r8
 8008310:	11400040 	cmpne	r0, r0, asr #32

08008314 <udp_shutdown>:
 8008314:	4770      	bx	lr
	...

08008318 <arp_init>:
 8008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800831c:	460d      	mov	r5, r1
 800831e:	4604      	mov	r4, r0
 8008320:	f000 f876 	bl	8008410 <arp_cache_init>
 8008324:	2206      	movs	r2, #6
 8008326:	482f      	ldr	r0, [pc, #188]	; (80083e4 <arp_init+0xcc>)
 8008328:	682f      	ldr	r7, [r5, #0]
 800832a:	4621      	mov	r1, r4
 800832c:	f00a fab6 	bl	801289c <memcpy.isra.0>
 8008330:	4b2d      	ldr	r3, [pc, #180]	; (80083e8 <arp_init+0xd0>)
 8008332:	2507      	movs	r5, #7
 8008334:	461e      	mov	r6, r3
 8008336:	22ff      	movs	r2, #255	; 0xff
 8008338:	3d01      	subs	r5, #1
 800833a:	d146      	bne.n	80083ca <arp_init+0xb2>
 800833c:	4b2b      	ldr	r3, [pc, #172]	; (80083ec <arp_init+0xd4>)
 800833e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800840c <arp_init+0xf4>
 8008342:	482b      	ldr	r0, [pc, #172]	; (80083f0 <arp_init+0xd8>)
 8008344:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8008348:	2206      	movs	r2, #6
 800834a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800834e:	4621      	mov	r1, r4
 8008350:	82b3      	strh	r3, [r6, #20]
 8008352:	f00a faa3 	bl	801289c <memcpy.isra.0>
 8008356:	4a27      	ldr	r2, [pc, #156]	; (80083f4 <arp_init+0xdc>)
 8008358:	61f7      	str	r7, [r6, #28]
 800835a:	2307      	movs	r3, #7
 800835c:	3b01      	subs	r3, #1
 800835e:	d137      	bne.n	80083d0 <arp_init+0xb8>
 8008360:	2206      	movs	r2, #6
 8008362:	4621      	mov	r1, r4
 8008364:	4824      	ldr	r0, [pc, #144]	; (80083f8 <arp_init+0xe0>)
 8008366:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800836a:	f00a fa97 	bl	801289c <memcpy.isra.0>
 800836e:	4a23      	ldr	r2, [pc, #140]	; (80083fc <arp_init+0xe4>)
 8008370:	2306      	movs	r3, #6
 8008372:	4615      	mov	r5, r2
 8008374:	21ff      	movs	r1, #255	; 0xff
 8008376:	3b01      	subs	r3, #1
 8008378:	d22d      	bcs.n	80083d6 <arp_init+0xbe>
 800837a:	4b1c      	ldr	r3, [pc, #112]	; (80083ec <arp_init+0xd4>)
 800837c:	4820      	ldr	r0, [pc, #128]	; (8008400 <arp_init+0xe8>)
 800837e:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8008382:	2206      	movs	r2, #6
 8008384:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008388:	4621      	mov	r1, r4
 800838a:	82ab      	strh	r3, [r5, #20]
 800838c:	f00a fa86 	bl	801289c <memcpy.isra.0>
 8008390:	4a1c      	ldr	r2, [pc, #112]	; (8008404 <arp_init+0xec>)
 8008392:	61ef      	str	r7, [r5, #28]
 8008394:	2307      	movs	r3, #7
 8008396:	2100      	movs	r1, #0
 8008398:	3b01      	subs	r3, #1
 800839a:	d11f      	bne.n	80083dc <arp_init+0xc4>
 800839c:	4d1a      	ldr	r5, [pc, #104]	; (8008408 <arp_init+0xf0>)
 800839e:	2206      	movs	r2, #6
 80083a0:	18a8      	adds	r0, r5, r2
 80083a2:	4621      	mov	r1, r4
 80083a4:	f00a fa7a 	bl	801289c <memcpy.isra.0>
 80083a8:	4b10      	ldr	r3, [pc, #64]	; (80083ec <arp_init+0xd4>)
 80083aa:	4621      	mov	r1, r4
 80083ac:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80083b0:	f105 0016 	add.w	r0, r5, #22
 80083b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80083b8:	2206      	movs	r2, #6
 80083ba:	82ab      	strh	r3, [r5, #20]
 80083bc:	f00a fa6e 	bl	801289c <memcpy.isra.0>
 80083c0:	61ef      	str	r7, [r5, #28]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f00a ba73 	b.w	80128b0 <arp_announce>
 80083ca:	f803 2b01 	strb.w	r2, [r3], #1
 80083ce:	e7b3      	b.n	8008338 <arp_init+0x20>
 80083d0:	f802 5b01 	strb.w	r5, [r2], #1
 80083d4:	e7c2      	b.n	800835c <arp_init+0x44>
 80083d6:	f802 1b01 	strb.w	r1, [r2], #1
 80083da:	e7cc      	b.n	8008376 <arp_init+0x5e>
 80083dc:	f802 1b01 	strb.w	r1, [r2], #1
 80083e0:	e7da      	b.n	8008398 <arp_init+0x80>
 80083e2:	bf00      	nop
 80083e4:	2000fb3e 	andcs	pc, r0, lr, lsr fp	; <UNPREDICTABLE>
 80083e8:	2000fb38 	andcs	pc, r0, r8, lsr fp	; <UNPREDICTABLE>
 80083ec:	01000608 	tsteq	r0, r8, lsl #12
 80083f0:	2000fb4e 	andcs	pc, r0, lr, asr #22
 80083f4:	2000fb58 	andcs	pc, r0, r8, asr fp	; <UNPREDICTABLE>
 80083f8:	2000fb96 	mulcs	r0, r6, fp
 80083fc:	2000fb90 	mulcs	r0, r0, fp
 8008400:	2000fba6 	andcs	pc, r0, r6, lsr #23
 8008404:	2000fbb0 			; <UNDEFINED> instruction: 0x2000fbb0
 8008408:	2000fb64 	andcs	pc, r0, r4, ror #22
 800840c:	04060008 	streq	r0, [r6], #-8

08008410 <arp_cache_init>:
 8008410:	4a0a      	ldr	r2, [pc, #40]	; (800843c <arp_cache_init+0x2c>)
 8008412:	2300      	movs	r3, #0
 8008414:	b510      	push	{r4, lr}
 8008416:	f822 3b08 	strh.w	r3, [r2], #8
 800841a:	4618      	mov	r0, r3
 800841c:	4611      	mov	r1, r2
 800841e:	f842 0c04 	str.w	r0, [r2, #-4]
 8008422:	1d94      	adds	r4, r2, #6
 8008424:	42a1      	cmp	r1, r4
 8008426:	d105      	bne.n	8008434 <arp_cache_init+0x24>
 8008428:	3303      	adds	r3, #3
 800842a:	2b60      	cmp	r3, #96	; 0x60
 800842c:	f102 020c 	add.w	r2, r2, #12
 8008430:	d1f4      	bne.n	800841c <arp_cache_init+0xc>
 8008432:	bd10      	pop	{r4, pc}
 8008434:	f801 0b01 	strb.w	r0, [r1], #1
 8008438:	e7f4      	b.n	8008424 <arp_cache_init+0x14>
 800843a:	bf00      	nop
 800843c:	100011a4 	andne	r1, r0, r4, lsr #3

08008440 <igmp_init>:
 8008440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008444:	2200      	movs	r2, #0
 8008446:	4b26      	ldr	r3, [pc, #152]	; (80084e0 <igmp_init+0xa0>)
 8008448:	4605      	mov	r5, r0
 800844a:	4608      	mov	r0, r1
 800844c:	4611      	mov	r1, r2
 800844e:	f103 0408 	add.w	r4, r3, #8
 8008452:	42a3      	cmp	r3, r4
 8008454:	d140      	bne.n	80084d8 <igmp_init+0x98>
 8008456:	3201      	adds	r2, #1
 8008458:	2a24      	cmp	r2, #36	; 0x24
 800845a:	d1f8      	bne.n	800844e <igmp_init+0xe>
 800845c:	4c21      	ldr	r4, [pc, #132]	; (80084e4 <igmp_init+0xa4>)
 800845e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80084f0 <igmp_init+0xb0>
 8008462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80084f4 <igmp_init+0xb4>
 8008466:	2600      	movs	r6, #0
 8008468:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
 800846c:	8726      	strh	r6, [r4, #56]	; 0x38
 800846e:	f00a fd11 	bl	8012e94 <igmp_set_ip>
 8008472:	2301      	movs	r3, #1
 8008474:	8023      	strh	r3, [r4, #0]
 8008476:	235e      	movs	r3, #94	; 0x5e
 8008478:	70a3      	strb	r3, [r4, #2]
 800847a:	2206      	movs	r2, #6
 800847c:	4629      	mov	r1, r5
 800847e:	f104 000e 	add.w	r0, r4, #14
 8008482:	f00a fcbf 	bl	8012e04 <memcpy.isra.0>
 8008486:	f240 4394 	movw	r3, #1172	; 0x494
 800848a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848c:	2316      	movs	r3, #22
 800848e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008490:	4b15      	ldr	r3, [pc, #84]	; (80084e8 <igmp_init+0xa8>)
 8008492:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008498:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800849c:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80084a0:	2206      	movs	r2, #6
 80084a2:	f8c4 901c 	str.w	r9, [r4, #28]
 80084a6:	f8c4 8014 	str.w	r8, [r4, #20]
 80084aa:	4629      	mov	r1, r5
 80084ac:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80084b0:	8327      	strh	r7, [r4, #24]
 80084b2:	85a6      	strh	r6, [r4, #44]	; 0x2c
 80084b4:	f00a fca6 	bl	8012e04 <memcpy.isra.0>
 80084b8:	23e0      	movs	r3, #224	; 0xe0
 80084ba:	4a0c      	ldr	r2, [pc, #48]	; (80084ec <igmp_init+0xac>)
 80084bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80084c0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80084c4:	e9c4 2317 	strd	r2, r3, [r4, #92]	; 0x5c
 80084c8:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
 80084cc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
 80084d0:	f8a4 704c 	strh.w	r7, [r4, #76]	; 0x4c
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80084d8:	f803 1b01 	strb.w	r1, [r3], #1
 80084dc:	e7b9      	b.n	8008452 <igmp_init+0x12>
 80084de:	bf00      	nop
 80084e0:	10001394 	mulne	r0, r4, r3
 80084e4:	10001328 	andne	r1, r0, r8, lsr #6
 80084e8:	005e0001 	subseq	r0, lr, r1
 80084ec:	04940200 	ldreq	r0, [r4], #512	; 0x200
 80084f0:	02010040 	andeq	r0, r1, #64	; 0x40
 80084f4:	00460008 	subeq	r0, r6, r8

080084f8 <igmp_shutdown>:
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	2500      	movs	r5, #0
 80084fc:	4c07      	ldr	r4, [pc, #28]	; (800851c <igmp_shutdown+0x24>)
 80084fe:	462e      	mov	r6, r5
 8008500:	6820      	ldr	r0, [r4, #0]
 8008502:	b120      	cbz	r0, 800850e <igmp_shutdown+0x16>
 8008504:	f00a fd22 	bl	8012f4c <igmp_leave>
 8008508:	6026      	str	r6, [r4, #0]
 800850a:	7166      	strb	r6, [r4, #5]
 800850c:	7126      	strb	r6, [r4, #4]
 800850e:	3501      	adds	r5, #1
 8008510:	2d24      	cmp	r5, #36	; 0x24
 8008512:	f104 0408 	add.w	r4, r4, #8
 8008516:	d1f3      	bne.n	8008500 <igmp_shutdown+0x8>
 8008518:	bd70      	pop	{r4, r5, r6, pc}
 800851a:	bf00      	nop
 800851c:	10001394 	mulne	r0, r4, r3

08008520 <ip_init>:
 8008520:	b538      	push	{r3, r4, r5, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	460d      	mov	r5, r1
 8008526:	f7ff fec9 	bl	80082bc <udp_init>
 800852a:	4629      	mov	r1, r5
 800852c:	4620      	mov	r0, r4
 800852e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008532:	f7ff bf85 	b.w	8008440 <igmp_init>

08008536 <ip_shutdown>:
 8008536:	b508      	push	{r3, lr}
 8008538:	f7ff ffde 	bl	80084f8 <igmp_shutdown>
 800853c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008540:	f7ff bee8 	b.w	8008314 <udp_shutdown>

08008544 <console_init>:
 8008544:	b508      	push	{r3, lr}
 8008546:	f00c f9df 	bl	8014908 <uart0_init>
 800854a:	4804      	ldr	r0, [pc, #16]	; (800855c <console_init+0x18>)
 800854c:	f00c fa06 	bl	801495c <uart0_puts>
 8008550:	4803      	ldr	r0, [pc, #12]	; (8008560 <console_init+0x1c>)
 8008552:	f00c fa03 	bl	801495c <uart0_puts>
 8008556:	2000      	movs	r0, #0
 8008558:	bd08      	pop	{r3, pc}
 800855a:	bf00      	nop
 800855c:	08016c51 	stmdaeq	r1, {r0, r4, r6, sl, fp, sp, lr}
 8008560:	08019f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip, pc}

08008564 <net_handle>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4c0c      	ldr	r4, [pc, #48]	; (8008598 <net_handle+0x34>)
 8008568:	4620      	mov	r0, r4
 800856a:	f00d f857 	bl	801561c <emac_eth_recv>
 800856e:	2800      	cmp	r0, #0
 8008570:	dd07      	ble.n	8008582 <net_handle+0x1e>
 8008572:	6820      	ldr	r0, [r4, #0]
 8008574:	8983      	ldrh	r3, [r0, #12]
 8008576:	2b08      	cmp	r3, #8
 8008578:	d107      	bne.n	800858a <net_handle+0x26>
 800857a:	f000 faab 	bl	8008ad4 <ip_handle>
 800857e:	f00d f861 	bl	8015644 <emac_free_pkt>
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008586:	f008 bcd5 	b.w	8010f34 <net_timers_run>
 800858a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800858e:	d1f6      	bne.n	800857e <net_handle+0x1a>
 8008590:	f000 fa44 	bl	8008a1c <arp_handle>
 8008594:	e7f3      	b.n	800857e <net_handle+0x1a>
 8008596:	bf00      	nop
 8008598:	20009420 	andcs	r9, r0, r0, lsr #8

0800859c <tcp_handle>:
 800859c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085a0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80085a2:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80085a6:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80085aa:	4cbd      	ldr	r4, [pc, #756]	; (80088a0 <tcp_handle+0x304>)
 80085ac:	ba5b      	rev16	r3, r3
 80085ae:	8443      	strh	r3, [r0, #34]	; 0x22
 80085b0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80085b2:	4605      	mov	r5, r0
 80085b4:	ba5b      	rev16	r3, r3
 80085b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80085b8:	f008 fd30 	bl	801101c <_bswap32>
 80085bc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80085be:	f8b4 25f0 	ldrh.w	r2, [r4, #1520]	; 0x5f0
 80085c2:	ba5b      	rev16	r3, r3
 80085c4:	862b      	strh	r3, [r5, #48]	; 0x30
 80085c6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80085c8:	ba5b      	rev16	r3, r3
 80085ca:	86ab      	strh	r3, [r5, #52]	; 0x34
 80085cc:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d152      	bne.n	8008678 <tcp_handle+0xdc>
 80085d2:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80085d6:	2b01      	cmp	r3, #1
 80085d8:	d00f      	beq.n	80085fa <tcp_handle+0x5e>
 80085da:	2204      	movs	r2, #4
 80085dc:	f105 011a 	add.w	r1, r5, #26
 80085e0:	4668      	mov	r0, sp
 80085e2:	f008 fd11 	bl	8011008 <memcpy.isra.0>
 80085e6:	f8b4 25f2 	ldrh.w	r2, [r4, #1522]	; 0x5f2
 80085ea:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d143      	bne.n	8008678 <tcp_handle+0xdc>
 80085f0:	f8d4 25f4 	ldr.w	r2, [r4, #1524]	; 0x5f4
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d13e      	bne.n	8008678 <tcp_handle+0xdc>
 80085fa:	2204      	movs	r2, #4
 80085fc:	eb0d 0002 	add.w	r0, sp, r2
 8008600:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8008604:	f008 fd00 	bl	8011008 <memcpy.isra.0>
 8008608:	2204      	movs	r2, #4
 800860a:	eb0d 0002 	add.w	r0, sp, r2
 800860e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8008612:	9e01      	ldr	r6, [sp, #4]
 8008614:	f008 fcf8 	bl	8011008 <memcpy.isra.0>
 8008618:	f894 2630 	ldrb.w	r2, [r4, #1584]	; 0x630
 800861c:	9f01      	ldr	r7, [sp, #4]
 800861e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8008622:	2a01      	cmp	r2, #1
 8008624:	d01e      	beq.n	8008664 <tcp_handle+0xc8>
 8008626:	1ed3      	subs	r3, r2, #3
 8008628:	2b07      	cmp	r3, #7
 800862a:	d825      	bhi.n	8008678 <tcp_handle+0xdc>
 800862c:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8008630:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8008634:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8008638:	fa98 f898 	rev16.w	r8, r8
 800863c:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 8008640:	f8b4 1628 	ldrh.w	r1, [r4, #1576]	; 0x628
 8008644:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8008648:	fa13 f888 	uxtah	r8, r3, r8
 800864c:	fa1f f888 	uxth.w	r8, r8
 8008650:	2900      	cmp	r1, #0
 8008652:	d14d      	bne.n	80086f0 <tcp_handle+0x154>
 8008654:	f1b8 0f00 	cmp.w	r8, #0
 8008658:	d178      	bne.n	800874c <tcp_handle+0x1b0>
 800865a:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800865e:	42bb      	cmp	r3, r7
 8008660:	d174      	bne.n	800874c <tcp_handle+0x1b0>
 8008662:	e053      	b.n	800870c <tcp_handle+0x170>
 8008664:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008668:	075a      	lsls	r2, r3, #29
 800866a:	d405      	bmi.n	8008678 <tcp_handle+0xdc>
 800866c:	06d8      	lsls	r0, r3, #27
 800866e:	d506      	bpl.n	800867e <tcp_handle+0xe2>
 8008670:	498c      	ldr	r1, [pc, #560]	; (80088a4 <tcp_handle+0x308>)
 8008672:	4628      	mov	r0, r5
 8008674:	f008 fd9c 	bl	80111b0 <_send_reset>
 8008678:	b004      	add	sp, #16
 800867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800867e:	0799      	lsls	r1, r3, #30
 8008680:	d5fa      	bpl.n	8008678 <tcp_handle+0xdc>
 8008682:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8008686:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800868a:	f105 011a 	add.w	r1, r5, #26
 800868e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008692:	4668      	mov	r0, sp
 8008694:	2204      	movs	r2, #4
 8008696:	f8a4 35f2 	strh.w	r3, [r4, #1522]	; 0x5f2
 800869a:	f008 fcb5 	bl	8011008 <memcpy.isra.0>
 800869e:	2206      	movs	r2, #6
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4881      	ldr	r0, [pc, #516]	; (80088a8 <tcp_handle+0x30c>)
 80086a4:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80086a8:	18a9      	adds	r1, r5, r2
 80086aa:	f008 fcad 	bl	8011008 <memcpy.isra.0>
 80086ae:	f8d4 2618 	ldr.w	r2, [r4, #1560]	; 0x618
 80086b2:	487c      	ldr	r0, [pc, #496]	; (80088a4 <tcp_handle+0x308>)
 80086b4:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 80086b8:	1c7b      	adds	r3, r7, #1
 80086ba:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086be:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 80086c2:	a901      	add	r1, sp, #4
 80086c4:	2312      	movs	r3, #18
 80086c6:	f88d 300c 	strb.w	r3, [sp, #12]
 80086ca:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80086ce:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80086d2:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80086d6:	f008 fcc7 	bl	8011068 <_tcp_send_package>
 80086da:	f8d4 3618 	ldr.w	r3, [r4, #1560]	; 0x618
 80086de:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80086e2:	1c5a      	adds	r2, r3, #1
 80086e4:	f8c4 2604 	str.w	r2, [r4, #1540]	; 0x604
 80086e8:	2303      	movs	r3, #3
 80086ea:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80086ee:	e7c3      	b.n	8008678 <tcp_handle+0xdc>
 80086f0:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80086f4:	eba3 0c07 	sub.w	ip, r3, r7
 80086f8:	f1b8 0f00 	cmp.w	r8, #0
 80086fc:	d10e      	bne.n	800871c <tcp_handle+0x180>
 80086fe:	f1bc 0f00 	cmp.w	ip, #0
 8008702:	dc23      	bgt.n	800874c <tcp_handle+0x1b0>
 8008704:	1afb      	subs	r3, r7, r3
 8008706:	1a5b      	subs	r3, r3, r1
 8008708:	2b00      	cmp	r3, #0
 800870a:	da1f      	bge.n	800874c <tcp_handle+0x1b0>
 800870c:	0743      	lsls	r3, r0, #29
 800870e:	d534      	bpl.n	800877a <tcp_handle+0x1de>
 8008710:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008714:	4863      	ldr	r0, [pc, #396]	; (80088a4 <tcp_handle+0x308>)
 8008716:	f008 fc5d 	bl	8010fd4 <_init_tcb>
 800871a:	e7ad      	b.n	8008678 <tcp_handle+0xdc>
 800871c:	f1bc 0f00 	cmp.w	ip, #0
 8008720:	dc06      	bgt.n	8008730 <tcp_handle+0x194>
 8008722:	eba7 0c03 	sub.w	ip, r7, r3
 8008726:	ebac 0c01 	sub.w	ip, ip, r1
 800872a:	f1bc 0f00 	cmp.w	ip, #0
 800872e:	dbed      	blt.n	800870c <tcp_handle+0x170>
 8008730:	eb08 0c07 	add.w	ip, r8, r7
 8008734:	f103 0e01 	add.w	lr, r3, #1
 8008738:	ebae 0e0c 	sub.w	lr, lr, ip
 800873c:	f1be 0f00 	cmp.w	lr, #0
 8008740:	dc04      	bgt.n	800874c <tcp_handle+0x1b0>
 8008742:	43db      	mvns	r3, r3
 8008744:	1a5b      	subs	r3, r3, r1
 8008746:	eb13 0f0c 	cmn.w	r3, ip
 800874a:	d4df      	bmi.n	800870c <tcp_handle+0x170>
 800874c:	0742      	lsls	r2, r0, #29
 800874e:	d506      	bpl.n	800875e <tcp_handle+0x1c2>
 8008750:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008754:	4853      	ldr	r0, [pc, #332]	; (80088a4 <tcp_handle+0x308>)
 8008756:	f008 fc3d 	bl	8010fd4 <_init_tcb>
 800875a:	2301      	movs	r3, #1
 800875c:	e7c5      	b.n	80086ea <tcp_handle+0x14e>
 800875e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008762:	9301      	str	r3, [sp, #4]
 8008764:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 8008768:	9302      	str	r3, [sp, #8]
 800876a:	484e      	ldr	r0, [pc, #312]	; (80088a4 <tcp_handle+0x308>)
 800876c:	2310      	movs	r3, #16
 800876e:	a901      	add	r1, sp, #4
 8008770:	f88d 300c 	strb.w	r3, [sp, #12]
 8008774:	f008 fc78 	bl	8011068 <_tcp_send_package>
 8008778:	e77e      	b.n	8008678 <tcp_handle+0xdc>
 800877a:	0781      	lsls	r1, r0, #30
 800877c:	d505      	bpl.n	800878a <tcp_handle+0x1ee>
 800877e:	2a03      	cmp	r2, #3
 8008780:	d0eb      	beq.n	800875a <tcp_handle+0x1be>
 8008782:	4948      	ldr	r1, [pc, #288]	; (80088a4 <tcp_handle+0x308>)
 8008784:	4628      	mov	r0, r5
 8008786:	f008 fd13 	bl	80111b0 <_send_reset>
 800878a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800878e:	06da      	lsls	r2, r3, #27
 8008790:	f57f af72 	bpl.w	8008678 <tcp_handle+0xdc>
 8008794:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008798:	3b03      	subs	r3, #3
 800879a:	2b07      	cmp	r3, #7
 800879c:	d81d      	bhi.n	80087da <tcp_handle+0x23e>
 800879e:	e8df f003 	tbb	[pc, r3]
 80087a2:	87878704 	strhi	r8, [r7, r4, lsl #14]
 80087a6:	c5ba8787 	ldrgt	r8, [sl, #1927]!	; 0x787
 80087aa:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80087ae:	1b9b      	subs	r3, r3, r6
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	dc0e      	bgt.n	80087d2 <tcp_handle+0x236>
 80087b4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80087b8:	1af3      	subs	r3, r6, r3
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	dc09      	bgt.n	80087d2 <tcp_handle+0x236>
 80087be:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80087c2:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80087c6:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80087ca:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80087ce:	2304      	movs	r3, #4
 80087d0:	e78b      	b.n	80086ea <tcp_handle+0x14e>
 80087d2:	4934      	ldr	r1, [pc, #208]	; (80088a4 <tcp_handle+0x308>)
 80087d4:	4628      	mov	r0, r5
 80087d6:	f008 fceb 	bl	80111b0 <_send_reset>
 80087da:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80087de:	3b04      	subs	r3, #4
 80087e0:	2b02      	cmp	r3, #2
 80087e2:	d837      	bhi.n	8008854 <tcp_handle+0x2b8>
 80087e4:	f1b8 0f00 	cmp.w	r8, #0
 80087e8:	d034      	beq.n	8008854 <tcp_handle+0x2b8>
 80087ea:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80087ee:	42bb      	cmp	r3, r7
 80087f0:	f040 80ad 	bne.w	800894e <tcp_handle+0x3b2>
 80087f4:	f8b4 7634 	ldrh.w	r7, [r4, #1588]	; 0x634
 80087f8:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80088ac <tcp_handle+0x310>
 80087fc:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8008800:	435f      	muls	r7, r3
 8008802:	1d38      	adds	r0, r7, #4
 8008804:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8008808:	4642      	mov	r2, r8
 800880a:	4449      	add	r1, r9
 800880c:	4450      	add	r0, sl
 800880e:	f008 fbfb 	bl	8011008 <memcpy.isra.0>
 8008812:	f8b4 2628 	ldrh.w	r2, [r4, #1576]	; 0x628
 8008816:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800881a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800881e:	f8a4 2628 	strh.w	r2, [r4, #1576]	; 0x628
 8008822:	4427      	add	r7, r4
 8008824:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008828:	f8a7 8bec 	strh.w	r8, [r7, #3052]	; 0xbec
 800882c:	4443      	add	r3, r8
 800882e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008832:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 8008836:	a901      	add	r1, sp, #4
 8008838:	2310      	movs	r3, #16
 800883a:	f1aa 0044 	sub.w	r0, sl, #68	; 0x44
 800883e:	f88d 300c 	strb.w	r3, [sp, #12]
 8008842:	f008 fc11 	bl	8011068 <_tcp_send_package>
 8008846:	f8b4 3634 	ldrh.w	r3, [r4, #1588]	; 0x634
 800884a:	3301      	adds	r3, #1
 800884c:	f003 0301 	and.w	r3, r3, #1
 8008850:	f8a4 3634 	strh.w	r3, [r4, #1588]	; 0x634
 8008854:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008858:	2b02      	cmp	r3, #2
 800885a:	f67f af0d 	bls.w	8008678 <tcp_handle+0xdc>
 800885e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008862:	07db      	lsls	r3, r3, #31
 8008864:	f57f af08 	bpl.w	8008678 <tcp_handle+0xdc>
 8008868:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800886c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008870:	480c      	ldr	r0, [pc, #48]	; (80088a4 <tcp_handle+0x308>)
 8008872:	3301      	adds	r3, #1
 8008874:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008878:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 800887c:	a901      	add	r1, sp, #4
 800887e:	2310      	movs	r3, #16
 8008880:	f88d 300c 	strb.w	r3, [sp, #12]
 8008884:	f008 fbf0 	bl	8011068 <_tcp_send_package>
 8008888:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 800888c:	2b05      	cmp	r3, #5
 800888e:	d067      	beq.n	8008960 <tcp_handle+0x3c4>
 8008890:	d861      	bhi.n	8008956 <tcp_handle+0x3ba>
 8008892:	3b03      	subs	r3, #3
 8008894:	2b01      	cmp	r3, #1
 8008896:	f63f aeef 	bhi.w	8008678 <tcp_handle+0xdc>
 800889a:	2307      	movs	r3, #7
 800889c:	e725      	b.n	80086ea <tcp_handle+0x14e>
 800889e:	bf00      	nop
 80088a0:	10000000 	andne	r0, r0, r0
 80088a4:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 80088a8:	100005f8 	strdne	r0, [r0], -r8
 80088ac:	10000634 	andne	r0, r0, r4, lsr r6
 80088b0:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80088b4:	1b99      	subs	r1, r3, r6
 80088b6:	d51a      	bpl.n	80088ee <tcp_handle+0x352>
 80088b8:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80088bc:	1ab2      	subs	r2, r6, r2
 80088be:	2a00      	cmp	r2, #0
 80088c0:	dc15      	bgt.n	80088ee <tcp_handle+0x352>
 80088c2:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80088c6:	f8d4 3610 	ldr.w	r3, [r4, #1552]	; 0x610
 80088ca:	1bda      	subs	r2, r3, r7
 80088cc:	2a00      	cmp	r2, #0
 80088ce:	db07      	blt.n	80088e0 <tcp_handle+0x344>
 80088d0:	42bb      	cmp	r3, r7
 80088d2:	d182      	bne.n	80087da <tcp_handle+0x23e>
 80088d4:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 80088d8:	1b9b      	subs	r3, r3, r6
 80088da:	2b00      	cmp	r3, #0
 80088dc:	f73f af7d 	bgt.w	80087da <tcp_handle+0x23e>
 80088e0:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80088e4:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80088e8:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80088ec:	e775      	b.n	80087da <tcp_handle+0x23e>
 80088ee:	1af3      	subs	r3, r6, r3
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	dc09      	bgt.n	8008908 <tcp_handle+0x36c>
 80088f4:	2900      	cmp	r1, #0
 80088f6:	f73f af70 	bgt.w	80087da <tcp_handle+0x23e>
 80088fa:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80088fe:	1af3      	subs	r3, r6, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f73f af6a 	bgt.w	80087da <tcp_handle+0x23e>
 8008906:	e7de      	b.n	80088c6 <tcp_handle+0x32a>
 8008908:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800890c:	1b9a      	subs	r2, r3, r6
 800890e:	2a00      	cmp	r2, #0
 8008910:	f6bf af63 	bge.w	80087da <tcp_handle+0x23e>
 8008914:	e725      	b.n	8008762 <tcp_handle+0x1c6>
 8008916:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800891a:	42b3      	cmp	r3, r6
 800891c:	f47f af5d 	bne.w	80087da <tcp_handle+0x23e>
 8008920:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008924:	4811      	ldr	r0, [pc, #68]	; (800896c <tcp_handle+0x3d0>)
 8008926:	f008 fb55 	bl	8010fd4 <_init_tcb>
 800892a:	e756      	b.n	80087da <tcp_handle+0x23e>
 800892c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008930:	42b3      	cmp	r3, r6
 8008932:	f47f af52 	bne.w	80087da <tcp_handle+0x23e>
 8008936:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800893a:	9302      	str	r3, [sp, #8]
 800893c:	480b      	ldr	r0, [pc, #44]	; (800896c <tcp_handle+0x3d0>)
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	2310      	movs	r3, #16
 8008942:	a901      	add	r1, sp, #4
 8008944:	f88d 300c 	strb.w	r3, [sp, #12]
 8008948:	f008 fb8e 	bl	8011068 <_tcp_send_package>
 800894c:	e745      	b.n	80087da <tcp_handle+0x23e>
 800894e:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008952:	9201      	str	r2, [sp, #4]
 8008954:	e708      	b.n	8008768 <tcp_handle+0x1cc>
 8008956:	2b06      	cmp	r3, #6
 8008958:	f47f ae8e 	bne.w	8008678 <tcp_handle+0xdc>
 800895c:	230a      	movs	r3, #10
 800895e:	e6c4      	b.n	80086ea <tcp_handle+0x14e>
 8008960:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008964:	42b3      	cmp	r3, r6
 8008966:	d0f9      	beq.n	800895c <tcp_handle+0x3c0>
 8008968:	2308      	movs	r3, #8
 800896a:	e6be      	b.n	80086ea <tcp_handle+0x14e>
 800896c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08008970 <udp_handle>:
 8008970:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008974:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8008976:	ba5b      	rev16	r3, r3
 8008978:	b29b      	uxth	r3, r3
 800897a:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800897e:	2a01      	cmp	r2, #1
 8008980:	4607      	mov	r7, r0
 8008982:	d904      	bls.n	800898e <udp_handle+0x1e>
 8008984:	2b7b      	cmp	r3, #123	; 0x7b
 8008986:	d002      	beq.n	800898e <udp_handle+0x1e>
 8008988:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800898c:	d308      	bcc.n	80089a0 <udp_handle+0x30>
 800898e:	4a21      	ldr	r2, [pc, #132]	; (8008a14 <udp_handle+0xa4>)
 8008990:	2400      	movs	r4, #0
 8008992:	f852 1b04 	ldr.w	r1, [r2], #4
 8008996:	4299      	cmp	r1, r3
 8008998:	d005      	beq.n	80089a6 <udp_handle+0x36>
 800899a:	3401      	adds	r4, #1
 800899c:	2c08      	cmp	r4, #8
 800899e:	d1f8      	bne.n	8008992 <udp_handle+0x22>
 80089a0:	b002      	add	sp, #8
 80089a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a6:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80089a8:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8008a18 <udp_handle+0xa8>
 80089ac:	f640 3394 	movw	r3, #2964	; 0xb94
 80089b0:	435c      	muls	r4, r3
 80089b2:	ba76      	rev16	r6, r6
 80089b4:	f838 5004 	ldrh.w	r5, [r8, r4]
 80089b8:	3e08      	subs	r6, #8
 80089ba:	b2b6      	uxth	r6, r6
 80089bc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80089c0:	435d      	muls	r5, r3
 80089c2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80089c6:	f104 0004 	add.w	r0, r4, #4
 80089ca:	bf28      	it	cs
 80089cc:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 80089d0:	4428      	add	r0, r5
 80089d2:	4632      	mov	r2, r6
 80089d4:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 80089d8:	4440      	add	r0, r8
 80089da:	f008 fcaf 	bl	801133c <memcpy.isra.0>
 80089de:	2204      	movs	r2, #4
 80089e0:	eb0d 0002 	add.w	r0, sp, r2
 80089e4:	f107 011a 	add.w	r1, r7, #26
 80089e8:	f008 fca8 	bl	801133c <memcpy.isra.0>
 80089ec:	192b      	adds	r3, r5, r4
 80089ee:	4443      	add	r3, r8
 80089f0:	9a01      	ldr	r2, [sp, #4]
 80089f2:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80089f6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80089f8:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80089fc:	ba52      	rev16	r2, r2
 80089fe:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8008a02:	f838 3004 	ldrh.w	r3, [r8, r4]
 8008a06:	3301      	adds	r3, #1
 8008a08:	f003 0301 	and.w	r3, r3, #1
 8008a0c:	f828 3004 	strh.w	r3, [r8, r4]
 8008a10:	e7c6      	b.n	80089a0 <udp_handle+0x30>
 8008a12:	bf00      	nop
 8008a14:	20009448 	andcs	r9, r0, r8, asr #8
 8008a18:	20009468 	andcs	r9, r0, r8, ror #8

08008a1c <arp_handle>:
 8008a1c:	8a83      	ldrh	r3, [r0, #20]
 8008a1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a22:	d003      	beq.n	8008a2c <arp_handle+0x10>
 8008a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a28:	d002      	beq.n	8008a30 <arp_handle+0x14>
 8008a2a:	4770      	bx	lr
 8008a2c:	f009 bf4a 	b.w	80128c4 <arp_handle_request>
 8008a30:	f009 bf70 	b.w	8012914 <arp_handle_reply>

08008a34 <igmp_handle>:
 8008a34:	7b83      	ldrb	r3, [r0, #14]
 8008a36:	2b45      	cmp	r3, #69	; 0x45
 8008a38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a3c:	d117      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a3e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008a42:	2b11      	cmp	r3, #17
 8008a44:	d113      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a46:	4b21      	ldr	r3, [pc, #132]	; (8008acc <igmp_handle+0x98>)
 8008a48:	9300      	str	r3, [sp, #0]
 8008a4a:	f100 051d 	add.w	r5, r0, #29
 8008a4e:	466a      	mov	r2, sp
 8008a50:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8008a54:	462b      	mov	r3, r5
 8008a56:	42b3      	cmp	r3, r6
 8008a58:	d10c      	bne.n	8008a74 <igmp_handle+0x40>
 8008a5a:	2401      	movs	r4, #1
 8008a5c:	4b1c      	ldr	r3, [pc, #112]	; (8008ad0 <igmp_handle+0x9c>)
 8008a5e:	2100      	movs	r1, #0
 8008a60:	f8d3 718c 	ldr.w	r7, [r3, #396]	; 0x18c
 8008a64:	f04f 0c01 	mov.w	ip, #1
 8008a68:	336c      	adds	r3, #108	; 0x6c
 8008a6a:	428f      	cmp	r7, r1
 8008a6c:	d10a      	bne.n	8008a84 <igmp_handle+0x50>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a74:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008a78:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8008a7c:	428c      	cmp	r4, r1
 8008a7e:	d0ea      	beq.n	8008a56 <igmp_handle+0x22>
 8008a80:	2400      	movs	r4, #0
 8008a82:	e7eb      	b.n	8008a5c <igmp_handle+0x28>
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	9201      	str	r2, [sp, #4]
 8008a88:	b924      	cbnz	r4, 8008a94 <igmp_handle+0x60>
 8008a8a:	f10d 0e04 	add.w	lr, sp, #4
 8008a8e:	462a      	mov	r2, r5
 8008a90:	42b2      	cmp	r2, r6
 8008a92:	d10e      	bne.n	8008ab2 <igmp_handle+0x7e>
 8008a94:	f893 e005 	ldrb.w	lr, [r3, #5]
 8008a98:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 8008a9c:	f1be 0f01 	cmp.w	lr, #1
 8008aa0:	d110      	bne.n	8008ac4 <igmp_handle+0x90>
 8008aa2:	f893 e004 	ldrb.w	lr, [r3, #4]
 8008aa6:	4596      	cmp	lr, r2
 8008aa8:	d909      	bls.n	8008abe <igmp_handle+0x8a>
 8008aaa:	0852      	lsrs	r2, r2, #1
 8008aac:	3201      	adds	r2, #1
 8008aae:	711a      	strb	r2, [r3, #4]
 8008ab0:	e005      	b.n	8008abe <igmp_handle+0x8a>
 8008ab2:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8008ab6:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 8008aba:	45c1      	cmp	r9, r8
 8008abc:	d0e8      	beq.n	8008a90 <igmp_handle+0x5c>
 8008abe:	3101      	adds	r1, #1
 8008ac0:	3308      	adds	r3, #8
 8008ac2:	e7d2      	b.n	8008a6a <igmp_handle+0x36>
 8008ac4:	f883 c005 	strb.w	ip, [r3, #5]
 8008ac8:	e7ef      	b.n	8008aaa <igmp_handle+0x76>
 8008aca:	bf00      	nop
 8008acc:	010000e0 	smlatteq	r0, r0, r0, r0
 8008ad0:	10001328 	andne	r1, r0, r8, lsr #6

08008ad4 <ip_handle>:
 8008ad4:	7b82      	ldrb	r2, [r0, #14]
 8008ad6:	7dc3      	ldrb	r3, [r0, #23]
 8008ad8:	2a45      	cmp	r2, #69	; 0x45
 8008ada:	d003      	beq.n	8008ae4 <ip_handle+0x10>
 8008adc:	2b02      	cmp	r3, #2
 8008ade:	d111      	bne.n	8008b04 <ip_handle+0x30>
 8008ae0:	f7ff bfa8 	b.w	8008a34 <igmp_handle>
 8008ae4:	2b06      	cmp	r3, #6
 8008ae6:	d00b      	beq.n	8008b00 <ip_handle+0x2c>
 8008ae8:	d804      	bhi.n	8008af4 <ip_handle+0x20>
 8008aea:	2b01      	cmp	r3, #1
 8008aec:	d006      	beq.n	8008afc <ip_handle+0x28>
 8008aee:	2b02      	cmp	r3, #2
 8008af0:	d0f6      	beq.n	8008ae0 <ip_handle+0xc>
 8008af2:	4770      	bx	lr
 8008af4:	2b11      	cmp	r3, #17
 8008af6:	d105      	bne.n	8008b04 <ip_handle+0x30>
 8008af8:	f7ff bf3a 	b.w	8008970 <udp_handle>
 8008afc:	f000 b804 	b.w	8008b08 <icmp_handle>
 8008b00:	f7ff bd4c 	b.w	800859c <tcp_handle>
 8008b04:	4770      	bx	lr
	...

08008b08 <icmp_handle>:
 8008b08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b0a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008b0e:	2b08      	cmp	r3, #8
 8008b10:	4604      	mov	r4, r0
 8008b12:	d13e      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b14:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8008b18:	2d00      	cmp	r5, #0
 8008b1a:	d13a      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b1c:	1d86      	adds	r6, r0, #6
 8008b1e:	4631      	mov	r1, r6
 8008b20:	2206      	movs	r2, #6
 8008b22:	f00a fa76 	bl	8013012 <memcpy.isra.0>
 8008b26:	4630      	mov	r0, r6
 8008b28:	491b      	ldr	r1, [pc, #108]	; (8008b98 <icmp_handle+0x90>)
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	f00a fa71 	bl	8013012 <memcpy.isra.0>
 8008b30:	8a63      	ldrh	r3, [r4, #18]
 8008b32:	f104 061a 	add.w	r6, r4, #26
 8008b36:	43db      	mvns	r3, r3
 8008b38:	4631      	mov	r1, r6
 8008b3a:	8263      	strh	r3, [r4, #18]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	f104 001e 	add.w	r0, r4, #30
 8008b42:	f00a fa66 	bl	8013012 <memcpy.isra.0>
 8008b46:	4b15      	ldr	r3, [pc, #84]	; (8008b9c <icmp_handle+0x94>)
 8008b48:	2204      	movs	r2, #4
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	9301      	str	r3, [sp, #4]
 8008b4e:	eb0d 0102 	add.w	r1, sp, r2
 8008b52:	4630      	mov	r0, r6
 8008b54:	f104 060e 	add.w	r6, r4, #14
 8008b58:	f00a fa5b 	bl	8013012 <memcpy.isra.0>
 8008b5c:	2114      	movs	r1, #20
 8008b5e:	7625      	strb	r5, [r4, #24]
 8008b60:	7665      	strb	r5, [r4, #25]
 8008b62:	4630      	mov	r0, r6
 8008b64:	f00a fa3b 	bl	8012fde <net_chksum>
 8008b68:	8a21      	ldrh	r1, [r4, #16]
 8008b6a:	8320      	strh	r0, [r4, #24]
 8008b6c:	ba49      	rev16	r1, r1
 8008b6e:	b289      	uxth	r1, r1
 8008b70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8008b74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8008b78:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8008b7c:	4630      	mov	r0, r6
 8008b7e:	f00a fa2e 	bl	8012fde <net_chksum>
 8008b82:	8a21      	ldrh	r1, [r4, #16]
 8008b84:	84a0      	strh	r0, [r4, #36]	; 0x24
 8008b86:	ba49      	rev16	r1, r1
 8008b88:	b289      	uxth	r1, r1
 8008b8a:	310e      	adds	r1, #14
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f00c fd5d 	bl	801564c <emac_eth_send>
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop
 8008b98:	20009418 	andcs	r9, r0, r8, lsl r4
 8008b9c:	2000940c 	andcs	r9, r0, ip, lsl #8
 8008ba0:	0801a00c 	stmdaeq	r1, {r2, r3, sp, pc}
 8008ba4:	20000000 	andcs	r0, r0, r0
 8008ba8:	200000f8 	strdcs	r0, [r0], -r8
 8008bac:	200000f8 	strdcs	r0, [r0], -r8
 8008bb0:	2002d488 	andcs	sp, r2, r8, lsl #9

08008bb4 <Reset_Handler>:
 8008bb4:	2100      	movs	r1, #0
 8008bb6:	e003      	b.n	8008bc0 <DataInit>

08008bb8 <CopyData>:
 8008bb8:	4b0a      	ldr	r3, [pc, #40]	; (8008be4 <Zerobss+0x10>)
 8008bba:	585b      	ldr	r3, [r3, r1]
 8008bbc:	5043      	str	r3, [r0, r1]
 8008bbe:	3104      	adds	r1, #4

08008bc0 <DataInit>:
 8008bc0:	4809      	ldr	r0, [pc, #36]	; (8008be8 <Zerobss+0x14>)
 8008bc2:	4b0a      	ldr	r3, [pc, #40]	; (8008bec <Zerobss+0x18>)
 8008bc4:	1842      	adds	r2, r0, r1
 8008bc6:	429a      	cmp	r2, r3
 8008bc8:	d3f6      	bcc.n	8008bb8 <CopyData>
 8008bca:	4a09      	ldr	r2, [pc, #36]	; (8008bf0 <Zerobss+0x1c>)
 8008bcc:	e002      	b.n	8008bd4 <Zerobss>

08008bce <FillZerobss>:
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f842 3b04 	str.w	r3, [r2], #4

08008bd4 <Zerobss>:
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <Zerobss+0x20>)
 8008bd6:	429a      	cmp	r2, r3
 8008bd8:	d3f9      	bcc.n	8008bce <FillZerobss>
 8008bda:	f00b fef5 	bl	80149c8 <SystemInit>
 8008bde:	f000 fc4d 	bl	800947c <main>
 8008be2:	4770      	bx	lr
 8008be4:	0801a00c 	stmdaeq	r1, {r2, r3, sp, pc}
 8008be8:	20000000 	andcs	r0, r0, r0
 8008bec:	200000f8 	strdcs	r0, [r0], -r8
 8008bf0:	200000f8 	strdcs	r0, [r0], -r8
 8008bf4:	2002d488 	andcs	sp, r2, r8, lsl #9

08008bf8 <__aeabi_d2f>:
 8008bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8008c00:	bf24      	itt	cs
 8008c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8008c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8008c0a:	d90d      	bls.n	8008c28 <__aeabi_d2f+0x30>
 8008c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8008c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008c20:	bf08      	it	eq
 8008c22:	f020 0001 	biceq.w	r0, r0, #1
 8008c26:	4770      	bx	lr
 8008c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8008c2c:	d121      	bne.n	8008c72 <__aeabi_d2f+0x7a>
 8008c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8008c32:	bfbc      	itt	lt
 8008c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8008c38:	4770      	bxlt	lr
 8008c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008c42:	f1c2 0218 	rsb	r2, r2, #24
 8008c46:	f1c2 0c20 	rsb	ip, r2, #32
 8008c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8008c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8008c52:	bf18      	it	ne
 8008c54:	f040 0001 	orrne.w	r0, r0, #1
 8008c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008c64:	ea40 000c 	orr.w	r0, r0, ip
 8008c68:	fa23 f302 	lsr.w	r3, r3, r2
 8008c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008c70:	e7cc      	b.n	8008c0c <__aeabi_d2f+0x14>
 8008c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008c76:	d107      	bne.n	8008c88 <__aeabi_d2f+0x90>
 8008c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008c7c:	bf1e      	ittt	ne
 8008c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8008c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8008c86:	4770      	bxne	lr
 8008c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8008c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop

08008c98 <__aeabi_uldivmod>:
 8008c98:	b953      	cbnz	r3, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9a:	b94a      	cbnz	r2, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9c:	2900      	cmp	r1, #0
 8008c9e:	bf08      	it	eq
 8008ca0:	2800      	cmpeq	r0, #0
 8008ca2:	bf1c      	itt	ne
 8008ca4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008ca8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008cac:	f000 b80c 	b.w	8008cc8 <__aeabi_idiv0>
 8008cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8008cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008cb8:	f001 fb5a 	bl	800a370 <__udivmoddi4>
 8008cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr

08008cc8 <__aeabi_idiv0>:
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop

08008ccc <__aeabi_drsub>:
 8008ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008cd0:	e002      	b.n	8008cd8 <__adddf3>
 8008cd2:	bf00      	nop

08008cd4 <__aeabi_dsub>:
 8008cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008cd8 <__adddf3>:
 8008cd8:	b530      	push	{r4, r5, lr}
 8008cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008ce2:	ea94 0f05 	teq	r4, r5
 8008ce6:	bf08      	it	eq
 8008ce8:	ea90 0f02 	teqeq	r0, r2
 8008cec:	bf1f      	itttt	ne
 8008cee:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008cfe:	f000 80e2 	beq.w	8008ec6 <__adddf3+0x1ee>
 8008d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008d0a:	bfb8      	it	lt
 8008d0c:	426d      	neglt	r5, r5
 8008d0e:	dd0c      	ble.n	8008d2a <__adddf3+0x52>
 8008d10:	442c      	add	r4, r5
 8008d12:	ea80 0202 	eor.w	r2, r0, r2
 8008d16:	ea81 0303 	eor.w	r3, r1, r3
 8008d1a:	ea82 0000 	eor.w	r0, r2, r0
 8008d1e:	ea83 0101 	eor.w	r1, r3, r1
 8008d22:	ea80 0202 	eor.w	r2, r0, r2
 8008d26:	ea81 0303 	eor.w	r3, r1, r3
 8008d2a:	2d36      	cmp	r5, #54	; 0x36
 8008d2c:	bf88      	it	hi
 8008d2e:	bd30      	pophi	{r4, r5, pc}
 8008d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008d40:	d002      	beq.n	8008d48 <__adddf3+0x70>
 8008d42:	4240      	negs	r0, r0
 8008d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008d54:	d002      	beq.n	8008d5c <__adddf3+0x84>
 8008d56:	4252      	negs	r2, r2
 8008d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5c:	ea94 0f05 	teq	r4, r5
 8008d60:	f000 80a7 	beq.w	8008eb2 <__adddf3+0x1da>
 8008d64:	f1a4 0401 	sub.w	r4, r4, #1
 8008d68:	f1d5 0e20 	rsbs	lr, r5, #32
 8008d6c:	db0d      	blt.n	8008d8a <__adddf3+0xb2>
 8008d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008d72:	fa22 f205 	lsr.w	r2, r2, r5
 8008d76:	1880      	adds	r0, r0, r2
 8008d78:	f141 0100 	adc.w	r1, r1, #0
 8008d7c:	fa03 f20e 	lsl.w	r2, r3, lr
 8008d80:	1880      	adds	r0, r0, r2
 8008d82:	fa43 f305 	asr.w	r3, r3, r5
 8008d86:	4159      	adcs	r1, r3
 8008d88:	e00e      	b.n	8008da8 <__adddf3+0xd0>
 8008d8a:	f1a5 0520 	sub.w	r5, r5, #32
 8008d8e:	f10e 0e20 	add.w	lr, lr, #32
 8008d92:	2a01      	cmp	r2, #1
 8008d94:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008d98:	bf28      	it	cs
 8008d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008d9e:	fa43 f305 	asr.w	r3, r3, r5
 8008da2:	18c0      	adds	r0, r0, r3
 8008da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008dac:	d507      	bpl.n	8008dbe <__adddf3+0xe6>
 8008dae:	f04f 0e00 	mov.w	lr, #0
 8008db2:	f1dc 0c00 	rsbs	ip, ip, #0
 8008db6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008dba:	eb6e 0101 	sbc.w	r1, lr, r1
 8008dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008dc2:	d31b      	bcc.n	8008dfc <__adddf3+0x124>
 8008dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008dc8:	d30c      	bcc.n	8008de4 <__adddf3+0x10c>
 8008dca:	0849      	lsrs	r1, r1, #1
 8008dcc:	ea5f 0030 	movs.w	r0, r0, rrx
 8008dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008dd4:	f104 0401 	add.w	r4, r4, #1
 8008dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008de0:	f080 809a 	bcs.w	8008f18 <__adddf3+0x240>
 8008de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008de8:	bf08      	it	eq
 8008dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008dee:	f150 0000 	adcs.w	r0, r0, #0
 8008df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008df6:	ea41 0105 	orr.w	r1, r1, r5
 8008dfa:	bd30      	pop	{r4, r5, pc}
 8008dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008e00:	4140      	adcs	r0, r0
 8008e02:	eb41 0101 	adc.w	r1, r1, r1
 8008e06:	3c01      	subs	r4, #1
 8008e08:	bf28      	it	cs
 8008e0a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8008e0e:	d2e9      	bcs.n	8008de4 <__adddf3+0x10c>
 8008e10:	f091 0f00 	teq	r1, #0
 8008e14:	bf04      	itt	eq
 8008e16:	4601      	moveq	r1, r0
 8008e18:	2000      	moveq	r0, #0
 8008e1a:	fab1 f381 	clz	r3, r1
 8008e1e:	bf08      	it	eq
 8008e20:	3320      	addeq	r3, #32
 8008e22:	f1a3 030b 	sub.w	r3, r3, #11
 8008e26:	f1b3 0220 	subs.w	r2, r3, #32
 8008e2a:	da0c      	bge.n	8008e46 <__adddf3+0x16e>
 8008e2c:	320c      	adds	r2, #12
 8008e2e:	dd08      	ble.n	8008e42 <__adddf3+0x16a>
 8008e30:	f102 0c14 	add.w	ip, r2, #20
 8008e34:	f1c2 020c 	rsb	r2, r2, #12
 8008e38:	fa01 f00c 	lsl.w	r0, r1, ip
 8008e3c:	fa21 f102 	lsr.w	r1, r1, r2
 8008e40:	e00c      	b.n	8008e5c <__adddf3+0x184>
 8008e42:	f102 0214 	add.w	r2, r2, #20
 8008e46:	bfd8      	it	le
 8008e48:	f1c2 0c20 	rsble	ip, r2, #32
 8008e4c:	fa01 f102 	lsl.w	r1, r1, r2
 8008e50:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008e54:	bfdc      	itt	le
 8008e56:	ea41 010c 	orrle.w	r1, r1, ip
 8008e5a:	4090      	lslle	r0, r2
 8008e5c:	1ae4      	subs	r4, r4, r3
 8008e5e:	bfa2      	ittt	ge
 8008e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008e64:	4329      	orrge	r1, r5
 8008e66:	bd30      	popge	{r4, r5, pc}
 8008e68:	ea6f 0404 	mvn.w	r4, r4
 8008e6c:	3c1f      	subs	r4, #31
 8008e6e:	da1c      	bge.n	8008eaa <__adddf3+0x1d2>
 8008e70:	340c      	adds	r4, #12
 8008e72:	dc0e      	bgt.n	8008e92 <__adddf3+0x1ba>
 8008e74:	f104 0414 	add.w	r4, r4, #20
 8008e78:	f1c4 0220 	rsb	r2, r4, #32
 8008e7c:	fa20 f004 	lsr.w	r0, r0, r4
 8008e80:	fa01 f302 	lsl.w	r3, r1, r2
 8008e84:	ea40 0003 	orr.w	r0, r0, r3
 8008e88:	fa21 f304 	lsr.w	r3, r1, r4
 8008e8c:	ea45 0103 	orr.w	r1, r5, r3
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	f1c4 040c 	rsb	r4, r4, #12
 8008e96:	f1c4 0220 	rsb	r2, r4, #32
 8008e9a:	fa20 f002 	lsr.w	r0, r0, r2
 8008e9e:	fa01 f304 	lsl.w	r3, r1, r4
 8008ea2:	ea40 0003 	orr.w	r0, r0, r3
 8008ea6:	4629      	mov	r1, r5
 8008ea8:	bd30      	pop	{r4, r5, pc}
 8008eaa:	fa21 f004 	lsr.w	r0, r1, r4
 8008eae:	4629      	mov	r1, r5
 8008eb0:	bd30      	pop	{r4, r5, pc}
 8008eb2:	f094 0f00 	teq	r4, #0
 8008eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008eba:	bf06      	itte	eq
 8008ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008ec0:	3401      	addeq	r4, #1
 8008ec2:	3d01      	subne	r5, #1
 8008ec4:	e74e      	b.n	8008d64 <__adddf3+0x8c>
 8008ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008eca:	bf18      	it	ne
 8008ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008ed0:	d029      	beq.n	8008f26 <__adddf3+0x24e>
 8008ed2:	ea94 0f05 	teq	r4, r5
 8008ed6:	bf08      	it	eq
 8008ed8:	ea90 0f02 	teqeq	r0, r2
 8008edc:	d005      	beq.n	8008eea <__adddf3+0x212>
 8008ede:	ea54 0c00 	orrs.w	ip, r4, r0
 8008ee2:	bf04      	itt	eq
 8008ee4:	4619      	moveq	r1, r3
 8008ee6:	4610      	moveq	r0, r2
 8008ee8:	bd30      	pop	{r4, r5, pc}
 8008eea:	ea91 0f03 	teq	r1, r3
 8008eee:	bf1e      	ittt	ne
 8008ef0:	2100      	movne	r1, #0
 8008ef2:	2000      	movne	r0, #0
 8008ef4:	bd30      	popne	{r4, r5, pc}
 8008ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008efa:	d105      	bne.n	8008f08 <__adddf3+0x230>
 8008efc:	0040      	lsls	r0, r0, #1
 8008efe:	4149      	adcs	r1, r1
 8008f00:	bf28      	it	cs
 8008f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008f06:	bd30      	pop	{r4, r5, pc}
 8008f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008f0c:	bf3c      	itt	cc
 8008f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008f12:	bd30      	popcc	{r4, r5, pc}
 8008f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008f20:	f04f 0000 	mov.w	r0, #0
 8008f24:	bd30      	pop	{r4, r5, pc}
 8008f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008f2a:	bf1a      	itte	ne
 8008f2c:	4619      	movne	r1, r3
 8008f2e:	4610      	movne	r0, r2
 8008f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008f34:	bf1c      	itt	ne
 8008f36:	460b      	movne	r3, r1
 8008f38:	4602      	movne	r2, r0
 8008f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008f3e:	bf06      	itte	eq
 8008f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008f44:	ea91 0f03 	teqeq	r1, r3
 8008f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008f4c:	bd30      	pop	{r4, r5, pc}
 8008f4e:	bf00      	nop

08008f50 <__aeabi_ui2d>:
 8008f50:	f090 0f00 	teq	r0, #0
 8008f54:	bf04      	itt	eq
 8008f56:	2100      	moveq	r1, #0
 8008f58:	4770      	bxeq	lr
 8008f5a:	b530      	push	{r4, r5, lr}
 8008f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f64:	f04f 0500 	mov.w	r5, #0
 8008f68:	f04f 0100 	mov.w	r1, #0
 8008f6c:	e750      	b.n	8008e10 <__adddf3+0x138>
 8008f6e:	bf00      	nop

08008f70 <__aeabi_i2d>:
 8008f70:	f090 0f00 	teq	r0, #0
 8008f74:	bf04      	itt	eq
 8008f76:	2100      	moveq	r1, #0
 8008f78:	4770      	bxeq	lr
 8008f7a:	b530      	push	{r4, r5, lr}
 8008f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008f88:	bf48      	it	mi
 8008f8a:	4240      	negmi	r0, r0
 8008f8c:	f04f 0100 	mov.w	r1, #0
 8008f90:	e73e      	b.n	8008e10 <__adddf3+0x138>
 8008f92:	bf00      	nop

08008f94 <__aeabi_f2d>:
 8008f94:	0042      	lsls	r2, r0, #1
 8008f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008f9a:	ea4f 0131 	mov.w	r1, r1, rrx
 8008f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8008fa2:	bf1f      	itttt	ne
 8008fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008fb0:	4770      	bxne	lr
 8008fb2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008fb6:	bf08      	it	eq
 8008fb8:	4770      	bxeq	lr
 8008fba:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008fbe:	bf04      	itt	eq
 8008fc0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008fc4:	4770      	bxeq	lr
 8008fc6:	b530      	push	{r4, r5, lr}
 8008fc8:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008fd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008fd4:	e71c      	b.n	8008e10 <__adddf3+0x138>
 8008fd6:	bf00      	nop

08008fd8 <__aeabi_ul2d>:
 8008fd8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fdc:	bf08      	it	eq
 8008fde:	4770      	bxeq	lr
 8008fe0:	b530      	push	{r4, r5, lr}
 8008fe2:	f04f 0500 	mov.w	r5, #0
 8008fe6:	e00a      	b.n	8008ffe <__aeabi_l2d+0x16>

08008fe8 <__aeabi_l2d>:
 8008fe8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fec:	bf08      	it	eq
 8008fee:	4770      	bxeq	lr
 8008ff0:	b530      	push	{r4, r5, lr}
 8008ff2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008ff6:	d502      	bpl.n	8008ffe <__aeabi_l2d+0x16>
 8008ff8:	4240      	negs	r0, r0
 8008ffa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ffe:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009002:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009006:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800900a:	f43f aed8 	beq.w	8008dbe <__adddf3+0xe6>
 800900e:	f04f 0203 	mov.w	r2, #3
 8009012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009016:	bf18      	it	ne
 8009018:	3203      	addne	r2, #3
 800901a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800901e:	bf18      	it	ne
 8009020:	3203      	addne	r2, #3
 8009022:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009026:	f1c2 0320 	rsb	r3, r2, #32
 800902a:	fa00 fc03 	lsl.w	ip, r0, r3
 800902e:	fa20 f002 	lsr.w	r0, r0, r2
 8009032:	fa01 fe03 	lsl.w	lr, r1, r3
 8009036:	ea40 000e 	orr.w	r0, r0, lr
 800903a:	fa21 f102 	lsr.w	r1, r1, r2
 800903e:	4414      	add	r4, r2
 8009040:	e6bd      	b.n	8008dbe <__adddf3+0xe6>
 8009042:	bf00      	nop

08009044 <ADC_IRQHandler>:
 8009044:	e7fe      	b.n	8009044 <ADC_IRQHandler>

08009046 <memcmp>:
 8009046:	b510      	push	{r4, lr}
 8009048:	3901      	subs	r1, #1
 800904a:	4402      	add	r2, r0
 800904c:	4290      	cmp	r0, r2
 800904e:	d101      	bne.n	8009054 <memcmp+0xe>
 8009050:	2000      	movs	r0, #0
 8009052:	e005      	b.n	8009060 <memcmp+0x1a>
 8009054:	7803      	ldrb	r3, [r0, #0]
 8009056:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800905a:	42a3      	cmp	r3, r4
 800905c:	d001      	beq.n	8009062 <memcmp+0x1c>
 800905e:	1b18      	subs	r0, r3, r4
 8009060:	bd10      	pop	{r4, pc}
 8009062:	3001      	adds	r0, #1
 8009064:	e7f2      	b.n	800904c <memcmp+0x6>

08009066 <memcpy>:
 8009066:	b510      	push	{r4, lr}
 8009068:	1e43      	subs	r3, r0, #1
 800906a:	440a      	add	r2, r1
 800906c:	4291      	cmp	r1, r2
 800906e:	d100      	bne.n	8009072 <memcpy+0xc>
 8009070:	bd10      	pop	{r4, pc}
 8009072:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009076:	f803 4f01 	strb.w	r4, [r3, #1]!
 800907a:	e7f7      	b.n	800906c <memcpy+0x6>

0800907c <DisplayHandler::~DisplayHandler()>:
 800907c:	4770      	bx	lr

0800907e <LightSet::FullOn()>:
 800907e:	4770      	bx	lr

08009080 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8009080:	4770      	bx	lr
	...

08009084 <PixelDmxStartStop::Start()>:
 8009084:	4b02      	ldr	r3, [pc, #8]	; (8009090 <PixelDmxStartStop::Start()+0xc>)
 8009086:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800908a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 800908e:	4770      	bx	lr
 8009090:	40020000 	andmi	r0, r2, r0

08009094 <PixelDmxStartStop::Stop()>:
 8009094:	4b02      	ldr	r3, [pc, #8]	; (80090a0 <PixelDmxStartStop::Stop()+0xc>)
 8009096:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800909a:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800909e:	4770      	bx	lr
 80090a0:	40020000 	andmi	r0, r2, r0

080090a4 <dmxconfigudp::atoi(char const*, unsigned int)>:
 80090a4:	b530      	push	{r4, r5, lr}
 80090a6:	4401      	add	r1, r0
 80090a8:	2300      	movs	r3, #0
 80090aa:	250a      	movs	r5, #10
 80090ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80090b0:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80090b4:	2c09      	cmp	r4, #9
 80090b6:	d805      	bhi.n	80090c4 <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
 80090b8:	fb05 2303 	mla	r3, r5, r3, r2
 80090bc:	4281      	cmp	r1, r0
 80090be:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 80090c2:	d1f3      	bne.n	80090ac <dmxconfigudp::atoi(char const*, unsigned int)+0x8>
 80090c4:	4618      	mov	r0, r3
 80090c6:	bd30      	pop	{r4, r5, pc}

080090c8 <LightSet64with4::~LightSet64with4()>:
 80090c8:	4770      	bx	lr

080090ca <LightSet64with4::Start(unsigned int)>:
 80090ca:	291f      	cmp	r1, #31
 80090cc:	460b      	mov	r3, r1
 80090ce:	d805      	bhi.n	80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d0:	6842      	ldr	r2, [r0, #4]
 80090d2:	b11a      	cbz	r2, 80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d4:	6813      	ldr	r3, [r2, #0]
 80090d6:	4610      	mov	r0, r2
 80090d8:	689b      	ldr	r3, [r3, #8]
 80090da:	4718      	bx	r3
 80090dc:	6880      	ldr	r0, [r0, #8]
 80090de:	b120      	cbz	r0, 80090ea <LightSet64with4::Start(unsigned int)+0x20>
 80090e0:	6802      	ldr	r2, [r0, #0]
 80090e2:	f003 0103 	and.w	r1, r3, #3
 80090e6:	6892      	ldr	r2, [r2, #8]
 80090e8:	4710      	bx	r2
 80090ea:	4770      	bx	lr

080090ec <LightSet64with4::Stop(unsigned int)>:
 80090ec:	293f      	cmp	r1, #63	; 0x3f
 80090ee:	460b      	mov	r3, r1
 80090f0:	d805      	bhi.n	80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f2:	6842      	ldr	r2, [r0, #4]
 80090f4:	b11a      	cbz	r2, 80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f6:	6813      	ldr	r3, [r2, #0]
 80090f8:	4610      	mov	r0, r2
 80090fa:	68db      	ldr	r3, [r3, #12]
 80090fc:	4718      	bx	r3
 80090fe:	6880      	ldr	r0, [r0, #8]
 8009100:	b120      	cbz	r0, 800910c <LightSet64with4::Stop(unsigned int)+0x20>
 8009102:	6802      	ldr	r2, [r0, #0]
 8009104:	f003 0103 	and.w	r1, r3, #3
 8009108:	68d2      	ldr	r2, [r2, #12]
 800910a:	4710      	bx	r2
 800910c:	4770      	bx	lr

0800910e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800910e:	293f      	cmp	r1, #63	; 0x3f
 8009110:	b4f0      	push	{r4, r5, r6, r7}
 8009112:	460c      	mov	r4, r1
 8009114:	4615      	mov	r5, r2
 8009116:	461e      	mov	r6, r3
 8009118:	d807      	bhi.n	800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911a:	6847      	ldr	r7, [r0, #4]
 800911c:	b12f      	cbz	r7, 800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911e:	6838      	ldr	r0, [r7, #0]
 8009120:	6904      	ldr	r4, [r0, #16]
 8009122:	4638      	mov	r0, r7
 8009124:	46a4      	mov	ip, r4
 8009126:	bcf0      	pop	{r4, r5, r6, r7}
 8009128:	4760      	bx	ip
 800912a:	6880      	ldr	r0, [r0, #8]
 800912c:	b138      	cbz	r0, 800913e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x30>
 800912e:	6803      	ldr	r3, [r0, #0]
 8009130:	691f      	ldr	r7, [r3, #16]
 8009132:	462a      	mov	r2, r5
 8009134:	4633      	mov	r3, r6
 8009136:	f004 0103 	and.w	r1, r4, #3
 800913a:	46bc      	mov	ip, r7
 800913c:	e7f3      	b.n	8009126 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x18>
 800913e:	bcf0      	pop	{r4, r5, r6, r7}
 8009140:	4770      	bx	lr

08009142 <LightSet64with4::Blackout(bool)>:
 8009142:	b570      	push	{r4, r5, r6, lr}
 8009144:	4604      	mov	r4, r0
 8009146:	6840      	ldr	r0, [r0, #4]
 8009148:	460d      	mov	r5, r1
 800914a:	b110      	cbz	r0, 8009152 <LightSet64with4::Blackout(bool)+0x10>
 800914c:	6803      	ldr	r3, [r0, #0]
 800914e:	695b      	ldr	r3, [r3, #20]
 8009150:	4798      	blx	r3
 8009152:	68a0      	ldr	r0, [r4, #8]
 8009154:	b128      	cbz	r0, 8009162 <LightSet64with4::Blackout(bool)+0x20>
 8009156:	6803      	ldr	r3, [r0, #0]
 8009158:	4629      	mov	r1, r5
 800915a:	695b      	ldr	r3, [r3, #20]
 800915c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009160:	4718      	bx	r3
 8009162:	bd70      	pop	{r4, r5, r6, pc}

08009164 <LightSet64with4::Print()>:
 8009164:	b510      	push	{r4, lr}
 8009166:	4604      	mov	r4, r0
 8009168:	6840      	ldr	r0, [r0, #4]
 800916a:	b110      	cbz	r0, 8009172 <LightSet64with4::Print()+0xe>
 800916c:	6803      	ldr	r3, [r0, #0]
 800916e:	69db      	ldr	r3, [r3, #28]
 8009170:	4798      	blx	r3
 8009172:	68a0      	ldr	r0, [r4, #8]
 8009174:	b120      	cbz	r0, 8009180 <LightSet64with4::Print()+0x1c>
 8009176:	6803      	ldr	r3, [r0, #0]
 8009178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800917c:	69db      	ldr	r3, [r3, #28]
 800917e:	4718      	bx	r3
 8009180:	bd10      	pop	{r4, pc}

08009182 <LightSet64with4::SetDmxStartAddress(unsigned short)>:
 8009182:	2000      	movs	r0, #0
 8009184:	4770      	bx	lr

08009186 <LightSet64with4::GetDmxStartAddress()>:
 8009186:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800918a:	4770      	bx	lr

0800918c <LightSet64with4::GetDmxFootprint()>:
 800918c:	2000      	movs	r0, #0
 800918e:	4770      	bx	lr

08009190 <LightSet64with4::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8009190:	2000      	movs	r0, #0
 8009192:	4770      	bx	lr

08009194 <RDMNetDevice::CopyUID(unsigned char*)>:
 8009194:	460b      	mov	r3, r1
 8009196:	2206      	movs	r2, #6
 8009198:	1d01      	adds	r1, r0, #4
 800919a:	4618      	mov	r0, r3
 800919c:	f7ff bf63 	b.w	8009066 <memcpy>

080091a0 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 80091a0:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091a4:	e7f6      	b.n	8009194 <RDMNetDevice::CopyUID(unsigned char*)>
	...

080091a8 <RDMNetDevice::CopyCID(unsigned char*)>:
 80091a8:	4608      	mov	r0, r1
 80091aa:	2210      	movs	r2, #16
 80091ac:	4901      	ldr	r1, [pc, #4]	; (80091b4 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 80091ae:	f7ff bf5a 	b.w	8009066 <memcpy>
 80091b2:	bf00      	nop
 80091b4:	2000092f 	andcs	r0, r0, pc, lsr #18

080091b8 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 80091b8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091bc:	e7f4      	b.n	80091a8 <RDMNetDevice::CopyCID(unsigned char*)>
 80091be:	bf00      	nop

080091c0 <FactoryDefaults::~FactoryDefaults()>:
 80091c0:	4770      	bx	lr

080091c2 <DisplayHandler::~DisplayHandler()>:
 80091c2:	b510      	push	{r4, lr}
 80091c4:	4604      	mov	r4, r0
 80091c6:	f00b f9b1 	bl	801452c <operator delete(void*)>
 80091ca:	4620      	mov	r0, r4
 80091cc:	bd10      	pop	{r4, pc}

080091ce <LightSet64with4::~LightSet64with4()>:
 80091ce:	b510      	push	{r4, lr}
 80091d0:	4604      	mov	r4, r0
 80091d2:	f00b f9ab 	bl	801452c <operator delete(void*)>
 80091d6:	4620      	mov	r0, r4
 80091d8:	bd10      	pop	{r4, pc}

080091da <PixelDmxStartStop::~PixelDmxStartStop()>:
 80091da:	b510      	push	{r4, lr}
 80091dc:	4604      	mov	r4, r0
 80091de:	f00b f9a5 	bl	801452c <operator delete(void*)>
 80091e2:	4620      	mov	r0, r4
 80091e4:	bd10      	pop	{r4, pc}

080091e6 <FactoryDefaults::~FactoryDefaults()>:
 80091e6:	b510      	push	{r4, lr}
 80091e8:	4604      	mov	r4, r0
 80091ea:	f00b f99f 	bl	801452c <operator delete(void*)>
 80091ee:	4620      	mov	r0, r4
 80091f0:	bd10      	pop	{r4, pc}
	...

080091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091f4:	b510      	push	{r4, lr}
 80091f6:	4c03      	ldr	r4, [pc, #12]	; (8009204 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80091f8:	30d0      	adds	r0, #208	; 0xd0
 80091fa:	4622      	mov	r2, r4
 80091fc:	f003 fe76 	bl	800ceec <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8009200:	4620      	mov	r0, r4
 8009202:	bd10      	pop	{r4, pc}
 8009204:	20000830 	andcs	r0, r0, r0, lsr r8

08009208 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8009208:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800920c:	e7f2      	b.n	80091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 800920e:	bf00      	nop

08009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8009210:	b110      	cbz	r0, 8009218 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8009212:	6803      	ldr	r3, [r0, #0]
 8009214:	6a1b      	ldr	r3, [r3, #32]
 8009216:	4718      	bx	r3
 8009218:	4770      	bx	lr

0800921a <Display::PutChar(int) [clone .isra.0]>:
 800921a:	b110      	cbz	r0, 8009222 <Display::PutChar(int) [clone .isra.0]+0x8>
 800921c:	6803      	ldr	r3, [r0, #0]
 800921e:	695b      	ldr	r3, [r3, #20]
 8009220:	4718      	bx	r3
 8009222:	4770      	bx	lr

08009224 <DisplayHandler::Print(unsigned int)>:
 8009224:	b538      	push	{r3, r4, r5, lr}
 8009226:	7903      	ldrb	r3, [r0, #4]
 8009228:	b1f3      	cbz	r3, 8009268 <DisplayHandler::Print(unsigned int)+0x44>
 800922a:	2904      	cmp	r1, #4
 800922c:	bf98      	it	ls
 800922e:	4b0f      	ldrls	r3, [pc, #60]	; (800926c <DisplayHandler::Print(unsigned int)+0x48>)
 8009230:	4d0f      	ldr	r5, [pc, #60]	; (8009270 <DisplayHandler::Print(unsigned int)+0x4c>)
 8009232:	bf98      	it	ls
 8009234:	5c5c      	ldrbls	r4, [r3, r1]
 8009236:	682b      	ldr	r3, [r5, #0]
 8009238:	6998      	ldr	r0, [r3, #24]
 800923a:	bf88      	it	hi
 800923c:	2455      	movhi	r4, #85	; 0x55
 800923e:	b178      	cbz	r0, 8009260 <DisplayHandler::Print(unsigned int)+0x3c>
 8009240:	7901      	ldrb	r1, [r0, #4]
 8009242:	3901      	subs	r1, #1
 8009244:	b2c9      	uxtb	r1, r1
 8009246:	b168      	cbz	r0, 8009264 <DisplayHandler::Print(unsigned int)+0x40>
 8009248:	7942      	ldrb	r2, [r0, #5]
 800924a:	3a01      	subs	r2, #1
 800924c:	b2d2      	uxtb	r2, r2
 800924e:	f7ff ffdf 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009252:	682b      	ldr	r3, [r5, #0]
 8009254:	4621      	mov	r1, r4
 8009256:	6998      	ldr	r0, [r3, #24]
 8009258:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800925c:	f7ff bfdd 	b.w	800921a <Display::PutChar(int) [clone .isra.0]>
 8009260:	4601      	mov	r1, r0
 8009262:	e7ee      	b.n	8009242 <DisplayHandler::Print(unsigned int)+0x1e>
 8009264:	4602      	mov	r2, r0
 8009266:	e7f0      	b.n	800924a <DisplayHandler::Print(unsigned int)+0x26>
 8009268:	bd38      	pop	{r3, r4, r5, pc}
 800926a:	bf00      	nop
 800926c:	08016df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, sp, lr}
 8009270:	2000fdf8 	strdcs	pc, [r0], -r8

08009274 <RDMNetDevice::~RDMNetDevice()>:
 8009274:	b510      	push	{r4, lr}
 8009276:	4b06      	ldr	r3, [pc, #24]	; (8009290 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8009278:	4604      	mov	r4, r0
 800927a:	f840 3b88 	str.w	r3, [r0], #136
 800927e:	f003 f8db 	bl	800c438 <RDMSubDevices::~RDMSubDevices()>
 8009282:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8009286:	f003 f8b7 	bl	800c3f8 <RDMSensors::~RDMSensors()>
 800928a:	4620      	mov	r0, r4
 800928c:	bd10      	pop	{r4, pc}
 800928e:	bf00      	nop
 8009290:	08018558 	stmdaeq	r1, {r3, r4, r6, r8, sl, pc}

08009294 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8009294:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009298:	e7ec      	b.n	8009274 <RDMNetDevice::~RDMNetDevice()>
 800929a:	bf00      	nop

0800929c <RDMNetDevice::~RDMNetDevice()>:
 800929c:	b510      	push	{r4, lr}
 800929e:	4604      	mov	r4, r0
 80092a0:	f7ff ffe8 	bl	8009274 <RDMNetDevice::~RDMNetDevice()>
 80092a4:	4620      	mov	r0, r4
 80092a6:	f00b f941 	bl	801452c <operator delete(void*)>
 80092aa:	4620      	mov	r0, r4
 80092ac:	bd10      	pop	{r4, pc}

080092ae <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 80092ae:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80092b2:	e7f3      	b.n	800929c <RDMNetDevice::~RDMNetDevice()>

080092b4 <Display::Printf(unsigned char, char const*, ...)>:
 80092b4:	b40c      	push	{r2, r3}
 80092b6:	b570      	push	{r4, r5, r6, lr}
 80092b8:	6984      	ldr	r4, [r0, #24]
 80092ba:	b08a      	sub	sp, #40	; 0x28
 80092bc:	4605      	mov	r5, r0
 80092be:	460e      	mov	r6, r1
 80092c0:	b174      	cbz	r4, 80092e0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80092c2:	ab0f      	add	r3, sp, #60	; 0x3c
 80092c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80092c6:	9301      	str	r3, [sp, #4]
 80092c8:	2120      	movs	r1, #32
 80092ca:	a802      	add	r0, sp, #8
 80092cc:	f001 f840 	bl	800a350 <vsnprintf>
 80092d0:	4604      	mov	r4, r0
 80092d2:	69a8      	ldr	r0, [r5, #24]
 80092d4:	6803      	ldr	r3, [r0, #0]
 80092d6:	aa02      	add	r2, sp, #8
 80092d8:	69dd      	ldr	r5, [r3, #28]
 80092da:	4631      	mov	r1, r6
 80092dc:	b2a3      	uxth	r3, r4
 80092de:	47a8      	blx	r5
 80092e0:	4620      	mov	r0, r4
 80092e2:	b00a      	add	sp, #40	; 0x28
 80092e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092e8:	b002      	add	sp, #8
 80092ea:	4770      	bx	lr

080092ec <Display::TextStatus(char const*)>:
 80092ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092f0:	4604      	mov	r4, r0
 80092f2:	6980      	ldr	r0, [r0, #24]
 80092f4:	460d      	mov	r5, r1
 80092f6:	b360      	cbz	r0, 8009352 <Display::TextStatus(char const*)+0x66>
 80092f8:	7946      	ldrb	r6, [r0, #5]
 80092fa:	f890 8004 	ldrb.w	r8, [r0, #4]
 80092fe:	1e72      	subs	r2, r6, #1
 8009300:	b2d2      	uxtb	r2, r2
 8009302:	2100      	movs	r1, #0
 8009304:	9201      	str	r2, [sp, #4]
 8009306:	f7ff ff83 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800930a:	2700      	movs	r7, #0
 800930c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8009310:	45b8      	cmp	r8, r7
 8009312:	9a01      	ldr	r2, [sp, #4]
 8009314:	69a0      	ldr	r0, [r4, #24]
 8009316:	d816      	bhi.n	8009346 <Display::TextStatus(char const*)+0x5a>
 8009318:	2100      	movs	r1, #0
 800931a:	f7ff ff79 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800931e:	69a0      	ldr	r0, [r4, #24]
 8009320:	b1b8      	cbz	r0, 8009352 <Display::TextStatus(char const*)+0x66>
 8009322:	7901      	ldrb	r1, [r0, #4]
 8009324:	2300      	movs	r3, #0
 8009326:	5cea      	ldrb	r2, [r5, r3]
 8009328:	b11a      	cbz	r2, 8009332 <Display::TextStatus(char const*)+0x46>
 800932a:	1c5a      	adds	r2, r3, #1
 800932c:	4299      	cmp	r1, r3
 800932e:	4613      	mov	r3, r2
 8009330:	dcf9      	bgt.n	8009326 <Display::TextStatus(char const*)+0x3a>
 8009332:	6802      	ldr	r2, [r0, #0]
 8009334:	69d4      	ldr	r4, [r2, #28]
 8009336:	b2db      	uxtb	r3, r3
 8009338:	462a      	mov	r2, r5
 800933a:	4631      	mov	r1, r6
 800933c:	46a4      	mov	ip, r4
 800933e:	b002      	add	sp, #8
 8009340:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009344:	4760      	bx	ip
 8009346:	2120      	movs	r1, #32
 8009348:	9201      	str	r2, [sp, #4]
 800934a:	3701      	adds	r7, #1
 800934c:	f7ff ff65 	bl	800921a <Display::PutChar(int) [clone .isra.0]>
 8009350:	e7de      	b.n	8009310 <Display::TextStatus(char const*)+0x24>
 8009352:	b002      	add	sp, #8
 8009354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8009358:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800935a:	4605      	mov	r5, r0
 800935c:	461e      	mov	r6, r3
 800935e:	460f      	mov	r7, r1
 8009360:	4614      	mov	r4, r2
 8009362:	f7ff ffc3 	bl	80092ec <Display::TextStatus(char const*)>
 8009366:	7c6b      	ldrb	r3, [r5, #17]
 8009368:	b19b      	cbz	r3, 8009392 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 800936a:	43e2      	mvns	r2, r4
 800936c:	2312      	movs	r3, #18
 800936e:	7a28      	ldrb	r0, [r5, #8]
 8009370:	f88d 3004 	strb.w	r3, [sp, #4]
 8009374:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8009378:	f88d 3005 	strb.w	r3, [sp, #5]
 800937c:	f88d 2006 	strb.w	r2, [sp, #6]
 8009380:	f00c fa2a 	bl	80157d8 <gd32_i2c_set_address>
 8009384:	68e8      	ldr	r0, [r5, #12]
 8009386:	f00c fa1f 	bl	80157c8 <gd32_i2c_set_baudrate>
 800938a:	2103      	movs	r1, #3
 800938c:	a801      	add	r0, sp, #4
 800938e:	f00c fa29 	bl	80157e4 <gd32_i2c_write>
 8009392:	1c73      	adds	r3, r6, #1
 8009394:	d006      	beq.n	80093a4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8009396:	4639      	mov	r1, r7
 8009398:	4630      	mov	r0, r6
 800939a:	b003      	add	sp, #12
 800939c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80093a0:	f00a bf40 	b.w	8014224 <console_status>
 80093a4:	b003      	add	sp, #12
 80093a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080093a8 <Display::SetSleep(bool)>:
 80093a8:	b538      	push	{r3, r4, r5, lr}
 80093aa:	4604      	mov	r4, r0
 80093ac:	6980      	ldr	r0, [r0, #24]
 80093ae:	460d      	mov	r5, r1
 80093b0:	b138      	cbz	r0, 80093c2 <Display::SetSleep(bool)+0x1a>
 80093b2:	6803      	ldr	r3, [r0, #0]
 80093b4:	7421      	strb	r1, [r4, #16]
 80093b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093b8:	4798      	blx	r3
 80093ba:	b915      	cbnz	r5, 80093c2 <Display::SetSleep(bool)+0x1a>
 80093bc:	4b01      	ldr	r3, [pc, #4]	; (80093c4 <Display::SetSleep(bool)+0x1c>)
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	6063      	str	r3, [r4, #4]
 80093c2:	bd38      	pop	{r3, r4, r5, pc}
 80093c4:	2000fefc 	strdcs	pc, [r0], -ip

080093c8 <display::timeout::gpio_init()>:
 80093c8:	b510      	push	{r4, lr}
 80093ca:	f640 4002 	movw	r0, #3074	; 0xc02
 80093ce:	f00b fd0d 	bl	8014dec <rcu_periph_clock_enable>
 80093d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093d6:	4803      	ldr	r0, [pc, #12]	; (80093e4 <display::timeout::gpio_init()+0x1c>)
 80093d8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80093dc:	2201      	movs	r2, #1
 80093de:	2100      	movs	r1, #0
 80093e0:	f00b bc88 	b.w	8014cf4 <gpio_mode_set>
 80093e4:	40020800 	andmi	r0, r2, r0, lsl #16

080093e8 <display::timeout::gpio_renew()>:
 80093e8:	4b03      	ldr	r3, [pc, #12]	; (80093f8 <display::timeout::gpio_renew()+0x10>)
 80093ea:	f8d3 0810 	ldr.w	r0, [r3, #2064]	; 0x810
 80093ee:	f480 5000 	eor.w	r0, r0, #8192	; 0x2000
 80093f2:	f3c0 3040 	ubfx	r0, r0, #13, #1
 80093f6:	4770      	bx	lr
 80093f8:	40020000 	andmi	r0, r2, r0

080093fc <StoreNetwork::SaveDhcp(bool)>:
 80093fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80093fe:	2301      	movs	r3, #1
 8009400:	f88d 1017 	strb.w	r1, [sp, #23]
 8009404:	2100      	movs	r1, #0
 8009406:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800940a:	4805      	ldr	r0, [pc, #20]	; (8009420 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800940c:	9300      	str	r3, [sp, #0]
 800940e:	6800      	ldr	r0, [r0, #0]
 8009410:	f10d 0317 	add.w	r3, sp, #23
 8009414:	2214      	movs	r2, #20
 8009416:	f007 f917 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800941a:	b007      	add	sp, #28
 800941c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009420:	200093e8 	andcs	r9, r0, r8, ror #7

08009424 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8009424:	f1a0 0004 	sub.w	r0, r0, #4
 8009428:	e7e8      	b.n	80093fc <StoreNetwork::SaveDhcp(bool)>
 800942a:	bf00      	nop

0800942c <FactoryDefaults::Set()>:
 800942c:	b508      	push	{r3, lr}
 800942e:	4b08      	ldr	r3, [pc, #32]	; (8009450 <FactoryDefaults::Set()+0x24>)
 8009430:	2100      	movs	r1, #0
 8009432:	6818      	ldr	r0, [r3, #0]
 8009434:	f001 fab0 	bl	800a998 <RemoteConfig::SetDisable(bool)>
 8009438:	4b06      	ldr	r3, [pc, #24]	; (8009454 <FactoryDefaults::Set()+0x28>)
 800943a:	210b      	movs	r1, #11
 800943c:	6818      	ldr	r0, [r3, #0]
 800943e:	f007 f8f1 	bl	8010624 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009442:	4b05      	ldr	r3, [pc, #20]	; (8009458 <FactoryDefaults::Set()+0x2c>)
 8009444:	2101      	movs	r1, #1
 8009446:	6818      	ldr	r0, [r3, #0]
 8009448:	f7ff ffd8 	bl	80093fc <StoreNetwork::SaveDhcp(bool)>
 800944c:	bd08      	pop	{r3, pc}
 800944e:	bf00      	nop
 8009450:	20000124 	andcs	r0, r0, r4, lsr #2
 8009454:	200093e8 	andcs	r9, r0, r8, ror #7
 8009458:	200093f8 	strdcs	r9, [r0], -r8

0800945c <Hardware::RebootHandler()>:
 800945c:	b508      	push	{r3, lr}
 800945e:	4b05      	ldr	r3, [pc, #20]	; (8009474 <Hardware::RebootHandler()+0x18>)
 8009460:	6818      	ldr	r0, [r3, #0]
 8009462:	f006 fe07 	bl	8010074 <WS28xxMulti::Blackout()>
 8009466:	4b04      	ldr	r3, [pc, #16]	; (8009478 <Hardware::RebootHandler()+0x1c>)
 8009468:	6818      	ldr	r0, [r3, #0]
 800946a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800946e:	f002 bb9b 	b.w	800bba8 <DdpDisplay::Stop()>
 8009472:	bf00      	nop
 8009474:	200013d0 	ldrdcs	r1, [r0], -r0
 8009478:	2000081c 	andcs	r0, r0, ip, lsl r8

0800947c <main>:
 800947c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009480:	f5ad 6d26 	sub.w	sp, sp, #2656	; 0xa60
 8009484:	a807      	add	r0, sp, #28
 8009486:	f00a ff87 	bl	8014398 <Hardware::Hardware()>
 800948a:	a8ba      	add	r0, sp, #744	; 0x2e8
 800948c:	f008 fcd2 	bl	8011e34 <Network::Network()>
 8009490:	a822      	add	r0, sp, #136	; 0x88
 8009492:	f00a ff25 	bl	80142e0 <LedBlink::LedBlink()>
 8009496:	a890      	add	r0, sp, #576	; 0x240
 8009498:	f009 fddc 	bl	8013054 <DisplayUdf::DisplayUdf()>
 800949c:	4abb      	ldr	r2, [pc, #748]	; (800978c <main+0x310>)
 800949e:	4bbc      	ldr	r3, [pc, #752]	; (8009790 <main+0x314>)
 80094a0:	49bc      	ldr	r1, [pc, #752]	; (8009794 <main+0x318>)
 80094a2:	a808      	add	r0, sp, #32
 80094a4:	f00a fed6 	bl	8014254 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80094a8:	a818      	add	r0, sp, #96	; 0x60
 80094aa:	f007 fc6b 	bl	8010d84 <FlashRom::FlashRom()>
 80094ae:	a809      	add	r0, sp, #36	; 0x24
 80094b0:	f007 f892 	bl	80105d8 <SpiFlashStore::SpiFlashStore()>
 80094b4:	49b8      	ldr	r1, [pc, #736]	; (8009798 <main+0x31c>)
 80094b6:	a808      	add	r0, sp, #32
 80094b8:	f00a ff04 	bl	80142c4 <FirmwareVersion::Print(char const*)>
 80094bc:	4bb7      	ldr	r3, [pc, #732]	; (800979c <main+0x320>)
 80094be:	2501      	movs	r5, #1
 80094c0:	f8c3 5818 	str.w	r5, [r3, #2072]	; 0x818
 80094c4:	2008      	movs	r0, #8
 80094c6:	f00b f835 	bl	8014534 <operator new(unsigned int)>
 80094ca:	4bb5      	ldr	r3, [pc, #724]	; (80097a0 <main+0x324>)
 80094cc:	6003      	str	r3, [r0, #0]
 80094ce:	4bb5      	ldr	r3, [pc, #724]	; (80097a4 <main+0x328>)
 80094d0:	49b5      	ldr	r1, [pc, #724]	; (80097a8 <main+0x32c>)
 80094d2:	681b      	ldr	r3, [r3, #0]
 80094d4:	9024      	str	r0, [sp, #144]	; 0x90
 80094d6:	3b00      	subs	r3, #0
 80094d8:	bf18      	it	ne
 80094da:	2301      	movne	r3, #1
 80094dc:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80094e0:	7103      	strb	r3, [r0, #4]
 80094e2:	2303      	movs	r3, #3
 80094e4:	a890      	add	r0, sp, #576	; 0x240
 80094e6:	f7ff ff37 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80094ea:	a812      	add	r0, sp, #72	; 0x48
 80094ec:	f007 fa72 	bl	80109d4 <StoreNetwork::StoreNetwork()>
 80094f0:	ab13      	add	r3, sp, #76	; 0x4c
 80094f2:	a912      	add	r1, sp, #72	; 0x48
 80094f4:	a8ba      	add	r0, sp, #744	; 0x2e8
 80094f6:	93e8      	str	r3, [sp, #928]	; 0x3a0
 80094f8:	f008 fcf4 	bl	8011ee4 <Network::Init(NetworkParamsStore*)>
 80094fc:	a8ba      	add	r0, sp, #744	; 0x2e8
 80094fe:	f008 ff63 	bl	80123c8 <Network::Print()>
 8009502:	49aa      	ldr	r1, [pc, #680]	; (80097ac <main+0x330>)
 8009504:	2303      	movs	r3, #3
 8009506:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800950a:	a890      	add	r0, sp, #576	; 0x240
 800950c:	f7ff ff24 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009510:	a80a      	add	r0, sp, #40	; 0x28
 8009512:	2400      	movs	r4, #0
 8009514:	f008 f8ca 	bl	80116ac <MDNS::MDNS()>
 8009518:	a80a      	add	r0, sp, #40	; 0x28
 800951a:	f008 f987 	bl	801182c <MDNS::Start()>
 800951e:	4aa4      	ldr	r2, [pc, #656]	; (80097b0 <main+0x334>)
 8009520:	f642 1305 	movw	r3, #10501	; 0x2905
 8009524:	4621      	mov	r1, r4
 8009526:	e9cd 4400 	strd	r4, r4, [sp]
 800952a:	a80a      	add	r0, sp, #40	; 0x28
 800952c:	f008 faec 	bl	8011b08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009530:	4aa0      	ldr	r2, [pc, #640]	; (80097b4 <main+0x338>)
 8009532:	2345      	movs	r3, #69	; 0x45
 8009534:	4621      	mov	r1, r4
 8009536:	e9cd 4400 	strd	r4, r4, [sp]
 800953a:	a80a      	add	r0, sp, #40	; 0x28
 800953c:	f008 fae4 	bl	8011b08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009540:	4b9d      	ldr	r3, [pc, #628]	; (80097b8 <main+0x33c>)
 8009542:	4a9e      	ldr	r2, [pc, #632]	; (80097bc <main+0x340>)
 8009544:	e9cd 4300 	strd	r4, r3, [sp]
 8009548:	4621      	mov	r1, r4
 800954a:	f44f 637d 	mov.w	r3, #4048	; 0xfd0
 800954e:	a80a      	add	r0, sp, #40	; 0x28
 8009550:	f008 fada 	bl	8011b08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009554:	4b9a      	ldr	r3, [pc, #616]	; (80097c0 <main+0x344>)
 8009556:	4a9b      	ldr	r2, [pc, #620]	; (80097c4 <main+0x348>)
 8009558:	4621      	mov	r1, r4
 800955a:	e9cd 5300 	strd	r5, r3, [sp]
 800955e:	a80a      	add	r0, sp, #40	; 0x28
 8009560:	2350      	movs	r3, #80	; 0x50
 8009562:	f008 fad1 	bl	8011b08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009566:	a80a      	add	r0, sp, #40	; 0x28
 8009568:	f008 fc16 	bl	8011d98 <MDNS::Print()>
 800956c:	a855      	add	r0, sp, #340	; 0x154
 800956e:	f001 feb5 	bl	800b2dc <HttpDaemon::HttpDaemon()>
 8009572:	a855      	add	r0, sp, #340	; 0x154
 8009574:	f001 fec6 	bl	800b304 <HttpDaemon::Start()>
 8009578:	23aa      	movs	r3, #170	; 0xaa
 800957a:	2203      	movs	r2, #3
 800957c:	e9cd 2369 	strd	r2, r3, [sp, #420]	; 0x1a4
 8009580:	2206      	movs	r2, #6
 8009582:	e9cd 246b 	strd	r2, r4, [sp, #428]	; 0x1ac
 8009586:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800958a:	926d      	str	r2, [sp, #436]	; 0x1b4
 800958c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009590:	f8ad 21b8 	strh.w	r2, [sp, #440]	; 0x1b8
 8009594:	4a8c      	ldr	r2, [pc, #560]	; (80097c8 <main+0x34c>)
 8009596:	f8ad 51d0 	strh.w	r5, [sp, #464]	; 0x1d0
 800959a:	a814      	add	r0, sp, #80	; 0x50
 800959c:	e9cd 256f 	strd	r2, r5, [sp, #444]	; 0x1bc
 80095a0:	e9cd 5371 	strd	r5, r3, [sp, #452]	; 0x1c4
 80095a4:	f007 fb8a 	bl	8010cbc <StorePixelDmx::StorePixelDmx()>
 80095a8:	a914      	add	r1, sp, #80	; 0x50
 80095aa:	a881      	add	r0, sp, #516	; 0x204
 80095ac:	f005 f944 	bl	800e838 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 80095b0:	a881      	add	r0, sp, #516	; 0x204
 80095b2:	f005 f961 	bl	800e878 <PixelDmxParams::Load()>
 80095b6:	b130      	cbz	r0, 80095c6 <main+0x14a>
 80095b8:	a881      	add	r0, sp, #516	; 0x204
 80095ba:	f005 fcb1 	bl	800ef20 <PixelDmxParams::Dump()>
 80095be:	a969      	add	r1, sp, #420	; 0x1a4
 80095c0:	a881      	add	r0, sp, #516	; 0x204
 80095c2:	f005 fc68 	bl	800ee96 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 80095c6:	a969      	add	r1, sp, #420	; 0x1a4
 80095c8:	a8a4      	add	r0, sp, #656	; 0x290
 80095ca:	f005 f84d 	bl	800e668 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 80095ce:	2004      	movs	r0, #4
 80095d0:	f00a ffb0 	bl	8014534 <operator new(unsigned int)>
 80095d4:	4b7d      	ldr	r3, [pc, #500]	; (80097cc <main+0x350>)
 80095d6:	6003      	str	r3, [r0, #0]
 80095d8:	4604      	mov	r4, r0
 80095da:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80095de:	487c      	ldr	r0, [pc, #496]	; (80097d0 <main+0x354>)
 80095e0:	2200      	movs	r2, #0
 80095e2:	2101      	movs	r1, #1
 80095e4:	f00b fb86 	bl	8014cf4 <gpio_mode_set>
 80095e8:	2100      	movs	r1, #0
 80095ea:	4879      	ldr	r0, [pc, #484]	; (80097d0 <main+0x354>)
 80095ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80095f0:	2202      	movs	r2, #2
 80095f2:	f00b fb9f 	bl	8014d34 <gpio_output_options_set>
 80095f6:	4b69      	ldr	r3, [pc, #420]	; (800979c <main+0x320>)
 80095f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80095fc:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8009600:	f50d 6092 	add.w	r0, sp, #1168	; 0x490
 8009604:	94b7      	str	r4, [sp, #732]	; 0x2dc
 8009606:	f002 fa63 	bl	800bad0 <DdpDisplay::DdpDisplay()>
 800960a:	9bae      	ldr	r3, [sp, #696]	; 0x2b8
 800960c:	9ab5      	ldr	r2, [sp, #724]	; 0x2d4
 800960e:	9eac      	ldr	r6, [sp, #688]	; 0x2b0
 8009610:	f8cd 34a0 	str.w	r3, [sp, #1184]	; 0x4a0
 8009614:	2a04      	cmp	r2, #4
 8009616:	fb02 f303 	mul.w	r3, r2, r3
 800961a:	f8cd 34a4 	str.w	r3, [sp, #1188]	; 0x4a4
 800961e:	bf0c      	ite	eq
 8009620:	f44f 7300 	moveq.w	r3, #512	; 0x200
 8009624:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 8009628:	2e0f      	cmp	r6, #15
 800962a:	f8cd 34a8 	str.w	r3, [sp, #1192]	; 0x4a8
 800962e:	f89d 5218 	ldrb.w	r5, [sp, #536]	; 0x218
 8009632:	bf94      	ite	ls
 8009634:	4633      	movls	r3, r6
 8009636:	2310      	movhi	r3, #16
 8009638:	4631      	mov	r1, r6
 800963a:	a80b      	add	r0, sp, #44	; 0x2c
 800963c:	f8cd 34ac 	str.w	r3, [sp, #1196]	; 0x4ac
 8009640:	f005 ff04 	bl	800f44c <PixelPatterns::PixelPatterns(unsigned int)>
 8009644:	4b63      	ldr	r3, [pc, #396]	; (80097d4 <main+0x358>)
 8009646:	2d05      	cmp	r5, #5
 8009648:	601d      	str	r5, [r3, #0]
 800964a:	f340 8225 	ble.w	8009a98 <main+0x61c>
 800964e:	a80c      	add	r0, sp, #48	; 0x30
 8009650:	f007 f928 	bl	80108a4 <StoreDmxSend::StoreDmxSend()>
 8009654:	a90c      	add	r1, sp, #48	; 0x30
 8009656:	a81e      	add	r0, sp, #120	; 0x78
 8009658:	f004 f8a8 	bl	800d7ac <DmxParams::DmxParams(DmxParamsStore*)>
 800965c:	a83a      	add	r0, sp, #232	; 0xe8
 800965e:	f004 fd5d 	bl	800e11c <Dmx::Dmx()>
 8009662:	a81e      	add	r0, sp, #120	; 0x78
 8009664:	f004 f8ae 	bl	800d7c4 <DmxParams::Load()>
 8009668:	b130      	cbz	r0, 8009678 <main+0x1fc>
 800966a:	a81e      	add	r0, sp, #120	; 0x78
 800966c:	f004 f9fc 	bl	800da68 <DmxParams::Dump()>
 8009670:	a93a      	add	r1, sp, #232	; 0xe8
 8009672:	a81e      	add	r0, sp, #120	; 0x78
 8009674:	f004 f9ca 	bl	800da0c <DmxParams::Set(Dmx*)>
 8009678:	4b57      	ldr	r3, [pc, #348]	; (80097d8 <main+0x35c>)
 800967a:	930d      	str	r3, [sp, #52]	; 0x34
 800967c:	a80d      	add	r0, sp, #52	; 0x34
 800967e:	f004 f83b 	bl	800d6f8 <DmxSend::Print()>
 8009682:	4b56      	ldr	r3, [pc, #344]	; (80097dc <main+0x360>)
 8009684:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8009688:	6818      	ldr	r0, [r3, #0]
 800968a:	f008 fc05 	bl	8011e98 <Network::Begin(unsigned short)>
 800968e:	4b54      	ldr	r3, [pc, #336]	; (80097e0 <main+0x364>)
 8009690:	6018      	str	r0, [r3, #0]
 8009692:	4b50      	ldr	r3, [pc, #320]	; (80097d4 <main+0x358>)
 8009694:	681b      	ldr	r3, [r3, #0]
 8009696:	2b00      	cmp	r3, #0
 8009698:	f000 8296 	beq.w	8009bc8 <main+0x74c>
 800969c:	2300      	movs	r3, #0
 800969e:	4a51      	ldr	r2, [pc, #324]	; (80097e4 <main+0x368>)
 80096a0:	ac1b      	add	r4, sp, #108	; 0x6c
 80096a2:	e9cd 231b 	strd	r2, r3, [sp, #108]	; 0x6c
 80096a6:	4620      	mov	r0, r4
 80096a8:	ab0d      	add	r3, sp, #52	; 0x34
 80096aa:	931d      	str	r3, [sp, #116]	; 0x74
 80096ac:	f7ff fd5a 	bl	8009164 <LightSet64with4::Print()>
 80096b0:	f8cd 44b0 	str.w	r4, [sp, #1200]	; 0x4b0
 80096b4:	f50d 6092 	add.w	r0, sp, #1168	; 0x490
 80096b8:	4c4b      	ldr	r4, [pc, #300]	; (80097e8 <main+0x36c>)
 80096ba:	f002 fd29 	bl	800c110 <DdpDisplay::Print()>
 80096be:	494b      	ldr	r1, [pc, #300]	; (80097ec <main+0x370>)
 80096c0:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 80096c4:	2303      	movs	r3, #3
 80096c6:	a890      	add	r0, sp, #576	; 0x240
 80096c8:	f7ff fe46 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80096cc:	6823      	ldr	r3, [r4, #0]
 80096ce:	6818      	ldr	r0, [r3, #0]
 80096d0:	f005 fd8e 	bl	800f1f0 <PixelType::GetType(pixel::Type)>
 80096d4:	6823      	ldr	r3, [r4, #0]
 80096d6:	4a46      	ldr	r2, [pc, #280]	; (80097f0 <main+0x374>)
 80096d8:	685b      	ldr	r3, [r3, #4]
 80096da:	2120      	movs	r1, #32
 80096dc:	e9cd 0300 	strd	r0, r3, [sp]
 80096e0:	4633      	mov	r3, r6
 80096e2:	a828      	add	r0, sp, #160	; 0xa0
 80096e4:	f000 fe1c 	bl	800a320 <snprintf>
 80096e8:	4a42      	ldr	r2, [pc, #264]	; (80097f4 <main+0x378>)
 80096ea:	2120      	movs	r1, #32
 80096ec:	a831      	add	r0, sp, #196	; 0xc4
 80096ee:	f000 fe17 	bl	800a320 <snprintf>
 80096f2:	4604      	mov	r4, r0
 80096f4:	202c      	movs	r0, #44	; 0x2c
 80096f6:	f00a ff1d 	bl	8014534 <operator new(unsigned int)>
 80096fa:	4603      	mov	r3, r0
 80096fc:	2200      	movs	r2, #0
 80096fe:	6042      	str	r2, [r0, #4]
 8009700:	6282      	str	r2, [r0, #40]	; 0x28
 8009702:	f100 0728 	add.w	r7, r0, #40	; 0x28
 8009706:	f823 2b08 	strh.w	r2, [r3], #8
 800970a:	aa28      	add	r2, sp, #160	; 0xa0
 800970c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009710:	b111      	cbz	r1, 8009718 <main+0x29c>
 8009712:	42bb      	cmp	r3, r7
 8009714:	f040 825a 	bne.w	8009bcc <main+0x750>
 8009718:	2201      	movs	r2, #1
 800971a:	a90e      	add	r1, sp, #56	; 0x38
 800971c:	900e      	str	r0, [sp, #56]	; 0x38
 800971e:	a8ed      	add	r0, sp, #948	; 0x3b4
 8009720:	f002 ffae 	bl	800c680 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8009724:	f50d 6090 	add.w	r0, sp, #1152	; 0x480
 8009728:	f002 fd26 	bl	800c178 <LLRPDevice::LLRPDevice()>
 800972c:	4b32      	ldr	r3, [pc, #200]	; (80097f8 <main+0x37c>)
 800972e:	93ed      	str	r3, [sp, #948]	; 0x3b4
 8009730:	2100      	movs	r1, #0
 8009732:	3324      	adds	r3, #36	; 0x24
 8009734:	f20d 4084 	addw	r0, sp, #1156	; 0x484
 8009738:	f8cd 3480 	str.w	r3, [sp, #1152]	; 0x480
 800973c:	f003 f997 	bl	800ca6e <RDMHandler::RDMHandler(bool)>
 8009740:	4b2e      	ldr	r3, [pc, #184]	; (80097fc <main+0x380>)
 8009742:	492f      	ldr	r1, [pc, #188]	; (8009800 <main+0x384>)
 8009744:	6818      	ldr	r0, [r3, #0]
 8009746:	b2e4      	uxtb	r4, r4
 8009748:	f00a fe96 	bl	8014478 <Hardware::GetUuid(unsigned char*)>
 800974c:	2c20      	cmp	r4, #32
 800974e:	f89d 3408 	ldrb.w	r3, [sp, #1032]	; 0x408
 8009752:	bf28      	it	cs
 8009754:	2420      	movcs	r4, #32
 8009756:	4622      	mov	r2, r4
 8009758:	a931      	add	r1, sp, #196	; 0xc4
 800975a:	2b00      	cmp	r3, #0
 800975c:	f000 823c 	beq.w	8009bd8 <main+0x75c>
 8009760:	f20d 30c2 	addw	r0, sp, #962	; 0x3c2
 8009764:	f7ff fc7f 	bl	8009066 <memcpy>
 8009768:	f8dd 042c 	ldr.w	r0, [sp, #1068]	; 0x42c
 800976c:	f88d 43e2 	strb.w	r4, [sp, #994]	; 0x3e2
 8009770:	b128      	cbz	r0, 800977e <main+0x302>
 8009772:	6803      	ldr	r3, [r0, #0]
 8009774:	4622      	mov	r2, r4
 8009776:	689b      	ldr	r3, [r3, #8]
 8009778:	f20d 31c2 	addw	r1, sp, #962	; 0x3c2
 800977c:	4798      	blx	r3
 800977e:	4b21      	ldr	r3, [pc, #132]	; (8009804 <main+0x388>)
 8009780:	f8cd 3404 	str.w	r3, [sp, #1028]	; 0x404
 8009784:	2004      	movs	r0, #4
 8009786:	f00a fed5 	bl	8014534 <operator new(unsigned int)>
 800978a:	e03d      	b.n	8009808 <main+0x38c>
 800978c:	08016c11 	stmdaeq	r1, {r0, r4, sl, fp, sp, lr}
 8009790:	08016c08 	stmdaeq	r1, {r3, sl, fp, sp, lr}
 8009794:	08016df5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 8009798:	08016c1d 	stmdaeq	r1, {r0, r2, r3, r4, sl, fp, sp, lr}
 800979c:	40020000 	andmi	r0, r2, r0
 80097a0:	08016d40 	stmdaeq	r1, {r6, r8, sl, fp, sp, lr}
 80097a4:	2000fdf8 	strdcs	pc, [r0], -r8
 80097a8:	0801967d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, ip, pc}
 80097ac:	0801966c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, ip, pc}
 80097b0:	08016c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, sp, lr}
 80097b4:	08016c60 	stmdaeq	r1, {r5, r6, sl, fp, sp, lr}
 80097b8:	08016c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, sp, lr}
 80097bc:	08016c67 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, fp, sp, lr}
 80097c0:	08016c81 	stmdaeq	r1, {r0, r7, sl, fp, sp, lr}
 80097c4:	08016c7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, fp, sp, lr}
 80097c8:	08016df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 80097cc:	08016d54 	stmdaeq	r1, {r2, r4, r6, r8, sl, fp, sp, lr}
 80097d0:	40020400 	andmi	r0, r2, r0, lsl #8
 80097d4:	200013c8 	andcs	r1, r0, r8, asr #7
 80097d8:	080188ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, pc}
 80097dc:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 80097e0:	20000010 	andcs	r0, r0, r0, lsl r0
 80097e4:	08016d6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, fp, sp, lr}
 80097e8:	200013d0 	ldrdcs	r1, [r0], -r0
 80097ec:	08018454 	stmdaeq	r1, {r2, r4, r6, sl, pc}
 80097f0:	08016c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, sp, lr}
 80097f4:	08016cb0 	stmdaeq	r1, {r4, r5, r7, sl, fp, sp, lr}
 80097f8:	08016da4 	stmdaeq	r1, {r2, r5, r7, r8, sl, fp, sp, lr}
 80097fc:	2000fee8 	andcs	pc, r0, r8, ror #29
 8009800:	2000092f 	andcs	r0, r0, pc, lsr #18
 8009804:	06010100 	streq	r0, [r1], -r0, lsl #2
 8009808:	4baa      	ldr	r3, [pc, #680]	; (8009ab4 <main+0x638>)
 800980a:	6003      	str	r3, [r0, #0]
 800980c:	f8cd 047c 	str.w	r0, [sp, #1148]	; 0x47c
 8009810:	a8ed      	add	r0, sp, #948	; 0x3b4
 8009812:	f002 ff85 	bl	800c720 <RDMDeviceResponder::Init()>
 8009816:	a816      	add	r0, sp, #88	; 0x58
 8009818:	f007 f93c 	bl	8010a94 <StoreRDMDevice::StoreRDMDevice()>
 800981c:	a916      	add	r1, sp, #88	; 0x58
 800981e:	a875      	add	r0, sp, #468	; 0x1d4
 8009820:	f002 febc 	bl	800c59c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8009824:	a875      	add	r0, sp, #468	; 0x1d4
 8009826:	f002 fecb 	bl	800c5c0 <RDMDeviceParams::Load()>
 800982a:	b130      	cbz	r0, 800983a <main+0x3be>
 800982c:	a875      	add	r0, sp, #468	; 0x1d4
 800982e:	f002 ff0a 	bl	800c646 <RDMDeviceParams::Dump()>
 8009832:	a9ee      	add	r1, sp, #952	; 0x3b8
 8009834:	a875      	add	r0, sp, #468	; 0x1d4
 8009836:	f002 fece 	bl	800c5d6 <RDMDeviceParams::Set(RDMDevice*)>
 800983a:	ab17      	add	r3, sp, #92	; 0x5c
 800983c:	a8ed      	add	r0, sp, #948	; 0x3b4
 800983e:	f8cd 342c 	str.w	r3, [sp, #1068]	; 0x42c
 8009842:	f002 fdb1 	bl	800c3a8 <RDMNetDevice::Print()>
 8009846:	4b9c      	ldr	r3, [pc, #624]	; (8009ab8 <main+0x63c>)
 8009848:	499c      	ldr	r1, [pc, #624]	; (8009abc <main+0x640>)
 800984a:	681b      	ldr	r3, [r3, #0]
 800984c:	4632      	mov	r2, r6
 800984e:	685b      	ldr	r3, [r3, #4]
 8009850:	a890      	add	r0, sp, #576	; 0x240
 8009852:	f009 fc11 	bl	8013078 <DisplayUdf::SetTitle(char const*, ...)>
 8009856:	2203      	movs	r2, #3
 8009858:	2102      	movs	r1, #2
 800985a:	a890      	add	r0, sp, #576	; 0x240
 800985c:	f009 fc1f 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009860:	2207      	movs	r2, #7
 8009862:	2103      	movs	r1, #3
 8009864:	a890      	add	r0, sp, #576	; 0x240
 8009866:	f009 fc1a 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800986a:	2202      	movs	r2, #2
 800986c:	2104      	movs	r1, #4
 800986e:	a890      	add	r0, sp, #576	; 0x240
 8009870:	f009 fc15 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009874:	2212      	movs	r2, #18
 8009876:	2105      	movs	r1, #5
 8009878:	a890      	add	r0, sp, #576	; 0x240
 800987a:	f009 fc10 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800987e:	2213      	movs	r2, #19
 8009880:	2106      	movs	r1, #6
 8009882:	a890      	add	r0, sp, #576	; 0x240
 8009884:	f009 fc0b 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009888:	9869      	ldr	r0, [sp, #420]	; 0x1a4
 800988a:	f005 fcb1 	bl	800f1f0 <PixelType::GetType(pixel::Type)>
 800988e:	9005      	str	r0, [sp, #20]
 8009890:	986b      	ldr	r0, [sp, #428]	; 0x1ac
 8009892:	9c6a      	ldr	r4, [sp, #424]	; 0x1a8
 8009894:	9f71      	ldr	r7, [sp, #452]	; 0x1c4
 8009896:	f005 fd03 	bl	800f2a0 <PixelType::GetMap(pixel::Map)>
 800989a:	9b05      	ldr	r3, [sp, #20]
 800989c:	4a88      	ldr	r2, [pc, #544]	; (8009ac0 <main+0x644>)
 800989e:	9400      	str	r4, [sp, #0]
 80098a0:	2107      	movs	r1, #7
 80098a2:	e9cd 7001 	strd	r7, r0, [sp, #4]
 80098a6:	a890      	add	r0, sp, #576	; 0x240
 80098a8:	f7ff fd04 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80098ac:	a80f      	add	r0, sp, #60	; 0x3c
 80098ae:	f006 ffc3 	bl	8010838 <StoreDisplayUdf::StoreDisplayUdf()>
 80098b2:	a90f      	add	r1, sp, #60	; 0x3c
 80098b4:	a85f      	add	r0, sp, #380	; 0x17c
 80098b6:	f009 fd73 	bl	80133a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80098ba:	a85f      	add	r0, sp, #380	; 0x17c
 80098bc:	f009 fd7d 	bl	80133ba <DisplayUdfParams::Load()>
 80098c0:	b130      	cbz	r0, 80098d0 <main+0x454>
 80098c2:	a85f      	add	r0, sp, #380	; 0x17c
 80098c4:	a990      	add	r1, sp, #576	; 0x240
 80098c6:	f009 feb2 	bl	801362e <DisplayUdfParams::Set(DisplayUdf*)>
 80098ca:	a85f      	add	r0, sp, #380	; 0x17c
 80098cc:	f009 fee2 	bl	8013694 <DisplayUdfParams::Dump()>
 80098d0:	a890      	add	r0, sp, #576	; 0x240
 80098d2:	f009 fc93 	bl	80131fc <DisplayUdf::Show()>
 80098d6:	b17d      	cbz	r5, 80098f8 <main+0x47c>
 80098d8:	9896      	ldr	r0, [sp, #600]	; 0x258
 80098da:	b118      	cbz	r0, 80098e4 <main+0x468>
 80098dc:	6803      	ldr	r3, [r0, #0]
 80098de:	2106      	movs	r1, #6
 80098e0:	691b      	ldr	r3, [r3, #16]
 80098e2:	4798      	blx	r3
 80098e4:	4628      	mov	r0, r5
 80098e6:	f005 fdd7 	bl	800f498 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 80098ea:	4a76      	ldr	r2, [pc, #472]	; (8009ac4 <main+0x648>)
 80098ec:	9500      	str	r5, [sp, #0]
 80098ee:	4603      	mov	r3, r0
 80098f0:	2106      	movs	r1, #6
 80098f2:	a890      	add	r0, sp, #576	; 0x240
 80098f4:	f7ff fcde 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80098f8:	4633      	mov	r3, r6
 80098fa:	2203      	movs	r2, #3
 80098fc:	2108      	movs	r1, #8
 80098fe:	a843      	add	r0, sp, #268	; 0x10c
 8009900:	f000 fffe 	bl	800a900 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8009904:	a810      	add	r0, sp, #64	; 0x40
 8009906:	f007 f8fd 	bl	8010b04 <StoreRemoteConfig::StoreRemoteConfig()>
 800990a:	a910      	add	r1, sp, #64	; 0x40
 800990c:	a84c      	add	r0, sp, #304	; 0x130
 800990e:	f001 facf 	bl	800aeb0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009912:	a84c      	add	r0, sp, #304	; 0x130
 8009914:	f001 fad6 	bl	800aec4 <RemoteConfigParams::Load()>
 8009918:	b130      	cbz	r0, 8009928 <main+0x4ac>
 800991a:	a84c      	add	r0, sp, #304	; 0x130
 800991c:	a943      	add	r1, sp, #268	; 0x10c
 800991e:	f001 fbf8 	bl	800b112 <RemoteConfigParams::Set(RemoteConfig*)>
 8009922:	a84c      	add	r0, sp, #304	; 0x130
 8009924:	f001 fc15 	bl	800b152 <RemoteConfigParams::Dump()>
 8009928:	a809      	add	r0, sp, #36	; 0x24
 800992a:	f006 feff 	bl	801072c <SpiFlashStore::Flash()>
 800992e:	2800      	cmp	r0, #0
 8009930:	d1fa      	bne.n	8009928 <main+0x4ac>
 8009932:	4c65      	ldr	r4, [pc, #404]	; (8009ac8 <main+0x64c>)
 8009934:	4965      	ldr	r1, [pc, #404]	; (8009acc <main+0x650>)
 8009936:	2303      	movs	r3, #3
 8009938:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800993c:	a890      	add	r0, sp, #576	; 0x240
 800993e:	f7ff fd0b 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009942:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8009946:	6820      	ldr	r0, [r4, #0]
 8009948:	f008 faa6 	bl	8011e98 <Network::Begin(unsigned short)>
 800994c:	4b60      	ldr	r3, [pc, #384]	; (8009ad0 <main+0x654>)
 800994e:	6018      	str	r0, [r3, #0]
 8009950:	4b60      	ldr	r3, [pc, #384]	; (8009ad4 <main+0x658>)
 8009952:	4601      	mov	r1, r0
 8009954:	681a      	ldr	r2, [r3, #0]
 8009956:	6820      	ldr	r0, [r4, #0]
 8009958:	f008 faaf 	bl	8011eba <Network::JoinGroup(int, unsigned int)>
 800995c:	495e      	ldr	r1, [pc, #376]	; (8009ad8 <main+0x65c>)
 800995e:	2302      	movs	r3, #2
 8009960:	f248 0280 	movw	r2, #32896	; 0x8080
 8009964:	a890      	add	r0, sp, #576	; 0x240
 8009966:	f7ff fcf7 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800996a:	495c      	ldr	r1, [pc, #368]	; (8009adc <main+0x660>)
 800996c:	2303      	movs	r3, #3
 800996e:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009972:	a890      	add	r0, sp, #576	; 0x240
 8009974:	f7ff fcf0 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009978:	f50d 6092 	add.w	r0, sp, #1168	; 0x490
 800997c:	f002 f8d6 	bl	800bb2c <DdpDisplay::Start()>
 8009980:	2302      	movs	r3, #2
 8009982:	4957      	ldr	r1, [pc, #348]	; (8009ae0 <main+0x664>)
 8009984:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009988:	a890      	add	r0, sp, #576	; 0x240
 800998a:	f7ff fce5 	bl	8009358 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800998e:	2102      	movs	r1, #2
 8009990:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009994:	f00b f984 	bl	8014ca0 <fwdgt_config>
 8009998:	2801      	cmp	r0, #1
 800999a:	bf0c      	ite	eq
 800999c:	2301      	moveq	r3, #1
 800999e:	2300      	movne	r3, #0
 80099a0:	f88d 301c 	strb.w	r3, [sp, #28]
 80099a4:	d101      	bne.n	80099aa <main+0x52e>
 80099a6:	f00b f96b 	bl	8014c80 <fwdgt_enable>
 80099aa:	4d4e      	ldr	r5, [pc, #312]	; (8009ae4 <main+0x668>)
 80099ac:	4e4e      	ldr	r6, [pc, #312]	; (8009ae8 <main+0x66c>)
 80099ae:	4f4f      	ldr	r7, [pc, #316]	; (8009aec <main+0x670>)
 80099b0:	f00b f96e 	bl	8014c90 <fwdgt_counter_reload>
 80099b4:	f7fe fdd6 	bl	8008564 <net_handle>
 80099b8:	f50d 6092 	add.w	r0, sp, #1168	; 0x490
 80099bc:	f002 fb7a 	bl	800c0b4 <DdpDisplay::Run()>
 80099c0:	a843      	add	r0, sp, #268	; 0x10c
 80099c2:	f001 f939 	bl	800ac38 <RemoteConfig::Run()>
 80099c6:	a809      	add	r0, sp, #36	; 0x24
 80099c8:	f006 feb0 	bl	801072c <SpiFlashStore::Flash()>
 80099cc:	682b      	ldr	r3, [r5, #0]
 80099ce:	b113      	cbz	r3, 80099d6 <main+0x55a>
 80099d0:	a80b      	add	r0, sp, #44	; 0x2c
 80099d2:	f005 ff85 	bl	800f8e0 <PixelPatterns::Run()>
 80099d6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80099da:	4943      	ldr	r1, [pc, #268]	; (8009ae8 <main+0x66c>)
 80099dc:	7838      	ldrb	r0, [r7, #0]
 80099de:	aa11      	add	r2, sp, #68	; 0x44
 80099e0:	f007 fd64 	bl	80114ac <udp_recv2>
 80099e4:	f1a0 030b 	sub.w	r3, r0, #11
 80099e8:	b29b      	uxth	r3, r3
 80099ea:	2b05      	cmp	r3, #5
 80099ec:	4604      	mov	r4, r0
 80099ee:	d82d      	bhi.n	8009a4c <main+0x5d0>
 80099f0:	f8d6 8000 	ldr.w	r8, [r6]
 80099f4:	483e      	ldr	r0, [pc, #248]	; (8009af0 <main+0x674>)
 80099f6:	2204      	movs	r2, #4
 80099f8:	4641      	mov	r1, r8
 80099fa:	f7ff fb24 	bl	8009046 <memcmp>
 80099fe:	bb28      	cbnz	r0, 8009a4c <main+0x5d0>
 8009a00:	eb08 0304 	add.w	r3, r8, r4
 8009a04:	f108 0104 	add.w	r1, r8, #4
 8009a08:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8009a0c:	2b0a      	cmp	r3, #10
 8009a0e:	bf04      	itt	eq
 8009a10:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009a14:	b2a4      	uxtheq	r4, r4
 8009a16:	2c0a      	cmp	r4, #10
 8009a18:	f000 80e5 	beq.w	8009be6 <main+0x76a>
 8009a1c:	2c0e      	cmp	r4, #14
 8009a1e:	f200 80e2 	bhi.w	8009be6 <main+0x76a>
 8009a22:	4834      	ldr	r0, [pc, #208]	; (8009af4 <main+0x678>)
 8009a24:	9105      	str	r1, [sp, #20]
 8009a26:	2206      	movs	r2, #6
 8009a28:	f7ff fb0d 	bl	8009046 <memcmp>
 8009a2c:	9905      	ldr	r1, [sp, #20]
 8009a2e:	2800      	cmp	r0, #0
 8009a30:	f040 80d9 	bne.w	8009be6 <main+0x76a>
 8009a34:	2104      	movs	r1, #4
 8009a36:	f108 000a 	add.w	r0, r8, #10
 8009a3a:	f7ff fb33 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009a3e:	285b      	cmp	r0, #91	; 0x5b
 8009a40:	4601      	mov	r1, r0
 8009a42:	d903      	bls.n	8009a4c <main+0x5d0>
 8009a44:	4b2c      	ldr	r3, [pc, #176]	; (8009af8 <main+0x67c>)
 8009a46:	6818      	ldr	r0, [r3, #0]
 8009a48:	f004 fc44 	bl	800e2d4 <Dmx::SetDmxBreakTime(unsigned int)>
 8009a4c:	a80a      	add	r0, sp, #40	; 0x28
 8009a4e:	f008 f97f 	bl	8011d50 <MDNS::Run()>
 8009a52:	f50d 6090 	add.w	r0, sp, #1152	; 0x480
 8009a56:	f002 fc51 	bl	800c2fc <LLRPDevice::Run()>
 8009a5a:	a855      	add	r0, sp, #340	; 0x154
 8009a5c:	f001 fec0 	bl	800b7e0 <HttpDaemon::Run()>
 8009a60:	9a95      	ldr	r2, [sp, #596]	; 0x254
 8009a62:	2a00      	cmp	r2, #0
 8009a64:	f040 810e 	bne.w	8009c84 <main+0x808>
 8009a68:	9925      	ldr	r1, [sp, #148]	; 0x94
 8009a6a:	2900      	cmp	r1, #0
 8009a6c:	d0a0      	beq.n	80099b0 <main+0x534>
 8009a6e:	4a23      	ldr	r2, [pc, #140]	; (8009afc <main+0x680>)
 8009a70:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8009a72:	6813      	ldr	r3, [r2, #0]
 8009a74:	1a1b      	subs	r3, r3, r0
 8009a76:	4299      	cmp	r1, r3
 8009a78:	d89a      	bhi.n	80099b0 <main+0x534>
 8009a7a:	6813      	ldr	r3, [r2, #0]
 8009a7c:	9327      	str	r3, [sp, #156]	; 0x9c
 8009a7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8009a80:	f083 0201 	eor.w	r2, r3, #1
 8009a84:	9226      	str	r2, [sp, #152]	; 0x98
 8009a86:	2b01      	cmp	r3, #1
 8009a88:	4a1d      	ldr	r2, [pc, #116]	; (8009b00 <main+0x684>)
 8009a8a:	bf1a      	itte	ne
 8009a8c:	2301      	movne	r3, #1
 8009a8e:	f8c2 3818 	strne.w	r3, [r2, #2072]	; 0x818
 8009a92:	f8c2 3828 	streq.w	r3, [r2, #2088]	; 0x828
 8009a96:	e78b      	b.n	80099b0 <main+0x534>
 8009a98:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8009b04 <main+0x688>
 8009a9c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8009b08 <main+0x68c>
 8009aa0:	f8df a068 	ldr.w	sl, [pc, #104]	; 8009b0c <main+0x690>
 8009aa4:	2400      	movs	r4, #0
 8009aa6:	2d05      	cmp	r5, #5
 8009aa8:	d838      	bhi.n	8009b1c <main+0x6a0>
 8009aaa:	e8df f005 	tbb	[pc, r5]
 8009aae:	473d3164 	ldrmi	r3, [sp, -r4, ror #2]!
 8009ab2:	6de45850 	stclvs	8, cr5, [r4, #320]!	; 0x140
 8009ab6:	13d00801 	bicsne	r0, r0, #65536	; 0x10000
 8009aba:	6cc92000 	stclvs	0, cr2, [r9], {0}
 8009abe:	6cd90801 	ldclvs	8, cr0, [r9], {1}
 8009ac2:	6ce60801 	stclvs	8, cr0, [r6], #4
 8009ac6:	fb340801 	blx	8d0bad4 <__exidx_end+0xcf1ac8>
 8009aca:	84762000 	ldrbthi	r2, [r6], #-0
 8009ace:	00000801 	andeq	r0, r0, r1, lsl #16
 8009ad2:	08242000 	stmdaeq	r4!, {sp}
 8009ad6:	84672000 	strbthi	r2, [r7], #-0
 8009ada:	6cec0801 	stclvs	8, cr0, [ip], #4
 8009ade:	6d010801 	stcvs	8, cr0, [r1, #-4]
 8009ae2:	13c80801 	bicne	r0, r8, #65536	; 0x10000
 8009ae6:	11b42000 			; <UNDEFINED> instruction: 0x11b42000
 8009aea:	00102000 	andseq	r2, r0, r0
 8009aee:	6d152000 	ldcvs	0, cr2, [r5, #-0]
 8009af2:	6d1a0801 	ldcvs	8, cr0, [sl, #-4]
 8009af6:	11ac0801 			; <UNDEFINED> instruction: 0x11ac0801
 8009afa:	fefc2000 	cdp2	0, 15, cr2, cr12, cr0, {0}
 8009afe:	00002000 	andeq	r2, r0, r0
 8009b02:	11b84002 			; <UNDEFINED> instruction: 0x11b84002
 8009b06:	13c42000 	bicne	r2, r4, #0
 8009b0a:	13c02000 	bicne	r2, r0, #0
 8009b0e:	23002000 	movwcs	r2, #0
 8009b12:	2264      	movs	r2, #100	; 0x64
 8009b14:	4621      	mov	r1, r4
 8009b16:	a80b      	add	r0, sp, #44	; 0x2c
 8009b18:	f005 fcca 	bl	800f4b0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b1c:	3401      	adds	r4, #1
 8009b1e:	2c10      	cmp	r4, #16
 8009b20:	f108 0820 	add.w	r8, r8, #32
 8009b24:	d1bf      	bne.n	8009aa6 <main+0x62a>
 8009b26:	e592      	b.n	800964e <main+0x1d2>
 8009b28:	2364      	movs	r3, #100	; 0x64
 8009b2a:	2200      	movs	r2, #0
 8009b2c:	e9cd 3200 	strd	r3, r2, [sp]
 8009b30:	4621      	mov	r1, r4
 8009b32:	4b5f      	ldr	r3, [pc, #380]	; (8009cb0 <main+0x834>)
 8009b34:	a80b      	add	r0, sp, #44	; 0x2c
 8009b36:	f005 fcd1 	bl	800f4dc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b3a:	e7ef      	b.n	8009b1c <main+0x6a0>
 8009b3c:	2300      	movs	r3, #0
 8009b3e:	9300      	str	r3, [sp, #0]
 8009b40:	4a5b      	ldr	r2, [pc, #364]	; (8009cb0 <main+0x834>)
 8009b42:	2364      	movs	r3, #100	; 0x64
 8009b44:	4621      	mov	r1, r4
 8009b46:	a80b      	add	r0, sp, #44	; 0x2c
 8009b48:	f005 fce4 	bl	800f514 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b4c:	e7e6      	b.n	8009b1c <main+0x6a0>
 8009b4e:	2364      	movs	r3, #100	; 0x64
 8009b50:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8009b54:	4621      	mov	r1, r4
 8009b56:	a80b      	add	r0, sp, #44	; 0x2c
 8009b58:	f005 fcf6 	bl	800f548 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8009b5c:	e7de      	b.n	8009b1c <main+0x6a0>
 8009b5e:	2364      	movs	r3, #100	; 0x64
 8009b60:	2200      	movs	r2, #0
 8009b62:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009b66:	230a      	movs	r3, #10
 8009b68:	9300      	str	r3, [sp, #0]
 8009b6a:	4621      	mov	r1, r4
 8009b6c:	4b50      	ldr	r3, [pc, #320]	; (8009cb0 <main+0x834>)
 8009b6e:	a80b      	add	r0, sp, #44	; 0x2c
 8009b70:	f005 fd1e 	bl	800f5b0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b74:	e7d2      	b.n	8009b1c <main+0x6a0>
 8009b76:	2700      	movs	r7, #0
 8009b78:	f8c8 701c 	str.w	r7, [r8, #28]
 8009b7c:	f8da 3000 	ldr.w	r3, [sl]
 8009b80:	f8d9 0000 	ldr.w	r0, [r9]
 8009b84:	429f      	cmp	r7, r3
 8009b86:	d30a      	bcc.n	8009b9e <main+0x722>
 8009b88:	f8d9 0000 	ldr.w	r0, [r9]
 8009b8c:	f006 fb34 	bl	80101f8 <WS28xxMulti::IsUpdating()>
 8009b90:	2800      	cmp	r0, #0
 8009b92:	d1f9      	bne.n	8009b88 <main+0x70c>
 8009b94:	f8d9 0000 	ldr.w	r0, [r9]
 8009b98:	f006 f9c8 	bl	800ff2c <WS28xxMulti::Update()>
 8009b9c:	e7be      	b.n	8009b1c <main+0x6a0>
 8009b9e:	6803      	ldr	r3, [r0, #0]
 8009ba0:	2b07      	cmp	r3, #7
 8009ba2:	f04f 0300 	mov.w	r3, #0
 8009ba6:	d007      	beq.n	8009bb8 <main+0x73c>
 8009ba8:	e9cd 3300 	strd	r3, r3, [sp]
 8009bac:	463a      	mov	r2, r7
 8009bae:	4621      	mov	r1, r4
 8009bb0:	f006 fba2 	bl	80102f8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8009bb4:	3701      	adds	r7, #1
 8009bb6:	e7e1      	b.n	8009b7c <main+0x700>
 8009bb8:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009bbc:	9300      	str	r3, [sp, #0]
 8009bbe:	463a      	mov	r2, r7
 8009bc0:	4621      	mov	r1, r4
 8009bc2:	f006 fc1b 	bl	80103fc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009bc6:	e7f5      	b.n	8009bb4 <main+0x738>
 8009bc8:	aba4      	add	r3, sp, #656	; 0x290
 8009bca:	e568      	b.n	800969e <main+0x222>
 8009bcc:	f803 1b01 	strb.w	r1, [r3], #1
 8009bd0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009bd2:	3101      	adds	r1, #1
 8009bd4:	6281      	str	r1, [r0, #40]	; 0x28
 8009bd6:	e599      	b.n	800970c <main+0x290>
 8009bd8:	f20d 4009 	addw	r0, sp, #1033	; 0x409
 8009bdc:	f7ff fa43 	bl	8009066 <memcpy>
 8009be0:	f88d 4429 	strb.w	r4, [sp, #1065]	; 0x429
 8009be4:	e5cb      	b.n	800977e <main+0x302>
 8009be6:	4833      	ldr	r0, [pc, #204]	; (8009cb4 <main+0x838>)
 8009be8:	9105      	str	r1, [sp, #20]
 8009bea:	2204      	movs	r2, #4
 8009bec:	f7ff fa2b 	bl	8009046 <memcmp>
 8009bf0:	9905      	ldr	r1, [sp, #20]
 8009bf2:	b980      	cbnz	r0, 8009c16 <main+0x79a>
 8009bf4:	2107      	movs	r1, #7
 8009bf6:	f108 0008 	add.w	r0, r8, #8
 8009bfa:	f7ff fa53 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009bfe:	4b2e      	ldr	r3, [pc, #184]	; (8009cb8 <main+0x83c>)
 8009c00:	f1a0 020c 	sub.w	r2, r0, #12
 8009c04:	429a      	cmp	r2, r3
 8009c06:	4601      	mov	r1, r0
 8009c08:	f63f af20 	bhi.w	8009a4c <main+0x5d0>
 8009c0c:	4b2b      	ldr	r3, [pc, #172]	; (8009cbc <main+0x840>)
 8009c0e:	6818      	ldr	r0, [r3, #0]
 8009c10:	f004 fb6a 	bl	800e2e8 <Dmx::SetDmxMabTime(unsigned int)>
 8009c14:	e71a      	b.n	8009a4c <main+0x5d0>
 8009c16:	2c0c      	cmp	r4, #12
 8009c18:	d917      	bls.n	8009c4a <main+0x7ce>
 8009c1a:	2c0e      	cmp	r4, #14
 8009c1c:	d82f      	bhi.n	8009c7e <main+0x802>
 8009c1e:	4828      	ldr	r0, [pc, #160]	; (8009cc0 <main+0x844>)
 8009c20:	9105      	str	r1, [sp, #20]
 8009c22:	2208      	movs	r2, #8
 8009c24:	f7ff fa0f 	bl	8009046 <memcmp>
 8009c28:	9905      	ldr	r1, [sp, #20]
 8009c2a:	bb40      	cbnz	r0, 8009c7e <main+0x802>
 8009c2c:	2102      	movs	r1, #2
 8009c2e:	f108 000c 	add.w	r0, r8, #12
 8009c32:	f7ff fa37 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009c36:	4601      	mov	r1, r0
 8009c38:	b110      	cbz	r0, 8009c40 <main+0x7c4>
 8009c3a:	4b22      	ldr	r3, [pc, #136]	; (8009cc4 <main+0x848>)
 8009c3c:	fbb3 f1f0 	udiv	r1, r3, r0
 8009c40:	4b1e      	ldr	r3, [pc, #120]	; (8009cbc <main+0x840>)
 8009c42:	6818      	ldr	r0, [r3, #0]
 8009c44:	f004 fb1e 	bl	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009c48:	e700      	b.n	8009a4c <main+0x5d0>
 8009c4a:	2c0a      	cmp	r4, #10
 8009c4c:	f43f aefe 	beq.w	8009a4c <main+0x5d0>
 8009c50:	481d      	ldr	r0, [pc, #116]	; (8009cc8 <main+0x84c>)
 8009c52:	2206      	movs	r2, #6
 8009c54:	f7ff f9f7 	bl	8009046 <memcmp>
 8009c58:	2800      	cmp	r0, #0
 8009c5a:	f47f aef7 	bne.w	8009a4c <main+0x5d0>
 8009c5e:	2103      	movs	r1, #3
 8009c60:	f108 000a 	add.w	r0, r8, #10
 8009c64:	f7ff fa1e 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009c68:	1e83      	subs	r3, r0, #2
 8009c6a:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009c6e:	f63f aeed 	bhi.w	8009a4c <main+0x5d0>
 8009c72:	4b12      	ldr	r3, [pc, #72]	; (8009cbc <main+0x840>)
 8009c74:	b281      	uxth	r1, r0
 8009c76:	6818      	ldr	r0, [r3, #0]
 8009c78:	f004 fb40 	bl	800e2fc <Dmx::SetDmxSlots(unsigned short)>
 8009c7c:	e6e6      	b.n	8009a4c <main+0x5d0>
 8009c7e:	2c0d      	cmp	r4, #13
 8009c80:	d0e6      	beq.n	8009c50 <main+0x7d4>
 8009c82:	e6e3      	b.n	8009a4c <main+0x5d0>
 8009c84:	f89d 3250 	ldrb.w	r3, [sp, #592]	; 0x250
 8009c88:	b95b      	cbnz	r3, 8009ca2 <main+0x826>
 8009c8a:	4b10      	ldr	r3, [pc, #64]	; (8009ccc <main+0x850>)
 8009c8c:	9991      	ldr	r1, [sp, #580]	; 0x244
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	1a5b      	subs	r3, r3, r1
 8009c92:	429a      	cmp	r2, r3
 8009c94:	f4bf aee8 	bcs.w	8009a68 <main+0x5ec>
 8009c98:	2101      	movs	r1, #1
 8009c9a:	a890      	add	r0, sp, #576	; 0x240
 8009c9c:	f7ff fb84 	bl	80093a8 <Display::SetSleep(bool)>
 8009ca0:	e6e2      	b.n	8009a68 <main+0x5ec>
 8009ca2:	f7ff fba1 	bl	80093e8 <display::timeout::gpio_renew()>
 8009ca6:	2800      	cmp	r0, #0
 8009ca8:	f43f aede 	beq.w	8009a68 <main+0x5ec>
 8009cac:	2100      	movs	r1, #0
 8009cae:	e7f4      	b.n	8009c9a <main+0x81e>
 8009cb0:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009cb4:	08016d21 	stmdaeq	r1, {r0, r5, r8, sl, fp, sp, lr}
 8009cb8:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8009cbc:	200011ac 	andcs	r1, r0, ip, lsr #3
 8009cc0:	08016d26 	stmdaeq	r1, {r1, r2, r5, r8, sl, fp, sp, lr}
 8009cc4:	000f4240 	andeq	r4, pc, r0, asr #4
 8009cc8:	08016d2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}
 8009ccc:	2000fefc 	strdcs	pc, [r0], -ip

08009cd0 <RDMSoftwareVersion::GetVersion()>:
 8009cd0:	4800      	ldr	r0, [pc, #0]	; (8009cd4 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009cd2:	4770      	bx	lr
 8009cd4:	08016ef9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sl, fp, sp, lr}

08009cd8 <RDMSoftwareVersion::GetVersionLength()>:
 8009cd8:	2003      	movs	r0, #3
 8009cda:	4770      	bx	lr

08009cdc <RDMSoftwareVersion::GetVersionId()>:
 8009cdc:	4800      	ldr	r0, [pc, #0]	; (8009ce0 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009cde:	4770      	bx	lr
 8009ce0:	634541a7 	movtvs	r4, #20903	; 0x51a7

08009ce4 <_itostr>:
 8009ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ce6:	0fc7      	lsrs	r7, r0, #31
 8009ce8:	b091      	sub	sp, #68	; 0x44
 8009cea:	bf18      	it	ne
 8009cec:	4240      	negne	r0, r0
 8009cee:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009cf2:	b9c8      	cbnz	r0, 8009d28 <_itostr+0x44>
 8009cf4:	2330      	movs	r3, #48	; 0x30
 8009cf6:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009cfa:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009cfe:	b132      	cbz	r2, 8009d0e <_itostr+0x2a>
 8009d00:	4668      	mov	r0, sp
 8009d02:	2530      	movs	r5, #48	; 0x30
 8009d04:	1ae6      	subs	r6, r4, r3
 8009d06:	4296      	cmp	r6, r2
 8009d08:	da01      	bge.n	8009d0e <_itostr+0x2a>
 8009d0a:	4283      	cmp	r3, r0
 8009d0c:	d81c      	bhi.n	8009d48 <_itostr+0x64>
 8009d0e:	b117      	cbz	r7, 8009d16 <_itostr+0x32>
 8009d10:	222d      	movs	r2, #45	; 0x2d
 8009d12:	f803 2901 	strb.w	r2, [r3], #-1
 8009d16:	3301      	adds	r3, #1
 8009d18:	1ae0      	subs	r0, r4, r3
 8009d1a:	3901      	subs	r1, #1
 8009d1c:	aa10      	add	r2, sp, #64	; 0x40
 8009d1e:	4293      	cmp	r3, r2
 8009d20:	d315      	bcc.n	8009d4e <_itostr+0x6a>
 8009d22:	3001      	adds	r0, #1
 8009d24:	b011      	add	sp, #68	; 0x44
 8009d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d28:	4623      	mov	r3, r4
 8009d2a:	250a      	movs	r5, #10
 8009d2c:	46ec      	mov	ip, sp
 8009d2e:	fb90 f6f5 	sdiv	r6, r0, r5
 8009d32:	fb05 0016 	mls	r0, r5, r6, r0
 8009d36:	3030      	adds	r0, #48	; 0x30
 8009d38:	f803 0901 	strb.w	r0, [r3], #-1
 8009d3c:	4630      	mov	r0, r6
 8009d3e:	2e00      	cmp	r6, #0
 8009d40:	d0dd      	beq.n	8009cfe <_itostr+0x1a>
 8009d42:	4563      	cmp	r3, ip
 8009d44:	d1f3      	bne.n	8009d2e <_itostr+0x4a>
 8009d46:	e7da      	b.n	8009cfe <_itostr+0x1a>
 8009d48:	f803 5901 	strb.w	r5, [r3], #-1
 8009d4c:	e7da      	b.n	8009d04 <_itostr+0x20>
 8009d4e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009d52:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009d56:	e7e1      	b.n	8009d1c <_itostr+0x38>

08009d58 <_xputch>:
 8009d58:	4603      	mov	r3, r0
 8009d5a:	b410      	push	{r4}
 8009d5c:	4c09      	ldr	r4, [pc, #36]	; (8009d84 <_xputch+0x2c>)
 8009d5e:	68da      	ldr	r2, [r3, #12]
 8009d60:	4608      	mov	r0, r1
 8009d62:	6821      	ldr	r1, [r4, #0]
 8009d64:	3201      	adds	r2, #1
 8009d66:	60da      	str	r2, [r3, #12]
 8009d68:	b141      	cbz	r1, 8009d7c <_xputch+0x24>
 8009d6a:	691b      	ldr	r3, [r3, #16]
 8009d6c:	429a      	cmp	r2, r3
 8009d6e:	da02      	bge.n	8009d76 <_xputch+0x1e>
 8009d70:	1c4b      	adds	r3, r1, #1
 8009d72:	6023      	str	r3, [r4, #0]
 8009d74:	7008      	strb	r0, [r1, #0]
 8009d76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d7a:	4770      	bx	lr
 8009d7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009d80:	f00a ba18 	b.w	80141b4 <console_putc>
 8009d84:	200000f8 	strdcs	r0, [r0], -r8

08009d88 <_format_int>:
 8009d88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d8c:	4698      	mov	r8, r3
 8009d8e:	b091      	sub	sp, #68	; 0x44
 8009d90:	ea52 0308 	orrs.w	r3, r2, r8
 8009d94:	4606      	mov	r6, r0
 8009d96:	4617      	mov	r7, r2
 8009d98:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009d9c:	d133      	bne.n	8009e06 <_format_int+0x7e>
 8009d9e:	2330      	movs	r3, #48	; 0x30
 8009da0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009da4:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009da8:	6833      	ldr	r3, [r6, #0]
 8009daa:	07d8      	lsls	r0, r3, #31
 8009dac:	d507      	bpl.n	8009dbe <_format_int+0x36>
 8009dae:	6871      	ldr	r1, [r6, #4]
 8009db0:	466a      	mov	r2, sp
 8009db2:	2030      	movs	r0, #48	; 0x30
 8009db4:	1b2f      	subs	r7, r5, r4
 8009db6:	428f      	cmp	r7, r1
 8009db8:	da01      	bge.n	8009dbe <_format_int+0x36>
 8009dba:	4294      	cmp	r4, r2
 8009dbc:	d839      	bhi.n	8009e32 <_format_int+0xaa>
 8009dbe:	0699      	lsls	r1, r3, #26
 8009dc0:	d507      	bpl.n	8009dd2 <_format_int+0x4a>
 8009dc2:	68b1      	ldr	r1, [r6, #8]
 8009dc4:	466a      	mov	r2, sp
 8009dc6:	2030      	movs	r0, #48	; 0x30
 8009dc8:	1b2f      	subs	r7, r5, r4
 8009dca:	428f      	cmp	r7, r1
 8009dcc:	da01      	bge.n	8009dd2 <_format_int+0x4a>
 8009dce:	4294      	cmp	r4, r2
 8009dd0:	d832      	bhi.n	8009e38 <_format_int+0xb0>
 8009dd2:	071a      	lsls	r2, r3, #28
 8009dd4:	bf44      	itt	mi
 8009dd6:	222d      	movmi	r2, #45	; 0x2d
 8009dd8:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009ddc:	065b      	lsls	r3, r3, #25
 8009dde:	d407      	bmi.n	8009df0 <_format_int+0x68>
 8009de0:	68b2      	ldr	r2, [r6, #8]
 8009de2:	466b      	mov	r3, sp
 8009de4:	2120      	movs	r1, #32
 8009de6:	1b28      	subs	r0, r5, r4
 8009de8:	4290      	cmp	r0, r2
 8009dea:	da01      	bge.n	8009df0 <_format_int+0x68>
 8009dec:	429c      	cmp	r4, r3
 8009dee:	d826      	bhi.n	8009e3e <_format_int+0xb6>
 8009df0:	1b2d      	subs	r5, r5, r4
 8009df2:	3401      	adds	r4, #1
 8009df4:	ab10      	add	r3, sp, #64	; 0x40
 8009df6:	429c      	cmp	r4, r3
 8009df8:	d324      	bcc.n	8009e44 <_format_int+0xbc>
 8009dfa:	68b3      	ldr	r3, [r6, #8]
 8009dfc:	42ab      	cmp	r3, r5
 8009dfe:	dc27      	bgt.n	8009e50 <_format_int+0xc8>
 8009e00:	b011      	add	sp, #68	; 0x44
 8009e02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e06:	462c      	mov	r4, r5
 8009e08:	46e9      	mov	r9, sp
 8009e0a:	4638      	mov	r0, r7
 8009e0c:	4641      	mov	r1, r8
 8009e0e:	220a      	movs	r2, #10
 8009e10:	2300      	movs	r3, #0
 8009e12:	f7fe ff41 	bl	8008c98 <__aeabi_uldivmod>
 8009e16:	3230      	adds	r2, #48	; 0x30
 8009e18:	f804 2901 	strb.w	r2, [r4], #-1
 8009e1c:	463a      	mov	r2, r7
 8009e1e:	4643      	mov	r3, r8
 8009e20:	2a0a      	cmp	r2, #10
 8009e22:	f173 0300 	sbcs.w	r3, r3, #0
 8009e26:	4607      	mov	r7, r0
 8009e28:	4688      	mov	r8, r1
 8009e2a:	d3bd      	bcc.n	8009da8 <_format_int+0x20>
 8009e2c:	454c      	cmp	r4, r9
 8009e2e:	d1ec      	bne.n	8009e0a <_format_int+0x82>
 8009e30:	e7ba      	b.n	8009da8 <_format_int+0x20>
 8009e32:	f804 0901 	strb.w	r0, [r4], #-1
 8009e36:	e7bd      	b.n	8009db4 <_format_int+0x2c>
 8009e38:	f804 0901 	strb.w	r0, [r4], #-1
 8009e3c:	e7c4      	b.n	8009dc8 <_format_int+0x40>
 8009e3e:	f804 1901 	strb.w	r1, [r4], #-1
 8009e42:	e7d0      	b.n	8009de6 <_format_int+0x5e>
 8009e44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009e48:	4630      	mov	r0, r6
 8009e4a:	f7ff ff85 	bl	8009d58 <_xputch>
 8009e4e:	e7d1      	b.n	8009df4 <_format_int+0x6c>
 8009e50:	2120      	movs	r1, #32
 8009e52:	4630      	mov	r0, r6
 8009e54:	f7ff ff80 	bl	8009d58 <_xputch>
 8009e58:	3501      	adds	r5, #1
 8009e5a:	e7ce      	b.n	8009dfa <_format_int+0x72>

08009e5c <_format_hex>:
 8009e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e5e:	b091      	sub	sp, #68	; 0x44
 8009e60:	6804      	ldr	r4, [r0, #0]
 8009e62:	4606      	mov	r6, r0
 8009e64:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009e68:	bb61      	cbnz	r1, 8009ec4 <_format_hex+0x68>
 8009e6a:	2330      	movs	r3, #48	; 0x30
 8009e6c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009e70:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009e74:	07e5      	lsls	r5, r4, #31
 8009e76:	d507      	bpl.n	8009e88 <_format_hex+0x2c>
 8009e78:	6870      	ldr	r0, [r6, #4]
 8009e7a:	4669      	mov	r1, sp
 8009e7c:	2530      	movs	r5, #48	; 0x30
 8009e7e:	1ad7      	subs	r7, r2, r3
 8009e80:	4287      	cmp	r7, r0
 8009e82:	da01      	bge.n	8009e88 <_format_hex+0x2c>
 8009e84:	428b      	cmp	r3, r1
 8009e86:	d831      	bhi.n	8009eec <_format_hex+0x90>
 8009e88:	06a0      	lsls	r0, r4, #26
 8009e8a:	d507      	bpl.n	8009e9c <_format_hex+0x40>
 8009e8c:	68b0      	ldr	r0, [r6, #8]
 8009e8e:	4669      	mov	r1, sp
 8009e90:	2530      	movs	r5, #48	; 0x30
 8009e92:	1ad7      	subs	r7, r2, r3
 8009e94:	4287      	cmp	r7, r0
 8009e96:	da01      	bge.n	8009e9c <_format_hex+0x40>
 8009e98:	428b      	cmp	r3, r1
 8009e9a:	d82a      	bhi.n	8009ef2 <_format_hex+0x96>
 8009e9c:	0661      	lsls	r1, r4, #25
 8009e9e:	d407      	bmi.n	8009eb0 <_format_hex+0x54>
 8009ea0:	68b0      	ldr	r0, [r6, #8]
 8009ea2:	4669      	mov	r1, sp
 8009ea4:	2420      	movs	r4, #32
 8009ea6:	1ad5      	subs	r5, r2, r3
 8009ea8:	4285      	cmp	r5, r0
 8009eaa:	da01      	bge.n	8009eb0 <_format_hex+0x54>
 8009eac:	428b      	cmp	r3, r1
 8009eae:	d823      	bhi.n	8009ef8 <_format_hex+0x9c>
 8009eb0:	1ad5      	subs	r5, r2, r3
 8009eb2:	1c5c      	adds	r4, r3, #1
 8009eb4:	ab10      	add	r3, sp, #64	; 0x40
 8009eb6:	429c      	cmp	r4, r3
 8009eb8:	d321      	bcc.n	8009efe <_format_hex+0xa2>
 8009eba:	68b3      	ldr	r3, [r6, #8]
 8009ebc:	429d      	cmp	r5, r3
 8009ebe:	db24      	blt.n	8009f0a <_format_hex+0xae>
 8009ec0:	b011      	add	sp, #68	; 0x44
 8009ec2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ec4:	f014 0f02 	tst.w	r4, #2
 8009ec8:	bf0c      	ite	eq
 8009eca:	2757      	moveq	r7, #87	; 0x57
 8009ecc:	2737      	movne	r7, #55	; 0x37
 8009ece:	4613      	mov	r3, r2
 8009ed0:	466d      	mov	r5, sp
 8009ed2:	f001 000f 	and.w	r0, r1, #15
 8009ed6:	2809      	cmp	r0, #9
 8009ed8:	bf94      	ite	ls
 8009eda:	3030      	addls	r0, #48	; 0x30
 8009edc:	19c0      	addhi	r0, r0, r7
 8009ede:	0909      	lsrs	r1, r1, #4
 8009ee0:	f803 0901 	strb.w	r0, [r3], #-1
 8009ee4:	d0c6      	beq.n	8009e74 <_format_hex+0x18>
 8009ee6:	42ab      	cmp	r3, r5
 8009ee8:	d1f3      	bne.n	8009ed2 <_format_hex+0x76>
 8009eea:	e7c3      	b.n	8009e74 <_format_hex+0x18>
 8009eec:	f803 5901 	strb.w	r5, [r3], #-1
 8009ef0:	e7c5      	b.n	8009e7e <_format_hex+0x22>
 8009ef2:	f803 5901 	strb.w	r5, [r3], #-1
 8009ef6:	e7cc      	b.n	8009e92 <_format_hex+0x36>
 8009ef8:	f803 4901 	strb.w	r4, [r3], #-1
 8009efc:	e7d3      	b.n	8009ea6 <_format_hex+0x4a>
 8009efe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009f02:	4630      	mov	r0, r6
 8009f04:	f7ff ff28 	bl	8009d58 <_xputch>
 8009f08:	e7d4      	b.n	8009eb4 <_format_hex+0x58>
 8009f0a:	2120      	movs	r1, #32
 8009f0c:	4630      	mov	r0, r6
 8009f0e:	f7ff ff23 	bl	8009d58 <_xputch>
 8009f12:	3501      	adds	r5, #1
 8009f14:	e7d1      	b.n	8009eba <_format_hex+0x5e>
	...

08009f18 <_vprintf>:
 8009f18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009f1c:	f04f 0800 	mov.w	r8, #0
 8009f20:	b096      	sub	sp, #88	; 0x58
 8009f22:	e9cd 8004 	strd	r8, r0, [sp, #16]
 8009f26:	4614      	mov	r4, r2
 8009f28:	af06      	add	r7, sp, #24
 8009f2a:	780b      	ldrb	r3, [r1, #0]
 8009f2c:	b91b      	cbnz	r3, 8009f36 <_vprintf+0x1e>
 8009f2e:	9804      	ldr	r0, [sp, #16]
 8009f30:	b016      	add	sp, #88	; 0x58
 8009f32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f36:	2b25      	cmp	r3, #37	; 0x25
 8009f38:	f101 0601 	add.w	r6, r1, #1
 8009f3c:	d005      	beq.n	8009f4a <_vprintf+0x32>
 8009f3e:	4619      	mov	r1, r3
 8009f40:	a801      	add	r0, sp, #4
 8009f42:	f7ff ff09 	bl	8009d58 <_xputch>
 8009f46:	4631      	mov	r1, r6
 8009f48:	e7ef      	b.n	8009f2a <_vprintf+0x12>
 8009f4a:	784b      	ldrb	r3, [r1, #1]
 8009f4c:	f8cd 800c 	str.w	r8, [sp, #12]
 8009f50:	2b30      	cmp	r3, #48	; 0x30
 8009f52:	e9cd 8801 	strd	r8, r8, [sp, #4]
 8009f56:	d129      	bne.n	8009fac <_vprintf+0x94>
 8009f58:	2320      	movs	r3, #32
 8009f5a:	9301      	str	r3, [sp, #4]
 8009f5c:	1c8e      	adds	r6, r1, #2
 8009f5e:	2200      	movs	r2, #0
 8009f60:	4635      	mov	r5, r6
 8009f62:	4613      	mov	r3, r2
 8009f64:	f04f 0c0a 	mov.w	ip, #10
 8009f68:	7829      	ldrb	r1, [r5, #0]
 8009f6a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8009f6e:	2809      	cmp	r0, #9
 8009f70:	462e      	mov	r6, r5
 8009f72:	f105 0501 	add.w	r5, r5, #1
 8009f76:	d91d      	bls.n	8009fb4 <_vprintf+0x9c>
 8009f78:	b12a      	cbz	r2, 8009f86 <_vprintf+0x6e>
 8009f7a:	9303      	str	r3, [sp, #12]
 8009f7c:	b11b      	cbz	r3, 8009f86 <_vprintf+0x6e>
 8009f7e:	9b01      	ldr	r3, [sp, #4]
 8009f80:	f043 0310 	orr.w	r3, r3, #16
 8009f84:	9301      	str	r3, [sp, #4]
 8009f86:	292e      	cmp	r1, #46	; 0x2e
 8009f88:	d123      	bne.n	8009fd2 <_vprintf+0xba>
 8009f8a:	7873      	ldrb	r3, [r6, #1]
 8009f8c:	2b2a      	cmp	r3, #42	; 0x2a
 8009f8e:	d015      	beq.n	8009fbc <_vprintf+0xa4>
 8009f90:	2100      	movs	r1, #0
 8009f92:	1c70      	adds	r0, r6, #1
 8009f94:	460a      	mov	r2, r1
 8009f96:	250a      	movs	r5, #10
 8009f98:	7803      	ldrb	r3, [r0, #0]
 8009f9a:	3b30      	subs	r3, #48	; 0x30
 8009f9c:	2b09      	cmp	r3, #9
 8009f9e:	4606      	mov	r6, r0
 8009fa0:	f100 0001 	add.w	r0, r0, #1
 8009fa4:	d958      	bls.n	800a058 <_vprintf+0x140>
 8009fa6:	b181      	cbz	r1, 8009fca <_vprintf+0xb2>
 8009fa8:	9202      	str	r2, [sp, #8]
 8009faa:	e00e      	b.n	8009fca <_vprintf+0xb2>
 8009fac:	2b2d      	cmp	r3, #45	; 0x2d
 8009fae:	d1d6      	bne.n	8009f5e <_vprintf+0x46>
 8009fb0:	2340      	movs	r3, #64	; 0x40
 8009fb2:	e7d2      	b.n	8009f5a <_vprintf+0x42>
 8009fb4:	fb0c 0303 	mla	r3, ip, r3, r0
 8009fb8:	2201      	movs	r2, #1
 8009fba:	e7d5      	b.n	8009f68 <_vprintf+0x50>
 8009fbc:	f854 3b04 	ldr.w	r3, [r4], #4
 8009fc0:	2b00      	cmp	r3, #0
 8009fc2:	bfb8      	it	lt
 8009fc4:	425b      	neglt	r3, r3
 8009fc6:	3602      	adds	r6, #2
 8009fc8:	9302      	str	r3, [sp, #8]
 8009fca:	9b01      	ldr	r3, [sp, #4]
 8009fcc:	f043 0301 	orr.w	r3, r3, #1
 8009fd0:	9301      	str	r3, [sp, #4]
 8009fd2:	7833      	ldrb	r3, [r6, #0]
 8009fd4:	2b6c      	cmp	r3, #108	; 0x6c
 8009fd6:	bf04      	itt	eq
 8009fd8:	3601      	addeq	r6, #1
 8009fda:	9b01      	ldreq	r3, [sp, #4]
 8009fdc:	7831      	ldrb	r1, [r6, #0]
 8009fde:	bf04      	itt	eq
 8009fe0:	f043 0304 	orreq.w	r3, r3, #4
 8009fe4:	9301      	streq	r3, [sp, #4]
 8009fe6:	2958      	cmp	r1, #88	; 0x58
 8009fe8:	f000 8169 	beq.w	800a2be <_vprintf+0x3a6>
 8009fec:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009ff0:	b2da      	uxtb	r2, r3
 8009ff2:	2a15      	cmp	r2, #21
 8009ff4:	d8a4      	bhi.n	8009f40 <_vprintf+0x28>
 8009ff6:	2b15      	cmp	r3, #21
 8009ff8:	d8a2      	bhi.n	8009f40 <_vprintf+0x28>
 8009ffa:	a201      	add	r2, pc, #4	; (adr r2, 800a000 <_vprintf+0xe8>)
 8009ffc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a000:	0800a061 	stmdaeq	r0, {r0, r5, r6, sp, pc}
 800a004:	0800a073 	stmdaeq	r0, {r0, r1, r4, r5, r6, sp, pc}
 800a008:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a00c:	0800a0a9 	stmdaeq	r0, {r0, r3, r5, r7, sp, pc}
 800a010:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a014:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a018:	0800a073 	stmdaeq	r0, {r0, r1, r4, r5, r6, sp, pc}
 800a01c:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a020:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a024:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a028:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a02c:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a030:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a034:	0800a201 	stmdaeq	r0, {r0, r9, sp, pc}
 800a038:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a03c:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a040:	0800a229 	stmdaeq	r0, {r0, r3, r5, r9, sp, pc}
 800a044:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a048:	0800a29f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, sp, pc}
 800a04c:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a050:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 800a054:	0800a2c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r9, sp, pc}
 800a058:	fb05 3202 	mla	r2, r5, r2, r3
 800a05c:	2101      	movs	r1, #1
 800a05e:	e79b      	b.n	8009f98 <_vprintf+0x80>
 800a060:	4625      	mov	r5, r4
 800a062:	a801      	add	r0, sp, #4
 800a064:	f855 1b04 	ldr.w	r1, [r5], #4
 800a068:	f7ff fe76 	bl	8009d58 <_xputch>
 800a06c:	3601      	adds	r6, #1
 800a06e:	462c      	mov	r4, r5
 800a070:	e769      	b.n	8009f46 <_vprintf+0x2e>
 800a072:	9901      	ldr	r1, [sp, #4]
 800a074:	074d      	lsls	r5, r1, #29
 800a076:	bf4b      	itete	mi
 800a078:	3407      	addmi	r4, #7
 800a07a:	4625      	movpl	r5, r4
 800a07c:	f024 0407 	bicmi.w	r4, r4, #7
 800a080:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800a084:	bf45      	ittet	mi
 800a086:	6863      	ldrmi	r3, [r4, #4]
 800a088:	4625      	movmi	r5, r4
 800a08a:	17d3      	asrpl	r3, r2, #31
 800a08c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800a090:	2b00      	cmp	r3, #0
 800a092:	da05      	bge.n	800a0a0 <_vprintf+0x188>
 800a094:	f041 0108 	orr.w	r1, r1, #8
 800a098:	4252      	negs	r2, r2
 800a09a:	9101      	str	r1, [sp, #4]
 800a09c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a0a0:	a801      	add	r0, sp, #4
 800a0a2:	f7ff fe71 	bl	8009d88 <_format_int>
 800a0a6:	e7e1      	b.n	800a06c <_vprintf+0x154>
 800a0a8:	3407      	adds	r4, #7
 800a0aa:	f024 0507 	bic.w	r5, r4, #7
 800a0ae:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800a0b2:	f7fe fda1 	bl	8008bf8 <__aeabi_d2f>
 800a0b6:	9b01      	ldr	r3, [sp, #4]
 800a0b8:	ee07 0a90 	vmov	s15, r0
 800a0bc:	07dc      	lsls	r4, r3, #31
 800a0be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a0c2:	bf4c      	ite	mi
 800a0c4:	9c02      	ldrmi	r4, [sp, #8]
 800a0c6:	2406      	movpl	r4, #6
 800a0c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0cc:	bf48      	it	mi
 800a0ce:	eef1 7a67 	vnegmi.f32	s15, s15
 800a0d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0d6:	bf4a      	itet	mi
 800a0d8:	f10d 0a19 	addmi.w	sl, sp, #25
 800a0dc:	46ba      	movpl	sl, r7
 800a0de:	232d      	movmi	r3, #45	; 0x2d
 800a0e0:	ee17 0a10 	vmov	r0, s14
 800a0e4:	f04f 0200 	mov.w	r2, #0
 800a0e8:	4651      	mov	r1, sl
 800a0ea:	bf48      	it	mi
 800a0ec:	f88d 3018 	strbmi.w	r3, [sp, #24]
 800a0f0:	f7ff fdf8 	bl	8009ce4 <_itostr>
 800a0f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a0f8:	232e      	movs	r3, #46	; 0x2e
 800a0fa:	f80a 3000 	strb.w	r3, [sl, r0]
 800a0fe:	eb0a 0900 	add.w	r9, sl, r0
 800a102:	230a      	movs	r3, #10
 800a104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800a108:	1c62      	adds	r2, r4, #1
 800a10a:	f109 0901 	add.w	r9, r9, #1
 800a10e:	4619      	mov	r1, r3
 800a110:	2c00      	cmp	r4, #0
 800a112:	dc3d      	bgt.n	800a190 <_vprintf+0x278>
 800a114:	ee07 3a10 	vmov	s14, r3
 800a118:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a11c:	4649      	mov	r1, r9
 800a11e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a122:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a126:	ee17 0a90 	vmov	r0, s15
 800a12a:	f7ff fddb 	bl	8009ce4 <_itostr>
 800a12e:	4448      	add	r0, r9
 800a130:	1bc0      	subs	r0, r0, r7
 800a132:	1e44      	subs	r4, r0, #1
 800a134:	193a      	adds	r2, r7, r4
 800a136:	5d3b      	ldrb	r3, [r7, r4]
 800a138:	2b34      	cmp	r3, #52	; 0x34
 800a13a:	d911      	bls.n	800a160 <_vprintf+0x248>
 800a13c:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800a140:	292e      	cmp	r1, #46	; 0x2e
 800a142:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800a146:	d029      	beq.n	800a19c <_vprintf+0x284>
 800a148:	469c      	mov	ip, r3
 800a14a:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800a14e:	4663      	mov	r3, ip
 800a150:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800a154:	2939      	cmp	r1, #57	; 0x39
 800a156:	d01e      	beq.n	800a196 <_vprintf+0x27e>
 800a158:	292e      	cmp	r1, #46	; 0x2e
 800a15a:	d01f      	beq.n	800a19c <_vprintf+0x284>
 800a15c:	3101      	adds	r1, #1
 800a15e:	7019      	strb	r1, [r3, #0]
 800a160:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800a164:	446b      	add	r3, sp
 800a166:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800a16a:	2b2e      	cmp	r3, #46	; 0x2e
 800a16c:	bf08      	it	eq
 800a16e:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800a172:	46a1      	mov	r9, r4
 800a174:	9b03      	ldr	r3, [sp, #12]
 800a176:	4599      	cmp	r9, r3
 800a178:	db3b      	blt.n	800a1f2 <_vprintf+0x2da>
 800a17a:	46b9      	mov	r9, r7
 800a17c:	2c00      	cmp	r4, #0
 800a17e:	f77f af75 	ble.w	800a06c <_vprintf+0x154>
 800a182:	f819 1b01 	ldrb.w	r1, [r9], #1
 800a186:	a801      	add	r0, sp, #4
 800a188:	f7ff fde6 	bl	8009d58 <_xputch>
 800a18c:	3c01      	subs	r4, #1
 800a18e:	e7f5      	b.n	800a17c <_vprintf+0x264>
 800a190:	434b      	muls	r3, r1
 800a192:	3c01      	subs	r4, #1
 800a194:	e7bc      	b.n	800a110 <_vprintf+0x1f8>
 800a196:	f88c e001 	strb.w	lr, [ip, #1]
 800a19a:	e7d8      	b.n	800a14e <_vprintf+0x236>
 800a19c:	3b01      	subs	r3, #1
 800a19e:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800a1a2:	7819      	ldrb	r1, [r3, #0]
 800a1a4:	2939      	cmp	r1, #57	; 0x39
 800a1a6:	d112      	bne.n	800a1ce <_vprintf+0x2b6>
 800a1a8:	42bb      	cmp	r3, r7
 800a1aa:	d20d      	bcs.n	800a1c8 <_vprintf+0x2b0>
 800a1ac:	1c5c      	adds	r4, r3, #1
 800a1ae:	1c99      	adds	r1, r3, #2
 800a1b0:	428c      	cmp	r4, r1
 800a1b2:	eba2 0203 	sub.w	r2, r2, r3
 800a1b6:	d913      	bls.n	800a1e0 <_vprintf+0x2c8>
 800a1b8:	4619      	mov	r1, r3
 800a1ba:	441a      	add	r2, r3
 800a1bc:	428a      	cmp	r2, r1
 800a1be:	d10b      	bne.n	800a1d8 <_vprintf+0x2c0>
 800a1c0:	2231      	movs	r2, #49	; 0x31
 800a1c2:	705a      	strb	r2, [r3, #1]
 800a1c4:	4604      	mov	r4, r0
 800a1c6:	e7cb      	b.n	800a160 <_vprintf+0x248>
 800a1c8:	f803 c901 	strb.w	ip, [r3], #-1
 800a1cc:	e7e9      	b.n	800a1a2 <_vprintf+0x28a>
 800a1ce:	42bb      	cmp	r3, r7
 800a1d0:	d3ec      	bcc.n	800a1ac <_vprintf+0x294>
 800a1d2:	292d      	cmp	r1, #45	; 0x2d
 800a1d4:	d0ea      	beq.n	800a1ac <_vprintf+0x294>
 800a1d6:	e7c1      	b.n	800a15c <_vprintf+0x244>
 800a1d8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a1dc:	704c      	strb	r4, [r1, #1]
 800a1de:	e7ed      	b.n	800a1bc <_vprintf+0x2a4>
 800a1e0:	4414      	add	r4, r2
 800a1e2:	440a      	add	r2, r1
 800a1e4:	428a      	cmp	r2, r1
 800a1e6:	d0eb      	beq.n	800a1c0 <_vprintf+0x2a8>
 800a1e8:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800a1ec:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800a1f0:	e7f8      	b.n	800a1e4 <_vprintf+0x2cc>
 800a1f2:	2120      	movs	r1, #32
 800a1f4:	a801      	add	r0, sp, #4
 800a1f6:	f7ff fdaf 	bl	8009d58 <_xputch>
 800a1fa:	f109 0901 	add.w	r9, r9, #1
 800a1fe:	e7b9      	b.n	800a174 <_vprintf+0x25c>
 800a200:	4625      	mov	r5, r4
 800a202:	2308      	movs	r3, #8
 800a204:	f855 4b04 	ldr.w	r4, [r5], #4
 800a208:	9303      	str	r3, [sp, #12]
 800a20a:	2130      	movs	r1, #48	; 0x30
 800a20c:	2320      	movs	r3, #32
 800a20e:	a801      	add	r0, sp, #4
 800a210:	9301      	str	r3, [sp, #4]
 800a212:	f7ff fda1 	bl	8009d58 <_xputch>
 800a216:	2178      	movs	r1, #120	; 0x78
 800a218:	a801      	add	r0, sp, #4
 800a21a:	f7ff fd9d 	bl	8009d58 <_xputch>
 800a21e:	4621      	mov	r1, r4
 800a220:	a801      	add	r0, sp, #4
 800a222:	f7ff fe1b 	bl	8009e5c <_format_hex>
 800a226:	e721      	b.n	800a06c <_vprintf+0x154>
 800a228:	4625      	mov	r5, r4
 800a22a:	2400      	movs	r4, #0
 800a22c:	f855 9b04 	ldr.w	r9, [r5], #4
 800a230:	f819 3004 	ldrb.w	r3, [r9, r4]
 800a234:	b993      	cbnz	r3, 800a25c <_vprintf+0x344>
 800a236:	9b01      	ldr	r3, [sp, #4]
 800a238:	07d9      	lsls	r1, r3, #31
 800a23a:	d503      	bpl.n	800a244 <_vprintf+0x32c>
 800a23c:	9b02      	ldr	r3, [sp, #8]
 800a23e:	429c      	cmp	r4, r3
 800a240:	bfa8      	it	ge
 800a242:	461c      	movge	r4, r3
 800a244:	9b01      	ldr	r3, [sp, #4]
 800a246:	065a      	lsls	r2, r3, #25
 800a248:	f104 0a01 	add.w	sl, r4, #1
 800a24c:	d403      	bmi.n	800a256 <_vprintf+0x33e>
 800a24e:	9b03      	ldr	r3, [sp, #12]
 800a250:	429c      	cmp	r4, r3
 800a252:	db05      	blt.n	800a260 <_vprintf+0x348>
 800a254:	4654      	mov	r4, sl
 800a256:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a25a:	e00d      	b.n	800a278 <_vprintf+0x360>
 800a25c:	3401      	adds	r4, #1
 800a25e:	e7e7      	b.n	800a230 <_vprintf+0x318>
 800a260:	2120      	movs	r1, #32
 800a262:	a801      	add	r0, sp, #4
 800a264:	f7ff fd78 	bl	8009d58 <_xputch>
 800a268:	4654      	mov	r4, sl
 800a26a:	e7eb      	b.n	800a244 <_vprintf+0x32c>
 800a26c:	a801      	add	r0, sp, #4
 800a26e:	f7ff fd73 	bl	8009d58 <_xputch>
 800a272:	9b02      	ldr	r3, [sp, #8]
 800a274:	3b01      	subs	r3, #1
 800a276:	9302      	str	r3, [sp, #8]
 800a278:	9b01      	ldr	r3, [sp, #4]
 800a27a:	07db      	lsls	r3, r3, #31
 800a27c:	d501      	bpl.n	800a282 <_vprintf+0x36a>
 800a27e:	9b02      	ldr	r3, [sp, #8]
 800a280:	b11b      	cbz	r3, 800a28a <_vprintf+0x372>
 800a282:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800a286:	2900      	cmp	r1, #0
 800a288:	d1f0      	bne.n	800a26c <_vprintf+0x354>
 800a28a:	9b03      	ldr	r3, [sp, #12]
 800a28c:	429c      	cmp	r4, r3
 800a28e:	f6bf aeed 	bge.w	800a06c <_vprintf+0x154>
 800a292:	2120      	movs	r1, #32
 800a294:	a801      	add	r0, sp, #4
 800a296:	f7ff fd5f 	bl	8009d58 <_xputch>
 800a29a:	3401      	adds	r4, #1
 800a29c:	e7f5      	b.n	800a28a <_vprintf+0x372>
 800a29e:	9b01      	ldr	r3, [sp, #4]
 800a2a0:	f013 0304 	ands.w	r3, r3, #4
 800a2a4:	bf1d      	ittte	ne
 800a2a6:	3407      	addne	r4, #7
 800a2a8:	f024 0407 	bicne.w	r4, r4, #7
 800a2ac:	4625      	movne	r5, r4
 800a2ae:	4625      	moveq	r5, r4
 800a2b0:	bf1a      	itte	ne
 800a2b2:	f855 2b08 	ldrne.w	r2, [r5], #8
 800a2b6:	6863      	ldrne	r3, [r4, #4]
 800a2b8:	f855 2b04 	ldreq.w	r2, [r5], #4
 800a2bc:	e6f0      	b.n	800a0a0 <_vprintf+0x188>
 800a2be:	9b01      	ldr	r3, [sp, #4]
 800a2c0:	f043 0302 	orr.w	r3, r3, #2
 800a2c4:	9301      	str	r3, [sp, #4]
 800a2c6:	4625      	mov	r5, r4
 800a2c8:	f855 1b04 	ldr.w	r1, [r5], #4
 800a2cc:	e7a8      	b.n	800a220 <_vprintf+0x308>
 800a2ce:	bf00      	nop

0800a2d0 <printf>:
 800a2d0:	b40f      	push	{r0, r1, r2, r3}
 800a2d2:	b507      	push	{r0, r1, r2, lr}
 800a2d4:	aa04      	add	r2, sp, #16
 800a2d6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a2da:	f852 1b04 	ldr.w	r1, [r2], #4
 800a2de:	9201      	str	r2, [sp, #4]
 800a2e0:	f7ff fe1a 	bl	8009f18 <_vprintf>
 800a2e4:	b003      	add	sp, #12
 800a2e6:	f85d eb04 	ldr.w	lr, [sp], #4
 800a2ea:	b004      	add	sp, #16
 800a2ec:	4770      	bx	lr
	...

0800a2f0 <sprintf>:
 800a2f0:	b40e      	push	{r1, r2, r3}
 800a2f2:	b517      	push	{r0, r1, r2, r4, lr}
 800a2f4:	4c09      	ldr	r4, [pc, #36]	; (800a31c <sprintf+0x2c>)
 800a2f6:	aa05      	add	r2, sp, #20
 800a2f8:	6020      	str	r0, [r4, #0]
 800a2fa:	f852 1b04 	ldr.w	r1, [r2], #4
 800a2fe:	9201      	str	r2, [sp, #4]
 800a300:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a304:	f7ff fe08 	bl	8009f18 <_vprintf>
 800a308:	6822      	ldr	r2, [r4, #0]
 800a30a:	2300      	movs	r3, #0
 800a30c:	7013      	strb	r3, [r2, #0]
 800a30e:	6023      	str	r3, [r4, #0]
 800a310:	b003      	add	sp, #12
 800a312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a316:	b003      	add	sp, #12
 800a318:	4770      	bx	lr
 800a31a:	bf00      	nop
 800a31c:	200000f8 	strdcs	r0, [r0], -r8

0800a320 <snprintf>:
 800a320:	b40c      	push	{r2, r3}
 800a322:	b513      	push	{r0, r1, r4, lr}
 800a324:	4c09      	ldr	r4, [pc, #36]	; (800a34c <snprintf+0x2c>)
 800a326:	aa04      	add	r2, sp, #16
 800a328:	460b      	mov	r3, r1
 800a32a:	6020      	str	r0, [r4, #0]
 800a32c:	f852 1b04 	ldr.w	r1, [r2], #4
 800a330:	9201      	str	r2, [sp, #4]
 800a332:	4618      	mov	r0, r3
 800a334:	f7ff fdf0 	bl	8009f18 <_vprintf>
 800a338:	6822      	ldr	r2, [r4, #0]
 800a33a:	2300      	movs	r3, #0
 800a33c:	7013      	strb	r3, [r2, #0]
 800a33e:	6023      	str	r3, [r4, #0]
 800a340:	b002      	add	sp, #8
 800a342:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a346:	b002      	add	sp, #8
 800a348:	4770      	bx	lr
 800a34a:	bf00      	nop
 800a34c:	200000f8 	strdcs	r0, [r0], -r8

0800a350 <vsnprintf>:
 800a350:	b538      	push	{r3, r4, r5, lr}
 800a352:	4c06      	ldr	r4, [pc, #24]	; (800a36c <vsnprintf+0x1c>)
 800a354:	4605      	mov	r5, r0
 800a356:	4608      	mov	r0, r1
 800a358:	4611      	mov	r1, r2
 800a35a:	461a      	mov	r2, r3
 800a35c:	6025      	str	r5, [r4, #0]
 800a35e:	f7ff fddb 	bl	8009f18 <_vprintf>
 800a362:	6822      	ldr	r2, [r4, #0]
 800a364:	2300      	movs	r3, #0
 800a366:	7013      	strb	r3, [r2, #0]
 800a368:	6023      	str	r3, [r4, #0]
 800a36a:	bd38      	pop	{r3, r4, r5, pc}
 800a36c:	200000f8 	strdcs	r0, [r0], -r8

0800a370 <__udivmoddi4>:
 800a370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a374:	9e08      	ldr	r6, [sp, #32]
 800a376:	460d      	mov	r5, r1
 800a378:	4604      	mov	r4, r0
 800a37a:	460f      	mov	r7, r1
 800a37c:	2b00      	cmp	r3, #0
 800a37e:	d14a      	bne.n	800a416 <__udivmoddi4+0xa6>
 800a380:	428a      	cmp	r2, r1
 800a382:	4694      	mov	ip, r2
 800a384:	d965      	bls.n	800a452 <__udivmoddi4+0xe2>
 800a386:	fab2 f382 	clz	r3, r2
 800a38a:	b143      	cbz	r3, 800a39e <__udivmoddi4+0x2e>
 800a38c:	fa02 fc03 	lsl.w	ip, r2, r3
 800a390:	f1c3 0220 	rsb	r2, r3, #32
 800a394:	409f      	lsls	r7, r3
 800a396:	fa20 f202 	lsr.w	r2, r0, r2
 800a39a:	4317      	orrs	r7, r2
 800a39c:	409c      	lsls	r4, r3
 800a39e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800a3a2:	fa1f f58c 	uxth.w	r5, ip
 800a3a6:	fbb7 f1fe 	udiv	r1, r7, lr
 800a3aa:	0c22      	lsrs	r2, r4, #16
 800a3ac:	fb0e 7711 	mls	r7, lr, r1, r7
 800a3b0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800a3b4:	fb01 f005 	mul.w	r0, r1, r5
 800a3b8:	4290      	cmp	r0, r2
 800a3ba:	d90a      	bls.n	800a3d2 <__udivmoddi4+0x62>
 800a3bc:	eb1c 0202 	adds.w	r2, ip, r2
 800a3c0:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 800a3c4:	f080 811c 	bcs.w	800a600 <__udivmoddi4+0x290>
 800a3c8:	4290      	cmp	r0, r2
 800a3ca:	f240 8119 	bls.w	800a600 <__udivmoddi4+0x290>
 800a3ce:	3902      	subs	r1, #2
 800a3d0:	4462      	add	r2, ip
 800a3d2:	1a12      	subs	r2, r2, r0
 800a3d4:	b2a4      	uxth	r4, r4
 800a3d6:	fbb2 f0fe 	udiv	r0, r2, lr
 800a3da:	fb0e 2210 	mls	r2, lr, r0, r2
 800a3de:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a3e2:	fb00 f505 	mul.w	r5, r0, r5
 800a3e6:	42a5      	cmp	r5, r4
 800a3e8:	d90a      	bls.n	800a400 <__udivmoddi4+0x90>
 800a3ea:	eb1c 0404 	adds.w	r4, ip, r4
 800a3ee:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a3f2:	f080 8107 	bcs.w	800a604 <__udivmoddi4+0x294>
 800a3f6:	42a5      	cmp	r5, r4
 800a3f8:	f240 8104 	bls.w	800a604 <__udivmoddi4+0x294>
 800a3fc:	4464      	add	r4, ip
 800a3fe:	3802      	subs	r0, #2
 800a400:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800a404:	1b64      	subs	r4, r4, r5
 800a406:	2100      	movs	r1, #0
 800a408:	b11e      	cbz	r6, 800a412 <__udivmoddi4+0xa2>
 800a40a:	40dc      	lsrs	r4, r3
 800a40c:	2300      	movs	r3, #0
 800a40e:	e9c6 4300 	strd	r4, r3, [r6]
 800a412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a416:	428b      	cmp	r3, r1
 800a418:	d908      	bls.n	800a42c <__udivmoddi4+0xbc>
 800a41a:	2e00      	cmp	r6, #0
 800a41c:	f000 80ed 	beq.w	800a5fa <__udivmoddi4+0x28a>
 800a420:	2100      	movs	r1, #0
 800a422:	e9c6 0500 	strd	r0, r5, [r6]
 800a426:	4608      	mov	r0, r1
 800a428:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a42c:	fab3 f183 	clz	r1, r3
 800a430:	2900      	cmp	r1, #0
 800a432:	d149      	bne.n	800a4c8 <__udivmoddi4+0x158>
 800a434:	42ab      	cmp	r3, r5
 800a436:	d302      	bcc.n	800a43e <__udivmoddi4+0xce>
 800a438:	4282      	cmp	r2, r0
 800a43a:	f200 80f8 	bhi.w	800a62e <__udivmoddi4+0x2be>
 800a43e:	1a84      	subs	r4, r0, r2
 800a440:	eb65 0203 	sbc.w	r2, r5, r3
 800a444:	2001      	movs	r0, #1
 800a446:	4617      	mov	r7, r2
 800a448:	2e00      	cmp	r6, #0
 800a44a:	d0e2      	beq.n	800a412 <__udivmoddi4+0xa2>
 800a44c:	e9c6 4700 	strd	r4, r7, [r6]
 800a450:	e7df      	b.n	800a412 <__udivmoddi4+0xa2>
 800a452:	b902      	cbnz	r2, 800a456 <__udivmoddi4+0xe6>
 800a454:	deff      	udf	#255	; 0xff
 800a456:	fab2 f382 	clz	r3, r2
 800a45a:	2b00      	cmp	r3, #0
 800a45c:	f040 8090 	bne.w	800a580 <__udivmoddi4+0x210>
 800a460:	1a8a      	subs	r2, r1, r2
 800a462:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a466:	fa1f fe8c 	uxth.w	lr, ip
 800a46a:	2101      	movs	r1, #1
 800a46c:	fbb2 f5f7 	udiv	r5, r2, r7
 800a470:	fb07 2015 	mls	r0, r7, r5, r2
 800a474:	0c22      	lsrs	r2, r4, #16
 800a476:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a47a:	fb0e f005 	mul.w	r0, lr, r5
 800a47e:	4290      	cmp	r0, r2
 800a480:	d908      	bls.n	800a494 <__udivmoddi4+0x124>
 800a482:	eb1c 0202 	adds.w	r2, ip, r2
 800a486:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a48a:	d202      	bcs.n	800a492 <__udivmoddi4+0x122>
 800a48c:	4290      	cmp	r0, r2
 800a48e:	f200 80cb 	bhi.w	800a628 <__udivmoddi4+0x2b8>
 800a492:	4645      	mov	r5, r8
 800a494:	1a12      	subs	r2, r2, r0
 800a496:	b2a4      	uxth	r4, r4
 800a498:	fbb2 f0f7 	udiv	r0, r2, r7
 800a49c:	fb07 2210 	mls	r2, r7, r0, r2
 800a4a0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a4a4:	fb0e fe00 	mul.w	lr, lr, r0
 800a4a8:	45a6      	cmp	lr, r4
 800a4aa:	d908      	bls.n	800a4be <__udivmoddi4+0x14e>
 800a4ac:	eb1c 0404 	adds.w	r4, ip, r4
 800a4b0:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a4b4:	d202      	bcs.n	800a4bc <__udivmoddi4+0x14c>
 800a4b6:	45a6      	cmp	lr, r4
 800a4b8:	f200 80bb 	bhi.w	800a632 <__udivmoddi4+0x2c2>
 800a4bc:	4610      	mov	r0, r2
 800a4be:	eba4 040e 	sub.w	r4, r4, lr
 800a4c2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800a4c6:	e79f      	b.n	800a408 <__udivmoddi4+0x98>
 800a4c8:	f1c1 0720 	rsb	r7, r1, #32
 800a4cc:	408b      	lsls	r3, r1
 800a4ce:	fa22 fc07 	lsr.w	ip, r2, r7
 800a4d2:	ea4c 0c03 	orr.w	ip, ip, r3
 800a4d6:	fa05 f401 	lsl.w	r4, r5, r1
 800a4da:	fa20 f307 	lsr.w	r3, r0, r7
 800a4de:	40fd      	lsrs	r5, r7
 800a4e0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800a4e4:	4323      	orrs	r3, r4
 800a4e6:	fbb5 f8f9 	udiv	r8, r5, r9
 800a4ea:	fa1f fe8c 	uxth.w	lr, ip
 800a4ee:	fb09 5518 	mls	r5, r9, r8, r5
 800a4f2:	0c1c      	lsrs	r4, r3, #16
 800a4f4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a4f8:	fb08 f50e 	mul.w	r5, r8, lr
 800a4fc:	42a5      	cmp	r5, r4
 800a4fe:	fa02 f201 	lsl.w	r2, r2, r1
 800a502:	fa00 f001 	lsl.w	r0, r0, r1
 800a506:	d90b      	bls.n	800a520 <__udivmoddi4+0x1b0>
 800a508:	eb1c 0404 	adds.w	r4, ip, r4
 800a50c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800a510:	f080 8088 	bcs.w	800a624 <__udivmoddi4+0x2b4>
 800a514:	42a5      	cmp	r5, r4
 800a516:	f240 8085 	bls.w	800a624 <__udivmoddi4+0x2b4>
 800a51a:	f1a8 0802 	sub.w	r8, r8, #2
 800a51e:	4464      	add	r4, ip
 800a520:	1b64      	subs	r4, r4, r5
 800a522:	b29d      	uxth	r5, r3
 800a524:	fbb4 f3f9 	udiv	r3, r4, r9
 800a528:	fb09 4413 	mls	r4, r9, r3, r4
 800a52c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800a530:	fb03 fe0e 	mul.w	lr, r3, lr
 800a534:	45a6      	cmp	lr, r4
 800a536:	d908      	bls.n	800a54a <__udivmoddi4+0x1da>
 800a538:	eb1c 0404 	adds.w	r4, ip, r4
 800a53c:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 800a540:	d26c      	bcs.n	800a61c <__udivmoddi4+0x2ac>
 800a542:	45a6      	cmp	lr, r4
 800a544:	d96a      	bls.n	800a61c <__udivmoddi4+0x2ac>
 800a546:	3b02      	subs	r3, #2
 800a548:	4464      	add	r4, ip
 800a54a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800a54e:	fba3 9502 	umull	r9, r5, r3, r2
 800a552:	eba4 040e 	sub.w	r4, r4, lr
 800a556:	42ac      	cmp	r4, r5
 800a558:	46c8      	mov	r8, r9
 800a55a:	46ae      	mov	lr, r5
 800a55c:	d356      	bcc.n	800a60c <__udivmoddi4+0x29c>
 800a55e:	d053      	beq.n	800a608 <__udivmoddi4+0x298>
 800a560:	b156      	cbz	r6, 800a578 <__udivmoddi4+0x208>
 800a562:	ebb0 0208 	subs.w	r2, r0, r8
 800a566:	eb64 040e 	sbc.w	r4, r4, lr
 800a56a:	fa04 f707 	lsl.w	r7, r4, r7
 800a56e:	40ca      	lsrs	r2, r1
 800a570:	40cc      	lsrs	r4, r1
 800a572:	4317      	orrs	r7, r2
 800a574:	e9c6 7400 	strd	r7, r4, [r6]
 800a578:	4618      	mov	r0, r3
 800a57a:	2100      	movs	r1, #0
 800a57c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a580:	f1c3 0120 	rsb	r1, r3, #32
 800a584:	fa02 fc03 	lsl.w	ip, r2, r3
 800a588:	fa20 f201 	lsr.w	r2, r0, r1
 800a58c:	fa25 f101 	lsr.w	r1, r5, r1
 800a590:	409d      	lsls	r5, r3
 800a592:	432a      	orrs	r2, r5
 800a594:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a598:	fa1f fe8c 	uxth.w	lr, ip
 800a59c:	fbb1 f0f7 	udiv	r0, r1, r7
 800a5a0:	fb07 1510 	mls	r5, r7, r0, r1
 800a5a4:	0c11      	lsrs	r1, r2, #16
 800a5a6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800a5aa:	fb00 f50e 	mul.w	r5, r0, lr
 800a5ae:	428d      	cmp	r5, r1
 800a5b0:	fa04 f403 	lsl.w	r4, r4, r3
 800a5b4:	d908      	bls.n	800a5c8 <__udivmoddi4+0x258>
 800a5b6:	eb1c 0101 	adds.w	r1, ip, r1
 800a5ba:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800a5be:	d22f      	bcs.n	800a620 <__udivmoddi4+0x2b0>
 800a5c0:	428d      	cmp	r5, r1
 800a5c2:	d92d      	bls.n	800a620 <__udivmoddi4+0x2b0>
 800a5c4:	3802      	subs	r0, #2
 800a5c6:	4461      	add	r1, ip
 800a5c8:	1b49      	subs	r1, r1, r5
 800a5ca:	b292      	uxth	r2, r2
 800a5cc:	fbb1 f5f7 	udiv	r5, r1, r7
 800a5d0:	fb07 1115 	mls	r1, r7, r5, r1
 800a5d4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a5d8:	fb05 f10e 	mul.w	r1, r5, lr
 800a5dc:	4291      	cmp	r1, r2
 800a5de:	d908      	bls.n	800a5f2 <__udivmoddi4+0x282>
 800a5e0:	eb1c 0202 	adds.w	r2, ip, r2
 800a5e4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a5e8:	d216      	bcs.n	800a618 <__udivmoddi4+0x2a8>
 800a5ea:	4291      	cmp	r1, r2
 800a5ec:	d914      	bls.n	800a618 <__udivmoddi4+0x2a8>
 800a5ee:	3d02      	subs	r5, #2
 800a5f0:	4462      	add	r2, ip
 800a5f2:	1a52      	subs	r2, r2, r1
 800a5f4:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800a5f8:	e738      	b.n	800a46c <__udivmoddi4+0xfc>
 800a5fa:	4631      	mov	r1, r6
 800a5fc:	4630      	mov	r0, r6
 800a5fe:	e708      	b.n	800a412 <__udivmoddi4+0xa2>
 800a600:	4639      	mov	r1, r7
 800a602:	e6e6      	b.n	800a3d2 <__udivmoddi4+0x62>
 800a604:	4610      	mov	r0, r2
 800a606:	e6fb      	b.n	800a400 <__udivmoddi4+0x90>
 800a608:	4548      	cmp	r0, r9
 800a60a:	d2a9      	bcs.n	800a560 <__udivmoddi4+0x1f0>
 800a60c:	ebb9 0802 	subs.w	r8, r9, r2
 800a610:	eb65 0e0c 	sbc.w	lr, r5, ip
 800a614:	3b01      	subs	r3, #1
 800a616:	e7a3      	b.n	800a560 <__udivmoddi4+0x1f0>
 800a618:	4645      	mov	r5, r8
 800a61a:	e7ea      	b.n	800a5f2 <__udivmoddi4+0x282>
 800a61c:	462b      	mov	r3, r5
 800a61e:	e794      	b.n	800a54a <__udivmoddi4+0x1da>
 800a620:	4640      	mov	r0, r8
 800a622:	e7d1      	b.n	800a5c8 <__udivmoddi4+0x258>
 800a624:	46d0      	mov	r8, sl
 800a626:	e77b      	b.n	800a520 <__udivmoddi4+0x1b0>
 800a628:	3d02      	subs	r5, #2
 800a62a:	4462      	add	r2, ip
 800a62c:	e732      	b.n	800a494 <__udivmoddi4+0x124>
 800a62e:	4608      	mov	r0, r1
 800a630:	e70a      	b.n	800a448 <__udivmoddi4+0xd8>
 800a632:	4464      	add	r4, ip
 800a634:	3802      	subs	r0, #2
 800a636:	e742      	b.n	800a4be <__udivmoddi4+0x14e>

0800a638 <RemoteConfig::HandleList()>:
 800a638:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a63c:	6801      	ldr	r1, [r0, #0]
 800a63e:	4a2b      	ldr	r2, [pc, #172]	; (800a6ec <RemoteConfig::HandleList()+0xb4>)
 800a640:	4b2b      	ldr	r3, [pc, #172]	; (800a6f0 <RemoteConfig::HandleList()+0xb8>)
 800a642:	4e2c      	ldr	r6, [pc, #176]	; (800a6f4 <RemoteConfig::HandleList()+0xbc>)
 800a644:	681b      	ldr	r3, [r3, #0]
 800a646:	6835      	ldr	r5, [r6, #0]
 800a648:	695f      	ldr	r7, [r3, #20]
 800a64a:	4604      	mov	r4, r0
 800a64c:	2012      	movs	r0, #18
 800a64e:	fb00 2201 	mla	r2, r0, r1, r2
 800a652:	6860      	ldr	r0, [r4, #4]
 800a654:	4928      	ldr	r1, [pc, #160]	; (800a6f8 <RemoteConfig::HandleList()+0xc0>)
 800a656:	f04f 080c 	mov.w	r8, #12
 800a65a:	fb08 1100 	mla	r1, r8, r0, r1
 800a65e:	4827      	ldr	r0, [pc, #156]	; (800a6fc <RemoteConfig::HandleList()+0xc4>)
 800a660:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a664:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a668:	b2fb      	uxtb	r3, r7
 800a66a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a66e:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a672:	b089      	sub	sp, #36	; 0x24
 800a674:	3507      	adds	r5, #7
 800a676:	0e3f      	lsrs	r7, r7, #24
 800a678:	f1b9 0f00 	cmp.w	r9, #0
 800a67c:	d01d      	beq.n	800a6ba <RemoteConfig::HandleList()+0x82>
 800a67e:	3009      	adds	r0, #9
 800a680:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a684:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a688:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a68c:	4a1c      	ldr	r2, [pc, #112]	; (800a700 <RemoteConfig::HandleList()+0xc8>)
 800a68e:	f8cd c000 	str.w	ip, [sp]
 800a692:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a696:	4628      	mov	r0, r5
 800a698:	f7ff fe42 	bl	800a320 <snprintf>
 800a69c:	69e3      	ldr	r3, [r4, #28]
 800a69e:	2b05      	cmp	r3, #5
 800a6a0:	d118      	bne.n	800a6d4 <RemoteConfig::HandleList()+0x9c>
 800a6a2:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6a6:	9300      	str	r3, [sp, #0]
 800a6a8:	69a3      	ldr	r3, [r4, #24]
 800a6aa:	b282      	uxth	r2, r0
 800a6ac:	4629      	mov	r1, r5
 800a6ae:	7d20      	ldrb	r0, [r4, #20]
 800a6b0:	f006 ff22 	bl	80114f8 <udp_send>
 800a6b4:	b009      	add	sp, #36	; 0x24
 800a6b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a6ba:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a6be:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a6c2:	e9cd ce00 	strd	ip, lr, [sp]
 800a6c6:	4a0f      	ldr	r2, [pc, #60]	; (800a704 <RemoteConfig::HandleList()+0xcc>)
 800a6c8:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a6cc:	4628      	mov	r0, r5
 800a6ce:	f7ff fe27 	bl	800a320 <snprintf>
 800a6d2:	e7e3      	b.n	800a69c <RemoteConfig::HandleList()+0x64>
 800a6d4:	2b06      	cmp	r3, #6
 800a6d6:	d1ed      	bne.n	800a6b4 <RemoteConfig::HandleList()+0x7c>
 800a6d8:	6833      	ldr	r3, [r6, #0]
 800a6da:	799b      	ldrb	r3, [r3, #6]
 800a6dc:	2b2a      	cmp	r3, #42	; 0x2a
 800a6de:	d1e9      	bne.n	800a6b4 <RemoteConfig::HandleList()+0x7c>
 800a6e0:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6e4:	9300      	str	r3, [sp, #0]
 800a6e6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a6ea:	e7de      	b.n	800a6aa <RemoteConfig::HandleList()+0x72>
 800a6ec:	08016fe8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 800a6f0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800a6f4:	200000fc 	strdcs	r0, [r0], -ip
 800a6f8:	080170ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, ip, sp, lr}
 800a6fc:	20000100 	andcs	r0, r0, r0, lsl #2
 800a700:	08016efd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, sp, lr}
 800a704:	08016f16 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, fp, sp, lr}

0800a708 <RemoteConfig::HandleDisplayGet()>:
 800a708:	69c3      	ldr	r3, [r0, #28]
 800a70a:	2b08      	cmp	r3, #8
 800a70c:	d11b      	bne.n	800a746 <RemoteConfig::HandleDisplayGet()+0x3e>
 800a70e:	4b0e      	ldr	r3, [pc, #56]	; (800a748 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a710:	681b      	ldr	r3, [r3, #0]
 800a712:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a714:	7c19      	ldrb	r1, [r3, #16]
 800a716:	4d0d      	ldr	r5, [pc, #52]	; (800a74c <RemoteConfig::HandleDisplayGet()+0x44>)
 800a718:	4a0d      	ldr	r2, [pc, #52]	; (800a750 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a71a:	4b0e      	ldr	r3, [pc, #56]	; (800a754 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a71c:	4604      	mov	r4, r0
 800a71e:	2900      	cmp	r1, #0
 800a720:	bf18      	it	ne
 800a722:	4613      	movne	r3, r2
 800a724:	6828      	ldr	r0, [r5, #0]
 800a726:	4a0c      	ldr	r2, [pc, #48]	; (800a758 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a728:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a72c:	f7ff fdf8 	bl	800a320 <snprintf>
 800a730:	f642 1305 	movw	r3, #10501	; 0x2905
 800a734:	9300      	str	r3, [sp, #0]
 800a736:	b282      	uxth	r2, r0
 800a738:	69a3      	ldr	r3, [r4, #24]
 800a73a:	6829      	ldr	r1, [r5, #0]
 800a73c:	7d20      	ldrb	r0, [r4, #20]
 800a73e:	f006 fedb 	bl	80114f8 <udp_send>
 800a742:	b003      	add	sp, #12
 800a744:	bd30      	pop	{r4, r5, pc}
 800a746:	4770      	bx	lr
 800a748:	2000fdf8 	strdcs	pc, [r0], -r8
 800a74c:	200000fc 	strdcs	r0, [r0], -ip
 800a750:	08016f2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}
 800a754:	08016f2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, sp, lr}
 800a758:	08016f33 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, sl, fp, sp, lr}

0800a75c <RemoteConfig::HandleTftpGet()>:
 800a75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a75e:	4604      	mov	r4, r0
 800a760:	f000 fd7c 	bl	800b25c <RemoteConfig::PlatformHandleTftpGet()>
 800a764:	69e3      	ldr	r3, [r4, #28]
 800a766:	2b05      	cmp	r3, #5
 800a768:	d116      	bne.n	800a798 <RemoteConfig::HandleTftpGet()+0x3c>
 800a76a:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a76e:	4d0b      	ldr	r5, [pc, #44]	; (800a79c <RemoteConfig::HandleTftpGet()+0x40>)
 800a770:	4a0b      	ldr	r2, [pc, #44]	; (800a7a0 <RemoteConfig::HandleTftpGet()+0x44>)
 800a772:	4b0c      	ldr	r3, [pc, #48]	; (800a7a4 <RemoteConfig::HandleTftpGet()+0x48>)
 800a774:	6828      	ldr	r0, [r5, #0]
 800a776:	2900      	cmp	r1, #0
 800a778:	bf08      	it	eq
 800a77a:	4613      	moveq	r3, r2
 800a77c:	4a0a      	ldr	r2, [pc, #40]	; (800a7a8 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a77e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a782:	f7ff fdcd 	bl	800a320 <snprintf>
 800a786:	f642 1305 	movw	r3, #10501	; 0x2905
 800a78a:	9300      	str	r3, [sp, #0]
 800a78c:	b282      	uxth	r2, r0
 800a78e:	69a3      	ldr	r3, [r4, #24]
 800a790:	6829      	ldr	r1, [r5, #0]
 800a792:	7d20      	ldrb	r0, [r4, #20]
 800a794:	f006 feb0 	bl	80114f8 <udp_send>
 800a798:	b003      	add	sp, #12
 800a79a:	bd30      	pop	{r4, r5, pc}
 800a79c:	200000fc 	strdcs	r0, [r0], -ip
 800a7a0:	08016f2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}
 800a7a4:	08016f2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, sp, lr}
 800a7a8:	08016f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, sp, lr}

0800a7ac <RemoteConfig::HandleVersion()>:
 800a7ac:	69c3      	ldr	r3, [r0, #28]
 800a7ae:	2b08      	cmp	r3, #8
 800a7b0:	d114      	bne.n	800a7dc <RemoteConfig::HandleVersion()+0x30>
 800a7b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7b4:	4d0a      	ldr	r5, [pc, #40]	; (800a7e0 <RemoteConfig::HandleVersion()+0x34>)
 800a7b6:	4b0b      	ldr	r3, [pc, #44]	; (800a7e4 <RemoteConfig::HandleVersion()+0x38>)
 800a7b8:	4a0b      	ldr	r2, [pc, #44]	; (800a7e8 <RemoteConfig::HandleVersion()+0x3c>)
 800a7ba:	4604      	mov	r4, r0
 800a7bc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a7c0:	6828      	ldr	r0, [r5, #0]
 800a7c2:	f7ff fdad 	bl	800a320 <snprintf>
 800a7c6:	f642 1305 	movw	r3, #10501	; 0x2905
 800a7ca:	9300      	str	r3, [sp, #0]
 800a7cc:	b282      	uxth	r2, r0
 800a7ce:	69a3      	ldr	r3, [r4, #24]
 800a7d0:	6829      	ldr	r1, [r5, #0]
 800a7d2:	7d20      	ldrb	r0, [r4, #20]
 800a7d4:	f006 fe90 	bl	80114f8 <udp_send>
 800a7d8:	b003      	add	sp, #12
 800a7da:	bd30      	pop	{r4, r5, pc}
 800a7dc:	4770      	bx	lr
 800a7de:	bf00      	nop
 800a7e0:	200000fc 	strdcs	r0, [r0], -ip
 800a7e4:	2000fe9e 	mulcs	r0, lr, lr
 800a7e8:	08016f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, sp, lr}

0800a7ec <RemoteConfig::HandleUptime()>:
 800a7ec:	7bc3      	ldrb	r3, [r0, #15]
 800a7ee:	b1e3      	cbz	r3, 800a82a <RemoteConfig::HandleUptime()+0x3e>
 800a7f0:	4b0e      	ldr	r3, [pc, #56]	; (800a82c <RemoteConfig::HandleUptime()+0x40>)
 800a7f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7f4:	681a      	ldr	r2, [r3, #0]
 800a7f6:	69c3      	ldr	r3, [r0, #28]
 800a7f8:	2b07      	cmp	r3, #7
 800a7fa:	4604      	mov	r4, r0
 800a7fc:	d113      	bne.n	800a826 <RemoteConfig::HandleUptime()+0x3a>
 800a7fe:	4d0c      	ldr	r5, [pc, #48]	; (800a830 <RemoteConfig::HandleUptime()+0x44>)
 800a800:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a804:	6828      	ldr	r0, [r5, #0]
 800a806:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a80a:	fbb2 f3f3 	udiv	r3, r2, r3
 800a80e:	4a09      	ldr	r2, [pc, #36]	; (800a834 <RemoteConfig::HandleUptime()+0x48>)
 800a810:	f7ff fd86 	bl	800a320 <snprintf>
 800a814:	f642 1305 	movw	r3, #10501	; 0x2905
 800a818:	9300      	str	r3, [sp, #0]
 800a81a:	b282      	uxth	r2, r0
 800a81c:	69a3      	ldr	r3, [r4, #24]
 800a81e:	6829      	ldr	r1, [r5, #0]
 800a820:	7d20      	ldrb	r0, [r4, #20]
 800a822:	f006 fe69 	bl	80114f8 <udp_send>
 800a826:	b003      	add	sp, #12
 800a828:	bd30      	pop	{r4, r5, pc}
 800a82a:	4770      	bx	lr
 800a82c:	2000fefc 	strdcs	pc, [r0], -ip
 800a830:	200000fc 	strdcs	r0, [r0], -ip
 800a834:	08016f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, sp, lr}

0800a838 <Display::Status(Display7SegmentMessage)>:
 800a838:	7c43      	ldrb	r3, [r0, #17]
 800a83a:	b1bb      	cbz	r3, 800a86c <Display::Status(Display7SegmentMessage)+0x34>
 800a83c:	b513      	push	{r0, r1, r4, lr}
 800a83e:	2312      	movs	r3, #18
 800a840:	43c9      	mvns	r1, r1
 800a842:	4604      	mov	r4, r0
 800a844:	f88d 3004 	strb.w	r3, [sp, #4]
 800a848:	7a00      	ldrb	r0, [r0, #8]
 800a84a:	f88d 1006 	strb.w	r1, [sp, #6]
 800a84e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800a852:	f88d 3005 	strb.w	r3, [sp, #5]
 800a856:	f00a ffbf 	bl	80157d8 <gd32_i2c_set_address>
 800a85a:	68e0      	ldr	r0, [r4, #12]
 800a85c:	f00a ffb4 	bl	80157c8 <gd32_i2c_set_baudrate>
 800a860:	2103      	movs	r1, #3
 800a862:	a801      	add	r0, sp, #4
 800a864:	f00a ffbe 	bl	80157e4 <gd32_i2c_write>
 800a868:	b002      	add	sp, #8
 800a86a:	bd10      	pop	{r4, pc}
 800a86c:	4770      	bx	lr
	...

0800a870 <RemoteConfig::HandleDisplaySet()>:
 800a870:	b508      	push	{r3, lr}
 800a872:	69c3      	ldr	r3, [r0, #28]
 800a874:	2b09      	cmp	r3, #9
 800a876:	d10a      	bne.n	800a88e <RemoteConfig::HandleDisplaySet()+0x1e>
 800a878:	4b05      	ldr	r3, [pc, #20]	; (800a890 <RemoteConfig::HandleDisplaySet()+0x20>)
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	7a59      	ldrb	r1, [r3, #9]
 800a87e:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800a882:	4259      	negs	r1, r3
 800a884:	4159      	adcs	r1, r3
 800a886:	4b03      	ldr	r3, [pc, #12]	; (800a894 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a888:	6818      	ldr	r0, [r3, #0]
 800a88a:	f7fe fd8d 	bl	80093a8 <Display::SetSleep(bool)>
 800a88e:	bd08      	pop	{r3, pc}
 800a890:	200000fc 	strdcs	r0, [r0], -ip
 800a894:	2000fdf8 	strdcs	pc, [r0], -r8

0800a898 <RemoteConfig::HandleTftpSet()>:
 800a898:	69c3      	ldr	r3, [r0, #28]
 800a89a:	2b06      	cmp	r3, #6
 800a89c:	d127      	bne.n	800a8ee <RemoteConfig::HandleTftpSet()+0x56>
 800a89e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a8a0:	4b13      	ldr	r3, [pc, #76]	; (800a8f0 <RemoteConfig::HandleTftpSet()+0x58>)
 800a8a2:	4d14      	ldr	r5, [pc, #80]	; (800a8f4 <RemoteConfig::HandleTftpSet()+0x5c>)
 800a8a4:	681b      	ldr	r3, [r3, #0]
 800a8a6:	799b      	ldrb	r3, [r3, #6]
 800a8a8:	2b30      	cmp	r3, #48	; 0x30
 800a8aa:	bf14      	ite	ne
 800a8ac:	2301      	movne	r3, #1
 800a8ae:	2300      	moveq	r3, #0
 800a8b0:	4604      	mov	r4, r0
 800a8b2:	f880 3020 	strb.w	r3, [r0, #32]
 800a8b6:	6828      	ldr	r0, [r5, #0]
 800a8b8:	d012      	beq.n	800a8e0 <RemoteConfig::HandleTftpSet()+0x48>
 800a8ba:	2100      	movs	r1, #0
 800a8bc:	f7fe fd74 	bl	80093a8 <Display::SetSleep(bool)>
 800a8c0:	6828      	ldr	r0, [r5, #0]
 800a8c2:	490d      	ldr	r1, [pc, #52]	; (800a8f8 <RemoteConfig::HandleTftpSet()+0x60>)
 800a8c4:	9001      	str	r0, [sp, #4]
 800a8c6:	f7fe fd11 	bl	80092ec <Display::TextStatus(char const*)>
 800a8ca:	f244 0171 	movw	r1, #16497	; 0x4071
 800a8ce:	9801      	ldr	r0, [sp, #4]
 800a8d0:	f7ff ffb2 	bl	800a838 <Display::Status(Display7SegmentMessage)>
 800a8d4:	4620      	mov	r0, r4
 800a8d6:	b003      	add	sp, #12
 800a8d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a8dc:	f000 bcb6 	b.w	800b24c <RemoteConfig::PlatformHandleTftpSet()>
 800a8e0:	4906      	ldr	r1, [pc, #24]	; (800a8fc <RemoteConfig::HandleTftpSet()+0x64>)
 800a8e2:	9001      	str	r0, [sp, #4]
 800a8e4:	f7fe fd02 	bl	80092ec <Display::TextStatus(char const*)>
 800a8e8:	f248 0171 	movw	r1, #32881	; 0x8071
 800a8ec:	e7ef      	b.n	800a8ce <RemoteConfig::HandleTftpSet()+0x36>
 800a8ee:	4770      	bx	lr
 800a8f0:	200000fc 	strdcs	r0, [r0], -ip
 800a8f4:	2000fdf8 	strdcs	pc, [r0], -r8
 800a8f8:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 800a8fc:	08016f72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}

0800a900 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a904:	2500      	movs	r5, #0
 800a906:	461f      	mov	r7, r3
 800a908:	6083      	str	r3, [r0, #8]
 800a90a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a90e:	4e13      	ldr	r6, [pc, #76]	; (800a95c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 800a910:	f8df a050 	ldr.w	sl, [pc, #80]	; 800a964 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 800a914:	60c5      	str	r5, [r0, #12]
 800a916:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800a91a:	4b11      	ldr	r3, [pc, #68]	; (800a960 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 800a91c:	8205      	strh	r5, [r0, #16]
 800a91e:	e9c0 1200 	strd	r1, r2, [r0]
 800a922:	4604      	mov	r4, r0
 800a924:	6018      	str	r0, [r3, #0]
 800a926:	4689      	mov	r9, r1
 800a928:	61c5      	str	r5, [r0, #28]
 800a92a:	f880 5020 	strb.w	r5, [r0, #32]
 800a92e:	4631      	mov	r1, r6
 800a930:	f8da 0000 	ldr.w	r0, [sl]
 800a934:	4690      	mov	r8, r2
 800a936:	f007 fab5 	bl	8011ea4 <Network::MacAddressCopyTo(unsigned char*)>
 800a93a:	f8da 0000 	ldr.w	r0, [sl]
 800a93e:	f886 9006 	strb.w	r9, [r6, #6]
 800a942:	f642 1105 	movw	r1, #10501	; 0x2905
 800a946:	f886 8007 	strb.w	r8, [r6, #7]
 800a94a:	7237      	strb	r7, [r6, #8]
 800a94c:	7275      	strb	r5, [r6, #9]
 800a94e:	f007 faa3 	bl	8011e98 <Network::Begin(unsigned short)>
 800a952:	6160      	str	r0, [r4, #20]
 800a954:	4620      	mov	r0, r4
 800a956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a95a:	bf00      	nop
 800a95c:	20000100 	andcs	r0, r0, r0, lsl #2
 800a960:	20000124 	andcs	r0, r0, r4, lsr #2
 800a964:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800a968 <RemoteConfig::GetStringNode() const>:
 800a968:	4b03      	ldr	r3, [pc, #12]	; (800a978 <RemoteConfig::GetStringNode() const+0x10>)
 800a96a:	7998      	ldrb	r0, [r3, #6]
 800a96c:	4b03      	ldr	r3, [pc, #12]	; (800a97c <RemoteConfig::GetStringNode() const+0x14>)
 800a96e:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a972:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a976:	4770      	bx	lr
 800a978:	20000100 	andcs	r0, r0, r0, lsl #2
 800a97c:	08016fe8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}

0800a980 <RemoteConfig::GetStringOutput() const>:
 800a980:	4b03      	ldr	r3, [pc, #12]	; (800a990 <RemoteConfig::GetStringOutput() const+0x10>)
 800a982:	79d8      	ldrb	r0, [r3, #7]
 800a984:	4b03      	ldr	r3, [pc, #12]	; (800a994 <RemoteConfig::GetStringOutput() const+0x14>)
 800a986:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a98a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a98e:	4770      	bx	lr
 800a990:	20000100 	andcs	r0, r0, r0, lsl #2
 800a994:	080170ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, ip, sp, lr}

0800a998 <RemoteConfig::SetDisable(bool)>:
 800a998:	b538      	push	{r3, r4, r5, lr}
 800a99a:	7b03      	ldrb	r3, [r0, #12]
 800a99c:	4604      	mov	r4, r0
 800a99e:	b161      	cbz	r1, 800a9ba <RemoteConfig::SetDisable(bool)+0x22>
 800a9a0:	b953      	cbnz	r3, 800a9b8 <RemoteConfig::SetDisable(bool)+0x20>
 800a9a2:	4b0c      	ldr	r3, [pc, #48]	; (800a9d4 <RemoteConfig::SetDisable(bool)+0x3c>)
 800a9a4:	f642 1105 	movw	r1, #10501	; 0x2905
 800a9a8:	6818      	ldr	r0, [r3, #0]
 800a9aa:	f007 fa78 	bl	8011e9e <Network::End(unsigned short)>
 800a9ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a9b2:	6163      	str	r3, [r4, #20]
 800a9b4:	2301      	movs	r3, #1
 800a9b6:	7323      	strb	r3, [r4, #12]
 800a9b8:	bd38      	pop	{r3, r4, r5, pc}
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	d0fc      	beq.n	800a9b8 <RemoteConfig::SetDisable(bool)+0x20>
 800a9be:	4b05      	ldr	r3, [pc, #20]	; (800a9d4 <RemoteConfig::SetDisable(bool)+0x3c>)
 800a9c0:	460d      	mov	r5, r1
 800a9c2:	6818      	ldr	r0, [r3, #0]
 800a9c4:	f642 1105 	movw	r1, #10501	; 0x2905
 800a9c8:	f007 fa66 	bl	8011e98 <Network::Begin(unsigned short)>
 800a9cc:	7325      	strb	r5, [r4, #12]
 800a9ce:	6160      	str	r0, [r4, #20]
 800a9d0:	e7f2      	b.n	800a9b8 <RemoteConfig::SetDisable(bool)+0x20>
 800a9d2:	bf00      	nop
 800a9d4:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800a9d8 <RemoteConfig::SetDisplayName(char const*)>:
 800a9d8:	4809      	ldr	r0, [pc, #36]	; (800aa00 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a9da:	b508      	push	{r3, lr}
 800a9dc:	2217      	movs	r2, #23
 800a9de:	1e4b      	subs	r3, r1, #1
 800a9e0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a9e4:	b911      	cbnz	r1, 800a9ec <RemoteConfig::SetDisplayName(char const*)+0x14>
 800a9e6:	f009 fe7b 	bl	80146e0 <memset>
 800a9ea:	e003      	b.n	800a9f4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a9ec:	3a01      	subs	r2, #1
 800a9ee:	f800 1b01 	strb.w	r1, [r0], #1
 800a9f2:	d1f5      	bne.n	800a9e0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a9f4:	4b03      	ldr	r3, [pc, #12]	; (800aa04 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a9f6:	2200      	movs	r2, #0
 800a9f8:	f883 2020 	strb.w	r2, [r3, #32]
 800a9fc:	bd08      	pop	{r3, pc}
 800a9fe:	bf00      	nop
 800aa00:	20000109 	andcs	r0, r0, r9, lsl #2
 800aa04:	20000100 	andcs	r0, r0, r0, lsl #2

0800aa08 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800aa08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa0a:	4f2a      	ldr	r7, [pc, #168]	; (800aab4 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800aa0c:	b085      	sub	sp, #20
 800aa0e:	4604      	mov	r4, r0
 800aa10:	4616      	mov	r6, r2
 800aa12:	460d      	mov	r5, r1
 800aa14:	b9a9      	cbnz	r1, 800aa42 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800aa16:	6839      	ldr	r1, [r7, #0]
 800aa18:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800aa1c:	aa03      	add	r2, sp, #12
 800aa1e:	3105      	adds	r1, #5
 800aa20:	9303      	str	r3, [sp, #12]
 800aa22:	f000 fbe9 	bl	800b1f8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa26:	1e03      	subs	r3, r0, #0
 800aa28:	da1b      	bge.n	800aa62 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800aa2a:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa2e:	9300      	str	r3, [sp, #0]
 800aa30:	4921      	ldr	r1, [pc, #132]	; (800aab8 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800aa32:	69a3      	ldr	r3, [r4, #24]
 800aa34:	7d20      	ldrb	r0, [r4, #20]
 800aa36:	220b      	movs	r2, #11
 800aa38:	f006 fd5e 	bl	80114f8 <udp_send>
 800aa3c:	200c      	movs	r0, #12
 800aa3e:	b005      	add	sp, #20
 800aa40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa42:	9203      	str	r2, [sp, #12]
 800aa44:	aa03      	add	r2, sp, #12
 800aa46:	6039      	str	r1, [r7, #0]
 800aa48:	f000 fbd6 	bl	800b1f8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa4c:	1e03      	subs	r3, r0, #0
 800aa4e:	da08      	bge.n	800aa62 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800aa50:	2e0b      	cmp	r6, #11
 800aa52:	4632      	mov	r2, r6
 800aa54:	4918      	ldr	r1, [pc, #96]	; (800aab8 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800aa56:	bf28      	it	cs
 800aa58:	220b      	movcs	r2, #11
 800aa5a:	4628      	mov	r0, r5
 800aa5c:	f009 fe1e 	bl	801469c <memcpy>
 800aa60:	e7ec      	b.n	800aa3c <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800aa62:	4916      	ldr	r1, [pc, #88]	; (800aabc <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800aa64:	221c      	movs	r2, #28
 800aa66:	4353      	muls	r3, r2
 800aa68:	18ca      	adds	r2, r1, r3
 800aa6a:	58cb      	ldr	r3, [r1, r3]
 800aa6c:	6852      	ldr	r2, [r2, #4]
 800aa6e:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800aa72:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aa76:	07d2      	lsls	r2, r2, #31
 800aa78:	bf48      	it	mi
 800aa7a:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800aa7e:	a903      	add	r1, sp, #12
 800aa80:	bf48      	it	mi
 800aa82:	58d3      	ldrmi	r3, [r2, r3]
 800aa84:	4798      	blx	r3
 800aa86:	b95d      	cbnz	r5, 800aaa0 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800aa88:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa8c:	9300      	str	r3, [sp, #0]
 800aa8e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800aa92:	69a3      	ldr	r3, [r4, #24]
 800aa94:	6839      	ldr	r1, [r7, #0]
 800aa96:	7d20      	ldrb	r0, [r4, #20]
 800aa98:	f006 fd2e 	bl	80114f8 <udp_send>
 800aa9c:	9803      	ldr	r0, [sp, #12]
 800aa9e:	e7ce      	b.n	800aa3e <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800aaa0:	9a03      	ldr	r2, [sp, #12]
 800aaa2:	6839      	ldr	r1, [r7, #0]
 800aaa4:	42b2      	cmp	r2, r6
 800aaa6:	bf28      	it	cs
 800aaa8:	4632      	movcs	r2, r6
 800aaaa:	4628      	mov	r0, r5
 800aaac:	f009 fe01 	bl	80146b2 <memmove>
 800aab0:	e7f4      	b.n	800aa9c <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800aab2:	bf00      	nop
 800aab4:	200000fc 	strdcs	r0, [r0], -ip
 800aab8:	08016f85 	stmdaeq	r1, {r0, r2, r7, r8, r9, sl, fp, sp, lr}
 800aabc:	0801726c 	stmdaeq	r1, {r2, r3, r5, r6, r9, ip, sp, lr}

0800aac0 <RemoteConfig::HandleGetNoParams()>:
 800aac0:	2200      	movs	r2, #0
 800aac2:	4611      	mov	r1, r2
 800aac4:	f7ff bfa0 	b.w	800aa08 <RemoteConfig::HandleGet(void*, unsigned int)>

0800aac8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800aac8:	b500      	push	{lr}
 800aaca:	4a09      	ldr	r2, [pc, #36]	; (800aaf0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800aacc:	b08d      	sub	sp, #52	; 0x34
 800aace:	a803      	add	r0, sp, #12
 800aad0:	9101      	str	r1, [sp, #4]
 800aad2:	6811      	ldr	r1, [r2, #0]
 800aad4:	f000 f9ec 	bl	800aeb0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800aad8:	4906      	ldr	r1, [pc, #24]	; (800aaf4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x2c>)
 800aada:	9b01      	ldr	r3, [sp, #4]
 800aadc:	6809      	ldr	r1, [r1, #0]
 800aade:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aae2:	a803      	add	r0, sp, #12
 800aae4:	f000 fb08 	bl	800b0f8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800aae8:	b00d      	add	sp, #52	; 0x34
 800aaea:	f85d fb04 	ldr.w	pc, [sp], #4
 800aaee:	bf00      	nop
 800aaf0:	20009400 	andcs	r9, r0, r0, lsl #8
 800aaf4:	200000fc 	strdcs	r0, [r0], -ip

0800aaf8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800aaf8:	b500      	push	{lr}
 800aafa:	4a09      	ldr	r2, [pc, #36]	; (800ab20 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800aafc:	b09d      	sub	sp, #116	; 0x74
 800aafe:	a803      	add	r0, sp, #12
 800ab00:	9101      	str	r1, [sp, #4]
 800ab02:	6811      	ldr	r1, [r2, #0]
 800ab04:	f007 fce8 	bl	80124d8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ab08:	4906      	ldr	r1, [pc, #24]	; (800ab24 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x2c>)
 800ab0a:	9b01      	ldr	r3, [sp, #4]
 800ab0c:	6809      	ldr	r1, [r1, #0]
 800ab0e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab12:	a803      	add	r0, sp, #12
 800ab14:	f007 feb4 	bl	8012880 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800ab18:	b01d      	add	sp, #116	; 0x74
 800ab1a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab1e:	bf00      	nop
 800ab20:	200093f8 	strdcs	r9, [r0], -r8
 800ab24:	200000fc 	strdcs	r0, [r0], -ip

0800ab28 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800ab28:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab2a:	4a08      	ldr	r2, [pc, #32]	; (800ab4c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800ab2c:	9101      	str	r1, [sp, #4]
 800ab2e:	a802      	add	r0, sp, #8
 800ab30:	6811      	ldr	r1, [r2, #0]
 800ab32:	f002 fe3b 	bl	800d7ac <DmxParams::DmxParams(DmxParamsStore*)>
 800ab36:	4906      	ldr	r1, [pc, #24]	; (800ab50 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800ab38:	9b01      	ldr	r3, [sp, #4]
 800ab3a:	6809      	ldr	r1, [r1, #0]
 800ab3c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab40:	a802      	add	r0, sp, #8
 800ab42:	f002 ff55 	bl	800d9f0 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800ab46:	b007      	add	sp, #28
 800ab48:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab4c:	200093f4 	strdcs	r9, [r0], -r4
 800ab50:	200000fc 	strdcs	r0, [r0], -ip

0800ab54 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800ab54:	b500      	push	{lr}
 800ab56:	4a09      	ldr	r2, [pc, #36]	; (800ab7c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800ab58:	b093      	sub	sp, #76	; 0x4c
 800ab5a:	a803      	add	r0, sp, #12
 800ab5c:	9101      	str	r1, [sp, #4]
 800ab5e:	6811      	ldr	r1, [r2, #0]
 800ab60:	f003 fe6a 	bl	800e838 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ab64:	4906      	ldr	r1, [pc, #24]	; (800ab80 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x2c>)
 800ab66:	9b01      	ldr	r3, [sp, #4]
 800ab68:	6809      	ldr	r1, [r1, #0]
 800ab6a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab6e:	a803      	add	r0, sp, #12
 800ab70:	f004 f984 	bl	800ee7c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 800ab74:	b013      	add	sp, #76	; 0x4c
 800ab76:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab7a:	bf00      	nop
 800ab7c:	20009404 	andcs	r9, r0, r4, lsl #8
 800ab80:	200000fc 	strdcs	r0, [r0], -ip

0800ab84 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800ab84:	b500      	push	{lr}
 800ab86:	4a09      	ldr	r2, [pc, #36]	; (800abac <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800ab88:	b08d      	sub	sp, #52	; 0x34
 800ab8a:	a802      	add	r0, sp, #8
 800ab8c:	9101      	str	r1, [sp, #4]
 800ab8e:	6811      	ldr	r1, [r2, #0]
 800ab90:	f008 fc06 	bl	80133a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ab94:	4906      	ldr	r1, [pc, #24]	; (800abb0 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x2c>)
 800ab96:	9b01      	ldr	r3, [sp, #4]
 800ab98:	6809      	ldr	r1, [r1, #0]
 800ab9a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ab9e:	a802      	add	r0, sp, #8
 800aba0:	f008 fd38 	bl	8013614 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800aba4:	b00d      	add	sp, #52	; 0x34
 800aba6:	f85d fb04 	ldr.w	pc, [sp], #4
 800abaa:	bf00      	nop
 800abac:	200093f0 	strdcs	r9, [r0], -r0
 800abb0:	200000fc 	strdcs	r0, [r0], -ip

0800abb4 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800abb4:	b530      	push	{r4, r5, lr}
 800abb6:	b085      	sub	sp, #20
 800abb8:	4604      	mov	r4, r0
 800abba:	9201      	str	r2, [sp, #4]
 800abbc:	b9d1      	cbnz	r1, 800abf4 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800abbe:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800abc2:	9303      	str	r3, [sp, #12]
 800abc4:	4b19      	ldr	r3, [pc, #100]	; (800ac2c <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800abc6:	6819      	ldr	r1, [r3, #0]
 800abc8:	aa03      	add	r2, sp, #12
 800abca:	3101      	adds	r1, #1
 800abcc:	f000 fb14 	bl	800b1f8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800abd0:	2800      	cmp	r0, #0
 800abd2:	db0d      	blt.n	800abf0 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800abd4:	4b16      	ldr	r3, [pc, #88]	; (800ac30 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 800abd6:	221c      	movs	r2, #28
 800abd8:	fb02 3300 	mla	r3, r2, r0, r3
 800abdc:	68da      	ldr	r2, [r3, #12]
 800abde:	689b      	ldr	r3, [r3, #8]
 800abe0:	1051      	asrs	r1, r2, #1
 800abe2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800abe6:	07d2      	lsls	r2, r2, #31
 800abe8:	bf44      	itt	mi
 800abea:	5862      	ldrmi	r2, [r4, r1]
 800abec:	58d3      	ldrmi	r3, [r2, r3]
 800abee:	4798      	blx	r3
 800abf0:	b005      	add	sp, #20
 800abf2:	bd30      	pop	{r4, r5, pc}
 800abf4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800abf8:	d8fa      	bhi.n	800abf0 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800abfa:	4b0e      	ldr	r3, [pc, #56]	; (800ac34 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800abfc:	781b      	ldrb	r3, [r3, #0]
 800abfe:	460d      	mov	r5, r1
 800ac00:	07d9      	lsls	r1, r3, #31
 800ac02:	d50b      	bpl.n	800ac1c <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ac04:	782b      	ldrb	r3, [r5, #0]
 800ac06:	2b7b      	cmp	r3, #123	; 0x7b
 800ac08:	d108      	bne.n	800ac1c <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ac0a:	1e51      	subs	r1, r2, #1
 800ac0c:	b289      	uxth	r1, r1
 800ac0e:	2200      	movs	r2, #0
 800ac10:	4628      	mov	r0, r5
 800ac12:	f008 fd6b 	bl	80136ec <properties::convert_json_file(char*, unsigned short, bool)>
 800ac16:	1e02      	subs	r2, r0, #0
 800ac18:	ddea      	ble.n	800abf0 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ac1a:	b292      	uxth	r2, r2
 800ac1c:	4b03      	ldr	r3, [pc, #12]	; (800ac2c <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800ac1e:	61e2      	str	r2, [r4, #28]
 800ac20:	601d      	str	r5, [r3, #0]
 800ac22:	aa01      	add	r2, sp, #4
 800ac24:	1c69      	adds	r1, r5, #1
 800ac26:	4620      	mov	r0, r4
 800ac28:	e7d0      	b.n	800abcc <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ac2a:	bf00      	nop
 800ac2c:	200000fc 	strdcs	r0, [r0], -ip
 800ac30:	0801726c 	stmdaeq	r1, {r2, r3, r5, r6, r9, ip, sp, lr}
 800ac34:	2000fdf4 	strdcs	pc, [r0], -r4

0800ac38 <RemoteConfig::Run()>:
 800ac38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ac3c:	7b05      	ldrb	r5, [r0, #12]
 800ac3e:	2d00      	cmp	r5, #0
 800ac40:	d156      	bne.n	800acf0 <RemoteConfig::Run()+0xb8>
 800ac42:	4e45      	ldr	r6, [pc, #276]	; (800ad58 <RemoteConfig::Run()+0x120>)
 800ac44:	4604      	mov	r4, r0
 800ac46:	f100 0218 	add.w	r2, r0, #24
 800ac4a:	f10d 030e 	add.w	r3, sp, #14
 800ac4e:	7d00      	ldrb	r0, [r0, #20]
 800ac50:	4631      	mov	r1, r6
 800ac52:	f006 fc2b 	bl	80114ac <udp_recv2>
 800ac56:	2803      	cmp	r0, #3
 800ac58:	61e0      	str	r0, [r4, #28]
 800ac5a:	d949      	bls.n	800acf0 <RemoteConfig::Run()+0xb8>
 800ac5c:	1e43      	subs	r3, r0, #1
 800ac5e:	6831      	ldr	r1, [r6, #0]
 800ac60:	5cca      	ldrb	r2, [r1, r3]
 800ac62:	2a0a      	cmp	r2, #10
 800ac64:	bf18      	it	ne
 800ac66:	4603      	movne	r3, r0
 800ac68:	61e3      	str	r3, [r4, #28]
 800ac6a:	7808      	ldrb	r0, [r1, #0]
 800ac6c:	283f      	cmp	r0, #63	; 0x3f
 800ac6e:	d137      	bne.n	800ace0 <RemoteConfig::Run()+0xa8>
 800ac70:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 800ad70 <RemoteConfig::Run()+0x138>
 800ac74:	3b01      	subs	r3, #1
 800ac76:	61e3      	str	r3, [r4, #28]
 800ac78:	462a      	mov	r2, r5
 800ac7a:	4667      	mov	r7, ip
 800ac7c:	f89c 500e 	ldrb.w	r5, [ip, #14]
 800ac80:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800ac84:	b16d      	cbz	r5, 800aca2 <RemoteConfig::Run()+0x6a>
 800ac86:	4283      	cmp	r3, r0
 800ac88:	d80d      	bhi.n	800aca6 <RemoteConfig::Run()+0x6e>
 800ac8a:	3201      	adds	r2, #1
 800ac8c:	2a09      	cmp	r2, #9
 800ac8e:	f10c 0c10 	add.w	ip, ip, #16
 800ac92:	d1f3      	bne.n	800ac7c <RemoteConfig::Run()+0x44>
 800ac94:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac98:	9300      	str	r3, [sp, #0]
 800ac9a:	69a3      	ldr	r3, [r4, #24]
 800ac9c:	492f      	ldr	r1, [pc, #188]	; (800ad5c <RemoteConfig::Run()+0x124>)
 800ac9e:	2208      	movs	r2, #8
 800aca0:	e04e      	b.n	800ad40 <RemoteConfig::Run()+0x108>
 800aca2:	4283      	cmp	r3, r0
 800aca4:	d1f1      	bne.n	800ac8a <RemoteConfig::Run()+0x52>
 800aca6:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800acaa:	460e      	mov	r6, r1
 800acac:	3d01      	subs	r5, #1
 800acae:	4408      	add	r0, r1
 800acb0:	4286      	cmp	r6, r0
 800acb2:	d10b      	bne.n	800accc <RemoteConfig::Run()+0x94>
 800acb4:	0113      	lsls	r3, r2, #4
 800acb6:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800acba:	58fb      	ldr	r3, [r7, r3]
 800acbc:	6852      	ldr	r2, [r2, #4]
 800acbe:	1051      	asrs	r1, r2, #1
 800acc0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800acc4:	07d2      	lsls	r2, r2, #31
 800acc6:	d408      	bmi.n	800acda <RemoteConfig::Run()+0xa2>
 800acc8:	4798      	blx	r3
 800acca:	e011      	b.n	800acf0 <RemoteConfig::Run()+0xb8>
 800accc:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800acd0:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800acd4:	45f0      	cmp	r8, lr
 800acd6:	d0eb      	beq.n	800acb0 <RemoteConfig::Run()+0x78>
 800acd8:	e7d7      	b.n	800ac8a <RemoteConfig::Run()+0x52>
 800acda:	5862      	ldr	r2, [r4, r1]
 800acdc:	58d3      	ldr	r3, [r2, r3]
 800acde:	e7f3      	b.n	800acc8 <RemoteConfig::Run()+0x90>
 800ace0:	7b62      	ldrb	r2, [r4, #13]
 800ace2:	b92a      	cbnz	r2, 800acf0 <RemoteConfig::Run()+0xb8>
 800ace4:	2823      	cmp	r0, #35	; 0x23
 800ace6:	d106      	bne.n	800acf6 <RemoteConfig::Run()+0xbe>
 800ace8:	4611      	mov	r1, r2
 800acea:	4620      	mov	r0, r4
 800acec:	f7ff ff62 	bl	800abb4 <RemoteConfig::HandleSet(void*, unsigned int)>
 800acf0:	b004      	add	sp, #16
 800acf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800acf6:	2821      	cmp	r0, #33	; 0x21
 800acf8:	d1fa      	bne.n	800acf0 <RemoteConfig::Run()+0xb8>
 800acfa:	3b01      	subs	r3, #1
 800acfc:	2b05      	cmp	r3, #5
 800acfe:	61e3      	str	r3, [r4, #28]
 800ad00:	d918      	bls.n	800ad34 <RemoteConfig::Run()+0xfc>
 800ad02:	4d17      	ldr	r5, [pc, #92]	; (800ad60 <RemoteConfig::Run()+0x128>)
 800ad04:	460a      	mov	r2, r1
 800ad06:	f101 0c05 	add.w	ip, r1, #5
 800ad0a:	4608      	mov	r0, r1
 800ad0c:	4560      	cmp	r0, ip
 800ad0e:	d01b      	beq.n	800ad48 <RemoteConfig::Run()+0x110>
 800ad10:	f815 6b01 	ldrb.w	r6, [r5], #1
 800ad14:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800ad18:	42b7      	cmp	r7, r6
 800ad1a:	d0f7      	beq.n	800ad0c <RemoteConfig::Run()+0xd4>
 800ad1c:	2b08      	cmp	r3, #8
 800ad1e:	d909      	bls.n	800ad34 <RemoteConfig::Run()+0xfc>
 800ad20:	4b10      	ldr	r3, [pc, #64]	; (800ad64 <RemoteConfig::Run()+0x12c>)
 800ad22:	3108      	adds	r1, #8
 800ad24:	428a      	cmp	r2, r1
 800ad26:	d015      	beq.n	800ad54 <RemoteConfig::Run()+0x11c>
 800ad28:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ad2c:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800ad30:	4285      	cmp	r5, r0
 800ad32:	d0f7      	beq.n	800ad24 <RemoteConfig::Run()+0xec>
 800ad34:	f642 1305 	movw	r3, #10501	; 0x2905
 800ad38:	9300      	str	r3, [sp, #0]
 800ad3a:	69a3      	ldr	r3, [r4, #24]
 800ad3c:	490a      	ldr	r1, [pc, #40]	; (800ad68 <RemoteConfig::Run()+0x130>)
 800ad3e:	2208      	movs	r2, #8
 800ad40:	7d20      	ldrb	r0, [r4, #20]
 800ad42:	f006 fbd9 	bl	80114f8 <udp_send>
 800ad46:	e7d3      	b.n	800acf0 <RemoteConfig::Run()+0xb8>
 800ad48:	2300      	movs	r3, #0
 800ad4a:	4a08      	ldr	r2, [pc, #32]	; (800ad6c <RemoteConfig::Run()+0x134>)
 800ad4c:	011b      	lsls	r3, r3, #4
 800ad4e:	4620      	mov	r0, r4
 800ad50:	58d3      	ldr	r3, [r2, r3]
 800ad52:	e7b9      	b.n	800acc8 <RemoteConfig::Run()+0x90>
 800ad54:	2301      	movs	r3, #1
 800ad56:	e7f8      	b.n	800ad4a <RemoteConfig::Run()+0x112>
 800ad58:	200000fc 	strdcs	r0, [r0], -ip
 800ad5c:	08016fa9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, fp, sp, lr}
 800ad60:	08016f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
 800ad64:	08016f97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, fp, sp, lr}
 800ad68:	08016fa0 	stmdaeq	r1, {r5, r7, r8, r9, sl, fp, sp, lr}
 800ad6c:	080171d0 	stmdaeq	r1, {r4, r6, r7, r8, ip, sp, lr}
 800ad70:	08017140 	stmdaeq	r1, {r6, r8, ip, sp, lr}

0800ad74 <RemoteConfig::HandleSetRconfig()>:
 800ad74:	b510      	push	{r4, lr}
 800ad76:	4b09      	ldr	r3, [pc, #36]	; (800ad9c <RemoteConfig::HandleSetRconfig()+0x28>)
 800ad78:	b08a      	sub	sp, #40	; 0x28
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	6819      	ldr	r1, [r3, #0]
 800ad7e:	a801      	add	r0, sp, #4
 800ad80:	f000 f896 	bl	800aeb0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ad84:	4b06      	ldr	r3, [pc, #24]	; (800ada0 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800ad86:	69e2      	ldr	r2, [r4, #28]
 800ad88:	6819      	ldr	r1, [r3, #0]
 800ad8a:	a801      	add	r0, sp, #4
 800ad8c:	f000 f8a6 	bl	800aedc <RemoteConfigParams::Load(char const*, unsigned int)>
 800ad90:	4621      	mov	r1, r4
 800ad92:	a801      	add	r0, sp, #4
 800ad94:	f000 f9bd 	bl	800b112 <RemoteConfigParams::Set(RemoteConfig*)>
 800ad98:	b00a      	add	sp, #40	; 0x28
 800ad9a:	bd10      	pop	{r4, pc}
 800ad9c:	20009400 	andcs	r9, r0, r0, lsl #8
 800ada0:	200000fc 	strdcs	r0, [r0], -ip

0800ada4 <RemoteConfig::HandleSetNetworkTxt()>:
 800ada4:	b510      	push	{r4, lr}
 800ada6:	4b07      	ldr	r3, [pc, #28]	; (800adc4 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800ada8:	b09a      	sub	sp, #104	; 0x68
 800adaa:	6819      	ldr	r1, [r3, #0]
 800adac:	4604      	mov	r4, r0
 800adae:	a801      	add	r0, sp, #4
 800adb0:	f007 fb92 	bl	80124d8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800adb4:	4b04      	ldr	r3, [pc, #16]	; (800adc8 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800adb6:	69e2      	ldr	r2, [r4, #28]
 800adb8:	6819      	ldr	r1, [r3, #0]
 800adba:	a801      	add	r0, sp, #4
 800adbc:	f007 fba4 	bl	8012508 <NetworkParams::Load(char const*, unsigned int)>
 800adc0:	b01a      	add	sp, #104	; 0x68
 800adc2:	bd10      	pop	{r4, pc}
 800adc4:	200093f8 	strdcs	r9, [r0], -r8
 800adc8:	200000fc 	strdcs	r0, [r0], -ip

0800adcc <RemoteConfig::HandleSetParamsTxt()>:
 800adcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800adce:	4b07      	ldr	r3, [pc, #28]	; (800adec <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800add0:	4604      	mov	r4, r0
 800add2:	6819      	ldr	r1, [r3, #0]
 800add4:	4668      	mov	r0, sp
 800add6:	f002 fce9 	bl	800d7ac <DmxParams::DmxParams(DmxParamsStore*)>
 800adda:	4b05      	ldr	r3, [pc, #20]	; (800adf0 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800addc:	69e2      	ldr	r2, [r4, #28]
 800adde:	6819      	ldr	r1, [r3, #0]
 800ade0:	4668      	mov	r0, sp
 800ade2:	f002 fcfb 	bl	800d7dc <DmxParams::Load(char const*, unsigned int)>
 800ade6:	b004      	add	sp, #16
 800ade8:	bd10      	pop	{r4, pc}
 800adea:	bf00      	nop
 800adec:	200093f4 	strdcs	r9, [r0], -r4
 800adf0:	200000fc 	strdcs	r0, [r0], -ip

0800adf4 <RemoteConfig::HandleSetDevicesTxt()>:
 800adf4:	b510      	push	{r4, lr}
 800adf6:	4b07      	ldr	r3, [pc, #28]	; (800ae14 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800adf8:	b090      	sub	sp, #64	; 0x40
 800adfa:	6819      	ldr	r1, [r3, #0]
 800adfc:	4604      	mov	r4, r0
 800adfe:	a801      	add	r0, sp, #4
 800ae00:	f003 fd1a 	bl	800e838 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ae04:	4b04      	ldr	r3, [pc, #16]	; (800ae18 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800ae06:	69e2      	ldr	r2, [r4, #28]
 800ae08:	6819      	ldr	r1, [r3, #0]
 800ae0a:	a801      	add	r0, sp, #4
 800ae0c:	f003 fd40 	bl	800e890 <PixelDmxParams::Load(char const*, unsigned int)>
 800ae10:	b010      	add	sp, #64	; 0x40
 800ae12:	bd10      	pop	{r4, pc}
 800ae14:	20009404 	andcs	r9, r0, r4, lsl #8
 800ae18:	200000fc 	strdcs	r0, [r0], -ip

0800ae1c <RemoteConfig::HandleSetDisplayTxt()>:
 800ae1c:	b510      	push	{r4, lr}
 800ae1e:	4b07      	ldr	r3, [pc, #28]	; (800ae3c <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800ae20:	b08a      	sub	sp, #40	; 0x28
 800ae22:	6819      	ldr	r1, [r3, #0]
 800ae24:	4604      	mov	r4, r0
 800ae26:	4668      	mov	r0, sp
 800ae28:	f008 faba 	bl	80133a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ae2c:	4b04      	ldr	r3, [pc, #16]	; (800ae40 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800ae2e:	69e2      	ldr	r2, [r4, #28]
 800ae30:	6819      	ldr	r1, [r3, #0]
 800ae32:	4668      	mov	r0, sp
 800ae34:	f008 face 	bl	80133d4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800ae38:	b00a      	add	sp, #40	; 0x28
 800ae3a:	bd10      	pop	{r4, pc}
 800ae3c:	200093f0 	strdcs	r9, [r0], -r0
 800ae40:	200000fc 	strdcs	r0, [r0], -ip

0800ae44 <RemoteConfig::HandleFactory()>:
 800ae44:	b538      	push	{r3, r4, r5, lr}
 800ae46:	4d05      	ldr	r5, [pc, #20]	; (800ae5c <RemoteConfig::HandleFactory()+0x18>)
 800ae48:	2400      	movs	r4, #0
 800ae4a:	4621      	mov	r1, r4
 800ae4c:	6828      	ldr	r0, [r5, #0]
 800ae4e:	3401      	adds	r4, #1
 800ae50:	f005 fbe8 	bl	8010624 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800ae54:	2c1c      	cmp	r4, #28
 800ae56:	d1f8      	bne.n	800ae4a <RemoteConfig::HandleFactory()+0x6>
 800ae58:	bd38      	pop	{r3, r4, r5, pc}
 800ae5a:	bf00      	nop
 800ae5c:	200093e8 	andcs	r9, r0, r8, ror #7

0800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800ae60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae62:	460b      	mov	r3, r1
 800ae64:	8885      	ldrh	r5, [r0, #4]
 800ae66:	88c1      	ldrh	r1, [r0, #6]
 800ae68:	42a9      	cmp	r1, r5
 800ae6a:	d214      	bcs.n	800ae96 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800ae6c:	4604      	mov	r4, r0
 800ae6e:	6800      	ldr	r0, [r0, #0]
 800ae70:	1a6d      	subs	r5, r5, r1
 800ae72:	4408      	add	r0, r1
 800ae74:	7a21      	ldrb	r1, [r4, #8]
 800ae76:	b91a      	cbnz	r2, 800ae80 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800ae78:	b919      	cbnz	r1, 800ae82 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800ae7a:	4a0a      	ldr	r2, [pc, #40]	; (800aea4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800ae7c:	9100      	str	r1, [sp, #0]
 800ae7e:	e002      	b.n	800ae86 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ae80:	b159      	cbz	r1, 800ae9a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ae82:	9200      	str	r2, [sp, #0]
 800ae84:	4a08      	ldr	r2, [pc, #32]	; (800aea8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ae86:	4629      	mov	r1, r5
 800ae88:	f7ff fa4a 	bl	800a320 <snprintf>
 800ae8c:	4285      	cmp	r5, r0
 800ae8e:	bfa2      	ittt	ge
 800ae90:	88e3      	ldrhge	r3, [r4, #6]
 800ae92:	181b      	addge	r3, r3, r0
 800ae94:	80e3      	strhge	r3, [r4, #6]
 800ae96:	b003      	add	sp, #12
 800ae98:	bd30      	pop	{r4, r5, pc}
 800ae9a:	2201      	movs	r2, #1
 800ae9c:	9200      	str	r2, [sp, #0]
 800ae9e:	4a03      	ldr	r2, [pc, #12]	; (800aeac <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800aea0:	e7f1      	b.n	800ae86 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800aea2:	bf00      	nop
 800aea4:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800aea8:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800aeac:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800aeb0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	2220      	movs	r2, #32
 800aeb4:	4604      	mov	r4, r0
 800aeb6:	f840 1b04 	str.w	r1, [r0], #4
 800aeba:	2100      	movs	r1, #0
 800aebc:	f009 fc10 	bl	80146e0 <memset>
 800aec0:	4620      	mov	r0, r4
 800aec2:	bd10      	pop	{r4, pc}

0800aec4 <RemoteConfigParams::Load()>:
 800aec4:	b508      	push	{r3, lr}
 800aec6:	2300      	movs	r3, #0
 800aec8:	4601      	mov	r1, r0
 800aeca:	6043      	str	r3, [r0, #4]
 800aecc:	6800      	ldr	r0, [r0, #0]
 800aece:	b120      	cbz	r0, 800aeda <RemoteConfigParams::Load()+0x16>
 800aed0:	6803      	ldr	r3, [r0, #0]
 800aed2:	3104      	adds	r1, #4
 800aed4:	68db      	ldr	r3, [r3, #12]
 800aed6:	4798      	blx	r3
 800aed8:	2001      	movs	r0, #1
 800aeda:	bd08      	pop	{r3, pc}

0800aedc <RemoteConfigParams::Load(char const*, unsigned int)>:
 800aedc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aede:	2300      	movs	r3, #0
 800aee0:	6043      	str	r3, [r0, #4]
 800aee2:	4604      	mov	r4, r0
 800aee4:	460d      	mov	r5, r1
 800aee6:	4616      	mov	r6, r2
 800aee8:	490a      	ldr	r1, [pc, #40]	; (800af14 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800aeea:	4602      	mov	r2, r0
 800aeec:	4668      	mov	r0, sp
 800aeee:	f008 fd4f 	bl	8013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800aef2:	4632      	mov	r2, r6
 800aef4:	4629      	mov	r1, r5
 800aef6:	4668      	mov	r0, sp
 800aef8:	f008 fd4e 	bl	8013998 <ReadConfigFile::Read(char const*, unsigned int)>
 800aefc:	4621      	mov	r1, r4
 800aefe:	f851 0b04 	ldr.w	r0, [r1], #4
 800af02:	6803      	ldr	r3, [r0, #0]
 800af04:	689b      	ldr	r3, [r3, #8]
 800af06:	4798      	blx	r3
 800af08:	4668      	mov	r0, sp
 800af0a:	f008 fd44 	bl	8013996 <ReadConfigFile::~ReadConfigFile()>
 800af0e:	b002      	add	sp, #8
 800af10:	bd70      	pop	{r4, r5, r6, pc}
 800af12:	bf00      	nop
 800af14:	0800afd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, fp, sp, pc}

0800af18 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800af18:	6843      	ldr	r3, [r0, #4]
 800af1a:	b111      	cbz	r1, 800af22 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800af1c:	431a      	orrs	r2, r3
 800af1e:	6042      	str	r2, [r0, #4]
 800af20:	4770      	bx	lr
 800af22:	ea23 0202 	bic.w	r2, r3, r2
 800af26:	e7fa      	b.n	800af1e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800af28 <RemoteConfigParams::callbackFunction(char const*)>:
 800af28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af2a:	460d      	mov	r5, r1
 800af2c:	4604      	mov	r4, r0
 800af2e:	4923      	ldr	r1, [pc, #140]	; (800afbc <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800af30:	f10d 0203 	add.w	r2, sp, #3
 800af34:	4628      	mov	r0, r5
 800af36:	f008 fe60 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af3a:	b940      	cbnz	r0, 800af4e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800af3c:	2201      	movs	r2, #1
 800af3e:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800af42:	4620      	mov	r0, r4
 800af44:	b003      	add	sp, #12
 800af46:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800af4a:	f7ff bfe5 	b.w	800af18 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800af4e:	491c      	ldr	r1, [pc, #112]	; (800afc0 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800af50:	f10d 0203 	add.w	r2, sp, #3
 800af54:	4628      	mov	r0, r5
 800af56:	f008 fe50 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af5a:	b908      	cbnz	r0, 800af60 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800af5c:	2202      	movs	r2, #2
 800af5e:	e7ee      	b.n	800af3e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af60:	4918      	ldr	r1, [pc, #96]	; (800afc4 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800af62:	f10d 0203 	add.w	r2, sp, #3
 800af66:	4628      	mov	r0, r5
 800af68:	f008 fe47 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af6c:	b908      	cbnz	r0, 800af72 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800af6e:	2204      	movs	r2, #4
 800af70:	e7e5      	b.n	800af3e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af72:	4915      	ldr	r1, [pc, #84]	; (800afc8 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800af74:	f10d 0203 	add.w	r2, sp, #3
 800af78:	4628      	mov	r0, r5
 800af7a:	f008 fe3e 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af7e:	b908      	cbnz	r0, 800af84 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800af80:	2208      	movs	r2, #8
 800af82:	e7dc      	b.n	800af3e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af84:	4911      	ldr	r1, [pc, #68]	; (800afcc <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800af86:	f10d 0203 	add.w	r2, sp, #3
 800af8a:	4628      	mov	r0, r5
 800af8c:	f008 fe35 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af90:	b908      	cbnz	r0, 800af96 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800af92:	2220      	movs	r2, #32
 800af94:	e7d3      	b.n	800af3e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800af96:	2317      	movs	r3, #23
 800af98:	9301      	str	r3, [sp, #4]
 800af9a:	490d      	ldr	r1, [pc, #52]	; (800afd0 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800af9c:	ab01      	add	r3, sp, #4
 800af9e:	f104 020c 	add.w	r2, r4, #12
 800afa2:	4628      	mov	r0, r5
 800afa4:	f008 fd2c 	bl	8013a00 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800afa8:	b930      	cbnz	r0, 800afb8 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800afaa:	9b01      	ldr	r3, [sp, #4]
 800afac:	4423      	add	r3, r4
 800afae:	7318      	strb	r0, [r3, #12]
 800afb0:	6863      	ldr	r3, [r4, #4]
 800afb2:	f043 0310 	orr.w	r3, r3, #16
 800afb6:	6063      	str	r3, [r4, #4]
 800afb8:	b003      	add	sp, #12
 800afba:	bd30      	pop	{r4, r5, pc}
 800afbc:	080175d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp, lr}
 800afc0:	080175f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 800afc4:	08017602 	stmdaeq	r1, {r1, r9, sl, ip, sp, lr}
 800afc8:	08017610 	stmdaeq	r1, {r4, r9, sl, ip, sp, lr}
 800afcc:	0801761e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, ip, sp, lr}
 800afd0:	080175e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sl, ip, sp, lr}

0800afd4 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800afd4:	f7ff bfa8 	b.w	800af28 <RemoteConfigParams::callbackFunction(char const*)>

0800afd8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800afd8:	b570      	push	{r4, r5, r6, lr}
 800afda:	4604      	mov	r4, r0
 800afdc:	b086      	sub	sp, #24
 800afde:	4615      	mov	r5, r2
 800afe0:	461e      	mov	r6, r3
 800afe2:	3004      	adds	r0, #4
 800afe4:	2900      	cmp	r1, #0
 800afe6:	d041      	beq.n	800b06c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800afe8:	2220      	movs	r2, #32
 800afea:	f009 fb62 	bl	80146b2 <memmove>
 800afee:	4633      	mov	r3, r6
 800aff0:	462a      	mov	r2, r5
 800aff2:	4937      	ldr	r1, [pc, #220]	; (800b0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800aff4:	a803      	add	r0, sp, #12
 800aff6:	f008 fc2b 	bl	8013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800affa:	6862      	ldr	r2, [r4, #4]
 800affc:	4935      	ldr	r1, [pc, #212]	; (800b0d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800affe:	f002 0201 	and.w	r2, r2, #1
 800b002:	a803      	add	r0, sp, #12
 800b004:	f7ff ff2c 	bl	800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b008:	6862      	ldr	r2, [r4, #4]
 800b00a:	4933      	ldr	r1, [pc, #204]	; (800b0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b00c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800b010:	a803      	add	r0, sp, #12
 800b012:	f7ff ff25 	bl	800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b016:	6862      	ldr	r2, [r4, #4]
 800b018:	4930      	ldr	r1, [pc, #192]	; (800b0dc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800b01a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800b01e:	a803      	add	r0, sp, #12
 800b020:	f7ff ff1e 	bl	800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b024:	6862      	ldr	r2, [r4, #4]
 800b026:	492e      	ldr	r1, [pc, #184]	; (800b0e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800b028:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800b02c:	a803      	add	r0, sp, #12
 800b02e:	f7ff ff17 	bl	800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b032:	6862      	ldr	r2, [r4, #4]
 800b034:	492b      	ldr	r1, [pc, #172]	; (800b0e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800b036:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800b03a:	a803      	add	r0, sp, #12
 800b03c:	f7ff ff10 	bl	800ae60 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b040:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b044:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b048:	6862      	ldr	r2, [r4, #4]
 800b04a:	42ab      	cmp	r3, r5
 800b04c:	d223      	bcs.n	800b096 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800b04e:	9803      	ldr	r0, [sp, #12]
 800b050:	06d2      	lsls	r2, r2, #27
 800b052:	4418      	add	r0, r3
 800b054:	eba5 0503 	sub.w	r5, r5, r3
 800b058:	f104 040c 	add.w	r4, r4, #12
 800b05c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b060:	d40b      	bmi.n	800b07a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800b062:	b95b      	cbnz	r3, 800b07c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800b064:	4b20      	ldr	r3, [pc, #128]	; (800b0e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b066:	4a21      	ldr	r2, [pc, #132]	; (800b0ec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b068:	9400      	str	r4, [sp, #0]
 800b06a:	e00a      	b.n	800b082 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b06c:	6823      	ldr	r3, [r4, #0]
 800b06e:	681a      	ldr	r2, [r3, #0]
 800b070:	4601      	mov	r1, r0
 800b072:	68d2      	ldr	r2, [r2, #12]
 800b074:	4618      	mov	r0, r3
 800b076:	4790      	blx	r2
 800b078:	e7b9      	b.n	800afee <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800b07a:	b32b      	cbz	r3, 800b0c8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800b07c:	4b1a      	ldr	r3, [pc, #104]	; (800b0e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b07e:	4a1c      	ldr	r2, [pc, #112]	; (800b0f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800b080:	9400      	str	r4, [sp, #0]
 800b082:	4629      	mov	r1, r5
 800b084:	f7ff f94c 	bl	800a320 <snprintf>
 800b088:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b08c:	4285      	cmp	r5, r0
 800b08e:	bfa4      	itt	ge
 800b090:	181b      	addge	r3, r3, r0
 800b092:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b096:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b09a:	b17b      	cbz	r3, 800b0bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800b09c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b0a0:	9b03      	ldr	r3, [sp, #12]
 800b0a2:	4413      	add	r3, r2
 800b0a4:	227d      	movs	r2, #125	; 0x7d
 800b0a6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b0aa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b0ae:	9903      	ldr	r1, [sp, #12]
 800b0b0:	54ca      	strb	r2, [r1, r3]
 800b0b2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b0b6:	3301      	adds	r3, #1
 800b0b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b0bc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b0c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0c2:	601a      	str	r2, [r3, #0]
 800b0c4:	b006      	add	sp, #24
 800b0c6:	bd70      	pop	{r4, r5, r6, pc}
 800b0c8:	4b07      	ldr	r3, [pc, #28]	; (800b0e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b0ca:	4a0a      	ldr	r2, [pc, #40]	; (800b0f4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b0cc:	9400      	str	r4, [sp, #0]
 800b0ce:	e7d8      	b.n	800b082 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b0d0:	080175db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sl, ip, sp, lr}
 800b0d4:	080175d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp, lr}
 800b0d8:	080175f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 800b0dc:	08017602 	stmdaeq	r1, {r1, r9, sl, ip, sp, lr}
 800b0e0:	08017610 	stmdaeq	r1, {r4, r9, sl, ip, sp, lr}
 800b0e4:	0801761e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, ip, sp, lr}
 800b0e8:	080175e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sl, ip, sp, lr}
 800b0ec:	0801720c 	stmdaeq	r1, {r2, r3, r9, ip, sp, lr}
 800b0f0:	08017201 	stmdaeq	r1, {r0, r9, ip, sp, lr}
 800b0f4:	0801720d 	stmdaeq	r1, {r0, r2, r3, r9, ip, sp, lr}

0800b0f8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b0f8:	b513      	push	{r0, r1, r4, lr}
 800b0fa:	6804      	ldr	r4, [r0, #0]
 800b0fc:	b914      	cbnz	r4, 800b104 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b0fe:	601c      	str	r4, [r3, #0]
 800b100:	b002      	add	sp, #8
 800b102:	bd10      	pop	{r4, pc}
 800b104:	9300      	str	r3, [sp, #0]
 800b106:	4613      	mov	r3, r2
 800b108:	460a      	mov	r2, r1
 800b10a:	2100      	movs	r1, #0
 800b10c:	f7ff ff64 	bl	800afd8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b110:	e7f6      	b.n	800b100 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b112 <RemoteConfigParams::Set(RemoteConfig*)>:
 800b112:	b538      	push	{r3, r4, r5, lr}
 800b114:	460c      	mov	r4, r1
 800b116:	6841      	ldr	r1, [r0, #4]
 800b118:	4605      	mov	r5, r0
 800b11a:	f001 0101 	and.w	r1, r1, #1
 800b11e:	4620      	mov	r0, r4
 800b120:	f7ff fc3a 	bl	800a998 <RemoteConfig::SetDisable(bool)>
 800b124:	686b      	ldr	r3, [r5, #4]
 800b126:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b12a:	7362      	strb	r2, [r4, #13]
 800b12c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b130:	73a2      	strb	r2, [r4, #14]
 800b132:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b136:	73e2      	strb	r2, [r4, #15]
 800b138:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b13c:	06db      	lsls	r3, r3, #27
 800b13e:	7422      	strb	r2, [r4, #16]
 800b140:	d506      	bpl.n	800b150 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800b142:	f105 010c 	add.w	r1, r5, #12
 800b146:	4620      	mov	r0, r4
 800b148:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b14c:	f7ff bc44 	b.w	800a9d8 <RemoteConfig::SetDisplayName(char const*)>
 800b150:	bd38      	pop	{r3, r4, r5, pc}

0800b152 <RemoteConfigParams::Dump()>:
 800b152:	4770      	bx	lr

0800b154 <RemoteConfig::HandleReboot()>:
 800b154:	7b83      	ldrb	r3, [r0, #14]
 800b156:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b158:	2b00      	cmp	r3, #0
 800b15a:	d03c      	beq.n	800b1d6 <RemoteConfig::HandleReboot()+0x82>
 800b15c:	4c1f      	ldr	r4, [pc, #124]	; (800b1dc <RemoteConfig::HandleReboot()+0x88>)
 800b15e:	6825      	ldr	r5, [r4, #0]
 800b160:	2301      	movs	r3, #1
 800b162:	7443      	strb	r3, [r0, #17]
 800b164:	69a8      	ldr	r0, [r5, #24]
 800b166:	b138      	cbz	r0, 800b178 <RemoteConfig::HandleReboot()+0x24>
 800b168:	6803      	ldr	r3, [r0, #0]
 800b16a:	2100      	movs	r1, #0
 800b16c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b16e:	7429      	strb	r1, [r5, #16]
 800b170:	4798      	blx	r3
 800b172:	4b1b      	ldr	r3, [pc, #108]	; (800b1e0 <RemoteConfig::HandleReboot()+0x8c>)
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	606b      	str	r3, [r5, #4]
 800b178:	4d1a      	ldr	r5, [pc, #104]	; (800b1e4 <RemoteConfig::HandleReboot()+0x90>)
 800b17a:	6828      	ldr	r0, [r5, #0]
 800b17c:	f005 fad6 	bl	801072c <SpiFlashStore::Flash()>
 800b180:	2800      	cmp	r0, #0
 800b182:	d1fa      	bne.n	800b17a <RemoteConfig::HandleReboot()+0x26>
 800b184:	4b18      	ldr	r3, [pc, #96]	; (800b1e8 <RemoteConfig::HandleReboot()+0x94>)
 800b186:	6818      	ldr	r0, [r3, #0]
 800b188:	f006 fe7e 	bl	8011e88 <Network::Shutdown()>
 800b18c:	4817      	ldr	r0, [pc, #92]	; (800b1ec <RemoteConfig::HandleReboot()+0x98>)
 800b18e:	f7ff f89f 	bl	800a2d0 <printf>
 800b192:	6823      	ldr	r3, [r4, #0]
 800b194:	6998      	ldr	r0, [r3, #24]
 800b196:	b110      	cbz	r0, 800b19e <RemoteConfig::HandleReboot()+0x4a>
 800b198:	6803      	ldr	r3, [r0, #0]
 800b19a:	68db      	ldr	r3, [r3, #12]
 800b19c:	4798      	blx	r3
 800b19e:	6824      	ldr	r4, [r4, #0]
 800b1a0:	4913      	ldr	r1, [pc, #76]	; (800b1f0 <RemoteConfig::HandleReboot()+0x9c>)
 800b1a2:	4620      	mov	r0, r4
 800b1a4:	f7fe f8a2 	bl	80092ec <Display::TextStatus(char const*)>
 800b1a8:	7c63      	ldrb	r3, [r4, #17]
 800b1aa:	b183      	cbz	r3, 800b1ce <RemoteConfig::HandleReboot()+0x7a>
 800b1ac:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b1b0:	7a20      	ldrb	r0, [r4, #8]
 800b1b2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b1b6:	23bf      	movs	r3, #191	; 0xbf
 800b1b8:	f88d 3006 	strb.w	r3, [sp, #6]
 800b1bc:	f00a fb0c 	bl	80157d8 <gd32_i2c_set_address>
 800b1c0:	68e0      	ldr	r0, [r4, #12]
 800b1c2:	f00a fb01 	bl	80157c8 <gd32_i2c_set_baudrate>
 800b1c6:	2103      	movs	r1, #3
 800b1c8:	a801      	add	r0, sp, #4
 800b1ca:	f00a fb0b 	bl	80157e4 <gd32_i2c_write>
 800b1ce:	4b09      	ldr	r3, [pc, #36]	; (800b1f4 <RemoteConfig::HandleReboot()+0xa0>)
 800b1d0:	6818      	ldr	r0, [r3, #0]
 800b1d2:	f009 f96d 	bl	80144b0 <Hardware::Reboot()>
 800b1d6:	b003      	add	sp, #12
 800b1d8:	bd30      	pop	{r4, r5, pc}
 800b1da:	bf00      	nop
 800b1dc:	2000fdf8 	strdcs	pc, [r0], -r8
 800b1e0:	2000fefc 	strdcs	pc, [r0], -ip
 800b1e4:	200093e8 	andcs	r9, r0, r8, ror #7
 800b1e8:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800b1ec:	08017214 	stmdaeq	r1, {r2, r4, r9, ip, sp, lr}
 800b1f0:	08017223 	stmdaeq	r1, {r0, r1, r5, r9, ip, sp, lr}
 800b1f4:	2000fee8 	andcs	pc, r0, r8, ror #29

0800b1f8 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b1f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b1fc:	4d12      	ldr	r5, [pc, #72]	; (800b248 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b1fe:	2000      	movs	r0, #0
 800b200:	f10d 0c04 	add.w	ip, sp, #4
 800b204:	6814      	ldr	r4, [r2, #0]
 800b206:	7d2b      	ldrb	r3, [r5, #20]
 800b208:	9301      	str	r3, [sp, #4]
 800b20a:	42a3      	cmp	r3, r4
 800b20c:	bf34      	ite	cc
 800b20e:	4664      	movcc	r4, ip
 800b210:	4614      	movcs	r4, r2
 800b212:	692e      	ldr	r6, [r5, #16]
 800b214:	6827      	ldr	r7, [r4, #0]
 800b216:	3e01      	subs	r6, #1
 800b218:	440f      	add	r7, r1
 800b21a:	460c      	mov	r4, r1
 800b21c:	42bc      	cmp	r4, r7
 800b21e:	d101      	bne.n	800b224 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b220:	6013      	str	r3, [r2, #0]
 800b222:	e00c      	b.n	800b23e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b224:	f894 8000 	ldrb.w	r8, [r4]
 800b228:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b22c:	45f0      	cmp	r8, lr
 800b22e:	d009      	beq.n	800b244 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b230:	3001      	adds	r0, #1
 800b232:	2805      	cmp	r0, #5
 800b234:	f105 051c 	add.w	r5, r5, #28
 800b238:	d1e4      	bne.n	800b204 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b23a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b23e:	b002      	add	sp, #8
 800b240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b244:	3401      	adds	r4, #1
 800b246:	e7e9      	b.n	800b21c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b248:	0801726c 	stmdaeq	r1, {r2, r3, r5, r6, r9, ip, sp, lr}

0800b24c <RemoteConfig::PlatformHandleTftpSet()>:
 800b24c:	f890 1020 	ldrb.w	r1, [r0, #32]
 800b250:	b109      	cbz	r1, 800b256 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b252:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b256:	2001      	movs	r0, #1
 800b258:	f00a b9fa 	b.w	8015650 <bkp_data_write(bkp_data_register_enum, unsigned short)>

0800b25c <RemoteConfig::PlatformHandleTftpGet()>:
 800b25c:	b510      	push	{r4, lr}
 800b25e:	4604      	mov	r4, r0
 800b260:	2001      	movs	r0, #1
 800b262:	f00a f9fd 	bl	8015660 <bkp_data_read(bkp_data_register_enum)>
 800b266:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b26a:	1ac3      	subs	r3, r0, r3
 800b26c:	4258      	negs	r0, r3
 800b26e:	4158      	adcs	r0, r3
 800b270:	f884 0020 	strb.w	r0, [r4, #32]
 800b274:	bd10      	pop	{r4, pc}

0800b276 <strcmp>:
 800b276:	1e43      	subs	r3, r0, #1
 800b278:	3901      	subs	r1, #1
 800b27a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b27e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b282:	4290      	cmp	r0, r2
 800b284:	d001      	beq.n	800b28a <strcmp+0x14>
 800b286:	1a80      	subs	r0, r0, r2
 800b288:	e001      	b.n	800b28e <strcmp+0x18>
 800b28a:	2800      	cmp	r0, #0
 800b28c:	d1f5      	bne.n	800b27a <strcmp+0x4>
 800b28e:	4770      	bx	lr

0800b290 <strcasecmp>:
 800b290:	b530      	push	{r4, r5, lr}
 800b292:	1e42      	subs	r2, r0, #1
 800b294:	3901      	subs	r1, #1
 800b296:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b29a:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b29e:	2b19      	cmp	r3, #25
 800b2a0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b2a4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b2a8:	4604      	mov	r4, r0
 800b2aa:	bf98      	it	ls
 800b2ac:	f100 0420 	addls.w	r4, r0, #32
 800b2b0:	2d19      	cmp	r5, #25
 800b2b2:	bf98      	it	ls
 800b2b4:	3320      	addls	r3, #32
 800b2b6:	42a3      	cmp	r3, r4
 800b2b8:	d001      	beq.n	800b2be <strcasecmp+0x2e>
 800b2ba:	1ae0      	subs	r0, r4, r3
 800b2bc:	e001      	b.n	800b2c2 <strcasecmp+0x32>
 800b2be:	2800      	cmp	r0, #0
 800b2c0:	d1e9      	bne.n	800b296 <strcasecmp+0x6>
 800b2c2:	bd30      	pop	{r4, r5, pc}

0800b2c4 <PropertiesConfig::EnableJSON(bool)>:
 800b2c4:	4a04      	ldr	r2, [pc, #16]	; (800b2d8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b2c6:	7813      	ldrb	r3, [r2, #0]
 800b2c8:	b118      	cbz	r0, 800b2d2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b2ca:	f043 0301 	orr.w	r3, r3, #1
 800b2ce:	7013      	strb	r3, [r2, #0]
 800b2d0:	4770      	bx	lr
 800b2d2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b2d6:	e7fa      	b.n	800b2ce <PropertiesConfig::EnableJSON(bool)+0xa>
 800b2d8:	2000fdf4 	strdcs	pc, [r0], -r4

0800b2dc <HttpDaemon::HttpDaemon()>:
 800b2dc:	4a08      	ldr	r2, [pc, #32]	; (800b300 <HttpDaemon::HttpDaemon()+0x24>)
 800b2de:	6002      	str	r2, [r0, #0]
 800b2e0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b2e4:	2200      	movs	r2, #0
 800b2e6:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b2ea:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b2ee:	2102      	movs	r1, #2
 800b2f0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b2f4:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b2f8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800b2fc:	60c2      	str	r2, [r0, #12]
 800b2fe:	4770      	bx	lr
 800b300:	08017553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, lr}

0800b304 <HttpDaemon::Start()>:
 800b304:	4b04      	ldr	r3, [pc, #16]	; (800b318 <HttpDaemon::Start()+0x14>)
 800b306:	b510      	push	{r4, lr}
 800b308:	2150      	movs	r1, #80	; 0x50
 800b30a:	4604      	mov	r4, r0
 800b30c:	6818      	ldr	r0, [r3, #0]
 800b30e:	f007 f8d7 	bl	80124c0 <Network::TcpBegin(unsigned short)>
 800b312:	6120      	str	r0, [r4, #16]
 800b314:	bd10      	pop	{r4, pc}
 800b316:	bf00      	nop
 800b318:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800b31c <HttpDaemon::ParseMethod(char*)>:
 800b31c:	b538      	push	{r3, r4, r5, lr}
 800b31e:	4604      	mov	r4, r0
 800b320:	4608      	mov	r0, r1
 800b322:	491a      	ldr	r1, [pc, #104]	; (800b38c <HttpDaemon::ParseMethod(char*)+0x70>)
 800b324:	f009 fa06 	bl	8014734 <strtok>
 800b328:	4605      	mov	r5, r0
 800b32a:	b360      	cbz	r0, 800b386 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b32c:	4918      	ldr	r1, [pc, #96]	; (800b390 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b32e:	f7ff ffa2 	bl	800b276 <strcmp>
 800b332:	b128      	cbz	r0, 800b340 <HttpDaemon::ParseMethod(char*)+0x24>
 800b334:	4917      	ldr	r1, [pc, #92]	; (800b394 <HttpDaemon::ParseMethod(char*)+0x78>)
 800b336:	4628      	mov	r0, r5
 800b338:	f7ff ff9d 	bl	800b276 <strcmp>
 800b33c:	bb18      	cbnz	r0, 800b386 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b33e:	2001      	movs	r0, #1
 800b340:	61e0      	str	r0, [r4, #28]
 800b342:	4912      	ldr	r1, [pc, #72]	; (800b38c <HttpDaemon::ParseMethod(char*)+0x70>)
 800b344:	2000      	movs	r0, #0
 800b346:	f009 f9f5 	bl	8014734 <strtok>
 800b34a:	b910      	cbnz	r0, 800b352 <HttpDaemon::ParseMethod(char*)+0x36>
 800b34c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b350:	bd38      	pop	{r3, r4, r5, pc}
 800b352:	6060      	str	r0, [r4, #4]
 800b354:	4910      	ldr	r1, [pc, #64]	; (800b398 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b356:	2000      	movs	r0, #0
 800b358:	f009 f9ec 	bl	8014734 <strtok>
 800b35c:	2800      	cmp	r0, #0
 800b35e:	d0f5      	beq.n	800b34c <HttpDaemon::ParseMethod(char*)+0x30>
 800b360:	490e      	ldr	r1, [pc, #56]	; (800b39c <HttpDaemon::ParseMethod(char*)+0x80>)
 800b362:	f7ff ff88 	bl	800b276 <strcmp>
 800b366:	2800      	cmp	r0, #0
 800b368:	d1f0      	bne.n	800b34c <HttpDaemon::ParseMethod(char*)+0x30>
 800b36a:	490d      	ldr	r1, [pc, #52]	; (800b3a0 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b36c:	f009 f9e2 	bl	8014734 <strtok>
 800b370:	2800      	cmp	r0, #0
 800b372:	d0eb      	beq.n	800b34c <HttpDaemon::ParseMethod(char*)+0x30>
 800b374:	490b      	ldr	r1, [pc, #44]	; (800b3a4 <HttpDaemon::ParseMethod(char*)+0x88>)
 800b376:	f7ff ff7e 	bl	800b276 <strcmp>
 800b37a:	2800      	cmp	r0, #0
 800b37c:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b380:	bf08      	it	eq
 800b382:	20c8      	moveq	r0, #200	; 0xc8
 800b384:	e7e4      	b.n	800b350 <HttpDaemon::ParseMethod(char*)+0x34>
 800b386:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b38a:	e7e1      	b.n	800b350 <HttpDaemon::ParseMethod(char*)+0x34>
 800b38c:	08016f83 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, fp, sp, lr}
 800b390:	080172f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800b394:	080172fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800b398:	08017364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp, lr}
 800b39c:	08017301 	stmdaeq	r1, {r0, r8, r9, ip, sp, lr}
 800b3a0:	08017306 	stmdaeq	r1, {r1, r2, r8, r9, ip, sp, lr}
 800b3a4:	08017309 	stmdaeq	r1, {r0, r3, r8, r9, ip, sp, lr}

0800b3a8 <HttpDaemon::ParseHeaderField(char*)>:
 800b3a8:	b538      	push	{r3, r4, r5, lr}
 800b3aa:	4605      	mov	r5, r0
 800b3ac:	4608      	mov	r0, r1
 800b3ae:	491d      	ldr	r1, [pc, #116]	; (800b424 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b3b0:	f009 f9c0 	bl	8014734 <strtok>
 800b3b4:	4604      	mov	r4, r0
 800b3b6:	b910      	cbnz	r0, 800b3be <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b3b8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b3bc:	bd38      	pop	{r3, r4, r5, pc}
 800b3be:	491a      	ldr	r1, [pc, #104]	; (800b428 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b3c0:	f7ff ff66 	bl	800b290 <strcasecmp>
 800b3c4:	b970      	cbnz	r0, 800b3e4 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b3c6:	4919      	ldr	r1, [pc, #100]	; (800b42c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b3c8:	f009 f9b4 	bl	8014734 <strtok>
 800b3cc:	2800      	cmp	r0, #0
 800b3ce:	d0f3      	beq.n	800b3b8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b3d0:	4917      	ldr	r1, [pc, #92]	; (800b430 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b3d2:	f7ff ff50 	bl	800b276 <strcmp>
 800b3d6:	b108      	cbz	r0, 800b3dc <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b3d8:	20c8      	movs	r0, #200	; 0xc8
 800b3da:	e7ef      	b.n	800b3bc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b3dc:	2301      	movs	r3, #1
 800b3de:	f885 3020 	strb.w	r3, [r5, #32]
 800b3e2:	e7f9      	b.n	800b3d8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b3e4:	4620      	mov	r0, r4
 800b3e6:	4913      	ldr	r1, [pc, #76]	; (800b434 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b3e8:	f7ff ff52 	bl	800b290 <strcasecmp>
 800b3ec:	4604      	mov	r4, r0
 800b3ee:	2800      	cmp	r0, #0
 800b3f0:	d1f2      	bne.n	800b3d8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b3f2:	4911      	ldr	r1, [pc, #68]	; (800b438 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b3f4:	f009 f99e 	bl	8014734 <strtok>
 800b3f8:	2800      	cmp	r0, #0
 800b3fa:	d0dd      	beq.n	800b3b8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b3fc:	1e42      	subs	r2, r0, #1
 800b3fe:	4623      	mov	r3, r4
 800b400:	200a      	movs	r0, #10
 800b402:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b406:	b909      	cbnz	r1, 800b40c <HttpDaemon::ParseHeaderField(char*)+0x64>
 800b408:	84eb      	strh	r3, [r5, #38]	; 0x26
 800b40a:	e7e5      	b.n	800b3d8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b40c:	3930      	subs	r1, #48	; 0x30
 800b40e:	2909      	cmp	r1, #9
 800b410:	d8d2      	bhi.n	800b3b8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b412:	fb00 1303 	mla	r3, r0, r3, r1
 800b416:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b41a:	d9f2      	bls.n	800b402 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b41c:	f240 109d 	movw	r0, #413	; 0x19d
 800b420:	e7cc      	b.n	800b3bc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b422:	bf00      	nop
 800b424:	08017f96 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 800b428:	0801730d 	stmdaeq	r1, {r0, r2, r3, r8, r9, ip, sp, lr}
 800b42c:	0801731a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip, sp, lr}
 800b430:	0801731d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, ip, sp, lr}
 800b434:	0801732e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, ip, sp, lr}
 800b438:	08016f83 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, fp, sp, lr}

0800b43c <HttpDaemon::ParseRequest()>:
 800b43c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b43e:	68c1      	ldr	r1, [r0, #12]
 800b440:	2400      	movs	r4, #0
 800b442:	4605      	mov	r5, r0
 800b444:	f880 4020 	strb.w	r4, [r0, #32]
 800b448:	6244      	str	r4, [r0, #36]	; 0x24
 800b44a:	4622      	mov	r2, r4
 800b44c:	4626      	mov	r6, r4
 800b44e:	8aab      	ldrh	r3, [r5, #20]
 800b450:	42a3      	cmp	r3, r4
 800b452:	d91e      	bls.n	800b492 <HttpDaemon::ParseRequest()+0x56>
 800b454:	68eb      	ldr	r3, [r5, #12]
 800b456:	5d18      	ldrb	r0, [r3, r4]
 800b458:	280a      	cmp	r0, #10
 800b45a:	d10f      	bne.n	800b47c <HttpDaemon::ParseRequest()+0x40>
 800b45c:	4423      	add	r3, r4
 800b45e:	1c57      	adds	r7, r2, #1
 800b460:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b464:	b96a      	cbnz	r2, 800b482 <HttpDaemon::ParseRequest()+0x46>
 800b466:	4628      	mov	r0, r5
 800b468:	f7ff ff58 	bl	800b31c <HttpDaemon::ParseMethod(char*)>
 800b46c:	28c8      	cmp	r0, #200	; 0xc8
 800b46e:	d111      	bne.n	800b494 <HttpDaemon::ParseRequest()+0x58>
 800b470:	68eb      	ldr	r3, [r5, #12]
 800b472:	1c61      	adds	r1, r4, #1
 800b474:	b28c      	uxth	r4, r1
 800b476:	463a      	mov	r2, r7
 800b478:	fa13 f181 	uxtah	r1, r3, r1
 800b47c:	3401      	adds	r4, #1
 800b47e:	b2a4      	uxth	r4, r4
 800b480:	e7e5      	b.n	800b44e <HttpDaemon::ParseRequest()+0x12>
 800b482:	7808      	ldrb	r0, [r1, #0]
 800b484:	b968      	cbnz	r0, 800b4a2 <HttpDaemon::ParseRequest()+0x66>
 800b486:	696b      	ldr	r3, [r5, #20]
 800b488:	3b01      	subs	r3, #1
 800b48a:	1b1b      	subs	r3, r3, r4
 800b48c:	b29b      	uxth	r3, r3
 800b48e:	84ab      	strh	r3, [r5, #36]	; 0x24
 800b490:	b90b      	cbnz	r3, 800b496 <HttpDaemon::ParseRequest()+0x5a>
 800b492:	20c8      	movs	r0, #200	; 0xc8
 800b494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b496:	68ea      	ldr	r2, [r5, #12]
 800b498:	3401      	adds	r4, #1
 800b49a:	4414      	add	r4, r2
 800b49c:	60ac      	str	r4, [r5, #8]
 800b49e:	54e0      	strb	r0, [r4, r3]
 800b4a0:	e7f7      	b.n	800b492 <HttpDaemon::ParseRequest()+0x56>
 800b4a2:	4628      	mov	r0, r5
 800b4a4:	f7ff ff80 	bl	800b3a8 <HttpDaemon::ParseHeaderField(char*)>
 800b4a8:	e7e0      	b.n	800b46c <HttpDaemon::ParseRequest()+0x30>
	...

0800b4ac <HttpDaemon::HandleGetTxt()>:
 800b4ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4b0:	6846      	ldr	r6, [r0, #4]
 800b4b2:	1db4      	adds	r4, r6, #6
 800b4b4:	4607      	mov	r7, r0
 800b4b6:	4622      	mov	r2, r4
 800b4b8:	4613      	mov	r3, r2
 800b4ba:	3201      	adds	r2, #1
 800b4bc:	7819      	ldrb	r1, [r3, #0]
 800b4be:	2900      	cmp	r1, #0
 800b4c0:	d1fa      	bne.n	800b4b8 <HttpDaemon::HandleGetTxt()+0xc>
 800b4c2:	1b1b      	subs	r3, r3, r4
 800b4c4:	2b04      	cmp	r3, #4
 800b4c6:	d803      	bhi.n	800b4d0 <HttpDaemon::HandleGetTxt()+0x24>
 800b4c8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b4cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4d0:	3b04      	subs	r3, #4
 800b4d2:	4914      	ldr	r1, [pc, #80]	; (800b524 <HttpDaemon::HandleGetTxt()+0x78>)
 800b4d4:	18e0      	adds	r0, r4, r3
 800b4d6:	f7ff fece 	bl	800b276 <strcmp>
 800b4da:	2800      	cmp	r0, #0
 800b4dc:	d1f4      	bne.n	800b4c8 <HttpDaemon::HandleGetTxt()+0x1c>
 800b4de:	4b12      	ldr	r3, [pc, #72]	; (800b528 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b4e0:	2001      	movs	r0, #1
 800b4e2:	f893 8000 	ldrb.w	r8, [r3]
 800b4e6:	f7ff feed 	bl	800b2c4 <PropertiesConfig::EnableJSON(bool)>
 800b4ea:	4b10      	ldr	r3, [pc, #64]	; (800b52c <HttpDaemon::HandleGetTxt()+0x80>)
 800b4ec:	f240 529b 	movw	r2, #1435	; 0x59b
 800b4f0:	6818      	ldr	r0, [r3, #0]
 800b4f2:	4621      	mov	r1, r4
 800b4f4:	f7ff fa88 	bl	800aa08 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b4f8:	f008 0801 	and.w	r8, r8, #1
 800b4fc:	4605      	mov	r5, r0
 800b4fe:	4640      	mov	r0, r8
 800b500:	f7ff fee0 	bl	800b2c4 <PropertiesConfig::EnableJSON(bool)>
 800b504:	2d00      	cmp	r5, #0
 800b506:	d0df      	beq.n	800b4c8 <HttpDaemon::HandleGetTxt()+0x1c>
 800b508:	847d      	strh	r5, [r7, #34]	; 0x22
 800b50a:	4b09      	ldr	r3, [pc, #36]	; (800b530 <HttpDaemon::HandleGetTxt()+0x84>)
 800b50c:	3506      	adds	r5, #6
 800b50e:	442e      	add	r6, r5
 800b510:	42b4      	cmp	r4, r6
 800b512:	d101      	bne.n	800b518 <HttpDaemon::HandleGetTxt()+0x6c>
 800b514:	20c8      	movs	r0, #200	; 0xc8
 800b516:	e7d9      	b.n	800b4cc <HttpDaemon::HandleGetTxt()+0x20>
 800b518:	f814 2b01 	ldrb.w	r2, [r4], #1
 800b51c:	f803 2b01 	strb.w	r2, [r3], #1
 800b520:	e7f6      	b.n	800b510 <HttpDaemon::HandleGetTxt()+0x64>
 800b522:	bf00      	nop
 800b524:	08017238 	stmdaeq	r1, {r3, r4, r5, r9, ip, sp, lr}
 800b528:	2000fdf4 	strdcs	pc, [r0], -r4
 800b52c:	20000124 	andcs	r0, r0, r4, lsr #2
 800b530:	20000128 	andcs	r0, r0, r8, lsr #2

0800b534 <HttpDaemon::HandleGet()>:
 800b534:	b570      	push	{r4, r5, r6, lr}
 800b536:	6845      	ldr	r5, [r0, #4]
 800b538:	493e      	ldr	r1, [pc, #248]	; (800b634 <HttpDaemon::HandleGet()+0x100>)
 800b53a:	4604      	mov	r4, r0
 800b53c:	4628      	mov	r0, r5
 800b53e:	f7ff fe9a 	bl	800b276 <strcmp>
 800b542:	b120      	cbz	r0, 800b54e <HttpDaemon::HandleGet()+0x1a>
 800b544:	493c      	ldr	r1, [pc, #240]	; (800b638 <HttpDaemon::HandleGet()+0x104>)
 800b546:	4628      	mov	r0, r5
 800b548:	f7ff fe95 	bl	800b276 <strcmp>
 800b54c:	b950      	cbnz	r0, 800b564 <HttpDaemon::HandleGet()+0x30>
 800b54e:	4b3b      	ldr	r3, [pc, #236]	; (800b63c <HttpDaemon::HandleGet()+0x108>)
 800b550:	493b      	ldr	r1, [pc, #236]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b552:	483c      	ldr	r0, [pc, #240]	; (800b644 <HttpDaemon::HandleGet()+0x110>)
 800b554:	6023      	str	r3, [r4, #0]
 800b556:	f000 fa63 	bl	800ba20 <get_file_content(char const*, char*)>
 800b55a:	2800      	cmp	r0, #0
 800b55c:	dd2f      	ble.n	800b5be <HttpDaemon::HandleGet()+0x8a>
 800b55e:	8460      	strh	r0, [r4, #34]	; 0x22
 800b560:	20c8      	movs	r0, #200	; 0xc8
 800b562:	bd70      	pop	{r4, r5, r6, pc}
 800b564:	4938      	ldr	r1, [pc, #224]	; (800b648 <HttpDaemon::HandleGet()+0x114>)
 800b566:	4628      	mov	r0, r5
 800b568:	f7ff fe85 	bl	800b276 <strcmp>
 800b56c:	b920      	cbnz	r0, 800b578 <HttpDaemon::HandleGet()+0x44>
 800b56e:	4b37      	ldr	r3, [pc, #220]	; (800b64c <HttpDaemon::HandleGet()+0x118>)
 800b570:	4933      	ldr	r1, [pc, #204]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b572:	4837      	ldr	r0, [pc, #220]	; (800b650 <HttpDaemon::HandleGet()+0x11c>)
 800b574:	6023      	str	r3, [r4, #0]
 800b576:	e7ee      	b.n	800b556 <HttpDaemon::HandleGet()+0x22>
 800b578:	4936      	ldr	r1, [pc, #216]	; (800b654 <HttpDaemon::HandleGet()+0x120>)
 800b57a:	4628      	mov	r0, r5
 800b57c:	f7ff fe7b 	bl	800b276 <strcmp>
 800b580:	b190      	cbz	r0, 800b5a8 <HttpDaemon::HandleGet()+0x74>
 800b582:	4a35      	ldr	r2, [pc, #212]	; (800b658 <HttpDaemon::HandleGet()+0x124>)
 800b584:	1e6b      	subs	r3, r5, #1
 800b586:	1d69      	adds	r1, r5, #5
 800b588:	428b      	cmp	r3, r1
 800b58a:	d112      	bne.n	800b5b2 <HttpDaemon::HandleGet()+0x7e>
 800b58c:	4b33      	ldr	r3, [pc, #204]	; (800b65c <HttpDaemon::HandleGet()+0x128>)
 800b58e:	4934      	ldr	r1, [pc, #208]	; (800b660 <HttpDaemon::HandleGet()+0x12c>)
 800b590:	6023      	str	r3, [r4, #0]
 800b592:	3506      	adds	r5, #6
 800b594:	4628      	mov	r0, r5
 800b596:	f7ff fe6e 	bl	800b276 <strcmp>
 800b59a:	b998      	cbnz	r0, 800b5c4 <HttpDaemon::HandleGet()+0x90>
 800b59c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5a0:	4827      	ldr	r0, [pc, #156]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b5a2:	f000 f9c9 	bl	800b938 <remoteconfig::json_get_list(char*, unsigned short)>
 800b5a6:	e7d8      	b.n	800b55a <HttpDaemon::HandleGet()+0x26>
 800b5a8:	4b2e      	ldr	r3, [pc, #184]	; (800b664 <HttpDaemon::HandleGet()+0x130>)
 800b5aa:	4925      	ldr	r1, [pc, #148]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b5ac:	482e      	ldr	r0, [pc, #184]	; (800b668 <HttpDaemon::HandleGet()+0x134>)
 800b5ae:	6023      	str	r3, [r4, #0]
 800b5b0:	e7d1      	b.n	800b556 <HttpDaemon::HandleGet()+0x22>
 800b5b2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b5b6:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b5ba:	4286      	cmp	r6, r0
 800b5bc:	d0e4      	beq.n	800b588 <HttpDaemon::HandleGet()+0x54>
 800b5be:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b5c2:	e7ce      	b.n	800b562 <HttpDaemon::HandleGet()+0x2e>
 800b5c4:	4929      	ldr	r1, [pc, #164]	; (800b66c <HttpDaemon::HandleGet()+0x138>)
 800b5c6:	4628      	mov	r0, r5
 800b5c8:	f7ff fe55 	bl	800b276 <strcmp>
 800b5cc:	b928      	cbnz	r0, 800b5da <HttpDaemon::HandleGet()+0xa6>
 800b5ce:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5d2:	481b      	ldr	r0, [pc, #108]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b5d4:	f000 f9e0 	bl	800b998 <remoteconfig::json_get_version(char*, unsigned short)>
 800b5d8:	e7bf      	b.n	800b55a <HttpDaemon::HandleGet()+0x26>
 800b5da:	4925      	ldr	r1, [pc, #148]	; (800b670 <HttpDaemon::HandleGet()+0x13c>)
 800b5dc:	4628      	mov	r0, r5
 800b5de:	f7ff fe4a 	bl	800b276 <strcmp>
 800b5e2:	b948      	cbnz	r0, 800b5f8 <HttpDaemon::HandleGet()+0xc4>
 800b5e4:	4b23      	ldr	r3, [pc, #140]	; (800b674 <HttpDaemon::HandleGet()+0x140>)
 800b5e6:	681b      	ldr	r3, [r3, #0]
 800b5e8:	7bdb      	ldrb	r3, [r3, #15]
 800b5ea:	b303      	cbz	r3, 800b62e <HttpDaemon::HandleGet()+0xfa>
 800b5ec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b5f0:	4813      	ldr	r0, [pc, #76]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b5f2:	f000 f9ed 	bl	800b9d0 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b5f6:	e7b0      	b.n	800b55a <HttpDaemon::HandleGet()+0x26>
 800b5f8:	491f      	ldr	r1, [pc, #124]	; (800b678 <HttpDaemon::HandleGet()+0x144>)
 800b5fa:	4628      	mov	r0, r5
 800b5fc:	f7ff fe3b 	bl	800b276 <strcmp>
 800b600:	b928      	cbnz	r0, 800b60e <HttpDaemon::HandleGet()+0xda>
 800b602:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b606:	480e      	ldr	r0, [pc, #56]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b608:	f000 f9f2 	bl	800b9f0 <remoteconfig::json_get_display(char*, unsigned short)>
 800b60c:	e7a5      	b.n	800b55a <HttpDaemon::HandleGet()+0x26>
 800b60e:	491b      	ldr	r1, [pc, #108]	; (800b67c <HttpDaemon::HandleGet()+0x148>)
 800b610:	4628      	mov	r0, r5
 800b612:	f7ff fe30 	bl	800b276 <strcmp>
 800b616:	b928      	cbnz	r0, 800b624 <HttpDaemon::HandleGet()+0xf0>
 800b618:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b61c:	4808      	ldr	r0, [pc, #32]	; (800b640 <HttpDaemon::HandleGet()+0x10c>)
 800b61e:	f000 f9f7 	bl	800ba10 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b622:	e79a      	b.n	800b55a <HttpDaemon::HandleGet()+0x26>
 800b624:	4620      	mov	r0, r4
 800b626:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b62a:	f7ff bf3f 	b.w	800b4ac <HttpDaemon::HandleGetTxt()>
 800b62e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b632:	e796      	b.n	800b562 <HttpDaemon::HandleGet()+0x2e>
 800b634:	08017364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp, lr}
 800b638:	0801733d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, ip, sp, lr}
 800b63c:	08017553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, lr}
 800b640:	20000128 	andcs	r0, r0, r8, lsr #2
 800b644:	0801733e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, ip, sp, lr}
 800b648:	08017349 	stmdaeq	r1, {r0, r3, r6, r8, r9, ip, sp, lr}
 800b64c:	08017573 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}
 800b650:	0801734a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp, lr}
 800b654:	08017355 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, ip, sp, lr}
 800b658:	0801735f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}
 800b65c:	080175b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, ip, sp, lr}
 800b660:	08017366 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
 800b664:	08017593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, ip, sp, lr}
 800b668:	08017356 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, ip, sp, lr}
 800b66c:	0801736b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
 800b670:	08017373 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
 800b674:	20000124 	andcs	r0, r0, r4, lsr #2
 800b678:	08016c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, sp, lr}
 800b67c:	0801737a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, ip, sp, lr}

0800b680 <HttpDaemon::HandlePost(bool)>:
 800b680:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b682:	4604      	mov	r4, r0
 800b684:	2900      	cmp	r1, #0
 800b686:	f040 808a 	bne.w	800b79e <HttpDaemon::HandlePost(bool)+0x11e>
 800b68a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b68e:	2b00      	cmp	r3, #0
 800b690:	d05a      	beq.n	800b748 <HttpDaemon::HandlePost(bool)+0xc8>
 800b692:	6845      	ldr	r5, [r0, #4]
 800b694:	4944      	ldr	r1, [pc, #272]	; (800b7a8 <HttpDaemon::HandlePost(bool)+0x128>)
 800b696:	4628      	mov	r0, r5
 800b698:	f7ff fded 	bl	800b276 <strcmp>
 800b69c:	2800      	cmp	r0, #0
 800b69e:	bf0c      	ite	eq
 800b6a0:	2301      	moveq	r3, #1
 800b6a2:	2300      	movne	r3, #0
 800b6a4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b6a8:	d052      	beq.n	800b750 <HttpDaemon::HandlePost(bool)+0xd0>
 800b6aa:	4940      	ldr	r1, [pc, #256]	; (800b7ac <HttpDaemon::HandlePost(bool)+0x12c>)
 800b6ac:	4628      	mov	r0, r5
 800b6ae:	f7ff fde2 	bl	800b276 <strcmp>
 800b6b2:	2800      	cmp	r0, #0
 800b6b4:	d04c      	beq.n	800b750 <HttpDaemon::HandlePost(bool)+0xd0>
 800b6b6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b6ba:	e047      	b.n	800b74c <HttpDaemon::HandlePost(bool)+0xcc>
 800b6bc:	493c      	ldr	r1, [pc, #240]	; (800b7b0 <HttpDaemon::HandlePost(bool)+0x130>)
 800b6be:	68a0      	ldr	r0, [r4, #8]
 800b6c0:	f10d 0207 	add.w	r2, sp, #7
 800b6c4:	f008 fa99 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b6c8:	b9d8      	cbnz	r0, 800b702 <HttpDaemon::HandlePost(bool)+0x82>
 800b6ca:	4b3a      	ldr	r3, [pc, #232]	; (800b7b4 <HttpDaemon::HandlePost(bool)+0x134>)
 800b6cc:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b6d0:	681d      	ldr	r5, [r3, #0]
 800b6d2:	69a8      	ldr	r0, [r5, #24]
 800b6d4:	fab6 f186 	clz	r1, r6
 800b6d8:	0949      	lsrs	r1, r1, #5
 800b6da:	b138      	cbz	r0, 800b6ec <HttpDaemon::HandlePost(bool)+0x6c>
 800b6dc:	6803      	ldr	r3, [r0, #0]
 800b6de:	7429      	strb	r1, [r5, #16]
 800b6e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6e2:	4798      	blx	r3
 800b6e4:	b116      	cbz	r6, 800b6ec <HttpDaemon::HandlePost(bool)+0x6c>
 800b6e6:	4b34      	ldr	r3, [pc, #208]	; (800b7b8 <HttpDaemon::HandlePost(bool)+0x138>)
 800b6e8:	681b      	ldr	r3, [r3, #0]
 800b6ea:	606b      	str	r3, [r5, #4]
 800b6ec:	4b33      	ldr	r3, [pc, #204]	; (800b7bc <HttpDaemon::HandlePost(bool)+0x13c>)
 800b6ee:	4a34      	ldr	r2, [pc, #208]	; (800b7c0 <HttpDaemon::HandlePost(bool)+0x140>)
 800b6f0:	4834      	ldr	r0, [pc, #208]	; (800b7c4 <HttpDaemon::HandlePost(bool)+0x144>)
 800b6f2:	6023      	str	r3, [r4, #0]
 800b6f4:	f240 519f 	movw	r1, #1439	; 0x59f
 800b6f8:	f7fe fe12 	bl	800a320 <snprintf>
 800b6fc:	8460      	strh	r0, [r4, #34]	; 0x22
 800b6fe:	20c8      	movs	r0, #200	; 0xc8
 800b700:	e024      	b.n	800b74c <HttpDaemon::HandlePost(bool)+0xcc>
 800b702:	4931      	ldr	r1, [pc, #196]	; (800b7c8 <HttpDaemon::HandlePost(bool)+0x148>)
 800b704:	68a0      	ldr	r0, [r4, #8]
 800b706:	f10d 0207 	add.w	r2, sp, #7
 800b70a:	f008 fa76 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b70e:	b9d8      	cbnz	r0, 800b748 <HttpDaemon::HandlePost(bool)+0xc8>
 800b710:	4b2e      	ldr	r3, [pc, #184]	; (800b7cc <HttpDaemon::HandlePost(bool)+0x14c>)
 800b712:	6818      	ldr	r0, [r3, #0]
 800b714:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b718:	b11b      	cbz	r3, 800b722 <HttpDaemon::HandlePost(bool)+0xa2>
 800b71a:	2104      	movs	r1, #4
 800b71c:	f008 fe0a 	bl	8014334 <LedBlink::SetMode(ledblink::Mode)>
 800b720:	e7e4      	b.n	800b6ec <HttpDaemon::HandlePost(bool)+0x6c>
 800b722:	2102      	movs	r1, #2
 800b724:	e7fa      	b.n	800b71c <HttpDaemon::HandlePost(bool)+0x9c>
 800b726:	4b2a      	ldr	r3, [pc, #168]	; (800b7d0 <HttpDaemon::HandlePost(bool)+0x150>)
 800b728:	2001      	movs	r0, #1
 800b72a:	781d      	ldrb	r5, [r3, #0]
 800b72c:	f7ff fdca 	bl	800b2c4 <PropertiesConfig::EnableJSON(bool)>
 800b730:	4b28      	ldr	r3, [pc, #160]	; (800b7d4 <HttpDaemon::HandlePost(bool)+0x154>)
 800b732:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800b734:	6818      	ldr	r0, [r3, #0]
 800b736:	68a1      	ldr	r1, [r4, #8]
 800b738:	f005 0501 	and.w	r5, r5, #1
 800b73c:	f7ff fa3a 	bl	800abb4 <RemoteConfig::HandleSet(void*, unsigned int)>
 800b740:	4628      	mov	r0, r5
 800b742:	f7ff fdbf 	bl	800b2c4 <PropertiesConfig::EnableJSON(bool)>
 800b746:	e7d1      	b.n	800b6ec <HttpDaemon::HandlePost(bool)+0x6c>
 800b748:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b74c:	b002      	add	sp, #8
 800b74e:	bd70      	pop	{r4, r5, r6, pc}
 800b750:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b752:	6962      	ldr	r2, [r4, #20]
 800b754:	429a      	cmp	r2, r3
 800b756:	dbd2      	blt.n	800b6fe <HttpDaemon::HandlePost(bool)+0x7e>
 800b758:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b75a:	2b00      	cmp	r3, #0
 800b75c:	d0cf      	beq.n	800b6fe <HttpDaemon::HandlePost(bool)+0x7e>
 800b75e:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b762:	2b00      	cmp	r3, #0
 800b764:	d0df      	beq.n	800b726 <HttpDaemon::HandlePost(bool)+0xa6>
 800b766:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800b768:	68a0      	ldr	r0, [r4, #8]
 800b76a:	2201      	movs	r2, #1
 800b76c:	f007 ffbe 	bl	80136ec <properties::convert_json_file(char*, unsigned short, bool)>
 800b770:	2800      	cmp	r0, #0
 800b772:	dde9      	ble.n	800b748 <HttpDaemon::HandlePost(bool)+0xc8>
 800b774:	4918      	ldr	r1, [pc, #96]	; (800b7d8 <HttpDaemon::HandlePost(bool)+0x158>)
 800b776:	68a0      	ldr	r0, [r4, #8]
 800b778:	f10d 0207 	add.w	r2, sp, #7
 800b77c:	f008 fa3d 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b780:	2800      	cmp	r0, #0
 800b782:	d19b      	bne.n	800b6bc <HttpDaemon::HandlePost(bool)+0x3c>
 800b784:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b788:	2b00      	cmp	r3, #0
 800b78a:	d0af      	beq.n	800b6ec <HttpDaemon::HandlePost(bool)+0x6c>
 800b78c:	4b11      	ldr	r3, [pc, #68]	; (800b7d4 <HttpDaemon::HandlePost(bool)+0x154>)
 800b78e:	681b      	ldr	r3, [r3, #0]
 800b790:	7b9b      	ldrb	r3, [r3, #14]
 800b792:	2b00      	cmp	r3, #0
 800b794:	d0d8      	beq.n	800b748 <HttpDaemon::HandlePost(bool)+0xc8>
 800b796:	4b11      	ldr	r3, [pc, #68]	; (800b7dc <HttpDaemon::HandlePost(bool)+0x15c>)
 800b798:	6818      	ldr	r0, [r3, #0]
 800b79a:	f008 fe89 	bl	80144b0 <Hardware::Reboot()>
 800b79e:	68c3      	ldr	r3, [r0, #12]
 800b7a0:	6083      	str	r3, [r0, #8]
 800b7a2:	6943      	ldr	r3, [r0, #20]
 800b7a4:	8483      	strh	r3, [r0, #36]	; 0x24
 800b7a6:	e7da      	b.n	800b75e <HttpDaemon::HandlePost(bool)+0xde>
 800b7a8:	08017384 	stmdaeq	r1, {r2, r7, r8, r9, ip, sp, lr}
 800b7ac:	08017328 	stmdaeq	r1, {r3, r5, r8, r9, ip, sp, lr}
 800b7b0:	08016c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, sp, lr}
 800b7b4:	2000fdf8 	strdcs	pc, [r0], -r8
 800b7b8:	2000fefc 	strdcs	pc, [r0], -ip
 800b7bc:	08017553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, lr}
 800b7c0:	080173a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, sp, lr}
 800b7c4:	20000128 	andcs	r0, r0, r8, lsr #2
 800b7c8:	08017398 	stmdaeq	r1, {r3, r4, r7, r8, r9, ip, sp, lr}
 800b7cc:	2000fee4 	andcs	pc, r0, r4, ror #29
 800b7d0:	2000fdf4 	strdcs	pc, [r0], -r4
 800b7d4:	20000124 	andcs	r0, r0, r4, lsr #2
 800b7d8:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 800b7dc:	2000fee8 	andcs	pc, r0, r8, ror #29

0800b7e0 <HttpDaemon::Run()>:
 800b7e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b7e2:	4e46      	ldr	r6, [pc, #280]	; (800b8fc <HttpDaemon::Run()+0x11c>)
 800b7e4:	6901      	ldr	r1, [r0, #16]
 800b7e6:	4604      	mov	r4, r0
 800b7e8:	f100 020c 	add.w	r2, r0, #12
 800b7ec:	6830      	ldr	r0, [r6, #0]
 800b7ee:	f006 fe6a 	bl	80124c6 <Network::TcpRead(int, unsigned char const**)>
 800b7f2:	6160      	str	r0, [r4, #20]
 800b7f4:	2800      	cmp	r0, #0
 800b7f6:	d05b      	beq.n	800b8b0 <HttpDaemon::Run()+0xd0>
 800b7f8:	69a3      	ldr	r3, [r4, #24]
 800b7fa:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b7fe:	d159      	bne.n	800b8b4 <HttpDaemon::Run()+0xd4>
 800b800:	4620      	mov	r0, r4
 800b802:	f7ff fe1b 	bl	800b43c <HttpDaemon::ParseRequest()>
 800b806:	28c8      	cmp	r0, #200	; 0xc8
 800b808:	61a0      	str	r0, [r4, #24]
 800b80a:	d106      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b80c:	69e3      	ldr	r3, [r4, #28]
 800b80e:	2b00      	cmp	r3, #0
 800b810:	d142      	bne.n	800b898 <HttpDaemon::Run()+0xb8>
 800b812:	4620      	mov	r0, r4
 800b814:	f7ff fe8e 	bl	800b534 <HttpDaemon::HandleGet()>
 800b818:	61a0      	str	r0, [r4, #24]
 800b81a:	69a3      	ldr	r3, [r4, #24]
 800b81c:	2bc8      	cmp	r3, #200	; 0xc8
 800b81e:	d06b      	beq.n	800b8f8 <HttpDaemon::Run()+0x118>
 800b820:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b824:	d05e      	beq.n	800b8e4 <HttpDaemon::Run()+0x104>
 800b826:	dc4e      	bgt.n	800b8c6 <HttpDaemon::Run()+0xe6>
 800b828:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b82c:	d05c      	beq.n	800b8e8 <HttpDaemon::Run()+0x108>
 800b82e:	f240 129d 	movw	r2, #413	; 0x19d
 800b832:	4293      	cmp	r3, r2
 800b834:	d05a      	beq.n	800b8ec <HttpDaemon::Run()+0x10c>
 800b836:	4d32      	ldr	r5, [pc, #200]	; (800b900 <HttpDaemon::Run()+0x120>)
 800b838:	4a32      	ldr	r2, [pc, #200]	; (800b904 <HttpDaemon::Run()+0x124>)
 800b83a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b83e:	bf18      	it	ne
 800b840:	4615      	movne	r5, r2
 800b842:	4a31      	ldr	r2, [pc, #196]	; (800b908 <HttpDaemon::Run()+0x128>)
 800b844:	6022      	str	r2, [r4, #0]
 800b846:	e9cd 5500 	strd	r5, r5, [sp]
 800b84a:	4a30      	ldr	r2, [pc, #192]	; (800b90c <HttpDaemon::Run()+0x12c>)
 800b84c:	4830      	ldr	r0, [pc, #192]	; (800b910 <HttpDaemon::Run()+0x130>)
 800b84e:	f240 519f 	movw	r1, #1439	; 0x59f
 800b852:	f7fe fd65 	bl	800a320 <snprintf>
 800b856:	8460      	strh	r0, [r4, #34]	; 0x22
 800b858:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b85a:	9303      	str	r3, [sp, #12]
 800b85c:	6823      	ldr	r3, [r4, #0]
 800b85e:	9302      	str	r3, [sp, #8]
 800b860:	4b2c      	ldr	r3, [pc, #176]	; (800b914 <HttpDaemon::Run()+0x134>)
 800b862:	4a2d      	ldr	r2, [pc, #180]	; (800b918 <HttpDaemon::Run()+0x138>)
 800b864:	68e0      	ldr	r0, [r4, #12]
 800b866:	e9cd 5300 	strd	r5, r3, [sp]
 800b86a:	f240 519f 	movw	r1, #1439	; 0x59f
 800b86e:	69a3      	ldr	r3, [r4, #24]
 800b870:	f7fe fd56 	bl	800a320 <snprintf>
 800b874:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b878:	b283      	uxth	r3, r0
 800b87a:	6830      	ldr	r0, [r6, #0]
 800b87c:	f006 fe27 	bl	80124ce <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b880:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b882:	4a23      	ldr	r2, [pc, #140]	; (800b910 <HttpDaemon::Run()+0x130>)
 800b884:	6921      	ldr	r1, [r4, #16]
 800b886:	6830      	ldr	r0, [r6, #0]
 800b888:	f006 fe21 	bl	80124ce <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b88c:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b890:	2302      	movs	r3, #2
 800b892:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b896:	e00b      	b.n	800b8b0 <HttpDaemon::Run()+0xd0>
 800b898:	2b01      	cmp	r3, #1
 800b89a:	d1be      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b89c:	2100      	movs	r1, #0
 800b89e:	4620      	mov	r0, r4
 800b8a0:	f7ff feee 	bl	800b680 <HttpDaemon::HandlePost(bool)>
 800b8a4:	28c8      	cmp	r0, #200	; 0xc8
 800b8a6:	61a0      	str	r0, [r4, #24]
 800b8a8:	d1b7      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b8aa:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b8ac:	2b00      	cmp	r3, #0
 800b8ae:	d1b4      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b8b0:	b004      	add	sp, #16
 800b8b2:	bd70      	pop	{r4, r5, r6, pc}
 800b8b4:	2bc8      	cmp	r3, #200	; 0xc8
 800b8b6:	d1b0      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b8b8:	69e1      	ldr	r1, [r4, #28]
 800b8ba:	2901      	cmp	r1, #1
 800b8bc:	d1ad      	bne.n	800b81a <HttpDaemon::Run()+0x3a>
 800b8be:	4620      	mov	r0, r4
 800b8c0:	f7ff fede 	bl	800b680 <HttpDaemon::HandlePost(bool)>
 800b8c4:	e7a8      	b.n	800b818 <HttpDaemon::Run()+0x38>
 800b8c6:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b8ca:	4293      	cmp	r3, r2
 800b8cc:	d010      	beq.n	800b8f0 <HttpDaemon::Run()+0x110>
 800b8ce:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b8d2:	4293      	cmp	r3, r2
 800b8d4:	d00e      	beq.n	800b8f4 <HttpDaemon::Run()+0x114>
 800b8d6:	4d11      	ldr	r5, [pc, #68]	; (800b91c <HttpDaemon::Run()+0x13c>)
 800b8d8:	4a0a      	ldr	r2, [pc, #40]	; (800b904 <HttpDaemon::Run()+0x124>)
 800b8da:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b8de:	bf18      	it	ne
 800b8e0:	4615      	movne	r5, r2
 800b8e2:	e7ae      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8e4:	4d0e      	ldr	r5, [pc, #56]	; (800b920 <HttpDaemon::Run()+0x140>)
 800b8e6:	e7ac      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8e8:	4d0e      	ldr	r5, [pc, #56]	; (800b924 <HttpDaemon::Run()+0x144>)
 800b8ea:	e7aa      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8ec:	4d0e      	ldr	r5, [pc, #56]	; (800b928 <HttpDaemon::Run()+0x148>)
 800b8ee:	e7a8      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8f0:	4d0e      	ldr	r5, [pc, #56]	; (800b92c <HttpDaemon::Run()+0x14c>)
 800b8f2:	e7a6      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8f4:	4d0e      	ldr	r5, [pc, #56]	; (800b930 <HttpDaemon::Run()+0x150>)
 800b8f6:	e7a4      	b.n	800b842 <HttpDaemon::Run()+0x62>
 800b8f8:	4d0e      	ldr	r5, [pc, #56]	; (800b934 <HttpDaemon::Run()+0x154>)
 800b8fa:	e7ad      	b.n	800b858 <HttpDaemon::Run()+0x78>
 800b8fc:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800b900:	080173fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800b904:	08017484 	stmdaeq	r1, {r2, r7, sl, ip, sp, lr}
 800b908:	08017553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, lr}
 800b90c:	08017495 	stmdaeq	r1, {r0, r2, r4, r7, sl, ip, sp, lr}
 800b910:	20000128 	andcs	r0, r0, r8, lsr #2
 800b914:	08017548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp, lr}
 800b918:	080174f0 	stmdaeq	r1, {r4, r5, r6, r7, sl, ip, sp, lr}
 800b91c:	08017441 	stmdaeq	r1, {r0, r6, sl, ip, sp, lr}
 800b920:	0801742c 	stmdaeq	r1, {r2, r3, r5, sl, ip, sp, lr}
 800b924:	08017409 	stmdaeq	r1, {r0, r3, sl, ip, sp, lr}
 800b928:	08017413 	stmdaeq	r1, {r0, r1, r4, sl, ip, sp, lr}
 800b92c:	08017457 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, ip, sp, lr}
 800b930:	0801746e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 800b934:	08017492 	stmdaeq	r1, {r1, r4, r7, sl, ip, sp, lr}

0800b938 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b938:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b93a:	4b13      	ldr	r3, [pc, #76]	; (800b988 <remoteconfig::json_get_list(char*, unsigned short)+0x50>)
 800b93c:	4f13      	ldr	r7, [pc, #76]	; (800b98c <remoteconfig::json_get_list(char*, unsigned short)+0x54>)
 800b93e:	681b      	ldr	r3, [r3, #0]
 800b940:	b08b      	sub	sp, #44	; 0x2c
 800b942:	4605      	mov	r5, r0
 800b944:	6838      	ldr	r0, [r7, #0]
 800b946:	695c      	ldr	r4, [r3, #20]
 800b948:	9109      	str	r1, [sp, #36]	; 0x24
 800b94a:	f7ff f80d 	bl	800a968 <RemoteConfig::GetStringNode() const>
 800b94e:	4606      	mov	r6, r0
 800b950:	6838      	ldr	r0, [r7, #0]
 800b952:	f7ff f815 	bl	800a980 <RemoteConfig::GetStringOutput() const>
 800b956:	4b0e      	ldr	r3, [pc, #56]	; (800b990 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b958:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b95a:	7a1a      	ldrb	r2, [r3, #8]
 800b95c:	9604      	str	r6, [sp, #16]
 800b95e:	3309      	adds	r3, #9
 800b960:	9303      	str	r3, [sp, #12]
 800b962:	0e23      	lsrs	r3, r4, #24
 800b964:	9302      	str	r3, [sp, #8]
 800b966:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b96a:	9301      	str	r3, [sp, #4]
 800b96c:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b970:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b974:	9300      	str	r3, [sp, #0]
 800b976:	4a07      	ldr	r2, [pc, #28]	; (800b994 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>)
 800b978:	b2e3      	uxtb	r3, r4
 800b97a:	4628      	mov	r0, r5
 800b97c:	f7fe fcd0 	bl	800a320 <snprintf>
 800b980:	b280      	uxth	r0, r0
 800b982:	b00b      	add	sp, #44	; 0x2c
 800b984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b986:	bf00      	nop
 800b988:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800b98c:	20000124 	andcs	r0, r0, r4, lsr #2
 800b990:	20000100 	andcs	r0, r0, r0, lsl #2
 800b994:	0801762d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, ip, sp, lr}

0800b998 <remoteconfig::json_get_version(char*, unsigned short)>:
 800b998:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b99a:	4b0a      	ldr	r3, [pc, #40]	; (800b9c4 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b99c:	9305      	str	r3, [sp, #20]
 800b99e:	2208      	movs	r2, #8
 800b9a0:	9204      	str	r2, [sp, #16]
 800b9a2:	f1a3 020b 	sub.w	r2, r3, #11
 800b9a6:	9203      	str	r2, [sp, #12]
 800b9a8:	220b      	movs	r2, #11
 800b9aa:	9202      	str	r2, [sp, #8]
 800b9ac:	3b0e      	subs	r3, #14
 800b9ae:	4a06      	ldr	r2, [pc, #24]	; (800b9c8 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b9b0:	9201      	str	r2, [sp, #4]
 800b9b2:	9300      	str	r3, [sp, #0]
 800b9b4:	4a05      	ldr	r2, [pc, #20]	; (800b9cc <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b9b6:	2303      	movs	r3, #3
 800b9b8:	f7fe fcb2 	bl	800a320 <snprintf>
 800b9bc:	b280      	uxth	r0, r0
 800b9be:	b007      	add	sp, #28
 800b9c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800b9c4:	2000fe96 	mulcs	r0, r6, lr
 800b9c8:	08017548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp, lr}
 800b9cc:	0801768c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp, lr}

0800b9d0 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b9d0:	b508      	push	{r3, lr}
 800b9d2:	4b05      	ldr	r3, [pc, #20]	; (800b9e8 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b9d4:	681a      	ldr	r2, [r3, #0]
 800b9d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b9da:	fbb2 f3f3 	udiv	r3, r2, r3
 800b9de:	4a03      	ldr	r2, [pc, #12]	; (800b9ec <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b9e0:	f7fe fc9e 	bl	800a320 <snprintf>
 800b9e4:	b280      	uxth	r0, r0
 800b9e6:	bd08      	pop	{r3, pc}
 800b9e8:	2000fefc 	strdcs	pc, [r0], -ip
 800b9ec:	080176d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sl, ip, sp, lr}

0800b9f0 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b9f0:	b508      	push	{r3, lr}
 800b9f2:	4b05      	ldr	r3, [pc, #20]	; (800ba08 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b9f4:	4a05      	ldr	r2, [pc, #20]	; (800ba0c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b9f6:	681b      	ldr	r3, [r3, #0]
 800b9f8:	7c1b      	ldrb	r3, [r3, #16]
 800b9fa:	f083 0301 	eor.w	r3, r3, #1
 800b9fe:	f7fe fc8f 	bl	800a320 <snprintf>
 800ba02:	b280      	uxth	r0, r0
 800ba04:	bd08      	pop	{r3, pc}
 800ba06:	bf00      	nop
 800ba08:	2000fdf8 	strdcs	pc, [r0], -r8
 800ba0c:	080176e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, ip, sp, lr}

0800ba10 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ba10:	b508      	push	{r3, lr}
 800ba12:	4a02      	ldr	r2, [pc, #8]	; (800ba1c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ba14:	f7fe fc84 	bl	800a320 <snprintf>
 800ba18:	b280      	uxth	r0, r0
 800ba1a:	bd08      	pop	{r3, pc}
 800ba1c:	080176f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, ip, sp, lr}

0800ba20 <get_file_content(char const*, char*)>:
 800ba20:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba22:	4a11      	ldr	r2, [pc, #68]	; (800ba68 <get_file_content(char const*, char*)+0x48>)
 800ba24:	2300      	movs	r3, #0
 800ba26:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ba2a:	1e46      	subs	r6, r0, #1
 800ba2c:	3c01      	subs	r4, #1
 800ba2e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ba32:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ba36:	42bd      	cmp	r5, r7
 800ba38:	d005      	beq.n	800ba46 <get_file_content(char const*, char*)+0x26>
 800ba3a:	3301      	adds	r3, #1
 800ba3c:	2b03      	cmp	r3, #3
 800ba3e:	d1f2      	bne.n	800ba26 <get_file_content(char const*, char*)+0x6>
 800ba40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ba44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba46:	2d00      	cmp	r5, #0
 800ba48:	d1f1      	bne.n	800ba2e <get_file_content(char const*, char*)+0xe>
 800ba4a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800ba4e:	4608      	mov	r0, r1
 800ba50:	6853      	ldr	r3, [r2, #4]
 800ba52:	3b01      	subs	r3, #1
 800ba54:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ba58:	f800 2b01 	strb.w	r2, [r0], #1
 800ba5c:	2a00      	cmp	r2, #0
 800ba5e:	d1f9      	bne.n	800ba54 <get_file_content(char const*, char*)+0x34>
 800ba60:	1a41      	subs	r1, r0, r1
 800ba62:	1e48      	subs	r0, r1, #1
 800ba64:	e7ee      	b.n	800ba44 <get_file_content(char const*, char*)+0x24>
 800ba66:	bf00      	nop
 800ba68:	08017a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, ip, sp, lr}

0800ba6c <lightset::Data::Get()>:
 800ba6c:	4b03      	ldr	r3, [pc, #12]	; (800ba7c <lightset::Data::Get()+0x10>)
 800ba6e:	4804      	ldr	r0, [pc, #16]	; (800ba80 <lightset::Data::Get()+0x14>)
 800ba70:	681a      	ldr	r2, [r3, #0]
 800ba72:	07d2      	lsls	r2, r2, #31
 800ba74:	bf5c      	itt	pl
 800ba76:	2201      	movpl	r2, #1
 800ba78:	601a      	strpl	r2, [r3, #0]
 800ba7a:	4770      	bx	lr
 800ba7c:	200006c8 	andcs	r0, r0, r8, asr #13
 800ba80:	20030000 	andcs	r0, r3, r0

0800ba84 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800ba84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba86:	460c      	mov	r4, r1
 800ba88:	4616      	mov	r6, r2
 800ba8a:	4605      	mov	r5, r0
 800ba8c:	f7ff ffee 	bl	800ba6c <lightset::Data::Get()>
 800ba90:	f240 6304 	movw	r3, #1540	; 0x604
 800ba94:	436b      	muls	r3, r5
 800ba96:	1e5a      	subs	r2, r3, #1
 800ba98:	4402      	add	r2, r0
 800ba9a:	19a7      	adds	r7, r4, r6
 800ba9c:	4621      	mov	r1, r4
 800ba9e:	42b9      	cmp	r1, r7
 800baa0:	d10b      	bne.n	800baba <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x36>
 800baa2:	f240 6204 	movw	r2, #1540	; 0x604
 800baa6:	fb02 0505 	mla	r5, r2, r5, r0
 800baaa:	f203 33ff 	addw	r3, r3, #1023	; 0x3ff
 800baae:	f8c5 6600 	str.w	r6, [r5, #1536]	; 0x600
 800bab2:	4418      	add	r0, r3
 800bab4:	42bc      	cmp	r4, r7
 800bab6:	d105      	bne.n	800bac4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x40>
 800bab8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800baba:	f811 cb01 	ldrb.w	ip, [r1], #1
 800babe:	f802 cf01 	strb.w	ip, [r2, #1]!
 800bac2:	e7ec      	b.n	800ba9e <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x1a>
 800bac4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800bac8:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bacc:	e7f2      	b.n	800bab4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x30>
	...

0800bad0 <DdpDisplay::DdpDisplay()>:
 800bad0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bad4:	b510      	push	{r4, lr}
 800bad6:	6083      	str	r3, [r0, #8]
 800bad8:	2300      	movs	r3, #0
 800bada:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800bade:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800bae2:	6203      	str	r3, [r0, #32]
 800bae4:	4b04      	ldr	r3, [pc, #16]	; (800baf8 <DdpDisplay::DdpDisplay()+0x28>)
 800bae6:	6018      	str	r0, [r3, #0]
 800bae8:	4b04      	ldr	r3, [pc, #16]	; (800bafc <DdpDisplay::DdpDisplay()+0x2c>)
 800baea:	4604      	mov	r4, r0
 800baec:	4601      	mov	r1, r0
 800baee:	6818      	ldr	r0, [r3, #0]
 800baf0:	f006 f9d8 	bl	8011ea4 <Network::MacAddressCopyTo(unsigned char*)>
 800baf4:	4620      	mov	r0, r4
 800baf6:	bd10      	pop	{r4, pc}
 800baf8:	2000081c 	andcs	r0, r0, ip, lsl r8
 800bafc:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800bb00 <DdpDisplay::CalculateOffsets()>:
 800bb00:	4909      	ldr	r1, [pc, #36]	; (800bb28 <DdpDisplay::CalculateOffsets()+0x28>)
 800bb02:	2200      	movs	r2, #0
 800bb04:	b530      	push	{r4, r5, lr}
 800bb06:	4613      	mov	r3, r2
 800bb08:	460c      	mov	r4, r1
 800bb0a:	6945      	ldr	r5, [r0, #20]
 800bb0c:	3201      	adds	r2, #1
 800bb0e:	442b      	add	r3, r5
 800bb10:	2a10      	cmp	r2, #16
 800bb12:	f841 3b04 	str.w	r3, [r1], #4
 800bb16:	d1f8      	bne.n	800bb0a <DdpDisplay::CalculateOffsets()+0xa>
 800bb18:	f503 7200 	add.w	r2, r3, #512	; 0x200
 800bb1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800bb20:	6422      	str	r2, [r4, #64]	; 0x40
 800bb22:	6463      	str	r3, [r4, #68]	; 0x44
 800bb24:	bd30      	pop	{r4, r5, pc}
 800bb26:	bf00      	nop
 800bb28:	200006cc 	andcs	r0, r0, ip, asr #13

0800bb2c <DdpDisplay::Start()>:
 800bb2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb2e:	4d1c      	ldr	r5, [pc, #112]	; (800bba0 <DdpDisplay::Start()+0x74>)
 800bb30:	4604      	mov	r4, r0
 800bb32:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800bb36:	6828      	ldr	r0, [r5, #0]
 800bb38:	f006 f9ae 	bl	8011e98 <Network::Begin(unsigned short)>
 800bb3c:	f104 0124 	add.w	r1, r4, #36	; 0x24
 800bb40:	60a0      	str	r0, [r4, #8]
 800bb42:	f104 022e 	add.w	r2, r4, #46	; 0x2e
 800bb46:	460b      	mov	r3, r1
 800bb48:	2000      	movs	r0, #0
 800bb4a:	4293      	cmp	r3, r2
 800bb4c:	d120      	bne.n	800bb90 <DdpDisplay::Start()+0x64>
 800bb4e:	2344      	movs	r3, #68	; 0x44
 800bb50:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800bb54:	23fb      	movs	r3, #251	; 0xfb
 800bb56:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
 800bb5a:	4623      	mov	r3, r4
 800bb5c:	222b      	movs	r2, #43	; 0x2b
 800bb5e:	f803 2f2d 	strb.w	r2, [r3, #45]!
 800bb62:	4a10      	ldr	r2, [pc, #64]	; (800bba4 <DdpDisplay::Start()+0x78>)
 800bb64:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800bb68:	4298      	cmp	r0, r3
 800bb6a:	d114      	bne.n	800bb96 <DdpDisplay::Start()+0x6a>
 800bb6c:	682a      	ldr	r2, [r5, #0]
 800bb6e:	69d0      	ldr	r0, [r2, #28]
 800bb70:	6953      	ldr	r3, [r2, #20]
 800bb72:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800bb76:	9200      	str	r2, [sp, #0]
 800bb78:	ea63 0300 	orn	r3, r3, r0
 800bb7c:	2235      	movs	r2, #53	; 0x35
 800bb7e:	7a20      	ldrb	r0, [r4, #8]
 800bb80:	f005 fcba 	bl	80114f8 <udp_send>
 800bb84:	4620      	mov	r0, r4
 800bb86:	b002      	add	sp, #8
 800bb88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb8c:	f7ff bfb8 	b.w	800bb00 <DdpDisplay::CalculateOffsets()>
 800bb90:	f803 0b01 	strb.w	r0, [r3], #1
 800bb94:	e7d9      	b.n	800bb4a <DdpDisplay::Start()+0x1e>
 800bb96:	f812 6b01 	ldrb.w	r6, [r2], #1
 800bb9a:	f803 6f01 	strb.w	r6, [r3, #1]!
 800bb9e:	e7e3      	b.n	800bb68 <DdpDisplay::Start()+0x3c>
 800bba0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800bba4:	08018363 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, pc}

0800bba8 <DdpDisplay::Stop()>:
 800bba8:	b510      	push	{r4, lr}
 800bbaa:	4b05      	ldr	r3, [pc, #20]	; (800bbc0 <DdpDisplay::Stop()+0x18>)
 800bbac:	4604      	mov	r4, r0
 800bbae:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800bbb2:	6818      	ldr	r0, [r3, #0]
 800bbb4:	f006 f973 	bl	8011e9e <Network::End(unsigned short)>
 800bbb8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bbbc:	60a3      	str	r3, [r4, #8]
 800bbbe:	bd10      	pop	{r4, pc}
 800bbc0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800bbc4 <DdpDisplay::HandleQuery()>:
 800bbc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbc8:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800bbcc:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800bbd0:	2bfb      	cmp	r3, #251	; 0xfb
 800bbd2:	b0af      	sub	sp, #188	; 0xbc
 800bbd4:	4683      	mov	fp, r0
 800bbd6:	d129      	bne.n	800bc2c <DdpDisplay::HandleQuery()+0x68>
 800bbd8:	7943      	ldrb	r3, [r0, #5]
 800bbda:	9305      	str	r3, [sp, #20]
 800bbdc:	7903      	ldrb	r3, [r0, #4]
 800bbde:	9304      	str	r3, [sp, #16]
 800bbe0:	78c3      	ldrb	r3, [r0, #3]
 800bbe2:	9303      	str	r3, [sp, #12]
 800bbe4:	7883      	ldrb	r3, [r0, #2]
 800bbe6:	9302      	str	r3, [sp, #8]
 800bbe8:	7843      	ldrb	r3, [r0, #1]
 800bbea:	9301      	str	r3, [sp, #4]
 800bbec:	7803      	ldrb	r3, [r0, #0]
 800bbee:	4ac9      	ldr	r2, [pc, #804]	; (800bf14 <DdpDisplay::HandleQuery()+0x350>)
 800bbf0:	9300      	str	r3, [sp, #0]
 800bbf2:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800bbf6:	4bc8      	ldr	r3, [pc, #800]	; (800bf18 <DdpDisplay::HandleQuery()+0x354>)
 800bbf8:	302e      	adds	r0, #46	; 0x2e
 800bbfa:	f7fe fb91 	bl	800a320 <snprintf>
 800bbfe:	2345      	movs	r3, #69	; 0x45
 800bc00:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
 800bc04:	ba43      	rev16	r3, r0
 800bc06:	f8ab 302c 	strh.w	r3, [fp, #44]	; 0x2c
 800bc0a:	4bc4      	ldr	r3, [pc, #784]	; (800bf1c <DdpDisplay::HandleQuery()+0x358>)
 800bc0c:	681a      	ldr	r2, [r3, #0]
 800bc0e:	69d1      	ldr	r1, [r2, #28]
 800bc10:	6953      	ldr	r3, [r2, #20]
 800bc12:	300a      	adds	r0, #10
 800bc14:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800bc18:	9200      	str	r2, [sp, #0]
 800bc1a:	ea63 0301 	orn	r3, r3, r1
 800bc1e:	b282      	uxth	r2, r0
 800bc20:	f10b 0124 	add.w	r1, fp, #36	; 0x24
 800bc24:	f89b 0008 	ldrb.w	r0, [fp, #8]
 800bc28:	f005 fc66 	bl	80114f8 <udp_send>
 800bc2c:	f89b 3027 	ldrb.w	r3, [fp, #39]	; 0x27
 800bc30:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800bc34:	2bfa      	cmp	r3, #250	; 0xfa
 800bc36:	f040 80b4 	bne.w	800bda2 <DdpDisplay::HandleQuery()+0x1de>
 800bc3a:	f10b 032e 	add.w	r3, fp, #46	; 0x2e
 800bc3e:	ee07 3a90 	vmov	s15, r3
 800bc42:	4bb6      	ldr	r3, [pc, #728]	; (800bf1c <DdpDisplay::HandleQuery()+0x358>)
 800bc44:	f8db 001c 	ldr.w	r0, [fp, #28]
 800bc48:	6819      	ldr	r1, [r3, #0]
 800bc4a:	694a      	ldr	r2, [r1, #20]
 800bc4c:	b2d3      	uxtb	r3, r2
 800bc4e:	ee07 3a10 	vmov	s14, r3
 800bc52:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc56:	9323      	str	r3, [sp, #140]	; 0x8c
 800bc58:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc5c:	9324      	str	r3, [sp, #144]	; 0x90
 800bc5e:	0e13      	lsrs	r3, r2, #24
 800bc60:	69ca      	ldr	r2, [r1, #28]
 800bc62:	9325      	str	r3, [sp, #148]	; 0x94
 800bc64:	b2d3      	uxtb	r3, r2
 800bc66:	9326      	str	r3, [sp, #152]	; 0x98
 800bc68:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc6c:	9327      	str	r3, [sp, #156]	; 0x9c
 800bc6e:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc72:	9328      	str	r3, [sp, #160]	; 0xa0
 800bc74:	0e13      	lsrs	r3, r2, #24
 800bc76:	698a      	ldr	r2, [r1, #24]
 800bc78:	9329      	str	r3, [sp, #164]	; 0xa4
 800bc7a:	b2d3      	uxtb	r3, r2
 800bc7c:	932a      	str	r3, [sp, #168]	; 0xa8
 800bc7e:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800bc82:	932b      	str	r3, [sp, #172]	; 0xac
 800bc84:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bc88:	932c      	str	r3, [sp, #176]	; 0xb0
 800bc8a:	0e13      	lsrs	r3, r2, #24
 800bc8c:	932d      	str	r3, [sp, #180]	; 0xb4
 800bc8e:	2800      	cmp	r0, #0
 800bc90:	f000 808a 	beq.w	800bda8 <DdpDisplay::HandleQuery()+0x1e4>
 800bc94:	2801      	cmp	r0, #1
 800bc96:	f8db 2010 	ldr.w	r2, [fp, #16]
 800bc9a:	f000 8095 	beq.w	800bdc8 <DdpDisplay::HandleQuery()+0x204>
 800bc9e:	2802      	cmp	r0, #2
 800bca0:	f000 80a2 	beq.w	800bde8 <DdpDisplay::HandleQuery()+0x224>
 800bca4:	2803      	cmp	r0, #3
 800bca6:	f000 80ae 	beq.w	800be06 <DdpDisplay::HandleQuery()+0x242>
 800bcaa:	2804      	cmp	r0, #4
 800bcac:	f000 80ba 	beq.w	800be24 <DdpDisplay::HandleQuery()+0x260>
 800bcb0:	2805      	cmp	r0, #5
 800bcb2:	f000 80c6 	beq.w	800be42 <DdpDisplay::HandleQuery()+0x27e>
 800bcb6:	2806      	cmp	r0, #6
 800bcb8:	f000 80d2 	beq.w	800be60 <DdpDisplay::HandleQuery()+0x29c>
 800bcbc:	2807      	cmp	r0, #7
 800bcbe:	f000 80de 	beq.w	800be7e <DdpDisplay::HandleQuery()+0x2ba>
 800bcc2:	2808      	cmp	r0, #8
 800bcc4:	f000 80ea 	beq.w	800be9c <DdpDisplay::HandleQuery()+0x2d8>
 800bcc8:	2809      	cmp	r0, #9
 800bcca:	f000 80f6 	beq.w	800beba <DdpDisplay::HandleQuery()+0x2f6>
 800bcce:	280a      	cmp	r0, #10
 800bcd0:	f000 8102 	beq.w	800bed8 <DdpDisplay::HandleQuery()+0x314>
 800bcd4:	280b      	cmp	r0, #11
 800bcd6:	f000 810e 	beq.w	800bef6 <DdpDisplay::HandleQuery()+0x332>
 800bcda:	280c      	cmp	r0, #12
 800bcdc:	f000 8122 	beq.w	800bf24 <DdpDisplay::HandleQuery()+0x360>
 800bce0:	280d      	cmp	r0, #13
 800bce2:	f000 812e 	beq.w	800bf42 <DdpDisplay::HandleQuery()+0x37e>
 800bce6:	280e      	cmp	r0, #14
 800bce8:	f000 813a 	beq.w	800bf60 <DdpDisplay::HandleQuery()+0x39c>
 800bcec:	280f      	cmp	r0, #15
 800bcee:	e9cd 2221 	strd	r2, r2, [sp, #132]	; 0x84
 800bcf2:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bcf6:	4611      	mov	r1, r2
 800bcf8:	4692      	mov	sl, r2
 800bcfa:	4691      	mov	r9, r2
 800bcfc:	4690      	mov	r8, r2
 800bcfe:	4696      	mov	lr, r2
 800bd00:	4694      	mov	ip, r2
 800bd02:	4617      	mov	r7, r2
 800bd04:	4616      	mov	r6, r2
 800bd06:	4615      	mov	r5, r2
 800bd08:	4614      	mov	r4, r2
 800bd0a:	d06b      	beq.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bd0c:	4610      	mov	r0, r2
 800bd0e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bd12:	e9cd 331b 	strd	r3, r3, [sp, #108]	; 0x6c
 800bd16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800bd18:	9318      	str	r3, [sp, #96]	; 0x60
 800bd1a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bd1c:	9317      	str	r3, [sp, #92]	; 0x5c
 800bd1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800bd20:	9316      	str	r3, [sp, #88]	; 0x58
 800bd22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800bd24:	920b      	str	r2, [sp, #44]	; 0x2c
 800bd26:	e9cd a314 	strd	sl, r3, [sp, #80]	; 0x50
 800bd2a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bd2c:	930a      	str	r3, [sp, #40]	; 0x28
 800bd2e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800bd30:	9309      	str	r3, [sp, #36]	; 0x24
 800bd32:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800bd34:	9308      	str	r3, [sp, #32]
 800bd36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800bd38:	9307      	str	r3, [sp, #28]
 800bd3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bd3c:	9306      	str	r3, [sp, #24]
 800bd3e:	e9cd 1019 	strd	r1, r0, [sp, #100]	; 0x64
 800bd42:	e9cd ce10 	strd	ip, lr, [sp, #64]	; 0x40
 800bd46:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 800bd4a:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
 800bd4e:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 800bd52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bd54:	9305      	str	r3, [sp, #20]
 800bd56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800bd58:	9304      	str	r3, [sp, #16]
 800bd5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800bd5c:	9303      	str	r3, [sp, #12]
 800bd5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800bd60:	9302      	str	r3, [sp, #8]
 800bd62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800bd64:	9301      	str	r3, [sp, #4]
 800bd66:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800bd68:	4a6d      	ldr	r2, [pc, #436]	; (800bf20 <DdpDisplay::HandleQuery()+0x35c>)
 800bd6a:	9300      	str	r3, [sp, #0]
 800bd6c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800bd70:	ee17 3a10 	vmov	r3, s14
 800bd74:	ee17 0a90 	vmov	r0, s15
 800bd78:	f7fe fad2 	bl	800a320 <snprintf>
 800bd7c:	2345      	movs	r3, #69	; 0x45
 800bd7e:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
 800bd82:	ba43      	rev16	r3, r0
 800bd84:	f8ab 302c 	strh.w	r3, [fp, #44]	; 0x2c
 800bd88:	300a      	adds	r0, #10
 800bd8a:	f44f 637d 	mov.w	r3, #4048	; 0xfd0
 800bd8e:	9300      	str	r3, [sp, #0]
 800bd90:	b282      	uxth	r2, r0
 800bd92:	f8db 300c 	ldr.w	r3, [fp, #12]
 800bd96:	f89b 0008 	ldrb.w	r0, [fp, #8]
 800bd9a:	f10b 0124 	add.w	r1, fp, #36	; 0x24
 800bd9e:	f005 fbab 	bl	80114f8 <udp_send>
 800bda2:	b02f      	add	sp, #188	; 0xbc
 800bda4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bda8:	e9cd 0021 	strd	r0, r0, [sp, #132]	; 0x84
 800bdac:	e9cd 001f 	strd	r0, r0, [sp, #124]	; 0x7c
 800bdb0:	4601      	mov	r1, r0
 800bdb2:	4682      	mov	sl, r0
 800bdb4:	4681      	mov	r9, r0
 800bdb6:	4680      	mov	r8, r0
 800bdb8:	4686      	mov	lr, r0
 800bdba:	4684      	mov	ip, r0
 800bdbc:	4607      	mov	r7, r0
 800bdbe:	4606      	mov	r6, r0
 800bdc0:	4605      	mov	r5, r0
 800bdc2:	4604      	mov	r4, r0
 800bdc4:	4602      	mov	r2, r0
 800bdc6:	e7a2      	b.n	800bd0e <DdpDisplay::HandleQuery()+0x14a>
 800bdc8:	2100      	movs	r1, #0
 800bdca:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bdce:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bdd2:	468a      	mov	sl, r1
 800bdd4:	4689      	mov	r9, r1
 800bdd6:	4688      	mov	r8, r1
 800bdd8:	468e      	mov	lr, r1
 800bdda:	468c      	mov	ip, r1
 800bddc:	460f      	mov	r7, r1
 800bdde:	460e      	mov	r6, r1
 800bde0:	460d      	mov	r5, r1
 800bde2:	460c      	mov	r4, r1
 800bde4:	2000      	movs	r0, #0
 800bde6:	e792      	b.n	800bd0e <DdpDisplay::HandleQuery()+0x14a>
 800bde8:	2100      	movs	r1, #0
 800bdea:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bdee:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bdf2:	4614      	mov	r4, r2
 800bdf4:	468a      	mov	sl, r1
 800bdf6:	4689      	mov	r9, r1
 800bdf8:	4688      	mov	r8, r1
 800bdfa:	468e      	mov	lr, r1
 800bdfc:	468c      	mov	ip, r1
 800bdfe:	460f      	mov	r7, r1
 800be00:	460e      	mov	r6, r1
 800be02:	460d      	mov	r5, r1
 800be04:	e7ee      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be06:	2100      	movs	r1, #0
 800be08:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be0c:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be10:	4615      	mov	r5, r2
 800be12:	4614      	mov	r4, r2
 800be14:	468a      	mov	sl, r1
 800be16:	4689      	mov	r9, r1
 800be18:	4688      	mov	r8, r1
 800be1a:	468e      	mov	lr, r1
 800be1c:	468c      	mov	ip, r1
 800be1e:	460f      	mov	r7, r1
 800be20:	460e      	mov	r6, r1
 800be22:	e7df      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be24:	2100      	movs	r1, #0
 800be26:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be2a:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be2e:	4616      	mov	r6, r2
 800be30:	4615      	mov	r5, r2
 800be32:	4614      	mov	r4, r2
 800be34:	468a      	mov	sl, r1
 800be36:	4689      	mov	r9, r1
 800be38:	4688      	mov	r8, r1
 800be3a:	468e      	mov	lr, r1
 800be3c:	468c      	mov	ip, r1
 800be3e:	460f      	mov	r7, r1
 800be40:	e7d0      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be42:	2100      	movs	r1, #0
 800be44:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be48:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be4c:	4617      	mov	r7, r2
 800be4e:	4616      	mov	r6, r2
 800be50:	4615      	mov	r5, r2
 800be52:	4614      	mov	r4, r2
 800be54:	468a      	mov	sl, r1
 800be56:	4689      	mov	r9, r1
 800be58:	4688      	mov	r8, r1
 800be5a:	468e      	mov	lr, r1
 800be5c:	468c      	mov	ip, r1
 800be5e:	e7c1      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be60:	2100      	movs	r1, #0
 800be62:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be66:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be6a:	4694      	mov	ip, r2
 800be6c:	4617      	mov	r7, r2
 800be6e:	4616      	mov	r6, r2
 800be70:	4615      	mov	r5, r2
 800be72:	4614      	mov	r4, r2
 800be74:	468a      	mov	sl, r1
 800be76:	4689      	mov	r9, r1
 800be78:	4688      	mov	r8, r1
 800be7a:	468e      	mov	lr, r1
 800be7c:	e7b2      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be7e:	2100      	movs	r1, #0
 800be80:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800be84:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800be88:	4696      	mov	lr, r2
 800be8a:	4694      	mov	ip, r2
 800be8c:	4617      	mov	r7, r2
 800be8e:	4616      	mov	r6, r2
 800be90:	4615      	mov	r5, r2
 800be92:	4614      	mov	r4, r2
 800be94:	468a      	mov	sl, r1
 800be96:	4689      	mov	r9, r1
 800be98:	4688      	mov	r8, r1
 800be9a:	e7a3      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800be9c:	2100      	movs	r1, #0
 800be9e:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bea2:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bea6:	4690      	mov	r8, r2
 800bea8:	4696      	mov	lr, r2
 800beaa:	4694      	mov	ip, r2
 800beac:	4617      	mov	r7, r2
 800beae:	4616      	mov	r6, r2
 800beb0:	4615      	mov	r5, r2
 800beb2:	4614      	mov	r4, r2
 800beb4:	468a      	mov	sl, r1
 800beb6:	4689      	mov	r9, r1
 800beb8:	e794      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800beba:	2100      	movs	r1, #0
 800bebc:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bec0:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bec4:	4691      	mov	r9, r2
 800bec6:	4690      	mov	r8, r2
 800bec8:	4696      	mov	lr, r2
 800beca:	4694      	mov	ip, r2
 800becc:	4617      	mov	r7, r2
 800bece:	4616      	mov	r6, r2
 800bed0:	4615      	mov	r5, r2
 800bed2:	4614      	mov	r4, r2
 800bed4:	468a      	mov	sl, r1
 800bed6:	e785      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bed8:	2100      	movs	r1, #0
 800beda:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bede:	e9cd 111f 	strd	r1, r1, [sp, #124]	; 0x7c
 800bee2:	4692      	mov	sl, r2
 800bee4:	4691      	mov	r9, r2
 800bee6:	4690      	mov	r8, r2
 800bee8:	4696      	mov	lr, r2
 800beea:	4694      	mov	ip, r2
 800beec:	4617      	mov	r7, r2
 800beee:	4616      	mov	r6, r2
 800bef0:	4615      	mov	r5, r2
 800bef2:	4614      	mov	r4, r2
 800bef4:	e776      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bef6:	2100      	movs	r1, #0
 800bef8:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800befc:	921f      	str	r2, [sp, #124]	; 0x7c
 800befe:	4692      	mov	sl, r2
 800bf00:	4691      	mov	r9, r2
 800bf02:	4690      	mov	r8, r2
 800bf04:	4696      	mov	lr, r2
 800bf06:	4694      	mov	ip, r2
 800bf08:	4617      	mov	r7, r2
 800bf0a:	4616      	mov	r6, r2
 800bf0c:	4615      	mov	r5, r2
 800bf0e:	4614      	mov	r4, r2
 800bf10:	9120      	str	r1, [sp, #128]	; 0x80
 800bf12:	e767      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bf14:	0801830b 	stmdaeq	r1, {r0, r1, r3, r8, r9, pc}
 800bf18:	08017f76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 800bf1c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800bf20:	08017fe3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 800bf24:	2100      	movs	r1, #0
 800bf26:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bf2a:	e9cd 1121 	strd	r1, r1, [sp, #132]	; 0x84
 800bf2e:	4692      	mov	sl, r2
 800bf30:	4691      	mov	r9, r2
 800bf32:	4690      	mov	r8, r2
 800bf34:	4696      	mov	lr, r2
 800bf36:	4694      	mov	ip, r2
 800bf38:	4617      	mov	r7, r2
 800bf3a:	4616      	mov	r6, r2
 800bf3c:	4615      	mov	r5, r2
 800bf3e:	4614      	mov	r4, r2
 800bf40:	e750      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bf42:	2100      	movs	r1, #0
 800bf44:	e9cd 2220 	strd	r2, r2, [sp, #128]	; 0x80
 800bf48:	921f      	str	r2, [sp, #124]	; 0x7c
 800bf4a:	4692      	mov	sl, r2
 800bf4c:	4691      	mov	r9, r2
 800bf4e:	4690      	mov	r8, r2
 800bf50:	4696      	mov	lr, r2
 800bf52:	4694      	mov	ip, r2
 800bf54:	4617      	mov	r7, r2
 800bf56:	4616      	mov	r6, r2
 800bf58:	4615      	mov	r5, r2
 800bf5a:	4614      	mov	r4, r2
 800bf5c:	9122      	str	r1, [sp, #136]	; 0x88
 800bf5e:	e741      	b.n	800bde4 <DdpDisplay::HandleQuery()+0x220>
 800bf60:	2000      	movs	r0, #0
 800bf62:	e9cd 2221 	strd	r2, r2, [sp, #132]	; 0x84
 800bf66:	e9cd 221f 	strd	r2, r2, [sp, #124]	; 0x7c
 800bf6a:	4692      	mov	sl, r2
 800bf6c:	4691      	mov	r9, r2
 800bf6e:	4690      	mov	r8, r2
 800bf70:	4696      	mov	lr, r2
 800bf72:	4694      	mov	ip, r2
 800bf74:	4617      	mov	r7, r2
 800bf76:	4616      	mov	r6, r2
 800bf78:	4615      	mov	r5, r2
 800bf7a:	4614      	mov	r4, r2
 800bf7c:	4601      	mov	r1, r0
 800bf7e:	e6c6      	b.n	800bd0e <DdpDisplay::HandleQuery()+0x14a>

0800bf80 <DdpDisplay::HandleData()>:
 800bf80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf84:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bf86:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800bf88:	f8df b124 	ldr.w	fp, [pc, #292]	; 800c0b0 <DdpDisplay::HandleData()+0x130>
 800bf8c:	b087      	sub	sp, #28
 800bf8e:	ba5b      	rev16	r3, r3
 800bf90:	b29b      	uxth	r3, r3
 800bf92:	2600      	movs	r6, #0
 800bf94:	4604      	mov	r4, r0
 800bf96:	ba2d      	rev	r5, r5
 800bf98:	9305      	str	r3, [sp, #20]
 800bf9a:	f100 092e 	add.w	r9, r0, #46	; 0x2e
 800bf9e:	4637      	mov	r7, r6
 800bfa0:	69e2      	ldr	r2, [r4, #28]
 800bfa2:	9b05      	ldr	r3, [sp, #20]
 800bfa4:	42b2      	cmp	r2, r6
 800bfa6:	d900      	bls.n	800bfaa <DdpDisplay::HandleData()+0x2a>
 800bfa8:	bb6b      	cbnz	r3, 800c006 <DdpDisplay::HandleData()+0x86>
 800bfaa:	f8df b104 	ldr.w	fp, [pc, #260]	; 800c0b0 <DdpDisplay::HandleData()+0x130>
 800bfae:	f04f 0a10 	mov.w	sl, #16
 800bfb2:	2040      	movs	r0, #64	; 0x40
 800bfb4:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800bfb8:	f1b8 0f00 	cmp.w	r8, #0
 800bfbc:	d01c      	beq.n	800bff8 <DdpDisplay::HandleData()+0x78>
 800bfbe:	f85b 202a 	ldr.w	r2, [fp, sl, lsl #2]
 800bfc2:	42aa      	cmp	r2, r5
 800bfc4:	d915      	bls.n	800bff2 <DdpDisplay::HandleData()+0x72>
 800bfc6:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 800bfca:	bf34      	ite	cc
 800bfcc:	4646      	movcc	r6, r8
 800bfce:	f44f 7600 	movcs.w	r6, #512	; 0x200
 800bfd2:	4632      	mov	r2, r6
 800bfd4:	eb09 0107 	add.w	r1, r9, r7
 800bfd8:	9001      	str	r0, [sp, #4]
 800bfda:	f7ff fd53 	bl	800ba84 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800bfde:	9801      	ldr	r0, [sp, #4]
 800bfe0:	4b32      	ldr	r3, [pc, #200]	; (800c0ac <DdpDisplay::HandleData()+0x12c>)
 800bfe2:	4437      	add	r7, r6
 800bfe4:	f843 6020 	str.w	r6, [r3, r0, lsl #2]
 800bfe8:	4435      	add	r5, r6
 800bfea:	eba8 0606 	sub.w	r6, r8, r6
 800bfee:	9605      	str	r6, [sp, #20]
 800bff0:	3001      	adds	r0, #1
 800bff2:	f1ba 0f11 	cmp.w	sl, #17
 800bff6:	d135      	bne.n	800c064 <DdpDisplay::HandleData()+0xe4>
 800bff8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800bffc:	07db      	lsls	r3, r3, #31
 800bffe:	d434      	bmi.n	800c06a <DdpDisplay::HandleData()+0xea>
 800c000:	b007      	add	sp, #28
 800c002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c006:	00b0      	lsls	r0, r6, #2
 800c008:	1d03      	adds	r3, r0, #4
 800c00a:	f106 0a01 	add.w	sl, r6, #1
 800c00e:	9301      	str	r3, [sp, #4]
 800c010:	f85b 2026 	ldr.w	r2, [fp, r6, lsl #2]
 800c014:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c018:	42aa      	cmp	r2, r5
 800c01a:	d902      	bls.n	800c022 <DdpDisplay::HandleData()+0xa2>
 800c01c:	9b01      	ldr	r3, [sp, #4]
 800c01e:	4283      	cmp	r3, r0
 800c020:	d801      	bhi.n	800c026 <DdpDisplay::HandleData()+0xa6>
 800c022:	4656      	mov	r6, sl
 800c024:	e7bc      	b.n	800bfa0 <DdpDisplay::HandleData()+0x20>
 800c026:	69a3      	ldr	r3, [r4, #24]
 800c028:	6961      	ldr	r1, [r4, #20]
 800c02a:	9002      	str	r0, [sp, #8]
 800c02c:	4543      	cmp	r3, r8
 800c02e:	bf8a      	itet	hi
 800c030:	4643      	movhi	r3, r8
 800c032:	f104 0218 	addls.w	r2, r4, #24
 800c036:	aa05      	addhi	r2, sp, #20
 800c038:	4299      	cmp	r1, r3
 800c03a:	bf98      	it	ls
 800c03c:	f104 0214 	addls.w	r2, r4, #20
 800c040:	eb09 0107 	add.w	r1, r9, r7
 800c044:	6812      	ldr	r2, [r2, #0]
 800c046:	9203      	str	r2, [sp, #12]
 800c048:	f7ff fd1c 	bl	800ba84 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800c04c:	e9dd 0202 	ldrd	r0, r2, [sp, #8]
 800c050:	4b16      	ldr	r3, [pc, #88]	; (800c0ac <DdpDisplay::HandleData()+0x12c>)
 800c052:	4417      	add	r7, r2
 800c054:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
 800c058:	4415      	add	r5, r2
 800c05a:	eba8 0202 	sub.w	r2, r8, r2
 800c05e:	9205      	str	r2, [sp, #20]
 800c060:	3001      	adds	r0, #1
 800c062:	e7d5      	b.n	800c010 <DdpDisplay::HandleData()+0x90>
 800c064:	f04f 0a11 	mov.w	sl, #17
 800c068:	e7a4      	b.n	800bfb4 <DdpDisplay::HandleData()+0x34>
 800c06a:	2500      	movs	r5, #0
 800c06c:	f240 6704 	movw	r7, #1540	; 0x604
 800c070:	462e      	mov	r6, r5
 800c072:	f8d4 9020 	ldr.w	r9, [r4, #32]
 800c076:	f7ff fcf9 	bl	800ba6c <lightset::Data::Get()>
 800c07a:	fb07 f805 	mul.w	r8, r7, r5
 800c07e:	f8d9 3000 	ldr.w	r3, [r9]
 800c082:	eb00 0108 	add.w	r1, r0, r8
 800c086:	f508 6280 	add.w	r2, r8, #1024	; 0x400
 800c08a:	4402      	add	r2, r0
 800c08c:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800c090:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800c094:	4648      	mov	r0, r9
 800c096:	4629      	mov	r1, r5
 800c098:	47d0      	blx	sl
 800c09a:	f7ff fce7 	bl	800ba6c <lightset::Data::Get()>
 800c09e:	3501      	adds	r5, #1
 800c0a0:	4440      	add	r0, r8
 800c0a2:	2d42      	cmp	r5, #66	; 0x42
 800c0a4:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800c0a8:	d1e3      	bne.n	800c072 <DdpDisplay::HandleData()+0xf2>
 800c0aa:	e7a9      	b.n	800c000 <DdpDisplay::HandleData()+0x80>
 800c0ac:	20000714 	andcs	r0, r0, r4, lsl r7
 800c0b0:	200006cc 	andcs	r0, r0, ip, asr #13

0800c0b4 <DdpDisplay::Run()>:
 800c0b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c0b6:	f10d 030e 	add.w	r3, sp, #14
 800c0ba:	9300      	str	r3, [sp, #0]
 800c0bc:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800c0c0:	f100 030c 	add.w	r3, r0, #12
 800c0c4:	4604      	mov	r4, r0
 800c0c6:	f240 52aa 	movw	r2, #1450	; 0x5aa
 800c0ca:	7a00      	ldrb	r0, [r0, #8]
 800c0cc:	f005 f9b8 	bl	8011440 <udp_recv>
 800c0d0:	2809      	cmp	r0, #9
 800c0d2:	d912      	bls.n	800c0fa <DdpDisplay::Run()+0x46>
 800c0d4:	4b0d      	ldr	r3, [pc, #52]	; (800c10c <DdpDisplay::Run()+0x58>)
 800c0d6:	68e2      	ldr	r2, [r4, #12]
 800c0d8:	681b      	ldr	r3, [r3, #0]
 800c0da:	695b      	ldr	r3, [r3, #20]
 800c0dc:	429a      	cmp	r2, r3
 800c0de:	d00c      	beq.n	800c0fa <DdpDisplay::Run()+0x46>
 800c0e0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800c0e4:	f003 02c0 	and.w	r2, r3, #192	; 0xc0
 800c0e8:	2a40      	cmp	r2, #64	; 0x40
 800c0ea:	d106      	bne.n	800c0fa <DdpDisplay::Run()+0x46>
 800c0ec:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800c0f0:	2a01      	cmp	r2, #1
 800c0f2:	d104      	bne.n	800c0fe <DdpDisplay::Run()+0x4a>
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	f7ff ff43 	bl	800bf80 <DdpDisplay::HandleData()>
 800c0fa:	b004      	add	sp, #16
 800c0fc:	bd10      	pop	{r4, pc}
 800c0fe:	079b      	lsls	r3, r3, #30
 800c100:	d5fb      	bpl.n	800c0fa <DdpDisplay::Run()+0x46>
 800c102:	4620      	mov	r0, r4
 800c104:	f7ff fd5e 	bl	800bbc4 <DdpDisplay::HandleQuery()>
 800c108:	e7f7      	b.n	800c0fa <DdpDisplay::Run()+0x46>
 800c10a:	bf00      	nop
 800c10c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800c110 <DdpDisplay::Print()>:
 800c110:	b510      	push	{r4, lr}
 800c112:	4604      	mov	r4, r0
 800c114:	4809      	ldr	r0, [pc, #36]	; (800c13c <DdpDisplay::Print()+0x2c>)
 800c116:	f008 fb04 	bl	8014722 <puts>
 800c11a:	6921      	ldr	r1, [r4, #16]
 800c11c:	4808      	ldr	r0, [pc, #32]	; (800c140 <DdpDisplay::Print()+0x30>)
 800c11e:	f7fe f8d7 	bl	800a2d0 <printf>
 800c122:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800c126:	4807      	ldr	r0, [pc, #28]	; (800c144 <DdpDisplay::Print()+0x34>)
 800c128:	fbb1 f1f3 	udiv	r1, r1, r3
 800c12c:	f7fe f8d0 	bl	800a2d0 <printf>
 800c130:	69e1      	ldr	r1, [r4, #28]
 800c132:	4805      	ldr	r0, [pc, #20]	; (800c148 <DdpDisplay::Print()+0x38>)
 800c134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c138:	f7fe b8ca 	b.w	800a2d0 <printf>
 800c13c:	08017f8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, fp, ip, sp, lr}
 800c140:	08017f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 800c144:	08017fb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 800c148:	08017fca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0800c14c <LLRPDevice::~LLRPDevice()>:
 800c14c:	4770      	bx	lr

0800c14e <LLRPDevice::CopyUID(unsigned char*)>:
 800c14e:	4770      	bx	lr

0800c150 <LLRPDevice::CopyCID(unsigned char*)>:
 800c150:	4770      	bx	lr

0800c152 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800c152:	2000      	movs	r0, #0
 800c154:	4770      	bx	lr

0800c156 <LLRPDevice::~LLRPDevice()>:
 800c156:	b510      	push	{r4, lr}
 800c158:	4604      	mov	r4, r0
 800c15a:	f008 f9e7 	bl	801452c <operator delete(void*)>
 800c15e:	4620      	mov	r0, r4
 800c160:	bd10      	pop	{r4, pc}

0800c162 <memcpy.isra.0>:
 800c162:	3801      	subs	r0, #1
 800c164:	440a      	add	r2, r1
 800c166:	4291      	cmp	r1, r2
 800c168:	d100      	bne.n	800c16c <memcpy.isra.0+0xa>
 800c16a:	4770      	bx	lr
 800c16c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c170:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c174:	e7f7      	b.n	800c166 <memcpy.isra.0+0x4>
	...

0800c178 <LLRPDevice::LLRPDevice()>:
 800c178:	b513      	push	{r0, r1, r4, lr}
 800c17a:	4b0a      	ldr	r3, [pc, #40]	; (800c1a4 <LLRPDevice::LLRPDevice()+0x2c>)
 800c17c:	6003      	str	r3, [r0, #0]
 800c17e:	4604      	mov	r4, r0
 800c180:	a901      	add	r1, sp, #4
 800c182:	4809      	ldr	r0, [pc, #36]	; (800c1a8 <LLRPDevice::LLRPDevice()+0x30>)
 800c184:	f008 f9da 	bl	801453c <inet_aton>
 800c188:	4b08      	ldr	r3, [pc, #32]	; (800c1ac <LLRPDevice::LLRPDevice()+0x34>)
 800c18a:	9a01      	ldr	r2, [sp, #4]
 800c18c:	4808      	ldr	r0, [pc, #32]	; (800c1b0 <LLRPDevice::LLRPDevice()+0x38>)
 800c18e:	601a      	str	r2, [r3, #0]
 800c190:	a901      	add	r1, sp, #4
 800c192:	f008 f9d3 	bl	801453c <inet_aton>
 800c196:	4b07      	ldr	r3, [pc, #28]	; (800c1b4 <LLRPDevice::LLRPDevice()+0x3c>)
 800c198:	9a01      	ldr	r2, [sp, #4]
 800c19a:	601a      	str	r2, [r3, #0]
 800c19c:	4620      	mov	r0, r4
 800c19e:	b002      	add	sp, #8
 800c1a0:	bd10      	pop	{r4, pc}
 800c1a2:	bf00      	nop
 800c1a4:	08018440 	stmdaeq	r1, {r6, sl, pc}
 800c1a8:	0801838f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, pc}
 800c1ac:	20000824 	andcs	r0, r0, r4, lsr #16
 800c1b0:	0801839f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, pc}
 800c1b4:	20000828 	andcs	r0, r0, r8, lsr #16

0800c1b8 <LLRPDevice::HandleRequestMessage()>:
 800c1b8:	b530      	push	{r4, r5, lr}
 800c1ba:	4b24      	ldr	r3, [pc, #144]	; (800c24c <LLRPDevice::HandleRequestMessage()+0x94>)
 800c1bc:	681c      	ldr	r4, [r3, #0]
 800c1be:	b089      	sub	sp, #36	; 0x24
 800c1c0:	2210      	movs	r2, #16
 800c1c2:	4605      	mov	r5, r0
 800c1c4:	f104 0117 	add.w	r1, r4, #23
 800c1c8:	eb0d 0002 	add.w	r0, sp, r2
 800c1cc:	9103      	str	r1, [sp, #12]
 800c1ce:	f7ff ffc8 	bl	800c162 <memcpy.isra.0>
 800c1d2:	2343      	movs	r3, #67	; 0x43
 800c1d4:	74a3      	strb	r3, [r4, #18]
 800c1d6:	682b      	ldr	r3, [r5, #0]
 800c1d8:	9903      	ldr	r1, [sp, #12]
 800c1da:	68db      	ldr	r3, [r3, #12]
 800c1dc:	4628      	mov	r0, r5
 800c1de:	4798      	blx	r3
 800c1e0:	232c      	movs	r3, #44	; 0x2c
 800c1e2:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c1e6:	2300      	movs	r3, #0
 800c1e8:	2210      	movs	r2, #16
 800c1ea:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800c1ee:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800c1f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c1f6:	2302      	movs	r3, #2
 800c1f8:	eb0d 0102 	add.w	r1, sp, r2
 800c1fc:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800c200:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c204:	f7ff ffad 	bl	800c162 <memcpy.isra.0>
 800c208:	2311      	movs	r3, #17
 800c20a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c20e:	2301      	movs	r3, #1
 800c210:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800c214:	682b      	ldr	r3, [r5, #0]
 800c216:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800c21a:	4628      	mov	r0, r5
 800c21c:	689b      	ldr	r3, [r3, #8]
 800c21e:	4798      	blx	r3
 800c220:	4b0b      	ldr	r3, [pc, #44]	; (800c250 <LLRPDevice::HandleRequestMessage()+0x98>)
 800c222:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800c226:	6818      	ldr	r0, [r3, #0]
 800c228:	f005 fe3c 	bl	8011ea4 <Network::MacAddressCopyTo(unsigned char*)>
 800c22c:	23ff      	movs	r3, #255	; 0xff
 800c22e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800c232:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c236:	9300      	str	r3, [sp, #0]
 800c238:	4806      	ldr	r0, [pc, #24]	; (800c254 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800c23a:	4b07      	ldr	r3, [pc, #28]	; (800c258 <LLRPDevice::HandleRequestMessage()+0xa0>)
 800c23c:	7800      	ldrb	r0, [r0, #0]
 800c23e:	681b      	ldr	r3, [r3, #0]
 800c240:	2253      	movs	r2, #83	; 0x53
 800c242:	4621      	mov	r1, r4
 800c244:	f005 f958 	bl	80114f8 <udp_send>
 800c248:	b009      	add	sp, #36	; 0x24
 800c24a:	bd30      	pop	{r4, r5, pc}
 800c24c:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c250:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800c254:	20000000 	andcs	r0, r0, r0
 800c258:	20000828 	andcs	r0, r0, r8, lsr #16

0800c25c <LLRPDevice::HandleRdmCommand()>:
 800c25c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c260:	4b23      	ldr	r3, [pc, #140]	; (800c2f0 <LLRPDevice::HandleRdmCommand()+0x94>)
 800c262:	681c      	ldr	r4, [r3, #0]
 800c264:	6803      	ldr	r3, [r0, #0]
 800c266:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800c26a:	691b      	ldr	r3, [r3, #16]
 800c26c:	b089      	sub	sp, #36	; 0x24
 800c26e:	4649      	mov	r1, r9
 800c270:	4607      	mov	r7, r0
 800c272:	4798      	blx	r3
 800c274:	4605      	mov	r5, r0
 800c276:	2800      	cmp	r0, #0
 800c278:	d036      	beq.n	800c2e8 <LLRPDevice::HandleRdmCommand()+0x8c>
 800c27a:	7803      	ldrb	r3, [r0, #0]
 800c27c:	2bcc      	cmp	r3, #204	; 0xcc
 800c27e:	d133      	bne.n	800c2e8 <LLRPDevice::HandleRdmCommand()+0x8c>
 800c280:	2210      	movs	r2, #16
 800c282:	eb0d 0002 	add.w	r0, sp, r2
 800c286:	f104 0117 	add.w	r1, r4, #23
 800c28a:	9103      	str	r1, [sp, #12]
 800c28c:	f7ff ff69 	bl	800c162 <memcpy.isra.0>
 800c290:	78ae      	ldrb	r6, [r5, #2]
 800c292:	9903      	ldr	r1, [sp, #12]
 800c294:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800c298:	fa5f f888 	uxtb.w	r8, r8
 800c29c:	f884 8012 	strb.w	r8, [r4, #18]
 800c2a0:	683b      	ldr	r3, [r7, #0]
 800c2a2:	4638      	mov	r0, r7
 800c2a4:	68db      	ldr	r3, [r3, #12]
 800c2a6:	4798      	blx	r3
 800c2a8:	f106 0320 	add.w	r3, r6, #32
 800c2ac:	2210      	movs	r2, #16
 800c2ae:	eb0d 0102 	add.w	r1, sp, r2
 800c2b2:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c2b6:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c2ba:	f7ff ff52 	bl	800c162 <memcpy.isra.0>
 800c2be:	1d73      	adds	r3, r6, #5
 800c2c0:	1c72      	adds	r2, r6, #1
 800c2c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c2c6:	b2d2      	uxtb	r2, r2
 800c2c8:	1c69      	adds	r1, r5, #1
 800c2ca:	4648      	mov	r0, r9
 800c2cc:	f7ff ff49 	bl	800c162 <memcpy.isra.0>
 800c2d0:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c2d4:	9300      	str	r3, [sp, #0]
 800c2d6:	4807      	ldr	r0, [pc, #28]	; (800c2f4 <LLRPDevice::HandleRdmCommand()+0x98>)
 800c2d8:	4b07      	ldr	r3, [pc, #28]	; (800c2f8 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800c2da:	7800      	ldrb	r0, [r0, #0]
 800c2dc:	681b      	ldr	r3, [r3, #0]
 800c2de:	f108 0210 	add.w	r2, r8, #16
 800c2e2:	4621      	mov	r1, r4
 800c2e4:	f005 f908 	bl	80114f8 <udp_send>
 800c2e8:	b009      	add	sp, #36	; 0x24
 800c2ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2ee:	bf00      	nop
 800c2f0:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c2f4:	20000000 	andcs	r0, r0, r0
 800c2f8:	20000828 	andcs	r0, r0, r8, lsr #16

0800c2fc <LLRPDevice::Run()>:
 800c2fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2fe:	4d0f      	ldr	r5, [pc, #60]	; (800c33c <LLRPDevice::Run()+0x40>)
 800c300:	4a0f      	ldr	r2, [pc, #60]	; (800c340 <LLRPDevice::Run()+0x44>)
 800c302:	4604      	mov	r4, r0
 800c304:	480f      	ldr	r0, [pc, #60]	; (800c344 <LLRPDevice::Run()+0x48>)
 800c306:	f10d 0306 	add.w	r3, sp, #6
 800c30a:	7800      	ldrb	r0, [r0, #0]
 800c30c:	4629      	mov	r1, r5
 800c30e:	f005 f8cd 	bl	80114ac <udp_recv2>
 800c312:	2841      	cmp	r0, #65	; 0x41
 800c314:	d908      	bls.n	800c328 <LLRPDevice::Run()+0x2c>
 800c316:	682b      	ldr	r3, [r5, #0]
 800c318:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800c31c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c320:	ba1a      	rev	r2, r3
 800c322:	d003      	beq.n	800c32c <LLRPDevice::Run()+0x30>
 800c324:	2a03      	cmp	r2, #3
 800c326:	d005      	beq.n	800c334 <LLRPDevice::Run()+0x38>
 800c328:	b003      	add	sp, #12
 800c32a:	bd30      	pop	{r4, r5, pc}
 800c32c:	4620      	mov	r0, r4
 800c32e:	f7ff ff43 	bl	800c1b8 <LLRPDevice::HandleRequestMessage()>
 800c332:	e7f9      	b.n	800c328 <LLRPDevice::Run()+0x2c>
 800c334:	4620      	mov	r0, r4
 800c336:	f7ff ff91 	bl	800c25c <LLRPDevice::HandleRdmCommand()>
 800c33a:	e7f5      	b.n	800c328 <LLRPDevice::Run()+0x2c>
 800c33c:	2000082c 	andcs	r0, r0, ip, lsr #16
 800c340:	20000820 	andcs	r0, r0, r0, lsr #16
 800c344:	20000000 	andcs	r0, r0, r0

0800c348 <LLRPDevice::Print()>:
 800c348:	b507      	push	{r0, r1, r2, lr}
 800c34a:	4811      	ldr	r0, [pc, #68]	; (800c390 <LLRPDevice::Print()+0x48>)
 800c34c:	f7fd ffc0 	bl	800a2d0 <printf>
 800c350:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800c354:	480f      	ldr	r0, [pc, #60]	; (800c394 <LLRPDevice::Print()+0x4c>)
 800c356:	f7fd ffbb 	bl	800a2d0 <printf>
 800c35a:	4b0f      	ldr	r3, [pc, #60]	; (800c398 <LLRPDevice::Print()+0x50>)
 800c35c:	480f      	ldr	r0, [pc, #60]	; (800c39c <LLRPDevice::Print()+0x54>)
 800c35e:	6819      	ldr	r1, [r3, #0]
 800c360:	0e0b      	lsrs	r3, r1, #24
 800c362:	9300      	str	r3, [sp, #0]
 800c364:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c368:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c36c:	b2c9      	uxtb	r1, r1
 800c36e:	f7fd ffaf 	bl	800a2d0 <printf>
 800c372:	4b0b      	ldr	r3, [pc, #44]	; (800c3a0 <LLRPDevice::Print()+0x58>)
 800c374:	480b      	ldr	r0, [pc, #44]	; (800c3a4 <LLRPDevice::Print()+0x5c>)
 800c376:	6819      	ldr	r1, [r3, #0]
 800c378:	0e0b      	lsrs	r3, r1, #24
 800c37a:	9300      	str	r3, [sp, #0]
 800c37c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c380:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c384:	b2c9      	uxtb	r1, r1
 800c386:	f7fd ffa3 	bl	800a2d0 <printf>
 800c38a:	b003      	add	sp, #12
 800c38c:	f85d fb04 	ldr.w	pc, [sp], #4
 800c390:	080183af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, pc}
 800c394:	080183ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, pc}
 800c398:	20000824 	andcs	r0, r0, r4, lsr #16
 800c39c:	080183e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, pc}
 800c3a0:	20000828 	andcs	r0, r0, r8, lsr #16
 800c3a4:	0801840f 	stmdaeq	r1, {r0, r1, r2, r3, sl, pc}

0800c3a8 <RDMNetDevice::Print()>:
 800c3a8:	b510      	push	{r4, lr}
 800c3aa:	b08a      	sub	sp, #40	; 0x28
 800c3ac:	2300      	movs	r3, #0
 800c3ae:	4604      	mov	r4, r0
 800c3b0:	4669      	mov	r1, sp
 800c3b2:	480a      	ldr	r0, [pc, #40]	; (800c3dc <RDMNetDevice::Print()+0x34>)
 800c3b4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c3b8:	f001 f94e 	bl	800d658 <uuid_unparse>
 800c3bc:	4808      	ldr	r0, [pc, #32]	; (800c3e0 <RDMNetDevice::Print()+0x38>)
 800c3be:	f7fd ff87 	bl	800a2d0 <printf>
 800c3c2:	4669      	mov	r1, sp
 800c3c4:	4807      	ldr	r0, [pc, #28]	; (800c3e4 <RDMNetDevice::Print()+0x3c>)
 800c3c6:	f7fd ff83 	bl	800a2d0 <printf>
 800c3ca:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800c3ce:	f7ff ffbb 	bl	800c348 <LLRPDevice::Print()>
 800c3d2:	4620      	mov	r0, r4
 800c3d4:	f000 fa3a 	bl	800c84c <RDMDeviceResponder::Print()>
 800c3d8:	b00a      	add	sp, #40	; 0x28
 800c3da:	bd10      	pop	{r4, pc}
 800c3dc:	2000092f 	andcs	r0, r0, pc, lsr #18
 800c3e0:	08018486 	stmdaeq	r1, {r1, r2, r7, sl, pc}
 800c3e4:	0801848e 	stmdaeq	r1, {r1, r2, r3, r7, sl, pc}

0800c3e8 <RDMSensors::RDMSensors()>:
 800c3e8:	2200      	movs	r2, #0
 800c3ea:	6002      	str	r2, [r0, #0]
 800c3ec:	7102      	strb	r2, [r0, #4]
 800c3ee:	4a01      	ldr	r2, [pc, #4]	; (800c3f4 <RDMSensors::RDMSensors()+0xc>)
 800c3f0:	6010      	str	r0, [r2, #0]
 800c3f2:	4770      	bx	lr
 800c3f4:	20000940 	andcs	r0, r0, r0, asr #18

0800c3f8 <RDMSensors::~RDMSensors()>:
 800c3f8:	b570      	push	{r4, r5, r6, lr}
 800c3fa:	2500      	movs	r5, #0
 800c3fc:	4604      	mov	r4, r0
 800c3fe:	462e      	mov	r6, r5
 800c400:	7923      	ldrb	r3, [r4, #4]
 800c402:	6820      	ldr	r0, [r4, #0]
 800c404:	42ab      	cmp	r3, r5
 800c406:	d804      	bhi.n	800c412 <RDMSensors::~RDMSensors()+0x1a>
 800c408:	b108      	cbz	r0, 800c40e <RDMSensors::~RDMSensors()+0x16>
 800c40a:	f008 f891 	bl	8014530 <operator delete[](void*)>
 800c40e:	4620      	mov	r0, r4
 800c410:	bd70      	pop	{r4, r5, r6, pc}
 800c412:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c416:	b128      	cbz	r0, 800c424 <RDMSensors::~RDMSensors()+0x2c>
 800c418:	6803      	ldr	r3, [r0, #0]
 800c41a:	685b      	ldr	r3, [r3, #4]
 800c41c:	4798      	blx	r3
 800c41e:	6823      	ldr	r3, [r4, #0]
 800c420:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800c424:	3501      	adds	r5, #1
 800c426:	e7eb      	b.n	800c400 <RDMSensors::~RDMSensors()+0x8>

0800c428 <RDMSubDevices::RDMSubDevices()>:
 800c428:	2200      	movs	r2, #0
 800c42a:	6002      	str	r2, [r0, #0]
 800c42c:	8082      	strh	r2, [r0, #4]
 800c42e:	4a01      	ldr	r2, [pc, #4]	; (800c434 <RDMSubDevices::RDMSubDevices()+0xc>)
 800c430:	6010      	str	r0, [r2, #0]
 800c432:	4770      	bx	lr
 800c434:	20000944 	andcs	r0, r0, r4, asr #18

0800c438 <RDMSubDevices::~RDMSubDevices()>:
 800c438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c43a:	2500      	movs	r5, #0
 800c43c:	4604      	mov	r4, r0
 800c43e:	462e      	mov	r6, r5
 800c440:	88a3      	ldrh	r3, [r4, #4]
 800c442:	6820      	ldr	r0, [r4, #0]
 800c444:	42ab      	cmp	r3, r5
 800c446:	d804      	bhi.n	800c452 <RDMSubDevices::~RDMSubDevices()+0x1a>
 800c448:	b108      	cbz	r0, 800c44e <RDMSubDevices::~RDMSubDevices()+0x16>
 800c44a:	f008 f871 	bl	8014530 <operator delete[](void*)>
 800c44e:	4620      	mov	r0, r4
 800c450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c452:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c456:	00af      	lsls	r7, r5, #2
 800c458:	b110      	cbz	r0, 800c460 <RDMSubDevices::~RDMSubDevices()+0x28>
 800c45a:	6803      	ldr	r3, [r0, #0]
 800c45c:	685b      	ldr	r3, [r3, #4]
 800c45e:	4798      	blx	r3
 800c460:	6823      	ldr	r3, [r4, #0]
 800c462:	3501      	adds	r5, #1
 800c464:	51de      	str	r6, [r3, r7]
 800c466:	e7eb      	b.n	800c440 <RDMSubDevices::~RDMSubDevices()+0x8>

0800c468 <RDMSubDevices::GetInfo(unsigned short)>:
 800c468:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800c46c:	6803      	ldr	r3, [r0, #0]
 800c46e:	3901      	subs	r1, #1
 800c470:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800c474:	3010      	adds	r0, #16
 800c476:	4770      	bx	lr

0800c478 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800c478:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800c47c:	6800      	ldr	r0, [r0, #0]
 800c47e:	3b01      	subs	r3, #1
 800c480:	4611      	mov	r1, r2
 800c482:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800c486:	f000 b830 	b.w	800c4ea <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800c48a <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800c48a:	b410      	push	{r4}
 800c48c:	460c      	mov	r4, r1
 800c48e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800c492:	3c01      	subs	r4, #1
 800c494:	6800      	ldr	r0, [r0, #0]
 800c496:	4611      	mov	r1, r2
 800c498:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c49c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4a0:	461a      	mov	r2, r3
 800c4a2:	f000 b837 	b.w	800c514 <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800c4a6 <RDMSubDevices::GetFactoryDefaults()>:
 800c4a6:	b538      	push	{r3, r4, r5, lr}
 800c4a8:	4605      	mov	r5, r0
 800c4aa:	2400      	movs	r4, #0
 800c4ac:	88ab      	ldrh	r3, [r5, #4]
 800c4ae:	42a3      	cmp	r3, r4
 800c4b0:	d801      	bhi.n	800c4b6 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800c4b2:	2001      	movs	r0, #1
 800c4b4:	e009      	b.n	800c4ca <RDMSubDevices::GetFactoryDefaults()+0x24>
 800c4b6:	682b      	ldr	r3, [r5, #0]
 800c4b8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c4bc:	b908      	cbnz	r0, 800c4c2 <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800c4be:	3401      	adds	r4, #1
 800c4c0:	e7f4      	b.n	800c4ac <RDMSubDevices::GetFactoryDefaults()+0x6>
 800c4c2:	f000 f85c 	bl	800c57e <RDMSubDevice::GetFactoryDefaults()>
 800c4c6:	2800      	cmp	r0, #0
 800c4c8:	d1f9      	bne.n	800c4be <RDMSubDevices::GetFactoryDefaults()+0x18>
 800c4ca:	bd38      	pop	{r3, r4, r5, pc}

0800c4cc <RDMSubDevices::SetFactoryDefaults()>:
 800c4cc:	b538      	push	{r3, r4, r5, lr}
 800c4ce:	4605      	mov	r5, r0
 800c4d0:	2400      	movs	r4, #0
 800c4d2:	88ab      	ldrh	r3, [r5, #4]
 800c4d4:	42a3      	cmp	r3, r4
 800c4d6:	d800      	bhi.n	800c4da <RDMSubDevices::SetFactoryDefaults()+0xe>
 800c4d8:	bd38      	pop	{r3, r4, r5, pc}
 800c4da:	682b      	ldr	r3, [r5, #0]
 800c4dc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c4e0:	b108      	cbz	r0, 800c4e6 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800c4e2:	f000 f826 	bl	800c532 <RDMSubDevice::SetFactoryDefaults()>
 800c4e6:	3401      	adds	r4, #1
 800c4e8:	e7f3      	b.n	800c4d2 <RDMSubDevices::SetFactoryDefaults()+0x6>

0800c4ea <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800c4ea:	f100 0316 	add.w	r3, r0, #22
 800c4ee:	600b      	str	r3, [r1, #0]
 800c4f0:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c4f4:	710b      	strb	r3, [r1, #4]
 800c4f6:	4770      	bx	lr

0800c4f8 <RDMSubDevice::SetLabel(char const*)>:
 800c4f8:	b510      	push	{r4, lr}
 800c4fa:	2300      	movs	r3, #0
 800c4fc:	f100 0415 	add.w	r4, r0, #21
 800c500:	5cca      	ldrb	r2, [r1, r3]
 800c502:	b122      	cbz	r2, 800c50e <RDMSubDevice::SetLabel(char const*)+0x16>
 800c504:	3301      	adds	r3, #1
 800c506:	2b20      	cmp	r3, #32
 800c508:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c50c:	d1f8      	bne.n	800c500 <RDMSubDevice::SetLabel(char const*)+0x8>
 800c50e:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c512:	bd10      	pop	{r4, pc}

0800c514 <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800c514:	b530      	push	{r4, r5, lr}
 800c516:	2300      	movs	r3, #0
 800c518:	f100 0415 	add.w	r4, r0, #21
 800c51c:	429a      	cmp	r2, r3
 800c51e:	d905      	bls.n	800c52c <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800c520:	5ccd      	ldrb	r5, [r1, r3]
 800c522:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c526:	3301      	adds	r3, #1
 800c528:	2b20      	cmp	r3, #32
 800c52a:	d1f7      	bne.n	800c51c <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800c52c:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c530:	bd30      	pop	{r4, r5, pc}

0800c532 <RDMSubDevice::SetFactoryDefaults()>:
 800c532:	7a03      	ldrb	r3, [r0, #8]
 800c534:	b510      	push	{r4, lr}
 800c536:	b94b      	cbnz	r3, 800c54c <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800c538:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800c53c:	f7ff ffdc 	bl	800c4f8 <RDMSubDevice::SetLabel(char const*)>
 800c540:	8983      	ldrh	r3, [r0, #12]
 800c542:	8243      	strh	r3, [r0, #18]
 800c544:	7b83      	ldrb	r3, [r0, #14]
 800c546:	7503      	strb	r3, [r0, #20]
 800c548:	2301      	movs	r3, #1
 800c54a:	7203      	strb	r3, [r0, #8]
 800c54c:	bd10      	pop	{r4, pc}

0800c54e <RDMSubDevice::CalculateChecksum()>:
 800c54e:	b510      	push	{r4, lr}
 800c550:	8a43      	ldrh	r3, [r0, #18]
 800c552:	7d02      	ldrb	r2, [r0, #20]
 800c554:	f890 4036 	ldrb.w	r4, [r0, #54]	; 0x36
 800c558:	4413      	add	r3, r2
 800c55a:	f100 0215 	add.w	r2, r0, #21
 800c55e:	f1c0 20ff 	rsb	r0, r0, #4278255360	; 0xff00ff00
 800c562:	f500 007f 	add.w	r0, r0, #16711680	; 0xff0000
 800c566:	b29b      	uxth	r3, r3
 800c568:	30eb      	adds	r0, #235	; 0xeb
 800c56a:	1881      	adds	r1, r0, r2
 800c56c:	428c      	cmp	r4, r1
 800c56e:	d801      	bhi.n	800c574 <RDMSubDevice::CalculateChecksum()+0x26>
 800c570:	4618      	mov	r0, r3
 800c572:	bd10      	pop	{r4, pc}
 800c574:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c578:	440b      	add	r3, r1
 800c57a:	b29b      	uxth	r3, r3
 800c57c:	e7f5      	b.n	800c56a <RDMSubDevice::CalculateChecksum()+0x1c>

0800c57e <RDMSubDevice::GetFactoryDefaults()>:
 800c57e:	7a03      	ldrb	r3, [r0, #8]
 800c580:	b510      	push	{r4, lr}
 800c582:	4604      	mov	r4, r0
 800c584:	b133      	cbz	r3, 800c594 <RDMSubDevice::GetFactoryDefaults()+0x16>
 800c586:	f7ff ffe2 	bl	800c54e <RDMSubDevice::CalculateChecksum()>
 800c58a:	8963      	ldrh	r3, [r4, #10]
 800c58c:	4283      	cmp	r3, r0
 800c58e:	bf1c      	itt	ne
 800c590:	2300      	movne	r3, #0
 800c592:	7223      	strbne	r3, [r4, #8]
 800c594:	7a20      	ldrb	r0, [r4, #8]
 800c596:	bd10      	pop	{r4, pc}

0800c598 <memcpy.isra.0>:
 800c598:	f008 b880 	b.w	801469c <memcpy>

0800c59c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800c59c:	b510      	push	{r4, lr}
 800c59e:	6001      	str	r1, [r0, #0]
 800c5a0:	2100      	movs	r1, #0
 800c5a2:	4604      	mov	r4, r0
 800c5a4:	6041      	str	r1, [r0, #4]
 800c5a6:	2220      	movs	r2, #32
 800c5a8:	3008      	adds	r0, #8
 800c5aa:	f008 f899 	bl	80146e0 <memset>
 800c5ae:	4b03      	ldr	r3, [pc, #12]	; (800c5bc <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800c5b0:	62a3      	str	r3, [r4, #40]	; 0x28
 800c5b2:	237f      	movs	r3, #127	; 0x7f
 800c5b4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c5b8:	4620      	mov	r0, r4
 800c5ba:	bd10      	pop	{r4, pc}
 800c5bc:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800c5c0 <RDMDeviceParams::Load()>:
 800c5c0:	4601      	mov	r1, r0
 800c5c2:	6800      	ldr	r0, [r0, #0]
 800c5c4:	b130      	cbz	r0, 800c5d4 <RDMDeviceParams::Load()+0x14>
 800c5c6:	b508      	push	{r3, lr}
 800c5c8:	6803      	ldr	r3, [r0, #0]
 800c5ca:	3104      	adds	r1, #4
 800c5cc:	68db      	ldr	r3, [r3, #12]
 800c5ce:	4798      	blx	r3
 800c5d0:	2001      	movs	r0, #1
 800c5d2:	bd08      	pop	{r3, pc}
 800c5d4:	4770      	bx	lr

0800c5d6 <RDMDeviceParams::Set(RDMDevice*)>:
 800c5d6:	6843      	ldr	r3, [r0, #4]
 800c5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5dc:	460c      	mov	r4, r1
 800c5de:	07d9      	lsls	r1, r3, #31
 800c5e0:	4605      	mov	r5, r0
 800c5e2:	d519      	bpl.n	800c618 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 800c5e4:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800c5e8:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c5ec:	2e20      	cmp	r6, #32
 800c5ee:	f100 0108 	add.w	r1, r0, #8
 800c5f2:	bf28      	it	cs
 800c5f4:	2620      	movcs	r6, #32
 800c5f6:	b1f3      	cbz	r3, 800c636 <RDMDeviceParams::Set(RDMDevice*)+0x60>
 800c5f8:	f104 070a 	add.w	r7, r4, #10
 800c5fc:	4638      	mov	r0, r7
 800c5fe:	4632      	mov	r2, r6
 800c600:	f7ff ffca 	bl	800c598 <memcpy.isra.0>
 800c604:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800c606:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800c60a:	b128      	cbz	r0, 800c618 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 800c60c:	6802      	ldr	r2, [r0, #0]
 800c60e:	4639      	mov	r1, r7
 800c610:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800c614:	4632      	mov	r2, r6
 800c616:	47c0      	blx	r8
 800c618:	686b      	ldr	r3, [r5, #4]
 800c61a:	079a      	lsls	r2, r3, #30
 800c61c:	bf44      	itt	mi
 800c61e:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800c622:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800c626:	075b      	lsls	r3, r3, #29
 800c628:	bf44      	itt	mi
 800c62a:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800c62e:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800c632:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c636:	4632      	mov	r2, r6
 800c638:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800c63c:	f7ff ffac 	bl	800c598 <memcpy.isra.0>
 800c640:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800c644:	e7e8      	b.n	800c618 <RDMDeviceParams::Set(RDMDevice*)+0x42>

0800c646 <RDMDeviceParams::Dump()>:
 800c646:	4770      	bx	lr

0800c648 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800c648:	4770      	bx	lr

0800c64a <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800c64a:	4770      	bx	lr

0800c64c <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c64c:	b510      	push	{r4, lr}
 800c64e:	4b06      	ldr	r3, [pc, #24]	; (800c668 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800c650:	4604      	mov	r4, r0
 800c652:	f840 3b88 	str.w	r3, [r0], #136
 800c656:	f7ff feef 	bl	800c438 <RDMSubDevices::~RDMSubDevices()>
 800c65a:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c65e:	f7ff fecb 	bl	800c3f8 <RDMSensors::~RDMSensors()>
 800c662:	4620      	mov	r0, r4
 800c664:	bd10      	pop	{r4, pc}
 800c666:	bf00      	nop
 800c668:	08018558 	stmdaeq	r1, {r3, r4, r6, r8, sl, pc}

0800c66c <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c66c:	b510      	push	{r4, lr}
 800c66e:	4604      	mov	r4, r0
 800c670:	f7ff ffec 	bl	800c64c <RDMDeviceResponder::~RDMDeviceResponder()>
 800c674:	4620      	mov	r0, r4
 800c676:	f007 ff59 	bl	801452c <operator delete(void*)>
 800c67a:	4620      	mov	r0, r4
 800c67c:	bd10      	pop	{r4, pc}
	...

0800c680 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800c680:	b570      	push	{r4, r5, r6, lr}
 800c682:	4604      	mov	r4, r0
 800c684:	3004      	adds	r0, #4
 800c686:	460e      	mov	r6, r1
 800c688:	4615      	mov	r5, r2
 800c68a:	f000 feed 	bl	800d468 <RDMDevice::RDMDevice()>
 800c68e:	4620      	mov	r0, r4
 800c690:	4b21      	ldr	r3, [pc, #132]	; (800c718 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800c692:	f840 3b7c 	str.w	r3, [r0], #124
 800c696:	f000 fcf7 	bl	800d088 <RDMIdentify::RDMIdentify()>
 800c69a:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c69e:	f7ff fea3 	bl	800c3e8 <RDMSensors::RDMSensors()>
 800c6a2:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800c6a6:	f7ff febf 	bl	800c428 <RDMSubDevices::RDMSubDevices()>
 800c6aa:	4b1c      	ldr	r3, [pc, #112]	; (800c71c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800c6ac:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800c6b0:	601c      	str	r4, [r3, #0]
 800c6b2:	2365      	movs	r3, #101	; 0x65
 800c6b4:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800c6b8:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800c6bc:	2200      	movs	r2, #0
 800c6be:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800c6c2:	2301      	movs	r3, #1
 800c6c4:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800c6c8:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800c6cc:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800c6d0:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800c6d4:	428b      	cmp	r3, r1
 800c6d6:	d119      	bne.n	800c70c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800c6d8:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800c6dc:	2100      	movs	r1, #0
 800c6de:	4293      	cmp	r3, r2
 800c6e0:	d117      	bne.n	800c712 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800c6e2:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800c6e6:	f7fd faf3 	bl	8009cd0 <RDMSoftwareVersion::GetVersion()>
 800c6ea:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800c6ee:	f7fd faf3 	bl	8009cd8 <RDMSoftwareVersion::GetVersionLength()>
 800c6f2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c6f6:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800c6fa:	681b      	ldr	r3, [r3, #0]
 800c6fc:	685b      	ldr	r3, [r3, #4]
 800c6fe:	b91b      	cbnz	r3, 800c708 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800c700:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c704:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800c708:	4620      	mov	r0, r4
 800c70a:	bd70      	pop	{r4, r5, r6, pc}
 800c70c:	f803 2b01 	strb.w	r2, [r3], #1
 800c710:	e7e0      	b.n	800c6d4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800c712:	f803 1b01 	strb.w	r1, [r3], #1
 800c716:	e7e2      	b.n	800c6de <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800c718:	08018558 	stmdaeq	r1, {r3, r4, r6, r8, sl, pc}
 800c71c:	20000948 	andcs	r0, r0, r8, asr #18

0800c720 <RDMDeviceResponder::Init()>:
 800c720:	b570      	push	{r4, r5, r6, lr}
 800c722:	2301      	movs	r3, #1
 800c724:	4604      	mov	r4, r0
 800c726:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800c72a:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800c72e:	2a20      	cmp	r2, #32
 800c730:	bf28      	it	cs
 800c732:	2220      	movcs	r2, #32
 800c734:	3055      	adds	r0, #85	; 0x55
 800c736:	f104 010e 	add.w	r1, r4, #14
 800c73a:	4613      	mov	r3, r2
 800c73c:	3b01      	subs	r3, #1
 800c73e:	d25d      	bcs.n	800c7fc <RDMDeviceResponder::Init()+0xdc>
 800c740:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800c742:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800c746:	b110      	cbz	r0, 800c74e <RDMDeviceResponder::Init()+0x2e>
 800c748:	6803      	ldr	r3, [r0, #0]
 800c74a:	689b      	ldr	r3, [r3, #8]
 800c74c:	4798      	blx	r3
 800c74e:	f06f 050c 	mvn.w	r5, #12
 800c752:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c756:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800c75a:	f104 020d 	add.w	r2, r4, #13
 800c75e:	1b2d      	subs	r5, r5, r4
 800c760:	18a9      	adds	r1, r5, r2
 800c762:	4288      	cmp	r0, r1
 800c764:	d84f      	bhi.n	800c806 <RDMDeviceResponder::Init()+0xe6>
 800c766:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800c76a:	f7fd fab7 	bl	8009cdc <RDMSoftwareVersion::GetVersionId()>
 800c76e:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800c772:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800c776:	2201      	movs	r2, #1
 800c778:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800c77c:	2200      	movs	r2, #0
 800c77e:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800c782:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800c786:	0a1a      	lsrs	r2, r3, #8
 800c788:	0e03      	lsrs	r3, r0, #24
 800c78a:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800c78e:	0c03      	lsrs	r3, r0, #16
 800c790:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800c794:	0a03      	lsrs	r3, r0, #8
 800c796:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800c79a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c79e:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800c7a2:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800c7a6:	681b      	ldr	r3, [r3, #0]
 800c7a8:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800c7ac:	685d      	ldr	r5, [r3, #4]
 800c7ae:	bb7d      	cbnz	r5, 800c810 <RDMDeviceResponder::Init()+0xf0>
 800c7b0:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800c7b4:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800c7b8:	0a03      	lsrs	r3, r0, #8
 800c7ba:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800c7be:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800c7c2:	2301      	movs	r3, #1
 800c7c4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c7c8:	0a33      	lsrs	r3, r6, #8
 800c7ca:	b2c0      	uxtb	r0, r0
 800c7cc:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c7d0:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800c7d4:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800c7d8:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c7dc:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800c7e0:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800c7e4:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800c7e8:	4293      	cmp	r3, r2
 800c7ea:	d12a      	bne.n	800c842 <RDMDeviceResponder::Init()+0x122>
 800c7ec:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c7f0:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800c7f4:	4413      	add	r3, r2
 800c7f6:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800c7fa:	bd70      	pop	{r4, r5, r6, pc}
 800c7fc:	f810 5b01 	ldrb.w	r5, [r0], #1
 800c800:	f800 5c48 	strb.w	r5, [r0, #-72]
 800c804:	e79a      	b.n	800c73c <RDMDeviceResponder::Init()+0x1c>
 800c806:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c80a:	440b      	add	r3, r1
 800c80c:	b29b      	uxth	r3, r3
 800c80e:	e7a7      	b.n	800c760 <RDMDeviceResponder::Init()+0x40>
 800c810:	682b      	ldr	r3, [r5, #0]
 800c812:	4628      	mov	r0, r5
 800c814:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c816:	4798      	blx	r3
 800c818:	0a00      	lsrs	r0, r0, #8
 800c81a:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800c81e:	682b      	ldr	r3, [r5, #0]
 800c820:	4628      	mov	r0, r5
 800c822:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c824:	4798      	blx	r3
 800c826:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800c82a:	682b      	ldr	r3, [r5, #0]
 800c82c:	4628      	mov	r0, r5
 800c82e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c830:	4798      	blx	r3
 800c832:	0a00      	lsrs	r0, r0, #8
 800c834:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c838:	682b      	ldr	r3, [r5, #0]
 800c83a:	4628      	mov	r0, r5
 800c83c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c83e:	4798      	blx	r3
 800c840:	e7bf      	b.n	800c7c2 <RDMDeviceResponder::Init()+0xa2>
 800c842:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c846:	7499      	strb	r1, [r3, #18]
 800c848:	e7ce      	b.n	800c7e8 <RDMDeviceResponder::Init()+0xc8>
	...

0800c84c <RDMDeviceResponder::Print()>:
 800c84c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c84e:	4604      	mov	r4, r0
 800c850:	3004      	adds	r0, #4
 800c852:	f000 fe7b 	bl	800d54c <RDMDevice::Print()>
 800c856:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c85a:	481c      	ldr	r0, [pc, #112]	; (800c8cc <RDMDeviceResponder::Print()+0x80>)
 800c85c:	681d      	ldr	r5, [r3, #0]
 800c85e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800c860:	f7fd fd36 	bl	800a2d0 <printf>
 800c864:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800c868:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800c86c:	4818      	ldr	r0, [pc, #96]	; (800c8d0 <RDMDeviceResponder::Print()+0x84>)
 800c86e:	f7fd fd2f 	bl	800a2d0 <printf>
 800c872:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c876:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800c87a:	4816      	ldr	r0, [pc, #88]	; (800c8d4 <RDMDeviceResponder::Print()+0x88>)
 800c87c:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c880:	f7fd fd26 	bl	800a2d0 <printf>
 800c884:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800c888:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800c88c:	4812      	ldr	r0, [pc, #72]	; (800c8d8 <RDMDeviceResponder::Print()+0x8c>)
 800c88e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c892:	3508      	adds	r5, #8
 800c894:	f7fd fd1c 	bl	800a2d0 <printf>
 800c898:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800c89c:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800c8a0:	9500      	str	r5, [sp, #0]
 800c8a2:	b2f3      	uxtb	r3, r6
 800c8a4:	480d      	ldr	r0, [pc, #52]	; (800c8dc <RDMDeviceResponder::Print()+0x90>)
 800c8a6:	f7fd fd13 	bl	800a2d0 <printf>
 800c8aa:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800c8ae:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800c8b2:	480b      	ldr	r0, [pc, #44]	; (800c8e0 <RDMDeviceResponder::Print()+0x94>)
 800c8b4:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c8b8:	f7fd fd0a 	bl	800a2d0 <printf>
 800c8bc:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800c8c0:	4808      	ldr	r0, [pc, #32]	; (800c8e4 <RDMDeviceResponder::Print()+0x98>)
 800c8c2:	b002      	add	sp, #8
 800c8c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8c8:	f7fd bd02 	b.w	800a2d0 <printf>
 800c8cc:	08018499 	stmdaeq	r1, {r0, r3, r4, r7, sl, pc}
 800c8d0:	080184b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, pc}
 800c8d4:	080184cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, pc}
 800c8d8:	080184e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, pc}
 800c8dc:	080184ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, sl, pc}
 800c8e0:	0801851d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, pc}
 800c8e4:	08018535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, pc}

0800c8e8 <memcmp>:
 800c8e8:	b510      	push	{r4, lr}
 800c8ea:	3901      	subs	r1, #1
 800c8ec:	4402      	add	r2, r0
 800c8ee:	4290      	cmp	r0, r2
 800c8f0:	d101      	bne.n	800c8f6 <memcmp+0xe>
 800c8f2:	2000      	movs	r0, #0
 800c8f4:	e005      	b.n	800c902 <memcmp+0x1a>
 800c8f6:	7803      	ldrb	r3, [r0, #0]
 800c8f8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c8fc:	42a3      	cmp	r3, r4
 800c8fe:	d001      	beq.n	800c904 <memcmp+0x1c>
 800c900:	1b18      	subs	r0, r3, r4
 800c902:	bd10      	pop	{r4, pc}
 800c904:	3001      	adds	r0, #1
 800c906:	e7f2      	b.n	800c8ee <memcmp+0x6>

0800c908 <memcpy.isra.0>:
 800c908:	3801      	subs	r0, #1
 800c90a:	440a      	add	r2, r1
 800c90c:	4291      	cmp	r1, r2
 800c90e:	d100      	bne.n	800c912 <memcpy.isra.0+0xa>
 800c910:	4770      	bx	lr
 800c912:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c916:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c91a:	e7f7      	b.n	800c90c <memcpy.isra.0+0x4>

0800c91c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800c91c:	b570      	push	{r4, r5, r6, lr}
 800c91e:	790d      	ldrb	r5, [r1, #4]
 800c920:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800c924:	6809      	ldr	r1, [r1, #0]
 800c926:	2d20      	cmp	r5, #32
 800c928:	4604      	mov	r4, r0
 800c92a:	bf28      	it	cs
 800c92c:	2520      	movcs	r5, #32
 800c92e:	b18b      	cbz	r3, 800c954 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800c930:	f100 060a 	add.w	r6, r0, #10
 800c934:	4630      	mov	r0, r6
 800c936:	462a      	mov	r2, r5
 800c938:	f7ff ffe6 	bl	800c908 <memcpy.isra.0>
 800c93c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800c93e:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800c942:	b168      	cbz	r0, 800c960 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 800c944:	6802      	ldr	r2, [r0, #0]
 800c946:	6894      	ldr	r4, [r2, #8]
 800c948:	4631      	mov	r1, r6
 800c94a:	462a      	mov	r2, r5
 800c94c:	4623      	mov	r3, r4
 800c94e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c952:	4718      	bx	r3
 800c954:	462a      	mov	r2, r5
 800c956:	3051      	adds	r0, #81	; 0x51
 800c958:	f7ff ffd6 	bl	800c908 <memcpy.isra.0>
 800c95c:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800c960:	bd70      	pop	{r4, r5, r6, pc}

0800c962 <RDMDeviceResponder::SetFactoryDefaults()>:
 800c962:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c964:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800c968:	4604      	mov	r4, r0
 800c96a:	9300      	str	r3, [sp, #0]
 800c96c:	3004      	adds	r0, #4
 800c96e:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 800c972:	f88d 3004 	strb.w	r3, [sp, #4]
 800c976:	4669      	mov	r1, sp
 800c978:	f7ff ffd0 	bl	800c91c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c97c:	f06f 050c 	mvn.w	r5, #12
 800c980:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c984:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800c988:	f104 020d 	add.w	r2, r4, #13
 800c98c:	1b2d      	subs	r5, r5, r4
 800c98e:	18a9      	adds	r1, r5, r2
 800c990:	4288      	cmp	r0, r1
 800c992:	d865      	bhi.n	800ca60 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800c994:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800c998:	2301      	movs	r3, #1
 800c99a:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c99e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c9a2:	681b      	ldr	r3, [r3, #0]
 800c9a4:	685d      	ldr	r5, [r3, #4]
 800c9a6:	b1f5      	cbz	r5, 800c9e6 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800c9a8:	682b      	ldr	r3, [r5, #0]
 800c9aa:	4628      	mov	r0, r5
 800c9ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c9ae:	4798      	blx	r3
 800c9b0:	0a00      	lsrs	r0, r0, #8
 800c9b2:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800c9b6:	682b      	ldr	r3, [r5, #0]
 800c9b8:	4628      	mov	r0, r5
 800c9ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c9bc:	4798      	blx	r3
 800c9be:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800c9c2:	682b      	ldr	r3, [r5, #0]
 800c9c4:	4628      	mov	r0, r5
 800c9c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9c8:	4798      	blx	r3
 800c9ca:	0a00      	lsrs	r0, r0, #8
 800c9cc:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c9d0:	682b      	ldr	r3, [r5, #0]
 800c9d2:	4628      	mov	r0, r5
 800c9d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9d6:	4798      	blx	r3
 800c9d8:	6823      	ldr	r3, [r4, #0]
 800c9da:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c9de:	689b      	ldr	r3, [r3, #8]
 800c9e0:	4629      	mov	r1, r5
 800c9e2:	4620      	mov	r0, r4
 800c9e4:	4798      	blx	r3
 800c9e6:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800c9ea:	1e6b      	subs	r3, r5, #1
 800c9ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c9f0:	d218      	bcs.n	800ca24 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800c9f2:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800c9f6:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800c9fa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800c9fe:	3b01      	subs	r3, #1
 800ca00:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ca04:	6858      	ldr	r0, [r3, #4]
 800ca06:	b168      	cbz	r0, 800ca24 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800ca08:	6803      	ldr	r3, [r0, #0]
 800ca0a:	4629      	mov	r1, r5
 800ca0c:	6a1b      	ldr	r3, [r3, #32]
 800ca0e:	4798      	blx	r3
 800ca10:	b120      	cbz	r0, 800ca1c <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800ca12:	0a2b      	lsrs	r3, r5, #8
 800ca14:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800ca18:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800ca1c:	6823      	ldr	r3, [r4, #0]
 800ca1e:	4620      	mov	r0, r4
 800ca20:	68db      	ldr	r3, [r3, #12]
 800ca22:	4798      	blx	r3
 800ca24:	2213      	movs	r2, #19
 800ca26:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800ca2a:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800ca2e:	f7ff ff6b 	bl	800c908 <memcpy.isra.0>
 800ca32:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ca36:	f7ff fd49 	bl	800c4cc <RDMSubDevices::SetFactoryDefaults()>
 800ca3a:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ca3e:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800ca42:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800ca46:	4413      	add	r3, r2
 800ca48:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800ca4c:	2301      	movs	r3, #1
 800ca4e:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800ca52:	b150      	cbz	r0, 800ca6a <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800ca54:	6803      	ldr	r3, [r0, #0]
 800ca56:	689b      	ldr	r3, [r3, #8]
 800ca58:	b003      	add	sp, #12
 800ca5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca5e:	4718      	bx	r3
 800ca60:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ca64:	440b      	add	r3, r1
 800ca66:	b29b      	uxth	r3, r3
 800ca68:	e791      	b.n	800c98e <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800ca6a:	b003      	add	sp, #12
 800ca6c:	bd30      	pop	{r4, r5, pc}

0800ca6e <RDMHandler::RDMHandler(bool)>:
 800ca6e:	2200      	movs	r2, #0
 800ca70:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800ca74:	7001      	strb	r1, [r0, #0]
 800ca76:	7042      	strb	r2, [r0, #1]
 800ca78:	4770      	bx	lr

0800ca7a <RDMHandler::HandleString(char const*, unsigned int)>:
 800ca7a:	6883      	ldr	r3, [r0, #8]
 800ca7c:	f803 2f17 	strb.w	r2, [r3, #23]!
 800ca80:	440a      	add	r2, r1
 800ca82:	4291      	cmp	r1, r2
 800ca84:	d100      	bne.n	800ca88 <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800ca86:	4770      	bx	lr
 800ca88:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ca8c:	f803 0f01 	strb.w	r0, [r3, #1]!
 800ca90:	e7f7      	b.n	800ca82 <RDMHandler::HandleString(char const*, unsigned int)+0x8>
	...

0800ca94 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800ca94:	b570      	push	{r4, r5, r6, lr}
 800ca96:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800ca9a:	25cc      	movs	r5, #204	; 0xcc
 800ca9c:	701d      	strb	r5, [r3, #0]
 800ca9e:	7825      	ldrb	r5, [r4, #0]
 800caa0:	705d      	strb	r5, [r3, #1]
 800caa2:	7ba5      	ldrb	r5, [r4, #14]
 800caa4:	73dd      	strb	r5, [r3, #15]
 800caa6:	2500      	movs	r5, #0
 800caa8:	745d      	strb	r5, [r3, #17]
 800caaa:	7c65      	ldrb	r5, [r4, #17]
 800caac:	749d      	strb	r5, [r3, #18]
 800caae:	7ca5      	ldrb	r5, [r4, #18]
 800cab0:	74dd      	strb	r5, [r3, #19]
 800cab2:	7ce5      	ldrb	r5, [r4, #19]
 800cab4:	3501      	adds	r5, #1
 800cab6:	751d      	strb	r5, [r3, #20]
 800cab8:	7d25      	ldrb	r5, [r4, #20]
 800caba:	755d      	strb	r5, [r3, #21]
 800cabc:	7d65      	ldrb	r5, [r4, #21]
 800cabe:	759d      	strb	r5, [r3, #22]
 800cac0:	b119      	cbz	r1, 800caca <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800cac2:	1e4d      	subs	r5, r1, #1
 800cac4:	2d01      	cmp	r5, #1
 800cac6:	d921      	bls.n	800cb0c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800cac8:	bd70      	pop	{r4, r5, r6, pc}
 800caca:	7dda      	ldrb	r2, [r3, #23]
 800cacc:	7419      	strb	r1, [r3, #16]
 800cace:	3218      	adds	r2, #24
 800cad0:	709a      	strb	r2, [r3, #2]
 800cad2:	4a15      	ldr	r2, [pc, #84]	; (800cb28 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800cad4:	6812      	ldr	r2, [r2, #0]
 800cad6:	1de1      	adds	r1, r4, #7
 800cad8:	1c9d      	adds	r5, r3, #2
 800cada:	3203      	adds	r2, #3
 800cadc:	340d      	adds	r4, #13
 800cade:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800cae2:	f805 6f01 	strb.w	r6, [r5, #1]!
 800cae6:	42a1      	cmp	r1, r4
 800cae8:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800caec:	71ae      	strb	r6, [r5, #6]
 800caee:	d1f6      	bne.n	800cade <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800caf0:	2200      	movs	r2, #0
 800caf2:	6884      	ldr	r4, [r0, #8]
 800caf4:	7899      	ldrb	r1, [r3, #2]
 800caf6:	4613      	mov	r3, r2
 800caf8:	428a      	cmp	r2, r1
 800cafa:	eb04 0502 	add.w	r5, r4, r2
 800cafe:	d30e      	bcc.n	800cb1e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800cb00:	0a1a      	lsrs	r2, r3, #8
 800cb02:	702a      	strb	r2, [r5, #0]
 800cb04:	6882      	ldr	r2, [r0, #8]
 800cb06:	440a      	add	r2, r1
 800cb08:	7053      	strb	r3, [r2, #1]
 800cb0a:	e7dd      	b.n	800cac8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800cb0c:	7419      	strb	r1, [r3, #16]
 800cb0e:	2102      	movs	r1, #2
 800cb10:	251a      	movs	r5, #26
 800cb12:	75d9      	strb	r1, [r3, #23]
 800cb14:	0a11      	lsrs	r1, r2, #8
 800cb16:	709d      	strb	r5, [r3, #2]
 800cb18:	7619      	strb	r1, [r3, #24]
 800cb1a:	765a      	strb	r2, [r3, #25]
 800cb1c:	e7d9      	b.n	800cad2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800cb1e:	5ca5      	ldrb	r5, [r4, r2]
 800cb20:	442b      	add	r3, r5
 800cb22:	b29b      	uxth	r3, r3
 800cb24:	3201      	adds	r2, #1
 800cb26:	e7e7      	b.n	800caf8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800cb28:	20000948 	andcs	r0, r0, r8, asr #18

0800cb2c <RDMHandler::RespondMessageAck()>:
 800cb2c:	6843      	ldr	r3, [r0, #4]
 800cb2e:	7d9a      	ldrb	r2, [r3, #22]
 800cb30:	b90a      	cbnz	r2, 800cb36 <RDMHandler::RespondMessageAck()+0xa>
 800cb32:	2218      	movs	r2, #24
 800cb34:	705a      	strb	r2, [r3, #1]
 800cb36:	2200      	movs	r2, #0
 800cb38:	4611      	mov	r1, r2
 800cb3a:	f7ff bfab 	b.w	800ca94 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800cb40 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800cb40:	b538      	push	{r3, r4, r5, lr}
 800cb42:	4b18      	ldr	r3, [pc, #96]	; (800cba4 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800cb44:	4605      	mov	r5, r0
 800cb46:	681c      	ldr	r4, [r3, #0]
 800cb48:	b349      	cbz	r1, 800cb9e <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800cb4a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800cb4e:	f7ff fc8b 	bl	800c468 <RDMSubDevices::GetInfo(unsigned short)>
 800cb52:	b1b8      	cbz	r0, 800cb84 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800cb54:	8803      	ldrh	r3, [r0, #0]
 800cb56:	0a1b      	lsrs	r3, r3, #8
 800cb58:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800cb5c:	8803      	ldrh	r3, [r0, #0]
 800cb5e:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800cb62:	7903      	ldrb	r3, [r0, #4]
 800cb64:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800cb68:	7943      	ldrb	r3, [r0, #5]
 800cb6a:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800cb6e:	8843      	ldrh	r3, [r0, #2]
 800cb70:	0a1b      	lsrs	r3, r3, #8
 800cb72:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800cb76:	8843      	ldrh	r3, [r0, #2]
 800cb78:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800cb7c:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800cb80:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800cb84:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800cb88:	68a8      	ldr	r0, [r5, #8]
 800cb8a:	2213      	movs	r2, #19
 800cb8c:	75c2      	strb	r2, [r0, #23]
 800cb8e:	3018      	adds	r0, #24
 800cb90:	f7ff feba 	bl	800c908 <memcpy.isra.0>
 800cb94:	4628      	mov	r0, r5
 800cb96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cb9a:	f7ff bfc7 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cb9e:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800cba2:	e7f1      	b.n	800cb88 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800cba4:	20000948 	andcs	r0, r0, r8, asr #18

0800cba8 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800cba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbaa:	6886      	ldr	r6, [r0, #8]
 800cbac:	2301      	movs	r3, #1
 800cbae:	75f3      	strb	r3, [r6, #23]
 800cbb0:	4b1c      	ldr	r3, [pc, #112]	; (800cc24 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800cbb2:	681c      	ldr	r4, [r3, #0]
 800cbb4:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800cbb8:	4605      	mov	r5, r0
 800cbba:	b37b      	cbz	r3, 800cc1c <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800cbbc:	f06f 0c0c 	mvn.w	ip, #12
 800cbc0:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800cbc4:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800cbc8:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800cbcc:	f104 020d 	add.w	r2, r4, #13
 800cbd0:	ebac 0c04 	sub.w	ip, ip, r4
 800cbd4:	eb0c 0702 	add.w	r7, ip, r2
 800cbd8:	4287      	cmp	r7, r0
 800cbda:	d30a      	bcc.n	800cbf2 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800cbdc:	4299      	cmp	r1, r3
 800cbde:	d00d      	beq.n	800cbfc <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800cbe0:	2300      	movs	r3, #0
 800cbe2:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800cbe6:	7633      	strb	r3, [r6, #24]
 800cbe8:	4628      	mov	r0, r5
 800cbea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cbee:	f7ff bf9d 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cbf2:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800cbf6:	443b      	add	r3, r7
 800cbf8:	b29b      	uxth	r3, r3
 800cbfa:	e7eb      	b.n	800cbd4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800cbfc:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800cc00:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800cc04:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800cc08:	440b      	add	r3, r1
 800cc0a:	429a      	cmp	r2, r3
 800cc0c:	d1e8      	bne.n	800cbe0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800cc0e:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800cc12:	f7ff fc48 	bl	800c4a6 <RDMSubDevices::GetFactoryDefaults()>
 800cc16:	4603      	mov	r3, r0
 800cc18:	2800      	cmp	r0, #0
 800cc1a:	d0e2      	beq.n	800cbe2 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800cc1c:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800cc20:	e7e1      	b.n	800cbe6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800cc22:	bf00      	nop
 800cc24:	20000948 	andcs	r0, r0, r8, asr #18

0800cc28 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800cc28:	b510      	push	{r4, lr}
 800cc2a:	4905      	ldr	r1, [pc, #20]	; (800cc40 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800cc2c:	4604      	mov	r4, r0
 800cc2e:	220a      	movs	r2, #10
 800cc30:	f7ff ff23 	bl	800ca7a <RDMHandler::HandleString(char const*, unsigned int)>
 800cc34:	4620      	mov	r0, r4
 800cc36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc3a:	f7ff bf77 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cc3e:	bf00      	nop
 800cc40:	08017548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp, lr}

0800cc44 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800cc44:	b510      	push	{r4, lr}
 800cc46:	4b06      	ldr	r3, [pc, #24]	; (800cc60 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800cc48:	6819      	ldr	r1, [r3, #0]
 800cc4a:	4604      	mov	r4, r0
 800cc4c:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800cc50:	312f      	adds	r1, #47	; 0x2f
 800cc52:	f7ff ff12 	bl	800ca7a <RDMHandler::HandleString(char const*, unsigned int)>
 800cc56:	4620      	mov	r0, r4
 800cc58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc5c:	f7ff bf66 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cc60:	20000948 	andcs	r0, r0, r8, asr #18

0800cc64 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800cc64:	4b0d      	ldr	r3, [pc, #52]	; (800cc9c <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800cc66:	b513      	push	{r0, r1, r4, lr}
 800cc68:	4604      	mov	r4, r0
 800cc6a:	6818      	ldr	r0, [r3, #0]
 800cc6c:	b171      	cbz	r1, 800cc8c <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800cc6e:	466a      	mov	r2, sp
 800cc70:	3088      	adds	r0, #136	; 0x88
 800cc72:	f7ff fc01 	bl	800c478 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800cc76:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800cc7a:	9900      	ldr	r1, [sp, #0]
 800cc7c:	4620      	mov	r0, r4
 800cc7e:	f7ff fefc 	bl	800ca7a <RDMHandler::HandleString(char const*, unsigned int)>
 800cc82:	4620      	mov	r0, r4
 800cc84:	f7ff ff52 	bl	800cb2c <RDMHandler::RespondMessageAck()>
 800cc88:	b002      	add	sp, #8
 800cc8a:	bd10      	pop	{r4, pc}
 800cc8c:	f100 030e 	add.w	r3, r0, #14
 800cc90:	9300      	str	r3, [sp, #0]
 800cc92:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800cc96:	f88d 3004 	strb.w	r3, [sp, #4]
 800cc9a:	e7ec      	b.n	800cc76 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800cc9c:	20000948 	andcs	r0, r0, r8, asr #18

0800cca0 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800cca0:	6883      	ldr	r3, [r0, #8]
 800cca2:	2201      	movs	r2, #1
 800cca4:	75da      	strb	r2, [r3, #23]
 800cca6:	4a02      	ldr	r2, [pc, #8]	; (800ccb0 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800cca8:	7812      	ldrb	r2, [r2, #0]
 800ccaa:	761a      	strb	r2, [r3, #24]
 800ccac:	f7ff bf3e 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800ccb0:	2000094c 	andcs	r0, r0, ip, asr #18

0800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>:
 800ccb4:	460a      	mov	r2, r1
 800ccb6:	2102      	movs	r1, #2
 800ccb8:	f7ff beec 	b.w	800ca94 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800ccbc <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800ccbc:	b510      	push	{r4, lr}
 800ccbe:	6843      	ldr	r3, [r0, #4]
 800ccc0:	7d9a      	ldrb	r2, [r3, #22]
 800ccc2:	2a01      	cmp	r2, #1
 800ccc4:	4604      	mov	r4, r0
 800ccc6:	d004      	beq.n	800ccd2 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800ccc8:	2101      	movs	r1, #1
 800ccca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ccce:	f7ff bff1 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800ccd2:	7ddb      	ldrb	r3, [r3, #23]
 800ccd4:	2b01      	cmp	r3, #1
 800ccd6:	d003      	beq.n	800cce0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800ccd8:	2bff      	cmp	r3, #255	; 0xff
 800ccda:	d001      	beq.n	800cce0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800ccdc:	2106      	movs	r1, #6
 800ccde:	e7f4      	b.n	800ccca <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800cce0:	68a2      	ldr	r2, [r4, #8]
 800cce2:	2100      	movs	r1, #0
 800cce4:	2bff      	cmp	r3, #255	; 0xff
 800cce6:	75d1      	strb	r1, [r2, #23]
 800cce8:	d102      	bne.n	800ccf0 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800ccea:	2104      	movs	r1, #4
 800ccec:	4620      	mov	r0, r4
 800ccee:	e7ec      	b.n	800ccca <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800ccf0:	4b03      	ldr	r3, [pc, #12]	; (800cd00 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800ccf2:	6818      	ldr	r0, [r3, #0]
 800ccf4:	f007 fbdc 	bl	80144b0 <Hardware::Reboot()>
 800ccf8:	2800      	cmp	r0, #0
 800ccfa:	d0f6      	beq.n	800ccea <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800ccfc:	bd10      	pop	{r4, pc}
 800ccfe:	bf00      	nop
 800cd00:	2000fee8 	andcs	pc, r0, r8, ror #29

0800cd04 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800cd04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd06:	6843      	ldr	r3, [r0, #4]
 800cd08:	460d      	mov	r5, r1
 800cd0a:	7d99      	ldrb	r1, [r3, #22]
 800cd0c:	2901      	cmp	r1, #1
 800cd0e:	4604      	mov	r4, r0
 800cd10:	d004      	beq.n	800cd1c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800cd12:	2101      	movs	r1, #1
 800cd14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cd18:	f7ff bfcc 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cd1c:	7ddb      	ldrb	r3, [r3, #23]
 800cd1e:	2b01      	cmp	r3, #1
 800cd20:	d901      	bls.n	800cd26 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800cd22:	2106      	movs	r1, #6
 800cd24:	e7f6      	b.n	800cd14 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800cd26:	4a12      	ldr	r2, [pc, #72]	; (800cd70 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800cd28:	4f12      	ldr	r7, [pc, #72]	; (800cd74 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800cd2a:	6816      	ldr	r6, [r2, #0]
 800cd2c:	4a12      	ldr	r2, [pc, #72]	; (800cd78 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800cd2e:	6810      	ldr	r0, [r2, #0]
 800cd30:	4a12      	ldr	r2, [pc, #72]	; (800cd7c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800cd32:	b983      	cbnz	r3, 800cd56 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800cd34:	2102      	movs	r1, #2
 800cd36:	7013      	strb	r3, [r2, #0]
 800cd38:	f007 fafc 	bl	8014334 <LedBlink::SetMode(ledblink::Mode)>
 800cd3c:	7839      	ldrb	r1, [r7, #0]
 800cd3e:	b111      	cbz	r1, 800cd46 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd40:	4630      	mov	r0, r6
 800cd42:	f000 f9a8 	bl	800d096 <RDMIdentify::Off(rdm::identify::Mode)>
 800cd46:	b98d      	cbnz	r5, 800cd6c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800cd48:	68a3      	ldr	r3, [r4, #8]
 800cd4a:	75dd      	strb	r5, [r3, #23]
 800cd4c:	4620      	mov	r0, r4
 800cd4e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cd52:	f7ff beeb 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cd56:	7011      	strb	r1, [r2, #0]
 800cd58:	2104      	movs	r1, #4
 800cd5a:	f007 faeb 	bl	8014334 <LedBlink::SetMode(ledblink::Mode)>
 800cd5e:	7839      	ldrb	r1, [r7, #0]
 800cd60:	2900      	cmp	r1, #0
 800cd62:	d0f0      	beq.n	800cd46 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd64:	4630      	mov	r0, r6
 800cd66:	f000 f995 	bl	800d094 <RDMIdentify::On(rdm::identify::Mode)>
 800cd6a:	e7ec      	b.n	800cd46 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cd6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd6e:	bf00      	nop
 800cd70:	20000950 	andcs	r0, r0, r0, asr r9
 800cd74:	2000094d 	andcs	r0, r0, sp, asr #18
 800cd78:	2000fee4 	andcs	pc, r0, r4, ror #29
 800cd7c:	2000094c 	andcs	r0, r0, ip, asr #18

0800cd80 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800cd80:	b538      	push	{r3, r4, r5, lr}
 800cd82:	6843      	ldr	r3, [r0, #4]
 800cd84:	7d9b      	ldrb	r3, [r3, #22]
 800cd86:	4604      	mov	r4, r0
 800cd88:	460d      	mov	r5, r1
 800cd8a:	b123      	cbz	r3, 800cd96 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800cd8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cd90:	2101      	movs	r1, #1
 800cd92:	f7ff bf8f 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cd96:	4b06      	ldr	r3, [pc, #24]	; (800cdb0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800cd98:	6818      	ldr	r0, [r3, #0]
 800cd9a:	f7ff fde2 	bl	800c962 <RDMDeviceResponder::SetFactoryDefaults()>
 800cd9e:	b935      	cbnz	r5, 800cdae <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800cda0:	68a3      	ldr	r3, [r4, #8]
 800cda2:	75dd      	strb	r5, [r3, #23]
 800cda4:	4620      	mov	r0, r4
 800cda6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cdaa:	f7ff bebf 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cdae:	bd38      	pop	{r3, r4, r5, pc}
 800cdb0:	20000948 	andcs	r0, r0, r8, asr #18

0800cdb4 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800cdb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cdb6:	6845      	ldr	r5, [r0, #4]
 800cdb8:	7dab      	ldrb	r3, [r5, #22]
 800cdba:	2b20      	cmp	r3, #32
 800cdbc:	460e      	mov	r6, r1
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	4611      	mov	r1, r2
 800cdc2:	d905      	bls.n	800cdd0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800cdc4:	2101      	movs	r1, #1
 800cdc6:	b002      	add	sp, #8
 800cdc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdcc:	f7ff bf72 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cdd0:	4a0d      	ldr	r2, [pc, #52]	; (800ce08 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800cdd2:	6810      	ldr	r0, [r2, #0]
 800cdd4:	f105 0217 	add.w	r2, r5, #23
 800cdd8:	b159      	cbz	r1, 800cdf2 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800cdda:	3088      	adds	r0, #136	; 0x88
 800cddc:	f7ff fb55 	bl	800c48a <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800cde0:	b97e      	cbnz	r6, 800ce02 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800cde2:	68a3      	ldr	r3, [r4, #8]
 800cde4:	4620      	mov	r0, r4
 800cde6:	75de      	strb	r6, [r3, #23]
 800cde8:	b002      	add	sp, #8
 800cdea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdee:	f7ff be9d 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800cdf2:	4669      	mov	r1, sp
 800cdf4:	3004      	adds	r0, #4
 800cdf6:	9200      	str	r2, [sp, #0]
 800cdf8:	f88d 3004 	strb.w	r3, [sp, #4]
 800cdfc:	f7ff fd8e 	bl	800c91c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800ce00:	e7ee      	b.n	800cde0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800ce02:	b002      	add	sp, #8
 800ce04:	bd70      	pop	{r4, r5, r6, pc}
 800ce06:	bf00      	nop
 800ce08:	20000948 	andcs	r0, r0, r8, asr #18

0800ce0c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800ce0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce10:	4616      	mov	r6, r2
 800ce12:	4604      	mov	r4, r0
 800ce14:	f006 00ef 	and.w	r0, r6, #239	; 0xef
 800ce18:	2700      	movs	r7, #0
 800ce1a:	2820      	cmp	r0, #32
 800ce1c:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800ce20:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800ce24:	46be      	mov	lr, r7
 800ce26:	d005      	beq.n	800ce34 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
 800ce28:	2105      	movs	r1, #5
 800ce2a:	4620      	mov	r0, r4
 800ce2c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce30:	f7ff bf40 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800ce34:	482b      	ldr	r0, [pc, #172]	; (800cee4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd8>)
 800ce36:	6800      	ldr	r0, [r0, #0]
 800ce38:	8880      	ldrh	r0, [r0, #4]
 800ce3a:	4290      	cmp	r0, r2
 800ce3c:	d205      	bcs.n	800ce4a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800ce3e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ce42:	4282      	cmp	r2, r0
 800ce44:	d001      	beq.n	800ce4a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800ce46:	2109      	movs	r1, #9
 800ce48:	e7ef      	b.n	800ce2a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce4a:	4d27      	ldr	r5, [pc, #156]	; (800cee8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800ce4c:	f04f 0c14 	mov.w	ip, #20
 800ce50:	2000      	movs	r0, #0
 800ce52:	f8b5 9000 	ldrh.w	r9, [r5]
 800ce56:	4599      	cmp	r9, r3
 800ce58:	bf02      	ittt	eq
 800ce5a:	7daf      	ldrbeq	r7, [r5, #22]
 800ce5c:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800ce60:	4628      	moveq	r0, r5
 800ce62:	f1bc 0c01 	subs.w	ip, ip, #1
 800ce66:	f105 0518 	add.w	r5, r5, #24
 800ce6a:	d1f2      	bne.n	800ce52 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x46>
 800ce6c:	b908      	cbnz	r0, 800ce72 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x66>
 800ce6e:	2100      	movs	r1, #0
 800ce70:	e7db      	b.n	800ce2a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce72:	7823      	ldrb	r3, [r4, #0]
 800ce74:	b193      	cbz	r3, 800ce9c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
 800ce76:	2f00      	cmp	r7, #0
 800ce78:	d0f9      	beq.n	800ce6e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800ce7a:	2e20      	cmp	r6, #32
 800ce7c:	d11f      	bne.n	800cebe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800ce7e:	bb71      	cbnz	r1, 800cede <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd2>
 800ce80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce84:	429a      	cmp	r2, r3
 800ce86:	d0de      	beq.n	800ce46 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800ce88:	6843      	ldr	r3, [r0, #4]
 800ce8a:	b913      	cbnz	r3, 800ce92 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x86>
 800ce8c:	6881      	ldr	r1, [r0, #8]
 800ce8e:	07cd      	lsls	r5, r1, #31
 800ce90:	d5ca      	bpl.n	800ce28 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800ce92:	7d01      	ldrb	r1, [r0, #20]
 800ce94:	4541      	cmp	r1, r8
 800ce96:	d005      	beq.n	800cea4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x98>
 800ce98:	2101      	movs	r1, #1
 800ce9a:	e7c6      	b.n	800ce2a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800ce9c:	f1be 0f00 	cmp.w	lr, #0
 800cea0:	d1eb      	bne.n	800ce7a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6e>
 800cea2:	e7e4      	b.n	800ce6e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800cea4:	6881      	ldr	r1, [r0, #8]
 800cea6:	104d      	asrs	r5, r1, #1
 800cea8:	eb04 0061 	add.w	r0, r4, r1, asr #1
 800ceac:	07c9      	lsls	r1, r1, #31
 800ceae:	bf48      	it	mi
 800ceb0:	5961      	ldrmi	r1, [r4, r5]
 800ceb2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ceb6:	bf48      	it	mi
 800ceb8:	58cb      	ldrmi	r3, [r1, r3]
 800ceba:	4611      	mov	r1, r2
 800cebc:	4718      	bx	r3
 800cebe:	e9d0 3003 	ldrd	r3, r0, [r0, #12]
 800cec2:	f000 0501 	and.w	r5, r0, #1
 800cec6:	b90b      	cbnz	r3, 800cecc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800cec8:	2d00      	cmp	r5, #0
 800ceca:	d0ad      	beq.n	800ce28 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800cecc:	1046      	asrs	r6, r0, #1
 800cece:	eb04 0060 	add.w	r0, r4, r0, asr #1
 800ced2:	b10d      	cbz	r5, 800ced8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800ced4:	59a4      	ldr	r4, [r4, r6]
 800ced6:	58e3      	ldr	r3, [r4, r3]
 800ced8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cedc:	4718      	bx	r3
 800cede:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cee2:	bf00      	nop
 800cee4:	20000944 	andcs	r0, r0, r4, asr #18
 800cee8:	08018570 	stmdaeq	r1, {r4, r5, r6, r8, sl, pc}

0800ceec <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800ceec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cef0:	23ff      	movs	r3, #255	; 0xff
 800cef2:	7013      	strb	r3, [r2, #0]
 800cef4:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800cef8:	b085      	sub	sp, #20
 800cefa:	7ccb      	ldrb	r3, [r1, #19]
 800cefc:	7d4f      	ldrb	r7, [r1, #21]
 800cefe:	9303      	str	r3, [sp, #12]
 800cf00:	7d0b      	ldrb	r3, [r1, #20]
 800cf02:	f101 0a02 	add.w	sl, r1, #2
 800cf06:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800cf0a:	4b5c      	ldr	r3, [pc, #368]	; (800d07c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800cf0c:	4606      	mov	r6, r0
 800cf0e:	460d      	mov	r5, r1
 800cf10:	4614      	mov	r4, r2
 800cf12:	495b      	ldr	r1, [pc, #364]	; (800d080 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800cf14:	f8d3 8000 	ldr.w	r8, [r3]
 800cf18:	2206      	movs	r2, #6
 800cf1a:	4650      	mov	r0, sl
 800cf1c:	f7ff fce4 	bl	800c8e8 <memcmp>
 800cf20:	f108 0904 	add.w	r9, r8, #4
 800cf24:	4683      	mov	fp, r0
 800cf26:	2202      	movs	r2, #2
 800cf28:	4649      	mov	r1, r9
 800cf2a:	4650      	mov	r0, sl
 800cf2c:	b2bf      	uxth	r7, r7
 800cf2e:	f7ff fcdb 	bl	800c8e8 <memcmp>
 800cf32:	b928      	cbnz	r0, 800cf40 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800cf34:	2204      	movs	r2, #4
 800cf36:	4952      	ldr	r1, [pc, #328]	; (800d080 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800cf38:	18a8      	adds	r0, r5, r2
 800cf3a:	f7ff fcd5 	bl	800c8e8 <memcmp>
 800cf3e:	b158      	cbz	r0, 800cf58 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800cf40:	2206      	movs	r2, #6
 800cf42:	4649      	mov	r1, r9
 800cf44:	4650      	mov	r0, sl
 800cf46:	f7ff fccf 	bl	800c8e8 <memcmp>
 800cf4a:	b130      	cbz	r0, 800cf5a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800cf4c:	f1bb 0f00 	cmp.w	fp, #0
 800cf50:	d04b      	beq.n	800cfea <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800cf52:	b005      	add	sp, #20
 800cf54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf58:	2001      	movs	r0, #1
 800cf5a:	2301      	movs	r3, #1
 800cf5c:	9a03      	ldr	r2, [sp, #12]
 800cf5e:	2a10      	cmp	r2, #16
 800cf60:	d177      	bne.n	800d052 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800cf62:	2f01      	cmp	r7, #1
 800cf64:	d144      	bne.n	800cff0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800cf66:	7873      	ldrb	r3, [r6, #1]
 800cf68:	2b00      	cmp	r3, #0
 800cf6a:	d1f2      	bne.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf6c:	2206      	movs	r2, #6
 800cf6e:	4649      	mov	r1, r9
 800cf70:	f105 0017 	add.w	r0, r5, #23
 800cf74:	f7ff fcb8 	bl	800c8e8 <memcmp>
 800cf78:	2800      	cmp	r0, #0
 800cf7a:	dcea      	bgt.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf7c:	2206      	movs	r2, #6
 800cf7e:	f105 011d 	add.w	r1, r5, #29
 800cf82:	4648      	mov	r0, r9
 800cf84:	f7ff fcb0 	bl	800c8e8 <memcmp>
 800cf88:	2800      	cmp	r0, #0
 800cf8a:	dce2      	bgt.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cf8c:	23fe      	movs	r3, #254	; 0xfe
 800cf8e:	7023      	strb	r3, [r4, #0]
 800cf90:	7063      	strb	r3, [r4, #1]
 800cf92:	70a3      	strb	r3, [r4, #2]
 800cf94:	70e3      	strb	r3, [r4, #3]
 800cf96:	7123      	strb	r3, [r4, #4]
 800cf98:	7163      	strb	r3, [r4, #5]
 800cf9a:	71a3      	strb	r3, [r4, #6]
 800cf9c:	23aa      	movs	r3, #170	; 0xaa
 800cf9e:	71e3      	strb	r3, [r4, #7]
 800cfa0:	f108 0203 	add.w	r2, r8, #3
 800cfa4:	4621      	mov	r1, r4
 800cfa6:	f108 0809 	add.w	r8, r8, #9
 800cfaa:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800cfae:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cfb2:	f060 0055 	orn	r0, r0, #85	; 0x55
 800cfb6:	7208      	strb	r0, [r1, #8]
 800cfb8:	7810      	ldrb	r0, [r2, #0]
 800cfba:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800cfbe:	7248      	strb	r0, [r1, #9]
 800cfc0:	7810      	ldrb	r0, [r2, #0]
 800cfc2:	4542      	cmp	r2, r8
 800cfc4:	4403      	add	r3, r0
 800cfc6:	b29b      	uxth	r3, r3
 800cfc8:	f101 0102 	add.w	r1, r1, #2
 800cfcc:	d1ef      	bne.n	800cfae <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc2>
 800cfce:	0a1a      	lsrs	r2, r3, #8
 800cfd0:	f062 0155 	orn	r1, r2, #85	; 0x55
 800cfd4:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800cfd8:	7562      	strb	r2, [r4, #21]
 800cfda:	f063 0255 	orn	r2, r3, #85	; 0x55
 800cfde:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800cfe2:	7521      	strb	r1, [r4, #20]
 800cfe4:	75a2      	strb	r2, [r4, #22]
 800cfe6:	75e3      	strb	r3, [r4, #23]
 800cfe8:	e7b3      	b.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cfea:	4658      	mov	r0, fp
 800cfec:	465b      	mov	r3, fp
 800cfee:	e7b5      	b.n	800cf5c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800cff0:	2f03      	cmp	r7, #3
 800cff2:	d11a      	bne.n	800d02a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800cff4:	7daa      	ldrb	r2, [r5, #22]
 800cff6:	2a00      	cmp	r2, #0
 800cff8:	d1ab      	bne.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800cffa:	7072      	strb	r2, [r6, #1]
 800cffc:	f1bb 0f00 	cmp.w	fp, #0
 800d000:	d0a7      	beq.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d002:	2b00      	cmp	r3, #0
 800d004:	d0a5      	beq.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d006:	2302      	movs	r3, #2
 800d008:	75e3      	strb	r3, [r4, #23]
 800d00a:	4b1e      	ldr	r3, [pc, #120]	; (800d084 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800d00c:	7622      	strb	r2, [r4, #24]
 800d00e:	681b      	ldr	r3, [r3, #0]
 800d010:	7662      	strb	r2, [r4, #25]
 800d012:	889b      	ldrh	r3, [r3, #4]
 800d014:	3b00      	subs	r3, #0
 800d016:	bf18      	it	ne
 800d018:	2301      	movne	r3, #1
 800d01a:	005b      	lsls	r3, r3, #1
 800d01c:	4630      	mov	r0, r6
 800d01e:	7663      	strb	r3, [r4, #25]
 800d020:	b005      	add	sp, #20
 800d022:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d026:	f7ff bd81 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d02a:	2f02      	cmp	r7, #2
 800d02c:	d191      	bne.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d02e:	7daa      	ldrb	r2, [r5, #22]
 800d030:	2a00      	cmp	r2, #0
 800d032:	d18e      	bne.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d034:	2101      	movs	r1, #1
 800d036:	7071      	strb	r1, [r6, #1]
 800d038:	2b00      	cmp	r3, #0
 800d03a:	d08a      	beq.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d03c:	4b11      	ldr	r3, [pc, #68]	; (800d084 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800d03e:	75e7      	strb	r7, [r4, #23]
 800d040:	681b      	ldr	r3, [r3, #0]
 800d042:	7622      	strb	r2, [r4, #24]
 800d044:	7662      	strb	r2, [r4, #25]
 800d046:	889b      	ldrh	r3, [r3, #4]
 800d048:	3b00      	subs	r3, #0
 800d04a:	bf18      	it	ne
 800d04c:	2301      	movne	r3, #1
 800d04e:	408b      	lsls	r3, r1
 800d050:	e7e4      	b.n	800d01c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800d052:	7c6a      	ldrb	r2, [r5, #17]
 800d054:	7cab      	ldrb	r3, [r5, #18]
 800d056:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d05a:	b29b      	uxth	r3, r3
 800d05c:	f1bb 0f00 	cmp.w	fp, #0
 800d060:	9301      	str	r3, [sp, #4]
 800d062:	7dab      	ldrb	r3, [r5, #22]
 800d064:	9300      	str	r3, [sp, #0]
 800d066:	bf18      	it	ne
 800d068:	4601      	movne	r1, r0
 800d06a:	9a03      	ldr	r2, [sp, #12]
 800d06c:	463b      	mov	r3, r7
 800d06e:	bf08      	it	eq
 800d070:	2101      	moveq	r1, #1
 800d072:	4630      	mov	r0, r6
 800d074:	f7ff feca 	bl	800ce0c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800d078:	e76b      	b.n	800cf52 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800d07a:	bf00      	nop
 800d07c:	20000948 	andcs	r0, r0, r8, asr #18
 800d080:	08018568 	stmdaeq	r1, {r3, r5, r6, r8, sl, pc}
 800d084:	20000944 	andcs	r0, r0, r4, asr #18

0800d088 <RDMIdentify::RDMIdentify()>:
 800d088:	4b01      	ldr	r3, [pc, #4]	; (800d090 <RDMIdentify::RDMIdentify()+0x8>)
 800d08a:	6018      	str	r0, [r3, #0]
 800d08c:	4770      	bx	lr
 800d08e:	bf00      	nop
 800d090:	20000950 	andcs	r0, r0, r0, asr r9

0800d094 <RDMIdentify::On(rdm::identify::Mode)>:
 800d094:	4770      	bx	lr

0800d096 <RDMIdentify::Off(rdm::identify::Mode)>:
 800d096:	4770      	bx	lr

0800d098 <memcpy.constprop.0.isra.0>:
 800d098:	3801      	subs	r0, #1
 800d09a:	1d0b      	adds	r3, r1, #4
 800d09c:	4299      	cmp	r1, r3
 800d09e:	d100      	bne.n	800d0a2 <memcpy.constprop.0.isra.0+0xa>
 800d0a0:	4770      	bx	lr
 800d0a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d0a6:	f800 2f01 	strb.w	r2, [r0, #1]!
 800d0aa:	e7f7      	b.n	800d09c <memcpy.constprop.0.isra.0+0x4>

0800d0ac <RDMHandler::GetInterfaceList(unsigned short)>:
 800d0ac:	4a08      	ldr	r2, [pc, #32]	; (800d0d0 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800d0ae:	6883      	ldr	r3, [r0, #8]
 800d0b0:	6812      	ldr	r2, [r2, #0]
 800d0b2:	6892      	ldr	r2, [r2, #8]
 800d0b4:	76da      	strb	r2, [r3, #27]
 800d0b6:	0e11      	lsrs	r1, r2, #24
 800d0b8:	7619      	strb	r1, [r3, #24]
 800d0ba:	0c11      	lsrs	r1, r2, #16
 800d0bc:	7659      	strb	r1, [r3, #25]
 800d0be:	0a11      	lsrs	r1, r2, #8
 800d0c0:	2200      	movs	r2, #0
 800d0c2:	771a      	strb	r2, [r3, #28]
 800d0c4:	2206      	movs	r2, #6
 800d0c6:	7699      	strb	r1, [r3, #26]
 800d0c8:	775a      	strb	r2, [r3, #29]
 800d0ca:	75da      	strb	r2, [r3, #23]
 800d0cc:	f7ff bd2e 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d0d0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d0d4 <RDMHandler::GetInterfaceName(unsigned short)>:
 800d0d4:	b538      	push	{r3, r4, r5, lr}
 800d0d6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d0da:	4604      	mov	r4, r0
 800d0dc:	3117      	adds	r1, #23
 800d0de:	f105 0018 	add.w	r0, r5, #24
 800d0e2:	f7ff ffd9 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d0e6:	4a0d      	ldr	r2, [pc, #52]	; (800d11c <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800d0e8:	6813      	ldr	r3, [r2, #0]
 800d0ea:	f105 001b 	add.w	r0, r5, #27
 800d0ee:	33a6      	adds	r3, #166	; 0xa6
 800d0f0:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d0f4:	f800 1f01 	strb.w	r1, [r0, #1]!
 800d0f8:	2900      	cmp	r1, #0
 800d0fa:	d1f9      	bne.n	800d0f0 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800d0fc:	6812      	ldr	r2, [r2, #0]
 800d0fe:	32a6      	adds	r2, #166	; 0xa6
 800d100:	4611      	mov	r1, r2
 800d102:	460b      	mov	r3, r1
 800d104:	3101      	adds	r1, #1
 800d106:	7818      	ldrb	r0, [r3, #0]
 800d108:	2800      	cmp	r0, #0
 800d10a:	d1fa      	bne.n	800d102 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800d10c:	1a9b      	subs	r3, r3, r2
 800d10e:	3304      	adds	r3, #4
 800d110:	75eb      	strb	r3, [r5, #23]
 800d112:	4620      	mov	r0, r4
 800d114:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d118:	f7ff bd08 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d11c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d120 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800d120:	b538      	push	{r3, r4, r5, lr}
 800d122:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d126:	4604      	mov	r4, r0
 800d128:	3117      	adds	r1, #23
 800d12a:	f105 0018 	add.w	r0, r5, #24
 800d12e:	f7ff ffb3 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d132:	4b06      	ldr	r3, [pc, #24]	; (800d14c <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800d134:	f105 011c 	add.w	r1, r5, #28
 800d138:	6818      	ldr	r0, [r3, #0]
 800d13a:	f004 feb3 	bl	8011ea4 <Network::MacAddressCopyTo(unsigned char*)>
 800d13e:	230a      	movs	r3, #10
 800d140:	75eb      	strb	r3, [r5, #23]
 800d142:	4620      	mov	r0, r4
 800d144:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d148:	f7ff bcf0 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d14c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d150 <RDMHandler::GetDHCPMode(unsigned short)>:
 800d150:	b538      	push	{r3, r4, r5, lr}
 800d152:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d156:	4604      	mov	r4, r0
 800d158:	3117      	adds	r1, #23
 800d15a:	f105 0018 	add.w	r0, r5, #24
 800d15e:	f7ff ff9b 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d162:	4b05      	ldr	r3, [pc, #20]	; (800d178 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800d164:	681b      	ldr	r3, [r3, #0]
 800d166:	795b      	ldrb	r3, [r3, #5]
 800d168:	772b      	strb	r3, [r5, #28]
 800d16a:	2305      	movs	r3, #5
 800d16c:	75eb      	strb	r3, [r5, #23]
 800d16e:	4620      	mov	r0, r4
 800d170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d174:	f7ff bcda 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d178:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d17c <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800d17c:	4b10      	ldr	r3, [pc, #64]	; (800d1c0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800d17e:	6842      	ldr	r2, [r0, #4]
 800d180:	681b      	ldr	r3, [r3, #0]
 800d182:	7919      	ldrb	r1, [r3, #4]
 800d184:	b510      	push	{r4, lr}
 800d186:	4604      	mov	r4, r0
 800d188:	b921      	cbnz	r1, 800d194 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800d18a:	210b      	movs	r1, #11
 800d18c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d190:	f7ff bd90 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d194:	7ed2      	ldrb	r2, [r2, #27]
 800d196:	2a01      	cmp	r2, #1
 800d198:	d109      	bne.n	800d1ae <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800d19a:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800d19e:	f042 0204 	orr.w	r2, r2, #4
 800d1a2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d1a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1aa:	f7ff bcbf 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d1ae:	b92a      	cbnz	r2, 800d1bc <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800d1b0:	4618      	mov	r0, r3
 800d1b2:	4611      	mov	r1, r2
 800d1b4:	f005 f8ba 	bl	801232c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	e7f4      	b.n	800d1a6 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800d1bc:	2106      	movs	r1, #6
 800d1be:	e7e5      	b.n	800d18c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800d1c0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d1c4 <RDMHandler::GetNameServers(unsigned short)>:
 800d1c4:	6842      	ldr	r2, [r0, #4]
 800d1c6:	7dd2      	ldrb	r2, [r2, #23]
 800d1c8:	2a02      	cmp	r2, #2
 800d1ca:	d902      	bls.n	800d1d2 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800d1cc:	2106      	movs	r1, #6
 800d1ce:	f7ff bd71 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d1d2:	6883      	ldr	r3, [r0, #8]
 800d1d4:	2200      	movs	r2, #0
 800d1d6:	765a      	strb	r2, [r3, #25]
 800d1d8:	769a      	strb	r2, [r3, #26]
 800d1da:	76da      	strb	r2, [r3, #27]
 800d1dc:	771a      	strb	r2, [r3, #28]
 800d1de:	2205      	movs	r2, #5
 800d1e0:	75da      	strb	r2, [r3, #23]
 800d1e2:	f7ff bca3 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
	...

0800d1e8 <RDMHandler::GetZeroconf(unsigned short)>:
 800d1e8:	b538      	push	{r3, r4, r5, lr}
 800d1ea:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d1ee:	4604      	mov	r4, r0
 800d1f0:	3117      	adds	r1, #23
 800d1f2:	f105 0018 	add.w	r0, r5, #24
 800d1f6:	f7ff ff4f 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d1fa:	4b06      	ldr	r3, [pc, #24]	; (800d214 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800d1fc:	681a      	ldr	r2, [r3, #0]
 800d1fe:	7993      	ldrb	r3, [r2, #6]
 800d200:	b103      	cbz	r3, 800d204 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800d202:	79d3      	ldrb	r3, [r2, #7]
 800d204:	772b      	strb	r3, [r5, #28]
 800d206:	2305      	movs	r3, #5
 800d208:	75eb      	strb	r3, [r5, #23]
 800d20a:	4620      	mov	r0, r4
 800d20c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d210:	f7ff bc8c 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d214:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d218 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800d218:	4b10      	ldr	r3, [pc, #64]	; (800d25c <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800d21a:	6842      	ldr	r2, [r0, #4]
 800d21c:	681b      	ldr	r3, [r3, #0]
 800d21e:	7999      	ldrb	r1, [r3, #6]
 800d220:	b510      	push	{r4, lr}
 800d222:	4604      	mov	r4, r0
 800d224:	b921      	cbnz	r1, 800d230 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800d226:	210b      	movs	r1, #11
 800d228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d22c:	f7ff bd42 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d230:	7ed2      	ldrb	r2, [r2, #27]
 800d232:	2a01      	cmp	r2, #1
 800d234:	d109      	bne.n	800d24a <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800d236:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800d23a:	f042 0208 	orr.w	r2, r2, #8
 800d23e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d246:	f7ff bc71 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d24a:	b92a      	cbnz	r2, 800d258 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800d24c:	4618      	mov	r0, r3
 800d24e:	4611      	mov	r1, r2
 800d250:	f005 f86c 	bl	801232c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d254:	4620      	mov	r0, r4
 800d256:	e7f4      	b.n	800d242 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800d258:	2106      	movs	r1, #6
 800d25a:	e7e5      	b.n	800d228 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800d25c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d260 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800d260:	4b09      	ldr	r3, [pc, #36]	; (800d288 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800d262:	681b      	ldr	r3, [r3, #0]
 800d264:	795a      	ldrb	r2, [r3, #5]
 800d266:	b510      	push	{r4, lr}
 800d268:	4604      	mov	r4, r0
 800d26a:	b922      	cbnz	r2, 800d276 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800d26c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d270:	210b      	movs	r1, #11
 800d272:	f7ff bd1f 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d276:	4618      	mov	r0, r3
 800d278:	f005 f80a 	bl	8012290 <Network::EnableDhcp()>
 800d27c:	4620      	mov	r0, r4
 800d27e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d282:	f7ff bc53 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d286:	bf00      	nop
 800d288:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d28c <RDMHandler::GetAddressNetmask(unsigned short)>:
 800d28c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d28e:	4e10      	ldr	r6, [pc, #64]	; (800d2d0 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800d290:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d294:	6833      	ldr	r3, [r6, #0]
 800d296:	4604      	mov	r4, r0
 800d298:	695b      	ldr	r3, [r3, #20]
 800d29a:	9301      	str	r3, [sp, #4]
 800d29c:	f105 0018 	add.w	r0, r5, #24
 800d2a0:	3117      	adds	r1, #23
 800d2a2:	f7ff fef9 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d2a6:	a901      	add	r1, sp, #4
 800d2a8:	f105 001c 	add.w	r0, r5, #28
 800d2ac:	f7ff fef4 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d2b0:	6836      	ldr	r6, [r6, #0]
 800d2b2:	69f0      	ldr	r0, [r6, #28]
 800d2b4:	f009 fc88 	bl	8016bc8 <__popcountsi2>
 800d2b8:	f885 0020 	strb.w	r0, [r5, #32]
 800d2bc:	7973      	ldrb	r3, [r6, #5]
 800d2be:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800d2c2:	230a      	movs	r3, #10
 800d2c4:	75eb      	strb	r3, [r5, #23]
 800d2c6:	4620      	mov	r0, r4
 800d2c8:	f7ff fc30 	bl	800cb2c <RDMHandler::RespondMessageAck()>
 800d2cc:	b002      	add	sp, #8
 800d2ce:	bd70      	pop	{r4, r5, r6, pc}
 800d2d0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d2d4 <RDMHandler::GetStaticAddress(unsigned short)>:
 800d2d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2d6:	4e0f      	ldr	r6, [pc, #60]	; (800d314 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800d2d8:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d2dc:	6833      	ldr	r3, [r6, #0]
 800d2de:	4604      	mov	r4, r0
 800d2e0:	695b      	ldr	r3, [r3, #20]
 800d2e2:	9301      	str	r3, [sp, #4]
 800d2e4:	f105 0018 	add.w	r0, r5, #24
 800d2e8:	3117      	adds	r1, #23
 800d2ea:	f7ff fed5 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d2ee:	a901      	add	r1, sp, #4
 800d2f0:	f105 001c 	add.w	r0, r5, #28
 800d2f4:	f7ff fed0 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d2f8:	6833      	ldr	r3, [r6, #0]
 800d2fa:	69d8      	ldr	r0, [r3, #28]
 800d2fc:	f009 fc64 	bl	8016bc8 <__popcountsi2>
 800d300:	2309      	movs	r3, #9
 800d302:	f885 0020 	strb.w	r0, [r5, #32]
 800d306:	75eb      	strb	r3, [r5, #23]
 800d308:	4620      	mov	r0, r4
 800d30a:	f7ff fc0f 	bl	800cb2c <RDMHandler::RespondMessageAck()>
 800d30e:	b002      	add	sp, #8
 800d310:	bd70      	pop	{r4, r5, r6, pc}
 800d312:	bf00      	nop
 800d314:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d318 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800d318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d31a:	6845      	ldr	r5, [r0, #4]
 800d31c:	7dab      	ldrb	r3, [r5, #22]
 800d31e:	2b09      	cmp	r3, #9
 800d320:	4604      	mov	r4, r0
 800d322:	d005      	beq.n	800d330 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800d324:	2101      	movs	r1, #1
 800d326:	b003      	add	sp, #12
 800d328:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d32c:	f7ff bcc2 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d330:	f105 011b 	add.w	r1, r5, #27
 800d334:	a801      	add	r0, sp, #4
 800d336:	f7ff feaf 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d33a:	4b09      	ldr	r3, [pc, #36]	; (800d360 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800d33c:	7fea      	ldrb	r2, [r5, #31]
 800d33e:	6818      	ldr	r0, [r3, #0]
 800d340:	9901      	ldr	r1, [sp, #4]
 800d342:	b12a      	cbz	r2, 800d350 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800d344:	f1c2 0220 	rsb	r2, r2, #32
 800d348:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d34c:	4093      	lsls	r3, r2
 800d34e:	ba1a      	rev	r2, r3
 800d350:	f004 ffec 	bl	801232c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d354:	4620      	mov	r0, r4
 800d356:	f7ff fbe9 	bl	800cb2c <RDMHandler::RespondMessageAck()>
 800d35a:	b003      	add	sp, #12
 800d35c:	bd30      	pop	{r4, r5, pc}
 800d35e:	bf00      	nop
 800d360:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d364 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800d364:	4b08      	ldr	r3, [pc, #32]	; (800d388 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800d366:	b510      	push	{r4, lr}
 800d368:	4604      	mov	r4, r0
 800d36a:	6818      	ldr	r0, [r3, #0]
 800d36c:	f004 ffeb 	bl	8012346 <Network::ApplyQueuedConfig()>
 800d370:	b120      	cbz	r0, 800d37c <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800d372:	4620      	mov	r0, r4
 800d374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d378:	f7ff bbd8 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d37c:	4620      	mov	r0, r4
 800d37e:	2101      	movs	r1, #1
 800d380:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d384:	f7ff bc96 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d388:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d38c <RDMHandler::GetDefaultRoute(unsigned short)>:
 800d38c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d38e:	4b0c      	ldr	r3, [pc, #48]	; (800d3c0 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800d390:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d394:	681b      	ldr	r3, [r3, #0]
 800d396:	4604      	mov	r4, r0
 800d398:	699b      	ldr	r3, [r3, #24]
 800d39a:	9301      	str	r3, [sp, #4]
 800d39c:	f105 0018 	add.w	r0, r5, #24
 800d3a0:	3117      	adds	r1, #23
 800d3a2:	f7ff fe79 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d3a6:	a901      	add	r1, sp, #4
 800d3a8:	f105 001c 	add.w	r0, r5, #28
 800d3ac:	f7ff fe74 	bl	800d098 <memcpy.constprop.0.isra.0>
 800d3b0:	2308      	movs	r3, #8
 800d3b2:	75eb      	strb	r3, [r5, #23]
 800d3b4:	4620      	mov	r0, r4
 800d3b6:	f7ff fbb9 	bl	800cb2c <RDMHandler::RespondMessageAck()>
 800d3ba:	b003      	add	sp, #12
 800d3bc:	bd30      	pop	{r4, r5, pc}
 800d3be:	bf00      	nop
 800d3c0:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d3c4 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800d3c4:	210b      	movs	r1, #11
 800d3c6:	f7ff bc75 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d3cc <RDMHandler::GetHostName(unsigned short)>:
 800d3cc:	4b0a      	ldr	r3, [pc, #40]	; (800d3f8 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800d3ce:	b513      	push	{r0, r1, r4, lr}
 800d3d0:	6819      	ldr	r1, [r3, #0]
 800d3d2:	3120      	adds	r1, #32
 800d3d4:	460b      	mov	r3, r1
 800d3d6:	461a      	mov	r2, r3
 800d3d8:	3301      	adds	r3, #1
 800d3da:	7814      	ldrb	r4, [r2, #0]
 800d3dc:	2c00      	cmp	r4, #0
 800d3de:	d1fa      	bne.n	800d3d6 <RDMHandler::GetHostName(unsigned short)+0xa>
 800d3e0:	1a52      	subs	r2, r2, r1
 800d3e2:	b292      	uxth	r2, r2
 800d3e4:	9001      	str	r0, [sp, #4]
 800d3e6:	f7ff fb48 	bl	800ca7a <RDMHandler::HandleString(char const*, unsigned int)>
 800d3ea:	9801      	ldr	r0, [sp, #4]
 800d3ec:	b002      	add	sp, #8
 800d3ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d3f2:	f7ff bb9b 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d3f6:	bf00      	nop
 800d3f8:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d3fc <RDMHandler::SetHostName(bool, unsigned short)>:
 800d3fc:	b510      	push	{r4, lr}
 800d3fe:	6841      	ldr	r1, [r0, #4]
 800d400:	7d8b      	ldrb	r3, [r1, #22]
 800d402:	2b3f      	cmp	r3, #63	; 0x3f
 800d404:	4604      	mov	r4, r0
 800d406:	d904      	bls.n	800d412 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800d408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d40c:	2102      	movs	r1, #2
 800d40e:	f7ff bc51 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
 800d412:	440b      	add	r3, r1
 800d414:	2200      	movs	r2, #0
 800d416:	75da      	strb	r2, [r3, #23]
 800d418:	4b04      	ldr	r3, [pc, #16]	; (800d42c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800d41a:	3117      	adds	r1, #23
 800d41c:	6818      	ldr	r0, [r3, #0]
 800d41e:	f004 fef6 	bl	801220e <Network::SetHostName(char const*)>
 800d422:	4620      	mov	r0, r4
 800d424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d428:	f7ff bb80 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d42c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d430 <RDMHandler::GetDomainName(unsigned short)>:
 800d430:	4b0a      	ldr	r3, [pc, #40]	; (800d45c <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800d432:	b513      	push	{r0, r1, r4, lr}
 800d434:	6819      	ldr	r1, [r3, #0]
 800d436:	3160      	adds	r1, #96	; 0x60
 800d438:	460b      	mov	r3, r1
 800d43a:	461a      	mov	r2, r3
 800d43c:	3301      	adds	r3, #1
 800d43e:	7814      	ldrb	r4, [r2, #0]
 800d440:	2c00      	cmp	r4, #0
 800d442:	d1fa      	bne.n	800d43a <RDMHandler::GetDomainName(unsigned short)+0xa>
 800d444:	1a52      	subs	r2, r2, r1
 800d446:	b292      	uxth	r2, r2
 800d448:	9001      	str	r0, [sp, #4]
 800d44a:	f7ff fb16 	bl	800ca7a <RDMHandler::HandleString(char const*, unsigned int)>
 800d44e:	9801      	ldr	r0, [sp, #4]
 800d450:	b002      	add	sp, #8
 800d452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d456:	f7ff bb69 	b.w	800cb2c <RDMHandler::RespondMessageAck()>
 800d45a:	bf00      	nop
 800d45c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0800d460 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800d460:	210b      	movs	r1, #11
 800d462:	f7ff bc27 	b.w	800ccb4 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d468 <RDMDevice::RDMDevice()>:
 800d468:	4a33      	ldr	r2, [pc, #204]	; (800d538 <RDMDevice::RDMDevice()+0xd0>)
 800d46a:	2300      	movs	r3, #0
 800d46c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d46e:	4604      	mov	r4, r0
 800d470:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800d474:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800d478:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800d47c:	6743      	str	r3, [r0, #116]	; 0x74
 800d47e:	4611      	mov	r1, r2
 800d480:	4613      	mov	r3, r2
 800d482:	3201      	adds	r2, #1
 800d484:	7818      	ldrb	r0, [r3, #0]
 800d486:	2800      	cmp	r0, #0
 800d488:	d1fa      	bne.n	800d480 <RDMDevice::RDMDevice()+0x18>
 800d48a:	1a5b      	subs	r3, r3, r1
 800d48c:	2b20      	cmp	r3, #32
 800d48e:	bf28      	it	cs
 800d490:	2320      	movcs	r3, #32
 800d492:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800d496:	4828      	ldr	r0, [pc, #160]	; (800d538 <RDMDevice::RDMDevice()+0xd0>)
 800d498:	4629      	mov	r1, r5
 800d49a:	461a      	mov	r2, r3
 800d49c:	3a01      	subs	r2, #1
 800d49e:	d23b      	bcs.n	800d518 <RDMDevice::RDMDevice()+0xb0>
 800d4a0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d4a4:	4b25      	ldr	r3, [pc, #148]	; (800d53c <RDMDevice::RDMDevice()+0xd4>)
 800d4a6:	781a      	ldrb	r2, [r3, #0]
 800d4a8:	7022      	strb	r2, [r4, #0]
 800d4aa:	785b      	ldrb	r3, [r3, #1]
 800d4ac:	7063      	strb	r3, [r4, #1]
 800d4ae:	4b24      	ldr	r3, [pc, #144]	; (800d540 <RDMDevice::RDMDevice()+0xd8>)
 800d4b0:	4669      	mov	r1, sp
 800d4b2:	6818      	ldr	r0, [r3, #0]
 800d4b4:	f004 fcf6 	bl	8011ea4 <Network::MacAddressCopyTo(unsigned char*)>
 800d4b8:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800d4bc:	70a3      	strb	r3, [r4, #2]
 800d4be:	7263      	strb	r3, [r4, #9]
 800d4c0:	4b20      	ldr	r3, [pc, #128]	; (800d544 <RDMDevice::RDMDevice()+0xdc>)
 800d4c2:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800d4c6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800d4ca:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800d4ce:	70e2      	strb	r2, [r4, #3]
 800d4d0:	7222      	strb	r2, [r4, #8]
 800d4d2:	7121      	strb	r1, [r4, #4]
 800d4d4:	7160      	strb	r0, [r4, #5]
 800d4d6:	71a0      	strb	r0, [r4, #6]
 800d4d8:	71e1      	strb	r1, [r4, #7]
 800d4da:	461a      	mov	r2, r3
 800d4dc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d4e0:	2900      	cmp	r1, #0
 800d4e2:	d1fb      	bne.n	800d4dc <RDMDevice::RDMDevice()+0x74>
 800d4e4:	1a9b      	subs	r3, r3, r2
 800d4e6:	2b20      	cmp	r3, #32
 800d4e8:	bf28      	it	cs
 800d4ea:	2320      	movcs	r3, #32
 800d4ec:	4915      	ldr	r1, [pc, #84]	; (800d544 <RDMDevice::RDMDevice()+0xdc>)
 800d4ee:	461a      	mov	r2, r3
 800d4f0:	3a01      	subs	r2, #1
 800d4f2:	d216      	bcs.n	800d522 <RDMDevice::RDMDevice()+0xba>
 800d4f4:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d4f8:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800d4fc:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d4fe:	4a12      	ldr	r2, [pc, #72]	; (800d548 <RDMDevice::RDMDevice()+0xe0>)
 800d500:	2315      	movs	r3, #21
 800d502:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800d506:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800d50a:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800d50e:	4299      	cmp	r1, r3
 800d510:	d10c      	bne.n	800d52c <RDMDevice::RDMDevice()+0xc4>
 800d512:	4620      	mov	r0, r4
 800d514:	b002      	add	sp, #8
 800d516:	bd70      	pop	{r4, r5, r6, pc}
 800d518:	f810 6b01 	ldrb.w	r6, [r0], #1
 800d51c:	f801 6f01 	strb.w	r6, [r1, #1]!
 800d520:	e7bc      	b.n	800d49c <RDMDevice::RDMDevice()+0x34>
 800d522:	f811 0b01 	ldrb.w	r0, [r1], #1
 800d526:	f805 0f01 	strb.w	r0, [r5, #1]!
 800d52a:	e7e1      	b.n	800d4f0 <RDMDevice::RDMDevice()+0x88>
 800d52c:	f812 0b01 	ldrb.w	r0, [r2], #1
 800d530:	f803 0f01 	strb.w	r0, [r3, #1]!
 800d534:	e7eb      	b.n	800d50e <RDMDevice::RDMDevice()+0xa6>
 800d536:	bf00      	nop
 800d538:	0801883c 	stmdaeq	r1, {r2, r3, r4, r5, fp, pc}
 800d53c:	0801883a 	stmdaeq	r1, {r1, r3, r4, r5, fp, pc}
 800d540:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 800d544:	08017f76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 800d548:	08018824 	stmdaeq	r1, {r2, r5, fp, pc}

0800d54c <RDMDevice::Print()>:
 800d54c:	b513      	push	{r0, r1, r4, lr}
 800d54e:	4604      	mov	r4, r0
 800d550:	4818      	ldr	r0, [pc, #96]	; (800d5b4 <RDMDevice::Print()+0x68>)
 800d552:	f7fc febd 	bl	800a2d0 <printf>
 800d556:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800d55a:	4817      	ldr	r0, [pc, #92]	; (800d5b8 <RDMDevice::Print()+0x6c>)
 800d55c:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800d560:	f7fc feb6 	bl	800a2d0 <printf>
 800d564:	7862      	ldrb	r2, [r4, #1]
 800d566:	7821      	ldrb	r1, [r4, #0]
 800d568:	4814      	ldr	r0, [pc, #80]	; (800d5bc <RDMDevice::Print()+0x70>)
 800d56a:	f7fc feb1 	bl	800a2d0 <printf>
 800d56e:	79a3      	ldrb	r3, [r4, #6]
 800d570:	7a22      	ldrb	r2, [r4, #8]
 800d572:	7a61      	ldrb	r1, [r4, #9]
 800d574:	9300      	str	r3, [sp, #0]
 800d576:	4812      	ldr	r0, [pc, #72]	; (800d5c0 <RDMDevice::Print()+0x74>)
 800d578:	79e3      	ldrb	r3, [r4, #7]
 800d57a:	f7fc fea9 	bl	800a2d0 <printf>
 800d57e:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800d582:	4810      	ldr	r0, [pc, #64]	; (800d5c4 <RDMDevice::Print()+0x78>)
 800d584:	f104 020a 	add.w	r2, r4, #10
 800d588:	f7fc fea2 	bl	800a2d0 <printf>
 800d58c:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800d590:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800d594:	480c      	ldr	r0, [pc, #48]	; (800d5c8 <RDMDevice::Print()+0x7c>)
 800d596:	0a09      	lsrs	r1, r1, #8
 800d598:	f7fc fe9a 	bl	800a2d0 <printf>
 800d59c:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800d5a0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800d5a4:	4809      	ldr	r0, [pc, #36]	; (800d5cc <RDMDevice::Print()+0x80>)
 800d5a6:	0a09      	lsrs	r1, r1, #8
 800d5a8:	b002      	add	sp, #8
 800d5aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d5ae:	f7fc be8f 	b.w	800a2d0 <printf>
 800d5b2:	bf00      	nop
 800d5b4:	08018750 	stmdaeq	r1, {r4, r6, r8, r9, sl, pc}
 800d5b8:	0801876a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, pc}
 800d5bc:	08018785 	stmdaeq	r1, {r0, r2, r7, r8, r9, sl, pc}
 800d5c0:	080187a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, pc}
 800d5c4:	080187cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, pc}
 800d5c8:	080187e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, pc}
 800d5cc:	08018805 	stmdaeq	r1, {r0, r2, fp, pc}

0800d5d0 <uuid_unparse_x>:
 800d5d0:	b530      	push	{r4, r5, lr}
 800d5d2:	4603      	mov	r3, r0
 800d5d4:	4608      	mov	r0, r1
 800d5d6:	4611      	mov	r1, r2
 800d5d8:	681a      	ldr	r2, [r3, #0]
 800d5da:	891c      	ldrh	r4, [r3, #8]
 800d5dc:	b08f      	sub	sp, #60	; 0x3c
 800d5de:	ba12      	rev	r2, r2
 800d5e0:	920a      	str	r2, [sp, #40]	; 0x28
 800d5e2:	889a      	ldrh	r2, [r3, #4]
 800d5e4:	ba52      	rev16	r2, r2
 800d5e6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d5ea:	88da      	ldrh	r2, [r3, #6]
 800d5ec:	ba64      	rev16	r4, r4
 800d5ee:	ba52      	rev16	r2, r2
 800d5f0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d5f4:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800d5f8:	f103 020a 	add.w	r2, r3, #10
 800d5fc:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800d600:	3310      	adds	r3, #16
 800d602:	4293      	cmp	r3, r2
 800d604:	d122      	bne.n	800d64c <uuid_unparse_x+0x7c>
 800d606:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800d60a:	9208      	str	r2, [sp, #32]
 800d60c:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800d610:	9207      	str	r2, [sp, #28]
 800d612:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800d616:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800d61a:	9206      	str	r2, [sp, #24]
 800d61c:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800d620:	9205      	str	r2, [sp, #20]
 800d622:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800d626:	9204      	str	r2, [sp, #16]
 800d628:	0a1b      	lsrs	r3, r3, #8
 800d62a:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800d62e:	9203      	str	r2, [sp, #12]
 800d630:	9301      	str	r3, [sp, #4]
 800d632:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800d636:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d63a:	9202      	str	r2, [sp, #8]
 800d63c:	9300      	str	r3, [sp, #0]
 800d63e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d640:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800d644:	f7fc fe54 	bl	800a2f0 <sprintf>
 800d648:	b00f      	add	sp, #60	; 0x3c
 800d64a:	bd30      	pop	{r4, r5, pc}
 800d64c:	f812 5b01 	ldrb.w	r5, [r2], #1
 800d650:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d654:	e7d5      	b.n	800d602 <uuid_unparse_x+0x32>
	...

0800d658 <uuid_unparse>:
 800d658:	4a01      	ldr	r2, [pc, #4]	; (800d660 <uuid_unparse+0x8>)
 800d65a:	f7ff bfb9 	b.w	800d5d0 <uuid_unparse_x>
 800d65e:	bf00      	nop
 800d660:	08018858 	stmdaeq	r1, {r3, r4, r6, fp, pc}

0800d664 <DmxSend::~DmxSend()>:
 800d664:	4770      	bx	lr
	...

0800d668 <DmxSend::Start(unsigned int)>:
 800d668:	b430      	push	{r4, r5}
 800d66a:	4c09      	ldr	r4, [pc, #36]	; (800d690 <DmxSend::Start(unsigned int)+0x28>)
 800d66c:	2301      	movs	r3, #1
 800d66e:	7822      	ldrb	r2, [r4, #0]
 800d670:	fa03 f001 	lsl.w	r0, r3, r1
 800d674:	ea30 0502 	bics.w	r5, r0, r2
 800d678:	d007      	beq.n	800d68a <DmxSend::Start(unsigned int)+0x22>
 800d67a:	4302      	orrs	r2, r0
 800d67c:	4805      	ldr	r0, [pc, #20]	; (800d694 <DmxSend::Start(unsigned int)+0x2c>)
 800d67e:	7022      	strb	r2, [r4, #0]
 800d680:	6800      	ldr	r0, [r0, #0]
 800d682:	bc30      	pop	{r4, r5}
 800d684:	2200      	movs	r2, #0
 800d686:	f000 bd0d 	b.w	800e0a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d68a:	bc30      	pop	{r4, r5}
 800d68c:	4770      	bx	lr
 800d68e:	bf00      	nop
 800d690:	20000954 	andcs	r0, r0, r4, asr r9
 800d694:	200011ac 	andcs	r1, r0, ip, lsr #3

0800d698 <DmxSend::Stop(unsigned int)>:
 800d698:	b410      	push	{r4}
 800d69a:	480b      	ldr	r0, [pc, #44]	; (800d6c8 <DmxSend::Stop(unsigned int)+0x30>)
 800d69c:	2201      	movs	r2, #1
 800d69e:	7803      	ldrb	r3, [r0, #0]
 800d6a0:	408a      	lsls	r2, r1
 800d6a2:	ea03 0402 	and.w	r4, r3, r2
 800d6a6:	439a      	bics	r2, r3
 800d6a8:	d10a      	bne.n	800d6c0 <DmxSend::Stop(unsigned int)+0x28>
 800d6aa:	ea23 0304 	bic.w	r3, r3, r4
 800d6ae:	7003      	strb	r3, [r0, #0]
 800d6b0:	4806      	ldr	r0, [pc, #24]	; (800d6cc <DmxSend::Stop(unsigned int)+0x34>)
 800d6b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d6b6:	6800      	ldr	r0, [r0, #0]
 800d6b8:	2300      	movs	r3, #0
 800d6ba:	461a      	mov	r2, r3
 800d6bc:	f000 bcf2 	b.w	800e0a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d6c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d6c4:	4770      	bx	lr
 800d6c6:	bf00      	nop
 800d6c8:	20000954 	andcs	r0, r0, r4, asr r9
 800d6cc:	200011ac 	andcs	r1, r0, ip, lsr #3

0800d6d0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800d6d0:	b11b      	cbz	r3, 800d6da <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800d6d2:	4802      	ldr	r0, [pc, #8]	; (800d6dc <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800d6d4:	6800      	ldr	r0, [r0, #0]
 800d6d6:	f000 be27 	b.w	800e328 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800d6da:	4770      	bx	lr
 800d6dc:	200011ac 	andcs	r1, r0, ip, lsr #3

0800d6e0 <DmxSend::Blackout(bool)>:
 800d6e0:	4b01      	ldr	r3, [pc, #4]	; (800d6e8 <DmxSend::Blackout(bool)+0x8>)
 800d6e2:	6818      	ldr	r0, [r3, #0]
 800d6e4:	f000 be46 	b.w	800e374 <Dmx::Blackout()>
 800d6e8:	200011ac 	andcs	r1, r0, ip, lsr #3

0800d6ec <DmxSend::FullOn()>:
 800d6ec:	4b01      	ldr	r3, [pc, #4]	; (800d6f4 <DmxSend::FullOn()+0x8>)
 800d6ee:	6818      	ldr	r0, [r3, #0]
 800d6f0:	f000 be84 	b.w	800e3fc <Dmx::FullOn()>
 800d6f4:	200011ac 	andcs	r1, r0, ip, lsr #3

0800d6f8 <DmxSend::Print()>:
 800d6f8:	b510      	push	{r4, lr}
 800d6fa:	4c0e      	ldr	r4, [pc, #56]	; (800d734 <DmxSend::Print()+0x3c>)
 800d6fc:	480e      	ldr	r0, [pc, #56]	; (800d738 <DmxSend::Print()+0x40>)
 800d6fe:	f7fc fde7 	bl	800a2d0 <printf>
 800d702:	6823      	ldr	r3, [r4, #0]
 800d704:	480d      	ldr	r0, [pc, #52]	; (800d73c <DmxSend::Print()+0x44>)
 800d706:	6819      	ldr	r1, [r3, #0]
 800d708:	f7fc fde2 	bl	800a2d0 <printf>
 800d70c:	6823      	ldr	r3, [r4, #0]
 800d70e:	480c      	ldr	r0, [pc, #48]	; (800d740 <DmxSend::Print()+0x48>)
 800d710:	6859      	ldr	r1, [r3, #4]
 800d712:	f7fc fddd 	bl	800a2d0 <printf>
 800d716:	6823      	ldr	r3, [r4, #0]
 800d718:	490a      	ldr	r1, [pc, #40]	; (800d744 <DmxSend::Print()+0x4c>)
 800d71a:	689b      	ldr	r3, [r3, #8]
 800d71c:	480a      	ldr	r0, [pc, #40]	; (800d748 <DmxSend::Print()+0x50>)
 800d71e:	fbb1 f1f3 	udiv	r1, r1, r3
 800d722:	f7fc fdd5 	bl	800a2d0 <printf>
 800d726:	6823      	ldr	r3, [r4, #0]
 800d728:	4808      	ldr	r0, [pc, #32]	; (800d74c <DmxSend::Print()+0x54>)
 800d72a:	8a19      	ldrh	r1, [r3, #16]
 800d72c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d730:	f7fc bdce 	b.w	800a2d0 <printf>
 800d734:	200011ac 	andcs	r1, r0, ip, lsr #3
 800d738:	08018889 	stmdaeq	r1, {r0, r3, r7, fp, pc}
 800d73c:	08018893 	stmdaeq	r1, {r0, r1, r4, r7, fp, pc}
 800d740:	080188a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, fp, pc}
 800d744:	000f4240 	andeq	r4, pc, r0, asr #4
 800d748:	080188bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, fp, pc}
 800d74c:	080188cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, fp, pc}

0800d750 <DmxSend::~DmxSend()>:
 800d750:	b510      	push	{r4, lr}
 800d752:	4604      	mov	r4, r0
 800d754:	f006 feea 	bl	801452c <operator delete(void*)>
 800d758:	4620      	mov	r0, r4
 800d75a:	bd10      	pop	{r4, pc}

0800d75c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800d75c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d75e:	88c6      	ldrh	r6, [r0, #6]
 800d760:	8885      	ldrh	r5, [r0, #4]
 800d762:	42ae      	cmp	r6, r5
 800d764:	d216      	bcs.n	800d794 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800d766:	4604      	mov	r4, r0
 800d768:	6800      	ldr	r0, [r0, #0]
 800d76a:	1bad      	subs	r5, r5, r6
 800d76c:	4430      	add	r0, r6
 800d76e:	7a26      	ldrb	r6, [r4, #8]
 800d770:	b923      	cbnz	r3, 800d77c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800d772:	b926      	cbnz	r6, 800d77e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800d774:	9200      	str	r2, [sp, #0]
 800d776:	460b      	mov	r3, r1
 800d778:	4a09      	ldr	r2, [pc, #36]	; (800d7a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800d77a:	e003      	b.n	800d784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d77c:	b166      	cbz	r6, 800d798 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800d77e:	9200      	str	r2, [sp, #0]
 800d780:	4a08      	ldr	r2, [pc, #32]	; (800d7a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800d782:	460b      	mov	r3, r1
 800d784:	4629      	mov	r1, r5
 800d786:	f7fc fdcb 	bl	800a320 <snprintf>
 800d78a:	4285      	cmp	r5, r0
 800d78c:	bfa2      	ittt	ge
 800d78e:	88e3      	ldrhge	r3, [r4, #6]
 800d790:	181b      	addge	r3, r3, r0
 800d792:	80e3      	strhge	r3, [r4, #6]
 800d794:	b002      	add	sp, #8
 800d796:	bd70      	pop	{r4, r5, r6, pc}
 800d798:	9200      	str	r2, [sp, #0]
 800d79a:	460b      	mov	r3, r1
 800d79c:	4a02      	ldr	r2, [pc, #8]	; (800d7a8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d79e:	e7f1      	b.n	800d784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d7a0:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800d7a4:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800d7a8:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800d7ac <DmxParams::DmxParams(DmxParamsStore*)>:
 800d7ac:	4a04      	ldr	r2, [pc, #16]	; (800d7c0 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800d7ae:	6001      	str	r1, [r0, #0]
 800d7b0:	2100      	movs	r1, #0
 800d7b2:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800d7b6:	f64f 7228 	movw	r2, #65320	; 0xff28
 800d7ba:	8182      	strh	r2, [r0, #12]
 800d7bc:	4770      	bx	lr
 800d7be:	bf00      	nop
 800d7c0:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800d7c4 <DmxParams::Load()>:
 800d7c4:	b508      	push	{r3, lr}
 800d7c6:	2300      	movs	r3, #0
 800d7c8:	4601      	mov	r1, r0
 800d7ca:	6043      	str	r3, [r0, #4]
 800d7cc:	6800      	ldr	r0, [r0, #0]
 800d7ce:	b120      	cbz	r0, 800d7da <DmxParams::Load()+0x16>
 800d7d0:	6803      	ldr	r3, [r0, #0]
 800d7d2:	3104      	adds	r1, #4
 800d7d4:	68db      	ldr	r3, [r3, #12]
 800d7d6:	4798      	blx	r3
 800d7d8:	2001      	movs	r0, #1
 800d7da:	bd08      	pop	{r3, pc}

0800d7dc <DmxParams::Load(char const*, unsigned int)>:
 800d7dc:	6803      	ldr	r3, [r0, #0]
 800d7de:	b1d3      	cbz	r3, 800d816 <DmxParams::Load(char const*, unsigned int)+0x3a>
 800d7e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d7e2:	2300      	movs	r3, #0
 800d7e4:	6043      	str	r3, [r0, #4]
 800d7e6:	4604      	mov	r4, r0
 800d7e8:	460d      	mov	r5, r1
 800d7ea:	4616      	mov	r6, r2
 800d7ec:	490a      	ldr	r1, [pc, #40]	; (800d818 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800d7ee:	4602      	mov	r2, r0
 800d7f0:	4668      	mov	r0, sp
 800d7f2:	f006 f8cd 	bl	8013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d7f6:	4632      	mov	r2, r6
 800d7f8:	4629      	mov	r1, r5
 800d7fa:	4668      	mov	r0, sp
 800d7fc:	f006 f8cc 	bl	8013998 <ReadConfigFile::Read(char const*, unsigned int)>
 800d800:	4621      	mov	r1, r4
 800d802:	f851 0b04 	ldr.w	r0, [r1], #4
 800d806:	6803      	ldr	r3, [r0, #0]
 800d808:	689b      	ldr	r3, [r3, #8]
 800d80a:	4798      	blx	r3
 800d80c:	4668      	mov	r0, sp
 800d80e:	f006 f8c2 	bl	8013996 <ReadConfigFile::~ReadConfigFile()>
 800d812:	b002      	add	sp, #8
 800d814:	bd70      	pop	{r4, r5, r6, pc}
 800d816:	4770      	bx	lr
 800d818:	0800d8e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, fp, ip, lr, pc}

0800d81c <DmxParams::callbackFunction(char const*)>:
 800d81c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d81e:	460d      	mov	r5, r1
 800d820:	4604      	mov	r4, r0
 800d822:	492d      	ldr	r1, [pc, #180]	; (800d8d8 <DmxParams::callbackFunction(char const*)+0xbc>)
 800d824:	f10d 0206 	add.w	r2, sp, #6
 800d828:	4628      	mov	r0, r5
 800d82a:	f006 f99e 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d82e:	b988      	cbnz	r0, 800d854 <DmxParams::callbackFunction(char const*)+0x38>
 800d830:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d834:	6863      	ldr	r3, [r4, #4]
 800d836:	2a5b      	cmp	r2, #91	; 0x5b
 800d838:	d907      	bls.n	800d84a <DmxParams::callbackFunction(char const*)+0x2e>
 800d83a:	2ab0      	cmp	r2, #176	; 0xb0
 800d83c:	d005      	beq.n	800d84a <DmxParams::callbackFunction(char const*)+0x2e>
 800d83e:	8122      	strh	r2, [r4, #8]
 800d840:	f043 0301 	orr.w	r3, r3, #1
 800d844:	6063      	str	r3, [r4, #4]
 800d846:	b003      	add	sp, #12
 800d848:	bd30      	pop	{r4, r5, pc}
 800d84a:	22b0      	movs	r2, #176	; 0xb0
 800d84c:	8122      	strh	r2, [r4, #8]
 800d84e:	f023 0301 	bic.w	r3, r3, #1
 800d852:	e7f7      	b.n	800d844 <DmxParams::callbackFunction(char const*)+0x28>
 800d854:	4921      	ldr	r1, [pc, #132]	; (800d8dc <DmxParams::callbackFunction(char const*)+0xc0>)
 800d856:	f10d 0206 	add.w	r2, sp, #6
 800d85a:	4628      	mov	r0, r5
 800d85c:	f006 f985 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d860:	b968      	cbnz	r0, 800d87e <DmxParams::callbackFunction(char const*)+0x62>
 800d862:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d866:	6863      	ldr	r3, [r4, #4]
 800d868:	2a0c      	cmp	r2, #12
 800d86a:	bf93      	iteet	ls
 800d86c:	220c      	movls	r2, #12
 800d86e:	8162      	strhhi	r2, [r4, #10]
 800d870:	f043 0302 	orrhi.w	r3, r3, #2
 800d874:	8162      	strhls	r2, [r4, #10]
 800d876:	bf98      	it	ls
 800d878:	f023 0302 	bicls.w	r3, r3, #2
 800d87c:	e7e2      	b.n	800d844 <DmxParams::callbackFunction(char const*)+0x28>
 800d87e:	4918      	ldr	r1, [pc, #96]	; (800d8e0 <DmxParams::callbackFunction(char const*)+0xc4>)
 800d880:	f10d 0205 	add.w	r2, sp, #5
 800d884:	4628      	mov	r0, r5
 800d886:	f006 f9b8 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d88a:	b950      	cbnz	r0, 800d8a2 <DmxParams::callbackFunction(char const*)+0x86>
 800d88c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800d890:	6863      	ldr	r3, [r4, #4]
 800d892:	7322      	strb	r2, [r4, #12]
 800d894:	2a28      	cmp	r2, #40	; 0x28
 800d896:	bf14      	ite	ne
 800d898:	f043 0304 	orrne.w	r3, r3, #4
 800d89c:	f023 0304 	biceq.w	r3, r3, #4
 800d8a0:	e7d0      	b.n	800d844 <DmxParams::callbackFunction(char const*)+0x28>
 800d8a2:	4910      	ldr	r1, [pc, #64]	; (800d8e4 <DmxParams::callbackFunction(char const*)+0xc8>)
 800d8a4:	f10d 0206 	add.w	r2, sp, #6
 800d8a8:	4628      	mov	r0, r5
 800d8aa:	f006 f95e 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d8ae:	2800      	cmp	r0, #0
 800d8b0:	d1c9      	bne.n	800d846 <DmxParams::callbackFunction(char const*)+0x2a>
 800d8b2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d8b6:	6863      	ldr	r3, [r4, #4]
 800d8b8:	1e91      	subs	r1, r2, #2
 800d8ba:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800d8be:	bf3b      	ittet	cc
 800d8c0:	0852      	lsrcc	r2, r2, #1
 800d8c2:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800d8c6:	22ff      	movcs	r2, #255	; 0xff
 800d8c8:	7362      	strbcc	r2, [r4, #13]
 800d8ca:	bf32      	itee	cc
 800d8cc:	f043 0308 	orrcc.w	r3, r3, #8
 800d8d0:	7362      	strbcs	r2, [r4, #13]
 800d8d2:	f023 0308 	biccs.w	r3, r3, #8
 800d8d6:	e7b5      	b.n	800d844 <DmxParams::callbackFunction(char const*)+0x28>
 800d8d8:	0801891c 	stmdaeq	r1, {r2, r3, r4, r8, fp, pc}
 800d8dc:	08018940 	stmdaeq	r1, {r6, r8, fp, pc}
 800d8e0:	08018933 	stmdaeq	r1, {r0, r1, r4, r5, r8, fp, pc}
 800d8e4:	08018927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, pc}

0800d8e8 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800d8e8:	f7ff bf98 	b.w	800d81c <DmxParams::callbackFunction(char const*)>

0800d8ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800d8ec:	b570      	push	{r4, r5, r6, lr}
 800d8ee:	4604      	mov	r4, r0
 800d8f0:	b086      	sub	sp, #24
 800d8f2:	4615      	mov	r5, r2
 800d8f4:	461e      	mov	r6, r3
 800d8f6:	3004      	adds	r0, #4
 800d8f8:	b369      	cbz	r1, 800d956 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800d8fa:	220a      	movs	r2, #10
 800d8fc:	f006 fed9 	bl	80146b2 <memmove>
 800d900:	462a      	mov	r2, r5
 800d902:	4933      	ldr	r1, [pc, #204]	; (800d9d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800d904:	4633      	mov	r3, r6
 800d906:	a803      	add	r0, sp, #12
 800d908:	f005 ffa2 	bl	8013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d90c:	6863      	ldr	r3, [r4, #4]
 800d90e:	8922      	ldrh	r2, [r4, #8]
 800d910:	4930      	ldr	r1, [pc, #192]	; (800d9d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800d912:	f003 0301 	and.w	r3, r3, #1
 800d916:	a803      	add	r0, sp, #12
 800d918:	f7ff ff20 	bl	800d75c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d91c:	6863      	ldr	r3, [r4, #4]
 800d91e:	8962      	ldrh	r2, [r4, #10]
 800d920:	492d      	ldr	r1, [pc, #180]	; (800d9d8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800d922:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d926:	a803      	add	r0, sp, #12
 800d928:	f7ff ff18 	bl	800d75c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d92c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d930:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d934:	7b23      	ldrb	r3, [r4, #12]
 800d936:	6861      	ldr	r1, [r4, #4]
 800d938:	42aa      	cmp	r2, r5
 800d93a:	d221      	bcs.n	800d980 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800d93c:	9803      	ldr	r0, [sp, #12]
 800d93e:	0749      	lsls	r1, r1, #29
 800d940:	4410      	add	r0, r2
 800d942:	eba5 0502 	sub.w	r5, r5, r2
 800d946:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d94a:	d40b      	bmi.n	800d964 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800d94c:	b95a      	cbnz	r2, 800d966 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800d94e:	9300      	str	r3, [sp, #0]
 800d950:	4a22      	ldr	r2, [pc, #136]	; (800d9dc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800d952:	4b23      	ldr	r3, [pc, #140]	; (800d9e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d954:	e00a      	b.n	800d96c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d956:	6823      	ldr	r3, [r4, #0]
 800d958:	681a      	ldr	r2, [r3, #0]
 800d95a:	4601      	mov	r1, r0
 800d95c:	68d2      	ldr	r2, [r2, #12]
 800d95e:	4618      	mov	r0, r3
 800d960:	4790      	blx	r2
 800d962:	e7cd      	b.n	800d900 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d964:	b37a      	cbz	r2, 800d9c6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800d966:	9300      	str	r3, [sp, #0]
 800d968:	4a1e      	ldr	r2, [pc, #120]	; (800d9e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800d96a:	4b1d      	ldr	r3, [pc, #116]	; (800d9e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d96c:	4629      	mov	r1, r5
 800d96e:	f7fc fcd7 	bl	800a320 <snprintf>
 800d972:	4285      	cmp	r5, r0
 800d974:	bfa2      	ittt	ge
 800d976:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d97a:	18c0      	addge	r0, r0, r3
 800d97c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d980:	7b62      	ldrb	r2, [r4, #13]
 800d982:	6863      	ldr	r3, [r4, #4]
 800d984:	4918      	ldr	r1, [pc, #96]	; (800d9e8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800d986:	3201      	adds	r2, #1
 800d988:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d98c:	0052      	lsls	r2, r2, #1
 800d98e:	a803      	add	r0, sp, #12
 800d990:	f7ff fee4 	bl	800d75c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d994:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d998:	b17b      	cbz	r3, 800d9ba <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800d99a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d99e:	9b03      	ldr	r3, [sp, #12]
 800d9a0:	4413      	add	r3, r2
 800d9a2:	227d      	movs	r2, #125	; 0x7d
 800d9a4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d9a8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9ac:	9903      	ldr	r1, [sp, #12]
 800d9ae:	54ca      	strb	r2, [r1, r3]
 800d9b0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9b4:	3301      	adds	r3, #1
 800d9b6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d9ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9c0:	601a      	str	r2, [r3, #0]
 800d9c2:	b006      	add	sp, #24
 800d9c4:	bd70      	pop	{r4, r5, r6, pc}
 800d9c6:	9300      	str	r3, [sp, #0]
 800d9c8:	4a08      	ldr	r2, [pc, #32]	; (800d9ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800d9ca:	4b05      	ldr	r3, [pc, #20]	; (800d9e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d9cc:	e7ce      	b.n	800d96c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d9ce:	bf00      	nop
 800d9d0:	08018949 	stmdaeq	r1, {r0, r3, r6, r8, fp, pc}
 800d9d4:	0801891c 	stmdaeq	r1, {r2, r3, r4, r8, fp, pc}
 800d9d8:	08018940 	stmdaeq	r1, {r6, r8, fp, pc}
 800d9dc:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800d9e0:	08018933 	stmdaeq	r1, {r0, r1, r4, r5, r8, fp, pc}
 800d9e4:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800d9e8:	08018927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, pc}
 800d9ec:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800d9f0 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800d9f0:	b513      	push	{r0, r1, r4, lr}
 800d9f2:	6804      	ldr	r4, [r0, #0]
 800d9f4:	b914      	cbnz	r4, 800d9fc <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d9f6:	601c      	str	r4, [r3, #0]
 800d9f8:	b002      	add	sp, #8
 800d9fa:	bd10      	pop	{r4, pc}
 800d9fc:	9300      	str	r3, [sp, #0]
 800d9fe:	4613      	mov	r3, r2
 800da00:	460a      	mov	r2, r1
 800da02:	2100      	movs	r1, #0
 800da04:	f7ff ff72 	bl	800d8ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800da08:	e7f6      	b.n	800d9f8 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800da0c <DmxParams::Set(Dmx*)>:
 800da0c:	b513      	push	{r0, r1, r4, lr}
 800da0e:	4604      	mov	r4, r0
 800da10:	4608      	mov	r0, r1
 800da12:	6863      	ldr	r3, [r4, #4]
 800da14:	07db      	lsls	r3, r3, #31
 800da16:	d504      	bpl.n	800da22 <DmxParams::Set(Dmx*)+0x16>
 800da18:	8921      	ldrh	r1, [r4, #8]
 800da1a:	9001      	str	r0, [sp, #4]
 800da1c:	f000 fc5a 	bl	800e2d4 <Dmx::SetDmxBreakTime(unsigned int)>
 800da20:	9801      	ldr	r0, [sp, #4]
 800da22:	6863      	ldr	r3, [r4, #4]
 800da24:	0799      	lsls	r1, r3, #30
 800da26:	d504      	bpl.n	800da32 <DmxParams::Set(Dmx*)+0x26>
 800da28:	8961      	ldrh	r1, [r4, #10]
 800da2a:	9001      	str	r0, [sp, #4]
 800da2c:	f000 fc5c 	bl	800e2e8 <Dmx::SetDmxMabTime(unsigned int)>
 800da30:	9801      	ldr	r0, [sp, #4]
 800da32:	6863      	ldr	r3, [r4, #4]
 800da34:	075a      	lsls	r2, r3, #29
 800da36:	d508      	bpl.n	800da4a <DmxParams::Set(Dmx*)+0x3e>
 800da38:	7b21      	ldrb	r1, [r4, #12]
 800da3a:	b111      	cbz	r1, 800da42 <DmxParams::Set(Dmx*)+0x36>
 800da3c:	4b09      	ldr	r3, [pc, #36]	; (800da64 <DmxParams::Set(Dmx*)+0x58>)
 800da3e:	fbb3 f1f1 	udiv	r1, r3, r1
 800da42:	9001      	str	r0, [sp, #4]
 800da44:	f000 fc1e 	bl	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 800da48:	9801      	ldr	r0, [sp, #4]
 800da4a:	6863      	ldr	r3, [r4, #4]
 800da4c:	071b      	lsls	r3, r3, #28
 800da4e:	d507      	bpl.n	800da60 <DmxParams::Set(Dmx*)+0x54>
 800da50:	7b61      	ldrb	r1, [r4, #13]
 800da52:	3101      	adds	r1, #1
 800da54:	0049      	lsls	r1, r1, #1
 800da56:	b002      	add	sp, #8
 800da58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da5c:	f000 bc4e 	b.w	800e2fc <Dmx::SetDmxSlots(unsigned short)>
 800da60:	b002      	add	sp, #8
 800da62:	bd10      	pop	{r4, pc}
 800da64:	000f4240 	andeq	r4, pc, r0, asr #4

0800da68 <DmxParams::Dump()>:
 800da68:	4770      	bx	lr

0800da6a <_gpio_mode_output(unsigned int, unsigned int)>:
 800da6a:	b513      	push	{r0, r1, r4, lr}
 800da6c:	460a      	mov	r2, r1
 800da6e:	9101      	str	r1, [sp, #4]
 800da70:	2100      	movs	r1, #0
 800da72:	4604      	mov	r4, r0
 800da74:	f007 f979 	bl	8014d6a <gpio_af_set>
 800da78:	9b01      	ldr	r3, [sp, #4]
 800da7a:	2200      	movs	r2, #0
 800da7c:	2101      	movs	r1, #1
 800da7e:	4620      	mov	r0, r4
 800da80:	b002      	add	sp, #8
 800da82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da86:	f007 b935 	b.w	8014cf4 <gpio_mode_set>
	...

0800da8c <_port_to_uart(unsigned int)>:
 800da8c:	4a03      	ldr	r2, [pc, #12]	; (800da9c <_port_to_uart(unsigned int)+0x10>)
 800da8e:	4b04      	ldr	r3, [pc, #16]	; (800daa0 <_port_to_uart(unsigned int)+0x14>)
 800da90:	2800      	cmp	r0, #0
 800da92:	bf14      	ite	ne
 800da94:	4610      	movne	r0, r2
 800da96:	4618      	moveq	r0, r3
 800da98:	4770      	bx	lr
 800da9a:	bf00      	nop
 800da9c:	40011400 	andmi	r1, r1, r0, lsl #8
 800daa0:	40004800 	andmi	r4, r0, r0, lsl #16

0800daa4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800daa4:	b570      	push	{r4, r5, r6, lr}
 800daa6:	f3bf 8f5f 	dmb	sy
 800daaa:	4ba1      	ldr	r3, [pc, #644]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800daac:	2508      	movs	r5, #8
 800daae:	f8c3 5418 	str.w	r5, [r3, #1048]	; 0x418
 800dab2:	6802      	ldr	r2, [r0, #0]
 800dab4:	f012 0f02 	tst.w	r2, #2
 800dab8:	4a9e      	ldr	r2, [pc, #632]	; (800dd34 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x290>)
 800daba:	d017      	beq.n	800daec <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x48>
 800dabc:	6804      	ldr	r4, [r0, #0]
 800dabe:	f024 0402 	bic.w	r4, r4, #2
 800dac2:	6004      	str	r4, [r0, #0]
 800dac4:	6840      	ldr	r0, [r0, #4]
 800dac6:	f44f 7004 	mov.w	r0, #528	; 0x210
 800daca:	fb00 2201 	mla	r2, r0, r1, r2
 800dace:	2100      	movs	r1, #0
 800dad0:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
 800dad4:	2102      	movs	r1, #2
 800dad6:	f8c2 120c 	str.w	r1, [r2, #524]	; 0x20c
 800dada:	2210      	movs	r2, #16
 800dadc:	f8c3 5428 	str.w	r5, [r3, #1064]	; 0x428
 800dae0:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800dae4:	2220      	movs	r2, #32
 800dae6:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800daea:	bd70      	pop	{r4, r5, r6, pc}
 800daec:	f44f 7304 	mov.w	r3, #528	; 0x210
 800daf0:	fb03 2401 	mla	r4, r3, r1, r2
 800daf4:	6840      	ldr	r0, [r0, #4]
 800daf6:	f8d4 420c 	ldr.w	r4, [r4, #524]	; 0x20c
 800dafa:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800dafe:	2c0a      	cmp	r4, #10
 800db00:	f200 810f 	bhi.w	800dd22 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x27e>
 800db04:	e8df f014 	tbh	[pc, r4, lsl #1]
 800db08:	010d000b 	tsteq	sp, fp
 800db0c:	010d001b 	tsteq	sp, fp, lsl r0
 800db10:	00630049 	rsbeq	r0, r3, r9, asr #32
 800db14:	00940082 	addseq	r0, r4, r2, lsl #1
 800db18:	00d900c1 	sbcseq	r0, r9, r1, asr #1
 800db1c:	435900ef 	cmpmi	r9, #239	; 0xef
 800db20:	1853      	adds	r3, r2, r1
 800db22:	5450      	strb	r0, [r2, r1]
 800db24:	2408      	movs	r4, #8
 800db26:	2201      	movs	r2, #1
 800db28:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800db2c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800db30:	4b7f      	ldr	r3, [pc, #508]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800db32:	2208      	movs	r2, #8
 800db34:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800db38:	f3bf 8f5f 	dmb	sy
 800db3c:	e7d5      	b.n	800daea <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x46>
 800db3e:	b148      	cbz	r0, 800db54 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xb0>
 800db40:	28cc      	cmp	r0, #204	; 0xcc
 800db42:	f44f 7304 	mov.w	r3, #528	; 0x210
 800db46:	d01e      	beq.n	800db86 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xe2>
 800db48:	fb03 2301 	mla	r3, r3, r1, r2
 800db4c:	2200      	movs	r2, #0
 800db4e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800db52:	e7ed      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db54:	434b      	muls	r3, r1
 800db56:	18d4      	adds	r4, r2, r3
 800db58:	54d0      	strb	r0, [r2, r3]
 800db5a:	2301      	movs	r3, #1
 800db5c:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
 800db60:	4b75      	ldr	r3, [pc, #468]	; (800dd38 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x294>)
 800db62:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800db66:	685a      	ldr	r2, [r3, #4]
 800db68:	3201      	adds	r2, #1
 800db6a:	605a      	str	r2, [r3, #4]
 800db6c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800db70:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800db74:	60da      	str	r2, [r3, #12]
 800db76:	2304      	movs	r3, #4
 800db78:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
 800db7c:	4b6c      	ldr	r3, [pc, #432]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800db7e:	2210      	movs	r2, #16
 800db80:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 800db84:	e7d4      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db86:	434b      	muls	r3, r1
 800db88:	18d1      	adds	r1, r2, r3
 800db8a:	54d0      	strb	r0, [r2, r3]
 800db8c:	4b6b      	ldr	r3, [pc, #428]	; (800dd3c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x298>)
 800db8e:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800db92:	2305      	movs	r3, #5
 800db94:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800db98:	e7f0      	b.n	800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xd8>
 800db9a:	fb03 2101 	mla	r1, r3, r1, r2
 800db9e:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800dba2:	b29a      	uxth	r2, r3
 800dba4:	3301      	adds	r3, #1
 800dba6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800dbaa:	bf81      	itttt	hi
 800dbac:	f443 4300 	orrhi.w	r3, r3, #32768	; 0x8000
 800dbb0:	f8c1 3204 	strhi.w	r3, [r1, #516]	; 0x204
 800dbb4:	2300      	movhi	r3, #0
 800dbb6:	f8c1 320c 	strhi.w	r3, [r1, #524]	; 0x20c
 800dbba:	bf88      	it	hi
 800dbbc:	4b5c      	ldrhi	r3, [pc, #368]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800dbbe:	5488      	strb	r0, [r1, r2]
 800dbc0:	bf8a      	itet	hi
 800dbc2:	2210      	movhi	r2, #16
 800dbc4:	f8c1 3204 	strls.w	r3, [r1, #516]	; 0x204
 800dbc8:	f8c3 2428 	strhi.w	r2, [r3, #1064]	; 0x428
 800dbcc:	e7b0      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dbce:	fb03 2301 	mla	r3, r3, r1, r2
 800dbd2:	f8b3 5204 	ldrh.w	r5, [r3, #516]	; 0x204
 800dbd6:	f8b3 6206 	ldrh.w	r6, [r3, #518]	; 0x206
 800dbda:	5558      	strb	r0, [r3, r5]
 800dbdc:	1c6c      	adds	r4, r5, #1
 800dbde:	3d17      	subs	r5, #23
 800dbe0:	b2a4      	uxth	r4, r4
 800dbe2:	4430      	add	r0, r6
 800dbe4:	2de7      	cmp	r5, #231	; 0xe7
 800dbe6:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dbea:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800dbee:	d808      	bhi.n	800dc02 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15e>
 800dbf0:	7898      	ldrb	r0, [r3, #2]
 800dbf2:	42a0      	cmp	r0, r4
 800dbf4:	d105      	bne.n	800dc02 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15e>
 800dbf6:	2206      	movs	r2, #6
 800dbf8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dbfc:	4b4c      	ldr	r3, [pc, #304]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800dbfe:	2220      	movs	r2, #32
 800dc00:	e7be      	b.n	800db80 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xdc>
 800dc02:	2cff      	cmp	r4, #255	; 0xff
 800dc04:	d994      	bls.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dc06:	f44f 7304 	mov.w	r3, #528	; 0x210
 800dc0a:	e79d      	b.n	800db48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xa4>
 800dc0c:	fb03 2101 	mla	r1, r3, r1, r2
 800dc10:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800dc14:	54c8      	strb	r0, [r1, r3]
 800dc16:	3301      	adds	r3, #1
 800dc18:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800dc1c:	f8b1 3206 	ldrh.w	r3, [r1, #518]	; 0x206
 800dc20:	eba3 2300 	sub.w	r3, r3, r0, lsl #8
 800dc24:	f8a1 3206 	strh.w	r3, [r1, #518]	; 0x206
 800dc28:	2307      	movs	r3, #7
 800dc2a:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800dc2e:	e77f      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dc30:	4e3f      	ldr	r6, [pc, #252]	; (800dd30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800dc32:	2320      	movs	r3, #32
 800dc34:	f8c6 3428 	str.w	r3, [r6, #1064]	; 0x428
 800dc38:	f44f 7304 	mov.w	r3, #528	; 0x210
 800dc3c:	fb03 2301 	mla	r3, r3, r1, r2
 800dc40:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800dc44:	f8b3 5206 	ldrh.w	r5, [r3, #518]	; 0x206
 800dc48:	5518      	strb	r0, [r3, r4]
 800dc4a:	3401      	adds	r4, #1
 800dc4c:	1a28      	subs	r0, r5, r0
 800dc4e:	b2a4      	uxth	r4, r4
 800dc50:	b280      	uxth	r0, r0
 800dc52:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dc56:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800dc5a:	b910      	cbnz	r0, 800dc62 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1be>
 800dc5c:	7858      	ldrb	r0, [r3, #1]
 800dc5e:	2801      	cmp	r0, #1
 800dc60:	d007      	beq.n	800dc72 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ce>
 800dc62:	f44f 7304 	mov.w	r3, #528	; 0x210
 800dc66:	fb03 2301 	mla	r3, r3, r1, r2
 800dc6a:	2000      	movs	r0, #0
 800dc6c:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800dc70:	e7c9      	b.n	800dc06 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x162>
 800dc72:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 800dc76:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dc7a:	4b31      	ldr	r3, [pc, #196]	; (800dd40 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29c>)
 800dc7c:	6858      	ldr	r0, [r3, #4]
 800dc7e:	4b31      	ldr	r3, [pc, #196]	; (800dd44 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2a0>)
 800dc80:	6018      	str	r0, [r3, #0]
 800dc82:	2310      	movs	r3, #16
 800dc84:	f8c6 3428 	str.w	r3, [r6, #1064]	; 0x428
 800dc88:	e7bd      	b.n	800dc06 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x162>
 800dc8a:	fb03 2301 	mla	r3, r3, r1, r2
 800dc8e:	28aa      	cmp	r0, #170	; 0xaa
 800dc90:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800dc94:	5518      	strb	r0, [r3, r4]
 800dc96:	f104 0401 	add.w	r4, r4, #1
 800dc9a:	b2a4      	uxth	r4, r4
 800dc9c:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dca0:	d002      	beq.n	800dca8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x204>
 800dca2:	2c09      	cmp	r4, #9
 800dca4:	f47f af44 	bne.w	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dca8:	f44f 7304 	mov.w	r3, #528	; 0x210
 800dcac:	fb03 2301 	mla	r3, r3, r1, r2
 800dcb0:	2200      	movs	r2, #0
 800dcb2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800dcb6:	2209      	movs	r2, #9
 800dcb8:	e749      	b.n	800db4e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800dcba:	fb03 2101 	mla	r1, r3, r1, r2
 800dcbe:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800dcc2:	54c8      	strb	r0, [r1, r3]
 800dcc4:	3301      	adds	r3, #1
 800dcc6:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800dcca:	f8b1 3208 	ldrh.w	r3, [r1, #520]	; 0x208
 800dcce:	3301      	adds	r3, #1
 800dcd0:	b29b      	uxth	r3, r3
 800dcd2:	2b0c      	cmp	r3, #12
 800dcd4:	d002      	beq.n	800dcdc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x238>
 800dcd6:	f8a1 3208 	strh.w	r3, [r1, #520]	; 0x208
 800dcda:	e729      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dcdc:	2300      	movs	r3, #0
 800dcde:	f8a1 3208 	strh.w	r3, [r1, #520]	; 0x208
 800dce2:	230a      	movs	r3, #10
 800dce4:	e7a1      	b.n	800dc2a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800dce6:	fb03 2101 	mla	r1, r3, r1, r2
 800dcea:	f8b1 2208 	ldrh.w	r2, [r1, #520]	; 0x208
 800dcee:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800dcf2:	3201      	adds	r2, #1
 800dcf4:	b292      	uxth	r2, r2
 800dcf6:	54c8      	strb	r0, [r1, r3]
 800dcf8:	3301      	adds	r3, #1
 800dcfa:	b29b      	uxth	r3, r3
 800dcfc:	2a04      	cmp	r2, #4
 800dcfe:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800dd02:	f8a1 2208 	strh.w	r2, [r1, #520]	; 0x208
 800dd06:	f47f af13 	bne.w	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dd0a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800dd0e:	2200      	movs	r2, #0
 800dd10:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800dd14:	4b0a      	ldr	r3, [pc, #40]	; (800dd40 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29c>)
 800dd16:	f8c1 220c 	str.w	r2, [r1, #524]	; 0x20c
 800dd1a:	685a      	ldr	r2, [r3, #4]
 800dd1c:	4b09      	ldr	r3, [pc, #36]	; (800dd44 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2a0>)
 800dd1e:	601a      	str	r2, [r3, #0]
 800dd20:	e706      	b.n	800db30 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800dd22:	fb03 2101 	mla	r1, r3, r1, r2
 800dd26:	2300      	movs	r3, #0
 800dd28:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800dd2c:	e77d      	b.n	800dc2a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800dd2e:	bf00      	nop
 800dd30:	40020000 	andmi	r0, r2, r0
 800dd34:	20000958 	andcs	r0, r0, r8, asr r9
 800dd38:	20001188 	andcs	r1, r0, r8, lsl #3
 800dd3c:	00cc0001 	sbceq	r0, ip, r1
 800dd40:	e0001000 	and	r1, r0, r0
 800dd44:	200011b0 			; <UNDEFINED> instruction: 0x200011b0

0800dd48 <USART2_IRQHandler>:
 800dd48:	4801      	ldr	r0, [pc, #4]	; (800dd50 <USART2_IRQHandler+0x8>)
 800dd4a:	2100      	movs	r1, #0
 800dd4c:	f7ff beaa 	b.w	800daa4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800dd50:	40004800 	andmi	r4, r0, r0, lsl #16

0800dd54 <USART5_IRQHandler>:
 800dd54:	4801      	ldr	r0, [pc, #4]	; (800dd5c <USART5_IRQHandler+0x8>)
 800dd56:	2101      	movs	r1, #1
 800dd58:	f7ff bea4 	b.w	800daa4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800dd5c:	40011400 	andmi	r1, r1, r0, lsl #8

0800dd60 <TIMER1_IRQHandler>:
 800dd60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd62:	f3bf 8f5f 	dmb	sy
 800dd66:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dd6a:	4d48      	ldr	r5, [pc, #288]	; (800de8c <TIMER1_IRQHandler+0x12c>)
 800dd6c:	691e      	ldr	r6, [r3, #16]
 800dd6e:	4f48      	ldr	r7, [pc, #288]	; (800de90 <TIMER1_IRQHandler+0x130>)
 800dd70:	882c      	ldrh	r4, [r5, #0]
 800dd72:	2308      	movs	r3, #8
 800dd74:	07b1      	lsls	r1, r6, #30
 800dd76:	b2a4      	uxth	r4, r4
 800dd78:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
 800dd7c:	d52a      	bpl.n	800ddd4 <TIMER1_IRQHandler+0x74>
 800dd7e:	07e2      	lsls	r2, r4, #31
 800dd80:	d50d      	bpl.n	800dd9e <TIMER1_IRQHandler+0x3e>
 800dd82:	882b      	ldrh	r3, [r5, #0]
 800dd84:	4843      	ldr	r0, [pc, #268]	; (800de94 <TIMER1_IRQHandler+0x134>)
 800dd86:	b29b      	uxth	r3, r3
 800dd88:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dd8c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800dd90:	802b      	strh	r3, [r5, #0]
 800dd92:	f7ff fe6a 	bl	800da6a <_gpio_mode_output(unsigned int, unsigned int)>
 800dd96:	f44f 7380 	mov.w	r3, #256	; 0x100
 800dd9a:	f8c7 3c28 	str.w	r3, [r7, #3112]	; 0xc28
 800dd9e:	07a3      	lsls	r3, r4, #30
 800dda0:	d50c      	bpl.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800dda2:	882b      	ldrh	r3, [r5, #0]
 800dda4:	483c      	ldr	r0, [pc, #240]	; (800de98 <TIMER1_IRQHandler+0x138>)
 800dda6:	b29b      	uxth	r3, r3
 800dda8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ddac:	2140      	movs	r1, #64	; 0x40
 800ddae:	802b      	strh	r3, [r5, #0]
 800ddb0:	f7ff fe5b 	bl	800da6a <_gpio_mode_output(unsigned int, unsigned int)>
 800ddb4:	4b36      	ldr	r3, [pc, #216]	; (800de90 <TIMER1_IRQHandler+0x130>)
 800ddb6:	2240      	movs	r2, #64	; 0x40
 800ddb8:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800ddbc:	4631      	mov	r1, r6
 800ddbe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ddc2:	f007 f9b0 	bl	8015126 <timer_interrupt_flag_clear>
 800ddc6:	4b32      	ldr	r3, [pc, #200]	; (800de90 <TIMER1_IRQHandler+0x130>)
 800ddc8:	2208      	movs	r2, #8
 800ddca:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800ddce:	f3bf 8f5f 	dmb	sy
 800ddd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ddd4:	0777      	lsls	r7, r6, #29
 800ddd6:	d51c      	bpl.n	800de12 <TIMER1_IRQHandler+0xb2>
 800ddd8:	05e5      	lsls	r5, r4, #23
 800ddda:	d50c      	bpl.n	800ddf6 <TIMER1_IRQHandler+0x96>
 800dddc:	482d      	ldr	r0, [pc, #180]	; (800de94 <TIMER1_IRQHandler+0x134>)
 800ddde:	2201      	movs	r2, #1
 800dde0:	2102      	movs	r1, #2
 800dde2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800dde6:	f006 ff85 	bl	8014cf4 <gpio_mode_set>
 800ddea:	482a      	ldr	r0, [pc, #168]	; (800de94 <TIMER1_IRQHandler+0x134>)
 800ddec:	f44f 7280 	mov.w	r2, #256	; 0x100
 800ddf0:	2107      	movs	r1, #7
 800ddf2:	f006 ffba 	bl	8014d6a <gpio_af_set>
 800ddf6:	05a0      	lsls	r0, r4, #22
 800ddf8:	d5e0      	bpl.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800ddfa:	4827      	ldr	r0, [pc, #156]	; (800de98 <TIMER1_IRQHandler+0x138>)
 800ddfc:	2340      	movs	r3, #64	; 0x40
 800ddfe:	2201      	movs	r2, #1
 800de00:	2102      	movs	r1, #2
 800de02:	f006 ff77 	bl	8014cf4 <gpio_mode_set>
 800de06:	4824      	ldr	r0, [pc, #144]	; (800de98 <TIMER1_IRQHandler+0x138>)
 800de08:	2240      	movs	r2, #64	; 0x40
 800de0a:	2108      	movs	r1, #8
 800de0c:	f006 ffad 	bl	8014d6a <gpio_af_set>
 800de10:	e7d4      	b.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800de12:	0731      	lsls	r1, r6, #28
 800de14:	d5d2      	bpl.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800de16:	05e2      	lsls	r2, r4, #23
 800de18:	d516      	bpl.n	800de48 <TIMER1_IRQHandler+0xe8>
 800de1a:	4d20      	ldr	r5, [pc, #128]	; (800de9c <TIMER1_IRQHandler+0x13c>)
 800de1c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800de1e:	f023 0301 	bic.w	r3, r3, #1
 800de22:	65ab      	str	r3, [r5, #88]	; 0x58
 800de24:	2103      	movs	r1, #3
 800de26:	4628      	mov	r0, r5
 800de28:	2220      	movs	r2, #32
 800de2a:	f006 ff27 	bl	8014c7c <dma_interrupt_flag_clear>
 800de2e:	4b1c      	ldr	r3, [pc, #112]	; (800dea0 <TIMER1_IRQHandler+0x140>)
 800de30:	666b      	str	r3, [r5, #100]	; 0x64
 800de32:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800de36:	65eb      	str	r3, [r5, #92]	; 0x5c
 800de38:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800de3a:	481a      	ldr	r0, [pc, #104]	; (800dea4 <TIMER1_IRQHandler+0x144>)
 800de3c:	f043 0301 	orr.w	r3, r3, #1
 800de40:	65ab      	str	r3, [r5, #88]	; 0x58
 800de42:	2180      	movs	r1, #128	; 0x80
 800de44:	f007 fbb6 	bl	80155b4 <usart_dma_transmit_config>
 800de48:	05a3      	lsls	r3, r4, #22
 800de4a:	d5b7      	bpl.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800de4c:	4c13      	ldr	r4, [pc, #76]	; (800de9c <TIMER1_IRQHandler+0x13c>)
 800de4e:	4816      	ldr	r0, [pc, #88]	; (800dea8 <TIMER1_IRQHandler+0x148>)
 800de50:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800de54:	f023 0301 	bic.w	r3, r3, #1
 800de58:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800de5c:	2220      	movs	r2, #32
 800de5e:	2106      	movs	r1, #6
 800de60:	f006 ff0c 	bl	8014c7c <dma_interrupt_flag_clear>
 800de64:	4b0e      	ldr	r3, [pc, #56]	; (800dea0 <TIMER1_IRQHandler+0x140>)
 800de66:	4811      	ldr	r0, [pc, #68]	; (800deac <TIMER1_IRQHandler+0x14c>)
 800de68:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800de6c:	f8b3 3406 	ldrh.w	r3, [r3, #1030]	; 0x406
 800de70:	f8c4 24ac 	str.w	r2, [r4, #1196]	; 0x4ac
 800de74:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 800de78:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800de7c:	f043 0301 	orr.w	r3, r3, #1
 800de80:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800de84:	2180      	movs	r1, #128	; 0x80
 800de86:	f007 fb95 	bl	80155b4 <usart_dma_transmit_config>
 800de8a:	e797      	b.n	800ddbc <TIMER1_IRQHandler+0x5c>
 800de8c:	200011a8 	andcs	r1, r0, r8, lsr #3
 800de90:	40020000 	andmi	r0, r2, r0
 800de94:	40020c00 	andmi	r0, r2, r0, lsl #24
 800de98:	40020800 	andmi	r0, r2, r0, lsl #16
 800de9c:	40026000 	andmi	r6, r2, r0
 800dea0:	20000d78 	andcs	r0, r0, r8, ror sp
 800dea4:	40004800 	andmi	r4, r0, r0, lsl #16
 800dea8:	40026400 	andmi	r6, r2, r0, lsl #8
 800deac:	40011400 	andmi	r1, r1, r0, lsl #8

0800deb0 <Dmx::ClearData(unsigned int)>:
 800deb0:	4a0a      	ldr	r2, [pc, #40]	; (800dedc <Dmx::ClearData(unsigned int)+0x2c>)
 800deb2:	f44f 7301 	mov.w	r3, #516	; 0x204
 800deb6:	fb03 2301 	mla	r3, r3, r1, r2
 800deba:	b510      	push	{r4, lr}
 800debc:	f203 2002 	addw	r0, r3, #514	; 0x202
 800dec0:	2400      	movs	r4, #0
 800dec2:	f823 4b02 	strh.w	r4, [r3], #2
 800dec6:	4283      	cmp	r3, r0
 800dec8:	d1fb      	bne.n	800dec2 <Dmx::ClearData(unsigned int)+0x12>
 800deca:	f44f 7301 	mov.w	r3, #516	; 0x204
 800dece:	fb03 2101 	mla	r1, r3, r1, r2
 800ded2:	f240 2301 	movw	r3, #513	; 0x201
 800ded6:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 800deda:	bd10      	pop	{r4, pc}
 800dedc:	20000d78 	andcs	r0, r0, r8, ror sp

0800dee0 <Dmx::StartData(unsigned int, unsigned int)>:
 800dee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dee2:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800dee6:	b085      	sub	sp, #20
 800dee8:	6943      	ldr	r3, [r0, #20]
 800deea:	460c      	mov	r4, r1
 800deec:	4615      	mov	r5, r2
 800deee:	2b00      	cmp	r3, #0
 800def0:	d168      	bne.n	800dfc4 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800def2:	4e41      	ldr	r6, [pc, #260]	; (800dff8 <Dmx::StartData(unsigned int, unsigned int)+0x118>)
 800def4:	8834      	ldrh	r4, [r6, #0]
 800def6:	b2a4      	uxth	r4, r4
 800def8:	2c00      	cmp	r4, #0
 800defa:	d157      	bne.n	800dfac <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 800defc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800df00:	f006 ff74 	bl	8014dec <rcu_periph_clock_enable>
 800df04:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df08:	f007 f820 	bl	8014f4c <timer_deinit>
 800df0c:	4b3b      	ldr	r3, [pc, #236]	; (800dffc <Dmx::StartData(unsigned int, unsigned int)+0x11c>)
 800df0e:	f88d 400c 	strb.w	r4, [sp, #12]
 800df12:	681b      	ldr	r3, [r3, #0]
 800df14:	9302      	str	r3, [sp, #8]
 800df16:	4669      	mov	r1, sp
 800df18:	23c7      	movs	r3, #199	; 0xc7
 800df1a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df1e:	e9cd 3400 	strd	r3, r4, [sp]
 800df22:	f007 f8b9 	bl	8015098 <timer_init>
 800df26:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800df2a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df2e:	f007 f8fd 	bl	801512c <timer_flag_clear>
 800df32:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800df36:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df3a:	f007 f8f4 	bl	8015126 <timer_interrupt_flag_clear>
 800df3e:	2210      	movs	r2, #16
 800df40:	4621      	mov	r1, r4
 800df42:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df46:	f007 f9e1 	bl	801530c <timer_channel_output_mode_config>
 800df4a:	2210      	movs	r2, #16
 800df4c:	2101      	movs	r1, #1
 800df4e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df52:	f007 f9db 	bl	801530c <timer_channel_output_mode_config>
 800df56:	4f2a      	ldr	r7, [pc, #168]	; (800e000 <Dmx::StartData(unsigned int, unsigned int)+0x120>)
 800df58:	2210      	movs	r2, #16
 800df5a:	2102      	movs	r1, #2
 800df5c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df60:	f007 f9d4 	bl	801530c <timer_channel_output_mode_config>
 800df64:	4622      	mov	r2, r4
 800df66:	4621      	mov	r1, r4
 800df68:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df6c:	f007 f9f4 	bl	8015358 <timer_channel_output_pulse_value_config>
 800df70:	683a      	ldr	r2, [r7, #0]
 800df72:	2101      	movs	r1, #1
 800df74:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df78:	f007 f9ee 	bl	8015358 <timer_channel_output_pulse_value_config>
 800df7c:	4b21      	ldr	r3, [pc, #132]	; (800e004 <Dmx::StartData(unsigned int, unsigned int)+0x124>)
 800df7e:	683a      	ldr	r2, [r7, #0]
 800df80:	681b      	ldr	r3, [r3, #0]
 800df82:	2102      	movs	r1, #2
 800df84:	441a      	add	r2, r3
 800df86:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df8a:	f007 f9e5 	bl	8015358 <timer_channel_output_pulse_value_config>
 800df8e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800df92:	210e      	movs	r1, #14
 800df94:	f007 f8c3 	bl	801511e <timer_interrupt_enable>
 800df98:	4b1b      	ldr	r3, [pc, #108]	; (800e008 <Dmx::StartData(unsigned int, unsigned int)+0x128>)
 800df9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df9e:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800dfa2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dfa6:	601a      	str	r2, [r3, #0]
 800dfa8:	f007 f8b4 	bl	8015114 <timer_enable>
 800dfac:	8831      	ldrh	r1, [r6, #0]
 800dfae:	2201      	movs	r2, #1
 800dfb0:	fa02 f305 	lsl.w	r3, r2, r5
 800dfb4:	430b      	orrs	r3, r1
 800dfb6:	b29b      	uxth	r3, r3
 800dfb8:	8033      	strh	r3, [r6, #0]
 800dfba:	4b14      	ldr	r3, [pc, #80]	; (800e00c <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800dfbc:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800dfc0:	b005      	add	sp, #20
 800dfc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfc4:	4b12      	ldr	r3, [pc, #72]	; (800e010 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800dfc6:	f44f 7204 	mov.w	r2, #528	; 0x210
 800dfca:	fb02 3305 	mla	r3, r2, r5, r3
 800dfce:	2200      	movs	r2, #0
 800dfd0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dfd4:	2107      	movs	r1, #7
 800dfd6:	4620      	mov	r0, r4
 800dfd8:	f007 faf2 	bl	80155c0 <usart_flag_get>
 800dfdc:	2800      	cmp	r0, #0
 800dfde:	d0f9      	beq.n	800dfd4 <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 800dfe0:	490c      	ldr	r1, [pc, #48]	; (800e014 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800dfe2:	4620      	mov	r0, r4
 800dfe4:	f007 fb0e 	bl	8015604 <usart_interrupt_flag_clear>
 800dfe8:	f240 3105 	movw	r1, #773	; 0x305
 800dfec:	4620      	mov	r0, r4
 800dfee:	f007 fafd 	bl	80155ec <usart_interrupt_enable>
 800dff2:	4b06      	ldr	r3, [pc, #24]	; (800e00c <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800dff4:	2202      	movs	r2, #2
 800dff6:	e7e1      	b.n	800dfbc <Dmx::StartData(unsigned int, unsigned int)+0xdc>
 800dff8:	200011a8 	andcs	r1, r0, r8, lsr #3
 800dffc:	20000004 	andcs	r0, r0, r4
 800e000:	2000000c 	andcs	r0, r0, ip
 800e004:	20000008 	andcs	r0, r0, r8
 800e008:	e000e100 	and	lr, r0, r0, lsl #2
 800e00c:	20001180 	andcs	r1, r0, r0, lsl #3
 800e010:	20000958 	andcs	r0, r0, r8, asr r9
 800e014:	00050305 	andeq	r0, r5, r5, lsl #6

0800e018 <Dmx::StopData(unsigned int, unsigned int)>:
 800e018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e01c:	4f1e      	ldr	r7, [pc, #120]	; (800e098 <Dmx::StopData(unsigned int, unsigned int)+0x80>)
 800e01e:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800e022:	4688      	mov	r8, r1
 800e024:	4614      	mov	r4, r2
 800e026:	b333      	cbz	r3, 800e076 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800e028:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800e02c:	6943      	ldr	r3, [r0, #20]
 800e02e:	bb23      	cbnz	r3, 800e07a <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800e030:	4d1a      	ldr	r5, [pc, #104]	; (800e09c <Dmx::StopData(unsigned int, unsigned int)+0x84>)
 800e032:	882b      	ldrh	r3, [r5, #0]
 800e034:	2601      	movs	r6, #1
 800e036:	fa06 f202 	lsl.w	r2, r6, r2
 800e03a:	b29b      	uxth	r3, r3
 800e03c:	ea23 0302 	bic.w	r3, r3, r2
 800e040:	802b      	strh	r3, [r5, #0]
 800e042:	f3bf 8f5f 	dmb	sy
 800e046:	882b      	ldrh	r3, [r5, #0]
 800e048:	f104 0208 	add.w	r2, r4, #8
 800e04c:	b29b      	uxth	r3, r3
 800e04e:	4096      	lsls	r6, r2
 800e050:	ea36 0303 	bics.w	r3, r6, r3
 800e054:	d105      	bne.n	800e062 <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800e056:	2107      	movs	r1, #7
 800e058:	4640      	mov	r0, r8
 800e05a:	f007 fab1 	bl	80155c0 <usart_flag_get>
 800e05e:	2801      	cmp	r0, #1
 800e060:	d1f9      	bne.n	800e056 <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800e062:	882b      	ldrh	r3, [r5, #0]
 800e064:	b29b      	uxth	r3, r3
 800e066:	ea23 0306 	bic.w	r3, r3, r6
 800e06a:	802b      	strh	r3, [r5, #0]
 800e06c:	f3bf 8f4f 	dsb	sy
 800e070:	2300      	movs	r3, #0
 800e072:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800e076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e07a:	f240 3105 	movw	r1, #773	; 0x305
 800e07e:	4640      	mov	r0, r8
 800e080:	f007 fabe 	bl	8015600 <usart_interrupt_disable>
 800e084:	4b06      	ldr	r3, [pc, #24]	; (800e0a0 <Dmx::StopData(unsigned int, unsigned int)+0x88>)
 800e086:	f44f 7204 	mov.w	r2, #528	; 0x210
 800e08a:	fb02 3304 	mla	r3, r2, r4, r3
 800e08e:	2200      	movs	r2, #0
 800e090:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800e094:	e7ec      	b.n	800e070 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800e096:	bf00      	nop
 800e098:	20001180 	andcs	r1, r0, r0, lsl #3
 800e09c:	200011a8 	andcs	r1, r0, r8, lsr #3
 800e0a0:	20000958 	andcs	r0, r0, r8, asr r9

0800e0a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800e0a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e0a6:	4605      	mov	r5, r0
 800e0a8:	460c      	mov	r4, r1
 800e0aa:	4608      	mov	r0, r1
 800e0ac:	4616      	mov	r6, r2
 800e0ae:	461f      	mov	r7, r3
 800e0b0:	f7ff fcec 	bl	800da8c <_port_to_uart(unsigned int)>
 800e0b4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800e0b8:	4601      	mov	r1, r0
 800e0ba:	695a      	ldr	r2, [r3, #20]
 800e0bc:	42b2      	cmp	r2, r6
 800e0be:	d01b      	beq.n	800e0f8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800e0c0:	9001      	str	r0, [sp, #4]
 800e0c2:	615e      	str	r6, [r3, #20]
 800e0c4:	4622      	mov	r2, r4
 800e0c6:	4628      	mov	r0, r5
 800e0c8:	f7ff ffa6 	bl	800e018 <Dmx::StopData(unsigned int, unsigned int)>
 800e0cc:	9901      	ldr	r1, [sp, #4]
 800e0ce:	b94e      	cbnz	r6, 800e0e4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800e0d0:	4b11      	ldr	r3, [pc, #68]	; (800e118 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800e0d2:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800e0d6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e0da:	685b      	ldr	r3, [r3, #4]
 800e0dc:	6193      	str	r3, [r2, #24]
 800e0de:	b967      	cbnz	r7, 800e0fa <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800e0e0:	b003      	add	sp, #12
 800e0e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0e4:	2e01      	cmp	r6, #1
 800e0e6:	d1fa      	bne.n	800e0de <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800e0e8:	4b0b      	ldr	r3, [pc, #44]	; (800e118 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800e0ea:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800e0ee:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e0f2:	685b      	ldr	r3, [r3, #4]
 800e0f4:	6293      	str	r3, [r2, #40]	; 0x28
 800e0f6:	e7f2      	b.n	800e0de <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800e0f8:	b137      	cbz	r7, 800e108 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800e0fa:	4622      	mov	r2, r4
 800e0fc:	4628      	mov	r0, r5
 800e0fe:	b003      	add	sp, #12
 800e100:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e104:	f7ff beec 	b.w	800dee0 <Dmx::StartData(unsigned int, unsigned int)>
 800e108:	4622      	mov	r2, r4
 800e10a:	4628      	mov	r0, r5
 800e10c:	b003      	add	sp, #12
 800e10e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e112:	f7ff bf81 	b.w	800e018 <Dmx::StopData(unsigned int, unsigned int)>
 800e116:	bf00      	nop
 800e118:	08018954 	stmdaeq	r1, {r2, r4, r6, r8, fp, pc}

0800e11c <Dmx::Dmx()>:
 800e11c:	230c      	movs	r3, #12
 800e11e:	225c      	movs	r2, #92	; 0x5c
 800e120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e124:	e9c0 2300 	strd	r2, r3, [r0]
 800e128:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800e12c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800e130:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e134:	8203      	strh	r3, [r0, #16]
 800e136:	4b46      	ldr	r3, [pc, #280]	; (800e250 <Dmx::Dmx()+0x134>)
 800e138:	4f46      	ldr	r7, [pc, #280]	; (800e254 <Dmx::Dmx()+0x138>)
 800e13a:	6018      	str	r0, [r3, #0]
 800e13c:	4b46      	ldr	r3, [pc, #280]	; (800e258 <Dmx::Dmx()+0x13c>)
 800e13e:	2400      	movs	r4, #0
 800e140:	b08e      	sub	sp, #56	; 0x38
 800e142:	4605      	mov	r5, r0
 800e144:	801c      	strh	r4, [r3, #0]
 800e146:	4626      	mov	r6, r4
 800e148:	e9d7 0800 	ldrd	r0, r8, [r7]
 800e14c:	2202      	movs	r2, #2
 800e14e:	4643      	mov	r3, r8
 800e150:	2101      	movs	r1, #1
 800e152:	9003      	str	r0, [sp, #12]
 800e154:	f006 fdce 	bl	8014cf4 <gpio_mode_set>
 800e158:	4643      	mov	r3, r8
 800e15a:	9803      	ldr	r0, [sp, #12]
 800e15c:	2202      	movs	r2, #2
 800e15e:	2100      	movs	r1, #0
 800e160:	f006 fde8 	bl	8014d34 <gpio_output_options_set>
 800e164:	4642      	mov	r2, r8
 800e166:	9803      	ldr	r0, [sp, #12]
 800e168:	2100      	movs	r1, #0
 800e16a:	f006 fdfe 	bl	8014d6a <gpio_af_set>
 800e16e:	4621      	mov	r1, r4
 800e170:	4628      	mov	r0, r5
 800e172:	f7ff fe9d 	bl	800deb0 <Dmx::ClearData(unsigned int)>
 800e176:	4b39      	ldr	r3, [pc, #228]	; (800e25c <Dmx::Dmx()+0x140>)
 800e178:	2201      	movs	r2, #1
 800e17a:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800e17e:	4621      	mov	r1, r4
 800e180:	2300      	movs	r3, #0
 800e182:	4628      	mov	r0, r5
 800e184:	f7ff ff8e 	bl	800e0a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e188:	4b35      	ldr	r3, [pc, #212]	; (800e260 <Dmx::Dmx()+0x144>)
 800e18a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800e18e:	fb02 3304 	mla	r3, r2, r4, r3
 800e192:	3708      	adds	r7, #8
 800e194:	f8c3 620c 	str.w	r6, [r3, #524]	; 0x20c
 800e198:	2c00      	cmp	r4, #0
 800e19a:	d056      	beq.n	800e24a <Dmx::Dmx()+0x12e>
 800e19c:	f640 4015 	movw	r0, #3093	; 0xc15
 800e1a0:	f006 fe24 	bl	8014dec <rcu_periph_clock_enable>
 800e1a4:	f640 4016 	movw	r0, #3094	; 0xc16
 800e1a8:	f006 fe20 	bl	8014dec <rcu_periph_clock_enable>
 800e1ac:	482d      	ldr	r0, [pc, #180]	; (800e264 <Dmx::Dmx()+0x148>)
 800e1ae:	2103      	movs	r1, #3
 800e1b0:	f006 fcc2 	bl	8014b38 <dma_deinit>
 800e1b4:	4b2c      	ldr	r3, [pc, #176]	; (800e268 <Dmx::Dmx()+0x14c>)
 800e1b6:	482b      	ldr	r0, [pc, #172]	; (800e264 <Dmx::Dmx()+0x148>)
 800e1b8:	9608      	str	r6, [sp, #32]
 800e1ba:	aa05      	add	r2, sp, #20
 800e1bc:	f04f 0840 	mov.w	r8, #64	; 0x40
 800e1c0:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800e1c4:	2103      	movs	r1, #3
 800e1c6:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800e1ca:	9609      	str	r6, [sp, #36]	; 0x24
 800e1cc:	970d      	str	r7, [sp, #52]	; 0x34
 800e1ce:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800e1d2:	f006 fce8 	bl	8014ba6 <dma_single_data_mode_init>
 800e1d6:	4823      	ldr	r0, [pc, #140]	; (800e264 <Dmx::Dmx()+0x148>)
 800e1d8:	2103      	movs	r1, #3
 800e1da:	f006 fd23 	bl	8014c24 <dma_circulation_disable>
 800e1de:	2204      	movs	r2, #4
 800e1e0:	4820      	ldr	r0, [pc, #128]	; (800e264 <Dmx::Dmx()+0x148>)
 800e1e2:	2103      	movs	r1, #3
 800e1e4:	f006 fd26 	bl	8014c34 <dma_channel_subperipheral_select>
 800e1e8:	4820      	ldr	r0, [pc, #128]	; (800e26c <Dmx::Dmx()+0x150>)
 800e1ea:	2106      	movs	r1, #6
 800e1ec:	f006 fca4 	bl	8014b38 <dma_deinit>
 800e1f0:	4b1f      	ldr	r3, [pc, #124]	; (800e270 <Dmx::Dmx()+0x154>)
 800e1f2:	481e      	ldr	r0, [pc, #120]	; (800e26c <Dmx::Dmx()+0x150>)
 800e1f4:	9608      	str	r6, [sp, #32]
 800e1f6:	aa05      	add	r2, sp, #20
 800e1f8:	2106      	movs	r1, #6
 800e1fa:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800e1fe:	9609      	str	r6, [sp, #36]	; 0x24
 800e200:	970d      	str	r7, [sp, #52]	; 0x34
 800e202:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800e206:	f006 fcce 	bl	8014ba6 <dma_single_data_mode_init>
 800e20a:	4818      	ldr	r0, [pc, #96]	; (800e26c <Dmx::Dmx()+0x150>)
 800e20c:	4c19      	ldr	r4, [pc, #100]	; (800e274 <Dmx::Dmx()+0x158>)
 800e20e:	2106      	movs	r1, #6
 800e210:	f006 fd08 	bl	8014c24 <dma_circulation_disable>
 800e214:	2702      	movs	r7, #2
 800e216:	4815      	ldr	r0, [pc, #84]	; (800e26c <Dmx::Dmx()+0x150>)
 800e218:	2205      	movs	r2, #5
 800e21a:	2106      	movs	r1, #6
 800e21c:	f006 fd0a 	bl	8014c34 <dma_channel_subperipheral_select>
 800e220:	2680      	movs	r6, #128	; 0x80
 800e222:	4915      	ldr	r1, [pc, #84]	; (800e278 <Dmx::Dmx()+0x15c>)
 800e224:	4815      	ldr	r0, [pc, #84]	; (800e27c <Dmx::Dmx()+0x160>)
 800e226:	9700      	str	r7, [sp, #0]
 800e228:	2300      	movs	r3, #0
 800e22a:	2208      	movs	r2, #8
 800e22c:	f007 fd20 	bl	8015c70 <gd32_uart_begin>
 800e230:	6066      	str	r6, [r4, #4]
 800e232:	4911      	ldr	r1, [pc, #68]	; (800e278 <Dmx::Dmx()+0x15c>)
 800e234:	4812      	ldr	r0, [pc, #72]	; (800e280 <Dmx::Dmx()+0x164>)
 800e236:	9700      	str	r7, [sp, #0]
 800e238:	2300      	movs	r3, #0
 800e23a:	2208      	movs	r2, #8
 800e23c:	f007 fd18 	bl	8015c70 <gd32_uart_begin>
 800e240:	4628      	mov	r0, r5
 800e242:	60a6      	str	r6, [r4, #8]
 800e244:	b00e      	add	sp, #56	; 0x38
 800e246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e24a:	2401      	movs	r4, #1
 800e24c:	e77c      	b.n	800e148 <Dmx::Dmx()+0x2c>
 800e24e:	bf00      	nop
 800e250:	200011ac 	andcs	r1, r0, ip, lsr #3
 800e254:	08018954 	stmdaeq	r1, {r2, r4, r6, r8, fp, pc}
 800e258:	200011a8 	andcs	r1, r0, r8, lsr #3
 800e25c:	20001180 	andcs	r1, r0, r0, lsl #3
 800e260:	20000958 	andcs	r0, r0, r8, asr r9
 800e264:	40026000 	andmi	r6, r2, r0
 800e268:	40004804 	andmi	r4, r0, r4, lsl #16
 800e26c:	40026400 	andmi	r6, r2, r0, lsl #8
 800e270:	40011404 	andmi	r1, r1, r4, lsl #8
 800e274:	e000e100 	and	lr, r0, r0, lsl #2
 800e278:	0003d090 	muleq	r3, r0, r0
 800e27c:	40004800 	andmi	r4, r0, r0, lsl #16
 800e280:	40011400 	andmi	r1, r1, r0, lsl #8

0800e284 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800e284:	4b0f      	ldr	r3, [pc, #60]	; (800e2c4 <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 800e286:	60c1      	str	r1, [r0, #12]
 800e288:	f8b3 2406 	ldrh.w	r2, [r3, #1030]	; 0x406
 800e28c:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800e290:	480d      	ldr	r0, [pc, #52]	; (800e2c8 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 800e292:	429a      	cmp	r2, r3
 800e294:	bf38      	it	cc
 800e296:	461a      	movcc	r2, r3
 800e298:	4b0c      	ldr	r3, [pc, #48]	; (800e2cc <Dmx::SetDmxPeriodTime(unsigned int)+0x48>)
 800e29a:	6800      	ldr	r0, [r0, #0]
 800e29c:	681b      	ldr	r3, [r3, #0]
 800e29e:	4403      	add	r3, r0
 800e2a0:	202c      	movs	r0, #44	; 0x2c
 800e2a2:	fb00 3302 	mla	r3, r0, r2, r3
 800e2a6:	b151      	cbz	r1, 800e2be <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800e2a8:	4299      	cmp	r1, r3
 800e2aa:	d205      	bcs.n	800e2b8 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800e2ac:	1819      	adds	r1, r3, r0
 800e2ae:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800e2b2:	4299      	cmp	r1, r3
 800e2b4:	bf38      	it	cc
 800e2b6:	4619      	movcc	r1, r3
 800e2b8:	4b05      	ldr	r3, [pc, #20]	; (800e2d0 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>)
 800e2ba:	6019      	str	r1, [r3, #0]
 800e2bc:	4770      	bx	lr
 800e2be:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800e2c2:	e7f4      	b.n	800e2ae <Dmx::SetDmxPeriodTime(unsigned int)+0x2a>
 800e2c4:	20000d78 	andcs	r0, r0, r8, ror sp
 800e2c8:	20000008 	andcs	r0, r0, r8
 800e2cc:	2000000c 	andcs	r0, r0, ip
 800e2d0:	20000004 	andcs	r0, r0, r4

0800e2d4 <Dmx::SetDmxBreakTime(unsigned int)>:
 800e2d4:	295c      	cmp	r1, #92	; 0x5c
 800e2d6:	4b03      	ldr	r3, [pc, #12]	; (800e2e4 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800e2d8:	bf38      	it	cc
 800e2da:	215c      	movcc	r1, #92	; 0x5c
 800e2dc:	6019      	str	r1, [r3, #0]
 800e2de:	68c1      	ldr	r1, [r0, #12]
 800e2e0:	f7ff bfd0 	b.w	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e2e4:	2000000c 	andcs	r0, r0, ip

0800e2e8 <Dmx::SetDmxMabTime(unsigned int)>:
 800e2e8:	290c      	cmp	r1, #12
 800e2ea:	4b03      	ldr	r3, [pc, #12]	; (800e2f8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800e2ec:	bf38      	it	cc
 800e2ee:	210c      	movcc	r1, #12
 800e2f0:	6019      	str	r1, [r3, #0]
 800e2f2:	68c1      	ldr	r1, [r0, #12]
 800e2f4:	f7ff bfc6 	b.w	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e2f8:	20000008 	andcs	r0, r0, r8

0800e2fc <Dmx::SetDmxSlots(unsigned short)>:
 800e2fc:	1e8b      	subs	r3, r1, #2
 800e2fe:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800e302:	d80f      	bhi.n	800e324 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800e304:	69c3      	ldr	r3, [r0, #28]
 800e306:	8201      	strh	r1, [r0, #16]
 800e308:	b11b      	cbz	r3, 800e312 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800e30a:	4299      	cmp	r1, r3
 800e30c:	bf94      	ite	ls
 800e30e:	61c1      	strls	r1, [r0, #28]
 800e310:	61c3      	strhi	r3, [r0, #28]
 800e312:	6a03      	ldr	r3, [r0, #32]
 800e314:	b11b      	cbz	r3, 800e31e <Dmx::SetDmxSlots(unsigned short)+0x22>
 800e316:	4299      	cmp	r1, r3
 800e318:	bf94      	ite	ls
 800e31a:	6201      	strls	r1, [r0, #32]
 800e31c:	6203      	strhi	r3, [r0, #32]
 800e31e:	68c1      	ldr	r1, [r0, #12]
 800e320:	f7ff bfb0 	b.w	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e324:	4770      	bx	lr
	...

0800e328 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800e328:	b470      	push	{r4, r5, r6}
 800e32a:	8a04      	ldrh	r4, [r0, #16]
 800e32c:	f892 f000 	pld	[r2]
 800e330:	42a3      	cmp	r3, r4
 800e332:	bf28      	it	cs
 800e334:	4623      	movcs	r3, r4
 800e336:	4c0e      	ldr	r4, [pc, #56]	; (800e370 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800e338:	f44f 7501 	mov.w	r5, #516	; 0x204
 800e33c:	fb05 4401 	mla	r4, r5, r1, r4
 800e340:	1c5d      	adds	r5, r3, #1
 800e342:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800e346:	18d5      	adds	r5, r2, r3
 800e348:	4295      	cmp	r5, r2
 800e34a:	d109      	bne.n	800e360 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800e34c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e350:	69ca      	ldr	r2, [r1, #28]
 800e352:	429a      	cmp	r2, r3
 800e354:	d009      	beq.n	800e36a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800e356:	61cb      	str	r3, [r1, #28]
 800e358:	bc70      	pop	{r4, r5, r6}
 800e35a:	68c1      	ldr	r1, [r0, #12]
 800e35c:	f7ff bf92 	b.w	800e284 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e360:	f812 6b01 	ldrb.w	r6, [r2], #1
 800e364:	f804 6f01 	strb.w	r6, [r4, #1]!
 800e368:	e7ee      	b.n	800e348 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800e36a:	bc70      	pop	{r4, r5, r6}
 800e36c:	4770      	bx	lr
 800e36e:	bf00      	nop
 800e370:	20000d78 	andcs	r0, r0, r8, ror sp

0800e374 <Dmx::Blackout()>:
 800e374:	b538      	push	{r3, r4, r5, lr}
 800e376:	4c1e      	ldr	r4, [pc, #120]	; (800e3f0 <Dmx::Blackout()+0x7c>)
 800e378:	8823      	ldrh	r3, [r4, #0]
 800e37a:	b29b      	uxth	r3, r3
 800e37c:	b3bb      	cbz	r3, 800e3ee <Dmx::Blackout()+0x7a>
 800e37e:	f3bf 8f5f 	dmb	sy
 800e382:	8823      	ldrh	r3, [r4, #0]
 800e384:	05da      	lsls	r2, r3, #23
 800e386:	d515      	bpl.n	800e3b4 <Dmx::Blackout()+0x40>
 800e388:	2000      	movs	r0, #0
 800e38a:	f7ff fb7f 	bl	800da8c <_port_to_uart(unsigned int)>
 800e38e:	4605      	mov	r5, r0
 800e390:	2107      	movs	r1, #7
 800e392:	4628      	mov	r0, r5
 800e394:	f007 f914 	bl	80155c0 <usart_flag_get>
 800e398:	2801      	cmp	r0, #1
 800e39a:	d1f9      	bne.n	800e390 <Dmx::Blackout()+0x1c>
 800e39c:	4b15      	ldr	r3, [pc, #84]	; (800e3f4 <Dmx::Blackout()+0x80>)
 800e39e:	2000      	movs	r0, #0
 800e3a0:	461a      	mov	r2, r3
 800e3a2:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e3a6:	f823 0b02 	strh.w	r0, [r3], #2
 800e3aa:	428b      	cmp	r3, r1
 800e3ac:	d1fb      	bne.n	800e3a6 <Dmx::Blackout()+0x32>
 800e3ae:	f04f 0300 	mov.w	r3, #0
 800e3b2:	7013      	strb	r3, [r2, #0]
 800e3b4:	f3bf 8f5f 	dmb	sy
 800e3b8:	8823      	ldrh	r3, [r4, #0]
 800e3ba:	059b      	lsls	r3, r3, #22
 800e3bc:	d517      	bpl.n	800e3ee <Dmx::Blackout()+0x7a>
 800e3be:	2001      	movs	r0, #1
 800e3c0:	f7ff fb64 	bl	800da8c <_port_to_uart(unsigned int)>
 800e3c4:	4604      	mov	r4, r0
 800e3c6:	2107      	movs	r1, #7
 800e3c8:	4620      	mov	r0, r4
 800e3ca:	f007 f8f9 	bl	80155c0 <usart_flag_get>
 800e3ce:	2801      	cmp	r0, #1
 800e3d0:	d1f9      	bne.n	800e3c6 <Dmx::Blackout()+0x52>
 800e3d2:	4b09      	ldr	r3, [pc, #36]	; (800e3f8 <Dmx::Blackout()+0x84>)
 800e3d4:	2000      	movs	r0, #0
 800e3d6:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e3da:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e3de:	f823 0b02 	strh.w	r0, [r3], #2
 800e3e2:	428b      	cmp	r3, r1
 800e3e4:	d1fb      	bne.n	800e3de <Dmx::Blackout()+0x6a>
 800e3e6:	f04f 0300 	mov.w	r3, #0
 800e3ea:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e3ee:	bd38      	pop	{r3, r4, r5, pc}
 800e3f0:	200011a8 	andcs	r1, r0, r8, lsr #3
 800e3f4:	20000d78 	andcs	r0, r0, r8, ror sp
 800e3f8:	20000f7c 	andcs	r0, r0, ip, ror pc

0800e3fc <Dmx::FullOn()>:
 800e3fc:	b538      	push	{r3, r4, r5, lr}
 800e3fe:	4c1e      	ldr	r4, [pc, #120]	; (800e478 <Dmx::FullOn()+0x7c>)
 800e400:	8823      	ldrh	r3, [r4, #0]
 800e402:	b29b      	uxth	r3, r3
 800e404:	b3bb      	cbz	r3, 800e476 <Dmx::FullOn()+0x7a>
 800e406:	f3bf 8f5f 	dmb	sy
 800e40a:	8823      	ldrh	r3, [r4, #0]
 800e40c:	05da      	lsls	r2, r3, #23
 800e40e:	d515      	bpl.n	800e43c <Dmx::FullOn()+0x40>
 800e410:	2000      	movs	r0, #0
 800e412:	f7ff fb3b 	bl	800da8c <_port_to_uart(unsigned int)>
 800e416:	4605      	mov	r5, r0
 800e418:	2107      	movs	r1, #7
 800e41a:	4628      	mov	r0, r5
 800e41c:	f007 f8d0 	bl	80155c0 <usart_flag_get>
 800e420:	2801      	cmp	r0, #1
 800e422:	d1f9      	bne.n	800e418 <Dmx::FullOn()+0x1c>
 800e424:	4b15      	ldr	r3, [pc, #84]	; (800e47c <Dmx::FullOn()+0x80>)
 800e426:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e42a:	461a      	mov	r2, r3
 800e42c:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e430:	f823 0b02 	strh.w	r0, [r3], #2
 800e434:	428b      	cmp	r3, r1
 800e436:	d1fb      	bne.n	800e430 <Dmx::FullOn()+0x34>
 800e438:	2300      	movs	r3, #0
 800e43a:	7013      	strb	r3, [r2, #0]
 800e43c:	f3bf 8f5f 	dmb	sy
 800e440:	8823      	ldrh	r3, [r4, #0]
 800e442:	059b      	lsls	r3, r3, #22
 800e444:	d517      	bpl.n	800e476 <Dmx::FullOn()+0x7a>
 800e446:	2001      	movs	r0, #1
 800e448:	f7ff fb20 	bl	800da8c <_port_to_uart(unsigned int)>
 800e44c:	4604      	mov	r4, r0
 800e44e:	2107      	movs	r1, #7
 800e450:	4620      	mov	r0, r4
 800e452:	f007 f8b5 	bl	80155c0 <usart_flag_get>
 800e456:	2801      	cmp	r0, #1
 800e458:	d1f9      	bne.n	800e44e <Dmx::FullOn()+0x52>
 800e45a:	4b09      	ldr	r3, [pc, #36]	; (800e480 <Dmx::FullOn()+0x84>)
 800e45c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e460:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e464:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e468:	f823 0b02 	strh.w	r0, [r3], #2
 800e46c:	428b      	cmp	r3, r1
 800e46e:	d1fb      	bne.n	800e468 <Dmx::FullOn()+0x6c>
 800e470:	2300      	movs	r3, #0
 800e472:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e476:	bd38      	pop	{r3, r4, r5, pc}
 800e478:	200011a8 	andcs	r1, r0, r8, lsr #3
 800e47c:	20000d78 	andcs	r0, r0, r8, ror sp
 800e480:	20000f7c 	andcs	r0, r0, ip, ror pc

0800e484 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800e484:	2000      	movs	r0, #0
 800e486:	4770      	bx	lr

0800e488 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800e488:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e48c:	4770      	bx	lr

0800e48e <WS28xxDmxMulti::GetDmxFootprint()>:
 800e48e:	2000      	movs	r0, #0
 800e490:	4770      	bx	lr

0800e492 <WS28xxDmxMulti::Start(unsigned int)>:
 800e492:	b538      	push	{r3, r4, r5, lr}
 800e494:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e496:	4604      	mov	r4, r0
 800e498:	460d      	mov	r5, r1
 800e49a:	b923      	cbnz	r3, 800e4a6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800e49c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e49e:	b110      	cbz	r0, 800e4a6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800e4a0:	6803      	ldr	r3, [r0, #0]
 800e4a2:	689b      	ldr	r3, [r3, #8]
 800e4a4:	4798      	blx	r3
 800e4a6:	2301      	movs	r3, #1
 800e4a8:	fa03 f105 	lsl.w	r1, r3, r5
 800e4ac:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e4ae:	430b      	orrs	r3, r1
 800e4b0:	6523      	str	r3, [r4, #80]	; 0x50
 800e4b2:	bd38      	pop	{r3, r4, r5, pc}

0800e4b4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800e4b4:	b538      	push	{r3, r4, r5, lr}
 800e4b6:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800e4b8:	4b05      	ldr	r3, [pc, #20]	; (800e4d0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800e4ba:	6003      	str	r3, [r0, #0]
 800e4bc:	4604      	mov	r4, r0
 800e4be:	b12d      	cbz	r5, 800e4cc <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800e4c0:	4628      	mov	r0, r5
 800e4c2:	f001 fab3 	bl	800fa2c <WS28xxMulti::~WS28xxMulti()>
 800e4c6:	4628      	mov	r0, r5
 800e4c8:	f006 f830 	bl	801452c <operator delete(void*)>
 800e4cc:	4620      	mov	r0, r4
 800e4ce:	bd38      	pop	{r3, r4, r5, pc}
 800e4d0:	0801896c 	stmdaeq	r1, {r2, r3, r5, r6, r8, fp, pc}

0800e4d4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800e4d4:	b510      	push	{r4, lr}
 800e4d6:	4604      	mov	r4, r0
 800e4d8:	f7ff ffec 	bl	800e4b4 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800e4dc:	4620      	mov	r0, r4
 800e4de:	f006 f825 	bl	801452c <operator delete(void*)>
 800e4e2:	4620      	mov	r0, r4
 800e4e4:	bd10      	pop	{r4, pc}

0800e4e6 <WS28xxDmxMulti::Blackout(bool)>:
 800e4e6:	b538      	push	{r3, r4, r5, lr}
 800e4e8:	4604      	mov	r4, r0
 800e4ea:	460d      	mov	r5, r1
 800e4ec:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e4f0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e4f2:	f001 fe81 	bl	80101f8 <WS28xxMulti::IsUpdating()>
 800e4f6:	2800      	cmp	r0, #0
 800e4f8:	d1fa      	bne.n	800e4f0 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800e4fa:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e4fc:	b11d      	cbz	r5, 800e506 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800e4fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e502:	f001 bdb7 	b.w	8010074 <WS28xxMulti::Blackout()>
 800e506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e50a:	f001 bd0f 	b.w	800ff2c <WS28xxMulti::Update()>

0800e50e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e50e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e512:	b089      	sub	sp, #36	; 0x24
 800e514:	4691      	mov	r9, r2
 800e516:	9306      	str	r3, [sp, #24]
 800e518:	460b      	mov	r3, r1
 800e51a:	f003 0203 	and.w	r2, r3, #3
 800e51e:	2a02      	cmp	r2, #2
 800e520:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800e522:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800e524:	9105      	str	r1, [sp, #20]
 800e526:	4604      	mov	r4, r0
 800e528:	ea4f 0191 	mov.w	r1, r1, lsr #2
 800e52c:	9806      	ldr	r0, [sp, #24]
 800e52e:	fbb0 f3f3 	udiv	r3, r0, r3
 800e532:	d032      	beq.n	800e59a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8c>
 800e534:	2a03      	cmp	r2, #3
 800e536:	d032      	beq.n	800e59e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800e538:	2a01      	cmp	r2, #1
 800e53a:	d028      	beq.n	800e58e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x80>
 800e53c:	429e      	cmp	r6, r3
 800e53e:	bf28      	it	cs
 800e540:	461e      	movcs	r6, r3
 800e542:	2500      	movs	r5, #0
 800e544:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e546:	9107      	str	r1, [sp, #28]
 800e548:	f001 fe56 	bl	80101f8 <WS28xxMulti::IsUpdating()>
 800e54c:	9907      	ldr	r1, [sp, #28]
 800e54e:	2800      	cmp	r0, #0
 800e550:	d1f8      	bne.n	800e544 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x36>
 800e552:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e554:	f8d4 a024 	ldr.w	sl, [r4, #36]	; 0x24
 800e558:	2b03      	cmp	r3, #3
 800e55a:	46c8      	mov	r8, r9
 800e55c:	fb0a f705 	mul.w	r7, sl, r5
 800e560:	d041      	beq.n	800e5e6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd8>
 800e562:	42b5      	cmp	r5, r6
 800e564:	d241      	bcs.n	800e5ea <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e566:	9a06      	ldr	r2, [sp, #24]
 800e568:	eba8 0309 	sub.w	r3, r8, r9
 800e56c:	429a      	cmp	r2, r3
 800e56e:	d93c      	bls.n	800e5ea <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e570:	f898 f000 	pld	[r8]
 800e574:	f04f 0b00 	mov.w	fp, #0
 800e578:	fa1f f28b 	uxth.w	r2, fp
 800e57c:	4552      	cmp	r2, sl
 800e57e:	f10b 0b01 	add.w	fp, fp, #1
 800e582:	d33c      	bcc.n	800e5fe <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf0>
 800e584:	3501      	adds	r5, #1
 800e586:	f108 0804 	add.w	r8, r8, #4
 800e58a:	4457      	add	r7, sl
 800e58c:	e7e9      	b.n	800e562 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x54>
 800e58e:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800e590:	442b      	add	r3, r5
 800e592:	429e      	cmp	r6, r3
 800e594:	bf28      	it	cs
 800e596:	461e      	movcs	r6, r3
 800e598:	e7d4      	b.n	800e544 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x36>
 800e59a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 800e59c:	e7f8      	b.n	800e590 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800e59e:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 800e5a0:	e7f6      	b.n	800e590 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800e5a2:	f898 3002 	ldrb.w	r3, [r8, #2]
 800e5a6:	9301      	str	r3, [sp, #4]
 800e5a8:	f898 3001 	ldrb.w	r3, [r8, #1]
 800e5ac:	9300      	str	r3, [sp, #0]
 800e5ae:	f898 3000 	ldrb.w	r3, [r8]
 800e5b2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e5b4:	9107      	str	r1, [sp, #28]
 800e5b6:	443a      	add	r2, r7
 800e5b8:	f001 fe9e 	bl	80102f8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e5bc:	9907      	ldr	r1, [sp, #28]
 800e5be:	e008      	b.n	800e5d2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc4>
 800e5c0:	9a06      	ldr	r2, [sp, #24]
 800e5c2:	eba8 0309 	sub.w	r3, r8, r9
 800e5c6:	429a      	cmp	r2, r3
 800e5c8:	d90f      	bls.n	800e5ea <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800e5ca:	f898 f000 	pld	[r8]
 800e5ce:	f04f 0b00 	mov.w	fp, #0
 800e5d2:	fa1f f28b 	uxth.w	r2, fp
 800e5d6:	4552      	cmp	r2, sl
 800e5d8:	f10b 0b01 	add.w	fp, fp, #1
 800e5dc:	d3e1      	bcc.n	800e5a2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x94>
 800e5de:	3501      	adds	r5, #1
 800e5e0:	f108 0803 	add.w	r8, r8, #3
 800e5e4:	4457      	add	r7, sl
 800e5e6:	42b5      	cmp	r5, r6
 800e5e8:	d3ea      	bcc.n	800e5c0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xb2>
 800e5ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e5ec:	9a05      	ldr	r2, [sp, #20]
 800e5ee:	4293      	cmp	r3, r2
 800e5f0:	d117      	bne.n	800e622 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x114>
 800e5f2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e5f4:	b009      	add	sp, #36	; 0x24
 800e5f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5fa:	f001 bc97 	b.w	800ff2c <WS28xxMulti::Update()>
 800e5fe:	f898 3003 	ldrb.w	r3, [r8, #3]
 800e602:	9302      	str	r3, [sp, #8]
 800e604:	f898 3002 	ldrb.w	r3, [r8, #2]
 800e608:	9301      	str	r3, [sp, #4]
 800e60a:	f898 3001 	ldrb.w	r3, [r8, #1]
 800e60e:	9300      	str	r3, [sp, #0]
 800e610:	f898 3000 	ldrb.w	r3, [r8]
 800e614:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e616:	9107      	str	r1, [sp, #28]
 800e618:	443a      	add	r2, r7
 800e61a:	f001 feef 	bl	80103fc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e61e:	9907      	ldr	r1, [sp, #28]
 800e620:	e7aa      	b.n	800e578 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800e622:	b009      	add	sp, #36	; 0x24
 800e624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e628 <WS28xxDmxMulti::FullOn()>:
 800e628:	b510      	push	{r4, lr}
 800e62a:	4604      	mov	r4, r0
 800e62c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e62e:	f001 fde3 	bl	80101f8 <WS28xxMulti::IsUpdating()>
 800e632:	2800      	cmp	r0, #0
 800e634:	d1fa      	bne.n	800e62c <WS28xxDmxMulti::FullOn()+0x4>
 800e636:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e63c:	f001 bd7c 	b.w	8010138 <WS28xxMulti::FullOn()>

0800e640 <WS28xxDmxMulti::Print()>:
 800e640:	3004      	adds	r0, #4
 800e642:	f000 bcb1 	b.w	800efa8 <PixelDmxConfiguration::Print()>

0800e646 <WS28xxDmxMulti::Stop(unsigned int)>:
 800e646:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e648:	fa23 f201 	lsr.w	r2, r3, r1
 800e64c:	07d2      	lsls	r2, r2, #31
 800e64e:	bf41      	itttt	mi
 800e650:	2201      	movmi	r2, #1
 800e652:	408a      	lslmi	r2, r1
 800e654:	4393      	bicmi	r3, r2
 800e656:	6503      	strmi	r3, [r0, #80]	; 0x50
 800e658:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e65a:	b923      	cbnz	r3, 800e666 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800e65c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e65e:	b110      	cbz	r0, 800e666 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800e660:	6803      	ldr	r3, [r0, #0]
 800e662:	68db      	ldr	r3, [r3, #12]
 800e664:	4718      	bx	r3
 800e666:	4770      	bx	lr

0800e668 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800e668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e66a:	4604      	mov	r4, r0
 800e66c:	4b14      	ldr	r3, [pc, #80]	; (800e6c0 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800e66e:	f844 3b04 	str.w	r3, [r4], #4
 800e672:	460d      	mov	r5, r1
 800e674:	4606      	mov	r6, r0
 800e676:	460f      	mov	r7, r1
 800e678:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e67a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e67c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e67e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e680:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800e684:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e688:	2300      	movs	r3, #0
 800e68a:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800e68e:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800e692:	6533      	str	r3, [r6, #80]	; 0x50
 800e694:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800e698:	2110      	movs	r1, #16
 800e69a:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800e69e:	1d30      	adds	r0, r6, #4
 800e6a0:	f000 fc3f 	bl	800ef22 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800e6a4:	2020      	movs	r0, #32
 800e6a6:	f005 ff45 	bl	8014534 <operator new(unsigned int)>
 800e6aa:	4639      	mov	r1, r7
 800e6ac:	4604      	mov	r4, r0
 800e6ae:	f001 fbdf 	bl	800fe70 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800e6b2:	4620      	mov	r0, r4
 800e6b4:	64b4      	str	r4, [r6, #72]	; 0x48
 800e6b6:	f001 fcdd 	bl	8010074 <WS28xxMulti::Blackout()>
 800e6ba:	4630      	mov	r0, r6
 800e6bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e6be:	bf00      	nop
 800e6c0:	0801896c 	stmdaeq	r1, {r2, r3, r5, r6, r8, fp, pc}

0800e6c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e6c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e6c6:	88c6      	ldrh	r6, [r0, #6]
 800e6c8:	8885      	ldrh	r5, [r0, #4]
 800e6ca:	42ae      	cmp	r6, r5
 800e6cc:	d216      	bcs.n	800e6fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e6ce:	4604      	mov	r4, r0
 800e6d0:	6800      	ldr	r0, [r0, #0]
 800e6d2:	1bad      	subs	r5, r5, r6
 800e6d4:	4430      	add	r0, r6
 800e6d6:	7a26      	ldrb	r6, [r4, #8]
 800e6d8:	b923      	cbnz	r3, 800e6e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e6da:	b926      	cbnz	r6, 800e6e6 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e6dc:	9200      	str	r2, [sp, #0]
 800e6de:	460b      	mov	r3, r1
 800e6e0:	4a09      	ldr	r2, [pc, #36]	; (800e708 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e6e2:	e003      	b.n	800e6ec <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e6e4:	b166      	cbz	r6, 800e700 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e6e6:	9200      	str	r2, [sp, #0]
 800e6e8:	4a08      	ldr	r2, [pc, #32]	; (800e70c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e6ea:	460b      	mov	r3, r1
 800e6ec:	4629      	mov	r1, r5
 800e6ee:	f7fb fe17 	bl	800a320 <snprintf>
 800e6f2:	4285      	cmp	r5, r0
 800e6f4:	bfa2      	ittt	ge
 800e6f6:	88e3      	ldrhge	r3, [r4, #6]
 800e6f8:	181b      	addge	r3, r3, r0
 800e6fa:	80e3      	strhge	r3, [r4, #6]
 800e6fc:	b002      	add	sp, #8
 800e6fe:	bd70      	pop	{r4, r5, r6, pc}
 800e700:	9200      	str	r2, [sp, #0]
 800e702:	460b      	mov	r3, r1
 800e704:	4a02      	ldr	r2, [pc, #8]	; (800e710 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e706:	e7f1      	b.n	800e6ec <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e708:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800e70c:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800e710:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800e714 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800e714:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e716:	88c6      	ldrh	r6, [r0, #6]
 800e718:	8885      	ldrh	r5, [r0, #4]
 800e71a:	42ae      	cmp	r6, r5
 800e71c:	d216      	bcs.n	800e74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800e71e:	4604      	mov	r4, r0
 800e720:	6800      	ldr	r0, [r0, #0]
 800e722:	1bad      	subs	r5, r5, r6
 800e724:	4430      	add	r0, r6
 800e726:	7a26      	ldrb	r6, [r4, #8]
 800e728:	b923      	cbnz	r3, 800e734 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800e72a:	b926      	cbnz	r6, 800e736 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800e72c:	9200      	str	r2, [sp, #0]
 800e72e:	460b      	mov	r3, r1
 800e730:	4a09      	ldr	r2, [pc, #36]	; (800e758 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800e732:	e003      	b.n	800e73c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e734:	b166      	cbz	r6, 800e750 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800e736:	9200      	str	r2, [sp, #0]
 800e738:	4a08      	ldr	r2, [pc, #32]	; (800e75c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800e73a:	460b      	mov	r3, r1
 800e73c:	4629      	mov	r1, r5
 800e73e:	f7fb fdef 	bl	800a320 <snprintf>
 800e742:	4285      	cmp	r5, r0
 800e744:	bfa2      	ittt	ge
 800e746:	88e3      	ldrhge	r3, [r4, #6]
 800e748:	181b      	addge	r3, r3, r0
 800e74a:	80e3      	strhge	r3, [r4, #6]
 800e74c:	b002      	add	sp, #8
 800e74e:	bd70      	pop	{r4, r5, r6, pc}
 800e750:	9200      	str	r2, [sp, #0]
 800e752:	460b      	mov	r3, r1
 800e754:	4a02      	ldr	r2, [pc, #8]	; (800e760 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e756:	e7f1      	b.n	800e73c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e758:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800e75c:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800e760:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800e764 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800e764:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e766:	88c6      	ldrh	r6, [r0, #6]
 800e768:	8885      	ldrh	r5, [r0, #4]
 800e76a:	42ae      	cmp	r6, r5
 800e76c:	d216      	bcs.n	800e79c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800e76e:	4604      	mov	r4, r0
 800e770:	6800      	ldr	r0, [r0, #0]
 800e772:	1bad      	subs	r5, r5, r6
 800e774:	4430      	add	r0, r6
 800e776:	7a26      	ldrb	r6, [r4, #8]
 800e778:	b923      	cbnz	r3, 800e784 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800e77a:	b926      	cbnz	r6, 800e786 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800e77c:	9200      	str	r2, [sp, #0]
 800e77e:	460b      	mov	r3, r1
 800e780:	4a09      	ldr	r2, [pc, #36]	; (800e7a8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800e782:	e003      	b.n	800e78c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800e784:	b166      	cbz	r6, 800e7a0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800e786:	9200      	str	r2, [sp, #0]
 800e788:	4a08      	ldr	r2, [pc, #32]	; (800e7ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800e78a:	460b      	mov	r3, r1
 800e78c:	4629      	mov	r1, r5
 800e78e:	f7fb fdc7 	bl	800a320 <snprintf>
 800e792:	4285      	cmp	r5, r0
 800e794:	bfa2      	ittt	ge
 800e796:	88e3      	ldrhge	r3, [r4, #6]
 800e798:	181b      	addge	r3, r3, r0
 800e79a:	80e3      	strhge	r3, [r4, #6]
 800e79c:	b002      	add	sp, #8
 800e79e:	bd70      	pop	{r4, r5, r6, pc}
 800e7a0:	9200      	str	r2, [sp, #0]
 800e7a2:	460b      	mov	r3, r1
 800e7a4:	4a02      	ldr	r2, [pc, #8]	; (800e7b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e7a6:	e7f1      	b.n	800e78c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800e7a8:	0801720c 	stmdaeq	r1, {r2, r3, r9, ip, sp, lr}
 800e7ac:	08017201 	stmdaeq	r1, {r0, r9, ip, sp, lr}
 800e7b0:	0801720d 	stmdaeq	r1, {r0, r2, r3, r9, ip, sp, lr}

0800e7b4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800e7b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e7b8:	8885      	ldrh	r5, [r0, #4]
 800e7ba:	4698      	mov	r8, r3
 800e7bc:	88c3      	ldrh	r3, [r0, #6]
 800e7be:	42ab      	cmp	r3, r5
 800e7c0:	4604      	mov	r4, r0
 800e7c2:	d229      	bcs.n	800e818 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800e7c4:	6826      	ldr	r6, [r4, #0]
 800e7c6:	f894 9008 	ldrb.w	r9, [r4, #8]
 800e7ca:	4692      	mov	sl, r2
 800e7cc:	ee10 0a10 	vmov	r0, s0
 800e7d0:	460f      	mov	r7, r1
 800e7d2:	441e      	add	r6, r3
 800e7d4:	1aed      	subs	r5, r5, r3
 800e7d6:	f7fa fbdd 	bl	8008f94 <__aeabi_f2d>
 800e7da:	f1ba 0f00 	cmp.w	sl, #0
 800e7de:	d109      	bne.n	800e7f4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800e7e0:	f1b9 0f00 	cmp.w	r9, #0
 800e7e4:	d109      	bne.n	800e7fa <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800e7e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e7ea:	4a10      	ldr	r2, [pc, #64]	; (800e82c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800e7ec:	f8cd 8000 	str.w	r8, [sp]
 800e7f0:	463b      	mov	r3, r7
 800e7f2:	e008      	b.n	800e806 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800e7f4:	f1b9 0f00 	cmp.w	r9, #0
 800e7f8:	d011      	beq.n	800e81e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800e7fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e7fe:	4a0c      	ldr	r2, [pc, #48]	; (800e830 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800e800:	f8cd 8000 	str.w	r8, [sp]
 800e804:	463b      	mov	r3, r7
 800e806:	4629      	mov	r1, r5
 800e808:	4630      	mov	r0, r6
 800e80a:	f7fb fd89 	bl	800a320 <snprintf>
 800e80e:	4285      	cmp	r5, r0
 800e810:	bfa2      	ittt	ge
 800e812:	88e3      	ldrhge	r3, [r4, #6]
 800e814:	18c0      	addge	r0, r0, r3
 800e816:	80e0      	strhge	r0, [r4, #6]
 800e818:	b004      	add	sp, #16
 800e81a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e81e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e822:	4a04      	ldr	r2, [pc, #16]	; (800e834 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800e824:	f8cd 8000 	str.w	r8, [sp]
 800e828:	463b      	mov	r3, r7
 800e82a:	e7ec      	b.n	800e806 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800e82c:	080189a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, fp, pc}
 800e830:	0801899c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, pc}
 800e834:	080189a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, pc}

0800e838 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800e838:	6001      	str	r1, [r0, #0]
 800e83a:	2106      	movs	r1, #6
 800e83c:	2200      	movs	r2, #0
 800e83e:	75c1      	strb	r1, [r0, #23]
 800e840:	490b      	ldr	r1, [pc, #44]	; (800e870 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800e842:	7582      	strb	r2, [r0, #22]
 800e844:	8302      	strh	r2, [r0, #24]
 800e846:	6042      	str	r2, [r0, #4]
 800e848:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 800e84c:	e9c0 1202 	strd	r1, r2, [r0, #8]
 800e850:	2301      	movs	r3, #1
 800e852:	4a08      	ldr	r2, [pc, #32]	; (800e874 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800e854:	6102      	str	r2, [r0, #16]
 800e856:	7543      	strb	r3, [r0, #21]
 800e858:	f100 0218 	add.w	r2, r0, #24
 800e85c:	f822 3f02 	strh.w	r3, [r2, #2]!
 800e860:	3304      	adds	r3, #4
 800e862:	b29b      	uxth	r3, r3
 800e864:	2b41      	cmp	r3, #65	; 0x41
 800e866:	d1f9      	bne.n	800e85c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>
 800e868:	2300      	movs	r3, #0
 800e86a:	7503      	strb	r3, [r0, #20]
 800e86c:	4770      	bx	lr
 800e86e:	bf00      	nop
 800e870:	0100aa03 	tsteq	r0, r3, lsl #20
 800e874:	01ff003d 	mvnseq	r0, sp, lsr r0

0800e878 <PixelDmxParams::Load()>:
 800e878:	b508      	push	{r3, lr}
 800e87a:	2300      	movs	r3, #0
 800e87c:	4601      	mov	r1, r0
 800e87e:	6043      	str	r3, [r0, #4]
 800e880:	6800      	ldr	r0, [r0, #0]
 800e882:	b120      	cbz	r0, 800e88e <PixelDmxParams::Load()+0x16>
 800e884:	6803      	ldr	r3, [r0, #0]
 800e886:	3104      	adds	r1, #4
 800e888:	68db      	ldr	r3, [r3, #12]
 800e88a:	4798      	blx	r3
 800e88c:	2001      	movs	r0, #1
 800e88e:	bd08      	pop	{r3, pc}

0800e890 <PixelDmxParams::Load(char const*, unsigned int)>:
 800e890:	6803      	ldr	r3, [r0, #0]
 800e892:	b1d3      	cbz	r3, 800e8ca <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800e894:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e896:	2300      	movs	r3, #0
 800e898:	6043      	str	r3, [r0, #4]
 800e89a:	4604      	mov	r4, r0
 800e89c:	460d      	mov	r5, r1
 800e89e:	4616      	mov	r6, r2
 800e8a0:	490a      	ldr	r1, [pc, #40]	; (800e8cc <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800e8a2:	4602      	mov	r2, r0
 800e8a4:	4668      	mov	r0, sp
 800e8a6:	f005 f873 	bl	8013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e8aa:	4632      	mov	r2, r6
 800e8ac:	4629      	mov	r1, r5
 800e8ae:	4668      	mov	r0, sp
 800e8b0:	f005 f872 	bl	8013998 <ReadConfigFile::Read(char const*, unsigned int)>
 800e8b4:	4621      	mov	r1, r4
 800e8b6:	f851 0b04 	ldr.w	r0, [r1], #4
 800e8ba:	6803      	ldr	r3, [r0, #0]
 800e8bc:	689b      	ldr	r3, [r3, #8]
 800e8be:	4798      	blx	r3
 800e8c0:	4668      	mov	r0, sp
 800e8c2:	f005 f868 	bl	8013996 <ReadConfigFile::~ReadConfigFile()>
 800e8c6:	b002      	add	sp, #8
 800e8c8:	bd70      	pop	{r4, r5, r6, pc}
 800e8ca:	4770      	bx	lr
 800e8cc:	0800eb91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp, sp, lr, pc}

0800e8d0 <PixelDmxParams::callbackFunction(char const*)>:
 800e8d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e8d4:	b08a      	sub	sp, #40	; 0x28
 800e8d6:	460d      	mov	r5, r1
 800e8d8:	2308      	movs	r3, #8
 800e8da:	4604      	mov	r4, r0
 800e8dc:	9304      	str	r3, [sp, #16]
 800e8de:	499e      	ldr	r1, [pc, #632]	; (800eb58 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800e8e0:	ab04      	add	r3, sp, #16
 800e8e2:	aa06      	add	r2, sp, #24
 800e8e4:	4628      	mov	r0, r5
 800e8e6:	f005 f88b 	bl	8013a00 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e8ea:	b9a0      	cbnz	r0, 800e916 <PixelDmxParams::callbackFunction(char const*)+0x46>
 800e8ec:	9b04      	ldr	r3, [sp, #16]
 800e8ee:	3328      	adds	r3, #40	; 0x28
 800e8f0:	446b      	add	r3, sp
 800e8f2:	f803 0c10 	strb.w	r0, [r3, #-16]
 800e8f6:	a806      	add	r0, sp, #24
 800e8f8:	f000 fc86 	bl	800f208 <PixelType::GetType(char const*)>
 800e8fc:	6863      	ldr	r3, [r4, #4]
 800e8fe:	280e      	cmp	r0, #14
 800e900:	bf0d      	iteet	eq
 800e902:	2203      	moveq	r2, #3
 800e904:	7220      	strbne	r0, [r4, #8]
 800e906:	f043 0301 	orrne.w	r3, r3, #1
 800e90a:	7222      	strbeq	r2, [r4, #8]
 800e90c:	bf08      	it	eq
 800e90e:	f023 0301 	biceq.w	r3, r3, #1
 800e912:	6063      	str	r3, [r4, #4]
 800e914:	e033      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e916:	4991      	ldr	r1, [pc, #580]	; (800eb5c <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800e918:	f10d 020a 	add.w	r2, sp, #10
 800e91c:	4628      	mov	r0, r5
 800e91e:	f005 f924 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e922:	b990      	cbnz	r0, 800e94a <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800e924:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e928:	6863      	ldr	r3, [r4, #4]
 800e92a:	1e51      	subs	r1, r2, #1
 800e92c:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800e930:	bf2d      	iteet	cs
 800e932:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800e936:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800e93a:	f043 0302 	orrcc.w	r3, r3, #2
 800e93e:	7262      	strbcs	r2, [r4, #9]
 800e940:	bf24      	itt	cs
 800e942:	72a0      	strbcs	r0, [r4, #10]
 800e944:	f023 0302 	biccs.w	r3, r3, #2
 800e948:	e7e3      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e94a:	2303      	movs	r3, #3
 800e94c:	9304      	str	r3, [sp, #16]
 800e94e:	4984      	ldr	r1, [pc, #528]	; (800eb60 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800e950:	ab04      	add	r3, sp, #16
 800e952:	aa06      	add	r2, sp, #24
 800e954:	4628      	mov	r0, r5
 800e956:	f005 f853 	bl	8013a00 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e95a:	b998      	cbnz	r0, 800e984 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800e95c:	9b04      	ldr	r3, [sp, #16]
 800e95e:	3328      	adds	r3, #40	; 0x28
 800e960:	446b      	add	r3, sp
 800e962:	f803 0c10 	strb.w	r0, [r3, #-16]
 800e966:	a806      	add	r0, sp, #24
 800e968:	f000 fc72 	bl	800f250 <PixelType::GetMap(char const*)>
 800e96c:	6863      	ldr	r3, [r4, #4]
 800e96e:	75e0      	strb	r0, [r4, #23]
 800e970:	2806      	cmp	r0, #6
 800e972:	bf14      	ite	ne
 800e974:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800e978:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800e97c:	6063      	str	r3, [r4, #4]
 800e97e:	b00a      	add	sp, #40	; 0x28
 800e980:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e984:	4977      	ldr	r1, [pc, #476]	; (800eb64 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800e986:	aa03      	add	r2, sp, #12
 800e988:	4628      	mov	r0, r5
 800e98a:	f005 f852 	bl	8013a32 <Sscan::Float(char const*, char const*, float&)>
 800e98e:	b968      	cbnz	r0, 800e9ac <PixelDmxParams::callbackFunction(char const*)+0xdc>
 800e990:	ed9d 0a03 	vldr	s0, [sp, #12]
 800e994:	f000 fcc8 	bl	800f328 <PixelType::ConvertTxH(float)>
 800e998:	6863      	ldr	r3, [r4, #4]
 800e99a:	b120      	cbz	r0, 800e9a6 <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800e99c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800e9a0:	6063      	str	r3, [r4, #4]
 800e9a2:	7620      	strb	r0, [r4, #24]
 800e9a4:	e7eb      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e9a6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800e9aa:	e7f9      	b.n	800e9a0 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800e9ac:	496e      	ldr	r1, [pc, #440]	; (800eb68 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800e9ae:	aa03      	add	r2, sp, #12
 800e9b0:	4628      	mov	r0, r5
 800e9b2:	f005 f83e 	bl	8013a32 <Sscan::Float(char const*, char const*, float&)>
 800e9b6:	b968      	cbnz	r0, 800e9d4 <PixelDmxParams::callbackFunction(char const*)+0x104>
 800e9b8:	ed9d 0a03 	vldr	s0, [sp, #12]
 800e9bc:	f000 fcb4 	bl	800f328 <PixelType::ConvertTxH(float)>
 800e9c0:	6863      	ldr	r3, [r4, #4]
 800e9c2:	b120      	cbz	r0, 800e9ce <PixelDmxParams::callbackFunction(char const*)+0xfe>
 800e9c4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800e9c8:	6063      	str	r3, [r4, #4]
 800e9ca:	7660      	strb	r0, [r4, #25]
 800e9cc:	e7d7      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e9ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800e9d2:	e7f9      	b.n	800e9c8 <PixelDmxParams::callbackFunction(char const*)+0xf8>
 800e9d4:	4965      	ldr	r1, [pc, #404]	; (800eb6c <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800e9d6:	f10d 020a 	add.w	r2, sp, #10
 800e9da:	4628      	mov	r0, r5
 800e9dc:	f005 f8c5 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e9e0:	b998      	cbnz	r0, 800ea0a <PixelDmxParams::callbackFunction(char const*)+0x13a>
 800e9e2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e9e6:	6863      	ldr	r3, [r4, #4]
 800e9e8:	1e8a      	subs	r2, r1, #2
 800e9ea:	b292      	uxth	r2, r2
 800e9ec:	f240 25a6 	movw	r5, #678	; 0x2a6
 800e9f0:	42aa      	cmp	r2, r5
 800e9f2:	bf81      	itttt	hi
 800e9f4:	2201      	movhi	r2, #1
 800e9f6:	7562      	strbhi	r2, [r4, #21]
 800e9f8:	75a0      	strbhi	r0, [r4, #22]
 800e9fa:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800e9fe:	bf9c      	itt	ls
 800ea00:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800ea04:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800ea08:	e783      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ea0a:	4959      	ldr	r1, [pc, #356]	; (800eb70 <PixelDmxParams::callbackFunction(char const*)+0x2a0>)
 800ea0c:	aa05      	add	r2, sp, #20
 800ea0e:	4628      	mov	r0, r5
 800ea10:	f005 f8ca 	bl	8013ba8 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800ea14:	b960      	cbnz	r0, 800ea30 <PixelDmxParams::callbackFunction(char const*)+0x160>
 800ea16:	9a05      	ldr	r2, [sp, #20]
 800ea18:	4956      	ldr	r1, [pc, #344]	; (800eb74 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800ea1a:	6863      	ldr	r3, [r4, #4]
 800ea1c:	f8c4 200e 	str.w	r2, [r4, #14]
 800ea20:	428a      	cmp	r2, r1
 800ea22:	bf14      	ite	ne
 800ea24:	f043 0310 	orrne.w	r3, r3, #16
 800ea28:	f023 0310 	biceq.w	r3, r3, #16
 800ea2c:	6063      	str	r3, [r4, #4]
 800ea2e:	e7a6      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ea30:	4951      	ldr	r1, [pc, #324]	; (800eb78 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800ea32:	f10d 0209 	add.w	r2, sp, #9
 800ea36:	4628      	mov	r0, r5
 800ea38:	f005 f8df 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ea3c:	b988      	cbnz	r0, 800ea62 <PixelDmxParams::callbackFunction(char const*)+0x192>
 800ea3e:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800ea42:	6863      	ldr	r3, [r4, #4]
 800ea44:	1e4a      	subs	r2, r1, #1
 800ea46:	b2d2      	uxtb	r2, r2
 800ea48:	2afd      	cmp	r2, #253	; 0xfd
 800ea4a:	bf89      	itett	hi
 800ea4c:	f023 0320 	bichi.w	r3, r3, #32
 800ea50:	f043 0320 	orrls.w	r3, r3, #32
 800ea54:	6063      	strhi	r3, [r4, #4]
 800ea56:	23ff      	movhi	r3, #255	; 0xff
 800ea58:	bf9a      	itte	ls
 800ea5a:	6063      	strls	r3, [r4, #4]
 800ea5c:	74a1      	strbls	r1, [r4, #18]
 800ea5e:	74a3      	strbhi	r3, [r4, #18]
 800ea60:	e78d      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ea62:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800eb8c <PixelDmxParams::callbackFunction(char const*)+0x2bc>
 800ea66:	f104 071a 	add.w	r7, r4, #26
 800ea6a:	2600      	movs	r6, #0
 800ea6c:	f04f 0814 	mov.w	r8, #20
 800ea70:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800ea74:	f10d 020a 	add.w	r2, sp, #10
 800ea78:	fb08 9106 	mla	r1, r8, r6, r9
 800ea7c:	4628      	mov	r0, r5
 800ea7e:	f005 f874 	bl	8013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ea82:	b940      	cbnz	r0, 800ea96 <PixelDmxParams::callbackFunction(char const*)+0x1c6>
 800ea84:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800ea88:	6863      	ldr	r3, [r4, #4]
 800ea8a:	fa0a f106 	lsl.w	r1, sl, r6
 800ea8e:	b1ea      	cbz	r2, 800eacc <PixelDmxParams::callbackFunction(char const*)+0x1fc>
 800ea90:	803a      	strh	r2, [r7, #0]
 800ea92:	430b      	orrs	r3, r1
 800ea94:	6063      	str	r3, [r4, #4]
 800ea96:	3601      	adds	r6, #1
 800ea98:	2e10      	cmp	r6, #16
 800ea9a:	f107 0702 	add.w	r7, r7, #2
 800ea9e:	d1e9      	bne.n	800ea74 <PixelDmxParams::callbackFunction(char const*)+0x1a4>
 800eaa0:	4936      	ldr	r1, [pc, #216]	; (800eb7c <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800eaa2:	f10d 0209 	add.w	r2, sp, #9
 800eaa6:	4628      	mov	r0, r5
 800eaa8:	f005 f8a7 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eaac:	b9a0      	cbnz	r0, 800ead8 <PixelDmxParams::callbackFunction(char const*)+0x208>
 800eaae:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800eab2:	6863      	ldr	r3, [r4, #4]
 800eab4:	1e91      	subs	r1, r2, #2
 800eab6:	290e      	cmp	r1, #14
 800eab8:	bf8d      	iteet	hi
 800eaba:	2201      	movhi	r2, #1
 800eabc:	74e2      	strbls	r2, [r4, #19]
 800eabe:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800eac2:	74e2      	strbhi	r2, [r4, #19]
 800eac4:	bf88      	it	hi
 800eac6:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800eaca:	e722      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800eacc:	00b2      	lsls	r2, r6, #2
 800eace:	3201      	adds	r2, #1
 800ead0:	803a      	strh	r2, [r7, #0]
 800ead2:	ea23 0301 	bic.w	r3, r3, r1
 800ead6:	e7dd      	b.n	800ea94 <PixelDmxParams::callbackFunction(char const*)+0x1c4>
 800ead8:	4929      	ldr	r1, [pc, #164]	; (800eb80 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800eada:	f10d 0209 	add.w	r2, sp, #9
 800eade:	4628      	mov	r0, r5
 800eae0:	f005 f88b 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eae4:	b960      	cbnz	r0, 800eb00 <PixelDmxParams::callbackFunction(char const*)+0x230>
 800eae6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800eaea:	6863      	ldr	r3, [r4, #4]
 800eaec:	1e51      	subs	r1, r2, #1
 800eaee:	2904      	cmp	r1, #4
 800eaf0:	bf99      	ittee	ls
 800eaf2:	7522      	strbls	r2, [r4, #20]
 800eaf4:	f043 0308 	orrls.w	r3, r3, #8
 800eaf8:	7520      	strbhi	r0, [r4, #20]
 800eafa:	f023 0308 	bichi.w	r3, r3, #8
 800eafe:	e708      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800eb00:	4920      	ldr	r1, [pc, #128]	; (800eb84 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800eb02:	f10d 0209 	add.w	r2, sp, #9
 800eb06:	4628      	mov	r0, r5
 800eb08:	f005 f877 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eb0c:	b948      	cbnz	r0, 800eb22 <PixelDmxParams::callbackFunction(char const*)+0x252>
 800eb0e:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800eb12:	6863      	ldr	r3, [r4, #4]
 800eb14:	b112      	cbz	r2, 800eb1c <PixelDmxParams::callbackFunction(char const*)+0x24c>
 800eb16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800eb1a:	e6fa      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800eb1c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800eb20:	e6f7      	b.n	800e912 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800eb22:	4919      	ldr	r1, [pc, #100]	; (800eb88 <PixelDmxParams::callbackFunction(char const*)+0x2b8>)
 800eb24:	aa03      	add	r2, sp, #12
 800eb26:	4628      	mov	r0, r5
 800eb28:	f004 ff83 	bl	8013a32 <Sscan::Float(char const*, char const*, float&)>
 800eb2c:	2800      	cmp	r0, #0
 800eb2e:	f47f af26 	bne.w	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800eb32:	eddd 7a03 	vldr	s15, [sp, #12]
 800eb36:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800eb3a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800eb3e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800eb42:	edcd 7a01 	vstr	s15, [sp, #4]
 800eb46:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800eb4a:	f1a3 0214 	sub.w	r2, r3, #20
 800eb4e:	2a05      	cmp	r2, #5
 800eb50:	bf8c      	ite	hi
 800eb52:	7360      	strbhi	r0, [r4, #13]
 800eb54:	7363      	strbls	r3, [r4, #13]
 800eb56:	e712      	b.n	800e97e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800eb58:	080199d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, ip, pc}
 800eb5c:	080199df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, fp, ip, pc}
 800eb60:	080199c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, ip, pc}
 800eb64:	080199e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, ip, pc}
 800eb68:	080199f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, fp, ip, pc}
 800eb6c:	08019993 	stmdaeq	r1, {r0, r1, r4, r7, r8, fp, ip, pc}
 800eb70:	08019977 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, fp, ip, pc}
 800eb74:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800eb78:	080199b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, ip, pc}
 800eb7c:	08019960 	stmdaeq	r1, {r5, r6, r8, fp, ip, pc}
 800eb80:	08019986 	stmdaeq	r1, {r1, r2, r7, r8, fp, ip, pc}
 800eb84:	080199a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, fp, ip, pc}
 800eb88:	0801996b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, fp, ip, pc}
 800eb8c:	08019a72 	stmdaeq	r1, {r1, r4, r5, r6, r9, fp, ip, pc}

0800eb90 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800eb90:	f7ff be9e 	b.w	800e8d0 <PixelDmxParams::callbackFunction(char const*)>

0800eb94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800eb94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb98:	4604      	mov	r4, r0
 800eb9a:	b086      	sub	sp, #24
 800eb9c:	4615      	mov	r5, r2
 800eb9e:	461e      	mov	r6, r3
 800eba0:	3004      	adds	r0, #4
 800eba2:	b389      	cbz	r1, 800ec08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800eba4:	2236      	movs	r2, #54	; 0x36
 800eba6:	f005 fd84 	bl	80146b2 <memmove>
 800ebaa:	462a      	mov	r2, r5
 800ebac:	499b      	ldr	r1, [pc, #620]	; (800ee1c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800ebae:	4633      	mov	r3, r6
 800ebb0:	a803      	add	r0, sp, #12
 800ebb2:	f004 fe4d 	bl	8013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ebb6:	7a20      	ldrb	r0, [r4, #8]
 800ebb8:	f000 fb1a 	bl	800f1f0 <PixelType::GetType(pixel::Type)>
 800ebbc:	6863      	ldr	r3, [r4, #4]
 800ebbe:	4998      	ldr	r1, [pc, #608]	; (800ee20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800ebc0:	4602      	mov	r2, r0
 800ebc2:	f003 0301 	and.w	r3, r3, #1
 800ebc6:	a803      	add	r0, sp, #12
 800ebc8:	f7ff fdcc 	bl	800e764 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ebcc:	6863      	ldr	r3, [r4, #4]
 800ebce:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800ebd2:	4994      	ldr	r1, [pc, #592]	; (800ee24 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800ebd4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ebd8:	a803      	add	r0, sp, #12
 800ebda:	f7ff fd9b 	bl	800e714 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ebde:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ebe2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ebe6:	6863      	ldr	r3, [r4, #4]
 800ebe8:	42aa      	cmp	r2, r5
 800ebea:	d227      	bcs.n	800ec3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800ebec:	9803      	ldr	r0, [sp, #12]
 800ebee:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800ebf2:	4410      	add	r0, r2
 800ebf4:	eba5 0502 	sub.w	r5, r5, r2
 800ebf8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ebfc:	d10b      	bne.n	800ec16 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800ebfe:	b96a      	cbnz	r2, 800ec1c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800ec00:	9200      	str	r2, [sp, #0]
 800ec02:	4b89      	ldr	r3, [pc, #548]	; (800ee28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ec04:	4a89      	ldr	r2, [pc, #548]	; (800ee2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ec06:	e00f      	b.n	800ec28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800ec08:	6823      	ldr	r3, [r4, #0]
 800ec0a:	681a      	ldr	r2, [r3, #0]
 800ec0c:	4601      	mov	r1, r0
 800ec0e:	68d2      	ldr	r2, [r2, #12]
 800ec10:	4618      	mov	r0, r3
 800ec12:	4790      	blx	r2
 800ec14:	e7c9      	b.n	800ebaa <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800ec16:	2a00      	cmp	r2, #0
 800ec18:	f000 8087 	beq.w	800ed2a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800ec1c:	3b00      	subs	r3, #0
 800ec1e:	bf18      	it	ne
 800ec20:	2301      	movne	r3, #1
 800ec22:	9300      	str	r3, [sp, #0]
 800ec24:	4a82      	ldr	r2, [pc, #520]	; (800ee30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ec26:	4b80      	ldr	r3, [pc, #512]	; (800ee28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ec28:	4629      	mov	r1, r5
 800ec2a:	f7fb fb79 	bl	800a320 <snprintf>
 800ec2e:	4285      	cmp	r5, r0
 800ec30:	bfa2      	ittt	ge
 800ec32:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ec36:	18c0      	addge	r0, r0, r3
 800ec38:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ec3c:	7b63      	ldrb	r3, [r4, #13]
 800ec3e:	2b00      	cmp	r3, #0
 800ec40:	d178      	bne.n	800ed34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800ec42:	4a7c      	ldr	r2, [pc, #496]	; (800ee34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800ec44:	497c      	ldr	r1, [pc, #496]	; (800ee38 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800ec46:	a803      	add	r0, sp, #12
 800ec48:	f7ff fd8c 	bl	800e764 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ec4c:	497b      	ldr	r1, [pc, #492]	; (800ee3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800ec4e:	a803      	add	r0, sp, #12
 800ec50:	f004 fe84 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800ec54:	6863      	ldr	r3, [r4, #4]
 800ec56:	059e      	lsls	r6, r3, #22
 800ec58:	d403      	bmi.n	800ec62 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800ec5a:	7a20      	ldrb	r0, [r4, #8]
 800ec5c:	f000 fb2c 	bl	800f2b8 <PixelType::GetMap(pixel::Type)>
 800ec60:	75e0      	strb	r0, [r4, #23]
 800ec62:	7de0      	ldrb	r0, [r4, #23]
 800ec64:	f000 fb1c 	bl	800f2a0 <PixelType::GetMap(pixel::Map)>
 800ec68:	6863      	ldr	r3, [r4, #4]
 800ec6a:	4975      	ldr	r1, [pc, #468]	; (800ee40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800ec6c:	4602      	mov	r2, r0
 800ec6e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800ec72:	a803      	add	r0, sp, #12
 800ec74:	f7ff fd76 	bl	800e764 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ec78:	6863      	ldr	r3, [r4, #4]
 800ec7a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800ec7e:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800ec82:	d011      	beq.n	800eca8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800ec84:	f10d 020b 	add.w	r2, sp, #11
 800ec88:	7a20      	ldrb	r0, [r4, #8]
 800ec8a:	f10d 010a 	add.w	r1, sp, #10
 800ec8e:	f000 f9a3 	bl	800efd8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800ec92:	6863      	ldr	r3, [r4, #4]
 800ec94:	055d      	lsls	r5, r3, #21
 800ec96:	bf5c      	itt	pl
 800ec98:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800ec9c:	7622      	strbpl	r2, [r4, #24]
 800ec9e:	0518      	lsls	r0, r3, #20
 800eca0:	bf5c      	itt	pl
 800eca2:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800eca6:	7663      	strbpl	r3, [r4, #25]
 800eca8:	4966      	ldr	r1, [pc, #408]	; (800ee44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800ecaa:	a803      	add	r0, sp, #12
 800ecac:	f004 fe56 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800ecb0:	7e20      	ldrb	r0, [r4, #24]
 800ecb2:	f000 fb0b 	bl	800f2cc <PixelType::ConvertTxH(unsigned char)>
 800ecb6:	6862      	ldr	r2, [r4, #4]
 800ecb8:	4963      	ldr	r1, [pc, #396]	; (800ee48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800ecba:	2302      	movs	r3, #2
 800ecbc:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800ecc0:	a803      	add	r0, sp, #12
 800ecc2:	f7ff fd77 	bl	800e7b4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ecc6:	7e60      	ldrb	r0, [r4, #25]
 800ecc8:	f000 fb00 	bl	800f2cc <PixelType::ConvertTxH(unsigned char)>
 800eccc:	6862      	ldr	r2, [r4, #4]
 800ecce:	495f      	ldr	r1, [pc, #380]	; (800ee4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800ecd0:	2302      	movs	r3, #2
 800ecd2:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800ecd6:	a803      	add	r0, sp, #12
 800ecd8:	f7ff fd6c 	bl	800e7b4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ecdc:	495c      	ldr	r1, [pc, #368]	; (800ee50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800ecde:	a803      	add	r0, sp, #12
 800ece0:	f004 fe3c 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800ece4:	6863      	ldr	r3, [r4, #4]
 800ece6:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800ecea:	495a      	ldr	r1, [pc, #360]	; (800ee54 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800ecec:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800ecf0:	a803      	add	r0, sp, #12
 800ecf2:	f7ff fd0f 	bl	800e714 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ecf6:	4958      	ldr	r1, [pc, #352]	; (800ee58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800ecf8:	a803      	add	r0, sp, #12
 800ecfa:	f004 fe2f 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800ecfe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ed02:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ed06:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800ed0a:	6861      	ldr	r1, [r4, #4]
 800ed0c:	42aa      	cmp	r2, r5
 800ed0e:	d22f      	bcs.n	800ed70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800ed10:	9803      	ldr	r0, [sp, #12]
 800ed12:	06c9      	lsls	r1, r1, #27
 800ed14:	4410      	add	r0, r2
 800ed16:	eba5 0502 	sub.w	r5, r5, r2
 800ed1a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ed1e:	d418      	bmi.n	800ed52 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1be>
 800ed20:	b9ca      	cbnz	r2, 800ed56 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800ed22:	9300      	str	r3, [sp, #0]
 800ed24:	4a41      	ldr	r2, [pc, #260]	; (800ee2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ed26:	4b4d      	ldr	r3, [pc, #308]	; (800ee5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800ed28:	e018      	b.n	800ed5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800ed2a:	2301      	movs	r3, #1
 800ed2c:	9300      	str	r3, [sp, #0]
 800ed2e:	4a4c      	ldr	r2, [pc, #304]	; (800ee60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ed30:	4b3d      	ldr	r3, [pc, #244]	; (800ee28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ed32:	e779      	b.n	800ec28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800ed34:	ee07 3a90 	vmov	s15, r3
 800ed38:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ed3c:	2301      	movs	r3, #1
 800ed3e:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 800ed42:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800ed46:	493c      	ldr	r1, [pc, #240]	; (800ee38 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800ed48:	461a      	mov	r2, r3
 800ed4a:	a803      	add	r0, sp, #12
 800ed4c:	f7ff fd32 	bl	800e7b4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ed50:	e77c      	b.n	800ec4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800ed52:	2a00      	cmp	r2, #0
 800ed54:	d05e      	beq.n	800ee14 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>
 800ed56:	9300      	str	r3, [sp, #0]
 800ed58:	4a35      	ldr	r2, [pc, #212]	; (800ee30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ed5a:	4b40      	ldr	r3, [pc, #256]	; (800ee5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800ed5c:	4629      	mov	r1, r5
 800ed5e:	f7fb fadf 	bl	800a320 <snprintf>
 800ed62:	4285      	cmp	r5, r0
 800ed64:	bfa2      	ittt	ge
 800ed66:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ed6a:	18c0      	addge	r0, r0, r3
 800ed6c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ed70:	493c      	ldr	r1, [pc, #240]	; (800ee64 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800ed72:	4e3d      	ldr	r6, [pc, #244]	; (800ee68 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800ed74:	a803      	add	r0, sp, #12
 800ed76:	f004 fdf1 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800ed7a:	6863      	ldr	r3, [r4, #4]
 800ed7c:	7ca2      	ldrb	r2, [r4, #18]
 800ed7e:	493b      	ldr	r1, [pc, #236]	; (800ee6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800ed80:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800ed84:	a803      	add	r0, sp, #12
 800ed86:	f7ff fc9d 	bl	800e6c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ed8a:	f104 0718 	add.w	r7, r4, #24
 800ed8e:	2500      	movs	r5, #0
 800ed90:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800ed94:	6862      	ldr	r2, [r4, #4]
 800ed96:	fa08 f305 	lsl.w	r3, r8, r5
 800ed9a:	4393      	bics	r3, r2
 800ed9c:	bf0c      	ite	eq
 800ed9e:	2301      	moveq	r3, #1
 800eda0:	2300      	movne	r3, #0
 800eda2:	4631      	mov	r1, r6
 800eda4:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800eda8:	a803      	add	r0, sp, #12
 800edaa:	3501      	adds	r5, #1
 800edac:	f7ff fcb2 	bl	800e714 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800edb0:	2d10      	cmp	r5, #16
 800edb2:	f106 0614 	add.w	r6, r6, #20
 800edb6:	d1ed      	bne.n	800ed94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800edb8:	6863      	ldr	r3, [r4, #4]
 800edba:	7ce2      	ldrb	r2, [r4, #19]
 800edbc:	492c      	ldr	r1, [pc, #176]	; (800ee70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800edbe:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800edc2:	a803      	add	r0, sp, #12
 800edc4:	f7ff fc7e 	bl	800e6c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800edc8:	492a      	ldr	r1, [pc, #168]	; (800ee74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800edca:	a803      	add	r0, sp, #12
 800edcc:	f004 fdc6 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 800edd0:	6863      	ldr	r3, [r4, #4]
 800edd2:	7d22      	ldrb	r2, [r4, #20]
 800edd4:	4928      	ldr	r1, [pc, #160]	; (800ee78 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800edd6:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800edda:	a803      	add	r0, sp, #12
 800eddc:	f7ff fc72 	bl	800e6c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ede0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ede4:	b17b      	cbz	r3, 800ee06 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x272>
 800ede6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800edea:	9b03      	ldr	r3, [sp, #12]
 800edec:	4413      	add	r3, r2
 800edee:	227d      	movs	r2, #125	; 0x7d
 800edf0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800edf4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800edf8:	9903      	ldr	r1, [sp, #12]
 800edfa:	54ca      	strb	r2, [r1, r3]
 800edfc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ee00:	3301      	adds	r3, #1
 800ee02:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ee06:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ee0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ee0c:	601a      	str	r2, [r3, #0]
 800ee0e:	b006      	add	sp, #24
 800ee10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee14:	9300      	str	r3, [sp, #0]
 800ee16:	4a12      	ldr	r2, [pc, #72]	; (800ee60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ee18:	4b10      	ldr	r3, [pc, #64]	; (800ee5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800ee1a:	e79f      	b.n	800ed5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800ee1c:	080199f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, fp, ip, pc}
 800ee20:	080199d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, ip, pc}
 800ee24:	080199df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, fp, ip, pc}
 800ee28:	080199a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, fp, ip, pc}
 800ee2c:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800ee30:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 800ee34:	080189b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, fp, pc}
 800ee38:	0801996b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, fp, ip, pc}
 800ee3c:	080189bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, pc}
 800ee40:	080199c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, ip, pc}
 800ee44:	080189cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, fp, pc}
 800ee48:	080199e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, ip, pc}
 800ee4c:	080199f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, fp, ip, pc}
 800ee50:	080189e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, fp, pc}
 800ee54:	08019993 	stmdaeq	r1, {r0, r1, r4, r7, r8, fp, ip, pc}
 800ee58:	080189ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, fp, pc}
 800ee5c:	08019977 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, fp, ip, pc}
 800ee60:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 800ee64:	08018a00 	stmdaeq	r1, {r9, fp, pc}
 800ee68:	08019a72 	stmdaeq	r1, {r1, r4, r5, r6, r9, fp, ip, pc}
 800ee6c:	080199b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, ip, pc}
 800ee70:	08019960 	stmdaeq	r1, {r5, r6, r8, fp, ip, pc}
 800ee74:	08018a0e 	stmdaeq	r1, {r1, r2, r3, r9, fp, pc}
 800ee78:	08019986 	stmdaeq	r1, {r1, r2, r7, r8, fp, ip, pc}

0800ee7c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800ee7c:	b513      	push	{r0, r1, r4, lr}
 800ee7e:	6804      	ldr	r4, [r0, #0]
 800ee80:	b914      	cbnz	r4, 800ee88 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ee82:	601c      	str	r4, [r3, #0]
 800ee84:	b002      	add	sp, #8
 800ee86:	bd10      	pop	{r4, pc}
 800ee88:	9300      	str	r3, [sp, #0]
 800ee8a:	4613      	mov	r3, r2
 800ee8c:	460a      	mov	r2, r1
 800ee8e:	2100      	movs	r1, #0
 800ee90:	f7ff fe80 	bl	800eb94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800ee94:	e7f6      	b.n	800ee84 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ee96 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800ee96:	6843      	ldr	r3, [r0, #4]
 800ee98:	07da      	lsls	r2, r3, #31
 800ee9a:	bf44      	itt	mi
 800ee9c:	7a02      	ldrbmi	r2, [r0, #8]
 800ee9e:	600a      	strmi	r2, [r1, #0]
 800eea0:	079a      	lsls	r2, r3, #30
 800eea2:	d505      	bpl.n	800eeb0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800eea4:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800eea8:	2a00      	cmp	r2, #0
 800eeaa:	bf08      	it	eq
 800eeac:	22aa      	moveq	r2, #170	; 0xaa
 800eeae:	604a      	str	r2, [r1, #4]
 800eeb0:	059a      	lsls	r2, r3, #22
 800eeb2:	bf44      	itt	mi
 800eeb4:	7dc2      	ldrbmi	r2, [r0, #23]
 800eeb6:	608a      	strmi	r2, [r1, #8]
 800eeb8:	055a      	lsls	r2, r3, #21
 800eeba:	bf44      	itt	mi
 800eebc:	7e02      	ldrbmi	r2, [r0, #24]
 800eebe:	740a      	strbmi	r2, [r1, #16]
 800eec0:	051a      	lsls	r2, r3, #20
 800eec2:	bf44      	itt	mi
 800eec4:	7e42      	ldrbmi	r2, [r0, #25]
 800eec6:	744a      	strbmi	r2, [r1, #17]
 800eec8:	06da      	lsls	r2, r3, #27
 800eeca:	bf44      	itt	mi
 800eecc:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800eed0:	60ca      	strmi	r2, [r1, #12]
 800eed2:	069a      	lsls	r2, r3, #26
 800eed4:	bf44      	itt	mi
 800eed6:	7c82      	ldrbmi	r2, [r0, #18]
 800eed8:	748a      	strbmi	r2, [r1, #18]
 800eeda:	061a      	lsls	r2, r3, #24
 800eedc:	d504      	bpl.n	800eee8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800eede:	2201      	movs	r2, #1
 800eee0:	750a      	strb	r2, [r1, #20]
 800eee2:	7b42      	ldrb	r2, [r0, #13]
 800eee4:	b102      	cbz	r2, 800eee8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800eee6:	74ca      	strb	r2, [r1, #19]
 800eee8:	075a      	lsls	r2, r3, #29
 800eeea:	d50f      	bpl.n	800ef0c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800eeec:	7ac2      	ldrb	r2, [r0, #11]
 800eeee:	b510      	push	{r4, lr}
 800eef0:	7b04      	ldrb	r4, [r0, #12]
 800eef2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800eef6:	858a      	strh	r2, [r1, #44]	; 0x2c
 800eef8:	05da      	lsls	r2, r3, #23
 800eefa:	bf44      	itt	mi
 800eefc:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800ef00:	620a      	strmi	r2, [r1, #32]
 800ef02:	065c      	lsls	r4, r3, #25
 800ef04:	bf44      	itt	mi
 800ef06:	7cc3      	ldrbmi	r3, [r0, #19]
 800ef08:	61cb      	strmi	r3, [r1, #28]
 800ef0a:	bd10      	pop	{r4, pc}
 800ef0c:	05da      	lsls	r2, r3, #23
 800ef0e:	bf44      	itt	mi
 800ef10:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800ef14:	620a      	strmi	r2, [r1, #32]
 800ef16:	065b      	lsls	r3, r3, #25
 800ef18:	bf44      	itt	mi
 800ef1a:	7cc3      	ldrbmi	r3, [r0, #19]
 800ef1c:	61cb      	strmi	r3, [r1, #28]
 800ef1e:	4770      	bx	lr

0800ef20 <PixelDmxParams::Dump()>:
 800ef20:	4770      	bx	lr

0800ef22 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800ef22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ef24:	4604      	mov	r4, r0
 800ef26:	460e      	mov	r6, r1
 800ef28:	4611      	mov	r1, r2
 800ef2a:	9201      	str	r2, [sp, #4]
 800ef2c:	461d      	mov	r5, r3
 800ef2e:	f000 f861 	bl	800eff4 <PixelConfiguration::Validate(unsigned int&)>
 800ef32:	7d62      	ldrb	r2, [r4, #21]
 800ef34:	b94a      	cbnz	r2, 800ef4a <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800ef36:	6823      	ldr	r3, [r4, #0]
 800ef38:	9901      	ldr	r1, [sp, #4]
 800ef3a:	b11b      	cbz	r3, 800ef44 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x22>
 800ef3c:	3b0b      	subs	r3, #11
 800ef3e:	2b01      	cmp	r3, #1
 800ef40:	bf88      	it	hi
 800ef42:	6022      	strhi	r2, [r4, #0]
 800ef44:	4620      	mov	r0, r4
 800ef46:	f000 f855 	bl	800eff4 <PixelConfiguration::Validate(unsigned int&)>
 800ef4a:	6823      	ldr	r3, [r4, #0]
 800ef4c:	2b07      	cmp	r3, #7
 800ef4e:	bf15      	itete	ne
 800ef50:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800ef54:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800ef58:	23aa      	movne	r3, #170	; 0xaa
 800ef5a:	2380      	moveq	r3, #128	; 0x80
 800ef5c:	e9c5 3100 	strd	r3, r1, [r5]
 800ef60:	6a21      	ldr	r1, [r4, #32]
 800ef62:	bf14      	ite	ne
 800ef64:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800ef68:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800ef6c:	60aa      	str	r2, [r5, #8]
 800ef6e:	6862      	ldr	r2, [r4, #4]
 800ef70:	b109      	cbz	r1, 800ef76 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800ef72:	4291      	cmp	r1, r2
 800ef74:	d900      	bls.n	800ef78 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800ef76:	6222      	str	r2, [r4, #32]
 800ef78:	69e0      	ldr	r0, [r4, #28]
 800ef7a:	6a21      	ldr	r1, [r4, #32]
 800ef7c:	fbb2 f2f1 	udiv	r2, r2, r1
 800ef80:	42b0      	cmp	r0, r6
 800ef82:	bf28      	it	cs
 800ef84:	4630      	movcs	r0, r6
 800ef86:	6262      	str	r2, [r4, #36]	; 0x24
 800ef88:	2e01      	cmp	r6, #1
 800ef8a:	f103 0301 	add.w	r3, r3, #1
 800ef8e:	fbb2 f2f3 	udiv	r2, r2, r3
 800ef92:	f102 0301 	add.w	r3, r2, #1
 800ef96:	62a3      	str	r3, [r4, #40]	; 0x28
 800ef98:	bf1c      	itt	ne
 800ef9a:	eb03 0380 	addne.w	r3, r3, r0, lsl #2
 800ef9e:	1f5a      	subne	r2, r3, #5
 800efa0:	61e0      	str	r0, [r4, #28]
 800efa2:	60ea      	str	r2, [r5, #12]
 800efa4:	b002      	add	sp, #8
 800efa6:	bd70      	pop	{r4, r5, r6, pc}

0800efa8 <PixelDmxConfiguration::Print()>:
 800efa8:	b510      	push	{r4, lr}
 800efaa:	4604      	mov	r4, r0
 800efac:	f000 f8b8 	bl	800f120 <PixelConfiguration::Print()>
 800efb0:	4806      	ldr	r0, [pc, #24]	; (800efcc <PixelDmxConfiguration::Print()+0x24>)
 800efb2:	f7fb f98d 	bl	800a2d0 <printf>
 800efb6:	69e1      	ldr	r1, [r4, #28]
 800efb8:	4805      	ldr	r0, [pc, #20]	; (800efd0 <PixelDmxConfiguration::Print()+0x28>)
 800efba:	f7fb f989 	bl	800a2d0 <printf>
 800efbe:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800efc2:	4804      	ldr	r0, [pc, #16]	; (800efd4 <PixelDmxConfiguration::Print()+0x2c>)
 800efc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800efc8:	f7fb b982 	b.w	800a2d0 <printf>
 800efcc:	08018a1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, fp, pc}
 800efd0:	08018a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, pc}
 800efd4:	08018a43 	stmdaeq	r1, {r0, r1, r6, r9, fp, pc}

0800efd8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800efd8:	23c0      	movs	r3, #192	; 0xc0
 800efda:	2803      	cmp	r0, #3
 800efdc:	700b      	strb	r3, [r1, #0]
 800efde:	d006      	beq.n	800efee <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800efe0:	3808      	subs	r0, #8
 800efe2:	2803      	cmp	r0, #3
 800efe4:	bf34      	ite	cc
 800efe6:	23fc      	movcc	r3, #252	; 0xfc
 800efe8:	23f0      	movcs	r3, #240	; 0xf0
 800efea:	7013      	strb	r3, [r2, #0]
 800efec:	4770      	bx	lr
 800efee:	23f8      	movs	r3, #248	; 0xf8
 800eff0:	e7fb      	b.n	800efea <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800eff4 <PixelConfiguration::Validate(unsigned int&)>:
 800eff4:	b513      	push	{r0, r1, r4, lr}
 800eff6:	4604      	mov	r4, r0
 800eff8:	6800      	ldr	r0, [r0, #0]
 800effa:	6863      	ldr	r3, [r4, #4]
 800effc:	68a2      	ldr	r2, [r4, #8]
 800effe:	2807      	cmp	r0, #7
 800f000:	d127      	bne.n	800f052 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800f002:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f006:	bf28      	it	cs
 800f008:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800f00c:	6063      	str	r3, [r4, #4]
 800f00e:	2304      	movs	r3, #4
 800f010:	600b      	str	r3, [r1, #0]
 800f012:	2301      	movs	r3, #1
 800f014:	2a06      	cmp	r2, #6
 800f016:	7563      	strb	r3, [r4, #21]
 800f018:	d102      	bne.n	800f020 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800f01a:	f000 f94d 	bl	800f2b8 <PixelType::GetMap(pixel::Type)>
 800f01e:	60a0      	str	r0, [r4, #8]
 800f020:	7c63      	ldrb	r3, [r4, #17]
 800f022:	7c22      	ldrb	r2, [r4, #16]
 800f024:	6820      	ldr	r0, [r4, #0]
 800f026:	429a      	cmp	r2, r3
 800f028:	bf24      	itt	cs
 800f02a:	2300      	movcs	r3, #0
 800f02c:	8223      	strhcs	r3, [r4, #16]
 800f02e:	f10d 0207 	add.w	r2, sp, #7
 800f032:	f10d 0106 	add.w	r1, sp, #6
 800f036:	f7ff ffcf 	bl	800efd8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800f03a:	7c23      	ldrb	r3, [r4, #16]
 800f03c:	b913      	cbnz	r3, 800f044 <PixelConfiguration::Validate(unsigned int&)+0x50>
 800f03e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800f042:	7423      	strb	r3, [r4, #16]
 800f044:	7c63      	ldrb	r3, [r4, #17]
 800f046:	b913      	cbnz	r3, 800f04e <PixelConfiguration::Validate(unsigned int&)+0x5a>
 800f048:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800f04c:	7463      	strb	r3, [r4, #17]
 800f04e:	4b2a      	ldr	r3, [pc, #168]	; (800f0f8 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800f050:	e01e      	b.n	800f090 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800f052:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800f056:	bf28      	it	cs
 800f058:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800f05c:	6063      	str	r3, [r4, #4]
 800f05e:	2303      	movs	r3, #3
 800f060:	600b      	str	r3, [r1, #0]
 800f062:	f1a0 030b 	sub.w	r3, r0, #11
 800f066:	2b01      	cmp	r3, #1
 800f068:	d806      	bhi.n	800f078 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800f06a:	7ca3      	ldrb	r3, [r4, #18]
 800f06c:	2b1f      	cmp	r3, #31
 800f06e:	d83d      	bhi.n	800f0ec <PixelConfiguration::Validate(unsigned int&)+0xf8>
 800f070:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800f074:	74a3      	strb	r3, [r4, #18]
 800f076:	e001      	b.n	800f07c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800f078:	2800      	cmp	r0, #0
 800f07a:	d139      	bne.n	800f0f0 <PixelConfiguration::Validate(unsigned int&)+0xfc>
 800f07c:	2300      	movs	r3, #0
 800f07e:	2a06      	cmp	r2, #6
 800f080:	bf08      	it	eq
 800f082:	60a3      	streq	r3, [r4, #8]
 800f084:	280d      	cmp	r0, #13
 800f086:	7563      	strb	r3, [r4, #21]
 800f088:	68e3      	ldr	r3, [r4, #12]
 800f08a:	d119      	bne.n	800f0c0 <PixelConfiguration::Validate(unsigned int&)+0xcc>
 800f08c:	b913      	cbnz	r3, 800f094 <PixelConfiguration::Validate(unsigned int&)+0xa0>
 800f08e:	4b1b      	ldr	r3, [pc, #108]	; (800f0fc <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800f090:	60e3      	str	r3, [r4, #12]
 800f092:	e003      	b.n	800f09c <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800f094:	4a1a      	ldr	r2, [pc, #104]	; (800f100 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800f096:	4293      	cmp	r3, r2
 800f098:	d900      	bls.n	800f09c <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800f09a:	60e2      	str	r2, [r4, #12]
 800f09c:	7d23      	ldrb	r3, [r4, #20]
 800f09e:	b31b      	cbz	r3, 800f0e8 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800f0a0:	7ce3      	ldrb	r3, [r4, #19]
 800f0a2:	b9ab      	cbnz	r3, 800f0d0 <PixelConfiguration::Validate(unsigned int&)+0xdc>
 800f0a4:	6822      	ldr	r2, [r4, #0]
 800f0a6:	b17a      	cbz	r2, 800f0c8 <PixelConfiguration::Validate(unsigned int&)+0xd4>
 800f0a8:	f1a2 030b 	sub.w	r3, r2, #11
 800f0ac:	2b01      	cmp	r3, #1
 800f0ae:	d90d      	bls.n	800f0cc <PixelConfiguration::Validate(unsigned int&)+0xd8>
 800f0b0:	4b14      	ldr	r3, [pc, #80]	; (800f104 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800f0b2:	4915      	ldr	r1, [pc, #84]	; (800f108 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800f0b4:	2a0d      	cmp	r2, #13
 800f0b6:	bf08      	it	eq
 800f0b8:	460b      	moveq	r3, r1
 800f0ba:	61a3      	str	r3, [r4, #24]
 800f0bc:	b002      	add	sp, #8
 800f0be:	bd10      	pop	{r4, pc}
 800f0c0:	2b00      	cmp	r3, #0
 800f0c2:	d0e4      	beq.n	800f08e <PixelConfiguration::Validate(unsigned int&)+0x9a>
 800f0c4:	4a11      	ldr	r2, [pc, #68]	; (800f10c <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800f0c6:	e7e6      	b.n	800f096 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800f0c8:	4b11      	ldr	r3, [pc, #68]	; (800f110 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800f0ca:	e7f6      	b.n	800f0ba <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800f0cc:	4b11      	ldr	r3, [pc, #68]	; (800f114 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800f0ce:	e7f4      	b.n	800f0ba <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800f0d0:	f1a3 0214 	sub.w	r2, r3, #20
 800f0d4:	2a05      	cmp	r2, #5
 800f0d6:	d807      	bhi.n	800f0e8 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800f0d8:	3b15      	subs	r3, #21
 800f0da:	2b04      	cmp	r3, #4
 800f0dc:	bf96      	itet	ls
 800f0de:	4a0e      	ldrls	r2, [pc, #56]	; (800f118 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800f0e0:	4b0e      	ldrhi	r3, [pc, #56]	; (800f11c <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800f0e2:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800f0e6:	e7e8      	b.n	800f0ba <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800f0e8:	4b07      	ldr	r3, [pc, #28]	; (800f108 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800f0ea:	e7e6      	b.n	800f0ba <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800f0ec:	23ff      	movs	r3, #255	; 0xff
 800f0ee:	e7c1      	b.n	800f074 <PixelConfiguration::Validate(unsigned int&)+0x80>
 800f0f0:	280d      	cmp	r0, #13
 800f0f2:	d18e      	bne.n	800f012 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800f0f4:	e7c2      	b.n	800f07c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800f0f6:	bf00      	nop
 800f0f8:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800f0fc:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800f100:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800f104:	08018e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, pc}
 800f108:	08018b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, pc}
 800f10c:	017d7840 	cmneq	sp, r0, asr #16
 800f110:	0801913c 	stmdaeq	r1, {r2, r3, r4, r5, r8, ip, pc}
 800f114:	0801923c 	stmdaeq	r1, {r2, r3, r4, r5, r9, ip, pc}
 800f118:	08018b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, pc}
 800f11c:	08018c3c 	stmdaeq	r1, {r2, r3, r4, r5, sl, fp, pc}

0800f120 <PixelConfiguration::Print()>:
 800f120:	b513      	push	{r0, r1, r4, lr}
 800f122:	4604      	mov	r4, r0
 800f124:	4827      	ldr	r0, [pc, #156]	; (800f1c4 <PixelConfiguration::Print()+0xa4>)
 800f126:	f7fb f8d3 	bl	800a2d0 <printf>
 800f12a:	6820      	ldr	r0, [r4, #0]
 800f12c:	f000 f860 	bl	800f1f0 <PixelType::GetType(pixel::Type)>
 800f130:	6822      	ldr	r2, [r4, #0]
 800f132:	4601      	mov	r1, r0
 800f134:	4824      	ldr	r0, [pc, #144]	; (800f1c8 <PixelConfiguration::Print()+0xa8>)
 800f136:	f7fb f8cb 	bl	800a2d0 <printf>
 800f13a:	6861      	ldr	r1, [r4, #4]
 800f13c:	4823      	ldr	r0, [pc, #140]	; (800f1cc <PixelConfiguration::Print()+0xac>)
 800f13e:	f7fb f8c7 	bl	800a2d0 <printf>
 800f142:	7d63      	ldrb	r3, [r4, #21]
 800f144:	2b00      	cmp	r3, #0
 800f146:	d034      	beq.n	800f1b2 <PixelConfiguration::Print()+0x92>
 800f148:	68a0      	ldr	r0, [r4, #8]
 800f14a:	f000 f8a9 	bl	800f2a0 <PixelType::GetMap(pixel::Map)>
 800f14e:	68a2      	ldr	r2, [r4, #8]
 800f150:	4601      	mov	r1, r0
 800f152:	481f      	ldr	r0, [pc, #124]	; (800f1d0 <PixelConfiguration::Print()+0xb0>)
 800f154:	f7fb f8bc 	bl	800a2d0 <printf>
 800f158:	7c20      	ldrb	r0, [r4, #16]
 800f15a:	f000 f8b7 	bl	800f2cc <PixelType::ConvertTxH(unsigned char)>
 800f15e:	ee10 0a10 	vmov	r0, s0
 800f162:	f7f9 ff17 	bl	8008f94 <__aeabi_f2d>
 800f166:	460b      	mov	r3, r1
 800f168:	7c21      	ldrb	r1, [r4, #16]
 800f16a:	9100      	str	r1, [sp, #0]
 800f16c:	4602      	mov	r2, r0
 800f16e:	4819      	ldr	r0, [pc, #100]	; (800f1d4 <PixelConfiguration::Print()+0xb4>)
 800f170:	f7fb f8ae 	bl	800a2d0 <printf>
 800f174:	7c60      	ldrb	r0, [r4, #17]
 800f176:	f000 f8a9 	bl	800f2cc <PixelType::ConvertTxH(unsigned char)>
 800f17a:	ee10 0a10 	vmov	r0, s0
 800f17e:	f7f9 ff09 	bl	8008f94 <__aeabi_f2d>
 800f182:	460b      	mov	r3, r1
 800f184:	7c61      	ldrb	r1, [r4, #17]
 800f186:	9100      	str	r1, [sp, #0]
 800f188:	4602      	mov	r2, r0
 800f18a:	4813      	ldr	r0, [pc, #76]	; (800f1d8 <PixelConfiguration::Print()+0xb8>)
 800f18c:	f7fb f8a0 	bl	800a2d0 <printf>
 800f190:	7d21      	ldrb	r1, [r4, #20]
 800f192:	4a12      	ldr	r2, [pc, #72]	; (800f1dc <PixelConfiguration::Print()+0xbc>)
 800f194:	4b12      	ldr	r3, [pc, #72]	; (800f1e0 <PixelConfiguration::Print()+0xc0>)
 800f196:	4813      	ldr	r0, [pc, #76]	; (800f1e4 <PixelConfiguration::Print()+0xc4>)
 800f198:	2900      	cmp	r1, #0
 800f19a:	bf14      	ite	ne
 800f19c:	4611      	movne	r1, r2
 800f19e:	4619      	moveq	r1, r3
 800f1a0:	f7fb f896 	bl	800a2d0 <printf>
 800f1a4:	68e1      	ldr	r1, [r4, #12]
 800f1a6:	4810      	ldr	r0, [pc, #64]	; (800f1e8 <PixelConfiguration::Print()+0xc8>)
 800f1a8:	b002      	add	sp, #8
 800f1aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1ae:	f7fb b88f 	b.w	800a2d0 <printf>
 800f1b2:	6823      	ldr	r3, [r4, #0]
 800f1b4:	3b0b      	subs	r3, #11
 800f1b6:	2b01      	cmp	r3, #1
 800f1b8:	d8ea      	bhi.n	800f190 <PixelConfiguration::Print()+0x70>
 800f1ba:	7ca1      	ldrb	r1, [r4, #18]
 800f1bc:	480b      	ldr	r0, [pc, #44]	; (800f1ec <PixelConfiguration::Print()+0xcc>)
 800f1be:	f7fb f887 	bl	800a2d0 <printf>
 800f1c2:	e7e5      	b.n	800f190 <PixelConfiguration::Print()+0x70>
 800f1c4:	08018a6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, fp, pc}
 800f1c8:	08018a83 	stmdaeq	r1, {r0, r1, r7, r9, fp, pc}
 800f1cc:	08018a97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, fp, pc}
 800f1d0:	08018aa6 	stmdaeq	r1, {r1, r2, r5, r7, r9, fp, pc}
 800f1d4:	08018aba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, fp, pc}
 800f1d8:	08018ad2 	stmdaeq	r1, {r1, r4, r6, r7, r9, fp, pc}
 800f1dc:	08018a67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, fp, pc}
 800f1e0:	08018a6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, fp, pc}
 800f1e4:	08018b01 	stmdaeq	r1, {r0, r8, r9, fp, pc}
 800f1e8:	08018b17 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, fp, pc}
 800f1ec:	08018aea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, fp, pc}

0800f1f0 <PixelType::GetType(pixel::Type)>:
 800f1f0:	280d      	cmp	r0, #13
 800f1f2:	bfda      	itte	le
 800f1f4:	4b02      	ldrle	r3, [pc, #8]	; (800f200 <PixelType::GetType(pixel::Type)+0x10>)
 800f1f6:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800f1fa:	4802      	ldrgt	r0, [pc, #8]	; (800f204 <PixelType::GetType(pixel::Type)+0x14>)
 800f1fc:	4770      	bx	lr
 800f1fe:	bf00      	nop
 800f200:	08019370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, pc}
 800f204:	0801933c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, pc}

0800f208 <PixelType::GetType(char const*)>:
 800f208:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f20a:	4c10      	ldr	r4, [pc, #64]	; (800f24c <PixelType::GetType(char const*)+0x44>)
 800f20c:	2300      	movs	r3, #0
 800f20e:	1e47      	subs	r7, r0, #1
 800f210:	1e66      	subs	r6, r4, #1
 800f212:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 800f216:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
 800f21a:	2a19      	cmp	r2, #25
 800f21c:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800f220:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800f224:	460d      	mov	r5, r1
 800f226:	bf98      	it	ls
 800f228:	f101 0520 	addls.w	r5, r1, #32
 800f22c:	f1bc 0f19 	cmp.w	ip, #25
 800f230:	bf98      	it	ls
 800f232:	3220      	addls	r2, #32
 800f234:	42aa      	cmp	r2, r5
 800f236:	d005      	beq.n	800f244 <PixelType::GetType(char const*)+0x3c>
 800f238:	3301      	adds	r3, #1
 800f23a:	2b0e      	cmp	r3, #14
 800f23c:	f104 0408 	add.w	r4, r4, #8
 800f240:	d1e5      	bne.n	800f20e <PixelType::GetType(char const*)+0x6>
 800f242:	e001      	b.n	800f248 <PixelType::GetType(char const*)+0x40>
 800f244:	2900      	cmp	r1, #0
 800f246:	d1e4      	bne.n	800f212 <PixelType::GetType(char const*)+0xa>
 800f248:	4618      	mov	r0, r3
 800f24a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f24c:	08019370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, pc}

0800f250 <PixelType::GetMap(char const*)>:
 800f250:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f252:	4a12      	ldr	r2, [pc, #72]	; (800f29c <PixelType::GetMap(char const*)+0x4c>)
 800f254:	2300      	movs	r3, #0
 800f256:	1e55      	subs	r5, r2, #1
 800f258:	1e46      	subs	r6, r0, #1
 800f25a:	f102 0c02 	add.w	ip, r2, #2
 800f25e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800f262:	f1a1 0441 	sub.w	r4, r1, #65	; 0x41
 800f266:	2c19      	cmp	r4, #25
 800f268:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800f26c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800f270:	460f      	mov	r7, r1
 800f272:	bf98      	it	ls
 800f274:	f101 0720 	addls.w	r7, r1, #32
 800f278:	f1be 0f19 	cmp.w	lr, #25
 800f27c:	bf98      	it	ls
 800f27e:	3420      	addls	r4, #32
 800f280:	42bc      	cmp	r4, r7
 800f282:	d006      	beq.n	800f292 <PixelType::GetMap(char const*)+0x42>
 800f284:	3301      	adds	r3, #1
 800f286:	2b06      	cmp	r3, #6
 800f288:	f102 0204 	add.w	r2, r2, #4
 800f28c:	d1e3      	bne.n	800f256 <PixelType::GetMap(char const*)+0x6>
 800f28e:	4618      	mov	r0, r3
 800f290:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f292:	2900      	cmp	r1, #0
 800f294:	d0fb      	beq.n	800f28e <PixelType::GetMap(char const*)+0x3e>
 800f296:	4565      	cmp	r5, ip
 800f298:	d1e1      	bne.n	800f25e <PixelType::GetMap(char const*)+0xe>
 800f29a:	e7f8      	b.n	800f28e <PixelType::GetMap(char const*)+0x3e>
 800f29c:	08019358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, pc}

0800f2a0 <PixelType::GetMap(pixel::Map)>:
 800f2a0:	2805      	cmp	r0, #5
 800f2a2:	bfda      	itte	le
 800f2a4:	4b02      	ldrle	r3, [pc, #8]	; (800f2b0 <PixelType::GetMap(pixel::Map)+0x10>)
 800f2a6:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800f2aa:	4802      	ldrgt	r0, [pc, #8]	; (800f2b4 <PixelType::GetMap(pixel::Map)+0x14>)
 800f2ac:	4770      	bx	lr
 800f2ae:	bf00      	nop
 800f2b0:	08019358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, pc}
 800f2b4:	08019344 	stmdaeq	r1, {r2, r6, r8, r9, ip, pc}

0800f2b8 <PixelType::GetMap(pixel::Type)>:
 800f2b8:	3801      	subs	r0, #1
 800f2ba:	2809      	cmp	r0, #9
 800f2bc:	bf9a      	itte	ls
 800f2be:	4b02      	ldrls	r3, [pc, #8]	; (800f2c8 <PixelType::GetMap(pixel::Type)+0x10>)
 800f2c0:	5618      	ldrsbls	r0, [r3, r0]
 800f2c2:	2002      	movhi	r0, #2
 800f2c4:	4770      	bx	lr
 800f2c6:	bf00      	nop
 800f2c8:	0801934e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip, pc}

0800f2cc <PixelType::ConvertTxH(unsigned char)>:
 800f2cc:	28f0      	cmp	r0, #240	; 0xf0
 800f2ce:	d017      	beq.n	800f300 <PixelType::ConvertTxH(unsigned char)+0x34>
 800f2d0:	d80c      	bhi.n	800f2ec <PixelType::ConvertTxH(unsigned char)+0x20>
 800f2d2:	28c0      	cmp	r0, #192	; 0xc0
 800f2d4:	d017      	beq.n	800f306 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800f2d6:	28e0      	cmp	r0, #224	; 0xe0
 800f2d8:	d018      	beq.n	800f30c <PixelType::ConvertTxH(unsigned char)+0x40>
 800f2da:	ed9f 0a11 	vldr	s0, [pc, #68]	; 800f320 <PixelType::ConvertTxH(unsigned char)+0x54>
 800f2de:	2880      	cmp	r0, #128	; 0x80
 800f2e0:	eef4 7a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
 800f2e4:	bf08      	it	eq
 800f2e6:	eeb0 0a67 	vmoveq.f32	s0, s15
 800f2ea:	4770      	bx	lr
 800f2ec:	28fc      	cmp	r0, #252	; 0xfc
 800f2ee:	d010      	beq.n	800f312 <PixelType::ConvertTxH(unsigned char)+0x46>
 800f2f0:	28fe      	cmp	r0, #254	; 0xfe
 800f2f2:	d011      	beq.n	800f318 <PixelType::ConvertTxH(unsigned char)+0x4c>
 800f2f4:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 800f320 <PixelType::ConvertTxH(unsigned char)+0x54>
 800f2f8:	28f8      	cmp	r0, #248	; 0xf8
 800f2fa:	eef6 7a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
 800f2fe:	e7f1      	b.n	800f2e4 <PixelType::ConvertTxH(unsigned char)+0x18>
 800f300:	eeb6 0a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
 800f304:	4770      	bx	lr
 800f306:	eeb5 0a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
 800f30a:	4770      	bx	lr
 800f30c:	eeb5 0a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
 800f310:	4770      	bx	lr
 800f312:	eeb6 0a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
 800f316:	4770      	bx	lr
 800f318:	ed9f 0a02 	vldr	s0, [pc, #8]	; 800f324 <PixelType::ConvertTxH(unsigned char)+0x58>
 800f31c:	4770      	bx	lr
 800f31e:	bf00      	nop
 800f320:	00000000 	andeq	r0, r0, r0
 800f324:	3f8c0000 	svccc	0x008c0000

0800f328 <PixelType::ConvertTxH(float)>:
 800f328:	eddf 7a24 	vldr	s15, [pc, #144]	; 800f3bc <PixelType::ConvertTxH(float)+0x94>
 800f32c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f334:	d433      	bmi.n	800f39e <PixelType::ConvertTxH(float)+0x76>
 800f336:	eef4 7a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
 800f33a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f33e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f342:	d42e      	bmi.n	800f3a2 <PixelType::ConvertTxH(float)+0x7a>
 800f344:	eef5 7a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
 800f348:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f34c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f350:	d429      	bmi.n	800f3a6 <PixelType::ConvertTxH(float)+0x7e>
 800f352:	eddf 7a1b 	vldr	s15, [pc, #108]	; 800f3c0 <PixelType::ConvertTxH(float)+0x98>
 800f356:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f35a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f35e:	d424      	bmi.n	800f3aa <PixelType::ConvertTxH(float)+0x82>
 800f360:	eddf 7a18 	vldr	s15, [pc, #96]	; 800f3c4 <PixelType::ConvertTxH(float)+0x9c>
 800f364:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f36c:	d41f      	bmi.n	800f3ae <PixelType::ConvertTxH(float)+0x86>
 800f36e:	eddf 7a16 	vldr	s15, [pc, #88]	; 800f3c8 <PixelType::ConvertTxH(float)+0xa0>
 800f372:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f37a:	d41a      	bmi.n	800f3b2 <PixelType::ConvertTxH(float)+0x8a>
 800f37c:	eddf 7a13 	vldr	s15, [pc, #76]	; 800f3cc <PixelType::ConvertTxH(float)+0xa4>
 800f380:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f388:	d415      	bmi.n	800f3b6 <PixelType::ConvertTxH(float)+0x8e>
 800f38a:	eddf 7a11 	vldr	s15, [pc, #68]	; 800f3d0 <PixelType::ConvertTxH(float)+0xa8>
 800f38e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800f392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f396:	bf4c      	ite	mi
 800f398:	20fe      	movmi	r0, #254	; 0xfe
 800f39a:	2000      	movpl	r0, #0
 800f39c:	4770      	bx	lr
 800f39e:	2000      	movs	r0, #0
 800f3a0:	4770      	bx	lr
 800f3a2:	2080      	movs	r0, #128	; 0x80
 800f3a4:	4770      	bx	lr
 800f3a6:	20c0      	movs	r0, #192	; 0xc0
 800f3a8:	4770      	bx	lr
 800f3aa:	20e0      	movs	r0, #224	; 0xe0
 800f3ac:	4770      	bx	lr
 800f3ae:	20f0      	movs	r0, #240	; 0xf0
 800f3b0:	4770      	bx	lr
 800f3b2:	20f8      	movs	r0, #248	; 0xf8
 800f3b4:	4770      	bx	lr
 800f3b6:	20fc      	movs	r0, #252	; 0xfc
 800f3b8:	4770      	bx	lr
 800f3ba:	bf00      	nop
 800f3bc:	3da00000 	stccc	0, cr0, [r0]
 800f3c0:	3f0c0000 	svccc	0x000c0000
 800f3c4:	3f340000 	svccc	0x00340000
 800f3c8:	3f5c0000 	svccc	0x005c0000
 800f3cc:	3f820000 	svccc	0x00820000
 800f3d0:	3f960000 	svccc	0x00960000

0800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800f3d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f3d6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800f3da:	f3c2 2607 	ubfx	r6, r2, #8, #8
 800f3de:	b2d4      	uxtb	r4, r2
 800f3e0:	4a10      	ldr	r2, [pc, #64]	; (800f424 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 800f3e2:	4605      	mov	r5, r0
 800f3e4:	6810      	ldr	r0, [r2, #0]
 800f3e6:	6802      	ldr	r2, [r0, #0]
 800f3e8:	2a07      	cmp	r2, #7
 800f3ea:	d007      	beq.n	800f3fc <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 800f3ec:	460a      	mov	r2, r1
 800f3ee:	e9cd 6400 	strd	r6, r4, [sp]
 800f3f2:	4629      	mov	r1, r5
 800f3f4:	f000 ff80 	bl	80102f8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f3f8:	b004      	add	sp, #16
 800f3fa:	bd70      	pop	{r4, r5, r6, pc}
 800f3fc:	42b3      	cmp	r3, r6
 800f3fe:	f04f 0200 	mov.w	r2, #0
 800f402:	d10a      	bne.n	800f41a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800f404:	42a3      	cmp	r3, r4
 800f406:	d108      	bne.n	800f41a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800f408:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f40c:	9200      	str	r2, [sp, #0]
 800f40e:	4613      	mov	r3, r2
 800f410:	460a      	mov	r2, r1
 800f412:	4629      	mov	r1, r5
 800f414:	f000 fff2 	bl	80103fc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f418:	e7ee      	b.n	800f3f8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800f41a:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800f41e:	9600      	str	r6, [sp, #0]
 800f420:	e7f6      	b.n	800f410 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 800f422:	bf00      	nop
 800f424:	200013c4 	andcs	r1, r0, r4, asr #7

0800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800f428:	b570      	push	{r4, r5, r6, lr}
 800f42a:	4d07      	ldr	r5, [pc, #28]	; (800f448 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800f42c:	4606      	mov	r6, r0
 800f42e:	2400      	movs	r4, #0
 800f430:	682b      	ldr	r3, [r5, #0]
 800f432:	429c      	cmp	r4, r3
 800f434:	d300      	bcc.n	800f438 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800f436:	bd70      	pop	{r4, r5, r6, pc}
 800f438:	4621      	mov	r1, r4
 800f43a:	2200      	movs	r2, #0
 800f43c:	4630      	mov	r0, r6
 800f43e:	f7ff ffc9 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f442:	3401      	adds	r4, #1
 800f444:	e7f4      	b.n	800f430 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800f446:	bf00      	nop
 800f448:	200013c0 	andcs	r1, r0, r0, asr #7

0800f44c <PixelPatterns::PixelPatterns(unsigned int)>:
 800f44c:	4b0c      	ldr	r3, [pc, #48]	; (800f480 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800f44e:	4a0d      	ldr	r2, [pc, #52]	; (800f484 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800f450:	681b      	ldr	r3, [r3, #0]
 800f452:	b510      	push	{r4, lr}
 800f454:	2910      	cmp	r1, #16
 800f456:	6013      	str	r3, [r2, #0]
 800f458:	4a0b      	ldr	r2, [pc, #44]	; (800f488 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800f45a:	bf28      	it	cs
 800f45c:	2110      	movcs	r1, #16
 800f45e:	6011      	str	r1, [r2, #0]
 800f460:	685a      	ldr	r2, [r3, #4]
 800f462:	4b0a      	ldr	r3, [pc, #40]	; (800f48c <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800f464:	601a      	str	r2, [r3, #0]
 800f466:	4b0a      	ldr	r3, [pc, #40]	; (800f490 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800f468:	681c      	ldr	r4, [r3, #0]
 800f46a:	4b0a      	ldr	r3, [pc, #40]	; (800f494 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800f46c:	2210      	movs	r2, #16
 800f46e:	2100      	movs	r1, #0
 800f470:	3a01      	subs	r2, #1
 800f472:	61d9      	str	r1, [r3, #28]
 800f474:	601c      	str	r4, [r3, #0]
 800f476:	6199      	str	r1, [r3, #24]
 800f478:	f103 0320 	add.w	r3, r3, #32
 800f47c:	d1f8      	bne.n	800f470 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800f47e:	bd10      	pop	{r4, pc}
 800f480:	200013d0 	ldrdcs	r1, [r0], -r0
 800f484:	200013c4 	andcs	r1, r0, r4, asr #7
 800f488:	200013b8 			; <UNDEFINED> instruction: 0x200013b8
 800f48c:	200013c0 	andcs	r1, r0, r0, asr #7
 800f490:	2000fefc 	strdcs	pc, [r0], -ip
 800f494:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f498 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800f498:	2805      	cmp	r0, #5
 800f49a:	bfdd      	ittte	le
 800f49c:	4b02      	ldrle	r3, [pc, #8]	; (800f4a8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800f49e:	220e      	movle	r2, #14
 800f4a0:	fb02 3000 	mlale	r0, r2, r0, r3
 800f4a4:	4801      	ldrgt	r0, [pc, #4]	; (800f4ac <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800f4a6:	4770      	bx	lr
 800f4a8:	080193e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, ip, pc}
 800f4ac:	0801933c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, pc}

0800f4b0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f4b0:	b5e0      	push	{r5, r6, r7, lr}
 800f4b2:	4608      	mov	r0, r1
 800f4b4:	460d      	mov	r5, r1
 800f4b6:	4617      	mov	r7, r2
 800f4b8:	461e      	mov	r6, r3
 800f4ba:	f7ff ffb5 	bl	800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f4be:	4906      	ldr	r1, [pc, #24]	; (800f4d8 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800f4c0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f4c4:	2301      	movs	r3, #1
 800f4c6:	61cb      	str	r3, [r1, #28]
 800f4c8:	22ff      	movs	r2, #255	; 0xff
 800f4ca:	2300      	movs	r3, #0
 800f4cc:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800f4d0:	604f      	str	r7, [r1, #4]
 800f4d2:	618e      	str	r6, [r1, #24]
 800f4d4:	bde0      	pop	{r5, r6, r7, pc}
 800f4d6:	bf00      	nop
 800f4d8:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f4dc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f4dc:	b5e0      	push	{r5, r6, r7, lr}
 800f4de:	4608      	mov	r0, r1
 800f4e0:	460d      	mov	r5, r1
 800f4e2:	461e      	mov	r6, r3
 800f4e4:	4617      	mov	r7, r2
 800f4e6:	f7ff ff9f 	bl	800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f4ea:	4908      	ldr	r1, [pc, #32]	; (800f50c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f4ec:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f4f0:	2302      	movs	r3, #2
 800f4f2:	61cb      	str	r3, [r1, #28]
 800f4f4:	9b04      	ldr	r3, [sp, #16]
 800f4f6:	604b      	str	r3, [r1, #4]
 800f4f8:	4b05      	ldr	r3, [pc, #20]	; (800f510 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800f4fa:	681b      	ldr	r3, [r3, #0]
 800f4fc:	610b      	str	r3, [r1, #16]
 800f4fe:	2300      	movs	r3, #0
 800f500:	614b      	str	r3, [r1, #20]
 800f502:	9b05      	ldr	r3, [sp, #20]
 800f504:	618b      	str	r3, [r1, #24]
 800f506:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800f50a:	bde0      	pop	{r5, r6, r7, pc}
 800f50c:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f510:	200013c0 	andcs	r1, r0, r0, asr #7

0800f514 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f514:	b5e0      	push	{r5, r6, r7, lr}
 800f516:	4608      	mov	r0, r1
 800f518:	460d      	mov	r5, r1
 800f51a:	461f      	mov	r7, r3
 800f51c:	4616      	mov	r6, r2
 800f51e:	f7ff ff83 	bl	800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f522:	4907      	ldr	r1, [pc, #28]	; (800f540 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800f524:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f528:	2303      	movs	r3, #3
 800f52a:	61cb      	str	r3, [r1, #28]
 800f52c:	4b05      	ldr	r3, [pc, #20]	; (800f544 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f52e:	604f      	str	r7, [r1, #4]
 800f530:	681b      	ldr	r3, [r3, #0]
 800f532:	610b      	str	r3, [r1, #16]
 800f534:	2300      	movs	r3, #0
 800f536:	614b      	str	r3, [r1, #20]
 800f538:	9b04      	ldr	r3, [sp, #16]
 800f53a:	608e      	str	r6, [r1, #8]
 800f53c:	618b      	str	r3, [r1, #24]
 800f53e:	bde0      	pop	{r5, r6, r7, pc}
 800f540:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f544:	200013c0 	andcs	r1, r0, r0, asr #7

0800f548 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800f548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f54a:	4608      	mov	r0, r1
 800f54c:	460d      	mov	r5, r1
 800f54e:	461f      	mov	r7, r3
 800f550:	4616      	mov	r6, r2
 800f552:	4c14      	ldr	r4, [pc, #80]	; (800f5a4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800f554:	f7ff ff68 	bl	800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f558:	4913      	ldr	r1, [pc, #76]	; (800f5a8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800f55a:	6820      	ldr	r0, [r4, #0]
 800f55c:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f560:	2304      	movs	r3, #4
 800f562:	61cb      	str	r3, [r1, #28]
 800f564:	1e43      	subs	r3, r0, #1
 800f566:	005b      	lsls	r3, r3, #1
 800f568:	b29b      	uxth	r3, r3
 800f56a:	4d10      	ldr	r5, [pc, #64]	; (800f5ac <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800f56c:	610b      	str	r3, [r1, #16]
 800f56e:	2300      	movs	r3, #0
 800f570:	614b      	str	r3, [r1, #20]
 800f572:	682b      	ldr	r3, [r5, #0]
 800f574:	604f      	str	r7, [r1, #4]
 800f576:	608e      	str	r6, [r1, #8]
 800f578:	b97b      	cbnz	r3, 800f59a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800f57a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800f57e:	4298      	cmp	r0, r3
 800f580:	bf34      	ite	cc
 800f582:	0080      	lslcc	r0, r0, #2
 800f584:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800f588:	f004 ffd6 	bl	8014538 <operator new[](unsigned int)>
 800f58c:	6823      	ldr	r3, [r4, #0]
 800f58e:	6028      	str	r0, [r5, #0]
 800f590:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800f594:	2200      	movs	r2, #0
 800f596:	4298      	cmp	r0, r3
 800f598:	d100      	bne.n	800f59c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800f59a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f59c:	f840 2b04 	str.w	r2, [r0], #4
 800f5a0:	e7f9      	b.n	800f596 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800f5a2:	bf00      	nop
 800f5a4:	200013c0 	andcs	r1, r0, r0, asr #7
 800f5a8:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f5ac:	200013bc 			; <UNDEFINED> instruction: 0x200013bc

0800f5b0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800f5b0:	b5e0      	push	{r5, r6, r7, lr}
 800f5b2:	4608      	mov	r0, r1
 800f5b4:	460d      	mov	r5, r1
 800f5b6:	461e      	mov	r6, r3
 800f5b8:	4617      	mov	r7, r2
 800f5ba:	f7ff ff35 	bl	800f428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800f5be:	4908      	ldr	r1, [pc, #32]	; (800f5e0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800f5c0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800f5c4:	2305      	movs	r3, #5
 800f5c6:	61cb      	str	r3, [r1, #28]
 800f5c8:	9b05      	ldr	r3, [sp, #20]
 800f5ca:	604b      	str	r3, [r1, #4]
 800f5cc:	9b04      	ldr	r3, [sp, #16]
 800f5ce:	610b      	str	r3, [r1, #16]
 800f5d0:	2300      	movs	r3, #0
 800f5d2:	614b      	str	r3, [r1, #20]
 800f5d4:	9b06      	ldr	r3, [sp, #24]
 800f5d6:	618b      	str	r3, [r1, #24]
 800f5d8:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800f5dc:	bde0      	pop	{r5, r6, r7, pc}
 800f5de:	bf00      	nop
 800f5e0:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f5e4 <PixelPatterns::Wheel(unsigned char)>:
 800f5e4:	43cb      	mvns	r3, r1
 800f5e6:	b2db      	uxtb	r3, r3
 800f5e8:	2b54      	cmp	r3, #84	; 0x54
 800f5ea:	d809      	bhi.n	800f600 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800f5ec:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800f5f0:	b2db      	uxtb	r3, r3
 800f5f2:	1e5a      	subs	r2, r3, #1
 800f5f4:	4258      	negs	r0, r3
 800f5f6:	b2d2      	uxtb	r2, r2
 800f5f8:	b2c0      	uxtb	r0, r0
 800f5fa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800f5fe:	4770      	bx	lr
 800f600:	2ba9      	cmp	r3, #169	; 0xa9
 800f602:	d809      	bhi.n	800f618 <PixelPatterns::Wheel(unsigned char)+0x34>
 800f604:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800f608:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f60c:	b2c9      	uxtb	r1, r1
 800f60e:	43c8      	mvns	r0, r1
 800f610:	b2c0      	uxtb	r0, r0
 800f612:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800f616:	4770      	bx	lr
 800f618:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800f61c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f620:	b2c9      	uxtb	r1, r1
 800f622:	0208      	lsls	r0, r1, #8
 800f624:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800f628:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800f62c:	4770      	bx	lr
	...

0800f630 <PixelPatterns::Increment(unsigned int)>:
 800f630:	4a0d      	ldr	r2, [pc, #52]	; (800f668 <PixelPatterns::Increment(unsigned int)+0x38>)
 800f632:	b510      	push	{r4, lr}
 800f634:	014c      	lsls	r4, r1, #5
 800f636:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800f63a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800f63e:	b930      	cbnz	r0, 800f64e <PixelPatterns::Increment(unsigned int)+0x1e>
 800f640:	690a      	ldr	r2, [r1, #16]
 800f642:	3301      	adds	r3, #1
 800f644:	4293      	cmp	r3, r2
 800f646:	bf18      	it	ne
 800f648:	4618      	movne	r0, r3
 800f64a:	6148      	str	r0, [r1, #20]
 800f64c:	bd10      	pop	{r4, pc}
 800f64e:	b92b      	cbnz	r3, 800f65c <PixelPatterns::Increment(unsigned int)+0x2c>
 800f650:	4422      	add	r2, r4
 800f652:	6913      	ldr	r3, [r2, #16]
 800f654:	3b01      	subs	r3, #1
 800f656:	b29b      	uxth	r3, r3
 800f658:	6153      	str	r3, [r2, #20]
 800f65a:	e7f7      	b.n	800f64c <PixelPatterns::Increment(unsigned int)+0x1c>
 800f65c:	3b01      	subs	r3, #1
 800f65e:	614b      	str	r3, [r1, #20]
 800f660:	2b00      	cmp	r3, #0
 800f662:	d1f3      	bne.n	800f64c <PixelPatterns::Increment(unsigned int)+0x1c>
 800f664:	e7f4      	b.n	800f650 <PixelPatterns::Increment(unsigned int)+0x20>
 800f666:	bf00      	nop
 800f668:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f66c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800f66c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f670:	4b12      	ldr	r3, [pc, #72]	; (800f6bc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800f672:	f8df 804c 	ldr.w	r8, [pc, #76]	; 800f6c0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800f676:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f67a:	4605      	mov	r5, r0
 800f67c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800f680:	460c      	mov	r4, r1
 800f682:	2700      	movs	r7, #0
 800f684:	f8d8 3000 	ldr.w	r3, [r8]
 800f688:	b2be      	uxth	r6, r7
 800f68a:	42b3      	cmp	r3, r6
 800f68c:	f107 0701 	add.w	r7, r7, #1
 800f690:	d805      	bhi.n	800f69e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800f692:	4621      	mov	r1, r4
 800f694:	4628      	mov	r0, r5
 800f696:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f69a:	f7ff bfc9 	b.w	800f630 <PixelPatterns::Increment(unsigned int)>
 800f69e:	0231      	lsls	r1, r6, #8
 800f6a0:	fbb1 f1f3 	udiv	r1, r1, r3
 800f6a4:	4449      	add	r1, r9
 800f6a6:	b2c9      	uxtb	r1, r1
 800f6a8:	4628      	mov	r0, r5
 800f6aa:	f7ff ff9b 	bl	800f5e4 <PixelPatterns::Wheel(unsigned char)>
 800f6ae:	4631      	mov	r1, r6
 800f6b0:	4602      	mov	r2, r0
 800f6b2:	4620      	mov	r0, r4
 800f6b4:	f7ff fe8e 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f6b8:	e7e4      	b.n	800f684 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800f6ba:	bf00      	nop
 800f6bc:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f6c0:	200013c0 	andcs	r1, r0, r0, asr #7

0800f6c4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800f6c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6c8:	4b13      	ldr	r3, [pc, #76]	; (800f718 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800f6ca:	4e14      	ldr	r6, [pc, #80]	; (800f71c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800f6cc:	f8df a050 	ldr.w	sl, [pc, #80]	; 800f720 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800f6d0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f6d4:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800f6d8:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800f6dc:	4605      	mov	r5, r0
 800f6de:	460c      	mov	r4, r1
 800f6e0:	f04f 0b00 	mov.w	fp, #0
 800f6e4:	6833      	ldr	r3, [r6, #0]
 800f6e6:	fa1f f18b 	uxth.w	r1, fp
 800f6ea:	428b      	cmp	r3, r1
 800f6ec:	d805      	bhi.n	800f6fa <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800f6ee:	4621      	mov	r1, r4
 800f6f0:	4628      	mov	r0, r5
 800f6f2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6f6:	f7ff bf9b 	b.w	800f630 <PixelPatterns::Increment(unsigned int)>
 800f6fa:	eb09 0301 	add.w	r3, r9, r1
 800f6fe:	fb0a f303 	mul.w	r3, sl, r3
 800f702:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800f706:	bf94      	ite	ls
 800f708:	463a      	movls	r2, r7
 800f70a:	4642      	movhi	r2, r8
 800f70c:	4620      	mov	r0, r4
 800f70e:	f7ff fe61 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f712:	f10b 0b01 	add.w	fp, fp, #1
 800f716:	e7e5      	b.n	800f6e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800f718:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f71c:	200013c0 	andcs	r1, r0, r0, asr #7
 800f720:	aaaaaaab 	bge	6aba1d4 <__stack_size+0x6ab61d4>

0800f724 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800f724:	b538      	push	{r3, r4, r5, lr}
 800f726:	4b08      	ldr	r3, [pc, #32]	; (800f748 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800f728:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f72c:	460c      	mov	r4, r1
 800f72e:	4605      	mov	r5, r0
 800f730:	6959      	ldr	r1, [r3, #20]
 800f732:	689a      	ldr	r2, [r3, #8]
 800f734:	4620      	mov	r0, r4
 800f736:	f7ff fe4d 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f73a:	4621      	mov	r1, r4
 800f73c:	4628      	mov	r0, r5
 800f73e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f742:	f7ff bf75 	b.w	800f630 <PixelPatterns::Increment(unsigned int)>
 800f746:	bf00      	nop
 800f748:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f74c <PixelPatterns::ScannerUpdate(unsigned int)>:
 800f74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f750:	4b29      	ldr	r3, [pc, #164]	; (800f7f8 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>)
 800f752:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 800f7fc <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800f756:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 800f800 <PixelPatterns::ScannerUpdate(unsigned int)+0xb4>
 800f75a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800f75e:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800f762:	b085      	sub	sp, #20
 800f764:	689d      	ldr	r5, [r3, #8]
 800f766:	00b3      	lsls	r3, r6, #2
 800f768:	4680      	mov	r8, r0
 800f76a:	9301      	str	r3, [sp, #4]
 800f76c:	4608      	mov	r0, r1
 800f76e:	f04f 0900 	mov.w	r9, #0
 800f772:	1bbf      	subs	r7, r7, r6
 800f774:	f8da 2000 	ldr.w	r2, [sl]
 800f778:	fa1f f489 	uxth.w	r4, r9
 800f77c:	42a2      	cmp	r2, r4
 800f77e:	d806      	bhi.n	800f78e <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800f780:	4601      	mov	r1, r0
 800f782:	4640      	mov	r0, r8
 800f784:	b005      	add	sp, #20
 800f786:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f78a:	f7ff bf51 	b.w	800f630 <PixelPatterns::Increment(unsigned int)>
 800f78e:	42a6      	cmp	r6, r4
 800f790:	d10c      	bne.n	800f7ac <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800f792:	462a      	mov	r2, r5
 800f794:	4631      	mov	r1, r6
 800f796:	9002      	str	r0, [sp, #8]
 800f798:	f7ff fe1c 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f79c:	f8db 2000 	ldr.w	r2, [fp]
 800f7a0:	9b01      	ldr	r3, [sp, #4]
 800f7a2:	50d5      	str	r5, [r2, r3]
 800f7a4:	9802      	ldr	r0, [sp, #8]
 800f7a6:	f109 0901 	add.w	r9, r9, #1
 800f7aa:	e7e3      	b.n	800f774 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800f7ac:	42a7      	cmp	r7, r4
 800f7ae:	d109      	bne.n	800f7c4 <PixelPatterns::ScannerUpdate(unsigned int)+0x78>
 800f7b0:	462a      	mov	r2, r5
 800f7b2:	4639      	mov	r1, r7
 800f7b4:	9002      	str	r0, [sp, #8]
 800f7b6:	f7ff fe0d 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f7ba:	f8db 2000 	ldr.w	r2, [fp]
 800f7be:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800f7c2:	e7ef      	b.n	800f7a4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800f7c4:	f8db 2000 	ldr.w	r2, [fp]
 800f7c8:	9002      	str	r0, [sp, #8]
 800f7ca:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800f7ce:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800f7d2:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800f7d6:	0212      	lsls	r2, r2, #8
 800f7d8:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800f7dc:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800f7e0:	430a      	orrs	r2, r1
 800f7e2:	4621      	mov	r1, r4
 800f7e4:	9203      	str	r2, [sp, #12]
 800f7e6:	f7ff fdf5 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f7ea:	f8db 1000 	ldr.w	r1, [fp]
 800f7ee:	9a03      	ldr	r2, [sp, #12]
 800f7f0:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800f7f4:	e7d6      	b.n	800f7a4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800f7f6:	bf00      	nop
 800f7f8:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f7fc:	200013c0 	andcs	r1, r0, r0, asr #7
 800f800:	200013bc 			; <UNDEFINED> instruction: 0x200013bc

0800f804 <PixelPatterns::FadeUpdate(unsigned int)>:
 800f804:	4a20      	ldr	r2, [pc, #128]	; (800f888 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800f806:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800f80a:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800f80e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f812:	460e      	mov	r6, r1
 800f814:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800f818:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f81c:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800f820:	437a      	muls	r2, r7
 800f822:	4605      	mov	r5, r0
 800f824:	1bc8      	subs	r0, r1, r7
 800f826:	fb00 2204 	mla	r2, r0, r4, r2
 800f82a:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800f82e:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800f832:	437c      	muls	r4, r7
 800f834:	fb00 440e 	mla	r4, r0, lr, r4
 800f838:	b2db      	uxtb	r3, r3
 800f83a:	fbb2 f2f1 	udiv	r2, r2, r1
 800f83e:	fbb4 f4f1 	udiv	r4, r4, r1
 800f842:	0212      	lsls	r2, r2, #8
 800f844:	0424      	lsls	r4, r4, #16
 800f846:	437b      	muls	r3, r7
 800f848:	b292      	uxth	r2, r2
 800f84a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800f84e:	fa5f fc8c 	uxtb.w	ip, ip
 800f852:	4314      	orrs	r4, r2
 800f854:	fb00 330c 	mla	r3, r0, ip, r3
 800f858:	f8df 8030 	ldr.w	r8, [pc, #48]	; 800f88c <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800f85c:	fbb3 f3f1 	udiv	r3, r3, r1
 800f860:	b2db      	uxtb	r3, r3
 800f862:	431c      	orrs	r4, r3
 800f864:	2700      	movs	r7, #0
 800f866:	f8d8 3000 	ldr.w	r3, [r8]
 800f86a:	429f      	cmp	r7, r3
 800f86c:	d305      	bcc.n	800f87a <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800f86e:	4631      	mov	r1, r6
 800f870:	4628      	mov	r0, r5
 800f872:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f876:	f7ff bedb 	b.w	800f630 <PixelPatterns::Increment(unsigned int)>
 800f87a:	4639      	mov	r1, r7
 800f87c:	4622      	mov	r2, r4
 800f87e:	4630      	mov	r0, r6
 800f880:	f7ff fda8 	bl	800f3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800f884:	3701      	adds	r7, #1
 800f886:	e7ee      	b.n	800f866 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800f888:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 800f88c:	200013c0 	andcs	r1, r0, r0, asr #7

0800f890 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800f890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f892:	4b12      	ldr	r3, [pc, #72]	; (800f8dc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800f894:	014e      	lsls	r6, r1, #5
 800f896:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800f89a:	599c      	ldr	r4, [r3, r6]
 800f89c:	686f      	ldr	r7, [r5, #4]
 800f89e:	1b14      	subs	r4, r2, r4
 800f8a0:	42bc      	cmp	r4, r7
 800f8a2:	d319      	bcc.n	800f8d8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800f8a4:	519a      	str	r2, [r3, r6]
 800f8a6:	69eb      	ldr	r3, [r5, #28]
 800f8a8:	3b01      	subs	r3, #1
 800f8aa:	2b04      	cmp	r3, #4
 800f8ac:	d814      	bhi.n	800f8d8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800f8ae:	e8df f003 	tbb	[pc, r3]
 800f8b2:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800f8b6:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800f8ba:	fed8 2001 	cdp2	0, 13, cr2, cr8, cr1, {0}
 800f8be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8c0:	f7ff ff00 	bl	800f6c4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800f8c4:	e7fa      	b.n	800f8bc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f8c6:	f7ff ff2d 	bl	800f724 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800f8ca:	e7f7      	b.n	800f8bc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f8cc:	f7ff ff3e 	bl	800f74c <PixelPatterns::ScannerUpdate(unsigned int)>
 800f8d0:	e7f4      	b.n	800f8bc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f8d2:	f7ff ff97 	bl	800f804 <PixelPatterns::FadeUpdate(unsigned int)>
 800f8d6:	e7f1      	b.n	800f8bc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800f8d8:	2000      	movs	r0, #0
 800f8da:	e7f0      	b.n	800f8be <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800f8dc:	200011b8 			; <UNDEFINED> instruction: 0x200011b8

0800f8e0 <PixelPatterns::Run()>:
 800f8e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f8e4:	4f11      	ldr	r7, [pc, #68]	; (800f92c <PixelPatterns::Run()+0x4c>)
 800f8e6:	4606      	mov	r6, r0
 800f8e8:	6838      	ldr	r0, [r7, #0]
 800f8ea:	f000 fc85 	bl	80101f8 <WS28xxMulti::IsUpdating()>
 800f8ee:	4604      	mov	r4, r0
 800f8f0:	b9c8      	cbnz	r0, 800f926 <PixelPatterns::Run()+0x46>
 800f8f2:	4b0f      	ldr	r3, [pc, #60]	; (800f930 <PixelPatterns::Run()+0x50>)
 800f8f4:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800f934 <PixelPatterns::Run()+0x54>
 800f8f8:	f8d3 9000 	ldr.w	r9, [r3]
 800f8fc:	4605      	mov	r5, r0
 800f8fe:	f8d8 3000 	ldr.w	r3, [r8]
 800f902:	b2e9      	uxtb	r1, r5
 800f904:	428b      	cmp	r3, r1
 800f906:	f105 0501 	add.w	r5, r5, #1
 800f90a:	d805      	bhi.n	800f918 <PixelPatterns::Run()+0x38>
 800f90c:	b15c      	cbz	r4, 800f926 <PixelPatterns::Run()+0x46>
 800f90e:	6838      	ldr	r0, [r7, #0]
 800f910:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f914:	f000 bb0a 	b.w	800ff2c <WS28xxMulti::Update()>
 800f918:	464a      	mov	r2, r9
 800f91a:	4630      	mov	r0, r6
 800f91c:	f7ff ffb8 	bl	800f890 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800f920:	4320      	orrs	r0, r4
 800f922:	b2c4      	uxtb	r4, r0
 800f924:	e7eb      	b.n	800f8fe <PixelPatterns::Run()+0x1e>
 800f926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f92a:	bf00      	nop
 800f92c:	200013c4 	andcs	r1, r0, r4, asr #7
 800f930:	2000fefc 	strdcs	pc, [r0], -ip
 800f934:	200013b8 			; <UNDEFINED> instruction: 0x200013b8

0800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800f938:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f93a:	4c20      	ldr	r4, [pc, #128]	; (800f9bc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 800f93c:	f89d e014 	ldrb.w	lr, [sp, #20]
 800f940:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800f944:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 800f948:	4c1d      	ldr	r4, [pc, #116]	; (800f9c0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x88>)
 800f94a:	b2c0      	uxtb	r0, r0
 800f94c:	440c      	add	r4, r1
 800f94e:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 800f952:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 800f956:	f500 7000 	add.w	r0, r0, #512	; 0x200
 800f95a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f95e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f962:	0089      	lsls	r1, r1, #2
 800f964:	2080      	movs	r0, #128	; 0x80
 800f966:	2601      	movs	r6, #1
 800f968:	ea12 0400 	ands.w	r4, r2, r0
 800f96c:	bf0b      	itete	eq
 800f96e:	f5ac 67c0 	subeq.w	r7, ip, #1536	; 0x600
 800f972:	f5ac 64c0 	subne.w	r4, ip, #1536	; 0x600
 800f976:	603c      	streq	r4, [r7, #0]
 800f978:	6026      	strne	r6, [r4, #0]
 800f97a:	ea13 0400 	ands.w	r4, r3, r0
 800f97e:	bf0b      	itete	eq
 800f980:	f5ac 6780 	subeq.w	r7, ip, #1024	; 0x400
 800f984:	f5ac 6480 	subne.w	r4, ip, #1024	; 0x400
 800f988:	603c      	streq	r4, [r7, #0]
 800f98a:	6026      	strne	r6, [r4, #0]
 800f98c:	ea1e 0400 	ands.w	r4, lr, r0
 800f990:	bf15      	itete	ne
 800f992:	f5ac 7400 	subne.w	r4, ip, #512	; 0x200
 800f996:	f5ac 7700 	subeq.w	r7, ip, #512	; 0x200
 800f99a:	6026      	strne	r6, [r4, #0]
 800f99c:	603c      	streq	r4, [r7, #0]
 800f99e:	ea15 0400 	ands.w	r4, r5, r0
 800f9a2:	bf14      	ite	ne
 800f9a4:	f8cc 6000 	strne.w	r6, [ip]
 800f9a8:	f8cc 4000 	streq.w	r4, [ip]
 800f9ac:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 800f9b0:	4561      	cmp	r1, ip
 800f9b2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800f9b6:	d1d7      	bne.n	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x30>
 800f9b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9ba:	bf00      	nop
 800f9bc:	200013d4 	ldrdcs	r1, [r0], -r4
 800f9c0:	e1100030 	tst	r0, r0, lsr r0

0800f9c4 <TIMER3_IRQHandler>:
 800f9c4:	f3bf 8f5f 	dmb	sy
 800f9c8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f9cc:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 800f9d0:	0791      	lsls	r1, r2, #30
 800f9d2:	d51e      	bpl.n	800fa12 <TIMER3_IRQHandler+0x4e>
 800f9d4:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800f9d8:	f021 0101 	bic.w	r1, r1, #1
 800f9dc:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800f9e0:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f9e4:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800f9e8:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800f9ec:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f9f0:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800f9f4:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800f9f8:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800f9fc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 800fa00:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800fa04:	4b07      	ldr	r3, [pc, #28]	; (800fa24 <TIMER3_IRQHandler+0x60>)
 800fa06:	2100      	movs	r1, #0
 800fa08:	7019      	strb	r1, [r3, #0]
 800fa0a:	4b07      	ldr	r3, [pc, #28]	; (800fa28 <TIMER3_IRQHandler+0x64>)
 800fa0c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa10:	6299      	str	r1, [r3, #40]	; 0x28
 800fa12:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fa16:	43d2      	mvns	r2, r2
 800fa18:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 800fa1c:	f3bf 8f5f 	dmb	sy
 800fa20:	4770      	bx	lr
 800fa22:	bf00      	nop
 800fa24:	200013cc 	andcs	r1, r0, ip, asr #7
 800fa28:	40021000 	andmi	r1, r2, r0

0800fa2c <WS28xxMulti::~WS28xxMulti()>:
 800fa2c:	4b01      	ldr	r3, [pc, #4]	; (800fa34 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800fa2e:	2200      	movs	r2, #0
 800fa30:	601a      	str	r2, [r3, #0]
 800fa32:	4770      	bx	lr
 800fa34:	200013d0 	ldrdcs	r1, [r0], -r0

0800fa38 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800fa38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa3c:	4680      	mov	r8, r0
 800fa3e:	b08e      	sub	sp, #56	; 0x38
 800fa40:	4608      	mov	r0, r1
 800fa42:	4614      	mov	r4, r2
 800fa44:	f007 f8c0 	bl	8016bc8 <__popcountsi2>
 800fa48:	4607      	mov	r7, r0
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	f007 f8bc 	bl	8016bc8 <__popcountsi2>
 800fa50:	4c70      	ldr	r4, [pc, #448]	; (800fc14 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 800fa52:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 800fc28 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 800fa56:	4606      	mov	r6, r0
 800fa58:	f241 0001 	movw	r0, #4097	; 0x1001
 800fa5c:	f005 f9c6 	bl	8014dec <rcu_periph_clock_enable>
 800fa60:	4620      	mov	r0, r4
 800fa62:	f005 fa73 	bl	8014f4c <timer_deinit>
 800fa66:	2500      	movs	r5, #0
 800fa68:	23f9      	movs	r3, #249	; 0xf9
 800fa6a:	a901      	add	r1, sp, #4
 800fa6c:	4620      	mov	r0, r4
 800fa6e:	9303      	str	r3, [sp, #12]
 800fa70:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800fa74:	f005 fb10 	bl	8015098 <timer_init>
 800fa78:	4620      	mov	r0, r4
 800fa7a:	2101      	movs	r1, #1
 800fa7c:	f005 fcb8 	bl	80153f0 <timer_master_slave_mode_config>
 800fa80:	4620      	mov	r0, r4
 800fa82:	2130      	movs	r1, #48	; 0x30
 800fa84:	f005 fca4 	bl	80153d0 <timer_master_output_trigger_source_select>
 800fa88:	4629      	mov	r1, r5
 800fa8a:	4620      	mov	r0, r4
 800fa8c:	2210      	movs	r2, #16
 800fa8e:	f005 fc3d 	bl	801530c <timer_channel_output_mode_config>
 800fa92:	4620      	mov	r0, r4
 800fa94:	2210      	movs	r2, #16
 800fa96:	2102      	movs	r1, #2
 800fa98:	f005 fc38 	bl	801530c <timer_channel_output_mode_config>
 800fa9c:	4620      	mov	r0, r4
 800fa9e:	2210      	movs	r2, #16
 800faa0:	2103      	movs	r1, #3
 800faa2:	f005 fc33 	bl	801530c <timer_channel_output_mode_config>
 800faa6:	f04f 09fa 	mov.w	r9, #250	; 0xfa
 800faaa:	4629      	mov	r1, r5
 800faac:	4620      	mov	r0, r4
 800faae:	2201      	movs	r2, #1
 800fab0:	f005 fc52 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fab4:	fb09 f207 	mul.w	r2, r9, r7
 800fab8:	4620      	mov	r0, r4
 800faba:	08d2      	lsrs	r2, r2, #3
 800fabc:	2102      	movs	r1, #2
 800fabe:	f005 fc4b 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fac2:	fb09 f206 	mul.w	r2, r9, r6
 800fac6:	08d2      	lsrs	r2, r2, #3
 800fac8:	2103      	movs	r1, #3
 800faca:	4620      	mov	r0, r4
 800facc:	f005 fc44 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fad0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800fad4:	f241 0002 	movw	r0, #4098	; 0x1002
 800fad8:	f005 f988 	bl	8014dec <rcu_periph_clock_enable>
 800fadc:	4620      	mov	r0, r4
 800fade:	f005 fa35 	bl	8014f4c <timer_deinit>
 800fae2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fae6:	a901      	add	r1, sp, #4
 800fae8:	4620      	mov	r0, r4
 800faea:	9303      	str	r3, [sp, #12]
 800faec:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800faf0:	f005 fad2 	bl	8015098 <timer_init>
 800faf4:	4620      	mov	r0, r4
 800faf6:	2101      	movs	r1, #1
 800faf8:	f005 fc7a 	bl	80153f0 <timer_master_slave_mode_config>
 800fafc:	4620      	mov	r0, r4
 800fafe:	2107      	movs	r1, #7
 800fb00:	f005 fc6e 	bl	80153e0 <timer_slave_mode_select>
 800fb04:	4620      	mov	r0, r4
 800fb06:	2120      	movs	r1, #32
 800fb08:	f005 fc5a 	bl	80153c0 <timer_input_trigger_source_select>
 800fb0c:	4629      	mov	r1, r5
 800fb0e:	4620      	mov	r0, r4
 800fb10:	2210      	movs	r2, #16
 800fb12:	f005 fbfb 	bl	801530c <timer_channel_output_mode_config>
 800fb16:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800fb1a:	4629      	mov	r1, r5
 800fb1c:	3201      	adds	r2, #1
 800fb1e:	4620      	mov	r0, r4
 800fb20:	f005 fc1a 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fb24:	2102      	movs	r1, #2
 800fb26:	4620      	mov	r0, r4
 800fb28:	f005 faf9 	bl	801511e <timer_interrupt_enable>
 800fb2c:	4b3a      	ldr	r3, [pc, #232]	; (800fc18 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 800fb2e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800fb32:	f504 3416 	add.w	r4, r4, #153600	; 0x25800
 800fb36:	f883 531e 	strb.w	r5, [r3, #798]	; 0x31e
 800fb3a:	f640 4015 	movw	r0, #3093	; 0xc15
 800fb3e:	601a      	str	r2, [r3, #0]
 800fb40:	f005 f954 	bl	8014dec <rcu_periph_clock_enable>
 800fb44:	2104      	movs	r1, #4
 800fb46:	4620      	mov	r0, r4
 800fb48:	f004 fff6 	bl	8014b38 <dma_deinit>
 800fb4c:	a805      	add	r0, sp, #20
 800fb4e:	f005 f81e 	bl	8014b8e <dma_single_data_para_struct_init>
 800fb52:	4b32      	ldr	r3, [pc, #200]	; (800fc1c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 800fb54:	f8cd a01c 	str.w	sl, [sp, #28]
 800fb58:	2601      	movs	r6, #1
 800fb5a:	f04f 0940 	mov.w	r9, #64	; 0x40
 800fb5e:	f44f 6800 	mov.w	r8, #2048	; 0x800
 800fb62:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800fb66:	aa05      	add	r2, sp, #20
 800fb68:	4620      	mov	r0, r4
 800fb6a:	2104      	movs	r1, #4
 800fb6c:	e9cd 3605 	strd	r3, r6, [sp, #20]
 800fb70:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800fb74:	9608      	str	r6, [sp, #32]
 800fb76:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800fb7a:	970d      	str	r7, [sp, #52]	; 0x34
 800fb7c:	f005 f813 	bl	8014ba6 <dma_single_data_mode_init>
 800fb80:	4620      	mov	r0, r4
 800fb82:	2104      	movs	r1, #4
 800fb84:	f005 f84e 	bl	8014c24 <dma_circulation_disable>
 800fb88:	2205      	movs	r2, #5
 800fb8a:	4620      	mov	r0, r4
 800fb8c:	2104      	movs	r1, #4
 800fb8e:	f005 f851 	bl	8014c34 <dma_channel_subperipheral_select>
 800fb92:	2107      	movs	r1, #7
 800fb94:	4620      	mov	r0, r4
 800fb96:	f004 ffcf 	bl	8014b38 <dma_deinit>
 800fb9a:	a805      	add	r0, sp, #20
 800fb9c:	f004 fff7 	bl	8014b8e <dma_single_data_para_struct_init>
 800fba0:	4b1f      	ldr	r3, [pc, #124]	; (800fc20 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 800fba2:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800fba6:	e9cd 3507 	strd	r3, r5, [sp, #28]
 800fbaa:	4d1e      	ldr	r5, [pc, #120]	; (800fc24 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>)
 800fbac:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800fbb0:	aa05      	add	r2, sp, #20
 800fbb2:	4620      	mov	r0, r4
 800fbb4:	2107      	movs	r1, #7
 800fbb6:	e9cd 5605 	strd	r5, r6, [sp, #20]
 800fbba:	970d      	str	r7, [sp, #52]	; 0x34
 800fbbc:	f004 fff3 	bl	8014ba6 <dma_single_data_mode_init>
 800fbc0:	4620      	mov	r0, r4
 800fbc2:	2107      	movs	r1, #7
 800fbc4:	f005 f82e 	bl	8014c24 <dma_circulation_disable>
 800fbc8:	2205      	movs	r2, #5
 800fbca:	4620      	mov	r0, r4
 800fbcc:	2107      	movs	r1, #7
 800fbce:	f005 f831 	bl	8014c34 <dma_channel_subperipheral_select>
 800fbd2:	2102      	movs	r1, #2
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	f004 ffaf 	bl	8014b38 <dma_deinit>
 800fbda:	a805      	add	r0, sp, #20
 800fbdc:	f004 ffd7 	bl	8014b8e <dma_single_data_para_struct_init>
 800fbe0:	aa05      	add	r2, sp, #20
 800fbe2:	4620      	mov	r0, r4
 800fbe4:	2102      	movs	r1, #2
 800fbe6:	e9cd a607 	strd	sl, r6, [sp, #28]
 800fbea:	e9cd 5605 	strd	r5, r6, [sp, #20]
 800fbee:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800fbf2:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800fbf6:	970d      	str	r7, [sp, #52]	; 0x34
 800fbf8:	f004 ffd5 	bl	8014ba6 <dma_single_data_mode_init>
 800fbfc:	4620      	mov	r0, r4
 800fbfe:	2102      	movs	r1, #2
 800fc00:	f005 f810 	bl	8014c24 <dma_circulation_disable>
 800fc04:	2205      	movs	r2, #5
 800fc06:	2102      	movs	r1, #2
 800fc08:	4620      	mov	r0, r4
 800fc0a:	f005 f813 	bl	8014c34 <dma_channel_subperipheral_select>
 800fc0e:	b00e      	add	sp, #56	; 0x38
 800fc10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fc14:	40000400 	andmi	r0, r0, r0, lsl #8
 800fc18:	e000e100 	and	lr, r0, r0, lsl #2
 800fc1c:	40021018 	andmi	r1, r2, r8, lsl r0
 800fc20:	200013d4 	ldrdcs	r1, [r0], -r4
 800fc24:	40021028 	andmi	r1, r2, r8, lsr #32
 800fc28:	08019434 	stmdaeq	r1, {r2, r4, r5, sl, ip, pc}

0800fc2c <WS28xxMulti::Setup(unsigned int)>:
 800fc2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc30:	4680      	mov	r8, r0
 800fc32:	b092      	sub	sp, #72	; 0x48
 800fc34:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 800fc38:	460c      	mov	r4, r1
 800fc3a:	f005 f8d7 	bl	8014dec <rcu_periph_clock_enable>
 800fc3e:	4882      	ldr	r0, [pc, #520]	; (800fe48 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800fc40:	4d82      	ldr	r5, [pc, #520]	; (800fe4c <WS28xxMulti::Setup(unsigned int)+0x220>)
 800fc42:	2340      	movs	r3, #64	; 0x40
 800fc44:	2200      	movs	r2, #0
 800fc46:	2102      	movs	r1, #2
 800fc48:	f005 f854 	bl	8014cf4 <gpio_mode_set>
 800fc4c:	2340      	movs	r3, #64	; 0x40
 800fc4e:	487e      	ldr	r0, [pc, #504]	; (800fe48 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800fc50:	2202      	movs	r2, #2
 800fc52:	2100      	movs	r1, #0
 800fc54:	f005 f86e 	bl	8014d34 <gpio_output_options_set>
 800fc58:	2240      	movs	r2, #64	; 0x40
 800fc5a:	2102      	movs	r1, #2
 800fc5c:	487a      	ldr	r0, [pc, #488]	; (800fe48 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800fc5e:	f005 f884 	bl	8014d6a <gpio_af_set>
 800fc62:	fbb5 f5f4 	udiv	r5, r5, r4
 800fc66:	f241 0001 	movw	r0, #4097	; 0x1001
 800fc6a:	2d0c      	cmp	r5, #12
 800fc6c:	bf38      	it	cc
 800fc6e:	250c      	movcc	r5, #12
 800fc70:	f005 f8bc 	bl	8014dec <rcu_periph_clock_enable>
 800fc74:	4876      	ldr	r0, [pc, #472]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fc76:	2400      	movs	r4, #0
 800fc78:	f005 f968 	bl	8014f4c <timer_deinit>
 800fc7c:	1e6b      	subs	r3, r5, #1
 800fc7e:	4874      	ldr	r0, [pc, #464]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fc80:	9307      	str	r3, [sp, #28]
 800fc82:	a905      	add	r1, sp, #20
 800fc84:	2602      	movs	r6, #2
 800fc86:	2701      	movs	r7, #1
 800fc88:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800fc8c:	f88d 4020 	strb.w	r4, [sp, #32]
 800fc90:	f005 fa02 	bl	8015098 <timer_init>
 800fc94:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fc98:	486d      	ldr	r0, [pc, #436]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fc9a:	9304      	str	r3, [sp, #16]
 800fc9c:	aa02      	add	r2, sp, #8
 800fc9e:	4621      	mov	r1, r4
 800fca0:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800fca4:	f005 fa4a 	bl	801513c <timer_channel_output_config>
 800fca8:	fa25 f207 	lsr.w	r2, r5, r7
 800fcac:	4868      	ldr	r0, [pc, #416]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcae:	3a01      	subs	r2, #1
 800fcb0:	4621      	mov	r1, r4
 800fcb2:	f005 fb51 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fcb6:	4866      	ldr	r0, [pc, #408]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcb8:	2260      	movs	r2, #96	; 0x60
 800fcba:	4621      	mov	r1, r4
 800fcbc:	f005 fb26 	bl	801530c <timer_channel_output_mode_config>
 800fcc0:	4863      	ldr	r0, [pc, #396]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcc2:	4622      	mov	r2, r4
 800fcc4:	4621      	mov	r1, r4
 800fcc6:	f005 fb55 	bl	8015374 <timer_channel_output_shadow_config>
 800fcca:	4861      	ldr	r0, [pc, #388]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fccc:	2210      	movs	r2, #16
 800fcce:	4631      	mov	r1, r6
 800fcd0:	f005 fb1c 	bl	801530c <timer_channel_output_mode_config>
 800fcd4:	485e      	ldr	r0, [pc, #376]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcd6:	2210      	movs	r2, #16
 800fcd8:	2103      	movs	r1, #3
 800fcda:	f005 fb17 	bl	801530c <timer_channel_output_mode_config>
 800fcde:	485c      	ldr	r0, [pc, #368]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fce0:	463a      	mov	r2, r7
 800fce2:	4631      	mov	r1, r6
 800fce4:	f005 fb38 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fce8:	fa25 f206 	lsr.w	r2, r5, r6
 800fcec:	3a01      	subs	r2, #1
 800fcee:	4858      	ldr	r0, [pc, #352]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcf0:	2103      	movs	r1, #3
 800fcf2:	f005 fb31 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fcf6:	4856      	ldr	r0, [pc, #344]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fcf8:	4639      	mov	r1, r7
 800fcfa:	f005 fb79 	bl	80153f0 <timer_master_slave_mode_config>
 800fcfe:	2130      	movs	r1, #48	; 0x30
 800fd00:	4853      	ldr	r0, [pc, #332]	; (800fe50 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800fd02:	f005 fb65 	bl	80153d0 <timer_master_output_trigger_source_select>
 800fd06:	f241 0002 	movw	r0, #4098	; 0x1002
 800fd0a:	f005 f86f 	bl	8014dec <rcu_periph_clock_enable>
 800fd0e:	4851      	ldr	r0, [pc, #324]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd10:	f005 f91c 	bl	8014f4c <timer_deinit>
 800fd14:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fd18:	484e      	ldr	r0, [pc, #312]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd1a:	9307      	str	r3, [sp, #28]
 800fd1c:	a905      	add	r1, sp, #20
 800fd1e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800fd22:	f005 f9b9 	bl	8015098 <timer_init>
 800fd26:	484b      	ldr	r0, [pc, #300]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd28:	4639      	mov	r1, r7
 800fd2a:	f005 fb61 	bl	80153f0 <timer_master_slave_mode_config>
 800fd2e:	4849      	ldr	r0, [pc, #292]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd30:	2107      	movs	r1, #7
 800fd32:	f005 fb55 	bl	80153e0 <timer_slave_mode_select>
 800fd36:	4847      	ldr	r0, [pc, #284]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd38:	2120      	movs	r1, #32
 800fd3a:	f005 fb41 	bl	80153c0 <timer_input_trigger_source_select>
 800fd3e:	4845      	ldr	r0, [pc, #276]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd40:	2210      	movs	r2, #16
 800fd42:	4621      	mov	r1, r4
 800fd44:	f005 fae2 	bl	801530c <timer_channel_output_mode_config>
 800fd48:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800fd4c:	4841      	ldr	r0, [pc, #260]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd4e:	4621      	mov	r1, r4
 800fd50:	f005 fb02 	bl	8015358 <timer_channel_output_pulse_value_config>
 800fd54:	4631      	mov	r1, r6
 800fd56:	483f      	ldr	r0, [pc, #252]	; (800fe54 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800fd58:	f005 f9e1 	bl	801511e <timer_interrupt_enable>
 800fd5c:	4b3e      	ldr	r3, [pc, #248]	; (800fe58 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 800fd5e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800fd62:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800fd66:	f640 4015 	movw	r0, #3093	; 0xc15
 800fd6a:	601a      	str	r2, [r3, #0]
 800fd6c:	f005 f83e 	bl	8014dec <rcu_periph_clock_enable>
 800fd70:	2107      	movs	r1, #7
 800fd72:	483a      	ldr	r0, [pc, #232]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fd74:	f004 fee0 	bl	8014b38 <dma_deinit>
 800fd78:	a809      	add	r0, sp, #36	; 0x24
 800fd7a:	f004 ff08 	bl	8014b8e <dma_single_data_para_struct_init>
 800fd7e:	4b38      	ldr	r3, [pc, #224]	; (800fe60 <WS28xxMulti::Setup(unsigned int)+0x234>)
 800fd80:	4836      	ldr	r0, [pc, #216]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fd82:	e9cd 370b 	strd	r3, r7, [sp, #44]	; 0x2c
 800fd86:	4b37      	ldr	r3, [pc, #220]	; (800fe64 <WS28xxMulti::Setup(unsigned int)+0x238>)
 800fd88:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 800fd8c:	aa09      	add	r2, sp, #36	; 0x24
 800fd8e:	f04f 0a40 	mov.w	sl, #64	; 0x40
 800fd92:	f44f 6900 	mov.w	r9, #2048	; 0x800
 800fd96:	2107      	movs	r1, #7
 800fd98:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 800fd9c:	9511      	str	r5, [sp, #68]	; 0x44
 800fd9e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800fda2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fda6:	f004 fefe 	bl	8014ba6 <dma_single_data_mode_init>
 800fdaa:	482c      	ldr	r0, [pc, #176]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdac:	2107      	movs	r1, #7
 800fdae:	f004 ff39 	bl	8014c24 <dma_circulation_disable>
 800fdb2:	2205      	movs	r2, #5
 800fdb4:	4829      	ldr	r0, [pc, #164]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdb6:	2107      	movs	r1, #7
 800fdb8:	f004 ff3c 	bl	8014c34 <dma_channel_subperipheral_select>
 800fdbc:	4631      	mov	r1, r6
 800fdbe:	4827      	ldr	r0, [pc, #156]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdc0:	f004 feba 	bl	8014b38 <dma_deinit>
 800fdc4:	a809      	add	r0, sp, #36	; 0x24
 800fdc6:	f004 fee2 	bl	8014b8e <dma_single_data_para_struct_init>
 800fdca:	4b27      	ldr	r3, [pc, #156]	; (800fe68 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 800fdcc:	4823      	ldr	r0, [pc, #140]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdce:	9511      	str	r5, [sp, #68]	; 0x44
 800fdd0:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
 800fdd4:	4b25      	ldr	r3, [pc, #148]	; (800fe6c <WS28xxMulti::Setup(unsigned int)+0x240>)
 800fdd6:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800fdda:	aa09      	add	r2, sp, #36	; 0x24
 800fddc:	4631      	mov	r1, r6
 800fdde:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 800fde2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fde6:	f004 fede 	bl	8014ba6 <dma_single_data_mode_init>
 800fdea:	481c      	ldr	r0, [pc, #112]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdec:	4631      	mov	r1, r6
 800fdee:	f004 ff19 	bl	8014c24 <dma_circulation_disable>
 800fdf2:	481a      	ldr	r0, [pc, #104]	; (800fe5c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800fdf4:	2205      	movs	r2, #5
 800fdf6:	4631      	mov	r1, r6
 800fdf8:	f004 ff1c 	bl	8014c34 <dma_channel_subperipheral_select>
 800fdfc:	f8d8 5000 	ldr.w	r5, [r8]
 800fe00:	3d0b      	subs	r5, #11
 800fe02:	42b5      	cmp	r5, r6
 800fe04:	d81c      	bhi.n	800fe40 <WS28xxMulti::Setup(unsigned int)+0x214>
 800fe06:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800fe0a:	4627      	mov	r7, r4
 800fe0c:	3601      	adds	r6, #1
 800fe0e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800fe12:	2300      	movs	r3, #0
 800fe14:	461a      	mov	r2, r3
 800fe16:	4619      	mov	r1, r3
 800fe18:	4620      	mov	r0, r4
 800fe1a:	e9cd 7700 	strd	r7, r7, [sp]
 800fe1e:	f7ff fd8b 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fe22:	2d02      	cmp	r5, #2
 800fe24:	bf1b      	ittet	ne
 800fe26:	23ff      	movne	r3, #255	; 0xff
 800fe28:	e9cd 8800 	strdne	r8, r8, [sp]
 800fe2c:	e9cd 7700 	strdeq	r7, r7, [sp]
 800fe30:	461a      	movne	r2, r3
 800fe32:	4620      	mov	r0, r4
 800fe34:	4631      	mov	r1, r6
 800fe36:	3401      	adds	r4, #1
 800fe38:	f7ff fd7e 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800fe3c:	2c10      	cmp	r4, #16
 800fe3e:	d1e8      	bne.n	800fe12 <WS28xxMulti::Setup(unsigned int)+0x1e6>
 800fe40:	b012      	add	sp, #72	; 0x48
 800fe42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fe46:	bf00      	nop
 800fe48:	40020000 	andmi	r0, r2, r0
 800fe4c:	0bebc200 	bleq	7b00654 <__stack_size+0x7afc654>
 800fe50:	40000400 	andmi	r0, r0, r0, lsl #8
 800fe54:	40000800 	andmi	r0, r0, r0, lsl #16
 800fe58:	e000e100 	and	lr, r0, r0, lsl #2
 800fe5c:	40026000 	andmi	r6, r2, r0
 800fe60:	08019434 	stmdaeq	r1, {r2, r4, r5, sl, ip, pc}
 800fe64:	40021028 	andmi	r1, r2, r8, lsr #32
 800fe68:	200013d4 	ldrdcs	r1, [r0], -r4
 800fe6c:	40021018 	andmi	r1, r2, r8, lsl r0

0800fe70 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800fe70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fe72:	460f      	mov	r7, r1
 800fe74:	4604      	mov	r4, r0
 800fe76:	460d      	mov	r5, r1
 800fe78:	4606      	mov	r6, r0
 800fe7a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fe7c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800fe7e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800fe82:	2300      	movs	r3, #0
 800fe84:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800fe88:	61e3      	str	r3, [r4, #28]
 800fe8a:	4b26      	ldr	r3, [pc, #152]	; (800ff24 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb4>)
 800fe8c:	a901      	add	r1, sp, #4
 800fe8e:	4628      	mov	r0, r5
 800fe90:	601c      	str	r4, [r3, #0]
 800fe92:	f7ff f8af 	bl	800eff4 <PixelConfiguration::Validate(unsigned int&)>
 800fe96:	6826      	ldr	r6, [r4, #0]
 800fe98:	3e0b      	subs	r6, #11
 800fe9a:	2e02      	cmp	r6, #2
 800fe9c:	d80a      	bhi.n	800feb4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800fe9e:	686b      	ldr	r3, [r5, #4]
 800fea0:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800fea4:	d906      	bls.n	800feb4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800fea6:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 800feaa:	606b      	str	r3, [r5, #4]
 800feac:	a901      	add	r1, sp, #4
 800feae:	4628      	mov	r0, r5
 800feb0:	f7ff f8a0 	bl	800eff4 <PixelConfiguration::Validate(unsigned int&)>
 800feb4:	6863      	ldr	r3, [r4, #4]
 800feb6:	9a01      	ldr	r2, [sp, #4]
 800feb8:	2e02      	cmp	r6, #2
 800feba:	fb03 f202 	mul.w	r2, r3, r2
 800febe:	bf9b      	ittet	ls
 800fec0:	3308      	addls	r3, #8
 800fec2:	189b      	addls	r3, r3, r2
 800fec4:	61e2      	strhi	r2, [r4, #28]
 800fec6:	61e3      	strls	r3, [r4, #28]
 800fec8:	69e3      	ldr	r3, [r4, #28]
 800feca:	4e17      	ldr	r6, [pc, #92]	; (800ff28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb8>)
 800fecc:	00db      	lsls	r3, r3, #3
 800fece:	61e3      	str	r3, [r4, #28]
 800fed0:	f640 4004 	movw	r0, #3076	; 0xc04
 800fed4:	f004 ff8a 	bl	8014dec <rcu_periph_clock_enable>
 800fed8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fedc:	2100      	movs	r1, #0
 800fede:	4630      	mov	r0, r6
 800fee0:	f004 ff43 	bl	8014d6a <gpio_af_set>
 800fee4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fee8:	2202      	movs	r2, #2
 800feea:	2101      	movs	r1, #1
 800feec:	4630      	mov	r0, r6
 800feee:	f004 ff01 	bl	8014cf4 <gpio_mode_set>
 800fef2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fef6:	2202      	movs	r2, #2
 800fef8:	2100      	movs	r1, #0
 800fefa:	4630      	mov	r0, r6
 800fefc:	f004 ff1a 	bl	8014d34 <gpio_output_options_set>
 800ff00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ff04:	62b3      	str	r3, [r6, #40]	; 0x28
 800ff06:	7d6b      	ldrb	r3, [r5, #21]
 800ff08:	b13b      	cbz	r3, 800ff1a <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xaa>
 800ff0a:	7c6a      	ldrb	r2, [r5, #17]
 800ff0c:	7c29      	ldrb	r1, [r5, #16]
 800ff0e:	4620      	mov	r0, r4
 800ff10:	f7ff fd92 	bl	800fa38 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800ff14:	4620      	mov	r0, r4
 800ff16:	b003      	add	sp, #12
 800ff18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff1a:	68e9      	ldr	r1, [r5, #12]
 800ff1c:	4620      	mov	r0, r4
 800ff1e:	f7ff fe85 	bl	800fc2c <WS28xxMulti::Setup(unsigned int)>
 800ff22:	e7f7      	b.n	800ff14 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa4>
 800ff24:	200013d0 	ldrdcs	r1, [r0], -r0
 800ff28:	40021000 	andmi	r1, r2, r0

0800ff2c <WS28xxMulti::Update()>:
 800ff2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff2e:	4b4c      	ldr	r3, [pc, #304]	; (8010060 <WS28xxMulti::Update()+0x134>)
 800ff30:	4e4c      	ldr	r6, [pc, #304]	; (8010064 <WS28xxMulti::Update()+0x138>)
 800ff32:	4c4d      	ldr	r4, [pc, #308]	; (8010068 <WS28xxMulti::Update()+0x13c>)
 800ff34:	4f4d      	ldr	r7, [pc, #308]	; (801006c <WS28xxMulti::Update()+0x140>)
 800ff36:	2201      	movs	r2, #1
 800ff38:	701a      	strb	r2, [r3, #0]
 800ff3a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ff3e:	2100      	movs	r1, #0
 800ff40:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800ff44:	f022 0201 	bic.w	r2, r2, #1
 800ff48:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800ff4c:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 800ff50:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800ff54:	f022 0201 	bic.w	r2, r2, #1
 800ff58:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800ff5c:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 800ff60:	7d43      	ldrb	r3, [r0, #21]
 800ff62:	4605      	mov	r5, r0
 800ff64:	2b00      	cmp	r3, #0
 800ff66:	d053      	beq.n	8010010 <WS28xxMulti::Update()+0xe4>
 800ff68:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ff6a:	f023 0301 	bic.w	r3, r3, #1
 800ff6e:	6723      	str	r3, [r4, #112]	; 0x70
 800ff70:	2220      	movs	r2, #32
 800ff72:	2104      	movs	r1, #4
 800ff74:	4620      	mov	r0, r4
 800ff76:	f004 fe81 	bl	8014c7c <dma_interrupt_flag_clear>
 800ff7a:	67e6      	str	r6, [r4, #124]	; 0x7c
 800ff7c:	8bab      	ldrh	r3, [r5, #28]
 800ff7e:	6763      	str	r3, [r4, #116]	; 0x74
 800ff80:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ff82:	f043 0301 	orr.w	r3, r3, #1
 800ff86:	6723      	str	r3, [r4, #112]	; 0x70
 800ff88:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800ff8c:	f023 0301 	bic.w	r3, r3, #1
 800ff90:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800ff94:	2220      	movs	r2, #32
 800ff96:	2107      	movs	r1, #7
 800ff98:	4620      	mov	r0, r4
 800ff9a:	f004 fe6f 	bl	8014c7c <dma_interrupt_flag_clear>
 800ff9e:	f8c4 70c4 	str.w	r7, [r4, #196]	; 0xc4
 800ffa2:	8bab      	ldrh	r3, [r5, #28]
 800ffa4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 800ffa8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800ffac:	f043 0301 	orr.w	r3, r3, #1
 800ffb0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800ffb4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ffb6:	f023 0301 	bic.w	r3, r3, #1
 800ffba:	6423      	str	r3, [r4, #64]	; 0x40
 800ffbc:	2102      	movs	r1, #2
 800ffbe:	4620      	mov	r0, r4
 800ffc0:	2220      	movs	r2, #32
 800ffc2:	f004 fe5b 	bl	8014c7c <dma_interrupt_flag_clear>
 800ffc6:	64e6      	str	r6, [r4, #76]	; 0x4c
 800ffc8:	8bab      	ldrh	r3, [r5, #28]
 800ffca:	6463      	str	r3, [r4, #68]	; 0x44
 800ffcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ffce:	4828      	ldr	r0, [pc, #160]	; (8010070 <WS28xxMulti::Update()+0x144>)
 800ffd0:	f043 0301 	orr.w	r3, r3, #1
 800ffd4:	6423      	str	r3, [r4, #64]	; 0x40
 800ffd6:	f44f 7100 	mov.w	r1, #512	; 0x200
 800ffda:	f005 f8aa 	bl	8015132 <timer_dma_enable>
 800ffde:	4824      	ldr	r0, [pc, #144]	; (8010070 <WS28xxMulti::Update()+0x144>)
 800ffe0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800ffe4:	f005 f8a5 	bl	8015132 <timer_dma_enable>
 800ffe8:	4821      	ldr	r0, [pc, #132]	; (8010070 <WS28xxMulti::Update()+0x144>)
 800ffea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800ffee:	f005 f8a0 	bl	8015132 <timer_dma_enable>
 800fff2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fff6:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800fffa:	f042 0201 	orr.w	r2, r2, #1
 800fffe:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8010002:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8010006:	f042 0201 	orr.w	r2, r2, #1
 801000a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 801000e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010010:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010014:	f023 0301 	bic.w	r3, r3, #1
 8010018:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801001c:	2220      	movs	r2, #32
 801001e:	2107      	movs	r1, #7
 8010020:	4620      	mov	r0, r4
 8010022:	f004 fe2b 	bl	8014c7c <dma_interrupt_flag_clear>
 8010026:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 801002a:	8bab      	ldrh	r3, [r5, #28]
 801002c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010030:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010034:	f043 0301 	orr.w	r3, r3, #1
 8010038:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801003c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801003e:	f023 0301 	bic.w	r3, r3, #1
 8010042:	6423      	str	r3, [r4, #64]	; 0x40
 8010044:	2220      	movs	r2, #32
 8010046:	2102      	movs	r1, #2
 8010048:	4620      	mov	r0, r4
 801004a:	f004 fe17 	bl	8014c7c <dma_interrupt_flag_clear>
 801004e:	64e7      	str	r7, [r4, #76]	; 0x4c
 8010050:	8bab      	ldrh	r3, [r5, #28]
 8010052:	6463      	str	r3, [r4, #68]	; 0x44
 8010054:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8010056:	f043 0301 	orr.w	r3, r3, #1
 801005a:	6423      	str	r3, [r4, #64]	; 0x40
 801005c:	e7bf      	b.n	800ffde <WS28xxMulti::Update()+0xb2>
 801005e:	bf00      	nop
 8010060:	200013cc 	andcs	r1, r0, ip, asr #7
 8010064:	08019434 	stmdaeq	r1, {r2, r4, r5, sl, ip, pc}
 8010068:	40026000 	andmi	r6, r2, r0
 801006c:	200013d4 	ldrdcs	r1, [r0], -r4
 8010070:	40000400 	andmi	r0, r0, r0, lsl #8

08010074 <WS28xxMulti::Blackout()>:
 8010074:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010078:	4f2d      	ldr	r7, [pc, #180]	; (8010130 <WS28xxMulti::Blackout()+0xbc>)
 801007a:	4605      	mov	r5, r0
 801007c:	f3bf 8f5f 	dmb	sy
 8010080:	783a      	ldrb	r2, [r7, #0]
 8010082:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8010086:	2a00      	cmp	r2, #0
 8010088:	d1f8      	bne.n	801007c <WS28xxMulti::Blackout()+0x8>
 801008a:	7d6c      	ldrb	r4, [r5, #21]
 801008c:	b19c      	cbz	r4, 80100b6 <WS28xxMulti::Blackout()+0x42>
 801008e:	4a29      	ldr	r2, [pc, #164]	; (8010134 <WS28xxMulti::Blackout()+0xc0>)
 8010090:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010094:	3301      	adds	r3, #1
 8010096:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801009a:	f842 1b04 	str.w	r1, [r2], #4
 801009e:	d1f9      	bne.n	8010094 <WS28xxMulti::Blackout()+0x20>
 80100a0:	4628      	mov	r0, r5
 80100a2:	f7ff ff43 	bl	800ff2c <WS28xxMulti::Update()>
 80100a6:	f3bf 8f5f 	dmb	sy
 80100aa:	783b      	ldrb	r3, [r7, #0]
 80100ac:	2b00      	cmp	r3, #0
 80100ae:	d1fa      	bne.n	80100a6 <WS28xxMulti::Blackout()+0x32>
 80100b0:	b003      	add	sp, #12
 80100b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100b6:	682b      	ldr	r3, [r5, #0]
 80100b8:	f1a3 080b 	sub.w	r8, r3, #11
 80100bc:	f1b8 0f02 	cmp.w	r8, #2
 80100c0:	d908      	bls.n	80100d4 <WS28xxMulti::Blackout()+0x60>
 80100c2:	4b1c      	ldr	r3, [pc, #112]	; (8010134 <WS28xxMulti::Blackout()+0xc0>)
 80100c4:	4622      	mov	r2, r4
 80100c6:	3401      	adds	r4, #1
 80100c8:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 80100cc:	f843 2b04 	str.w	r2, [r3], #4
 80100d0:	d1f9      	bne.n	80100c6 <WS28xxMulti::Blackout()+0x52>
 80100d2:	e7e5      	b.n	80100a0 <WS28xxMulti::Blackout()+0x2c>
 80100d4:	f8d5 a004 	ldr.w	sl, [r5, #4]
 80100d8:	4626      	mov	r6, r4
 80100da:	f10a 0b01 	add.w	fp, sl, #1
 80100de:	2300      	movs	r3, #0
 80100e0:	e9cd 6600 	strd	r6, r6, [sp]
 80100e4:	461a      	mov	r2, r3
 80100e6:	4619      	mov	r1, r3
 80100e8:	4620      	mov	r0, r4
 80100ea:	f7ff fc25 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80100ee:	f04f 0901 	mov.w	r9, #1
 80100f2:	45ca      	cmp	sl, r9
 80100f4:	d211      	bcs.n	801011a <WS28xxMulti::Blackout()+0xa6>
 80100f6:	f1b8 0f02 	cmp.w	r8, #2
 80100fa:	bf15      	itete	ne
 80100fc:	23ff      	movne	r3, #255	; 0xff
 80100fe:	2300      	moveq	r3, #0
 8010100:	e9cd 3300 	strdne	r3, r3, [sp]
 8010104:	e9cd 6600 	strdeq	r6, r6, [sp]
 8010108:	4620      	mov	r0, r4
 801010a:	461a      	mov	r2, r3
 801010c:	4659      	mov	r1, fp
 801010e:	3401      	adds	r4, #1
 8010110:	f7ff fc12 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010114:	2c10      	cmp	r4, #16
 8010116:	d1e2      	bne.n	80100de <WS28xxMulti::Blackout()+0x6a>
 8010118:	e7c2      	b.n	80100a0 <WS28xxMulti::Blackout()+0x2c>
 801011a:	4649      	mov	r1, r9
 801011c:	e9cd 6600 	strd	r6, r6, [sp]
 8010120:	2300      	movs	r3, #0
 8010122:	22e0      	movs	r2, #224	; 0xe0
 8010124:	4620      	mov	r0, r4
 8010126:	f7ff fc07 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801012a:	f109 0901 	add.w	r9, r9, #1
 801012e:	e7e0      	b.n	80100f2 <WS28xxMulti::Blackout()+0x7e>
 8010130:	200013cc 	andcs	r1, r0, ip, asr #7
 8010134:	200013d4 	ldrdcs	r1, [r0], -r4

08010138 <WS28xxMulti::FullOn()>:
 8010138:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801013c:	4f2c      	ldr	r7, [pc, #176]	; (80101f0 <WS28xxMulti::FullOn()+0xb8>)
 801013e:	4605      	mov	r5, r0
 8010140:	f3bf 8f5f 	dmb	sy
 8010144:	783a      	ldrb	r2, [r7, #0]
 8010146:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 801014a:	2a00      	cmp	r2, #0
 801014c:	d1f8      	bne.n	8010140 <WS28xxMulti::FullOn()+0x8>
 801014e:	7d6c      	ldrb	r4, [r5, #21]
 8010150:	b194      	cbz	r4, 8010178 <WS28xxMulti::FullOn()+0x40>
 8010152:	4a28      	ldr	r2, [pc, #160]	; (80101f4 <WS28xxMulti::FullOn()+0xbc>)
 8010154:	4619      	mov	r1, r3
 8010156:	3301      	adds	r3, #1
 8010158:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801015c:	f842 1b04 	str.w	r1, [r2], #4
 8010160:	d1f9      	bne.n	8010156 <WS28xxMulti::FullOn()+0x1e>
 8010162:	4628      	mov	r0, r5
 8010164:	f7ff fee2 	bl	800ff2c <WS28xxMulti::Update()>
 8010168:	f3bf 8f5f 	dmb	sy
 801016c:	783b      	ldrb	r3, [r7, #0]
 801016e:	2b00      	cmp	r3, #0
 8010170:	d1fa      	bne.n	8010168 <WS28xxMulti::FullOn()+0x30>
 8010172:	b003      	add	sp, #12
 8010174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010178:	682e      	ldr	r6, [r5, #0]
 801017a:	3e0b      	subs	r6, #11
 801017c:	2e02      	cmp	r6, #2
 801017e:	d908      	bls.n	8010192 <WS28xxMulti::FullOn()+0x5a>
 8010180:	4b1c      	ldr	r3, [pc, #112]	; (80101f4 <WS28xxMulti::FullOn()+0xbc>)
 8010182:	22ff      	movs	r2, #255	; 0xff
 8010184:	3401      	adds	r4, #1
 8010186:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 801018a:	f843 2b04 	str.w	r2, [r3], #4
 801018e:	d1f9      	bne.n	8010184 <WS28xxMulti::FullOn()+0x4c>
 8010190:	e7e7      	b.n	8010162 <WS28xxMulti::FullOn()+0x2a>
 8010192:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8010196:	46a0      	mov	r8, r4
 8010198:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801019c:	2300      	movs	r3, #0
 801019e:	e9cd 8800 	strd	r8, r8, [sp]
 80101a2:	461a      	mov	r2, r3
 80101a4:	4619      	mov	r1, r3
 80101a6:	4620      	mov	r0, r4
 80101a8:	f7ff fbc6 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80101ac:	f04f 0b01 	mov.w	fp, #1
 80101b0:	45da      	cmp	sl, fp
 80101b2:	d211      	bcs.n	80101d8 <WS28xxMulti::FullOn()+0xa0>
 80101b4:	2e02      	cmp	r6, #2
 80101b6:	bf15      	itete	ne
 80101b8:	23ff      	movne	r3, #255	; 0xff
 80101ba:	2300      	moveq	r3, #0
 80101bc:	e9cd 9900 	strdne	r9, r9, [sp]
 80101c0:	e9cd 8800 	strdeq	r8, r8, [sp]
 80101c4:	4620      	mov	r0, r4
 80101c6:	f10a 0101 	add.w	r1, sl, #1
 80101ca:	461a      	mov	r2, r3
 80101cc:	3401      	adds	r4, #1
 80101ce:	f7ff fbb3 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80101d2:	2c10      	cmp	r4, #16
 80101d4:	d1e2      	bne.n	801019c <WS28xxMulti::FullOn()+0x64>
 80101d6:	e7c4      	b.n	8010162 <WS28xxMulti::FullOn()+0x2a>
 80101d8:	4659      	mov	r1, fp
 80101da:	e9cd 9900 	strd	r9, r9, [sp]
 80101de:	23ff      	movs	r3, #255	; 0xff
 80101e0:	22e0      	movs	r2, #224	; 0xe0
 80101e2:	4620      	mov	r0, r4
 80101e4:	f7ff fba8 	bl	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80101e8:	f10b 0b01 	add.w	fp, fp, #1
 80101ec:	e7e0      	b.n	80101b0 <WS28xxMulti::FullOn()+0x78>
 80101ee:	bf00      	nop
 80101f0:	200013cc 	andcs	r1, r0, ip, asr #7
 80101f4:	200013d4 	ldrdcs	r1, [r0], -r4

080101f8 <WS28xxMulti::IsUpdating()>:
 80101f8:	f3bf 8f5f 	dmb	sy
 80101fc:	4b01      	ldr	r3, [pc, #4]	; (8010204 <WS28xxMulti::IsUpdating()+0xc>)
 80101fe:	7818      	ldrb	r0, [r3, #0]
 8010200:	4770      	bx	lr
 8010202:	bf00      	nop
 8010204:	200013cc 	andcs	r1, r0, ip, asr #7

08010208 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8010208:	b2c8      	uxtb	r0, r1
 801020a:	491c      	ldr	r1, [pc, #112]	; (801027c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 801020c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010210:	b570      	push	{r4, r5, r6, lr}
 8010212:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 8010216:	4a1a      	ldr	r2, [pc, #104]	; (8010280 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 8010218:	f89d e010 	ldrb.w	lr, [sp, #16]
 801021c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010220:	440a      	add	r2, r1
 8010222:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8010226:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 801022a:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 801022e:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8010232:	0092      	lsls	r2, r2, #2
 8010234:	0080      	lsls	r0, r0, #2
 8010236:	2180      	movs	r1, #128	; 0x80
 8010238:	2400      	movs	r4, #0
 801023a:	2501      	movs	r5, #1
 801023c:	420b      	tst	r3, r1
 801023e:	f5a2 6c80 	sub.w	ip, r2, #1024	; 0x400
 8010242:	bf16      	itet	ne
 8010244:	f5a2 6c80 	subne.w	ip, r2, #1024	; 0x400
 8010248:	f8cc 5000 	streq.w	r5, [ip]
 801024c:	f8cc 4000 	strne.w	r4, [ip]
 8010250:	ea1e 0f01 	tst.w	lr, r1
 8010254:	f5a2 7c00 	sub.w	ip, r2, #512	; 0x200
 8010258:	bf16      	itet	ne
 801025a:	f5a2 7c00 	subne.w	ip, r2, #512	; 0x200
 801025e:	f8cc 5000 	streq.w	r5, [ip]
 8010262:	f8cc 4000 	strne.w	r4, [ip]
 8010266:	420e      	tst	r6, r1
 8010268:	bf0c      	ite	eq
 801026a:	6015      	streq	r5, [r2, #0]
 801026c:	6014      	strne	r4, [r2, #0]
 801026e:	3240      	adds	r2, #64	; 0x40
 8010270:	4290      	cmp	r0, r2
 8010272:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8010276:	d1e1      	bne.n	801023c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 8010278:	bd70      	pop	{r4, r5, r6, pc}
 801027a:	bf00      	nop
 801027c:	200013d4 	ldrdcs	r1, [r0], -r4
 8010280:	e1100020 	tst	r0, r0, lsr #32

08010284 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8010284:	b2c8      	uxtb	r0, r1
 8010286:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801028a:	4a19      	ldr	r2, [pc, #100]	; (80102f0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>)
 801028c:	b570      	push	{r4, r5, r6, lr}
 801028e:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010292:	4918      	ldr	r1, [pc, #96]	; (80102f4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 8010294:	f89d c010 	ldrb.w	ip, [sp, #16]
 8010298:	f89d e014 	ldrb.w	lr, [sp, #20]
 801029c:	4411      	add	r1, r2
 801029e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80102a2:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 80102a6:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 80102aa:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 80102ae:	0089      	lsls	r1, r1, #2
 80102b0:	0080      	lsls	r0, r0, #2
 80102b2:	2280      	movs	r2, #128	; 0x80
 80102b4:	2401      	movs	r4, #1
 80102b6:	ea13 0502 	ands.w	r5, r3, r2
 80102ba:	f5a1 6680 	sub.w	r6, r1, #1024	; 0x400
 80102be:	bf0a      	itet	eq
 80102c0:	f5a1 6680 	subeq.w	r6, r1, #1024	; 0x400
 80102c4:	6034      	strne	r4, [r6, #0]
 80102c6:	6035      	streq	r5, [r6, #0]
 80102c8:	ea1c 0502 	ands.w	r5, ip, r2
 80102cc:	f5a1 7600 	sub.w	r6, r1, #512	; 0x200
 80102d0:	bf0a      	itet	eq
 80102d2:	f5a1 7600 	subeq.w	r6, r1, #512	; 0x200
 80102d6:	6034      	strne	r4, [r6, #0]
 80102d8:	6035      	streq	r5, [r6, #0]
 80102da:	ea1e 0502 	ands.w	r5, lr, r2
 80102de:	bf14      	ite	ne
 80102e0:	600c      	strne	r4, [r1, #0]
 80102e2:	600d      	streq	r5, [r1, #0]
 80102e4:	3140      	adds	r1, #64	; 0x40
 80102e6:	4288      	cmp	r0, r1
 80102e8:	ea4f 0252 	mov.w	r2, r2, lsr #1
 80102ec:	d1e3      	bne.n	80102b6 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x32>
 80102ee:	bd70      	pop	{r4, r5, r6, pc}
 80102f0:	200013d4 	ldrdcs	r1, [r0], -r4
 80102f4:	e1100020 	tst	r0, r0, lsr #32

080102f8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 80102f8:	b530      	push	{r4, r5, lr}
 80102fa:	6984      	ldr	r4, [r0, #24]
 80102fc:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8010300:	468c      	mov	ip, r1
 8010302:	4611      	mov	r1, r2
 8010304:	5ce2      	ldrb	r2, [r4, r3]
 8010306:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801030a:	5d65      	ldrb	r5, [r4, r5]
 801030c:	5ce3      	ldrb	r3, [r4, r3]
 801030e:	7d44      	ldrb	r4, [r0, #21]
 8010310:	bb1c      	cbnz	r4, 801035a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x62>
 8010312:	6804      	ldr	r4, [r0, #0]
 8010314:	b1cc      	cbz	r4, 801034a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x52>
 8010316:	3c0b      	subs	r4, #11
 8010318:	2c01      	cmp	r4, #1
 801031a:	9204      	str	r2, [sp, #16]
 801031c:	d94a      	bls.n	80103b4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 801031e:	ea6f 0493 	mvn.w	r4, r3, lsr #2
 8010322:	9503      	str	r5, [sp, #12]
 8010324:	f004 0430 	and.w	r4, r4, #48	; 0x30
 8010328:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 801032c:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 8010330:	f005 050c 	and.w	r5, r5, #12
 8010334:	ea44 1292 	orr.w	r2, r4, r2, lsr #6
 8010338:	432a      	orrs	r2, r5
 801033a:	3101      	adds	r1, #1
 801033c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010340:	4660      	mov	r0, ip
 8010342:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8010346:	f7ff baf7 	b.w	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801034a:	6884      	ldr	r4, [r0, #8]
 801034c:	2c05      	cmp	r4, #5
 801034e:	d854      	bhi.n	80103fa <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x102>
 8010350:	e8df f004 	tbb	[pc, r4]
 8010354:	4c484440 	cfstrdmi	mvd4, [r8], {64}	; 0x40
 8010358:	68843850 	stmvs	r4, {r4, r6, fp, ip, sp}
 801035c:	2c05      	cmp	r4, #5
 801035e:	d826      	bhi.n	80103ae <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 8010360:	e8df f004 	tbb	[pc, r4]
 8010364:	0b141821 	bleq	85163f0 <__exidx_end+0x4fc3e4>
 8010368:	e9cd2503 	stmib	sp, {r0, r1, r8, sl, sp}^
 801036c:	2503      	movs	r5, #3
 801036e:	460a      	mov	r2, r1
 8010370:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010374:	4661      	mov	r1, ip
 8010376:	f7ff bf47 	b.w	8010208 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801037a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801037e:	462b      	mov	r3, r5
 8010380:	460a      	mov	r2, r1
 8010382:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010386:	4661      	mov	r1, ip
 8010388:	f7ff bf3e 	b.w	8010208 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801038c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8010390:	462b      	mov	r3, r5
 8010392:	e7f5      	b.n	8010380 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x88>
 8010394:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8010398:	4613      	mov	r3, r2
 801039a:	460a      	mov	r2, r1
 801039c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80103a0:	4661      	mov	r1, ip
 80103a2:	f7ff bf31 	b.w	8010208 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80103a6:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80103aa:	4613      	mov	r3, r2
 80103ac:	e7f5      	b.n	801039a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa2>
 80103ae:	e9cd 5203 	strd	r5, r2, [sp, #12]
 80103b2:	e7dc      	b.n	801036e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x76>
 80103b4:	7c82      	ldrb	r2, [r0, #18]
 80103b6:	9503      	str	r5, [sp, #12]
 80103b8:	3101      	adds	r1, #1
 80103ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80103be:	4660      	mov	r0, ip
 80103c0:	f7ff baba 	b.w	800f938 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80103c4:	e9cd 5203 	strd	r5, r2, [sp, #12]
 80103c8:	460a      	mov	r2, r1
 80103ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80103ce:	4661      	mov	r1, ip
 80103d0:	f7ff bf58 	b.w	8010284 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80103d4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80103d8:	4613      	mov	r3, r2
 80103da:	e7f5      	b.n	80103c8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80103dc:	e9cd 3503 	strd	r3, r5, [sp, #12]
 80103e0:	4613      	mov	r3, r2
 80103e2:	e7f1      	b.n	80103c8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80103e4:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80103e8:	462b      	mov	r3, r5
 80103ea:	e7ed      	b.n	80103c8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80103ec:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80103f0:	462b      	mov	r3, r5
 80103f2:	e7e9      	b.n	80103c8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80103f4:	e9cd 2503 	strd	r2, r5, [sp, #12]
 80103f8:	e7e6      	b.n	80103c8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80103fa:	bf00      	nop

080103fc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 80103fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103fe:	6980      	ldr	r0, [r0, #24]
 8010400:	f89d 4014 	ldrb.w	r4, [sp, #20]
 8010404:	f810 c003 	ldrb.w	ip, [r0, r3]
 8010408:	4b1c      	ldr	r3, [pc, #112]	; (801047c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>)
 801040a:	f810 e004 	ldrb.w	lr, [r0, r4]
 801040e:	eb03 1282 	add.w	r2, r3, r2, lsl #6
 8010412:	4b1b      	ldr	r3, [pc, #108]	; (8010480 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x84>)
 8010414:	b2c9      	uxtb	r1, r1
 8010416:	4413      	add	r3, r2
 8010418:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801041c:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 8010420:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8010424:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8010428:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801042c:	5c45      	ldrb	r5, [r0, r1]
 801042e:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8010432:	009b      	lsls	r3, r3, #2
 8010434:	5c46      	ldrb	r6, [r0, r1]
 8010436:	0092      	lsls	r2, r2, #2
 8010438:	2180      	movs	r1, #128	; 0x80
 801043a:	2000      	movs	r0, #0
 801043c:	2401      	movs	r4, #1
 801043e:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 8010442:	ea1e 0f01 	tst.w	lr, r1
 8010446:	bf0c      	ite	eq
 8010448:	603c      	streq	r4, [r7, #0]
 801044a:	6038      	strne	r0, [r7, #0]
 801044c:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 8010450:	ea1c 0f01 	tst.w	ip, r1
 8010454:	bf0c      	ite	eq
 8010456:	603c      	streq	r4, [r7, #0]
 8010458:	6038      	strne	r0, [r7, #0]
 801045a:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 801045e:	420d      	tst	r5, r1
 8010460:	bf0c      	ite	eq
 8010462:	603c      	streq	r4, [r7, #0]
 8010464:	6038      	strne	r0, [r7, #0]
 8010466:	420e      	tst	r6, r1
 8010468:	bf0c      	ite	eq
 801046a:	601c      	streq	r4, [r3, #0]
 801046c:	6018      	strne	r0, [r3, #0]
 801046e:	3340      	adds	r3, #64	; 0x40
 8010470:	429a      	cmp	r2, r3
 8010472:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8010476:	d1e2      	bne.n	801043e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x42>
 8010478:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801047a:	bf00      	nop
 801047c:	200013d4 	ldrdcs	r1, [r0], -r4
 8010480:	e1100030 	tst	r0, r0, lsr r0

08010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8010484:	b510      	push	{r4, lr}
 8010486:	4a05      	ldr	r2, [pc, #20]	; (801049c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8010488:	2300      	movs	r3, #0
 801048a:	2020      	movs	r0, #32
 801048c:	428b      	cmp	r3, r1
 801048e:	d100      	bne.n	8010492 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 8010490:	bd10      	pop	{r4, pc}
 8010492:	f852 4b04 	ldr.w	r4, [r2], #4
 8010496:	3301      	adds	r3, #1
 8010498:	4420      	add	r0, r4
 801049a:	e7f7      	b.n	801048c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 801049c:	08019438 	stmdaeq	r1, {r3, r4, r5, sl, ip, pc}

080104a0 <SpiFlashStore::Init()>:
 80104a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80104a4:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80105d0 <SpiFlashStore::Init()+0x130>
 80104a8:	b085      	sub	sp, #20
 80104aa:	4607      	mov	r7, r0
 80104ac:	f8d8 0000 	ldr.w	r0, [r8]
 80104b0:	f000 fca1 	bl	8010df6 <FlashRom::GetSectorSize() const>
 80104b4:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 80104b8:	4605      	mov	r5, r0
 80104ba:	d17e      	bne.n	80105ba <SpiFlashStore::Init()+0x11a>
 80104bc:	f8d8 0000 	ldr.w	r0, [r8]
 80104c0:	f000 fc96 	bl	8010df0 <FlashRom::GetSize() const>
 80104c4:	4b3e      	ldr	r3, [pc, #248]	; (80105c0 <SpiFlashStore::Init()+0x120>)
 80104c6:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 80104ca:	f3c1 060b 	ubfx	r6, r1, #0, #12
 80104ce:	6019      	str	r1, [r3, #0]
 80104d0:	2e00      	cmp	r6, #0
 80104d2:	d172      	bne.n	80105ba <SpiFlashStore::Init()+0x11a>
 80104d4:	4c3b      	ldr	r4, [pc, #236]	; (80105c4 <SpiFlashStore::Init()+0x124>)
 80104d6:	ab03      	add	r3, sp, #12
 80104d8:	9300      	str	r3, [sp, #0]
 80104da:	462a      	mov	r2, r5
 80104dc:	4623      	mov	r3, r4
 80104de:	f8d8 0000 	ldr.w	r0, [r8]
 80104e2:	f000 fc8b 	bl	8010dfc <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 80104e6:	7823      	ldrb	r3, [r4, #0]
 80104e8:	2b41      	cmp	r3, #65	; 0x41
 80104ea:	bf1c      	itt	ne
 80104ec:	2341      	movne	r3, #65	; 0x41
 80104ee:	7023      	strbne	r3, [r4, #0]
 80104f0:	7863      	ldrb	r3, [r4, #1]
 80104f2:	bf14      	ite	ne
 80104f4:	4635      	movne	r5, r6
 80104f6:	2501      	moveq	r5, #1
 80104f8:	2b76      	cmp	r3, #118	; 0x76
 80104fa:	bf1c      	itt	ne
 80104fc:	2376      	movne	r3, #118	; 0x76
 80104fe:	7063      	strbne	r3, [r4, #1]
 8010500:	78a3      	ldrb	r3, [r4, #2]
 8010502:	bf18      	it	ne
 8010504:	2500      	movne	r5, #0
 8010506:	2b56      	cmp	r3, #86	; 0x56
 8010508:	bf1c      	itt	ne
 801050a:	2356      	movne	r3, #86	; 0x56
 801050c:	70a3      	strbne	r3, [r4, #2]
 801050e:	78e3      	ldrb	r3, [r4, #3]
 8010510:	bf18      	it	ne
 8010512:	2500      	movne	r5, #0
 8010514:	2b10      	cmp	r3, #16
 8010516:	d023      	beq.n	8010560 <SpiFlashStore::Init()+0xc0>
 8010518:	2310      	movs	r3, #16
 801051a:	70e3      	strb	r3, [r4, #3]
 801051c:	4b2a      	ldr	r3, [pc, #168]	; (80105c8 <SpiFlashStore::Init()+0x128>)
 801051e:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 80105d4 <SpiFlashStore::Init()+0x134>
 8010522:	2201      	movs	r2, #1
 8010524:	701a      	strb	r2, [r3, #0]
 8010526:	2500      	movs	r5, #0
 8010528:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801052c:	4631      	mov	r1, r6
 801052e:	4638      	mov	r0, r7
 8010530:	f7ff ffa8 	bl	8010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010534:	1821      	adds	r1, r4, r0
 8010536:	5425      	strb	r5, [r4, r0]
 8010538:	704d      	strb	r5, [r1, #1]
 801053a:	708d      	strb	r5, [r1, #2]
 801053c:	70cd      	strb	r5, [r1, #3]
 801053e:	f858 1b04 	ldr.w	r1, [r8], #4
 8010542:	4603      	mov	r3, r0
 8010544:	1d02      	adds	r2, r0, #4
 8010546:	440b      	add	r3, r1
 8010548:	429a      	cmp	r2, r3
 801054a:	d332      	bcc.n	80105b2 <SpiFlashStore::Init()+0x112>
 801054c:	3601      	adds	r6, #1
 801054e:	2e1c      	cmp	r6, #28
 8010550:	d1ec      	bne.n	801052c <SpiFlashStore::Init()+0x8c>
 8010552:	4b1e      	ldr	r3, [pc, #120]	; (80105cc <SpiFlashStore::Init()+0x12c>)
 8010554:	2501      	movs	r5, #1
 8010556:	601d      	str	r5, [r3, #0]
 8010558:	4628      	mov	r0, r5
 801055a:	b005      	add	sp, #20
 801055c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010560:	2d00      	cmp	r5, #0
 8010562:	d0db      	beq.n	801051c <SpiFlashStore::Init()+0x7c>
 8010564:	f04f 0900 	mov.w	r9, #0
 8010568:	46c8      	mov	r8, r9
 801056a:	4631      	mov	r1, r6
 801056c:	4638      	mov	r0, r7
 801056e:	f7ff ff89 	bl	8010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010572:	5c23      	ldrb	r3, [r4, r0]
 8010574:	2bff      	cmp	r3, #255	; 0xff
 8010576:	d112      	bne.n	801059e <SpiFlashStore::Init()+0xfe>
 8010578:	1823      	adds	r3, r4, r0
 801057a:	785a      	ldrb	r2, [r3, #1]
 801057c:	2aff      	cmp	r2, #255	; 0xff
 801057e:	d10e      	bne.n	801059e <SpiFlashStore::Init()+0xfe>
 8010580:	789a      	ldrb	r2, [r3, #2]
 8010582:	2aff      	cmp	r2, #255	; 0xff
 8010584:	d10b      	bne.n	801059e <SpiFlashStore::Init()+0xfe>
 8010586:	78da      	ldrb	r2, [r3, #3]
 8010588:	2aff      	cmp	r2, #255	; 0xff
 801058a:	d108      	bne.n	801059e <SpiFlashStore::Init()+0xfe>
 801058c:	f804 8000 	strb.w	r8, [r4, r0]
 8010590:	46a9      	mov	r9, r5
 8010592:	f883 8001 	strb.w	r8, [r3, #1]
 8010596:	f883 8002 	strb.w	r8, [r3, #2]
 801059a:	f883 8003 	strb.w	r8, [r3, #3]
 801059e:	3601      	adds	r6, #1
 80105a0:	2e1c      	cmp	r6, #28
 80105a2:	d1e2      	bne.n	801056a <SpiFlashStore::Init()+0xca>
 80105a4:	f1b9 0f00 	cmp.w	r9, #0
 80105a8:	d0d6      	beq.n	8010558 <SpiFlashStore::Init()+0xb8>
 80105aa:	4b08      	ldr	r3, [pc, #32]	; (80105cc <SpiFlashStore::Init()+0x12c>)
 80105ac:	2201      	movs	r2, #1
 80105ae:	601a      	str	r2, [r3, #0]
 80105b0:	e7d2      	b.n	8010558 <SpiFlashStore::Init()+0xb8>
 80105b2:	f804 9002 	strb.w	r9, [r4, r2]
 80105b6:	3201      	adds	r2, #1
 80105b8:	e7c6      	b.n	8010548 <SpiFlashStore::Init()+0xa8>
 80105ba:	2500      	movs	r5, #0
 80105bc:	e7cc      	b.n	8010558 <SpiFlashStore::Init()+0xb8>
 80105be:	bf00      	nop
 80105c0:	200093d8 	ldrdcs	r9, [r0], -r8
 80105c4:	40024000 	andmi	r4, r2, r0
 80105c8:	200093ec 	andcs	r9, r0, ip, ror #7
 80105cc:	200093e4 	andcs	r9, r0, r4, ror #7
 80105d0:	20009408 	andcs	r9, r0, r8, lsl #8
 80105d4:	08019438 	stmdaeq	r1, {r3, r4, r5, sl, ip, pc}

080105d8 <SpiFlashStore::SpiFlashStore()>:
 80105d8:	b538      	push	{r3, r4, r5, lr}
 80105da:	4b0d      	ldr	r3, [pc, #52]	; (8010610 <SpiFlashStore::SpiFlashStore()+0x38>)
 80105dc:	4d0d      	ldr	r5, [pc, #52]	; (8010614 <SpiFlashStore::SpiFlashStore()+0x3c>)
 80105de:	6018      	str	r0, [r3, #0]
 80105e0:	4b0d      	ldr	r3, [pc, #52]	; (8010618 <SpiFlashStore::SpiFlashStore()+0x40>)
 80105e2:	681b      	ldr	r3, [r3, #0]
 80105e4:	7a9b      	ldrb	r3, [r3, #10]
 80105e6:	4604      	mov	r4, r0
 80105e8:	b113      	cbz	r3, 80105f0 <SpiFlashStore::SpiFlashStore()+0x18>
 80105ea:	f7ff ff59 	bl	80104a0 <SpiFlashStore::Init()>
 80105ee:	7028      	strb	r0, [r5, #0]
 80105f0:	782b      	ldrb	r3, [r5, #0]
 80105f2:	b153      	cbz	r3, 801060a <SpiFlashStore::SpiFlashStore()+0x32>
 80105f4:	4909      	ldr	r1, [pc, #36]	; (801061c <SpiFlashStore::SpiFlashStore()+0x44>)
 80105f6:	2320      	movs	r3, #32
 80105f8:	2200      	movs	r2, #0
 80105fa:	f851 0b04 	ldr.w	r0, [r1], #4
 80105fe:	3201      	adds	r2, #1
 8010600:	2a1c      	cmp	r2, #28
 8010602:	4403      	add	r3, r0
 8010604:	d1f9      	bne.n	80105fa <SpiFlashStore::SpiFlashStore()+0x22>
 8010606:	4a06      	ldr	r2, [pc, #24]	; (8010620 <SpiFlashStore::SpiFlashStore()+0x48>)
 8010608:	6013      	str	r3, [r2, #0]
 801060a:	4620      	mov	r0, r4
 801060c:	bd38      	pop	{r3, r4, r5, pc}
 801060e:	bf00      	nop
 8010610:	200093e8 	andcs	r9, r0, r8, ror #7
 8010614:	200093dc 	ldrdcs	r9, [r0], -ip
 8010618:	20009408 	andcs	r9, r0, r8, lsl #8
 801061c:	08019438 	stmdaeq	r1, {r3, r4, r5, sl, ip, pc}
 8010620:	200093e0 	andcs	r9, r0, r0, ror #7

08010624 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 8010624:	b508      	push	{r3, lr}
 8010626:	f7ff ff2d 	bl	8010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 801062a:	4905      	ldr	r1, [pc, #20]	; (8010640 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 801062c:	1842      	adds	r2, r0, r1
 801062e:	2300      	movs	r3, #0
 8010630:	540b      	strb	r3, [r1, r0]
 8010632:	7053      	strb	r3, [r2, #1]
 8010634:	7093      	strb	r3, [r2, #2]
 8010636:	70d3      	strb	r3, [r2, #3]
 8010638:	4b02      	ldr	r3, [pc, #8]	; (8010644 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 801063a:	2201      	movs	r2, #1
 801063c:	601a      	str	r2, [r3, #0]
 801063e:	bd08      	pop	{r3, pc}
 8010640:	40024000 	andmi	r4, r2, r0
 8010644:	200093e4 	andcs	r9, r0, r4, ror #7

08010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8010648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801064c:	461c      	mov	r4, r3
 801064e:	4b19      	ldr	r3, [pc, #100]	; (80106b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8010650:	9d07      	ldr	r5, [sp, #28]
 8010652:	781f      	ldrb	r7, [r3, #0]
 8010654:	4616      	mov	r6, r2
 8010656:	b307      	cbz	r7, 801069a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010658:	f7ff ff14 	bl	8010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 801065c:	4a16      	ldr	r2, [pc, #88]	; (80106b8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 801065e:	1831      	adds	r1, r6, r0
 8010660:	1e63      	subs	r3, r4, #1
 8010662:	9c06      	ldr	r4, [sp, #24]
 8010664:	4411      	add	r1, r2
 8010666:	440c      	add	r4, r1
 8010668:	f04f 0c00 	mov.w	ip, #0
 801066c:	42a1      	cmp	r1, r4
 801066e:	d116      	bne.n	801069e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8010670:	f1bc 0f00 	cmp.w	ip, #0
 8010674:	d011      	beq.n	801069a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010676:	4b11      	ldr	r3, [pc, #68]	; (80106bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8010678:	6819      	ldr	r1, [r3, #0]
 801067a:	b109      	cbz	r1, 8010680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 801067c:	2906      	cmp	r1, #6
 801067e:	d101      	bne.n	8010684 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8010680:	2101      	movs	r1, #1
 8010682:	6019      	str	r1, [r3, #0]
 8010684:	4b0e      	ldr	r3, [pc, #56]	; (80106c0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8010686:	6819      	ldr	r1, [r3, #0]
 8010688:	4b0e      	ldr	r3, [pc, #56]	; (80106c4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 801068a:	6019      	str	r1, [r3, #0]
 801068c:	b12e      	cbz	r6, 801069a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 801068e:	b125      	cbz	r5, 801069a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010690:	9b08      	ldr	r3, [sp, #32]
 8010692:	4418      	add	r0, r3
 8010694:	5813      	ldr	r3, [r2, r0]
 8010696:	432b      	orrs	r3, r5
 8010698:	5013      	str	r3, [r2, r0]
 801069a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801069e:	f891 8000 	ldrb.w	r8, [r1]
 80106a2:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 80106a6:	45f0      	cmp	r8, lr
 80106a8:	bf1c      	itt	ne
 80106aa:	f881 e000 	strbne.w	lr, [r1]
 80106ae:	46bc      	movne	ip, r7
 80106b0:	3101      	adds	r1, #1
 80106b2:	e7db      	b.n	801066c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 80106b4:	200093dc 	ldrdcs	r9, [r0], -ip
 80106b8:	40024000 	andmi	r4, r2, r0
 80106bc:	200093e4 	andcs	r9, r0, r4, ror #7
 80106c0:	2000fefc 	strdcs	pc, [r0], -ip
 80106c4:	200093d4 	ldrdcs	r9, [r0], -r4

080106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 80106c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106cc:	461d      	mov	r5, r3
 80106ce:	4b15      	ldr	r3, [pc, #84]	; (8010724 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 80106d0:	b085      	sub	sp, #20
 80106d2:	781b      	ldrb	r3, [r3, #0]
 80106d4:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 80106d8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80106dc:	4607      	mov	r7, r0
 80106de:	4614      	mov	r4, r2
 80106e0:	b193      	cbz	r3, 8010708 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 80106e2:	f7ff fecf 	bl	8010484 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80106e6:	4a10      	ldr	r2, [pc, #64]	; (8010728 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 80106e8:	eb08 0600 	add.w	r6, r8, r0
 80106ec:	18b3      	adds	r3, r6, r2
 80106ee:	f1b9 0f00 	cmp.w	r9, #0
 80106f2:	d013      	beq.n	801071c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80106f4:	5990      	ldr	r0, [r2, r6]
 80106f6:	b988      	cbnz	r0, 801071c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80106f8:	e9cd 0001 	strd	r0, r0, [sp, #4]
 80106fc:	9500      	str	r5, [sp, #0]
 80106fe:	4623      	mov	r3, r4
 8010700:	4642      	mov	r2, r8
 8010702:	4638      	mov	r0, r7
 8010704:	f7ff ffa0 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010708:	b005      	add	sp, #20
 801070a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801070e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010712:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010716:	429d      	cmp	r5, r3
 8010718:	d1f9      	bne.n	801070e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 801071a:	e7f5      	b.n	8010708 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 801071c:	3c01      	subs	r4, #1
 801071e:	441d      	add	r5, r3
 8010720:	e7f9      	b.n	8010716 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8010722:	bf00      	nop
 8010724:	200093dc 	ldrdcs	r9, [r0], -ip
 8010728:	40024000 	andmi	r4, r2, r0

0801072c <SpiFlashStore::Flash()>:
 801072c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801072e:	4c25      	ldr	r4, [pc, #148]	; (80107c4 <SpiFlashStore::Flash()+0x98>)
 8010730:	6820      	ldr	r0, [r4, #0]
 8010732:	2800      	cmp	r0, #0
 8010734:	d043      	beq.n	80107be <SpiFlashStore::Flash()+0x92>
 8010736:	3801      	subs	r0, #1
 8010738:	2805      	cmp	r0, #5
 801073a:	d831      	bhi.n	80107a0 <SpiFlashStore::Flash()+0x74>
 801073c:	e8df f000 	tbb	[pc, r0]
 8010740:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8010744:	4b203025 	blmi	881c7e0 <__exidx_end+0x8027d4>
 8010748:	681a      	ldr	r2, [r3, #0]
 801074a:	4b20      	ldr	r3, [pc, #128]	; (80107cc <SpiFlashStore::Flash()+0xa0>)
 801074c:	601a      	str	r2, [r3, #0]
 801074e:	2302      	movs	r3, #2
 8010750:	6023      	str	r3, [r4, #0]
 8010752:	2001      	movs	r0, #1
 8010754:	e033      	b.n	80107be <SpiFlashStore::Flash()+0x92>
 8010756:	4b1c      	ldr	r3, [pc, #112]	; (80107c8 <SpiFlashStore::Flash()+0x9c>)
 8010758:	4a1c      	ldr	r2, [pc, #112]	; (80107cc <SpiFlashStore::Flash()+0xa0>)
 801075a:	681b      	ldr	r3, [r3, #0]
 801075c:	6812      	ldr	r2, [r2, #0]
 801075e:	1a9b      	subs	r3, r3, r2
 8010760:	2b63      	cmp	r3, #99	; 0x63
 8010762:	d9f6      	bls.n	8010752 <SpiFlashStore::Flash()+0x26>
 8010764:	2303      	movs	r3, #3
 8010766:	e7f3      	b.n	8010750 <SpiFlashStore::Flash()+0x24>
 8010768:	4919      	ldr	r1, [pc, #100]	; (80107d0 <SpiFlashStore::Flash()+0xa4>)
 801076a:	481a      	ldr	r0, [pc, #104]	; (80107d4 <SpiFlashStore::Flash()+0xa8>)
 801076c:	6809      	ldr	r1, [r1, #0]
 801076e:	6800      	ldr	r0, [r0, #0]
 8010770:	ab03      	add	r3, sp, #12
 8010772:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010776:	f000 fb65 	bl	8010e44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 801077a:	2800      	cmp	r0, #0
 801077c:	d0e9      	beq.n	8010752 <SpiFlashStore::Flash()+0x26>
 801077e:	4b12      	ldr	r3, [pc, #72]	; (80107c8 <SpiFlashStore::Flash()+0x9c>)
 8010780:	681a      	ldr	r2, [r3, #0]
 8010782:	4b12      	ldr	r3, [pc, #72]	; (80107cc <SpiFlashStore::Flash()+0xa0>)
 8010784:	601a      	str	r2, [r3, #0]
 8010786:	2305      	movs	r3, #5
 8010788:	e7e2      	b.n	8010750 <SpiFlashStore::Flash()+0x24>
 801078a:	4b0f      	ldr	r3, [pc, #60]	; (80107c8 <SpiFlashStore::Flash()+0x9c>)
 801078c:	4a0f      	ldr	r2, [pc, #60]	; (80107cc <SpiFlashStore::Flash()+0xa0>)
 801078e:	681b      	ldr	r3, [r3, #0]
 8010790:	6812      	ldr	r2, [r2, #0]
 8010792:	1a9b      	subs	r3, r3, r2
 8010794:	2b63      	cmp	r3, #99	; 0x63
 8010796:	d9dc      	bls.n	8010752 <SpiFlashStore::Flash()+0x26>
 8010798:	2304      	movs	r3, #4
 801079a:	e7d9      	b.n	8010750 <SpiFlashStore::Flash()+0x24>
 801079c:	2306      	movs	r3, #6
 801079e:	e7d7      	b.n	8010750 <SpiFlashStore::Flash()+0x24>
 80107a0:	ab03      	add	r3, sp, #12
 80107a2:	4a0d      	ldr	r2, [pc, #52]	; (80107d8 <SpiFlashStore::Flash()+0xac>)
 80107a4:	490a      	ldr	r1, [pc, #40]	; (80107d0 <SpiFlashStore::Flash()+0xa4>)
 80107a6:	480b      	ldr	r0, [pc, #44]	; (80107d4 <SpiFlashStore::Flash()+0xa8>)
 80107a8:	9300      	str	r3, [sp, #0]
 80107aa:	6812      	ldr	r2, [r2, #0]
 80107ac:	4b0b      	ldr	r3, [pc, #44]	; (80107dc <SpiFlashStore::Flash()+0xb0>)
 80107ae:	6809      	ldr	r1, [r1, #0]
 80107b0:	6800      	ldr	r0, [r0, #0]
 80107b2:	f000 fb4b 	bl	8010e4c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 80107b6:	2800      	cmp	r0, #0
 80107b8:	d0cb      	beq.n	8010752 <SpiFlashStore::Flash()+0x26>
 80107ba:	2000      	movs	r0, #0
 80107bc:	6020      	str	r0, [r4, #0]
 80107be:	b004      	add	sp, #16
 80107c0:	bd10      	pop	{r4, pc}
 80107c2:	bf00      	nop
 80107c4:	200093e4 	andcs	r9, r0, r4, ror #7
 80107c8:	2000fefc 	strdcs	pc, [r0], -ip
 80107cc:	200093d4 	ldrdcs	r9, [r0], -r4
 80107d0:	200093d8 	ldrdcs	r9, [r0], -r8
 80107d4:	20009408 	andcs	r9, r0, r8, lsl #8
 80107d8:	200093e0 	andcs	r9, r0, r0, ror #7
 80107dc:	40024000 	andmi	r4, r2, r0

080107e0 <StoreDisplayUdf::~StoreDisplayUdf()>:
 80107e0:	4770      	bx	lr
	...

080107e4 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 80107e4:	b507      	push	{r0, r1, r2, lr}
 80107e6:	2300      	movs	r3, #0
 80107e8:	460a      	mov	r2, r1
 80107ea:	2101      	movs	r1, #1
 80107ec:	e9cd 3100 	strd	r3, r1, [sp]
 80107f0:	4804      	ldr	r0, [pc, #16]	; (8010804 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 80107f2:	2322      	movs	r3, #34	; 0x22
 80107f4:	6800      	ldr	r0, [r0, #0]
 80107f6:	210f      	movs	r1, #15
 80107f8:	f7ff ff66 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80107fc:	b003      	add	sp, #12
 80107fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8010802:	bf00      	nop
 8010804:	200093e8 	andcs	r9, r0, r8, ror #7

08010808 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8010808:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801080a:	2200      	movs	r2, #0
 801080c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010810:	460b      	mov	r3, r1
 8010812:	4805      	ldr	r0, [pc, #20]	; (8010828 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8010814:	2122      	movs	r1, #34	; 0x22
 8010816:	9100      	str	r1, [sp, #0]
 8010818:	6800      	ldr	r0, [r0, #0]
 801081a:	210f      	movs	r1, #15
 801081c:	f7ff ff14 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010820:	b005      	add	sp, #20
 8010822:	f85d fb04 	ldr.w	pc, [sp], #4
 8010826:	bf00      	nop
 8010828:	200093e8 	andcs	r9, r0, r8, ror #7

0801082c <StoreDisplayUdf::~StoreDisplayUdf()>:
 801082c:	b510      	push	{r4, lr}
 801082e:	4604      	mov	r4, r0
 8010830:	f003 fe7c 	bl	801452c <operator delete(void*)>
 8010834:	4620      	mov	r0, r4
 8010836:	bd10      	pop	{r4, pc}

08010838 <StoreDisplayUdf::StoreDisplayUdf()>:
 8010838:	4a02      	ldr	r2, [pc, #8]	; (8010844 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 801083a:	6002      	str	r2, [r0, #0]
 801083c:	4a02      	ldr	r2, [pc, #8]	; (8010848 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 801083e:	6010      	str	r0, [r2, #0]
 8010840:	4770      	bx	lr
 8010842:	bf00      	nop
 8010844:	080194b0 	stmdaeq	r1, {r4, r5, r7, sl, ip, pc}
 8010848:	200093f0 	strdcs	r9, [r0], -r0

0801084c <StoreDmxSend::~StoreDmxSend()>:
 801084c:	4770      	bx	lr
	...

08010850 <StoreDmxSend::Copy(TDmxParams*)>:
 8010850:	b507      	push	{r0, r1, r2, lr}
 8010852:	2300      	movs	r3, #0
 8010854:	460a      	mov	r2, r1
 8010856:	2101      	movs	r1, #1
 8010858:	e9cd 3100 	strd	r3, r1, [sp]
 801085c:	4804      	ldr	r0, [pc, #16]	; (8010870 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 801085e:	230a      	movs	r3, #10
 8010860:	6800      	ldr	r0, [r0, #0]
 8010862:	2102      	movs	r1, #2
 8010864:	f7ff ff30 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8010868:	b003      	add	sp, #12
 801086a:	f85d fb04 	ldr.w	pc, [sp], #4
 801086e:	bf00      	nop
 8010870:	200093e8 	andcs	r9, r0, r8, ror #7

08010874 <StoreDmxSend::Update(TDmxParams const*)>:
 8010874:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010876:	2200      	movs	r2, #0
 8010878:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801087c:	460b      	mov	r3, r1
 801087e:	4805      	ldr	r0, [pc, #20]	; (8010894 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 8010880:	210a      	movs	r1, #10
 8010882:	9100      	str	r1, [sp, #0]
 8010884:	6800      	ldr	r0, [r0, #0]
 8010886:	2102      	movs	r1, #2
 8010888:	f7ff fede 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801088c:	b005      	add	sp, #20
 801088e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010892:	bf00      	nop
 8010894:	200093e8 	andcs	r9, r0, r8, ror #7

08010898 <StoreDmxSend::~StoreDmxSend()>:
 8010898:	b510      	push	{r4, lr}
 801089a:	4604      	mov	r4, r0
 801089c:	f003 fe46 	bl	801452c <operator delete(void*)>
 80108a0:	4620      	mov	r0, r4
 80108a2:	bd10      	pop	{r4, pc}

080108a4 <StoreDmxSend::StoreDmxSend()>:
 80108a4:	4a02      	ldr	r2, [pc, #8]	; (80108b0 <StoreDmxSend::StoreDmxSend()+0xc>)
 80108a6:	6002      	str	r2, [r0, #0]
 80108a8:	4a02      	ldr	r2, [pc, #8]	; (80108b4 <StoreDmxSend::StoreDmxSend()+0x10>)
 80108aa:	6010      	str	r0, [r2, #0]
 80108ac:	4770      	bx	lr
 80108ae:	bf00      	nop
 80108b0:	080194c8 	stmdaeq	r1, {r3, r6, r7, sl, ip, pc}
 80108b4:	200093f4 	strdcs	r9, [r0], -r4

080108b8 <StoreNetwork::~StoreNetwork()>:
 80108b8:	4770      	bx	lr

080108ba <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 80108ba:	3804      	subs	r0, #4
 80108bc:	4770      	bx	lr
	...

080108c0 <StoreNetwork::Update(networkparams::Params const*)>:
 80108c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80108c2:	2200      	movs	r2, #0
 80108c4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80108c8:	460b      	mov	r3, r1
 80108ca:	4805      	ldr	r0, [pc, #20]	; (80108e0 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 80108cc:	215e      	movs	r1, #94	; 0x5e
 80108ce:	9100      	str	r1, [sp, #0]
 80108d0:	6800      	ldr	r0, [r0, #0]
 80108d2:	4611      	mov	r1, r2
 80108d4:	f7ff feb8 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80108d8:	b005      	add	sp, #20
 80108da:	f85d fb04 	ldr.w	pc, [sp], #4
 80108de:	bf00      	nop
 80108e0:	200093e8 	andcs	r9, r0, r8, ror #7

080108e4 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 80108e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80108e6:	2308      	movs	r3, #8
 80108e8:	9105      	str	r1, [sp, #20]
 80108ea:	2100      	movs	r1, #0
 80108ec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80108f0:	4805      	ldr	r0, [pc, #20]	; (8010908 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 80108f2:	2304      	movs	r3, #4
 80108f4:	9300      	str	r3, [sp, #0]
 80108f6:	6800      	ldr	r0, [r0, #0]
 80108f8:	ab05      	add	r3, sp, #20
 80108fa:	220c      	movs	r2, #12
 80108fc:	f7ff fea4 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010900:	b007      	add	sp, #28
 8010902:	f85d fb04 	ldr.w	pc, [sp], #4
 8010906:	bf00      	nop
 8010908:	200093e8 	andcs	r9, r0, r8, ror #7

0801090c <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 801090c:	f1a0 0004 	sub.w	r0, r0, #4
 8010910:	e7e8      	b.n	80108e4 <StoreNetwork::SaveGatewayIp(unsigned int)>
 8010912:	bf00      	nop

08010914 <StoreNetwork::SaveNetMask(unsigned int)>:
 8010914:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010916:	2304      	movs	r3, #4
 8010918:	9105      	str	r1, [sp, #20]
 801091a:	2100      	movs	r1, #0
 801091c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010920:	4804      	ldr	r0, [pc, #16]	; (8010934 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8010922:	9300      	str	r3, [sp, #0]
 8010924:	6800      	ldr	r0, [r0, #0]
 8010926:	ab05      	add	r3, sp, #20
 8010928:	2208      	movs	r2, #8
 801092a:	f7ff fe8d 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801092e:	b007      	add	sp, #28
 8010930:	f85d fb04 	ldr.w	pc, [sp], #4
 8010934:	200093e8 	andcs	r9, r0, r8, ror #7

08010938 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8010938:	f1a0 0004 	sub.w	r0, r0, #4
 801093c:	e7ea      	b.n	8010914 <StoreNetwork::SaveNetMask(unsigned int)>
 801093e:	bf00      	nop

08010940 <StoreNetwork::SaveIp(unsigned int)>:
 8010940:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010942:	2302      	movs	r3, #2
 8010944:	9105      	str	r1, [sp, #20]
 8010946:	2100      	movs	r1, #0
 8010948:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801094c:	2204      	movs	r2, #4
 801094e:	4804      	ldr	r0, [pc, #16]	; (8010960 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8010950:	9200      	str	r2, [sp, #0]
 8010952:	6800      	ldr	r0, [r0, #0]
 8010954:	ab05      	add	r3, sp, #20
 8010956:	f7ff fe77 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801095a:	b007      	add	sp, #28
 801095c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010960:	200093e8 	andcs	r9, r0, r8, ror #7

08010964 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8010964:	f1a0 0004 	sub.w	r0, r0, #4
 8010968:	e7ea      	b.n	8010940 <StoreNetwork::SaveIp(unsigned int)>
 801096a:	bf00      	nop

0801096c <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 801096c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801096e:	460b      	mov	r3, r1
 8010970:	2000      	movs	r0, #0
 8010972:	2120      	movs	r1, #32
 8010974:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8010978:	2a40      	cmp	r2, #64	; 0x40
 801097a:	bf28      	it	cs
 801097c:	2240      	movcs	r2, #64	; 0x40
 801097e:	4601      	mov	r1, r0
 8010980:	4804      	ldr	r0, [pc, #16]	; (8010994 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x28>)
 8010982:	9200      	str	r2, [sp, #0]
 8010984:	6800      	ldr	r0, [r0, #0]
 8010986:	2215      	movs	r2, #21
 8010988:	f7ff fe5e 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801098c:	b005      	add	sp, #20
 801098e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010992:	bf00      	nop
 8010994:	200093e8 	andcs	r9, r0, r8, ror #7

08010998 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8010998:	f1a0 0004 	sub.w	r0, r0, #4
 801099c:	e7e6      	b.n	801096c <StoreNetwork::SaveHostName(char const*, unsigned int)>
 801099e:	bf00      	nop

080109a0 <StoreNetwork::~StoreNetwork()>:
 80109a0:	b510      	push	{r4, lr}
 80109a2:	4604      	mov	r4, r0
 80109a4:	f003 fdc2 	bl	801452c <operator delete(void*)>
 80109a8:	4620      	mov	r0, r4
 80109aa:	bd10      	pop	{r4, pc}

080109ac <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 80109ac:	f1a0 0004 	sub.w	r0, r0, #4
 80109b0:	e7f6      	b.n	80109a0 <StoreNetwork::~StoreNetwork()>
	...

080109b4 <StoreNetwork::Copy(networkparams::Params*)>:
 80109b4:	b507      	push	{r0, r1, r2, lr}
 80109b6:	2301      	movs	r3, #1
 80109b8:	460a      	mov	r2, r1
 80109ba:	2100      	movs	r1, #0
 80109bc:	e9cd 1300 	strd	r1, r3, [sp]
 80109c0:	4803      	ldr	r0, [pc, #12]	; (80109d0 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 80109c2:	235e      	movs	r3, #94	; 0x5e
 80109c4:	6800      	ldr	r0, [r0, #0]
 80109c6:	f7ff fe7f 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80109ca:	b003      	add	sp, #12
 80109cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80109d0:	200093e8 	andcs	r9, r0, r8, ror #7

080109d4 <StoreNetwork::StoreNetwork()>:
 80109d4:	4a03      	ldr	r2, [pc, #12]	; (80109e4 <StoreNetwork::StoreNetwork()+0x10>)
 80109d6:	6002      	str	r2, [r0, #0]
 80109d8:	322c      	adds	r2, #44	; 0x2c
 80109da:	6042      	str	r2, [r0, #4]
 80109dc:	4a02      	ldr	r2, [pc, #8]	; (80109e8 <StoreNetwork::StoreNetwork()+0x14>)
 80109de:	6010      	str	r0, [r2, #0]
 80109e0:	4770      	bx	lr
 80109e2:	bf00      	nop
 80109e4:	080194e0 	stmdaeq	r1, {r5, r6, r7, sl, ip, pc}
 80109e8:	200093f8 	strdcs	r9, [r0], -r8

080109ec <StoreRDMDevice::~StoreRDMDevice()>:
 80109ec:	4770      	bx	lr

080109ee <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80109ee:	3804      	subs	r0, #4
 80109f0:	4770      	bx	lr
	...

080109f4 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 80109f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80109f6:	2200      	movs	r2, #0
 80109f8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80109fc:	460b      	mov	r3, r1
 80109fe:	4805      	ldr	r0, [pc, #20]	; (8010a14 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 8010a00:	2129      	movs	r1, #41	; 0x29
 8010a02:	9100      	str	r1, [sp, #0]
 8010a04:	6800      	ldr	r0, [r0, #0]
 8010a06:	210b      	movs	r1, #11
 8010a08:	f7ff fe1e 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010a0c:	b005      	add	sp, #20
 8010a0e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010a12:	bf00      	nop
 8010a14:	200093e8 	andcs	r9, r0, r8, ror #7

08010a18 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8010a18:	b570      	push	{r4, r5, r6, lr}
 8010a1a:	4d0d      	ldr	r5, [pc, #52]	; (8010a50 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8010a1c:	b086      	sub	sp, #24
 8010a1e:	2401      	movs	r4, #1
 8010a20:	2600      	movs	r6, #0
 8010a22:	6828      	ldr	r0, [r5, #0]
 8010a24:	f88d 2017 	strb.w	r2, [sp, #23]
 8010a28:	460b      	mov	r3, r1
 8010a2a:	9200      	str	r2, [sp, #0]
 8010a2c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8010a30:	2204      	movs	r2, #4
 8010a32:	210b      	movs	r1, #11
 8010a34:	f7ff fe08 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010a38:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8010a3c:	6828      	ldr	r0, [r5, #0]
 8010a3e:	9400      	str	r4, [sp, #0]
 8010a40:	f10d 0317 	add.w	r3, sp, #23
 8010a44:	2224      	movs	r2, #36	; 0x24
 8010a46:	210b      	movs	r1, #11
 8010a48:	f7ff fdfe 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010a4c:	b006      	add	sp, #24
 8010a4e:	bd70      	pop	{r4, r5, r6, pc}
 8010a50:	200093e8 	andcs	r9, r0, r8, ror #7

08010a54 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8010a54:	f1a0 0004 	sub.w	r0, r0, #4
 8010a58:	e7de      	b.n	8010a18 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8010a5a:	bf00      	nop

08010a5c <StoreRDMDevice::~StoreRDMDevice()>:
 8010a5c:	b510      	push	{r4, lr}
 8010a5e:	4604      	mov	r4, r0
 8010a60:	f003 fd64 	bl	801452c <operator delete(void*)>
 8010a64:	4620      	mov	r0, r4
 8010a66:	bd10      	pop	{r4, pc}

08010a68 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8010a68:	f1a0 0004 	sub.w	r0, r0, #4
 8010a6c:	e7f6      	b.n	8010a5c <StoreRDMDevice::~StoreRDMDevice()>
	...

08010a70 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8010a70:	b507      	push	{r0, r1, r2, lr}
 8010a72:	2300      	movs	r3, #0
 8010a74:	460a      	mov	r2, r1
 8010a76:	2101      	movs	r1, #1
 8010a78:	e9cd 3100 	strd	r3, r1, [sp]
 8010a7c:	4804      	ldr	r0, [pc, #16]	; (8010a90 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 8010a7e:	2329      	movs	r3, #41	; 0x29
 8010a80:	6800      	ldr	r0, [r0, #0]
 8010a82:	210b      	movs	r1, #11
 8010a84:	f7ff fe20 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8010a88:	b003      	add	sp, #12
 8010a8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8010a8e:	bf00      	nop
 8010a90:	200093e8 	andcs	r9, r0, r8, ror #7

08010a94 <StoreRDMDevice::StoreRDMDevice()>:
 8010a94:	4a03      	ldr	r2, [pc, #12]	; (8010aa4 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8010a96:	6002      	str	r2, [r0, #0]
 8010a98:	321c      	adds	r2, #28
 8010a9a:	6042      	str	r2, [r0, #4]
 8010a9c:	4a02      	ldr	r2, [pc, #8]	; (8010aa8 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8010a9e:	6010      	str	r0, [r2, #0]
 8010aa0:	4770      	bx	lr
 8010aa2:	bf00      	nop
 8010aa4:	08019530 	stmdaeq	r1, {r4, r5, r8, sl, ip, pc}
 8010aa8:	200093fc 	strdcs	r9, [r0], -ip

08010aac <StoreRemoteConfig::~StoreRemoteConfig()>:
 8010aac:	4770      	bx	lr
	...

08010ab0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8010ab0:	b507      	push	{r0, r1, r2, lr}
 8010ab2:	2300      	movs	r3, #0
 8010ab4:	460a      	mov	r2, r1
 8010ab6:	2101      	movs	r1, #1
 8010ab8:	e9cd 3100 	strd	r3, r1, [sp]
 8010abc:	4804      	ldr	r0, [pc, #16]	; (8010ad0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 8010abe:	2320      	movs	r3, #32
 8010ac0:	6800      	ldr	r0, [r0, #0]
 8010ac2:	210c      	movs	r1, #12
 8010ac4:	f7ff fe00 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8010ac8:	b003      	add	sp, #12
 8010aca:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ace:	bf00      	nop
 8010ad0:	200093e8 	andcs	r9, r0, r8, ror #7

08010ad4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8010ad4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010ad6:	2200      	movs	r2, #0
 8010ad8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010adc:	460b      	mov	r3, r1
 8010ade:	4805      	ldr	r0, [pc, #20]	; (8010af4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8010ae0:	2120      	movs	r1, #32
 8010ae2:	9100      	str	r1, [sp, #0]
 8010ae4:	6800      	ldr	r0, [r0, #0]
 8010ae6:	210c      	movs	r1, #12
 8010ae8:	f7ff fdae 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010aec:	b005      	add	sp, #20
 8010aee:	f85d fb04 	ldr.w	pc, [sp], #4
 8010af2:	bf00      	nop
 8010af4:	200093e8 	andcs	r9, r0, r8, ror #7

08010af8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8010af8:	b510      	push	{r4, lr}
 8010afa:	4604      	mov	r4, r0
 8010afc:	f003 fd16 	bl	801452c <operator delete(void*)>
 8010b00:	4620      	mov	r0, r4
 8010b02:	bd10      	pop	{r4, pc}

08010b04 <StoreRemoteConfig::StoreRemoteConfig()>:
 8010b04:	4a02      	ldr	r2, [pc, #8]	; (8010b10 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 8010b06:	6002      	str	r2, [r0, #0]
 8010b08:	4a02      	ldr	r2, [pc, #8]	; (8010b14 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 8010b0a:	6010      	str	r0, [r2, #0]
 8010b0c:	4770      	bx	lr
 8010b0e:	bf00      	nop
 8010b10:	08019560 	stmdaeq	r1, {r5, r6, r8, sl, ip, pc}
 8010b14:	20009400 	andcs	r9, r0, r0, lsl #8

08010b18 <StorePixelDmx::~StorePixelDmx()>:
 8010b18:	4770      	bx	lr

08010b1a <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8010b1a:	3804      	subs	r0, #4
 8010b1c:	4770      	bx	lr
	...

08010b20 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 8010b20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010b22:	2200      	movs	r2, #0
 8010b24:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010b28:	460b      	mov	r3, r1
 8010b2a:	4805      	ldr	r0, [pc, #20]	; (8010b40 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8010b2c:	2136      	movs	r1, #54	; 0x36
 8010b2e:	9100      	str	r1, [sp, #0]
 8010b30:	6800      	ldr	r0, [r0, #0]
 8010b32:	2103      	movs	r1, #3
 8010b34:	f7ff fd88 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010b38:	b005      	add	sp, #20
 8010b3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8010b3e:	bf00      	nop
 8010b40:	200093e8 	andcs	r9, r0, r8, ror #7

08010b44 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8010b44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010b46:	2304      	movs	r3, #4
 8010b48:	2200      	movs	r2, #0
 8010b4a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010b4e:	4807      	ldr	r0, [pc, #28]	; (8010b6c <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 8010b50:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010b54:	2302      	movs	r3, #2
 8010b56:	9300      	str	r3, [sp, #0]
 8010b58:	6800      	ldr	r0, [r0, #0]
 8010b5a:	f10d 0316 	add.w	r3, sp, #22
 8010b5e:	2207      	movs	r2, #7
 8010b60:	2103      	movs	r1, #3
 8010b62:	f7ff fd71 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010b66:	b007      	add	sp, #28
 8010b68:	f85d fb04 	ldr.w	pc, [sp], #4
 8010b6c:	200093e8 	andcs	r9, r0, r8, ror #7

08010b70 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8010b70:	f1a0 0004 	sub.w	r0, r0, #4
 8010b74:	e7e6      	b.n	8010b44 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 8010b76:	bf00      	nop

08010b78 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8010b78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010b7a:	2308      	movs	r3, #8
 8010b7c:	2200      	movs	r2, #0
 8010b7e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010b82:	4807      	ldr	r0, [pc, #28]	; (8010ba0 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 8010b84:	f88d 1017 	strb.w	r1, [sp, #23]
 8010b88:	2301      	movs	r3, #1
 8010b8a:	9300      	str	r3, [sp, #0]
 8010b8c:	6800      	ldr	r0, [r0, #0]
 8010b8e:	f10d 0317 	add.w	r3, sp, #23
 8010b92:	2210      	movs	r2, #16
 8010b94:	2103      	movs	r1, #3
 8010b96:	f7ff fd57 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010b9a:	b007      	add	sp, #28
 8010b9c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ba0:	200093e8 	andcs	r9, r0, r8, ror #7

08010ba4 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 8010ba4:	f1a0 0004 	sub.w	r0, r0, #4
 8010ba8:	e7e6      	b.n	8010b78 <StorePixelDmx::SaveTestPattern(unsigned char)>
 8010baa:	bf00      	nop

08010bac <StorePixelDmx::SaveMap(unsigned char)>:
 8010bac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010bae:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010bb2:	2200      	movs	r2, #0
 8010bb4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010bb8:	4807      	ldr	r0, [pc, #28]	; (8010bd8 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 8010bba:	f88d 1017 	strb.w	r1, [sp, #23]
 8010bbe:	2301      	movs	r3, #1
 8010bc0:	9300      	str	r3, [sp, #0]
 8010bc2:	6800      	ldr	r0, [r0, #0]
 8010bc4:	f10d 0317 	add.w	r3, sp, #23
 8010bc8:	2213      	movs	r2, #19
 8010bca:	2103      	movs	r1, #3
 8010bcc:	f7ff fd3c 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010bd0:	b007      	add	sp, #28
 8010bd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8010bd6:	bf00      	nop
 8010bd8:	200093e8 	andcs	r9, r0, r8, ror #7

08010bdc <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 8010bdc:	f1a0 0004 	sub.w	r0, r0, #4
 8010be0:	e7e4      	b.n	8010bac <StorePixelDmx::SaveMap(unsigned char)>
 8010be2:	bf00      	nop

08010be4 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8010be4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010be6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010bea:	2200      	movs	r2, #0
 8010bec:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010bf0:	4807      	ldr	r0, [pc, #28]	; (8010c10 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 8010bf2:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010bf6:	2302      	movs	r3, #2
 8010bf8:	9300      	str	r3, [sp, #0]
 8010bfa:	6800      	ldr	r0, [r0, #0]
 8010bfc:	f10d 0316 	add.w	r3, sp, #22
 8010c00:	2211      	movs	r2, #17
 8010c02:	2103      	movs	r1, #3
 8010c04:	f7ff fd20 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c08:	b007      	add	sp, #28
 8010c0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c0e:	bf00      	nop
 8010c10:	200093e8 	andcs	r9, r0, r8, ror #7

08010c14 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8010c14:	f1a0 0004 	sub.w	r0, r0, #4
 8010c18:	e7e4      	b.n	8010be4 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 8010c1a:	bf00      	nop

08010c1c <StorePixelDmx::SaveCount(unsigned short)>:
 8010c1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c1e:	2302      	movs	r3, #2
 8010c20:	2200      	movs	r2, #0
 8010c22:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010c26:	4807      	ldr	r0, [pc, #28]	; (8010c44 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8010c28:	9300      	str	r3, [sp, #0]
 8010c2a:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010c2e:	6800      	ldr	r0, [r0, #0]
 8010c30:	f10d 0316 	add.w	r3, sp, #22
 8010c34:	2205      	movs	r2, #5
 8010c36:	2103      	movs	r1, #3
 8010c38:	f7ff fd06 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c3c:	b007      	add	sp, #28
 8010c3e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c42:	bf00      	nop
 8010c44:	200093e8 	andcs	r9, r0, r8, ror #7

08010c48 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8010c48:	f1a0 0004 	sub.w	r0, r0, #4
 8010c4c:	e7e6      	b.n	8010c1c <StorePixelDmx::SaveCount(unsigned short)>
 8010c4e:	bf00      	nop

08010c50 <StorePixelDmx::SaveType(unsigned char)>:
 8010c50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c52:	2301      	movs	r3, #1
 8010c54:	2200      	movs	r2, #0
 8010c56:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010c5a:	4807      	ldr	r0, [pc, #28]	; (8010c78 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8010c5c:	9300      	str	r3, [sp, #0]
 8010c5e:	f88d 1017 	strb.w	r1, [sp, #23]
 8010c62:	6800      	ldr	r0, [r0, #0]
 8010c64:	f10d 0317 	add.w	r3, sp, #23
 8010c68:	2204      	movs	r2, #4
 8010c6a:	2103      	movs	r1, #3
 8010c6c:	f7ff fcec 	bl	8010648 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c70:	b007      	add	sp, #28
 8010c72:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c76:	bf00      	nop
 8010c78:	200093e8 	andcs	r9, r0, r8, ror #7

08010c7c <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8010c7c:	f1a0 0004 	sub.w	r0, r0, #4
 8010c80:	e7e6      	b.n	8010c50 <StorePixelDmx::SaveType(unsigned char)>
 8010c82:	bf00      	nop

08010c84 <StorePixelDmx::~StorePixelDmx()>:
 8010c84:	b510      	push	{r4, lr}
 8010c86:	4604      	mov	r4, r0
 8010c88:	f003 fc50 	bl	801452c <operator delete(void*)>
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	bd10      	pop	{r4, pc}

08010c90 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8010c90:	f1a0 0004 	sub.w	r0, r0, #4
 8010c94:	e7f6      	b.n	8010c84 <StorePixelDmx::~StorePixelDmx()>
	...

08010c98 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 8010c98:	b507      	push	{r0, r1, r2, lr}
 8010c9a:	2300      	movs	r3, #0
 8010c9c:	460a      	mov	r2, r1
 8010c9e:	2101      	movs	r1, #1
 8010ca0:	e9cd 3100 	strd	r3, r1, [sp]
 8010ca4:	4804      	ldr	r0, [pc, #16]	; (8010cb8 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 8010ca6:	2336      	movs	r3, #54	; 0x36
 8010ca8:	6800      	ldr	r0, [r0, #0]
 8010caa:	2103      	movs	r1, #3
 8010cac:	f7ff fd0c 	bl	80106c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8010cb0:	b003      	add	sp, #12
 8010cb2:	f85d fb04 	ldr.w	pc, [sp], #4
 8010cb6:	bf00      	nop
 8010cb8:	200093e8 	andcs	r9, r0, r8, ror #7

08010cbc <StorePixelDmx::StorePixelDmx()>:
 8010cbc:	4a03      	ldr	r2, [pc, #12]	; (8010ccc <StorePixelDmx::StorePixelDmx()+0x10>)
 8010cbe:	6002      	str	r2, [r0, #0]
 8010cc0:	3230      	adds	r2, #48	; 0x30
 8010cc2:	6042      	str	r2, [r0, #4]
 8010cc4:	4a02      	ldr	r2, [pc, #8]	; (8010cd0 <StorePixelDmx::StorePixelDmx()+0x14>)
 8010cc6:	6010      	str	r0, [r2, #0]
 8010cc8:	4770      	bx	lr
 8010cca:	bf00      	nop
 8010ccc:	08019578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, pc}
 8010cd0:	20009404 	andcs	r9, r0, r4, lsl #8

08010cd4 <HAL_I2C::Setup()>:
 8010cd4:	b510      	push	{r4, lr}
 8010cd6:	4604      	mov	r4, r0
 8010cd8:	7800      	ldrb	r0, [r0, #0]
 8010cda:	f004 fd7d 	bl	80157d8 <gd32_i2c_set_address>
 8010cde:	6860      	ldr	r0, [r4, #4]
 8010ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ce4:	f004 bd70 	b.w	80157c8 <gd32_i2c_set_baudrate>

08010ce8 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>:
 8010ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cec:	b08d      	sub	sp, #52	; 0x34
 8010cee:	4606      	mov	r6, r0
 8010cf0:	9301      	str	r3, [sp, #4]
 8010cf2:	7a03      	ldrb	r3, [r0, #8]
 8010cf4:	460c      	mov	r4, r1
 8010cf6:	4617      	mov	r7, r2
 8010cf8:	2b00      	cmp	r3, #0
 8010cfa:	d13c      	bne.n	8010d76 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8010cfc:	b00d      	add	sp, #52	; 0x34
 8010cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d02:	2101      	movs	r1, #1
 8010d04:	4640      	mov	r0, r8
 8010d06:	f004 fdd3 	bl	80158b0 <gd32_i2c_read>
 8010d0a:	2800      	cmp	r0, #0
 8010d0c:	d1f9      	bne.n	8010d02 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8010d0e:	7a73      	ldrb	r3, [r6, #9]
 8010d10:	f8cd 9008 	str.w	r9, [sp, #8]
 8010d14:	2d1d      	cmp	r5, #29
 8010d16:	bf8c      	ite	hi
 8010d18:	a902      	addhi	r1, sp, #8
 8010d1a:	a901      	addls	r1, sp, #4
 8010d1c:	fbb4 f2f3 	udiv	r2, r4, r3
 8010d20:	fb03 4212 	mls	r2, r3, r2, r4
 8010d24:	1a9b      	subs	r3, r3, r2
 8010d26:	680a      	ldr	r2, [r1, #0]
 8010d28:	9303      	str	r3, [sp, #12]
 8010d2a:	4293      	cmp	r3, r2
 8010d2c:	bf98      	it	ls
 8010d2e:	4641      	movls	r1, r8
 8010d30:	ba63      	rev16	r3, r4
 8010d32:	f8d1 a000 	ldr.w	sl, [r1]
 8010d36:	f8ad 3010 	strh.w	r3, [sp, #16]
 8010d3a:	eb07 030b 	add.w	r3, r7, fp
 8010d3e:	f10d 0211 	add.w	r2, sp, #17
 8010d42:	eb03 010a 	add.w	r1, r3, sl
 8010d46:	428b      	cmp	r3, r1
 8010d48:	d110      	bne.n	8010d6c <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x84>
 8010d4a:	4630      	mov	r0, r6
 8010d4c:	f7ff ffc2 	bl	8010cd4 <HAL_I2C::Setup()>
 8010d50:	eba5 050a 	sub.w	r5, r5, sl
 8010d54:	f10a 0102 	add.w	r1, sl, #2
 8010d58:	a804      	add	r0, sp, #16
 8010d5a:	f004 fd43 	bl	80157e4 <gd32_i2c_write>
 8010d5e:	4454      	add	r4, sl
 8010d60:	9501      	str	r5, [sp, #4]
 8010d62:	44d3      	add	fp, sl
 8010d64:	9d01      	ldr	r5, [sp, #4]
 8010d66:	2d00      	cmp	r5, #0
 8010d68:	d1cb      	bne.n	8010d02 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8010d6a:	e7c7      	b.n	8010cfc <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x14>
 8010d6c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8010d70:	f802 0f01 	strb.w	r0, [r2, #1]!
 8010d74:	e7e7      	b.n	8010d46 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x5e>
 8010d76:	f04f 0b00 	mov.w	fp, #0
 8010d7a:	f10d 080c 	add.w	r8, sp, #12
 8010d7e:	f04f 091e 	mov.w	r9, #30
 8010d82:	e7ef      	b.n	8010d64 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x7c>

08010d84 <FlashRom::FlashRom()>:
 8010d84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d86:	4604      	mov	r4, r0
 8010d88:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010d8c:	2050      	movs	r0, #80	; 0x50
 8010d8e:	4d13      	ldr	r5, [pc, #76]	; (8010ddc <FlashRom::FlashRom()+0x58>)
 8010d90:	8123      	strh	r3, [r4, #8]
 8010d92:	7020      	strb	r0, [r4, #0]
 8010d94:	6065      	str	r5, [r4, #4]
 8010d96:	f004 fd1f 	bl	80157d8 <gd32_i2c_set_address>
 8010d9a:	4628      	mov	r0, r5
 8010d9c:	f004 fd14 	bl	80157c8 <gd32_i2c_set_baudrate>
 8010da0:	2101      	movs	r1, #1
 8010da2:	f10d 0007 	add.w	r0, sp, #7
 8010da6:	f004 fd83 	bl	80158b0 <gd32_i2c_read>
 8010daa:	4a0d      	ldr	r2, [pc, #52]	; (8010de0 <FlashRom::FlashRom()+0x5c>)
 8010dac:	2800      	cmp	r0, #0
 8010dae:	bf0c      	ite	eq
 8010db0:	2301      	moveq	r3, #1
 8010db2:	2300      	movne	r3, #0
 8010db4:	7223      	strb	r3, [r4, #8]
 8010db6:	6014      	str	r4, [r2, #0]
 8010db8:	72a3      	strb	r3, [r4, #10]
 8010dba:	d007      	beq.n	8010dcc <FlashRom::FlashRom()+0x48>
 8010dbc:	7822      	ldrb	r2, [r4, #0]
 8010dbe:	4909      	ldr	r1, [pc, #36]	; (8010de4 <FlashRom::FlashRom()+0x60>)
 8010dc0:	4809      	ldr	r0, [pc, #36]	; (8010de8 <FlashRom::FlashRom()+0x64>)
 8010dc2:	f7f9 fa85 	bl	800a2d0 <printf>
 8010dc6:	4620      	mov	r0, r4
 8010dc8:	b003      	add	sp, #12
 8010dca:	bd30      	pop	{r4, r5, pc}
 8010dcc:	4905      	ldr	r1, [pc, #20]	; (8010de4 <FlashRom::FlashRom()+0x60>)
 8010dce:	4807      	ldr	r0, [pc, #28]	; (8010dec <FlashRom::FlashRom()+0x68>)
 8010dd0:	2304      	movs	r3, #4
 8010dd2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010dd6:	f7f9 fa7b 	bl	800a2d0 <printf>
 8010dda:	e7f4      	b.n	8010dc6 <FlashRom::FlashRom()+0x42>
 8010ddc:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010de0:	20009408 	andcs	r9, r0, r8, lsl #8
 8010de4:	080195c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, ip, pc}
 8010de8:	080195d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, ip, pc}
 8010dec:	080195dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, ip, pc}

08010df0 <FlashRom::GetSize() const>:
 8010df0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8010df4:	4770      	bx	lr

08010df6 <FlashRom::GetSectorSize() const>:
 8010df6:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8010dfa:	4770      	bx	lr

08010dfc <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 8010dfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010dfe:	461e      	mov	r6, r3
 8010e00:	7a03      	ldrb	r3, [r0, #8]
 8010e02:	4604      	mov	r4, r0
 8010e04:	460d      	mov	r5, r1
 8010e06:	4617      	mov	r7, r2
 8010e08:	b1b3      	cbz	r3, 8010e38 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x3c>
 8010e0a:	2101      	movs	r1, #1
 8010e0c:	a801      	add	r0, sp, #4
 8010e0e:	f004 fd4f 	bl	80158b0 <gd32_i2c_read>
 8010e12:	2800      	cmp	r0, #0
 8010e14:	d1f9      	bne.n	8010e0a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0xe>
 8010e16:	4620      	mov	r0, r4
 8010e18:	ba6d      	rev16	r5, r5
 8010e1a:	f8ad 5004 	strh.w	r5, [sp, #4]
 8010e1e:	f7ff ff59 	bl	8010cd4 <HAL_I2C::Setup()>
 8010e22:	2102      	movs	r1, #2
 8010e24:	a801      	add	r0, sp, #4
 8010e26:	f004 fcdd 	bl	80157e4 <gd32_i2c_write>
 8010e2a:	4620      	mov	r0, r4
 8010e2c:	f7ff ff52 	bl	8010cd4 <HAL_I2C::Setup()>
 8010e30:	4639      	mov	r1, r7
 8010e32:	4630      	mov	r0, r6
 8010e34:	f004 fd3c 	bl	80158b0 <gd32_i2c_read>
 8010e38:	9b08      	ldr	r3, [sp, #32]
 8010e3a:	2200      	movs	r2, #0
 8010e3c:	2001      	movs	r0, #1
 8010e3e:	601a      	str	r2, [r3, #0]
 8010e40:	b003      	add	sp, #12
 8010e42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010e44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 8010e44:	2200      	movs	r2, #0
 8010e46:	601a      	str	r2, [r3, #0]
 8010e48:	2001      	movs	r0, #1
 8010e4a:	4770      	bx	lr

08010e4c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8010e4c:	b510      	push	{r4, lr}
 8010e4e:	4614      	mov	r4, r2
 8010e50:	461a      	mov	r2, r3
 8010e52:	4623      	mov	r3, r4
 8010e54:	f7ff ff48 	bl	8010ce8 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>
 8010e58:	9b02      	ldr	r3, [sp, #8]
 8010e5a:	2200      	movs	r2, #0
 8010e5c:	601a      	str	r2, [r3, #0]
 8010e5e:	2001      	movs	r0, #1
 8010e60:	bd10      	pop	{r4, pc}
	...

08010e64 <net_set_ip>:
 8010e64:	b510      	push	{r4, lr}
 8010e66:	4c05      	ldr	r4, [pc, #20]	; (8010e7c <net_set_ip+0x18>)
 8010e68:	6020      	str	r0, [r4, #0]
 8010e6a:	4621      	mov	r1, r4
 8010e6c:	4804      	ldr	r0, [pc, #16]	; (8010e80 <net_set_ip+0x1c>)
 8010e6e:	f7f7 fa53 	bl	8008318 <arp_init>
 8010e72:	4620      	mov	r0, r4
 8010e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e78:	f002 b8a8 	b.w	8012fcc <ip_set_ip>
 8010e7c:	2000940c 	andcs	r9, r0, ip, lsl #8
 8010e80:	20009418 	andcs	r9, r0, r8, lsl r4

08010e84 <net_set_dhcp>:
 8010e84:	b570      	push	{r4, r5, r6, lr}
 8010e86:	2400      	movs	r4, #0
 8010e88:	7014      	strb	r4, [r2, #0]
 8010e8a:	4605      	mov	r5, r0
 8010e8c:	4616      	mov	r6, r2
 8010e8e:	4810      	ldr	r0, [pc, #64]	; (8010ed0 <net_set_dhcp+0x4c>)
 8010e90:	460a      	mov	r2, r1
 8010e92:	4910      	ldr	r1, [pc, #64]	; (8010ed4 <net_set_dhcp+0x50>)
 8010e94:	f001 fe80 	bl	8012b98 <dhcp_client>
 8010e98:	42a0      	cmp	r0, r4
 8010e9a:	da17      	bge.n	8010ecc <net_set_dhcp+0x48>
 8010e9c:	480d      	ldr	r0, [pc, #52]	; (8010ed4 <net_set_dhcp+0x50>)
 8010e9e:	f000 f859 	bl	8010f54 <rfc3927>
 8010ea2:	7030      	strb	r0, [r6, #0]
 8010ea4:	490b      	ldr	r1, [pc, #44]	; (8010ed4 <net_set_dhcp+0x50>)
 8010ea6:	480a      	ldr	r0, [pc, #40]	; (8010ed0 <net_set_dhcp+0x4c>)
 8010ea8:	f7f7 fa36 	bl	8008318 <arp_init>
 8010eac:	4809      	ldr	r0, [pc, #36]	; (8010ed4 <net_set_dhcp+0x50>)
 8010eae:	f002 f88d 	bl	8012fcc <ip_set_ip>
 8010eb2:	4a08      	ldr	r2, [pc, #32]	; (8010ed4 <net_set_dhcp+0x50>)
 8010eb4:	1e6b      	subs	r3, r5, #1
 8010eb6:	350b      	adds	r5, #11
 8010eb8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8010ebc:	f803 1f01 	strb.w	r1, [r3, #1]!
 8010ec0:	42ab      	cmp	r3, r5
 8010ec2:	d1f9      	bne.n	8010eb8 <net_set_dhcp+0x34>
 8010ec4:	4b04      	ldr	r3, [pc, #16]	; (8010ed8 <net_set_dhcp+0x54>)
 8010ec6:	4620      	mov	r0, r4
 8010ec8:	701c      	strb	r4, [r3, #0]
 8010eca:	bd70      	pop	{r4, r5, r6, pc}
 8010ecc:	2401      	movs	r4, #1
 8010ece:	e7e9      	b.n	8010ea4 <net_set_dhcp+0x20>
 8010ed0:	20009418 	andcs	r9, r0, r8, lsl r4
 8010ed4:	2000940c 	andcs	r9, r0, ip, lsl #8
 8010ed8:	2000941e 	andcs	r9, r0, lr, lsl r4

08010edc <net_dhcp_release>:
 8010edc:	b508      	push	{r3, lr}
 8010ede:	f001 ff63 	bl	8012da8 <dhcp_client_release>
 8010ee2:	4b02      	ldr	r3, [pc, #8]	; (8010eec <net_dhcp_release+0x10>)
 8010ee4:	2200      	movs	r2, #0
 8010ee6:	701a      	strb	r2, [r3, #0]
 8010ee8:	bd08      	pop	{r3, pc}
 8010eea:	bf00      	nop
 8010eec:	2000941e 	andcs	r9, r0, lr, lsl r4

08010ef0 <net_set_zeroconf>:
 8010ef0:	b538      	push	{r3, r4, r5, lr}
 8010ef2:	4604      	mov	r4, r0
 8010ef4:	480c      	ldr	r0, [pc, #48]	; (8010f28 <net_set_zeroconf+0x38>)
 8010ef6:	f000 f82d 	bl	8010f54 <rfc3927>
 8010efa:	4605      	mov	r5, r0
 8010efc:	b190      	cbz	r0, 8010f24 <net_set_zeroconf+0x34>
 8010efe:	490a      	ldr	r1, [pc, #40]	; (8010f28 <net_set_zeroconf+0x38>)
 8010f00:	480a      	ldr	r0, [pc, #40]	; (8010f2c <net_set_zeroconf+0x3c>)
 8010f02:	f7f7 fa09 	bl	8008318 <arp_init>
 8010f06:	4808      	ldr	r0, [pc, #32]	; (8010f28 <net_set_zeroconf+0x38>)
 8010f08:	f002 f860 	bl	8012fcc <ip_set_ip>
 8010f0c:	4a06      	ldr	r2, [pc, #24]	; (8010f28 <net_set_zeroconf+0x38>)
 8010f0e:	1e63      	subs	r3, r4, #1
 8010f10:	340b      	adds	r4, #11
 8010f12:	f812 1b01 	ldrb.w	r1, [r2], #1
 8010f16:	f803 1f01 	strb.w	r1, [r3, #1]!
 8010f1a:	42a3      	cmp	r3, r4
 8010f1c:	d1f9      	bne.n	8010f12 <net_set_zeroconf+0x22>
 8010f1e:	4b04      	ldr	r3, [pc, #16]	; (8010f30 <net_set_zeroconf+0x40>)
 8010f20:	2200      	movs	r2, #0
 8010f22:	701a      	strb	r2, [r3, #0]
 8010f24:	4628      	mov	r0, r5
 8010f26:	bd38      	pop	{r3, r4, r5, pc}
 8010f28:	2000940c 	andcs	r9, r0, ip, lsl #8
 8010f2c:	20009418 	andcs	r9, r0, r8, lsl r4
 8010f30:	2000941e 	andcs	r9, r0, lr, lsl r4

08010f34 <net_timers_run>:
 8010f34:	4b05      	ldr	r3, [pc, #20]	; (8010f4c <net_timers_run+0x18>)
 8010f36:	4a06      	ldr	r2, [pc, #24]	; (8010f50 <net_timers_run+0x1c>)
 8010f38:	681b      	ldr	r3, [r3, #0]
 8010f3a:	6811      	ldr	r1, [r2, #0]
 8010f3c:	4299      	cmp	r1, r3
 8010f3e:	d803      	bhi.n	8010f48 <net_timers_run+0x14>
 8010f40:	3364      	adds	r3, #100	; 0x64
 8010f42:	6013      	str	r3, [r2, #0]
 8010f44:	f001 bfbc 	b.w	8012ec0 <igmp_timer>
 8010f48:	4770      	bx	lr
 8010f4a:	bf00      	nop
 8010f4c:	2000fefc 	strdcs	pc, [r0], -ip
 8010f50:	20009424 	andcs	r9, r0, r4, lsr #8

08010f54 <rfc3927>:
 8010f54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f58:	4b19      	ldr	r3, [pc, #100]	; (8010fc0 <rfc3927+0x6c>)
 8010f5a:	4f1a      	ldr	r7, [pc, #104]	; (8010fc4 <rfc3927+0x70>)
 8010f5c:	791a      	ldrb	r2, [r3, #4]
 8010f5e:	78dc      	ldrb	r4, [r3, #3]
 8010f60:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8010fc8 <rfc3927+0x74>
 8010f64:	f8d7 9000 	ldr.w	r9, [r7]
 8010f68:	f8df b060 	ldr.w	fp, [pc, #96]	; 8010fcc <rfc3927+0x78>
 8010f6c:	f8df a060 	ldr.w	sl, [pc, #96]	; 8010fd0 <rfc3927+0x7c>
 8010f70:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 8010f74:	4606      	mov	r6, r0
 8010f76:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8010f7a:	25ff      	movs	r5, #255	; 0xff
 8010f7c:	4659      	mov	r1, fp
 8010f7e:	4620      	mov	r0, r4
 8010f80:	f001 fcfe 	bl	8012980 <arp_cache_lookup>
 8010f84:	b190      	cbz	r0, 8010fac <rfc3927+0x58>
 8010f86:	ba24      	rev	r4, r4
 8010f88:	3401      	adds	r4, #1
 8010f8a:	3d01      	subs	r5, #1
 8010f8c:	ba24      	rev	r4, r4
 8010f8e:	b2ad      	uxth	r5, r5
 8010f90:	4554      	cmp	r4, sl
 8010f92:	bf08      	it	eq
 8010f94:	4644      	moveq	r4, r8
 8010f96:	b18d      	cbz	r5, 8010fbc <rfc3927+0x68>
 8010f98:	683b      	ldr	r3, [r7, #0]
 8010f9a:	eba3 0309 	sub.w	r3, r3, r9
 8010f9e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010fa2:	d3eb      	bcc.n	8010f7c <rfc3927+0x28>
 8010fa4:	2400      	movs	r4, #0
 8010fa6:	4623      	mov	r3, r4
 8010fa8:	4620      	mov	r0, r4
 8010faa:	e002      	b.n	8010fb2 <rfc3927+0x5e>
 8010fac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010fb0:	2001      	movs	r0, #1
 8010fb2:	e9c6 3401 	strd	r3, r4, [r6, #4]
 8010fb6:	6034      	str	r4, [r6, #0]
 8010fb8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fbc:	462c      	mov	r4, r5
 8010fbe:	e7f2      	b.n	8010fa6 <rfc3927+0x52>
 8010fc0:	20009428 	andcs	r9, r0, r8, lsr #8
 8010fc4:	2000fefc 	strdcs	pc, [r0], -ip
 8010fc8:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 8010fcc:	20009430 	andcs	r9, r0, r0, lsr r4
 8010fd0:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

08010fd4 <_init_tcb>:
 8010fd4:	b510      	push	{r4, lr}
 8010fd6:	f100 0244 	add.w	r2, r0, #68	; 0x44
 8010fda:	4603      	mov	r3, r0
 8010fdc:	2400      	movs	r4, #0
 8010fde:	4293      	cmp	r3, r2
 8010fe0:	d10d      	bne.n	8010ffe <_init_tcb+0x2a>
 8010fe2:	4b08      	ldr	r3, [pc, #32]	; (8011004 <_init_tcb+0x30>)
 8010fe4:	681b      	ldr	r3, [r3, #0]
 8010fe6:	6283      	str	r3, [r0, #40]	; 0x28
 8010fe8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8010fec:	f640 3268 	movw	r2, #2920	; 0xb68
 8010ff0:	6243      	str	r3, [r0, #36]	; 0x24
 8010ff2:	2301      	movs	r3, #1
 8010ff4:	8001      	strh	r1, [r0, #0]
 8010ff6:	8702      	strh	r2, [r0, #56]	; 0x38
 8010ff8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8010ffc:	bd10      	pop	{r4, pc}
 8010ffe:	f803 4b01 	strb.w	r4, [r3], #1
 8011002:	e7ec      	b.n	8010fde <_init_tcb+0xa>
 8011004:	2000fefc 	strdcs	pc, [r0], -ip

08011008 <memcpy.isra.0>:
 8011008:	3801      	subs	r0, #1
 801100a:	440a      	add	r2, r1
 801100c:	4291      	cmp	r1, r2
 801100e:	d100      	bne.n	8011012 <memcpy.isra.0+0xa>
 8011010:	4770      	bx	lr
 8011012:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011016:	f800 3f01 	strb.w	r3, [r0, #1]!
 801101a:	e7f7      	b.n	801100c <memcpy.isra.0+0x4>

0801101c <_bswap32>:
 801101c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801101e:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 8011022:	2204      	movs	r2, #4
 8011024:	4629      	mov	r1, r5
 8011026:	4604      	mov	r4, r0
 8011028:	eb0d 0002 	add.w	r0, sp, r2
 801102c:	f7ff ffec 	bl	8011008 <memcpy.isra.0>
 8011030:	9b01      	ldr	r3, [sp, #4]
 8011032:	2204      	movs	r2, #4
 8011034:	ba1b      	rev	r3, r3
 8011036:	eb0d 0102 	add.w	r1, sp, r2
 801103a:	4628      	mov	r0, r5
 801103c:	9301      	str	r3, [sp, #4]
 801103e:	3426      	adds	r4, #38	; 0x26
 8011040:	f7ff ffe2 	bl	8011008 <memcpy.isra.0>
 8011044:	2204      	movs	r2, #4
 8011046:	eb0d 0002 	add.w	r0, sp, r2
 801104a:	4621      	mov	r1, r4
 801104c:	f7ff ffdc 	bl	8011008 <memcpy.isra.0>
 8011050:	9b01      	ldr	r3, [sp, #4]
 8011052:	2204      	movs	r2, #4
 8011054:	ba1b      	rev	r3, r3
 8011056:	eb0d 0102 	add.w	r1, sp, r2
 801105a:	4620      	mov	r0, r4
 801105c:	9301      	str	r3, [sp, #4]
 801105e:	f7ff ffd3 	bl	8011008 <memcpy.isra.0>
 8011062:	b003      	add	sp, #12
 8011064:	bd30      	pop	{r4, r5, pc}
	...

08011068 <_tcp_send_package>:
 8011068:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801106c:	7a0b      	ldrb	r3, [r1, #8]
 801106e:	4c4c      	ldr	r4, [pc, #304]	; (80111a0 <_tcp_send_package+0x138>)
 8011070:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8011072:	f013 0f02 	tst.w	r3, #2
 8011076:	4605      	mov	r5, r0
 8011078:	bf0c      	ite	eq
 801107a:	f04f 0805 	moveq.w	r8, #5
 801107e:	f04f 0806 	movne.w	r8, #6
 8011082:	460f      	mov	r7, r1
 8011084:	2206      	movs	r2, #6
 8011086:	f100 0108 	add.w	r1, r0, #8
 801108a:	4620      	mov	r0, r4
 801108c:	f7ff ffbc 	bl	8011008 <memcpy.isra.0>
 8011090:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 8011094:	f8b4 35ec 	ldrh.w	r3, [r4, #1516]	; 0x5ec
 8011098:	8263      	strh	r3, [r4, #18]
 801109a:	b2b6      	uxth	r6, r6
 801109c:	1c5a      	adds	r2, r3, #1
 801109e:	f105 0904 	add.w	r9, r5, #4
 80110a2:	f106 0314 	add.w	r3, r6, #20
 80110a6:	ba5b      	rev16	r3, r3
 80110a8:	f8a4 25ec 	strh.w	r2, [r4, #1516]	; 0x5ec
 80110ac:	4649      	mov	r1, r9
 80110ae:	2204      	movs	r2, #4
 80110b0:	f104 001e 	add.w	r0, r4, #30
 80110b4:	8223      	strh	r3, [r4, #16]
 80110b6:	f04f 0a00 	mov.w	sl, #0
 80110ba:	f7ff ffa5 	bl	8011008 <memcpy.isra.0>
 80110be:	2114      	movs	r1, #20
 80110c0:	f104 000e 	add.w	r0, r4, #14
 80110c4:	f8a4 a018 	strh.w	sl, [r4, #24]
 80110c8:	f001 ff89 	bl	8012fde <net_chksum>
 80110cc:	882b      	ldrh	r3, [r5, #0]
 80110ce:	8463      	strh	r3, [r4, #34]	; 0x22
 80110d0:	886b      	ldrh	r3, [r5, #2]
 80110d2:	84a3      	strh	r3, [r4, #36]	; 0x24
 80110d4:	683b      	ldr	r3, [r7, #0]
 80110d6:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 80110da:	ea4f 1808 	mov.w	r8, r8, lsl #4
 80110de:	687b      	ldr	r3, [r7, #4]
 80110e0:	8320      	strh	r0, [r4, #24]
 80110e2:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 80110e6:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 80110ea:	7a3b      	ldrb	r3, [r7, #8]
 80110ec:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 80110f0:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 80110f2:	8622      	strh	r2, [r4, #48]	; 0x30
 80110f4:	079b      	lsls	r3, r3, #30
 80110f6:	8baa      	ldrh	r2, [r5, #28]
 80110f8:	86a2      	strh	r2, [r4, #52]	; 0x34
 80110fa:	bf41      	itttt	mi
 80110fc:	f240 4302 	movwmi	r3, #1026	; 0x402
 8011100:	4622      	movmi	r2, r4
 8011102:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 8011104:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8011108:	bf48      	it	mi
 801110a:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 801110e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8011110:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 8011114:	bf58      	it	pl
 8011116:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 801111a:	2b00      	cmp	r3, #0
 801111c:	d13e      	bne.n	801119c <_tcp_send_package+0x134>
 801111e:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8011120:	481f      	ldr	r0, [pc, #124]	; (80111a0 <_tcp_send_package+0x138>)
 8011122:	ba5b      	rev16	r3, r3
 8011124:	8463      	strh	r3, [r4, #34]	; 0x22
 8011126:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8011128:	ba5b      	rev16	r3, r3
 801112a:	84a3      	strh	r3, [r4, #36]	; 0x24
 801112c:	f7ff ff76 	bl	801101c <_bswap32>
 8011130:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011132:	491c      	ldr	r1, [pc, #112]	; (80111a4 <_tcp_send_package+0x13c>)
 8011134:	ba5b      	rev16	r3, r3
 8011136:	8623      	strh	r3, [r4, #48]	; 0x30
 8011138:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801113a:	a801      	add	r0, sp, #4
 801113c:	ba5b      	rev16	r3, r3
 801113e:	220c      	movs	r2, #12
 8011140:	86a3      	strh	r3, [r4, #52]	; 0x34
 8011142:	f7ff ff61 	bl	8011008 <memcpy.isra.0>
 8011146:	4918      	ldr	r1, [pc, #96]	; (80111a8 <_tcp_send_package+0x140>)
 8011148:	4816      	ldr	r0, [pc, #88]	; (80111a4 <_tcp_send_package+0x13c>)
 801114a:	2204      	movs	r2, #4
 801114c:	f7ff ff5c 	bl	8011008 <memcpy.isra.0>
 8011150:	2204      	movs	r2, #4
 8011152:	4649      	mov	r1, r9
 8011154:	4815      	ldr	r0, [pc, #84]	; (80111ac <_tcp_send_package+0x144>)
 8011156:	f7ff ff57 	bl	8011008 <memcpy.isra.0>
 801115a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801115e:	83e3      	strh	r3, [r4, #30]
 8011160:	f106 010c 	add.w	r1, r6, #12
 8011164:	ba73      	rev16	r3, r6
 8011166:	480f      	ldr	r0, [pc, #60]	; (80111a4 <_tcp_send_package+0x13c>)
 8011168:	8423      	strh	r3, [r4, #32]
 801116a:	f001 ff38 	bl	8012fde <net_chksum>
 801116e:	a901      	add	r1, sp, #4
 8011170:	4605      	mov	r5, r0
 8011172:	220c      	movs	r2, #12
 8011174:	480b      	ldr	r0, [pc, #44]	; (80111a4 <_tcp_send_package+0x13c>)
 8011176:	f7ff ff47 	bl	8011008 <memcpy.isra.0>
 801117a:	4809      	ldr	r0, [pc, #36]	; (80111a0 <_tcp_send_package+0x138>)
 801117c:	8665      	strh	r5, [r4, #50]	; 0x32
 801117e:	f106 0122 	add.w	r1, r6, #34	; 0x22
 8011182:	b004      	add	sp, #16
 8011184:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011188:	f004 ba60 	b.w	801564c <emac_eth_send>
 801118c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 801118e:	5cc9      	ldrb	r1, [r1, r3]
 8011190:	54d1      	strb	r1, [r2, r3]
 8011192:	3301      	adds	r3, #1
 8011194:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 8011196:	4299      	cmp	r1, r3
 8011198:	d8f8      	bhi.n	801118c <_tcp_send_package+0x124>
 801119a:	e7c0      	b.n	801111e <_tcp_send_package+0xb6>
 801119c:	2300      	movs	r3, #0
 801119e:	e7f9      	b.n	8011194 <_tcp_send_package+0x12c>
 80111a0:	10000000 	andne	r0, r0, r0
 80111a4:	10000016 	andne	r0, r0, r6, lsl r0
 80111a8:	2000940c 	andcs	r9, r0, ip, lsl #8
 80111ac:	1000001a 	andne	r0, r0, sl, lsl r0

080111b0 <_send_reset>:
 80111b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80111b2:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80111b6:	075a      	lsls	r2, r3, #29
 80111b8:	4604      	mov	r4, r0
 80111ba:	460e      	mov	r6, r1
 80111bc:	d421      	bmi.n	8011202 <_send_reset+0x52>
 80111be:	2204      	movs	r2, #4
 80111c0:	f013 0310 	ands.w	r3, r3, #16
 80111c4:	f88d 200c 	strb.w	r2, [sp, #12]
 80111c8:	d01d      	beq.n	8011206 <_send_reset+0x56>
 80111ca:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 80111ce:	4668      	mov	r0, sp
 80111d0:	f7ff ff1a 	bl	8011008 <memcpy.isra.0>
 80111d4:	9b00      	ldr	r3, [sp, #0]
 80111d6:	9301      	str	r3, [sp, #4]
 80111d8:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80111dc:	f104 0126 	add.w	r1, r4, #38	; 0x26
 80111e0:	f3c3 0540 	ubfx	r5, r3, #1, #1
 80111e4:	4668      	mov	r0, sp
 80111e6:	07db      	lsls	r3, r3, #31
 80111e8:	f04f 0204 	mov.w	r2, #4
 80111ec:	bf48      	it	mi
 80111ee:	3501      	addmi	r5, #1
 80111f0:	f7ff ff0a 	bl	8011008 <memcpy.isra.0>
 80111f4:	9b00      	ldr	r3, [sp, #0]
 80111f6:	a901      	add	r1, sp, #4
 80111f8:	441d      	add	r5, r3
 80111fa:	4630      	mov	r0, r6
 80111fc:	9502      	str	r5, [sp, #8]
 80111fe:	f7ff ff33 	bl	8011068 <_tcp_send_package>
 8011202:	b004      	add	sp, #16
 8011204:	bd70      	pop	{r4, r5, r6, pc}
 8011206:	9301      	str	r3, [sp, #4]
 8011208:	2314      	movs	r3, #20
 801120a:	f88d 300c 	strb.w	r3, [sp, #12]
 801120e:	e7e3      	b.n	80111d8 <_send_reset+0x28>

08011210 <tcp_begin>:
 8011210:	b508      	push	{r3, lr}
 8011212:	4b0b      	ldr	r3, [pc, #44]	; (8011240 <tcp_begin+0x30>)
 8011214:	f8b3 25f0 	ldrh.w	r2, [r3, #1520]	; 0x5f0
 8011218:	4282      	cmp	r2, r0
 801121a:	4601      	mov	r1, r0
 801121c:	d102      	bne.n	8011224 <tcp_begin+0x14>
 801121e:	f893 0630 	ldrb.w	r0, [r3, #1584]	; 0x630
 8011222:	b130      	cbz	r0, 8011232 <tcp_begin+0x22>
 8011224:	b12a      	cbz	r2, 8011232 <tcp_begin+0x22>
 8011226:	4807      	ldr	r0, [pc, #28]	; (8011244 <tcp_begin+0x34>)
 8011228:	f002 ffea 	bl	8014200 <console_error>
 801122c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011230:	bd08      	pop	{r3, pc}
 8011232:	4805      	ldr	r0, [pc, #20]	; (8011248 <tcp_begin+0x38>)
 8011234:	f8a3 15f0 	strh.w	r1, [r3, #1520]	; 0x5f0
 8011238:	f7ff fecc 	bl	8010fd4 <_init_tcb>
 801123c:	2000      	movs	r0, #0
 801123e:	e7f7      	b.n	8011230 <tcp_begin+0x20>
 8011240:	10000000 	andne	r0, r0, r0
 8011244:	08019606 	stmdaeq	r1, {r1, r2, r9, sl, ip, pc}
 8011248:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

0801124c <tcp_write>:
 801124c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8011250:	b530      	push	{r4, r5, lr}
 8011252:	429a      	cmp	r2, r3
 8011254:	bf28      	it	cs
 8011256:	461a      	movcs	r2, r3
 8011258:	4615      	mov	r5, r2
 801125a:	4b12      	ldr	r3, [pc, #72]	; (80112a4 <tcp_write+0x58>)
 801125c:	2244      	movs	r2, #68	; 0x44
 801125e:	4350      	muls	r0, r2
 8011260:	181c      	adds	r4, r3, r0
 8011262:	b085      	sub	sp, #20
 8011264:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8011268:	9201      	str	r2, [sp, #4]
 801126a:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 801126e:	f8d4 2624 	ldr.w	r2, [r4, #1572]	; 0x624
 8011272:	f8c4 161c 	str.w	r1, [r4, #1564]	; 0x61c
 8011276:	9202      	str	r2, [sp, #8]
 8011278:	4418      	add	r0, r3
 801127a:	2218      	movs	r2, #24
 801127c:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
 8011280:	a901      	add	r1, sp, #4
 8011282:	f88d 200c 	strb.w	r2, [sp, #12]
 8011286:	f7ff feef 	bl	8011068 <_tcp_send_package>
 801128a:	2300      	movs	r3, #0
 801128c:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 8011290:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 8011294:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8011298:	442b      	add	r3, r5
 801129a:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 801129e:	b005      	add	sp, #20
 80112a0:	bd30      	pop	{r4, r5, pc}
 80112a2:	bf00      	nop
 80112a4:	10000000 	andne	r0, r0, r0

080112a8 <tcp_read>:
 80112a8:	4b23      	ldr	r3, [pc, #140]	; (8011338 <tcp_read+0x90>)
 80112aa:	2244      	movs	r2, #68	; 0x44
 80112ac:	4342      	muls	r2, r0
 80112ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112b0:	189c      	adds	r4, r3, r2
 80112b2:	b085      	sub	sp, #20
 80112b4:	f894 5630 	ldrb.w	r5, [r4, #1584]	; 0x630
 80112b8:	2d07      	cmp	r5, #7
 80112ba:	d118      	bne.n	80112ee <tcp_read+0x46>
 80112bc:	f8d4 1604 	ldr.w	r1, [r4, #1540]	; 0x604
 80112c0:	9101      	str	r1, [sp, #4]
 80112c2:	f8d4 1624 	ldr.w	r1, [r4, #1572]	; 0x624
 80112c6:	9102      	str	r1, [sp, #8]
 80112c8:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 80112cc:	2111      	movs	r1, #17
 80112ce:	f88d 100c 	strb.w	r1, [sp, #12]
 80112d2:	1898      	adds	r0, r3, r2
 80112d4:	a901      	add	r1, sp, #4
 80112d6:	f7ff fec7 	bl	8011068 <_tcp_send_package>
 80112da:	2309      	movs	r3, #9
 80112dc:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80112e0:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80112e4:	3301      	adds	r3, #1
 80112e6:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 80112ea:	2000      	movs	r0, #0
 80112ec:	e022      	b.n	8011334 <tcp_read+0x8c>
 80112ee:	f44f 6237 	mov.w	r2, #2928	; 0xb70
 80112f2:	4350      	muls	r0, r2
 80112f4:	181e      	adds	r6, r3, r0
 80112f6:	f8b6 5636 	ldrh.w	r5, [r6, #1590]	; 0x636
 80112fa:	f8b6 2634 	ldrh.w	r2, [r6, #1588]	; 0x634
 80112fe:	42aa      	cmp	r2, r5
 8011300:	d0f3      	beq.n	80112ea <tcp_read+0x42>
 8011302:	f240 52b6 	movw	r2, #1462	; 0x5b6
 8011306:	f100 0c04 	add.w	ip, r0, #4
 801130a:	436a      	muls	r2, r5
 801130c:	f203 6734 	addw	r7, r3, #1588	; 0x634
 8011310:	4494      	add	ip, r2
 8011312:	4467      	add	r7, ip
 8011314:	600f      	str	r7, [r1, #0]
 8011316:	4402      	add	r2, r0
 8011318:	441a      	add	r2, r3
 801131a:	f8b4 3628 	ldrh.w	r3, [r4, #1576]	; 0x628
 801131e:	f8b2 0bec 	ldrh.w	r0, [r2, #3052]	; 0xbec
 8011322:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
 8011326:	f8a4 3628 	strh.w	r3, [r4, #1576]	; 0x628
 801132a:	1c6b      	adds	r3, r5, #1
 801132c:	f003 0301 	and.w	r3, r3, #1
 8011330:	f8a6 3636 	strh.w	r3, [r6, #1590]	; 0x636
 8011334:	b005      	add	sp, #20
 8011336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011338:	10000000 	andne	r0, r0, r0

0801133c <memcpy.isra.0>:
 801133c:	3801      	subs	r0, #1
 801133e:	440a      	add	r2, r1
 8011340:	4291      	cmp	r1, r2
 8011342:	d100      	bne.n	8011346 <memcpy.isra.0+0xa>
 8011344:	4770      	bx	lr
 8011346:	f811 3b01 	ldrb.w	r3, [r1], #1
 801134a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801134e:	e7f7      	b.n	8011340 <memcpy.isra.0+0x4>

08011350 <net_memcpy>:
 8011350:	ea40 0301 	orr.w	r3, r0, r1
 8011354:	079b      	lsls	r3, r3, #30
 8011356:	b570      	push	{r4, r5, r6, lr}
 8011358:	d108      	bne.n	801136c <net_memcpy+0x1c>
 801135a:	f022 0303 	bic.w	r3, r2, #3
 801135e:	1f04      	subs	r4, r0, #4
 8011360:	18cd      	adds	r5, r1, r3
 8011362:	42a9      	cmp	r1, r5
 8011364:	d108      	bne.n	8011378 <net_memcpy+0x28>
 8011366:	1ad2      	subs	r2, r2, r3
 8011368:	4403      	add	r3, r0
 801136a:	e000      	b.n	801136e <net_memcpy+0x1e>
 801136c:	4603      	mov	r3, r0
 801136e:	3b01      	subs	r3, #1
 8011370:	440a      	add	r2, r1
 8011372:	4291      	cmp	r1, r2
 8011374:	d105      	bne.n	8011382 <net_memcpy+0x32>
 8011376:	bd70      	pop	{r4, r5, r6, pc}
 8011378:	f851 6b04 	ldr.w	r6, [r1], #4
 801137c:	f844 6f04 	str.w	r6, [r4, #4]!
 8011380:	e7ef      	b.n	8011362 <net_memcpy+0x12>
 8011382:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011386:	f803 4f01 	strb.w	r4, [r3, #1]!
 801138a:	e7f2      	b.n	8011372 <net_memcpy+0x22>

0801138c <udp_set_ip>:
 801138c:	b513      	push	{r0, r1, r4, lr}
 801138e:	2204      	movs	r2, #4
 8011390:	4604      	mov	r4, r0
 8011392:	6803      	ldr	r3, [r0, #0]
 8011394:	4809      	ldr	r0, [pc, #36]	; (80113bc <udp_set_ip+0x30>)
 8011396:	9301      	str	r3, [sp, #4]
 8011398:	eb0d 0102 	add.w	r1, sp, r2
 801139c:	f7ff ffce 	bl	801133c <memcpy.isra.0>
 80113a0:	6862      	ldr	r2, [r4, #4]
 80113a2:	4b07      	ldr	r3, [pc, #28]	; (80113c0 <udp_set_ip+0x34>)
 80113a4:	43d1      	mvns	r1, r2
 80113a6:	6019      	str	r1, [r3, #0]
 80113a8:	6823      	ldr	r3, [r4, #0]
 80113aa:	4013      	ands	r3, r2
 80113ac:	4a05      	ldr	r2, [pc, #20]	; (80113c4 <udp_set_ip+0x38>)
 80113ae:	6013      	str	r3, [r2, #0]
 80113b0:	68a2      	ldr	r2, [r4, #8]
 80113b2:	4b05      	ldr	r3, [pc, #20]	; (80113c8 <udp_set_ip+0x3c>)
 80113b4:	601a      	str	r2, [r3, #0]
 80113b6:	b002      	add	sp, #8
 80113b8:	bd10      	pop	{r4, pc}
 80113ba:	bf00      	nop
 80113bc:	2000f122 	andcs	pc, r0, r2, lsr #2
 80113c0:	20009438 	andcs	r9, r0, r8, lsr r4
 80113c4:	20009440 	andcs	r9, r0, r0, asr #8
 80113c8:	2000943c 	andcs	r9, r0, ip, lsr r4

080113cc <udp_bind>:
 80113cc:	4a0a      	ldr	r2, [pc, #40]	; (80113f8 <udp_bind+0x2c>)
 80113ce:	b510      	push	{r4, lr}
 80113d0:	2300      	movs	r3, #0
 80113d2:	4614      	mov	r4, r2
 80113d4:	f852 1b04 	ldr.w	r1, [r2], #4
 80113d8:	4281      	cmp	r1, r0
 80113da:	d008      	beq.n	80113ee <udp_bind+0x22>
 80113dc:	b149      	cbz	r1, 80113f2 <udp_bind+0x26>
 80113de:	3301      	adds	r3, #1
 80113e0:	2b08      	cmp	r3, #8
 80113e2:	d1f7      	bne.n	80113d4 <udp_bind+0x8>
 80113e4:	4805      	ldr	r0, [pc, #20]	; (80113fc <udp_bind+0x30>)
 80113e6:	f002 ff0b 	bl	8014200 <console_error>
 80113ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80113ee:	4618      	mov	r0, r3
 80113f0:	bd10      	pop	{r4, pc}
 80113f2:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 80113f6:	e7fa      	b.n	80113ee <udp_bind+0x22>
 80113f8:	20009448 	andcs	r9, r0, r8, asr #8
 80113fc:	08019626 	stmdaeq	r1, {r1, r2, r5, r9, sl, ip, pc}

08011400 <udp_unbind>:
 8011400:	b510      	push	{r4, lr}
 8011402:	4a0c      	ldr	r2, [pc, #48]	; (8011434 <udp_unbind+0x34>)
 8011404:	2300      	movs	r3, #0
 8011406:	4611      	mov	r1, r2
 8011408:	f852 4b04 	ldr.w	r4, [r2], #4
 801140c:	4284      	cmp	r4, r0
 801140e:	d108      	bne.n	8011422 <udp_unbind+0x22>
 8011410:	2000      	movs	r0, #0
 8011412:	f640 3294 	movw	r2, #2964	; 0xb94
 8011416:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 801141a:	4353      	muls	r3, r2
 801141c:	4a06      	ldr	r2, [pc, #24]	; (8011438 <udp_unbind+0x38>)
 801141e:	50d0      	str	r0, [r2, r3]
 8011420:	bd10      	pop	{r4, pc}
 8011422:	3301      	adds	r3, #1
 8011424:	2b08      	cmp	r3, #8
 8011426:	d1ef      	bne.n	8011408 <udp_unbind+0x8>
 8011428:	4804      	ldr	r0, [pc, #16]	; (801143c <udp_unbind+0x3c>)
 801142a:	f002 fee9 	bl	8014200 <console_error>
 801142e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011432:	e7f5      	b.n	8011420 <udp_unbind+0x20>
 8011434:	20009448 	andcs	r9, r0, r8, asr #8
 8011438:	20009468 	andcs	r9, r0, r8, ror #8
 801143c:	0801962b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, ip, pc}

08011440 <udp_recv>:
 8011440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011444:	4604      	mov	r4, r0
 8011446:	4698      	mov	r8, r3
 8011448:	4608      	mov	r0, r1
 801144a:	f640 3394 	movw	r3, #2964	; 0xb94
 801144e:	4916      	ldr	r1, [pc, #88]	; (80114a8 <udp_recv+0x68>)
 8011450:	435c      	muls	r4, r3
 8011452:	190f      	adds	r7, r1, r4
 8011454:	5b0b      	ldrh	r3, [r1, r4]
 8011456:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 801145a:	4563      	cmp	r3, ip
 801145c:	d021      	beq.n	80114a2 <udp_recv+0x62>
 801145e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8011462:	fb03 fc0c 	mul.w	ip, r3, ip
 8011466:	eb0c 0604 	add.w	r6, ip, r4
 801146a:	440e      	add	r6, r1
 801146c:	3404      	adds	r4, #4
 801146e:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8011472:	4295      	cmp	r5, r2
 8011474:	bf28      	it	cs
 8011476:	4615      	movcs	r5, r2
 8011478:	4464      	add	r4, ip
 801147a:	462a      	mov	r2, r5
 801147c:	4421      	add	r1, r4
 801147e:	f7ff ff67 	bl	8011350 <net_memcpy>
 8011482:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8011486:	f8c8 3000 	str.w	r3, [r8]
 801148a:	9b06      	ldr	r3, [sp, #24]
 801148c:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8011490:	801a      	strh	r2, [r3, #0]
 8011492:	887b      	ldrh	r3, [r7, #2]
 8011494:	3301      	adds	r3, #1
 8011496:	f003 0301 	and.w	r3, r3, #1
 801149a:	807b      	strh	r3, [r7, #2]
 801149c:	4628      	mov	r0, r5
 801149e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114a2:	2500      	movs	r5, #0
 80114a4:	e7fa      	b.n	801149c <udp_recv+0x5c>
 80114a6:	bf00      	nop
 80114a8:	20009468 	andcs	r9, r0, r8, ror #8

080114ac <udp_recv2>:
 80114ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114ae:	4c11      	ldr	r4, [pc, #68]	; (80114f4 <udp_recv2+0x48>)
 80114b0:	f640 3594 	movw	r5, #2964	; 0xb94
 80114b4:	4368      	muls	r0, r5
 80114b6:	1827      	adds	r7, r4, r0
 80114b8:	5a26      	ldrh	r6, [r4, r0]
 80114ba:	887d      	ldrh	r5, [r7, #2]
 80114bc:	42ae      	cmp	r6, r5
 80114be:	d017      	beq.n	80114f0 <udp_recv2+0x44>
 80114c0:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 80114c4:	1d06      	adds	r6, r0, #4
 80114c6:	fb0c f505 	mul.w	r5, ip, r5
 80114ca:	442e      	add	r6, r5
 80114cc:	4405      	add	r5, r0
 80114ce:	4426      	add	r6, r4
 80114d0:	442c      	add	r4, r5
 80114d2:	600e      	str	r6, [r1, #0]
 80114d4:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 80114d8:	6011      	str	r1, [r2, #0]
 80114da:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 80114de:	801a      	strh	r2, [r3, #0]
 80114e0:	887b      	ldrh	r3, [r7, #2]
 80114e2:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 80114e6:	3301      	adds	r3, #1
 80114e8:	f003 0301 	and.w	r3, r3, #1
 80114ec:	807b      	strh	r3, [r7, #2]
 80114ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114f0:	2000      	movs	r0, #0
 80114f2:	e7fc      	b.n	80114ee <udp_recv2+0x42>
 80114f4:	20009468 	andcs	r9, r0, r8, ror #8

080114f8 <udp_send>:
 80114f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80114fc:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8011650 <udp_send+0x158>
 8011500:	461c      	mov	r4, r3
 8011502:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8011506:	4607      	mov	r7, r0
 8011508:	4688      	mov	r8, r1
 801150a:	4616      	mov	r6, r2
 801150c:	2b00      	cmp	r3, #0
 801150e:	f000 808b 	beq.w	8011628 <udp_send+0x130>
 8011512:	1c63      	adds	r3, r4, #1
 8011514:	d141      	bne.n	801159a <udp_send+0xa2>
 8011516:	4a46      	ldr	r2, [pc, #280]	; (8011630 <udp_send+0x138>)
 8011518:	2307      	movs	r3, #7
 801151a:	4611      	mov	r1, r2
 801151c:	20ff      	movs	r0, #255	; 0xff
 801151e:	e001      	b.n	8011524 <udp_send+0x2c>
 8011520:	f802 0b01 	strb.w	r0, [r2], #1
 8011524:	3b01      	subs	r3, #1
 8011526:	d1fb      	bne.n	8011520 <udp_send+0x28>
 8011528:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801152c:	83cb      	strh	r3, [r1, #30]
 801152e:	840b      	strh	r3, [r1, #32]
 8011530:	f8df a120 	ldr.w	sl, [pc, #288]	; 8011654 <udp_send+0x15c>
 8011534:	4c3e      	ldr	r4, [pc, #248]	; (8011630 <udp_send+0x138>)
 8011536:	f8ba 3000 	ldrh.w	r3, [sl]
 801153a:	8263      	strh	r3, [r4, #18]
 801153c:	f106 031c 	add.w	r3, r6, #28
 8011540:	ba5b      	rev16	r3, r3
 8011542:	2500      	movs	r5, #0
 8011544:	2114      	movs	r1, #20
 8011546:	f104 000e 	add.w	r0, r4, #14
 801154a:	8223      	strh	r3, [r4, #16]
 801154c:	8325      	strh	r5, [r4, #24]
 801154e:	f001 fd46 	bl	8012fde <net_chksum>
 8011552:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8011556:	8320      	strh	r0, [r4, #24]
 8011558:	ba5b      	rev16	r3, r3
 801155a:	8463      	strh	r3, [r4, #34]	; 0x22
 801155c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8011560:	ba5b      	rev16	r3, r3
 8011562:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8011566:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011568:	f106 0308 	add.w	r3, r6, #8
 801156c:	ba5b      	rev16	r3, r3
 801156e:	4632      	mov	r2, r6
 8011570:	4641      	mov	r1, r8
 8011572:	bf28      	it	cs
 8011574:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8011578:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801157c:	84e3      	strh	r3, [r4, #38]	; 0x26
 801157e:	f7ff fee7 	bl	8011350 <net_memcpy>
 8011582:	4620      	mov	r0, r4
 8011584:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8011588:	f004 f860 	bl	801564c <emac_eth_send>
 801158c:	f8ba 3000 	ldrh.w	r3, [sl]
 8011590:	3301      	adds	r3, #1
 8011592:	f8aa 3000 	strh.w	r3, [sl]
 8011596:	4628      	mov	r0, r5
 8011598:	e037      	b.n	801160a <udp_send+0x112>
 801159a:	4b26      	ldr	r3, [pc, #152]	; (8011634 <udp_send+0x13c>)
 801159c:	681b      	ldr	r3, [r3, #0]
 801159e:	43a3      	bics	r3, r4
 80115a0:	d10f      	bne.n	80115c2 <udp_send+0xca>
 80115a2:	4a23      	ldr	r2, [pc, #140]	; (8011630 <udp_send+0x138>)
 80115a4:	2307      	movs	r3, #7
 80115a6:	21ff      	movs	r1, #255	; 0xff
 80115a8:	e001      	b.n	80115ae <udp_send+0xb6>
 80115aa:	f802 1b01 	strb.w	r1, [r2], #1
 80115ae:	3b01      	subs	r3, #1
 80115b0:	d1fb      	bne.n	80115aa <udp_send+0xb2>
 80115b2:	2204      	movs	r2, #4
 80115b4:	4820      	ldr	r0, [pc, #128]	; (8011638 <udp_send+0x140>)
 80115b6:	9401      	str	r4, [sp, #4]
 80115b8:	eb0d 0102 	add.w	r1, sp, r2
 80115bc:	f7ff febe 	bl	801133c <memcpy.isra.0>
 80115c0:	e7b6      	b.n	8011530 <udp_send+0x38>
 80115c2:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 80115c6:	2be0      	cmp	r3, #224	; 0xe0
 80115c8:	d10e      	bne.n	80115e8 <udp_send+0xf0>
 80115ca:	491c      	ldr	r1, [pc, #112]	; (801163c <udp_send+0x144>)
 80115cc:	4818      	ldr	r0, [pc, #96]	; (8011630 <udp_send+0x138>)
 80115ce:	f3c4 2206 	ubfx	r2, r4, #8, #7
 80115d2:	70ca      	strb	r2, [r1, #3]
 80115d4:	f3c4 4207 	ubfx	r2, r4, #16, #8
 80115d8:	710a      	strb	r2, [r1, #4]
 80115da:	f3c4 6207 	ubfx	r2, r4, #24, #8
 80115de:	714a      	strb	r2, [r1, #5]
 80115e0:	2206      	movs	r2, #6
 80115e2:	f7ff feab 	bl	801133c <memcpy.isra.0>
 80115e6:	e7e4      	b.n	80115b2 <udp_send+0xba>
 80115e8:	4b15      	ldr	r3, [pc, #84]	; (8011640 <udp_send+0x148>)
 80115ea:	681b      	ldr	r3, [r3, #0]
 80115ec:	43a3      	bics	r3, r4
 80115ee:	d00f      	beq.n	8011610 <udp_send+0x118>
 80115f0:	4d14      	ldr	r5, [pc, #80]	; (8011644 <udp_send+0x14c>)
 80115f2:	490f      	ldr	r1, [pc, #60]	; (8011630 <udp_send+0x138>)
 80115f4:	6828      	ldr	r0, [r5, #0]
 80115f6:	f001 f9c3 	bl	8012980 <arp_cache_lookup>
 80115fa:	682b      	ldr	r3, [r5, #0]
 80115fc:	4298      	cmp	r0, r3
 80115fe:	d0d8      	beq.n	80115b2 <udp_send+0xba>
 8011600:	4811      	ldr	r0, [pc, #68]	; (8011648 <udp_send+0x150>)
 8011602:	f002 fdfd 	bl	8014200 <console_error>
 8011606:	f06f 0002 	mvn.w	r0, #2
 801160a:	b002      	add	sp, #8
 801160c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011610:	4907      	ldr	r1, [pc, #28]	; (8011630 <udp_send+0x138>)
 8011612:	4620      	mov	r0, r4
 8011614:	f001 f9b4 	bl	8012980 <arp_cache_lookup>
 8011618:	42a0      	cmp	r0, r4
 801161a:	d0ca      	beq.n	80115b2 <udp_send+0xba>
 801161c:	480b      	ldr	r0, [pc, #44]	; (801164c <udp_send+0x154>)
 801161e:	f002 fdef 	bl	8014200 <console_error>
 8011622:	f06f 0001 	mvn.w	r0, #1
 8011626:	e7f0      	b.n	801160a <udp_send+0x112>
 8011628:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801162c:	e7ed      	b.n	801160a <udp_send+0x112>
 801162e:	bf00      	nop
 8011630:	2000f108 	andcs	pc, r0, r8, lsl #2
 8011634:	20009438 	andcs	r9, r0, r8, lsr r4
 8011638:	2000f126 	andcs	pc, r0, r6, lsr #2
 801163c:	20000014 	andcs	r0, r0, r4, lsl r0
 8011640:	20009440 	andcs	r9, r0, r0, asr #8
 8011644:	2000943c 	andcs	r9, r0, ip, lsr r4
 8011648:	08019633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, pc}
 801164c:	08019659 	stmdaeq	r1, {r0, r3, r4, r6, r9, sl, ip, pc}
 8011650:	20009448 	andcs	r9, r0, r8, asr #8
 8011654:	20009444 	andcs	r9, r0, r4, asr #8

08011658 <strlen>:
 8011658:	4603      	mov	r3, r0
 801165a:	461a      	mov	r2, r3
 801165c:	3301      	adds	r3, #1
 801165e:	7811      	ldrb	r1, [r2, #0]
 8011660:	2900      	cmp	r1, #0
 8011662:	d1fa      	bne.n	801165a <strlen+0x2>
 8011664:	1a10      	subs	r0, r2, r0
 8011666:	4770      	bx	lr

08011668 <strcmp>:
 8011668:	1e43      	subs	r3, r0, #1
 801166a:	3901      	subs	r1, #1
 801166c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8011670:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8011674:	4290      	cmp	r0, r2
 8011676:	d001      	beq.n	801167c <strcmp+0x14>
 8011678:	1a80      	subs	r0, r0, r2
 801167a:	e001      	b.n	8011680 <strcmp+0x18>
 801167c:	2800      	cmp	r0, #0
 801167e:	d1f5      	bne.n	801166c <strcmp+0x4>
 8011680:	4770      	bx	lr

08011682 <strcpy.isra.0>:
 8011682:	3801      	subs	r0, #1
 8011684:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011688:	f800 3f01 	strb.w	r3, [r0, #1]!
 801168c:	2b00      	cmp	r3, #0
 801168e:	d1f9      	bne.n	8011684 <strcpy.isra.0+0x2>
 8011690:	4770      	bx	lr

08011692 <strcat.isra.0>:
 8011692:	b513      	push	{r0, r1, r4, lr}
 8011694:	4604      	mov	r4, r0
 8011696:	9101      	str	r1, [sp, #4]
 8011698:	f7ff ffde 	bl	8011658 <strlen>
 801169c:	9901      	ldr	r1, [sp, #4]
 801169e:	4420      	add	r0, r4
 80116a0:	b002      	add	sp, #8
 80116a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116a6:	f7ff bfec 	b.w	8011682 <strcpy.isra.0>
	...

080116ac <MDNS::MDNS()>:
 80116ac:	b513      	push	{r0, r1, r4, lr}
 80116ae:	4604      	mov	r4, r0
 80116b0:	a901      	add	r1, sp, #4
 80116b2:	4804      	ldr	r0, [pc, #16]	; (80116c4 <MDNS::MDNS()+0x18>)
 80116b4:	f002 ff42 	bl	801453c <inet_aton>
 80116b8:	4b03      	ldr	r3, [pc, #12]	; (80116c8 <MDNS::MDNS()+0x1c>)
 80116ba:	9a01      	ldr	r2, [sp, #4]
 80116bc:	601a      	str	r2, [r3, #0]
 80116be:	4620      	mov	r0, r4
 80116c0:	b002      	add	sp, #8
 80116c2:	bd10      	pop	{r4, pc}
 80116c4:	0801968a 	stmdaeq	r1, {r1, r3, r7, r9, sl, ip, pc}
 80116c8:	2000f6fc 	strdcs	pc, [r0], -ip

080116cc <MDNS::SetName(char const*)>:
 80116cc:	b538      	push	{r3, r4, r5, lr}
 80116ce:	4d0b      	ldr	r5, [pc, #44]	; (80116fc <MDNS::SetName(char const*)+0x30>)
 80116d0:	6828      	ldr	r0, [r5, #0]
 80116d2:	460c      	mov	r4, r1
 80116d4:	b108      	cbz	r0, 80116da <MDNS::SetName(char const*)+0xe>
 80116d6:	f002 ff2b 	bl	8014530 <operator delete[](void*)>
 80116da:	4620      	mov	r0, r4
 80116dc:	f7ff ffbc 	bl	8011658 <strlen>
 80116e0:	3007      	adds	r0, #7
 80116e2:	f002 ff29 	bl	8014538 <operator new[](unsigned int)>
 80116e6:	4621      	mov	r1, r4
 80116e8:	6028      	str	r0, [r5, #0]
 80116ea:	f7ff ffca 	bl	8011682 <strcpy.isra.0>
 80116ee:	6828      	ldr	r0, [r5, #0]
 80116f0:	4903      	ldr	r1, [pc, #12]	; (8011700 <MDNS::SetName(char const*)+0x34>)
 80116f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80116f6:	f7ff bfcc 	b.w	8011692 <strcat.isra.0>
 80116fa:	bf00      	nop
 80116fc:	2000fb2c 	andcs	pc, r0, ip, lsr #22
 8011700:	0801969a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, ip, pc}

08011704 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8011704:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011708:	f04f 0e00 	mov.w	lr, #0
 801170c:	4e1c      	ldr	r6, [pc, #112]	; (8011780 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 801170e:	4f1d      	ldr	r7, [pc, #116]	; (8011784 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 8011710:	4675      	mov	r5, lr
 8011712:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8011716:	780b      	ldrb	r3, [r1, #0]
 8011718:	1c68      	adds	r0, r5, #1
 801171a:	b913      	cbnz	r3, 8011722 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 801171c:	7013      	strb	r3, [r2, #0]
 801171e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011722:	2b3f      	cmp	r3, #63	; 0x3f
 8011724:	d91c      	bls.n	8011760 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 8011726:	7849      	ldrb	r1, [r1, #1]
 8011728:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 801172c:	430b      	orrs	r3, r1
 801172e:	6839      	ldr	r1, [r7, #0]
 8011730:	5ccc      	ldrb	r4, [r1, r3]
 8011732:	3301      	adds	r3, #1
 8011734:	4419      	add	r1, r3
 8011736:	f1be 0f00 	cmp.w	lr, #0
 801173a:	bf08      	it	eq
 801173c:	4605      	moveq	r5, r0
 801173e:	2300      	movs	r3, #0
 8011740:	42a3      	cmp	r3, r4
 8011742:	5cc8      	ldrb	r0, [r1, r3]
 8011744:	d309      	bcc.n	801175a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 8011746:	4421      	add	r1, r4
 8011748:	f04f 0e01 	mov.w	lr, #1
 801174c:	4414      	add	r4, r2
 801174e:	780b      	ldrb	r3, [r1, #0]
 8011750:	b10b      	cbz	r3, 8011756 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 8011752:	f804 cb01 	strb.w	ip, [r4], #1
 8011756:	4622      	mov	r2, r4
 8011758:	e7dd      	b.n	8011716 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 801175a:	54d0      	strb	r0, [r2, r3]
 801175c:	3301      	adds	r3, #1
 801175e:	e7ef      	b.n	8011740 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8011760:	4688      	mov	r8, r1
 8011762:	18d4      	adds	r4, r2, r3
 8011764:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8011768:	f802 9b01 	strb.w	r9, [r2], #1
 801176c:	4294      	cmp	r4, r2
 801176e:	d1f9      	bne.n	8011764 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8011770:	1c5a      	adds	r2, r3, #1
 8011772:	4411      	add	r1, r2
 8011774:	f1be 0f00 	cmp.w	lr, #0
 8011778:	d1e9      	bne.n	801174e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 801177a:	181d      	adds	r5, r3, r0
 801177c:	e7e7      	b.n	801174e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 801177e:	bf00      	nop
 8011780:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8011784:	2000fb30 	andcs	pc, r0, r0, lsr fp	; <UNPREDICTABLE>

08011788 <MDNS::FindFirstDotFromRight(char const*) const>:
 8011788:	b510      	push	{r4, lr}
 801178a:	4608      	mov	r0, r1
 801178c:	460c      	mov	r4, r1
 801178e:	f7ff ff63 	bl	8011658 <strlen>
 8011792:	4420      	add	r0, r4
 8011794:	42a0      	cmp	r0, r4
 8011796:	d903      	bls.n	80117a0 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8011798:	f810 3901 	ldrb.w	r3, [r0], #-1
 801179c:	2b2e      	cmp	r3, #46	; 0x2e
 801179e:	d1f9      	bne.n	8011794 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 80117a0:	3001      	adds	r0, #1
 80117a2:	bd10      	pop	{r4, pc}

080117a4 <MDNS::WriteDnsName(char const*, char*, bool)>:
 80117a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117a6:	4610      	mov	r0, r2
 80117a8:	1c44      	adds	r4, r0, #1
 80117aa:	460f      	mov	r7, r1
 80117ac:	463d      	mov	r5, r7
 80117ae:	f817 6b01 	ldrb.w	r6, [r7], #1
 80117b2:	b946      	cbnz	r6, 80117c6 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 80117b4:	1a69      	subs	r1, r5, r1
 80117b6:	7001      	strb	r1, [r0, #0]
 80117b8:	7829      	ldrb	r1, [r5, #0]
 80117ba:	b949      	cbnz	r1, 80117d0 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 80117bc:	b10b      	cbz	r3, 80117c2 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 80117be:	f804 1b01 	strb.w	r1, [r4], #1
 80117c2:	1aa0      	subs	r0, r4, r2
 80117c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117c6:	2e2e      	cmp	r6, #46	; 0x2e
 80117c8:	d0f4      	beq.n	80117b4 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 80117ca:	f804 6b01 	strb.w	r6, [r4], #1
 80117ce:	e7ed      	b.n	80117ac <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 80117d0:	1c69      	adds	r1, r5, #1
 80117d2:	4620      	mov	r0, r4
 80117d4:	e7e8      	b.n	80117a8 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

080117d8 <MDNS::CreateAnswerLocalIpAddress()>:
 80117d8:	b510      	push	{r4, lr}
 80117da:	4c10      	ldr	r4, [pc, #64]	; (801181c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 80117dc:	4910      	ldr	r1, [pc, #64]	; (8011820 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 80117de:	2384      	movs	r3, #132	; 0x84
 80117e0:	80e3      	strh	r3, [r4, #6]
 80117e2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80117e6:	2300      	movs	r3, #0
 80117e8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80117ec:	6809      	ldr	r1, [r1, #0]
 80117ee:	f104 0210 	add.w	r2, r4, #16
 80117f2:	2301      	movs	r3, #1
 80117f4:	f7ff ffd6 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 80117f8:	490a      	ldr	r1, [pc, #40]	; (8011824 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 80117fa:	5011      	str	r1, [r2, r0]
 80117fc:	1813      	adds	r3, r2, r0
 80117fe:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8011802:	605a      	str	r2, [r3, #4]
 8011804:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011808:	811a      	strh	r2, [r3, #8]
 801180a:	4a07      	ldr	r2, [pc, #28]	; (8011828 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 801180c:	6812      	ldr	r2, [r2, #0]
 801180e:	6952      	ldr	r2, [r2, #20]
 8011810:	f8c3 200a 	str.w	r2, [r3, #10]
 8011814:	1b1b      	subs	r3, r3, r4
 8011816:	330a      	adds	r3, #10
 8011818:	6023      	str	r3, [r4, #0]
 801181a:	bd10      	pop	{r4, pc}
 801181c:	2000f700 	andcs	pc, r0, r0, lsl #14
 8011820:	2000fb2c 	andcs	pc, r0, ip, lsr #22
 8011824:	01800100 	orreq	r0, r0, r0, lsl #2
 8011828:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

0801182c <MDNS::Start()>:
 801182c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801182e:	4c1d      	ldr	r4, [pc, #116]	; (80118a4 <MDNS::Start()+0x78>)
 8011830:	4e1d      	ldr	r6, [pc, #116]	; (80118a8 <MDNS::Start()+0x7c>)
 8011832:	4f1e      	ldr	r7, [pc, #120]	; (80118ac <MDNS::Start()+0x80>)
 8011834:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8011838:	4605      	mov	r5, r0
 801183a:	6820      	ldr	r0, [r4, #0]
 801183c:	f000 fb2c 	bl	8011e98 <Network::Begin(unsigned short)>
 8011840:	683a      	ldr	r2, [r7, #0]
 8011842:	6030      	str	r0, [r6, #0]
 8011844:	4601      	mov	r1, r0
 8011846:	6820      	ldr	r0, [r4, #0]
 8011848:	f000 fb37 	bl	8011eba <Network::JoinGroup(int, unsigned int)>
 801184c:	4b18      	ldr	r3, [pc, #96]	; (80118b0 <MDNS::Start()+0x84>)
 801184e:	681b      	ldr	r3, [r3, #0]
 8011850:	b923      	cbnz	r3, 801185c <MDNS::Start()+0x30>
 8011852:	6821      	ldr	r1, [r4, #0]
 8011854:	4628      	mov	r0, r5
 8011856:	3120      	adds	r1, #32
 8011858:	f7ff ff38 	bl	80116cc <MDNS::SetName(char const*)>
 801185c:	4628      	mov	r0, r5
 801185e:	f7ff ffbb 	bl	80117d8 <MDNS::CreateAnswerLocalIpAddress()>
 8011862:	4914      	ldr	r1, [pc, #80]	; (80118b4 <MDNS::Start()+0x88>)
 8011864:	7830      	ldrb	r0, [r6, #0]
 8011866:	f831 2b04 	ldrh.w	r2, [r1], #4
 801186a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801186e:	9300      	str	r3, [sp, #0]
 8011870:	683b      	ldr	r3, [r7, #0]
 8011872:	f7ff fe41 	bl	80114f8 <udp_send>
 8011876:	6820      	ldr	r0, [r4, #0]
 8011878:	4c0f      	ldr	r4, [pc, #60]	; (80118b8 <MDNS::Start()+0x8c>)
 801187a:	f100 0260 	add.w	r2, r0, #96	; 0x60
 801187e:	233f      	movs	r3, #63	; 0x3f
 8011880:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011884:	b929      	cbnz	r1, 8011892 <MDNS::Start()+0x66>
 8011886:	4413      	add	r3, r2
 8011888:	429a      	cmp	r2, r3
 801188a:	d006      	beq.n	801189a <MDNS::Start()+0x6e>
 801188c:	f802 1b01 	strb.w	r1, [r2], #1
 8011890:	e7fa      	b.n	8011888 <MDNS::Start()+0x5c>
 8011892:	3b01      	subs	r3, #1
 8011894:	f802 1b01 	strb.w	r1, [r2], #1
 8011898:	d1f2      	bne.n	8011880 <MDNS::Start()+0x54>
 801189a:	2300      	movs	r3, #0
 801189c:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 80118a0:	b003      	add	sp, #12
 80118a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118a4:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 80118a8:	2000001c 	andcs	r0, r0, ip, lsl r0
 80118ac:	2000f6fc 	strdcs	pc, [r0], -ip
 80118b0:	2000fb2c 	andcs	pc, r0, ip, lsr #22
 80118b4:	2000f700 	andcs	pc, r0, r0, lsl #14
 80118b8:	0801969a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, ip, pc}

080118bc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 80118bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80118be:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 80118c2:	4c1b      	ldr	r4, [pc, #108]	; (8011930 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 80118c4:	2300      	movs	r3, #0
 80118c6:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 80118ca:	f854 100c 	ldr.w	r1, [r4, ip]
 80118ce:	4607      	mov	r7, r0
 80118d0:	f7ff ff68 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 80118d4:	4616      	mov	r6, r2
 80118d6:	7bac      	ldrb	r4, [r5, #14]
 80118d8:	4916      	ldr	r1, [pc, #88]	; (8011934 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 80118da:	4402      	add	r2, r0
 80118dc:	4816      	ldr	r0, [pc, #88]	; (8011938 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 80118de:	2301      	movs	r3, #1
 80118e0:	429c      	cmp	r4, r3
 80118e2:	bf18      	it	ne
 80118e4:	4601      	movne	r1, r0
 80118e6:	4638      	mov	r0, r7
 80118e8:	f7ff ff5c 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 80118ec:	4b13      	ldr	r3, [pc, #76]	; (801193c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 80118ee:	5013      	str	r3, [r2, r0]
 80118f0:	1814      	adds	r4, r2, r0
 80118f2:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80118f6:	6063      	str	r3, [r4, #4]
 80118f8:	4b11      	ldr	r3, [pc, #68]	; (8011940 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 80118fa:	6819      	ldr	r1, [r3, #0]
 80118fc:	9101      	str	r1, [sp, #4]
 80118fe:	4608      	mov	r0, r1
 8011900:	f7ff feaa 	bl	8011658 <strlen>
 8011904:	f100 0308 	add.w	r3, r0, #8
 8011908:	ba5b      	rev16	r3, r3
 801190a:	8123      	strh	r3, [r4, #8]
 801190c:	2300      	movs	r3, #0
 801190e:	f8c4 300a 	str.w	r3, [r4, #10]
 8011912:	89ab      	ldrh	r3, [r5, #12]
 8011914:	9901      	ldr	r1, [sp, #4]
 8011916:	ba5b      	rev16	r3, r3
 8011918:	81e3      	strh	r3, [r4, #14]
 801191a:	f104 0210 	add.w	r2, r4, #16
 801191e:	2301      	movs	r3, #1
 8011920:	4638      	mov	r0, r7
 8011922:	f7ff ff3f 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011926:	4410      	add	r0, r2
 8011928:	1b80      	subs	r0, r0, r6
 801192a:	b003      	add	sp, #12
 801192c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801192e:	bf00      	nop
 8011930:	2000f904 	andcs	pc, r0, r4, lsl #18
 8011934:	08019696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, ip, pc}
 8011938:	080196b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip, pc}
 801193c:	01802100 	orreq	r2, r0, r0, lsl #2
 8011940:	2000fb2c 	andcs	pc, r0, ip, lsr #22

08011944 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8011944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011948:	4e19      	ldr	r6, [pc, #100]	; (80119b0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 801194a:	010f      	lsls	r7, r1, #4
 801194c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8011950:	2300      	movs	r3, #0
 8011952:	59f1      	ldr	r1, [r6, r7]
 8011954:	4604      	mov	r4, r0
 8011956:	f7ff ff25 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 801195a:	4690      	mov	r8, r2
 801195c:	7bae      	ldrb	r6, [r5, #14]
 801195e:	4915      	ldr	r1, [pc, #84]	; (80119b4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8011960:	4402      	add	r2, r0
 8011962:	4815      	ldr	r0, [pc, #84]	; (80119b8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8011964:	2301      	movs	r3, #1
 8011966:	429e      	cmp	r6, r3
 8011968:	bf18      	it	ne
 801196a:	4601      	movne	r1, r0
 801196c:	4620      	mov	r0, r4
 801196e:	f7ff ff19 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011972:	4b12      	ldr	r3, [pc, #72]	; (80119bc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8011974:	5013      	str	r3, [r2, r0]
 8011976:	1816      	adds	r6, r2, r0
 8011978:	68a8      	ldr	r0, [r5, #8]
 801197a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801197e:	6073      	str	r3, [r6, #4]
 8011980:	f106 040b 	add.w	r4, r6, #11
 8011984:	b938      	cbnz	r0, 8011996 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8011986:	f44f 7380 	mov.w	r3, #256	; 0x100
 801198a:	8133      	strh	r3, [r6, #8]
 801198c:	72b0      	strb	r0, [r6, #10]
 801198e:	eba4 0008 	sub.w	r0, r4, r8
 8011992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011996:	f7ff fe5f 	bl	8011658 <strlen>
 801199a:	1c43      	adds	r3, r0, #1
 801199c:	72b0      	strb	r0, [r6, #10]
 801199e:	ba5b      	rev16	r3, r3
 80119a0:	4607      	mov	r7, r0
 80119a2:	68a9      	ldr	r1, [r5, #8]
 80119a4:	8133      	strh	r3, [r6, #8]
 80119a6:	4620      	mov	r0, r4
 80119a8:	f7ff fe6b 	bl	8011682 <strcpy.isra.0>
 80119ac:	443c      	add	r4, r7
 80119ae:	e7ee      	b.n	801198e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 80119b0:	2000f904 	andcs	pc, r0, r4, lsl #18
 80119b4:	08019696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, ip, pc}
 80119b8:	080196b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip, pc}
 80119bc:	01801000 	orreq	r1, r0, r0

080119c0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 80119c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80119c4:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8011a38 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x78>
 80119c8:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 80119cc:	ea4f 1901 	mov.w	r9, r1, lsl #4
 80119d0:	2301      	movs	r3, #1
 80119d2:	6869      	ldr	r1, [r5, #4]
 80119d4:	4607      	mov	r7, r0
 80119d6:	f7ff fee5 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 80119da:	f858 1009 	ldr.w	r1, [r8, r9]
 80119de:	4b13      	ldr	r3, [pc, #76]	; (8011a2c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 80119e0:	5013      	str	r3, [r2, r0]
 80119e2:	1816      	adds	r6, r2, r0
 80119e4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80119e8:	6073      	str	r3, [r6, #4]
 80119ea:	4608      	mov	r0, r1
 80119ec:	4614      	mov	r4, r2
 80119ee:	9101      	str	r1, [sp, #4]
 80119f0:	f7ff fe32 	bl	8011658 <strlen>
 80119f4:	f100 030d 	add.w	r3, r0, #13
 80119f8:	ba5b      	rev16	r3, r3
 80119fa:	9901      	ldr	r1, [sp, #4]
 80119fc:	8133      	strh	r3, [r6, #8]
 80119fe:	f106 020a 	add.w	r2, r6, #10
 8011a02:	2300      	movs	r3, #0
 8011a04:	4638      	mov	r0, r7
 8011a06:	f7ff fecd 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011a0a:	7bad      	ldrb	r5, [r5, #14]
 8011a0c:	4908      	ldr	r1, [pc, #32]	; (8011a30 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8011a0e:	4402      	add	r2, r0
 8011a10:	4808      	ldr	r0, [pc, #32]	; (8011a34 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 8011a12:	2301      	movs	r3, #1
 8011a14:	429d      	cmp	r5, r3
 8011a16:	bf18      	it	ne
 8011a18:	4601      	movne	r1, r0
 8011a1a:	4638      	mov	r0, r7
 8011a1c:	f7ff fec2 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011a20:	4410      	add	r0, r2
 8011a22:	1b00      	subs	r0, r0, r4
 8011a24:	b003      	add	sp, #12
 8011a26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a2a:	bf00      	nop
 8011a2c:	01000c00 	tsteq	r0, r0, lsl #24
 8011a30:	08019696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, ip, pc}
 8011a34:	080196b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip, pc}
 8011a38:	2000f904 	andcs	pc, r0, r4, lsl #18

08011a3c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8011a3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a3e:	2301      	movs	r3, #1
 8011a40:	460f      	mov	r7, r1
 8011a42:	4910      	ldr	r1, [pc, #64]	; (8011a84 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8011a44:	4606      	mov	r6, r0
 8011a46:	f7ff fead 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011a4a:	490f      	ldr	r1, [pc, #60]	; (8011a88 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8011a4c:	4b0f      	ldr	r3, [pc, #60]	; (8011a8c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x50>)
 8011a4e:	5013      	str	r3, [r2, r0]
 8011a50:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 8011a54:	1815      	adds	r5, r2, r0
 8011a56:	6849      	ldr	r1, [r1, #4]
 8011a58:	9101      	str	r1, [sp, #4]
 8011a5a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011a5e:	606b      	str	r3, [r5, #4]
 8011a60:	4608      	mov	r0, r1
 8011a62:	4614      	mov	r4, r2
 8011a64:	f7ff fdf8 	bl	8011658 <strlen>
 8011a68:	1c83      	adds	r3, r0, #2
 8011a6a:	ba5b      	rev16	r3, r3
 8011a6c:	812b      	strh	r3, [r5, #8]
 8011a6e:	f105 020a 	add.w	r2, r5, #10
 8011a72:	9901      	ldr	r1, [sp, #4]
 8011a74:	2301      	movs	r3, #1
 8011a76:	4630      	mov	r0, r6
 8011a78:	f7ff fe94 	bl	80117a4 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011a7c:	4410      	add	r0, r2
 8011a7e:	1b00      	subs	r0, r0, r4
 8011a80:	b003      	add	sp, #12
 8011a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a84:	080196a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, ip, pc}
 8011a88:	2000f904 	andcs	pc, r0, r4, lsl #18
 8011a8c:	01000c00 	tsteq	r0, r0, lsl #24

08011a90 <MDNS::CreateMDNSMessage(unsigned int)>:
 8011a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a92:	4d1a      	ldr	r5, [pc, #104]	; (8011afc <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 8011a94:	2384      	movs	r3, #132	; 0x84
 8011a96:	80eb      	strh	r3, [r5, #6]
 8011a98:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8011a9c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011aa0:	f105 0410 	add.w	r4, r5, #16
 8011aa4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8011aa8:	4622      	mov	r2, r4
 8011aaa:	4606      	mov	r6, r0
 8011aac:	460f      	mov	r7, r1
 8011aae:	f7ff ff05 	bl	80118bc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8011ab2:	4404      	add	r4, r0
 8011ab4:	4622      	mov	r2, r4
 8011ab6:	4639      	mov	r1, r7
 8011ab8:	4630      	mov	r0, r6
 8011aba:	f7ff ff43 	bl	8011944 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8011abe:	4404      	add	r4, r0
 8011ac0:	4622      	mov	r2, r4
 8011ac2:	4639      	mov	r1, r7
 8011ac4:	4630      	mov	r0, r6
 8011ac6:	f7ff ffb9 	bl	8011a3c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 8011aca:	4404      	add	r4, r0
 8011acc:	4622      	mov	r2, r4
 8011ace:	4639      	mov	r1, r7
 8011ad0:	4630      	mov	r0, r6
 8011ad2:	f7ff ff75 	bl	80119c0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8011ad6:	4a0a      	ldr	r2, [pc, #40]	; (8011b00 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8011ad8:	f852 3b10 	ldr.w	r3, [r2], #16
 8011adc:	4420      	add	r0, r4
 8011ade:	3b0c      	subs	r3, #12
 8011ae0:	1e44      	subs	r4, r0, #1
 8011ae2:	4619      	mov	r1, r3
 8011ae4:	3901      	subs	r1, #1
 8011ae6:	d204      	bcs.n	8011af2 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8011ae8:	18c4      	adds	r4, r0, r3
 8011aea:	4b06      	ldr	r3, [pc, #24]	; (8011b04 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 8011aec:	1ae4      	subs	r4, r4, r3
 8011aee:	602c      	str	r4, [r5, #0]
 8011af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011af2:	f812 6b01 	ldrb.w	r6, [r2], #1
 8011af6:	f804 6f01 	strb.w	r6, [r4, #1]!
 8011afa:	e7f3      	b.n	8011ae4 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8011afc:	2000f928 	andcs	pc, r0, r8, lsr #18
 8011b00:	2000f700 	andcs	pc, r0, r0, lsl #14
 8011b04:	2000f92c 	andcs	pc, r0, ip, lsr #18

08011b08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8011b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b0c:	4d41      	ldr	r5, [pc, #260]	; (8011c14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8011b0e:	b085      	sub	sp, #20
 8011b10:	682c      	ldr	r4, [r5, #0]
 8011b12:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
 8011b16:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8011b1a:	4607      	mov	r7, r0
 8011b1c:	4616      	mov	r6, r2
 8011b1e:	b11c      	cbz	r4, 8011b28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x20>
 8011b20:	692a      	ldr	r2, [r5, #16]
 8011b22:	2a00      	cmp	r2, #0
 8011b24:	d172      	bne.n	8011c0c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>
 8011b26:	2401      	movs	r4, #1
 8011b28:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 8011b2c:	ea4f 1804 	mov.w	r8, r4, lsl #4
 8011b30:	8193      	strh	r3, [r2, #12]
 8011b32:	f882 a00e 	strb.w	sl, [r2, #14]
 8011b36:	2900      	cmp	r1, #0
 8011b38:	d158      	bne.n	8011bec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe4>
 8011b3a:	4b37      	ldr	r3, [pc, #220]	; (8011c18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8011b3c:	6818      	ldr	r0, [r3, #0]
 8011b3e:	3020      	adds	r0, #32
 8011b40:	f7ff fd8a 	bl	8011658 <strlen>
 8011b44:	4683      	mov	fp, r0
 8011b46:	4630      	mov	r0, r6
 8011b48:	f7ff fd86 	bl	8011658 <strlen>
 8011b4c:	4458      	add	r0, fp
 8011b4e:	3001      	adds	r0, #1
 8011b50:	f002 fcf2 	bl	8014538 <operator new[](unsigned int)>
 8011b54:	4b30      	ldr	r3, [pc, #192]	; (8011c18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8011b56:	f845 0008 	str.w	r0, [r5, r8]
 8011b5a:	6819      	ldr	r1, [r3, #0]
 8011b5c:	3120      	adds	r1, #32
 8011b5e:	f7ff fd90 	bl	8011682 <strcpy.isra.0>
 8011b62:	f855 0008 	ldr.w	r0, [r5, r8]
 8011b66:	4631      	mov	r1, r6
 8011b68:	f7ff fd93 	bl	8011692 <strcat.isra.0>
 8011b6c:	4631      	mov	r1, r6
 8011b6e:	4638      	mov	r0, r7
 8011b70:	f7ff fe0a 	bl	8011788 <MDNS::FindFirstDotFromRight(char const*) const>
 8011b74:	9003      	str	r0, [sp, #12]
 8011b76:	f7ff fd6f 	bl	8011658 <strlen>
 8011b7a:	300d      	adds	r0, #13
 8011b7c:	f002 fcdc 	bl	8014538 <operator new[](unsigned int)>
 8011b80:	eb05 0b08 	add.w	fp, r5, r8
 8011b84:	9903      	ldr	r1, [sp, #12]
 8011b86:	f8cb 0004 	str.w	r0, [fp, #4]
 8011b8a:	f7ff fd7a 	bl	8011682 <strcpy.isra.0>
 8011b8e:	4923      	ldr	r1, [pc, #140]	; (8011c1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8011b90:	f8db 0004 	ldr.w	r0, [fp, #4]
 8011b94:	f7ff fd7d 	bl	8011692 <strcat.isra.0>
 8011b98:	4921      	ldr	r1, [pc, #132]	; (8011c20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 8011b9a:	4b22      	ldr	r3, [pc, #136]	; (8011c24 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8011b9c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8011ba0:	f1ba 0f01 	cmp.w	sl, #1
 8011ba4:	bf18      	it	ne
 8011ba6:	4619      	movne	r1, r3
 8011ba8:	f7ff fd73 	bl	8011692 <strcat.isra.0>
 8011bac:	f1b9 0f00 	cmp.w	r9, #0
 8011bb0:	d00a      	beq.n	8011bc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xc0>
 8011bb2:	4648      	mov	r0, r9
 8011bb4:	f7ff fd50 	bl	8011658 <strlen>
 8011bb8:	3001      	adds	r0, #1
 8011bba:	f002 fcbd 	bl	8014538 <operator new[](unsigned int)>
 8011bbe:	4649      	mov	r1, r9
 8011bc0:	f8cb 0008 	str.w	r0, [fp, #8]
 8011bc4:	f7ff fd5d 	bl	8011682 <strcpy.isra.0>
 8011bc8:	4621      	mov	r1, r4
 8011bca:	4638      	mov	r0, r7
 8011bcc:	f7ff ff60 	bl	8011a90 <MDNS::CreateMDNSMessage(unsigned int)>
 8011bd0:	4915      	ldr	r1, [pc, #84]	; (8011c28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 8011bd2:	4816      	ldr	r0, [pc, #88]	; (8011c2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 8011bd4:	f831 2b04 	ldrh.w	r2, [r1], #4
 8011bd8:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8011bdc:	9300      	str	r3, [sp, #0]
 8011bde:	4b14      	ldr	r3, [pc, #80]	; (8011c30 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x128>)
 8011be0:	7800      	ldrb	r0, [r0, #0]
 8011be2:	681b      	ldr	r3, [r3, #0]
 8011be4:	f7ff fc88 	bl	80114f8 <udp_send>
 8011be8:	2001      	movs	r0, #1
 8011bea:	e010      	b.n	8011c0e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x106>
 8011bec:	4608      	mov	r0, r1
 8011bee:	9103      	str	r1, [sp, #12]
 8011bf0:	f7ff fd32 	bl	8011658 <strlen>
 8011bf4:	4683      	mov	fp, r0
 8011bf6:	4630      	mov	r0, r6
 8011bf8:	f7ff fd2e 	bl	8011658 <strlen>
 8011bfc:	4458      	add	r0, fp
 8011bfe:	3001      	adds	r0, #1
 8011c00:	f002 fc9a 	bl	8014538 <operator new[](unsigned int)>
 8011c04:	9903      	ldr	r1, [sp, #12]
 8011c06:	f845 0008 	str.w	r0, [r5, r8]
 8011c0a:	e7a8      	b.n	8011b5e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x56>
 8011c0c:	2000      	movs	r0, #0
 8011c0e:	b005      	add	sp, #20
 8011c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c14:	2000f904 	andcs	pc, r0, r4, lsl #18
 8011c18:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 8011c1c:	0801722f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, ip, sp, lr}
 8011c20:	08019696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, ip, pc}
 8011c24:	080196b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip, pc}
 8011c28:	2000f928 	andcs	pc, r0, r8, lsr #18
 8011c2c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011c30:	2000f6fc 	strdcs	pc, [r0], -ip

08011c34 <MDNS::HandleRequest(unsigned short)>:
 8011c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c38:	b0c5      	sub	sp, #276	; 0x114
 8011c3a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8011d20 <MDNS::HandleRequest(unsigned short)+0xec>
 8011c3e:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 8011d24 <MDNS::HandleRequest(unsigned short)+0xf0>
 8011c42:	9103      	str	r1, [sp, #12]
 8011c44:	4605      	mov	r5, r0
 8011c46:	2700      	movs	r7, #0
 8011c48:	f04f 080c 	mov.w	r8, #12
 8011c4c:	9b03      	ldr	r3, [sp, #12]
 8011c4e:	42bb      	cmp	r3, r7
 8011c50:	d802      	bhi.n	8011c58 <MDNS::HandleRequest(unsigned short)+0x24>
 8011c52:	b045      	add	sp, #276	; 0x114
 8011c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c58:	f8da 1000 	ldr.w	r1, [sl]
 8011c5c:	aa04      	add	r2, sp, #16
 8011c5e:	4441      	add	r1, r8
 8011c60:	4628      	mov	r0, r5
 8011c62:	f7ff fd4f 	bl	8011704 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 8011c66:	f8da 2000 	ldr.w	r2, [sl]
 8011c6a:	4440      	add	r0, r8
 8011c6c:	1813      	adds	r3, r2, r0
 8011c6e:	f100 0804 	add.w	r8, r0, #4
 8011c72:	885b      	ldrh	r3, [r3, #2]
 8011c74:	ba5b      	rev16	r3, r3
 8011c76:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011c7a:	2b01      	cmp	r3, #1
 8011c7c:	d13d      	bne.n	8011cfa <MDNS::HandleRequest(unsigned short)+0xc6>
 8011c7e:	5a14      	ldrh	r4, [r2, r0]
 8011c80:	4b20      	ldr	r3, [pc, #128]	; (8011d04 <MDNS::HandleRequest(unsigned short)+0xd0>)
 8011c82:	ba64      	rev16	r4, r4
 8011c84:	6818      	ldr	r0, [r3, #0]
 8011c86:	a904      	add	r1, sp, #16
 8011c88:	b2a4      	uxth	r4, r4
 8011c8a:	f7ff fced 	bl	8011668 <strcmp>
 8011c8e:	b968      	cbnz	r0, 8011cac <MDNS::HandleRequest(unsigned short)+0x78>
 8011c90:	2c01      	cmp	r4, #1
 8011c92:	d10b      	bne.n	8011cac <MDNS::HandleRequest(unsigned short)+0x78>
 8011c94:	491c      	ldr	r1, [pc, #112]	; (8011d08 <MDNS::HandleRequest(unsigned short)+0xd4>)
 8011c96:	481d      	ldr	r0, [pc, #116]	; (8011d0c <MDNS::HandleRequest(unsigned short)+0xd8>)
 8011c98:	f831 2b04 	ldrh.w	r2, [r1], #4
 8011c9c:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8011ca0:	9300      	str	r3, [sp, #0]
 8011ca2:	4b1b      	ldr	r3, [pc, #108]	; (8011d10 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8011ca4:	7800      	ldrb	r0, [r0, #0]
 8011ca6:	681b      	ldr	r3, [r3, #0]
 8011ca8:	f7ff fc26 	bl	80114f8 <udp_send>
 8011cac:	4819      	ldr	r0, [pc, #100]	; (8011d14 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8011cae:	4e1a      	ldr	r6, [pc, #104]	; (8011d18 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8011cb0:	a904      	add	r1, sp, #16
 8011cb2:	f7ff fcd9 	bl	8011668 <strcmp>
 8011cb6:	f04f 0900 	mov.w	r9, #0
 8011cba:	9002      	str	r0, [sp, #8]
 8011cbc:	6833      	ldr	r3, [r6, #0]
 8011cbe:	b1c3      	cbz	r3, 8011cf2 <MDNS::HandleRequest(unsigned short)+0xbe>
 8011cc0:	9b02      	ldr	r3, [sp, #8]
 8011cc2:	b123      	cbz	r3, 8011cce <MDNS::HandleRequest(unsigned short)+0x9a>
 8011cc4:	6870      	ldr	r0, [r6, #4]
 8011cc6:	a904      	add	r1, sp, #16
 8011cc8:	f7ff fcce 	bl	8011668 <strcmp>
 8011ccc:	b988      	cbnz	r0, 8011cf2 <MDNS::HandleRequest(unsigned short)+0xbe>
 8011cce:	2c0c      	cmp	r4, #12
 8011cd0:	d10f      	bne.n	8011cf2 <MDNS::HandleRequest(unsigned short)+0xbe>
 8011cd2:	4649      	mov	r1, r9
 8011cd4:	4628      	mov	r0, r5
 8011cd6:	f7ff fedb 	bl	8011a90 <MDNS::CreateMDNSMessage(unsigned int)>
 8011cda:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8011cde:	9300      	str	r3, [sp, #0]
 8011ce0:	480a      	ldr	r0, [pc, #40]	; (8011d0c <MDNS::HandleRequest(unsigned short)+0xd8>)
 8011ce2:	4b0b      	ldr	r3, [pc, #44]	; (8011d10 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8011ce4:	f8bb 2000 	ldrh.w	r2, [fp]
 8011ce8:	681b      	ldr	r3, [r3, #0]
 8011cea:	490c      	ldr	r1, [pc, #48]	; (8011d1c <MDNS::HandleRequest(unsigned short)+0xe8>)
 8011cec:	7800      	ldrb	r0, [r0, #0]
 8011cee:	f7ff fc03 	bl	80114f8 <udp_send>
 8011cf2:	3610      	adds	r6, #16
 8011cf4:	f1b9 0f00 	cmp.w	r9, #0
 8011cf8:	d001      	beq.n	8011cfe <MDNS::HandleRequest(unsigned short)+0xca>
 8011cfa:	3701      	adds	r7, #1
 8011cfc:	e7a6      	b.n	8011c4c <MDNS::HandleRequest(unsigned short)+0x18>
 8011cfe:	f04f 0901 	mov.w	r9, #1
 8011d02:	e7db      	b.n	8011cbc <MDNS::HandleRequest(unsigned short)+0x88>
 8011d04:	2000fb2c 	andcs	pc, r0, ip, lsr #22
 8011d08:	2000f700 	andcs	pc, r0, r0, lsl #14
 8011d0c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011d10:	2000f6fc 	strdcs	pc, [r0], -ip
 8011d14:	080196a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, ip, pc}
 8011d18:	2000f904 	andcs	pc, r0, r4, lsl #18
 8011d1c:	2000f92c 	andcs	pc, r0, ip, lsr #18
 8011d20:	2000fb30 	andcs	pc, r0, r0, lsr fp	; <UNPREDICTABLE>
 8011d24:	2000f928 	andcs	pc, r0, r8, lsr #18

08011d28 <MDNS::Parse()>:
 8011d28:	4b08      	ldr	r3, [pc, #32]	; (8011d4c <MDNS::Parse()+0x24>)
 8011d2a:	681a      	ldr	r2, [r3, #0]
 8011d2c:	8853      	ldrh	r3, [r2, #2]
 8011d2e:	ba5b      	rev16	r3, r3
 8011d30:	b299      	uxth	r1, r3
 8011d32:	041b      	lsls	r3, r3, #16
 8011d34:	d408      	bmi.n	8011d48 <MDNS::Parse()+0x20>
 8011d36:	0b89      	lsrs	r1, r1, #14
 8011d38:	d106      	bne.n	8011d48 <MDNS::Parse()+0x20>
 8011d3a:	8891      	ldrh	r1, [r2, #4]
 8011d3c:	b28b      	uxth	r3, r1
 8011d3e:	b11b      	cbz	r3, 8011d48 <MDNS::Parse()+0x20>
 8011d40:	ba49      	rev16	r1, r1
 8011d42:	b289      	uxth	r1, r1
 8011d44:	f7ff bf76 	b.w	8011c34 <MDNS::HandleRequest(unsigned short)>
 8011d48:	4770      	bx	lr
 8011d4a:	bf00      	nop
 8011d4c:	2000fb30 	andcs	pc, r0, r0, lsr fp	; <UNPREDICTABLE>

08011d50 <MDNS::Run()>:
 8011d50:	b538      	push	{r3, r4, r5, lr}
 8011d52:	4d0c      	ldr	r5, [pc, #48]	; (8011d84 <MDNS::Run()+0x34>)
 8011d54:	490c      	ldr	r1, [pc, #48]	; (8011d88 <MDNS::Run()+0x38>)
 8011d56:	4a0d      	ldr	r2, [pc, #52]	; (8011d8c <MDNS::Run()+0x3c>)
 8011d58:	4604      	mov	r4, r0
 8011d5a:	480d      	ldr	r0, [pc, #52]	; (8011d90 <MDNS::Run()+0x40>)
 8011d5c:	462b      	mov	r3, r5
 8011d5e:	7800      	ldrb	r0, [r0, #0]
 8011d60:	f7ff fba4 	bl	80114ac <udp_recv2>
 8011d64:	4b0b      	ldr	r3, [pc, #44]	; (8011d94 <MDNS::Run()+0x44>)
 8011d66:	8829      	ldrh	r1, [r5, #0]
 8011d68:	8018      	strh	r0, [r3, #0]
 8011d6a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8011d6e:	4299      	cmp	r1, r3
 8011d70:	d106      	bne.n	8011d80 <MDNS::Run()+0x30>
 8011d72:	280c      	cmp	r0, #12
 8011d74:	d904      	bls.n	8011d80 <MDNS::Run()+0x30>
 8011d76:	4620      	mov	r0, r4
 8011d78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011d7c:	f7ff bfd4 	b.w	8011d28 <MDNS::Parse()>
 8011d80:	bd38      	pop	{r3, r4, r5, pc}
 8011d82:	bf00      	nop
 8011d84:	2000f6f8 	strdcs	pc, [r0], -r8
 8011d88:	2000fb30 	andcs	pc, r0, r0, lsr fp	; <UNPREDICTABLE>
 8011d8c:	2000f6f4 	strdcs	pc, [r0], -r4
 8011d90:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011d94:	2000f924 	andcs	pc, r0, r4, lsr #18

08011d98 <MDNS::Print()>:
 8011d98:	b510      	push	{r4, lr}
 8011d9a:	4816      	ldr	r0, [pc, #88]	; (8011df4 <MDNS::Print()+0x5c>)
 8011d9c:	f7f8 fa98 	bl	800a2d0 <printf>
 8011da0:	4b15      	ldr	r3, [pc, #84]	; (8011df8 <MDNS::Print()+0x60>)
 8011da2:	681b      	ldr	r3, [r3, #0]
 8011da4:	3301      	adds	r3, #1
 8011da6:	d104      	bne.n	8011db2 <MDNS::Print()+0x1a>
 8011da8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dac:	4813      	ldr	r0, [pc, #76]	; (8011dfc <MDNS::Print()+0x64>)
 8011dae:	f7f8 ba8f 	b.w	800a2d0 <printf>
 8011db2:	4b13      	ldr	r3, [pc, #76]	; (8011e00 <MDNS::Print()+0x68>)
 8011db4:	4c13      	ldr	r4, [pc, #76]	; (8011e04 <MDNS::Print()+0x6c>)
 8011db6:	6819      	ldr	r1, [r3, #0]
 8011db8:	4813      	ldr	r0, [pc, #76]	; (8011e08 <MDNS::Print()+0x70>)
 8011dba:	f7f8 fa89 	bl	800a2d0 <printf>
 8011dbe:	6823      	ldr	r3, [r4, #0]
 8011dc0:	b14b      	cbz	r3, 8011dd6 <MDNS::Print()+0x3e>
 8011dc2:	4a12      	ldr	r2, [pc, #72]	; (8011e0c <MDNS::Print()+0x74>)
 8011dc4:	68a3      	ldr	r3, [r4, #8]
 8011dc6:	6861      	ldr	r1, [r4, #4]
 8011dc8:	4811      	ldr	r0, [pc, #68]	; (8011e10 <MDNS::Print()+0x78>)
 8011dca:	2b00      	cmp	r3, #0
 8011dcc:	bf08      	it	eq
 8011dce:	4613      	moveq	r3, r2
 8011dd0:	89a2      	ldrh	r2, [r4, #12]
 8011dd2:	f7f8 fa7d 	bl	800a2d0 <printf>
 8011dd6:	6923      	ldr	r3, [r4, #16]
 8011dd8:	b15b      	cbz	r3, 8011df2 <MDNS::Print()+0x5a>
 8011dda:	69a3      	ldr	r3, [r4, #24]
 8011ddc:	4a0b      	ldr	r2, [pc, #44]	; (8011e0c <MDNS::Print()+0x74>)
 8011dde:	6961      	ldr	r1, [r4, #20]
 8011de0:	480b      	ldr	r0, [pc, #44]	; (8011e10 <MDNS::Print()+0x78>)
 8011de2:	2b00      	cmp	r3, #0
 8011de4:	bf08      	it	eq
 8011de6:	4613      	moveq	r3, r2
 8011de8:	8ba2      	ldrh	r2, [r4, #28]
 8011dea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dee:	f7f8 ba6f 	b.w	800a2d0 <printf>
 8011df2:	bd10      	pop	{r4, pc}
 8011df4:	080196be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, ip, pc}
 8011df8:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011dfc:	080196c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, pc}
 8011e00:	2000fb2c 	andcs	pc, r0, ip, lsr #22
 8011e04:	2000f904 	andcs	pc, r0, r4, lsl #18
 8011e08:	080196d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sl, ip, pc}
 8011e0c:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 8011e10:	080196de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, ip, pc}

08011e14 <strncpy.constprop.0.isra.0>:
 8011e14:	3901      	subs	r1, #1
 8011e16:	233f      	movs	r3, #63	; 0x3f
 8011e18:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8011e1c:	b92a      	cbnz	r2, 8011e2a <strncpy.constprop.0.isra.0+0x16>
 8011e1e:	4403      	add	r3, r0
 8011e20:	4298      	cmp	r0, r3
 8011e22:	d006      	beq.n	8011e32 <strncpy.constprop.0.isra.0+0x1e>
 8011e24:	f800 2b01 	strb.w	r2, [r0], #1
 8011e28:	e7fa      	b.n	8011e20 <strncpy.constprop.0.isra.0+0xc>
 8011e2a:	3b01      	subs	r3, #1
 8011e2c:	f800 2b01 	strb.w	r2, [r0], #1
 8011e30:	d1f2      	bne.n	8011e18 <strncpy.constprop.0.isra.0+0x4>
 8011e32:	4770      	bx	lr

08011e34 <Network::Network()>:
 8011e34:	4a12      	ldr	r2, [pc, #72]	; (8011e80 <Network::Network()+0x4c>)
 8011e36:	2300      	movs	r3, #0
 8011e38:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8011e3c:	6010      	str	r0, [r2, #0]
 8011e3e:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 8011e42:	2201      	movs	r2, #1
 8011e44:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011e48:	e9c0 2100 	strd	r2, r1, [r0]
 8011e4c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8011e50:	490c      	ldr	r1, [pc, #48]	; (8011e84 <Network::Network()+0x50>)
 8011e52:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011e56:	2200      	movs	r2, #0
 8011e58:	6102      	str	r2, [r0, #16]
 8011e5a:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 8011e5e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 8011e62:	61c3      	str	r3, [r0, #28]
 8011e64:	f880 3020 	strb.w	r3, [r0, #32]
 8011e68:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8011e6c:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 8011e70:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011e74:	f802 3f01 	strb.w	r3, [r2, #1]!
 8011e78:	2b00      	cmp	r3, #0
 8011e7a:	d1f9      	bne.n	8011e70 <Network::Network()+0x3c>
 8011e7c:	4770      	bx	lr
 8011e7e:	bf00      	nop
 8011e80:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 8011e84:	080196e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, ip, pc}

08011e88 <Network::Shutdown()>:
 8011e88:	b508      	push	{r3, lr}
 8011e8a:	30bc      	adds	r0, #188	; 0xbc
 8011e8c:	f001 fc22 	bl	80136d4 <NetworkDisplay::ShowShutdown()>
 8011e90:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e94:	f7f6 b9d6 	b.w	8008244 <net_shutdown>

08011e98 <Network::Begin(unsigned short)>:
 8011e98:	4608      	mov	r0, r1
 8011e9a:	f7ff ba97 	b.w	80113cc <udp_bind>

08011e9e <Network::End(unsigned short)>:
 8011e9e:	4608      	mov	r0, r1
 8011ea0:	f7ff baae 	b.w	8011400 <udp_unbind>

08011ea4 <Network::MacAddressCopyTo(unsigned char*)>:
 8011ea4:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 8011ea8:	3901      	subs	r1, #1
 8011eaa:	30a5      	adds	r0, #165	; 0xa5
 8011eac:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8011eb0:	f801 2f01 	strb.w	r2, [r1, #1]!
 8011eb4:	4283      	cmp	r3, r0
 8011eb6:	d1f9      	bne.n	8011eac <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8011eb8:	4770      	bx	lr

08011eba <Network::JoinGroup(int, unsigned int)>:
 8011eba:	4610      	mov	r0, r2
 8011ebc:	f001 b81a 	b.w	8012ef4 <igmp_join>

08011ec0 <Network::SetDefaultIp()>:
 8011ec0:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8011ec4:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 8011ec8:	041b      	lsls	r3, r3, #16
 8011eca:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8011ece:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 8011ed2:	3302      	adds	r3, #2
 8011ed4:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8011ed8:	22ff      	movs	r2, #255	; 0xff
 8011eda:	e9c0 3206 	strd	r3, r2, [r0, #24]
 8011ede:	6143      	str	r3, [r0, #20]
 8011ee0:	4770      	bx	lr
	...

08011ee4 <Network::Init(NetworkParamsStore*)>:
 8011ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ee8:	b0a5      	sub	sp, #148	; 0x94
 8011eea:	4604      	mov	r4, r0
 8011eec:	a80b      	add	r0, sp, #44	; 0x2c
 8011eee:	f000 faf3 	bl	80124d8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8011ef2:	a80b      	add	r0, sp, #44	; 0x2c
 8011ef4:	f000 fafc 	bl	80124f0 <NetworkParams::Load()>
 8011ef8:	b110      	cbz	r0, 8011f00 <Network::Init(NetworkParamsStore*)+0x1c>
 8011efa:	a80b      	add	r0, sp, #44	; 0x2c
 8011efc:	f000 fccd 	bl	801289a <NetworkParams::Dump()>
 8011f00:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8011f04:	4628      	mov	r0, r5
 8011f06:	f001 fbc7 	bl	8013698 <NetworkDisplay::ShowEmacStart()>
 8011f0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011f0c:	9308      	str	r3, [sp, #32]
 8011f0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f10:	9309      	str	r3, [sp, #36]	; 0x24
 8011f12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011f14:	930a      	str	r3, [sp, #40]	; 0x28
 8011f16:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011f1a:	7163      	strb	r3, [r4, #5]
 8011f1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011f1e:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8011f22:	bf18      	it	ne
 8011f24:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8011f28:	60e2      	str	r2, [r4, #12]
 8011f2a:	061b      	lsls	r3, r3, #24
 8011f2c:	bf4c      	ite	mi
 8011f2e:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 8011f32:	2300      	movpl	r3, #0
 8011f34:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8011f38:	6123      	str	r3, [r4, #16]
 8011f3a:	4630      	mov	r0, r6
 8011f3c:	f003 ff74 	bl	8015e28 <emac_start(unsigned char*)>
 8011f40:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 8011f44:	f104 0720 	add.w	r7, r4, #32
 8011f48:	2b00      	cmp	r3, #0
 8011f4a:	f040 80cb 	bne.w	80120e4 <Network::Init(NetworkParamsStore*)+0x200>
 8011f4e:	4987      	ldr	r1, [pc, #540]	; (801216c <Network::Init(NetworkParamsStore*)+0x288>)
 8011f50:	f104 001f 	add.w	r0, r4, #31
 8011f54:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011f58:	f103 0c01 	add.w	ip, r3, #1
 8011f5c:	2a00      	cmp	r2, #0
 8011f5e:	f040 80bd 	bne.w	80120dc <Network::Init(NetworkParamsStore*)+0x1f8>
 8011f62:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8011f66:	0910      	lsrs	r0, r2, #4
 8011f68:	2a9f      	cmp	r2, #159	; 0x9f
 8011f6a:	f002 020f 	and.w	r2, r2, #15
 8011f6e:	bf94      	ite	ls
 8011f70:	3030      	addls	r0, #48	; 0x30
 8011f72:	3037      	addhi	r0, #55	; 0x37
 8011f74:	18e1      	adds	r1, r4, r3
 8011f76:	2a09      	cmp	r2, #9
 8011f78:	44a4      	add	ip, r4
 8011f7a:	bf94      	ite	ls
 8011f7c:	3230      	addls	r2, #48	; 0x30
 8011f7e:	3237      	addhi	r2, #55	; 0x37
 8011f80:	f881 0020 	strb.w	r0, [r1, #32]
 8011f84:	f88c 2020 	strb.w	r2, [ip, #32]
 8011f88:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 8011f8c:	f103 0802 	add.w	r8, r3, #2
 8011f90:	0910      	lsrs	r0, r2, #4
 8011f92:	2a9f      	cmp	r2, #159	; 0x9f
 8011f94:	eb04 0c08 	add.w	ip, r4, r8
 8011f98:	f002 020f 	and.w	r2, r2, #15
 8011f9c:	bf94      	ite	ls
 8011f9e:	3030      	addls	r0, #48	; 0x30
 8011fa0:	3037      	addhi	r0, #55	; 0x37
 8011fa2:	f103 0e03 	add.w	lr, r3, #3
 8011fa6:	f88c 0020 	strb.w	r0, [ip, #32]
 8011faa:	2a09      	cmp	r2, #9
 8011fac:	eb04 000e 	add.w	r0, r4, lr
 8011fb0:	bf94      	ite	ls
 8011fb2:	3230      	addls	r2, #48	; 0x30
 8011fb4:	3237      	addhi	r2, #55	; 0x37
 8011fb6:	f880 2020 	strb.w	r2, [r0, #32]
 8011fba:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 8011fbe:	f103 0c04 	add.w	ip, r3, #4
 8011fc2:	0910      	lsrs	r0, r2, #4
 8011fc4:	2a9f      	cmp	r2, #159	; 0x9f
 8011fc6:	f103 0305 	add.w	r3, r3, #5
 8011fca:	f002 020f 	and.w	r2, r2, #15
 8011fce:	bf94      	ite	ls
 8011fd0:	3030      	addls	r0, #48	; 0x30
 8011fd2:	3037      	addhi	r0, #55	; 0x37
 8011fd4:	4423      	add	r3, r4
 8011fd6:	2a09      	cmp	r2, #9
 8011fd8:	44a4      	add	ip, r4
 8011fda:	bf94      	ite	ls
 8011fdc:	3230      	addls	r2, #48	; 0x30
 8011fde:	3237      	addhi	r2, #55	; 0x37
 8011fe0:	f88c 0020 	strb.w	r0, [ip, #32]
 8011fe4:	f883 2020 	strb.w	r2, [r3, #32]
 8011fe8:	2300      	movs	r3, #0
 8011fea:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 8011fee:	f004 f831 	bl	8016054 <net::link_register_read()>
 8011ff2:	7963      	ldrb	r3, [r4, #5]
 8011ff4:	6020      	str	r0, [r4, #0]
 8011ff6:	2800      	cmp	r0, #0
 8011ff8:	f040 80a1 	bne.w	801213e <Network::Init(NetworkParamsStore*)+0x25a>
 8011ffc:	2b00      	cmp	r3, #0
 8011ffe:	f040 80af 	bne.w	8012160 <Network::Init(NetworkParamsStore*)+0x27c>
 8012002:	9b08      	ldr	r3, [sp, #32]
 8012004:	2b00      	cmp	r3, #0
 8012006:	d176      	bne.n	80120f6 <Network::Init(NetworkParamsStore*)+0x212>
 8012008:	4620      	mov	r0, r4
 801200a:	f7ff ff59 	bl	8011ec0 <Network::SetDefaultIp()>
 801200e:	6963      	ldr	r3, [r4, #20]
 8012010:	69e2      	ldr	r2, [r4, #28]
 8012012:	9308      	str	r3, [sp, #32]
 8012014:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8012018:	f104 0905 	add.w	r9, r4, #5
 801201c:	f104 0a07 	add.w	sl, r4, #7
 8012020:	464b      	mov	r3, r9
 8012022:	f8cd a000 	str.w	sl, [sp]
 8012026:	463a      	mov	r2, r7
 8012028:	a908      	add	r1, sp, #32
 801202a:	4630      	mov	r0, r6
 801202c:	f7f6 f8be 	bl	80081ac <net_init>
 8012030:	79e3      	ldrb	r3, [r4, #7]
 8012032:	b11b      	cbz	r3, 801203c <Network::Init(NetworkParamsStore*)+0x158>
 8012034:	2104      	movs	r1, #4
 8012036:	4628      	mov	r0, r5
 8012038:	f001 fb52 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801203c:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 8012040:	9302      	str	r3, [sp, #8]
 8012042:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012046:	9303      	str	r3, [sp, #12]
 8012048:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 801204c:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8012174 <Network::Init(NetworkParamsStore*)+0x290>
 8012050:	f8df b124 	ldr.w	fp, [pc, #292]	; 8012178 <Network::Init(NetworkParamsStore*)+0x294>
 8012054:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 8012058:	009b      	lsls	r3, r3, #2
 801205a:	9305      	str	r3, [sp, #20]
 801205c:	79e3      	ldrb	r3, [r4, #7]
 801205e:	b38b      	cbz	r3, 80120c4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8012060:	9b02      	ldr	r3, [sp, #8]
 8012062:	b37b      	cbz	r3, 80120c4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8012064:	9b03      	ldr	r3, [sp, #12]
 8012066:	b36b      	cbz	r3, 80120c4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8012068:	f8d8 0000 	ldr.w	r0, [r8]
 801206c:	2104      	movs	r1, #4
 801206e:	f002 f961 	bl	8014334 <LedBlink::SetMode(ledblink::Mode)>
 8012072:	2103      	movs	r1, #3
 8012074:	4628      	mov	r0, r5
 8012076:	f001 fb33 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801207a:	2000      	movs	r0, #0
 801207c:	f002 fc38 	bl	80148f0 <time>
 8012080:	9004      	str	r0, [sp, #16]
 8012082:	2000      	movs	r0, #0
 8012084:	f002 fc34 	bl	80148f0 <time>
 8012088:	9b04      	ldr	r3, [sp, #16]
 801208a:	4939      	ldr	r1, [pc, #228]	; (8012170 <Network::Init(NetworkParamsStore*)+0x28c>)
 801208c:	1ac0      	subs	r0, r0, r3
 801208e:	9b05      	ldr	r3, [sp, #20]
 8012090:	4298      	cmp	r0, r3
 8012092:	db38      	blt.n	8012106 <Network::Init(NetworkParamsStore*)+0x222>
 8012094:	2101      	movs	r1, #1
 8012096:	4628      	mov	r0, r5
 8012098:	f001 fb22 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801209c:	f8d8 0000 	ldr.w	r0, [r8]
 80120a0:	2101      	movs	r1, #1
 80120a2:	f002 f947 	bl	8014334 <LedBlink::SetMode(ledblink::Mode)>
 80120a6:	2301      	movs	r3, #1
 80120a8:	7163      	strb	r3, [r4, #5]
 80120aa:	2300      	movs	r3, #0
 80120ac:	71e3      	strb	r3, [r4, #7]
 80120ae:	f8cd a000 	str.w	sl, [sp]
 80120b2:	464b      	mov	r3, r9
 80120b4:	463a      	mov	r2, r7
 80120b6:	a908      	add	r1, sp, #32
 80120b8:	4630      	mov	r0, r6
 80120ba:	f7f6 f877 	bl	80081ac <net_init>
 80120be:	7963      	ldrb	r3, [r4, #5]
 80120c0:	2b00      	cmp	r3, #0
 80120c2:	d0cb      	beq.n	801205c <Network::Init(NetworkParamsStore*)+0x178>
 80120c4:	9b08      	ldr	r3, [sp, #32]
 80120c6:	6163      	str	r3, [r4, #20]
 80120c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80120ca:	61e3      	str	r3, [r4, #28]
 80120cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80120ce:	61a3      	str	r3, [r4, #24]
 80120d0:	4628      	mov	r0, r5
 80120d2:	f001 fae7 	bl	80136a4 <NetworkDisplay::ShowIp()>
 80120d6:	b025      	add	sp, #148	; 0x94
 80120d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120dc:	f800 2f01 	strb.w	r2, [r0, #1]!
 80120e0:	4663      	mov	r3, ip
 80120e2:	e737      	b.n	8011f54 <Network::Init(NetworkParamsStore*)+0x70>
 80120e4:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80120e8:	4638      	mov	r0, r7
 80120ea:	f7ff fe93 	bl	8011e14 <strncpy.constprop.0.isra.0>
 80120ee:	2300      	movs	r3, #0
 80120f0:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80120f4:	e77b      	b.n	8011fee <Network::Init(NetworkParamsStore*)+0x10a>
 80120f6:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80120fa:	69e1      	ldr	r1, [r4, #28]
 80120fc:	4053      	eors	r3, r2
 80120fe:	420b      	tst	r3, r1
 8012100:	bf18      	it	ne
 8012102:	920a      	strne	r2, [sp, #40]	; 0x28
 8012104:	e788      	b.n	8012018 <Network::Init(NetworkParamsStore*)+0x134>
 8012106:	f8d8 3000 	ldr.w	r3, [r8]
 801210a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 801210e:	f1bc 0f00 	cmp.w	ip, #0
 8012112:	d0b6      	beq.n	8012082 <Network::Init(NetworkParamsStore*)+0x19e>
 8012114:	f8db 0000 	ldr.w	r0, [fp]
 8012118:	695a      	ldr	r2, [r3, #20]
 801211a:	1a80      	subs	r0, r0, r2
 801211c:	4584      	cmp	ip, r0
 801211e:	d8b0      	bhi.n	8012082 <Network::Init(NetworkParamsStore*)+0x19e>
 8012120:	f8db 0000 	ldr.w	r0, [fp]
 8012124:	6158      	str	r0, [r3, #20]
 8012126:	6918      	ldr	r0, [r3, #16]
 8012128:	2801      	cmp	r0, #1
 801212a:	f080 0201 	eor.w	r2, r0, #1
 801212e:	611a      	str	r2, [r3, #16]
 8012130:	bf1a      	itte	ne
 8012132:	2301      	movne	r3, #1
 8012134:	f8c1 3818 	strne.w	r3, [r1, #2072]	; 0x818
 8012138:	f8c1 0828 	streq.w	r0, [r1, #2088]	; 0x828
 801213c:	e7a1      	b.n	8012082 <Network::Init(NetworkParamsStore*)+0x19e>
 801213e:	b11b      	cbz	r3, 8012148 <Network::Init(NetworkParamsStore*)+0x264>
 8012140:	2300      	movs	r3, #0
 8012142:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8012146:	9308      	str	r3, [sp, #32]
 8012148:	2300      	movs	r3, #0
 801214a:	f88d 301f 	strb.w	r3, [sp, #31]
 801214e:	f10d 031f 	add.w	r3, sp, #31
 8012152:	9300      	str	r3, [sp, #0]
 8012154:	463a      	mov	r2, r7
 8012156:	a908      	add	r1, sp, #32
 8012158:	4630      	mov	r0, r6
 801215a:	f7f6 f827 	bl	80081ac <net_init>
 801215e:	e7b1      	b.n	80120c4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8012160:	2101      	movs	r1, #1
 8012162:	4628      	mov	r0, r5
 8012164:	f001 fabc 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012168:	e756      	b.n	8012018 <Network::Init(NetworkParamsStore*)+0x134>
 801216a:	bf00      	nop
 801216c:	080196ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, ip, pc}
 8012170:	40020000 	andmi	r0, r2, r0
 8012174:	2000fee4 	andcs	pc, r0, r4, ror #29
 8012178:	2000fefc 	strdcs	pc, [r0], -ip

0801217c <Network::SetIp(unsigned int)>:
 801217c:	7943      	ldrb	r3, [r0, #5]
 801217e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012180:	4604      	mov	r4, r0
 8012182:	460d      	mov	r5, r1
 8012184:	2600      	movs	r6, #0
 8012186:	b113      	cbz	r3, 801218e <Network::SetIp(unsigned int)+0x12>
 8012188:	7146      	strb	r6, [r0, #5]
 801218a:	f7fe fea7 	bl	8010edc <net_dhcp_release>
 801218e:	71e6      	strb	r6, [r4, #7]
 8012190:	b985      	cbnz	r5, 80121b4 <Network::SetIp(unsigned int)+0x38>
 8012192:	4620      	mov	r0, r4
 8012194:	f7ff fe94 	bl	8011ec0 <Network::SetDefaultIp()>
 8012198:	6960      	ldr	r0, [r4, #20]
 801219a:	f7fe fe63 	bl	8010e64 <net_set_ip>
 801219e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80121a2:	9001      	str	r0, [sp, #4]
 80121a4:	f001 fa7e 	bl	80136a4 <NetworkDisplay::ShowIp()>
 80121a8:	9801      	ldr	r0, [sp, #4]
 80121aa:	b002      	add	sp, #8
 80121ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121b0:	f001 ba7e 	b.w	80136b0 <NetworkDisplay::ShowNetMask()>
 80121b4:	4628      	mov	r0, r5
 80121b6:	f7fe fe55 	bl	8010e64 <net_set_ip>
 80121ba:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80121be:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80121c2:	2800      	cmp	r0, #0
 80121c4:	d0eb      	beq.n	801219e <Network::SetIp(unsigned int)+0x22>
 80121c6:	6803      	ldr	r3, [r0, #0]
 80121c8:	4629      	mov	r1, r5
 80121ca:	689b      	ldr	r3, [r3, #8]
 80121cc:	4798      	blx	r3
 80121ce:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80121d2:	6803      	ldr	r3, [r0, #0]
 80121d4:	2100      	movs	r1, #0
 80121d6:	699b      	ldr	r3, [r3, #24]
 80121d8:	4798      	blx	r3
 80121da:	e7e0      	b.n	801219e <Network::SetIp(unsigned int)+0x22>

080121dc <Network::SetNetmask(unsigned int)>:
 80121dc:	69c2      	ldr	r2, [r0, #28]
 80121de:	428a      	cmp	r2, r1
 80121e0:	b513      	push	{r0, r1, r4, lr}
 80121e2:	4604      	mov	r4, r0
 80121e4:	d011      	beq.n	801220a <Network::SetNetmask(unsigned int)+0x2e>
 80121e6:	61c1      	str	r1, [r0, #28]
 80121e8:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80121ec:	b110      	cbz	r0, 80121f4 <Network::SetNetmask(unsigned int)+0x18>
 80121ee:	6803      	ldr	r3, [r0, #0]
 80121f0:	68db      	ldr	r3, [r3, #12]
 80121f2:	4798      	blx	r3
 80121f4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80121f8:	9001      	str	r0, [sp, #4]
 80121fa:	f001 fa53 	bl	80136a4 <NetworkDisplay::ShowIp()>
 80121fe:	9801      	ldr	r0, [sp, #4]
 8012200:	b002      	add	sp, #8
 8012202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012206:	f001 ba53 	b.w	80136b0 <NetworkDisplay::ShowNetMask()>
 801220a:	b002      	add	sp, #8
 801220c:	bd10      	pop	{r4, pc}

0801220e <Network::SetHostName(char const*)>:
 801220e:	b570      	push	{r4, r5, r6, lr}
 8012210:	4604      	mov	r4, r0
 8012212:	f100 0520 	add.w	r5, r0, #32
 8012216:	4628      	mov	r0, r5
 8012218:	f7ff fdfc 	bl	8011e14 <strncpy.constprop.0.isra.0>
 801221c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012220:	2300      	movs	r3, #0
 8012222:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8012226:	b158      	cbz	r0, 8012240 <Network::SetHostName(char const*)+0x32>
 8012228:	6803      	ldr	r3, [r0, #0]
 801222a:	695e      	ldr	r6, [r3, #20]
 801222c:	462b      	mov	r3, r5
 801222e:	461a      	mov	r2, r3
 8012230:	3301      	adds	r3, #1
 8012232:	7811      	ldrb	r1, [r2, #0]
 8012234:	2900      	cmp	r1, #0
 8012236:	d1fa      	bne.n	801222e <Network::SetHostName(char const*)+0x20>
 8012238:	1b52      	subs	r2, r2, r5
 801223a:	b292      	uxth	r2, r2
 801223c:	4629      	mov	r1, r5
 801223e:	47b0      	blx	r6
 8012240:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8012244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012248:	f001 ba3e 	b.w	80136c8 <NetworkDisplay::ShowHostName()>

0801224c <Network::SetZeroconf()>:
 801224c:	b510      	push	{r4, lr}
 801224e:	b086      	sub	sp, #24
 8012250:	4604      	mov	r4, r0
 8012252:	a803      	add	r0, sp, #12
 8012254:	f7fe fe4c 	bl	8010ef0 <net_set_zeroconf>
 8012258:	71e0      	strb	r0, [r4, #7]
 801225a:	b170      	cbz	r0, 801227a <Network::SetZeroconf()+0x2e>
 801225c:	9b03      	ldr	r3, [sp, #12]
 801225e:	6163      	str	r3, [r4, #20]
 8012260:	9b04      	ldr	r3, [sp, #16]
 8012262:	61e3      	str	r3, [r4, #28]
 8012264:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012268:	9b05      	ldr	r3, [sp, #20]
 801226a:	61a3      	str	r3, [r4, #24]
 801226c:	2300      	movs	r3, #0
 801226e:	7163      	strb	r3, [r4, #5]
 8012270:	b118      	cbz	r0, 801227a <Network::SetZeroconf()+0x2e>
 8012272:	6803      	ldr	r3, [r0, #0]
 8012274:	2101      	movs	r1, #1
 8012276:	699b      	ldr	r3, [r3, #24]
 8012278:	4798      	blx	r3
 801227a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801227e:	9001      	str	r0, [sp, #4]
 8012280:	f001 fa10 	bl	80136a4 <NetworkDisplay::ShowIp()>
 8012284:	9801      	ldr	r0, [sp, #4]
 8012286:	f001 fa13 	bl	80136b0 <NetworkDisplay::ShowNetMask()>
 801228a:	79e0      	ldrb	r0, [r4, #7]
 801228c:	b006      	add	sp, #24
 801228e:	bd10      	pop	{r4, pc}

08012290 <Network::EnableDhcp()>:
 8012290:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012292:	4e25      	ldr	r6, [pc, #148]	; (8012328 <Network::EnableDhcp()+0x98>)
 8012294:	6833      	ldr	r3, [r6, #0]
 8012296:	781f      	ldrb	r7, [r3, #0]
 8012298:	b085      	sub	sp, #20
 801229a:	4604      	mov	r4, r0
 801229c:	b137      	cbz	r7, 80122ac <Network::EnableDhcp()+0x1c>
 801229e:	2200      	movs	r2, #0
 80122a0:	701a      	strb	r2, [r3, #0]
 80122a2:	2104      	movs	r1, #4
 80122a4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80122a8:	f002 fcfa 	bl	8014ca0 <fwdgt_config>
 80122ac:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80122b0:	2101      	movs	r1, #1
 80122b2:	4628      	mov	r0, r5
 80122b4:	f001 fa14 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80122b8:	1de2      	adds	r2, r4, #7
 80122ba:	f104 0120 	add.w	r1, r4, #32
 80122be:	a801      	add	r0, sp, #4
 80122c0:	f7fe fde0 	bl	8010e84 <net_set_dhcp>
 80122c4:	79e3      	ldrb	r3, [r4, #7]
 80122c6:	7160      	strb	r0, [r4, #5]
 80122c8:	b35b      	cbz	r3, 8012322 <Network::EnableDhcp()+0x92>
 80122ca:	2104      	movs	r1, #4
 80122cc:	4628      	mov	r0, r5
 80122ce:	f001 fa07 	bl	80136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80122d2:	b16f      	cbz	r7, 80122f0 <Network::EnableDhcp()+0x60>
 80122d4:	2102      	movs	r1, #2
 80122d6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80122da:	6836      	ldr	r6, [r6, #0]
 80122dc:	f002 fce0 	bl	8014ca0 <fwdgt_config>
 80122e0:	2801      	cmp	r0, #1
 80122e2:	bf0c      	ite	eq
 80122e4:	2301      	moveq	r3, #1
 80122e6:	2300      	movne	r3, #0
 80122e8:	7033      	strb	r3, [r6, #0]
 80122ea:	d101      	bne.n	80122f0 <Network::EnableDhcp()+0x60>
 80122ec:	f002 fcc8 	bl	8014c80 <fwdgt_enable>
 80122f0:	9b01      	ldr	r3, [sp, #4]
 80122f2:	6163      	str	r3, [r4, #20]
 80122f4:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80122f8:	9b02      	ldr	r3, [sp, #8]
 80122fa:	61e3      	str	r3, [r4, #28]
 80122fc:	9b03      	ldr	r3, [sp, #12]
 80122fe:	61a3      	str	r3, [r4, #24]
 8012300:	b118      	cbz	r0, 801230a <Network::EnableDhcp()+0x7a>
 8012302:	6803      	ldr	r3, [r0, #0]
 8012304:	7961      	ldrb	r1, [r4, #5]
 8012306:	699b      	ldr	r3, [r3, #24]
 8012308:	4798      	blx	r3
 801230a:	4628      	mov	r0, r5
 801230c:	f001 f9ca 	bl	80136a4 <NetworkDisplay::ShowIp()>
 8012310:	4628      	mov	r0, r5
 8012312:	f001 f9cd 	bl	80136b0 <NetworkDisplay::ShowNetMask()>
 8012316:	4628      	mov	r0, r5
 8012318:	f001 f9d0 	bl	80136bc <NetworkDisplay::ShowGatewayIp()>
 801231c:	7960      	ldrb	r0, [r4, #5]
 801231e:	b005      	add	sp, #20
 8012320:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012322:	2102      	movs	r1, #2
 8012324:	e7d2      	b.n	80122cc <Network::EnableDhcp()+0x3c>
 8012326:	bf00      	nop
 8012328:	2000fee8 	andcs	pc, r0, r8, ror #29

0801232c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 801232c:	b109      	cbz	r1, 8012332 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801232e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 8012332:	b10a      	cbz	r2, 8012338 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8012334:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8012338:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 801233c:	f043 0303 	orr.w	r3, r3, #3
 8012340:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 8012344:	4770      	bx	lr

08012346 <Network::ApplyQueuedConfig()>:
 8012346:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 801234a:	b510      	push	{r4, lr}
 801234c:	4604      	mov	r4, r0
 801234e:	b3c3      	cbz	r3, 80123c2 <Network::ApplyQueuedConfig()+0x7c>
 8012350:	079a      	lsls	r2, r3, #30
 8012352:	d01a      	beq.n	801238a <Network::ApplyQueuedConfig()+0x44>
 8012354:	079b      	lsls	r3, r3, #30
 8012356:	d509      	bpl.n	801236c <Network::ApplyQueuedConfig()+0x26>
 8012358:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 801235c:	f7ff ff3e 	bl	80121dc <Network::SetNetmask(unsigned int)>
 8012360:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8012364:	f023 0302 	bic.w	r3, r3, #2
 8012368:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801236c:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8012370:	07d9      	lsls	r1, r3, #31
 8012372:	d50a      	bpl.n	801238a <Network::ApplyQueuedConfig()+0x44>
 8012374:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 8012378:	4620      	mov	r0, r4
 801237a:	f7ff feff 	bl	801217c <Network::SetIp(unsigned int)>
 801237e:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8012382:	f023 0301 	bic.w	r3, r3, #1
 8012386:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801238a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801238e:	075a      	lsls	r2, r3, #29
 8012390:	d508      	bpl.n	80123a4 <Network::ApplyQueuedConfig()+0x5e>
 8012392:	4620      	mov	r0, r4
 8012394:	f7ff ff7c 	bl	8012290 <Network::EnableDhcp()>
 8012398:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801239c:	f023 0304 	bic.w	r3, r3, #4
 80123a0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80123a4:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80123a8:	071b      	lsls	r3, r3, #28
 80123aa:	d508      	bpl.n	80123be <Network::ApplyQueuedConfig()+0x78>
 80123ac:	4620      	mov	r0, r4
 80123ae:	f7ff ff4d 	bl	801224c <Network::SetZeroconf()>
 80123b2:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80123b6:	f023 0308 	bic.w	r3, r3, #8
 80123ba:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80123be:	2001      	movs	r0, #1
 80123c0:	e000      	b.n	80123c4 <Network::ApplyQueuedConfig()+0x7e>
 80123c2:	4618      	mov	r0, r3
 80123c4:	bd10      	pop	{r4, pc}
	...

080123c8 <Network::Print()>:
 80123c8:	b530      	push	{r4, r5, lr}
 80123ca:	4604      	mov	r4, r0
 80123cc:	b085      	sub	sp, #20
 80123ce:	4832      	ldr	r0, [pc, #200]	; (8012498 <Network::Print()+0xd0>)
 80123d0:	f7f7 ff7e 	bl	800a2d0 <printf>
 80123d4:	f104 0120 	add.w	r1, r4, #32
 80123d8:	4830      	ldr	r0, [pc, #192]	; (801249c <Network::Print()+0xd4>)
 80123da:	f7f7 ff79 	bl	800a2d0 <printf>
 80123de:	68a1      	ldr	r1, [r4, #8]
 80123e0:	482f      	ldr	r0, [pc, #188]	; (80124a0 <Network::Print()+0xd8>)
 80123e2:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 80123e6:	f7f7 ff73 	bl	800a2d0 <printf>
 80123ea:	69e0      	ldr	r0, [r4, #28]
 80123ec:	6965      	ldr	r5, [r4, #20]
 80123ee:	f004 fbeb 	bl	8016bc8 <__popcountsi2>
 80123f2:	0e2b      	lsrs	r3, r5, #24
 80123f4:	9001      	str	r0, [sp, #4]
 80123f6:	9300      	str	r3, [sp, #0]
 80123f8:	f3c5 2207 	ubfx	r2, r5, #8, #8
 80123fc:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8012400:	b2e9      	uxtb	r1, r5
 8012402:	4828      	ldr	r0, [pc, #160]	; (80124a4 <Network::Print()+0xdc>)
 8012404:	f7f7 ff64 	bl	800a2d0 <printf>
 8012408:	69e1      	ldr	r1, [r4, #28]
 801240a:	4827      	ldr	r0, [pc, #156]	; (80124a8 <Network::Print()+0xe0>)
 801240c:	0e0b      	lsrs	r3, r1, #24
 801240e:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012412:	9300      	str	r3, [sp, #0]
 8012414:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8012418:	b2c9      	uxtb	r1, r1
 801241a:	f7f7 ff59 	bl	800a2d0 <printf>
 801241e:	69a1      	ldr	r1, [r4, #24]
 8012420:	4822      	ldr	r0, [pc, #136]	; (80124ac <Network::Print()+0xe4>)
 8012422:	0e0b      	lsrs	r3, r1, #24
 8012424:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012428:	9300      	str	r3, [sp, #0]
 801242a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801242e:	b2c9      	uxtb	r1, r1
 8012430:	f7f7 ff4e 	bl	800a2d0 <printf>
 8012434:	69e3      	ldr	r3, [r4, #28]
 8012436:	6961      	ldr	r1, [r4, #20]
 8012438:	481d      	ldr	r0, [pc, #116]	; (80124b0 <Network::Print()+0xe8>)
 801243a:	ea61 0103 	orn	r1, r1, r3
 801243e:	0e0b      	lsrs	r3, r1, #24
 8012440:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012444:	9300      	str	r3, [sp, #0]
 8012446:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801244a:	b2c9      	uxtb	r1, r1
 801244c:	f7f7 ff40 	bl	800a2d0 <printf>
 8012450:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8012454:	9302      	str	r3, [sp, #8]
 8012456:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 801245a:	9301      	str	r3, [sp, #4]
 801245c:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8012460:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8012464:	9300      	str	r3, [sp, #0]
 8012466:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 801246a:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 801246e:	4811      	ldr	r0, [pc, #68]	; (80124b4 <Network::Print()+0xec>)
 8012470:	f7f7 ff2e 	bl	800a2d0 <printf>
 8012474:	4b10      	ldr	r3, [pc, #64]	; (80124b8 <Network::Print()+0xf0>)
 8012476:	681b      	ldr	r3, [r3, #0]
 8012478:	79da      	ldrb	r2, [r3, #7]
 801247a:	b952      	cbnz	r2, 8012492 <Network::Print()+0xca>
 801247c:	795b      	ldrb	r3, [r3, #5]
 801247e:	2b00      	cmp	r3, #0
 8012480:	bf14      	ite	ne
 8012482:	2144      	movne	r1, #68	; 0x44
 8012484:	2153      	moveq	r1, #83	; 0x53
 8012486:	480d      	ldr	r0, [pc, #52]	; (80124bc <Network::Print()+0xf4>)
 8012488:	b005      	add	sp, #20
 801248a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801248e:	f7f7 bf1f 	b.w	800a2d0 <printf>
 8012492:	215a      	movs	r1, #90	; 0x5a
 8012494:	e7f7      	b.n	8012486 <Network::Print()+0xbe>
 8012496:	bf00      	nop
 8012498:	080196fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, ip, pc}
 801249c:	08019703 	stmdaeq	r1, {r0, r1, r8, r9, sl, ip, pc}
 80124a0:	08019714 	stmdaeq	r1, {r2, r4, r8, r9, sl, ip, pc}
 80124a4:	08019729 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, ip, pc}
 80124a8:	08019746 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, ip, pc}
 80124ac:	08019760 	stmdaeq	r1, {r5, r6, r8, r9, sl, ip, pc}
 80124b0:	0801977a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, pc}
 80124b4:	08019794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, pc}
 80124b8:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 80124bc:	080197c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, ip, pc}

080124c0 <Network::TcpBegin(unsigned short)>:
 80124c0:	4608      	mov	r0, r1
 80124c2:	f7fe bea5 	b.w	8011210 <tcp_begin>

080124c6 <Network::TcpRead(int, unsigned char const**)>:
 80124c6:	4608      	mov	r0, r1
 80124c8:	4611      	mov	r1, r2
 80124ca:	f7fe beed 	b.w	80112a8 <tcp_read>

080124ce <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80124ce:	4608      	mov	r0, r1
 80124d0:	4611      	mov	r1, r2
 80124d2:	461a      	mov	r2, r3
 80124d4:	f7fe beba 	b.w	801124c <tcp_write>

080124d8 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80124d8:	b510      	push	{r4, lr}
 80124da:	225e      	movs	r2, #94	; 0x5e
 80124dc:	4604      	mov	r4, r0
 80124de:	f840 1b04 	str.w	r1, [r0], #4
 80124e2:	2100      	movs	r1, #0
 80124e4:	f002 f8fc 	bl	80146e0 <memset>
 80124e8:	2301      	movs	r3, #1
 80124ea:	7623      	strb	r3, [r4, #24]
 80124ec:	4620      	mov	r0, r4
 80124ee:	bd10      	pop	{r4, pc}

080124f0 <NetworkParams::Load()>:
 80124f0:	b508      	push	{r3, lr}
 80124f2:	2300      	movs	r3, #0
 80124f4:	4601      	mov	r1, r0
 80124f6:	6043      	str	r3, [r0, #4]
 80124f8:	6800      	ldr	r0, [r0, #0]
 80124fa:	b120      	cbz	r0, 8012506 <NetworkParams::Load()+0x16>
 80124fc:	6803      	ldr	r3, [r0, #0]
 80124fe:	3104      	adds	r1, #4
 8012500:	68db      	ldr	r3, [r3, #12]
 8012502:	4798      	blx	r3
 8012504:	2001      	movs	r0, #1
 8012506:	bd08      	pop	{r3, pc}

08012508 <NetworkParams::Load(char const*, unsigned int)>:
 8012508:	6803      	ldr	r3, [r0, #0]
 801250a:	b1d3      	cbz	r3, 8012542 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 801250c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801250e:	2300      	movs	r3, #0
 8012510:	6043      	str	r3, [r0, #4]
 8012512:	4604      	mov	r4, r0
 8012514:	460d      	mov	r5, r1
 8012516:	4616      	mov	r6, r2
 8012518:	490a      	ldr	r1, [pc, #40]	; (8012544 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 801251a:	4602      	mov	r2, r0
 801251c:	4668      	mov	r0, sp
 801251e:	f001 fa37 	bl	8013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012522:	4632      	mov	r2, r6
 8012524:	4629      	mov	r1, r5
 8012526:	4668      	mov	r0, sp
 8012528:	f001 fa36 	bl	8013998 <ReadConfigFile::Read(char const*, unsigned int)>
 801252c:	4621      	mov	r1, r4
 801252e:	f851 0b04 	ldr.w	r0, [r1], #4
 8012532:	6803      	ldr	r3, [r0, #0]
 8012534:	689b      	ldr	r3, [r3, #8]
 8012536:	4798      	blx	r3
 8012538:	4668      	mov	r0, sp
 801253a:	f001 fa2c 	bl	8013996 <ReadConfigFile::~ReadConfigFile()>
 801253e:	b002      	add	sp, #8
 8012540:	bd70      	pop	{r4, r5, r6, pc}
 8012542:	4770      	bx	lr
 8012544:	08012669 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, sp}

08012548 <NetworkParams::callbackFunction(char const*)>:
 8012548:	b530      	push	{r4, r5, lr}
 801254a:	460d      	mov	r5, r1
 801254c:	b085      	sub	sp, #20
 801254e:	4604      	mov	r4, r0
 8012550:	493f      	ldr	r1, [pc, #252]	; (8012650 <NetworkParams::callbackFunction(char const*)+0x108>)
 8012552:	f10d 0207 	add.w	r2, sp, #7
 8012556:	4628      	mov	r0, r5
 8012558:	f001 fb4f 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801255c:	b978      	cbnz	r0, 801257e <NetworkParams::callbackFunction(char const*)+0x36>
 801255e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012562:	6863      	ldr	r3, [r4, #4]
 8012564:	b142      	cbz	r2, 8012578 <NetworkParams::callbackFunction(char const*)+0x30>
 8012566:	f023 0301 	bic.w	r3, r3, #1
 801256a:	3a00      	subs	r2, #0
 801256c:	bf18      	it	ne
 801256e:	2201      	movne	r2, #1
 8012570:	6063      	str	r3, [r4, #4]
 8012572:	7622      	strb	r2, [r4, #24]
 8012574:	b005      	add	sp, #20
 8012576:	bd30      	pop	{r4, r5, pc}
 8012578:	f043 0301 	orr.w	r3, r3, #1
 801257c:	e7f5      	b.n	801256a <NetworkParams::callbackFunction(char const*)+0x22>
 801257e:	4935      	ldr	r1, [pc, #212]	; (8012654 <NetworkParams::callbackFunction(char const*)+0x10c>)
 8012580:	f10d 0207 	add.w	r2, sp, #7
 8012584:	4628      	mov	r0, r5
 8012586:	f001 fb38 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801258a:	b980      	cbnz	r0, 80125ae <NetworkParams::callbackFunction(char const*)+0x66>
 801258c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012590:	6863      	ldr	r3, [r4, #4]
 8012592:	1e51      	subs	r1, r2, #1
 8012594:	2904      	cmp	r1, #4
 8012596:	bf97      	itett	ls
 8012598:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 801259c:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 80125a0:	6063      	strls	r3, [r4, #4]
 80125a2:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 80125a6:	bf84      	itt	hi
 80125a8:	6063      	strhi	r3, [r4, #4]
 80125aa:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 80125ae:	492a      	ldr	r1, [pc, #168]	; (8012658 <NetworkParams::callbackFunction(char const*)+0x110>)
 80125b0:	aa02      	add	r2, sp, #8
 80125b2:	4628      	mov	r0, r5
 80125b4:	f001 fa98 	bl	8013ae8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80125b8:	b9c8      	cbnz	r0, 80125ee <NetworkParams::callbackFunction(char const*)+0xa6>
 80125ba:	9b02      	ldr	r3, [sp, #8]
 80125bc:	b2d9      	uxtb	r1, r3
 80125be:	29ac      	cmp	r1, #172	; 0xac
 80125c0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80125c4:	d009      	beq.n	80125da <NetworkParams::callbackFunction(char const*)+0x92>
 80125c6:	29c0      	cmp	r1, #192	; 0xc0
 80125c8:	d00b      	beq.n	80125e2 <NetworkParams::callbackFunction(char const*)+0x9a>
 80125ca:	290a      	cmp	r1, #10
 80125cc:	d10c      	bne.n	80125e8 <NetworkParams::callbackFunction(char const*)+0xa0>
 80125ce:	60a3      	str	r3, [r4, #8]
 80125d0:	6863      	ldr	r3, [r4, #4]
 80125d2:	f043 0302 	orr.w	r3, r3, #2
 80125d6:	6063      	str	r3, [r4, #4]
 80125d8:	e7cc      	b.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 80125da:	3a10      	subs	r2, #16
 80125dc:	2a0f      	cmp	r2, #15
 80125de:	d8c9      	bhi.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 80125e0:	e7f5      	b.n	80125ce <NetworkParams::callbackFunction(char const*)+0x86>
 80125e2:	2aa8      	cmp	r2, #168	; 0xa8
 80125e4:	d1c6      	bne.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 80125e6:	e7f2      	b.n	80125ce <NetworkParams::callbackFunction(char const*)+0x86>
 80125e8:	2b00      	cmp	r3, #0
 80125ea:	d0f0      	beq.n	80125ce <NetworkParams::callbackFunction(char const*)+0x86>
 80125ec:	e7c2      	b.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 80125ee:	491b      	ldr	r1, [pc, #108]	; (801265c <NetworkParams::callbackFunction(char const*)+0x114>)
 80125f0:	aa02      	add	r2, sp, #8
 80125f2:	4628      	mov	r0, r5
 80125f4:	f001 fa78 	bl	8013ae8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80125f8:	b960      	cbnz	r0, 8012614 <NetworkParams::callbackFunction(char const*)+0xcc>
 80125fa:	9b02      	ldr	r3, [sp, #8]
 80125fc:	2b00      	cmp	r3, #0
 80125fe:	d0b9      	beq.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012600:	ba1a      	rev	r2, r3
 8012602:	43d1      	mvns	r1, r2
 8012604:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8012608:	d1b4      	bne.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 801260a:	60e3      	str	r3, [r4, #12]
 801260c:	6863      	ldr	r3, [r4, #4]
 801260e:	f043 0304 	orr.w	r3, r3, #4
 8012612:	e7e0      	b.n	80125d6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8012614:	4912      	ldr	r1, [pc, #72]	; (8012660 <NetworkParams::callbackFunction(char const*)+0x118>)
 8012616:	aa02      	add	r2, sp, #8
 8012618:	4628      	mov	r0, r5
 801261a:	f001 fa65 	bl	8013ae8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801261e:	b928      	cbnz	r0, 801262c <NetworkParams::callbackFunction(char const*)+0xe4>
 8012620:	9b02      	ldr	r3, [sp, #8]
 8012622:	6123      	str	r3, [r4, #16]
 8012624:	6863      	ldr	r3, [r4, #4]
 8012626:	f043 0308 	orr.w	r3, r3, #8
 801262a:	e7d4      	b.n	80125d6 <NetworkParams::callbackFunction(char const*)+0x8e>
 801262c:	233f      	movs	r3, #63	; 0x3f
 801262e:	9303      	str	r3, [sp, #12]
 8012630:	490c      	ldr	r1, [pc, #48]	; (8012664 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8012632:	ab03      	add	r3, sp, #12
 8012634:	f104 0219 	add.w	r2, r4, #25
 8012638:	4628      	mov	r0, r5
 801263a:	f001 f9e1 	bl	8013a00 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 801263e:	2800      	cmp	r0, #0
 8012640:	d198      	bne.n	8012574 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012642:	9b03      	ldr	r3, [sp, #12]
 8012644:	4423      	add	r3, r4
 8012646:	7658      	strb	r0, [r3, #25]
 8012648:	6863      	ldr	r3, [r4, #4]
 801264a:	f043 0320 	orr.w	r3, r3, #32
 801264e:	e7c2      	b.n	80125d6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8012650:	08019818 	stmdaeq	r1, {r3, r4, fp, ip, pc}
 8012654:	080197f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, pc}
 8012658:	080197db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 801265c:	0801980f 	stmdaeq	r1, {r0, r1, r2, r3, fp, ip, pc}
 8012660:	080197e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, ip, pc}
 8012664:	08019806 	stmdaeq	r1, {r1, r2, fp, ip, pc}

08012668 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8012668:	f7ff bf6e 	b.w	8012548 <NetworkParams::callbackFunction(char const*)>

0801266c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 801266c:	b570      	push	{r4, r5, r6, lr}
 801266e:	4604      	mov	r4, r0
 8012670:	b086      	sub	sp, #24
 8012672:	4615      	mov	r5, r2
 8012674:	461e      	mov	r6, r3
 8012676:	3004      	adds	r0, #4
 8012678:	2900      	cmp	r1, #0
 801267a:	d02a      	beq.n	80126d2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x66>
 801267c:	225e      	movs	r2, #94	; 0x5e
 801267e:	f002 f818 	bl	80146b2 <memmove>
 8012682:	462a      	mov	r2, r5
 8012684:	4633      	mov	r3, r6
 8012686:	496f      	ldr	r1, [pc, #444]	; (8012844 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>)
 8012688:	a803      	add	r0, sp, #12
 801268a:	f001 f8e1 	bl	8013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801268e:	6863      	ldr	r3, [r4, #4]
 8012690:	079a      	lsls	r2, r3, #30
 8012692:	bf5f      	itttt	pl
 8012694:	4a6c      	ldrpl	r2, [pc, #432]	; (8012848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8012696:	6812      	ldrpl	r2, [r2, #0]
 8012698:	6952      	ldrpl	r2, [r2, #20]
 801269a:	60a2      	strpl	r2, [r4, #8]
 801269c:	075e      	lsls	r6, r3, #29
 801269e:	bf5f      	itttt	pl
 80126a0:	4a69      	ldrpl	r2, [pc, #420]	; (8012848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80126a2:	6812      	ldrpl	r2, [r2, #0]
 80126a4:	69d2      	ldrpl	r2, [r2, #28]
 80126a6:	60e2      	strpl	r2, [r4, #12]
 80126a8:	071d      	lsls	r5, r3, #28
 80126aa:	bf5f      	itttt	pl
 80126ac:	4a66      	ldrpl	r2, [pc, #408]	; (8012848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80126ae:	6812      	ldrpl	r2, [r2, #0]
 80126b0:	6992      	ldrpl	r2, [r2, #24]
 80126b2:	6122      	strpl	r2, [r4, #16]
 80126b4:	0698      	lsls	r0, r3, #26
 80126b6:	f104 0519 	add.w	r5, r4, #25
 80126ba:	d418      	bmi.n	80126ee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80126bc:	4b62      	ldr	r3, [pc, #392]	; (8012848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80126be:	681b      	ldr	r3, [r3, #0]
 80126c0:	4628      	mov	r0, r5
 80126c2:	331f      	adds	r3, #31
 80126c4:	223f      	movs	r2, #63	; 0x3f
 80126c6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80126ca:	b949      	cbnz	r1, 80126e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 80126cc:	f002 f808 	bl	80146e0 <memset>
 80126d0:	e00a      	b.n	80126e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 80126d2:	6823      	ldr	r3, [r4, #0]
 80126d4:	681a      	ldr	r2, [r3, #0]
 80126d6:	4601      	mov	r1, r0
 80126d8:	68d2      	ldr	r2, [r2, #12]
 80126da:	4618      	mov	r0, r3
 80126dc:	4790      	blx	r2
 80126de:	e7d0      	b.n	8012682 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80126e0:	3a01      	subs	r2, #1
 80126e2:	f800 1b01 	strb.w	r1, [r0], #1
 80126e6:	d1ee      	bne.n	80126c6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 80126e8:	2300      	movs	r3, #0
 80126ea:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80126ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80126f2:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80126f6:	7e23      	ldrb	r3, [r4, #24]
 80126f8:	6861      	ldr	r1, [r4, #4]
 80126fa:	42b2      	cmp	r2, r6
 80126fc:	d21a      	bcs.n	8012734 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 80126fe:	9803      	ldr	r0, [sp, #12]
 8012700:	07c9      	lsls	r1, r1, #31
 8012702:	4410      	add	r0, r2
 8012704:	eba6 0602 	sub.w	r6, r6, r2
 8012708:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801270c:	d404      	bmi.n	8012718 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 801270e:	b922      	cbnz	r2, 801271a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8012710:	9300      	str	r3, [sp, #0]
 8012712:	4a4e      	ldr	r2, [pc, #312]	; (801284c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8012714:	4b4e      	ldr	r3, [pc, #312]	; (8012850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012716:	e003      	b.n	8012720 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8012718:	b312      	cbz	r2, 8012760 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf4>
 801271a:	9300      	str	r3, [sp, #0]
 801271c:	4a4d      	ldr	r2, [pc, #308]	; (8012854 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 801271e:	4b4c      	ldr	r3, [pc, #304]	; (8012850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012720:	4631      	mov	r1, r6
 8012722:	f7f7 fdfd 	bl	800a320 <snprintf>
 8012726:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801272a:	4286      	cmp	r6, r0
 801272c:	bfa4      	itt	ge
 801272e:	181b      	addge	r3, r3, r0
 8012730:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012734:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012738:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 801273c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012740:	6861      	ldr	r1, [r4, #4]
 8012742:	42b2      	cmp	r2, r6
 8012744:	d21f      	bcs.n	8012786 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11a>
 8012746:	9803      	ldr	r0, [sp, #12]
 8012748:	05c9      	lsls	r1, r1, #23
 801274a:	4410      	add	r0, r2
 801274c:	eba6 0602 	sub.w	r6, r6, r2
 8012750:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012754:	d408      	bmi.n	8012768 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8012756:	b94a      	cbnz	r2, 801276c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x100>
 8012758:	9300      	str	r3, [sp, #0]
 801275a:	4a3c      	ldr	r2, [pc, #240]	; (801284c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801275c:	4b3e      	ldr	r3, [pc, #248]	; (8012858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 801275e:	e008      	b.n	8012772 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8012760:	9300      	str	r3, [sp, #0]
 8012762:	4a3e      	ldr	r2, [pc, #248]	; (801285c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8012764:	4b3a      	ldr	r3, [pc, #232]	; (8012850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012766:	e7db      	b.n	8012720 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8012768:	2a00      	cmp	r2, #0
 801276a:	d03c      	beq.n	80127e6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17a>
 801276c:	9300      	str	r3, [sp, #0]
 801276e:	4a39      	ldr	r2, [pc, #228]	; (8012854 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8012770:	4b39      	ldr	r3, [pc, #228]	; (8012858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8012772:	4631      	mov	r1, r6
 8012774:	f7f7 fdd4 	bl	800a320 <snprintf>
 8012778:	4286      	cmp	r6, r0
 801277a:	bfa2      	ittt	ge
 801277c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012780:	18c0      	addge	r0, r0, r3
 8012782:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012786:	4936      	ldr	r1, [pc, #216]	; (8012860 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8012788:	a803      	add	r0, sp, #12
 801278a:	f001 f8e7 	bl	801395c <PropertiesBuilder::AddComment(char const*)>
 801278e:	6863      	ldr	r3, [r4, #4]
 8012790:	68a2      	ldr	r2, [r4, #8]
 8012792:	4934      	ldr	r1, [pc, #208]	; (8012864 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8012794:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8012798:	a803      	add	r0, sp, #12
 801279a:	f001 f89b 	bl	80138d4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 801279e:	6863      	ldr	r3, [r4, #4]
 80127a0:	68e2      	ldr	r2, [r4, #12]
 80127a2:	4931      	ldr	r1, [pc, #196]	; (8012868 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 80127a4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80127a8:	a803      	add	r0, sp, #12
 80127aa:	f001 f893 	bl	80138d4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80127ae:	6863      	ldr	r3, [r4, #4]
 80127b0:	6922      	ldr	r2, [r4, #16]
 80127b2:	492e      	ldr	r1, [pc, #184]	; (801286c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 80127b4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80127b8:	a803      	add	r0, sp, #12
 80127ba:	f001 f88b 	bl	80138d4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80127be:	6862      	ldr	r2, [r4, #4]
 80127c0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80127c4:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 80127c8:	42a3      	cmp	r3, r4
 80127ca:	d21e      	bcs.n	801280a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 80127cc:	9803      	ldr	r0, [sp, #12]
 80127ce:	0692      	lsls	r2, r2, #26
 80127d0:	4418      	add	r0, r3
 80127d2:	eba4 0403 	sub.w	r4, r4, r3
 80127d6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80127da:	d408      	bmi.n	80127ee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x182>
 80127dc:	b943      	cbnz	r3, 80127f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 80127de:	4b24      	ldr	r3, [pc, #144]	; (8012870 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 80127e0:	4a24      	ldr	r2, [pc, #144]	; (8012874 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80127e2:	9500      	str	r5, [sp, #0]
 80127e4:	e007      	b.n	80127f6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 80127e6:	9300      	str	r3, [sp, #0]
 80127e8:	4a1c      	ldr	r2, [pc, #112]	; (801285c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80127ea:	4b1b      	ldr	r3, [pc, #108]	; (8012858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80127ec:	e7c1      	b.n	8012772 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80127ee:	b32b      	cbz	r3, 801283c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d0>
 80127f0:	4b1f      	ldr	r3, [pc, #124]	; (8012870 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 80127f2:	4a21      	ldr	r2, [pc, #132]	; (8012878 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 80127f4:	9500      	str	r5, [sp, #0]
 80127f6:	4621      	mov	r1, r4
 80127f8:	f7f7 fd92 	bl	800a320 <snprintf>
 80127fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012800:	4284      	cmp	r4, r0
 8012802:	bfa4      	itt	ge
 8012804:	181b      	addge	r3, r3, r0
 8012806:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801280a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801280e:	b17b      	cbz	r3, 8012830 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 8012810:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012814:	9b03      	ldr	r3, [sp, #12]
 8012816:	4413      	add	r3, r2
 8012818:	227d      	movs	r2, #125	; 0x7d
 801281a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801281e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012822:	9903      	ldr	r1, [sp, #12]
 8012824:	54ca      	strb	r2, [r1, r3]
 8012826:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801282a:	3301      	adds	r3, #1
 801282c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012830:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012834:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012836:	601a      	str	r2, [r3, #0]
 8012838:	b006      	add	sp, #24
 801283a:	bd70      	pop	{r4, r5, r6, pc}
 801283c:	4b0c      	ldr	r3, [pc, #48]	; (8012870 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 801283e:	4a0f      	ldr	r2, [pc, #60]	; (801287c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8012840:	9500      	str	r5, [sp, #0]
 8012842:	e7d8      	b.n	80127f6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8012844:	08019821 	stmdaeq	r1, {r0, r5, fp, ip, pc}
 8012848:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 801284c:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 8012850:	08019818 	stmdaeq	r1, {r3, r4, fp, ip, pc}
 8012854:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 8012858:	080197f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, pc}
 801285c:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 8012860:	080197d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, ip, pc}
 8012864:	080197db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 8012868:	0801980f 	stmdaeq	r1, {r0, r1, r2, r3, fp, ip, pc}
 801286c:	080197e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, ip, pc}
 8012870:	08019806 	stmdaeq	r1, {r1, r2, fp, ip, pc}
 8012874:	0801720c 	stmdaeq	r1, {r2, r3, r9, ip, sp, lr}
 8012878:	08017201 	stmdaeq	r1, {r0, r9, ip, sp, lr}
 801287c:	0801720d 	stmdaeq	r1, {r0, r2, r3, r9, ip, sp, lr}

08012880 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8012880:	b513      	push	{r0, r1, r4, lr}
 8012882:	6804      	ldr	r4, [r0, #0]
 8012884:	b914      	cbnz	r4, 801288c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8012886:	601c      	str	r4, [r3, #0]
 8012888:	b002      	add	sp, #8
 801288a:	bd10      	pop	{r4, pc}
 801288c:	9300      	str	r3, [sp, #0]
 801288e:	4613      	mov	r3, r2
 8012890:	460a      	mov	r2, r1
 8012892:	2100      	movs	r1, #0
 8012894:	f7ff feea 	bl	801266c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8012898:	e7f6      	b.n	8012888 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801289a <NetworkParams::Dump()>:
 801289a:	4770      	bx	lr

0801289c <memcpy.isra.0>:
 801289c:	3801      	subs	r0, #1
 801289e:	440a      	add	r2, r1
 80128a0:	4291      	cmp	r1, r2
 80128a2:	d100      	bne.n	80128a6 <memcpy.isra.0+0xa>
 80128a4:	4770      	bx	lr
 80128a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80128aa:	f800 3f01 	strb.w	r3, [r0, #1]!
 80128ae:	e7f7      	b.n	80128a0 <memcpy.isra.0+0x4>

080128b0 <arp_announce>:
 80128b0:	4803      	ldr	r0, [pc, #12]	; (80128c0 <arp_announce+0x10>)
 80128b2:	69c3      	ldr	r3, [r0, #28]
 80128b4:	b113      	cbz	r3, 80128bc <arp_announce+0xc>
 80128b6:	212a      	movs	r1, #42	; 0x2a
 80128b8:	f002 bec8 	b.w	801564c <emac_eth_send>
 80128bc:	4770      	bx	lr
 80128be:	bf00      	nop
 80128c0:	2000fb38 	andcs	pc, r0, r8, lsr fp	; <UNPREDICTABLE>

080128c4 <arp_handle_request>:
 80128c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80128c6:	2204      	movs	r2, #4
 80128c8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 80128cc:	4604      	mov	r4, r0
 80128ce:	eb0d 0002 	add.w	r0, sp, r2
 80128d2:	f7ff ffe3 	bl	801289c <memcpy.isra.0>
 80128d6:	4b0d      	ldr	r3, [pc, #52]	; (801290c <arp_handle_request+0x48>)
 80128d8:	9a01      	ldr	r2, [sp, #4]
 80128da:	69db      	ldr	r3, [r3, #28]
 80128dc:	429a      	cmp	r2, r3
 80128de:	d113      	bne.n	8012908 <arp_handle_request+0x44>
 80128e0:	4d0b      	ldr	r5, [pc, #44]	; (8012910 <arp_handle_request+0x4c>)
 80128e2:	2206      	movs	r2, #6
 80128e4:	18a1      	adds	r1, r4, r2
 80128e6:	4628      	mov	r0, r5
 80128e8:	f7ff ffd8 	bl	801289c <memcpy.isra.0>
 80128ec:	f104 0116 	add.w	r1, r4, #22
 80128f0:	f105 0020 	add.w	r0, r5, #32
 80128f4:	2206      	movs	r2, #6
 80128f6:	f7ff ffd1 	bl	801289c <memcpy.isra.0>
 80128fa:	69e3      	ldr	r3, [r4, #28]
 80128fc:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8012900:	212a      	movs	r1, #42	; 0x2a
 8012902:	4628      	mov	r0, r5
 8012904:	f002 fea2 	bl	801564c <emac_eth_send>
 8012908:	b003      	add	sp, #12
 801290a:	bd30      	pop	{r4, r5, pc}
 801290c:	2000fb38 	andcs	pc, r0, r8, lsr fp	; <UNPREDICTABLE>
 8012910:	2000fb64 	andcs	pc, r0, r4, ror #22

08012914 <arp_handle_reply>:
 8012914:	69c1      	ldr	r1, [r0, #28]
 8012916:	3016      	adds	r0, #22
 8012918:	f000 b80a 	b.w	8012930 <arp_cache_update>

0801291c <arp_send_request>:
 801291c:	4b03      	ldr	r3, [pc, #12]	; (801292c <arp_send_request+0x10>)
 801291e:	212a      	movs	r1, #42	; 0x2a
 8012920:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8012924:	4618      	mov	r0, r3
 8012926:	f002 be91 	b.w	801564c <emac_eth_send>
 801292a:	bf00      	nop
 801292c:	2000fb90 	mulcs	r0, r0, fp

08012930 <arp_cache_update>:
 8012930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012932:	4c12      	ldr	r4, [pc, #72]	; (801297c <arp_cache_update+0x4c>)
 8012934:	8823      	ldrh	r3, [r4, #0]
 8012936:	2b20      	cmp	r3, #32
 8012938:	d019      	beq.n	801296e <arp_cache_update+0x3e>
 801293a:	2500      	movs	r5, #0
 801293c:	1d22      	adds	r2, r4, #4
 801293e:	260c      	movs	r6, #12
 8012940:	b2af      	uxth	r7, r5
 8012942:	42bb      	cmp	r3, r7
 8012944:	d80c      	bhi.n	8012960 <arp_cache_update+0x30>
 8012946:	fb06 2203 	mla	r2, r6, r3, r2
 801294a:	3203      	adds	r2, #3
 801294c:	1d85      	adds	r5, r0, #6
 801294e:	42a8      	cmp	r0, r5
 8012950:	d10e      	bne.n	8012970 <arp_cache_update+0x40>
 8012952:	220c      	movs	r2, #12
 8012954:	fb02 4203 	mla	r2, r2, r3, r4
 8012958:	3301      	adds	r3, #1
 801295a:	6051      	str	r1, [r2, #4]
 801295c:	8023      	strh	r3, [r4, #0]
 801295e:	e006      	b.n	801296e <arp_cache_update+0x3e>
 8012960:	3501      	adds	r5, #1
 8012962:	fb06 2705 	mla	r7, r6, r5, r2
 8012966:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 801296a:	428f      	cmp	r7, r1
 801296c:	d1e8      	bne.n	8012940 <arp_cache_update+0x10>
 801296e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012970:	f810 6b01 	ldrb.w	r6, [r0], #1
 8012974:	f802 6f01 	strb.w	r6, [r2, #1]!
 8012978:	e7e9      	b.n	801294e <arp_cache_update+0x1e>
 801297a:	bf00      	nop
 801297c:	100011a4 	andne	r1, r0, r4, lsr #3

08012980 <arp_cache_lookup>:
 8012980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012984:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8012a14 <arp_cache_lookup+0x94>
 8012988:	4606      	mov	r6, r0
 801298a:	460c      	mov	r4, r1
 801298c:	2200      	movs	r2, #0
 801298e:	200c      	movs	r0, #12
 8012990:	fb00 f302 	mul.w	r3, r0, r2
 8012994:	f853 1008 	ldr.w	r1, [r3, r8]
 8012998:	42b1      	cmp	r1, r6
 801299a:	d10d      	bne.n	80129b8 <arp_cache_lookup+0x38>
 801299c:	3304      	adds	r3, #4
 801299e:	4443      	add	r3, r8
 80129a0:	3c01      	subs	r4, #1
 80129a2:	1d9a      	adds	r2, r3, #6
 80129a4:	4293      	cmp	r3, r2
 80129a6:	d102      	bne.n	80129ae <arp_cache_lookup+0x2e>
 80129a8:	4630      	mov	r0, r6
 80129aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80129ae:	f813 1b01 	ldrb.w	r1, [r3], #1
 80129b2:	f804 1f01 	strb.w	r1, [r4, #1]!
 80129b6:	e7f5      	b.n	80129a4 <arp_cache_lookup+0x24>
 80129b8:	b111      	cbz	r1, 80129c0 <arp_cache_lookup+0x40>
 80129ba:	3201      	adds	r2, #1
 80129bc:	2a20      	cmp	r2, #32
 80129be:	d1e7      	bne.n	8012990 <arp_cache_lookup+0x10>
 80129c0:	f8df a054 	ldr.w	sl, [pc, #84]	; 8012a18 <arp_cache_lookup+0x98>
 80129c4:	f8ba 5000 	ldrh.w	r5, [sl]
 80129c8:	2704      	movs	r7, #4
 80129ca:	3f01      	subs	r7, #1
 80129cc:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 80129d0:	d101      	bne.n	80129d6 <arp_cache_lookup+0x56>
 80129d2:	463e      	mov	r6, r7
 80129d4:	e7e8      	b.n	80129a8 <arp_cache_lookup+0x28>
 80129d6:	4630      	mov	r0, r6
 80129d8:	f7ff ffa0 	bl	801291c <arp_send_request>
 80129dc:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 80129e0:	f1b9 0901 	subs.w	r9, r9, #1
 80129e4:	f8ba 3000 	ldrh.w	r3, [sl]
 80129e8:	d011      	beq.n	8012a0e <arp_cache_lookup+0x8e>
 80129ea:	429d      	cmp	r5, r3
 80129ec:	d00c      	beq.n	8012a08 <arp_cache_lookup+0x88>
 80129ee:	230c      	movs	r3, #12
 80129f0:	fb03 8505 	mla	r5, r3, r5, r8
 80129f4:	1d2b      	adds	r3, r5, #4
 80129f6:	3c01      	subs	r4, #1
 80129f8:	350a      	adds	r5, #10
 80129fa:	42ab      	cmp	r3, r5
 80129fc:	d0d4      	beq.n	80129a8 <arp_cache_lookup+0x28>
 80129fe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012a02:	f804 2f01 	strb.w	r2, [r4, #1]!
 8012a06:	e7f8      	b.n	80129fa <arp_cache_lookup+0x7a>
 8012a08:	f7f5 fdac 	bl	8008564 <net_handle>
 8012a0c:	e7e8      	b.n	80129e0 <arp_cache_lookup+0x60>
 8012a0e:	429d      	cmp	r5, r3
 8012a10:	d0db      	beq.n	80129ca <arp_cache_lookup+0x4a>
 8012a12:	e7ec      	b.n	80129ee <arp_cache_lookup+0x6e>
 8012a14:	100011a8 	andne	r1, r0, r8, lsr #3
 8012a18:	100011a4 	andne	r1, r0, r4, lsr #3

08012a1c <_parse_response>:
 8012a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a20:	2400      	movs	r4, #0
 8012a22:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8012a26:	4e52      	ldr	r6, [pc, #328]	; (8012b70 <_parse_response+0x154>)
 8012a28:	9009      	str	r0, [sp, #36]	; 0x24
 8012a2a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8012a2e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8012a32:	6833      	ldr	r3, [r6, #0]
 8012a34:	9402      	str	r4, [sp, #8]
 8012a36:	460d      	mov	r5, r1
 8012a38:	46a3      	mov	fp, r4
 8012a3a:	4627      	mov	r7, r4
 8012a3c:	46a2      	mov	sl, r4
 8012a3e:	46a1      	mov	r9, r4
 8012a40:	9407      	str	r4, [sp, #28]
 8012a42:	46a0      	mov	r8, r4
 8012a44:	9308      	str	r3, [sp, #32]
 8012a46:	f7f5 fd8d 	bl	8008564 <net_handle>
 8012a4a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012a4e:	9300      	str	r3, [sp, #0]
 8012a50:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8012a54:	ab0c      	add	r3, sp, #48	; 0x30
 8012a56:	f44f 7209 	mov.w	r2, #548	; 0x224
 8012a5a:	a90d      	add	r1, sp, #52	; 0x34
 8012a5c:	f7fe fcf0 	bl	8011440 <udp_recv>
 8012a60:	2800      	cmp	r0, #0
 8012a62:	d040      	beq.n	8012ae6 <_parse_response+0xca>
 8012a64:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8012a68:	2b43      	cmp	r3, #67	; 0x43
 8012a6a:	d13c      	bne.n	8012ae6 <_parse_response+0xca>
 8012a6c:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8012a70:	1e6b      	subs	r3, r5, #1
 8012a72:	1d69      	adds	r1, r5, #5
 8012a74:	4299      	cmp	r1, r3
 8012a76:	d130      	bne.n	8012ada <_parse_response+0xbe>
 8012a78:	2500      	movs	r5, #0
 8012a7a:	ab0d      	add	r3, sp, #52	; 0x34
 8012a7c:	4418      	add	r0, r3
 8012a7e:	46ac      	mov	ip, r5
 8012a80:	462e      	mov	r6, r5
 8012a82:	ab49      	add	r3, sp, #292	; 0x124
 8012a84:	4629      	mov	r1, r5
 8012a86:	4283      	cmp	r3, r0
 8012a88:	d338      	bcc.n	8012afc <_parse_response+0xe0>
 8012a8a:	b145      	cbz	r5, 8012a9e <_parse_response+0x82>
 8012a8c:	4b39      	ldr	r3, [pc, #228]	; (8012b74 <_parse_response+0x158>)
 8012a8e:	9a07      	ldr	r2, [sp, #28]
 8012a90:	709a      	strb	r2, [r3, #2]
 8012a92:	9a06      	ldr	r2, [sp, #24]
 8012a94:	705a      	strb	r2, [r3, #1]
 8012a96:	9a05      	ldr	r2, [sp, #20]
 8012a98:	f883 8003 	strb.w	r8, [r3, #3]
 8012a9c:	701a      	strb	r2, [r3, #0]
 8012a9e:	f1bc 0f00 	cmp.w	ip, #0
 8012aa2:	d007      	beq.n	8012ab4 <_parse_response+0x98>
 8012aa4:	4b34      	ldr	r3, [pc, #208]	; (8012b78 <_parse_response+0x15c>)
 8012aa6:	9a04      	ldr	r2, [sp, #16]
 8012aa8:	70da      	strb	r2, [r3, #3]
 8012aaa:	9a03      	ldr	r2, [sp, #12]
 8012aac:	709a      	strb	r2, [r3, #2]
 8012aae:	9a02      	ldr	r2, [sp, #8]
 8012ab0:	705c      	strb	r4, [r3, #1]
 8012ab2:	701a      	strb	r2, [r3, #0]
 8012ab4:	b13e      	cbz	r6, 8012ac6 <_parse_response+0xaa>
 8012ab6:	4b31      	ldr	r3, [pc, #196]	; (8012b7c <_parse_response+0x160>)
 8012ab8:	70df      	strb	r7, [r3, #3]
 8012aba:	f883 a002 	strb.w	sl, [r3, #2]
 8012abe:	f883 9001 	strb.w	r9, [r3, #1]
 8012ac2:	f883 b000 	strb.w	fp, [r3]
 8012ac6:	2902      	cmp	r1, #2
 8012ac8:	bf02      	ittt	eq
 8012aca:	4b2d      	ldreq	r3, [pc, #180]	; (8012b80 <_parse_response+0x164>)
 8012acc:	9a11      	ldreq	r2, [sp, #68]	; 0x44
 8012ace:	601a      	streq	r2, [r3, #0]
 8012ad0:	4608      	mov	r0, r1
 8012ad2:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8012ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ada:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8012ade:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8012ae2:	45e6      	cmp	lr, ip
 8012ae4:	d0c6      	beq.n	8012a74 <_parse_response+0x58>
 8012ae6:	6833      	ldr	r3, [r6, #0]
 8012ae8:	9a08      	ldr	r2, [sp, #32]
 8012aea:	1a9b      	subs	r3, r3, r2
 8012aec:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8012af0:	d3a9      	bcc.n	8012a46 <_parse_response+0x2a>
 8012af2:	2800      	cmp	r0, #0
 8012af4:	d1c0      	bne.n	8012a78 <_parse_response+0x5c>
 8012af6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012afa:	e7ea      	b.n	8012ad2 <_parse_response+0xb6>
 8012afc:	781a      	ldrb	r2, [r3, #0]
 8012afe:	2a35      	cmp	r2, #53	; 0x35
 8012b00:	d011      	beq.n	8012b26 <_parse_response+0x10a>
 8012b02:	d808      	bhi.n	8012b16 <_parse_response+0xfa>
 8012b04:	2a01      	cmp	r2, #1
 8012b06:	d011      	beq.n	8012b2c <_parse_response+0x110>
 8012b08:	2a03      	cmp	r2, #3
 8012b0a:	d019      	beq.n	8012b40 <_parse_response+0x124>
 8012b0c:	b14a      	cbz	r2, 8012b22 <_parse_response+0x106>
 8012b0e:	1c9a      	adds	r2, r3, #2
 8012b10:	785b      	ldrb	r3, [r3, #1]
 8012b12:	4413      	add	r3, r2
 8012b14:	e7b7      	b.n	8012a86 <_parse_response+0x6a>
 8012b16:	2a36      	cmp	r2, #54	; 0x36
 8012b18:	d01f      	beq.n	8012b5a <_parse_response+0x13e>
 8012b1a:	2aff      	cmp	r2, #255	; 0xff
 8012b1c:	d1f7      	bne.n	8012b0e <_parse_response+0xf2>
 8012b1e:	4603      	mov	r3, r0
 8012b20:	e7b1      	b.n	8012a86 <_parse_response+0x6a>
 8012b22:	3301      	adds	r3, #1
 8012b24:	e7af      	b.n	8012a86 <_parse_response+0x6a>
 8012b26:	7899      	ldrb	r1, [r3, #2]
 8012b28:	3303      	adds	r3, #3
 8012b2a:	e7ac      	b.n	8012a86 <_parse_response+0x6a>
 8012b2c:	f893 b002 	ldrb.w	fp, [r3, #2]
 8012b30:	f893 9003 	ldrb.w	r9, [r3, #3]
 8012b34:	f893 a004 	ldrb.w	sl, [r3, #4]
 8012b38:	795f      	ldrb	r7, [r3, #5]
 8012b3a:	4616      	mov	r6, r2
 8012b3c:	3306      	adds	r3, #6
 8012b3e:	e7a2      	b.n	8012a86 <_parse_response+0x6a>
 8012b40:	789a      	ldrb	r2, [r3, #2]
 8012b42:	9202      	str	r2, [sp, #8]
 8012b44:	791a      	ldrb	r2, [r3, #4]
 8012b46:	9203      	str	r2, [sp, #12]
 8012b48:	795a      	ldrb	r2, [r3, #5]
 8012b4a:	9204      	str	r2, [sp, #16]
 8012b4c:	785a      	ldrb	r2, [r3, #1]
 8012b4e:	78dc      	ldrb	r4, [r3, #3]
 8012b50:	4413      	add	r3, r2
 8012b52:	3302      	adds	r3, #2
 8012b54:	f04f 0c01 	mov.w	ip, #1
 8012b58:	e795      	b.n	8012a86 <_parse_response+0x6a>
 8012b5a:	789a      	ldrb	r2, [r3, #2]
 8012b5c:	9205      	str	r2, [sp, #20]
 8012b5e:	78da      	ldrb	r2, [r3, #3]
 8012b60:	9206      	str	r2, [sp, #24]
 8012b62:	791a      	ldrb	r2, [r3, #4]
 8012b64:	f893 8005 	ldrb.w	r8, [r3, #5]
 8012b68:	9207      	str	r2, [sp, #28]
 8012b6a:	3306      	adds	r3, #6
 8012b6c:	2501      	movs	r5, #1
 8012b6e:	e78a      	b.n	8012a86 <_parse_response+0x6a>
 8012b70:	2000fefc 	strdcs	pc, [r0], -ip
 8012b74:	2000fdec 	andcs	pc, r0, ip, ror #27
 8012b78:	2000fbbc 			; <UNDEFINED> instruction: 0x2000fbbc
 8012b7c:	2000fbc4 	andcs	pc, r0, r4, asr #23
 8012b80:	2000fbc0 	andcs	pc, r0, r0, asr #23

08012b84 <memcpy.isra.0>:
 8012b84:	3801      	subs	r0, #1
 8012b86:	440a      	add	r2, r1
 8012b88:	4291      	cmp	r1, r2
 8012b8a:	d100      	bne.n	8012b8e <memcpy.isra.0+0xa>
 8012b8c:	4770      	bx	lr
 8012b8e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012b92:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012b96:	e7f7      	b.n	8012b88 <memcpy.isra.0+0x4>

08012b98 <dhcp_client>:
 8012b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b9c:	b087      	sub	sp, #28
 8012b9e:	460f      	mov	r7, r1
 8012ba0:	9203      	str	r2, [sp, #12]
 8012ba2:	4a77      	ldr	r2, [pc, #476]	; (8012d80 <dhcp_client+0x1e8>)
 8012ba4:	4605      	mov	r5, r0
 8012ba6:	f44f 7309 	mov.w	r3, #548	; 0x224
 8012baa:	4614      	mov	r4, r2
 8012bac:	2100      	movs	r1, #0
 8012bae:	3b01      	subs	r3, #1
 8012bb0:	f802 1b01 	strb.w	r1, [r2], #1
 8012bb4:	d1fb      	bne.n	8012bae <dhcp_client+0x16>
 8012bb6:	f240 1301 	movw	r3, #257	; 0x101
 8012bba:	2206      	movs	r2, #6
 8012bbc:	4871      	ldr	r0, [pc, #452]	; (8012d84 <dhcp_client+0x1ec>)
 8012bbe:	8023      	strh	r3, [r4, #0]
 8012bc0:	4629      	mov	r1, r5
 8012bc2:	70a2      	strb	r2, [r4, #2]
 8012bc4:	f7ff ffde 	bl	8012b84 <memcpy.isra.0>
 8012bc8:	4b6f      	ldr	r3, [pc, #444]	; (8012d88 <dhcp_client+0x1f0>)
 8012bca:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8012bce:	f240 1335 	movw	r3, #309	; 0x135
 8012bd2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8012bd6:	2044      	movs	r0, #68	; 0x44
 8012bd8:	f7fe fbf8 	bl	80113cc <udp_bind>
 8012bdc:	1e06      	subs	r6, r0, #0
 8012bde:	f2c0 80c9 	blt.w	8012d74 <dhcp_client+0x1dc>
 8012be2:	f8df a19c 	ldr.w	sl, [pc, #412]	; 8012d80 <dhcp_client+0x1e8>
 8012be6:	f04f 0915 	mov.w	r9, #21
 8012bea:	f1b9 0901 	subs.w	r9, r9, #1
 8012bee:	d11f      	bne.n	8012c30 <dhcp_client+0x98>
 8012bf0:	464c      	mov	r4, r9
 8012bf2:	2044      	movs	r0, #68	; 0x44
 8012bf4:	f7fe fc04 	bl	8011400 <udp_unbind>
 8012bf8:	2c00      	cmp	r4, #0
 8012bfa:	f000 80be 	beq.w	8012d7a <dhcp_client+0x1e2>
 8012bfe:	4963      	ldr	r1, [pc, #396]	; (8012d8c <dhcp_client+0x1f4>)
 8012c00:	2204      	movs	r2, #4
 8012c02:	a805      	add	r0, sp, #20
 8012c04:	f7ff ffbe 	bl	8012b84 <memcpy.isra.0>
 8012c08:	9b05      	ldr	r3, [sp, #20]
 8012c0a:	4961      	ldr	r1, [pc, #388]	; (8012d90 <dhcp_client+0x1f8>)
 8012c0c:	603b      	str	r3, [r7, #0]
 8012c0e:	2204      	movs	r2, #4
 8012c10:	a805      	add	r0, sp, #20
 8012c12:	f7ff ffb7 	bl	8012b84 <memcpy.isra.0>
 8012c16:	9b05      	ldr	r3, [sp, #20]
 8012c18:	60bb      	str	r3, [r7, #8]
 8012c1a:	a805      	add	r0, sp, #20
 8012c1c:	495d      	ldr	r1, [pc, #372]	; (8012d94 <dhcp_client+0x1fc>)
 8012c1e:	2204      	movs	r2, #4
 8012c20:	f7ff ffb0 	bl	8012b84 <memcpy.isra.0>
 8012c24:	9b05      	ldr	r3, [sp, #20]
 8012c26:	607b      	str	r3, [r7, #4]
 8012c28:	2000      	movs	r0, #0
 8012c2a:	b007      	add	sp, #28
 8012c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c30:	f643 5301 	movw	r3, #15617	; 0x3d01
 8012c34:	f240 1807 	movw	r8, #263	; 0x107
 8012c38:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8012c3c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8012c40:	782b      	ldrb	r3, [r5, #0]
 8012c42:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8012c46:	786b      	ldrb	r3, [r5, #1]
 8012c48:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8012c4c:	78ab      	ldrb	r3, [r5, #2]
 8012c4e:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8012c52:	78eb      	ldrb	r3, [r5, #3]
 8012c54:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8012c58:	792b      	ldrb	r3, [r5, #4]
 8012c5a:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8012c5e:	796b      	ldrb	r3, [r5, #5]
 8012c60:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8012c64:	4a4c      	ldr	r2, [pc, #304]	; (8012d98 <dhcp_client+0x200>)
 8012c66:	4b4d      	ldr	r3, [pc, #308]	; (8012d9c <dhcp_client+0x204>)
 8012c68:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8012c6c:	23ff      	movs	r3, #255	; 0xff
 8012c6e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8012c72:	fa5f fb86 	uxtb.w	fp, r6
 8012c76:	2343      	movs	r3, #67	; 0x43
 8012c78:	9300      	str	r3, [sp, #0]
 8012c7a:	f240 1205 	movw	r2, #261	; 0x105
 8012c7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012c82:	4651      	mov	r1, sl
 8012c84:	4658      	mov	r0, fp
 8012c86:	f7fe fc37 	bl	80114f8 <udp_send>
 8012c8a:	4629      	mov	r1, r5
 8012c8c:	4630      	mov	r0, r6
 8012c8e:	f7ff fec5 	bl	8012a1c <_parse_response>
 8012c92:	2802      	cmp	r0, #2
 8012c94:	d1a9      	bne.n	8012bea <dhcp_client+0x52>
 8012c96:	f643 5303 	movw	r3, #15619	; 0x3d03
 8012c9a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8012c9e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8012ca2:	782b      	ldrb	r3, [r5, #0]
 8012ca4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8012ca8:	786b      	ldrb	r3, [r5, #1]
 8012caa:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8012cae:	78ab      	ldrb	r3, [r5, #2]
 8012cb0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8012cb4:	78eb      	ldrb	r3, [r5, #3]
 8012cb6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8012cba:	792b      	ldrb	r3, [r5, #4]
 8012cbc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8012cc0:	796b      	ldrb	r3, [r5, #5]
 8012cc2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8012cc6:	f240 4332 	movw	r3, #1074	; 0x432
 8012cca:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8012cce:	4b2f      	ldr	r3, [pc, #188]	; (8012d8c <dhcp_client+0x1f4>)
 8012cd0:	f8df c0d0 	ldr.w	ip, [pc, #208]	; 8012da4 <dhcp_client+0x20c>
 8012cd4:	881a      	ldrh	r2, [r3, #0]
 8012cd6:	885b      	ldrh	r3, [r3, #2]
 8012cd8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8012cdc:	f240 4336 	movw	r3, #1078	; 0x436
 8012ce0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8012ce4:	4b2e      	ldr	r3, [pc, #184]	; (8012da0 <dhcp_client+0x208>)
 8012ce6:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8012cea:	681b      	ldr	r3, [r3, #0]
 8012cec:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8012cf0:	230c      	movs	r3, #12
 8012cf2:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8012cf6:	9b03      	ldr	r3, [sp, #12]
 8012cf8:	221e      	movs	r2, #30
 8012cfa:	1e58      	subs	r0, r3, #1
 8012cfc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8012d00:	f1a2 0e1e 	sub.w	lr, r2, #30
 8012d04:	1c51      	adds	r1, r2, #1
 8012d06:	bb8b      	cbnz	r3, 8012d6c <dhcp_client+0x1d4>
 8012d08:	18a3      	adds	r3, r4, r2
 8012d0a:	2037      	movs	r0, #55	; 0x37
 8012d0c:	4421      	add	r1, r4
 8012d0e:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8012d12:	2006      	movs	r0, #6
 8012d14:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8012d18:	2103      	movs	r1, #3
 8012d1a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8012d1e:	210f      	movs	r1, #15
 8012d20:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8012d24:	213a      	movs	r1, #58	; 0x3a
 8012d26:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8012d2a:	213b      	movs	r1, #59	; 0x3b
 8012d2c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8012d30:	f04f 0801 	mov.w	r8, #1
 8012d34:	21ff      	movs	r1, #255	; 0xff
 8012d36:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8012d3a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8012d3e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8012d42:	32f5      	adds	r2, #245	; 0xf5
 8012d44:	2343      	movs	r3, #67	; 0x43
 8012d46:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8012d4a:	b292      	uxth	r2, r2
 8012d4c:	9300      	str	r3, [sp, #0]
 8012d4e:	4651      	mov	r1, sl
 8012d50:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012d54:	4658      	mov	r0, fp
 8012d56:	f7fe fbcf 	bl	80114f8 <udp_send>
 8012d5a:	4629      	mov	r1, r5
 8012d5c:	4630      	mov	r0, r6
 8012d5e:	f7ff fe5d 	bl	8012a1c <_parse_response>
 8012d62:	2805      	cmp	r0, #5
 8012d64:	f47f af41 	bne.w	8012bea <dhcp_client+0x52>
 8012d68:	4644      	mov	r4, r8
 8012d6a:	e742      	b.n	8012bf2 <dhcp_client+0x5a>
 8012d6c:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8012d70:	460a      	mov	r2, r1
 8012d72:	e7c3      	b.n	8012cfc <dhcp_client+0x164>
 8012d74:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012d78:	e757      	b.n	8012c2a <dhcp_client+0x92>
 8012d7a:	f06f 0001 	mvn.w	r0, #1
 8012d7e:	e754      	b.n	8012c2a <dhcp_client+0x92>
 8012d80:	2000fbc8 	andcs	pc, r0, r8, asr #23
 8012d84:	2000fbe4 	andcs	pc, r0, r4, ror #23
 8012d88:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8012d8c:	2000fbc0 	andcs	pc, r0, r0, asr #23
 8012d90:	2000fbbc 			; <UNDEFINED> instruction: 0x2000fbbc
 8012d94:	2000fbc4 	andcs	pc, r0, r4, asr #23
 8012d98:	03010637 	movweq	r0, #5687	; 0x1637
 8012d9c:	3b3a0f06 	blcc	8e969bc <__exidx_end+0xe7c9b0>
 8012da0:	2000fdec 	andcs	pc, r0, ip, ror #27
 8012da4:	2000fcd1 	ldrdcs	pc, [r0], -r1

08012da8 <dhcp_client_release>:
 8012da8:	b507      	push	{r0, r1, r2, lr}
 8012daa:	2044      	movs	r0, #68	; 0x44
 8012dac:	f7fe fb0e 	bl	80113cc <udp_bind>
 8012db0:	4912      	ldr	r1, [pc, #72]	; (8012dfc <dhcp_client_release+0x54>)
 8012db2:	f243 6307 	movw	r3, #13831	; 0x3607
 8012db6:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8012dba:	2304      	movs	r3, #4
 8012dbc:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8012dc0:	4b0f      	ldr	r3, [pc, #60]	; (8012e00 <dhcp_client_release+0x58>)
 8012dc2:	781a      	ldrb	r2, [r3, #0]
 8012dc4:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8012dc8:	785a      	ldrb	r2, [r3, #1]
 8012dca:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8012dce:	789a      	ldrb	r2, [r3, #2]
 8012dd0:	78db      	ldrb	r3, [r3, #3]
 8012dd2:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8012dd6:	23ff      	movs	r3, #255	; 0xff
 8012dd8:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8012ddc:	2343      	movs	r3, #67	; 0x43
 8012dde:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8012de2:	b2c0      	uxtb	r0, r0
 8012de4:	9300      	str	r3, [sp, #0]
 8012de6:	22fa      	movs	r2, #250	; 0xfa
 8012de8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012dec:	f7fe fb84 	bl	80114f8 <udp_send>
 8012df0:	2044      	movs	r0, #68	; 0x44
 8012df2:	b003      	add	sp, #12
 8012df4:	f85d eb04 	ldr.w	lr, [sp], #4
 8012df8:	f7fe bb02 	b.w	8011400 <udp_unbind>
 8012dfc:	2000fbc8 	andcs	pc, r0, r8, asr #23
 8012e00:	2000fdec 	andcs	pc, r0, ip, ror #27

08012e04 <memcpy.isra.0>:
 8012e04:	3801      	subs	r0, #1
 8012e06:	440a      	add	r2, r1
 8012e08:	4291      	cmp	r1, r2
 8012e0a:	d100      	bne.n	8012e0e <memcpy.isra.0+0xa>
 8012e0c:	4770      	bx	lr
 8012e0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012e12:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012e16:	e7f7      	b.n	8012e08 <memcpy.isra.0+0x4>

08012e18 <_send_report>:
 8012e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012e1a:	4c1d      	ldr	r4, [pc, #116]	; (8012e90 <_send_report+0x78>)
 8012e1c:	9001      	str	r0, [sp, #4]
 8012e1e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8012e22:	70e3      	strb	r3, [r4, #3]
 8012e24:	f104 0508 	add.w	r5, r4, #8
 8012e28:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8012e2c:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8012e30:	7160      	strb	r0, [r4, #5]
 8012e32:	4621      	mov	r1, r4
 8012e34:	4628      	mov	r0, r5
 8012e36:	2206      	movs	r2, #6
 8012e38:	7123      	strb	r3, [r4, #4]
 8012e3a:	f7ff ffe3 	bl	8012e04 <memcpy.isra.0>
 8012e3e:	2204      	movs	r2, #4
 8012e40:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012e42:	8363      	strh	r3, [r4, #26]
 8012e44:	eb0d 0102 	add.w	r1, sp, r2
 8012e48:	f104 0026 	add.w	r0, r4, #38	; 0x26
 8012e4c:	f104 0616 	add.w	r6, r4, #22
 8012e50:	f7ff ffd8 	bl	8012e04 <memcpy.isra.0>
 8012e54:	2700      	movs	r7, #0
 8012e56:	2118      	movs	r1, #24
 8012e58:	4630      	mov	r0, r6
 8012e5a:	8427      	strh	r7, [r4, #32]
 8012e5c:	f000 f8bf 	bl	8012fde <net_chksum>
 8012e60:	2204      	movs	r2, #4
 8012e62:	eb0d 0102 	add.w	r1, sp, r2
 8012e66:	8420      	strh	r0, [r4, #32]
 8012e68:	f104 0032 	add.w	r0, r4, #50	; 0x32
 8012e6c:	f7ff ffca 	bl	8012e04 <memcpy.isra.0>
 8012e70:	2120      	movs	r1, #32
 8012e72:	4630      	mov	r0, r6
 8012e74:	8627      	strh	r7, [r4, #48]	; 0x30
 8012e76:	f000 f8b2 	bl	8012fde <net_chksum>
 8012e7a:	212e      	movs	r1, #46	; 0x2e
 8012e7c:	8620      	strh	r0, [r4, #48]	; 0x30
 8012e7e:	4628      	mov	r0, r5
 8012e80:	f002 fbe4 	bl	801564c <emac_eth_send>
 8012e84:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012e86:	3301      	adds	r3, #1
 8012e88:	8723      	strh	r3, [r4, #56]	; 0x38
 8012e8a:	b003      	add	sp, #12
 8012e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e8e:	bf00      	nop
 8012e90:	10001328 	andne	r1, r0, r8, lsr #6

08012e94 <igmp_set_ip>:
 8012e94:	b513      	push	{r0, r1, r4, lr}
 8012e96:	4c09      	ldr	r4, [pc, #36]	; (8012ebc <igmp_set_ip+0x28>)
 8012e98:	6803      	ldr	r3, [r0, #0]
 8012e9a:	9301      	str	r3, [sp, #4]
 8012e9c:	2204      	movs	r2, #4
 8012e9e:	eb0d 0102 	add.w	r1, sp, r2
 8012ea2:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8012ea6:	f7ff ffad 	bl	8012e04 <memcpy.isra.0>
 8012eaa:	2204      	movs	r2, #4
 8012eac:	eb0d 0102 	add.w	r1, sp, r2
 8012eb0:	f104 0056 	add.w	r0, r4, #86	; 0x56
 8012eb4:	f7ff ffa6 	bl	8012e04 <memcpy.isra.0>
 8012eb8:	b002      	add	sp, #8
 8012eba:	bd10      	pop	{r4, pc}
 8012ebc:	10001328 	andne	r1, r0, r8, lsr #6

08012ec0 <igmp_timer>:
 8012ec0:	b570      	push	{r4, r5, r6, lr}
 8012ec2:	4c0b      	ldr	r4, [pc, #44]	; (8012ef0 <igmp_timer+0x30>)
 8012ec4:	2500      	movs	r5, #0
 8012ec6:	2602      	movs	r6, #2
 8012ec8:	7963      	ldrb	r3, [r4, #5]
 8012eca:	2b01      	cmp	r3, #1
 8012ecc:	d109      	bne.n	8012ee2 <igmp_timer+0x22>
 8012ece:	7923      	ldrb	r3, [r4, #4]
 8012ed0:	b13b      	cbz	r3, 8012ee2 <igmp_timer+0x22>
 8012ed2:	3b01      	subs	r3, #1
 8012ed4:	b2db      	uxtb	r3, r3
 8012ed6:	7123      	strb	r3, [r4, #4]
 8012ed8:	b91b      	cbnz	r3, 8012ee2 <igmp_timer+0x22>
 8012eda:	6820      	ldr	r0, [r4, #0]
 8012edc:	f7ff ff9c 	bl	8012e18 <_send_report>
 8012ee0:	7166      	strb	r6, [r4, #5]
 8012ee2:	3501      	adds	r5, #1
 8012ee4:	2d24      	cmp	r5, #36	; 0x24
 8012ee6:	f104 0408 	add.w	r4, r4, #8
 8012eea:	d1ed      	bne.n	8012ec8 <igmp_timer+0x8>
 8012eec:	bd70      	pop	{r4, r5, r6, pc}
 8012eee:	bf00      	nop
 8012ef0:	10001394 	mulne	r0, r4, r3

08012ef4 <igmp_join>:
 8012ef4:	b538      	push	{r3, r4, r5, lr}
 8012ef6:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8012efa:	2be0      	cmp	r3, #224	; 0xe0
 8012efc:	d11e      	bne.n	8012f3c <igmp_join+0x48>
 8012efe:	4a12      	ldr	r2, [pc, #72]	; (8012f48 <igmp_join+0x54>)
 8012f00:	f8d2 418c 	ldr.w	r4, [r2, #396]	; 0x18c
 8012f04:	2c24      	cmp	r4, #36	; 0x24
 8012f06:	d01c      	beq.n	8012f42 <igmp_join+0x4e>
 8012f08:	2300      	movs	r3, #0
 8012f0a:	f102 016c 	add.w	r1, r2, #108	; 0x6c
 8012f0e:	429c      	cmp	r4, r3
 8012f10:	dc0e      	bgt.n	8012f30 <igmp_join+0x3c>
 8012f12:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
 8012f16:	f44f 7181 	mov.w	r1, #258	; 0x102
 8012f1a:	66d8      	str	r0, [r3, #108]	; 0x6c
 8012f1c:	f8a3 1070 	strh.w	r1, [r3, #112]	; 0x70
 8012f20:	1c63      	adds	r3, r4, #1
 8012f22:	f8c2 318c 	str.w	r3, [r2, #396]	; 0x18c
 8012f26:	f7ff ff77 	bl	8012e18 <_send_report>
 8012f2a:	4623      	mov	r3, r4
 8012f2c:	4618      	mov	r0, r3
 8012f2e:	bd38      	pop	{r3, r4, r5, pc}
 8012f30:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
 8012f34:	4285      	cmp	r5, r0
 8012f36:	d0f9      	beq.n	8012f2c <igmp_join+0x38>
 8012f38:	3301      	adds	r3, #1
 8012f3a:	e7e8      	b.n	8012f0e <igmp_join+0x1a>
 8012f3c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012f40:	e7f4      	b.n	8012f2c <igmp_join+0x38>
 8012f42:	f06f 0301 	mvn.w	r3, #1
 8012f46:	e7f1      	b.n	8012f2c <igmp_join+0x38>
 8012f48:	10001328 	andne	r1, r0, r8, lsr #6

08012f4c <igmp_leave>:
 8012f4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012f4e:	4c1d      	ldr	r4, [pc, #116]	; (8012fc4 <igmp_leave+0x78>)
 8012f50:	2600      	movs	r6, #0
 8012f52:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8012f56:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 8012f5a:	4282      	cmp	r2, r0
 8012f5c:	d006      	beq.n	8012f6c <igmp_leave+0x20>
 8012f5e:	3601      	adds	r6, #1
 8012f60:	2e24      	cmp	r6, #36	; 0x24
 8012f62:	d1f8      	bne.n	8012f56 <igmp_leave+0xa>
 8012f64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f68:	b002      	add	sp, #8
 8012f6a:	bd70      	pop	{r4, r5, r6, pc}
 8012f6c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012f6e:	9001      	str	r0, [sp, #4]
 8012f70:	2500      	movs	r5, #0
 8012f72:	2118      	movs	r1, #24
 8012f74:	f104 0016 	add.w	r0, r4, #22
 8012f78:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012f7c:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8012f80:	f000 f82d 	bl	8012fde <net_chksum>
 8012f84:	2204      	movs	r2, #4
 8012f86:	eb0d 0102 	add.w	r1, sp, r2
 8012f8a:	f8a4 0054 	strh.w	r0, [r4, #84]	; 0x54
 8012f8e:	f104 0066 	add.w	r0, r4, #102	; 0x66
 8012f92:	f7ff ff37 	bl	8012e04 <memcpy.isra.0>
 8012f96:	2120      	movs	r1, #32
 8012f98:	f104 004a 	add.w	r0, r4, #74	; 0x4a
 8012f9c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8012fa0:	f000 f81d 	bl	8012fde <net_chksum>
 8012fa4:	212e      	movs	r1, #46	; 0x2e
 8012fa6:	f8a4 0064 	strh.w	r0, [r4, #100]	; 0x64
 8012faa:	4807      	ldr	r0, [pc, #28]	; (8012fc8 <igmp_leave+0x7c>)
 8012fac:	f002 fb4e 	bl	801564c <emac_eth_send>
 8012fb0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012fb2:	3301      	adds	r3, #1
 8012fb4:	8723      	strh	r3, [r4, #56]	; 0x38
 8012fb6:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8012fba:	4628      	mov	r0, r5
 8012fbc:	66e5      	str	r5, [r4, #108]	; 0x6c
 8012fbe:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 8012fc2:	e7d1      	b.n	8012f68 <igmp_leave+0x1c>
 8012fc4:	10001328 	andne	r1, r0, r8, lsr #6
 8012fc8:	10001364 	andne	r1, r0, r4, ror #6

08012fcc <ip_set_ip>:
 8012fcc:	b510      	push	{r4, lr}
 8012fce:	4604      	mov	r4, r0
 8012fd0:	f7fe f9dc 	bl	801138c <udp_set_ip>
 8012fd4:	4620      	mov	r0, r4
 8012fd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012fda:	f7ff bf5b 	b.w	8012e94 <igmp_set_ip>

08012fde <net_chksum>:
 8012fde:	f021 0201 	bic.w	r2, r1, #1
 8012fe2:	b530      	push	{r4, r5, lr}
 8012fe4:	2300      	movs	r3, #0
 8012fe6:	1884      	adds	r4, r0, r2
 8012fe8:	42a0      	cmp	r0, r4
 8012fea:	d10b      	bne.n	8013004 <net_chksum+0x26>
 8012fec:	4291      	cmp	r1, r2
 8012fee:	d004      	beq.n	8012ffa <net_chksum+0x1c>
 8012ff0:	7802      	ldrb	r2, [r0, #0]
 8012ff2:	0212      	lsls	r2, r2, #8
 8012ff4:	ba52      	rev16	r2, r2
 8012ff6:	fa13 f382 	uxtah	r3, r3, r2
 8012ffa:	0c1a      	lsrs	r2, r3, #16
 8012ffc:	d106      	bne.n	801300c <net_chksum+0x2e>
 8012ffe:	43d8      	mvns	r0, r3
 8013000:	b280      	uxth	r0, r0
 8013002:	bd30      	pop	{r4, r5, pc}
 8013004:	f830 5b02 	ldrh.w	r5, [r0], #2
 8013008:	442b      	add	r3, r5
 801300a:	e7ed      	b.n	8012fe8 <net_chksum+0xa>
 801300c:	fa12 f383 	uxtah	r3, r2, r3
 8013010:	e7f3      	b.n	8012ffa <net_chksum+0x1c>

08013012 <memcpy.isra.0>:
 8013012:	3801      	subs	r0, #1
 8013014:	440a      	add	r2, r1
 8013016:	4291      	cmp	r1, r2
 8013018:	d100      	bne.n	801301c <memcpy.isra.0+0xa>
 801301a:	4770      	bx	lr
 801301c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013020:	f800 3f01 	strb.w	r3, [r0, #1]!
 8013024:	e7f7      	b.n	8013016 <memcpy.isra.0+0x4>

08013026 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8013026:	b430      	push	{r4, r5}
 8013028:	b168      	cbz	r0, 8013046 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 801302a:	7905      	ldrb	r5, [r0, #4]
 801302c:	2300      	movs	r3, #0
 801302e:	5cd4      	ldrb	r4, [r2, r3]
 8013030:	b11c      	cbz	r4, 801303a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8013032:	1c5c      	adds	r4, r3, #1
 8013034:	429d      	cmp	r5, r3
 8013036:	4623      	mov	r3, r4
 8013038:	dcf9      	bgt.n	801302e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 801303a:	6804      	ldr	r4, [r0, #0]
 801303c:	69e4      	ldr	r4, [r4, #28]
 801303e:	b2db      	uxtb	r3, r3
 8013040:	46a4      	mov	ip, r4
 8013042:	bc30      	pop	{r4, r5}
 8013044:	4760      	bx	ip
 8013046:	bc30      	pop	{r4, r5}
 8013048:	4770      	bx	lr

0801304a <Display::ClearLine(unsigned char) [clone .isra.0]>:
 801304a:	b110      	cbz	r0, 8013052 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801304c:	6803      	ldr	r3, [r0, #0]
 801304e:	691b      	ldr	r3, [r3, #16]
 8013050:	4718      	bx	r3
 8013052:	4770      	bx	lr

08013054 <DisplayUdf::DisplayUdf()>:
 8013054:	b510      	push	{r4, lr}
 8013056:	4604      	mov	r4, r0
 8013058:	f000 fe90 	bl	8013d7c <Display::Display()>
 801305c:	4b05      	ldr	r3, [pc, #20]	; (8013074 <DisplayUdf::DisplayUdf()+0x20>)
 801305e:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8013062:	601c      	str	r4, [r3, #0]
 8013064:	2301      	movs	r3, #1
 8013066:	f802 3f01 	strb.w	r3, [r2, #1]!
 801306a:	3301      	adds	r3, #1
 801306c:	2b15      	cmp	r3, #21
 801306e:	d1fa      	bne.n	8013066 <DisplayUdf::DisplayUdf()+0x12>
 8013070:	4620      	mov	r0, r4
 8013072:	bd10      	pop	{r4, pc}
 8013074:	2000fdf0 	strdcs	pc, [r0], -r0

08013078 <DisplayUdf::SetTitle(char const*, ...)>:
 8013078:	b40e      	push	{r1, r2, r3}
 801307a:	b517      	push	{r0, r1, r2, r4, lr}
 801307c:	ab05      	add	r3, sp, #20
 801307e:	4604      	mov	r4, r0
 8013080:	f853 2b04 	ldr.w	r2, [r3], #4
 8013084:	9301      	str	r3, [sp, #4]
 8013086:	211f      	movs	r1, #31
 8013088:	301c      	adds	r0, #28
 801308a:	f7f7 f961 	bl	800a350 <vsnprintf>
 801308e:	4420      	add	r0, r4
 8013090:	2300      	movs	r3, #0
 8013092:	7703      	strb	r3, [r0, #28]
 8013094:	b003      	add	sp, #12
 8013096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801309a:	b003      	add	sp, #12
 801309c:	4770      	bx	lr

0801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801309e:	1e4b      	subs	r3, r1, #1
 80130a0:	2b05      	cmp	r3, #5
 80130a2:	b530      	push	{r4, r5, lr}
 80130a4:	d80f      	bhi.n	80130c6 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80130a6:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80130aa:	2300      	movs	r3, #0
 80130ac:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80130b0:	428d      	cmp	r5, r1
 80130b2:	d109      	bne.n	80130c8 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80130b4:	1884      	adds	r4, r0, r2
 80130b6:	4403      	add	r3, r0
 80130b8:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80130bc:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80130c0:	4402      	add	r2, r0
 80130c2:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
 80130c6:	bd30      	pop	{r4, r5, pc}
 80130c8:	3301      	adds	r3, #1
 80130ca:	2b14      	cmp	r3, #20
 80130cc:	d1ee      	bne.n	80130ac <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80130ce:	e7f7      	b.n	80130c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080130d0 <DisplayUdf::ShowEmacStart()>:
 80130d0:	b510      	push	{r4, lr}
 80130d2:	4604      	mov	r4, r0
 80130d4:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80130d8:	6980      	ldr	r0, [r0, #24]
 80130da:	f7ff ffb6 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80130de:	4a03      	ldr	r2, [pc, #12]	; (80130ec <DisplayUdf::ShowEmacStart()+0x1c>)
 80130e0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80130e4:	4620      	mov	r0, r4
 80130e6:	f7f6 f8e5 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80130ea:	bd10      	pop	{r4, pc}
 80130ec:	0801982d 	stmdaeq	r1, {r0, r2, r3, r5, fp, ip, pc}

080130f0 <DisplayUdf::ShowIpAddress()>:
 80130f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130f4:	4604      	mov	r4, r0
 80130f6:	b088      	sub	sp, #32
 80130f8:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80130fc:	6980      	ldr	r0, [r0, #24]
 80130fe:	f7ff ffa4 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013102:	4b13      	ldr	r3, [pc, #76]	; (8013150 <DisplayUdf::ShowIpAddress()+0x60>)
 8013104:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013108:	681d      	ldr	r5, [r3, #0]
 801310a:	9107      	str	r1, [sp, #28]
 801310c:	696e      	ldr	r6, [r5, #20]
 801310e:	69e8      	ldr	r0, [r5, #28]
 8013110:	b2f3      	uxtb	r3, r6
 8013112:	9306      	str	r3, [sp, #24]
 8013114:	f003 fd58 	bl	8016bc8 <__popcountsi2>
 8013118:	79ea      	ldrb	r2, [r5, #7]
 801311a:	f3c6 2707 	ubfx	r7, r6, #8, #8
 801311e:	f3c6 4807 	ubfx	r8, r6, #16, #8
 8013122:	e9dd 3106 	ldrd	r3, r1, [sp, #24]
 8013126:	0e36      	lsrs	r6, r6, #24
 8013128:	b982      	cbnz	r2, 801314c <DisplayUdf::ShowIpAddress()+0x5c>
 801312a:	796a      	ldrb	r2, [r5, #5]
 801312c:	2a00      	cmp	r2, #0
 801312e:	bf14      	ite	ne
 8013130:	2244      	movne	r2, #68	; 0x44
 8013132:	2253      	moveq	r2, #83	; 0x53
 8013134:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8013138:	e9cd 8601 	strd	r8, r6, [sp, #4]
 801313c:	4a05      	ldr	r2, [pc, #20]	; (8013154 <DisplayUdf::ShowIpAddress()+0x64>)
 801313e:	9700      	str	r7, [sp, #0]
 8013140:	4620      	mov	r0, r4
 8013142:	f7f6 f8b7 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8013146:	b008      	add	sp, #32
 8013148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801314c:	225a      	movs	r2, #90	; 0x5a
 801314e:	e7f1      	b.n	8013134 <DisplayUdf::ShowIpAddress()+0x44>
 8013150:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 8013154:	0801983c 	stmdaeq	r1, {r2, r3, r4, r5, fp, ip, pc}

08013158 <DisplayUdf::ShowNetmask()>:
 8013158:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801315a:	4b0c      	ldr	r3, [pc, #48]	; (801318c <DisplayUdf::ShowNetmask()+0x34>)
 801315c:	681b      	ldr	r3, [r3, #0]
 801315e:	69db      	ldr	r3, [r3, #28]
 8013160:	0e1a      	lsrs	r2, r3, #24
 8013162:	9202      	str	r2, [sp, #8]
 8013164:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013168:	9201      	str	r2, [sp, #4]
 801316a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801316e:	9200      	str	r2, [sp, #0]
 8013170:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8013174:	4a06      	ldr	r2, [pc, #24]	; (8013190 <DisplayUdf::ShowNetmask()+0x38>)
 8013176:	b2db      	uxtb	r3, r3
 8013178:	4604      	mov	r4, r0
 801317a:	f7f6 f89b 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 801317e:	4620      	mov	r0, r4
 8013180:	b004      	add	sp, #16
 8013182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013186:	f7ff bfb3 	b.w	80130f0 <DisplayUdf::ShowIpAddress()>
 801318a:	bf00      	nop
 801318c:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 8013190:	0801984e 	stmdaeq	r1, {r1, r2, r3, r6, fp, ip, pc}

08013194 <DisplayUdf::ShowGatewayIp()>:
 8013194:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013196:	4604      	mov	r4, r0
 8013198:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 801319c:	6980      	ldr	r0, [r0, #24]
 801319e:	f7ff ff54 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80131a2:	4b0a      	ldr	r3, [pc, #40]	; (80131cc <DisplayUdf::ShowGatewayIp()+0x38>)
 80131a4:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80131a8:	681b      	ldr	r3, [r3, #0]
 80131aa:	699b      	ldr	r3, [r3, #24]
 80131ac:	0e1a      	lsrs	r2, r3, #24
 80131ae:	9202      	str	r2, [sp, #8]
 80131b0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80131b4:	9201      	str	r2, [sp, #4]
 80131b6:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80131ba:	9200      	str	r2, [sp, #0]
 80131bc:	b2db      	uxtb	r3, r3
 80131be:	4a04      	ldr	r2, [pc, #16]	; (80131d0 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80131c0:	4620      	mov	r0, r4
 80131c2:	f7f6 f877 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80131c6:	b004      	add	sp, #16
 80131c8:	bd10      	pop	{r4, pc}
 80131ca:	bf00      	nop
 80131cc:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
 80131d0:	0801985d 	stmdaeq	r1, {r0, r2, r3, r4, r6, fp, ip, pc}

080131d4 <DisplayUdf::ShowHostName()>:
 80131d4:	b510      	push	{r4, lr}
 80131d6:	4604      	mov	r4, r0
 80131d8:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80131dc:	6980      	ldr	r0, [r0, #24]
 80131de:	f7ff ff34 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80131e2:	4b05      	ldr	r3, [pc, #20]	; (80131f8 <DisplayUdf::ShowHostName()+0x24>)
 80131e4:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 80131e8:	681a      	ldr	r2, [r3, #0]
 80131ea:	69a0      	ldr	r0, [r4, #24]
 80131ec:	3220      	adds	r2, #32
 80131ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131f2:	f7ff bf18 	b.w	8013026 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80131f6:	bf00      	nop
 80131f8:	2000fb34 	andcs	pc, r0, r4, lsr fp	; <UNPREDICTABLE>

080131fc <DisplayUdf::Show()>:
 80131fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80131fe:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 8013202:	4604      	mov	r4, r0
 8013204:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8013208:	21ff      	movs	r1, #255	; 0xff
 801320a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801320e:	2806      	cmp	r0, #6
 8013210:	bf88      	it	hi
 8013212:	7019      	strbhi	r1, [r3, #0]
 8013214:	429a      	cmp	r2, r3
 8013216:	d1f8      	bne.n	801320a <DisplayUdf::Show()+0xe>
 8013218:	2501      	movs	r5, #1
 801321a:	4629      	mov	r1, r5
 801321c:	3501      	adds	r5, #1
 801321e:	69a0      	ldr	r0, [r4, #24]
 8013220:	b2ed      	uxtb	r5, r5
 8013222:	f7ff ff12 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013226:	2d06      	cmp	r5, #6
 8013228:	d1f7      	bne.n	801321a <DisplayUdf::Show()+0x1e>
 801322a:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 801322e:	69a0      	ldr	r0, [r4, #24]
 8013230:	f104 021c 	add.w	r2, r4, #28
 8013234:	f7ff fef7 	bl	8013026 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013238:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 801323c:	69a0      	ldr	r0, [r4, #24]
 801323e:	4a0d      	ldr	r2, [pc, #52]	; (8013274 <DisplayUdf::Show()+0x78>)
 8013240:	f7ff fef1 	bl	8013026 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013244:	4b0c      	ldr	r3, [pc, #48]	; (8013278 <DisplayUdf::Show()+0x7c>)
 8013246:	4a0d      	ldr	r2, [pc, #52]	; (801327c <DisplayUdf::Show()+0x80>)
 8013248:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 801324c:	9300      	str	r3, [sp, #0]
 801324e:	4620      	mov	r0, r4
 8013250:	2303      	movs	r3, #3
 8013252:	f7f6 f82f 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8013256:	4620      	mov	r0, r4
 8013258:	f7ff ff4a 	bl	80130f0 <DisplayUdf::ShowIpAddress()>
 801325c:	4620      	mov	r0, r4
 801325e:	f7ff ff99 	bl	8013194 <DisplayUdf::ShowGatewayIp()>
 8013262:	4620      	mov	r0, r4
 8013264:	f7ff ff78 	bl	8013158 <DisplayUdf::ShowNetmask()>
 8013268:	4620      	mov	r0, r4
 801326a:	b003      	add	sp, #12
 801326c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013270:	f7ff bfb0 	b.w	80131d4 <DisplayUdf::ShowHostName()>
 8013274:	08017548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp, lr}
 8013278:	2000fe88 	andcs	pc, r0, r8, lsl #29
 801327c:	0801986c 	stmdaeq	r1, {r2, r3, r5, r6, fp, ip, pc}

08013280 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8013280:	3901      	subs	r1, #1
 8013282:	b510      	push	{r4, lr}
 8013284:	4604      	mov	r4, r0
 8013286:	2903      	cmp	r1, #3
 8013288:	d814      	bhi.n	80132b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801328a:	e8df f001 	tbb	[pc, r1]
 801328e:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8013292:	4b14      	ldr	r3, [pc, #80]	; (80132e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013294:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8013298:	6818      	ldr	r0, [r3, #0]
 801329a:	f7f7 facd 	bl	800a838 <Display::Status(Display7SegmentMessage)>
 801329e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80132a2:	69a0      	ldr	r0, [r4, #24]
 80132a4:	f7ff fed1 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80132a8:	4a0f      	ldr	r2, [pc, #60]	; (80132e8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80132aa:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80132ae:	4620      	mov	r0, r4
 80132b0:	f7f6 f800 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80132b4:	bd10      	pop	{r4, pc}
 80132b6:	f248 0180 	movw	r1, #32896	; 0x8080
 80132ba:	4b0a      	ldr	r3, [pc, #40]	; (80132e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80132bc:	6818      	ldr	r0, [r3, #0]
 80132be:	f7f7 fabb 	bl	800a838 <Display::Status(Display7SegmentMessage)>
 80132c2:	e7f7      	b.n	80132b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80132c4:	4b07      	ldr	r3, [pc, #28]	; (80132e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80132c6:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80132ca:	6818      	ldr	r0, [r3, #0]
 80132cc:	f7f7 fab4 	bl	800a838 <Display::Status(Display7SegmentMessage)>
 80132d0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80132d4:	69a0      	ldr	r0, [r4, #24]
 80132d6:	f7ff feb8 	bl	801304a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80132da:	4a04      	ldr	r2, [pc, #16]	; (80132ec <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80132dc:	e7e5      	b.n	80132aa <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80132de:	f645 3179 	movw	r1, #23417	; 0x5b79
 80132e2:	e7ea      	b.n	80132ba <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80132e4:	2000fdf8 	strdcs	pc, [r0], -r8
 80132e8:	0801987b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, fp, ip, pc}
 80132ec:	08019889 	stmdaeq	r1, {r0, r3, r7, fp, ip, pc}

080132f0 <DisplayUdf::ShowShutdown()>:
 80132f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80132f2:	4604      	mov	r4, r0
 80132f4:	6980      	ldr	r0, [r0, #24]
 80132f6:	b1c0      	cbz	r0, 801332a <DisplayUdf::ShowShutdown()+0x3a>
 80132f8:	7947      	ldrb	r7, [r0, #5]
 80132fa:	6803      	ldr	r3, [r0, #0]
 80132fc:	7905      	ldrb	r5, [r0, #4]
 80132fe:	6a1b      	ldr	r3, [r3, #32]
 8013300:	1e7a      	subs	r2, r7, #1
 8013302:	b2d2      	uxtb	r2, r2
 8013304:	9201      	str	r2, [sp, #4]
 8013306:	2100      	movs	r1, #0
 8013308:	4798      	blx	r3
 801330a:	9a01      	ldr	r2, [sp, #4]
 801330c:	2600      	movs	r6, #0
 801330e:	3d01      	subs	r5, #1
 8013310:	42ae      	cmp	r6, r5
 8013312:	69a0      	ldr	r0, [r4, #24]
 8013314:	d310      	bcc.n	8013338 <DisplayUdf::ShowShutdown()+0x48>
 8013316:	b118      	cbz	r0, 8013320 <DisplayUdf::ShowShutdown()+0x30>
 8013318:	6803      	ldr	r3, [r0, #0]
 801331a:	2100      	movs	r1, #0
 801331c:	6a1b      	ldr	r3, [r3, #32]
 801331e:	4798      	blx	r3
 8013320:	4a0a      	ldr	r2, [pc, #40]	; (801334c <DisplayUdf::ShowShutdown()+0x5c>)
 8013322:	69a0      	ldr	r0, [r4, #24]
 8013324:	4639      	mov	r1, r7
 8013326:	f7ff fe7e 	bl	8013026 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801332a:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801332e:	4620      	mov	r0, r4
 8013330:	f7f7 fa82 	bl	800a838 <Display::Status(Display7SegmentMessage)>
 8013334:	b003      	add	sp, #12
 8013336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013338:	b128      	cbz	r0, 8013346 <DisplayUdf::ShowShutdown()+0x56>
 801333a:	6803      	ldr	r3, [r0, #0]
 801333c:	9201      	str	r2, [sp, #4]
 801333e:	695b      	ldr	r3, [r3, #20]
 8013340:	2120      	movs	r1, #32
 8013342:	4798      	blx	r3
 8013344:	9a01      	ldr	r2, [sp, #4]
 8013346:	3601      	adds	r6, #1
 8013348:	e7e2      	b.n	8013310 <DisplayUdf::ShowShutdown()+0x20>
 801334a:	bf00      	nop
 801334c:	08019897 	stmdaeq	r1, {r0, r1, r2, r4, r7, fp, ip, pc}

08013350 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8013350:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013352:	88c6      	ldrh	r6, [r0, #6]
 8013354:	8885      	ldrh	r5, [r0, #4]
 8013356:	42ae      	cmp	r6, r5
 8013358:	d216      	bcs.n	8013388 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 801335a:	4604      	mov	r4, r0
 801335c:	6800      	ldr	r0, [r0, #0]
 801335e:	1bad      	subs	r5, r5, r6
 8013360:	4430      	add	r0, r6
 8013362:	7a26      	ldrb	r6, [r4, #8]
 8013364:	b923      	cbnz	r3, 8013370 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8013366:	b926      	cbnz	r6, 8013372 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8013368:	9200      	str	r2, [sp, #0]
 801336a:	460b      	mov	r3, r1
 801336c:	4a09      	ldr	r2, [pc, #36]	; (8013394 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 801336e:	e003      	b.n	8013378 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013370:	b166      	cbz	r6, 801338c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8013372:	9200      	str	r2, [sp, #0]
 8013374:	4a08      	ldr	r2, [pc, #32]	; (8013398 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8013376:	460b      	mov	r3, r1
 8013378:	4629      	mov	r1, r5
 801337a:	f7f6 ffd1 	bl	800a320 <snprintf>
 801337e:	4285      	cmp	r5, r0
 8013380:	bfa2      	ittt	ge
 8013382:	88e3      	ldrhge	r3, [r4, #6]
 8013384:	181b      	addge	r3, r3, r0
 8013386:	80e3      	strhge	r3, [r4, #6]
 8013388:	b002      	add	sp, #8
 801338a:	bd70      	pop	{r4, r5, r6, pc}
 801338c:	9200      	str	r2, [sp, #0]
 801338e:	460b      	mov	r3, r1
 8013390:	4a02      	ldr	r2, [pc, #8]	; (801339c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8013392:	e7f1      	b.n	8013378 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013394:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 8013398:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 801339c:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

080133a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80133a0:	b510      	push	{r4, lr}
 80133a2:	2220      	movs	r2, #32
 80133a4:	4604      	mov	r4, r0
 80133a6:	f840 1b04 	str.w	r1, [r0], #4
 80133aa:	2100      	movs	r1, #0
 80133ac:	f001 f998 	bl	80146e0 <memset>
 80133b0:	f647 7305 	movw	r3, #32517	; 0x7f05
 80133b4:	84a3      	strh	r3, [r4, #36]	; 0x24
 80133b6:	4620      	mov	r0, r4
 80133b8:	bd10      	pop	{r4, pc}

080133ba <DisplayUdfParams::Load()>:
 80133ba:	b508      	push	{r3, lr}
 80133bc:	2300      	movs	r3, #0
 80133be:	4601      	mov	r1, r0
 80133c0:	6043      	str	r3, [r0, #4]
 80133c2:	6800      	ldr	r0, [r0, #0]
 80133c4:	b120      	cbz	r0, 80133d0 <DisplayUdfParams::Load()+0x16>
 80133c6:	6803      	ldr	r3, [r0, #0]
 80133c8:	3104      	adds	r1, #4
 80133ca:	68db      	ldr	r3, [r3, #12]
 80133cc:	4798      	blx	r3
 80133ce:	2001      	movs	r0, #1
 80133d0:	bd08      	pop	{r3, pc}
	...

080133d4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80133d4:	6803      	ldr	r3, [r0, #0]
 80133d6:	b1d3      	cbz	r3, 801340e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80133d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80133da:	2300      	movs	r3, #0
 80133dc:	6043      	str	r3, [r0, #4]
 80133de:	4604      	mov	r4, r0
 80133e0:	460d      	mov	r5, r1
 80133e2:	4616      	mov	r6, r2
 80133e4:	490a      	ldr	r1, [pc, #40]	; (8013410 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 80133e6:	4602      	mov	r2, r0
 80133e8:	4668      	mov	r0, sp
 80133ea:	f000 fad1 	bl	8013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80133ee:	4632      	mov	r2, r6
 80133f0:	4629      	mov	r1, r5
 80133f2:	4668      	mov	r0, sp
 80133f4:	f000 fad0 	bl	8013998 <ReadConfigFile::Read(char const*, unsigned int)>
 80133f8:	4621      	mov	r1, r4
 80133fa:	f851 0b04 	ldr.w	r0, [r1], #4
 80133fe:	6803      	ldr	r3, [r0, #0]
 8013400:	689b      	ldr	r3, [r3, #8]
 8013402:	4798      	blx	r3
 8013404:	4668      	mov	r0, sp
 8013406:	f000 fac6 	bl	8013996 <ReadConfigFile::~ReadConfigFile()>
 801340a:	b002      	add	sp, #8
 801340c:	bd70      	pop	{r4, r5, r6, pc}
 801340e:	4770      	bx	lr
 8013410:	080134dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, ip, sp}

08013414 <DisplayUdfParams::callbackFunction(char const*)>:
 8013414:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013416:	460e      	mov	r6, r1
 8013418:	4604      	mov	r4, r0
 801341a:	492c      	ldr	r1, [pc, #176]	; (80134cc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 801341c:	f10d 0207 	add.w	r2, sp, #7
 8013420:	4630      	mov	r0, r6
 8013422:	f000 fbea 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013426:	b968      	cbnz	r0, 8013444 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8013428:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801342c:	6863      	ldr	r3, [r4, #4]
 801342e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8013432:	2a7f      	cmp	r2, #127	; 0x7f
 8013434:	bf14      	ite	ne
 8013436:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 801343a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 801343e:	6063      	str	r3, [r4, #4]
 8013440:	b003      	add	sp, #12
 8013442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013444:	4922      	ldr	r1, [pc, #136]	; (80134d0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8013446:	f10d 0207 	add.w	r2, sp, #7
 801344a:	4630      	mov	r0, r6
 801344c:	f000 fbd5 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013450:	b958      	cbnz	r0, 801346a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8013452:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013456:	6863      	ldr	r3, [r4, #4]
 8013458:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 801345c:	2a05      	cmp	r2, #5
 801345e:	bf14      	ite	ne
 8013460:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8013464:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8013468:	e7e9      	b.n	801343e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801346a:	491a      	ldr	r1, [pc, #104]	; (80134d4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 801346c:	f10d 0207 	add.w	r2, sp, #7
 8013470:	4630      	mov	r0, r6
 8013472:	f000 fbc2 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013476:	b948      	cbnz	r0, 801348c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8013478:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801347c:	6863      	ldr	r3, [r4, #4]
 801347e:	b112      	cbz	r2, 8013486 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8013480:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8013484:	e7db      	b.n	801343e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013486:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801348a:	e7d8      	b.n	801343e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801348c:	4f12      	ldr	r7, [pc, #72]	; (80134d8 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 801348e:	2500      	movs	r5, #0
 8013490:	f857 1b04 	ldr.w	r1, [r7], #4
 8013494:	f10d 0207 	add.w	r2, sp, #7
 8013498:	4630      	mov	r0, r6
 801349a:	f000 fbae 	bl	8013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801349e:	b988      	cbnz	r0, 80134c4 <DisplayUdfParams::callbackFunction(char const*)+0xb0>
 80134a0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80134a4:	6862      	ldr	r2, [r4, #4]
 80134a6:	1e4e      	subs	r6, r1, #1
 80134a8:	2301      	movs	r3, #1
 80134aa:	2e05      	cmp	r6, #5
 80134ac:	fa03 f305 	lsl.w	r3, r3, r5
 80134b0:	4425      	add	r5, r4
 80134b2:	d802      	bhi.n	80134ba <DisplayUdfParams::callbackFunction(char const*)+0xa6>
 80134b4:	7229      	strb	r1, [r5, #8]
 80134b6:	4313      	orrs	r3, r2
 80134b8:	e7c1      	b.n	801343e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80134ba:	ea22 0203 	bic.w	r2, r2, r3
 80134be:	7228      	strb	r0, [r5, #8]
 80134c0:	6062      	str	r2, [r4, #4]
 80134c2:	e7bd      	b.n	8013440 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80134c4:	3501      	adds	r5, #1
 80134c6:	2d14      	cmp	r5, #20
 80134c8:	d1e2      	bne.n	8013490 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80134ca:	e7b9      	b.n	8013440 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80134cc:	08019956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, ip, pc}
 80134d0:	0801991e 	stmdaeq	r1, {r1, r2, r3, r4, r8, fp, ip, pc}
 80134d4:	0801992c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, pc}
 80134d8:	080198a8 	stmdaeq	r1, {r3, r5, r7, fp, ip, pc}

080134dc <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80134dc:	f7ff bf9a 	b.w	8013414 <DisplayUdfParams::callbackFunction(char const*)>

080134e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80134e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134e4:	4604      	mov	r4, r0
 80134e6:	b086      	sub	sp, #24
 80134e8:	4615      	mov	r5, r2
 80134ea:	461e      	mov	r6, r3
 80134ec:	3004      	adds	r0, #4
 80134ee:	b379      	cbz	r1, 8013550 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 80134f0:	2222      	movs	r2, #34	; 0x22
 80134f2:	f001 f8de 	bl	80146b2 <memmove>
 80134f6:	462a      	mov	r2, r5
 80134f8:	493e      	ldr	r1, [pc, #248]	; (80135f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 80134fa:	4633      	mov	r3, r6
 80134fc:	a803      	add	r0, sp, #12
 80134fe:	f000 f9a7 	bl	8013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8013502:	6863      	ldr	r3, [r4, #4]
 8013504:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8013508:	493b      	ldr	r1, [pc, #236]	; (80135f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 801350a:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801350e:	a803      	add	r0, sp, #12
 8013510:	f7ff ff1e 	bl	8013350 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013514:	6863      	ldr	r3, [r4, #4]
 8013516:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801351a:	4938      	ldr	r1, [pc, #224]	; (80135fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801351c:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8013520:	a803      	add	r0, sp, #12
 8013522:	f7ff ff15 	bl	8013350 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013526:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801352a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801352e:	6863      	ldr	r3, [r4, #4]
 8013530:	42aa      	cmp	r2, r5
 8013532:	d226      	bcs.n	8013582 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8013534:	9803      	ldr	r0, [sp, #12]
 8013536:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 801353a:	4410      	add	r0, r2
 801353c:	eba5 0502 	sub.w	r5, r5, r2
 8013540:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013544:	d10b      	bne.n	801355e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8013546:	b962      	cbnz	r2, 8013562 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8013548:	9200      	str	r2, [sp, #0]
 801354a:	4b2d      	ldr	r3, [pc, #180]	; (8013600 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801354c:	4a2d      	ldr	r2, [pc, #180]	; (8013604 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 801354e:	e00e      	b.n	801356e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8013550:	6823      	ldr	r3, [r4, #0]
 8013552:	681a      	ldr	r2, [r3, #0]
 8013554:	4601      	mov	r1, r0
 8013556:	68d2      	ldr	r2, [r2, #12]
 8013558:	4618      	mov	r0, r3
 801355a:	4790      	blx	r2
 801355c:	e7cb      	b.n	80134f6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 801355e:	2a00      	cmp	r2, #0
 8013560:	d042      	beq.n	80135e8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8013562:	3b00      	subs	r3, #0
 8013564:	bf18      	it	ne
 8013566:	2301      	movne	r3, #1
 8013568:	9300      	str	r3, [sp, #0]
 801356a:	4a27      	ldr	r2, [pc, #156]	; (8013608 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 801356c:	4b24      	ldr	r3, [pc, #144]	; (8013600 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801356e:	4629      	mov	r1, r5
 8013570:	f7f6 fed6 	bl	800a320 <snprintf>
 8013574:	4285      	cmp	r5, r0
 8013576:	bfa2      	ittt	ge
 8013578:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801357c:	181b      	addge	r3, r3, r0
 801357e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013582:	4e22      	ldr	r6, [pc, #136]	; (801360c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8013584:	2500      	movs	r5, #0
 8013586:	2701      	movs	r7, #1
 8013588:	f104 0808 	add.w	r8, r4, #8
 801358c:	f856 1b04 	ldr.w	r1, [r6], #4
 8013590:	780b      	ldrb	r3, [r1, #0]
 8013592:	b163      	cbz	r3, 80135ae <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 8013594:	6862      	ldr	r2, [r4, #4]
 8013596:	fa07 f305 	lsl.w	r3, r7, r5
 801359a:	4393      	bics	r3, r2
 801359c:	bf08      	it	eq
 801359e:	2301      	moveq	r3, #1
 80135a0:	f818 2005 	ldrb.w	r2, [r8, r5]
 80135a4:	bf18      	it	ne
 80135a6:	2300      	movne	r3, #0
 80135a8:	a803      	add	r0, sp, #12
 80135aa:	f7ff fed1 	bl	8013350 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80135ae:	3501      	adds	r5, #1
 80135b0:	2d14      	cmp	r5, #20
 80135b2:	d1eb      	bne.n	801358c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80135b4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80135b8:	b17b      	cbz	r3, 80135da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xfa>
 80135ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80135be:	9b03      	ldr	r3, [sp, #12]
 80135c0:	4413      	add	r3, r2
 80135c2:	227d      	movs	r2, #125	; 0x7d
 80135c4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80135c8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80135cc:	9903      	ldr	r1, [sp, #12]
 80135ce:	54ca      	strb	r2, [r1, r3]
 80135d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80135d4:	3301      	adds	r3, #1
 80135d6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80135da:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80135de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80135e0:	601a      	str	r2, [r3, #0]
 80135e2:	b006      	add	sp, #24
 80135e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135e8:	2301      	movs	r3, #1
 80135ea:	9300      	str	r3, [sp, #0]
 80135ec:	4a08      	ldr	r2, [pc, #32]	; (8013610 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x130>)
 80135ee:	4b04      	ldr	r3, [pc, #16]	; (8013600 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 80135f0:	e7bd      	b.n	801356e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80135f2:	bf00      	nop
 80135f4:	0801994a 	stmdaeq	r1, {r1, r3, r6, r8, fp, ip, pc}
 80135f8:	08019956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, ip, pc}
 80135fc:	0801991e 	stmdaeq	r1, {r1, r2, r3, r4, r8, fp, ip, pc}
 8013600:	0801992c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, pc}
 8013604:	080171f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 8013608:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 801360c:	080198a8 	stmdaeq	r1, {r3, r5, r7, fp, ip, pc}
 8013610:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

08013614 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8013614:	b513      	push	{r0, r1, r4, lr}
 8013616:	6804      	ldr	r4, [r0, #0]
 8013618:	b914      	cbnz	r4, 8013620 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 801361a:	601c      	str	r4, [r3, #0]
 801361c:	b002      	add	sp, #8
 801361e:	bd10      	pop	{r4, pc}
 8013620:	9300      	str	r3, [sp, #0]
 8013622:	4613      	mov	r3, r2
 8013624:	460a      	mov	r2, r1
 8013626:	2100      	movs	r1, #0
 8013628:	f7ff ff5a 	bl	80134e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 801362c:	e7f6      	b.n	801361c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801362e <DisplayUdfParams::Set(DisplayUdf*)>:
 801362e:	6843      	ldr	r3, [r0, #4]
 8013630:	009a      	lsls	r2, r3, #2
 8013632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013636:	4604      	mov	r4, r0
 8013638:	460e      	mov	r6, r1
 801363a:	d506      	bpl.n	801364a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 801363c:	6988      	ldr	r0, [r1, #24]
 801363e:	b120      	cbz	r0, 801364a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8013640:	6803      	ldr	r3, [r0, #0]
 8013642:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8013646:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013648:	4798      	blx	r3
 801364a:	6863      	ldr	r3, [r4, #4]
 801364c:	69b0      	ldr	r0, [r6, #24]
 801364e:	00db      	lsls	r3, r3, #3
 8013650:	bf41      	itttt	mi
 8013652:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8013656:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 801365a:	4353      	mulmi	r3, r2
 801365c:	6173      	strmi	r3, [r6, #20]
 801365e:	6861      	ldr	r1, [r4, #4]
 8013660:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8013664:	b110      	cbz	r0, 801366c <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8013666:	6803      	ldr	r3, [r0, #0]
 8013668:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801366a:	4798      	blx	r3
 801366c:	2500      	movs	r5, #0
 801366e:	2701      	movs	r7, #1
 8013670:	f104 0808 	add.w	r8, r4, #8
 8013674:	6862      	ldr	r2, [r4, #4]
 8013676:	fa07 f305 	lsl.w	r3, r7, r5
 801367a:	4393      	bics	r3, r2
 801367c:	d105      	bne.n	801368a <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 801367e:	f818 1005 	ldrb.w	r1, [r8, r5]
 8013682:	462a      	mov	r2, r5
 8013684:	4630      	mov	r0, r6
 8013686:	f7ff fd0a 	bl	801309e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 801368a:	3501      	adds	r5, #1
 801368c:	2d14      	cmp	r5, #20
 801368e:	d1f1      	bne.n	8013674 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8013690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013694 <DisplayUdfParams::Dump()>:
 8013694:	4770      	bx	lr
	...

08013698 <NetworkDisplay::ShowEmacStart()>:
 8013698:	4b01      	ldr	r3, [pc, #4]	; (80136a0 <NetworkDisplay::ShowEmacStart()+0x8>)
 801369a:	6818      	ldr	r0, [r3, #0]
 801369c:	f7ff bd18 	b.w	80130d0 <DisplayUdf::ShowEmacStart()>
 80136a0:	2000fdf0 	strdcs	pc, [r0], -r0

080136a4 <NetworkDisplay::ShowIp()>:
 80136a4:	4b01      	ldr	r3, [pc, #4]	; (80136ac <NetworkDisplay::ShowIp()+0x8>)
 80136a6:	6818      	ldr	r0, [r3, #0]
 80136a8:	f7ff bd22 	b.w	80130f0 <DisplayUdf::ShowIpAddress()>
 80136ac:	2000fdf0 	strdcs	pc, [r0], -r0

080136b0 <NetworkDisplay::ShowNetMask()>:
 80136b0:	4b01      	ldr	r3, [pc, #4]	; (80136b8 <NetworkDisplay::ShowNetMask()+0x8>)
 80136b2:	6818      	ldr	r0, [r3, #0]
 80136b4:	f7ff bd50 	b.w	8013158 <DisplayUdf::ShowNetmask()>
 80136b8:	2000fdf0 	strdcs	pc, [r0], -r0

080136bc <NetworkDisplay::ShowGatewayIp()>:
 80136bc:	4b01      	ldr	r3, [pc, #4]	; (80136c4 <NetworkDisplay::ShowGatewayIp()+0x8>)
 80136be:	6818      	ldr	r0, [r3, #0]
 80136c0:	f7ff bd68 	b.w	8013194 <DisplayUdf::ShowGatewayIp()>
 80136c4:	2000fdf0 	strdcs	pc, [r0], -r0

080136c8 <NetworkDisplay::ShowHostName()>:
 80136c8:	4b01      	ldr	r3, [pc, #4]	; (80136d0 <NetworkDisplay::ShowHostName()+0x8>)
 80136ca:	6818      	ldr	r0, [r3, #0]
 80136cc:	f7ff bd82 	b.w	80131d4 <DisplayUdf::ShowHostName()>
 80136d0:	2000fdf0 	strdcs	pc, [r0], -r0

080136d4 <NetworkDisplay::ShowShutdown()>:
 80136d4:	4b01      	ldr	r3, [pc, #4]	; (80136dc <NetworkDisplay::ShowShutdown()+0x8>)
 80136d6:	6818      	ldr	r0, [r3, #0]
 80136d8:	f7ff be0a 	b.w	80132f0 <DisplayUdf::ShowShutdown()>
 80136dc:	2000fdf0 	strdcs	pc, [r0], -r0

080136e0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80136e0:	4b01      	ldr	r3, [pc, #4]	; (80136e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 80136e2:	6818      	ldr	r0, [r3, #0]
 80136e4:	f7ff bdcc 	b.w	8013280 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80136e8:	2000fdf0 	strdcs	pc, [r0], -r0

080136ec <properties::convert_json_file(char*, unsigned short, bool)>:
 80136ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136f0:	7803      	ldrb	r3, [r0, #0]
 80136f2:	2b7b      	cmp	r3, #123	; 0x7b
 80136f4:	f040 80a4 	bne.w	8013840 <properties::convert_json_file(char*, unsigned short, bool)+0x154>
 80136f8:	b182      	cbz	r2, 801371c <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80136fa:	2401      	movs	r4, #1
 80136fc:	4606      	mov	r6, r0
 80136fe:	4623      	mov	r3, r4
 8013700:	2a00      	cmp	r2, #0
 8013702:	bf0c      	ite	eq
 8013704:	f04f 0c0a 	moveq.w	ip, #10
 8013708:	f04f 0c00 	movne.w	ip, #0
 801370c:	273d      	movs	r7, #61	; 0x3d
 801370e:	42a1      	cmp	r1, r4
 8013710:	d852      	bhi.n	80137b8 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8013712:	4618      	mov	r0, r3
 8013714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013718:	463c      	mov	r4, r7
 801371a:	e7f1      	b.n	8013700 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 801371c:	2323      	movs	r3, #35	; 0x23
 801371e:	f800 3b01 	strb.w	r3, [r0], #1
 8013722:	2701      	movs	r7, #1
 8013724:	4604      	mov	r4, r0
 8013726:	42b9      	cmp	r1, r7
 8013728:	d811      	bhi.n	801374e <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 801372a:	2301      	movs	r3, #1
 801372c:	4606      	mov	r6, r0
 801372e:	200a      	movs	r0, #10
 8013730:	f806 0b01 	strb.w	r0, [r6], #1
 8013734:	3301      	adds	r3, #1
 8013736:	4625      	mov	r5, r4
 8013738:	4628      	mov	r0, r5
 801373a:	3501      	adds	r5, #1
 801373c:	7804      	ldrb	r4, [r0, #0]
 801373e:	2c7b      	cmp	r4, #123	; 0x7b
 8013740:	d0ea      	beq.n	8013718 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8013742:	42b9      	cmp	r1, r7
 8013744:	f107 0401 	add.w	r4, r7, #1
 8013748:	d9da      	bls.n	8013700 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 801374a:	4627      	mov	r7, r4
 801374c:	e7f4      	b.n	8013738 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 801374e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013752:	2b22      	cmp	r3, #34	; 0x22
 8013754:	d119      	bne.n	801378a <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8013756:	46a4      	mov	ip, r4
 8013758:	4605      	mov	r5, r0
 801375a:	2601      	movs	r6, #1
 801375c:	f89c e000 	ldrb.w	lr, [ip]
 8013760:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8013764:	4664      	mov	r4, ip
 8013766:	4628      	mov	r0, r5
 8013768:	4633      	mov	r3, r6
 801376a:	f10c 0c01 	add.w	ip, ip, #1
 801376e:	f105 0501 	add.w	r5, r5, #1
 8013772:	f106 0601 	add.w	r6, r6, #1
 8013776:	d0d9      	beq.n	801372c <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8013778:	3701      	adds	r7, #1
 801377a:	42b9      	cmp	r1, r7
 801377c:	4664      	mov	r4, ip
 801377e:	f805 ec01 	strb.w	lr, [r5, #-1]
 8013782:	d8eb      	bhi.n	801375c <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8013784:	4633      	mov	r3, r6
 8013786:	4628      	mov	r0, r5
 8013788:	e7d0      	b.n	801372c <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 801378a:	3701      	adds	r7, #1
 801378c:	e7cb      	b.n	8013726 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801378e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8013792:	d111      	bne.n	80137b8 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8013794:	eba3 0800 	sub.w	r8, r3, r0
 8013798:	eb08 0300 	add.w	r3, r8, r0
 801379c:	4602      	mov	r2, r0
 801379e:	f810 eb01 	ldrb.w	lr, [r0], #1
 80137a2:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80137a6:	f104 0501 	add.w	r5, r4, #1
 80137aa:	d04c      	beq.n	8013846 <properties::convert_json_file(char*, unsigned short, bool)+0x15a>
 80137ac:	42a1      	cmp	r1, r4
 80137ae:	d911      	bls.n	80137d4 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 80137b0:	f806 eb01 	strb.w	lr, [r6], #1
 80137b4:	462c      	mov	r4, r5
 80137b6:	e7ef      	b.n	8013798 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 80137b8:	42a1      	cmp	r1, r4
 80137ba:	f890 e000 	ldrb.w	lr, [r0]
 80137be:	4605      	mov	r5, r0
 80137c0:	f104 0401 	add.w	r4, r4, #1
 80137c4:	f100 0001 	add.w	r0, r0, #1
 80137c8:	d8e1      	bhi.n	801378e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80137ca:	4628      	mov	r0, r5
 80137cc:	e7e2      	b.n	8013794 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 80137ce:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 80137d2:	d009      	beq.n	80137e8 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 80137d4:	42a9      	cmp	r1, r5
 80137d6:	f892 e000 	ldrb.w	lr, [r2]
 80137da:	4614      	mov	r4, r2
 80137dc:	f105 0501 	add.w	r5, r5, #1
 80137e0:	f102 0201 	add.w	r2, r2, #1
 80137e4:	d8f3      	bhi.n	80137ce <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 80137e6:	4622      	mov	r2, r4
 80137e8:	7814      	ldrb	r4, [r2, #0]
 80137ea:	2c2f      	cmp	r4, #47	; 0x2f
 80137ec:	4696      	mov	lr, r2
 80137ee:	4628      	mov	r0, r5
 80137f0:	f102 0201 	add.w	r2, r2, #1
 80137f4:	f105 0501 	add.w	r5, r5, #1
 80137f8:	d81a      	bhi.n	8013830 <properties::convert_json_file(char*, unsigned short, bool)+0x144>
 80137fa:	4281      	cmp	r1, r0
 80137fc:	d8f4      	bhi.n	80137e8 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 80137fe:	2c22      	cmp	r4, #34	; 0x22
 8013800:	bf08      	it	eq
 8013802:	4696      	moveq	lr, r2
 8013804:	4670      	mov	r0, lr
 8013806:	1c6c      	adds	r4, r5, #1
 8013808:	f810 2b01 	ldrb.w	r2, [r0], #1
 801380c:	2a22      	cmp	r2, #34	; 0x22
 801380e:	d011      	beq.n	8013834 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8013810:	2a2c      	cmp	r2, #44	; 0x2c
 8013812:	d00f      	beq.n	8013834 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8013814:	2a7d      	cmp	r2, #125	; 0x7d
 8013816:	d00d      	beq.n	8013834 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8013818:	42a9      	cmp	r1, r5
 801381a:	d90f      	bls.n	801383c <properties::convert_json_file(char*, unsigned short, bool)+0x150>
 801381c:	f1a2 0520 	sub.w	r5, r2, #32
 8013820:	2d5a      	cmp	r5, #90	; 0x5a
 8013822:	d803      	bhi.n	801382c <properties::convert_json_file(char*, unsigned short, bool)+0x140>
 8013824:	f806 2b01 	strb.w	r2, [r6], #1
 8013828:	3301      	adds	r3, #1
 801382a:	4686      	mov	lr, r0
 801382c:	4625      	mov	r5, r4
 801382e:	e7e9      	b.n	8013804 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8013830:	4605      	mov	r5, r0
 8013832:	e7e7      	b.n	8013804 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8013834:	f806 cb01 	strb.w	ip, [r6], #1
 8013838:	3301      	adds	r3, #1
 801383a:	462c      	mov	r4, r5
 801383c:	3401      	adds	r4, #1
 801383e:	e766      	b.n	801370e <properties::convert_json_file(char*, unsigned short, bool)+0x22>
 8013840:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013844:	e766      	b.n	8013714 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8013846:	f806 7b01 	strb.w	r7, [r6], #1
 801384a:	3301      	adds	r3, #1
 801384c:	4625      	mov	r5, r4
 801384e:	e7c1      	b.n	80137d4 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>

08013850 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8013850:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013854:	6002      	str	r2, [r0, #0]
 8013856:	4614      	mov	r4, r2
 8013858:	2200      	movs	r2, #0
 801385a:	80c2      	strh	r2, [r0, #6]
 801385c:	4a1c      	ldr	r2, [pc, #112]	; (80138d0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801385e:	8083      	strh	r3, [r0, #4]
 8013860:	7812      	ldrb	r2, [r2, #0]
 8013862:	f002 0201 	and.w	r2, r2, #1
 8013866:	4606      	mov	r6, r0
 8013868:	7202      	strb	r2, [r0, #8]
 801386a:	4608      	mov	r0, r1
 801386c:	4605      	mov	r5, r0
 801386e:	3001      	adds	r0, #1
 8013870:	782f      	ldrb	r7, [r5, #0]
 8013872:	2f00      	cmp	r7, #0
 8013874:	d1fa      	bne.n	801386c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8013876:	1a6d      	subs	r5, r5, r1
 8013878:	b29b      	uxth	r3, r3
 801387a:	b1d2      	cbz	r2, 80138b2 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 801387c:	1d2f      	adds	r7, r5, #4
 801387e:	429f      	cmp	r7, r3
 8013880:	d814      	bhi.n	80138ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8013882:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8013886:	f04f 0922 	mov.w	r9, #34	; 0x22
 801388a:	462a      	mov	r2, r5
 801388c:	f884 8000 	strb.w	r8, [r4]
 8013890:	f884 9001 	strb.w	r9, [r4, #1]
 8013894:	1ca0      	adds	r0, r4, #2
 8013896:	f000 ff0c 	bl	80146b2 <memmove>
 801389a:	1963      	adds	r3, r4, r5
 801389c:	223a      	movs	r2, #58	; 0x3a
 801389e:	f883 9002 	strb.w	r9, [r3, #2]
 80138a2:	70da      	strb	r2, [r3, #3]
 80138a4:	3505      	adds	r5, #5
 80138a6:	f804 8007 	strb.w	r8, [r4, r7]
 80138aa:	80f5      	strh	r5, [r6, #6]
 80138ac:	4630      	mov	r0, r6
 80138ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80138b2:	1caf      	adds	r7, r5, #2
 80138b4:	429f      	cmp	r7, r3
 80138b6:	d8f9      	bhi.n	80138ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80138b8:	4620      	mov	r0, r4
 80138ba:	2323      	movs	r3, #35	; 0x23
 80138bc:	f800 3b01 	strb.w	r3, [r0], #1
 80138c0:	462a      	mov	r2, r5
 80138c2:	442c      	add	r4, r5
 80138c4:	f000 fef5 	bl	80146b2 <memmove>
 80138c8:	230a      	movs	r3, #10
 80138ca:	7063      	strb	r3, [r4, #1]
 80138cc:	80f7      	strh	r7, [r6, #6]
 80138ce:	e7ed      	b.n	80138ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80138d0:	2000fdf4 	strdcs	pc, [r0], -r4

080138d4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80138d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138d6:	469c      	mov	ip, r3
 80138d8:	8885      	ldrh	r5, [r0, #4]
 80138da:	88c3      	ldrh	r3, [r0, #6]
 80138dc:	42ab      	cmp	r3, r5
 80138de:	b085      	sub	sp, #20
 80138e0:	d302      	bcc.n	80138e8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80138e2:	2000      	movs	r0, #0
 80138e4:	b005      	add	sp, #20
 80138e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138e8:	4604      	mov	r4, r0
 80138ea:	6800      	ldr	r0, [r0, #0]
 80138ec:	f894 e008 	ldrb.w	lr, [r4, #8]
 80138f0:	4418      	add	r0, r3
 80138f2:	1aed      	subs	r5, r5, r3
 80138f4:	b2d6      	uxtb	r6, r2
 80138f6:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80138fa:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80138fe:	0e12      	lsrs	r2, r2, #24
 8013900:	f1bc 0f00 	cmp.w	ip, #0
 8013904:	d109      	bne.n	801391a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8013906:	f1be 0f00 	cmp.w	lr, #0
 801390a:	d109      	bne.n	8013920 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 801390c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013910:	e9cd 6700 	strd	r6, r7, [sp]
 8013914:	4a0e      	ldr	r2, [pc, #56]	; (8013950 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8013916:	460b      	mov	r3, r1
 8013918:	e008      	b.n	801392c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801391a:	f1be 0f00 	cmp.w	lr, #0
 801391e:	d00f      	beq.n	8013940 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8013920:	e9cd 6700 	strd	r6, r7, [sp]
 8013924:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013928:	4a0a      	ldr	r2, [pc, #40]	; (8013954 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 801392a:	460b      	mov	r3, r1
 801392c:	4629      	mov	r1, r5
 801392e:	f7f6 fcf7 	bl	800a320 <snprintf>
 8013932:	4285      	cmp	r5, r0
 8013934:	dbd5      	blt.n	80138e2 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8013936:	88e3      	ldrh	r3, [r4, #6]
 8013938:	4403      	add	r3, r0
 801393a:	80e3      	strh	r3, [r4, #6]
 801393c:	2001      	movs	r0, #1
 801393e:	e7d1      	b.n	80138e4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8013940:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013944:	e9cd 6700 	strd	r6, r7, [sp]
 8013948:	4a03      	ldr	r2, [pc, #12]	; (8013958 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 801394a:	460b      	mov	r3, r1
 801394c:	e7ee      	b.n	801392c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801394e:	bf00      	nop
 8013950:	08019a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, ip, pc}
 8013954:	08019a05 	stmdaeq	r1, {r0, r2, r9, fp, ip, pc}
 8013958:	08019a1a 	stmdaeq	r1, {r1, r3, r4, r9, fp, ip, pc}

0801395c <PropertiesBuilder::AddComment(char const*)>:
 801395c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801395e:	7a06      	ldrb	r6, [r0, #8]
 8013960:	b996      	cbnz	r6, 8013988 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013962:	4604      	mov	r4, r0
 8013964:	88c0      	ldrh	r0, [r0, #6]
 8013966:	88a5      	ldrh	r5, [r4, #4]
 8013968:	42a8      	cmp	r0, r5
 801396a:	d20d      	bcs.n	8013988 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801396c:	6827      	ldr	r7, [r4, #0]
 801396e:	4a07      	ldr	r2, [pc, #28]	; (801398c <PropertiesBuilder::AddComment(char const*)+0x30>)
 8013970:	1a2d      	subs	r5, r5, r0
 8013972:	460b      	mov	r3, r1
 8013974:	4438      	add	r0, r7
 8013976:	4629      	mov	r1, r5
 8013978:	f7f6 fcd2 	bl	800a320 <snprintf>
 801397c:	4285      	cmp	r5, r0
 801397e:	bfa1      	itttt	ge
 8013980:	88e3      	ldrhge	r3, [r4, #6]
 8013982:	18c0      	addge	r0, r0, r3
 8013984:	80e0      	strhge	r0, [r4, #6]
 8013986:	2601      	movge	r6, #1
 8013988:	4630      	mov	r0, r6
 801398a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801398c:	08019a2a 	stmdaeq	r1, {r1, r3, r5, r9, fp, ip, pc}

08013990 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8013990:	e9c0 1200 	strd	r1, r2, [r0]
 8013994:	4770      	bx	lr

08013996 <ReadConfigFile::~ReadConfigFile()>:
 8013996:	4770      	bx	lr

08013998 <ReadConfigFile::Read(char const*, unsigned int)>:
 8013998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801399c:	4606      	mov	r6, r0
 801399e:	b0a0      	sub	sp, #128	; 0x80
 80139a0:	460d      	mov	r5, r1
 80139a2:	4614      	mov	r4, r2
 80139a4:	f04f 0800 	mov.w	r8, #0
 80139a8:	b33c      	cbz	r4, 80139fa <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80139aa:	466b      	mov	r3, sp
 80139ac:	462a      	mov	r2, r5
 80139ae:	4619      	mov	r1, r3
 80139b0:	e007      	b.n	80139c2 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 80139b2:	f803 7b01 	strb.w	r7, [r3], #1
 80139b6:	1a58      	subs	r0, r3, r1
 80139b8:	287f      	cmp	r0, #127	; 0x7f
 80139ba:	4615      	mov	r5, r2
 80139bc:	dc1d      	bgt.n	80139fa <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80139be:	3c01      	subs	r4, #1
 80139c0:	d00f      	beq.n	80139e2 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80139c2:	7817      	ldrb	r7, [r2, #0]
 80139c4:	2f0d      	cmp	r7, #13
 80139c6:	4610      	mov	r0, r2
 80139c8:	f102 0201 	add.w	r2, r2, #1
 80139cc:	d001      	beq.n	80139d2 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80139ce:	2f0a      	cmp	r7, #10
 80139d0:	d1ef      	bne.n	80139b2 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 80139d2:	4605      	mov	r5, r0
 80139d4:	b12c      	cbz	r4, 80139e2 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80139d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80139da:	2a0d      	cmp	r2, #13
 80139dc:	d00b      	beq.n	80139f6 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80139de:	2a0a      	cmp	r2, #10
 80139e0:	d009      	beq.n	80139f6 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80139e2:	f89d 2000 	ldrb.w	r2, [sp]
 80139e6:	2a60      	cmp	r2, #96	; 0x60
 80139e8:	d9de      	bls.n	80139a8 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80139ea:	f883 8000 	strb.w	r8, [r3]
 80139ee:	e9d6 3000 	ldrd	r3, r0, [r6]
 80139f2:	4798      	blx	r3
 80139f4:	e7d8      	b.n	80139a8 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80139f6:	3c01      	subs	r4, #1
 80139f8:	e7eb      	b.n	80139d2 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80139fa:	b020      	add	sp, #128	; 0x80
 80139fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013a00 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8013a00:	b570      	push	{r4, r5, r6, lr}
 8013a02:	4615      	mov	r5, r2
 8013a04:	461c      	mov	r4, r3
 8013a06:	f000 f916 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013a0a:	b180      	cbz	r0, 8013a2e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8013a0c:	2100      	movs	r1, #0
 8013a0e:	5c43      	ldrb	r3, [r0, r1]
 8013a10:	6826      	ldr	r6, [r4, #0]
 8013a12:	b28a      	uxth	r2, r1
 8013a14:	b143      	cbz	r3, 8013a28 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8013a16:	42b2      	cmp	r2, r6
 8013a18:	d303      	bcc.n	8013a22 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8013a1a:	2b0a      	cmp	r3, #10
 8013a1c:	d004      	beq.n	8013a28 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8013a1e:	2002      	movs	r0, #2
 8013a20:	e004      	b.n	8013a2c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8013a22:	546b      	strb	r3, [r5, r1]
 8013a24:	3101      	adds	r1, #1
 8013a26:	e7f2      	b.n	8013a0e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8013a28:	6022      	str	r2, [r4, #0]
 8013a2a:	2000      	movs	r0, #0
 8013a2c:	bd70      	pop	{r4, r5, r6, pc}
 8013a2e:	2001      	movs	r0, #1
 8013a30:	e7fc      	b.n	8013a2c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08013a32 <Sscan::Float(char const*, char const*, float&)>:
 8013a32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013a34:	4614      	mov	r4, r2
 8013a36:	f000 f8fe 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013a3a:	2800      	cmp	r0, #0
 8013a3c:	d052      	beq.n	8013ae4 <Sscan::Float(char const*, char const*, float&)+0xb2>
 8013a3e:	7803      	ldrb	r3, [r0, #0]
 8013a40:	2b2d      	cmp	r3, #45	; 0x2d
 8013a42:	bf04      	itt	eq
 8013a44:	3001      	addeq	r0, #1
 8013a46:	2601      	moveq	r6, #1
 8013a48:	7803      	ldrb	r3, [r0, #0]
 8013a4a:	bf18      	it	ne
 8013a4c:	2600      	movne	r6, #0
 8013a4e:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8013a52:	d101      	bne.n	8013a58 <Sscan::Float(char const*, char const*, float&)+0x26>
 8013a54:	2002      	movs	r0, #2
 8013a56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013a58:	2300      	movs	r3, #0
 8013a5a:	210a      	movs	r1, #10
 8013a5c:	7802      	ldrb	r2, [r0, #0]
 8013a5e:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8013a62:	2d09      	cmp	r5, #9
 8013a64:	d8f6      	bhi.n	8013a54 <Sscan::Float(char const*, char const*, float&)+0x22>
 8013a66:	fb01 2303 	mla	r3, r1, r3, r2
 8013a6a:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8013a6e:	2a2e      	cmp	r2, #46	; 0x2e
 8013a70:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 8013a74:	d002      	beq.n	8013a7c <Sscan::Float(char const*, char const*, float&)+0x4a>
 8013a76:	f012 0fdf 	tst.w	r2, #223	; 0xdf
 8013a7a:	d1ef      	bne.n	8013a5c <Sscan::Float(char const*, char const*, float&)+0x2a>
 8013a7c:	ee07 3a90 	vmov	s15, r3
 8013a80:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8013a84:	edc4 7a00 	vstr	s15, [r4]
 8013a88:	7803      	ldrb	r3, [r0, #0]
 8013a8a:	2b2e      	cmp	r3, #46	; 0x2e
 8013a8c:	d007      	beq.n	8013a9e <Sscan::Float(char const*, char const*, float&)+0x6c>
 8013a8e:	b90e      	cbnz	r6, 8013a94 <Sscan::Float(char const*, char const*, float&)+0x62>
 8013a90:	2000      	movs	r0, #0
 8013a92:	e7e0      	b.n	8013a56 <Sscan::Float(char const*, char const*, float&)+0x24>
 8013a94:	eef1 7a67 	vneg.f32	s15, s15
 8013a98:	edc4 7a00 	vstr	s15, [r4]
 8013a9c:	e7f8      	b.n	8013a90 <Sscan::Float(char const*, char const*, float&)+0x5e>
 8013a9e:	4603      	mov	r3, r0
 8013aa0:	2101      	movs	r1, #1
 8013aa2:	2500      	movs	r5, #0
 8013aa4:	270a      	movs	r7, #10
 8013aa6:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8013aaa:	f012 00df 	ands.w	r0, r2, #223	; 0xdf
 8013aae:	d112      	bne.n	8013ad6 <Sscan::Float(char const*, char const*, float&)+0xa4>
 8013ab0:	ee07 5a10 	vmov	s14, r5
 8013ab4:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8013ab8:	ee07 1a10 	vmov	s14, r1
 8013abc:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8013ac0:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8013ac4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013ac8:	2e00      	cmp	r6, #0
 8013aca:	d0e5      	beq.n	8013a98 <Sscan::Float(char const*, char const*, float&)+0x66>
 8013acc:	eef1 7a67 	vneg.f32	s15, s15
 8013ad0:	edc4 7a00 	vstr	s15, [r4]
 8013ad4:	e7bf      	b.n	8013a56 <Sscan::Float(char const*, char const*, float&)+0x24>
 8013ad6:	3a30      	subs	r2, #48	; 0x30
 8013ad8:	2a09      	cmp	r2, #9
 8013ada:	d8bb      	bhi.n	8013a54 <Sscan::Float(char const*, char const*, float&)+0x22>
 8013adc:	fb07 2505 	mla	r5, r7, r5, r2
 8013ae0:	4379      	muls	r1, r7
 8013ae2:	e7e0      	b.n	8013aa6 <Sscan::Float(char const*, char const*, float&)+0x74>
 8013ae4:	2001      	movs	r0, #1
 8013ae6:	e7b6      	b.n	8013a56 <Sscan::Float(char const*, char const*, float&)+0x24>

08013ae8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8013ae8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013aea:	4615      	mov	r5, r2
 8013aec:	f000 f8a3 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013af0:	bb58      	cbnz	r0, 8013b4a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8013af2:	2001      	movs	r0, #1
 8013af4:	e027      	b.n	8013b46 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8013af6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8013afa:	2b09      	cmp	r3, #9
 8013afc:	d822      	bhi.n	8013b44 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013afe:	fb0c 2101 	mla	r1, ip, r1, r2
 8013b02:	3930      	subs	r1, #48	; 0x30
 8013b04:	4603      	mov	r3, r0
 8013b06:	4618      	mov	r0, r3
 8013b08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013b0c:	2a2e      	cmp	r2, #46	; 0x2e
 8013b0e:	d115      	bne.n	8013b3c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8013b10:	29ff      	cmp	r1, #255	; 0xff
 8013b12:	d817      	bhi.n	8013b44 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013b14:	3401      	adds	r4, #1
 8013b16:	2c03      	cmp	r4, #3
 8013b18:	f806 1b01 	strb.w	r1, [r6], #1
 8013b1c:	d119      	bne.n	8013b52 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8013b1e:	1d1a      	adds	r2, r3, #4
 8013b20:	2400      	movs	r4, #0
 8013b22:	260a      	movs	r6, #10
 8013b24:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013b28:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8013b2c:	d115      	bne.n	8013b5a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8013b2e:	2cff      	cmp	r4, #255	; 0xff
 8013b30:	d808      	bhi.n	8013b44 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013b32:	f88d 4007 	strb.w	r4, [sp, #7]
 8013b36:	9b01      	ldr	r3, [sp, #4]
 8013b38:	602b      	str	r3, [r5, #0]
 8013b3a:	e004      	b.n	8013b46 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8013b3c:	2a00      	cmp	r2, #0
 8013b3e:	d0e7      	beq.n	8013b10 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8013b40:	42b8      	cmp	r0, r7
 8013b42:	d1d8      	bne.n	8013af6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8013b44:	2002      	movs	r0, #2
 8013b46:	b003      	add	sp, #12
 8013b48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013b4a:	ae01      	add	r6, sp, #4
 8013b4c:	2400      	movs	r4, #0
 8013b4e:	f04f 0c0a 	mov.w	ip, #10
 8013b52:	4603      	mov	r3, r0
 8013b54:	1d07      	adds	r7, r0, #4
 8013b56:	2100      	movs	r1, #0
 8013b58:	e7d5      	b.n	8013b06 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8013b5a:	4293      	cmp	r3, r2
 8013b5c:	d0f2      	beq.n	8013b44 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013b5e:	3930      	subs	r1, #48	; 0x30
 8013b60:	2909      	cmp	r1, #9
 8013b62:	d8ef      	bhi.n	8013b44 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013b64:	fb06 1404 	mla	r4, r6, r4, r1
 8013b68:	e7dc      	b.n	8013b24 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08013b6a <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8013b6a:	b538      	push	{r3, r4, r5, lr}
 8013b6c:	4614      	mov	r4, r2
 8013b6e:	f000 f862 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013b72:	b1a8      	cbz	r0, 8013ba0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x36>
 8013b74:	2100      	movs	r1, #0
 8013b76:	220a      	movs	r2, #10
 8013b78:	7803      	ldrb	r3, [r0, #0]
 8013b7a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8013b7e:	2d09      	cmp	r5, #9
 8013b80:	d810      	bhi.n	8013ba4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8013b82:	fb02 3101 	mla	r1, r2, r1, r3
 8013b86:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8013b8a:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8013b8e:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8013b92:	d1f1      	bne.n	8013b78 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8013b94:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8013b98:	d204      	bcs.n	8013ba4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8013b9a:	8021      	strh	r1, [r4, #0]
 8013b9c:	4618      	mov	r0, r3
 8013b9e:	bd38      	pop	{r3, r4, r5, pc}
 8013ba0:	2301      	movs	r3, #1
 8013ba2:	e7fb      	b.n	8013b9c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8013ba4:	2302      	movs	r3, #2
 8013ba6:	e7f9      	b.n	8013b9c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08013ba8 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8013ba8:	b570      	push	{r4, r5, r6, lr}
 8013baa:	4614      	mov	r4, r2
 8013bac:	f000 f843 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013bb0:	b1f8      	cbz	r0, 8013bf2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8013bb2:	2300      	movs	r3, #0
 8013bb4:	461a      	mov	r2, r3
 8013bb6:	260a      	movs	r6, #10
 8013bb8:	7805      	ldrb	r5, [r0, #0]
 8013bba:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
 8013bbe:	2909      	cmp	r1, #9
 8013bc0:	d819      	bhi.n	8013bf6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8013bc2:	fba3 3106 	umull	r3, r1, r3, r6
 8013bc6:	fb06 1102 	mla	r1, r6, r2, r1
 8013bca:	3b30      	subs	r3, #48	; 0x30
 8013bcc:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8013bd0:	18eb      	adds	r3, r5, r3
 8013bd2:	f141 0200 	adc.w	r2, r1, #0
 8013bd6:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 8013bda:	f011 01df 	ands.w	r1, r1, #223	; 0xdf
 8013bde:	d1eb      	bne.n	8013bb8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x10>
 8013be0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013be4:	4298      	cmp	r0, r3
 8013be6:	eb71 0202 	sbcs.w	r2, r1, r2
 8013bea:	d304      	bcc.n	8013bf6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8013bec:	6023      	str	r3, [r4, #0]
 8013bee:	4608      	mov	r0, r1
 8013bf0:	bd70      	pop	{r4, r5, r6, pc}
 8013bf2:	2101      	movs	r1, #1
 8013bf4:	e7fb      	b.n	8013bee <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>
 8013bf6:	2102      	movs	r1, #2
 8013bf8:	e7f9      	b.n	8013bee <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>

08013bfa <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8013bfa:	b538      	push	{r3, r4, r5, lr}
 8013bfc:	4614      	mov	r4, r2
 8013bfe:	f000 f81a 	bl	8013c36 <Sscan::checkName(char const*, char const*)>
 8013c02:	b1a0      	cbz	r0, 8013c2e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 8013c04:	2100      	movs	r1, #0
 8013c06:	220a      	movs	r2, #10
 8013c08:	7803      	ldrb	r3, [r0, #0]
 8013c0a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8013c0e:	2d09      	cmp	r5, #9
 8013c10:	d80f      	bhi.n	8013c32 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8013c12:	fb02 3101 	mla	r1, r2, r1, r3
 8013c16:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8013c1a:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8013c1e:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8013c22:	d1f1      	bne.n	8013c08 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8013c24:	29ff      	cmp	r1, #255	; 0xff
 8013c26:	d804      	bhi.n	8013c32 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8013c28:	7021      	strb	r1, [r4, #0]
 8013c2a:	4618      	mov	r0, r3
 8013c2c:	bd38      	pop	{r3, r4, r5, pc}
 8013c2e:	2301      	movs	r3, #1
 8013c30:	e7fb      	b.n	8013c2a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8013c32:	2302      	movs	r3, #2
 8013c34:	e7f9      	b.n	8013c2a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08013c36 <Sscan::checkName(char const*, char const*)>:
 8013c36:	b510      	push	{r4, lr}
 8013c38:	3901      	subs	r1, #1
 8013c3a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8013c3e:	4604      	mov	r4, r0
 8013c40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013c44:	b123      	cbz	r3, 8013c50 <Sscan::checkName(char const*, char const*)+0x1a>
 8013c46:	b10a      	cbz	r2, 8013c4c <Sscan::checkName(char const*, char const*)+0x16>
 8013c48:	4293      	cmp	r3, r2
 8013c4a:	d0f6      	beq.n	8013c3a <Sscan::checkName(char const*, char const*)+0x4>
 8013c4c:	2000      	movs	r0, #0
 8013c4e:	e006      	b.n	8013c5e <Sscan::checkName(char const*, char const*)+0x28>
 8013c50:	2a3d      	cmp	r2, #61	; 0x3d
 8013c52:	d1fb      	bne.n	8013c4c <Sscan::checkName(char const*, char const*)+0x16>
 8013c54:	7860      	ldrb	r0, [r4, #1]
 8013c56:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8013c5a:	d000      	beq.n	8013c5e <Sscan::checkName(char const*, char const*)+0x28>
 8013c5c:	1c60      	adds	r0, r4, #1
 8013c5e:	bd10      	pop	{r4, pc}

08013c60 <LightSet::GetDmxStartAddress()>:
 8013c60:	2001      	movs	r0, #1
 8013c62:	4770      	bx	lr

08013c64 <LightSet::GetDmxFootprint()>:
 8013c64:	f44f 7000 	mov.w	r0, #512	; 0x200
 8013c68:	4770      	bx	lr

08013c6a <LightSet::SetDmxStartAddress(unsigned short)>:
 8013c6a:	2000      	movs	r0, #0
 8013c6c:	4770      	bx	lr

08013c6e <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8013c6e:	2300      	movs	r3, #0
 8013c70:	2001      	movs	r0, #1
 8013c72:	7093      	strb	r3, [r2, #2]
 8013c74:	8010      	strh	r0, [r2, #0]
 8013c76:	4770      	bx	lr

08013c78 <Display::PrintInfo() [clone .isra.0]>:
 8013c78:	b910      	cbnz	r0, 8013c80 <Display::PrintInfo() [clone .isra.0]+0x8>
 8013c7a:	4803      	ldr	r0, [pc, #12]	; (8013c88 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8013c7c:	f000 bd51 	b.w	8014722 <puts>
 8013c80:	6803      	ldr	r3, [r0, #0]
 8013c82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013c84:	4718      	bx	r3
 8013c86:	bf00      	nop
 8013c88:	08019bcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, fp, ip, pc}

08013c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8013c8c:	b513      	push	{r0, r1, r4, lr}
 8013c8e:	4604      	mov	r4, r0
 8013c90:	0a13      	lsrs	r3, r2, #8
 8013c92:	7800      	ldrb	r0, [r0, #0]
 8013c94:	f88d 1004 	strb.w	r1, [sp, #4]
 8013c98:	f88d 3005 	strb.w	r3, [sp, #5]
 8013c9c:	f88d 2006 	strb.w	r2, [sp, #6]
 8013ca0:	f001 fd9a 	bl	80157d8 <gd32_i2c_set_address>
 8013ca4:	6860      	ldr	r0, [r4, #4]
 8013ca6:	f001 fd8f 	bl	80157c8 <gd32_i2c_set_baudrate>
 8013caa:	2103      	movs	r1, #3
 8013cac:	a801      	add	r0, sp, #4
 8013cae:	f001 fd99 	bl	80157e4 <gd32_i2c_write>
 8013cb2:	b002      	add	sp, #8
 8013cb4:	bd10      	pop	{r4, pc}

08013cb6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8013cb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013cb8:	460d      	mov	r5, r1
 8013cba:	4604      	mov	r4, r0
 8013cbc:	f001 fd8c 	bl	80157d8 <gd32_i2c_set_address>
 8013cc0:	4628      	mov	r0, r5
 8013cc2:	f001 fd81 	bl	80157c8 <gd32_i2c_set_baudrate>
 8013cc6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013cca:	2b07      	cmp	r3, #7
 8013ccc:	d902      	bls.n	8013cd4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8013cce:	3c50      	subs	r4, #80	; 0x50
 8013cd0:	2c0f      	cmp	r4, #15
 8013cd2:	d809      	bhi.n	8013ce8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8013cd4:	2101      	movs	r1, #1
 8013cd6:	f10d 0007 	add.w	r0, sp, #7
 8013cda:	f001 fde9 	bl	80158b0 <gd32_i2c_read>
 8013cde:	fab0 f080 	clz	r0, r0
 8013ce2:	0940      	lsrs	r0, r0, #5
 8013ce4:	b003      	add	sp, #12
 8013ce6:	bd30      	pop	{r4, r5, pc}
 8013ce8:	2100      	movs	r1, #0
 8013cea:	4608      	mov	r0, r1
 8013cec:	f001 fd7a 	bl	80157e4 <gd32_i2c_write>
 8013cf0:	e7f5      	b.n	8013cde <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08013cf2 <Display::Detect7Segment()>:
 8013cf2:	b513      	push	{r0, r1, r4, lr}
 8013cf4:	68c1      	ldr	r1, [r0, #12]
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	7a00      	ldrb	r0, [r0, #8]
 8013cfa:	f7ff ffdc 	bl	8013cb6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8013cfe:	7460      	strb	r0, [r4, #17]
 8013d00:	b170      	cbz	r0, 8013d20 <Display::Detect7Segment()+0x2e>
 8013d02:	2200      	movs	r2, #0
 8013d04:	f104 0008 	add.w	r0, r4, #8
 8013d08:	4611      	mov	r1, r2
 8013d0a:	9001      	str	r0, [sp, #4]
 8013d0c:	f7ff ffbe 	bl	8013c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8013d10:	7c63      	ldrb	r3, [r4, #17]
 8013d12:	9801      	ldr	r0, [sp, #4]
 8013d14:	b123      	cbz	r3, 8013d20 <Display::Detect7Segment()+0x2e>
 8013d16:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8013d1a:	2112      	movs	r1, #18
 8013d1c:	f7ff ffb6 	bl	8013c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8013d20:	b002      	add	sp, #8
 8013d22:	bd10      	pop	{r4, pc}

08013d24 <Display::Detect(display::Type)>:
 8013d24:	2902      	cmp	r1, #2
 8013d26:	b538      	push	{r3, r4, r5, lr}
 8013d28:	4604      	mov	r4, r0
 8013d2a:	d014      	beq.n	8013d56 <Display::Detect(display::Type)+0x32>
 8013d2c:	2904      	cmp	r1, #4
 8013d2e:	d01b      	beq.n	8013d68 <Display::Detect(display::Type)+0x44>
 8013d30:	69a0      	ldr	r0, [r4, #24]
 8013d32:	b168      	cbz	r0, 8013d50 <Display::Detect(display::Type)+0x2c>
 8013d34:	6803      	ldr	r3, [r0, #0]
 8013d36:	689b      	ldr	r3, [r3, #8]
 8013d38:	4798      	blx	r3
 8013d3a:	69a3      	ldr	r3, [r4, #24]
 8013d3c:	b9b0      	cbnz	r0, 8013d6c <Display::Detect(display::Type)+0x48>
 8013d3e:	b11b      	cbz	r3, 8013d48 <Display::Detect(display::Type)+0x24>
 8013d40:	681a      	ldr	r2, [r3, #0]
 8013d42:	4618      	mov	r0, r3
 8013d44:	6852      	ldr	r2, [r2, #4]
 8013d46:	4790      	blx	r2
 8013d48:	2300      	movs	r3, #0
 8013d4a:	61a3      	str	r3, [r4, #24]
 8013d4c:	2304      	movs	r3, #4
 8013d4e:	6023      	str	r3, [r4, #0]
 8013d50:	2300      	movs	r3, #0
 8013d52:	6163      	str	r3, [r4, #20]
 8013d54:	e011      	b.n	8013d7a <Display::Detect(display::Type)+0x56>
 8013d56:	2018      	movs	r0, #24
 8013d58:	f000 fbec 	bl	8014534 <operator new(unsigned int)>
 8013d5c:	2100      	movs	r1, #0
 8013d5e:	4605      	mov	r5, r0
 8013d60:	f000 f896 	bl	8013e90 <Ssd1306::Ssd1306(TOledPanel)>
 8013d64:	61a5      	str	r5, [r4, #24]
 8013d66:	e7e3      	b.n	8013d30 <Display::Detect(display::Type)+0xc>
 8013d68:	6001      	str	r1, [r0, #0]
 8013d6a:	e7e1      	b.n	8013d30 <Display::Detect(display::Type)+0xc>
 8013d6c:	681a      	ldr	r2, [r3, #0]
 8013d6e:	4618      	mov	r0, r3
 8013d70:	68d2      	ldr	r2, [r2, #12]
 8013d72:	4790      	blx	r2
 8013d74:	69a3      	ldr	r3, [r4, #24]
 8013d76:	2b00      	cmp	r3, #0
 8013d78:	d0ea      	beq.n	8013d50 <Display::Detect(display::Type)+0x2c>
 8013d7a:	bd38      	pop	{r3, r4, r5, pc}

08013d7c <Display::Display()>:
 8013d7c:	2304      	movs	r3, #4
 8013d7e:	b510      	push	{r4, lr}
 8013d80:	6003      	str	r3, [r0, #0]
 8013d82:	4b0f      	ldr	r3, [pc, #60]	; (8013dc0 <Display::Display()+0x44>)
 8013d84:	4a0f      	ldr	r2, [pc, #60]	; (8013dc4 <Display::Display()+0x48>)
 8013d86:	681b      	ldr	r3, [r3, #0]
 8013d88:	6043      	str	r3, [r0, #4]
 8013d8a:	2321      	movs	r3, #33	; 0x21
 8013d8c:	7203      	strb	r3, [r0, #8]
 8013d8e:	4b0e      	ldr	r3, [pc, #56]	; (8013dc8 <Display::Display()+0x4c>)
 8013d90:	60c3      	str	r3, [r0, #12]
 8013d92:	2300      	movs	r3, #0
 8013d94:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8013d98:	8203      	strh	r3, [r0, #16]
 8013d9a:	4b0c      	ldr	r3, [pc, #48]	; (8013dcc <Display::Display()+0x50>)
 8013d9c:	4604      	mov	r4, r0
 8013d9e:	2102      	movs	r1, #2
 8013da0:	6018      	str	r0, [r3, #0]
 8013da2:	f7ff ffbf 	bl	8013d24 <Display::Detect(display::Type)>
 8013da6:	4620      	mov	r0, r4
 8013da8:	f7ff ffa3 	bl	8013cf2 <Display::Detect7Segment()>
 8013dac:	69a3      	ldr	r3, [r4, #24]
 8013dae:	b10b      	cbz	r3, 8013db4 <Display::Display()+0x38>
 8013db0:	f7f5 fb0a 	bl	80093c8 <display::timeout::gpio_init()>
 8013db4:	69a0      	ldr	r0, [r4, #24]
 8013db6:	f7ff ff5f 	bl	8013c78 <Display::PrintInfo() [clone .isra.0]>
 8013dba:	4620      	mov	r0, r4
 8013dbc:	bd10      	pop	{r4, pc}
 8013dbe:	bf00      	nop
 8013dc0:	2000fefc 	strdcs	pc, [r0], -ip
 8013dc4:	000493e0 	andeq	r9, r4, r0, ror #7
 8013dc8:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013dcc:	2000fdf8 	strdcs	pc, [r0], -r8

08013dd0 <Ssd1306::~Ssd1306()>:
 8013dd0:	4770      	bx	lr

08013dd2 <Ssd1306::SetCursor(unsigned int)>:
 8013dd2:	4770      	bx	lr

08013dd4 <Ssd1306::PrintInfo()>:
 8013dd4:	b410      	push	{r4}
 8013dd6:	4906      	ldr	r1, [pc, #24]	; (8013df0 <Ssd1306::PrintInfo()+0x1c>)
 8013dd8:	7c44      	ldrb	r4, [r0, #17]
 8013dda:	7903      	ldrb	r3, [r0, #4]
 8013ddc:	7942      	ldrb	r2, [r0, #5]
 8013dde:	4805      	ldr	r0, [pc, #20]	; (8013df4 <Ssd1306::PrintInfo()+0x20>)
 8013de0:	2c00      	cmp	r4, #0
 8013de2:	bf08      	it	eq
 8013de4:	4601      	moveq	r1, r0
 8013de6:	4804      	ldr	r0, [pc, #16]	; (8013df8 <Ssd1306::PrintInfo()+0x24>)
 8013de8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013dec:	f7f6 ba70 	b.w	800a2d0 <printf>
 8013df0:	08019bde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, fp, ip, pc}
 8013df4:	08019be5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, fp, ip, pc}
 8013df8:	08019bed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, fp, ip, pc}

08013dfc <Ssd1306::~Ssd1306()>:
 8013dfc:	b510      	push	{r4, lr}
 8013dfe:	4604      	mov	r4, r0
 8013e00:	f000 fb94 	bl	801452c <operator delete(void*)>
 8013e04:	4620      	mov	r0, r4
 8013e06:	bd10      	pop	{r4, pc}

08013e08 <Ssd1306::PutChar(int)>:
 8013e08:	b510      	push	{r4, lr}
 8013e0a:	3920      	subs	r1, #32
 8013e0c:	295f      	cmp	r1, #95	; 0x5f
 8013e0e:	f100 0008 	add.w	r0, r0, #8
 8013e12:	bf94      	ite	ls
 8013e14:	460c      	movls	r4, r1
 8013e16:	2400      	movhi	r4, #0
 8013e18:	f7fc ff5c 	bl	8010cd4 <HAL_I2C::Setup()>
 8013e1c:	4804      	ldr	r0, [pc, #16]	; (8013e30 <Ssd1306::PutChar(int)+0x28>)
 8013e1e:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013e22:	4420      	add	r0, r4
 8013e24:	2107      	movs	r1, #7
 8013e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e2a:	f001 bcdb 	b.w	80157e4 <gd32_i2c_write>
 8013e2e:	bf00      	nop
 8013e30:	08019c00 	stmdaeq	r1, {sl, fp, ip, pc}

08013e34 <Ssd1306::PutString(char const*)>:
 8013e34:	b538      	push	{r3, r4, r5, lr}
 8013e36:	4605      	mov	r5, r0
 8013e38:	1e4c      	subs	r4, r1, #1
 8013e3a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8013e3e:	b901      	cbnz	r1, 8013e42 <Ssd1306::PutString(char const*)+0xe>
 8013e40:	bd38      	pop	{r3, r4, r5, pc}
 8013e42:	4628      	mov	r0, r5
 8013e44:	f7ff ffe0 	bl	8013e08 <Ssd1306::PutChar(int)>
 8013e48:	e7f7      	b.n	8013e3a <Ssd1306::PutString(char const*)+0x6>

08013e4a <Ssd1306::Text(char const*, unsigned int)>:
 8013e4a:	b570      	push	{r4, r5, r6, lr}
 8013e4c:	7903      	ldrb	r3, [r0, #4]
 8013e4e:	4605      	mov	r5, r0
 8013e50:	460c      	mov	r4, r1
 8013e52:	4293      	cmp	r3, r2
 8013e54:	bf94      	ite	ls
 8013e56:	18ce      	addls	r6, r1, r3
 8013e58:	188e      	addhi	r6, r1, r2
 8013e5a:	42b4      	cmp	r4, r6
 8013e5c:	d100      	bne.n	8013e60 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8013e5e:	bd70      	pop	{r4, r5, r6, pc}
 8013e60:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013e64:	4628      	mov	r0, r5
 8013e66:	f7ff ffcf 	bl	8013e08 <Ssd1306::PutChar(int)>
 8013e6a:	e7f6      	b.n	8013e5a <Ssd1306::Text(char const*, unsigned int)+0x10>

08013e6c <Ssd1306::InitMembers()>:
 8013e6c:	7c03      	ldrb	r3, [r0, #16]
 8013e6e:	b14b      	cbz	r3, 8013e84 <Ssd1306::InitMembers()+0x18>
 8013e70:	3b01      	subs	r3, #1
 8013e72:	2b01      	cmp	r3, #1
 8013e74:	d909      	bls.n	8013e8a <Ssd1306::InitMembers()+0x1e>
 8013e76:	2308      	movs	r3, #8
 8013e78:	2204      	movs	r2, #4
 8013e7a:	2115      	movs	r1, #21
 8013e7c:	7101      	strb	r1, [r0, #4]
 8013e7e:	7143      	strb	r3, [r0, #5]
 8013e80:	6142      	str	r2, [r0, #20]
 8013e82:	4770      	bx	lr
 8013e84:	2308      	movs	r3, #8
 8013e86:	461a      	mov	r2, r3
 8013e88:	e7f7      	b.n	8013e7a <Ssd1306::InitMembers()+0xe>
 8013e8a:	2304      	movs	r3, #4
 8013e8c:	e7fb      	b.n	8013e86 <Ssd1306::InitMembers()+0x1a>
	...

08013e90 <Ssd1306::Ssd1306(TOledPanel)>:
 8013e90:	4a08      	ldr	r2, [pc, #32]	; (8013eb4 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8013e92:	6002      	str	r2, [r0, #0]
 8013e94:	227f      	movs	r2, #127	; 0x7f
 8013e96:	b508      	push	{r3, lr}
 8013e98:	80c2      	strh	r2, [r0, #6]
 8013e9a:	223c      	movs	r2, #60	; 0x3c
 8013e9c:	7202      	strb	r2, [r0, #8]
 8013e9e:	4a06      	ldr	r2, [pc, #24]	; (8013eb8 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8013ea0:	60c2      	str	r2, [r0, #12]
 8013ea2:	2200      	movs	r2, #0
 8013ea4:	7442      	strb	r2, [r0, #17]
 8013ea6:	4a05      	ldr	r2, [pc, #20]	; (8013ebc <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8013ea8:	7401      	strb	r1, [r0, #16]
 8013eaa:	6010      	str	r0, [r2, #0]
 8013eac:	f7ff ffde 	bl	8013e6c <Ssd1306::InitMembers()>
 8013eb0:	bd08      	pop	{r3, pc}
 8013eb2:	bf00      	nop
 8013eb4:	08019ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, ip, pc}
 8013eb8:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013ebc:	2000fe84 	andcs	pc, r0, r4, lsl #29

08013ec0 <Ssd1306::SendCommand(unsigned char)>:
 8013ec0:	b507      	push	{r0, r1, r2, lr}
 8013ec2:	2300      	movs	r3, #0
 8013ec4:	3008      	adds	r0, #8
 8013ec6:	f88d 3004 	strb.w	r3, [sp, #4]
 8013eca:	f88d 1005 	strb.w	r1, [sp, #5]
 8013ece:	f7fc ff01 	bl	8010cd4 <HAL_I2C::Setup()>
 8013ed2:	2102      	movs	r1, #2
 8013ed4:	a801      	add	r0, sp, #4
 8013ed6:	f001 fc85 	bl	80157e4 <gd32_i2c_write>
 8013eda:	b003      	add	sp, #12
 8013edc:	f85d fb04 	ldr.w	pc, [sp], #4

08013ee0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8013ee0:	2914      	cmp	r1, #20
 8013ee2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013ee4:	4615      	mov	r5, r2
 8013ee6:	d81d      	bhi.n	8013f24 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8013ee8:	7943      	ldrb	r3, [r0, #5]
 8013eea:	4293      	cmp	r3, r2
 8013eec:	d91a      	bls.n	8013f24 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8013eee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013ef2:	7c43      	ldrb	r3, [r0, #17]
 8013ef4:	004c      	lsls	r4, r1, #1
 8013ef6:	b2e4      	uxtb	r4, r4
 8013ef8:	b10b      	cbz	r3, 8013efe <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 8013efa:	3404      	adds	r4, #4
 8013efc:	b2e4      	uxtb	r4, r4
 8013efe:	f004 010e 	and.w	r1, r4, #14
 8013f02:	9001      	str	r0, [sp, #4]
 8013f04:	f7ff ffdc 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013f08:	0921      	lsrs	r1, r4, #4
 8013f0a:	9801      	ldr	r0, [sp, #4]
 8013f0c:	f041 0110 	orr.w	r1, r1, #16
 8013f10:	f7ff ffd6 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013f14:	9801      	ldr	r0, [sp, #4]
 8013f16:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 8013f1a:	b003      	add	sp, #12
 8013f1c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013f20:	f7ff bfce 	b.w	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013f24:	b003      	add	sp, #12
 8013f26:	bd30      	pop	{r4, r5, pc}

08013f28 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8013f28:	b5e0      	push	{r5, r6, r7, lr}
 8013f2a:	461f      	mov	r7, r3
 8013f2c:	7943      	ldrb	r3, [r0, #5]
 8013f2e:	428b      	cmp	r3, r1
 8013f30:	4605      	mov	r5, r0
 8013f32:	4616      	mov	r6, r2
 8013f34:	d30b      	bcc.n	8013f4e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8013f36:	1e4a      	subs	r2, r1, #1
 8013f38:	b2d2      	uxtb	r2, r2
 8013f3a:	2100      	movs	r1, #0
 8013f3c:	f7ff ffd0 	bl	8013ee0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013f40:	463a      	mov	r2, r7
 8013f42:	4631      	mov	r1, r6
 8013f44:	4628      	mov	r0, r5
 8013f46:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8013f4a:	f7ff bf7e 	b.w	8013e4a <Ssd1306::Text(char const*, unsigned int)>
 8013f4e:	bde0      	pop	{r5, r6, r7, pc}

08013f50 <Ssd1306::ClearLine(unsigned char)>:
 8013f50:	b513      	push	{r0, r1, r4, lr}
 8013f52:	7943      	ldrb	r3, [r0, #5]
 8013f54:	428b      	cmp	r3, r1
 8013f56:	4604      	mov	r4, r0
 8013f58:	d315      	bcc.n	8013f86 <Ssd1306::ClearLine(unsigned char)+0x36>
 8013f5a:	1e4a      	subs	r2, r1, #1
 8013f5c:	b2d2      	uxtb	r2, r2
 8013f5e:	2100      	movs	r1, #0
 8013f60:	9201      	str	r2, [sp, #4]
 8013f62:	f7ff ffbd 	bl	8013ee0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013f66:	f104 0008 	add.w	r0, r4, #8
 8013f6a:	f7fc feb3 	bl	8010cd4 <HAL_I2C::Setup()>
 8013f6e:	2181      	movs	r1, #129	; 0x81
 8013f70:	4806      	ldr	r0, [pc, #24]	; (8013f8c <Ssd1306::ClearLine(unsigned char)+0x3c>)
 8013f72:	f001 fc37 	bl	80157e4 <gd32_i2c_write>
 8013f76:	9a01      	ldr	r2, [sp, #4]
 8013f78:	2100      	movs	r1, #0
 8013f7a:	4620      	mov	r0, r4
 8013f7c:	b002      	add	sp, #8
 8013f7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f82:	f7ff bfad 	b.w	8013ee0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013f86:	b002      	add	sp, #8
 8013f88:	bd10      	pop	{r4, pc}
 8013f8a:	bf00      	nop
 8013f8c:	2000fdfc 	strdcs	pc, [r0], -ip

08013f90 <Ssd1306::SetSleep(bool)>:
 8013f90:	b111      	cbz	r1, 8013f98 <Ssd1306::SetSleep(bool)+0x8>
 8013f92:	21ae      	movs	r1, #174	; 0xae
 8013f94:	f7ff bf94 	b.w	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013f98:	21af      	movs	r1, #175	; 0xaf
 8013f9a:	e7fb      	b.n	8013f94 <Ssd1306::SetSleep(bool)+0x4>

08013f9c <Ssd1306::SetContrast(unsigned char)>:
 8013f9c:	b538      	push	{r3, r4, r5, lr}
 8013f9e:	4604      	mov	r4, r0
 8013fa0:	460d      	mov	r5, r1
 8013fa2:	7181      	strb	r1, [r0, #6]
 8013fa4:	2181      	movs	r1, #129	; 0x81
 8013fa6:	f7ff ff8b 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013faa:	4629      	mov	r1, r5
 8013fac:	4620      	mov	r0, r4
 8013fae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013fb2:	f7ff bf85 	b.w	8013ec0 <Ssd1306::SendCommand(unsigned char)>

08013fb6 <Ssd1306::SetFlipVertically(bool)>:
 8013fb6:	b510      	push	{r4, lr}
 8013fb8:	4604      	mov	r4, r0
 8013fba:	71c1      	strb	r1, [r0, #7]
 8013fbc:	b141      	cbz	r1, 8013fd0 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8013fbe:	21c0      	movs	r1, #192	; 0xc0
 8013fc0:	f7ff ff7e 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013fc4:	21a0      	movs	r1, #160	; 0xa0
 8013fc6:	4620      	mov	r0, r4
 8013fc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013fcc:	f7ff bf78 	b.w	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013fd0:	21c8      	movs	r1, #200	; 0xc8
 8013fd2:	f7ff ff75 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013fd6:	21a1      	movs	r1, #161	; 0xa1
 8013fd8:	e7f5      	b.n	8013fc6 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08013fdc <Ssd1306::CheckSH1106()>:
 8013fdc:	b530      	push	{r4, r5, lr}
 8013fde:	2100      	movs	r1, #0
 8013fe0:	b087      	sub	sp, #28
 8013fe2:	4604      	mov	r4, r0
 8013fe4:	f7ff ff6c 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013fe8:	2190      	movs	r1, #144	; 0x90
 8013fea:	4620      	mov	r0, r4
 8013fec:	f7ff ff68 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013ff0:	21b0      	movs	r1, #176	; 0xb0
 8013ff2:	4620      	mov	r0, r4
 8013ff4:	f7ff ff64 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8013ff8:	4b22      	ldr	r3, [pc, #136]	; (8014084 <Ssd1306::CheckSH1106()+0xa8>)
 8013ffa:	f104 0508 	add.w	r5, r4, #8
 8013ffe:	6818      	ldr	r0, [r3, #0]
 8014000:	9002      	str	r0, [sp, #8]
 8014002:	791b      	ldrb	r3, [r3, #4]
 8014004:	f88d 300c 	strb.w	r3, [sp, #12]
 8014008:	4628      	mov	r0, r5
 801400a:	f7fc fe63 	bl	8010cd4 <HAL_I2C::Setup()>
 801400e:	2105      	movs	r1, #5
 8014010:	a802      	add	r0, sp, #8
 8014012:	f001 fbe7 	bl	80157e4 <gd32_i2c_write>
 8014016:	2100      	movs	r1, #0
 8014018:	4620      	mov	r0, r4
 801401a:	f7ff ff51 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 801401e:	2190      	movs	r1, #144	; 0x90
 8014020:	4620      	mov	r0, r4
 8014022:	f7ff ff4d 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8014026:	21b0      	movs	r1, #176	; 0xb0
 8014028:	4620      	mov	r0, r4
 801402a:	f7ff ff49 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 801402e:	2300      	movs	r3, #0
 8014030:	9304      	str	r3, [sp, #16]
 8014032:	f88d 3014 	strb.w	r3, [sp, #20]
 8014036:	4628      	mov	r0, r5
 8014038:	2340      	movs	r3, #64	; 0x40
 801403a:	f88d 3007 	strb.w	r3, [sp, #7]
 801403e:	f7fc fe49 	bl	8010cd4 <HAL_I2C::Setup()>
 8014042:	2101      	movs	r1, #1
 8014044:	f10d 0007 	add.w	r0, sp, #7
 8014048:	f001 fbcc 	bl	80157e4 <gd32_i2c_write>
 801404c:	4628      	mov	r0, r5
 801404e:	f7fc fe41 	bl	8010cd4 <HAL_I2C::Setup()>
 8014052:	2105      	movs	r1, #5
 8014054:	a804      	add	r0, sp, #16
 8014056:	f001 fc2b 	bl	80158b0 <gd32_i2c_read>
 801405a:	aa02      	add	r2, sp, #8
 801405c:	a904      	add	r1, sp, #16
 801405e:	2004      	movs	r0, #4
 8014060:	3801      	subs	r0, #1
 8014062:	d201      	bcs.n	8014068 <Ssd1306::CheckSH1106()+0x8c>
 8014064:	2300      	movs	r3, #0
 8014066:	e006      	b.n	8014076 <Ssd1306::CheckSH1106()+0x9a>
 8014068:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 801406c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8014070:	42ab      	cmp	r3, r5
 8014072:	d0f5      	beq.n	8014060 <Ssd1306::CheckSH1106()+0x84>
 8014074:	1b5b      	subs	r3, r3, r5
 8014076:	fab3 f383 	clz	r3, r3
 801407a:	095b      	lsrs	r3, r3, #5
 801407c:	7463      	strb	r3, [r4, #17]
 801407e:	b007      	add	sp, #28
 8014080:	bd30      	pop	{r4, r5, pc}
 8014082:	bf00      	nop
 8014084:	08019bf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, fp, ip, pc}

08014088 <Ssd1306::Cls()>:
 8014088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801408c:	7c45      	ldrb	r5, [r0, #17]
 801408e:	00ad      	lsls	r5, r5, #2
 8014090:	b2ed      	uxtb	r5, r5
 8014092:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8014096:	4604      	mov	r4, r0
 8014098:	2600      	movs	r6, #0
 801409a:	f045 0810 	orr.w	r8, r5, #16
 801409e:	b2ff      	uxtb	r7, r7
 80140a0:	6963      	ldr	r3, [r4, #20]
 80140a2:	42b3      	cmp	r3, r6
 80140a4:	4629      	mov	r1, r5
 80140a6:	4620      	mov	r0, r4
 80140a8:	d80b      	bhi.n	80140c2 <Ssd1306::Cls()+0x3a>
 80140aa:	f7ff ff09 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140ae:	4641      	mov	r1, r8
 80140b0:	4620      	mov	r0, r4
 80140b2:	f7ff ff05 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140b6:	4620      	mov	r0, r4
 80140b8:	21b0      	movs	r1, #176	; 0xb0
 80140ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80140be:	f7ff beff 	b.w	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140c2:	f7ff fefd 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140c6:	4641      	mov	r1, r8
 80140c8:	4620      	mov	r0, r4
 80140ca:	f7ff fef9 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140ce:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80140d2:	b2c9      	uxtb	r1, r1
 80140d4:	4620      	mov	r0, r4
 80140d6:	f7ff fef3 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80140da:	7c23      	ldrb	r3, [r4, #16]
 80140dc:	b123      	cbz	r3, 80140e8 <Ssd1306::Cls()+0x60>
 80140de:	3b01      	subs	r3, #1
 80140e0:	2b01      	cmp	r3, #1
 80140e2:	d901      	bls.n	80140e8 <Ssd1306::Cls()+0x60>
 80140e4:	3601      	adds	r6, #1
 80140e6:	e7db      	b.n	80140a0 <Ssd1306::Cls()+0x18>
 80140e8:	f104 0008 	add.w	r0, r4, #8
 80140ec:	f7fc fdf2 	bl	8010cd4 <HAL_I2C::Setup()>
 80140f0:	4639      	mov	r1, r7
 80140f2:	4802      	ldr	r0, [pc, #8]	; (80140fc <Ssd1306::Cls()+0x74>)
 80140f4:	f001 fb76 	bl	80157e4 <gd32_i2c_write>
 80140f8:	e7f4      	b.n	80140e4 <Ssd1306::Cls()+0x5c>
 80140fa:	bf00      	nop
 80140fc:	2000fdfc 	strdcs	pc, [r0], -ip

08014100 <Ssd1306::Start()>:
 8014100:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014102:	7a04      	ldrb	r4, [r0, #8]
 8014104:	68c6      	ldr	r6, [r0, #12]
 8014106:	4605      	mov	r5, r0
 8014108:	4620      	mov	r0, r4
 801410a:	f001 fb65 	bl	80157d8 <gd32_i2c_set_address>
 801410e:	4630      	mov	r0, r6
 8014110:	f001 fb5a 	bl	80157c8 <gd32_i2c_set_baudrate>
 8014114:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8014118:	2b07      	cmp	r3, #7
 801411a:	d902      	bls.n	8014122 <Ssd1306::Start()+0x22>
 801411c:	3c50      	subs	r4, #80	; 0x50
 801411e:	2c0f      	cmp	r4, #15
 8014120:	d80f      	bhi.n	8014142 <Ssd1306::Start()+0x42>
 8014122:	2101      	movs	r1, #1
 8014124:	f10d 0007 	add.w	r0, sp, #7
 8014128:	f001 fbc2 	bl	80158b0 <gd32_i2c_read>
 801412c:	fab0 f480 	clz	r4, r0
 8014130:	0964      	lsrs	r4, r4, #5
 8014132:	b35c      	cbz	r4, 801418c <Ssd1306::Start()+0x8c>
 8014134:	7c2e      	ldrb	r6, [r5, #16]
 8014136:	b14e      	cbz	r6, 801414c <Ssd1306::Start()+0x4c>
 8014138:	3e01      	subs	r6, #1
 801413a:	2e01      	cmp	r6, #1
 801413c:	d929      	bls.n	8014192 <Ssd1306::Start()+0x92>
 801413e:	2400      	movs	r4, #0
 8014140:	e024      	b.n	801418c <Ssd1306::Start()+0x8c>
 8014142:	2100      	movs	r1, #0
 8014144:	4608      	mov	r0, r1
 8014146:	f001 fb4d 	bl	80157e4 <gd32_i2c_write>
 801414a:	e7ef      	b.n	801412c <Ssd1306::Start()+0x2c>
 801414c:	4f16      	ldr	r7, [pc, #88]	; (80141a8 <Ssd1306::Start()+0xa8>)
 801414e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8014152:	4628      	mov	r0, r5
 8014154:	3601      	adds	r6, #1
 8014156:	f7ff feb3 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 801415a:	2e18      	cmp	r6, #24
 801415c:	d1f7      	bne.n	801414e <Ssd1306::Start()+0x4e>
 801415e:	4a13      	ldr	r2, [pc, #76]	; (80141ac <Ssd1306::Start()+0xac>)
 8014160:	2300      	movs	r3, #0
 8014162:	4611      	mov	r1, r2
 8014164:	4618      	mov	r0, r3
 8014166:	3301      	adds	r3, #1
 8014168:	2b86      	cmp	r3, #134	; 0x86
 801416a:	f802 0b01 	strb.w	r0, [r2], #1
 801416e:	d1fa      	bne.n	8014166 <Ssd1306::Start()+0x66>
 8014170:	2340      	movs	r3, #64	; 0x40
 8014172:	700b      	strb	r3, [r1, #0]
 8014174:	4628      	mov	r0, r5
 8014176:	f7ff ff31 	bl	8013fdc <Ssd1306::CheckSH1106()>
 801417a:	4628      	mov	r0, r5
 801417c:	f7ff ff84 	bl	8014088 <Ssd1306::Cls()>
 8014180:	21af      	movs	r1, #175	; 0xaf
 8014182:	4628      	mov	r0, r5
 8014184:	f7ff fe9c 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 8014188:	2301      	movs	r3, #1
 801418a:	71eb      	strb	r3, [r5, #7]
 801418c:	4620      	mov	r0, r4
 801418e:	b003      	add	sp, #12
 8014190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014192:	4f07      	ldr	r7, [pc, #28]	; (80141b0 <Ssd1306::Start()+0xb0>)
 8014194:	2600      	movs	r6, #0
 8014196:	f817 1b01 	ldrb.w	r1, [r7], #1
 801419a:	4628      	mov	r0, r5
 801419c:	3601      	adds	r6, #1
 801419e:	f7ff fe8f 	bl	8013ec0 <Ssd1306::SendCommand(unsigned char)>
 80141a2:	2e18      	cmp	r6, #24
 80141a4:	d1f7      	bne.n	8014196 <Ssd1306::Start()+0x96>
 80141a6:	e7da      	b.n	801415e <Ssd1306::Start()+0x5e>
 80141a8:	08019eb8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, fp, ip, pc}
 80141ac:	2000fdfc 	strdcs	pc, [r0], -ip
 80141b0:	08019ea0 	stmdaeq	r1, {r5, r7, r9, sl, fp, ip, pc}

080141b4 <console_putc>:
 80141b4:	f000 bbb8 	b.w	8014928 <uart0_putc>

080141b8 <console_puts>:
 80141b8:	f000 bbd0 	b.w	801495c <uart0_puts>

080141bc <console_set_fg_color>:
 80141bc:	2807      	cmp	r0, #7
 80141be:	d810      	bhi.n	80141e2 <console_set_fg_color+0x26>
 80141c0:	e8df f000 	tbb	[pc, r0]
 80141c4:	0b090704 	bleq	8255ddc <__exidx_end+0x23bdd0>
 80141c8:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8014194 <Ssd1306::Start()+0x94>
 80141cc:	4806      	ldr	r0, [pc, #24]	; (80141e8 <console_set_fg_color+0x2c>)
 80141ce:	f000 bbc5 	b.w	801495c <uart0_puts>
 80141d2:	4806      	ldr	r0, [pc, #24]	; (80141ec <console_set_fg_color+0x30>)
 80141d4:	e7fb      	b.n	80141ce <console_set_fg_color+0x12>
 80141d6:	4806      	ldr	r0, [pc, #24]	; (80141f0 <console_set_fg_color+0x34>)
 80141d8:	e7f9      	b.n	80141ce <console_set_fg_color+0x12>
 80141da:	4806      	ldr	r0, [pc, #24]	; (80141f4 <console_set_fg_color+0x38>)
 80141dc:	e7f7      	b.n	80141ce <console_set_fg_color+0x12>
 80141de:	4806      	ldr	r0, [pc, #24]	; (80141f8 <console_set_fg_color+0x3c>)
 80141e0:	e7f5      	b.n	80141ce <console_set_fg_color+0x12>
 80141e2:	4806      	ldr	r0, [pc, #24]	; (80141fc <console_set_fg_color+0x40>)
 80141e4:	e7f3      	b.n	80141ce <console_set_fg_color+0x12>
 80141e6:	bf00      	nop
 80141e8:	08019f16 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, fp, ip, pc}
 80141ec:	08019f1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, fp, ip, pc}
 80141f0:	08019f22 	stmdaeq	r1, {r1, r5, r8, r9, sl, fp, ip, pc}
 80141f4:	08019f28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, ip, pc}
 80141f8:	08016c51 	stmdaeq	r1, {r0, r4, r6, sl, fp, sp, lr}
 80141fc:	08019f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, ip, pc}

08014200 <console_error>:
 8014200:	b510      	push	{r4, lr}
 8014202:	4604      	mov	r4, r0
 8014204:	4805      	ldr	r0, [pc, #20]	; (801421c <console_error+0x1c>)
 8014206:	f000 fba9 	bl	801495c <uart0_puts>
 801420a:	4620      	mov	r0, r4
 801420c:	f000 fba6 	bl	801495c <uart0_puts>
 8014210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014214:	4802      	ldr	r0, [pc, #8]	; (8014220 <console_error+0x20>)
 8014216:	f000 bba1 	b.w	801495c <uart0_puts>
 801421a:	bf00      	nop
 801421c:	08019f1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, fp, ip, pc}
 8014220:	08016c51 	stmdaeq	r1, {r0, r4, r6, sl, fp, sp, lr}

08014224 <console_status>:
 8014224:	b510      	push	{r4, lr}
 8014226:	b280      	uxth	r0, r0
 8014228:	460c      	mov	r4, r1
 801422a:	f7ff ffc7 	bl	80141bc <console_set_fg_color>
 801422e:	4807      	ldr	r0, [pc, #28]	; (801424c <console_status+0x28>)
 8014230:	f000 fb94 	bl	801495c <uart0_puts>
 8014234:	4620      	mov	r0, r4
 8014236:	f000 fb91 	bl	801495c <uart0_puts>
 801423a:	200a      	movs	r0, #10
 801423c:	f000 fb74 	bl	8014928 <uart0_putc>
 8014240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014244:	4802      	ldr	r0, [pc, #8]	; (8014250 <console_status+0x2c>)
 8014246:	f000 bb89 	b.w	801495c <uart0_puts>
 801424a:	bf00      	nop
 801424c:	08019f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip, pc}
 8014250:	08016c51 	stmdaeq	r1, {r0, r4, r6, sl, fp, sp, lr}

08014254 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8014254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014258:	4d15      	ldr	r5, [pc, #84]	; (80142b0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801425a:	461e      	mov	r6, r3
 801425c:	4b15      	ldr	r3, [pc, #84]	; (80142b4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801425e:	b086      	sub	sp, #24
 8014260:	6018      	str	r0, [r3, #0]
 8014262:	4604      	mov	r4, r0
 8014264:	4617      	mov	r7, r2
 8014266:	f105 0803 	add.w	r8, r5, #3
 801426a:	2203      	movs	r2, #3
 801426c:	4628      	mov	r0, r5
 801426e:	f000 fa20 	bl	80146b2 <memmove>
 8014272:	4639      	mov	r1, r7
 8014274:	220b      	movs	r2, #11
 8014276:	4640      	mov	r0, r8
 8014278:	f000 fa1b 	bl	80146b2 <memmove>
 801427c:	f105 030e 	add.w	r3, r5, #14
 8014280:	4631      	mov	r1, r6
 8014282:	2208      	movs	r2, #8
 8014284:	4618      	mov	r0, r3
 8014286:	f000 fa14 	bl	80146b2 <memmove>
 801428a:	2308      	movs	r3, #8
 801428c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8014290:	230b      	movs	r3, #11
 8014292:	9302      	str	r3, [sp, #8]
 8014294:	4b08      	ldr	r3, [pc, #32]	; (80142b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8014296:	9005      	str	r0, [sp, #20]
 8014298:	e9cd 5300 	strd	r5, r3, [sp]
 801429c:	4a07      	ldr	r2, [pc, #28]	; (80142bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801429e:	4808      	ldr	r0, [pc, #32]	; (80142c0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80142a0:	2303      	movs	r3, #3
 80142a2:	213f      	movs	r1, #63	; 0x3f
 80142a4:	f7f6 f83c 	bl	800a320 <snprintf>
 80142a8:	4620      	mov	r0, r4
 80142aa:	b006      	add	sp, #24
 80142ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80142b0:	2000fe88 	andcs	pc, r0, r8, lsl #29
 80142b4:	2000fee0 	andcs	pc, r0, r0, ror #29
 80142b8:	08017548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp, lr}
 80142bc:	08019f34 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, fp, ip, pc}
 80142c0:	2000fe9e 	mulcs	r0, lr, lr

080142c4 <FirmwareVersion::Print(char const*)>:
 80142c4:	b510      	push	{r4, lr}
 80142c6:	4805      	ldr	r0, [pc, #20]	; (80142dc <FirmwareVersion::Print(char const*)+0x18>)
 80142c8:	460c      	mov	r4, r1
 80142ca:	f000 fa2a 	bl	8014722 <puts>
 80142ce:	b124      	cbz	r4, 80142da <FirmwareVersion::Print(char const*)+0x16>
 80142d0:	4620      	mov	r0, r4
 80142d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80142d6:	f000 ba24 	b.w	8014722 <puts>
 80142da:	bd10      	pop	{r4, pc}
 80142dc:	2000fe9e 	mulcs	r0, lr, lr

080142e0 <LedBlink::LedBlink()>:
 80142e0:	b538      	push	{r3, r4, r5, lr}
 80142e2:	2500      	movs	r5, #0
 80142e4:	2305      	movs	r3, #5
 80142e6:	e9c0 5300 	strd	r5, r3, [r0]
 80142ea:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80142ee:	e9c0 3503 	strd	r3, r5, [r0, #12]
 80142f2:	4b0d      	ldr	r3, [pc, #52]	; (8014328 <LedBlink::LedBlink()+0x48>)
 80142f4:	6085      	str	r5, [r0, #8]
 80142f6:	4604      	mov	r4, r0
 80142f8:	6145      	str	r5, [r0, #20]
 80142fa:	6018      	str	r0, [r3, #0]
 80142fc:	f640 4002 	movw	r0, #3074	; 0xc02
 8014300:	f000 fd74 	bl	8014dec <rcu_periph_clock_enable>
 8014304:	2301      	movs	r3, #1
 8014306:	462a      	mov	r2, r5
 8014308:	4619      	mov	r1, r3
 801430a:	4808      	ldr	r0, [pc, #32]	; (801432c <LedBlink::LedBlink()+0x4c>)
 801430c:	f000 fcf2 	bl	8014cf4 <gpio_mode_set>
 8014310:	4806      	ldr	r0, [pc, #24]	; (801432c <LedBlink::LedBlink()+0x4c>)
 8014312:	2301      	movs	r3, #1
 8014314:	2202      	movs	r2, #2
 8014316:	4629      	mov	r1, r5
 8014318:	f000 fd0c 	bl	8014d34 <gpio_output_options_set>
 801431c:	4b04      	ldr	r3, [pc, #16]	; (8014330 <LedBlink::LedBlink()+0x50>)
 801431e:	2201      	movs	r2, #1
 8014320:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8014324:	4620      	mov	r0, r4
 8014326:	bd38      	pop	{r3, r4, r5, pc}
 8014328:	2000fee4 	andcs	pc, r0, r4, ror #29
 801432c:	40020800 	andmi	r0, r2, r0, lsl #16
 8014330:	40020000 	andmi	r0, r2, r0

08014334 <LedBlink::SetMode(ledblink::Mode)>:
 8014334:	6843      	ldr	r3, [r0, #4]
 8014336:	428b      	cmp	r3, r1
 8014338:	d02b      	beq.n	8014392 <LedBlink::SetMode(ledblink::Mode)+0x5e>
 801433a:	6041      	str	r1, [r0, #4]
 801433c:	2904      	cmp	r1, #4
 801433e:	d820      	bhi.n	8014382 <LedBlink::SetMode(ledblink::Mode)+0x4e>
 8014340:	e8df f001 	tbb	[pc, r1]
 8014344:	1610031f 			; <UNDEFINED> instruction: 0x1610031f
 8014348:	23ff001b 	mvnscs	r0, #27
 801434c:	6003      	str	r3, [r0, #0]
 801434e:	2300      	movs	r3, #0
 8014350:	60c3      	str	r3, [r0, #12]
 8014352:	4b10      	ldr	r3, [pc, #64]	; (8014394 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 8014354:	2201      	movs	r2, #1
 8014356:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 801435a:	6880      	ldr	r0, [r0, #8]
 801435c:	b1c8      	cbz	r0, 8014392 <LedBlink::SetMode(ledblink::Mode)+0x5e>
 801435e:	6803      	ldr	r3, [r0, #0]
 8014360:	689b      	ldr	r3, [r3, #8]
 8014362:	4718      	bx	r3
 8014364:	2301      	movs	r3, #1
 8014366:	6003      	str	r3, [r0, #0]
 8014368:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801436c:	60c3      	str	r3, [r0, #12]
 801436e:	e7f4      	b.n	801435a <LedBlink::SetMode(ledblink::Mode)+0x26>
 8014370:	2303      	movs	r3, #3
 8014372:	6003      	str	r3, [r0, #0]
 8014374:	f240 134d 	movw	r3, #333	; 0x14d
 8014378:	e7f8      	b.n	801436c <LedBlink::SetMode(ledblink::Mode)+0x38>
 801437a:	2305      	movs	r3, #5
 801437c:	6003      	str	r3, [r0, #0]
 801437e:	23c8      	movs	r3, #200	; 0xc8
 8014380:	e7f4      	b.n	801436c <LedBlink::SetMode(ledblink::Mode)+0x38>
 8014382:	2300      	movs	r3, #0
 8014384:	6003      	str	r3, [r0, #0]
 8014386:	60c3      	str	r3, [r0, #12]
 8014388:	4b02      	ldr	r3, [pc, #8]	; (8014394 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 801438a:	2201      	movs	r2, #1
 801438c:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8014390:	e7e3      	b.n	801435a <LedBlink::SetMode(ledblink::Mode)+0x26>
 8014392:	4770      	bx	lr
 8014394:	40020000 	andmi	r0, r2, r0

08014398 <Hardware::Hardware()>:
 8014398:	b530      	push	{r4, r5, lr}
 801439a:	4b31      	ldr	r3, [pc, #196]	; (8014460 <Hardware::Hardware()+0xc8>)
 801439c:	2400      	movs	r4, #0
 801439e:	b091      	sub	sp, #68	; 0x44
 80143a0:	7004      	strb	r4, [r0, #0]
 80143a2:	6018      	str	r0, [r3, #0]
 80143a4:	4605      	mov	r5, r0
 80143a6:	f7f4 f8cd 	bl	8008544 <console_init>
 80143aa:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 80143ae:	f000 fd49 	bl	8014e44 <rcu_timer_clock_prescaler_config>
 80143b2:	f000 fae3 	bl	801497c <systick_config>
 80143b6:	f001 fd0b 	bl	8015dd0 <udelay_init()>
 80143ba:	f001 fce9 	bl	8015d90 <micros_init()>
 80143be:	f241 001c 	movw	r0, #4124	; 0x101c
 80143c2:	f000 fd13 	bl	8014dec <rcu_periph_clock_enable>
 80143c6:	f44f 7000 	mov.w	r0, #512	; 0x200
 80143ca:	f000 fcfb 	bl	8014dc4 <pmu_backup_ldo_config>
 80143ce:	f640 4012 	movw	r0, #3090	; 0xc12
 80143d2:	f000 fd0b 	bl	8014dec <rcu_periph_clock_enable>
 80143d6:	f000 fd01 	bl	8014ddc <pmu_backup_write_enable>
 80143da:	4621      	mov	r1, r4
 80143dc:	2001      	movs	r0, #1
 80143de:	f001 f937 	bl	8015650 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 80143e2:	4a20      	ldr	r2, [pc, #128]	; (8014464 <Hardware::Hardware()+0xcc>)
 80143e4:	4b20      	ldr	r3, [pc, #128]	; (8014468 <Hardware::Hardware()+0xd0>)
 80143e6:	1a9b      	subs	r3, r3, r2
 80143e8:	3b01      	subs	r3, #1
 80143ea:	d232      	bcs.n	8014452 <Hardware::Hardware()+0xba>
 80143ec:	4b1f      	ldr	r3, [pc, #124]	; (801446c <Hardware::Hardware()+0xd4>)
 80143ee:	4c20      	ldr	r4, [pc, #128]	; (8014470 <Hardware::Hardware()+0xd8>)
 80143f0:	2200      	movs	r2, #0
 80143f2:	1ae4      	subs	r4, r4, r3
 80143f4:	3c01      	subs	r4, #1
 80143f6:	d22f      	bcs.n	8014458 <Hardware::Hardware()+0xc0>
 80143f8:	f241 0004 	movw	r0, #4100	; 0x1004
 80143fc:	f000 fcf6 	bl	8014dec <rcu_periph_clock_enable>
 8014400:	481c      	ldr	r0, [pc, #112]	; (8014474 <Hardware::Hardware()+0xdc>)
 8014402:	f000 fda3 	bl	8014f4c <timer_deinit>
 8014406:	a903      	add	r1, sp, #12
 8014408:	23c7      	movs	r3, #199	; 0xc7
 801440a:	481a      	ldr	r0, [pc, #104]	; (8014474 <Hardware::Hardware()+0xdc>)
 801440c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8014410:	9405      	str	r4, [sp, #20]
 8014412:	f000 fe41 	bl	8015098 <timer_init>
 8014416:	4817      	ldr	r0, [pc, #92]	; (8014474 <Hardware::Hardware()+0xdc>)
 8014418:	f000 fe7c 	bl	8015114 <timer_enable>
 801441c:	f001 f92a 	bl	8015674 <gd32_adc_init()>
 8014420:	220b      	movs	r2, #11
 8014422:	2309      	movs	r3, #9
 8014424:	2400      	movs	r4, #0
 8014426:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801442a:	a807      	add	r0, sp, #28
 801442c:	237a      	movs	r3, #122	; 0x7a
 801442e:	930c      	str	r3, [sp, #48]	; 0x30
 8014430:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8014434:	9407      	str	r4, [sp, #28]
 8014436:	940f      	str	r4, [sp, #60]	; 0x3c
 8014438:	f000 f9cc 	bl	80147d4 <mktime>
 801443c:	4621      	mov	r1, r4
 801443e:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8014442:	a801      	add	r0, sp, #4
 8014444:	f000 fa3c 	bl	80148c0 <settimeofday>
 8014448:	f001 f974 	bl	8015734 <gd32_i2c_begin>
 801444c:	4628      	mov	r0, r5
 801444e:	b011      	add	sp, #68	; 0x44
 8014450:	bd30      	pop	{r4, r5, pc}
 8014452:	f802 4b01 	strb.w	r4, [r2], #1
 8014456:	e7c7      	b.n	80143e8 <Hardware::Hardware()+0x50>
 8014458:	f803 2b01 	strb.w	r2, [r3], #1
 801445c:	e7ca      	b.n	80143f4 <Hardware::Hardware()+0x5c>
 801445e:	bf00      	nop
 8014460:	2000fee8 	andcs	pc, r0, r8, ror #29
 8014464:	10000000 	andne	r0, r0, r0
 8014468:	100014b8 			; <UNDEFINED> instruction: 0x100014b8
 801446c:	20030000 	andcs	r0, r3, r0
 8014470:	20048d08 	andcs	r8, r4, r8, lsl #26
 8014474:	40001000 	andmi	r1, r0, r0

08014478 <Hardware::GetUuid(unsigned char*)>:
 8014478:	4a0c      	ldr	r2, [pc, #48]	; (80144ac <Hardware::GetUuid(unsigned char*)+0x34>)
 801447a:	b084      	sub	sp, #16
 801447c:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8014480:	9300      	str	r3, [sp, #0]
 8014482:	f8d2 0a14 	ldr.w	r0, [r2, #2580]	; 0xa14
 8014486:	9001      	str	r0, [sp, #4]
 8014488:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	; 0xa18
 801448c:	9202      	str	r2, [sp, #8]
 801448e:	4403      	add	r3, r0
 8014490:	4413      	add	r3, r2
 8014492:	9303      	str	r3, [sp, #12]
 8014494:	466a      	mov	r2, sp
 8014496:	1e4b      	subs	r3, r1, #1
 8014498:	310f      	adds	r1, #15
 801449a:	428b      	cmp	r3, r1
 801449c:	d101      	bne.n	80144a2 <Hardware::GetUuid(unsigned char*)+0x2a>
 801449e:	b004      	add	sp, #16
 80144a0:	4770      	bx	lr
 80144a2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80144a6:	f803 0f01 	strb.w	r0, [r3, #1]!
 80144aa:	e7f6      	b.n	801449a <Hardware::GetUuid(unsigned char*)+0x22>
 80144ac:	1fff7000 	svcne	0x00ff7000

080144b0 <Hardware::Reboot()>:
 80144b0:	b508      	push	{r3, lr}
 80144b2:	2300      	movs	r3, #0
 80144b4:	7003      	strb	r3, [r0, #0]
 80144b6:	4604      	mov	r4, r0
 80144b8:	2104      	movs	r1, #4
 80144ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80144be:	f000 fbef 	bl	8014ca0 <fwdgt_config>
 80144c2:	4620      	mov	r0, r4
 80144c4:	f7f4 ffca 	bl	800945c <Hardware::RebootHandler()>
 80144c8:	2102      	movs	r1, #2
 80144ca:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80144ce:	f000 fbe7 	bl	8014ca0 <fwdgt_config>
 80144d2:	2801      	cmp	r0, #1
 80144d4:	bf0c      	ite	eq
 80144d6:	2301      	moveq	r3, #1
 80144d8:	2300      	movne	r3, #0
 80144da:	7023      	strb	r3, [r4, #0]
 80144dc:	d101      	bne.n	80144e2 <Hardware::Reboot()+0x32>
 80144de:	f000 fbcf 	bl	8014c80 <fwdgt_enable>
 80144e2:	4b0f      	ldr	r3, [pc, #60]	; (8014520 <Hardware::Reboot()+0x70>)
 80144e4:	480f      	ldr	r0, [pc, #60]	; (8014524 <Hardware::Reboot()+0x74>)
 80144e6:	681b      	ldr	r3, [r3, #0]
 80144e8:	490f      	ldr	r1, [pc, #60]	; (8014528 <Hardware::Reboot()+0x78>)
 80144ea:	2208      	movs	r2, #8
 80144ec:	601a      	str	r2, [r3, #0]
 80144ee:	227d      	movs	r2, #125	; 0x7d
 80144f0:	60da      	str	r2, [r3, #12]
 80144f2:	2501      	movs	r5, #1
 80144f4:	68dc      	ldr	r4, [r3, #12]
 80144f6:	b904      	cbnz	r4, 80144fa <Hardware::Reboot()+0x4a>
 80144f8:	e7fe      	b.n	80144f8 <Hardware::Reboot()+0x48>
 80144fa:	6802      	ldr	r2, [r0, #0]
 80144fc:	695e      	ldr	r6, [r3, #20]
 80144fe:	1b92      	subs	r2, r2, r6
 8014500:	4294      	cmp	r4, r2
 8014502:	d8f8      	bhi.n	80144f6 <Hardware::Reboot()+0x46>
 8014504:	6802      	ldr	r2, [r0, #0]
 8014506:	615a      	str	r2, [r3, #20]
 8014508:	691a      	ldr	r2, [r3, #16]
 801450a:	2a01      	cmp	r2, #1
 801450c:	f082 0401 	eor.w	r4, r2, #1
 8014510:	611c      	str	r4, [r3, #16]
 8014512:	bf14      	ite	ne
 8014514:	f8c1 5818 	strne.w	r5, [r1, #2072]	; 0x818
 8014518:	f8c1 2828 	streq.w	r2, [r1, #2088]	; 0x828
 801451c:	e7ea      	b.n	80144f4 <Hardware::Reboot()+0x44>
 801451e:	bf00      	nop
 8014520:	2000fee4 	andcs	pc, r0, r4, ror #29
 8014524:	2000fefc 	strdcs	pc, [r0], -ip
 8014528:	40020000 	andmi	r0, r2, r0

0801452c <operator delete(void*)>:
 801452c:	f000 b890 	b.w	8014650 <free>

08014530 <operator delete[](void*)>:
 8014530:	f000 b88e 	b.w	8014650 <free>

08014534 <operator new(unsigned int)>:
 8014534:	f000 b842 	b.w	80145bc <malloc>

08014538 <operator new[](unsigned int)>:
 8014538:	f000 b840 	b.w	80145bc <malloc>

0801453c <inet_aton>:
 801453c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801453e:	f04f 0c0a 	mov.w	ip, #10
 8014542:	ae01      	add	r6, sp, #4
 8014544:	2500      	movs	r5, #0
 8014546:	4603      	mov	r3, r0
 8014548:	1d07      	adds	r7, r0, #4
 801454a:	2200      	movs	r2, #0
 801454c:	e007      	b.n	801455e <inet_aton+0x22>
 801454e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8014552:	2b09      	cmp	r3, #9
 8014554:	d820      	bhi.n	8014598 <inet_aton+0x5c>
 8014556:	fb0c 4202 	mla	r2, ip, r2, r4
 801455a:	3a30      	subs	r2, #48	; 0x30
 801455c:	4603      	mov	r3, r0
 801455e:	4618      	mov	r0, r3
 8014560:	f810 4b01 	ldrb.w	r4, [r0], #1
 8014564:	2c2e      	cmp	r4, #46	; 0x2e
 8014566:	d111      	bne.n	801458c <inet_aton+0x50>
 8014568:	3501      	adds	r5, #1
 801456a:	2d03      	cmp	r5, #3
 801456c:	f806 2b01 	strb.w	r2, [r6], #1
 8014570:	d1e9      	bne.n	8014546 <inet_aton+0xa>
 8014572:	1d1c      	adds	r4, r3, #4
 8014574:	2200      	movs	r2, #0
 8014576:	250a      	movs	r5, #10
 8014578:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801457c:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8014580:	d10d      	bne.n	801459e <inet_aton+0x62>
 8014582:	f88d 2007 	strb.w	r2, [sp, #7]
 8014586:	b9b1      	cbnz	r1, 80145b6 <inet_aton+0x7a>
 8014588:	2001      	movs	r0, #1
 801458a:	e006      	b.n	801459a <inet_aton+0x5e>
 801458c:	2c00      	cmp	r4, #0
 801458e:	d0eb      	beq.n	8014568 <inet_aton+0x2c>
 8014590:	2c0a      	cmp	r4, #10
 8014592:	d0e9      	beq.n	8014568 <inet_aton+0x2c>
 8014594:	42b8      	cmp	r0, r7
 8014596:	d1da      	bne.n	801454e <inet_aton+0x12>
 8014598:	2000      	movs	r0, #0
 801459a:	b003      	add	sp, #12
 801459c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801459e:	280a      	cmp	r0, #10
 80145a0:	d0ef      	beq.n	8014582 <inet_aton+0x46>
 80145a2:	42a3      	cmp	r3, r4
 80145a4:	d0f8      	beq.n	8014598 <inet_aton+0x5c>
 80145a6:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80145aa:	2e09      	cmp	r6, #9
 80145ac:	d8f4      	bhi.n	8014598 <inet_aton+0x5c>
 80145ae:	fb05 0202 	mla	r2, r5, r2, r0
 80145b2:	3a30      	subs	r2, #48	; 0x30
 80145b4:	e7e0      	b.n	8014578 <inet_aton+0x3c>
 80145b6:	9b01      	ldr	r3, [sp, #4]
 80145b8:	600b      	str	r3, [r1, #0]
 80145ba:	e7e5      	b.n	8014588 <inet_aton+0x4c>

080145bc <malloc>:
 80145bc:	b538      	push	{r3, r4, r5, lr}
 80145be:	4601      	mov	r1, r0
 80145c0:	4604      	mov	r4, r0
 80145c2:	481c      	ldr	r0, [pc, #112]	; (8014634 <malloc+0x78>)
 80145c4:	f7f5 fe84 	bl	800a2d0 <printf>
 80145c8:	b17c      	cbz	r4, 80145ea <malloc+0x2e>
 80145ca:	4b1b      	ldr	r3, [pc, #108]	; (8014638 <malloc+0x7c>)
 80145cc:	6818      	ldr	r0, [r3, #0]
 80145ce:	b978      	cbnz	r0, 80145f0 <malloc+0x34>
 80145d0:	4a1a      	ldr	r2, [pc, #104]	; (801463c <malloc+0x80>)
 80145d2:	481b      	ldr	r0, [pc, #108]	; (8014640 <malloc+0x84>)
 80145d4:	6811      	ldr	r1, [r2, #0]
 80145d6:	f104 031b 	add.w	r3, r4, #27
 80145da:	f023 030f 	bic.w	r3, r3, #15
 80145de:	440b      	add	r3, r1
 80145e0:	4283      	cmp	r3, r0
 80145e2:	d921      	bls.n	8014628 <malloc+0x6c>
 80145e4:	4817      	ldr	r0, [pc, #92]	; (8014644 <malloc+0x88>)
 80145e6:	f7f5 fe73 	bl	800a2d0 <printf>
 80145ea:	2500      	movs	r5, #0
 80145ec:	4628      	mov	r0, r5
 80145ee:	bd38      	pop	{r3, r4, r5, pc}
 80145f0:	4284      	cmp	r4, r0
 80145f2:	d80a      	bhi.n	801460a <malloc+0x4e>
 80145f4:	685a      	ldr	r2, [r3, #4]
 80145f6:	6899      	ldr	r1, [r3, #8]
 80145f8:	3201      	adds	r2, #1
 80145fa:	428a      	cmp	r2, r1
 80145fc:	605a      	str	r2, [r3, #4]
 80145fe:	d900      	bls.n	8014602 <malloc+0x46>
 8014600:	609a      	str	r2, [r3, #8]
 8014602:	68d9      	ldr	r1, [r3, #12]
 8014604:	b919      	cbnz	r1, 801460e <malloc+0x52>
 8014606:	4604      	mov	r4, r0
 8014608:	e7e2      	b.n	80145d0 <malloc+0x14>
 801460a:	3310      	adds	r3, #16
 801460c:	e7de      	b.n	80145cc <malloc+0x10>
 801460e:	688a      	ldr	r2, [r1, #8]
 8014610:	60da      	str	r2, [r3, #12]
 8014612:	4604      	mov	r4, r0
 8014614:	2300      	movs	r3, #0
 8014616:	f101 050c 	add.w	r5, r1, #12
 801461a:	608b      	str	r3, [r1, #8]
 801461c:	4622      	mov	r2, r4
 801461e:	462b      	mov	r3, r5
 8014620:	4809      	ldr	r0, [pc, #36]	; (8014648 <malloc+0x8c>)
 8014622:	f7f5 fe55 	bl	800a2d0 <printf>
 8014626:	e7e1      	b.n	80145ec <malloc+0x30>
 8014628:	6013      	str	r3, [r2, #0]
 801462a:	4b08      	ldr	r3, [pc, #32]	; (801464c <malloc+0x90>)
 801462c:	e9c1 3400 	strd	r3, r4, [r1]
 8014630:	e7f0      	b.n	8014614 <malloc+0x58>
 8014632:	bf00      	nop
 8014634:	08019f58 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, fp, ip, pc}
 8014638:	20000024 	andcs	r0, r0, r4, lsr #32
 801463c:	20000020 	andcs	r0, r0, r0, lsr #32
 8014640:	1000c000 	andne	ip, r0, r0
 8014644:	08019f64 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, fp, ip, pc}
 8014648:	08019f80 	stmdaeq	r1, {r7, r8, r9, sl, fp, ip, pc}
 801464c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08014650 <free>:
 8014650:	b538      	push	{r3, r4, r5, lr}
 8014652:	4604      	mov	r4, r0
 8014654:	b1c8      	cbz	r0, 801468a <free+0x3a>
 8014656:	f1a0 050c 	sub.w	r5, r0, #12
 801465a:	4602      	mov	r2, r0
 801465c:	4629      	mov	r1, r5
 801465e:	480c      	ldr	r0, [pc, #48]	; (8014690 <free+0x40>)
 8014660:	f7f5 fe36 	bl	800a2d0 <printf>
 8014664:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8014668:	4b0a      	ldr	r3, [pc, #40]	; (8014694 <free+0x44>)
 801466a:	429a      	cmp	r2, r3
 801466c:	d10d      	bne.n	801468a <free+0x3a>
 801466e:	4b0a      	ldr	r3, [pc, #40]	; (8014698 <free+0x48>)
 8014670:	681a      	ldr	r2, [r3, #0]
 8014672:	b152      	cbz	r2, 801468a <free+0x3a>
 8014674:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8014678:	4291      	cmp	r1, r2
 801467a:	d107      	bne.n	801468c <free+0x3c>
 801467c:	68da      	ldr	r2, [r3, #12]
 801467e:	f844 2c04 	str.w	r2, [r4, #-4]
 8014682:	685a      	ldr	r2, [r3, #4]
 8014684:	60dd      	str	r5, [r3, #12]
 8014686:	3a01      	subs	r2, #1
 8014688:	605a      	str	r2, [r3, #4]
 801468a:	bd38      	pop	{r3, r4, r5, pc}
 801468c:	3310      	adds	r3, #16
 801468e:	e7ef      	b.n	8014670 <free+0x20>
 8014690:	08019fab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, fp, ip, pc}
 8014694:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8014698:	20000024 	andcs	r0, r0, r4, lsr #32

0801469c <memcpy>:
 801469c:	b510      	push	{r4, lr}
 801469e:	1e43      	subs	r3, r0, #1
 80146a0:	440a      	add	r2, r1
 80146a2:	4291      	cmp	r1, r2
 80146a4:	d100      	bne.n	80146a8 <memcpy+0xc>
 80146a6:	bd10      	pop	{r4, pc}
 80146a8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80146ac:	f803 4f01 	strb.w	r4, [r3, #1]!
 80146b0:	e7f7      	b.n	80146a2 <memcpy+0x6>

080146b2 <memmove>:
 80146b2:	4288      	cmp	r0, r1
 80146b4:	b510      	push	{r4, lr}
 80146b6:	eb01 0302 	add.w	r3, r1, r2
 80146ba:	d208      	bcs.n	80146ce <memmove+0x1c>
 80146bc:	1e42      	subs	r2, r0, #1
 80146be:	4299      	cmp	r1, r3
 80146c0:	d100      	bne.n	80146c4 <memmove+0x12>
 80146c2:	bd10      	pop	{r4, pc}
 80146c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80146c8:	f802 4f01 	strb.w	r4, [r2, #1]!
 80146cc:	e7f7      	b.n	80146be <memmove+0xc>
 80146ce:	4402      	add	r2, r0
 80146d0:	4601      	mov	r1, r0
 80146d2:	428a      	cmp	r2, r1
 80146d4:	d0f5      	beq.n	80146c2 <memmove+0x10>
 80146d6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80146da:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80146de:	e7f8      	b.n	80146d2 <memmove+0x20>

080146e0 <memset>:
 80146e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80146e2:	b1c2      	cbz	r2, 8014716 <memset+0x36>
 80146e4:	b2c9      	uxtb	r1, r1
 80146e6:	4603      	mov	r3, r0
 80146e8:	075c      	lsls	r4, r3, #29
 80146ea:	d110      	bne.n	801470e <memset+0x2e>
 80146ec:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80146f0:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80146f4:	f022 0407 	bic.w	r4, r2, #7
 80146f8:	463d      	mov	r5, r7
 80146fa:	441c      	add	r4, r3
 80146fc:	461e      	mov	r6, r3
 80146fe:	42a6      	cmp	r6, r4
 8014700:	d10a      	bne.n	8014718 <memset+0x38>
 8014702:	441a      	add	r2, r3
 8014704:	4294      	cmp	r4, r2
 8014706:	d006      	beq.n	8014716 <memset+0x36>
 8014708:	f804 1b01 	strb.w	r1, [r4], #1
 801470c:	e7fa      	b.n	8014704 <memset+0x24>
 801470e:	3a01      	subs	r2, #1
 8014710:	f803 1b01 	strb.w	r1, [r3], #1
 8014714:	d1e8      	bne.n	80146e8 <memset+0x8>
 8014716:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014718:	f846 7b08 	str.w	r7, [r6], #8
 801471c:	f846 5c04 	str.w	r5, [r6, #-4]
 8014720:	e7ed      	b.n	80146fe <memset+0x1e>

08014722 <puts>:
 8014722:	b508      	push	{r3, lr}
 8014724:	f7ff fd48 	bl	80141b8 <console_puts>
 8014728:	200a      	movs	r0, #10
 801472a:	f7ff fd43 	bl	80141b4 <console_putc>
 801472e:	2001      	movs	r0, #1
 8014730:	bd08      	pop	{r3, pc}
	...

08014734 <strtok>:
 8014734:	b530      	push	{r4, r5, lr}
 8014736:	b910      	cbnz	r0, 801473e <strtok+0xa>
 8014738:	4b12      	ldr	r3, [pc, #72]	; (8014784 <strtok+0x50>)
 801473a:	6818      	ldr	r0, [r3, #0]
 801473c:	b158      	cbz	r0, 8014756 <strtok+0x22>
 801473e:	4603      	mov	r3, r0
 8014740:	4618      	mov	r0, r3
 8014742:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014746:	460d      	mov	r5, r1
 8014748:	f815 4b01 	ldrb.w	r4, [r5], #1
 801474c:	b924      	cbnz	r4, 8014758 <strtok+0x24>
 801474e:	b94a      	cbnz	r2, 8014764 <strtok+0x30>
 8014750:	4b0c      	ldr	r3, [pc, #48]	; (8014784 <strtok+0x50>)
 8014752:	4610      	mov	r0, r2
 8014754:	601a      	str	r2, [r3, #0]
 8014756:	bd30      	pop	{r4, r5, pc}
 8014758:	42a2      	cmp	r2, r4
 801475a:	d1f5      	bne.n	8014748 <strtok+0x14>
 801475c:	e7f0      	b.n	8014740 <strtok+0xc>
 801475e:	4613      	mov	r3, r2
 8014760:	e00c      	b.n	801477c <strtok+0x48>
 8014762:	b914      	cbnz	r4, 801476a <strtok+0x36>
 8014764:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014768:	460d      	mov	r5, r1
 801476a:	f815 4b01 	ldrb.w	r4, [r5], #1
 801476e:	42a2      	cmp	r2, r4
 8014770:	d1f7      	bne.n	8014762 <strtok+0x2e>
 8014772:	2a00      	cmp	r2, #0
 8014774:	d0f3      	beq.n	801475e <strtok+0x2a>
 8014776:	2200      	movs	r2, #0
 8014778:	f803 2c01 	strb.w	r2, [r3, #-1]
 801477c:	4a01      	ldr	r2, [pc, #4]	; (8014784 <strtok+0x50>)
 801477e:	6013      	str	r3, [r2, #0]
 8014780:	e7e9      	b.n	8014756 <strtok+0x22>
 8014782:	bf00      	nop
 8014784:	2000feec 	andcs	pc, r0, ip, ror #29

08014788 <isleapyear>:
 8014788:	2264      	movs	r2, #100	; 0x64
 801478a:	fb90 f3f2 	sdiv	r3, r0, r2
 801478e:	fb02 0313 	mls	r3, r2, r3, r0
 8014792:	b94b      	cbnz	r3, 80147a8 <isleapyear+0x20>
 8014794:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8014798:	fb90 f2f3 	sdiv	r2, r0, r3
 801479c:	fb03 0012 	mls	r0, r3, r2, r0
 80147a0:	fab0 f080 	clz	r0, r0
 80147a4:	0940      	lsrs	r0, r0, #5
 80147a6:	4770      	bx	lr
 80147a8:	f010 0f03 	tst.w	r0, #3
 80147ac:	bf0c      	ite	eq
 80147ae:	2001      	moveq	r0, #1
 80147b0:	2000      	movne	r0, #0
 80147b2:	4770      	bx	lr

080147b4 <getdaysofmonth>:
 80147b4:	b510      	push	{r4, lr}
 80147b6:	4604      	mov	r4, r0
 80147b8:	2c01      	cmp	r4, #1
 80147ba:	4608      	mov	r0, r1
 80147bc:	d102      	bne.n	80147c4 <getdaysofmonth+0x10>
 80147be:	f7ff ffe3 	bl	8014788 <isleapyear>
 80147c2:	b918      	cbnz	r0, 80147cc <getdaysofmonth+0x18>
 80147c4:	4b02      	ldr	r3, [pc, #8]	; (80147d0 <getdaysofmonth+0x1c>)
 80147c6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80147ca:	bd10      	pop	{r4, pc}
 80147cc:	201d      	movs	r0, #29
 80147ce:	e7fc      	b.n	80147ca <getdaysofmonth+0x16>
 80147d0:	08019fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp, ip, pc}

080147d4 <mktime>:
 80147d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80147d8:	4604      	mov	r4, r0
 80147da:	2800      	cmp	r0, #0
 80147dc:	d043      	beq.n	8014866 <mktime+0x92>
 80147de:	6941      	ldr	r1, [r0, #20]
 80147e0:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80147e4:	2b45      	cmp	r3, #69	; 0x45
 80147e6:	d83e      	bhi.n	8014866 <mktime+0x92>
 80147e8:	2600      	movs	r6, #0
 80147ea:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80147ee:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80147f2:	f240 186d 	movw	r8, #365	; 0x16d
 80147f6:	42af      	cmp	r7, r5
 80147f8:	da24      	bge.n	8014844 <mktime+0x70>
 80147fa:	6927      	ldr	r7, [r4, #16]
 80147fc:	2f0b      	cmp	r7, #11
 80147fe:	d832      	bhi.n	8014866 <mktime+0x92>
 8014800:	2500      	movs	r5, #0
 8014802:	42af      	cmp	r7, r5
 8014804:	d129      	bne.n	801485a <mktime+0x86>
 8014806:	68e5      	ldr	r5, [r4, #12]
 8014808:	2d00      	cmp	r5, #0
 801480a:	dd2c      	ble.n	8014866 <mktime+0x92>
 801480c:	4638      	mov	r0, r7
 801480e:	f7ff ffd1 	bl	80147b4 <getdaysofmonth>
 8014812:	4285      	cmp	r5, r0
 8014814:	dc27      	bgt.n	8014866 <mktime+0x92>
 8014816:	3d01      	subs	r5, #1
 8014818:	2318      	movs	r3, #24
 801481a:	4435      	add	r5, r6
 801481c:	435d      	muls	r5, r3
 801481e:	68a3      	ldr	r3, [r4, #8]
 8014820:	2b17      	cmp	r3, #23
 8014822:	d820      	bhi.n	8014866 <mktime+0x92>
 8014824:	442b      	add	r3, r5
 8014826:	213c      	movs	r1, #60	; 0x3c
 8014828:	fb01 f203 	mul.w	r2, r1, r3
 801482c:	6863      	ldr	r3, [r4, #4]
 801482e:	2b3b      	cmp	r3, #59	; 0x3b
 8014830:	d819      	bhi.n	8014866 <mktime+0x92>
 8014832:	6820      	ldr	r0, [r4, #0]
 8014834:	4413      	add	r3, r2
 8014836:	283b      	cmp	r0, #59	; 0x3b
 8014838:	fb01 f303 	mul.w	r3, r1, r3
 801483c:	d813      	bhi.n	8014866 <mktime+0x92>
 801483e:	4418      	add	r0, r3
 8014840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014844:	4628      	mov	r0, r5
 8014846:	f7ff ff9f 	bl	8014788 <isleapyear>
 801484a:	2800      	cmp	r0, #0
 801484c:	bf14      	ite	ne
 801484e:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8014852:	4643      	moveq	r3, r8
 8014854:	441e      	add	r6, r3
 8014856:	3501      	adds	r5, #1
 8014858:	e7cd      	b.n	80147f6 <mktime+0x22>
 801485a:	4628      	mov	r0, r5
 801485c:	f7ff ffaa 	bl	80147b4 <getdaysofmonth>
 8014860:	3501      	adds	r5, #1
 8014862:	4406      	add	r6, r0
 8014864:	e7cd      	b.n	8014802 <mktime+0x2e>
 8014866:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801486a:	e7e9      	b.n	8014840 <mktime+0x6c>

0801486c <gettimeofday>:
 801486c:	b538      	push	{r3, r4, r5, lr}
 801486e:	4a10      	ldr	r2, [pc, #64]	; (80148b0 <gettimeofday+0x44>)
 8014870:	4b10      	ldr	r3, [pc, #64]	; (80148b4 <gettimeofday+0x48>)
 8014872:	6814      	ldr	r4, [r2, #0]
 8014874:	681b      	ldr	r3, [r3, #0]
 8014876:	6013      	str	r3, [r2, #0]
 8014878:	429c      	cmp	r4, r3
 801487a:	bf2c      	ite	cs
 801487c:	1ae4      	subcs	r4, r4, r3
 801487e:	1b1c      	subcc	r4, r3, r4
 8014880:	4b0d      	ldr	r3, [pc, #52]	; (80148b8 <gettimeofday+0x4c>)
 8014882:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014886:	4354      	muls	r4, r2
 8014888:	e9d3 2100 	ldrd	r2, r1, [r3]
 801488c:	18a4      	adds	r4, r4, r2
 801488e:	f141 0100 	adc.w	r1, r1, #0
 8014892:	4605      	mov	r5, r0
 8014894:	e9c3 4100 	strd	r4, r1, [r3]
 8014898:	4a08      	ldr	r2, [pc, #32]	; (80148bc <gettimeofday+0x50>)
 801489a:	2300      	movs	r3, #0
 801489c:	4620      	mov	r0, r4
 801489e:	f7f4 f9fb 	bl	8008c98 <__aeabi_uldivmod>
 80148a2:	4b06      	ldr	r3, [pc, #24]	; (80148bc <gettimeofday+0x50>)
 80148a4:	6028      	str	r0, [r5, #0]
 80148a6:	fb03 4410 	mls	r4, r3, r0, r4
 80148aa:	606c      	str	r4, [r5, #4]
 80148ac:	2000      	movs	r0, #0
 80148ae:	bd38      	pop	{r3, r4, r5, pc}
 80148b0:	2000fef8 	strdcs	pc, [r0], -r8
 80148b4:	2000fefc 	strdcs	pc, [r0], -ip
 80148b8:	2000fef0 	strdcs	pc, [r0], -r0
 80148bc:	000f4240 	andeq	r4, pc, r0, asr #4

080148c0 <settimeofday>:
 80148c0:	4b07      	ldr	r3, [pc, #28]	; (80148e0 <settimeofday+0x20>)
 80148c2:	4908      	ldr	r1, [pc, #32]	; (80148e4 <settimeofday+0x24>)
 80148c4:	681a      	ldr	r2, [r3, #0]
 80148c6:	4b08      	ldr	r3, [pc, #32]	; (80148e8 <settimeofday+0x28>)
 80148c8:	b510      	push	{r4, lr}
 80148ca:	601a      	str	r2, [r3, #0]
 80148cc:	6843      	ldr	r3, [r0, #4]
 80148ce:	6804      	ldr	r4, [r0, #0]
 80148d0:	4806      	ldr	r0, [pc, #24]	; (80148ec <settimeofday+0x2c>)
 80148d2:	17da      	asrs	r2, r3, #31
 80148d4:	fbc4 3200 	smlal	r3, r2, r4, r0
 80148d8:	e9c1 3200 	strd	r3, r2, [r1]
 80148dc:	2000      	movs	r0, #0
 80148de:	bd10      	pop	{r4, pc}
 80148e0:	2000fefc 	strdcs	pc, [r0], -ip
 80148e4:	2000fef0 	strdcs	pc, [r0], -r0
 80148e8:	2000fef8 	strdcs	pc, [r0], -r8
 80148ec:	000f4240 	andeq	r4, pc, r0, asr #4

080148f0 <time>:
 80148f0:	b513      	push	{r0, r1, r4, lr}
 80148f2:	4604      	mov	r4, r0
 80148f4:	2100      	movs	r1, #0
 80148f6:	4668      	mov	r0, sp
 80148f8:	f7ff ffb8 	bl	801486c <gettimeofday>
 80148fc:	9800      	ldr	r0, [sp, #0]
 80148fe:	b104      	cbz	r4, 8014902 <time+0x12>
 8014900:	6020      	str	r0, [r4, #0]
 8014902:	b002      	add	sp, #8
 8014904:	bd10      	pop	{r4, pc}
	...

08014908 <uart0_init>:
 8014908:	b507      	push	{r0, r1, r2, lr}
 801490a:	2301      	movs	r3, #1
 801490c:	9300      	str	r3, [sp, #0]
 801490e:	4805      	ldr	r0, [pc, #20]	; (8014924 <uart0_init+0x1c>)
 8014910:	2300      	movs	r3, #0
 8014912:	2208      	movs	r2, #8
 8014914:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8014918:	f001 f9aa 	bl	8015c70 <gd32_uart_begin>
 801491c:	b003      	add	sp, #12
 801491e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014922:	bf00      	nop
 8014924:	40011000 	andmi	r1, r1, r0

08014928 <uart0_putc>:
 8014928:	280a      	cmp	r0, #10
 801492a:	b570      	push	{r4, r5, r6, lr}
 801492c:	4d0a      	ldr	r5, [pc, #40]	; (8014958 <uart0_putc+0x30>)
 801492e:	4604      	mov	r4, r0
 8014930:	d107      	bne.n	8014942 <uart0_putc+0x1a>
 8014932:	2107      	movs	r1, #7
 8014934:	4628      	mov	r0, r5
 8014936:	f000 fe43 	bl	80155c0 <usart_flag_get>
 801493a:	2800      	cmp	r0, #0
 801493c:	d0f9      	beq.n	8014932 <uart0_putc+0xa>
 801493e:	230d      	movs	r3, #13
 8014940:	606b      	str	r3, [r5, #4]
 8014942:	4e05      	ldr	r6, [pc, #20]	; (8014958 <uart0_putc+0x30>)
 8014944:	2107      	movs	r1, #7
 8014946:	4630      	mov	r0, r6
 8014948:	f000 fe3a 	bl	80155c0 <usart_flag_get>
 801494c:	2800      	cmp	r0, #0
 801494e:	d0f9      	beq.n	8014944 <uart0_putc+0x1c>
 8014950:	b2e4      	uxtb	r4, r4
 8014952:	606c      	str	r4, [r5, #4]
 8014954:	bd70      	pop	{r4, r5, r6, pc}
 8014956:	bf00      	nop
 8014958:	40011000 	andmi	r1, r1, r0

0801495c <uart0_puts>:
 801495c:	b510      	push	{r4, lr}
 801495e:	1e44      	subs	r4, r0, #1
 8014960:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8014964:	b903      	cbnz	r3, 8014968 <uart0_puts+0xc>
 8014966:	bd10      	pop	{r4, pc}
 8014968:	2b0a      	cmp	r3, #10
 801496a:	d102      	bne.n	8014972 <uart0_puts+0x16>
 801496c:	200d      	movs	r0, #13
 801496e:	f7ff ffdb 	bl	8014928 <uart0_putc>
 8014972:	7820      	ldrb	r0, [r4, #0]
 8014974:	f7ff ffd8 	bl	8014928 <uart0_putc>
 8014978:	e7f2      	b.n	8014960 <uart0_puts+0x4>
	...

0801497c <systick_config>:
 801497c:	4b0c      	ldr	r3, [pc, #48]	; (80149b0 <systick_config+0x34>)
 801497e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014982:	681b      	ldr	r3, [r3, #0]
 8014984:	fbb3 f3f2 	udiv	r3, r3, r2
 8014988:	3b01      	subs	r3, #1
 801498a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801498e:	d20d      	bcs.n	80149ac <systick_config+0x30>
 8014990:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8014994:	21f0      	movs	r1, #240	; 0xf0
 8014996:	6153      	str	r3, [r2, #20]
 8014998:	4b06      	ldr	r3, [pc, #24]	; (80149b4 <systick_config+0x38>)
 801499a:	2007      	movs	r0, #7
 801499c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80149a0:	2100      	movs	r1, #0
 80149a2:	6191      	str	r1, [r2, #24]
 80149a4:	6110      	str	r0, [r2, #16]
 80149a6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80149aa:	4770      	bx	lr
 80149ac:	e7fe      	b.n	80149ac <systick_config+0x30>
 80149ae:	bf00      	nop
 80149b0:	200000f4 	strdcs	r0, [r0], -r4
 80149b4:	e000ed00 	and	lr, r0, r0, lsl #26

080149b8 <SysTick_Handler>:
 80149b8:	4a02      	ldr	r2, [pc, #8]	; (80149c4 <SysTick_Handler+0xc>)
 80149ba:	6813      	ldr	r3, [r2, #0]
 80149bc:	3301      	adds	r3, #1
 80149be:	6013      	str	r3, [r2, #0]
 80149c0:	4770      	bx	lr
 80149c2:	bf00      	nop
 80149c4:	2000fefc 	strdcs	pc, [r0], -ip

080149c8 <SystemInit>:
 80149c8:	4a56      	ldr	r2, [pc, #344]	; (8014b24 <SystemInit+0x15c>)
 80149ca:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80149ce:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80149d2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80149d6:	4b54      	ldr	r3, [pc, #336]	; (8014b28 <SystemInit+0x160>)
 80149d8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80149dc:	f042 0201 	orr.w	r2, r2, #1
 80149e0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80149e4:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80149e8:	b082      	sub	sp, #8
 80149ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80149ee:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80149f2:	2200      	movs	r2, #0
 80149f4:	9201      	str	r2, [sp, #4]
 80149f6:	f24c 314f 	movw	r1, #49999	; 0xc34f
 80149fa:	9a01      	ldr	r2, [sp, #4]
 80149fc:	428a      	cmp	r2, r1
 80149fe:	d93e      	bls.n	8014a7e <SystemInit+0xb6>
 8014a00:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8014a04:	f042 0290 	orr.w	r2, r2, #144	; 0x90
 8014a08:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014a0c:	2300      	movs	r3, #0
 8014a0e:	9301      	str	r3, [sp, #4]
 8014a10:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8014a14:	9b01      	ldr	r3, [sp, #4]
 8014a16:	4293      	cmp	r3, r2
 8014a18:	d935      	bls.n	8014a86 <SystemInit+0xbe>
 8014a1a:	4b43      	ldr	r3, [pc, #268]	; (8014b28 <SystemInit+0x160>)
 8014a1c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8014a20:	f022 0203 	bic.w	r2, r2, #3
 8014a24:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014a28:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014a2c:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8014a30:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8014a34:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014a38:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014a3c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8014a40:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014a44:	2200      	movs	r2, #0
 8014a46:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014a4a:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014a4e:	4937      	ldr	r1, [pc, #220]	; (8014b2c <SystemInit+0x164>)
 8014a50:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8014a54:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 8014a58:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014a5c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8014a60:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8014a64:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014a68:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8014a6c:	0389      	lsls	r1, r1, #14
 8014a6e:	d401      	bmi.n	8014a74 <SystemInit+0xac>
 8014a70:	3a01      	subs	r2, #1
 8014a72:	d1f9      	bne.n	8014a68 <SystemInit+0xa0>
 8014a74:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8014a78:	0392      	lsls	r2, r2, #14
 8014a7a:	d408      	bmi.n	8014a8e <SystemInit+0xc6>
 8014a7c:	e7fe      	b.n	8014a7c <SystemInit+0xb4>
 8014a7e:	9a01      	ldr	r2, [sp, #4]
 8014a80:	3201      	adds	r2, #1
 8014a82:	9201      	str	r2, [sp, #4]
 8014a84:	e7b9      	b.n	80149fa <SystemInit+0x32>
 8014a86:	9b01      	ldr	r3, [sp, #4]
 8014a88:	3301      	adds	r3, #1
 8014a8a:	9301      	str	r3, [sp, #4]
 8014a8c:	e7c2      	b.n	8014a14 <SystemInit+0x4c>
 8014a8e:	f8d3 2840 	ldr.w	r2, [r3, #2112]	; 0x840
 8014a92:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8014a96:	f8c3 2840 	str.w	r2, [r3, #2112]	; 0x840
 8014a9a:	4a25      	ldr	r2, [pc, #148]	; (8014b30 <SystemInit+0x168>)
 8014a9c:	6811      	ldr	r1, [r2, #0]
 8014a9e:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8014aa2:	6011      	str	r1, [r2, #0]
 8014aa4:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014aa8:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014aac:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014ab0:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8014ab4:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014ab8:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8014abc:	f441 51a0 	orr.w	r1, r1, #5120	; 0x1400
 8014ac0:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8014ac4:	491b      	ldr	r1, [pc, #108]	; (8014b34 <SystemInit+0x16c>)
 8014ac6:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8014aca:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8014ace:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8014ad2:	f8c3 1800 	str.w	r1, [r3, #2048]	; 0x800
 8014ad6:	4914      	ldr	r1, [pc, #80]	; (8014b28 <SystemInit+0x160>)
 8014ad8:	f8d1 3800 	ldr.w	r3, [r1, #2048]	; 0x800
 8014adc:	019b      	lsls	r3, r3, #6
 8014ade:	d5fb      	bpl.n	8014ad8 <SystemInit+0x110>
 8014ae0:	6813      	ldr	r3, [r2, #0]
 8014ae2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8014ae6:	6013      	str	r3, [r2, #0]
 8014ae8:	4b11      	ldr	r3, [pc, #68]	; (8014b30 <SystemInit+0x168>)
 8014aea:	685a      	ldr	r2, [r3, #4]
 8014aec:	03d0      	lsls	r0, r2, #15
 8014aee:	d5fc      	bpl.n	8014aea <SystemInit+0x122>
 8014af0:	681a      	ldr	r2, [r3, #0]
 8014af2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8014af6:	601a      	str	r2, [r3, #0]
 8014af8:	685a      	ldr	r2, [r3, #4]
 8014afa:	0391      	lsls	r1, r2, #14
 8014afc:	d5fc      	bpl.n	8014af8 <SystemInit+0x130>
 8014afe:	4b0a      	ldr	r3, [pc, #40]	; (8014b28 <SystemInit+0x160>)
 8014b00:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8014b04:	f022 0203 	bic.w	r2, r2, #3
 8014b08:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014b0c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8014b10:	f042 0202 	orr.w	r2, r2, #2
 8014b14:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8014b18:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8014b1c:	0712      	lsls	r2, r2, #28
 8014b1e:	d5fb      	bpl.n	8014b18 <SystemInit+0x150>
 8014b20:	b002      	add	sp, #8
 8014b22:	4770      	bx	lr
 8014b24:	e000ed00 	and	lr, r0, r0, lsl #26
 8014b28:	40023000 	andmi	r3, r2, r0
 8014b2c:	24003010 	strcs	r3, [r0], #-16
 8014b30:	40007000 	andmi	r7, r0, r0
 8014b34:	09406419 	stmdbeq	r0, {r0, r3, r4, sl, sp, lr}^

08014b38 <dma_deinit>:
 8014b38:	2318      	movs	r3, #24
 8014b3a:	fb03 0301 	mla	r3, r3, r1, r0
 8014b3e:	b510      	push	{r4, lr}
 8014b40:	691a      	ldr	r2, [r3, #16]
 8014b42:	f022 0201 	bic.w	r2, r2, #1
 8014b46:	611a      	str	r2, [r3, #16]
 8014b48:	2903      	cmp	r1, #3
 8014b4a:	f04f 0200 	mov.w	r2, #0
 8014b4e:	611a      	str	r2, [r3, #16]
 8014b50:	615a      	str	r2, [r3, #20]
 8014b52:	619a      	str	r2, [r3, #24]
 8014b54:	61da      	str	r2, [r3, #28]
 8014b56:	621a      	str	r2, [r3, #32]
 8014b58:	625a      	str	r2, [r3, #36]	; 0x24
 8014b5a:	d80a      	bhi.n	8014b72 <dma_deinit+0x3a>
 8014b5c:	2406      	movs	r4, #6
 8014b5e:	084b      	lsrs	r3, r1, #1
 8014b60:	4361      	muls	r1, r4
 8014b62:	6882      	ldr	r2, [r0, #8]
 8014b64:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014b68:	233d      	movs	r3, #61	; 0x3d
 8014b6a:	408b      	lsls	r3, r1
 8014b6c:	4313      	orrs	r3, r2
 8014b6e:	6083      	str	r3, [r0, #8]
 8014b70:	bd10      	pop	{r4, pc}
 8014b72:	3904      	subs	r1, #4
 8014b74:	b2ca      	uxtb	r2, r1
 8014b76:	2306      	movs	r3, #6
 8014b78:	435a      	muls	r2, r3
 8014b7a:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8014b7e:	68c4      	ldr	r4, [r0, #12]
 8014b80:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8014b84:	233d      	movs	r3, #61	; 0x3d
 8014b86:	4093      	lsls	r3, r2
 8014b88:	4323      	orrs	r3, r4
 8014b8a:	60c3      	str	r3, [r0, #12]
 8014b8c:	e7f0      	b.n	8014b70 <dma_deinit+0x38>

08014b8e <dma_single_data_para_struct_init>:
 8014b8e:	2300      	movs	r3, #0
 8014b90:	2201      	movs	r2, #1
 8014b92:	e9c0 3200 	strd	r3, r2, [r0]
 8014b96:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8014b9a:	e9c0 3204 	strd	r3, r2, [r0, #16]
 8014b9e:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8014ba2:	6203      	str	r3, [r0, #32]
 8014ba4:	4770      	bx	lr

08014ba6 <dma_single_data_mode_init>:
 8014ba6:	2318      	movs	r3, #24
 8014ba8:	fb03 0101 	mla	r1, r3, r1, r0
 8014bac:	b530      	push	{r4, r5, lr}
 8014bae:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8014bb0:	f023 0304 	bic.w	r3, r3, #4
 8014bb4:	624b      	str	r3, [r1, #36]	; 0x24
 8014bb6:	6813      	ldr	r3, [r2, #0]
 8014bb8:	618b      	str	r3, [r1, #24]
 8014bba:	6893      	ldr	r3, [r2, #8]
 8014bbc:	61cb      	str	r3, [r1, #28]
 8014bbe:	69d3      	ldr	r3, [r2, #28]
 8014bc0:	614b      	str	r3, [r1, #20]
 8014bc2:	6914      	ldr	r4, [r2, #16]
 8014bc4:	6a13      	ldr	r3, [r2, #32]
 8014bc6:	6908      	ldr	r0, [r1, #16]
 8014bc8:	6995      	ldr	r5, [r2, #24]
 8014bca:	4323      	orrs	r3, r4
 8014bcc:	f420 305e 	bic.w	r0, r0, #227328	; 0x37800
 8014bd0:	432b      	orrs	r3, r5
 8014bd2:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8014bd6:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 8014bda:	4303      	orrs	r3, r0
 8014bdc:	610b      	str	r3, [r1, #16]
 8014bde:	6853      	ldr	r3, [r2, #4]
 8014be0:	b983      	cbnz	r3, 8014c04 <dma_single_data_mode_init+0x5e>
 8014be2:	690b      	ldr	r3, [r1, #16]
 8014be4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8014be8:	610b      	str	r3, [r1, #16]
 8014bea:	68d3      	ldr	r3, [r2, #12]
 8014bec:	b993      	cbnz	r3, 8014c14 <dma_single_data_mode_init+0x6e>
 8014bee:	690b      	ldr	r3, [r1, #16]
 8014bf0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8014bf4:	610b      	str	r3, [r1, #16]
 8014bf6:	6953      	ldr	r3, [r2, #20]
 8014bf8:	b983      	cbnz	r3, 8014c1c <dma_single_data_mode_init+0x76>
 8014bfa:	690b      	ldr	r3, [r1, #16]
 8014bfc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014c00:	610b      	str	r3, [r1, #16]
 8014c02:	bd30      	pop	{r4, r5, pc}
 8014c04:	2b01      	cmp	r3, #1
 8014c06:	690b      	ldr	r3, [r1, #16]
 8014c08:	bf0c      	ite	eq
 8014c0a:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 8014c0e:	f443 4300 	orrne.w	r3, r3, #32768	; 0x8000
 8014c12:	e7e9      	b.n	8014be8 <dma_single_data_mode_init+0x42>
 8014c14:	690b      	ldr	r3, [r1, #16]
 8014c16:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014c1a:	e7eb      	b.n	8014bf4 <dma_single_data_mode_init+0x4e>
 8014c1c:	690b      	ldr	r3, [r1, #16]
 8014c1e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014c22:	e7ed      	b.n	8014c00 <dma_single_data_mode_init+0x5a>

08014c24 <dma_circulation_disable>:
 8014c24:	2318      	movs	r3, #24
 8014c26:	4359      	muls	r1, r3
 8014c28:	3010      	adds	r0, #16
 8014c2a:	580b      	ldr	r3, [r1, r0]
 8014c2c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014c30:	500b      	str	r3, [r1, r0]
 8014c32:	4770      	bx	lr

08014c34 <dma_channel_subperipheral_select>:
 8014c34:	2318      	movs	r3, #24
 8014c36:	4359      	muls	r1, r3
 8014c38:	3010      	adds	r0, #16
 8014c3a:	580b      	ldr	r3, [r1, r0]
 8014c3c:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 8014c40:	ea43 6242 	orr.w	r2, r3, r2, lsl #25
 8014c44:	500a      	str	r2, [r1, r0]
 8014c46:	4770      	bx	lr

08014c48 <dma_flag_clear>:
 8014c48:	2903      	cmp	r1, #3
 8014c4a:	b530      	push	{r4, r5, lr}
 8014c4c:	d809      	bhi.n	8014c62 <dma_flag_clear+0x1a>
 8014c4e:	2506      	movs	r5, #6
 8014c50:	084c      	lsrs	r4, r1, #1
 8014c52:	4369      	muls	r1, r5
 8014c54:	6883      	ldr	r3, [r0, #8]
 8014c56:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8014c5a:	408a      	lsls	r2, r1
 8014c5c:	4313      	orrs	r3, r2
 8014c5e:	6083      	str	r3, [r0, #8]
 8014c60:	bd30      	pop	{r4, r5, pc}
 8014c62:	3904      	subs	r1, #4
 8014c64:	b2cb      	uxtb	r3, r1
 8014c66:	2506      	movs	r5, #6
 8014c68:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8014c6c:	436b      	muls	r3, r5
 8014c6e:	68c4      	ldr	r4, [r0, #12]
 8014c70:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8014c74:	409a      	lsls	r2, r3
 8014c76:	4322      	orrs	r2, r4
 8014c78:	60c2      	str	r2, [r0, #12]
 8014c7a:	e7f1      	b.n	8014c60 <dma_flag_clear+0x18>

08014c7c <dma_interrupt_flag_clear>:
 8014c7c:	f7ff bfe4 	b.w	8014c48 <dma_flag_clear>

08014c80 <fwdgt_enable>:
 8014c80:	4b02      	ldr	r3, [pc, #8]	; (8014c8c <fwdgt_enable+0xc>)
 8014c82:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8014c86:	601a      	str	r2, [r3, #0]
 8014c88:	4770      	bx	lr
 8014c8a:	bf00      	nop
 8014c8c:	40003000 	andmi	r3, r0, r0

08014c90 <fwdgt_counter_reload>:
 8014c90:	4b02      	ldr	r3, [pc, #8]	; (8014c9c <fwdgt_counter_reload+0xc>)
 8014c92:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8014c96:	601a      	str	r2, [r3, #0]
 8014c98:	4770      	bx	lr
 8014c9a:	bf00      	nop
 8014c9c:	40003000 	andmi	r3, r0, r0

08014ca0 <fwdgt_config>:
 8014ca0:	4a12      	ldr	r2, [pc, #72]	; (8014cec <fwdgt_config+0x4c>)
 8014ca2:	b510      	push	{r4, lr}
 8014ca4:	f245 5355 	movw	r3, #21845	; 0x5555
 8014ca8:	4c11      	ldr	r4, [pc, #68]	; (8014cf0 <fwdgt_config+0x50>)
 8014caa:	6013      	str	r3, [r2, #0]
 8014cac:	68d3      	ldr	r3, [r2, #12]
 8014cae:	3c01      	subs	r4, #1
 8014cb0:	f003 0301 	and.w	r3, r3, #1
 8014cb4:	d013      	beq.n	8014cde <fwdgt_config+0x3e>
 8014cb6:	2b00      	cmp	r3, #0
 8014cb8:	d1f8      	bne.n	8014cac <fwdgt_config+0xc>
 8014cba:	6051      	str	r1, [r2, #4]
 8014cbc:	490c      	ldr	r1, [pc, #48]	; (8014cf0 <fwdgt_config+0x50>)
 8014cbe:	4a0b      	ldr	r2, [pc, #44]	; (8014cec <fwdgt_config+0x4c>)
 8014cc0:	68d3      	ldr	r3, [r2, #12]
 8014cc2:	3901      	subs	r1, #1
 8014cc4:	f003 0302 	and.w	r3, r3, #2
 8014cc8:	d00d      	beq.n	8014ce6 <fwdgt_config+0x46>
 8014cca:	2b00      	cmp	r3, #0
 8014ccc:	d1f8      	bne.n	8014cc0 <fwdgt_config+0x20>
 8014cce:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8014cd2:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8014cd6:	6090      	str	r0, [r2, #8]
 8014cd8:	6013      	str	r3, [r2, #0]
 8014cda:	2001      	movs	r0, #1
 8014cdc:	e002      	b.n	8014ce4 <fwdgt_config+0x44>
 8014cde:	2b00      	cmp	r3, #0
 8014ce0:	d0eb      	beq.n	8014cba <fwdgt_config+0x1a>
 8014ce2:	2000      	movs	r0, #0
 8014ce4:	bd10      	pop	{r4, pc}
 8014ce6:	2b00      	cmp	r3, #0
 8014ce8:	d1fb      	bne.n	8014ce2 <fwdgt_config+0x42>
 8014cea:	e7f0      	b.n	8014cce <fwdgt_config+0x2e>
 8014cec:	40003000 	andmi	r3, r0, r0
 8014cf0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08014cf4 <gpio_mode_set>:
 8014cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014cf8:	6805      	ldr	r5, [r0, #0]
 8014cfa:	68c4      	ldr	r4, [r0, #12]
 8014cfc:	2600      	movs	r6, #0
 8014cfe:	f04f 0e03 	mov.w	lr, #3
 8014d02:	fa23 f706 	lsr.w	r7, r3, r6
 8014d06:	07ff      	lsls	r7, r7, #31
 8014d08:	d50d      	bpl.n	8014d26 <gpio_mode_set+0x32>
 8014d0a:	0077      	lsls	r7, r6, #1
 8014d0c:	fa0e fc07 	lsl.w	ip, lr, r7
 8014d10:	fa01 f807 	lsl.w	r8, r1, r7
 8014d14:	ea25 050c 	bic.w	r5, r5, ip
 8014d18:	ea24 040c 	bic.w	r4, r4, ip
 8014d1c:	fa02 f707 	lsl.w	r7, r2, r7
 8014d20:	ea48 0505 	orr.w	r5, r8, r5
 8014d24:	433c      	orrs	r4, r7
 8014d26:	3601      	adds	r6, #1
 8014d28:	2e10      	cmp	r6, #16
 8014d2a:	d1ea      	bne.n	8014d02 <gpio_mode_set+0xe>
 8014d2c:	6005      	str	r5, [r0, #0]
 8014d2e:	60c4      	str	r4, [r0, #12]
 8014d30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014d34 <gpio_output_options_set>:
 8014d34:	2901      	cmp	r1, #1
 8014d36:	6841      	ldr	r1, [r0, #4]
 8014d38:	bf0c      	ite	eq
 8014d3a:	4319      	orreq	r1, r3
 8014d3c:	4399      	bicne	r1, r3
 8014d3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d40:	6041      	str	r1, [r0, #4]
 8014d42:	6881      	ldr	r1, [r0, #8]
 8014d44:	2400      	movs	r4, #0
 8014d46:	2603      	movs	r6, #3
 8014d48:	fa23 f504 	lsr.w	r5, r3, r4
 8014d4c:	07ed      	lsls	r5, r5, #31
 8014d4e:	d507      	bpl.n	8014d60 <gpio_output_options_set+0x2c>
 8014d50:	0065      	lsls	r5, r4, #1
 8014d52:	fa06 f705 	lsl.w	r7, r6, r5
 8014d56:	ea21 0107 	bic.w	r1, r1, r7
 8014d5a:	fa02 f505 	lsl.w	r5, r2, r5
 8014d5e:	4329      	orrs	r1, r5
 8014d60:	3401      	adds	r4, #1
 8014d62:	2c10      	cmp	r4, #16
 8014d64:	d1f0      	bne.n	8014d48 <gpio_output_options_set+0x14>
 8014d66:	6081      	str	r1, [r0, #8]
 8014d68:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014d6a <gpio_af_set>:
 8014d6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d6c:	6a06      	ldr	r6, [r0, #32]
 8014d6e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8014d70:	2300      	movs	r3, #0
 8014d72:	f04f 0c0f 	mov.w	ip, #15
 8014d76:	fa22 f403 	lsr.w	r4, r2, r3
 8014d7a:	07e7      	lsls	r7, r4, #31
 8014d7c:	d507      	bpl.n	8014d8e <gpio_af_set+0x24>
 8014d7e:	009c      	lsls	r4, r3, #2
 8014d80:	fa0c f704 	lsl.w	r7, ip, r4
 8014d84:	ea26 0607 	bic.w	r6, r6, r7
 8014d88:	fa01 f404 	lsl.w	r4, r1, r4
 8014d8c:	4326      	orrs	r6, r4
 8014d8e:	3301      	adds	r3, #1
 8014d90:	2b08      	cmp	r3, #8
 8014d92:	d1f0      	bne.n	8014d76 <gpio_af_set+0xc>
 8014d94:	2300      	movs	r3, #0
 8014d96:	f04f 0c0f 	mov.w	ip, #15
 8014d9a:	f103 0408 	add.w	r4, r3, #8
 8014d9e:	fa22 f404 	lsr.w	r4, r2, r4
 8014da2:	07e4      	lsls	r4, r4, #31
 8014da4:	d507      	bpl.n	8014db6 <gpio_af_set+0x4c>
 8014da6:	009c      	lsls	r4, r3, #2
 8014da8:	fa0c f704 	lsl.w	r7, ip, r4
 8014dac:	ea25 0507 	bic.w	r5, r5, r7
 8014db0:	fa01 f404 	lsl.w	r4, r1, r4
 8014db4:	4325      	orrs	r5, r4
 8014db6:	3301      	adds	r3, #1
 8014db8:	2b08      	cmp	r3, #8
 8014dba:	d1ee      	bne.n	8014d9a <gpio_af_set+0x30>
 8014dbc:	6206      	str	r6, [r0, #32]
 8014dbe:	6245      	str	r5, [r0, #36]	; 0x24
 8014dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014dc4 <pmu_backup_ldo_config>:
 8014dc4:	4b04      	ldr	r3, [pc, #16]	; (8014dd8 <pmu_backup_ldo_config+0x14>)
 8014dc6:	685a      	ldr	r2, [r3, #4]
 8014dc8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8014dcc:	605a      	str	r2, [r3, #4]
 8014dce:	685a      	ldr	r2, [r3, #4]
 8014dd0:	4310      	orrs	r0, r2
 8014dd2:	6058      	str	r0, [r3, #4]
 8014dd4:	4770      	bx	lr
 8014dd6:	bf00      	nop
 8014dd8:	40007000 	andmi	r7, r0, r0

08014ddc <pmu_backup_write_enable>:
 8014ddc:	4a02      	ldr	r2, [pc, #8]	; (8014de8 <pmu_backup_write_enable+0xc>)
 8014dde:	6813      	ldr	r3, [r2, #0]
 8014de0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014de4:	6013      	str	r3, [r2, #0]
 8014de6:	4770      	bx	lr
 8014de8:	40007000 	andmi	r7, r0, r0

08014dec <rcu_periph_clock_enable>:
 8014dec:	0983      	lsrs	r3, r0, #6
 8014dee:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014df2:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8014df6:	f000 001f 	and.w	r0, r0, #31
 8014dfa:	6819      	ldr	r1, [r3, #0]
 8014dfc:	2201      	movs	r2, #1
 8014dfe:	4082      	lsls	r2, r0
 8014e00:	430a      	orrs	r2, r1
 8014e02:	601a      	str	r2, [r3, #0]
 8014e04:	4770      	bx	lr

08014e06 <rcu_periph_clock_disable>:
 8014e06:	0983      	lsrs	r3, r0, #6
 8014e08:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014e0c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8014e10:	f000 001f 	and.w	r0, r0, #31
 8014e14:	681a      	ldr	r2, [r3, #0]
 8014e16:	2101      	movs	r1, #1
 8014e18:	4081      	lsls	r1, r0
 8014e1a:	ea22 0201 	bic.w	r2, r2, r1
 8014e1e:	601a      	str	r2, [r3, #0]
 8014e20:	4770      	bx	lr

08014e22 <rcu_periph_reset_enable>:
 8014e22:	f7ff bfe3 	b.w	8014dec <rcu_periph_clock_enable>

08014e26 <rcu_periph_reset_disable>:
 8014e26:	f7ff bfee 	b.w	8014e06 <rcu_periph_clock_disable>
	...

08014e2c <rcu_ckout0_config>:
 8014e2c:	4a04      	ldr	r2, [pc, #16]	; (8014e40 <rcu_ckout0_config+0x14>)
 8014e2e:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8014e32:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 8014e36:	4319      	orrs	r1, r3
 8014e38:	4308      	orrs	r0, r1
 8014e3a:	f8c2 0808 	str.w	r0, [r2, #2056]	; 0x808
 8014e3e:	4770      	bx	lr
 8014e40:	40023000 	andmi	r3, r2, r0

08014e44 <rcu_timer_clock_prescaler_config>:
 8014e44:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 8014e48:	4298      	cmp	r0, r3
 8014e4a:	4b05      	ldr	r3, [pc, #20]	; (8014e60 <rcu_timer_clock_prescaler_config+0x1c>)
 8014e4c:	f8d3 288c 	ldr.w	r2, [r3, #2188]	; 0x88c
 8014e50:	bf0c      	ite	eq
 8014e52:	f022 7280 	biceq.w	r2, r2, #16777216	; 0x1000000
 8014e56:	4302      	orrne	r2, r0
 8014e58:	f8c3 288c 	str.w	r2, [r3, #2188]	; 0x88c
 8014e5c:	4770      	bx	lr
 8014e5e:	bf00      	nop
 8014e60:	40023000 	andmi	r3, r2, r0

08014e64 <rcu_clock_freq_get>:
 8014e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014e66:	4b35      	ldr	r3, [pc, #212]	; (8014f3c <rcu_clock_freq_get+0xd8>)
 8014e68:	b089      	sub	sp, #36	; 0x24
 8014e6a:	4604      	mov	r4, r0
 8014e6c:	ad04      	add	r5, sp, #16
 8014e6e:	f103 0610 	add.w	r6, r3, #16
 8014e72:	461f      	mov	r7, r3
 8014e74:	6818      	ldr	r0, [r3, #0]
 8014e76:	6859      	ldr	r1, [r3, #4]
 8014e78:	462a      	mov	r2, r5
 8014e7a:	c203      	stmia	r2!, {r0, r1}
 8014e7c:	3308      	adds	r3, #8
 8014e7e:	42b3      	cmp	r3, r6
 8014e80:	4615      	mov	r5, r2
 8014e82:	d1f7      	bne.n	8014e74 <rcu_clock_freq_get+0x10>
 8014e84:	6938      	ldr	r0, [r7, #16]
 8014e86:	6871      	ldr	r1, [r6, #4]
 8014e88:	4a2d      	ldr	r2, [pc, #180]	; (8014f40 <rcu_clock_freq_get+0xdc>)
 8014e8a:	466b      	mov	r3, sp
 8014e8c:	c303      	stmia	r3!, {r0, r1}
 8014e8e:	c303      	stmia	r3!, {r0, r1}
 8014e90:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8014e94:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014e98:	2b01      	cmp	r3, #1
 8014e9a:	d03f      	beq.n	8014f1c <rcu_clock_freq_get+0xb8>
 8014e9c:	2b02      	cmp	r3, #2
 8014e9e:	d13f      	bne.n	8014f20 <rcu_clock_freq_get+0xbc>
 8014ea0:	f8d2 0804 	ldr.w	r0, [r2, #2052]	; 0x804
 8014ea4:	f8d2 1804 	ldr.w	r1, [r2, #2052]	; 0x804
 8014ea8:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8014eac:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8014eb0:	4d24      	ldr	r5, [pc, #144]	; (8014f44 <rcu_clock_freq_get+0xe0>)
 8014eb2:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8014eb6:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 8014eba:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8014ebe:	f103 0301 	add.w	r3, r3, #1
 8014ec2:	4a21      	ldr	r2, [pc, #132]	; (8014f48 <rcu_clock_freq_get+0xe4>)
 8014ec4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8014ec8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8014ecc:	bf08      	it	eq
 8014ece:	462a      	moveq	r2, r5
 8014ed0:	fbb2 f2f0 	udiv	r2, r2, r0
 8014ed4:	434a      	muls	r2, r1
 8014ed6:	fbb2 f0f3 	udiv	r0, r2, r3
 8014eda:	4919      	ldr	r1, [pc, #100]	; (8014f40 <rcu_clock_freq_get+0xdc>)
 8014edc:	f8d1 3808 	ldr.w	r3, [r1, #2056]	; 0x808
 8014ee0:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8014ee4:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8014ee8:	3220      	adds	r2, #32
 8014eea:	446a      	add	r2, sp
 8014eec:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8014ef0:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 8014ef4:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8014ef8:	3320      	adds	r3, #32
 8014efa:	446b      	add	r3, sp
 8014efc:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8014f00:	3220      	adds	r2, #32
 8014f02:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8014f06:	446a      	add	r2, sp
 8014f08:	fa20 f303 	lsr.w	r3, r0, r3
 8014f0c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8014f10:	2c03      	cmp	r4, #3
 8014f12:	d810      	bhi.n	8014f36 <rcu_clock_freq_get+0xd2>
 8014f14:	e8df f004 	tbb	[pc, r4]
 8014f18:	0c090607 	stceq	6, cr0, [r9], {7}
 8014f1c:	480a      	ldr	r0, [pc, #40]	; (8014f48 <rcu_clock_freq_get+0xe4>)
 8014f1e:	e7dc      	b.n	8014eda <rcu_clock_freq_get+0x76>
 8014f20:	4808      	ldr	r0, [pc, #32]	; (8014f44 <rcu_clock_freq_get+0xe0>)
 8014f22:	e7da      	b.n	8014eda <rcu_clock_freq_get+0x76>
 8014f24:	4618      	mov	r0, r3
 8014f26:	b009      	add	sp, #36	; 0x24
 8014f28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f2a:	fa23 f005 	lsr.w	r0, r3, r5
 8014f2e:	e7fa      	b.n	8014f26 <rcu_clock_freq_get+0xc2>
 8014f30:	fa23 f002 	lsr.w	r0, r3, r2
 8014f34:	e7f7      	b.n	8014f26 <rcu_clock_freq_get+0xc2>
 8014f36:	2000      	movs	r0, #0
 8014f38:	e7f5      	b.n	8014f26 <rcu_clock_freq_get+0xc2>
 8014f3a:	bf00      	nop
 8014f3c:	08016bf0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, fp, sp, lr}
 8014f40:	40023000 	andmi	r3, r2, r0
 8014f44:	00f42400 	rscseq	r2, r4, r0, lsl #8
 8014f48:	017d7840 	cmneq	sp, r0, asr #16

08014f4c <timer_deinit>:
 8014f4c:	b508      	push	{r3, lr}
 8014f4e:	4b4e      	ldr	r3, [pc, #312]	; (8015088 <timer_deinit+0x13c>)
 8014f50:	4298      	cmp	r0, r3
 8014f52:	f000 8092 	beq.w	801507a <timer_deinit+0x12e>
 8014f56:	d822      	bhi.n	8014f9e <timer_deinit+0x52>
 8014f58:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8014f5c:	4298      	cmp	r0, r3
 8014f5e:	d062      	beq.n	8015026 <timer_deinit+0xda>
 8014f60:	d80b      	bhi.n	8014f7a <timer_deinit+0x2e>
 8014f62:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014f66:	4298      	cmp	r0, r3
 8014f68:	d04f      	beq.n	801500a <timer_deinit+0xbe>
 8014f6a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014f6e:	4298      	cmp	r0, r3
 8014f70:	d052      	beq.n	8015018 <timer_deinit+0xcc>
 8014f72:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8014f76:	d041      	beq.n	8014ffc <timer_deinit+0xb0>
 8014f78:	bd08      	pop	{r3, pc}
 8014f7a:	4b44      	ldr	r3, [pc, #272]	; (801508c <timer_deinit+0x140>)
 8014f7c:	4298      	cmp	r0, r3
 8014f7e:	d059      	beq.n	8015034 <timer_deinit+0xe8>
 8014f80:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014f84:	4298      	cmp	r0, r3
 8014f86:	d071      	beq.n	801506c <timer_deinit+0x120>
 8014f88:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014f8c:	4298      	cmp	r0, r3
 8014f8e:	d1f3      	bne.n	8014f78 <timer_deinit+0x2c>
 8014f90:	f640 0004 	movw	r0, #2052	; 0x804
 8014f94:	f7ff ff45 	bl	8014e22 <rcu_periph_reset_enable>
 8014f98:	f640 0004 	movw	r0, #2052	; 0x804
 8014f9c:	e02a      	b.n	8014ff4 <timer_deinit+0xa8>
 8014f9e:	4b3c      	ldr	r3, [pc, #240]	; (8015090 <timer_deinit+0x144>)
 8014fa0:	4298      	cmp	r0, r3
 8014fa2:	d055      	beq.n	8015050 <timer_deinit+0x104>
 8014fa4:	d812      	bhi.n	8014fcc <timer_deinit+0x80>
 8014fa6:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 8014faa:	4298      	cmp	r0, r3
 8014fac:	d01c      	beq.n	8014fe8 <timer_deinit+0x9c>
 8014fae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014fb2:	4298      	cmp	r0, r3
 8014fb4:	d045      	beq.n	8015042 <timer_deinit+0xf6>
 8014fb6:	f5a3 4364 	sub.w	r3, r3, #58368	; 0xe400
 8014fba:	4298      	cmp	r0, r3
 8014fbc:	d1dc      	bne.n	8014f78 <timer_deinit+0x2c>
 8014fbe:	f640 0008 	movw	r0, #2056	; 0x808
 8014fc2:	f7ff ff2e 	bl	8014e22 <rcu_periph_reset_enable>
 8014fc6:	f640 0008 	movw	r0, #2056	; 0x808
 8014fca:	e013      	b.n	8014ff4 <timer_deinit+0xa8>
 8014fcc:	4b31      	ldr	r3, [pc, #196]	; (8015094 <timer_deinit+0x148>)
 8014fce:	4298      	cmp	r0, r3
 8014fd0:	d045      	beq.n	801505e <timer_deinit+0x112>
 8014fd2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014fd6:	4298      	cmp	r0, r3
 8014fd8:	d1ce      	bne.n	8014f78 <timer_deinit+0x2c>
 8014fda:	f640 1012 	movw	r0, #2322	; 0x912
 8014fde:	f7ff ff20 	bl	8014e22 <rcu_periph_reset_enable>
 8014fe2:	f640 1012 	movw	r0, #2322	; 0x912
 8014fe6:	e005      	b.n	8014ff4 <timer_deinit+0xa8>
 8014fe8:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8014fec:	f7ff ff19 	bl	8014e22 <rcu_periph_reset_enable>
 8014ff0:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8014ff4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014ff8:	f7ff bf15 	b.w	8014e26 <rcu_periph_reset_disable>
 8014ffc:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8015000:	f7ff ff0f 	bl	8014e22 <rcu_periph_reset_enable>
 8015004:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8015008:	e7f4      	b.n	8014ff4 <timer_deinit+0xa8>
 801500a:	f640 0001 	movw	r0, #2049	; 0x801
 801500e:	f7ff ff08 	bl	8014e22 <rcu_periph_reset_enable>
 8015012:	f640 0001 	movw	r0, #2049	; 0x801
 8015016:	e7ed      	b.n	8014ff4 <timer_deinit+0xa8>
 8015018:	f640 0002 	movw	r0, #2050	; 0x802
 801501c:	f7ff ff01 	bl	8014e22 <rcu_periph_reset_enable>
 8015020:	f640 0002 	movw	r0, #2050	; 0x802
 8015024:	e7e6      	b.n	8014ff4 <timer_deinit+0xa8>
 8015026:	f640 0003 	movw	r0, #2051	; 0x803
 801502a:	f7ff fefa 	bl	8014e22 <rcu_periph_reset_enable>
 801502e:	f640 0003 	movw	r0, #2051	; 0x803
 8015032:	e7df      	b.n	8014ff4 <timer_deinit+0xa8>
 8015034:	f640 0005 	movw	r0, #2053	; 0x805
 8015038:	f7ff fef3 	bl	8014e22 <rcu_periph_reset_enable>
 801503c:	f640 0005 	movw	r0, #2053	; 0x805
 8015040:	e7d8      	b.n	8014ff4 <timer_deinit+0xa8>
 8015042:	f640 1001 	movw	r0, #2305	; 0x901
 8015046:	f7ff feec 	bl	8014e22 <rcu_periph_reset_enable>
 801504a:	f640 1001 	movw	r0, #2305	; 0x901
 801504e:	e7d1      	b.n	8014ff4 <timer_deinit+0xa8>
 8015050:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8015054:	f7ff fee5 	bl	8014e22 <rcu_periph_reset_enable>
 8015058:	f44f 6011 	mov.w	r0, #2320	; 0x910
 801505c:	e7ca      	b.n	8014ff4 <timer_deinit+0xa8>
 801505e:	f640 1011 	movw	r0, #2321	; 0x911
 8015062:	f7ff fede 	bl	8014e22 <rcu_periph_reset_enable>
 8015066:	f640 1011 	movw	r0, #2321	; 0x911
 801506a:	e7c3      	b.n	8014ff4 <timer_deinit+0xa8>
 801506c:	f640 0006 	movw	r0, #2054	; 0x806
 8015070:	f7ff fed7 	bl	8014e22 <rcu_periph_reset_enable>
 8015074:	f640 0006 	movw	r0, #2054	; 0x806
 8015078:	e7bc      	b.n	8014ff4 <timer_deinit+0xa8>
 801507a:	f640 0007 	movw	r0, #2055	; 0x807
 801507e:	f7ff fed0 	bl	8014e22 <rcu_periph_reset_enable>
 8015082:	f640 0007 	movw	r0, #2055	; 0x807
 8015086:	e7b5      	b.n	8014ff4 <timer_deinit+0xa8>
 8015088:	40001c00 	andmi	r1, r0, r0, lsl #24
 801508c:	40001400 	andmi	r1, r0, r0, lsl #8
 8015090:	40014000 	andmi	r4, r1, r0
 8015094:	40014400 	andmi	r4, r1, r0, lsl #8

08015098 <timer_init>:
 8015098:	880b      	ldrh	r3, [r1, #0]
 801509a:	6283      	str	r3, [r0, #40]	; 0x28
 801509c:	4b1a      	ldr	r3, [pc, #104]	; (8015108 <timer_init+0x70>)
 801509e:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 80150a2:	429a      	cmp	r2, r3
 80150a4:	d004      	beq.n	80150b0 <timer_init+0x18>
 80150a6:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 80150aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80150ae:	d10b      	bne.n	80150c8 <timer_init+0x30>
 80150b0:	6803      	ldr	r3, [r0, #0]
 80150b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80150b6:	6003      	str	r3, [r0, #0]
 80150b8:	6802      	ldr	r2, [r0, #0]
 80150ba:	884b      	ldrh	r3, [r1, #2]
 80150bc:	4313      	orrs	r3, r2
 80150be:	6003      	str	r3, [r0, #0]
 80150c0:	6802      	ldr	r2, [r0, #0]
 80150c2:	888b      	ldrh	r3, [r1, #4]
 80150c4:	4313      	orrs	r3, r2
 80150c6:	6003      	str	r3, [r0, #0]
 80150c8:	688b      	ldr	r3, [r1, #8]
 80150ca:	62c3      	str	r3, [r0, #44]	; 0x2c
 80150cc:	4b0f      	ldr	r3, [pc, #60]	; (801510c <timer_init+0x74>)
 80150ce:	4298      	cmp	r0, r3
 80150d0:	d003      	beq.n	80150da <timer_init+0x42>
 80150d2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80150d6:	4298      	cmp	r0, r3
 80150d8:	d104      	bne.n	80150e4 <timer_init+0x4c>
 80150da:	6943      	ldr	r3, [r0, #20]
 80150dc:	f043 0301 	orr.w	r3, r3, #1
 80150e0:	6143      	str	r3, [r0, #20]
 80150e2:	4770      	bx	lr
 80150e4:	6803      	ldr	r3, [r0, #0]
 80150e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80150ea:	6003      	str	r3, [r0, #0]
 80150ec:	6802      	ldr	r2, [r0, #0]
 80150ee:	88cb      	ldrh	r3, [r1, #6]
 80150f0:	4313      	orrs	r3, r2
 80150f2:	6003      	str	r3, [r0, #0]
 80150f4:	4b04      	ldr	r3, [pc, #16]	; (8015108 <timer_init+0x70>)
 80150f6:	4298      	cmp	r0, r3
 80150f8:	d002      	beq.n	8015100 <timer_init+0x68>
 80150fa:	4b05      	ldr	r3, [pc, #20]	; (8015110 <timer_init+0x78>)
 80150fc:	4298      	cmp	r0, r3
 80150fe:	d1ec      	bne.n	80150da <timer_init+0x42>
 8015100:	7b0b      	ldrb	r3, [r1, #12]
 8015102:	6303      	str	r3, [r0, #48]	; 0x30
 8015104:	e7e9      	b.n	80150da <timer_init+0x42>
 8015106:	bf00      	nop
 8015108:	40010000 	andmi	r0, r1, r0
 801510c:	40001000 	andmi	r1, r0, r0
 8015110:	40010400 	andmi	r0, r1, r0, lsl #8

08015114 <timer_enable>:
 8015114:	6803      	ldr	r3, [r0, #0]
 8015116:	f043 0301 	orr.w	r3, r3, #1
 801511a:	6003      	str	r3, [r0, #0]
 801511c:	4770      	bx	lr

0801511e <timer_interrupt_enable>:
 801511e:	68c3      	ldr	r3, [r0, #12]
 8015120:	4319      	orrs	r1, r3
 8015122:	60c1      	str	r1, [r0, #12]
 8015124:	4770      	bx	lr

08015126 <timer_interrupt_flag_clear>:
 8015126:	43c9      	mvns	r1, r1
 8015128:	6101      	str	r1, [r0, #16]
 801512a:	4770      	bx	lr

0801512c <timer_flag_clear>:
 801512c:	43c9      	mvns	r1, r1
 801512e:	6101      	str	r1, [r0, #16]
 8015130:	4770      	bx	lr

08015132 <timer_dma_enable>:
 8015132:	68c3      	ldr	r3, [r0, #12]
 8015134:	4319      	orrs	r1, r3
 8015136:	60c1      	str	r1, [r0, #12]
 8015138:	4770      	bx	lr
	...

0801513c <timer_channel_output_config>:
 801513c:	2903      	cmp	r1, #3
 801513e:	d83e      	bhi.n	80151be <timer_channel_output_config+0x82>
 8015140:	e8df f011 	tbh	[pc, r1, lsl #1]
 8015144:	003e0004 	eorseq	r0, lr, r4
 8015148:	00bc007d 	adcseq	r0, ip, sp, ror r0
 801514c:	6a03      	ldr	r3, [r0, #32]
 801514e:	f023 0301 	bic.w	r3, r3, #1
 8015152:	6203      	str	r3, [r0, #32]
 8015154:	6983      	ldr	r3, [r0, #24]
 8015156:	f023 0303 	bic.w	r3, r3, #3
 801515a:	6183      	str	r3, [r0, #24]
 801515c:	6a01      	ldr	r1, [r0, #32]
 801515e:	8813      	ldrh	r3, [r2, #0]
 8015160:	430b      	orrs	r3, r1
 8015162:	6203      	str	r3, [r0, #32]
 8015164:	6a03      	ldr	r3, [r0, #32]
 8015166:	f023 0302 	bic.w	r3, r3, #2
 801516a:	6203      	str	r3, [r0, #32]
 801516c:	6a01      	ldr	r1, [r0, #32]
 801516e:	8893      	ldrh	r3, [r2, #4]
 8015170:	430b      	orrs	r3, r1
 8015172:	6203      	str	r3, [r0, #32]
 8015174:	4b64      	ldr	r3, [pc, #400]	; (8015308 <timer_channel_output_config+0x1cc>)
 8015176:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 801517a:	4299      	cmp	r1, r3
 801517c:	d11f      	bne.n	80151be <timer_channel_output_config+0x82>
 801517e:	6a03      	ldr	r3, [r0, #32]
 8015180:	f023 0304 	bic.w	r3, r3, #4
 8015184:	6203      	str	r3, [r0, #32]
 8015186:	6a01      	ldr	r1, [r0, #32]
 8015188:	8853      	ldrh	r3, [r2, #2]
 801518a:	430b      	orrs	r3, r1
 801518c:	6203      	str	r3, [r0, #32]
 801518e:	6a03      	ldr	r3, [r0, #32]
 8015190:	f023 0308 	bic.w	r3, r3, #8
 8015194:	6203      	str	r3, [r0, #32]
 8015196:	6a01      	ldr	r1, [r0, #32]
 8015198:	88d3      	ldrh	r3, [r2, #6]
 801519a:	430b      	orrs	r3, r1
 801519c:	6203      	str	r3, [r0, #32]
 801519e:	6843      	ldr	r3, [r0, #4]
 80151a0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80151a4:	6043      	str	r3, [r0, #4]
 80151a6:	6841      	ldr	r1, [r0, #4]
 80151a8:	8913      	ldrh	r3, [r2, #8]
 80151aa:	430b      	orrs	r3, r1
 80151ac:	6043      	str	r3, [r0, #4]
 80151ae:	6843      	ldr	r3, [r0, #4]
 80151b0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80151b4:	6043      	str	r3, [r0, #4]
 80151b6:	6841      	ldr	r1, [r0, #4]
 80151b8:	8953      	ldrh	r3, [r2, #10]
 80151ba:	430b      	orrs	r3, r1
 80151bc:	6043      	str	r3, [r0, #4]
 80151be:	4770      	bx	lr
 80151c0:	6a03      	ldr	r3, [r0, #32]
 80151c2:	8811      	ldrh	r1, [r2, #0]
 80151c4:	f023 0310 	bic.w	r3, r3, #16
 80151c8:	6203      	str	r3, [r0, #32]
 80151ca:	6983      	ldr	r3, [r0, #24]
 80151cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80151d0:	6183      	str	r3, [r0, #24]
 80151d2:	6a03      	ldr	r3, [r0, #32]
 80151d4:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80151d8:	6203      	str	r3, [r0, #32]
 80151da:	6a03      	ldr	r3, [r0, #32]
 80151dc:	8891      	ldrh	r1, [r2, #4]
 80151de:	f023 0320 	bic.w	r3, r3, #32
 80151e2:	6203      	str	r3, [r0, #32]
 80151e4:	6a03      	ldr	r3, [r0, #32]
 80151e6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80151ea:	6203      	str	r3, [r0, #32]
 80151ec:	4b46      	ldr	r3, [pc, #280]	; (8015308 <timer_channel_output_config+0x1cc>)
 80151ee:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80151f2:	4299      	cmp	r1, r3
 80151f4:	d1e3      	bne.n	80151be <timer_channel_output_config+0x82>
 80151f6:	6a03      	ldr	r3, [r0, #32]
 80151f8:	8851      	ldrh	r1, [r2, #2]
 80151fa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80151fe:	6203      	str	r3, [r0, #32]
 8015200:	6a03      	ldr	r3, [r0, #32]
 8015202:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8015206:	6203      	str	r3, [r0, #32]
 8015208:	6a03      	ldr	r3, [r0, #32]
 801520a:	88d1      	ldrh	r1, [r2, #6]
 801520c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8015210:	6203      	str	r3, [r0, #32]
 8015212:	6a03      	ldr	r3, [r0, #32]
 8015214:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8015218:	6203      	str	r3, [r0, #32]
 801521a:	6843      	ldr	r3, [r0, #4]
 801521c:	8911      	ldrh	r1, [r2, #8]
 801521e:	8952      	ldrh	r2, [r2, #10]
 8015220:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8015224:	6043      	str	r3, [r0, #4]
 8015226:	6843      	ldr	r3, [r0, #4]
 8015228:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 801522c:	6043      	str	r3, [r0, #4]
 801522e:	6843      	ldr	r3, [r0, #4]
 8015230:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8015234:	6043      	str	r3, [r0, #4]
 8015236:	6843      	ldr	r3, [r0, #4]
 8015238:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 801523c:	e7be      	b.n	80151bc <timer_channel_output_config+0x80>
 801523e:	6a03      	ldr	r3, [r0, #32]
 8015240:	8811      	ldrh	r1, [r2, #0]
 8015242:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015246:	6203      	str	r3, [r0, #32]
 8015248:	69c3      	ldr	r3, [r0, #28]
 801524a:	f023 0303 	bic.w	r3, r3, #3
 801524e:	61c3      	str	r3, [r0, #28]
 8015250:	6a03      	ldr	r3, [r0, #32]
 8015252:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015256:	6203      	str	r3, [r0, #32]
 8015258:	6a03      	ldr	r3, [r0, #32]
 801525a:	8891      	ldrh	r1, [r2, #4]
 801525c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8015260:	6203      	str	r3, [r0, #32]
 8015262:	6a03      	ldr	r3, [r0, #32]
 8015264:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015268:	6203      	str	r3, [r0, #32]
 801526a:	4b27      	ldr	r3, [pc, #156]	; (8015308 <timer_channel_output_config+0x1cc>)
 801526c:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8015270:	4299      	cmp	r1, r3
 8015272:	d1a4      	bne.n	80151be <timer_channel_output_config+0x82>
 8015274:	6a03      	ldr	r3, [r0, #32]
 8015276:	8851      	ldrh	r1, [r2, #2]
 8015278:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801527c:	6203      	str	r3, [r0, #32]
 801527e:	6a03      	ldr	r3, [r0, #32]
 8015280:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015284:	6203      	str	r3, [r0, #32]
 8015286:	6a03      	ldr	r3, [r0, #32]
 8015288:	88d1      	ldrh	r1, [r2, #6]
 801528a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801528e:	6203      	str	r3, [r0, #32]
 8015290:	6a03      	ldr	r3, [r0, #32]
 8015292:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015296:	6203      	str	r3, [r0, #32]
 8015298:	6843      	ldr	r3, [r0, #4]
 801529a:	8911      	ldrh	r1, [r2, #8]
 801529c:	8952      	ldrh	r2, [r2, #10]
 801529e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80152a2:	6043      	str	r3, [r0, #4]
 80152a4:	6843      	ldr	r3, [r0, #4]
 80152a6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80152aa:	6043      	str	r3, [r0, #4]
 80152ac:	6843      	ldr	r3, [r0, #4]
 80152ae:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80152b2:	6043      	str	r3, [r0, #4]
 80152b4:	6843      	ldr	r3, [r0, #4]
 80152b6:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80152ba:	e77f      	b.n	80151bc <timer_channel_output_config+0x80>
 80152bc:	6a03      	ldr	r3, [r0, #32]
 80152be:	8811      	ldrh	r1, [r2, #0]
 80152c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80152c4:	6203      	str	r3, [r0, #32]
 80152c6:	69c3      	ldr	r3, [r0, #28]
 80152c8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80152cc:	61c3      	str	r3, [r0, #28]
 80152ce:	6a03      	ldr	r3, [r0, #32]
 80152d0:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80152d4:	6203      	str	r3, [r0, #32]
 80152d6:	6a03      	ldr	r3, [r0, #32]
 80152d8:	8891      	ldrh	r1, [r2, #4]
 80152da:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80152de:	6203      	str	r3, [r0, #32]
 80152e0:	6a03      	ldr	r3, [r0, #32]
 80152e2:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80152e6:	6203      	str	r3, [r0, #32]
 80152e8:	4b07      	ldr	r3, [pc, #28]	; (8015308 <timer_channel_output_config+0x1cc>)
 80152ea:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80152ee:	4299      	cmp	r1, r3
 80152f0:	f47f af65 	bne.w	80151be <timer_channel_output_config+0x82>
 80152f4:	6843      	ldr	r3, [r0, #4]
 80152f6:	8912      	ldrh	r2, [r2, #8]
 80152f8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80152fc:	6043      	str	r3, [r0, #4]
 80152fe:	6843      	ldr	r3, [r0, #4]
 8015300:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8015304:	e75a      	b.n	80151bc <timer_channel_output_config+0x80>
 8015306:	bf00      	nop
 8015308:	40010000 	andmi	r0, r1, r0

0801530c <timer_channel_output_mode_config>:
 801530c:	2903      	cmp	r1, #3
 801530e:	d81a      	bhi.n	8015346 <timer_channel_output_mode_config+0x3a>
 8015310:	e8df f001 	tbb	[pc, r1]
 8015314:	1a120a02 	bne	8497b24 <__exidx_end+0x47db18>
 8015318:	6983      	ldr	r3, [r0, #24]
 801531a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801531e:	6183      	str	r3, [r0, #24]
 8015320:	6983      	ldr	r3, [r0, #24]
 8015322:	4313      	orrs	r3, r2
 8015324:	6183      	str	r3, [r0, #24]
 8015326:	4770      	bx	lr
 8015328:	6983      	ldr	r3, [r0, #24]
 801532a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801532e:	6183      	str	r3, [r0, #24]
 8015330:	6983      	ldr	r3, [r0, #24]
 8015332:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015336:	e7f5      	b.n	8015324 <timer_channel_output_mode_config+0x18>
 8015338:	69c3      	ldr	r3, [r0, #28]
 801533a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801533e:	61c3      	str	r3, [r0, #28]
 8015340:	69c3      	ldr	r3, [r0, #28]
 8015342:	4313      	orrs	r3, r2
 8015344:	61c3      	str	r3, [r0, #28]
 8015346:	4770      	bx	lr
 8015348:	69c3      	ldr	r3, [r0, #28]
 801534a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801534e:	61c3      	str	r3, [r0, #28]
 8015350:	69c3      	ldr	r3, [r0, #28]
 8015352:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015356:	e7f5      	b.n	8015344 <timer_channel_output_mode_config+0x38>

08015358 <timer_channel_output_pulse_value_config>:
 8015358:	2903      	cmp	r1, #3
 801535a:	d80a      	bhi.n	8015372 <timer_channel_output_pulse_value_config+0x1a>
 801535c:	e8df f001 	tbb	[pc, r1]
 8015360:	08060402 	stmdaeq	r6, {r1, sl}
 8015364:	6342      	str	r2, [r0, #52]	; 0x34
 8015366:	4770      	bx	lr
 8015368:	6382      	str	r2, [r0, #56]	; 0x38
 801536a:	4770      	bx	lr
 801536c:	63c2      	str	r2, [r0, #60]	; 0x3c
 801536e:	4770      	bx	lr
 8015370:	6402      	str	r2, [r0, #64]	; 0x40
 8015372:	4770      	bx	lr

08015374 <timer_channel_output_shadow_config>:
 8015374:	2903      	cmp	r1, #3
 8015376:	d81a      	bhi.n	80153ae <timer_channel_output_shadow_config+0x3a>
 8015378:	e8df f001 	tbb	[pc, r1]
 801537c:	1a120a02 	bne	8497b8c <__exidx_end+0x47db80>
 8015380:	6983      	ldr	r3, [r0, #24]
 8015382:	f023 0308 	bic.w	r3, r3, #8
 8015386:	6183      	str	r3, [r0, #24]
 8015388:	6983      	ldr	r3, [r0, #24]
 801538a:	4313      	orrs	r3, r2
 801538c:	6183      	str	r3, [r0, #24]
 801538e:	4770      	bx	lr
 8015390:	6983      	ldr	r3, [r0, #24]
 8015392:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8015396:	6183      	str	r3, [r0, #24]
 8015398:	6983      	ldr	r3, [r0, #24]
 801539a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801539e:	e7f5      	b.n	801538c <timer_channel_output_shadow_config+0x18>
 80153a0:	69c3      	ldr	r3, [r0, #28]
 80153a2:	f023 0308 	bic.w	r3, r3, #8
 80153a6:	61c3      	str	r3, [r0, #28]
 80153a8:	69c3      	ldr	r3, [r0, #28]
 80153aa:	4313      	orrs	r3, r2
 80153ac:	61c3      	str	r3, [r0, #28]
 80153ae:	4770      	bx	lr
 80153b0:	69c3      	ldr	r3, [r0, #28]
 80153b2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80153b6:	61c3      	str	r3, [r0, #28]
 80153b8:	69c3      	ldr	r3, [r0, #28]
 80153ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80153be:	e7f5      	b.n	80153ac <timer_channel_output_shadow_config+0x38>

080153c0 <timer_input_trigger_source_select>:
 80153c0:	6883      	ldr	r3, [r0, #8]
 80153c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80153c6:	6083      	str	r3, [r0, #8]
 80153c8:	6883      	ldr	r3, [r0, #8]
 80153ca:	4319      	orrs	r1, r3
 80153cc:	6081      	str	r1, [r0, #8]
 80153ce:	4770      	bx	lr

080153d0 <timer_master_output_trigger_source_select>:
 80153d0:	6843      	ldr	r3, [r0, #4]
 80153d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80153d6:	6043      	str	r3, [r0, #4]
 80153d8:	6843      	ldr	r3, [r0, #4]
 80153da:	4319      	orrs	r1, r3
 80153dc:	6041      	str	r1, [r0, #4]
 80153de:	4770      	bx	lr

080153e0 <timer_slave_mode_select>:
 80153e0:	6883      	ldr	r3, [r0, #8]
 80153e2:	f023 0307 	bic.w	r3, r3, #7
 80153e6:	6083      	str	r3, [r0, #8]
 80153e8:	6883      	ldr	r3, [r0, #8]
 80153ea:	4319      	orrs	r1, r3
 80153ec:	6081      	str	r1, [r0, #8]
 80153ee:	4770      	bx	lr

080153f0 <timer_master_slave_mode_config>:
 80153f0:	b921      	cbnz	r1, 80153fc <timer_master_slave_mode_config+0xc>
 80153f2:	6883      	ldr	r3, [r0, #8]
 80153f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80153f8:	6083      	str	r3, [r0, #8]
 80153fa:	4770      	bx	lr
 80153fc:	2901      	cmp	r1, #1
 80153fe:	d1fc      	bne.n	80153fa <timer_master_slave_mode_config+0xa>
 8015400:	6883      	ldr	r3, [r0, #8]
 8015402:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8015406:	e7f7      	b.n	80153f8 <timer_master_slave_mode_config+0x8>

08015408 <usart_deinit>:
 8015408:	b508      	push	{r3, lr}
 801540a:	4b2d      	ldr	r3, [pc, #180]	; (80154c0 <usart_deinit+0xb8>)
 801540c:	4298      	cmp	r0, r3
 801540e:	d050      	beq.n	80154b2 <usart_deinit+0xaa>
 8015410:	d817      	bhi.n	8015442 <usart_deinit+0x3a>
 8015412:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015416:	4298      	cmp	r0, r3
 8015418:	d044      	beq.n	80154a4 <usart_deinit+0x9c>
 801541a:	d808      	bhi.n	801542e <usart_deinit+0x26>
 801541c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015420:	4298      	cmp	r0, r3
 8015422:	d02a      	beq.n	801547a <usart_deinit+0x72>
 8015424:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015428:	4298      	cmp	r0, r3
 801542a:	d02d      	beq.n	8015488 <usart_deinit+0x80>
 801542c:	bd08      	pop	{r3, pc}
 801542e:	4b25      	ldr	r3, [pc, #148]	; (80154c4 <usart_deinit+0xbc>)
 8015430:	4298      	cmp	r0, r3
 8015432:	d1fb      	bne.n	801542c <usart_deinit+0x24>
 8015434:	f640 0014 	movw	r0, #2068	; 0x814
 8015438:	f7ff fcf3 	bl	8014e22 <rcu_periph_reset_enable>
 801543c:	f640 0014 	movw	r0, #2068	; 0x814
 8015440:	e017      	b.n	8015472 <usart_deinit+0x6a>
 8015442:	4b21      	ldr	r3, [pc, #132]	; (80154c8 <usart_deinit+0xc0>)
 8015444:	4298      	cmp	r0, r3
 8015446:	d00e      	beq.n	8015466 <usart_deinit+0x5e>
 8015448:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801544c:	4298      	cmp	r0, r3
 801544e:	d022      	beq.n	8015496 <usart_deinit+0x8e>
 8015450:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8015454:	4298      	cmp	r0, r3
 8015456:	d1e9      	bne.n	801542c <usart_deinit+0x24>
 8015458:	f640 001f 	movw	r0, #2079	; 0x81f
 801545c:	f7ff fce1 	bl	8014e22 <rcu_periph_reset_enable>
 8015460:	f640 001f 	movw	r0, #2079	; 0x81f
 8015464:	e005      	b.n	8015472 <usart_deinit+0x6a>
 8015466:	f640 1004 	movw	r0, #2308	; 0x904
 801546a:	f7ff fcda 	bl	8014e22 <rcu_periph_reset_enable>
 801546e:	f640 1004 	movw	r0, #2308	; 0x904
 8015472:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015476:	f7ff bcd6 	b.w	8014e26 <rcu_periph_reset_disable>
 801547a:	f640 0011 	movw	r0, #2065	; 0x811
 801547e:	f7ff fcd0 	bl	8014e22 <rcu_periph_reset_enable>
 8015482:	f640 0011 	movw	r0, #2065	; 0x811
 8015486:	e7f4      	b.n	8015472 <usart_deinit+0x6a>
 8015488:	f640 0012 	movw	r0, #2066	; 0x812
 801548c:	f7ff fcc9 	bl	8014e22 <rcu_periph_reset_enable>
 8015490:	f640 0012 	movw	r0, #2066	; 0x812
 8015494:	e7ed      	b.n	8015472 <usart_deinit+0x6a>
 8015496:	f640 1005 	movw	r0, #2309	; 0x905
 801549a:	f7ff fcc2 	bl	8014e22 <rcu_periph_reset_enable>
 801549e:	f640 1005 	movw	r0, #2309	; 0x905
 80154a2:	e7e6      	b.n	8015472 <usart_deinit+0x6a>
 80154a4:	f640 0013 	movw	r0, #2067	; 0x813
 80154a8:	f7ff fcbb 	bl	8014e22 <rcu_periph_reset_enable>
 80154ac:	f640 0013 	movw	r0, #2067	; 0x813
 80154b0:	e7df      	b.n	8015472 <usart_deinit+0x6a>
 80154b2:	f640 001e 	movw	r0, #2078	; 0x81e
 80154b6:	f7ff fcb4 	bl	8014e22 <rcu_periph_reset_enable>
 80154ba:	f640 001e 	movw	r0, #2078	; 0x81e
 80154be:	e7d8      	b.n	8015472 <usart_deinit+0x6a>
 80154c0:	40007800 	andmi	r7, r0, r0, lsl #16
 80154c4:	40005000 	andmi	r5, r0, r0
 80154c8:	40011000 	andmi	r1, r1, r0

080154cc <usart_baudrate_set>:
 80154cc:	b538      	push	{r3, r4, r5, lr}
 80154ce:	4b1e      	ldr	r3, [pc, #120]	; (8015548 <usart_baudrate_set+0x7c>)
 80154d0:	4298      	cmp	r0, r3
 80154d2:	4604      	mov	r4, r0
 80154d4:	460d      	mov	r5, r1
 80154d6:	d02e      	beq.n	8015536 <usart_baudrate_set+0x6a>
 80154d8:	d821      	bhi.n	801551e <usart_baudrate_set+0x52>
 80154da:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80154de:	4298      	cmp	r0, r3
 80154e0:	d029      	beq.n	8015536 <usart_baudrate_set+0x6a>
 80154e2:	d81a      	bhi.n	801551a <usart_baudrate_set+0x4e>
 80154e4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80154e8:	4298      	cmp	r0, r3
 80154ea:	d024      	beq.n	8015536 <usart_baudrate_set+0x6a>
 80154ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80154f0:	429c      	cmp	r4, r3
 80154f2:	d020      	beq.n	8015536 <usart_baudrate_set+0x6a>
 80154f4:	2000      	movs	r0, #0
 80154f6:	68e2      	ldr	r2, [r4, #12]
 80154f8:	0412      	lsls	r2, r2, #16
 80154fa:	ea4f 0355 	mov.w	r3, r5, lsr #1
 80154fe:	d51c      	bpl.n	801553a <usart_baudrate_set+0x6e>
 8015500:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8015504:	fbb3 f1f5 	udiv	r1, r3, r5
 8015508:	f3c1 0342 	ubfx	r3, r1, #1, #3
 801550c:	f021 010f 	bic.w	r1, r1, #15
 8015510:	0409      	lsls	r1, r1, #16
 8015512:	0c09      	lsrs	r1, r1, #16
 8015514:	430b      	orrs	r3, r1
 8015516:	60a3      	str	r3, [r4, #8]
 8015518:	bd38      	pop	{r3, r4, r5, pc}
 801551a:	4b0c      	ldr	r3, [pc, #48]	; (801554c <usart_baudrate_set+0x80>)
 801551c:	e7e8      	b.n	80154f0 <usart_baudrate_set+0x24>
 801551e:	4b0c      	ldr	r3, [pc, #48]	; (8015550 <usart_baudrate_set+0x84>)
 8015520:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8015524:	429a      	cmp	r2, r3
 8015526:	d002      	beq.n	801552e <usart_baudrate_set+0x62>
 8015528:	f5a3 4314 	sub.w	r3, r3, #37888	; 0x9400
 801552c:	e7e0      	b.n	80154f0 <usart_baudrate_set+0x24>
 801552e:	2003      	movs	r0, #3
 8015530:	f7ff fc98 	bl	8014e64 <rcu_clock_freq_get>
 8015534:	e7df      	b.n	80154f6 <usart_baudrate_set+0x2a>
 8015536:	2002      	movs	r0, #2
 8015538:	e7fa      	b.n	8015530 <usart_baudrate_set+0x64>
 801553a:	4403      	add	r3, r0
 801553c:	fbb3 f1f5 	udiv	r1, r3, r5
 8015540:	b289      	uxth	r1, r1
 8015542:	60a1      	str	r1, [r4, #8]
 8015544:	e7e8      	b.n	8015518 <usart_baudrate_set+0x4c>
 8015546:	bf00      	nop
 8015548:	40007800 	andmi	r7, r0, r0, lsl #16
 801554c:	40005000 	andmi	r5, r0, r0
 8015550:	40011000 	andmi	r1, r1, r0

08015554 <usart_parity_config>:
 8015554:	68c3      	ldr	r3, [r0, #12]
 8015556:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801555a:	60c3      	str	r3, [r0, #12]
 801555c:	68c3      	ldr	r3, [r0, #12]
 801555e:	4319      	orrs	r1, r3
 8015560:	60c1      	str	r1, [r0, #12]
 8015562:	4770      	bx	lr

08015564 <usart_word_length_set>:
 8015564:	68c3      	ldr	r3, [r0, #12]
 8015566:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801556a:	60c3      	str	r3, [r0, #12]
 801556c:	68c3      	ldr	r3, [r0, #12]
 801556e:	4319      	orrs	r1, r3
 8015570:	60c1      	str	r1, [r0, #12]
 8015572:	4770      	bx	lr

08015574 <usart_stop_bit_set>:
 8015574:	6903      	ldr	r3, [r0, #16]
 8015576:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801557a:	6103      	str	r3, [r0, #16]
 801557c:	6903      	ldr	r3, [r0, #16]
 801557e:	4319      	orrs	r1, r3
 8015580:	6101      	str	r1, [r0, #16]
 8015582:	4770      	bx	lr

08015584 <usart_transmit_config>:
 8015584:	68c3      	ldr	r3, [r0, #12]
 8015586:	f023 0308 	bic.w	r3, r3, #8
 801558a:	4319      	orrs	r1, r3
 801558c:	60c1      	str	r1, [r0, #12]
 801558e:	4770      	bx	lr

08015590 <usart_receive_config>:
 8015590:	68c3      	ldr	r3, [r0, #12]
 8015592:	f023 0304 	bic.w	r3, r3, #4
 8015596:	4319      	orrs	r1, r3
 8015598:	60c1      	str	r1, [r0, #12]
 801559a:	4770      	bx	lr

0801559c <usart_hardware_flow_rts_config>:
 801559c:	6943      	ldr	r3, [r0, #20]
 801559e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80155a2:	4319      	orrs	r1, r3
 80155a4:	6141      	str	r1, [r0, #20]
 80155a6:	4770      	bx	lr

080155a8 <usart_hardware_flow_cts_config>:
 80155a8:	6943      	ldr	r3, [r0, #20]
 80155aa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80155ae:	4319      	orrs	r1, r3
 80155b0:	6141      	str	r1, [r0, #20]
 80155b2:	4770      	bx	lr

080155b4 <usart_dma_transmit_config>:
 80155b4:	6943      	ldr	r3, [r0, #20]
 80155b6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80155ba:	4319      	orrs	r1, r3
 80155bc:	6141      	str	r1, [r0, #20]
 80155be:	4770      	bx	lr

080155c0 <usart_flag_get>:
 80155c0:	098b      	lsrs	r3, r1, #6
 80155c2:	f001 011f 	and.w	r1, r1, #31
 80155c6:	581a      	ldr	r2, [r3, r0]
 80155c8:	2301      	movs	r3, #1
 80155ca:	408b      	lsls	r3, r1
 80155cc:	4213      	tst	r3, r2
 80155ce:	bf14      	ite	ne
 80155d0:	2001      	movne	r0, #1
 80155d2:	2000      	moveq	r0, #0
 80155d4:	4770      	bx	lr

080155d6 <usart_flag_clear>:
 80155d6:	b510      	push	{r4, lr}
 80155d8:	098c      	lsrs	r4, r1, #6
 80155da:	2201      	movs	r2, #1
 80155dc:	5823      	ldr	r3, [r4, r0]
 80155de:	f001 011f 	and.w	r1, r1, #31
 80155e2:	408a      	lsls	r2, r1
 80155e4:	ea23 0302 	bic.w	r3, r3, r2
 80155e8:	5023      	str	r3, [r4, r0]
 80155ea:	bd10      	pop	{r4, pc}

080155ec <usart_interrupt_enable>:
 80155ec:	098a      	lsrs	r2, r1, #6
 80155ee:	b510      	push	{r4, lr}
 80155f0:	f001 011f 	and.w	r1, r1, #31
 80155f4:	5814      	ldr	r4, [r2, r0]
 80155f6:	2301      	movs	r3, #1
 80155f8:	408b      	lsls	r3, r1
 80155fa:	4323      	orrs	r3, r4
 80155fc:	5013      	str	r3, [r2, r0]
 80155fe:	bd10      	pop	{r4, pc}

08015600 <usart_interrupt_disable>:
 8015600:	f7ff bfe9 	b.w	80155d6 <usart_flag_clear>

08015604 <usart_interrupt_flag_clear>:
 8015604:	b510      	push	{r4, lr}
 8015606:	0d8c      	lsrs	r4, r1, #22
 8015608:	2201      	movs	r2, #1
 801560a:	5823      	ldr	r3, [r4, r0]
 801560c:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8015610:	408a      	lsls	r2, r1
 8015612:	ea23 0302 	bic.w	r3, r3, r2
 8015616:	5023      	str	r3, [r4, r0]
 8015618:	bd10      	pop	{r4, pc}
	...

0801561c <emac_eth_recv>:
 801561c:	b538      	push	{r3, r4, r5, lr}
 801561e:	4605      	mov	r5, r0
 8015620:	f001 f9c4 	bl	80169ac <enet_rxframe_size_get>
 8015624:	4604      	mov	r4, r0
 8015626:	b138      	cbz	r0, 8015638 <emac_eth_recv+0x1c>
 8015628:	4b05      	ldr	r3, [pc, #20]	; (8015640 <emac_eth_recv+0x24>)
 801562a:	2105      	movs	r1, #5
 801562c:	6818      	ldr	r0, [r3, #0]
 801562e:	f001 f961 	bl	80168f4 <enet_desc_information_get>
 8015632:	6028      	str	r0, [r5, #0]
 8015634:	4620      	mov	r0, r4
 8015636:	bd38      	pop	{r3, r4, r5, pc}
 8015638:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801563c:	e7fb      	b.n	8015636 <emac_eth_recv+0x1a>
 801563e:	bf00      	nop
 8015640:	2000ff0c 	andcs	pc, r0, ip, lsl #30

08015644 <emac_free_pkt>:
 8015644:	2100      	movs	r1, #0
 8015646:	4608      	mov	r0, r1
 8015648:	f000 be70 	b.w	801632c <enet_frame_receive>

0801564c <emac_eth_send>:
 801564c:	f000 beba 	b.w	80163c4 <enet_frame_transmit>

08015650 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 8015650:	2801      	cmp	r0, #1
 8015652:	bf9c      	itt	ls
 8015654:	4b01      	ldrls	r3, [pc, #4]	; (801565c <bkp_data_write(bkp_data_register_enum, unsigned short)+0xc>)
 8015656:	f823 1010 	strhls.w	r1, [r3, r0, lsl #1]
 801565a:	4770      	bx	lr
 801565c:	40024010 	andmi	r4, r2, r0, lsl r0

08015660 <bkp_data_read(bkp_data_register_enum)>:
 8015660:	2801      	cmp	r0, #1
 8015662:	bf9d      	ittte	ls
 8015664:	4b02      	ldrls	r3, [pc, #8]	; (8015670 <bkp_data_read(bkp_data_register_enum)+0x10>)
 8015666:	f833 0010 	ldrhls.w	r0, [r3, r0, lsl #1]
 801566a:	b280      	uxthls	r0, r0
 801566c:	2000      	movhi	r0, #0
 801566e:	4770      	bx	lr
 8015670:	40024010 	andmi	r4, r2, r0, lsl r0

08015674 <gd32_adc_init()>:
 8015674:	b510      	push	{r4, lr}
 8015676:	f241 1008 	movw	r0, #4360	; 0x1108
 801567a:	4c24      	ldr	r4, [pc, #144]	; (801570c <gd32_adc_init()+0x98>)
 801567c:	f7ff fbb6 	bl	8014dec <rcu_periph_clock_enable>
 8015680:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8015684:	f000 fcf8 	bl	8016078 <adc_clock_config>
 8015688:	4620      	mov	r0, r4
 801568a:	2203      	movs	r2, #3
 801568c:	2102      	movs	r1, #2
 801568e:	f000 fd75 	bl	801617c <adc_channel_length_config>
 8015692:	4620      	mov	r0, r4
 8015694:	2306      	movs	r3, #6
 8015696:	2210      	movs	r2, #16
 8015698:	2100      	movs	r1, #0
 801569a:	f000 fd8c 	bl	80161b6 <adc_inserted_channel_config>
 801569e:	4620      	mov	r0, r4
 80156a0:	2306      	movs	r3, #6
 80156a2:	2211      	movs	r2, #17
 80156a4:	2101      	movs	r1, #1
 80156a6:	f000 fd86 	bl	80161b6 <adc_inserted_channel_config>
 80156aa:	2306      	movs	r3, #6
 80156ac:	4620      	mov	r0, r4
 80156ae:	2212      	movs	r2, #18
 80156b0:	2102      	movs	r1, #2
 80156b2:	f000 fd80 	bl	80161b6 <adc_inserted_channel_config>
 80156b6:	2200      	movs	r2, #0
 80156b8:	4620      	mov	r0, r4
 80156ba:	2102      	movs	r1, #2
 80156bc:	f000 fdaa 	bl	8016214 <adc_external_trigger_config>
 80156c0:	4620      	mov	r0, r4
 80156c2:	2100      	movs	r1, #0
 80156c4:	f000 fd10 	bl	80160e8 <adc_data_alignment_config>
 80156c8:	2201      	movs	r2, #1
 80156ca:	4620      	mov	r0, r4
 80156cc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80156d0:	f000 fce2 	bl	8016098 <adc_special_function_config>
 80156d4:	2101      	movs	r1, #1
 80156d6:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80156da:	f000 fd27 	bl	801612c <adc_channel_16_to_18>
 80156de:	2101      	movs	r1, #1
 80156e0:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80156e4:	f000 fd22 	bl	801612c <adc_channel_16_to_18>
 80156e8:	4620      	mov	r0, r4
 80156ea:	f000 fd06 	bl	80160fa <adc_enable>
 80156ee:	2100      	movs	r1, #0
 80156f0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80156f4:	f000 fb80 	bl	8015df8 <udelay(unsigned int, unsigned int)>
 80156f8:	4620      	mov	r0, r4
 80156fa:	f000 fd06 	bl	801610a <adc_calibration_enable>
 80156fe:	4620      	mov	r0, r4
 8015700:	2102      	movs	r1, #2
 8015702:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015706:	f000 bd9b 	b.w	8016240 <adc_software_trigger_enable>
 801570a:	bf00      	nop
 801570c:	40012000 	andmi	r2, r1, r0

08015710 <_stop() [clone .isra.0]>:
 8015710:	b508      	push	{r3, lr}
 8015712:	4806      	ldr	r0, [pc, #24]	; (801572c <_stop() [clone .isra.0]+0x1c>)
 8015714:	f001 fa12 	bl	8016b3c <i2c_stop_on_bus>
 8015718:	4905      	ldr	r1, [pc, #20]	; (8015730 <_stop() [clone .isra.0]+0x20>)
 801571a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801571e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8015722:	0592      	lsls	r2, r2, #22
 8015724:	d501      	bpl.n	801572a <_stop() [clone .isra.0]+0x1a>
 8015726:	3b01      	subs	r3, #1
 8015728:	d1f9      	bne.n	801571e <_stop() [clone .isra.0]+0xe>
 801572a:	bd08      	pop	{r3, pc}
 801572c:	40005400 	andmi	r5, r0, r0, lsl #8
 8015730:	40005000 	andmi	r5, r0, r0

08015734 <gd32_i2c_begin>:
 8015734:	b508      	push	{r3, lr}
 8015736:	f241 0015 	movw	r0, #4117	; 0x1015
 801573a:	f7ff fb57 	bl	8014dec <rcu_periph_clock_enable>
 801573e:	f640 4001 	movw	r0, #3073	; 0xc01
 8015742:	f7ff fb53 	bl	8014dec <rcu_periph_clock_enable>
 8015746:	f640 4001 	movw	r0, #3073	; 0xc01
 801574a:	f7ff fb4f 	bl	8014dec <rcu_periph_clock_enable>
 801574e:	481b      	ldr	r0, [pc, #108]	; (80157bc <gd32_i2c_begin+0x88>)
 8015750:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015754:	2104      	movs	r1, #4
 8015756:	f7ff fb08 	bl	8014d6a <gpio_af_set>
 801575a:	4818      	ldr	r0, [pc, #96]	; (80157bc <gd32_i2c_begin+0x88>)
 801575c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8015760:	2104      	movs	r1, #4
 8015762:	f7ff fb02 	bl	8014d6a <gpio_af_set>
 8015766:	4815      	ldr	r0, [pc, #84]	; (80157bc <gd32_i2c_begin+0x88>)
 8015768:	f44f 7380 	mov.w	r3, #256	; 0x100
 801576c:	2201      	movs	r2, #1
 801576e:	2102      	movs	r1, #2
 8015770:	f7ff fac0 	bl	8014cf4 <gpio_mode_set>
 8015774:	4811      	ldr	r0, [pc, #68]	; (80157bc <gd32_i2c_begin+0x88>)
 8015776:	f44f 7380 	mov.w	r3, #256	; 0x100
 801577a:	2202      	movs	r2, #2
 801577c:	2101      	movs	r1, #1
 801577e:	f7ff fad9 	bl	8014d34 <gpio_output_options_set>
 8015782:	480e      	ldr	r0, [pc, #56]	; (80157bc <gd32_i2c_begin+0x88>)
 8015784:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015788:	2201      	movs	r2, #1
 801578a:	2102      	movs	r1, #2
 801578c:	f7ff fab2 	bl	8014cf4 <gpio_mode_set>
 8015790:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015794:	4809      	ldr	r0, [pc, #36]	; (80157bc <gd32_i2c_begin+0x88>)
 8015796:	2202      	movs	r2, #2
 8015798:	2101      	movs	r1, #1
 801579a:	f7ff facb 	bl	8014d34 <gpio_output_options_set>
 801579e:	4908      	ldr	r1, [pc, #32]	; (80157c0 <gd32_i2c_begin+0x8c>)
 80157a0:	4808      	ldr	r0, [pc, #32]	; (80157c4 <gd32_i2c_begin+0x90>)
 80157a2:	2200      	movs	r2, #0
 80157a4:	f001 f94a 	bl	8016a3c <i2c_clock_config>
 80157a8:	4806      	ldr	r0, [pc, #24]	; (80157c4 <gd32_i2c_begin+0x90>)
 80157aa:	f001 f9bd 	bl	8016b28 <i2c_enable>
 80157ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80157b2:	4804      	ldr	r0, [pc, #16]	; (80157c4 <gd32_i2c_begin+0x90>)
 80157b4:	2101      	movs	r1, #1
 80157b6:	f001 b99d 	b.w	8016af4 <i2c_ack_config>
 80157ba:	bf00      	nop
 80157bc:	40020400 	andmi	r0, r2, r0, lsl #8
 80157c0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80157c4:	40005400 	andmi	r5, r0, r0, lsl #8

080157c8 <gd32_i2c_set_baudrate>:
 80157c8:	4601      	mov	r1, r0
 80157ca:	2200      	movs	r2, #0
 80157cc:	4801      	ldr	r0, [pc, #4]	; (80157d4 <gd32_i2c_set_baudrate+0xc>)
 80157ce:	f001 b935 	b.w	8016a3c <i2c_clock_config>
 80157d2:	bf00      	nop
 80157d4:	40005400 	andmi	r5, r0, r0, lsl #8

080157d8 <gd32_i2c_set_address>:
 80157d8:	4b01      	ldr	r3, [pc, #4]	; (80157e0 <gd32_i2c_set_address+0x8>)
 80157da:	0040      	lsls	r0, r0, #1
 80157dc:	7018      	strb	r0, [r3, #0]
 80157de:	4770      	bx	lr
 80157e0:	2000ff00 	andcs	pc, r0, r0, lsl #30

080157e4 <gd32_i2c_write>:
 80157e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80157e6:	4e30      	ldr	r6, [pc, #192]	; (80158a8 <gd32_i2c_write+0xc4>)
 80157e8:	4604      	mov	r4, r0
 80157ea:	460f      	mov	r7, r1
 80157ec:	f640 75ff 	movw	r5, #4095	; 0xfff
 80157f0:	f240 6101 	movw	r1, #1537	; 0x601
 80157f4:	4630      	mov	r0, r6
 80157f6:	f001 f9ab 	bl	8016b50 <i2c_flag_get>
 80157fa:	b9b0      	cbnz	r0, 801582a <gd32_i2c_write+0x46>
 80157fc:	482a      	ldr	r0, [pc, #168]	; (80158a8 <gd32_i2c_write+0xc4>)
 80157fe:	4e2a      	ldr	r6, [pc, #168]	; (80158a8 <gd32_i2c_write+0xc4>)
 8015800:	f001 f997 	bl	8016b32 <i2c_start_on_bus>
 8015804:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015808:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801580c:	4630      	mov	r0, r6
 801580e:	f001 f99f 	bl	8016b50 <i2c_flag_get>
 8015812:	b190      	cbz	r0, 801583a <gd32_i2c_write+0x56>
 8015814:	4b25      	ldr	r3, [pc, #148]	; (80158ac <gd32_i2c_write+0xc8>)
 8015816:	4824      	ldr	r0, [pc, #144]	; (80158a8 <gd32_i2c_write+0xc4>)
 8015818:	7819      	ldrb	r1, [r3, #0]
 801581a:	4e23      	ldr	r6, [pc, #140]	; (80158a8 <gd32_i2c_write+0xc4>)
 801581c:	f06f 0201 	mvn.w	r2, #1
 8015820:	f001 f97a 	bl	8016b18 <i2c_master_addressing>
 8015824:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015828:	e00c      	b.n	8015844 <gd32_i2c_write+0x60>
 801582a:	3d01      	subs	r5, #1
 801582c:	d1e0      	bne.n	80157f0 <gd32_i2c_write+0xc>
 801582e:	f7ff ff6f 	bl	8015710 <_stop() [clone .isra.0]>
 8015832:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015836:	4240      	negs	r0, r0
 8015838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801583a:	3d01      	subs	r5, #1
 801583c:	d1e4      	bne.n	8015808 <gd32_i2c_write+0x24>
 801583e:	e7f6      	b.n	801582e <gd32_i2c_write+0x4a>
 8015840:	3d01      	subs	r5, #1
 8015842:	d0f4      	beq.n	801582e <gd32_i2c_write+0x4a>
 8015844:	f240 5101 	movw	r1, #1281	; 0x501
 8015848:	4630      	mov	r0, r6
 801584a:	f001 f981 	bl	8016b50 <i2c_flag_get>
 801584e:	2800      	cmp	r0, #0
 8015850:	d0f6      	beq.n	8015840 <gd32_i2c_write+0x5c>
 8015852:	4815      	ldr	r0, [pc, #84]	; (80158a8 <gd32_i2c_write+0xc4>)
 8015854:	4e14      	ldr	r6, [pc, #80]	; (80158a8 <gd32_i2c_write+0xc4>)
 8015856:	f240 5101 	movw	r1, #1281	; 0x501
 801585a:	f001 f984 	bl	8016b66 <i2c_flag_clear>
 801585e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015862:	f240 5107 	movw	r1, #1287	; 0x507
 8015866:	4630      	mov	r0, r6
 8015868:	f001 f972 	bl	8016b50 <i2c_flag_get>
 801586c:	2801      	cmp	r0, #1
 801586e:	d107      	bne.n	8015880 <gd32_i2c_write+0x9c>
 8015870:	4e0d      	ldr	r6, [pc, #52]	; (80158a8 <gd32_i2c_write+0xc4>)
 8015872:	4427      	add	r7, r4
 8015874:	42a7      	cmp	r7, r4
 8015876:	d106      	bne.n	8015886 <gd32_i2c_write+0xa2>
 8015878:	f7ff ff4a 	bl	8015710 <_stop() [clone .isra.0]>
 801587c:	2000      	movs	r0, #0
 801587e:	e7da      	b.n	8015836 <gd32_i2c_write+0x52>
 8015880:	3d01      	subs	r5, #1
 8015882:	d1ee      	bne.n	8015862 <gd32_i2c_write+0x7e>
 8015884:	e7d3      	b.n	801582e <gd32_i2c_write+0x4a>
 8015886:	f814 1b01 	ldrb.w	r1, [r4], #1
 801588a:	4630      	mov	r0, r6
 801588c:	f001 f95b 	bl	8016b46 <i2c_data_transmit>
 8015890:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015894:	f240 5102 	movw	r1, #1282	; 0x502
 8015898:	4630      	mov	r0, r6
 801589a:	f001 f959 	bl	8016b50 <i2c_flag_get>
 801589e:	2800      	cmp	r0, #0
 80158a0:	d1e8      	bne.n	8015874 <gd32_i2c_write+0x90>
 80158a2:	3d01      	subs	r5, #1
 80158a4:	d1f6      	bne.n	8015894 <gd32_i2c_write+0xb0>
 80158a6:	e7c2      	b.n	801582e <gd32_i2c_write+0x4a>
 80158a8:	40005400 	andmi	r5, r0, r0, lsl #8
 80158ac:	2000ff00 	andcs	pc, r0, r0, lsl #30

080158b0 <gd32_i2c_read>:
 80158b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80158b4:	4f4d      	ldr	r7, [pc, #308]	; (80159ec <gd32_i2c_read+0x13c>)
 80158b6:	4680      	mov	r8, r0
 80158b8:	460c      	mov	r4, r1
 80158ba:	f640 76ff 	movw	r6, #4095	; 0xfff
 80158be:	f240 6101 	movw	r1, #1537	; 0x601
 80158c2:	4638      	mov	r0, r7
 80158c4:	f001 f944 	bl	8016b50 <i2c_flag_get>
 80158c8:	4605      	mov	r5, r0
 80158ca:	bb08      	cbnz	r0, 8015910 <gd32_i2c_read+0x60>
 80158cc:	2c02      	cmp	r4, #2
 80158ce:	d103      	bne.n	80158d8 <gd32_i2c_read+0x28>
 80158d0:	4601      	mov	r1, r0
 80158d2:	4846      	ldr	r0, [pc, #280]	; (80159ec <gd32_i2c_read+0x13c>)
 80158d4:	f001 f917 	bl	8016b06 <i2c_ackpos_config>
 80158d8:	4844      	ldr	r0, [pc, #272]	; (80159ec <gd32_i2c_read+0x13c>)
 80158da:	4f44      	ldr	r7, [pc, #272]	; (80159ec <gd32_i2c_read+0x13c>)
 80158dc:	f001 f929 	bl	8016b32 <i2c_start_on_bus>
 80158e0:	f640 76ff 	movw	r6, #4095	; 0xfff
 80158e4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80158e8:	4638      	mov	r0, r7
 80158ea:	f001 f931 	bl	8016b50 <i2c_flag_get>
 80158ee:	b1a8      	cbz	r0, 801591c <gd32_i2c_read+0x6c>
 80158f0:	4b3f      	ldr	r3, [pc, #252]	; (80159f0 <gd32_i2c_read+0x140>)
 80158f2:	483e      	ldr	r0, [pc, #248]	; (80159ec <gd32_i2c_read+0x13c>)
 80158f4:	7819      	ldrb	r1, [r3, #0]
 80158f6:	2201      	movs	r2, #1
 80158f8:	f001 f90e 	bl	8016b18 <i2c_master_addressing>
 80158fc:	2c02      	cmp	r4, #2
 80158fe:	d803      	bhi.n	8015908 <gd32_i2c_read+0x58>
 8015900:	483a      	ldr	r0, [pc, #232]	; (80159ec <gd32_i2c_read+0x13c>)
 8015902:	2100      	movs	r1, #0
 8015904:	f001 f8f6 	bl	8016af4 <i2c_ack_config>
 8015908:	4f38      	ldr	r7, [pc, #224]	; (80159ec <gd32_i2c_read+0x13c>)
 801590a:	f640 76ff 	movw	r6, #4095	; 0xfff
 801590e:	e00a      	b.n	8015926 <gd32_i2c_read+0x76>
 8015910:	3e01      	subs	r6, #1
 8015912:	d1d4      	bne.n	80158be <gd32_i2c_read+0xe>
 8015914:	f7ff fefc 	bl	8015710 <_stop() [clone .isra.0]>
 8015918:	2504      	movs	r5, #4
 801591a:	e04d      	b.n	80159b8 <gd32_i2c_read+0x108>
 801591c:	3e01      	subs	r6, #1
 801591e:	d1e1      	bne.n	80158e4 <gd32_i2c_read+0x34>
 8015920:	e7f8      	b.n	8015914 <gd32_i2c_read+0x64>
 8015922:	3e01      	subs	r6, #1
 8015924:	d0f6      	beq.n	8015914 <gd32_i2c_read+0x64>
 8015926:	f240 5101 	movw	r1, #1281	; 0x501
 801592a:	4638      	mov	r0, r7
 801592c:	f001 f910 	bl	8016b50 <i2c_flag_get>
 8015930:	2800      	cmp	r0, #0
 8015932:	d0f6      	beq.n	8015922 <gd32_i2c_read+0x72>
 8015934:	482d      	ldr	r0, [pc, #180]	; (80159ec <gd32_i2c_read+0x13c>)
 8015936:	f240 5101 	movw	r1, #1281	; 0x501
 801593a:	f001 f914 	bl	8016b66 <i2c_flag_clear>
 801593e:	2c01      	cmp	r4, #1
 8015940:	d102      	bne.n	8015948 <gd32_i2c_read+0x98>
 8015942:	482a      	ldr	r0, [pc, #168]	; (80159ec <gd32_i2c_read+0x13c>)
 8015944:	f001 f8fa 	bl	8016b3c <i2c_stop_on_bus>
 8015948:	4e28      	ldr	r6, [pc, #160]	; (80159ec <gd32_i2c_read+0x13c>)
 801594a:	f640 77ff 	movw	r7, #4095	; 0xfff
 801594e:	e022      	b.n	8015996 <gd32_i2c_read+0xe6>
 8015950:	2c03      	cmp	r4, #3
 8015952:	d134      	bne.n	80159be <gd32_i2c_read+0x10e>
 8015954:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015958:	e002      	b.n	8015960 <gd32_i2c_read+0xb0>
 801595a:	f1b9 0901 	subs.w	r9, r9, #1
 801595e:	d0d9      	beq.n	8015914 <gd32_i2c_read+0x64>
 8015960:	f240 5102 	movw	r1, #1282	; 0x502
 8015964:	4630      	mov	r0, r6
 8015966:	f001 f8f3 	bl	8016b50 <i2c_flag_get>
 801596a:	2800      	cmp	r0, #0
 801596c:	d0f5      	beq.n	801595a <gd32_i2c_read+0xaa>
 801596e:	2100      	movs	r1, #0
 8015970:	4630      	mov	r0, r6
 8015972:	f001 f8bf 	bl	8016af4 <i2c_ack_config>
 8015976:	f240 5106 	movw	r1, #1286	; 0x506
 801597a:	4630      	mov	r0, r6
 801597c:	f001 f8e8 	bl	8016b50 <i2c_flag_get>
 8015980:	b138      	cbz	r0, 8015992 <gd32_i2c_read+0xe2>
 8015982:	4630      	mov	r0, r6
 8015984:	f001 f8e1 	bl	8016b4a <i2c_data_receive>
 8015988:	f808 0b01 	strb.w	r0, [r8], #1
 801598c:	3c01      	subs	r4, #1
 801598e:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015992:	3f01      	subs	r7, #1
 8015994:	d0be      	beq.n	8015914 <gd32_i2c_read+0x64>
 8015996:	2c00      	cmp	r4, #0
 8015998:	d1da      	bne.n	8015950 <gd32_i2c_read+0xa0>
 801599a:	4916      	ldr	r1, [pc, #88]	; (80159f4 <gd32_i2c_read+0x144>)
 801599c:	f640 73ff 	movw	r3, #4095	; 0xfff
 80159a0:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80159a4:	0592      	lsls	r2, r2, #22
 80159a6:	d41d      	bmi.n	80159e4 <gd32_i2c_read+0x134>
 80159a8:	4810      	ldr	r0, [pc, #64]	; (80159ec <gd32_i2c_read+0x13c>)
 80159aa:	2101      	movs	r1, #1
 80159ac:	f001 f8a2 	bl	8016af4 <i2c_ack_config>
 80159b0:	480e      	ldr	r0, [pc, #56]	; (80159ec <gd32_i2c_read+0x13c>)
 80159b2:	2101      	movs	r1, #1
 80159b4:	f001 f8a7 	bl	8016b06 <i2c_ackpos_config>
 80159b8:	4628      	mov	r0, r5
 80159ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80159be:	2c02      	cmp	r4, #2
 80159c0:	d1d9      	bne.n	8015976 <gd32_i2c_read+0xc6>
 80159c2:	f640 79ff 	movw	r9, #4095	; 0xfff
 80159c6:	e002      	b.n	80159ce <gd32_i2c_read+0x11e>
 80159c8:	f1b9 0901 	subs.w	r9, r9, #1
 80159cc:	d0a2      	beq.n	8015914 <gd32_i2c_read+0x64>
 80159ce:	f240 5102 	movw	r1, #1282	; 0x502
 80159d2:	4630      	mov	r0, r6
 80159d4:	f001 f8bc 	bl	8016b50 <i2c_flag_get>
 80159d8:	2800      	cmp	r0, #0
 80159da:	d0f5      	beq.n	80159c8 <gd32_i2c_read+0x118>
 80159dc:	4630      	mov	r0, r6
 80159de:	f001 f8ad 	bl	8016b3c <i2c_stop_on_bus>
 80159e2:	e7c8      	b.n	8015976 <gd32_i2c_read+0xc6>
 80159e4:	3b01      	subs	r3, #1
 80159e6:	d1db      	bne.n	80159a0 <gd32_i2c_read+0xf0>
 80159e8:	e796      	b.n	8015918 <gd32_i2c_read+0x68>
 80159ea:	bf00      	nop
 80159ec:	40005400 	andmi	r5, r0, r0, lsl #8
 80159f0:	2000ff00 	andcs	pc, r0, r0, lsl #30
 80159f4:	40005000 	andmi	r5, r0, r0

080159f8 <_gpio_init(unsigned int)>:
 80159f8:	4b96      	ldr	r3, [pc, #600]	; (8015c54 <_gpio_init(unsigned int)+0x25c>)
 80159fa:	4298      	cmp	r0, r3
 80159fc:	b510      	push	{r4, lr}
 80159fe:	f000 8104 	beq.w	8015c0a <_gpio_init(unsigned int)+0x212>
 8015a02:	d831      	bhi.n	8015a68 <_gpio_init(unsigned int)+0x70>
 8015a04:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015a08:	4298      	cmp	r0, r3
 8015a0a:	f000 8098 	beq.w	8015b3e <_gpio_init(unsigned int)+0x146>
 8015a0e:	f200 80bd 	bhi.w	8015b8c <_gpio_init(unsigned int)+0x194>
 8015a12:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015a16:	4298      	cmp	r0, r3
 8015a18:	d070      	beq.n	8015afc <_gpio_init(unsigned int)+0x104>
 8015a1a:	488f      	ldr	r0, [pc, #572]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a1c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015a20:	2107      	movs	r1, #7
 8015a22:	f7ff f9a2 	bl	8014d6a <gpio_af_set>
 8015a26:	488c      	ldr	r0, [pc, #560]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a28:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015a2c:	2201      	movs	r2, #1
 8015a2e:	2102      	movs	r1, #2
 8015a30:	f7ff f960 	bl	8014cf4 <gpio_mode_set>
 8015a34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015a38:	4887      	ldr	r0, [pc, #540]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a3a:	2202      	movs	r2, #2
 8015a3c:	2100      	movs	r1, #0
 8015a3e:	f7ff f979 	bl	8014d34 <gpio_output_options_set>
 8015a42:	4885      	ldr	r0, [pc, #532]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a44:	f44f 7200 	mov.w	r2, #512	; 0x200
 8015a48:	2107      	movs	r1, #7
 8015a4a:	f7ff f98e 	bl	8014d6a <gpio_af_set>
 8015a4e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015a52:	4881      	ldr	r0, [pc, #516]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a54:	2201      	movs	r2, #1
 8015a56:	2102      	movs	r1, #2
 8015a58:	f7ff f94c 	bl	8014cf4 <gpio_mode_set>
 8015a5c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015a60:	487d      	ldr	r0, [pc, #500]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015a62:	2202      	movs	r2, #2
 8015a64:	2100      	movs	r1, #0
 8015a66:	e045      	b.n	8015af4 <_gpio_init(unsigned int)+0xfc>
 8015a68:	4b7c      	ldr	r3, [pc, #496]	; (8015c5c <_gpio_init(unsigned int)+0x264>)
 8015a6a:	4298      	cmp	r0, r3
 8015a6c:	d022      	beq.n	8015ab4 <_gpio_init(unsigned int)+0xbc>
 8015a6e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015a72:	4298      	cmp	r0, r3
 8015a74:	f000 80ab 	beq.w	8015bce <_gpio_init(unsigned int)+0x1d6>
 8015a78:	4879      	ldr	r0, [pc, #484]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015a7a:	2202      	movs	r2, #2
 8015a7c:	2108      	movs	r1, #8
 8015a7e:	f7ff f974 	bl	8014d6a <gpio_af_set>
 8015a82:	2302      	movs	r3, #2
 8015a84:	4619      	mov	r1, r3
 8015a86:	4876      	ldr	r0, [pc, #472]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015a88:	2201      	movs	r2, #1
 8015a8a:	f7ff f933 	bl	8014cf4 <gpio_mode_set>
 8015a8e:	2302      	movs	r3, #2
 8015a90:	461a      	mov	r2, r3
 8015a92:	4873      	ldr	r0, [pc, #460]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015a94:	2100      	movs	r1, #0
 8015a96:	f7ff f94d 	bl	8014d34 <gpio_output_options_set>
 8015a9a:	4871      	ldr	r0, [pc, #452]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015a9c:	2201      	movs	r2, #1
 8015a9e:	2108      	movs	r1, #8
 8015aa0:	f7ff f963 	bl	8014d6a <gpio_af_set>
 8015aa4:	2301      	movs	r3, #1
 8015aa6:	461a      	mov	r2, r3
 8015aa8:	486d      	ldr	r0, [pc, #436]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015aaa:	2102      	movs	r1, #2
 8015aac:	f7ff f922 	bl	8014cf4 <gpio_mode_set>
 8015ab0:	2301      	movs	r3, #1
 8015ab2:	e0ca      	b.n	8015c4a <_gpio_init(unsigned int)+0x252>
 8015ab4:	486b      	ldr	r0, [pc, #428]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015ab6:	2240      	movs	r2, #64	; 0x40
 8015ab8:	2107      	movs	r1, #7
 8015aba:	f7ff f956 	bl	8014d6a <gpio_af_set>
 8015abe:	4869      	ldr	r0, [pc, #420]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015ac0:	2340      	movs	r3, #64	; 0x40
 8015ac2:	2201      	movs	r2, #1
 8015ac4:	2102      	movs	r1, #2
 8015ac6:	f7ff f915 	bl	8014cf4 <gpio_mode_set>
 8015aca:	2340      	movs	r3, #64	; 0x40
 8015acc:	4865      	ldr	r0, [pc, #404]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015ace:	2202      	movs	r2, #2
 8015ad0:	2100      	movs	r1, #0
 8015ad2:	f7ff f92f 	bl	8014d34 <gpio_output_options_set>
 8015ad6:	4863      	ldr	r0, [pc, #396]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015ad8:	2280      	movs	r2, #128	; 0x80
 8015ada:	2107      	movs	r1, #7
 8015adc:	f7ff f945 	bl	8014d6a <gpio_af_set>
 8015ae0:	4860      	ldr	r0, [pc, #384]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015ae2:	2380      	movs	r3, #128	; 0x80
 8015ae4:	2201      	movs	r2, #1
 8015ae6:	2102      	movs	r1, #2
 8015ae8:	f7ff f904 	bl	8014cf4 <gpio_mode_set>
 8015aec:	485d      	ldr	r0, [pc, #372]	; (8015c64 <_gpio_init(unsigned int)+0x26c>)
 8015aee:	2380      	movs	r3, #128	; 0x80
 8015af0:	2202      	movs	r2, #2
 8015af2:	2100      	movs	r1, #0
 8015af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015af8:	f7ff b91c 	b.w	8014d34 <gpio_output_options_set>
 8015afc:	485a      	ldr	r0, [pc, #360]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015afe:	2204      	movs	r2, #4
 8015b00:	2107      	movs	r1, #7
 8015b02:	f7ff f932 	bl	8014d6a <gpio_af_set>
 8015b06:	4858      	ldr	r0, [pc, #352]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015b08:	2304      	movs	r3, #4
 8015b0a:	2201      	movs	r2, #1
 8015b0c:	2102      	movs	r1, #2
 8015b0e:	f7ff f8f1 	bl	8014cf4 <gpio_mode_set>
 8015b12:	2304      	movs	r3, #4
 8015b14:	4854      	ldr	r0, [pc, #336]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015b16:	2202      	movs	r2, #2
 8015b18:	2100      	movs	r1, #0
 8015b1a:	f7ff f90b 	bl	8014d34 <gpio_output_options_set>
 8015b1e:	4852      	ldr	r0, [pc, #328]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015b20:	2208      	movs	r2, #8
 8015b22:	2107      	movs	r1, #7
 8015b24:	f7ff f921 	bl	8014d6a <gpio_af_set>
 8015b28:	484f      	ldr	r0, [pc, #316]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015b2a:	2308      	movs	r3, #8
 8015b2c:	2201      	movs	r2, #1
 8015b2e:	2102      	movs	r1, #2
 8015b30:	f7ff f8e0 	bl	8014cf4 <gpio_mode_set>
 8015b34:	484c      	ldr	r0, [pc, #304]	; (8015c68 <_gpio_init(unsigned int)+0x270>)
 8015b36:	2308      	movs	r3, #8
 8015b38:	2202      	movs	r2, #2
 8015b3a:	2100      	movs	r1, #0
 8015b3c:	e7da      	b.n	8015af4 <_gpio_init(unsigned int)+0xfc>
 8015b3e:	484b      	ldr	r0, [pc, #300]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b40:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015b44:	2108      	movs	r1, #8
 8015b46:	f7ff f910 	bl	8014d6a <gpio_af_set>
 8015b4a:	4848      	ldr	r0, [pc, #288]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015b50:	2201      	movs	r2, #1
 8015b52:	2102      	movs	r1, #2
 8015b54:	f7ff f8ce 	bl	8014cf4 <gpio_mode_set>
 8015b58:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015b5c:	4843      	ldr	r0, [pc, #268]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b5e:	2202      	movs	r2, #2
 8015b60:	2100      	movs	r1, #0
 8015b62:	f7ff f8e7 	bl	8014d34 <gpio_output_options_set>
 8015b66:	4841      	ldr	r0, [pc, #260]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b68:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8015b6c:	2108      	movs	r1, #8
 8015b6e:	f7ff f8fc 	bl	8014d6a <gpio_af_set>
 8015b72:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015b76:	483d      	ldr	r0, [pc, #244]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b78:	2201      	movs	r2, #1
 8015b7a:	2102      	movs	r1, #2
 8015b7c:	f7ff f8ba 	bl	8014cf4 <gpio_mode_set>
 8015b80:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015b84:	4839      	ldr	r0, [pc, #228]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b86:	2202      	movs	r2, #2
 8015b88:	2100      	movs	r1, #0
 8015b8a:	e7b3      	b.n	8015af4 <_gpio_init(unsigned int)+0xfc>
 8015b8c:	4837      	ldr	r0, [pc, #220]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b8e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8015b92:	2108      	movs	r1, #8
 8015b94:	f7ff f8e9 	bl	8014d6a <gpio_af_set>
 8015b98:	4834      	ldr	r0, [pc, #208]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015b9a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8015b9e:	2201      	movs	r2, #1
 8015ba0:	2102      	movs	r1, #2
 8015ba2:	f7ff f8a7 	bl	8014cf4 <gpio_mode_set>
 8015ba6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8015baa:	4830      	ldr	r0, [pc, #192]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015bac:	2202      	movs	r2, #2
 8015bae:	2100      	movs	r1, #0
 8015bb0:	f7ff f8c0 	bl	8014d34 <gpio_output_options_set>
 8015bb4:	4828      	ldr	r0, [pc, #160]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015bb6:	2204      	movs	r2, #4
 8015bb8:	2108      	movs	r1, #8
 8015bba:	f7ff f8d6 	bl	8014d6a <gpio_af_set>
 8015bbe:	2304      	movs	r3, #4
 8015bc0:	4825      	ldr	r0, [pc, #148]	; (8015c58 <_gpio_init(unsigned int)+0x260>)
 8015bc2:	2201      	movs	r2, #1
 8015bc4:	2102      	movs	r1, #2
 8015bc6:	f7ff f895 	bl	8014cf4 <gpio_mode_set>
 8015bca:	2304      	movs	r3, #4
 8015bcc:	e748      	b.n	8015a60 <_gpio_init(unsigned int)+0x68>
 8015bce:	4827      	ldr	r0, [pc, #156]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015bd0:	2240      	movs	r2, #64	; 0x40
 8015bd2:	2108      	movs	r1, #8
 8015bd4:	f7ff f8c9 	bl	8014d6a <gpio_af_set>
 8015bd8:	4824      	ldr	r0, [pc, #144]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015bda:	2340      	movs	r3, #64	; 0x40
 8015bdc:	2201      	movs	r2, #1
 8015bde:	2102      	movs	r1, #2
 8015be0:	f7ff f888 	bl	8014cf4 <gpio_mode_set>
 8015be4:	2340      	movs	r3, #64	; 0x40
 8015be6:	4821      	ldr	r0, [pc, #132]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015be8:	2202      	movs	r2, #2
 8015bea:	2100      	movs	r1, #0
 8015bec:	f7ff f8a2 	bl	8014d34 <gpio_output_options_set>
 8015bf0:	481e      	ldr	r0, [pc, #120]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015bf2:	2280      	movs	r2, #128	; 0x80
 8015bf4:	2108      	movs	r1, #8
 8015bf6:	f7ff f8b8 	bl	8014d6a <gpio_af_set>
 8015bfa:	2380      	movs	r3, #128	; 0x80
 8015bfc:	481b      	ldr	r0, [pc, #108]	; (8015c6c <_gpio_init(unsigned int)+0x274>)
 8015bfe:	2201      	movs	r2, #1
 8015c00:	2102      	movs	r1, #2
 8015c02:	f7ff f877 	bl	8014cf4 <gpio_mode_set>
 8015c06:	2380      	movs	r3, #128	; 0x80
 8015c08:	e7bc      	b.n	8015b84 <_gpio_init(unsigned int)+0x18c>
 8015c0a:	4815      	ldr	r0, [pc, #84]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c0c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015c10:	2108      	movs	r1, #8
 8015c12:	f7ff f8aa 	bl	8014d6a <gpio_af_set>
 8015c16:	4812      	ldr	r0, [pc, #72]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c18:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015c1c:	2201      	movs	r2, #1
 8015c1e:	2102      	movs	r1, #2
 8015c20:	f7ff f868 	bl	8014cf4 <gpio_mode_set>
 8015c24:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015c28:	480d      	ldr	r0, [pc, #52]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c2a:	2202      	movs	r2, #2
 8015c2c:	2100      	movs	r1, #0
 8015c2e:	f7ff f881 	bl	8014d34 <gpio_output_options_set>
 8015c32:	480b      	ldr	r0, [pc, #44]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c34:	2280      	movs	r2, #128	; 0x80
 8015c36:	2108      	movs	r1, #8
 8015c38:	f7ff f897 	bl	8014d6a <gpio_af_set>
 8015c3c:	2380      	movs	r3, #128	; 0x80
 8015c3e:	4808      	ldr	r0, [pc, #32]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c40:	2201      	movs	r2, #1
 8015c42:	2102      	movs	r1, #2
 8015c44:	f7ff f856 	bl	8014cf4 <gpio_mode_set>
 8015c48:	2380      	movs	r3, #128	; 0x80
 8015c4a:	4805      	ldr	r0, [pc, #20]	; (8015c60 <_gpio_init(unsigned int)+0x268>)
 8015c4c:	2202      	movs	r2, #2
 8015c4e:	2100      	movs	r1, #0
 8015c50:	e750      	b.n	8015af4 <_gpio_init(unsigned int)+0xfc>
 8015c52:	bf00      	nop
 8015c54:	40007800 	andmi	r7, r0, r0, lsl #16
 8015c58:	40020c00 	andmi	r0, r2, r0, lsl #24
 8015c5c:	40011000 	andmi	r1, r1, r0
 8015c60:	40021000 	andmi	r1, r2, r0
 8015c64:	40020400 	andmi	r0, r2, r0, lsl #8
 8015c68:	40020000 	andmi	r0, r2, r0
 8015c6c:	40020800 	andmi	r0, r2, r0, lsl #16

08015c70 <gd32_uart_begin>:
 8015c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c72:	461e      	mov	r6, r3
 8015c74:	4b44      	ldr	r3, [pc, #272]	; (8015d88 <gd32_uart_begin+0x118>)
 8015c76:	4298      	cmp	r0, r3
 8015c78:	4604      	mov	r4, r0
 8015c7a:	460f      	mov	r7, r1
 8015c7c:	4615      	mov	r5, r2
 8015c7e:	d076      	beq.n	8015d6e <gd32_uart_begin+0xfe>
 8015c80:	d80f      	bhi.n	8015ca2 <gd32_uart_begin+0x32>
 8015c82:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015c86:	4298      	cmp	r0, r3
 8015c88:	d060      	beq.n	8015d4c <gd32_uart_begin+0xdc>
 8015c8a:	d866      	bhi.n	8015d5a <gd32_uart_begin+0xea>
 8015c8c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015c90:	4298      	cmp	r0, r3
 8015c92:	d054      	beq.n	8015d3e <gd32_uart_begin+0xce>
 8015c94:	f241 0012 	movw	r0, #4114	; 0x1012
 8015c98:	f7ff f8a8 	bl	8014dec <rcu_periph_clock_enable>
 8015c9c:	f640 4003 	movw	r0, #3075	; 0xc03
 8015ca0:	e00f      	b.n	8015cc2 <gd32_uart_begin+0x52>
 8015ca2:	4b3a      	ldr	r3, [pc, #232]	; (8015d8c <gd32_uart_begin+0x11c>)
 8015ca4:	4298      	cmp	r0, r3
 8015ca6:	d006      	beq.n	8015cb6 <gd32_uart_begin+0x46>
 8015ca8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015cac:	4298      	cmp	r0, r3
 8015cae:	d05b      	beq.n	8015d68 <gd32_uart_begin+0xf8>
 8015cb0:	f241 001f 	movw	r0, #4127	; 0x101f
 8015cb4:	e05d      	b.n	8015d72 <gd32_uart_begin+0x102>
 8015cb6:	f241 1004 	movw	r0, #4356	; 0x1104
 8015cba:	f7ff f897 	bl	8014dec <rcu_periph_clock_enable>
 8015cbe:	f640 4001 	movw	r0, #3073	; 0xc01
 8015cc2:	f7ff f893 	bl	8014dec <rcu_periph_clock_enable>
 8015cc6:	4620      	mov	r0, r4
 8015cc8:	f7ff fe96 	bl	80159f8 <_gpio_init(unsigned int)>
 8015ccc:	4620      	mov	r0, r4
 8015cce:	f7ff fb9b 	bl	8015408 <usart_deinit>
 8015cd2:	68e3      	ldr	r3, [r4, #12]
 8015cd4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8015cd8:	60e3      	str	r3, [r4, #12]
 8015cda:	4639      	mov	r1, r7
 8015cdc:	4620      	mov	r0, r4
 8015cde:	f7ff fbf5 	bl	80154cc <usart_baudrate_set>
 8015ce2:	f1a5 0309 	sub.w	r3, r5, #9
 8015ce6:	4259      	negs	r1, r3
 8015ce8:	4159      	adcs	r1, r3
 8015cea:	0309      	lsls	r1, r1, #12
 8015cec:	4620      	mov	r0, r4
 8015cee:	f7ff fc39 	bl	8015564 <usart_word_length_set>
 8015cf2:	9906      	ldr	r1, [sp, #24]
 8015cf4:	1e8a      	subs	r2, r1, #2
 8015cf6:	4251      	negs	r1, r2
 8015cf8:	4151      	adcs	r1, r2
 8015cfa:	0349      	lsls	r1, r1, #13
 8015cfc:	4620      	mov	r0, r4
 8015cfe:	f7ff fc39 	bl	8015574 <usart_stop_bit_set>
 8015d02:	2e01      	cmp	r6, #1
 8015d04:	d03a      	beq.n	8015d7c <gd32_uart_begin+0x10c>
 8015d06:	2e02      	cmp	r6, #2
 8015d08:	d13b      	bne.n	8015d82 <gd32_uart_begin+0x112>
 8015d0a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8015d0e:	4620      	mov	r0, r4
 8015d10:	f7ff fc20 	bl	8015554 <usart_parity_config>
 8015d14:	2100      	movs	r1, #0
 8015d16:	4620      	mov	r0, r4
 8015d18:	f7ff fc40 	bl	801559c <usart_hardware_flow_rts_config>
 8015d1c:	2100      	movs	r1, #0
 8015d1e:	4620      	mov	r0, r4
 8015d20:	f7ff fc42 	bl	80155a8 <usart_hardware_flow_cts_config>
 8015d24:	2104      	movs	r1, #4
 8015d26:	4620      	mov	r0, r4
 8015d28:	f7ff fc32 	bl	8015590 <usart_receive_config>
 8015d2c:	2108      	movs	r1, #8
 8015d2e:	4620      	mov	r0, r4
 8015d30:	f7ff fc28 	bl	8015584 <usart_transmit_config>
 8015d34:	68e3      	ldr	r3, [r4, #12]
 8015d36:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8015d3a:	60e3      	str	r3, [r4, #12]
 8015d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d3e:	f241 0011 	movw	r0, #4113	; 0x1011
 8015d42:	f7ff f853 	bl	8014dec <rcu_periph_clock_enable>
 8015d46:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8015d4a:	e7ba      	b.n	8015cc2 <gd32_uart_begin+0x52>
 8015d4c:	f241 0013 	movw	r0, #4115	; 0x1013
 8015d50:	f7ff f84c 	bl	8014dec <rcu_periph_clock_enable>
 8015d54:	f640 4002 	movw	r0, #3074	; 0xc02
 8015d58:	e7b3      	b.n	8015cc2 <gd32_uart_begin+0x52>
 8015d5a:	f241 0014 	movw	r0, #4116	; 0x1014
 8015d5e:	f7ff f845 	bl	8014dec <rcu_periph_clock_enable>
 8015d62:	f640 4002 	movw	r0, #3074	; 0xc02
 8015d66:	e797      	b.n	8015c98 <gd32_uart_begin+0x28>
 8015d68:	f241 1005 	movw	r0, #4357	; 0x1105
 8015d6c:	e7f0      	b.n	8015d50 <gd32_uart_begin+0xe0>
 8015d6e:	f241 001e 	movw	r0, #4126	; 0x101e
 8015d72:	f7ff f83b 	bl	8014dec <rcu_periph_clock_enable>
 8015d76:	f640 4004 	movw	r0, #3076	; 0xc04
 8015d7a:	e7a2      	b.n	8015cc2 <gd32_uart_begin+0x52>
 8015d7c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8015d80:	e7c5      	b.n	8015d0e <gd32_uart_begin+0x9e>
 8015d82:	2100      	movs	r1, #0
 8015d84:	e7c3      	b.n	8015d0e <gd32_uart_begin+0x9e>
 8015d86:	bf00      	nop
 8015d88:	40007800 	andmi	r7, r0, r0, lsl #16
 8015d8c:	40011000 	andmi	r1, r1, r0

08015d90 <micros_init()>:
 8015d90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015d92:	f241 0003 	movw	r0, #4099	; 0x1003
 8015d96:	f7ff f829 	bl	8014dec <rcu_periph_clock_enable>
 8015d9a:	480c      	ldr	r0, [pc, #48]	; (8015dcc <micros_init()+0x3c>)
 8015d9c:	f7ff f8d6 	bl	8014f4c <timer_deinit>
 8015da0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8015da4:	2300      	movs	r3, #0
 8015da6:	f8c2 3c24 	str.w	r3, [r2, #3108]	; 0xc24
 8015daa:	22c7      	movs	r2, #199	; 0xc7
 8015dac:	e9cd 2300 	strd	r2, r3, [sp]
 8015db0:	4669      	mov	r1, sp
 8015db2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8015db6:	4805      	ldr	r0, [pc, #20]	; (8015dcc <micros_init()+0x3c>)
 8015db8:	9302      	str	r3, [sp, #8]
 8015dba:	f7ff f96d 	bl	8015098 <timer_init>
 8015dbe:	4803      	ldr	r0, [pc, #12]	; (8015dcc <micros_init()+0x3c>)
 8015dc0:	f7ff f9a8 	bl	8015114 <timer_enable>
 8015dc4:	b005      	add	sp, #20
 8015dc6:	f85d fb04 	ldr.w	pc, [sp], #4
 8015dca:	bf00      	nop
 8015dcc:	40000c00 	andmi	r0, r0, r0, lsl #24

08015dd0 <udelay_init()>:
 8015dd0:	4a07      	ldr	r2, [pc, #28]	; (8015df0 <udelay_init()+0x20>)
 8015dd2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8015dd6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8015dda:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8015dde:	4b05      	ldr	r3, [pc, #20]	; (8015df4 <udelay_init()+0x24>)
 8015de0:	2200      	movs	r2, #0
 8015de2:	605a      	str	r2, [r3, #4]
 8015de4:	681a      	ldr	r2, [r3, #0]
 8015de6:	f042 0201 	orr.w	r2, r2, #1
 8015dea:	601a      	str	r2, [r3, #0]
 8015dec:	4770      	bx	lr
 8015dee:	bf00      	nop
 8015df0:	e000ed00 	and	lr, r0, r0, lsl #26
 8015df4:	e0001000 	and	r1, r0, r0

08015df8 <udelay(unsigned int, unsigned int)>:
 8015df8:	23c8      	movs	r3, #200	; 0xc8
 8015dfa:	b530      	push	{r4, r5, lr}
 8015dfc:	4358      	muls	r0, r3
 8015dfe:	b909      	cbnz	r1, 8015e04 <udelay(unsigned int, unsigned int)+0xc>
 8015e00:	4b08      	ldr	r3, [pc, #32]	; (8015e24 <udelay(unsigned int, unsigned int)+0x2c>)
 8015e02:	6859      	ldr	r1, [r3, #4]
 8015e04:	4c07      	ldr	r4, [pc, #28]	; (8015e24 <udelay(unsigned int, unsigned int)+0x2c>)
 8015e06:	2300      	movs	r3, #0
 8015e08:	6862      	ldr	r2, [r4, #4]
 8015e0a:	4291      	cmp	r1, r2
 8015e0c:	d0fc      	beq.n	8015e08 <udelay(unsigned int, unsigned int)+0x10>
 8015e0e:	bf2a      	itet	cs
 8015e10:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8015e14:	189b      	addcc	r3, r3, r2
 8015e16:	195b      	addcs	r3, r3, r5
 8015e18:	1a5b      	subs	r3, r3, r1
 8015e1a:	4283      	cmp	r3, r0
 8015e1c:	d300      	bcc.n	8015e20 <udelay(unsigned int, unsigned int)+0x28>
 8015e1e:	bd30      	pop	{r4, r5, pc}
 8015e20:	4611      	mov	r1, r2
 8015e22:	e7f1      	b.n	8015e08 <udelay(unsigned int, unsigned int)+0x10>
 8015e24:	e0001000 	and	r1, r0, r0

08015e28 <emac_start(unsigned char*)>:
 8015e28:	b570      	push	{r4, r5, r6, lr}
 8015e2a:	4605      	mov	r5, r0
 8015e2c:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8015e30:	f7fe ffdc 	bl	8014dec <rcu_periph_clock_enable>
 8015e34:	f640 4001 	movw	r0, #3073	; 0xc01
 8015e38:	f7fe ffd8 	bl	8014dec <rcu_periph_clock_enable>
 8015e3c:	f640 4002 	movw	r0, #3074	; 0xc02
 8015e40:	f7fe ffd4 	bl	8014dec <rcu_periph_clock_enable>
 8015e44:	f241 100e 	movw	r0, #4366	; 0x110e
 8015e48:	f7fe ffd0 	bl	8014dec <rcu_periph_clock_enable>
 8015e4c:	487d      	ldr	r0, [pc, #500]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015e4e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8015e52:	2100      	movs	r1, #0
 8015e54:	f7fe ff89 	bl	8014d6a <gpio_af_set>
 8015e58:	487a      	ldr	r0, [pc, #488]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015e5a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015e5e:	2200      	movs	r2, #0
 8015e60:	2102      	movs	r1, #2
 8015e62:	f7fe ff47 	bl	8014cf4 <gpio_mode_set>
 8015e66:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015e6a:	2203      	movs	r2, #3
 8015e6c:	4875      	ldr	r0, [pc, #468]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015e6e:	2100      	movs	r1, #0
 8015e70:	f7fe ff60 	bl	8014d34 <gpio_output_options_set>
 8015e74:	f04f 61c0 	mov.w	r1, #100663296	; 0x6000000
 8015e78:	f44f 00c0 	mov.w	r0, #6291456	; 0x600000
 8015e7c:	f7fe ffd6 	bl	8014e2c <rcu_ckout0_config>
 8015e80:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8015e84:	f000 fe82 	bl	8016b8c <syscfg_enet_phy_interface_config>
 8015e88:	2302      	movs	r3, #2
 8015e8a:	4619      	mov	r1, r3
 8015e8c:	486d      	ldr	r0, [pc, #436]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015e8e:	2200      	movs	r2, #0
 8015e90:	f7fe ff30 	bl	8014cf4 <gpio_mode_set>
 8015e94:	486b      	ldr	r0, [pc, #428]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015e96:	2302      	movs	r3, #2
 8015e98:	2203      	movs	r2, #3
 8015e9a:	2100      	movs	r1, #0
 8015e9c:	f7fe ff4a 	bl	8014d34 <gpio_output_options_set>
 8015ea0:	4868      	ldr	r0, [pc, #416]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015ea2:	2304      	movs	r3, #4
 8015ea4:	2200      	movs	r2, #0
 8015ea6:	2102      	movs	r1, #2
 8015ea8:	f7fe ff24 	bl	8014cf4 <gpio_mode_set>
 8015eac:	4865      	ldr	r0, [pc, #404]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015eae:	2304      	movs	r3, #4
 8015eb0:	2203      	movs	r2, #3
 8015eb2:	2100      	movs	r1, #0
 8015eb4:	f7fe ff3e 	bl	8014d34 <gpio_output_options_set>
 8015eb8:	4862      	ldr	r0, [pc, #392]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015eba:	2380      	movs	r3, #128	; 0x80
 8015ebc:	2200      	movs	r2, #0
 8015ebe:	2102      	movs	r1, #2
 8015ec0:	f7fe ff18 	bl	8014cf4 <gpio_mode_set>
 8015ec4:	2380      	movs	r3, #128	; 0x80
 8015ec6:	485f      	ldr	r0, [pc, #380]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015ec8:	2203      	movs	r2, #3
 8015eca:	2100      	movs	r1, #0
 8015ecc:	f7fe ff32 	bl	8014d34 <gpio_output_options_set>
 8015ed0:	485c      	ldr	r0, [pc, #368]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015ed2:	2202      	movs	r2, #2
 8015ed4:	210b      	movs	r1, #11
 8015ed6:	f7fe ff48 	bl	8014d6a <gpio_af_set>
 8015eda:	485a      	ldr	r0, [pc, #360]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015edc:	2204      	movs	r2, #4
 8015ede:	210b      	movs	r1, #11
 8015ee0:	f7fe ff43 	bl	8014d6a <gpio_af_set>
 8015ee4:	4857      	ldr	r0, [pc, #348]	; (8016044 <emac_start(unsigned char*)+0x21c>)
 8015ee6:	2280      	movs	r2, #128	; 0x80
 8015ee8:	210b      	movs	r1, #11
 8015eea:	f7fe ff3e 	bl	8014d6a <gpio_af_set>
 8015eee:	4856      	ldr	r0, [pc, #344]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015ef0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015ef4:	2200      	movs	r2, #0
 8015ef6:	2102      	movs	r1, #2
 8015ef8:	f7fe fefc 	bl	8014cf4 <gpio_mode_set>
 8015efc:	4852      	ldr	r0, [pc, #328]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015efe:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015f02:	2203      	movs	r2, #3
 8015f04:	2100      	movs	r1, #0
 8015f06:	f7fe ff15 	bl	8014d34 <gpio_output_options_set>
 8015f0a:	484f      	ldr	r0, [pc, #316]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8015f10:	2200      	movs	r2, #0
 8015f12:	2102      	movs	r1, #2
 8015f14:	f7fe feee 	bl	8014cf4 <gpio_mode_set>
 8015f18:	484b      	ldr	r0, [pc, #300]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f1a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8015f1e:	2203      	movs	r2, #3
 8015f20:	2100      	movs	r1, #0
 8015f22:	f7fe ff07 	bl	8014d34 <gpio_output_options_set>
 8015f26:	4848      	ldr	r0, [pc, #288]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f28:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8015f2c:	2200      	movs	r2, #0
 8015f2e:	2102      	movs	r1, #2
 8015f30:	f7fe fee0 	bl	8014cf4 <gpio_mode_set>
 8015f34:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8015f38:	4843      	ldr	r0, [pc, #268]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f3a:	2203      	movs	r2, #3
 8015f3c:	2100      	movs	r1, #0
 8015f3e:	f7fe fef9 	bl	8014d34 <gpio_output_options_set>
 8015f42:	4841      	ldr	r0, [pc, #260]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f44:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8015f48:	210b      	movs	r1, #11
 8015f4a:	f7fe ff0e 	bl	8014d6a <gpio_af_set>
 8015f4e:	483e      	ldr	r0, [pc, #248]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f50:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8015f54:	210b      	movs	r1, #11
 8015f56:	f7fe ff08 	bl	8014d6a <gpio_af_set>
 8015f5a:	483b      	ldr	r0, [pc, #236]	; (8016048 <emac_start(unsigned char*)+0x220>)
 8015f5c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8015f60:	210b      	movs	r1, #11
 8015f62:	f7fe ff02 	bl	8014d6a <gpio_af_set>
 8015f66:	2302      	movs	r3, #2
 8015f68:	4619      	mov	r1, r3
 8015f6a:	4838      	ldr	r0, [pc, #224]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015f6c:	2200      	movs	r2, #0
 8015f6e:	f7fe fec1 	bl	8014cf4 <gpio_mode_set>
 8015f72:	4836      	ldr	r0, [pc, #216]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015f74:	2302      	movs	r3, #2
 8015f76:	2203      	movs	r2, #3
 8015f78:	2100      	movs	r1, #0
 8015f7a:	f7fe fedb 	bl	8014d34 <gpio_output_options_set>
 8015f7e:	4833      	ldr	r0, [pc, #204]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015f80:	2310      	movs	r3, #16
 8015f82:	2200      	movs	r2, #0
 8015f84:	2102      	movs	r1, #2
 8015f86:	f7fe feb5 	bl	8014cf4 <gpio_mode_set>
 8015f8a:	4830      	ldr	r0, [pc, #192]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015f8c:	2310      	movs	r3, #16
 8015f8e:	2203      	movs	r2, #3
 8015f90:	2100      	movs	r1, #0
 8015f92:	f7fe fecf 	bl	8014d34 <gpio_output_options_set>
 8015f96:	482d      	ldr	r0, [pc, #180]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015f98:	2320      	movs	r3, #32
 8015f9a:	2200      	movs	r2, #0
 8015f9c:	2102      	movs	r1, #2
 8015f9e:	f7fe fea9 	bl	8014cf4 <gpio_mode_set>
 8015fa2:	2320      	movs	r3, #32
 8015fa4:	4829      	ldr	r0, [pc, #164]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015fa6:	2203      	movs	r2, #3
 8015fa8:	2100      	movs	r1, #0
 8015faa:	f7fe fec3 	bl	8014d34 <gpio_output_options_set>
 8015fae:	4827      	ldr	r0, [pc, #156]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015fb0:	2202      	movs	r2, #2
 8015fb2:	210b      	movs	r1, #11
 8015fb4:	f7fe fed9 	bl	8014d6a <gpio_af_set>
 8015fb8:	4824      	ldr	r0, [pc, #144]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015fba:	2210      	movs	r2, #16
 8015fbc:	210b      	movs	r1, #11
 8015fbe:	f7fe fed4 	bl	8014d6a <gpio_af_set>
 8015fc2:	2220      	movs	r2, #32
 8015fc4:	210b      	movs	r1, #11
 8015fc6:	4821      	ldr	r0, [pc, #132]	; (801604c <emac_start(unsigned char*)+0x224>)
 8015fc8:	f7fe fecf 	bl	8014d6a <gpio_af_set>
 8015fcc:	f640 4019 	movw	r0, #3097	; 0xc19
 8015fd0:	f7fe ff0c 	bl	8014dec <rcu_periph_clock_enable>
 8015fd4:	f640 401a 	movw	r0, #3098	; 0xc1a
 8015fd8:	f7fe ff08 	bl	8014dec <rcu_periph_clock_enable>
 8015fdc:	f640 401b 	movw	r0, #3099	; 0xc1b
 8015fe0:	f7fe ff04 	bl	8014dec <rcu_periph_clock_enable>
 8015fe4:	f000 fd1c 	bl	8016a20 <enet_deinit>
 8015fe8:	f000 f944 	bl	8016274 <enet_software_reset>
 8015fec:	4604      	mov	r4, r0
 8015fee:	b138      	cbz	r0, 8016000 <emac_start(unsigned char*)+0x1d8>
 8015ff0:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8015ff4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8015ff8:	2001      	movs	r0, #1
 8015ffa:	f000 fad3 	bl	80165a4 <enet_init>
 8015ffe:	4604      	mov	r4, r0
 8016000:	4628      	mov	r0, r5
 8016002:	f000 fdcf 	bl	8016ba4 <mac_address_get(unsigned char*)>
 8016006:	4629      	mov	r1, r5
 8016008:	2000      	movs	r0, #0
 801600a:	f000 fa23 	bl	8016454 <enet_mac_address_set>
 801600e:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8016012:	f000 f943 	bl	801629c <enet_descriptors_chain_init>
 8016016:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 801601a:	f000 f93f 	bl	801629c <enet_descriptors_chain_init>
 801601e:	4e0c      	ldr	r6, [pc, #48]	; (8016050 <emac_start(unsigned char*)+0x228>)
 8016020:	2500      	movs	r5, #0
 8016022:	4630      	mov	r0, r6
 8016024:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8016028:	3501      	adds	r5, #1
 801602a:	f000 fa0d 	bl	8016448 <enet_transmit_checksum_config>
 801602e:	2d08      	cmp	r5, #8
 8016030:	f106 0610 	add.w	r6, r6, #16
 8016034:	d1f5      	bne.n	8016022 <emac_start(unsigned char*)+0x1fa>
 8016036:	f000 fc55 	bl	80168e4 <enet_enable>
 801603a:	fab4 f084 	clz	r0, r4
 801603e:	0940      	lsrs	r0, r0, #5
 8016040:	4240      	negs	r0, r0
 8016042:	bd70      	pop	{r4, r5, r6, pc}
 8016044:	40020000 	andmi	r0, r2, r0
 8016048:	40020400 	andmi	r0, r2, r0, lsl #8
 801604c:	40020800 	andmi	r0, r2, r0, lsl #16
 8016050:	2002d408 	andcs	sp, r2, r8, lsl #8

08016054 <net::link_register_read()>:
 8016054:	b507      	push	{r0, r1, r2, lr}
 8016056:	2201      	movs	r2, #1
 8016058:	f10d 0306 	add.w	r3, sp, #6
 801605c:	4611      	mov	r1, r2
 801605e:	2000      	movs	r0, #0
 8016060:	f000 fa10 	bl	8016484 <enet_phy_write_read>
 8016064:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016068:	f080 0004 	eor.w	r0, r0, #4
 801606c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8016070:	b003      	add	sp, #12
 8016072:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08016078 <adc_clock_config>:
 8016078:	4b06      	ldr	r3, [pc, #24]	; (8016094 <adc_clock_config+0x1c>)
 801607a:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 801607e:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8016082:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 8016086:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 801608a:	4310      	orrs	r0, r2
 801608c:	f8c3 0304 	str.w	r0, [r3, #772]	; 0x304
 8016090:	4770      	bx	lr
 8016092:	bf00      	nop
 8016094:	40012000 	andmi	r2, r1, r0

08016098 <adc_special_function_config>:
 8016098:	b510      	push	{r4, lr}
 801609a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801609e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80160a2:	f001 0102 	and.w	r1, r1, #2
 80160a6:	b17a      	cbz	r2, 80160c8 <adc_special_function_config+0x30>
 80160a8:	b11b      	cbz	r3, 80160b2 <adc_special_function_config+0x1a>
 80160aa:	6843      	ldr	r3, [r0, #4]
 80160ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80160b0:	6043      	str	r3, [r0, #4]
 80160b2:	b11c      	cbz	r4, 80160bc <adc_special_function_config+0x24>
 80160b4:	6843      	ldr	r3, [r0, #4]
 80160b6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80160ba:	6043      	str	r3, [r0, #4]
 80160bc:	b119      	cbz	r1, 80160c6 <adc_special_function_config+0x2e>
 80160be:	6883      	ldr	r3, [r0, #8]
 80160c0:	f043 0302 	orr.w	r3, r3, #2
 80160c4:	6083      	str	r3, [r0, #8]
 80160c6:	bd10      	pop	{r4, pc}
 80160c8:	b11b      	cbz	r3, 80160d2 <adc_special_function_config+0x3a>
 80160ca:	6843      	ldr	r3, [r0, #4]
 80160cc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80160d0:	6043      	str	r3, [r0, #4]
 80160d2:	b11c      	cbz	r4, 80160dc <adc_special_function_config+0x44>
 80160d4:	6843      	ldr	r3, [r0, #4]
 80160d6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80160da:	6043      	str	r3, [r0, #4]
 80160dc:	2900      	cmp	r1, #0
 80160de:	d0f2      	beq.n	80160c6 <adc_special_function_config+0x2e>
 80160e0:	6883      	ldr	r3, [r0, #8]
 80160e2:	f023 0302 	bic.w	r3, r3, #2
 80160e6:	e7ed      	b.n	80160c4 <adc_special_function_config+0x2c>

080160e8 <adc_data_alignment_config>:
 80160e8:	6883      	ldr	r3, [r0, #8]
 80160ea:	b119      	cbz	r1, 80160f4 <adc_data_alignment_config+0xc>
 80160ec:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80160f0:	6083      	str	r3, [r0, #8]
 80160f2:	4770      	bx	lr
 80160f4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80160f8:	e7fa      	b.n	80160f0 <adc_data_alignment_config+0x8>

080160fa <adc_enable>:
 80160fa:	6883      	ldr	r3, [r0, #8]
 80160fc:	07db      	lsls	r3, r3, #31
 80160fe:	bf5e      	ittt	pl
 8016100:	6883      	ldrpl	r3, [r0, #8]
 8016102:	f043 0301 	orrpl.w	r3, r3, #1
 8016106:	6083      	strpl	r3, [r0, #8]
 8016108:	4770      	bx	lr

0801610a <adc_calibration_enable>:
 801610a:	6883      	ldr	r3, [r0, #8]
 801610c:	f043 0308 	orr.w	r3, r3, #8
 8016110:	f100 0208 	add.w	r2, r0, #8
 8016114:	6083      	str	r3, [r0, #8]
 8016116:	6813      	ldr	r3, [r2, #0]
 8016118:	0719      	lsls	r1, r3, #28
 801611a:	d4fc      	bmi.n	8016116 <adc_calibration_enable+0xc>
 801611c:	6883      	ldr	r3, [r0, #8]
 801611e:	f043 0304 	orr.w	r3, r3, #4
 8016122:	6083      	str	r3, [r0, #8]
 8016124:	6813      	ldr	r3, [r2, #0]
 8016126:	075b      	lsls	r3, r3, #29
 8016128:	d4fc      	bmi.n	8016124 <adc_calibration_enable+0x1a>
 801612a:	4770      	bx	lr

0801612c <adc_channel_16_to_18>:
 801612c:	f400 0380 	and.w	r3, r0, #4194304	; 0x400000
 8016130:	f400 0000 	and.w	r0, r0, #8388608	; 0x800000
 8016134:	b181      	cbz	r1, 8016158 <adc_channel_16_to_18+0x2c>
 8016136:	b133      	cbz	r3, 8016146 <adc_channel_16_to_18+0x1a>
 8016138:	4a0f      	ldr	r2, [pc, #60]	; (8016178 <adc_channel_16_to_18+0x4c>)
 801613a:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 801613e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8016142:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8016146:	b130      	cbz	r0, 8016156 <adc_channel_16_to_18+0x2a>
 8016148:	4a0b      	ldr	r2, [pc, #44]	; (8016178 <adc_channel_16_to_18+0x4c>)
 801614a:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 801614e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8016152:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8016156:	4770      	bx	lr
 8016158:	b133      	cbz	r3, 8016168 <adc_channel_16_to_18+0x3c>
 801615a:	4a07      	ldr	r2, [pc, #28]	; (8016178 <adc_channel_16_to_18+0x4c>)
 801615c:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8016160:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8016164:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8016168:	2800      	cmp	r0, #0
 801616a:	d0f4      	beq.n	8016156 <adc_channel_16_to_18+0x2a>
 801616c:	4a02      	ldr	r2, [pc, #8]	; (8016178 <adc_channel_16_to_18+0x4c>)
 801616e:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8016172:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8016176:	e7ec      	b.n	8016152 <adc_channel_16_to_18+0x26>
 8016178:	40012000 	andmi	r2, r1, r0

0801617c <adc_channel_length_config>:
 801617c:	2901      	cmp	r1, #1
 801617e:	d002      	beq.n	8016186 <adc_channel_length_config+0xa>
 8016180:	2902      	cmp	r1, #2
 8016182:	d00c      	beq.n	801619e <adc_channel_length_config+0x22>
 8016184:	4770      	bx	lr
 8016186:	3a01      	subs	r2, #1
 8016188:	2a0f      	cmp	r2, #15
 801618a:	d813      	bhi.n	80161b4 <adc_channel_length_config+0x38>
 801618c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801618e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8016192:	62c3      	str	r3, [r0, #44]	; 0x2c
 8016194:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016196:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801619a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801619c:	4770      	bx	lr
 801619e:	3a01      	subs	r2, #1
 80161a0:	2a03      	cmp	r2, #3
 80161a2:	d807      	bhi.n	80161b4 <adc_channel_length_config+0x38>
 80161a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80161a6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80161aa:	6383      	str	r3, [r0, #56]	; 0x38
 80161ac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80161ae:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80161b2:	6383      	str	r3, [r0, #56]	; 0x38
 80161b4:	4770      	bx	lr

080161b6 <adc_inserted_channel_config>:
 80161b6:	2903      	cmp	r1, #3
 80161b8:	b530      	push	{r4, r5, lr}
 80161ba:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80161bc:	d80f      	bhi.n	80161de <adc_inserted_channel_config+0x28>
 80161be:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80161c2:	1a61      	subs	r1, r4, r1
 80161c4:	f06f 0404 	mvn.w	r4, #4
 80161c8:	4361      	muls	r1, r4
 80161ca:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80161cc:	310f      	adds	r1, #15
 80161ce:	241f      	movs	r4, #31
 80161d0:	408c      	lsls	r4, r1
 80161d2:	ea25 0404 	bic.w	r4, r5, r4
 80161d6:	fa02 f101 	lsl.w	r1, r2, r1
 80161da:	4321      	orrs	r1, r4
 80161dc:	6381      	str	r1, [r0, #56]	; 0x38
 80161de:	2a09      	cmp	r2, #9
 80161e0:	d80a      	bhi.n	80161f8 <adc_inserted_channel_config+0x42>
 80161e2:	6901      	ldr	r1, [r0, #16]
 80161e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80161e8:	2407      	movs	r4, #7
 80161ea:	4094      	lsls	r4, r2
 80161ec:	ea21 0104 	bic.w	r1, r1, r4
 80161f0:	4093      	lsls	r3, r2
 80161f2:	430b      	orrs	r3, r1
 80161f4:	6103      	str	r3, [r0, #16]
 80161f6:	bd30      	pop	{r4, r5, pc}
 80161f8:	2a12      	cmp	r2, #18
 80161fa:	d8fc      	bhi.n	80161f6 <adc_inserted_channel_config+0x40>
 80161fc:	3a0a      	subs	r2, #10
 80161fe:	68c1      	ldr	r1, [r0, #12]
 8016200:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016204:	2407      	movs	r4, #7
 8016206:	4094      	lsls	r4, r2
 8016208:	ea21 0104 	bic.w	r1, r1, r4
 801620c:	4093      	lsls	r3, r2
 801620e:	430b      	orrs	r3, r1
 8016210:	60c3      	str	r3, [r0, #12]
 8016212:	e7f0      	b.n	80161f6 <adc_inserted_channel_config+0x40>

08016214 <adc_external_trigger_config>:
 8016214:	2901      	cmp	r1, #1
 8016216:	d002      	beq.n	801621e <adc_external_trigger_config+0xa>
 8016218:	2902      	cmp	r1, #2
 801621a:	d009      	beq.n	8016230 <adc_external_trigger_config+0x1c>
 801621c:	4770      	bx	lr
 801621e:	6883      	ldr	r3, [r0, #8]
 8016220:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8016224:	6083      	str	r3, [r0, #8]
 8016226:	6883      	ldr	r3, [r0, #8]
 8016228:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 801622c:	6083      	str	r3, [r0, #8]
 801622e:	4770      	bx	lr
 8016230:	6883      	ldr	r3, [r0, #8]
 8016232:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8016236:	6083      	str	r3, [r0, #8]
 8016238:	6883      	ldr	r3, [r0, #8]
 801623a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801623e:	e7f5      	b.n	801622c <adc_external_trigger_config+0x18>

08016240 <adc_software_trigger_enable>:
 8016240:	2901      	cmp	r1, #1
 8016242:	d002      	beq.n	801624a <adc_software_trigger_enable+0xa>
 8016244:	2902      	cmp	r1, #2
 8016246:	d005      	beq.n	8016254 <adc_software_trigger_enable+0x14>
 8016248:	4770      	bx	lr
 801624a:	6883      	ldr	r3, [r0, #8]
 801624c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8016250:	6083      	str	r3, [r0, #8]
 8016252:	4770      	bx	lr
 8016254:	6883      	ldr	r3, [r0, #8]
 8016256:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 801625a:	e7f9      	b.n	8016250 <adc_software_trigger_enable+0x10>

0801625c <enet_delay>:
 801625c:	b082      	sub	sp, #8
 801625e:	2300      	movs	r3, #0
 8016260:	9301      	str	r3, [sp, #4]
 8016262:	9001      	str	r0, [sp, #4]
 8016264:	9b01      	ldr	r3, [sp, #4]
 8016266:	b90b      	cbnz	r3, 801626c <enet_delay+0x10>
 8016268:	b002      	add	sp, #8
 801626a:	4770      	bx	lr
 801626c:	9b01      	ldr	r3, [sp, #4]
 801626e:	3b01      	subs	r3, #1
 8016270:	9301      	str	r3, [sp, #4]
 8016272:	e7f7      	b.n	8016264 <enet_delay+0x8>

08016274 <enet_software_reset>:
 8016274:	4b07      	ldr	r3, [pc, #28]	; (8016294 <enet_software_reset+0x20>)
 8016276:	681a      	ldr	r2, [r3, #0]
 8016278:	f042 0201 	orr.w	r2, r2, #1
 801627c:	601a      	str	r2, [r3, #0]
 801627e:	4a06      	ldr	r2, [pc, #24]	; (8016298 <enet_software_reset+0x24>)
 8016280:	6819      	ldr	r1, [r3, #0]
 8016282:	07c9      	lsls	r1, r1, #31
 8016284:	d501      	bpl.n	801628a <enet_software_reset+0x16>
 8016286:	3a01      	subs	r2, #1
 8016288:	d1fa      	bne.n	8016280 <enet_software_reset+0xc>
 801628a:	6818      	ldr	r0, [r3, #0]
 801628c:	43c0      	mvns	r0, r0
 801628e:	f000 0001 	and.w	r0, r0, #1
 8016292:	4770      	bx	lr
 8016294:	40029000 	andmi	r9, r2, r0
 8016298:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801629c <enet_descriptors_chain_init>:
 801629c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80162a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162a2:	4a19      	ldr	r2, [pc, #100]	; (8016308 <enet_descriptors_chain_init+0x6c>)
 80162a4:	d125      	bne.n	80162f2 <enet_descriptors_chain_init+0x56>
 80162a6:	4b19      	ldr	r3, [pc, #100]	; (801630c <enet_descriptors_chain_init+0x70>)
 80162a8:	6113      	str	r3, [r2, #16]
 80162aa:	4a19      	ldr	r2, [pc, #100]	; (8016310 <enet_descriptors_chain_init+0x74>)
 80162ac:	4c19      	ldr	r4, [pc, #100]	; (8016314 <enet_descriptors_chain_init+0x78>)
 80162ae:	6013      	str	r3, [r2, #0]
 80162b0:	2500      	movs	r5, #0
 80162b2:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80162b6:	2008      	movs	r0, #8
 80162b8:	4917      	ldr	r1, [pc, #92]	; (8016318 <enet_descriptors_chain_init+0x7c>)
 80162ba:	2200      	movs	r2, #0
 80162bc:	600a      	str	r2, [r1, #0]
 80162be:	4917      	ldr	r1, [pc, #92]	; (801631c <enet_descriptors_chain_init+0x80>)
 80162c0:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80162c4:	600a      	str	r2, [r1, #0]
 80162c6:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80162ca:	f103 0110 	add.w	r1, r3, #16
 80162ce:	fb0e 4702 	mla	r7, lr, r2, r4
 80162d2:	f841 7c08 	str.w	r7, [r1, #-8]
 80162d6:	4594      	cmp	ip, r2
 80162d8:	bf94      	ite	ls
 80162da:	461f      	movls	r7, r3
 80162dc:	460f      	movhi	r7, r1
 80162de:	3201      	adds	r2, #1
 80162e0:	4290      	cmp	r0, r2
 80162e2:	e941 6504 	strd	r6, r5, [r1, #-16]
 80162e6:	f841 7c04 	str.w	r7, [r1, #-4]
 80162ea:	f101 0110 	add.w	r1, r1, #16
 80162ee:	d1ee      	bne.n	80162ce <enet_descriptors_chain_init+0x32>
 80162f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80162f2:	4b0b      	ldr	r3, [pc, #44]	; (8016320 <enet_descriptors_chain_init+0x84>)
 80162f4:	60d3      	str	r3, [r2, #12]
 80162f6:	4a0b      	ldr	r2, [pc, #44]	; (8016324 <enet_descriptors_chain_init+0x88>)
 80162f8:	4c0b      	ldr	r4, [pc, #44]	; (8016328 <enet_descriptors_chain_init+0x8c>)
 80162fa:	6013      	str	r3, [r2, #0]
 80162fc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8016300:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8016304:	2046      	movs	r0, #70	; 0x46
 8016306:	e7d7      	b.n	80162b8 <enet_descriptors_chain_init+0x1c>
 8016308:	40029000 	andmi	r9, r2, r0
 801630c:	2002d408 	andcs	sp, r2, r8, lsl #8
 8016310:	2000ff10 	andcs	pc, r0, r0, lsl pc	; <UNPREDICTABLE>
 8016314:	2002a468 	andcs	sl, r2, r8, ror #8
 8016318:	2000ff04 	andcs	pc, r0, r4, lsl #30
 801631c:	2000ff08 	andcs	pc, r0, r8, lsl #30
 8016320:	2002a008 	andcs	sl, r2, r8
 8016324:	2000ff0c 	andcs	pc, r0, ip, lsl #30
 8016328:	2000ff50 	andcs	pc, r0, r0, asr pc	; <UNPREDICTABLE>

0801632c <enet_frame_receive>:
 801632c:	4b22      	ldr	r3, [pc, #136]	; (80163b8 <enet_frame_receive+0x8c>)
 801632e:	681a      	ldr	r2, [r3, #0]
 8016330:	6812      	ldr	r2, [r2, #0]
 8016332:	2a00      	cmp	r2, #0
 8016334:	b570      	push	{r4, r5, r6, lr}
 8016336:	db3c      	blt.n	80163b2 <enet_frame_receive+0x86>
 8016338:	b970      	cbnz	r0, 8016358 <enet_frame_receive+0x2c>
 801633a:	681a      	ldr	r2, [r3, #0]
 801633c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8016340:	6011      	str	r1, [r2, #0]
 8016342:	491e      	ldr	r1, [pc, #120]	; (80163bc <enet_frame_receive+0x90>)
 8016344:	6948      	ldr	r0, [r1, #20]
 8016346:	0600      	lsls	r0, r0, #24
 8016348:	d422      	bmi.n	8016390 <enet_frame_receive+0x64>
 801634a:	6851      	ldr	r1, [r2, #4]
 801634c:	0448      	lsls	r0, r1, #17
 801634e:	d524      	bpl.n	801639a <enet_frame_receive+0x6e>
 8016350:	68d2      	ldr	r2, [r2, #12]
 8016352:	601a      	str	r2, [r3, #0]
 8016354:	2001      	movs	r0, #1
 8016356:	bd70      	pop	{r4, r5, r6, pc}
 8016358:	f402 4403 	and.w	r4, r2, #33536	; 0x8300
 801635c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8016360:	d127      	bne.n	80163b2 <enet_frame_receive+0x86>
 8016362:	4e17      	ldr	r6, [pc, #92]	; (80163c0 <enet_frame_receive+0x94>)
 8016364:	6836      	ldr	r6, [r6, #0]
 8016366:	f3c2 450d 	ubfx	r5, r2, #16, #14
 801636a:	01b6      	lsls	r6, r6, #6
 801636c:	f1a5 0404 	sub.w	r4, r5, #4
 8016370:	d503      	bpl.n	801637a <enet_frame_receive+0x4e>
 8016372:	f012 0f20 	tst.w	r2, #32
 8016376:	bf18      	it	ne
 8016378:	462c      	movne	r4, r5
 801637a:	428c      	cmp	r4, r1
 801637c:	d819      	bhi.n	80163b2 <enet_frame_receive+0x86>
 801637e:	2200      	movs	r2, #0
 8016380:	42a2      	cmp	r2, r4
 8016382:	6819      	ldr	r1, [r3, #0]
 8016384:	d0d9      	beq.n	801633a <enet_frame_receive+0xe>
 8016386:	6889      	ldr	r1, [r1, #8]
 8016388:	5c51      	ldrb	r1, [r2, r1]
 801638a:	5481      	strb	r1, [r0, r2]
 801638c:	3201      	adds	r2, #1
 801638e:	e7f7      	b.n	8016380 <enet_frame_receive+0x54>
 8016390:	2080      	movs	r0, #128	; 0x80
 8016392:	6148      	str	r0, [r1, #20]
 8016394:	2000      	movs	r0, #0
 8016396:	6088      	str	r0, [r1, #8]
 8016398:	e7d7      	b.n	801634a <enet_frame_receive+0x1e>
 801639a:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801639e:	4907      	ldr	r1, [pc, #28]	; (80163bc <enet_frame_receive+0x90>)
 80163a0:	bf09      	itett	eq
 80163a2:	6809      	ldreq	r1, [r1, #0]
 80163a4:	68ca      	ldrne	r2, [r1, #12]
 80163a6:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80163aa:	3210      	addeq	r2, #16
 80163ac:	bf08      	it	eq
 80163ae:	1852      	addeq	r2, r2, r1
 80163b0:	e7cf      	b.n	8016352 <enet_frame_receive+0x26>
 80163b2:	2000      	movs	r0, #0
 80163b4:	e7cf      	b.n	8016356 <enet_frame_receive+0x2a>
 80163b6:	bf00      	nop
 80163b8:	2000ff0c 	andcs	pc, r0, ip, lsl #30
 80163bc:	40029000 	andmi	r9, r2, r0
 80163c0:	40028000 	andmi	r8, r2, r0

080163c4 <enet_frame_transmit>:
 80163c4:	4a1e      	ldr	r2, [pc, #120]	; (8016440 <enet_frame_transmit+0x7c>)
 80163c6:	6813      	ldr	r3, [r2, #0]
 80163c8:	681b      	ldr	r3, [r3, #0]
 80163ca:	2b00      	cmp	r3, #0
 80163cc:	b530      	push	{r4, r5, lr}
 80163ce:	db34      	blt.n	801643a <enet_frame_transmit+0x76>
 80163d0:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80163d4:	4299      	cmp	r1, r3
 80163d6:	d830      	bhi.n	801643a <enet_frame_transmit+0x76>
 80163d8:	b9e8      	cbnz	r0, 8016416 <enet_frame_transmit+0x52>
 80163da:	6813      	ldr	r3, [r2, #0]
 80163dc:	4819      	ldr	r0, [pc, #100]	; (8016444 <enet_frame_transmit+0x80>)
 80163de:	6059      	str	r1, [r3, #4]
 80163e0:	6819      	ldr	r1, [r3, #0]
 80163e2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80163e6:	6019      	str	r1, [r3, #0]
 80163e8:	6941      	ldr	r1, [r0, #20]
 80163ea:	6944      	ldr	r4, [r0, #20]
 80163ec:	f001 0104 	and.w	r1, r1, #4
 80163f0:	f004 0420 	and.w	r4, r4, #32
 80163f4:	4321      	orrs	r1, r4
 80163f6:	d110      	bne.n	801641a <enet_frame_transmit+0x56>
 80163f8:	6819      	ldr	r1, [r3, #0]
 80163fa:	02c8      	lsls	r0, r1, #11
 80163fc:	d511      	bpl.n	8016422 <enet_frame_transmit+0x5e>
 80163fe:	68db      	ldr	r3, [r3, #12]
 8016400:	6013      	str	r3, [r2, #0]
 8016402:	2001      	movs	r0, #1
 8016404:	bd30      	pop	{r4, r5, pc}
 8016406:	68a4      	ldr	r4, [r4, #8]
 8016408:	5cc5      	ldrb	r5, [r0, r3]
 801640a:	551d      	strb	r5, [r3, r4]
 801640c:	3301      	adds	r3, #1
 801640e:	428b      	cmp	r3, r1
 8016410:	6814      	ldr	r4, [r2, #0]
 8016412:	d1f8      	bne.n	8016406 <enet_frame_transmit+0x42>
 8016414:	e7e1      	b.n	80163da <enet_frame_transmit+0x16>
 8016416:	2300      	movs	r3, #0
 8016418:	e7f9      	b.n	801640e <enet_frame_transmit+0x4a>
 801641a:	6141      	str	r1, [r0, #20]
 801641c:	2100      	movs	r1, #0
 801641e:	6041      	str	r1, [r0, #4]
 8016420:	e7ea      	b.n	80163f8 <enet_frame_transmit+0x34>
 8016422:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8016426:	4907      	ldr	r1, [pc, #28]	; (8016444 <enet_frame_transmit+0x80>)
 8016428:	bf09      	itett	eq
 801642a:	6809      	ldreq	r1, [r1, #0]
 801642c:	690b      	ldrne	r3, [r1, #16]
 801642e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8016432:	3310      	addeq	r3, #16
 8016434:	bf08      	it	eq
 8016436:	185b      	addeq	r3, r3, r1
 8016438:	e7e2      	b.n	8016400 <enet_frame_transmit+0x3c>
 801643a:	2000      	movs	r0, #0
 801643c:	e7e2      	b.n	8016404 <enet_frame_transmit+0x40>
 801643e:	bf00      	nop
 8016440:	2000ff10 	andcs	pc, r0, r0, lsl pc	; <UNPREDICTABLE>
 8016444:	40029000 	andmi	r9, r2, r0

08016448 <enet_transmit_checksum_config>:
 8016448:	6803      	ldr	r3, [r0, #0]
 801644a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801644e:	430b      	orrs	r3, r1
 8016450:	6003      	str	r3, [r0, #0]
 8016452:	4770      	bx	lr

08016454 <enet_mac_address_set>:
 8016454:	4b03      	ldr	r3, [pc, #12]	; (8016464 <enet_mac_address_set+0x10>)
 8016456:	888a      	ldrh	r2, [r1, #4]
 8016458:	50c2      	str	r2, [r0, r3]
 801645a:	3304      	adds	r3, #4
 801645c:	680a      	ldr	r2, [r1, #0]
 801645e:	50c2      	str	r2, [r0, r3]
 8016460:	4770      	bx	lr
 8016462:	bf00      	nop
 8016464:	40028040 	andmi	r8, r2, r0, asr #32

08016468 <enet_rx_enable>:
 8016468:	4a05      	ldr	r2, [pc, #20]	; (8016480 <enet_rx_enable+0x18>)
 801646a:	6813      	ldr	r3, [r2, #0]
 801646c:	f043 0304 	orr.w	r3, r3, #4
 8016470:	6013      	str	r3, [r2, #0]
 8016472:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8016476:	6993      	ldr	r3, [r2, #24]
 8016478:	f043 0302 	orr.w	r3, r3, #2
 801647c:	6193      	str	r3, [r2, #24]
 801647e:	4770      	bx	lr
 8016480:	40028000 	andmi	r8, r2, r0

08016484 <enet_phy_write_read>:
 8016484:	b530      	push	{r4, r5, lr}
 8016486:	4d12      	ldr	r5, [pc, #72]	; (80164d0 <enet_phy_write_read+0x4c>)
 8016488:	4604      	mov	r4, r0
 801648a:	6928      	ldr	r0, [r5, #16]
 801648c:	0192      	lsls	r2, r2, #6
 801648e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8016492:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8016496:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801649a:	4302      	orrs	r2, r0
 801649c:	02c9      	lsls	r1, r1, #11
 801649e:	b289      	uxth	r1, r1
 80164a0:	4322      	orrs	r2, r4
 80164a2:	430a      	orrs	r2, r1
 80164a4:	2c02      	cmp	r4, #2
 80164a6:	bf04      	itt	eq
 80164a8:	8819      	ldrheq	r1, [r3, #0]
 80164aa:	6169      	streq	r1, [r5, #20]
 80164ac:	f042 0201 	orr.w	r2, r2, #1
 80164b0:	612a      	str	r2, [r5, #16]
 80164b2:	4907      	ldr	r1, [pc, #28]	; (80164d0 <enet_phy_write_read+0x4c>)
 80164b4:	4a07      	ldr	r2, [pc, #28]	; (80164d4 <enet_phy_write_read+0x50>)
 80164b6:	6908      	ldr	r0, [r1, #16]
 80164b8:	07c0      	lsls	r0, r0, #31
 80164ba:	d501      	bpl.n	80164c0 <enet_phy_write_read+0x3c>
 80164bc:	3a01      	subs	r2, #1
 80164be:	d1fa      	bne.n	80164b6 <enet_phy_write_read+0x32>
 80164c0:	690a      	ldr	r2, [r1, #16]
 80164c2:	43d2      	mvns	r2, r2
 80164c4:	f002 0001 	and.w	r0, r2, #1
 80164c8:	b90c      	cbnz	r4, 80164ce <enet_phy_write_read+0x4a>
 80164ca:	694a      	ldr	r2, [r1, #20]
 80164cc:	801a      	strh	r2, [r3, #0]
 80164ce:	bd30      	pop	{r4, r5, pc}
 80164d0:	40028000 	andmi	r8, r2, r0
 80164d4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080164d8 <enet_phy_config>:
 80164d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80164da:	4d26      	ldr	r5, [pc, #152]	; (8016574 <enet_phy_config+0x9c>)
 80164dc:	2001      	movs	r0, #1
 80164de:	692c      	ldr	r4, [r5, #16]
 80164e0:	f7fe fcc0 	bl	8014e64 <rcu_clock_freq_get>
 80164e4:	4b24      	ldr	r3, [pc, #144]	; (8016578 <enet_phy_config+0xa0>)
 80164e6:	4a25      	ldr	r2, [pc, #148]	; (801657c <enet_phy_config+0xa4>)
 80164e8:	4403      	add	r3, r0
 80164ea:	4293      	cmp	r3, r2
 80164ec:	f024 041c 	bic.w	r4, r4, #28
 80164f0:	d21f      	bcs.n	8016532 <enet_phy_config+0x5a>
 80164f2:	f044 0408 	orr.w	r4, r4, #8
 80164f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80164fa:	612c      	str	r4, [r5, #16]
 80164fc:	2200      	movs	r2, #0
 80164fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016502:	2101      	movs	r1, #1
 8016504:	f10d 0306 	add.w	r3, sp, #6
 8016508:	2002      	movs	r0, #2
 801650a:	f7ff ffbb 	bl	8016484 <enet_phy_write_read>
 801650e:	b350      	cbz	r0, 8016566 <enet_phy_config+0x8e>
 8016510:	481b      	ldr	r0, [pc, #108]	; (8016580 <enet_phy_config+0xa8>)
 8016512:	2200      	movs	r2, #0
 8016514:	f7ff fea2 	bl	801625c <enet_delay>
 8016518:	2101      	movs	r1, #1
 801651a:	f10d 0306 	add.w	r3, sp, #6
 801651e:	4610      	mov	r0, r2
 8016520:	f7ff ffb0 	bl	8016484 <enet_phy_write_read>
 8016524:	b1f8      	cbz	r0, 8016566 <enet_phy_config+0x8e>
 8016526:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801652a:	43c0      	mvns	r0, r0
 801652c:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8016530:	e01a      	b.n	8016568 <enet_phy_config+0x90>
 8016532:	4b14      	ldr	r3, [pc, #80]	; (8016584 <enet_phy_config+0xac>)
 8016534:	4a14      	ldr	r2, [pc, #80]	; (8016588 <enet_phy_config+0xb0>)
 8016536:	4403      	add	r3, r0
 8016538:	4293      	cmp	r3, r2
 801653a:	d802      	bhi.n	8016542 <enet_phy_config+0x6a>
 801653c:	f044 040c 	orr.w	r4, r4, #12
 8016540:	e7d9      	b.n	80164f6 <enet_phy_config+0x1e>
 8016542:	4b12      	ldr	r3, [pc, #72]	; (801658c <enet_phy_config+0xb4>)
 8016544:	4a12      	ldr	r2, [pc, #72]	; (8016590 <enet_phy_config+0xb8>)
 8016546:	4403      	add	r3, r0
 8016548:	4293      	cmp	r3, r2
 801654a:	d3d4      	bcc.n	80164f6 <enet_phy_config+0x1e>
 801654c:	4b11      	ldr	r3, [pc, #68]	; (8016594 <enet_phy_config+0xbc>)
 801654e:	4a12      	ldr	r2, [pc, #72]	; (8016598 <enet_phy_config+0xc0>)
 8016550:	4403      	add	r3, r0
 8016552:	4293      	cmp	r3, r2
 8016554:	d802      	bhi.n	801655c <enet_phy_config+0x84>
 8016556:	f044 0404 	orr.w	r4, r4, #4
 801655a:	e7cc      	b.n	80164f6 <enet_phy_config+0x1e>
 801655c:	4b0f      	ldr	r3, [pc, #60]	; (801659c <enet_phy_config+0xc4>)
 801655e:	4a10      	ldr	r2, [pc, #64]	; (80165a0 <enet_phy_config+0xc8>)
 8016560:	4403      	add	r3, r0
 8016562:	4293      	cmp	r3, r2
 8016564:	d902      	bls.n	801656c <enet_phy_config+0x94>
 8016566:	2000      	movs	r0, #0
 8016568:	b003      	add	sp, #12
 801656a:	bd30      	pop	{r4, r5, pc}
 801656c:	f044 0410 	orr.w	r4, r4, #16
 8016570:	e7c1      	b.n	80164f6 <enet_phy_config+0x1e>
 8016572:	bf00      	nop
 8016574:	40028000 	andmi	r8, r2, r0
 8016578:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 801657c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8016580:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8016584:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8016588:	017d783f 	cmneq	sp, pc, lsr r8
 801658c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8016590:	02625a00 	rsbeq	r5, r2, #0, 20
 8016594:	fa0a1f00 	blx	829e19c <__exidx_end+0x284190>
 8016598:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 801659c:	f70f2e80 			; <UNDEFINED> instruction: 0xf70f2e80
 80165a0:	02faf080 	rscseq	pc, sl, #128	; 0x80

080165a4 <enet_init>:
 80165a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80165a6:	2300      	movs	r3, #0
 80165a8:	4604      	mov	r4, r0
 80165aa:	460d      	mov	r5, r1
 80165ac:	4616      	mov	r6, r2
 80165ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80165b2:	f7ff ff91 	bl	80164d8 <enet_phy_config>
 80165b6:	2800      	cmp	r0, #0
 80165b8:	d032      	beq.n	8016620 <enet_init+0x7c>
 80165ba:	4b39      	ldr	r3, [pc, #228]	; (80166a0 <enet_init+0xfc>)
 80165bc:	4a39      	ldr	r2, [pc, #228]	; (80166a4 <enet_init+0x100>)
 80165be:	6819      	ldr	r1, [r3, #0]
 80165c0:	400a      	ands	r2, r1
 80165c2:	601a      	str	r2, [r3, #0]
 80165c4:	2200      	movs	r2, #0
 80165c6:	605a      	str	r2, [r3, #4]
 80165c8:	609a      	str	r2, [r3, #8]
 80165ca:	60da      	str	r2, [r3, #12]
 80165cc:	6999      	ldr	r1, [r3, #24]
 80165ce:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80165d2:	0409      	lsls	r1, r1, #16
 80165d4:	0c09      	lsrs	r1, r1, #16
 80165d6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80165da:	6199      	str	r1, [r3, #24]
 80165dc:	4932      	ldr	r1, [pc, #200]	; (80166a8 <enet_init+0x104>)
 80165de:	61da      	str	r2, [r3, #28]
 80165e0:	6988      	ldr	r0, [r1, #24]
 80165e2:	4b32      	ldr	r3, [pc, #200]	; (80166ac <enet_init+0x108>)
 80165e4:	4003      	ands	r3, r0
 80165e6:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80165ea:	618b      	str	r3, [r1, #24]
 80165ec:	680b      	ldr	r3, [r1, #0]
 80165ee:	4b30      	ldr	r3, [pc, #192]	; (80166b0 <enet_init+0x10c>)
 80165f0:	600b      	str	r3, [r1, #0]
 80165f2:	2c01      	cmp	r4, #1
 80165f4:	d01e      	beq.n	8016634 <enet_init+0x90>
 80165f6:	08e3      	lsrs	r3, r4, #3
 80165f8:	0861      	lsrs	r1, r4, #1
 80165fa:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80165fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016602:	430b      	orrs	r3, r1
 8016604:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016608:	2101      	movs	r1, #1
 801660a:	f10d 0306 	add.w	r3, sp, #6
 801660e:	2002      	movs	r0, #2
 8016610:	f7ff ff38 	bl	8016484 <enet_phy_write_read>
 8016614:	b158      	cbz	r0, 801662e <enet_init+0x8a>
 8016616:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801661a:	f7ff fe1f 	bl	801625c <enet_delay>
 801661e:	e05e      	b.n	80166de <enet_init+0x13a>
 8016620:	4824      	ldr	r0, [pc, #144]	; (80166b4 <enet_init+0x110>)
 8016622:	f7ff fe1b 	bl	801625c <enet_delay>
 8016626:	f7ff ff57 	bl	80164d8 <enet_phy_config>
 801662a:	2800      	cmp	r0, #0
 801662c:	d1c5      	bne.n	80165ba <enet_init+0x16>
 801662e:	2000      	movs	r0, #0
 8016630:	b003      	add	sp, #12
 8016632:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016634:	4f20      	ldr	r7, [pc, #128]	; (80166b8 <enet_init+0x114>)
 8016636:	4614      	mov	r4, r2
 8016638:	2201      	movs	r2, #1
 801663a:	4611      	mov	r1, r2
 801663c:	f10d 0306 	add.w	r3, sp, #6
 8016640:	2000      	movs	r0, #0
 8016642:	f7ff ff1f 	bl	8016484 <enet_phy_write_read>
 8016646:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801664a:	f002 0204 	and.w	r2, r2, #4
 801664e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016652:	3401      	adds	r4, #1
 8016654:	b912      	cbnz	r2, 801665c <enet_init+0xb8>
 8016656:	42bc      	cmp	r4, r7
 8016658:	d1ee      	bne.n	8016638 <enet_init+0x94>
 801665a:	e7e8      	b.n	801662e <enet_init+0x8a>
 801665c:	42bc      	cmp	r4, r7
 801665e:	d0e6      	beq.n	801662e <enet_init+0x8a>
 8016660:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8016664:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016668:	2101      	movs	r1, #1
 801666a:	2200      	movs	r2, #0
 801666c:	2002      	movs	r0, #2
 801666e:	f7ff ff09 	bl	8016484 <enet_phy_write_read>
 8016672:	2800      	cmp	r0, #0
 8016674:	d0db      	beq.n	801662e <enet_init+0x8a>
 8016676:	4f10      	ldr	r7, [pc, #64]	; (80166b8 <enet_init+0x114>)
 8016678:	2400      	movs	r4, #0
 801667a:	2201      	movs	r2, #1
 801667c:	4611      	mov	r1, r2
 801667e:	f10d 0306 	add.w	r3, sp, #6
 8016682:	2000      	movs	r0, #0
 8016684:	f7ff fefe 	bl	8016484 <enet_phy_write_read>
 8016688:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801668c:	f002 0220 	and.w	r2, r2, #32
 8016690:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016694:	3401      	adds	r4, #1
 8016696:	b98a      	cbnz	r2, 80166bc <enet_init+0x118>
 8016698:	42bc      	cmp	r4, r7
 801669a:	d1ee      	bne.n	801667a <enet_init+0xd6>
 801669c:	e7c7      	b.n	801662e <enet_init+0x8a>
 801669e:	bf00      	nop
 80166a0:	40028000 	andmi	r8, r2, r0
 80166a4:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 80166a8:	40029000 	andmi	r9, r2, r0
 80166ac:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 80166b0:	02c16000 	sbceq	r6, r1, #0
 80166b4:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 80166b8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80166bc:	42bc      	cmp	r4, r7
 80166be:	d0b6      	beq.n	801662e <enet_init+0x8a>
 80166c0:	2101      	movs	r1, #1
 80166c2:	2210      	movs	r2, #16
 80166c4:	2000      	movs	r0, #0
 80166c6:	f7ff fedd 	bl	8016484 <enet_phy_write_read>
 80166ca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80166ce:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80166d2:	0799      	lsls	r1, r3, #30
 80166d4:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80166d8:	d401      	bmi.n	80166de <enet_init+0x13a>
 80166da:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80166de:	4b69      	ldr	r3, [pc, #420]	; (8016884 <enet_init+0x2e0>)
 80166e0:	681a      	ldr	r2, [r3, #0]
 80166e2:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80166e6:	4314      	orrs	r4, r2
 80166e8:	056a      	lsls	r2, r5, #21
 80166ea:	601c      	str	r4, [r3, #0]
 80166ec:	d50b      	bpl.n	8016706 <enet_init+0x162>
 80166ee:	681a      	ldr	r2, [r3, #0]
 80166f0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80166f4:	601a      	str	r2, [r3, #0]
 80166f6:	4a64      	ldr	r2, [pc, #400]	; (8016888 <enet_init+0x2e4>)
 80166f8:	6993      	ldr	r3, [r2, #24]
 80166fa:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80166fe:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8016702:	431d      	orrs	r5, r3
 8016704:	6195      	str	r5, [r2, #24]
 8016706:	485f      	ldr	r0, [pc, #380]	; (8016884 <enet_init+0x2e0>)
 8016708:	6843      	ldr	r3, [r0, #4]
 801670a:	431e      	orrs	r6, r3
 801670c:	4b5f      	ldr	r3, [pc, #380]	; (801688c <enet_init+0x2e8>)
 801670e:	6046      	str	r6, [r0, #4]
 8016710:	681a      	ldr	r2, [r3, #0]
 8016712:	07d7      	lsls	r7, r2, #31
 8016714:	d513      	bpl.n	801673e <enet_init+0x19a>
 8016716:	6801      	ldr	r1, [r0, #0]
 8016718:	685a      	ldr	r2, [r3, #4]
 801671a:	4c5d      	ldr	r4, [pc, #372]	; (8016890 <enet_init+0x2ec>)
 801671c:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
 8016720:	4014      	ands	r4, r2
 8016722:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8016726:	4321      	orrs	r1, r4
 8016728:	6001      	str	r1, [r0, #0]
 801672a:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 801672e:	0892      	lsrs	r2, r2, #2
 8016730:	6981      	ldr	r1, [r0, #24]
 8016732:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8016736:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 801673a:	430a      	orrs	r2, r1
 801673c:	6182      	str	r2, [r0, #24]
 801673e:	681a      	ldr	r2, [r3, #0]
 8016740:	0796      	lsls	r6, r2, #30
 8016742:	d508      	bpl.n	8016756 <enet_init+0x1b2>
 8016744:	4950      	ldr	r1, [pc, #320]	; (8016888 <enet_init+0x2e4>)
 8016746:	6898      	ldr	r0, [r3, #8]
 8016748:	680a      	ldr	r2, [r1, #0]
 801674a:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 801674e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8016752:	4302      	orrs	r2, r0
 8016754:	600a      	str	r2, [r1, #0]
 8016756:	681a      	ldr	r2, [r3, #0]
 8016758:	0755      	lsls	r5, r2, #29
 801675a:	d508      	bpl.n	801676e <enet_init+0x1ca>
 801675c:	494a      	ldr	r1, [pc, #296]	; (8016888 <enet_init+0x2e4>)
 801675e:	68d8      	ldr	r0, [r3, #12]
 8016760:	680a      	ldr	r2, [r1, #0]
 8016762:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8016766:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 801676a:	4302      	orrs	r2, r0
 801676c:	600a      	str	r2, [r1, #0]
 801676e:	681a      	ldr	r2, [r3, #0]
 8016770:	0714      	lsls	r4, r2, #28
 8016772:	d508      	bpl.n	8016786 <enet_init+0x1e2>
 8016774:	4944      	ldr	r1, [pc, #272]	; (8016888 <enet_init+0x2e4>)
 8016776:	6918      	ldr	r0, [r3, #16]
 8016778:	680a      	ldr	r2, [r1, #0]
 801677a:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 801677e:	f022 0202 	bic.w	r2, r2, #2
 8016782:	4302      	orrs	r2, r0
 8016784:	600a      	str	r2, [r1, #0]
 8016786:	681a      	ldr	r2, [r3, #0]
 8016788:	06d0      	lsls	r0, r2, #27
 801678a:	d506      	bpl.n	801679a <enet_init+0x1f6>
 801678c:	493e      	ldr	r1, [pc, #248]	; (8016888 <enet_init+0x2e4>)
 801678e:	4a41      	ldr	r2, [pc, #260]	; (8016894 <enet_init+0x2f0>)
 8016790:	6988      	ldr	r0, [r1, #24]
 8016792:	4002      	ands	r2, r0
 8016794:	6958      	ldr	r0, [r3, #20]
 8016796:	4302      	orrs	r2, r0
 8016798:	618a      	str	r2, [r1, #24]
 801679a:	681a      	ldr	r2, [r3, #0]
 801679c:	0691      	lsls	r1, r2, #26
 801679e:	d511      	bpl.n	80167c4 <enet_init+0x220>
 80167a0:	4839      	ldr	r0, [pc, #228]	; (8016888 <enet_init+0x2e4>)
 80167a2:	699a      	ldr	r2, [r3, #24]
 80167a4:	6981      	ldr	r1, [r0, #24]
 80167a6:	4c3c      	ldr	r4, [pc, #240]	; (8016898 <enet_init+0x2f4>)
 80167a8:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 80167ac:	4014      	ands	r4, r2
 80167ae:	f021 0104 	bic.w	r1, r1, #4
 80167b2:	4321      	orrs	r1, r4
 80167b4:	6181      	str	r1, [r0, #24]
 80167b6:	6801      	ldr	r1, [r0, #0]
 80167b8:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80167bc:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80167c0:	430a      	orrs	r2, r1
 80167c2:	6002      	str	r2, [r0, #0]
 80167c4:	681a      	ldr	r2, [r3, #0]
 80167c6:	0652      	lsls	r2, r2, #25
 80167c8:	d506      	bpl.n	80167d8 <enet_init+0x234>
 80167ca:	492e      	ldr	r1, [pc, #184]	; (8016884 <enet_init+0x2e0>)
 80167cc:	69d8      	ldr	r0, [r3, #28]
 80167ce:	69ca      	ldr	r2, [r1, #28]
 80167d0:	0c52      	lsrs	r2, r2, #17
 80167d2:	0452      	lsls	r2, r2, #17
 80167d4:	4302      	orrs	r2, r0
 80167d6:	61ca      	str	r2, [r1, #28]
 80167d8:	681a      	ldr	r2, [r3, #0]
 80167da:	0617      	lsls	r7, r2, #24
 80167dc:	d517      	bpl.n	801680e <enet_init+0x26a>
 80167de:	4c29      	ldr	r4, [pc, #164]	; (8016884 <enet_init+0x2e0>)
 80167e0:	6a1a      	ldr	r2, [r3, #32]
 80167e2:	69a0      	ldr	r0, [r4, #24]
 80167e4:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80167e8:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80167ec:	0400      	lsls	r0, r0, #16
 80167ee:	0c00      	lsrs	r0, r0, #16
 80167f0:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80167f4:	4301      	orrs	r1, r0
 80167f6:	4824      	ldr	r0, [pc, #144]	; (8016888 <enet_init+0x2e4>)
 80167f8:	61a1      	str	r1, [r4, #24]
 80167fa:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80167fe:	0a12      	lsrs	r2, r2, #8
 8016800:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8016804:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8016808:	430a      	orrs	r2, r1
 801680a:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801680e:	681a      	ldr	r2, [r3, #0]
 8016810:	05d6      	lsls	r6, r2, #23
 8016812:	bf42      	ittt	mi
 8016814:	4a1b      	ldrmi	r2, [pc, #108]	; (8016884 <enet_init+0x2e0>)
 8016816:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8016818:	6091      	strmi	r1, [r2, #8]
 801681a:	681a      	ldr	r2, [r3, #0]
 801681c:	0595      	lsls	r5, r2, #22
 801681e:	bf42      	ittt	mi
 8016820:	4a18      	ldrmi	r2, [pc, #96]	; (8016884 <enet_init+0x2e0>)
 8016822:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8016824:	60d1      	strmi	r1, [r2, #12]
 8016826:	681a      	ldr	r2, [r3, #0]
 8016828:	0554      	lsls	r4, r2, #21
 801682a:	d508      	bpl.n	801683e <enet_init+0x29a>
 801682c:	4915      	ldr	r1, [pc, #84]	; (8016884 <enet_init+0x2e0>)
 801682e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8016830:	684a      	ldr	r2, [r1, #4]
 8016832:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8016836:	f022 0206 	bic.w	r2, r2, #6
 801683a:	4302      	orrs	r2, r0
 801683c:	604a      	str	r2, [r1, #4]
 801683e:	681a      	ldr	r2, [r3, #0]
 8016840:	0510      	lsls	r0, r2, #20
 8016842:	d508      	bpl.n	8016856 <enet_init+0x2b2>
 8016844:	490f      	ldr	r1, [pc, #60]	; (8016884 <enet_init+0x2e0>)
 8016846:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8016848:	680a      	ldr	r2, [r1, #0]
 801684a:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801684e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8016852:	4302      	orrs	r2, r0
 8016854:	600a      	str	r2, [r1, #0]
 8016856:	681a      	ldr	r2, [r3, #0]
 8016858:	04d1      	lsls	r1, r2, #19
 801685a:	d506      	bpl.n	801686a <enet_init+0x2c6>
 801685c:	4909      	ldr	r1, [pc, #36]	; (8016884 <enet_init+0x2e0>)
 801685e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8016860:	680a      	ldr	r2, [r1, #0]
 8016862:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8016866:	4302      	orrs	r2, r0
 8016868:	600a      	str	r2, [r1, #0]
 801686a:	681a      	ldr	r2, [r3, #0]
 801686c:	0492      	lsls	r2, r2, #18
 801686e:	d506      	bpl.n	801687e <enet_init+0x2da>
 8016870:	4904      	ldr	r1, [pc, #16]	; (8016884 <enet_init+0x2e0>)
 8016872:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016874:	680a      	ldr	r2, [r1, #0]
 8016876:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801687a:	4313      	orrs	r3, r2
 801687c:	600b      	str	r3, [r1, #0]
 801687e:	2001      	movs	r0, #1
 8016880:	e6d6      	b.n	8016630 <enet_init+0x8c>
 8016882:	bf00      	nop
 8016884:	40028000 	andmi	r8, r2, r0
 8016888:	40029000 	andmi	r9, r2, r0
 801688c:	2000ff14 	andcs	pc, r0, r4, lsl pc	; <UNPREDICTABLE>
 8016890:	02000080 	andeq	r0, r0, #128	; 0x80
 8016894:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c
 8016898:	01000004 	tsteq	r0, r4

0801689c <enet_txfifo_flush>:
 801689c:	4b06      	ldr	r3, [pc, #24]	; (80168b8 <enet_txfifo_flush+0x1c>)
 801689e:	4807      	ldr	r0, [pc, #28]	; (80168bc <enet_txfifo_flush+0x20>)
 80168a0:	699a      	ldr	r2, [r3, #24]
 80168a2:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80168a6:	619a      	str	r2, [r3, #24]
 80168a8:	699a      	ldr	r2, [r3, #24]
 80168aa:	02d2      	lsls	r2, r2, #11
 80168ac:	d502      	bpl.n	80168b4 <enet_txfifo_flush+0x18>
 80168ae:	3801      	subs	r0, #1
 80168b0:	d1fa      	bne.n	80168a8 <enet_txfifo_flush+0xc>
 80168b2:	4770      	bx	lr
 80168b4:	2001      	movs	r0, #1
 80168b6:	4770      	bx	lr
 80168b8:	40029000 	andmi	r9, r2, r0
 80168bc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080168c0 <enet_tx_enable>:
 80168c0:	4a06      	ldr	r2, [pc, #24]	; (80168dc <enet_tx_enable+0x1c>)
 80168c2:	b508      	push	{r3, lr}
 80168c4:	6813      	ldr	r3, [r2, #0]
 80168c6:	f043 0308 	orr.w	r3, r3, #8
 80168ca:	6013      	str	r3, [r2, #0]
 80168cc:	f7ff ffe6 	bl	801689c <enet_txfifo_flush>
 80168d0:	4a03      	ldr	r2, [pc, #12]	; (80168e0 <enet_tx_enable+0x20>)
 80168d2:	6993      	ldr	r3, [r2, #24]
 80168d4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80168d8:	6193      	str	r3, [r2, #24]
 80168da:	bd08      	pop	{r3, pc}
 80168dc:	40028000 	andmi	r8, r2, r0
 80168e0:	40029000 	andmi	r9, r2, r0

080168e4 <enet_enable>:
 80168e4:	b508      	push	{r3, lr}
 80168e6:	f7ff ffeb 	bl	80168c0 <enet_tx_enable>
 80168ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80168ee:	f7ff bdbb 	b.w	8016468 <enet_rx_enable>
	...

080168f4 <enet_desc_information_get>:
 80168f4:	2905      	cmp	r1, #5
 80168f6:	d820      	bhi.n	801693a <enet_desc_information_get+0x46>
 80168f8:	e8df f001 	tbb	[pc, r1]
 80168fc:	0309191b 	movweq	r1, #39195	; 0x991b
 8016900:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8016904:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016908:	4770      	bx	lr
 801690a:	88c0      	ldrh	r0, [r0, #6]
 801690c:	e7fa      	b.n	8016904 <enet_desc_information_get+0x10>
 801690e:	6802      	ldr	r2, [r0, #0]
 8016910:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8016914:	2b04      	cmp	r3, #4
 8016916:	d913      	bls.n	8016940 <enet_desc_information_get+0x4c>
 8016918:	490a      	ldr	r1, [pc, #40]	; (8016944 <enet_desc_information_get+0x50>)
 801691a:	6809      	ldr	r1, [r1, #0]
 801691c:	0189      	lsls	r1, r1, #6
 801691e:	f1a3 0004 	sub.w	r0, r3, #4
 8016922:	d50e      	bpl.n	8016942 <enet_desc_information_get+0x4e>
 8016924:	f012 0f20 	tst.w	r2, #32
 8016928:	bf18      	it	ne
 801692a:	4618      	movne	r0, r3
 801692c:	4770      	bx	lr
 801692e:	6880      	ldr	r0, [r0, #8]
 8016930:	4770      	bx	lr
 8016932:	6800      	ldr	r0, [r0, #0]
 8016934:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8016938:	4770      	bx	lr
 801693a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801693e:	4770      	bx	lr
 8016940:	2000      	movs	r0, #0
 8016942:	4770      	bx	lr
 8016944:	40028000 	andmi	r8, r2, r0

08016948 <enet_rxframe_drop>:
 8016948:	4815      	ldr	r0, [pc, #84]	; (80169a0 <enet_rxframe_drop+0x58>)
 801694a:	4916      	ldr	r1, [pc, #88]	; (80169a4 <enet_rxframe_drop+0x5c>)
 801694c:	6802      	ldr	r2, [r0, #0]
 801694e:	b510      	push	{r4, lr}
 8016950:	6854      	ldr	r4, [r2, #4]
 8016952:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8016956:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801695a:	6013      	str	r3, [r2, #0]
 801695c:	680b      	ldr	r3, [r1, #0]
 801695e:	d009      	beq.n	8016974 <enet_rxframe_drop+0x2c>
 8016960:	b12b      	cbz	r3, 801696e <enet_rxframe_drop+0x26>
 8016962:	68da      	ldr	r2, [r3, #12]
 8016964:	6002      	str	r2, [r0, #0]
 8016966:	681a      	ldr	r2, [r3, #0]
 8016968:	b1ba      	cbz	r2, 801699a <enet_rxframe_drop+0x52>
 801696a:	600a      	str	r2, [r1, #0]
 801696c:	bd10      	pop	{r4, pc}
 801696e:	68d3      	ldr	r3, [r2, #12]
 8016970:	6003      	str	r3, [r0, #0]
 8016972:	e7fb      	b.n	801696c <enet_rxframe_drop+0x24>
 8016974:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8016978:	4c0b      	ldr	r4, [pc, #44]	; (80169a8 <enet_rxframe_drop+0x60>)
 801697a:	d006      	beq.n	801698a <enet_rxframe_drop+0x42>
 801697c:	68e2      	ldr	r2, [r4, #12]
 801697e:	6002      	str	r2, [r0, #0]
 8016980:	2b00      	cmp	r3, #0
 8016982:	d0f3      	beq.n	801696c <enet_rxframe_drop+0x24>
 8016984:	681b      	ldr	r3, [r3, #0]
 8016986:	600b      	str	r3, [r1, #0]
 8016988:	e7f0      	b.n	801696c <enet_rxframe_drop+0x24>
 801698a:	6824      	ldr	r4, [r4, #0]
 801698c:	3210      	adds	r2, #16
 801698e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8016992:	4422      	add	r2, r4
 8016994:	6002      	str	r2, [r0, #0]
 8016996:	2b00      	cmp	r3, #0
 8016998:	d0e8      	beq.n	801696c <enet_rxframe_drop+0x24>
 801699a:	3310      	adds	r3, #16
 801699c:	e7f3      	b.n	8016986 <enet_rxframe_drop+0x3e>
 801699e:	bf00      	nop
 80169a0:	2000ff0c 	andcs	pc, r0, ip, lsl #30
 80169a4:	2000ff04 	andcs	pc, r0, r4, lsl #30
 80169a8:	40029000 	andmi	r9, r2, r0

080169ac <enet_rxframe_size_get>:
 80169ac:	b508      	push	{r3, lr}
 80169ae:	4b10      	ldr	r3, [pc, #64]	; (80169f0 <enet_rxframe_size_get+0x44>)
 80169b0:	681b      	ldr	r3, [r3, #0]
 80169b2:	681b      	ldr	r3, [r3, #0]
 80169b4:	2b00      	cmp	r3, #0
 80169b6:	db19      	blt.n	80169ec <enet_rxframe_size_get+0x40>
 80169b8:	f403 4203 	and.w	r2, r3, #33536	; 0x8300
 80169bc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80169c0:	d003      	beq.n	80169ca <enet_rxframe_size_get+0x1e>
 80169c2:	f7ff ffc1 	bl	8016948 <enet_rxframe_drop>
 80169c6:	2001      	movs	r0, #1
 80169c8:	bd08      	pop	{r3, pc}
 80169ca:	f003 0221 	and.w	r2, r3, #33	; 0x21
 80169ce:	2a21      	cmp	r2, #33	; 0x21
 80169d0:	d0f7      	beq.n	80169c2 <enet_rxframe_size_get+0x16>
 80169d2:	4908      	ldr	r1, [pc, #32]	; (80169f4 <enet_rxframe_size_get+0x48>)
 80169d4:	6809      	ldr	r1, [r1, #0]
 80169d6:	f3c3 420d 	ubfx	r2, r3, #16, #14
 80169da:	0189      	lsls	r1, r1, #6
 80169dc:	f1a2 0004 	sub.w	r0, r2, #4
 80169e0:	d5f2      	bpl.n	80169c8 <enet_rxframe_size_get+0x1c>
 80169e2:	f013 0f20 	tst.w	r3, #32
 80169e6:	bf18      	it	ne
 80169e8:	4610      	movne	r0, r2
 80169ea:	e7ed      	b.n	80169c8 <enet_rxframe_size_get+0x1c>
 80169ec:	2000      	movs	r0, #0
 80169ee:	e7eb      	b.n	80169c8 <enet_rxframe_size_get+0x1c>
 80169f0:	2000ff0c 	andcs	pc, r0, ip, lsl #30
 80169f4:	40028000 	andmi	r8, r2, r0

080169f8 <enet_initpara_reset>:
 80169f8:	4b08      	ldr	r3, [pc, #32]	; (8016a1c <enet_initpara_reset+0x24>)
 80169fa:	2200      	movs	r2, #0
 80169fc:	e9c3 2200 	strd	r2, r2, [r3]
 8016a00:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8016a04:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8016a08:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8016a0c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8016a10:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8016a14:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8016a18:	639a      	str	r2, [r3, #56]	; 0x38
 8016a1a:	4770      	bx	lr
 8016a1c:	2000ff14 	andcs	pc, r0, r4, lsl pc	; <UNPREDICTABLE>

08016a20 <enet_deinit>:
 8016a20:	b508      	push	{r3, lr}
 8016a22:	f240 4019 	movw	r0, #1049	; 0x419
 8016a26:	f7fe f9fc 	bl	8014e22 <rcu_periph_reset_enable>
 8016a2a:	f240 4019 	movw	r0, #1049	; 0x419
 8016a2e:	f7fe f9fa 	bl	8014e26 <rcu_periph_reset_disable>
 8016a32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016a36:	f7ff bfdf 	b.w	80169f8 <enet_initpara_reset>
	...

08016a3c <i2c_clock_config>:
 8016a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a3e:	4605      	mov	r5, r0
 8016a40:	2002      	movs	r0, #2
 8016a42:	460c      	mov	r4, r1
 8016a44:	4617      	mov	r7, r2
 8016a46:	f7fe fa0d 	bl	8014e64 <rcu_clock_freq_get>
 8016a4a:	4a26      	ldr	r2, [pc, #152]	; (8016ae4 <i2c_clock_config+0xa8>)
 8016a4c:	686e      	ldr	r6, [r5, #4]
 8016a4e:	4603      	mov	r3, r0
 8016a50:	4825      	ldr	r0, [pc, #148]	; (8016ae8 <i2c_clock_config+0xac>)
 8016a52:	fbb3 f0f0 	udiv	r0, r3, r0
 8016a56:	4293      	cmp	r3, r2
 8016a58:	bf94      	ite	ls
 8016a5a:	4601      	movls	r1, r0
 8016a5c:	2132      	movhi	r1, #50	; 0x32
 8016a5e:	4a23      	ldr	r2, [pc, #140]	; (8016aec <i2c_clock_config+0xb0>)
 8016a60:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8016a64:	430e      	orrs	r6, r1
 8016a66:	4294      	cmp	r4, r2
 8016a68:	606e      	str	r6, [r5, #4]
 8016a6a:	d811      	bhi.n	8016a90 <i2c_clock_config+0x54>
 8016a6c:	3001      	adds	r0, #1
 8016a6e:	2831      	cmp	r0, #49	; 0x31
 8016a70:	bf86      	itte	hi
 8016a72:	2232      	movhi	r2, #50	; 0x32
 8016a74:	622a      	strhi	r2, [r5, #32]
 8016a76:	6228      	strls	r0, [r5, #32]
 8016a78:	0064      	lsls	r4, r4, #1
 8016a7a:	fbb3 f4f4 	udiv	r4, r3, r4
 8016a7e:	2c04      	cmp	r4, #4
 8016a80:	69ea      	ldr	r2, [r5, #28]
 8016a82:	bf38      	it	cc
 8016a84:	2404      	movcc	r4, #4
 8016a86:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8016a8a:	4314      	orrs	r4, r2
 8016a8c:	61ec      	str	r4, [r5, #28]
 8016a8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016a90:	4a17      	ldr	r2, [pc, #92]	; (8016af0 <i2c_clock_config+0xb4>)
 8016a92:	4294      	cmp	r4, r2
 8016a94:	d8fb      	bhi.n	8016a8e <i2c_clock_config+0x52>
 8016a96:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8016a9a:	4351      	muls	r1, r2
 8016a9c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8016aa0:	fbb1 f1f2 	udiv	r1, r1, r2
 8016aa4:	3101      	adds	r1, #1
 8016aa6:	6229      	str	r1, [r5, #32]
 8016aa8:	b9a7      	cbnz	r7, 8016ad4 <i2c_clock_config+0x98>
 8016aaa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016aae:	fbb3 f4f4 	udiv	r4, r3, r4
 8016ab2:	69eb      	ldr	r3, [r5, #28]
 8016ab4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016ab8:	61eb      	str	r3, [r5, #28]
 8016aba:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8016abe:	b90b      	cbnz	r3, 8016ac4 <i2c_clock_config+0x88>
 8016ac0:	f044 0401 	orr.w	r4, r4, #1
 8016ac4:	69eb      	ldr	r3, [r5, #28]
 8016ac6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8016aca:	61eb      	str	r3, [r5, #28]
 8016acc:	69eb      	ldr	r3, [r5, #28]
 8016ace:	4323      	orrs	r3, r4
 8016ad0:	61eb      	str	r3, [r5, #28]
 8016ad2:	e7dc      	b.n	8016a8e <i2c_clock_config+0x52>
 8016ad4:	2219      	movs	r2, #25
 8016ad6:	4354      	muls	r4, r2
 8016ad8:	fbb3 f4f4 	udiv	r4, r3, r4
 8016adc:	69eb      	ldr	r3, [r5, #28]
 8016ade:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8016ae2:	e7e9      	b.n	8016ab8 <i2c_clock_config+0x7c>
 8016ae4:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8016ae8:	000f4240 	andeq	r4, pc, r0, asr #4
 8016aec:	000186a0 	andeq	r8, r1, r0, lsr #13
 8016af0:	00061a80 	andeq	r1, r6, r0, lsl #21

08016af4 <i2c_ack_config>:
 8016af4:	6803      	ldr	r3, [r0, #0]
 8016af6:	2901      	cmp	r1, #1
 8016af8:	bf0c      	ite	eq
 8016afa:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8016afe:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8016b02:	6003      	str	r3, [r0, #0]
 8016b04:	4770      	bx	lr

08016b06 <i2c_ackpos_config>:
 8016b06:	6803      	ldr	r3, [r0, #0]
 8016b08:	b919      	cbnz	r1, 8016b12 <i2c_ackpos_config+0xc>
 8016b0a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8016b0e:	6003      	str	r3, [r0, #0]
 8016b10:	4770      	bx	lr
 8016b12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016b16:	e7fa      	b.n	8016b0e <i2c_ackpos_config+0x8>

08016b18 <i2c_master_addressing>:
 8016b18:	3202      	adds	r2, #2
 8016b1a:	bf0c      	ite	eq
 8016b1c:	f021 0101 	biceq.w	r1, r1, #1
 8016b20:	f041 0101 	orrne.w	r1, r1, #1
 8016b24:	6101      	str	r1, [r0, #16]
 8016b26:	4770      	bx	lr

08016b28 <i2c_enable>:
 8016b28:	6803      	ldr	r3, [r0, #0]
 8016b2a:	f043 0301 	orr.w	r3, r3, #1
 8016b2e:	6003      	str	r3, [r0, #0]
 8016b30:	4770      	bx	lr

08016b32 <i2c_start_on_bus>:
 8016b32:	6803      	ldr	r3, [r0, #0]
 8016b34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016b38:	6003      	str	r3, [r0, #0]
 8016b3a:	4770      	bx	lr

08016b3c <i2c_stop_on_bus>:
 8016b3c:	6803      	ldr	r3, [r0, #0]
 8016b3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8016b42:	6003      	str	r3, [r0, #0]
 8016b44:	4770      	bx	lr

08016b46 <i2c_data_transmit>:
 8016b46:	6101      	str	r1, [r0, #16]
 8016b48:	4770      	bx	lr

08016b4a <i2c_data_receive>:
 8016b4a:	6900      	ldr	r0, [r0, #16]
 8016b4c:	b2c0      	uxtb	r0, r0
 8016b4e:	4770      	bx	lr

08016b50 <i2c_flag_get>:
 8016b50:	098b      	lsrs	r3, r1, #6
 8016b52:	f001 011f 	and.w	r1, r1, #31
 8016b56:	581a      	ldr	r2, [r3, r0]
 8016b58:	2301      	movs	r3, #1
 8016b5a:	408b      	lsls	r3, r1
 8016b5c:	4213      	tst	r3, r2
 8016b5e:	bf14      	ite	ne
 8016b60:	2001      	movne	r0, #1
 8016b62:	2000      	moveq	r0, #0
 8016b64:	4770      	bx	lr

08016b66 <i2c_flag_clear>:
 8016b66:	f240 5301 	movw	r3, #1281	; 0x501
 8016b6a:	4299      	cmp	r1, r3
 8016b6c:	b510      	push	{r4, lr}
 8016b6e:	d102      	bne.n	8016b76 <i2c_flag_clear+0x10>
 8016b70:	6943      	ldr	r3, [r0, #20]
 8016b72:	6983      	ldr	r3, [r0, #24]
 8016b74:	bd10      	pop	{r4, pc}
 8016b76:	098c      	lsrs	r4, r1, #6
 8016b78:	2201      	movs	r2, #1
 8016b7a:	5823      	ldr	r3, [r4, r0]
 8016b7c:	f001 011f 	and.w	r1, r1, #31
 8016b80:	408a      	lsls	r2, r1
 8016b82:	ea23 0302 	bic.w	r3, r3, r2
 8016b86:	5023      	str	r3, [r4, r0]
 8016b88:	e7f4      	b.n	8016b74 <i2c_flag_clear+0xe>
	...

08016b8c <syscfg_enet_phy_interface_config>:
 8016b8c:	4a04      	ldr	r2, [pc, #16]	; (8016ba0 <syscfg_enet_phy_interface_config+0x14>)
 8016b8e:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8016b92:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8016b96:	4318      	orrs	r0, r3
 8016b98:	f8c2 0804 	str.w	r0, [r2, #2052]	; 0x804
 8016b9c:	4770      	bx	lr
 8016b9e:	bf00      	nop
 8016ba0:	40013000 	andmi	r3, r1, r0

08016ba4 <mac_address_get(unsigned char*)>:
 8016ba4:	4a07      	ldr	r2, [pc, #28]	; (8016bc4 <mac_address_get(unsigned char*)+0x20>)
 8016ba6:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8016baa:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	; 0xa14
 8016bae:	7042      	strb	r2, [r0, #1]
 8016bb0:	0e1a      	lsrs	r2, r3, #24
 8016bb2:	7082      	strb	r2, [r0, #2]
 8016bb4:	0c1a      	lsrs	r2, r3, #16
 8016bb6:	2102      	movs	r1, #2
 8016bb8:	70c2      	strb	r2, [r0, #3]
 8016bba:	0a1a      	lsrs	r2, r3, #8
 8016bbc:	7001      	strb	r1, [r0, #0]
 8016bbe:	7102      	strb	r2, [r0, #4]
 8016bc0:	7143      	strb	r3, [r0, #5]
 8016bc2:	4770      	bx	lr
 8016bc4:	1fff7000 	svcne	0x00ff7000

08016bc8 <__popcountsi2>:
 8016bc8:	0843      	lsrs	r3, r0, #1
 8016bca:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8016bce:	1ac0      	subs	r0, r0, r3
 8016bd0:	0883      	lsrs	r3, r0, #2
 8016bd2:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8016bd6:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8016bda:	4418      	add	r0, r3
 8016bdc:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8016be0:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8016be4:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8016be8:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8016bec:	0e00      	lsrs	r0, r0, #24
 8016bee:	4770      	bx	lr

Disassembly of section .rodata:

08016bf0 <vtable for DisplayHandler-0x148>:
	...
 8016bf8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8016bfc:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8016c00:	00000000 	andeq	r0, r0, r0
 8016c04:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8016c08:	313a3231 	teqcc	sl, r1, lsr r2
 8016c0c:	35353a32 	ldrcc	r3, [r5, #-2610]!	; 0xfffff5ce
 8016c10:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8016c14:	20313120 	eorscs	r3, r1, r0, lsr #2
 8016c18:	32323032 	eorscc	r3, r2, #50	; 0x32
 8016c1c:	335b1b00 	cmpcc	fp, #0, 22
 8016c20:	44446d32 	strbmi	r6, [r4], #-3378	; 0xfffff2ce
 8016c24:	69502050 	ldmdbvs	r0, {r4, r6, sp}^
 8016c28:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8016c2c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 8016c30:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 8016c34:	7b207265 	blvc	88335d0 <__exidx_end+0x8195c4>
 8016c38:	20783631 	rsbscs	r3, r8, r1, lsr r6
 8016c3c:	6e552034 	mrcvs	0, 2, r2, cr5, cr4, {1}
 8016c40:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8016c44:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
 8016c48:	32202f20 	eorcc	r2, r0, #32, 30	; 0x80
 8016c4c:	4d442078 	stclmi	0, cr2, [r4, #-480]	; 0xfffffe20
 8016c50:	335b1b58 	cmpcc	fp, #88, 22	; 0x16000
 8016c54:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8016c58:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8016c5c:	00676966 	rsbeq	r6, r7, r6, ror #18
 8016c60:	66745f2e 	ldrbtvs	r5, [r4], -lr, lsr #30
 8016c64:	2e007074 	mcrcs	0, 0, r7, cr0, cr4, {3}
 8016c68:	7064645f 	rsbvc	r6, r4, pc, asr r4
 8016c6c:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8016c70:	69643d65 	stmdbvs	r4!, {r0, r2, r5, r6, r8, sl, fp, ip, sp}^
 8016c74:	616c7073 	smcvs	50947	; 0xc703
 8016c78:	5f2e0079 	svcpl	0x002e0079
 8016c7c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8016c80:	646f6e00 	strbtvs	r6, [pc], #-3584	; 8016c88 <_etext+0x98>
 8016c84:	44443d65 	strbmi	r3, [r4], #-3429	; 0xfffff29b
 8016c88:	69502050 	ldmdbvs	r0, {r4, r6, sp}^
 8016c8c:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8016c90:	00584d44 	subseq	r4, r8, r4, asr #26
 8016c94:	20504444 	subscs	r4, r0, r4, asr #8
 8016c98:	70736944 	rsbsvc	r6, r3, r4, asr #18
 8016c9c:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8016ca0:	252d7525 	strcs	r7, [sp, #-1317]!	; 0xfffffadb
 8016ca4:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8016ca8:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8016cac:	00783220 	rsbseq	r3, r8, r0, lsr #4
 8016cb0:	6e61724f 	cdpvs	2, 6, cr7, cr1, cr15, {2}
 8016cb4:	50206567 	eorpl	r6, r0, r7, ror #10
 8016cb8:	655a2069 	ldrbvs	r2, [sl, #-105]	; 0xffffff97
 8016cbc:	50206f72 	eorpl	r6, r0, r2, ror pc
 8016cc0:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8016cc4:	584d442d 	stmdapl	sp, {r0, r2, r3, r5, sl, lr}^
 8016cc8:	50444400 	subpl	r4, r4, r0, lsl #8
 8016ccc:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8016cd0:	25206c65 	strcs	r6, [r0, #-3173]!	; 0xfffff39b
 8016cd4:	75257875 	strvc	r7, [r5, #-2165]!	; 0xfffff78b
 8016cd8:	3a732500 	bcc	9ce00e0 <__exidx_end+0x1cc60d4>
 8016cdc:	47206425 	strmi	r6, [r0, -r5, lsr #8]!
 8016ce0:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 8016ce4:	73250073 			; <UNDEFINED> instruction: 0x73250073
 8016ce8:	0075253a 	rsbseq	r2, r5, sl, lsr r5
 8016cec:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8016cf0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8016cf4:	50444420 	subpl	r4, r4, r0, lsr #8
 8016cf8:	73694420 	cmnvc	r9, #32, 8	; 0x20000000
 8016cfc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016d00:	50444400 	subpl	r4, r4, r0, lsl #8
 8016d04:	73694420 	cmnvc	r9, #32, 8	; 0x20000000
 8016d08:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016d0c:	61745320 	cmnvs	r4, r0, lsr #6
 8016d10:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 8016d14:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 8016d18:	72620021 	rsbvc	r0, r2, #33	; 0x21
 8016d1c:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8016d20:	62616d00 	rsbvs	r6, r1, #0, 26
 8016d24:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 8016d28:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8016d2c:	73002368 	movwvc	r2, #872	; 0x368
 8016d30:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8016d34:	00000023 	andeq	r0, r0, r3, lsr #32

08016d38 <vtable for DisplayHandler>:
	...
 8016d40:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 8016d44:	080091c3 	stmdaeq	r0, {r0, r1, r6, r7, r8, ip, pc}
 8016d48:	08009225 	stmdaeq	r0, {r0, r2, r5, r9, ip, pc}

08016d4c <vtable for PixelDmxStartStop>:
	...
 8016d54:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8016d58:	080091db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, ip, pc}
 8016d5c:	08009085 	stmdaeq	r0, {r0, r2, r7, ip, pc}
 8016d60:	08009095 	stmdaeq	r0, {r0, r2, r4, r7, ip, pc}

08016d64 <vtable for LightSet64with4>:
	...
 8016d6c:	080090c9 	stmdaeq	r0, {r0, r3, r6, r7, ip, pc}
 8016d70:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 8016d74:	080090cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, ip, pc}
 8016d78:	080090ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, pc}
 8016d7c:	0800910f 	stmdaeq	r0, {r0, r1, r2, r3, r8, ip, pc}
 8016d80:	08009143 	stmdaeq	r0, {r0, r1, r6, r8, ip, pc}
 8016d84:	0800907f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, ip, pc}
 8016d88:	08009165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip, pc}
 8016d8c:	08009183 	stmdaeq	r0, {r0, r1, r7, r8, ip, pc}
 8016d90:	08009187 	stmdaeq	r0, {r0, r1, r2, r7, r8, ip, pc}
 8016d94:	0800918d 	stmdaeq	r0, {r0, r2, r3, r7, r8, ip, pc}
 8016d98:	08009191 	stmdaeq	r0, {r0, r4, r7, r8, ip, pc}

08016d9c <vtable for RDMNetDevice>:
	...
 8016da4:	08009275 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, ip, pc}
 8016da8:	0800929d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, ip, pc}
 8016dac:	0800c649 	stmdaeq	r0, {r0, r3, r6, r9, sl, lr, pc}
 8016db0:	0800c64b 	stmdaeq	r0, {r0, r1, r3, r6, r9, sl, lr, pc}
 8016db4:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8016db8:	080091a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, ip, pc}
 8016dbc:	080091f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, ip, pc}
 8016dc0:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8016dc4:	00000000 	andeq	r0, r0, r0
 8016dc8:	08009295 	stmdaeq	r0, {r0, r2, r4, r7, r9, ip, pc}
 8016dcc:	080092af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, ip, pc}
 8016dd0:	080091a1 	stmdaeq	r0, {r0, r5, r7, r8, ip, pc}
 8016dd4:	080091b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, pc}
 8016dd8:	08009209 	stmdaeq	r0, {r0, r3, r9, ip, pc}

08016ddc <vtable for FactoryDefaults>:
	...
 8016de4:	080091c1 	stmdaeq	r0, {r0, r6, r7, r8, ip, pc}
 8016de8:	080091e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, ip, pc}
 8016dec:	0800942d 	stmdaeq	r0, {r0, r2, r3, r5, sl, ip, pc}

08016df0 <CSWTCH.128>:
 8016df0:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8016df4:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08016df5 <SOFTWARE_VERSION>:
 8016df5:	00342e31 	eorseq	r2, r4, r1, lsr lr

08016df9 <gamma10_0>:
 8016df9:	03020100 	movweq	r0, #8448	; 0x2100
 8016dfd:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8016e01:	0b0a0908 	bleq	8299229 <__exidx_end+0x27f21d>
 8016e05:	0f0e0d0c 	svceq	0x000e0d0c
 8016e09:	13121110 	tstne	r2, #16, 2
 8016e0d:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8016e11:	1b1a1918 	blne	869d279 <__exidx_end+0x68326d>
 8016e15:	1f1e1d1c 	svcne	0x001e1d1c
 8016e19:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016e1d:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8016e21:	2b2a2928 	blcs	8aa12c9 <__exidx_end+0xa872bd>
 8016e25:	2f2e2d2c 	svccs	0x002e2d2c
 8016e29:	33323130 	teqcc	r2, #48, 2
 8016e2d:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016e31:	3b3a3938 	blcc	8ea5319 <__exidx_end+0xe8b30d>
 8016e35:	3f3e3d3c 	svccc	0x003e3d3c
 8016e39:	43424140 	movtmi	r4, #8512	; 0x2140
 8016e3d:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016e41:	4b4a4948 	blmi	92a9369 <__exidx_end+0x128f35d>
 8016e45:	4f4e4d4c 	svcmi	0x004e4d4c
 8016e49:	53525150 	cmppl	r2, #80, 2
 8016e4d:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8016e51:	5b5a5958 	blpl	96ad3b9 <__exidx_end+0x16933ad>
 8016e55:	5f5e5d5c 	svcpl	0x005e5d5c
 8016e59:	63626160 	cmnvs	r2, #96, 2
 8016e5d:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8016e61:	6b6a6968 	blvs	9ab1409 <__exidx_end+0x1a973fd>
 8016e65:	6f6e6d6c 	svcvs	0x006e6d6c
 8016e69:	73727170 	cmnvc	r2, #112, 2
 8016e6d:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016e71:	7b7a7978 	blvc	9eb5459 <__exidx_end+0x1e9b44d>
 8016e75:	7f7e7d7c 	svcvc	0x007e7d7c
 8016e79:	83828180 	orrhi	r8, r2, #128, 2
 8016e7d:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016e81:	8b8a8988 	blhi	62b94a9 <__stack_size+0x62b54a9>
 8016e85:	8f8e8d8c 	svchi	0x008e8d8c
 8016e89:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016e8d:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016e91:	9b9a9998 	blls	66bd4f9 <__stack_size+0x66b94f9>
 8016e95:	9f9e9d9c 	svcls	0x009e9d9c
 8016e99:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016e9d:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8016ea1:	abaaa9a8 	blge	6ac1549 <__stack_size+0x6abd549>
 8016ea5:	afaeadac 	svcge	0x00aeadac
 8016ea9:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016ead:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8016eb1:	bbbab9b8 	bllt	6ec5599 <__stack_size+0x6ec1599>
 8016eb5:	bfbebdbc 	svclt	0x00bebdbc
 8016eb9:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016ebd:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8016ec1:	cbcac9c8 	blgt	72c95e9 <__stack_size+0x72c55e9>
 8016ec5:	cfcecdcc 	svcgt	0x00cecdcc
 8016ec9:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8016ecd:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8016ed1:	dbdad9d8 	blle	76cd639 <__stack_size+0x76c9639>
 8016ed5:	dfdedddc 	svcle	0x00dedddc
 8016ed9:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8016edd:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8016ee1:	ebeae9e8 	bl	7ad1689 <__stack_size+0x7acd689>
 8016ee5:	efeeedec 	svc	0x00eeedec
 8016ee9:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8016eed:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8016ef1:	fbfaf9f8 	blx	7ed56db <__stack_size+0x7ed16db>
 8016ef5:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08016ef9 <SOFTWARE_VERSION>:
 8016ef9:	00342e31 	eorseq	r2, r4, r1, lsr lr
 8016efd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016f01:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016f05:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8016f09:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8016f0d:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8016f11:	0a73252c 	beq	9ce03c9 <__exidx_end+0x1cc63bd>
 8016f15:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8016f19:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016f1d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016f21:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8016f25:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8016f29:	4f000a64 	svcmi	0x00000a64
 8016f2d:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8016f31:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8016f35:	616c7073 	smcvs	50947	; 0xc703
 8016f39:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8016f3d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8016f41:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8016f45:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8016f49:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016f4d:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8016f51:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8016f55:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016f59:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016f5d:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8016f61:	20505446 	subscs	r5, r0, r6, asr #8
 8016f65:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8016f69:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8016f6d:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8016f71:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8016f75:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8016f79:	525b2066 	subspl	r2, fp, #102	; 0x66
 8016f7d:	6f6f6265 	svcvs	0x006f6265
 8016f81:	00205d74 	eoreq	r5, r0, r4, ror sp
 8016f85:	4f525245 	svcmi	0x00525245
 8016f89:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8016f8d:	000a7465 	andeq	r7, sl, r5, ror #8
 8016f91:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8016f95:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8016f99:	616c7073 	smcvs	50947	; 0xc703
 8016f9d:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8016fa1:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8016fa5:	000a2123 	andeq	r2, sl, r3, lsr #2
 8016fa9:	4f525245 	svcmi	0x00525245
 8016fad:	0a3f2352 	beq	8fdfcfd <__exidx_end+0xfc5cf1>
 8016fb1:	62657200 	rsbvs	r7, r5, #0, 4
 8016fb5:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8016fb9:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8016fbd:	00237473 	eoreq	r7, r3, r3, ror r4
 8016fc1:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016fc5:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8016fc9:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016fcd:	76002365 	strvc	r2, [r0], -r5, ror #6
 8016fd1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016fd5:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8016fd9:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8016fdd:	63616600 	cmnvs	r1, #0, 12
 8016fe1:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016fe5:	 	tstmi	r0, r3, lsr #6

08016fe8 <s_Node>:
 8016fe8:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8016fec:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8016ff8:	41730000 	cmnmi	r3, r0
 8016ffc:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8017000:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801700c:	2043534f 	subcs	r5, r3, pc, asr #6
 8017010:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8017014:	00007265 	andeq	r7, r0, r5, ror #4
 8017018:	00000000 	andeq	r0, r0, r0
 801701c:	544c0000 	strbpl	r0, [ip], #-0
 8017020:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8017030:	2043534f 	subcs	r5, r3, pc, asr #6
 8017034:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8017038:	0000746e 	andeq	r7, r0, lr, ror #8
 801703c:	00000000 	andeq	r0, r0, r0
 8017040:	44520000 	ldrbmi	r0, [r2], #-0
 8017044:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8017048:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801704c:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8017050:	0000796c 	andeq	r7, r0, ip, ror #18
 8017054:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8017058:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8017064:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8017068:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8017078:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8017088:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 801708c:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8017090:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8017094:	00000072 	andeq	r0, r0, r2, ror r0
 8017098:	00000000 	andeq	r0, r0, r0
 801709c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

080170ae <s_Output>:
 80170ae:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80170ba:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80170c6:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80170ca:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80170ce:	00000000 	andeq	r0, r0, r0
 80170d2:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80170d6:	0000006c 	andeq	r0, r0, ip, rrx
 80170da:	00000000 	andeq	r0, r0, r0
 80170de:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80170e2:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80170e6:	00000000 	andeq	r0, r0, r0
 80170ea:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80170f6:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80170fa:	00006769 	andeq	r6, r0, r9, ror #14
 80170fe:	00000000 	andeq	r0, r0, r0
 8017102:	70657453 	rsbvc	r7, r5, r3, asr r4
 8017106:	00726570 	rsbseq	r6, r2, r0, ror r5
 801710a:	00000000 	andeq	r0, r0, r0
 801710e:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8017112:	00007265 	andeq	r7, r0, r5, ror #4
 8017116:	00000000 	andeq	r0, r0, r0
 801711a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801711e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8017122:	00000000 	andeq	r0, r0, r0
 8017126:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801712a:	00006c61 	andeq	r6, r0, r1, ror #24
 801712e:	00000000 	andeq	r0, r0, r0
 8017132:	20424752 	subcs	r4, r2, r2, asr r7
 8017136:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801713a:	0000006c 	andeq	r0, r0, ip, rrx
	...

08017140 <RemoteConfig::s_GET>:
 8017140:	0800b155 	stmdaeq	r0, {r0, r2, r4, r6, r8, ip, sp, pc}
 8017144:	00000000 	andeq	r0, r0, r0
 8017148:	08016fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp, sp, lr}
 801714c:	00000008 	andeq	r0, r0, r8
 8017150:	0800a639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, sp, pc}
 8017154:	00000000 	andeq	r0, r0, r0
 8017158:	08016fbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, sp, lr}
 801715c:	00000005 	andeq	r0, r0, r5
 8017160:	0800a639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, sp, pc}
 8017164:	00000000 	andeq	r0, r0, r0
 8017168:	08016fc1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, fp, sp, lr}
 801716c:	00000006 	andeq	r0, r0, r6
 8017170:	0800a7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp, pc}
 8017174:	00000000 	andeq	r0, r0, r0
 8017178:	08016fc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sl, fp, sp, lr}
 801717c:	00000007 	andeq	r0, r0, r7
 8017180:	0800a7ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, sp, pc}
 8017184:	00000000 	andeq	r0, r0, r0
 8017188:	08016fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp, sp, lr}
 801718c:	00000008 	andeq	r0, r0, r8
 8017190:	0800a709 	stmdaeq	r0, {r0, r3, r8, r9, sl, sp, pc}
 8017194:	00000000 	andeq	r0, r0, r0
 8017198:	08016f97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, fp, sp, lr}
 801719c:	00000008 	andeq	r0, r0, r8
 80171a0:	0800aac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, sp, pc}
 80171a4:	00000000 	andeq	r0, r0, r0
 80171a8:	08016fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 80171ac:	00010004 	andeq	r0, r1, r4
 80171b0:	0800a75d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, sl, sp, pc}
 80171b4:	00000000 	andeq	r0, r0, r0
 80171b8:	08016f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
 80171bc:	00000005 	andeq	r0, r0, r5
 80171c0:	0800ae45 	stmdaeq	r0, {r0, r2, r6, r9, sl, fp, sp, pc}
 80171c4:	00000000 	andeq	r0, r0, r0
 80171c8:	08016fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 80171cc:	00000009 	andeq	r0, r0, r9

080171d0 <RemoteConfig::s_SET>:
 80171d0:	0800a899 	stmdaeq	r0, {r0, r3, r4, r7, fp, sp, pc}
 80171d4:	00000000 	andeq	r0, r0, r0
 80171d8:	08016f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
 80171dc:	00010005 	andeq	r0, r1, r5
 80171e0:	0800a871 	stmdaeq	r0, {r0, r4, r5, r6, fp, sp, pc}
 80171e4:	00000000 	andeq	r0, r0, r0
 80171e8:	08016f97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, fp, sp, lr}
 80171ec:	00010008 	andeq	r0, r1, r8
 80171f0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80171f4:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80171f8:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80171fc:	0a64253d 	beq	99206f8 <__exidx_end+0x19066ec>
 8017200:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8017204:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017208:	002c2273 	eoreq	r2, ip, r3, ror r2
 801720c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8017210:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017214:	6f626552 	svcvs	0x00626552
 8017218:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801721c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8017220:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8017224:	6f6f6265 	svcvs	0x006f6265
 8017228:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801722c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8017230:	6f637200 	svcvs	0x00637200
 8017234:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017238:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801723c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8017240:	6b726f77 	blvs	9cb3024 <__exidx_end+0x1c99018>
 8017244:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8017248:	73696400 	cmnvc	r9, #0, 8
 801724c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017250:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8017254:	72617000 	rsbvc	r7, r1, #0
 8017258:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 801725c:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017260:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8017264:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8017268:	00747874 	rsbseq	r7, r4, r4, ror r8

0801726c <RemoteConfig::s_TXT>:
 801726c:	0800aac9 	stmdaeq	r0, {r0, r3, r6, r7, r9, fp, sp, pc}
 8017270:	00000000 	andeq	r0, r0, r0
 8017274:	0800ad75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, sp, pc}
 8017278:	00000000 	andeq	r0, r0, r0
 801727c:	08017231 	stmdaeq	r1, {r0, r4, r5, r9, ip, sp, lr}
 8017280:	0000000b 	andeq	r0, r0, fp
 8017284:	0000000c 	andeq	r0, r0, ip
 8017288:	0800aaf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, sp, pc}
 801728c:	00000000 	andeq	r0, r0, r0
 8017290:	0800ada5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, sp, pc}
 8017294:	00000000 	andeq	r0, r0, r0
 8017298:	0801723d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, ip, sp, lr}
 801729c:	0000000b 	andeq	r0, r0, fp
 80172a0:	00000000 	andeq	r0, r0, r0
 80172a4:	0800ab85 	stmdaeq	r0, {r0, r2, r7, r8, r9, fp, sp, pc}
 80172a8:	00000000 	andeq	r0, r0, r0
 80172ac:	0800ae1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, fp, sp, pc}
 80172b0:	00000000 	andeq	r0, r0, r0
 80172b4:	08017249 	stmdaeq	r1, {r0, r3, r6, r9, ip, sp, lr}
 80172b8:	0000000b 	andeq	r0, r0, fp
 80172bc:	0000000f 	andeq	r0, r0, pc
 80172c0:	0800ab29 	stmdaeq	r0, {r0, r3, r5, r8, r9, fp, sp, pc}
 80172c4:	00000000 	andeq	r0, r0, r0
 80172c8:	0800adcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, fp, sp, pc}
 80172cc:	00000000 	andeq	r0, r0, r0
 80172d0:	08017255 	stmdaeq	r1, {r0, r2, r4, r6, r9, ip, sp, lr}
 80172d4:	0000000a 	andeq	r0, r0, sl
 80172d8:	00000002 	andeq	r0, r0, r2
 80172dc:	0800ab55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, fp, sp, pc}
 80172e0:	00000000 	andeq	r0, r0, r0
 80172e4:	0800adf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sl, fp, sp, pc}
 80172e8:	00000000 	andeq	r0, r0, r0
 80172ec:	08017260 	stmdaeq	r1, {r5, r6, r9, ip, sp, lr}
 80172f0:	0000000b 	andeq	r0, r0, fp
 80172f4:	00000003 	andeq	r0, r0, r3
 80172f8:	00544547 	subseq	r4, r4, r7, asr #10
 80172fc:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8017300:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8017304:	0a200050 	beq	881744c <__exidx_end+0x7fd440>
 8017308:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 801730c:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8017310:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8017314:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8017318:	3b200065 	blcc	88174b4 <__exidx_end+0x7fd4a8>
 801731c:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8017320:	6163696c 	cmnvs	r3, ip, ror #18
 8017324:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017328:	6f736a2f 	svcvs	0x00736a2f
 801732c:	6f43006e 	svcvs	0x0043006e
 8017330:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8017334:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8017338:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 801733c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8017340:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8017344:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017348:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 801734c:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8017350:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8017354:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8017358:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 801735c:	2f00736a 	svccs	0x0000736a
 8017360:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8017364:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8017368:	76007473 			; <UNDEFINED> instruction: 0x76007473
 801736c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017370:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8017374:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8017378:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 801737c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017380:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8017384:	6f736a2f 	svcvs	0x00736a2f
 8017388:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 801738c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017390:	62657200 	rsbvs	r7, r5, #0, 4
 8017394:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8017398:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 801739c:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80173a0:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80173a4:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80173a8:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80173ac:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80173b0:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80173b4:	0a3e6c6d 	beq	8fb2570 <__exidx_end+0xf98564>
 80173b8:	6165683c 	cmnvs	r5, ip, lsr r8
 80173bc:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80173c0:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80173c4:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 80173c8:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 80173cc:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80173d0:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80173d4:	6165682f 	cmnvs	r5, pc, lsr #16
 80173d8:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 80173dc:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80173e0:	31683c3e 	cmncc	r8, lr, lsr ip
 80173e4:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 80173e8:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 80173ec:	6f622f3c 	svcvs	0x00622f3c
 80173f0:	0a3e7964 	beq	8fb5988 <__exidx_end+0xf9b97c>
 80173f4:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 80173f8:	0a3e6c6d 	beq	8fb25b4 <__exidx_end+0xf985a8>
 80173fc:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 8017400:	71655220 	cmnvc	r5, r0, lsr #4
 8017404:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8017408:	746f4e00 	strbtvc	r4, [pc], #-3584	; 8017410 <RemoteConfig::s_TXT+0x1a4>
 801740c:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8016df4 <CSWTCH.128+0x4>
 8017410:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 8017414:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8017418:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 801741c:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8017420:	6f542079 	svcvs	0x00542079
 8017424:	614c206f 	cmpvs	ip, pc, rrx
 8017428:	00656772 	rsbeq	r6, r5, r2, ror r7
 801742c:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8017430:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8017434:	20495255 	subcs	r5, r9, r5, asr r2
 8017438:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 801743c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8017440:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8017444:	616e7265 	cmnvs	lr, r5, ror #4
 8017448:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 801744c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8017450:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8017454:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 8017458:	6f687465 	svcvs	0x00687465
 801745c:	6f4e2064 	svcvs	0x004e2064
 8017460:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8017464:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8017468:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801746c:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 8017470:	6f697372 	svcvs	0x00697372
 8017474:	6f4e206e 	svcvs	0x004e206e
 8017478:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 801747c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 8017480:	00646574 	rsbeq	r6, r4, r4, ror r5
 8017484:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8017488:	206e776f 	rsbcs	r7, lr, pc, ror #14
 801748c:	6f727245 	svcvs	0x00727245
 8017490:	4b4f0072 	blmi	93d7660 <__exidx_end+0x13bd654>
 8017494:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8017498:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 801749c:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80174a0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80174a4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80174a8:	0a3e6c6d 	beq	8fb2664 <__exidx_end+0xf98658>
 80174ac:	6165683c 	cmnvs	r5, ip, lsr r8
 80174b0:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80174b4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80174b8:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 80174bc:	2f3c7325 	svccs	0x003c7325
 80174c0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80174c4:	2f3c3e65 	svccs	0x003c3e65
 80174c8:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80174cc:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 80174d0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80174d4:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80174d8:	2f3c7325 	svccs	0x003c7325
 80174dc:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 80174e0:	646f622f 	strbtvs	r6, [pc], #-559	; 80174e8 <RemoteConfig::s_TXT+0x27c>
 80174e4:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 80174e8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80174ec:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80174f0:	50545448 	subspl	r5, r4, r8, asr #8
 80174f4:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 80174f8:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80174fc:	0a0d7325 	beq	8374198 <__exidx_end+0x35a18c>
 8017500:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8017504:	203a7265 	eorscs	r7, sl, r5, ror #4
 8017508:	0a0d7325 	beq	83741a4 <__exidx_end+0x35a198>
 801750c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8017510:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8017514:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8017518:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801751c:	6f430a0d 	svcvs	0x00430a0d
 8017520:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8017524:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8017528:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 801752c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8017530:	6f430a0d 	svcvs	0x00430a0d
 8017534:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8017538:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801753c:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8017540:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8017544:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8017548:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801754c:	30353446 	eorscc	r3, r5, r6, asr #8
 8017550:	 	strvc	r4, [r0], #-2390	; 0xfffff6aa

08017553 <contentType>:
 8017553:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8017557:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801755b:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8017573:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8017577:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8017593:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8017597:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801759b:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 801759f:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80175b3:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80175b7:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80175bb:	2f6e6f69 	svccs	0x006e6f69
 80175bf:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080175d3 <RemoteConfigConst::PARAMS_DISABLE>:
 80175d3:	61736964 	cmnvs	r3, r4, ror #18
 80175d7:	00656c62 	rsbeq	r6, r5, r2, ror #24

080175db <RemoteConfigConst::PARAMS_FILE_NAME>:
 80175db:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80175df:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80175e3:	00747874 	rsbseq	r7, r4, r4, ror r8

080175e7 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80175e7:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80175eb:	5f79616c 	svcpl	0x0079616c
 80175ef:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080175f4 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80175f4:	61736964 	cmnvs	r3, r4, ror #18
 80175f8:	5f656c62 	svcpl	0x00656c62
 80175fc:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8017600:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08017602 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8017602:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8017606:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 801760a:	6f6f6265 	svcvs	0x006f6265
 801760e:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08017610 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8017610:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8017614:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80170b0 <s_Output+0x2>
 8017618:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801761c:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801761e <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801761e:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8017622:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8017626:	6f746361 	svcvs	0x00746361
 801762a:	7b007972 	blvc	8035bfa <__exidx_end+0x1bbee>
 801762e:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8017632:	7b3a2274 	blvc	8ea000a <__exidx_end+0xe85ffe>
 8017636:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801763a:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801763e:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017642:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017646:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801764a:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801764e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017652:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8017656:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801765a:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801765e:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8017662:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8017666:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801766a:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801766e:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8017672:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8017676:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801767a:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801767e:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017682:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8017686:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801768a:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801768e:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017692:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8017696:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801769a:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801769e:	616f6222 	cmnvs	pc, r2, lsr #4
 80176a2:	3a226472 	bcc	88b0872 <__exidx_end+0x896866>
 80176a6:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80176aa:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80176ae:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80176b2:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80176b6:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80176ba:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80176be:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80176c2:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80176c6:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80176ca:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80176ce:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80176d2:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80176d6:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80176da:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80176de:	7b000a7d 	blvc	801a0da <__exidx_end+0xce>
 80176e2:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80176e6:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80176ea:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80176ee:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80176f2:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80176f6:	7b3a2273 	blvc	8ea00ca <__exidx_end+0xe860be>
 80176fa:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80176fe:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8017702:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8017706:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 801770a:	72542058 	subsvc	r2, r4, #88	; 0x58
 801770e:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8017712:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8017716:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 801771a:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 801771e:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8017722:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8017726:	5020584d 	eorpl	r5, r0, sp, asr #16
 801772a:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801772e:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8017732:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017736:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 801773a:	3a227478 	bcc	88b4922 <__exidx_end+0x89a916>
 801773e:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8017742:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017746:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 801774a:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 801774e:	6f777465 	svcvs	0x00777465
 8017752:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8017756:	3a227478 	bcc	88b493e <__exidx_end+0x89a932>
 801775a:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 801775e:	6b726f77 	blvs	9cb3542 <__exidx_end+0x1c99536>
 8017762:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8017766:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801776a:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 801776e:	3a227478 	bcc	88b4956 <__exidx_end+0x89a94a>
 8017772:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8017776:	2065746f 	rsbcs	r7, r5, pc, ror #8
 801777a:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801777e:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8017782:	6f697461 	svcvs	0x00697461
 8017786:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

0801778b <index_html>:
 801778b:	4f44213c 	svcmi	0x0044213c
 801778f:	50595443 	subspl	r5, r9, r3, asr #8
 8017793:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8017797:	0a3e6c6d 	beq	8fb2953 <__exidx_end+0xf98947>
 801779b:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 801779f:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80177a3:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80177a7:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 80177ab:	6b6e696c 	blvs	9bb1d63 <__exidx_end+0x1b97d57>
 80177af:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80177b3:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80177b7:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80177bb:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80177bf:	72682022 	rsbvc	r2, r8, #34	; 0x22
 80177c3:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80177c7:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80177cb:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80177cf:	20227373 	eorcs	r7, r2, r3, ror r3
 80177d3:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80177d7:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80177db:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80177df:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80177e3:	0a3e656c 	beq	8fb0d9b <__exidx_end+0xf96d8f>
 80177e7:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80177eb:	0a3e6461 	beq	8fb0977 <__exidx_end+0xf9696b>
 80177ef:	646f623c 	strbtvs	r6, [pc], #-572	; 80177f7 <index_html+0x6c>
 80177f3:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80177f7:	6165683c 	cmnvs	r5, ip, lsr r8
 80177fb:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80177ff:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8017803:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8017807:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801780b:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 801780f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8017813:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8017817:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801781b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801781f:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8017823:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8017827:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801782b:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801782f:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8017833:	6f746365 	svcvs	0x00746365
 8017837:	20227972 	eorcs	r7, r2, r2, ror r9
 801783b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801783f:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8017843:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8017847:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801784b:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801784f:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8017853:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8017857:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801785b:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801785f:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8017863:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8017867:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801786b:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801786f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8017873:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8017877:	20227478 	eorcs	r7, r2, r8, ror r4
 801787b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801787f:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8017883:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8017887:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801788b:	0a3e656c 	beq	8fb0e43 <__exidx_end+0xf96e37>
 801788f:	6f663c09 	svcvs	0x00663c09
 8017893:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8017897:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801789b:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801789f:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 80178a3:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80178a7:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 80178ab:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80178af:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 80178b3:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80178b7:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80178bb:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 80178bf:	20747069 	rsbscs	r7, r4, r9, rrx
 80178c3:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 80178c7:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 80178cb:	6a2e7865 	bvs	8bb5a67 <__exidx_end+0xb9ba5b>
 80178cf:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80178d3:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80178d7:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80178db:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80178df:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80178e3:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80178e7:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80178eb:	 	svcvs	0x0062000a

080178ed <styles_css>:
 80178ed:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80178f1:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80178f5:	63616220 	cmnvs	r1, #32, 4
 80178f9:	6f72676b 	svcvs	0x0072676b
 80178fd:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8017901:	6f6c6f63 	svcvs	0x006c6f63
 8017905:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8017909:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801790d:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8017911:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8017915:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8017919:	6f6c6f63 	svcvs	0x006c6f63
 801791d:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8017921:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8017925:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8017929:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 801792d:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8017931:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8017935:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8017939:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801793d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8017941:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017945:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8017949:	0a3b7865 	beq	8ef5ae5 <__exidx_end+0xedbad9>
 801794d:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8017951:	0a7b2069 	beq	9edfafd <__exidx_end+0x1ec5af1>
 8017955:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8017959:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801795d:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8017961:	6f6e203a 	svcvs	0x006e203a
 8017965:	0a3b656e 	beq	8ef0f25 <__exidx_end+0xed6f19>
 8017969:	616d2020 	cmnvs	sp, r0, lsr #32
 801796d:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8017971:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8017975:	70352078 	eorsvc	r2, r5, r8, ror r0
 8017979:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 801797d:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8017981:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8017985:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8017989:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801798d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017991:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8017995:	0a3b7865 	beq	8ef5b31 <__exidx_end+0xedbb25>
 8017999:	6f622020 	svcvs	0x00622020
 801799d:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80179a1:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80179a5:	3a737569 	bcc	9cf4f51 <__exidx_end+0x1cdaf45>
 80179a9:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80179ad:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80179b1:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80179b5:	203a7265 	eorscs	r7, sl, r5, ror #4
 80179b9:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80179bd:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80179c1:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80179c5:	0a3b7870 	beq	8ef5b8d <__exidx_end+0xedbb81>
 80179c9:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 80179cd:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80179d1:	0a7b2072 	beq	9edfba1 <__exidx_end+0x1ec5b95>
 80179d5:	69642020 	stmdbvs	r4!, {r5, sp}^
 80179d9:	616c7073 	smcvs	50947	; 0xc703
 80179dd:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80179e1:	3b78656c 	blcc	9e30f99 <__exidx_end+0x1e16f8d>
 80179e5:	6a20200a 	bvs	881fa15 <__exidx_end+0x805a09>
 80179e9:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80179ed:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80179f1:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80179f5:	203a746e 	eorscs	r7, sl, lr, ror #8
 80179f9:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80179fd:	0a3b7265 	beq	8ef4399 <__exidx_end+0xeda38d>
 8017a01:	6f622020 	svcvs	0x00622020
 8017a05:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8017a09:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8017a0d:	3a737569 	bcc	9cf4fb9 <__exidx_end+0x1cdafad>
 8017a11:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8017a15:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8017a19:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8017a1d:	203a7265 	eorscs	r7, sl, r5, ror #4
 8017a21:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017a25:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8017a29:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8017a2d:	0a3b7870 	beq	8ef5bf5 <__exidx_end+0xedbbe9>
 8017a31:	 	bmi	801a42d <__exidx_end+0x421>

08017a34 <HttpContent>:
 8017a34:	0801734a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp, lr}
 8017a38:	080178ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, fp, ip, sp, lr}
 8017a3c:	08017356 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, ip, sp, lr}
 8017a40:	08017a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, ip, sp, lr}
 8017a44:	0801733e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, ip, sp, lr}
 8017a48:	0801778b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip, sp, lr}

08017a4c <index_js>:
 8017a4c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017a50:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017a54:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017a58:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017a5c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017a60:	6a284e4f 	bvs	8a2b3a4 <__exidx_end+0xa11398>
 8017a64:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017a68:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017a6c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017a70:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8017a74:	6a2f273d 	bvs	8be1770 <__exidx_end+0xbc7764>
 8017a78:	2f6e6f73 	svccs	0x006e6f73
 8017a7c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8017a80:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8017a84:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8017a88:	20797274 	rsbscs	r7, r9, r4, ror r2
 8017a8c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8017a90:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8017a94:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8017a98:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8017a9c:	20746961 	rsbscs	r6, r4, r1, ror #18
 8017aa0:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8017aa4:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8017aa8:	0a3b296c 	beq	8ee2060 <__exidx_end+0xec8054>
 8017aac:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017ab0:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8017ab4:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8017ab8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017abc:	73657220 	cmnvc	r5, #32, 4
 8017ac0:	6f736a2e 	svcvs	0x00736a2e
 8017ac4:	3b29286e 	blcc	8a61c84 <__exidx_end+0xa47c78>
 8017ac8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8017acc:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8017ad0:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8017ad4:	6f727265 	svcvs	0x00727265
 8017ad8:	7b202972 	blvc	88220a8 <__exidx_end+0x80809c>
 8017adc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017ae0:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8017ae4:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8017ae8:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8017aec:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8017af0:	3b29726f 	blcc	8a744b4 <__exidx_end+0xa5a4a8>
 8017af4:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8017af8:	0a0a7d0a 	beq	82b6f28 <__exidx_end+0x29cf1c>
 8017afc:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017b00:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017b04:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017b08:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8017b0c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017b10:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8017b14:	20292874 	eorcs	r2, r9, r4, ror r8
 8017b18:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8017b1c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017b20:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017b24:	6177613d 	cmnvs	r7, sp, lsr r1
 8017b28:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017b2c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017b30:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8017b34:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017b38:	0a3b2927 	beq	8ee1fdc <__exidx_end+0xec7fd0>
 8017b3c:	6f640909 	svcvs	0x00640909
 8017b40:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8017b44:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8017b48:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017b4c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8017b50:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8017b54:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8017b58:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8017b5c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8017b60:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8017b64:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017b68:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8017b6c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017b70:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8017b74:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8017b78:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8017b7c:	2b656d61 	blcs	9973108 <__exidx_end+0x19590fc>
 8017b80:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017b00 <index_js+0xb4>
 8017b84:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017b88:	2b223e69 	blcs	88a7534 <__exidx_end+0x88d528>
 8017b8c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017b90:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017b94:	6f6e2e74 	svcvs	0x006e2e74
 8017b98:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8017b9c:	2b657079 	blcs	9973d88 <__exidx_end+0x1959d7c>
 8017ba0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017b20 <index_js+0xd4>
 8017ba4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017ba8:	2b223e69 	blcs	88a7554 <__exidx_end+0x88d548>
 8017bac:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017bb0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017bb4:	6f6e2e74 	svcvs	0x006e2e74
 8017bb8:	702e6564 	eorvc	r6, lr, r4, ror #10
 8017bbc:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8017bc0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8017bc4:	2f3c222b 	svccs	0x003c222b
 8017bc8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017bcc:	0a7d0a3b 	beq	9f5a4c0 <__exidx_end+0x1f404b4>
 8017bd0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8017bd4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8017bd8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017bdc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8017be0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017be4:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017be8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017bec:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8017bf0:	0a7b2029 	beq	9edfc9c <__exidx_end+0x1ec5c90>
 8017bf4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8017bf8:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8017bfc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017c00:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017c04:	6177613d 	cmnvs	r7, sp, lsr r1
 8017c08:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017c0c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017c10:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8017c14:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017c18:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017c1c:	3b292779 	blcc	8a61a08 <__exidx_end+0xa479fc>
 8017c20:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017c24:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017c28:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017c2c:	0a22223d 	beq	88a0528 <__exidx_end+0x88651c>
 8017c30:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8017c34:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8017c38:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8017c3c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8017c40:	6a624f3d 	bvs	98ab93c <__exidx_end+0x1891930>
 8017c44:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8017c48:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8017c4c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8017c50:	6f746365 	svcvs	0x00746365
 8017c54:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8017c58:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8017c5c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8017c60:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8017c64:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8017c68:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8017c6c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8017c70:	6145726f 	cmpvs	r5, pc, ror #4
 8017c74:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8017c78:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017c7c:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017c80:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8017c84:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017c88:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017c8c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8017c90:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8017c94:	203d2065 	eorscs	r2, sp, r5, rrx
 8017c98:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017c9c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017ca0:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8017ca4:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8017ca8:	6b5b5d22 	blvs	96ef138 <__exidx_end+0x16d512c>
 8017cac:	3b5d7965 	blcc	9776248 <__exidx_end+0x175c23c>
 8017cb0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017cb4:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8017cb8:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8017cbc:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8017cc0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017cc4:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8017cc8:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8017ccc:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017cd0:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8017cd4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017cd8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8017cdc:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8017ce0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017ce4:	0a3b223e 	beq	8ee05e4 <__exidx_end+0xec65d8>
 8017ce8:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8017cec:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017cf0:	6f640909 	svcvs	0x00640909
 8017cf4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8017cf8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8017cfc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017d00:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8017d04:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8017d08:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8017d0c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8017d10:	6f746365 	svcvs	0x00746365
 8017d14:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8017d18:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8017d1c:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8017d20:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8017d24:	3b6c6d74 	blcc	9b332fc <__exidx_end+0x1b192f0>
 8017d28:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017d2c:	5f746567 	svcpl	0x00746567
 8017d30:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8017d34:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8017d38:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8017d3c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8017d40:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8017d44:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8017d48:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8017d4c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017d50:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017d54:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8017d58:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8017d5c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017d60:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8017d64:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017d68:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017d6c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8017d70:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8017d74:	6177613d 	cmnvs	r7, sp, lsr r1
 8017d78:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017d7c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017d80:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8017d84:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017d88:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8017d8c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017d90:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8017d94:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8017d98:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8017d9c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8017da0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8017da4:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8017da8:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8017dac:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8017db0:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8017db4:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8017db8:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8017dbc:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8017dc0:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8017dc4:	2b22563e 	blcs	88ad6c4 <__exidx_end+0x8936b8>
 8017dc8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017dcc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8017dd0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017dd4:	2b6e6f69 	blcs	9bb3b80 <__exidx_end+0x1b99b74>
 8017dd8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017d58 <index_js+0x30c>
 8017ddc:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017de0:	2b223e69 	blcs	88a778c <__exidx_end+0x88d780>
 8017de4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017de8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8017dec:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8017df0:	61642e64 	cmnvs	r4, r4, ror #28
 8017df4:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8017df8:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8017dfc:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8017e00:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8017e04:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017e08:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8017e0c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8017e10:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8017e14:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8017e18:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8017e1c:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8017e20:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8017e24:	6f697372 	svcvs	0x00697372
 8017e28:	6f622e6e 	svcvs	0x00622e6e
 8017e2c:	2b647261 	blcs	99347b8 <__exidx_end+0x191a7ac>
 8017e30:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017db0 <index_js+0x364>
 8017e34:	3b223e69 	blcc	88a77e0 <__exidx_end+0x88d7d4>
 8017e38:	0a0a7d0a 	beq	82b7268 <__exidx_end+0x29d25c>
 8017e3c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017e40:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017e44:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017e48:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017e4c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8017e54 <index_js+0x408>
 8017e50:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8017e54:	20296c65 	eorcs	r6, r9, r5, ror #24
 8017e58:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8017e5c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8017e60:	613d7478 	teqvs	sp, r8, ror r4
 8017e64:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017e68:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8017e6c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8017e70:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8017e74:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017e78:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017e7c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017e80:	3b22223d 	blcc	88a077c <__exidx_end+0x886770>
 8017e84:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8017e88:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8017e8c:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8017e90:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8017e94:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017e98:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8017e9c:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8017ea0:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8017ea4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017ea8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017eac:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8017eb0:	0a7b2029 	beq	9edff5c <__exidx_end+0x1ec5f50>
 8017eb4:	61760909 	cmnvs	r6, r9, lsl #18
 8017eb8:	61762072 	cmnvs	r6, r2, ror r0
 8017ebc:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8017ec0:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8017ec4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017ec8:	6b5b5d6c 	blvs	96ef480 <__exidx_end+0x16d5474>
 8017ecc:	3b5d7965 	blcc	9776468 <__exidx_end+0x175c45c>
 8017ed0:	2009090a 	andcs	r0, r9, sl, lsl #18
 8017ed4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017ed8:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8017edc:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8017ee0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017ee4:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017ee8:	2f3c222b 	svccs	0x003c222b
 8017eec:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8017ef0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017ef4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017ef8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8017efc:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8017f00:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8017f08 <index_js+0x4bc>
 8017f04:	3b223e72 	blcc	88a78d4 <__exidx_end+0x88d8c8>
 8017f08:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8017f0c:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8017f10:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8017f14:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8017f18:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8017f1c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8017f20:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8017f24:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8017f28:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8017f2c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8017f30:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8017f34:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017f38:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8017f3c:	0a3b6c6d 	beq	8ef30f8 <__exidx_end+0xed90ec>
 8017f40:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8017f44:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017f48:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8017f4c:	3b292874 	blcc	8a62124 <__exidx_end+0xa48118>
 8017f50:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8017f54:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8017f58:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017f5c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017f60:	0a3b2928 	beq	8ee2408 <__exidx_end+0xec83fc>
 8017f64:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017f68:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8017f6c:	6f697372 	svcvs	0x00697372
 8017f70:	3b29286e 	blcc	8a62130 <__exidx_end+0xa48124>
 8017f74:	7468000a 	strbtvc	r0, [r8], #-10
 8017f78:	3a737074 	bcc	9cf4150 <__exidx_end+0x1cda144>
 8017f7c:	64672f2f 	strbtvs	r2, [r7], #-3887	; 0xfffff0d1
 8017f80:	642d3233 	strtvs	r3, [sp], #-563	; 0xfffffdcd
 8017f84:	6f2e786d 	svcvs	0x002e786d
 8017f88:	44006772 	strmi	r6, [r0], #-1906	; 0xfffff88e
 8017f8c:	44205044 	strtmi	r5, [r0], #-68	; 0xffffffbc
 8017f90:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017f94:	003a7961 	eorseq	r7, sl, r1, ror #18
 8017f98:	756f4320 	strbvc	r4, [pc, #-800]!	; 8017c80 <index_js+0x234>
 8017f9c:	2020746e 	eorcs	r7, r0, lr, ror #8
 8017fa0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017fa4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017fa8:	3a202020 	bcc	8820030 <__exidx_end+0x806024>
 8017fac:	0a752520 	beq	9d61434 <__exidx_end+0x1d47428>
 8017fb0:	68432000 	stmdavs	r3, {sp}^
 8017fb4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
 8017fb8:	7020736c 	eorvc	r7, r0, ip, ror #6
 8017fbc:	70207265 	eorvc	r7, r0, r5, ror #4
 8017fc0:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8017fc4:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8017fc8:	4120000a 			; <UNDEFINED> instruction: 0x4120000a
 8017fcc:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 8017fd0:	6f702065 	svcvs	0x00702065
 8017fd4:	20737472 	rsbscs	r7, r3, r2, ror r4
 8017fd8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017fdc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017fe0:	 	blvc	801a9bc <__exidx_end+0x9b0>

08017fe3 <json::CONFIG_REPLY>:
 8017fe3:	6f63227b 	svcvs	0x0063227b
 8017fe7:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017feb:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8017fef:	3a227069 	bcc	88b419b <__exidx_end+0x89a18f>
 8017ff3:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 8017ff7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017ffb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017fff:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8018003:	223a226d 	eorscs	r2, sl, #-805306362	; 0xd0000006
 8018007:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801800b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801800f:	2264252e 	rsbcs	r2, r4, #192937984	; 0xb800000
 8018013:	7767222c 	strbvc	r2, [r7, -ip, lsr #4]!
 8018017:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801801b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801801f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018023:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8018027:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 801802b:	3a227374 	bcc	88b4e03 <__exidx_end+0x89adf7>
 801802f:	70227b5b 	eorvc	r7, r2, fp, asr fp
 8018033:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8018037:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 801803b:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801803f:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8018043:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8018047:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801804b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801804f:	3a227373 	bcc	88b4e23 <__exidx_end+0x89ae17>
 8018053:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8018057:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801805b:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801805f:	2231223a 	eorscs	r2, r1, #-1610612733	; 0xa0000003
 8018063:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8018067:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801806b:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801806f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018073:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8018077:	3a227373 	bcc	88b4e4b <__exidx_end+0x89ae3f>
 801807b:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801807f:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8018083:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8018087:	2232223a 	eorscs	r2, r2, #-1610612733	; 0xa0000003
 801808b:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801808f:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8018093:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8018097:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801809b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801809f:	3a227373 	bcc	88b4e73 <__exidx_end+0x89ae67>
 80180a3:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80180a7:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80180ab:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80180af:	2233223a 	eorscs	r2, r3, #-1610612733	; 0xa0000003
 80180b3:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80180b7:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80180bb:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80180bf:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80180c3:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80180c7:	3a227373 	bcc	88b4e9b <__exidx_end+0x89ae8f>
 80180cb:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80180cf:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80180d3:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80180d7:	2234223a 	eorscs	r2, r4, #-1610612733	; 0xa0000003
 80180db:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80180df:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80180e3:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80180e7:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80180eb:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80180ef:	3a227373 	bcc	88b4ec3 <__exidx_end+0x89aeb7>
 80180f3:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80180f7:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80180fb:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80180ff:	2235223a 	eorscs	r2, r5, #-1610612733	; 0xa0000003
 8018103:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8018107:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801810b:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801810f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018113:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8018117:	3a227373 	bcc	88b4eeb <__exidx_end+0x89aedf>
 801811b:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801811f:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8018123:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8018127:	2236223a 	eorscs	r2, r6, #-1610612733	; 0xa0000003
 801812b:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801812f:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8018133:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8018137:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801813b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801813f:	3a227373 	bcc	88b4f13 <__exidx_end+0x89af07>
 8018143:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8018147:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801814b:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801814f:	2237223a 	eorscs	r2, r7, #-1610612733	; 0xa0000003
 8018153:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8018157:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801815b:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801815f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018163:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8018167:	3a227373 	bcc	88b4f3b <__exidx_end+0x89af2f>
 801816b:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801816f:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8018173:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8018177:	2238223a 	eorscs	r2, r8, #-1610612733	; 0xa0000003
 801817b:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801817f:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8018183:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8018187:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801818b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801818f:	3a227373 	bcc	88b4f63 <__exidx_end+0x89af57>
 8018193:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8018197:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801819b:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801819f:	2239223a 	eorscs	r2, r9, #-1610612733	; 0xa0000003
 80181a3:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80181a7:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80181ab:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80181af:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80181b3:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80181b7:	3a227373 	bcc	88b4f8b <__exidx_end+0x89af7f>
 80181bb:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80181bf:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80181c3:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80181c7:	3031223a 	eorscc	r2, r1, sl, lsr r2
 80181cb:	74222c22 	strtvc	r2, [r2], #-3106	; 0xfffff3de
 80181cf:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 80181d3:	222c2230 	eorcs	r2, ip, #48, 4
 80181d7:	223a226c 	eorscs	r2, sl, #108, 4	; 0xc0000006
 80181db:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 80181df:	22737322 	rsbscs	r7, r3, #-2013265920	; 0x88000000
 80181e3:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 80181e7:	227b2c7d 	rsbscs	r2, fp, #32000	; 0x7d00
 80181eb:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80181ef:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 80181f3:	222c2231 	eorcs	r2, ip, #268435459	; 0x10000003
 80181f7:	3a227374 	bcc	88b4fcf <__exidx_end+0x89afc3>
 80181fb:	2c223022 	stccs	0, cr3, [r2], #-136	; 0xffffff78
 80181ff:	3a226c22 	bcc	88b328f <__exidx_end+0x899283>
 8018203:	22642522 	rsbcs	r2, r4, #142606336	; 0x8800000
 8018207:	7373222c 	cmnvc	r3, #44, 4	; 0xc0000002
 801820b:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801820f:	7b2c7d22 	blvc	8b3769f <__exidx_end+0xb1d693>
 8018213:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 8018217:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 801821b:	2c223231 	sfmcs	f3, 4, [r2], #-196	; 0xffffff3c
 801821f:	22737422 	rsbscs	r7, r3, #570425344	; 0x22000000
 8018223:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8018227:	226c222c 	rsbcs	r2, ip, #44, 4	; 0xc0000002
 801822b:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801822f:	73222c22 			; <UNDEFINED> instruction: 0x73222c22
 8018233:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8018237:	2c7d2230 	lfmcs	f2, 2, [sp], #-192	; 0xffffff40
 801823b:	6f70227b 	svcvs	0x0070227b
 801823f:	3a227472 	bcc	88b540f <__exidx_end+0x89b403>
 8018243:	22333122 	eorscs	r3, r3, #-2147483640	; 0x80000008
 8018247:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801824b:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801824f:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8018253:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018257:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801825b:	3a227373 	bcc	88b502f <__exidx_end+0x89b023>
 801825f:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8018263:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8018267:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801826b:	3431223a 	ldrtcc	r2, [r1], #-570	; 0xfffffdc6
 801826f:	74222c22 	strtvc	r2, [r2], #-3106	; 0xfffff3de
 8018273:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8018277:	222c2230 	eorcs	r2, ip, #48, 4
 801827b:	223a226c 	eorscs	r2, sl, #108, 4	; 0xc0000006
 801827f:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8018283:	22737322 	rsbscs	r7, r3, #-2013265920	; 0x88000000
 8018287:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 801828b:	227b2c7d 	rsbscs	r2, fp, #32000	; 0x7d00
 801828f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8018293:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 8018297:	222c2235 	eorcs	r2, ip, #1342177283	; 0x50000003
 801829b:	3a227374 	bcc	88b5073 <__exidx_end+0x89b067>
 801829f:	2c223022 	stccs	0, cr3, [r2], #-136	; 0xffffff78
 80182a3:	3a226c22 	bcc	88b3333 <__exidx_end+0x899327>
 80182a7:	22642522 	rsbcs	r2, r4, #142606336	; 0x8800000
 80182ab:	7373222c 	cmnvc	r3, #44, 4	; 0xc0000002
 80182af:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80182b3:	7b2c7d22 	blvc	8b37743 <__exidx_end+0xb1d737>
 80182b7:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 80182bb:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80182bf:	2c223631 	stccs	6, cr3, [r2], #-196	; 0xffffff3c
 80182c3:	22737422 	rsbscs	r7, r3, #570425344	; 0x22000000
 80182c7:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 80182cb:	226c222c 	rsbcs	r2, ip, #44, 4	; 0xc0000002
 80182cf:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80182d3:	73222c22 			; <UNDEFINED> instruction: 0x73222c22
 80182d7:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 80182db:	2c7d2230 	lfmcs	f2, 2, [sp], #-192	; 0xffffff40
 80182df:	6f70227b 	svcvs	0x0070227b
 80182e3:	3a227472 	bcc	88b54b3 <__exidx_end+0x89b4a7>
 80182e7:	22373122 	eorscs	r3, r7, #-2147483640	; 0x80000008
 80182eb:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80182ef:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80182f3:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80182f7:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80182fb:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80182ff:	3a227373 	bcc	88b50d3 <__exidx_end+0x89b0c7>
 8018303:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8018307:	007d7d5d 	rsbseq	r7, sp, sp, asr sp

0801830b <json::DISCOVER_REPLY>:
 801830b:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 801830f:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 8018313:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8018317:	226e616d 	rsbcs	r6, lr, #1073741851	; 0x4000001b
 801831b:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 801831f:	6d222c22 	stcvs	12, cr2, [r2, #-136]!	; 0xffffff78
 8018323:	3a22646f 	bcc	88b14e7 <__exidx_end+0x8974db>
 8018327:	78695022 	stmdavc	r9!, {r1, r5, ip, lr}^
 801832b:	2c226c65 	stccs	12, cr6, [r2], #-404	; 0xfffffe6c
 801832f:	72657622 	rsbvc	r7, r5, #35651584	; 0x2200000
 8018333:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 8018337:	2c22302e 	stccs	0, cr3, [r2], #-184	; 0xffffff48
 801833b:	63616d22 	cmnvs	r1, #2176	; 0x880
 801833f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018343:	3a78322e 	bcc	9e24c03 <__exidx_end+0x1e0abf7>
 8018347:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801834b:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801834f:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8018353:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8018357:	3a78322e 	bcc	9e24c17 <__exidx_end+0x1e0ac0b>
 801835b:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801835f:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

08018363 <json::START>:
 8018363:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 8018367:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 801836b:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801836f:	61647075 	smcvs	18181	; 0x4705
 8018373:	3a226574 	bcc	88b194b <__exidx_end+0x89793f>
 8018377:	61686322 	cmnvs	r8, r2, lsr #6
 801837b:	2265676e 	rsbcs	r6, r5, #28835840	; 0x1b80000
 801837f:	7473222c 	ldrbtvc	r2, [r3], #-556	; 0xfffffdd4
 8018383:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8018387:	7075223a 	rsbsvc	r2, r5, sl, lsr r2
 801838b:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801838f:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8018393:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8018397:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 801839b:	00333331 	eorseq	r3, r3, r1, lsr r3
 801839f:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 80183a3:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 80183a7:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 80183ab:	00343331 	eorseq	r3, r4, r1, lsr r3
 80183af:	50524c4c 	subspl	r4, r2, ip, asr #24
 80183b3:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 80183b7:	20656369 	rsbcs	r6, r5, r9, ror #6
 80183bb:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80183bf:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80183c3:	6f697461 	svcvs	0x00697461
 80183c7:	20000a6e 	andcs	r0, r0, lr, ror #20
 80183cb:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 80183cf:	50445520 	subpl	r5, r4, r0, lsr #10
 80183d3:	20202020 	eorcs	r2, r0, r0, lsr #32
 80183d7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80183db:	20202020 	eorcs	r2, r0, r0, lsr #32
 80183df:	3a202020 	bcc	8820467 <__exidx_end+0x80645b>
 80183e3:	0a642520 	beq	992186b <__exidx_end+0x190785f>
 80183e7:	754d2000 	strbvc	r2, [sp, #-0]
 80183eb:	6369746c 	cmnvs	r9, #108, 8	; 0x6c000000
 80183ef:	20747361 	rsbscs	r7, r4, r1, ror #6
 80183f3:	6e696f6a 	cdpvs	15, 6, cr6, cr9, cr10, {3}
 80183f7:	71655220 	cmnvc	r5, r0, lsr #4
 80183fb:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80183ff:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018403:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018407:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801840b:	000a6425 	andeq	r6, sl, r5, lsr #8
 801840f:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 8018413:	61636974 	smcvs	13972	; 0x3694
 8018417:	52207473 	eorpl	r7, r0, #1929379840	; 0x73000000
 801841b:	6f707365 	svcvs	0x00707365
 801841f:	2065736e 	rsbcs	r7, r5, lr, ror #6
 8018423:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018427:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801842b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801842f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018433:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08018438 <vtable for LLRPDevice>:
	...
 8018440:	0800c14d 	stmdaeq	r0, {r0, r2, r3, r6, r8, lr, pc}
 8018444:	0800c157 	stmdaeq	r0, {r0, r1, r2, r4, r6, r8, lr, pc}
 8018448:	0800c14f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, lr, pc}
 801844c:	0800c151 	stmdaeq	r0, {r0, r4, r6, r8, lr, pc}
 8018450:	0800c153 	stmdaeq	r0, {r0, r1, r4, r6, r8, lr, pc}

08018454 <RDMNetConst::MSG_CONFIG>:
 8018454:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018458:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801845c:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8018460:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8018464:	 	andpl	r7, r0, #1694498816	; 0x65000000

08018467 <RDMNetConst::MSG_STARTED>:
 8018467:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801846b:	73207465 			; <UNDEFINED> instruction: 0x73207465
 801846f:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8018473:	 	movwpl	r6, #1125	; 0x465

08018476 <RDMNetConst::MSG_START>:
 8018476:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801847a:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801847e:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8018482:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018486:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801848a:	000a7465 	andeq	r7, sl, r5, ror #8
 801848e:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8018492:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018496:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 801849a:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 801849e:	6f707365 	svcvs	0x00707365
 80184a2:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 80184a6:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80184aa:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80184ae:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80184b2:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80184b6:	6f725020 	svcvs	0x00725020
 80184ba:	6f636f74 	svcvs	0x00636f74
 80184be:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 80184c2:	6f697372 	svcvs	0x00697372
 80184c6:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 80184ca:	0a64252e 	beq	992198a <__exidx_end+0x190797e>
 80184ce:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80184d2:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 80184d6:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80184da:	20202073 	eorcs	r2, r0, r3, ror r0
 80184de:	3a202020 	bcc	8820566 <__exidx_end+0x80655a>
 80184e2:	0a642520 	beq	992196a <__exidx_end+0x190795e>
 80184e6:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80184ea:	6f462058 	svcvs	0x00462058
 80184ee:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 80184f2:	20746e69 	rsbscs	r6, r4, r9, ror #28
 80184f6:	3a202020 	bcc	882057e <__exidx_end+0x806572>
 80184fa:	0a642520 	beq	9921982 <__exidx_end+0x1907976>
 80184fe:	65502000 	ldrbvs	r2, [r0, #-0]
 8018502:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8018506:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801850a:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 801850e:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8018512:	5b206425 	blpl	88315ae <__exidx_end+0x8175a2>
 8018516:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801851a:	20000a5d 	andcs	r0, r0, sp, asr sl
 801851e:	20627553 	rsbcs	r7, r2, r3, asr r5
 8018522:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8018526:	20736563 	rsbscs	r6, r3, r3, ror #10
 801852a:	20202020 	eorcs	r2, r0, r0, lsr #32
 801852e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018532:	20000a64 	andcs	r0, r0, r4, ror #20
 8018536:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 801853a:	2073726f 	rsbscs	r7, r3, pc, ror #4
 801853e:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018542:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018546:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801854a:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08018550 <vtable for RDMDeviceResponder>:
	...
 8018558:	0800c64d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, lr, pc}
 801855c:	0800c66d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
 8018560:	0800c649 	stmdaeq	r0, {r0, r3, r6, r9, sl, lr, pc}
 8018564:	0800c64b 	stmdaeq	r0, {r0, r1, r3, r6, r9, sl, lr, pc}

08018568 <UID_ALL>:
 8018568:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 801856c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08018570 <RDMHandler::PID_DEFINITIONS>:
 8018570:	00000060 	andeq	r0, r0, r0, rrx
 8018574:	0800cb41 	stmdaeq	r0, {r0, r6, r8, r9, fp, lr, pc}
	...
 8018584:	01010000 	mrseq	r0, (UNDEF: 1)
 8018588:	00000080 	andeq	r0, r0, r0, lsl #1
 801858c:	0800cc29 	stmdaeq	r0, {r0, r3, r5, sl, fp, lr, pc}
	...
 801859c:	01010100 	mrseq	r0, (UNDEF: 17)
 80185a0:	00000081 	andeq	r0, r0, r1, lsl #1
 80185a4:	0800cc45 	stmdaeq	r0, {r0, r2, r6, sl, fp, lr, pc}
	...
 80185b4:	01010100 	mrseq	r0, (UNDEF: 17)
 80185b8:	00000082 	andeq	r0, r0, r2, lsl #1
 80185bc:	0800cc65 	stmdaeq	r0, {r0, r2, r5, r6, sl, fp, lr, pc}
 80185c0:	00000000 	andeq	r0, r0, r0
 80185c4:	0800cdb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, lr, pc}
 80185c8:	00000000 	andeq	r0, r0, r0
 80185cc:	01010100 	mrseq	r0, (UNDEF: 17)
 80185d0:	00000090 	muleq	r0, r0, r0
 80185d4:	0800cba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp, lr, pc}
 80185d8:	00000000 	andeq	r0, r0, r0
 80185dc:	0800cd81 	stmdaeq	r0, {r0, r7, r8, sl, fp, lr, pc}
 80185e0:	00000000 	andeq	r0, r0, r0
 80185e4:	01010100 	mrseq	r0, (UNDEF: 17)
 80185e8:	00001000 	andeq	r1, r0, r0
 80185ec:	0800cca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, lr, pc}
 80185f0:	00000000 	andeq	r0, r0, r0
 80185f4:	0800cd05 	stmdaeq	r0, {r0, r2, r8, sl, fp, lr, pc}
 80185f8:	00000000 	andeq	r0, r0, r0
 80185fc:	01010000 	mrseq	r0, (UNDEF: 1)
 8018600:	00001001 	andeq	r1, r0, r1
	...
 801860c:	0800ccbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, fp, lr, pc}
 8018610:	00000000 	andeq	r0, r0, r0
 8018614:	01010100 	mrseq	r0, (UNDEF: 17)
 8018618:	00000700 	andeq	r0, r0, r0, lsl #14
 801861c:	0800d0ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, ip, lr, pc}
	...
 801862c:	01000000 	mrseq	r0, (UNDEF: 0)
 8018630:	00000701 	andeq	r0, r0, r1, lsl #14
 8018634:	0800d0d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, ip, lr, pc}
	...
 8018644:	01000004 	tsteq	r0, r4
 8018648:	00000702 	andeq	r0, r0, r2, lsl #14
 801864c:	0800d121 	stmdaeq	r0, {r0, r5, r8, ip, lr, pc}
	...
 801865c:	01000004 	tsteq	r0, r4
 8018660:	00000703 	andeq	r0, r0, r3, lsl #14
 8018664:	0800d151 	stmdaeq	r0, {r0, r4, r6, r8, ip, lr, pc}
 8018668:	00000000 	andeq	r0, r0, r0
 801866c:	0800d17d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip, lr, pc}
 8018670:	00000000 	andeq	r0, r0, r0
 8018674:	01000004 	tsteq	r0, r4
 8018678:	00000704 	andeq	r0, r0, r4, lsl #14
 801867c:	0800d1e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, ip, lr, pc}
 8018680:	00000000 	andeq	r0, r0, r0
 8018684:	0800d219 	stmdaeq	r0, {r0, r3, r4, r9, ip, lr, pc}
 8018688:	00000000 	andeq	r0, r0, r0
 801868c:	01000004 	tsteq	r0, r4
 8018690:	00000705 	andeq	r0, r0, r5, lsl #14
 8018694:	0800d28d 	stmdaeq	r0, {r0, r2, r3, r7, r9, ip, lr, pc}
	...
 80186a4:	01000004 	tsteq	r0, r4
 80186a8:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 80186b4:	0800d261 	stmdaeq	r0, {r0, r5, r6, r9, ip, lr, pc}
 80186b8:	00000000 	andeq	r0, r0, r0
 80186bc:	01000004 	tsteq	r0, r4
 80186c0:	00000706 	andeq	r0, r0, r6, lsl #14
 80186c4:	0800d2d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, ip, lr, pc}
 80186c8:	00000000 	andeq	r0, r0, r0
 80186cc:	0800d319 	stmdaeq	r0, {r0, r3, r4, r8, r9, ip, lr, pc}
 80186d0:	00000000 	andeq	r0, r0, r0
 80186d4:	01000004 	tsteq	r0, r4
 80186d8:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 80186e4:	0800d365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, lr, pc}
 80186e8:	00000000 	andeq	r0, r0, r0
 80186ec:	01000004 	tsteq	r0, r4
 80186f0:	0000070b 	andeq	r0, r0, fp, lsl #14
 80186f4:	0800d1c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, lr, pc}
	...
 8018704:	01000001 	tsteq	r0, r1
 8018708:	0000070a 	andeq	r0, r0, sl, lsl #14
 801870c:	0800d38d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, ip, lr, pc}
 8018710:	00000000 	andeq	r0, r0, r0
 8018714:	0800d3c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, ip, lr, pc}
 8018718:	00000000 	andeq	r0, r0, r0
 801871c:	01000004 	tsteq	r0, r4
 8018720:	0000070c 	andeq	r0, r0, ip, lsl #14
 8018724:	0800d3cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, ip, lr, pc}
 8018728:	00000000 	andeq	r0, r0, r0
 801872c:	0800d3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, lr, pc}
 8018730:	00000000 	andeq	r0, r0, r0
 8018734:	01000000 	mrseq	r0, (UNDEF: 0)
 8018738:	0000070d 	andeq	r0, r0, sp, lsl #14
 801873c:	0800d431 	stmdaeq	r0, {r0, r4, r5, sl, ip, lr, pc}
 8018740:	00000000 	andeq	r0, r0, r0
 8018744:	0800d461 	stmdaeq	r0, {r0, r5, r6, sl, ip, lr, pc}
 8018748:	00000000 	andeq	r0, r0, r0
 801874c:	01000000 	mrseq	r0, (UNDEF: 0)
 8018750:	204d4452 	subcs	r4, sp, r2, asr r4
 8018754:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8018758:	63206563 			; <UNDEFINED> instruction: 0x63206563
 801875c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018760:	61727567 	cmnvs	r2, r7, ror #10
 8018764:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018768:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801876c:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8018770:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8018774:	20726572 	rsbscs	r6, r2, r2, ror r5
 8018778:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 801877c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018780:	0a732a2e 	beq	9ce3040 <__exidx_end+0x1cc9034>
 8018784:	614d2000 	mrsvs	r2, (UNDEF: 77)
 8018788:	6166756e 	cmnvs	r6, lr, ror #10
 801878c:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 8018790:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 8018794:	20202044 	eorcs	r2, r0, r4, asr #32
 8018798:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801879c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80187a0:	000a5832 	andeq	r5, sl, r2, lsr r8
 80187a4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80187a8:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80187ac:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 80187b0:	20207265 	eorcs	r7, r0, r5, ror #4
 80187b4:	3a202020 	bcc	882083c <__exidx_end+0x806830>
 80187b8:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 80187bc:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 80187c0:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 80187c4:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 80187c8:	20000a58 	andcs	r0, r0, r8, asr sl
 80187cc:	746f6f52 	strbtvc	r6, [pc], #-3922	; 80187d4 <RDMHandler::PID_DEFINITIONS+0x264>
 80187d0:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 80187d4:	20206c65 	eorcs	r6, r0, r5, ror #24
 80187d8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80187dc:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80187e0:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80187e4:	5020000a 	eorpl	r0, r0, sl
 80187e8:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 80187ec:	43207463 			; <UNDEFINED> instruction: 0x43207463
 80187f0:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 80187f4:	2079726f 	rsbscs	r7, r9, pc, ror #4
 80187f8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80187fc:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8018800:	0a58322e 	beq	96250c0 <__exidx_end+0x160b0b4>
 8018804:	72502000 	subsvc	r2, r0, #0
 8018808:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 801880c:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8018810:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 8018814:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018818:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801881c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8018820:	000a5832 	andeq	r5, sl, r2, lsr r8

08018824 <DEVICE_LABEL>:
 8018824:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8018828:	30353446 	eorscc	r3, r5, r6, asr #8
 801882c:	52204956 	eorpl	r4, r0, #1409024	; 0x158000
 8018830:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8018834:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8018838:	 	subseq	r0, r0, r5, rrx

0801883a <RDMConst::MANUFACTURER_ID>:
 801883a:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0801883c <RDMConst::MANUFACTURER_NAME>:
 801883c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8018840:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8018844:	6f2e7777 	svcvs	0x002e7777
 8018848:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 801884c:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8018850:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8018854:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8018858:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 801885c:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 8018860:	30252d78 	eorcc	r2, r5, r8, ror sp
 8018864:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8018868:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 801886c:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8018870:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018874:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018878:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801887c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018880:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018884:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8018888:	584d4400 	stmdapl	sp, {sl, lr}^
 801888c:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 8018890:	20000a64 	andcs	r0, r0, r4, ror #20
 8018894:	61657242 	cmnvs	r5, r2, asr #4
 8018898:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 801889c:	2020656d 	eorcs	r6, r0, sp, ror #10
 80188a0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80188a4:	20000a75 	andcs	r0, r0, r5, ror sl
 80188a8:	2042414d 	subcs	r4, r2, sp, asr #2
 80188ac:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80188b0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80188b4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80188b8:	20000a75 	andcs	r0, r0, r5, ror sl
 80188bc:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 80188c0:	20687365 	rsbcs	r7, r8, r5, ror #6
 80188c4:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 80188c8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80188cc:	20000a75 	andcs	r0, r0, r5, ror sl
 80188d0:	746f6c53 	strbtvc	r6, [pc], #-3155	; 80188d8 <RDMConst::MANUFACTURER_NAME+0x9c>
 80188d4:	20202073 	eorcs	r2, r0, r3, ror r0
 80188d8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80188dc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80188e0:	00000a75 	andeq	r0, r0, r5, ror sl

080188e4 <vtable for DmxSend>:
	...
 80188ec:	0800d665 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, ip, lr, pc}
 80188f0:	0800d751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, ip, lr, pc}
 80188f4:	0800d669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, ip, lr, pc}
 80188f8:	0800d699 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, ip, lr, pc}
 80188fc:	0800d6d1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, ip, lr, pc}
 8018900:	0800d6e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, ip, lr, pc}
 8018904:	0800d6ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, ip, lr, pc}
 8018908:	0800d6f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, ip, lr, pc}
 801890c:	08013c6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, fp, ip, sp}
 8018910:	08013c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, ip, sp}
 8018914:	08013c65 	stmdaeq	r1, {r0, r2, r5, r6, sl, fp, ip, sp}
 8018918:	08013c6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, fp, ip, sp}

0801891c <DmxParamsConst::BREAK_TIME>:
 801891c:	61657262 	cmnvs	r5, r2, ror #4
 8018920:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018924:	 	movwvc	r6, #1389	; 0x56d

08018927 <DmxParamsConst::SLOTS_COUNT>:
 8018927:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801892f <DmxParamsConst::SLOTS_COUNT+0x8>
 801892b:	6f635f73 	svcvs	0x00635f73
 801892f:	00746e75 	rsbseq	r6, r4, r5, ror lr

08018933 <DmxParamsConst::REFRESH_RATE>:
 8018933:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8018937:	5f687365 	svcpl	0x00687365
 801893b:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08018940 <DmxParamsConst::MAB_TIME>:
 8018940:	5f62616d 	svcpl	0x0062616d
 8018944:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08018949 <DmxParamsConst::FILE_NAME>:
 8018949:	61726170 	cmnvs	r2, r0, ror r1
 801894d:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8018951:	 	andeq	r7, r0, r8, ror r4

08018954 <s_DirGpio>:
 8018954:	40020c00 	andmi	r0, r2, r0, lsl #24
 8018958:	00000001 	andeq	r0, r0, r1
 801895c:	40020c00 	andmi	r0, r2, r0, lsl #24
 8018960:	00000002 	andeq	r0, r0, r2

08018964 <vtable for WS28xxDmxMulti>:
	...
 801896c:	0800e4b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, sp, lr, pc}
 8018970:	0800e4d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, sp, lr, pc}
 8018974:	0800e493 	stmdaeq	r0, {r0, r1, r4, r7, sl, sp, lr, pc}
 8018978:	0800e647 	stmdaeq	r0, {r0, r1, r2, r6, r9, sl, sp, lr, pc}
 801897c:	0800e50f 	stmdaeq	r0, {r0, r1, r2, r3, r8, sl, sp, lr, pc}
 8018980:	0800e4e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, sl, sp, lr, pc}
 8018984:	0800e629 	stmdaeq	r0, {r0, r3, r5, r9, sl, sp, lr, pc}
 8018988:	0800e641 	stmdaeq	r0, {r0, r6, r9, sl, sp, lr, pc}
 801898c:	0800e485 	stmdaeq	r0, {r0, r2, r7, sl, sp, lr, pc}
 8018990:	0800e489 	stmdaeq	r0, {r0, r3, r7, sl, sp, lr, pc}
 8018994:	0800e48f 	stmdaeq	r0, {r0, r1, r2, r3, r7, sl, sp, lr, pc}
 8018998:	08013c6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, fp, ip, sp}
 801899c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80189a0:	2a2e253a 	bcs	8ba1e90 <__exidx_end+0xb87e84>
 80189a4:	23002c66 	movwcs	r2, #3174	; 0xc66
 80189a8:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80189ac:	0a662a2e 	beq	99a326c <__exidx_end+0x1989260>
 80189b0:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 80189b4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 80189b8:	4f003e74 	svcmi	0x00003e74
 80189bc:	77726576 			; <UNDEFINED> instruction: 0x77726576
 80189c0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 80189c4:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 80189c8:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 80189cc:	4f007465 	svcmi	0x00007465
 80189d0:	77726576 			; <UNDEFINED> instruction: 0x77726576
 80189d4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 80189d8:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 80189dc:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80189e0:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 80189e4:	6f724700 	svcvs	0x00724700
 80189e8:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 80189ec:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 80189f0:	206b636f 	rsbcs	r6, fp, pc, ror #6
 80189f4:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 80189f8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 80189fc:	00737069 	rsbseq	r7, r3, r9, rrx
 8018a00:	31415041 	cmpcc	r1, r1, asr #32
 8018a04:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 8018a08:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8018a0c:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 8018a10:	70207473 	eorvc	r7, r0, r3, ror r4
 8018a14:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8018a18:	50006e72 	andpl	r6, r0, r2, ror lr
 8018a1c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8018a20:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8018a24:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8018a28:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8018a2c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8018a30:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8018a34:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 8018a38:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 8018a3c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018a40:	20000a64 	andcs	r0, r0, r4, ror #20
 8018a44:	756f7247 	strbvc	r7, [pc, #-583]!	; 8018805 <RDMHandler::PID_DEFINITIONS+0x295>
 8018a48:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8018a4c:	756f6320 	strbvc	r6, [pc, #-800]!	; 8018734 <RDMHandler::PID_DEFINITIONS+0x1c4>
 8018a50:	3a20746e 	bcc	8835c10 <__exidx_end+0x81bc04>
 8018a54:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8018a58:	6f72475b 	svcvs	0x0072475b
 8018a5c:	20737075 	rsbscs	r7, r3, r5, ror r0
 8018a60:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018a64:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 8018a68:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 8018a6c:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 8018a70:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8018a74:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018a78:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8018a7c:	6f697461 	svcvs	0x00697461
 8018a80:	20000a6e 	andcs	r0, r0, lr, ror #20
 8018a84:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8018a88:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018a8c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8018a90:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8018a94:	20000a5d 	andcs	r0, r0, sp, asr sl
 8018a98:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8018a9c:	20202074 	eorcs	r2, r0, r4, ror r0
 8018aa0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018aa4:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8018aa8:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8018aac:	3a20676e 	bcc	883286c <__exidx_end+0x818860>
 8018ab0:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8018ab4:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8018ab8:	5420000a 	strtpl	r0, [r0], #-10
 8018abc:	20204830 	eorcs	r4, r0, r0, lsr r8
 8018ac0:	3a202020 	bcc	8820b48 <__exidx_end+0x806b3c>
 8018ac4:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8018ac8:	305b2066 	subscc	r2, fp, r6, rrx
 8018acc:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8018ad0:	5420000a 	strtpl	r0, [r0], #-10
 8018ad4:	20204831 	eorcs	r4, r0, r1, lsr r8
 8018ad8:	3a202020 	bcc	8820b60 <__exidx_end+0x806b54>
 8018adc:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8018ae0:	305b2066 	subscc	r2, fp, r6, rrx
 8018ae4:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8018ae8:	4720000a 	strmi	r0, [r0, -sl]!
 8018aec:	61626f6c 	cmnvs	r2, ip, ror #30
 8018af0:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 8018af4:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8018af8:	3a737365 	bcc	9cf5894 <__exidx_end+0x1cdb888>
 8018afc:	0a752520 	beq	9d61f84 <__exidx_end+0x1d47f78>
 8018b00:	61472000 	mrsvs	r2, (UNDEF: 71)
 8018b04:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 8018b08:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 8018b0c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8018b10:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8018b14:	20000a73 	andcs	r0, r0, r3, ror sl
 8018b18:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8018b1c:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 8018b20:	7a482075 	bvc	9220cfc <__exidx_end+0x1206cf0>
 8018b24:	0000000a 	andeq	r0, r0, sl

08018b28 <CSWTCH.9>:
 8018b28:	08018d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, pc}
 8018b2c:	08018e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, pc}
 8018b30:	08018f3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8018b34:	0801903c 	stmdaeq	r1, {r2, r3, r4, r5, ip, pc}
 8018b38:	0801913c 	stmdaeq	r1, {r2, r3, r4, r5, r8, ip, pc}

08018b3c <gamma10_0>:
 8018b3c:	03020100 	movweq	r0, #8448	; 0x2100
 8018b40:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8018b44:	0b0a0908 	bleq	829af6c <__exidx_end+0x280f60>
 8018b48:	0f0e0d0c 	svceq	0x000e0d0c
 8018b4c:	13121110 	tstne	r2, #16, 2
 8018b50:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8018b54:	1b1a1918 	blne	869efbc <__exidx_end+0x684fb0>
 8018b58:	1f1e1d1c 	svcne	0x001e1d1c
 8018b5c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018b60:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8018b64:	2b2a2928 	blcs	8aa300c <__exidx_end+0xa89000>
 8018b68:	2f2e2d2c 	svccs	0x002e2d2c
 8018b6c:	33323130 	teqcc	r2, #48, 2
 8018b70:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018b74:	3b3a3938 	blcc	8ea705c <__exidx_end+0xe8d050>
 8018b78:	3f3e3d3c 	svccc	0x003e3d3c
 8018b7c:	43424140 	movtmi	r4, #8512	; 0x2140
 8018b80:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018b84:	4b4a4948 	blmi	92ab0ac <__exidx_end+0x12910a0>
 8018b88:	4f4e4d4c 	svcmi	0x004e4d4c
 8018b8c:	53525150 	cmppl	r2, #80, 2
 8018b90:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8018b94:	5b5a5958 	blpl	96af0fc <__exidx_end+0x16950f0>
 8018b98:	5f5e5d5c 	svcpl	0x005e5d5c
 8018b9c:	63626160 	cmnvs	r2, #96, 2
 8018ba0:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8018ba4:	6b6a6968 	blvs	9ab314c <__exidx_end+0x1a99140>
 8018ba8:	6f6e6d6c 	svcvs	0x006e6d6c
 8018bac:	73727170 	cmnvc	r2, #112, 2
 8018bb0:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8018bb4:	7b7a7978 	blvc	9eb719c <__exidx_end+0x1e9d190>
 8018bb8:	7f7e7d7c 	svcvc	0x007e7d7c
 8018bbc:	83828180 	orrhi	r8, r2, #128, 2
 8018bc0:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8018bc4:	8b8a8988 	blhi	62bb1ec <__stack_size+0x62b71ec>
 8018bc8:	8f8e8d8c 	svchi	0x008e8d8c
 8018bcc:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8018bd0:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8018bd4:	9b9a9998 	blls	66bf23c <__stack_size+0x66bb23c>
 8018bd8:	9f9e9d9c 	svcls	0x009e9d9c
 8018bdc:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8018be0:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8018be4:	abaaa9a8 	blge	6ac328c <__stack_size+0x6abf28c>
 8018be8:	afaeadac 	svcge	0x00aeadac
 8018bec:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8018bf0:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8018bf4:	bbbab9b8 	bllt	6ec72dc <__stack_size+0x6ec32dc>
 8018bf8:	bfbebdbc 	svclt	0x00bebdbc
 8018bfc:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8018c00:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8018c04:	cbcac9c8 	blgt	72cb32c <__stack_size+0x72c732c>
 8018c08:	cfcecdcc 	svcgt	0x00cecdcc
 8018c0c:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8018c10:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8018c14:	dbdad9d8 	blle	76cf37c <__stack_size+0x76cb37c>
 8018c18:	dfdedddc 	svcle	0x00dedddc
 8018c1c:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8018c20:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8018c24:	ebeae9e8 	bl	7ad33cc <__stack_size+0x7acf3cc>
 8018c28:	efeeedec 	svc	0x00eeedec
 8018c2c:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8018c30:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8018c34:	fbfaf9f8 	blx	7ed741e <__stack_size+0x7ed341e>
 8018c38:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08018c3c <gamma20_0>:
	...
 8018c48:	01010101 	tsteq	r1, r1, lsl #2
 8018c4c:	01010101 	tsteq	r1, r1, lsl #2
 8018c50:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018c54:	03030202 	movweq	r0, #12802	; 0x3202
 8018c58:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8018c5c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8018c60:	06060505 	streq	r0, [r6], -r5, lsl #10
 8018c64:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018c68:	09080808 	stmdbeq	r8, {r3, fp}
 8018c6c:	0a0a0909 	beq	829b098 <__exidx_end+0x28108c>
 8018c70:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018c74:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018c78:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8018c7c:	12111110 	andsne	r1, r1, #16, 2
 8018c80:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8018c84:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8018c88:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8018c8c:	1b1a1a19 	blne	869f4f8 <__exidx_end+0x6854ec>
 8018c90:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8018c94:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8018c98:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8018c9c:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8018ca0:	2a292827 	bcs	8a62d44 <__exidx_end+0xa48d38>
 8018ca4:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8018ca8:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8018cac:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018cb0:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018cb4:	3b3a3938 	blcc	8ea719c <__exidx_end+0xe8d190>
 8018cb8:	3f3e3d3c 	svccc	0x003e3d3c
 8018cbc:	43424140 	movtmi	r4, #8512	; 0x2140
 8018cc0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018cc4:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018cc8:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8018ccc:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8018cd0:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8018cd4:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8018cd8:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8018cdc:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8018ce0:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8018ce4:	7371706f 	cmnvc	r1, #111	; 0x6f
 8018ce8:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8018cec:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8018cf0:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8018cf4:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8018cf8:	8f8e8c8b 	svchi	0x008e8c8b
 8018cfc:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8018d00:	9b9a9897 	blls	66bef64 <__stack_size+0x66baf64>
 8018d04:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8018d08:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8018d0c:	afadabaa 	svcge	0x00adabaa
 8018d10:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8018d14:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8018d18:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8018d1c:	cac8c7c5 	bgt	724ac38 <__stack_size+0x7246c38>
 8018d20:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8018d24:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8018d28:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8018d2c:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8018d30:	efedebe9 	svc	0x00edebe9
 8018d34:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8018d38:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08018d3c <gamma21_0>:
	...
 8018d48:	01010000 	mrseq	r0, (UNDEF: 1)
 8018d4c:	01010101 	tsteq	r1, r1, lsl #2
 8018d50:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8018d54:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018d58:	03030302 	movweq	r0, #13058	; 0x3302
 8018d5c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8018d60:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8018d64:	06060505 	streq	r0, [r6], -r5, lsl #10
 8018d68:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018d6c:	09080808 	stmdbeq	r8, {r3, fp}
 8018d70:	0a0a0909 	beq	829b19c <__exidx_end+0x281190>
 8018d74:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018d78:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018d7c:	0f0f0e0e 	svceq	0x000f0e0e
 8018d80:	11111010 	tstne	r1, r0, lsl r0
 8018d84:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8018d88:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8018d8c:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8018d90:	1b1a1919 	blne	869f1fc <__exidx_end+0x6851f0>
 8018d94:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8018d98:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8018d9c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018da0:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8018da4:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8018da8:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8018dac:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018db0:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8018db4:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018db8:	3b3a3938 	blcc	8ea72a0 <__exidx_end+0xe8d294>
 8018dbc:	3f3e3d3c 	svccc	0x003e3d3c
 8018dc0:	43424140 	movtmi	r4, #8512	; 0x2140
 8018dc4:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018dc8:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8018dcc:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8018dd0:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8018dd4:	5a585756 	bpl	962eb34 <__exidx_end+0x1614b28>
 8018dd8:	5f5d5c5b 	svcpl	0x005d5c5b
 8018ddc:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8018de0:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8018de4:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8018de8:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8018dec:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8018df0:	7f7e7c7b 	svcvc	0x007e7c7b
 8018df4:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8018df8:	8b898886 	blhi	627b018 <__stack_size+0x6277018>
 8018dfc:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8018e00:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8018e04:	9e9c9b99 	vmovls.32	r9, d28[0]
 8018e08:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8018e0c:	abaaa8a6 	blge	6ac30ac <__stack_size+0x6abf0ac>
 8018e10:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8018e14:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8018e18:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8018e1c:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8018e20:	cfcdcbca 	svcgt	0x00cdcbca
 8018e24:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8018e28:	dfdddbd9 	svcle	0x00dddbd9
 8018e2c:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8018e30:	eeeceae8 	vfms.f32	s29, s25, s17
 8018e34:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8018e38:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08018e3c <gamma22_0>:
	...
 8018e48:	01000000 	mrseq	r0, (UNDEF: 0)
 8018e4c:	01010101 	tsteq	r1, r1, lsl #2
 8018e50:	01010101 	tsteq	r1, r1, lsl #2
 8018e54:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8018e58:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018e5c:	03030303 	movweq	r0, #13059	; 0x3303
 8018e60:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8018e64:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018e68:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018e6c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018e70:	09080808 	stmdbeq	r8, {r3, fp}
 8018e74:	0a0a0909 	beq	829b2a0 <__exidx_end+0x281294>
 8018e78:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018e7c:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018e80:	0f0f0e0e 	svceq	0x000f0e0e
 8018e84:	11111010 	tstne	r1, r0, lsl r0
 8018e88:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018e8c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018e90:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018e94:	1a1a1919 	bne	869f300 <__exidx_end+0x6852f4>
 8018e98:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018e9c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018ea0:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018ea4:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018ea8:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8018eac:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8018eb0:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018eb4:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8018eb8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018ebc:	3b3a3938 	blcc	8ea73a4 <__exidx_end+0xe8d398>
 8018ec0:	3f3e3d3c 	svccc	0x003e3d3c
 8018ec4:	43424140 	movtmi	r4, #8512	; 0x2140
 8018ec8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018ecc:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018ed0:	514f4e4d 	cmppl	pc, sp, asr #28
 8018ed4:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8018ed8:	5a595857 	bpl	966f03c <__exidx_end+0x1655030>
 8018edc:	5f5e5d5b 	svcpl	0x005e5d5b
 8018ee0:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8018ee4:	6a696766 	bvs	9a72c84 <__exidx_end+0x1a58c78>
 8018ee8:	6f6e6d6b 	svcvs	0x006e6d6b
 8018eec:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8018ef0:	7b797877 	blvc	9e770d4 <__exidx_end+0x1e5d0c8>
 8018ef4:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8018ef8:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8018efc:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8018f00:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8018f04:	9a999795 	bls	667ed60 <__stack_size+0x667ad60>
 8018f08:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8018f0c:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8018f10:	afadacaa 	svcge	0x00adacaa
 8018f14:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8018f18:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8018f1c:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8018f20:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8018f24:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8018f28:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8018f2c:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8018f30:	eeeceae7 	vfms.f32	s29, s25, s15
 8018f34:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8018f38:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08018f3c <gamma23_0>:
	...
 8018f4c:	01010100 	mrseq	r0, (UNDEF: 17)
 8018f50:	01010101 	tsteq	r1, r1, lsl #2
 8018f54:	01010101 	tsteq	r1, r1, lsl #2
 8018f58:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018f5c:	03020202 	movweq	r0, #8706	; 0x2202
 8018f60:	03030303 	movweq	r0, #13059	; 0x3303
 8018f64:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8018f68:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018f6c:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018f70:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8018f74:	09080808 	stmdbeq	r8, {r3, fp}
 8018f78:	0a0a0a09 	beq	829b7a4 <__exidx_end+0x281798>
 8018f7c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018f80:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018f84:	0f0f0e0e 	svceq	0x000f0e0e
 8018f88:	11111010 	tstne	r1, r0, lsl r0
 8018f8c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018f90:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8018f94:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018f98:	1a1a1918 	bne	869f400 <__exidx_end+0x6853f4>
 8018f9c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018fa0:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018fa4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018fa8:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018fac:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8018fb0:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8018fb4:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018fb8:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8018fbc:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018fc0:	3b3a3938 	blcc	8ea74a8 <__exidx_end+0xe8d49c>
 8018fc4:	3f3e3d3c 	svccc	0x003e3d3c
 8018fc8:	43424140 	movtmi	r4, #8512	; 0x2140
 8018fcc:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8018fd0:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018fd4:	51504f4e 	cmppl	r0, lr, asr #30
 8018fd8:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8018fdc:	5b5a5957 	blpl	96af540 <__exidx_end+0x1695534>
 8018fe0:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8018fe4:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8018fe8:	6b6a6867 	blvs	9ab318c <__exidx_end+0x1a99180>
 8018fec:	71706e6d 	cmnvc	r0, sp, ror #28
 8018ff0:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8018ff4:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8018ff8:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8018ffc:	8a888685 	bhi	623aa18 <__stack_size+0x6236a18>
 8019000:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8019004:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8019008:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 801900c:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8019010:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8019014:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8019018:	bbb9b7b6 	bllt	6e86ef8 <__stack_size+0x6e82ef8>
 801901c:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8019020:	cbc9c7c5 	blgt	728af3c <__stack_size+0x7286f3c>
 8019024:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8019028:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 801902c:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8019030:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8019034:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8019038:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801903c <gamma24_0>:
	...
 801904c:	01000000 	mrseq	r0, (UNDEF: 0)
 8019050:	01010101 	tsteq	r1, r1, lsl #2
 8019054:	01010101 	tsteq	r1, r1, lsl #2
 8019058:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801905c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019060:	03030202 	movweq	r0, #12802	; 0x3202
 8019064:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8019068:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801906c:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8019070:	06060606 	streq	r0, [r6], -r6, lsl #12
 8019074:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8019078:	09090808 	stmdbeq	r9, {r3, fp}
 801907c:	0a0a0a09 	beq	829b8a8 <__exidx_end+0x28189c>
 8019080:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8019084:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8019088:	0f0f0e0e 	svceq	0x000f0e0e
 801908c:	11111010 	tstne	r1, r0, lsl r0
 8019090:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019094:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8019098:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801909c:	1a1a1918 	bne	869f504 <__exidx_end+0x6854f8>
 80190a0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 80190a4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 80190a8:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80190ac:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 80190b0:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 80190b4:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 80190b8:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 80190bc:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 80190c0:	37363535 			; <UNDEFINED> instruction: 0x37363535
 80190c4:	3b3a3938 	blcc	8ea75ac <__exidx_end+0xe8d5a0>
 80190c8:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 80190cc:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 80190d0:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 80190d4:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 80190d8:	5251504e 	subspl	r5, r1, #78	; 0x4e
 80190dc:	57565553 			; <UNDEFINED> instruction: 0x57565553
 80190e0:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 80190e4:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 80190e8:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 80190ec:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 80190f0:	7372706f 	cmnvc	r2, #111	; 0x6f
 80190f4:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 80190f8:	7f7e7c7b 	svcvc	0x007e7c7b
 80190fc:	86848381 	strhi	r8, [r4], r1, lsl #7
 8019100:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8019104:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8019108:	9b999795 	blls	667ef64 <__stack_size+0x667af64>
 801910c:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8019110:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8019114:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8019118:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 801911c:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8019120:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8019124:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8019128:	dad8d6d4 	ble	764ec80 <__stack_size+0x764ac80>
 801912c:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8019130:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8019134:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8019138:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801913c <gamma25_0>:
	...
 8019150:	01010000 	mrseq	r0, (UNDEF: 1)
 8019154:	01010101 	tsteq	r1, r1, lsl #2
 8019158:	01010101 	tsteq	r1, r1, lsl #2
 801915c:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8019160:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019164:	03030302 	movweq	r0, #13058	; 0x3302
 8019168:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801916c:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8019170:	06050505 	streq	r0, [r5], -r5, lsl #10
 8019174:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8019178:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801917c:	09090808 	stmdbeq	r9, {r3, fp}
 8019180:	0a0a0a09 	beq	829b9ac <__exidx_end+0x2819a0>
 8019184:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8019188:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801918c:	0f0f0f0e 	svceq	0x000f0f0e
 8019190:	11111010 	tstne	r1, r0, lsl r0
 8019194:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019198:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801919c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 80191a0:	1a1a1919 	bne	869f60c <__exidx_end+0x685600>
 80191a4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 80191a8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 80191ac:	23222121 			; <UNDEFINED> instruction: 0x23222121
 80191b0:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 80191b4:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 80191b8:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 80191bc:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 80191c0:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 80191c4:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 80191c8:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 80191cc:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 80191d0:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 80191d4:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 80191d8:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 80191dc:	53525150 	cmppl	r2, #80, 2
 80191e0:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 80191e4:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 80191e8:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 80191ec:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 80191f0:	6f6e6c6b 	svcvs	0x006e6c6b
 80191f4:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 80191f8:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 80191fc:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8019200:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8019204:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8019208:	97969492 			; <UNDEFINED> instruction: 0x97969492
 801920c:	9f9d9b99 	svcls	0x009d9b99
 8019210:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8019214:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8019218:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 801921c:	bfbdbab8 	svclt	0x00bdbab8
 8019220:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8019224:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8019228:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 801922c:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8019230:	ebe9e7e4 	bl	7a931c8 <__stack_size+0x7a8f1c8>
 8019234:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8019238:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801923c <gamma25_5>:
 801923c:	01010100 	mrseq	r0, (UNDEF: 17)
 8019240:	01010101 	tsteq	r1, r1, lsl #2
 8019244:	01010101 	tsteq	r1, r1, lsl #2
 8019248:	01010101 	tsteq	r1, r1, lsl #2
 801924c:	01010101 	tsteq	r1, r1, lsl #2
 8019250:	01010101 	tsteq	r1, r1, lsl #2
 8019254:	01010101 	tsteq	r1, r1, lsl #2
 8019258:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801925c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019260:	03030302 	movweq	r0, #13058	; 0x3302
 8019264:	03030303 	movweq	r0, #13059	; 0x3303
 8019268:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801926c:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8019270:	06060605 	streq	r0, [r6], -r5, lsl #12
 8019274:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8019278:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 801927c:	0a090909 	beq	825b6a8 <__exidx_end+0x24169c>
 8019280:	0b0b0a0a 	bleq	82dbab0 <__exidx_end+0x2c1aa4>
 8019284:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8019288:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 801928c:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8019290:	12111110 	andsne	r1, r1, #16, 2
 8019294:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8019298:	16161514 			; <UNDEFINED> instruction: 0x16161514
 801929c:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 80192a0:	1b1a1a19 	blne	869fb0c <__exidx_end+0x685b00>
 80192a4:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 80192a8:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 80192ac:	23232221 			; <UNDEFINED> instruction: 0x23232221
 80192b0:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 80192b4:	2a292827 	bcs	8a63358 <__exidx_end+0xa4934c>
 80192b8:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 80192bc:	31302f2e 	teqcc	r0, lr, lsr #30
 80192c0:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 80192c4:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 80192c8:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 80192cc:	41403f3e 	cmpmi	r0, lr, lsr pc
 80192d0:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 80192d4:	4a494846 	bmi	926b3f4 <__exidx_end+0x12513e8>
 80192d8:	4f4e4c4b 	svcmi	0x004e4c4b
 80192dc:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 80192e0:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 80192e4:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 80192e8:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 80192ec:	6a686765 	bvs	9a33088 <__exidx_end+0x1a1907c>
 80192f0:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 80192f4:	76747371 			; <UNDEFINED> instruction: 0x76747371
 80192f8:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 80192fc:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8019300:	8a888685 	bhi	623ad1c <__stack_size+0x6236d1c>
 8019304:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8019308:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 801930c:	9f9d9c9a 	svcls	0x009d9c9a
 8019310:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 8019314:	afadaba9 	svcge	0x00adaba9
 8019318:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 801931c:	bfbdbbb9 	svclt	0x00bdbbb9
 8019320:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 8019324:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 8019328:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801932c:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 8019330:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 8019334:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 8019338:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 801933c:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8019340:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8019344:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 8019348:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 801934c:	 	andeq	r0, r0, #100	; 0x64

0801934e <CSWTCH.18>:
 801934e:	02020200 	andeq	r0, r2, #0, 4
 8019352:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8019356:	 	ldrbmi	r0, [r2, -r0, lsl #10]

08019358 <PixelType::MAPS>:
 8019358:	00424752 	subeq	r4, r2, r2, asr r7
 801935c:	00474252 	subeq	r4, r7, r2, asr r2
 8019360:	00425247 	subeq	r5, r2, r7, asr #4
 8019364:	00524247 	subseq	r4, r2, r7, asr #4
 8019368:	00475242 	subeq	r5, r7, r2, asr #4
 801936c:	00524742 	subseq	r4, r2, r2, asr #14

08019370 <PixelType::TYPES>:
 8019370:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019374:	00003130 	andeq	r3, r0, r0, lsr r1
 8019378:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801937c:	00003131 	andeq	r3, r0, r1, lsr r1
 8019380:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019384:	00003231 	andeq	r3, r0, r1, lsr r2
 8019388:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801938c:	00423231 	subeq	r3, r2, r1, lsr r2
 8019390:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019394:	00003331 	andeq	r3, r0, r1, lsr r3
 8019398:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801939c:	00003531 	andeq	r3, r0, r1, lsr r5
 80193a0:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80193a4:	00003231 	andeq	r3, r0, r1, lsr r2
 80193a8:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80193ac:	00573231 	subseq	r3, r7, r1, lsr r2
 80193b0:	31534355 	cmpcc	r3, r5, asr r3
 80193b4:	00333039 	eorseq	r3, r3, r9, lsr r0
 80193b8:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 80193bc:	00333039 	eorseq	r3, r3, r9, lsr r0
 80193c0:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 80193c4:	00003231 	andeq	r3, r0, r1, lsr r2
 80193c8:	31415041 	cmpcc	r1, r1, asr #32
 80193cc:	00003230 	andeq	r3, r0, r0, lsr r2
 80193d0:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80193d4:	00003232 	andeq	r3, r0, r2, lsr r2
 80193d8:	31383950 	teqcc	r8, r0, asr r9
 80193dc:	00000033 	andeq	r0, r0, r3, lsr r0

080193e0 <s_patternName>:
 80193e0:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 80193ec:	61520000 	cmpvs	r2, r0
 80193f0:	6f626e69 	svcvs	0x00626e69
 80193f4:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 80193f8:	00656c63 	rsbeq	r6, r5, r3, ror #24
 80193fc:	61656854 	cmnvs	r5, r4, asr r8
 8019400:	20726574 	rsbscs	r6, r2, r4, ror r5
 8019404:	73616863 	cmnvc	r1, #6488064	; 0x630000
 8019408:	6f430065 	svcvs	0x00430065
 801940c:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 8019410:	70697720 	rsbvc	r7, r9, r0, lsr #14
 8019414:	00000065 	andeq	r0, r0, r5, rrx
 8019418:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801941c:	0072656e 	rsbseq	r6, r2, lr, ror #10
 8019420:	00000000 	andeq	r0, r0, r0
 8019424:	61460000 	mrsvs	r0, (UNDEF: 70)
 8019428:	00006564 	andeq	r6, r0, r4, ror #10
	...

08019434 <pixel::s_GPIO_PINs>:
 8019434:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08019438 <s_aStorSize>:
 8019438:	00000060 	andeq	r0, r0, r0, rrx
 801943c:	00000090 	muleq	r0, r0, r0
 8019440:	00000020 	andeq	r0, r0, r0, lsr #32
 8019444:	00000040 	andeq	r0, r0, r0, asr #32
 8019448:	00000060 	andeq	r0, r0, r0, rrx
 801944c:	00000040 	andeq	r0, r0, r0, asr #32
 8019450:	00000020 	andeq	r0, r0, r0, lsr #32
 8019454:	00000020 	andeq	r0, r0, r0, lsr #32
 8019458:	000001e0 	andeq	r0, r0, r0, ror #3
 801945c:	00000040 	andeq	r0, r0, r0, asr #32
 8019460:	00000020 	andeq	r0, r0, r0, lsr #32
 8019464:	00000060 	andeq	r0, r0, r0, rrx
 8019468:	00000030 	andeq	r0, r0, r0, lsr r0
 801946c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019470:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8019474:	00000030 	andeq	r0, r0, r0, lsr r0
 8019478:	00000040 	andeq	r0, r0, r0, asr #32
 801947c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019480:	00000060 	andeq	r0, r0, r0, rrx
 8019484:	00000020 	andeq	r0, r0, r0, lsr #32
 8019488:	00000400 	andeq	r0, r0, r0, lsl #8
 801948c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019490:	00000020 	andeq	r0, r0, r0, lsr #32
 8019494:	00000040 	andeq	r0, r0, r0, asr #32
 8019498:	00000060 	andeq	r0, r0, r0, rrx
 801949c:	00000020 	andeq	r0, r0, r0, lsr #32
 80194a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80194a4:	000000c0 	andeq	r0, r0, r0, asr #1

080194a8 <vtable for StoreDisplayUdf>:
	...
 80194b0:	080107e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl}
 80194b4:	0801082d 	stmdaeq	r1, {r0, r2, r3, r5, fp}
 80194b8:	08010809 	stmdaeq	r1, {r0, r3, fp}
 80194bc:	080107e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sl}

080194c0 <vtable for StoreDmxSend>:
	...
 80194c8:	0801084d 	stmdaeq	r1, {r0, r2, r3, r6, fp}
 80194cc:	08010899 	stmdaeq	r1, {r0, r3, r4, r7, fp}
 80194d0:	08010875 	stmdaeq	r1, {r0, r2, r4, r5, r6, fp}
 80194d4:	08010851 	stmdaeq	r1, {r0, r4, r6, fp}

080194d8 <vtable for StoreNetwork>:
	...
 80194e0:	080108b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp}
 80194e4:	080109a1 	stmdaeq	r1, {r0, r5, r7, r8, fp}
 80194e8:	080108c1 	stmdaeq	r1, {r0, r6, r7, fp}
 80194ec:	080109b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, fp}
 80194f0:	08010941 	stmdaeq	r1, {r0, r6, r8, fp}
 80194f4:	08010915 	stmdaeq	r1, {r0, r2, r4, r8, fp}
 80194f8:	080108e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, fp}
 80194fc:	0801096d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, fp}
 8019500:	080093fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, pc}
 8019504:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019508:	00000000 	andeq	r0, r0, r0
 801950c:	080108bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, fp}
 8019510:	080109ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, fp}
 8019514:	08010965 	stmdaeq	r1, {r0, r2, r5, r6, r8, fp}
 8019518:	08010939 	stmdaeq	r1, {r0, r3, r4, r5, r8, fp}
 801951c:	0801090d 	stmdaeq	r1, {r0, r2, r3, r8, fp}
 8019520:	08010999 	stmdaeq	r1, {r0, r3, r4, r7, r8, fp}
 8019524:	08009425 	stmdaeq	r0, {r0, r2, r5, sl, ip, pc}

08019528 <vtable for StoreRDMDevice>:
	...
 8019530:	080109ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, fp}
 8019534:	08010a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp}
 8019538:	080109f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, fp}
 801953c:	08010a71 	stmdaeq	r1, {r0, r4, r5, r6, r9, fp}
 8019540:	08010a19 	stmdaeq	r1, {r0, r3, r4, r9, fp}
 8019544:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019548:	00000000 	andeq	r0, r0, r0
 801954c:	080109ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, fp}
 8019550:	08010a69 	stmdaeq	r1, {r0, r3, r5, r6, r9, fp}
 8019554:	08010a55 	stmdaeq	r1, {r0, r2, r4, r6, r9, fp}

08019558 <vtable for StoreRemoteConfig>:
	...
 8019560:	08010aad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, fp}
 8019564:	08010af9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, fp}
 8019568:	08010ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp}
 801956c:	08010ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp}

08019570 <vtable for StorePixelDmx>:
	...
 8019578:	08010b19 	stmdaeq	r1, {r0, r3, r4, r8, r9, fp}
 801957c:	08010c85 	stmdaeq	r1, {r0, r2, r7, sl, fp}
 8019580:	08010b21 	stmdaeq	r1, {r0, r5, r8, r9, fp}
 8019584:	08010c99 	stmdaeq	r1, {r0, r3, r4, r7, sl, fp}
 8019588:	08010c51 	stmdaeq	r1, {r0, r4, r6, sl, fp}
 801958c:	08010c1d 	stmdaeq	r1, {r0, r2, r3, r4, sl, fp}
 8019590:	08010be5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, fp}
 8019594:	08010bad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, fp}
 8019598:	08010b79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, fp}
 801959c:	08010b45 	stmdaeq	r1, {r0, r2, r6, r8, r9, fp}
 80195a0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80195a4:	00000000 	andeq	r0, r0, r0
 80195a8:	08010b1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, fp}
 80195ac:	08010c91 	stmdaeq	r1, {r0, r4, r7, sl, fp}
 80195b0:	08010c7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sl, fp}
 80195b4:	08010c49 	stmdaeq	r1, {r0, r3, r6, sl, fp}
 80195b8:	08010c15 	stmdaeq	r1, {r0, r2, r4, sl, fp}
 80195bc:	08010bdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, fp}
 80195c0:	08010ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp}
 80195c4:	08010b71 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, fp}
 80195c8:	34325441 	ldrtcc	r5, [r2], #-1089	; 0xfffffbbf
 80195cc:	00323343 	eorseq	r3, r2, r3, asr #6
 80195d0:	25206f4e 	strcs	r6, [r0, #-3918]!	; 0xfffff0b2
 80195d4:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 80195d8:	78322520 	ldmdavc	r2!, {r5, r8, sl, sp}
 80195dc:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 80195e0:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 80195e4:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80195e8:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80195ec:	6f742068 	svcvs	0x00742068
 80195f0:	206c6174 	rsbcs	r6, ip, r4, ror r1
 80195f4:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 80195f8:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 80195fc:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8019600:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8019604:	6374000a 	cmnvs	r4, #10
 8019608:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 801960c:	3a6e6967 	bcc	9bb3bb0 <__exidx_end+0x1b99ba4>
 8019610:	6f6f7420 	svcvs	0x006f7420
 8019614:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8019618:	6f632079 	svcvs	0x00632079
 801961c:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8019620:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019624:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8019628:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 801962c:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8019630:	41000a64 	tstmi	r0, r4, ror #20
 8019634:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8019638:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 801963c:	61662070 	smcvs	25088	; 0x6200
 8019640:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8019644:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8019648:	61666564 	cmnvs	r6, r4, ror #10
 801964c:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8019650:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8019654:	0a796177 	beq	9e71c38 <__exidx_end+0x1e57c2c>
 8019658:	50524100 	subspl	r4, r2, r0, lsl #2
 801965c:	6f6f6c20 	svcvs	0x006f6c20
 8019660:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8019664:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8019668:	000a6465 	andeq	r6, sl, r5, ror #8

0801966c <NetworkConst::MSG_MDNS_CONFIG>:
 801966c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019670:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019674:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019678:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801967d <NetworkConst::MSG_NETWORK_INIT>:
 801967d:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8019681:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8019685:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8019689:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801968d:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8019691:	3135322e 	teqcc	r5, lr, lsr #4
 8019695:	63745f00 	cmnvs	r4, #0, 30
 8019699:	6f6c2e70 	svcvs	0x006c2e70
 801969d:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80196a1:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80196a5:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80196a9:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80196b1 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80196ad:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80196b1:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8018855 <RDMConst::MANUFACTURER_NAME+0x19>
 80196b5:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80196b9:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80196bd:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80196c1:	20000a53 	andcs	r0, r0, r3, asr sl
 80196c5:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80196c9:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80196cd:	0a676e69 	beq	99f5079 <__exidx_end+0x19db06d>
 80196d1:	614e2000 	mrsvs	r2, (UNDEF: 78)
 80196d5:	3a20656d 	bcc	8832c91 <__exidx_end+0x818c85>
 80196d9:	0a732520 	beq	9ce2b61 <__exidx_end+0x1cc8b55>
 80196dd:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80196e1:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80196e5:	000a7325 	andeq	r7, sl, r5, lsr #6
 80196e9:	30687465 	rsbcc	r7, r8, r5, ror #8
 80196ed:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 80196f1:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80196f5:	5f656369 	svcpl	0x00656369
 80196f9:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 80196fd:	6b726f77 	blvs	9cb54e1 <__exidx_end+0x1c9b4d5>
 8019701:	4820000a 	stmdami	r0!, {r1, r3}
 8019705:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8019709:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801970d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019711:	20000a73 	andcs	r0, r0, r3, ror sl
 8019715:	614e6649 	cmpvs	lr, r9, asr #12
 8019719:	2020656d 	eorcs	r6, r0, sp, ror #10
 801971d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019721:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8019725:	000a7325 	andeq	r7, sl, r5, lsr #6
 8019729:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801972d:	20202074 	eorcs	r2, r0, r4, ror r0
 8019731:	3a202020 	bcc	88217b9 <__exidx_end+0x8077ad>
 8019735:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8019739:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801973d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019741:	0a64252f 	beq	9922c05 <__exidx_end+0x1908bf9>
 8019745:	654e2000 	strbvs	r2, [lr, #-0]
 8019749:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801974d:	2020206b 	eorcs	r2, r0, fp, rrx
 8019751:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019755:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019759:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801975d:	20000a64 	andcs	r0, r0, r4, ror #20
 8019761:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8019765:	20796177 	rsbscs	r6, r9, r7, ror r1
 8019769:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801976d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019771:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019775:	0a64252e 	beq	9922c35 <__exidx_end+0x1908c29>
 8019779:	72422000 	subvc	r2, r2, #0
 801977d:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8019781:	20747361 	rsbscs	r7, r4, r1, ror #6
 8019785:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019789:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801978d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019791:	20000a64 	andcs	r0, r0, r4, ror #20
 8019795:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8019799:	20202020 	eorcs	r2, r0, r0, lsr #32
 801979d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80197a1:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80197a5:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80197a9:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80197ad:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80197b1:	3a78322e 	bcc	9e26071 <__exidx_end+0x1e0c065>
 80197b5:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80197b9:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80197bd:	20000a78 	andcs	r0, r0, r8, ror sl
 80197c1:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80197c5:	20202020 	eorcs	r2, r0, r0, lsr #32
 80197c9:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80197cd:	000a6325 	andeq	r6, sl, r5, lsr #6
 80197d1:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 80197d5:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 80197d9:	 	rsbvc	r0, r9, r0, asr r0

080197db <NetworkParamsConst::IP_ADDRESS>:
 80197db:	615f7069 	cmpvs	pc, r9, rrx
 80197df:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80197e3:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080197e6 <NetworkParamsConst::DEFAULT_GATEWAY>:
 80197e6:	61666564 	cmnvs	r6, r4, ror #10
 80197ea:	5f746c75 	svcpl	0x00746c75
 80197ee:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80197f2:	00796177 	rsbseq	r6, r9, r7, ror r1

080197f6 <NetworkParamsConst::DHCP_RETRY_TIME>:
 80197f6:	70636864 	rsbvc	r6, r3, r4, ror #16
 80197fa:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80197fe:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8019806 <NetworkParamsConst::HOSTNAME>
 8019802:	00656d69 	rsbeq	r6, r5, r9, ror #26

08019806 <NetworkParamsConst::HOSTNAME>:
 8019806:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801980a:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801980f <NetworkParamsConst::NET_MASK>:
 801980f:	5f74656e 	svcpl	0x0074656e
 8019813:	6b73616d 	blvs	9cf1dcf <__exidx_end+0x1cd7dc3>
	...

08019818 <NetworkParamsConst::USE_DHCP>:
 8019818:	5f657375 	svcpl	0x00657375
 801981c:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08019821 <NetworkParamsConst::FILE_NAME>:
 8019821:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8019825:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8019829:	00747874 	rsbseq	r7, r4, r4, ror r8
 801982d:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8019831:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8019835:	61747320 	cmnvs	r4, r0, lsr #6
 8019839:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801983d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019841:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019845:	252f6425 	strcs	r6, [pc, #-1061]!	; 8019428 <s_patternName+0x48>
 8019849:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801984d:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8019851:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019855:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019859:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801985d:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8019861:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019865:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019869:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801986d:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8019871:	20657261 	rsbcs	r7, r5, r1, ror #4
 8019875:	2a2e2556 	bcs	8ba2dd5 <__exidx_end+0xb88dc9>
 8019879:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801987d:	72205043 	eorvc	r5, r0, #67	; 0x43
 8019881:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8019885:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8019889:	50434844 	subpl	r4, r3, r4, asr #16
 801988d:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8019891:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8019895:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8019899:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801989d:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80198a1:	6f647475 	svcvs	0x00647475
 80198a5:	 	stccc	14, cr6, [r0], {119}	; 0x77

080198a8 <pArray>:
 80198a8:	0801993c 	stmdaeq	r1, {r2, r3, r4, r5, r8, fp, ip, pc}
 80198ac:	080198f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, ip, pc}
 80198b0:	080197db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 80198b4:	08019942 	stmdaeq	r1, {r1, r6, r8, fp, ip, pc}
 80198b8:	08019bc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, fp, ip, pc}
 80198bc:	08019903 	stmdaeq	r1, {r0, r1, r8, fp, ip, pc}
 80198c0:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 80198c4:	08019806 	stmdaeq	r1, {r1, r2, fp, ip, pc}
 80198c8:	08019a32 	stmdaeq	r1, {r1, r4, r5, r9, fp, ip, pc}
 80198cc:	08019a42 	stmdaeq	r1, {r1, r6, r9, fp, ip, pc}
 80198d0:	08019a52 	stmdaeq	r1, {r1, r4, r6, r9, fp, ip, pc}
 80198d4:	08019a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, pc}
 80198d8:	0801980f 	stmdaeq	r1, {r0, r1, r2, r3, fp, ip, pc}
 80198dc:	08019bb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, fp, ip, pc}
 80198e0:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 80198e4:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 80198e8:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 80198ec:	08017547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp, lr}
 80198f0:	080197e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, ip, pc}
 80198f4:	08019910 	stmdaeq	r1, {r4, r8, fp, ip, pc}

080198f8 <DisplayUdfParamsConst::BOARD_NAME>:
 80198f8:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80198fc:	616e5f64 	cmnvs	lr, r4, ror #30
 8019900:	 	tstvs	r0, sp, ror #10

08019903 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8019903:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019907:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801990b:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08019910 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8019910:	5f786d64 	svcpl	0x00786d64
 8019914:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8019918:	6f697463 	svcvs	0x00697463
 801991c:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801991e <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801991e:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8019922:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8019926:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80193c1 <PixelType::TYPES+0x51>
 801992a:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801992c <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801992c:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8019930:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8019934:	61636974 	smcvs	13972	; 0x3694
 8019938:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801993c <DisplayUdfParamsConst::TITLE>:
 801993c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8019940:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08019942 <DisplayUdfParamsConst::VERSION>:
 8019942:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019946:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801994a <DisplayUdfParamsConst::FILE_NAME>:
 801994a:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801994e:	2e79616c 	rpwcsez	f6, f1, #4.0
 8019952:	00747874 	rsbseq	r7, r4, r4, ror r8

08019956 <DisplayUdfParamsConst::INTENSITY>:
 8019956:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801995a:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801995e:	 	cmnvs	r1, #121	; 0x79

08019960 <DevicesParamsConst::ACTIVE_OUT>:
 8019960:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019964:	6f5f6576 	svcvs	0x005f6576
 8019968:	 	smlsdxvs	r0, r5, r4, r7

0801996b <DevicesParamsConst::GAMMA_VALUE>:
 801996b:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801996f:	61765f61 	cmnvs	r6, r1, ror #30
 8019973:	0065756c 	rsbeq	r7, r5, ip, ror #10

08019977 <DevicesParamsConst::SPI_SPEED_HZ>:
 8019977:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801997b:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801997f:	5f646565 	svcpl	0x00646565
 8019983:	 	strvc	r7, [r0], #-2664	; 0xfffff598

08019986 <DevicesParamsConst::TEST_PATTERN>:
 8019986:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801998a:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801998e:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08019993 <DevicesParamsConst::GROUPING_COUNT>:
 8019993:	5f64656c 	svcpl	0x0064656c
 8019997:	756f7267 	strbvc	r7, [pc, #-615]!	; 8019738 <NetworkConst::MSG_NETWORK_INIT+0xbb>
 801999b:	6f635f70 	svcvs	0x00635f70
 801999f:	00746e75 	rsbseq	r6, r4, r5, ror lr

080199a3 <DevicesParamsConst::GAMMA_CORRECTION>:
 80199a3:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80199a7:	6f635f61 	svcvs	0x00635f61
 80199ab:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 80199af:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

080199b4 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 80199b4:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 80199b8:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 80199bc:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80199c0:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 80199c4:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

080199c6 <DevicesParamsConst::MAP>:
 80199c6:	5f64656c 	svcpl	0x0064656c
 80199ca:	5f626772 	svcpl	0x00626772
 80199ce:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 80199d2:	00676e69 	rsbeq	r6, r7, r9, ror #28

080199d6 <DevicesParamsConst::TYPE>:
 80199d6:	5f64656c 	svcpl	0x0064656c
 80199da:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

080199df <DevicesParamsConst::COUNT>:
 80199df:	5f64656c 	svcpl	0x0064656c
 80199e3:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80199e7:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

080199e9 <DevicesParamsConst::LED_T0H>:
 80199e9:	5f64656c 	svcpl	0x0064656c
 80199ed:	00683074 	rsbeq	r3, r8, r4, ror r0

080199f1 <DevicesParamsConst::LED_T1H>:
 80199f1:	5f64656c 	svcpl	0x0064656c
 80199f5:	00683174 	rsbeq	r3, r8, r4, ror r1

080199f9 <DevicesParamsConst::FILE_NAME>:
 80199f9:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80199fd:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8019a01:	00747874 	rsbseq	r7, r4, r4, ror r8
 8019a05:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8019a09:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8019a0d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019a11:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019a15:	002c2264 	eoreq	r2, ip, r4, ror #4
 8019a19:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8019a1d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019a21:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019a25:	0a64252e 	beq	9922ee5 <__exidx_end+0x1908ed9>
 8019a29:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8019a2d:	0a232073 	beq	88e1c01 <__exidx_end+0x8c7bf5>
	...

08019a32 <LightSetParamsConst::UNIVERSE_PORT>:
 8019a32:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019a36:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019a3a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019a3e:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8019a42:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019a46:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019a4a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019a4e:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8019a52:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019a56:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019a5a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019a5e:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8019a62:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019a66:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019a6a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019a6e:	00645f74 	rsbeq	r5, r4, r4, ror pc

08019a72 <LightSetParamsConst::START_UNI_PORT>:
 8019a72:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019a76:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019a7a:	6f705f69 	svcvs	0x00705f69
 8019a7e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019a82:	00000000 	andeq	r0, r0, r0
 8019a86:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019a8a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019a8e:	6f705f69 	svcvs	0x00705f69
 8019a92:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 8019a96:	00000000 	andeq	r0, r0, r0
 8019a9a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019a9e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019aa2:	6f705f69 	svcvs	0x00705f69
 8019aa6:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8019aaa:	00000000 	andeq	r0, r0, r0
 8019aae:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019ab2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019ab6:	6f705f69 	svcvs	0x00705f69
 8019aba:	345f7472 	ldrbcc	r7, [pc], #-1138	; 8019ac2 <LightSetParamsConst::START_UNI_PORT+0x50>
 8019abe:	00000000 	andeq	r0, r0, r0
 8019ac2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019ac6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019aca:	6f705f69 	svcvs	0x00705f69
 8019ace:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8019664 <vtable for StorePixelDmx+0xf4>
 8019ad2:	00000000 	andeq	r0, r0, r0
 8019ad6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019ada:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019ade:	6f705f69 	svcvs	0x00705f69
 8019ae2:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 8019ae6:	00000000 	andeq	r0, r0, r0
 8019aea:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019aee:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019af2:	6f705f69 	svcvs	0x00705f69
 8019af6:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8019afa:	00000000 	andeq	r0, r0, r0
 8019afe:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b02:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b06:	6f705f69 	svcvs	0x00705f69
 8019b0a:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8019b0e:	00000000 	andeq	r0, r0, r0
 8019b12:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b16:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b1a:	6f705f69 	svcvs	0x00705f69
 8019b1e:	395f7472 	ldmdbcc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8019b22:	00000000 	andeq	r0, r0, r0
 8019b26:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b2a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b2e:	6f705f69 	svcvs	0x00705f69
 8019b32:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b36:	00000030 	andeq	r0, r0, r0, lsr r0
 8019b3a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b3e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b42:	6f705f69 	svcvs	0x00705f69
 8019b46:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b4a:	00000031 	andeq	r0, r0, r1, lsr r0
 8019b4e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b52:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b56:	6f705f69 	svcvs	0x00705f69
 8019b5a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b5e:	00000032 	andeq	r0, r0, r2, lsr r0
 8019b62:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b66:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b6a:	6f705f69 	svcvs	0x00705f69
 8019b6e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b72:	00000033 	andeq	r0, r0, r3, lsr r0
 8019b76:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b7a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b7e:	6f705f69 	svcvs	0x00705f69
 8019b82:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b86:	00000034 	andeq	r0, r0, r4, lsr r0
 8019b8a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019b8e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019b92:	6f705f69 	svcvs	0x00705f69
 8019b96:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019b9a:	00000035 	andeq	r0, r0, r5, lsr r0
 8019b9e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019ba2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8019ba6:	6f705f69 	svcvs	0x00705f69
 8019baa:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8019bae:	00000036 	andeq	r0, r0, r6, lsr r0

08019bb2 <LightSetParamsConst::DMX_START_ADDRESS>:
 8019bb2:	5f786d64 	svcpl	0x00786d64
 8019bb6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019bba:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8019bbe:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8019bc2:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08019bc4 <LightSetParamsConst::UNIVERSE>:
 8019bc4:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8019bc8:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019bcc:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8019bd0:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8019bd4:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8019bd8:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8019bdc:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8019be0:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8019be4:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 8019be8:	36303331 			; <UNDEFINED> instruction: 0x36303331
 8019bec:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8019bf0:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8019bf4:	0a296425 	beq	8a72c90 <__exidx_end+0xa58c84>
 8019bf8:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8019bfc:	0000eeaa 	andeq	lr, r0, sl, lsr #29

08019c00 <_OledFont8x6>:
 8019c00:	00000040 	andeq	r0, r0, r0, asr #32
 8019c04:	40000000 	andmi	r0, r0, r0
 8019c08:	005f0000 	subseq	r0, pc, r0
 8019c0c:	00400000 	subeq	r0, r0, r0
 8019c10:	00070007 	andeq	r0, r7, r7
 8019c14:	7f144000 	svcvc	0x00144000
 8019c18:	00147f14 	andseq	r7, r4, r4, lsl pc
 8019c1c:	7f2a2440 	svcvc	0x002a2440
 8019c20:	4000122a 	andmi	r1, r0, sl, lsr #4
 8019c24:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8019c28:	36400062 	strbcc	r0, [r0], -r2, rrx
 8019c2c:	50205649 	eorpl	r5, r0, r9, asr #12
 8019c30:	08004000 	stmdaeq	r0, {lr}
 8019c34:	00000307 	andeq	r0, r0, r7, lsl #6
 8019c38:	221c0040 	andscs	r0, ip, #64	; 0x40
 8019c3c:	40000041 	andmi	r0, r0, r1, asr #32
 8019c40:	1c224100 	stfnes	f4, [r2], #-0
 8019c44:	2a400000 	bcs	9019c4c <__exidx_end+0xfffc40>
 8019c48:	2a1c7f1c 	bcs	87398c0 <__exidx_end+0x71f8b4>
 8019c4c:	08084000 	stmdaeq	r8, {lr}
 8019c50:	0008083e 	andeq	r0, r8, lr, lsr r8
 8019c54:	70800040 	addvc	r0, r0, r0, asr #32
 8019c58:	40000030 	andmi	r0, r0, r0, lsr r0
 8019c5c:	08080808 	stmdaeq	r8, {r3, fp}
 8019c60:	00400008 	subeq	r0, r0, r8
 8019c64:	00606000 	rsbeq	r6, r0, r0
 8019c68:	10204000 	eorne	r4, r0, r0
 8019c6c:	00020408 	andeq	r0, r2, r8, lsl #8
 8019c70:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8019c74:	40003e45 	andmi	r3, r0, r5, asr #28
 8019c78:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8019c7c:	72400000 	subvc	r0, r0, #0
 8019c80:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8019c84:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8019c88:	00334d49 	eorseq	r4, r3, r9, asr #26
 8019c8c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8019c90:	4000107f 	andmi	r1, r0, pc, ror r0
 8019c94:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8019c98:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8019c9c:	3149494a 	cmpcc	r9, sl, asr #18
 8019ca0:	21414000 	mrscs	r4, (UNDEF: 65)
 8019ca4:	00070911 	andeq	r0, r7, r1, lsl r9
 8019ca8:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8019cac:	40003649 	andmi	r3, r0, r9, asr #12
 8019cb0:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8019cb4:	0040001e 	subeq	r0, r0, lr, lsl r0
 8019cb8:	00001400 	andeq	r1, r0, r0, lsl #8
 8019cbc:	40004000 	andmi	r4, r0, r0
 8019cc0:	00000034 	andeq	r0, r0, r4, lsr r0
 8019cc4:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8019cc8:	40004122 	andmi	r4, r0, r2, lsr #2
 8019ccc:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8019cd0:	00400014 	subeq	r0, r0, r4, lsl r0
 8019cd4:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8019cd8:	01024000 	mrseq	r4, (UNDEF: 2)
 8019cdc:	00060959 	andeq	r0, r6, r9, asr r9
 8019ce0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8019ce4:	40004e59 	andmi	r4, r0, r9, asr lr
 8019ce8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8019cec:	7f40007c 	svcvc	0x0040007c
 8019cf0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8019cf4:	413e4000 	teqmi	lr, r0
 8019cf8:	00224141 	eoreq	r4, r2, r1, asr #2
 8019cfc:	41417f40 	cmpmi	r1, r0, asr #30
 8019d00:	40003e41 	andmi	r3, r0, r1, asr #28
 8019d04:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8019d08:	7f400041 	svcvc	0x00400041
 8019d0c:	01090909 	tsteq	r9, r9, lsl #18
 8019d10:	413e4000 	teqmi	lr, r0
 8019d14:	00735141 	rsbseq	r5, r3, r1, asr #2
 8019d18:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8019d1c:	40007f08 	andmi	r7, r0, r8, lsl #30
 8019d20:	417f4100 	cmnmi	pc, r0, lsl #2
 8019d24:	20400000 	subcs	r0, r0, r0
 8019d28:	013f4140 	teqeq	pc, r0, asr #2
 8019d2c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8019d30:	00412214 	subeq	r2, r1, r4, lsl r2
 8019d34:	40407f40 	submi	r7, r0, r0, asr #30
 8019d38:	40004040 	andmi	r4, r0, r0, asr #32
 8019d3c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8019d40:	7f40007f 	svcvc	0x0040007f
 8019d44:	7f100804 	svcvc	0x00100804
 8019d48:	413e4000 	teqmi	lr, r0
 8019d4c:	003e4141 	eorseq	r4, lr, r1, asr #2
 8019d50:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8019d54:	40000609 	andmi	r0, r0, r9, lsl #12
 8019d58:	2151413e 	cmpcs	r1, lr, lsr r1
 8019d5c:	7f40005e 	svcvc	0x0040005e
 8019d60:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8019d64:	49264000 	stmdbmi	r6!, {lr}
 8019d68:	00324949 	eorseq	r4, r2, r9, asr #18
 8019d6c:	7f010340 	svcvc	0x00010340
 8019d70:	40000301 	andmi	r0, r0, r1, lsl #6
 8019d74:	4040403f 	submi	r4, r0, pc, lsr r0
 8019d78:	1f40003f 	svcne	0x0040003f
 8019d7c:	1f204020 	svcne	0x00204020
 8019d80:	403f4000 	eorsmi	r4, pc, r0
 8019d84:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8019d88:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8019d8c:	40006314 	andmi	r6, r0, r4, lsl r3
 8019d90:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8019d94:	61400003 	cmpvs	r0, r3
 8019d98:	434d4959 	movtmi	r4, #55641	; 0xd959
 8019d9c:	7f004000 	svcvc	0x00004000
 8019da0:	00414141 	subeq	r4, r1, r1, asr #2
 8019da4:	08040240 	stmdaeq	r4, {r6, r9}
 8019da8:	40002010 	andmi	r2, r0, r0, lsl r0
 8019dac:	41414100 	mrsmi	r4, (UNDEF: 81)
 8019db0:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8019db4:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8019db8:	40404000 	submi	r4, r0, r0
 8019dbc:	00404040 	subeq	r4, r0, r0, asr #32
 8019dc0:	07030040 	streq	r0, [r3, -r0, asr #32]
 8019dc4:	40000008 	andmi	r0, r0, r8
 8019dc8:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8019dcc:	7f400040 	svcvc	0x00400040
 8019dd0:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8019dd4:	44384000 	ldrtmi	r4, [r8], #-0
 8019dd8:	00284444 	eoreq	r4, r8, r4, asr #8
 8019ddc:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8019de0:	40007f28 	andmi	r7, r0, r8, lsr #30
 8019de4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8019de8:	00400018 	subeq	r0, r0, r8, lsl r0
 8019dec:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8019df0:	a4184000 	ldrge	r4, [r8], #-0
 8019df4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8019df8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8019dfc:	40007804 	andmi	r7, r0, r4, lsl #16
 8019e00:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8019e04:	20400000 	subcs	r0, r0, r0
 8019e08:	003d4040 	eorseq	r4, sp, r0, asr #32
 8019e0c:	107f4000 	rsbsne	r4, pc, r0
 8019e10:	00004428 	andeq	r4, r0, r8, lsr #8
 8019e14:	7f410040 	svcvc	0x00410040
 8019e18:	40000040 	andmi	r0, r0, r0, asr #32
 8019e1c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8019e20:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8019e24:	78040408 	stmdavc	r4, {r3, sl}
 8019e28:	44384000 	ldrtmi	r4, [r8], #-0
 8019e2c:	00384444 	eorseq	r4, r8, r4, asr #8
 8019e30:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8019e34:	40001824 	andmi	r1, r0, r4, lsr #16
 8019e38:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8019e3c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8019e40:	08040408 	stmdaeq	r4, {r3, sl}
 8019e44:	54484000 	strbpl	r4, [r8], #-0
 8019e48:	00245454 	eoreq	r5, r4, r4, asr r4
 8019e4c:	3f040440 	svccc	0x00040440
 8019e50:	40002444 	andmi	r2, r0, r4, asr #8
 8019e54:	2040403c 	subcs	r4, r0, ip, lsr r0
 8019e58:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8019e5c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8019e60:	403c4000 	eorsmi	r4, ip, r0
 8019e64:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8019e68:	10284440 	eorne	r4, r8, r0, asr #8
 8019e6c:	40004428 	andmi	r4, r0, r8, lsr #8
 8019e70:	9090904c 	addsls	r9, r0, ip, asr #32
 8019e74:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8019e78:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8019e7c:	08004000 	stmdaeq	r0, {lr}
 8019e80:	00004136 	andeq	r4, r0, r6, lsr r1
 8019e84:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8019e88:	40000000 	andmi	r0, r0, r0
 8019e8c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8019e90:	02400000 	subeq	r0, r0, #0
 8019e94:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8019e98:	263c4000 	ldrtcs	r4, [ip], -r0
 8019e9c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08019ea0 <oled_128x32_init>:
 8019ea0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8019ea4:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8019ea8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8019eac:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8019eb0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8019eb4:	a6a440db 	ssatge	r4, #5, fp, asr #1

08019eb8 <oled_128x64_init>:
 8019eb8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8019ebc:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8019ec0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8019ec4:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8019ec8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8019ecc:	a6a440db 	ssatge	r4, #5, fp, asr #1

08019ed0 <vtable for Ssd1306>:
	...
 8019ed8:	08013dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, sp}
 8019edc:	08013dfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8019ee0:	08014101 	stmdaeq	r1, {r0, r8, lr}
 8019ee4:	08014089 	stmdaeq	r1, {r0, r3, r7, lr}
 8019ee8:	08013f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip, sp}
 8019eec:	08013e09 	stmdaeq	r1, {r0, r3, r9, sl, fp, ip, sp}
 8019ef0:	08013e35 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, fp, ip, sp}
 8019ef4:	08013f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp, ip, sp}
 8019ef8:	08013ee1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, fp, ip, sp}
 8019efc:	08013dd3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, fp, ip, sp}
 8019f00:	08013f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, ip, sp}
 8019f04:	08013f9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp}
 8019f08:	08013fb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 8019f0c:	08013dd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp}
 8019f10:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8019f14:	5b1b006d 	blpl	86da0d0 <__exidx_end+0x6c00c4>
 8019f18:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8019f1c:	31335b1b 	teqcc	r3, fp, lsl fp
 8019f20:	5b1b006d 	blpl	86da0dc <__exidx_end+0x6c00d0>
 8019f24:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8019f28:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8019f2c:	5b1b006d 	blpl	86da0e8 <__exidx_end+0x6c00dc>
 8019f30:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8019f34:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8019f38:	205d732a 	subscs	r7, sp, sl, lsr #6
 8019f3c:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8019f40:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8019f44:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8019f48:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8019f4c:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8019f50:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8019f54:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8019f58:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019f5c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019f60:	000a7525 	andeq	r7, sl, r5, lsr #10
 8019f64:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019f68:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019f6c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8019f70:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8019f74:	6b636f6c 	blvs	98f5d2c <__exidx_end+0x18dbd20>
 8019f78:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8019f7c:	000a7469 	andeq	r7, sl, r9, ror #8
 8019f80:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019f84:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019f88:	6f6c4270 	svcvs	0x006c4270
 8019f8c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8019f90:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8019f94:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8019f98:	7a697320 	bvc	9a76c20 <__exidx_end+0x1a5cc14>
 8019f9c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8019fa0:	6164202c 	cmnvs	r4, ip, lsr #32
 8019fa4:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8019fa8:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8019fac:	3a656572 	bcc	997357c <__exidx_end+0x1959570>
 8019fb0:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8019fb4:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019fb8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8019fbc:	203d2072 	eorscs	r2, sp, r2, ror r0
 8019fc0:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8019fc4:	6f6c4270 	svcvs	0x006c4270
 8019fc8:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8019fcc:	0a702520 	beq	9c23454 <__exidx_end+0x1c09448>
 8019fd0:	00000000 	andeq	r0, r0, r0

08019fd4 <days_of_month>:
 8019fd4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019fd8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8019fdc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019fe0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019fe4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019fe8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019fec:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019ff0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019ff4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8019ff8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8019ffc:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a000:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

0801a004 <__exidx_start>:
 801a004:	7fff036c 	svcvc	0x00ff036c
 801a008:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801a00c <.ARM.attributes>:
 801a00c:	00003441 	andeq	r3, r0, r1, asr #8
 801a010:	61656100 	cmnvs	r5, r0, lsl #2
 801a014:	01006962 	tsteq	r0, r2, ror #18
 801a018:	0000002a 	andeq	r0, r0, sl, lsr #32
 801a01c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 801a020:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801a024:	0600344d 	streq	r3, [r0], -sp, asr #8
 801a028:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 801a02c:	12060a02 	andne	r0, r6, #8192	; 0x2000
 801a030:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 801a034:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 801a038:	1b011a01 	blne	8060844 <__exidx_end+0x46838>
 801a03c:	22011c01 	andcs	r1, r1, #256	; 0x100
 801a040:	Address 0x000000000801a040 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	1000a000 	andne	sl, r0, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	0bebc200 	bleq	1faf08fc <_sp+0xfae08fc>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <DdpDisplay::s_nOffsetCompare>:
	...

20000714 <DdpDisplay::s_nLightsetPortLength>:
	...

2000081c <DdpDisplay::s_pThis>:
2000081c:	00000000 	andeq	r0, r0, r0

20000820 <LLRPDevice::s_nIpAddressFrom>:
20000820:	00000000 	andeq	r0, r0, r0

20000824 <LLRPDevice::m_nIpAddresLLRPRequest>:
20000824:	00000000 	andeq	r0, r0, r0

20000828 <LLRPDevice::m_nIpAddressLLRPResponse>:
20000828:	00000000 	andeq	r0, r0, r0

2000082c <LLRPDevice::m_pLLRP>:
2000082c:	00000000 	andeq	r0, r0, r0

20000830 <RDMNetDevice::s_RdmCommand>:
	...

2000092f <RDMNetDevice::s_Cid>:
	...

20000940 <RDMSensors::s_pThis>:
20000940:	00000000 	andeq	r0, r0, r0

20000944 <RDMSubDevices::s_pThis>:
20000944:	00000000 	andeq	r0, r0, r0

20000948 <RDMDeviceResponder::s_pThis>:
20000948:	00000000 	andeq	r0, r0, r0

2000094c <RDMIdentify::m_bIsEnabled>:
	...

2000094d <RDMIdentify::m_nMode>:
2000094d:	 	andeq	r0, r0, r0

20000950 <RDMIdentify::s_pThis>:
20000950:	00000000 	andeq	r0, r0, r0

20000954 <DmxSend::s_nStarted>:
20000954:	00000000 	andeq	r0, r0, r0

20000958 <s_RxBuffer>:
	...

20000d78 <s_TxBuffer>:
	...

20001180 <sv_PortState>:
	...

20001188 <sv_nRxDmxPackets>:
	...

200011a8 <sv_nUartsSending>:
200011a8:	00000000 	andeq	r0, r0, r0

200011ac <Dmx::s_pThis>:
200011ac:	00000000 	andeq	r0, r0, r0

200011b0 <gv_RdmDataReceiveEnd>:
200011b0:	00000000 	andeq	r0, r0, r0

200011b4 <DmxConfigUdp::s_pUdpBuffer>:
200011b4:	00000000 	andeq	r0, r0, r0

200011b8 <PixelPatterns::m_PortConfig>:
	...

200013b8 <PixelPatterns::m_nActivePorts>:
200013b8:	00000000 	andeq	r0, r0, r0

200013bc <PixelPatterns::m_pScannerColours>:
200013bc:	00000000 	andeq	r0, r0, r0

200013c0 <PixelPatterns::m_nCount>:
200013c0:	00000000 	andeq	r0, r0, r0

200013c4 <PixelPatterns::m_pOutput>:
200013c4:	00000000 	andeq	r0, r0, r0

200013c8 <PixelTestPattern::s_Pattern>:
200013c8:	00000000 	andeq	r0, r0, r0

200013cc <sv_isRunning>:
200013cc:	00000000 	andeq	r0, r0, r0

200013d0 <WS28xxMulti::s_pThis>:
200013d0:	00000000 	andeq	r0, r0, r0

200013d4 <pixel::s_DmaBuffer>:
	...

200093d4 <SpiFlashStore::s_nWaitMillis>:
200093d4:	00000000 	andeq	r0, r0, r0

200093d8 <SpiFlashStore::s_nStartAddress>:
200093d8:	00000000 	andeq	r0, r0, r0

200093dc <SpiFlashStore::s_bHaveFlashChip>:
200093dc:	00000000 	andeq	r0, r0, r0

200093e0 <SpiFlashStore::s_nSpiFlashStoreSize>:
200093e0:	00000000 	andeq	r0, r0, r0

200093e4 <SpiFlashStore::s_State>:
200093e4:	00000000 	andeq	r0, r0, r0

200093e8 <SpiFlashStore::s_pThis>:
200093e8:	00000000 	andeq	r0, r0, r0

200093ec <SpiFlashStore::s_bIsNew>:
200093ec:	00000000 	andeq	r0, r0, r0

200093f0 <StoreDisplayUdf::s_pThis>:
200093f0:	00000000 	andeq	r0, r0, r0

200093f4 <StoreDmxSend::s_pThis>:
200093f4:	00000000 	andeq	r0, r0, r0

200093f8 <StoreNetwork::s_pThis>:
200093f8:	00000000 	andeq	r0, r0, r0

200093fc <StoreRDMDevice::s_pThis>:
200093fc:	00000000 	andeq	r0, r0, r0

20009400 <StoreRemoteConfig::s_pThis>:
20009400:	00000000 	andeq	r0, r0, r0

20009404 <StorePixelDmx::s_pThis>:
20009404:	00000000 	andeq	r0, r0, r0

20009408 <FlashRom::s_pThis>:
20009408:	00000000 	andeq	r0, r0, r0

2000940c <g_ip_info>:
	...

20009418 <g_mac_address>:
20009418:	00000000 	andeq	r0, r0, r0
	...

2000941e <s_is_dhcp>:
	...

20009420 <s_p>:
20009420:	00000000 	andeq	r0, r0, r0

20009424 <s_ticker>:
20009424:	00000000 	andeq	r0, r0, r0

20009428 <s_mac_address>:
	...

20009430 <s_mac_address_arp_reply>:
	...

20009438 <broadcast_mask>:
20009438:	00000000 	andeq	r0, r0, r0

2000943c <gw_ip>:
2000943c:	00000000 	andeq	r0, r0, r0

20009440 <on_network_mask>:
20009440:	00000000 	andeq	r0, r0, r0

20009444 <s_id>:
20009444:	00000000 	andeq	r0, r0, r0

20009448 <s_ports_allowed>:
	...

20009468 <s_recv_queue>:
	...

2000f108 <s_send_packet>:
	...

2000f6f4 <MDNS::s_nRemoteIp>:
2000f6f4:	00000000 	andeq	r0, r0, r0

2000f6f8 <MDNS::s_nRemotePort>:
2000f6f8:	00000000 	andeq	r0, r0, r0

2000f6fc <MDNS::s_nMulticastIp>:
2000f6fc:	00000000 	andeq	r0, r0, r0

2000f700 <MDNS::s_AnswerLocalIp>:
	...

2000f904 <MDNS::s_ServiceRecords>:
	...

2000f924 <MDNS::s_nBytesReceived>:
2000f924:	00000000 	andeq	r0, r0, r0

2000f928 <MDNS::s_ServiceRecordsData>:
	...

2000fb2c <MDNS::s_pName>:
2000fb2c:	00000000 	andeq	r0, r0, r0

2000fb30 <MDNS::s_pBuffer>:
2000fb30:	00000000 	andeq	r0, r0, r0

2000fb34 <Network::s_pThis>:
2000fb34:	00000000 	andeq	r0, r0, r0

2000fb38 <s_arp_announce>:
	...

2000fb64 <s_arp_reply>:
	...

2000fb90 <s_arp_request>:
	...

2000fbbc <s_dhcp_allocated_gw>:
2000fbbc:	00000000 	andeq	r0, r0, r0

2000fbc0 <s_dhcp_allocated_ip>:
2000fbc0:	00000000 	andeq	r0, r0, r0

2000fbc4 <s_dhcp_allocated_netmask>:
2000fbc4:	00000000 	andeq	r0, r0, r0

2000fbc8 <s_dhcp_message>:
	...

2000fdec <s_dhcp_server_ip>:
2000fdec:	00000000 	andeq	r0, r0, r0

2000fdf0 <DisplayUdf::s_pThis>:
2000fdf0:	00000000 	andeq	r0, r0, r0

2000fdf4 <PropertiesConfig::s_Config>:
2000fdf4:	00000000 	andeq	r0, r0, r0

2000fdf8 <Display::s_pThis>:
2000fdf8:	00000000 	andeq	r0, r0, r0

2000fdfc <_ClearBuffer>:
	...

2000fe84 <Ssd1306::s_pThis>:
2000fe84:	00000000 	andeq	r0, r0, r0

2000fe88 <FirmwareVersion::s_FirmwareVersion>:
	...

2000fe9e <FirmwareVersion::s_Print>:
	...

2000fee0 <FirmwareVersion::s_pThis>:
2000fee0:	00000000 	andeq	r0, r0, r0

2000fee4 <LedBlink::s_pThis>:
2000fee4:	00000000 	andeq	r0, r0, r0

2000fee8 <Hardware::s_pThis>:
2000fee8:	00000000 	andeq	r0, r0, r0

2000feec <last.0>:
2000feec:	00000000 	andeq	r0, r0, r0

2000fef0 <s_micros>:
	...

2000fef8 <set_timer>:
2000fef8:	00000000 	andeq	r0, r0, r0

2000fefc <s_nSysTickMillis>:
2000fefc:	00000000 	andeq	r0, r0, r0

2000ff00 <s_nAddress>:
2000ff00:	00000000 	andeq	r0, r0, r0

2000ff04 <dma_current_ptp_rxdesc>:
2000ff04:	00000000 	andeq	r0, r0, r0

2000ff08 <dma_current_ptp_txdesc>:
2000ff08:	00000000 	andeq	r0, r0, r0

2000ff0c <dma_current_rxdesc>:
2000ff0c:	00000000 	andeq	r0, r0, r0

2000ff10 <dma_current_txdesc>:
2000ff10:	00000000 	andeq	r0, r0, r0

2000ff14 <enet_initpara>:
	...

2000ff50 <rx_buff>:
	...

2002a008 <rxdesc_tab>:
	...

2002a468 <tx_buff>:
	...

2002d408 <txdesc_tab>:
	...

Disassembly of section .tcmsram:

10000000 <s_tcp>:
	...

100005ec <s_id>:
100005ec:	00000000 	andeq	r0, r0, r0

100005f0 <s_tcb>:
	...

10000634 <s_recv_queue>:
	...

100011a4 <s_entry_current>:
100011a4:	00000000 	andeq	r0, r0, r0

100011a8 <s_arp_records>:
	...

10001328 <s_multicast_mac>:
	...

10001330 <s_report>:
	...

10001360 <s_id>:
10001360:	00000000 	andeq	r0, r0, r0

10001364 <s_leave>:
	...

10001394 <s_groups>:
	...

100014b4 <s_joins_allowed_index>:
100014b4:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

1000a000 <heap_low>:
	...

Disassembly of section .stack:

1000c000 <_sp-0x4000>:
	...

Disassembly of section .ramadd:

20030000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .bkpsram:

40024000 <SpiFlashStore::s_SpiFlashData>:
	...
