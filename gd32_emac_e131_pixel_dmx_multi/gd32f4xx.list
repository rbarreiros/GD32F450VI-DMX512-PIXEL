
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10010000 	andne	r0, r1, r0
 8008004:	08008bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, pc}
 8008008:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800800c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008010:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008014:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008018:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
	...
 800802c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008030:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800803c:	0801612d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sp, lr}
 8008040:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008044:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008048:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800804c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008050:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008054:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008058:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800805c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008060:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008064:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008068:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800806c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008070:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008074:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008078:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800807c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008080:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008084:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008088:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800808c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008090:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008094:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008098:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800809c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ac:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b0:	0800ed19 	stmdaeq	r0, {r0, r3, r4, r8, sl, fp, sp, lr, pc}
 80080b4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b8:	08010d5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp}
 80080bc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080cc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080dc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ec:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080fc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008100:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008104:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008108:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800810c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008110:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008114:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008118:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800811c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008120:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008124:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008128:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800812c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008130:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008134:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008138:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800813c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008140:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008144:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008148:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800814c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008150:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008154:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008158:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800815c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008160:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008164:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008168:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800816c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008170:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008174:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008178:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008184:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008188:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800818c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008190:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008194:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008198:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

Disassembly of section .text:

080081ac <net_init>:
 80081ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081ae:	9e08      	ldr	r6, [sp, #32]
 80081b0:	460c      	mov	r4, r1
 80081b2:	4921      	ldr	r1, [pc, #132]	; (8008238 <net_init+0x8c>)
 80081b4:	461d      	mov	r5, r3
 80081b6:	1e43      	subs	r3, r0, #1
 80081b8:	3005      	adds	r0, #5
 80081ba:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80081be:	f801 7b01 	strb.w	r7, [r1], #1
 80081c2:	4283      	cmp	r3, r0
 80081c4:	d1f9      	bne.n	80081ba <net_init+0xe>
 80081c6:	491d      	ldr	r1, [pc, #116]	; (800823c <net_init+0x90>)
 80081c8:	f104 000c 	add.w	r0, r4, #12
 80081cc:	4623      	mov	r3, r4
 80081ce:	f813 7b01 	ldrb.w	r7, [r3], #1
 80081d2:	f801 7b01 	strb.w	r7, [r1], #1
 80081d6:	4283      	cmp	r3, r0
 80081d8:	d1f9      	bne.n	80081ce <net_init+0x22>
 80081da:	4918      	ldr	r1, [pc, #96]	; (800823c <net_init+0x90>)
 80081dc:	4816      	ldr	r0, [pc, #88]	; (8008238 <net_init+0x8c>)
 80081de:	9201      	str	r2, [sp, #4]
 80081e0:	2700      	movs	r7, #0
 80081e2:	f000 f99d 	bl	8008520 <ip_init>
 80081e6:	4814      	ldr	r0, [pc, #80]	; (8008238 <net_init+0x8c>)
 80081e8:	f000 f83a 	bl	8008260 <rfc3927_init>
 80081ec:	7037      	strb	r7, [r6, #0]
 80081ee:	782b      	ldrb	r3, [r5, #0]
 80081f0:	9a01      	ldr	r2, [sp, #4]
 80081f2:	b153      	cbz	r3, 800820a <net_init+0x5e>
 80081f4:	4911      	ldr	r1, [pc, #68]	; (800823c <net_init+0x90>)
 80081f6:	4810      	ldr	r0, [pc, #64]	; (8008238 <net_init+0x8c>)
 80081f8:	f00b f98a 	bl	8013510 <dhcp_client>
 80081fc:	42b8      	cmp	r0, r7
 80081fe:	da04      	bge.n	800820a <net_init+0x5e>
 8008200:	480e      	ldr	r0, [pc, #56]	; (800823c <net_init+0x90>)
 8008202:	702f      	strb	r7, [r5, #0]
 8008204:	f009 fb82 	bl	801190c <rfc3927>
 8008208:	7030      	strb	r0, [r6, #0]
 800820a:	490c      	ldr	r1, [pc, #48]	; (800823c <net_init+0x90>)
 800820c:	480a      	ldr	r0, [pc, #40]	; (8008238 <net_init+0x8c>)
 800820e:	f000 f883 	bl	8008318 <arp_init>
 8008212:	480a      	ldr	r0, [pc, #40]	; (800823c <net_init+0x90>)
 8008214:	f00b fb96 	bl	8013944 <ip_set_ip>
 8008218:	f000 f82e 	bl	8008278 <tcp_init>
 800821c:	4a07      	ldr	r2, [pc, #28]	; (800823c <net_init+0x90>)
 800821e:	1e63      	subs	r3, r4, #1
 8008220:	340b      	adds	r4, #11
 8008222:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008226:	f803 1f01 	strb.w	r1, [r3, #1]!
 800822a:	429c      	cmp	r4, r3
 800822c:	d1f9      	bne.n	8008222 <net_init+0x76>
 800822e:	782a      	ldrb	r2, [r5, #0]
 8008230:	4b03      	ldr	r3, [pc, #12]	; (8008240 <net_init+0x94>)
 8008232:	701a      	strb	r2, [r3, #0]
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008238:	20009278 	andcs	r9, r0, r8, ror r2
 800823c:	2000926c 	andcs	r9, r0, ip, ror #4
 8008240:	2000927e 	andcs	r9, r0, lr, ror r2

08008244 <net_shutdown>:
 8008244:	b508      	push	{r3, lr}
 8008246:	f000 f976 	bl	8008536 <ip_shutdown>
 800824a:	4b04      	ldr	r3, [pc, #16]	; (800825c <net_shutdown+0x18>)
 800824c:	781b      	ldrb	r3, [r3, #0]
 800824e:	b11b      	cbz	r3, 8008258 <net_shutdown+0x14>
 8008250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008254:	f00b ba64 	b.w	8013720 <dhcp_client_release>
 8008258:	bd08      	pop	{r3, pc}
 800825a:	bf00      	nop
 800825c:	2000927e 	andcs	r9, r0, lr, ror r2

08008260 <rfc3927_init>:
 8008260:	4b04      	ldr	r3, [pc, #16]	; (8008274 <rfc3927_init+0x14>)
 8008262:	1d82      	adds	r2, r0, #6
 8008264:	4290      	cmp	r0, r2
 8008266:	d100      	bne.n	800826a <rfc3927_init+0xa>
 8008268:	4770      	bx	lr
 800826a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800826e:	f803 1b01 	strb.w	r1, [r3], #1
 8008272:	e7f7      	b.n	8008264 <rfc3927_init+0x4>
 8008274:	20009288 	andcs	r9, r0, r8, lsl #5

08008278 <tcp_init>:
 8008278:	b513      	push	{r0, r1, r4, lr}
 800827a:	4c0c      	ldr	r4, [pc, #48]	; (80082ac <tcp_init+0x34>)
 800827c:	490c      	ldr	r1, [pc, #48]	; (80082b0 <tcp_init+0x38>)
 800827e:	2206      	movs	r2, #6
 8008280:	18a0      	adds	r0, r4, r2
 8008282:	f009 fb9d 	bl	80119c0 <memcpy.isra.0>
 8008286:	2308      	movs	r3, #8
 8008288:	81a3      	strh	r3, [r4, #12]
 800828a:	4b0a      	ldr	r3, [pc, #40]	; (80082b4 <tcp_init+0x3c>)
 800828c:	2204      	movs	r2, #4
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	eb0d 0102 	add.w	r1, sp, r2
 8008296:	f104 001a 	add.w	r0, r4, #26
 800829a:	f009 fb91 	bl	80119c0 <memcpy.isra.0>
 800829e:	2345      	movs	r3, #69	; 0x45
 80082a0:	81e3      	strh	r3, [r4, #14]
 80082a2:	4b05      	ldr	r3, [pc, #20]	; (80082b8 <tcp_init+0x40>)
 80082a4:	6163      	str	r3, [r4, #20]
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	10000000 	andne	r0, r0, r0
 80082b0:	20009278 	andcs	r9, r0, r8, ror r2
 80082b4:	2000926c 	andcs	r9, r0, ip, ror #4
 80082b8:	06400040 	strbeq	r0, [r0], -r0, asr #32

080082bc <udp_init>:
 80082bc:	b570      	push	{r4, r5, r6, lr}
 80082be:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <udp_init+0x40>)
 80082c0:	460e      	mov	r6, r1
 80082c2:	490f      	ldr	r1, [pc, #60]	; (8008300 <udp_init+0x44>)
 80082c4:	2408      	movs	r4, #8
 80082c6:	2200      	movs	r2, #0
 80082c8:	3c01      	subs	r4, #1
 80082ca:	801a      	strh	r2, [r3, #0]
 80082cc:	805a      	strh	r2, [r3, #2]
 80082ce:	f841 2b04 	str.w	r2, [r1], #4
 80082d2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80082d6:	d1f7      	bne.n	80082c8 <udp_init+0xc>
 80082d8:	4d0a      	ldr	r5, [pc, #40]	; (8008304 <udp_init+0x48>)
 80082da:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <udp_init+0x4c>)
 80082dc:	2206      	movs	r2, #6
 80082de:	4601      	mov	r1, r0
 80082e0:	18a8      	adds	r0, r5, r2
 80082e2:	801c      	strh	r4, [r3, #0]
 80082e4:	f009 fd06 	bl	8011cf4 <memcpy.isra.0>
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <udp_init+0x50>)
 80082ea:	60eb      	str	r3, [r5, #12]
 80082ec:	4630      	mov	r0, r6
 80082ee:	4b08      	ldr	r3, [pc, #32]	; (8008310 <udp_init+0x54>)
 80082f0:	616b      	str	r3, [r5, #20]
 80082f2:	f009 fd27 	bl	8011d44 <udp_set_ip>
 80082f6:	852c      	strh	r4, [r5, #40]	; 0x28
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	200092c8 	andcs	r9, r0, r8, asr #5
 8008300:	200092a8 	andcs	r9, r0, r8, lsr #5
 8008304:	2000ef68 	andcs	lr, r0, r8, ror #30
 8008308:	200092a4 	andcs	r9, r0, r4, lsr #5
 800830c:	00450008 	subeq	r0, r5, r8
 8008310:	11400040 	cmpne	r0, r0, asr #32

08008314 <udp_shutdown>:
 8008314:	4770      	bx	lr
	...

08008318 <arp_init>:
 8008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800831c:	460d      	mov	r5, r1
 800831e:	4604      	mov	r4, r0
 8008320:	f000 f876 	bl	8008410 <arp_cache_init>
 8008324:	2206      	movs	r2, #6
 8008326:	482f      	ldr	r0, [pc, #188]	; (80083e4 <arp_init+0xcc>)
 8008328:	682f      	ldr	r7, [r5, #0]
 800832a:	4621      	mov	r1, r4
 800832c:	f00a ff72 	bl	8013214 <memcpy.isra.0>
 8008330:	4b2d      	ldr	r3, [pc, #180]	; (80083e8 <arp_init+0xd0>)
 8008332:	2507      	movs	r5, #7
 8008334:	461e      	mov	r6, r3
 8008336:	22ff      	movs	r2, #255	; 0xff
 8008338:	3d01      	subs	r5, #1
 800833a:	d146      	bne.n	80083ca <arp_init+0xb2>
 800833c:	4b2b      	ldr	r3, [pc, #172]	; (80083ec <arp_init+0xd4>)
 800833e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800840c <arp_init+0xf4>
 8008342:	482b      	ldr	r0, [pc, #172]	; (80083f0 <arp_init+0xd8>)
 8008344:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8008348:	2206      	movs	r2, #6
 800834a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800834e:	4621      	mov	r1, r4
 8008350:	82b3      	strh	r3, [r6, #20]
 8008352:	f00a ff5f 	bl	8013214 <memcpy.isra.0>
 8008356:	4a27      	ldr	r2, [pc, #156]	; (80083f4 <arp_init+0xdc>)
 8008358:	61f7      	str	r7, [r6, #28]
 800835a:	2307      	movs	r3, #7
 800835c:	3b01      	subs	r3, #1
 800835e:	d137      	bne.n	80083d0 <arp_init+0xb8>
 8008360:	2206      	movs	r2, #6
 8008362:	4621      	mov	r1, r4
 8008364:	4824      	ldr	r0, [pc, #144]	; (80083f8 <arp_init+0xe0>)
 8008366:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800836a:	f00a ff53 	bl	8013214 <memcpy.isra.0>
 800836e:	4a23      	ldr	r2, [pc, #140]	; (80083fc <arp_init+0xe4>)
 8008370:	2306      	movs	r3, #6
 8008372:	4615      	mov	r5, r2
 8008374:	21ff      	movs	r1, #255	; 0xff
 8008376:	3b01      	subs	r3, #1
 8008378:	d22d      	bcs.n	80083d6 <arp_init+0xbe>
 800837a:	4b1c      	ldr	r3, [pc, #112]	; (80083ec <arp_init+0xd4>)
 800837c:	4820      	ldr	r0, [pc, #128]	; (8008400 <arp_init+0xe8>)
 800837e:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8008382:	2206      	movs	r2, #6
 8008384:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008388:	4621      	mov	r1, r4
 800838a:	82ab      	strh	r3, [r5, #20]
 800838c:	f00a ff42 	bl	8013214 <memcpy.isra.0>
 8008390:	4a1c      	ldr	r2, [pc, #112]	; (8008404 <arp_init+0xec>)
 8008392:	61ef      	str	r7, [r5, #28]
 8008394:	2307      	movs	r3, #7
 8008396:	2100      	movs	r1, #0
 8008398:	3b01      	subs	r3, #1
 800839a:	d11f      	bne.n	80083dc <arp_init+0xc4>
 800839c:	4d1a      	ldr	r5, [pc, #104]	; (8008408 <arp_init+0xf0>)
 800839e:	2206      	movs	r2, #6
 80083a0:	18a8      	adds	r0, r5, r2
 80083a2:	4621      	mov	r1, r4
 80083a4:	f00a ff36 	bl	8013214 <memcpy.isra.0>
 80083a8:	4b10      	ldr	r3, [pc, #64]	; (80083ec <arp_init+0xd4>)
 80083aa:	4621      	mov	r1, r4
 80083ac:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80083b0:	f105 0016 	add.w	r0, r5, #22
 80083b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80083b8:	2206      	movs	r2, #6
 80083ba:	82ab      	strh	r3, [r5, #20]
 80083bc:	f00a ff2a 	bl	8013214 <memcpy.isra.0>
 80083c0:	61ef      	str	r7, [r5, #28]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f00a bf2f 	b.w	8013228 <arp_announce>
 80083ca:	f803 2b01 	strb.w	r2, [r3], #1
 80083ce:	e7b3      	b.n	8008338 <arp_init+0x20>
 80083d0:	f802 5b01 	strb.w	r5, [r2], #1
 80083d4:	e7c2      	b.n	800835c <arp_init+0x44>
 80083d6:	f802 1b01 	strb.w	r1, [r2], #1
 80083da:	e7cc      	b.n	8008376 <arp_init+0x5e>
 80083dc:	f802 1b01 	strb.w	r1, [r2], #1
 80083e0:	e7da      	b.n	8008398 <arp_init+0x80>
 80083e2:	bf00      	nop
 80083e4:	2000f99e 	mulcs	r0, lr, r9
 80083e8:	2000f998 	mulcs	r0, r8, r9
 80083ec:	01000608 	tsteq	r0, r8, lsl #12
 80083f0:	2000f9ae 	andcs	pc, r0, lr, lsr #19
 80083f4:	2000f9b8 			; <UNDEFINED> instruction: 0x2000f9b8
 80083f8:	2000f9f6 	strdcs	pc, [r0], -r6
 80083fc:	2000f9f0 	strdcs	pc, [r0], -r0
 8008400:	2000fa06 	andcs	pc, r0, r6, lsl #20
 8008404:	2000fa10 	andcs	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
 8008408:	2000f9c4 	andcs	pc, r0, r4, asr #19
 800840c:	04060008 	streq	r0, [r6], #-8

08008410 <arp_cache_init>:
 8008410:	4a0a      	ldr	r2, [pc, #40]	; (800843c <arp_cache_init+0x2c>)
 8008412:	2300      	movs	r3, #0
 8008414:	b510      	push	{r4, lr}
 8008416:	f822 3b08 	strh.w	r3, [r2], #8
 800841a:	4618      	mov	r0, r3
 800841c:	4611      	mov	r1, r2
 800841e:	f842 0c04 	str.w	r0, [r2, #-4]
 8008422:	1d94      	adds	r4, r2, #6
 8008424:	42a1      	cmp	r1, r4
 8008426:	d105      	bne.n	8008434 <arp_cache_init+0x24>
 8008428:	3303      	adds	r3, #3
 800842a:	2b60      	cmp	r3, #96	; 0x60
 800842c:	f102 020c 	add.w	r2, r2, #12
 8008430:	d1f4      	bne.n	800841c <arp_cache_init+0xc>
 8008432:	bd10      	pop	{r4, pc}
 8008434:	f801 0b01 	strb.w	r0, [r1], #1
 8008438:	e7f4      	b.n	8008424 <arp_cache_init+0x14>
 800843a:	bf00      	nop
 800843c:	100011a4 	andne	r1, r0, r4, lsr #3

08008440 <igmp_init>:
 8008440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008444:	2200      	movs	r2, #0
 8008446:	4b26      	ldr	r3, [pc, #152]	; (80084e0 <igmp_init+0xa0>)
 8008448:	4605      	mov	r5, r0
 800844a:	4608      	mov	r0, r1
 800844c:	4611      	mov	r1, r2
 800844e:	f103 0408 	add.w	r4, r3, #8
 8008452:	42a3      	cmp	r3, r4
 8008454:	d140      	bne.n	80084d8 <igmp_init+0x98>
 8008456:	3201      	adds	r2, #1
 8008458:	2a46      	cmp	r2, #70	; 0x46
 800845a:	d1f8      	bne.n	800844e <igmp_init+0xe>
 800845c:	4c21      	ldr	r4, [pc, #132]	; (80084e4 <igmp_init+0xa4>)
 800845e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80084f0 <igmp_init+0xb0>
 8008462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80084f4 <igmp_init+0xb4>
 8008466:	2600      	movs	r6, #0
 8008468:	f8c4 629c 	str.w	r6, [r4, #668]	; 0x29c
 800846c:	8726      	strh	r6, [r4, #56]	; 0x38
 800846e:	f00b f9cd 	bl	801380c <igmp_set_ip>
 8008472:	2301      	movs	r3, #1
 8008474:	8023      	strh	r3, [r4, #0]
 8008476:	235e      	movs	r3, #94	; 0x5e
 8008478:	70a3      	strb	r3, [r4, #2]
 800847a:	2206      	movs	r2, #6
 800847c:	4629      	mov	r1, r5
 800847e:	f104 000e 	add.w	r0, r4, #14
 8008482:	f00b f97b 	bl	801377c <memcpy.isra.0>
 8008486:	f240 4394 	movw	r3, #1172	; 0x494
 800848a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848c:	2316      	movs	r3, #22
 800848e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008490:	4b15      	ldr	r3, [pc, #84]	; (80084e8 <igmp_init+0xa8>)
 8008492:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008498:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800849c:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80084a0:	2206      	movs	r2, #6
 80084a2:	f8c4 901c 	str.w	r9, [r4, #28]
 80084a6:	f8c4 8014 	str.w	r8, [r4, #20]
 80084aa:	4629      	mov	r1, r5
 80084ac:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80084b0:	8327      	strh	r7, [r4, #24]
 80084b2:	85a6      	strh	r6, [r4, #44]	; 0x2c
 80084b4:	f00b f962 	bl	801377c <memcpy.isra.0>
 80084b8:	23e0      	movs	r3, #224	; 0xe0
 80084ba:	4a0c      	ldr	r2, [pc, #48]	; (80084ec <igmp_init+0xac>)
 80084bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80084c0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80084c4:	e9c4 2317 	strd	r2, r3, [r4, #92]	; 0x5c
 80084c8:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
 80084cc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
 80084d0:	f8a4 704c 	strh.w	r7, [r4, #76]	; 0x4c
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80084d8:	f803 1b01 	strb.w	r1, [r3], #1
 80084dc:	e7b9      	b.n	8008452 <igmp_init+0x12>
 80084de:	bf00      	nop
 80084e0:	10001394 	mulne	r0, r4, r3
 80084e4:	10001328 	andne	r1, r0, r8, lsr #6
 80084e8:	005e0001 	subseq	r0, lr, r1
 80084ec:	04940200 	ldreq	r0, [r4], #512	; 0x200
 80084f0:	02010040 	andeq	r0, r1, #64	; 0x40
 80084f4:	00460008 	subeq	r0, r6, r8

080084f8 <igmp_shutdown>:
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	2500      	movs	r5, #0
 80084fc:	4c07      	ldr	r4, [pc, #28]	; (800851c <igmp_shutdown+0x24>)
 80084fe:	462e      	mov	r6, r5
 8008500:	6820      	ldr	r0, [r4, #0]
 8008502:	b120      	cbz	r0, 800850e <igmp_shutdown+0x16>
 8008504:	f00b f9de 	bl	80138c4 <igmp_leave>
 8008508:	6026      	str	r6, [r4, #0]
 800850a:	7166      	strb	r6, [r4, #5]
 800850c:	7126      	strb	r6, [r4, #4]
 800850e:	3501      	adds	r5, #1
 8008510:	2d46      	cmp	r5, #70	; 0x46
 8008512:	f104 0408 	add.w	r4, r4, #8
 8008516:	d1f3      	bne.n	8008500 <igmp_shutdown+0x8>
 8008518:	bd70      	pop	{r4, r5, r6, pc}
 800851a:	bf00      	nop
 800851c:	10001394 	mulne	r0, r4, r3

08008520 <ip_init>:
 8008520:	b538      	push	{r3, r4, r5, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	460d      	mov	r5, r1
 8008526:	f7ff fec9 	bl	80082bc <udp_init>
 800852a:	4629      	mov	r1, r5
 800852c:	4620      	mov	r0, r4
 800852e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008532:	f7ff bf85 	b.w	8008440 <igmp_init>

08008536 <ip_shutdown>:
 8008536:	b508      	push	{r3, lr}
 8008538:	f7ff ffde 	bl	80084f8 <igmp_shutdown>
 800853c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008540:	f7ff bee8 	b.w	8008314 <udp_shutdown>

08008544 <console_init>:
 8008544:	b508      	push	{r3, lr}
 8008546:	f00d fd99 	bl	801607c <uart0_init>
 800854a:	4804      	ldr	r0, [pc, #16]	; (800855c <console_init+0x18>)
 800854c:	f00d fdc0 	bl	80160d0 <uart0_puts>
 8008550:	4803      	ldr	r0, [pc, #12]	; (8008560 <console_init+0x1c>)
 8008552:	f00d fdbd 	bl	80160d0 <uart0_puts>
 8008556:	2000      	movs	r0, #0
 8008558:	bd08      	pop	{r3, pc}
 800855a:	bf00      	nop
 800855c:	080185d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, pc}
 8008560:	0801bb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, ip, sp, pc}

08008564 <net_handle>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4c0c      	ldr	r4, [pc, #48]	; (8008598 <net_handle+0x34>)
 8008568:	4620      	mov	r0, r4
 800856a:	f00f f80d 	bl	8017588 <emac_eth_recv>
 800856e:	2800      	cmp	r0, #0
 8008570:	dd07      	ble.n	8008582 <net_handle+0x1e>
 8008572:	6820      	ldr	r0, [r4, #0]
 8008574:	8983      	ldrh	r3, [r0, #12]
 8008576:	2b08      	cmp	r3, #8
 8008578:	d107      	bne.n	800858a <net_handle+0x26>
 800857a:	f000 faab 	bl	8008ad4 <ip_handle>
 800857e:	f00f f817 	bl	80175b0 <emac_free_pkt>
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008586:	f009 b9b1 	b.w	80118ec <net_timers_run>
 800858a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800858e:	d1f6      	bne.n	800857e <net_handle+0x1a>
 8008590:	f000 fa44 	bl	8008a1c <arp_handle>
 8008594:	e7f3      	b.n	800857e <net_handle+0x1a>
 8008596:	bf00      	nop
 8008598:	20009280 	andcs	r9, r0, r0, lsl #5

0800859c <tcp_handle>:
 800859c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085a0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80085a2:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80085a6:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80085aa:	4cbd      	ldr	r4, [pc, #756]	; (80088a0 <tcp_handle+0x304>)
 80085ac:	ba5b      	rev16	r3, r3
 80085ae:	8443      	strh	r3, [r0, #34]	; 0x22
 80085b0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80085b2:	4605      	mov	r5, r0
 80085b4:	ba5b      	rev16	r3, r3
 80085b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80085b8:	f009 fa0c 	bl	80119d4 <_bswap32>
 80085bc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80085be:	f8b4 25f0 	ldrh.w	r2, [r4, #1520]	; 0x5f0
 80085c2:	ba5b      	rev16	r3, r3
 80085c4:	862b      	strh	r3, [r5, #48]	; 0x30
 80085c6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80085c8:	ba5b      	rev16	r3, r3
 80085ca:	86ab      	strh	r3, [r5, #52]	; 0x34
 80085cc:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d152      	bne.n	8008678 <tcp_handle+0xdc>
 80085d2:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80085d6:	2b01      	cmp	r3, #1
 80085d8:	d00f      	beq.n	80085fa <tcp_handle+0x5e>
 80085da:	2204      	movs	r2, #4
 80085dc:	f105 011a 	add.w	r1, r5, #26
 80085e0:	4668      	mov	r0, sp
 80085e2:	f009 f9ed 	bl	80119c0 <memcpy.isra.0>
 80085e6:	f8b4 25f2 	ldrh.w	r2, [r4, #1522]	; 0x5f2
 80085ea:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d143      	bne.n	8008678 <tcp_handle+0xdc>
 80085f0:	f8d4 25f4 	ldr.w	r2, [r4, #1524]	; 0x5f4
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d13e      	bne.n	8008678 <tcp_handle+0xdc>
 80085fa:	2204      	movs	r2, #4
 80085fc:	eb0d 0002 	add.w	r0, sp, r2
 8008600:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8008604:	f009 f9dc 	bl	80119c0 <memcpy.isra.0>
 8008608:	2204      	movs	r2, #4
 800860a:	eb0d 0002 	add.w	r0, sp, r2
 800860e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8008612:	9e01      	ldr	r6, [sp, #4]
 8008614:	f009 f9d4 	bl	80119c0 <memcpy.isra.0>
 8008618:	f894 2630 	ldrb.w	r2, [r4, #1584]	; 0x630
 800861c:	9f01      	ldr	r7, [sp, #4]
 800861e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8008622:	2a01      	cmp	r2, #1
 8008624:	d01e      	beq.n	8008664 <tcp_handle+0xc8>
 8008626:	1ed3      	subs	r3, r2, #3
 8008628:	2b07      	cmp	r3, #7
 800862a:	d825      	bhi.n	8008678 <tcp_handle+0xdc>
 800862c:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8008630:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8008634:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8008638:	fa98 f898 	rev16.w	r8, r8
 800863c:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 8008640:	f8b4 1628 	ldrh.w	r1, [r4, #1576]	; 0x628
 8008644:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8008648:	fa13 f888 	uxtah	r8, r3, r8
 800864c:	fa1f f888 	uxth.w	r8, r8
 8008650:	2900      	cmp	r1, #0
 8008652:	d14d      	bne.n	80086f0 <tcp_handle+0x154>
 8008654:	f1b8 0f00 	cmp.w	r8, #0
 8008658:	d178      	bne.n	800874c <tcp_handle+0x1b0>
 800865a:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800865e:	42bb      	cmp	r3, r7
 8008660:	d174      	bne.n	800874c <tcp_handle+0x1b0>
 8008662:	e053      	b.n	800870c <tcp_handle+0x170>
 8008664:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008668:	075a      	lsls	r2, r3, #29
 800866a:	d405      	bmi.n	8008678 <tcp_handle+0xdc>
 800866c:	06d8      	lsls	r0, r3, #27
 800866e:	d506      	bpl.n	800867e <tcp_handle+0xe2>
 8008670:	498c      	ldr	r1, [pc, #560]	; (80088a4 <tcp_handle+0x308>)
 8008672:	4628      	mov	r0, r5
 8008674:	f009 fa78 	bl	8011b68 <_send_reset>
 8008678:	b004      	add	sp, #16
 800867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800867e:	0799      	lsls	r1, r3, #30
 8008680:	d5fa      	bpl.n	8008678 <tcp_handle+0xdc>
 8008682:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8008686:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800868a:	f105 011a 	add.w	r1, r5, #26
 800868e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008692:	4668      	mov	r0, sp
 8008694:	2204      	movs	r2, #4
 8008696:	f8a4 35f2 	strh.w	r3, [r4, #1522]	; 0x5f2
 800869a:	f009 f991 	bl	80119c0 <memcpy.isra.0>
 800869e:	2206      	movs	r2, #6
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4881      	ldr	r0, [pc, #516]	; (80088a8 <tcp_handle+0x30c>)
 80086a4:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80086a8:	18a9      	adds	r1, r5, r2
 80086aa:	f009 f989 	bl	80119c0 <memcpy.isra.0>
 80086ae:	f8d4 2618 	ldr.w	r2, [r4, #1560]	; 0x618
 80086b2:	487c      	ldr	r0, [pc, #496]	; (80088a4 <tcp_handle+0x308>)
 80086b4:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 80086b8:	1c7b      	adds	r3, r7, #1
 80086ba:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086be:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 80086c2:	a901      	add	r1, sp, #4
 80086c4:	2312      	movs	r3, #18
 80086c6:	f88d 300c 	strb.w	r3, [sp, #12]
 80086ca:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80086ce:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80086d2:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80086d6:	f009 f9a3 	bl	8011a20 <_tcp_send_package>
 80086da:	f8d4 3618 	ldr.w	r3, [r4, #1560]	; 0x618
 80086de:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80086e2:	1c5a      	adds	r2, r3, #1
 80086e4:	f8c4 2604 	str.w	r2, [r4, #1540]	; 0x604
 80086e8:	2303      	movs	r3, #3
 80086ea:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80086ee:	e7c3      	b.n	8008678 <tcp_handle+0xdc>
 80086f0:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80086f4:	eba3 0c07 	sub.w	ip, r3, r7
 80086f8:	f1b8 0f00 	cmp.w	r8, #0
 80086fc:	d10e      	bne.n	800871c <tcp_handle+0x180>
 80086fe:	f1bc 0f00 	cmp.w	ip, #0
 8008702:	dc23      	bgt.n	800874c <tcp_handle+0x1b0>
 8008704:	1afb      	subs	r3, r7, r3
 8008706:	1a5b      	subs	r3, r3, r1
 8008708:	2b00      	cmp	r3, #0
 800870a:	da1f      	bge.n	800874c <tcp_handle+0x1b0>
 800870c:	0743      	lsls	r3, r0, #29
 800870e:	d534      	bpl.n	800877a <tcp_handle+0x1de>
 8008710:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008714:	4863      	ldr	r0, [pc, #396]	; (80088a4 <tcp_handle+0x308>)
 8008716:	f009 f939 	bl	801198c <_init_tcb>
 800871a:	e7ad      	b.n	8008678 <tcp_handle+0xdc>
 800871c:	f1bc 0f00 	cmp.w	ip, #0
 8008720:	dc06      	bgt.n	8008730 <tcp_handle+0x194>
 8008722:	eba7 0c03 	sub.w	ip, r7, r3
 8008726:	ebac 0c01 	sub.w	ip, ip, r1
 800872a:	f1bc 0f00 	cmp.w	ip, #0
 800872e:	dbed      	blt.n	800870c <tcp_handle+0x170>
 8008730:	eb08 0c07 	add.w	ip, r8, r7
 8008734:	f103 0e01 	add.w	lr, r3, #1
 8008738:	ebae 0e0c 	sub.w	lr, lr, ip
 800873c:	f1be 0f00 	cmp.w	lr, #0
 8008740:	dc04      	bgt.n	800874c <tcp_handle+0x1b0>
 8008742:	43db      	mvns	r3, r3
 8008744:	1a5b      	subs	r3, r3, r1
 8008746:	eb13 0f0c 	cmn.w	r3, ip
 800874a:	d4df      	bmi.n	800870c <tcp_handle+0x170>
 800874c:	0742      	lsls	r2, r0, #29
 800874e:	d506      	bpl.n	800875e <tcp_handle+0x1c2>
 8008750:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008754:	4853      	ldr	r0, [pc, #332]	; (80088a4 <tcp_handle+0x308>)
 8008756:	f009 f919 	bl	801198c <_init_tcb>
 800875a:	2301      	movs	r3, #1
 800875c:	e7c5      	b.n	80086ea <tcp_handle+0x14e>
 800875e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008762:	9301      	str	r3, [sp, #4]
 8008764:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 8008768:	9302      	str	r3, [sp, #8]
 800876a:	484e      	ldr	r0, [pc, #312]	; (80088a4 <tcp_handle+0x308>)
 800876c:	2310      	movs	r3, #16
 800876e:	a901      	add	r1, sp, #4
 8008770:	f88d 300c 	strb.w	r3, [sp, #12]
 8008774:	f009 f954 	bl	8011a20 <_tcp_send_package>
 8008778:	e77e      	b.n	8008678 <tcp_handle+0xdc>
 800877a:	0781      	lsls	r1, r0, #30
 800877c:	d505      	bpl.n	800878a <tcp_handle+0x1ee>
 800877e:	2a03      	cmp	r2, #3
 8008780:	d0eb      	beq.n	800875a <tcp_handle+0x1be>
 8008782:	4948      	ldr	r1, [pc, #288]	; (80088a4 <tcp_handle+0x308>)
 8008784:	4628      	mov	r0, r5
 8008786:	f009 f9ef 	bl	8011b68 <_send_reset>
 800878a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800878e:	06da      	lsls	r2, r3, #27
 8008790:	f57f af72 	bpl.w	8008678 <tcp_handle+0xdc>
 8008794:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008798:	3b03      	subs	r3, #3
 800879a:	2b07      	cmp	r3, #7
 800879c:	d81d      	bhi.n	80087da <tcp_handle+0x23e>
 800879e:	e8df f003 	tbb	[pc, r3]
 80087a2:	87878704 	strhi	r8, [r7, r4, lsl #14]
 80087a6:	c5ba8787 	ldrgt	r8, [sl, #1927]!	; 0x787
 80087aa:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80087ae:	1b9b      	subs	r3, r3, r6
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	dc0e      	bgt.n	80087d2 <tcp_handle+0x236>
 80087b4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80087b8:	1af3      	subs	r3, r6, r3
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	dc09      	bgt.n	80087d2 <tcp_handle+0x236>
 80087be:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80087c2:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80087c6:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80087ca:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80087ce:	2304      	movs	r3, #4
 80087d0:	e78b      	b.n	80086ea <tcp_handle+0x14e>
 80087d2:	4934      	ldr	r1, [pc, #208]	; (80088a4 <tcp_handle+0x308>)
 80087d4:	4628      	mov	r0, r5
 80087d6:	f009 f9c7 	bl	8011b68 <_send_reset>
 80087da:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80087de:	3b04      	subs	r3, #4
 80087e0:	2b02      	cmp	r3, #2
 80087e2:	d837      	bhi.n	8008854 <tcp_handle+0x2b8>
 80087e4:	f1b8 0f00 	cmp.w	r8, #0
 80087e8:	d034      	beq.n	8008854 <tcp_handle+0x2b8>
 80087ea:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80087ee:	42bb      	cmp	r3, r7
 80087f0:	f040 80ad 	bne.w	800894e <tcp_handle+0x3b2>
 80087f4:	f8b4 7634 	ldrh.w	r7, [r4, #1588]	; 0x634
 80087f8:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80088ac <tcp_handle+0x310>
 80087fc:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8008800:	435f      	muls	r7, r3
 8008802:	1d38      	adds	r0, r7, #4
 8008804:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8008808:	4642      	mov	r2, r8
 800880a:	4449      	add	r1, r9
 800880c:	4450      	add	r0, sl
 800880e:	f009 f8d7 	bl	80119c0 <memcpy.isra.0>
 8008812:	f8b4 2628 	ldrh.w	r2, [r4, #1576]	; 0x628
 8008816:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800881a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800881e:	f8a4 2628 	strh.w	r2, [r4, #1576]	; 0x628
 8008822:	4427      	add	r7, r4
 8008824:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008828:	f8a7 8bec 	strh.w	r8, [r7, #3052]	; 0xbec
 800882c:	4443      	add	r3, r8
 800882e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008832:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 8008836:	a901      	add	r1, sp, #4
 8008838:	2310      	movs	r3, #16
 800883a:	f1aa 0044 	sub.w	r0, sl, #68	; 0x44
 800883e:	f88d 300c 	strb.w	r3, [sp, #12]
 8008842:	f009 f8ed 	bl	8011a20 <_tcp_send_package>
 8008846:	f8b4 3634 	ldrh.w	r3, [r4, #1588]	; 0x634
 800884a:	3301      	adds	r3, #1
 800884c:	f003 0301 	and.w	r3, r3, #1
 8008850:	f8a4 3634 	strh.w	r3, [r4, #1588]	; 0x634
 8008854:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008858:	2b02      	cmp	r3, #2
 800885a:	f67f af0d 	bls.w	8008678 <tcp_handle+0xdc>
 800885e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008862:	07db      	lsls	r3, r3, #31
 8008864:	f57f af08 	bpl.w	8008678 <tcp_handle+0xdc>
 8008868:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800886c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008870:	480c      	ldr	r0, [pc, #48]	; (80088a4 <tcp_handle+0x308>)
 8008872:	3301      	adds	r3, #1
 8008874:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008878:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 800887c:	a901      	add	r1, sp, #4
 800887e:	2310      	movs	r3, #16
 8008880:	f88d 300c 	strb.w	r3, [sp, #12]
 8008884:	f009 f8cc 	bl	8011a20 <_tcp_send_package>
 8008888:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 800888c:	2b05      	cmp	r3, #5
 800888e:	d067      	beq.n	8008960 <tcp_handle+0x3c4>
 8008890:	d861      	bhi.n	8008956 <tcp_handle+0x3ba>
 8008892:	3b03      	subs	r3, #3
 8008894:	2b01      	cmp	r3, #1
 8008896:	f63f aeef 	bhi.w	8008678 <tcp_handle+0xdc>
 800889a:	2307      	movs	r3, #7
 800889c:	e725      	b.n	80086ea <tcp_handle+0x14e>
 800889e:	bf00      	nop
 80088a0:	10000000 	andne	r0, r0, r0
 80088a4:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 80088a8:	100005f8 	strdne	r0, [r0], -r8
 80088ac:	10000634 	andne	r0, r0, r4, lsr r6
 80088b0:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80088b4:	1b99      	subs	r1, r3, r6
 80088b6:	d51a      	bpl.n	80088ee <tcp_handle+0x352>
 80088b8:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80088bc:	1ab2      	subs	r2, r6, r2
 80088be:	2a00      	cmp	r2, #0
 80088c0:	dc15      	bgt.n	80088ee <tcp_handle+0x352>
 80088c2:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80088c6:	f8d4 3610 	ldr.w	r3, [r4, #1552]	; 0x610
 80088ca:	1bda      	subs	r2, r3, r7
 80088cc:	2a00      	cmp	r2, #0
 80088ce:	db07      	blt.n	80088e0 <tcp_handle+0x344>
 80088d0:	42bb      	cmp	r3, r7
 80088d2:	d182      	bne.n	80087da <tcp_handle+0x23e>
 80088d4:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 80088d8:	1b9b      	subs	r3, r3, r6
 80088da:	2b00      	cmp	r3, #0
 80088dc:	f73f af7d 	bgt.w	80087da <tcp_handle+0x23e>
 80088e0:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80088e4:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80088e8:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80088ec:	e775      	b.n	80087da <tcp_handle+0x23e>
 80088ee:	1af3      	subs	r3, r6, r3
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	dc09      	bgt.n	8008908 <tcp_handle+0x36c>
 80088f4:	2900      	cmp	r1, #0
 80088f6:	f73f af70 	bgt.w	80087da <tcp_handle+0x23e>
 80088fa:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80088fe:	1af3      	subs	r3, r6, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f73f af6a 	bgt.w	80087da <tcp_handle+0x23e>
 8008906:	e7de      	b.n	80088c6 <tcp_handle+0x32a>
 8008908:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800890c:	1b9a      	subs	r2, r3, r6
 800890e:	2a00      	cmp	r2, #0
 8008910:	f6bf af63 	bge.w	80087da <tcp_handle+0x23e>
 8008914:	e725      	b.n	8008762 <tcp_handle+0x1c6>
 8008916:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800891a:	42b3      	cmp	r3, r6
 800891c:	f47f af5d 	bne.w	80087da <tcp_handle+0x23e>
 8008920:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008924:	4811      	ldr	r0, [pc, #68]	; (800896c <tcp_handle+0x3d0>)
 8008926:	f009 f831 	bl	801198c <_init_tcb>
 800892a:	e756      	b.n	80087da <tcp_handle+0x23e>
 800892c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008930:	42b3      	cmp	r3, r6
 8008932:	f47f af52 	bne.w	80087da <tcp_handle+0x23e>
 8008936:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800893a:	9302      	str	r3, [sp, #8]
 800893c:	480b      	ldr	r0, [pc, #44]	; (800896c <tcp_handle+0x3d0>)
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	2310      	movs	r3, #16
 8008942:	a901      	add	r1, sp, #4
 8008944:	f88d 300c 	strb.w	r3, [sp, #12]
 8008948:	f009 f86a 	bl	8011a20 <_tcp_send_package>
 800894c:	e745      	b.n	80087da <tcp_handle+0x23e>
 800894e:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008952:	9201      	str	r2, [sp, #4]
 8008954:	e708      	b.n	8008768 <tcp_handle+0x1cc>
 8008956:	2b06      	cmp	r3, #6
 8008958:	f47f ae8e 	bne.w	8008678 <tcp_handle+0xdc>
 800895c:	230a      	movs	r3, #10
 800895e:	e6c4      	b.n	80086ea <tcp_handle+0x14e>
 8008960:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008964:	42b3      	cmp	r3, r6
 8008966:	d0f9      	beq.n	800895c <tcp_handle+0x3c0>
 8008968:	2308      	movs	r3, #8
 800896a:	e6be      	b.n	80086ea <tcp_handle+0x14e>
 800896c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08008970 <udp_handle>:
 8008970:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008974:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8008976:	ba5b      	rev16	r3, r3
 8008978:	b29b      	uxth	r3, r3
 800897a:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800897e:	2a01      	cmp	r2, #1
 8008980:	4607      	mov	r7, r0
 8008982:	d904      	bls.n	800898e <udp_handle+0x1e>
 8008984:	2b7b      	cmp	r3, #123	; 0x7b
 8008986:	d002      	beq.n	800898e <udp_handle+0x1e>
 8008988:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800898c:	d308      	bcc.n	80089a0 <udp_handle+0x30>
 800898e:	4a21      	ldr	r2, [pc, #132]	; (8008a14 <udp_handle+0xa4>)
 8008990:	2400      	movs	r4, #0
 8008992:	f852 1b04 	ldr.w	r1, [r2], #4
 8008996:	4299      	cmp	r1, r3
 8008998:	d005      	beq.n	80089a6 <udp_handle+0x36>
 800899a:	3401      	adds	r4, #1
 800899c:	2c08      	cmp	r4, #8
 800899e:	d1f8      	bne.n	8008992 <udp_handle+0x22>
 80089a0:	b002      	add	sp, #8
 80089a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a6:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80089a8:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8008a18 <udp_handle+0xa8>
 80089ac:	f640 3394 	movw	r3, #2964	; 0xb94
 80089b0:	435c      	muls	r4, r3
 80089b2:	ba76      	rev16	r6, r6
 80089b4:	f838 5004 	ldrh.w	r5, [r8, r4]
 80089b8:	3e08      	subs	r6, #8
 80089ba:	b2b6      	uxth	r6, r6
 80089bc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80089c0:	435d      	muls	r5, r3
 80089c2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80089c6:	f104 0004 	add.w	r0, r4, #4
 80089ca:	bf28      	it	cs
 80089cc:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 80089d0:	4428      	add	r0, r5
 80089d2:	4632      	mov	r2, r6
 80089d4:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 80089d8:	4440      	add	r0, r8
 80089da:	f009 f98b 	bl	8011cf4 <memcpy.isra.0>
 80089de:	2204      	movs	r2, #4
 80089e0:	eb0d 0002 	add.w	r0, sp, r2
 80089e4:	f107 011a 	add.w	r1, r7, #26
 80089e8:	f009 f984 	bl	8011cf4 <memcpy.isra.0>
 80089ec:	192b      	adds	r3, r5, r4
 80089ee:	4443      	add	r3, r8
 80089f0:	9a01      	ldr	r2, [sp, #4]
 80089f2:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80089f6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80089f8:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80089fc:	ba52      	rev16	r2, r2
 80089fe:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8008a02:	f838 3004 	ldrh.w	r3, [r8, r4]
 8008a06:	3301      	adds	r3, #1
 8008a08:	f003 0301 	and.w	r3, r3, #1
 8008a0c:	f828 3004 	strh.w	r3, [r8, r4]
 8008a10:	e7c6      	b.n	80089a0 <udp_handle+0x30>
 8008a12:	bf00      	nop
 8008a14:	200092a8 	andcs	r9, r0, r8, lsr #5
 8008a18:	200092c8 	andcs	r9, r0, r8, asr #5

08008a1c <arp_handle>:
 8008a1c:	8a83      	ldrh	r3, [r0, #20]
 8008a1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a22:	d003      	beq.n	8008a2c <arp_handle+0x10>
 8008a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a28:	d002      	beq.n	8008a30 <arp_handle+0x14>
 8008a2a:	4770      	bx	lr
 8008a2c:	f00a bc06 	b.w	801323c <arp_handle_request>
 8008a30:	f00a bc2c 	b.w	801328c <arp_handle_reply>

08008a34 <igmp_handle>:
 8008a34:	7b83      	ldrb	r3, [r0, #14]
 8008a36:	2b45      	cmp	r3, #69	; 0x45
 8008a38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a3c:	d117      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a3e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008a42:	2b11      	cmp	r3, #17
 8008a44:	d113      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a46:	4b21      	ldr	r3, [pc, #132]	; (8008acc <igmp_handle+0x98>)
 8008a48:	9300      	str	r3, [sp, #0]
 8008a4a:	f100 051d 	add.w	r5, r0, #29
 8008a4e:	466a      	mov	r2, sp
 8008a50:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8008a54:	462b      	mov	r3, r5
 8008a56:	42b3      	cmp	r3, r6
 8008a58:	d10c      	bne.n	8008a74 <igmp_handle+0x40>
 8008a5a:	2401      	movs	r4, #1
 8008a5c:	4b1c      	ldr	r3, [pc, #112]	; (8008ad0 <igmp_handle+0x9c>)
 8008a5e:	2100      	movs	r1, #0
 8008a60:	f8d3 729c 	ldr.w	r7, [r3, #668]	; 0x29c
 8008a64:	f04f 0c01 	mov.w	ip, #1
 8008a68:	336c      	adds	r3, #108	; 0x6c
 8008a6a:	428f      	cmp	r7, r1
 8008a6c:	d10a      	bne.n	8008a84 <igmp_handle+0x50>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a74:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008a78:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8008a7c:	428c      	cmp	r4, r1
 8008a7e:	d0ea      	beq.n	8008a56 <igmp_handle+0x22>
 8008a80:	2400      	movs	r4, #0
 8008a82:	e7eb      	b.n	8008a5c <igmp_handle+0x28>
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	9201      	str	r2, [sp, #4]
 8008a88:	b924      	cbnz	r4, 8008a94 <igmp_handle+0x60>
 8008a8a:	f10d 0e04 	add.w	lr, sp, #4
 8008a8e:	462a      	mov	r2, r5
 8008a90:	42b2      	cmp	r2, r6
 8008a92:	d10e      	bne.n	8008ab2 <igmp_handle+0x7e>
 8008a94:	f893 e005 	ldrb.w	lr, [r3, #5]
 8008a98:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 8008a9c:	f1be 0f01 	cmp.w	lr, #1
 8008aa0:	d110      	bne.n	8008ac4 <igmp_handle+0x90>
 8008aa2:	f893 e004 	ldrb.w	lr, [r3, #4]
 8008aa6:	4596      	cmp	lr, r2
 8008aa8:	d909      	bls.n	8008abe <igmp_handle+0x8a>
 8008aaa:	0852      	lsrs	r2, r2, #1
 8008aac:	3201      	adds	r2, #1
 8008aae:	711a      	strb	r2, [r3, #4]
 8008ab0:	e005      	b.n	8008abe <igmp_handle+0x8a>
 8008ab2:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8008ab6:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 8008aba:	45c1      	cmp	r9, r8
 8008abc:	d0e8      	beq.n	8008a90 <igmp_handle+0x5c>
 8008abe:	3101      	adds	r1, #1
 8008ac0:	3308      	adds	r3, #8
 8008ac2:	e7d2      	b.n	8008a6a <igmp_handle+0x36>
 8008ac4:	f883 c005 	strb.w	ip, [r3, #5]
 8008ac8:	e7ef      	b.n	8008aaa <igmp_handle+0x76>
 8008aca:	bf00      	nop
 8008acc:	010000e0 	smlatteq	r0, r0, r0, r0
 8008ad0:	10001328 	andne	r1, r0, r8, lsr #6

08008ad4 <ip_handle>:
 8008ad4:	7b82      	ldrb	r2, [r0, #14]
 8008ad6:	7dc3      	ldrb	r3, [r0, #23]
 8008ad8:	2a45      	cmp	r2, #69	; 0x45
 8008ada:	d003      	beq.n	8008ae4 <ip_handle+0x10>
 8008adc:	2b02      	cmp	r3, #2
 8008ade:	d111      	bne.n	8008b04 <ip_handle+0x30>
 8008ae0:	f7ff bfa8 	b.w	8008a34 <igmp_handle>
 8008ae4:	2b06      	cmp	r3, #6
 8008ae6:	d00b      	beq.n	8008b00 <ip_handle+0x2c>
 8008ae8:	d804      	bhi.n	8008af4 <ip_handle+0x20>
 8008aea:	2b01      	cmp	r3, #1
 8008aec:	d006      	beq.n	8008afc <ip_handle+0x28>
 8008aee:	2b02      	cmp	r3, #2
 8008af0:	d0f6      	beq.n	8008ae0 <ip_handle+0xc>
 8008af2:	4770      	bx	lr
 8008af4:	2b11      	cmp	r3, #17
 8008af6:	d105      	bne.n	8008b04 <ip_handle+0x30>
 8008af8:	f7ff bf3a 	b.w	8008970 <udp_handle>
 8008afc:	f000 b804 	b.w	8008b08 <icmp_handle>
 8008b00:	f7ff bd4c 	b.w	800859c <tcp_handle>
 8008b04:	4770      	bx	lr
	...

08008b08 <icmp_handle>:
 8008b08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b0a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008b0e:	2b08      	cmp	r3, #8
 8008b10:	4604      	mov	r4, r0
 8008b12:	d13e      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b14:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8008b18:	2d00      	cmp	r5, #0
 8008b1a:	d13a      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b1c:	1d86      	adds	r6, r0, #6
 8008b1e:	4631      	mov	r1, r6
 8008b20:	2206      	movs	r2, #6
 8008b22:	f00a ff43 	bl	80139ac <memcpy.isra.0>
 8008b26:	4630      	mov	r0, r6
 8008b28:	491b      	ldr	r1, [pc, #108]	; (8008b98 <icmp_handle+0x90>)
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	f00a ff3e 	bl	80139ac <memcpy.isra.0>
 8008b30:	8a63      	ldrh	r3, [r4, #18]
 8008b32:	f104 061a 	add.w	r6, r4, #26
 8008b36:	43db      	mvns	r3, r3
 8008b38:	4631      	mov	r1, r6
 8008b3a:	8263      	strh	r3, [r4, #18]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	f104 001e 	add.w	r0, r4, #30
 8008b42:	f00a ff33 	bl	80139ac <memcpy.isra.0>
 8008b46:	4b15      	ldr	r3, [pc, #84]	; (8008b9c <icmp_handle+0x94>)
 8008b48:	2204      	movs	r2, #4
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	9301      	str	r3, [sp, #4]
 8008b4e:	eb0d 0102 	add.w	r1, sp, r2
 8008b52:	4630      	mov	r0, r6
 8008b54:	f104 060e 	add.w	r6, r4, #14
 8008b58:	f00a ff28 	bl	80139ac <memcpy.isra.0>
 8008b5c:	2114      	movs	r1, #20
 8008b5e:	7625      	strb	r5, [r4, #24]
 8008b60:	7665      	strb	r5, [r4, #25]
 8008b62:	4630      	mov	r0, r6
 8008b64:	f00a fef7 	bl	8013956 <net_chksum>
 8008b68:	8a21      	ldrh	r1, [r4, #16]
 8008b6a:	8320      	strh	r0, [r4, #24]
 8008b6c:	ba49      	rev16	r1, r1
 8008b6e:	b289      	uxth	r1, r1
 8008b70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8008b74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8008b78:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8008b7c:	4630      	mov	r0, r6
 8008b7e:	f00a feea 	bl	8013956 <net_chksum>
 8008b82:	8a21      	ldrh	r1, [r4, #16]
 8008b84:	84a0      	strh	r0, [r4, #36]	; 0x24
 8008b86:	ba49      	rev16	r1, r1
 8008b88:	b289      	uxth	r1, r1
 8008b8a:	310e      	adds	r1, #14
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f00e fd13 	bl	80175b8 <emac_eth_send>
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop
 8008b98:	20009278 	andcs	r9, r0, r8, ror r2
 8008b9c:	2000926c 	andcs	r9, r0, ip, ror #4
 8008ba0:	0801c0c0 	stmdaeq	r1, {r6, r7, lr, pc}
 8008ba4:	20000000 	andcs	r0, r0, r0
 8008ba8:	200000f8 	strdcs	r0, [r0], -r8
 8008bac:	200000f8 	strdcs	r0, [r0], -r8
 8008bb0:	2002d320 	andcs	sp, r2, r0, lsr #6

08008bb4 <Reset_Handler>:
 8008bb4:	2100      	movs	r1, #0
 8008bb6:	e003      	b.n	8008bc0 <DataInit>

08008bb8 <CopyData>:
 8008bb8:	4b0a      	ldr	r3, [pc, #40]	; (8008be4 <Zerobss+0x10>)
 8008bba:	585b      	ldr	r3, [r3, r1]
 8008bbc:	5043      	str	r3, [r0, r1]
 8008bbe:	3104      	adds	r1, #4

08008bc0 <DataInit>:
 8008bc0:	4809      	ldr	r0, [pc, #36]	; (8008be8 <Zerobss+0x14>)
 8008bc2:	4b0a      	ldr	r3, [pc, #40]	; (8008bec <Zerobss+0x18>)
 8008bc4:	1842      	adds	r2, r0, r1
 8008bc6:	429a      	cmp	r2, r3
 8008bc8:	d3f6      	bcc.n	8008bb8 <CopyData>
 8008bca:	4a09      	ldr	r2, [pc, #36]	; (8008bf0 <Zerobss+0x1c>)
 8008bcc:	e002      	b.n	8008bd4 <Zerobss>

08008bce <FillZerobss>:
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f842 3b04 	str.w	r3, [r2], #4

08008bd4 <Zerobss>:
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <Zerobss+0x20>)
 8008bd6:	429a      	cmp	r2, r3
 8008bd8:	d3f9      	bcc.n	8008bce <FillZerobss>
 8008bda:	f00d faaf 	bl	801613c <SystemInit>
 8008bde:	f000 fc2d 	bl	800943c <main>
 8008be2:	4770      	bx	lr
 8008be4:	0801c0c0 	stmdaeq	r1, {r6, r7, lr, pc}
 8008be8:	20000000 	andcs	r0, r0, r0
 8008bec:	200000f8 	strdcs	r0, [r0], -r8
 8008bf0:	200000f8 	strdcs	r0, [r0], -r8
 8008bf4:	2002d320 	andcs	sp, r2, r0, lsr #6

08008bf8 <__aeabi_d2f>:
 8008bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8008c00:	bf24      	itt	cs
 8008c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8008c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8008c0a:	d90d      	bls.n	8008c28 <__aeabi_d2f+0x30>
 8008c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8008c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008c20:	bf08      	it	eq
 8008c22:	f020 0001 	biceq.w	r0, r0, #1
 8008c26:	4770      	bx	lr
 8008c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8008c2c:	d121      	bne.n	8008c72 <__aeabi_d2f+0x7a>
 8008c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8008c32:	bfbc      	itt	lt
 8008c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8008c38:	4770      	bxlt	lr
 8008c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008c42:	f1c2 0218 	rsb	r2, r2, #24
 8008c46:	f1c2 0c20 	rsb	ip, r2, #32
 8008c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8008c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8008c52:	bf18      	it	ne
 8008c54:	f040 0001 	orrne.w	r0, r0, #1
 8008c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008c64:	ea40 000c 	orr.w	r0, r0, ip
 8008c68:	fa23 f302 	lsr.w	r3, r3, r2
 8008c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008c70:	e7cc      	b.n	8008c0c <__aeabi_d2f+0x14>
 8008c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008c76:	d107      	bne.n	8008c88 <__aeabi_d2f+0x90>
 8008c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008c7c:	bf1e      	ittt	ne
 8008c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8008c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8008c86:	4770      	bxne	lr
 8008c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8008c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop

08008c98 <__aeabi_uldivmod>:
 8008c98:	b953      	cbnz	r3, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9a:	b94a      	cbnz	r2, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9c:	2900      	cmp	r1, #0
 8008c9e:	bf08      	it	eq
 8008ca0:	2800      	cmpeq	r0, #0
 8008ca2:	bf1c      	itt	ne
 8008ca4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008ca8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008cac:	f000 b80c 	b.w	8008cc8 <__aeabi_idiv0>
 8008cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8008cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008cb8:	f001 fc36 	bl	800a528 <__udivmoddi4>
 8008cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr

08008cc8 <__aeabi_idiv0>:
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop

08008ccc <__aeabi_drsub>:
 8008ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008cd0:	e002      	b.n	8008cd8 <__adddf3>
 8008cd2:	bf00      	nop

08008cd4 <__aeabi_dsub>:
 8008cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008cd8 <__adddf3>:
 8008cd8:	b530      	push	{r4, r5, lr}
 8008cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008ce2:	ea94 0f05 	teq	r4, r5
 8008ce6:	bf08      	it	eq
 8008ce8:	ea90 0f02 	teqeq	r0, r2
 8008cec:	bf1f      	itttt	ne
 8008cee:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008cfe:	f000 80e2 	beq.w	8008ec6 <__adddf3+0x1ee>
 8008d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008d0a:	bfb8      	it	lt
 8008d0c:	426d      	neglt	r5, r5
 8008d0e:	dd0c      	ble.n	8008d2a <__adddf3+0x52>
 8008d10:	442c      	add	r4, r5
 8008d12:	ea80 0202 	eor.w	r2, r0, r2
 8008d16:	ea81 0303 	eor.w	r3, r1, r3
 8008d1a:	ea82 0000 	eor.w	r0, r2, r0
 8008d1e:	ea83 0101 	eor.w	r1, r3, r1
 8008d22:	ea80 0202 	eor.w	r2, r0, r2
 8008d26:	ea81 0303 	eor.w	r3, r1, r3
 8008d2a:	2d36      	cmp	r5, #54	; 0x36
 8008d2c:	bf88      	it	hi
 8008d2e:	bd30      	pophi	{r4, r5, pc}
 8008d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008d40:	d002      	beq.n	8008d48 <__adddf3+0x70>
 8008d42:	4240      	negs	r0, r0
 8008d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008d54:	d002      	beq.n	8008d5c <__adddf3+0x84>
 8008d56:	4252      	negs	r2, r2
 8008d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5c:	ea94 0f05 	teq	r4, r5
 8008d60:	f000 80a7 	beq.w	8008eb2 <__adddf3+0x1da>
 8008d64:	f1a4 0401 	sub.w	r4, r4, #1
 8008d68:	f1d5 0e20 	rsbs	lr, r5, #32
 8008d6c:	db0d      	blt.n	8008d8a <__adddf3+0xb2>
 8008d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008d72:	fa22 f205 	lsr.w	r2, r2, r5
 8008d76:	1880      	adds	r0, r0, r2
 8008d78:	f141 0100 	adc.w	r1, r1, #0
 8008d7c:	fa03 f20e 	lsl.w	r2, r3, lr
 8008d80:	1880      	adds	r0, r0, r2
 8008d82:	fa43 f305 	asr.w	r3, r3, r5
 8008d86:	4159      	adcs	r1, r3
 8008d88:	e00e      	b.n	8008da8 <__adddf3+0xd0>
 8008d8a:	f1a5 0520 	sub.w	r5, r5, #32
 8008d8e:	f10e 0e20 	add.w	lr, lr, #32
 8008d92:	2a01      	cmp	r2, #1
 8008d94:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008d98:	bf28      	it	cs
 8008d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008d9e:	fa43 f305 	asr.w	r3, r3, r5
 8008da2:	18c0      	adds	r0, r0, r3
 8008da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008dac:	d507      	bpl.n	8008dbe <__adddf3+0xe6>
 8008dae:	f04f 0e00 	mov.w	lr, #0
 8008db2:	f1dc 0c00 	rsbs	ip, ip, #0
 8008db6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008dba:	eb6e 0101 	sbc.w	r1, lr, r1
 8008dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008dc2:	d31b      	bcc.n	8008dfc <__adddf3+0x124>
 8008dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008dc8:	d30c      	bcc.n	8008de4 <__adddf3+0x10c>
 8008dca:	0849      	lsrs	r1, r1, #1
 8008dcc:	ea5f 0030 	movs.w	r0, r0, rrx
 8008dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008dd4:	f104 0401 	add.w	r4, r4, #1
 8008dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008de0:	f080 809a 	bcs.w	8008f18 <__adddf3+0x240>
 8008de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008de8:	bf08      	it	eq
 8008dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008dee:	f150 0000 	adcs.w	r0, r0, #0
 8008df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008df6:	ea41 0105 	orr.w	r1, r1, r5
 8008dfa:	bd30      	pop	{r4, r5, pc}
 8008dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008e00:	4140      	adcs	r0, r0
 8008e02:	eb41 0101 	adc.w	r1, r1, r1
 8008e06:	3c01      	subs	r4, #1
 8008e08:	bf28      	it	cs
 8008e0a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8008e0e:	d2e9      	bcs.n	8008de4 <__adddf3+0x10c>
 8008e10:	f091 0f00 	teq	r1, #0
 8008e14:	bf04      	itt	eq
 8008e16:	4601      	moveq	r1, r0
 8008e18:	2000      	moveq	r0, #0
 8008e1a:	fab1 f381 	clz	r3, r1
 8008e1e:	bf08      	it	eq
 8008e20:	3320      	addeq	r3, #32
 8008e22:	f1a3 030b 	sub.w	r3, r3, #11
 8008e26:	f1b3 0220 	subs.w	r2, r3, #32
 8008e2a:	da0c      	bge.n	8008e46 <__adddf3+0x16e>
 8008e2c:	320c      	adds	r2, #12
 8008e2e:	dd08      	ble.n	8008e42 <__adddf3+0x16a>
 8008e30:	f102 0c14 	add.w	ip, r2, #20
 8008e34:	f1c2 020c 	rsb	r2, r2, #12
 8008e38:	fa01 f00c 	lsl.w	r0, r1, ip
 8008e3c:	fa21 f102 	lsr.w	r1, r1, r2
 8008e40:	e00c      	b.n	8008e5c <__adddf3+0x184>
 8008e42:	f102 0214 	add.w	r2, r2, #20
 8008e46:	bfd8      	it	le
 8008e48:	f1c2 0c20 	rsble	ip, r2, #32
 8008e4c:	fa01 f102 	lsl.w	r1, r1, r2
 8008e50:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008e54:	bfdc      	itt	le
 8008e56:	ea41 010c 	orrle.w	r1, r1, ip
 8008e5a:	4090      	lslle	r0, r2
 8008e5c:	1ae4      	subs	r4, r4, r3
 8008e5e:	bfa2      	ittt	ge
 8008e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008e64:	4329      	orrge	r1, r5
 8008e66:	bd30      	popge	{r4, r5, pc}
 8008e68:	ea6f 0404 	mvn.w	r4, r4
 8008e6c:	3c1f      	subs	r4, #31
 8008e6e:	da1c      	bge.n	8008eaa <__adddf3+0x1d2>
 8008e70:	340c      	adds	r4, #12
 8008e72:	dc0e      	bgt.n	8008e92 <__adddf3+0x1ba>
 8008e74:	f104 0414 	add.w	r4, r4, #20
 8008e78:	f1c4 0220 	rsb	r2, r4, #32
 8008e7c:	fa20 f004 	lsr.w	r0, r0, r4
 8008e80:	fa01 f302 	lsl.w	r3, r1, r2
 8008e84:	ea40 0003 	orr.w	r0, r0, r3
 8008e88:	fa21 f304 	lsr.w	r3, r1, r4
 8008e8c:	ea45 0103 	orr.w	r1, r5, r3
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	f1c4 040c 	rsb	r4, r4, #12
 8008e96:	f1c4 0220 	rsb	r2, r4, #32
 8008e9a:	fa20 f002 	lsr.w	r0, r0, r2
 8008e9e:	fa01 f304 	lsl.w	r3, r1, r4
 8008ea2:	ea40 0003 	orr.w	r0, r0, r3
 8008ea6:	4629      	mov	r1, r5
 8008ea8:	bd30      	pop	{r4, r5, pc}
 8008eaa:	fa21 f004 	lsr.w	r0, r1, r4
 8008eae:	4629      	mov	r1, r5
 8008eb0:	bd30      	pop	{r4, r5, pc}
 8008eb2:	f094 0f00 	teq	r4, #0
 8008eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008eba:	bf06      	itte	eq
 8008ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008ec0:	3401      	addeq	r4, #1
 8008ec2:	3d01      	subne	r5, #1
 8008ec4:	e74e      	b.n	8008d64 <__adddf3+0x8c>
 8008ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008eca:	bf18      	it	ne
 8008ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008ed0:	d029      	beq.n	8008f26 <__adddf3+0x24e>
 8008ed2:	ea94 0f05 	teq	r4, r5
 8008ed6:	bf08      	it	eq
 8008ed8:	ea90 0f02 	teqeq	r0, r2
 8008edc:	d005      	beq.n	8008eea <__adddf3+0x212>
 8008ede:	ea54 0c00 	orrs.w	ip, r4, r0
 8008ee2:	bf04      	itt	eq
 8008ee4:	4619      	moveq	r1, r3
 8008ee6:	4610      	moveq	r0, r2
 8008ee8:	bd30      	pop	{r4, r5, pc}
 8008eea:	ea91 0f03 	teq	r1, r3
 8008eee:	bf1e      	ittt	ne
 8008ef0:	2100      	movne	r1, #0
 8008ef2:	2000      	movne	r0, #0
 8008ef4:	bd30      	popne	{r4, r5, pc}
 8008ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008efa:	d105      	bne.n	8008f08 <__adddf3+0x230>
 8008efc:	0040      	lsls	r0, r0, #1
 8008efe:	4149      	adcs	r1, r1
 8008f00:	bf28      	it	cs
 8008f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008f06:	bd30      	pop	{r4, r5, pc}
 8008f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008f0c:	bf3c      	itt	cc
 8008f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008f12:	bd30      	popcc	{r4, r5, pc}
 8008f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008f20:	f04f 0000 	mov.w	r0, #0
 8008f24:	bd30      	pop	{r4, r5, pc}
 8008f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008f2a:	bf1a      	itte	ne
 8008f2c:	4619      	movne	r1, r3
 8008f2e:	4610      	movne	r0, r2
 8008f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008f34:	bf1c      	itt	ne
 8008f36:	460b      	movne	r3, r1
 8008f38:	4602      	movne	r2, r0
 8008f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008f3e:	bf06      	itte	eq
 8008f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008f44:	ea91 0f03 	teqeq	r1, r3
 8008f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008f4c:	bd30      	pop	{r4, r5, pc}
 8008f4e:	bf00      	nop

08008f50 <__aeabi_ui2d>:
 8008f50:	f090 0f00 	teq	r0, #0
 8008f54:	bf04      	itt	eq
 8008f56:	2100      	moveq	r1, #0
 8008f58:	4770      	bxeq	lr
 8008f5a:	b530      	push	{r4, r5, lr}
 8008f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f64:	f04f 0500 	mov.w	r5, #0
 8008f68:	f04f 0100 	mov.w	r1, #0
 8008f6c:	e750      	b.n	8008e10 <__adddf3+0x138>
 8008f6e:	bf00      	nop

08008f70 <__aeabi_i2d>:
 8008f70:	f090 0f00 	teq	r0, #0
 8008f74:	bf04      	itt	eq
 8008f76:	2100      	moveq	r1, #0
 8008f78:	4770      	bxeq	lr
 8008f7a:	b530      	push	{r4, r5, lr}
 8008f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008f88:	bf48      	it	mi
 8008f8a:	4240      	negmi	r0, r0
 8008f8c:	f04f 0100 	mov.w	r1, #0
 8008f90:	e73e      	b.n	8008e10 <__adddf3+0x138>
 8008f92:	bf00      	nop

08008f94 <__aeabi_f2d>:
 8008f94:	0042      	lsls	r2, r0, #1
 8008f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008f9a:	ea4f 0131 	mov.w	r1, r1, rrx
 8008f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8008fa2:	bf1f      	itttt	ne
 8008fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008fb0:	4770      	bxne	lr
 8008fb2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008fb6:	bf08      	it	eq
 8008fb8:	4770      	bxeq	lr
 8008fba:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008fbe:	bf04      	itt	eq
 8008fc0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008fc4:	4770      	bxeq	lr
 8008fc6:	b530      	push	{r4, r5, lr}
 8008fc8:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008fd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008fd4:	e71c      	b.n	8008e10 <__adddf3+0x138>
 8008fd6:	bf00      	nop

08008fd8 <__aeabi_ul2d>:
 8008fd8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fdc:	bf08      	it	eq
 8008fde:	4770      	bxeq	lr
 8008fe0:	b530      	push	{r4, r5, lr}
 8008fe2:	f04f 0500 	mov.w	r5, #0
 8008fe6:	e00a      	b.n	8008ffe <__aeabi_l2d+0x16>

08008fe8 <__aeabi_l2d>:
 8008fe8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fec:	bf08      	it	eq
 8008fee:	4770      	bxeq	lr
 8008ff0:	b530      	push	{r4, r5, lr}
 8008ff2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008ff6:	d502      	bpl.n	8008ffe <__aeabi_l2d+0x16>
 8008ff8:	4240      	negs	r0, r0
 8008ffa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ffe:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009002:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009006:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800900a:	f43f aed8 	beq.w	8008dbe <__adddf3+0xe6>
 800900e:	f04f 0203 	mov.w	r2, #3
 8009012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009016:	bf18      	it	ne
 8009018:	3203      	addne	r2, #3
 800901a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800901e:	bf18      	it	ne
 8009020:	3203      	addne	r2, #3
 8009022:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009026:	f1c2 0320 	rsb	r3, r2, #32
 800902a:	fa00 fc03 	lsl.w	ip, r0, r3
 800902e:	fa20 f002 	lsr.w	r0, r0, r2
 8009032:	fa01 fe03 	lsl.w	lr, r1, r3
 8009036:	ea40 000e 	orr.w	r0, r0, lr
 800903a:	fa21 f102 	lsr.w	r1, r1, r2
 800903e:	4414      	add	r4, r2
 8009040:	e6bd      	b.n	8008dbe <__adddf3+0xe6>
 8009042:	bf00      	nop

08009044 <ADC_IRQHandler>:
 8009044:	e7fe      	b.n	8009044 <ADC_IRQHandler>

08009046 <memcmp>:
 8009046:	b510      	push	{r4, lr}
 8009048:	3901      	subs	r1, #1
 800904a:	4402      	add	r2, r0
 800904c:	4290      	cmp	r0, r2
 800904e:	d101      	bne.n	8009054 <memcmp+0xe>
 8009050:	2000      	movs	r0, #0
 8009052:	e005      	b.n	8009060 <memcmp+0x1a>
 8009054:	7803      	ldrb	r3, [r0, #0]
 8009056:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800905a:	42a3      	cmp	r3, r4
 800905c:	d001      	beq.n	8009062 <memcmp+0x1c>
 800905e:	1b18      	subs	r0, r3, r4
 8009060:	bd10      	pop	{r4, pc}
 8009062:	3001      	adds	r0, #1
 8009064:	e7f2      	b.n	800904c <memcmp+0x6>

08009066 <memcpy>:
 8009066:	b510      	push	{r4, lr}
 8009068:	1e43      	subs	r3, r0, #1
 800906a:	440a      	add	r2, r1
 800906c:	4291      	cmp	r1, r2
 800906e:	d100      	bne.n	8009072 <memcpy+0xc>
 8009070:	bd10      	pop	{r4, pc}
 8009072:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009076:	f803 4f01 	strb.w	r4, [r3, #1]!
 800907a:	e7f7      	b.n	800906c <memcpy+0x6>

0800907c <LightSet::FullOn()>:
 800907c:	4770      	bx	lr

0800907e <DisplayHandler::~DisplayHandler()>:
 800907e:	4770      	bx	lr

08009080 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8009080:	4770      	bx	lr
	...

08009084 <PixelDmxStartStop::Start()>:
 8009084:	4b02      	ldr	r3, [pc, #8]	; (8009090 <PixelDmxStartStop::Start()+0xc>)
 8009086:	2204      	movs	r2, #4
 8009088:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	40020000 	andmi	r0, r2, r0

08009094 <PixelDmxStartStop::Stop()>:
 8009094:	4b02      	ldr	r3, [pc, #8]	; (80090a0 <PixelDmxStartStop::Stop()+0xc>)
 8009096:	2204      	movs	r2, #4
 8009098:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800909c:	4770      	bx	lr
 800909e:	bf00      	nop
 80090a0:	40020000 	andmi	r0, r2, r0

080090a4 <LightSet64with4::~LightSet64with4()>:
 80090a4:	4770      	bx	lr

080090a6 <LightSet64with4::Start(unsigned int)>:
 80090a6:	291f      	cmp	r1, #31
 80090a8:	460b      	mov	r3, r1
 80090aa:	d805      	bhi.n	80090b8 <LightSet64with4::Start(unsigned int)+0x12>
 80090ac:	6842      	ldr	r2, [r0, #4]
 80090ae:	b11a      	cbz	r2, 80090b8 <LightSet64with4::Start(unsigned int)+0x12>
 80090b0:	6813      	ldr	r3, [r2, #0]
 80090b2:	4610      	mov	r0, r2
 80090b4:	689b      	ldr	r3, [r3, #8]
 80090b6:	4718      	bx	r3
 80090b8:	6880      	ldr	r0, [r0, #8]
 80090ba:	b120      	cbz	r0, 80090c6 <LightSet64with4::Start(unsigned int)+0x20>
 80090bc:	6802      	ldr	r2, [r0, #0]
 80090be:	f003 0103 	and.w	r1, r3, #3
 80090c2:	6892      	ldr	r2, [r2, #8]
 80090c4:	4710      	bx	r2
 80090c6:	4770      	bx	lr

080090c8 <LightSet64with4::Stop(unsigned int)>:
 80090c8:	293f      	cmp	r1, #63	; 0x3f
 80090ca:	460b      	mov	r3, r1
 80090cc:	d805      	bhi.n	80090da <LightSet64with4::Stop(unsigned int)+0x12>
 80090ce:	6842      	ldr	r2, [r0, #4]
 80090d0:	b11a      	cbz	r2, 80090da <LightSet64with4::Stop(unsigned int)+0x12>
 80090d2:	6813      	ldr	r3, [r2, #0]
 80090d4:	4610      	mov	r0, r2
 80090d6:	68db      	ldr	r3, [r3, #12]
 80090d8:	4718      	bx	r3
 80090da:	6880      	ldr	r0, [r0, #8]
 80090dc:	b120      	cbz	r0, 80090e8 <LightSet64with4::Stop(unsigned int)+0x20>
 80090de:	6802      	ldr	r2, [r0, #0]
 80090e0:	f003 0103 	and.w	r1, r3, #3
 80090e4:	68d2      	ldr	r2, [r2, #12]
 80090e6:	4710      	bx	r2
 80090e8:	4770      	bx	lr

080090ea <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)>:
 80090ea:	293f      	cmp	r1, #63	; 0x3f
 80090ec:	b4f0      	push	{r4, r5, r6, r7}
 80090ee:	460c      	mov	r4, r1
 80090f0:	4615      	mov	r5, r2
 80090f2:	461e      	mov	r6, r3
 80090f4:	d807      	bhi.n	8009106 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 80090f6:	6847      	ldr	r7, [r0, #4]
 80090f8:	b12f      	cbz	r7, 8009106 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 80090fa:	6838      	ldr	r0, [r7, #0]
 80090fc:	6904      	ldr	r4, [r0, #16]
 80090fe:	4638      	mov	r0, r7
 8009100:	46a4      	mov	ip, r4
 8009102:	bcf0      	pop	{r4, r5, r6, r7}
 8009104:	4760      	bx	ip
 8009106:	6880      	ldr	r0, [r0, #8]
 8009108:	b138      	cbz	r0, 800911a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x30>
 800910a:	6803      	ldr	r3, [r0, #0]
 800910c:	691f      	ldr	r7, [r3, #16]
 800910e:	462a      	mov	r2, r5
 8009110:	4633      	mov	r3, r6
 8009112:	f004 0103 	and.w	r1, r4, #3
 8009116:	46bc      	mov	ip, r7
 8009118:	e7f3      	b.n	8009102 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x18>
 800911a:	bcf0      	pop	{r4, r5, r6, r7}
 800911c:	4770      	bx	lr

0800911e <LightSet64with4::Blackout(bool)>:
 800911e:	b570      	push	{r4, r5, r6, lr}
 8009120:	4604      	mov	r4, r0
 8009122:	6840      	ldr	r0, [r0, #4]
 8009124:	460d      	mov	r5, r1
 8009126:	b110      	cbz	r0, 800912e <LightSet64with4::Blackout(bool)+0x10>
 8009128:	6803      	ldr	r3, [r0, #0]
 800912a:	695b      	ldr	r3, [r3, #20]
 800912c:	4798      	blx	r3
 800912e:	68a0      	ldr	r0, [r4, #8]
 8009130:	b128      	cbz	r0, 800913e <LightSet64with4::Blackout(bool)+0x20>
 8009132:	6803      	ldr	r3, [r0, #0]
 8009134:	4629      	mov	r1, r5
 8009136:	695b      	ldr	r3, [r3, #20]
 8009138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800913c:	4718      	bx	r3
 800913e:	bd70      	pop	{r4, r5, r6, pc}

08009140 <LightSet64with4::Print()>:
 8009140:	b510      	push	{r4, lr}
 8009142:	4604      	mov	r4, r0
 8009144:	6840      	ldr	r0, [r0, #4]
 8009146:	b110      	cbz	r0, 800914e <LightSet64with4::Print()+0xe>
 8009148:	6803      	ldr	r3, [r0, #0]
 800914a:	69db      	ldr	r3, [r3, #28]
 800914c:	4798      	blx	r3
 800914e:	68a0      	ldr	r0, [r4, #8]
 8009150:	b120      	cbz	r0, 800915c <LightSet64with4::Print()+0x1c>
 8009152:	6803      	ldr	r3, [r0, #0]
 8009154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009158:	69db      	ldr	r3, [r3, #28]
 800915a:	4718      	bx	r3
 800915c:	bd10      	pop	{r4, pc}

0800915e <LightSet64with4::SetDmxStartAddress(unsigned short)>:
 800915e:	2000      	movs	r0, #0
 8009160:	4770      	bx	lr

08009162 <LightSet64with4::GetDmxStartAddress()>:
 8009162:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009166:	4770      	bx	lr

08009168 <LightSet64with4::GetDmxFootprint()>:
 8009168:	2000      	movs	r0, #0
 800916a:	4770      	bx	lr

0800916c <LightSet64with4::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800916c:	2000      	movs	r0, #0
 800916e:	4770      	bx	lr

08009170 <RDMNetDevice::CopyUID(unsigned char*)>:
 8009170:	460b      	mov	r3, r1
 8009172:	2206      	movs	r2, #6
 8009174:	1d41      	adds	r1, r0, #5
 8009176:	4618      	mov	r0, r3
 8009178:	f7ff bf75 	b.w	8009066 <memcpy>

0800917c <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 800917c:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009180:	e7f6      	b.n	8009170 <RDMNetDevice::CopyUID(unsigned char*)>
	...

08009184 <RDMNetDevice::CopyCID(unsigned char*)>:
 8009184:	4608      	mov	r0, r1
 8009186:	2210      	movs	r2, #16
 8009188:	4901      	ldr	r1, [pc, #4]	; (8009190 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 800918a:	f7ff bf6c 	b.w	8009066 <memcpy>
 800918e:	bf00      	nop
 8009190:	200007e9 	andcs	r0, r0, r9, ror #15

08009194 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8009194:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009198:	e7f4      	b.n	8009184 <RDMNetDevice::CopyCID(unsigned char*)>
 800919a:	bf00      	nop

0800919c <dmxconfigudp::atoi(char const*, unsigned int)>:
 800919c:	b530      	push	{r4, r5, lr}
 800919e:	4401      	add	r1, r0
 80091a0:	2300      	movs	r3, #0
 80091a2:	250a      	movs	r5, #10
 80091a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80091a8:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80091ac:	2c09      	cmp	r4, #9
 80091ae:	d805      	bhi.n	80091bc <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
 80091b0:	fb05 2303 	mla	r3, r5, r3, r2
 80091b4:	4281      	cmp	r1, r0
 80091b6:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 80091ba:	d1f3      	bne.n	80091a4 <dmxconfigudp::atoi(char const*, unsigned int)+0x8>
 80091bc:	4618      	mov	r0, r3
 80091be:	bd30      	pop	{r4, r5, pc}

080091c0 <DisplayHandler::~DisplayHandler()>:
 80091c0:	b510      	push	{r4, lr}
 80091c2:	4604      	mov	r4, r0
 80091c4:	f00c fd12 	bl	8015bec <operator delete(void*)>
 80091c8:	4620      	mov	r0, r4
 80091ca:	bd10      	pop	{r4, pc}

080091cc <LightSet64with4::~LightSet64with4()>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	4604      	mov	r4, r0
 80091d0:	f00c fd0c 	bl	8015bec <operator delete(void*)>
 80091d4:	4620      	mov	r0, r4
 80091d6:	bd10      	pop	{r4, pc}

080091d8 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80091d8:	b510      	push	{r4, lr}
 80091da:	4604      	mov	r4, r0
 80091dc:	f00c fd06 	bl	8015bec <operator delete(void*)>
 80091e0:	4620      	mov	r0, r4
 80091e2:	bd10      	pop	{r4, pc}

080091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091e4:	b510      	push	{r4, lr}
 80091e6:	4c03      	ldr	r4, [pc, #12]	; (80091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80091e8:	30d0      	adds	r0, #208	; 0xd0
 80091ea:	4622      	mov	r2, r4
 80091ec:	f004 ffb6 	bl	800e15c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 80091f0:	4620      	mov	r0, r4
 80091f2:	bd10      	pop	{r4, pc}
 80091f4:	200006e8 	andcs	r0, r0, r8, ror #13

080091f8 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091f8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091fc:	e7f2      	b.n	80091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80091fe:	bf00      	nop

08009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8009200:	b110      	cbz	r0, 8009208 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8009202:	6803      	ldr	r3, [r0, #0]
 8009204:	6a1b      	ldr	r3, [r3, #32]
 8009206:	4718      	bx	r3
 8009208:	4770      	bx	lr

0800920a <Display::PutChar(int) [clone .isra.0]>:
 800920a:	b110      	cbz	r0, 8009212 <Display::PutChar(int) [clone .isra.0]+0x8>
 800920c:	6803      	ldr	r3, [r0, #0]
 800920e:	695b      	ldr	r3, [r3, #20]
 8009210:	4718      	bx	r3
 8009212:	4770      	bx	lr

08009214 <DisplayHandler::Print(unsigned int)>:
 8009214:	b538      	push	{r3, r4, r5, lr}
 8009216:	7903      	ldrb	r3, [r0, #4]
 8009218:	b1f3      	cbz	r3, 8009258 <DisplayHandler::Print(unsigned int)+0x44>
 800921a:	2904      	cmp	r1, #4
 800921c:	bf98      	it	ls
 800921e:	4b0f      	ldrls	r3, [pc, #60]	; (800925c <DisplayHandler::Print(unsigned int)+0x48>)
 8009220:	4d0f      	ldr	r5, [pc, #60]	; (8009260 <DisplayHandler::Print(unsigned int)+0x4c>)
 8009222:	bf98      	it	ls
 8009224:	5c5c      	ldrbls	r4, [r3, r1]
 8009226:	682b      	ldr	r3, [r5, #0]
 8009228:	6998      	ldr	r0, [r3, #24]
 800922a:	bf88      	it	hi
 800922c:	2455      	movhi	r4, #85	; 0x55
 800922e:	b178      	cbz	r0, 8009250 <DisplayHandler::Print(unsigned int)+0x3c>
 8009230:	7901      	ldrb	r1, [r0, #4]
 8009232:	3901      	subs	r1, #1
 8009234:	b2c9      	uxtb	r1, r1
 8009236:	b168      	cbz	r0, 8009254 <DisplayHandler::Print(unsigned int)+0x40>
 8009238:	7942      	ldrb	r2, [r0, #5]
 800923a:	3a01      	subs	r2, #1
 800923c:	b2d2      	uxtb	r2, r2
 800923e:	f7ff ffdf 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009242:	682b      	ldr	r3, [r5, #0]
 8009244:	4621      	mov	r1, r4
 8009246:	6998      	ldr	r0, [r3, #24]
 8009248:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800924c:	f7ff bfdd 	b.w	800920a <Display::PutChar(int) [clone .isra.0]>
 8009250:	4601      	mov	r1, r0
 8009252:	e7ee      	b.n	8009232 <DisplayHandler::Print(unsigned int)+0x1e>
 8009254:	4602      	mov	r2, r0
 8009256:	e7f0      	b.n	800923a <DisplayHandler::Print(unsigned int)+0x26>
 8009258:	bd38      	pop	{r3, r4, r5, pc}
 800925a:	bf00      	nop
 800925c:	0801883c 	stmdaeq	r1, {r2, r3, r4, r5, fp, pc}
 8009260:	2000fc90 	mulcs	r0, r0, ip

08009264 <RDMNetDevice::~RDMNetDevice()>:
 8009264:	b510      	push	{r4, lr}
 8009266:	4b06      	ldr	r3, [pc, #24]	; (8009280 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8009268:	4604      	mov	r4, r0
 800926a:	f840 3b8c 	str.w	r3, [r0], #140
 800926e:	f004 fa27 	bl	800d6c0 <RDMSubDevices::~RDMSubDevices()>
 8009272:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8009276:	f004 fa03 	bl	800d680 <RDMSensors::~RDMSensors()>
 800927a:	4620      	mov	r0, r4
 800927c:	bd10      	pop	{r4, pc}
 800927e:	bf00      	nop
 8009280:	08019de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, pc}

08009284 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8009284:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009288:	e7ec      	b.n	8009264 <RDMNetDevice::~RDMNetDevice()>
 800928a:	bf00      	nop

0800928c <RDMNetDevice::~RDMNetDevice()>:
 800928c:	b510      	push	{r4, lr}
 800928e:	4604      	mov	r4, r0
 8009290:	f7ff ffe8 	bl	8009264 <RDMNetDevice::~RDMNetDevice()>
 8009294:	4620      	mov	r0, r4
 8009296:	f00c fca9 	bl	8015bec <operator delete(void*)>
 800929a:	4620      	mov	r0, r4
 800929c:	bd10      	pop	{r4, pc}

0800929e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800929e:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80092a2:	e7f3      	b.n	800928c <RDMNetDevice::~RDMNetDevice()>

080092a4 <Display::Printf(unsigned char, char const*, ...)>:
 80092a4:	b40c      	push	{r2, r3}
 80092a6:	b570      	push	{r4, r5, r6, lr}
 80092a8:	6984      	ldr	r4, [r0, #24]
 80092aa:	b08a      	sub	sp, #40	; 0x28
 80092ac:	4605      	mov	r5, r0
 80092ae:	460e      	mov	r6, r1
 80092b0:	b174      	cbz	r4, 80092d0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80092b2:	ab0f      	add	r3, sp, #60	; 0x3c
 80092b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80092b6:	9301      	str	r3, [sp, #4]
 80092b8:	2120      	movs	r1, #32
 80092ba:	a802      	add	r0, sp, #8
 80092bc:	f001 f924 	bl	800a508 <vsnprintf>
 80092c0:	4604      	mov	r4, r0
 80092c2:	69a8      	ldr	r0, [r5, #24]
 80092c4:	6803      	ldr	r3, [r0, #0]
 80092c6:	aa02      	add	r2, sp, #8
 80092c8:	69dd      	ldr	r5, [r3, #28]
 80092ca:	4631      	mov	r1, r6
 80092cc:	b2a3      	uxth	r3, r4
 80092ce:	47a8      	blx	r5
 80092d0:	4620      	mov	r0, r4
 80092d2:	b00a      	add	sp, #40	; 0x28
 80092d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092d8:	b002      	add	sp, #8
 80092da:	4770      	bx	lr

080092dc <Display::TextStatus(char const*)>:
 80092dc:	6983      	ldr	r3, [r0, #24]
 80092de:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092e2:	4604      	mov	r4, r0
 80092e4:	460d      	mov	r5, r1
 80092e6:	2b00      	cmp	r3, #0
 80092e8:	d03b      	beq.n	8009362 <Display::TextStatus(char const*)+0x86>
 80092ea:	791e      	ldrb	r6, [r3, #4]
 80092ec:	795f      	ldrb	r7, [r3, #5]
 80092ee:	b92e      	cbnz	r6, 80092fc <Display::TextStatus(char const*)+0x20>
 80092f0:	4b1d      	ldr	r3, [pc, #116]	; (8009368 <Display::TextStatus(char const*)+0x8c>)
 80092f2:	4a1e      	ldr	r2, [pc, #120]	; (800936c <Display::TextStatus(char const*)+0x90>)
 80092f4:	481e      	ldr	r0, [pc, #120]	; (8009370 <Display::TextStatus(char const*)+0x94>)
 80092f6:	2199      	movs	r1, #153	; 0x99
 80092f8:	f000 fdba 	bl	8009e70 <__assert_func>
 80092fc:	b92f      	cbnz	r7, 800930a <Display::TextStatus(char const*)+0x2e>
 80092fe:	4b1d      	ldr	r3, [pc, #116]	; (8009374 <Display::TextStatus(char const*)+0x98>)
 8009300:	4a1a      	ldr	r2, [pc, #104]	; (800936c <Display::TextStatus(char const*)+0x90>)
 8009302:	481b      	ldr	r0, [pc, #108]	; (8009370 <Display::TextStatus(char const*)+0x94>)
 8009304:	219a      	movs	r1, #154	; 0x9a
 8009306:	f000 fdb3 	bl	8009e70 <__assert_func>
 800930a:	1e7a      	subs	r2, r7, #1
 800930c:	b2d2      	uxtb	r2, r2
 800930e:	69a0      	ldr	r0, [r4, #24]
 8009310:	9201      	str	r2, [sp, #4]
 8009312:	2100      	movs	r1, #0
 8009314:	f7ff ff74 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009318:	f04f 0800 	mov.w	r8, #0
 800931c:	3e01      	subs	r6, #1
 800931e:	4546      	cmp	r6, r8
 8009320:	9a01      	ldr	r2, [sp, #4]
 8009322:	69a0      	ldr	r0, [r4, #24]
 8009324:	d816      	bhi.n	8009354 <Display::TextStatus(char const*)+0x78>
 8009326:	2100      	movs	r1, #0
 8009328:	f7ff ff6a 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800932c:	69a0      	ldr	r0, [r4, #24]
 800932e:	b1c0      	cbz	r0, 8009362 <Display::TextStatus(char const*)+0x86>
 8009330:	7901      	ldrb	r1, [r0, #4]
 8009332:	2300      	movs	r3, #0
 8009334:	5cea      	ldrb	r2, [r5, r3]
 8009336:	b11a      	cbz	r2, 8009340 <Display::TextStatus(char const*)+0x64>
 8009338:	1c5a      	adds	r2, r3, #1
 800933a:	4299      	cmp	r1, r3
 800933c:	4613      	mov	r3, r2
 800933e:	dcf9      	bgt.n	8009334 <Display::TextStatus(char const*)+0x58>
 8009340:	6802      	ldr	r2, [r0, #0]
 8009342:	69d4      	ldr	r4, [r2, #28]
 8009344:	b2db      	uxtb	r3, r3
 8009346:	462a      	mov	r2, r5
 8009348:	4639      	mov	r1, r7
 800934a:	46a4      	mov	ip, r4
 800934c:	b002      	add	sp, #8
 800934e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009352:	4760      	bx	ip
 8009354:	2120      	movs	r1, #32
 8009356:	9201      	str	r2, [sp, #4]
 8009358:	f108 0801 	add.w	r8, r8, #1
 800935c:	f7ff ff55 	bl	800920a <Display::PutChar(int) [clone .isra.0]>
 8009360:	e7dd      	b.n	800931e <Display::TextStatus(char const*)+0x42>
 8009362:	b002      	add	sp, #8
 8009364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009368:	0801852c 	stmdaeq	r1, {r2, r3, r5, r8, sl, pc}
 800936c:	08018540 	stmdaeq	r1, {r6, r8, sl, pc}
 8009370:	0801854b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, pc}
 8009374:	08018570 	stmdaeq	r1, {r4, r5, r6, r8, sl, pc}

08009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8009378:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800937a:	4605      	mov	r5, r0
 800937c:	461e      	mov	r6, r3
 800937e:	460f      	mov	r7, r1
 8009380:	4614      	mov	r4, r2
 8009382:	f7ff ffab 	bl	80092dc <Display::TextStatus(char const*)>
 8009386:	7c6b      	ldrb	r3, [r5, #17]
 8009388:	b19b      	cbz	r3, 80093b2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 800938a:	43e2      	mvns	r2, r4
 800938c:	2312      	movs	r3, #18
 800938e:	7a28      	ldrb	r0, [r5, #8]
 8009390:	f88d 3004 	strb.w	r3, [sp, #4]
 8009394:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8009398:	f88d 3005 	strb.w	r3, [sp, #5]
 800939c:	f88d 2006 	strb.w	r2, [sp, #6]
 80093a0:	f00e f9d0 	bl	8017744 <gd32_i2c_set_address>
 80093a4:	68e8      	ldr	r0, [r5, #12]
 80093a6:	f00e f9c5 	bl	8017734 <gd32_i2c_set_baudrate>
 80093aa:	2103      	movs	r1, #3
 80093ac:	a801      	add	r0, sp, #4
 80093ae:	f00e f9cf 	bl	8017750 <gd32_i2c_write>
 80093b2:	1c73      	adds	r3, r6, #1
 80093b4:	d006      	beq.n	80093c4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 80093b6:	4639      	mov	r1, r7
 80093b8:	4630      	mov	r0, r6
 80093ba:	b003      	add	sp, #12
 80093bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80093c0:	f00c b972 	b.w	80156a8 <console_status>
 80093c4:	b003      	add	sp, #12
 80093c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080093c8 <Display::SetSleep(bool)>:
 80093c8:	b538      	push	{r3, r4, r5, lr}
 80093ca:	4604      	mov	r4, r0
 80093cc:	6980      	ldr	r0, [r0, #24]
 80093ce:	460d      	mov	r5, r1
 80093d0:	b138      	cbz	r0, 80093e2 <Display::SetSleep(bool)+0x1a>
 80093d2:	6803      	ldr	r3, [r0, #0]
 80093d4:	7421      	strb	r1, [r4, #16]
 80093d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093d8:	4798      	blx	r3
 80093da:	b915      	cbnz	r5, 80093e2 <Display::SetSleep(bool)+0x1a>
 80093dc:	4b01      	ldr	r3, [pc, #4]	; (80093e4 <Display::SetSleep(bool)+0x1c>)
 80093de:	681b      	ldr	r3, [r3, #0]
 80093e0:	6063      	str	r3, [r4, #4]
 80093e2:	bd38      	pop	{r3, r4, r5, pc}
 80093e4:	2000fd94 	mulcs	r0, r4, sp

080093e8 <display::timeout::gpio_init()>:
 80093e8:	b510      	push	{r4, lr}
 80093ea:	f640 4002 	movw	r0, #3074	; 0xc02
 80093ee:	f00d fca7 	bl	8016d40 <rcu_periph_clock_enable>
 80093f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093f6:	4803      	ldr	r0, [pc, #12]	; (8009404 <display::timeout::gpio_init()+0x1c>)
 80093f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80093fc:	2201      	movs	r2, #1
 80093fe:	2100      	movs	r1, #0
 8009400:	f00d bc22 	b.w	8016c48 <gpio_mode_set>
 8009404:	40020800 	andmi	r0, r2, r0, lsl #16

08009408 <display::timeout::gpio_renew()>:
 8009408:	4b03      	ldr	r3, [pc, #12]	; (8009418 <display::timeout::gpio_renew()+0x10>)
 800940a:	f8d3 0810 	ldr.w	r0, [r3, #2064]	; 0x810
 800940e:	f480 5000 	eor.w	r0, r0, #8192	; 0x2000
 8009412:	f3c0 3040 	ubfx	r0, r0, #13, #1
 8009416:	4770      	bx	lr
 8009418:	40020000 	andmi	r0, r2, r0

0800941c <Hardware::RebootHandler()>:
 800941c:	b508      	push	{r3, lr}
 800941e:	4b05      	ldr	r3, [pc, #20]	; (8009434 <Hardware::RebootHandler()+0x18>)
 8009420:	6818      	ldr	r0, [r3, #0]
 8009422:	f007 fff3 	bl	801140c <WS28xxMulti::Blackout()>
 8009426:	4b04      	ldr	r3, [pc, #16]	; (8009438 <Hardware::RebootHandler()+0x1c>)
 8009428:	6818      	ldr	r0, [r3, #0]
 800942a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800942e:	f002 bd83 	b.w	800bf38 <E131Bridge::Stop()>
 8009432:	bf00      	nop
 8009434:	20001268 	andcs	r1, r0, r8, ror #4
 8009438:	200006cc 	andcs	r0, r0, ip, asr #13

0800943c <main>:
 800943c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009440:	f5ad 5df3 	sub.w	sp, sp, #7776	; 0x1e60
 8009444:	b083      	sub	sp, #12
 8009446:	a806      	add	r0, sp, #24
 8009448:	f00c fa46 	bl	80158d8 <Hardware::Hardware()>
 800944c:	a8c4      	add	r0, sp, #784	; 0x310
 800944e:	f009 f9cd 	bl	80127ec <Network::Network()>
 8009452:	a821      	add	r0, sp, #132	; 0x84
 8009454:	f00c f9c4 	bl	80157e0 <LedBlink::LedBlink()>
 8009458:	a898      	add	r0, sp, #608	; 0x260
 800945a:	f00a fac9 	bl	80139f0 <DisplayUdf::DisplayUdf()>
 800945e:	4bb7      	ldr	r3, [pc, #732]	; (800973c <main+0x300>)
 8009460:	4ab7      	ldr	r2, [pc, #732]	; (8009740 <main+0x304>)
 8009462:	49b8      	ldr	r1, [pc, #736]	; (8009744 <main+0x308>)
 8009464:	a807      	add	r0, sp, #28
 8009466:	f00c f937 	bl	80156d8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800946a:	a817      	add	r0, sp, #92	; 0x5c
 800946c:	f00a ff14 	bl	8014298 <ConfigStore::ConfigStore()>
 8009470:	49b5      	ldr	r1, [pc, #724]	; (8009748 <main+0x30c>)
 8009472:	a807      	add	r0, sp, #28
 8009474:	f00c f9a6 	bl	80157c4 <FirmwareVersion::Print(char const*)>
 8009478:	4bb4      	ldr	r3, [pc, #720]	; (800974c <main+0x310>)
 800947a:	2201      	movs	r2, #1
 800947c:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 8009480:	2008      	movs	r0, #8
 8009482:	f00c fbb7 	bl	8015bf4 <operator new(unsigned int)>
 8009486:	4bb2      	ldr	r3, [pc, #712]	; (8009750 <main+0x314>)
 8009488:	6003      	str	r3, [r0, #0]
 800948a:	4bb2      	ldr	r3, [pc, #712]	; (8009754 <main+0x318>)
 800948c:	681b      	ldr	r3, [r3, #0]
 800948e:	2b00      	cmp	r3, #0
 8009490:	bf14      	ite	ne
 8009492:	2201      	movne	r2, #1
 8009494:	2200      	moveq	r2, #0
 8009496:	ac1a      	add	r4, sp, #104	; 0x68
 8009498:	7102      	strb	r2, [r0, #4]
 800949a:	d004      	beq.n	80094a6 <main+0x6a>
 800949c:	699b      	ldr	r3, [r3, #24]
 800949e:	3b00      	subs	r3, #0
 80094a0:	bf18      	it	ne
 80094a2:	2301      	movne	r3, #1
 80094a4:	7103      	strb	r3, [r0, #4]
 80094a6:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80094aa:	49ab      	ldr	r1, [pc, #684]	; (8009758 <main+0x31c>)
 80094ac:	9023      	str	r0, [sp, #140]	; 0x8c
 80094ae:	ab21      	add	r3, sp, #132	; 0x84
 80094b0:	a898      	add	r0, sp, #608	; 0x260
 80094b2:	2303      	movs	r3, #3
 80094b4:	f7ff ff60 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80094b8:	a811      	add	r0, sp, #68	; 0x44
 80094ba:	f00b f8e5 	bl	8014688 <StoreNetwork::StoreNetwork()>
 80094be:	abc4      	add	r3, sp, #784	; 0x310
 80094c0:	4618      	mov	r0, r3
 80094c2:	a911      	add	r1, sp, #68	; 0x44
 80094c4:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 80094c8:	f8c3 b0b8 	str.w	fp, [r3, #184]	; 0xb8
 80094cc:	f009 f9e6 	bl	801289c <Network::Init(NetworkParamsStore*)>
 80094d0:	a8c4      	add	r0, sp, #784	; 0x310
 80094d2:	f009 fc2f 	bl	8012d34 <Network::Print()>
 80094d6:	49a1      	ldr	r1, [pc, #644]	; (800975c <main+0x320>)
 80094d8:	2303      	movs	r3, #3
 80094da:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80094de:	a898      	add	r0, sp, #608	; 0x260
 80094e0:	f7ff ff4a 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80094e4:	a808      	add	r0, sp, #32
 80094e6:	f008 fdbd 	bl	8012064 <MDNS::MDNS()>
 80094ea:	2500      	movs	r5, #0
 80094ec:	a808      	add	r0, sp, #32
 80094ee:	f008 fe79 	bl	80121e4 <MDNS::Start()>
 80094f2:	4a9b      	ldr	r2, [pc, #620]	; (8009760 <main+0x324>)
 80094f4:	f642 1305 	movw	r3, #10501	; 0x2905
 80094f8:	4629      	mov	r1, r5
 80094fa:	e9cd 5500 	strd	r5, r5, [sp]
 80094fe:	a808      	add	r0, sp, #32
 8009500:	f008 ffde 	bl	80124c0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009504:	4b97      	ldr	r3, [pc, #604]	; (8009764 <main+0x328>)
 8009506:	9301      	str	r3, [sp, #4]
 8009508:	2301      	movs	r3, #1
 800950a:	4a97      	ldr	r2, [pc, #604]	; (8009768 <main+0x32c>)
 800950c:	9300      	str	r3, [sp, #0]
 800950e:	4629      	mov	r1, r5
 8009510:	2350      	movs	r3, #80	; 0x50
 8009512:	a808      	add	r0, sp, #32
 8009514:	f008 ffd4 	bl	80124c0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009518:	a808      	add	r0, sp, #32
 800951a:	f009 f919 	bl	8012750 <MDNS::Print()>
 800951e:	a85d      	add	r0, sp, #372	; 0x174
 8009520:	f001 ffe4 	bl	800b4ec <HttpDaemon::HttpDaemon()>
 8009524:	a85d      	add	r0, sp, #372	; 0x174
 8009526:	f001 fff5 	bl	800b514 <HttpDaemon::Start()>
 800952a:	2303      	movs	r3, #3
 800952c:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8009530:	498e      	ldr	r1, [pc, #568]	; (800976c <main+0x330>)
 8009532:	a898      	add	r0, sp, #608	; 0x260
 8009534:	f7ff ff20 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009538:	a80a      	add	r0, sp, #40	; 0x28
 800953a:	f00b f9d1 	bl	80148e0 <StoreE131::StoreE131()>
 800953e:	a90a      	add	r1, sp, #40	; 0x28
 8009540:	a839      	add	r0, sp, #228	; 0xe4
 8009542:	f003 fbeb 	bl	800cd1c <E131Params::E131Params(E131ParamsStore*)>
 8009546:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 800954a:	f002 fc4d 	bl	800bde8 <E131Bridge::E131Bridge()>
 800954e:	a839      	add	r0, sp, #228	; 0xe4
 8009550:	f003 fc08 	bl	800cd64 <E131Params::Load()>
 8009554:	b130      	cbz	r0, 8009564 <main+0x128>
 8009556:	a839      	add	r0, sp, #228	; 0xe4
 8009558:	f003 ff3c 	bl	800d3d4 <E131Params::Dump()>
 800955c:	2140      	movs	r1, #64	; 0x40
 800955e:	a839      	add	r0, sp, #228	; 0xe4
 8009560:	f003 fee0 	bl	800d324 <E131Params::Set(unsigned int)>
 8009564:	ab71      	add	r3, sp, #452	; 0x1c4
 8009566:	21aa      	movs	r1, #170	; 0xaa
 8009568:	2203      	movs	r2, #3
 800956a:	e9c3 2100 	strd	r2, r1, [r3]
 800956e:	2006      	movs	r0, #6
 8009570:	2200      	movs	r2, #0
 8009572:	e9c3 0202 	strd	r0, r2, [r3, #8]
 8009576:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800957a:	611a      	str	r2, [r3, #16]
 800957c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009580:	829a      	strh	r2, [r3, #20]
 8009582:	4a7b      	ldr	r2, [pc, #492]	; (8009770 <main+0x334>)
 8009584:	619a      	str	r2, [r3, #24]
 8009586:	2201      	movs	r2, #1
 8009588:	6259      	str	r1, [r3, #36]	; 0x24
 800958a:	e9c3 2207 	strd	r2, r2, [r3, #28]
 800958e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8009590:	a813      	add	r0, sp, #76	; 0x4c
 8009592:	f00b fa81 	bl	8014a98 <StorePixelDmx::StorePixelDmx()>
 8009596:	a913      	add	r1, sp, #76	; 0x4c
 8009598:	a889      	add	r0, sp, #548	; 0x224
 800959a:	f006 f99d 	bl	800f8d8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800959e:	a889      	add	r0, sp, #548	; 0x224
 80095a0:	f006 f9ba 	bl	800f918 <PixelDmxParams::Load()>
 80095a4:	b130      	cbz	r0, 80095b4 <main+0x178>
 80095a6:	a889      	add	r0, sp, #548	; 0x224
 80095a8:	f006 fd7c 	bl	80100a4 <PixelDmxParams::Dump()>
 80095ac:	a971      	add	r1, sp, #452	; 0x1c4
 80095ae:	a889      	add	r0, sp, #548	; 0x224
 80095b0:	f006 fd2c 	bl	801000c <PixelDmxParams::Set(PixelDmxConfiguration*)>
 80095b4:	a971      	add	r1, sp, #452	; 0x1c4
 80095b6:	a8ae      	add	r0, sp, #696	; 0x2b8
 80095b8:	f006 f882 	bl	800f6c0 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 80095bc:	2004      	movs	r0, #4
 80095be:	f00c fb19 	bl	8015bf4 <operator new(unsigned int)>
 80095c2:	4b6c      	ldr	r3, [pc, #432]	; (8009774 <main+0x338>)
 80095c4:	6003      	str	r3, [r0, #0]
 80095c6:	4605      	mov	r5, r0
 80095c8:	2304      	movs	r3, #4
 80095ca:	486b      	ldr	r0, [pc, #428]	; (8009778 <main+0x33c>)
 80095cc:	2200      	movs	r2, #0
 80095ce:	2101      	movs	r1, #1
 80095d0:	f00d fb3a 	bl	8016c48 <gpio_mode_set>
 80095d4:	2304      	movs	r3, #4
 80095d6:	2202      	movs	r2, #2
 80095d8:	2100      	movs	r1, #0
 80095da:	4867      	ldr	r0, [pc, #412]	; (8009778 <main+0x33c>)
 80095dc:	f00d fb54 	bl	8016c88 <gpio_output_options_set>
 80095e0:	4b5a      	ldr	r3, [pc, #360]	; (800974c <main+0x310>)
 80095e2:	2204      	movs	r2, #4
 80095e4:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 80095e8:	abae      	add	r3, sp, #696	; 0x2b8
 80095ea:	f8cd 34b8 	str.w	r3, [sp, #1208]	; 0x4b8
 80095ee:	64dd      	str	r5, [r3, #76]	; 0x4c
 80095f0:	6a1e      	ldr	r6, [r3, #32]
 80095f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095f4:	9304      	str	r3, [sp, #16]
 80095f6:	2500      	movs	r5, #0
 80095f8:	f20d 42b4 	addw	r2, sp, #1204	; 0x4b4
 80095fc:	4629      	mov	r1, r5
 80095fe:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 8009602:	42b5      	cmp	r5, r6
 8009604:	f040 82d6 	bne.w	8009bb4 <main+0x778>
 8009608:	f89d 7238 	ldrb.w	r7, [sp, #568]	; 0x238
 800960c:	4631      	mov	r1, r6
 800960e:	a809      	add	r0, sp, #36	; 0x24
 8009610:	ab89      	add	r3, sp, #548	; 0x224
 8009612:	f007 f8e7 	bl	80107e4 <PixelPatterns::PixelPatterns(unsigned int)>
 8009616:	4b59      	ldr	r3, [pc, #356]	; (800977c <main+0x340>)
 8009618:	2f05      	cmp	r7, #5
 800961a:	601f      	str	r7, [r3, #0]
 800961c:	f340 82f5 	ble.w	8009c0a <main+0x7ce>
 8009620:	9d3a      	ldr	r5, [sp, #232]	; 0xe8
 8009622:	f015 0510 	ands.w	r5, r5, #16
 8009626:	ab39      	add	r3, sp, #228	; 0xe4
 8009628:	d008      	beq.n	800963c <main+0x200>
 800962a:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 800962e:	2201      	movs	r2, #1
 8009630:	2140      	movs	r1, #64	; 0x40
 8009632:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009636:	f002 fd05 	bl	800c044 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800963a:	2501      	movs	r5, #1
 800963c:	9a3a      	ldr	r2, [sp, #232]	; 0xe8
 800963e:	0692      	lsls	r2, r2, #26
 8009640:	ab39      	add	r3, sp, #228	; 0xe4
 8009642:	d508      	bpl.n	8009656 <main+0x21a>
 8009644:	f8b3 300d 	ldrh.w	r3, [r3, #13]
 8009648:	2201      	movs	r2, #1
 800964a:	2141      	movs	r1, #65	; 0x41
 800964c:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009650:	f002 fcf8 	bl	800c044 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009654:	3501      	adds	r5, #1
 8009656:	a80b      	add	r0, sp, #44	; 0x2c
 8009658:	f00a ff7e 	bl	8014558 <StoreDmxSend::StoreDmxSend()>
 800965c:	ab1d      	add	r3, sp, #116	; 0x74
 800965e:	a90b      	add	r1, sp, #44	; 0x2c
 8009660:	4618      	mov	r0, r3
 8009662:	9304      	str	r3, [sp, #16]
 8009664:	f005 f9dc 	bl	800ea20 <DmxParams::DmxParams(DmxParamsStore*)>
 8009668:	a842      	add	r0, sp, #264	; 0x108
 800966a:	f005 fd2f 	bl	800f0cc <Dmx::Dmx()>
 800966e:	9804      	ldr	r0, [sp, #16]
 8009670:	f005 f9e2 	bl	800ea38 <DmxParams::Load()>
 8009674:	b130      	cbz	r0, 8009684 <main+0x248>
 8009676:	9804      	ldr	r0, [sp, #16]
 8009678:	f005 fb30 	bl	800ecdc <DmxParams::Dump()>
 800967c:	9804      	ldr	r0, [sp, #16]
 800967e:	a942      	add	r1, sp, #264	; 0x108
 8009680:	f005 fafe 	bl	800ec80 <DmxParams::Set(Dmx*)>
 8009684:	ab0c      	add	r3, sp, #48	; 0x30
 8009686:	4a3e      	ldr	r2, [pc, #248]	; (8009780 <main+0x344>)
 8009688:	601a      	str	r2, [r3, #0]
 800968a:	f1ab 0818 	sub.w	r8, fp, #24
 800968e:	4640      	mov	r0, r8
 8009690:	f005 f96c 	bl	800e96c <DmxSend::Print()>
 8009694:	2d00      	cmp	r5, #0
 8009696:	f000 8329 	beq.w	8009cec <main+0x8b0>
 800969a:	f8df a110 	ldr.w	sl, [pc, #272]	; 80097ac <main+0x370>
 800969e:	2001      	movs	r0, #1
 80096a0:	f00c faa8 	bl	8015bf4 <operator new(unsigned int)>
 80096a4:	f8da 3000 	ldr.w	r3, [sl]
 80096a8:	9004      	str	r0, [sp, #16]
 80096aa:	3301      	adds	r3, #1
 80096ac:	d005      	beq.n	80096ba <main+0x27e>
 80096ae:	4b35      	ldr	r3, [pc, #212]	; (8009784 <main+0x348>)
 80096b0:	4a35      	ldr	r2, [pc, #212]	; (8009788 <main+0x34c>)
 80096b2:	4836      	ldr	r0, [pc, #216]	; (800978c <main+0x350>)
 80096b4:	2147      	movs	r1, #71	; 0x47
 80096b6:	f000 fbdb 	bl	8009e70 <__assert_func>
 80096ba:	4b35      	ldr	r3, [pc, #212]	; (8009790 <main+0x354>)
 80096bc:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80096c0:	6818      	ldr	r0, [r3, #0]
 80096c2:	f009 f8c2 	bl	801284a <Network::Begin(unsigned short)>
 80096c6:	f8ca 0000 	str.w	r0, [sl]
 80096ca:	2201      	movs	r2, #1
 80096cc:	ab98      	add	r3, sp, #608	; 0x260
 80096ce:	e9c3 2514 	strd	r2, r5, [r3, #80]	; 0x50
 80096d2:	4b2a      	ldr	r3, [pc, #168]	; (800977c <main+0x340>)
 80096d4:	492f      	ldr	r1, [pc, #188]	; (8009794 <main+0x358>)
 80096d6:	681b      	ldr	r3, [r3, #0]
 80096d8:	482f      	ldr	r0, [pc, #188]	; (8009798 <main+0x35c>)
 80096da:	2b00      	cmp	r3, #0
 80096dc:	abae      	add	r3, sp, #696	; 0x2b8
 80096de:	bf18      	it	ne
 80096e0:	2300      	movne	r3, #0
 80096e2:	2d00      	cmp	r5, #0
 80096e4:	bf14      	ite	ne
 80096e6:	4642      	movne	r2, r8
 80096e8:	2200      	moveq	r2, #0
 80096ea:	e9c4 1300 	strd	r1, r3, [r4]
 80096ee:	60a2      	str	r2, [r4, #8]
 80096f0:	492a      	ldr	r1, [pc, #168]	; (800979c <main+0x360>)
 80096f2:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 80097b0 <main+0x374>
 80096f6:	e9cd 3200 	strd	r3, r2, [sp]
 80096fa:	4a29      	ldr	r2, [pc, #164]	; (80097a0 <main+0x364>)
 80096fc:	2324      	movs	r3, #36	; 0x24
 80096fe:	f000 fec3 	bl	800a488 <printf>
 8009702:	4620      	mov	r0, r4
 8009704:	f7ff fd1c 	bl	8009140 <LightSet64with4::Print()>
 8009708:	f20d 43b4 	addw	r3, sp, #1204	; 0x4b4
 800970c:	4618      	mov	r0, r3
 800970e:	605c      	str	r4, [r3, #4]
 8009710:	f003 fa4e 	bl	800cbb0 <E131Bridge::Print()>
 8009714:	4923      	ldr	r1, [pc, #140]	; (80097a4 <main+0x368>)
 8009716:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 800971a:	2303      	movs	r3, #3
 800971c:	a898      	add	r0, sp, #608	; 0x260
 800971e:	f7ff fe2b 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009722:	f8d8 3000 	ldr.w	r3, [r8]
 8009726:	6818      	ldr	r0, [r3, #0]
 8009728:	f006 ff2e 	bl	8010588 <PixelType::GetType(pixel::Type)>
 800972c:	9502      	str	r5, [sp, #8]
 800972e:	f8d8 3000 	ldr.w	r3, [r8]
 8009732:	4a1d      	ldr	r2, [pc, #116]	; (80097a8 <main+0x36c>)
 8009734:	685b      	ldr	r3, [r3, #4]
 8009736:	2120      	movs	r1, #32
 8009738:	e03c      	b.n	80097b4 <main+0x378>
 800973a:	bf00      	nop
 800973c:	08018581 	stmdaeq	r1, {r0, r7, r8, sl, pc}
 8009740:	0801858a 	stmdaeq	r1, {r1, r3, r7, r8, sl, pc}
 8009744:	08018841 	stmdaeq	r1, {r0, r6, fp, pc}
 8009748:	08018596 	stmdaeq	r1, {r1, r2, r4, r7, r8, sl, pc}
 800974c:	40020000 	andmi	r0, r2, r0
 8009750:	080187a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, pc}
 8009754:	2000fc90 	mulcs	r0, r0, ip
 8009758:	0801b001 	stmdaeq	r1, {r0, ip, sp, pc}
 800975c:	0801aff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 8009760:	080185d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, pc}
 8009764:	080185e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, sl, pc}
 8009768:	080185df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, sl, pc}
 800976c:	08019b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, ip, pc}
 8009770:	08018845 	stmdaeq	r1, {r0, r2, r6, fp, pc}
 8009774:	080187b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, pc}
 8009778:	40020800 	andmi	r0, r2, r0, lsl #16
 800977c:	20001260 	andcs	r1, r0, r0, ror #4
 8009780:	0801a18c 	stmdaeq	r1, {r2, r3, r7, r8, sp, pc}
 8009784:	08018634 	stmdaeq	r1, {r2, r4, r5, r9, sl, pc}
 8009788:	08018644 	stmdaeq	r1, {r2, r6, r9, sl, pc}
 800978c:	08018651 	stmdaeq	r1, {r0, r4, r6, r9, sl, pc}
 8009790:	2000f994 	mulcs	r0, r4, r9
 8009794:	080187cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, pc}
 8009798:	080186ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, pc}
 800979c:	0801869d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, pc}
 80097a0:	08018673 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, pc}
 80097a4:	08019ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, ip, pc}
 80097a8:	080186c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, pc}
 80097ac:	20000010 	andcs	r0, r0, r0, lsl r0
 80097b0:	20001268 	andcs	r1, r0, r8, ror #4
 80097b4:	e9cd 0300 	strd	r0, r3, [sp]
 80097b8:	4633      	mov	r3, r6
 80097ba:	a827      	add	r0, sp, #156	; 0x9c
 80097bc:	f000 fe8c 	bl	800a4d8 <snprintf>
 80097c0:	4ab4      	ldr	r2, [pc, #720]	; (8009a94 <main+0x658>)
 80097c2:	2120      	movs	r1, #32
 80097c4:	a830      	add	r0, sp, #192	; 0xc0
 80097c6:	f000 fe87 	bl	800a4d8 <snprintf>
 80097ca:	4605      	mov	r5, r0
 80097cc:	202c      	movs	r0, #44	; 0x2c
 80097ce:	f00c fa11 	bl	8015bf4 <operator new(unsigned int)>
 80097d2:	4603      	mov	r3, r0
 80097d4:	2200      	movs	r2, #0
 80097d6:	6042      	str	r2, [r0, #4]
 80097d8:	6282      	str	r2, [r0, #40]	; 0x28
 80097da:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 80097de:	f823 2b08 	strh.w	r2, [r3], #8
 80097e2:	aa27      	add	r2, sp, #156	; 0x9c
 80097e4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80097e8:	b111      	cbz	r1, 80097f0 <main+0x3b4>
 80097ea:	4563      	cmp	r3, ip
 80097ec:	f040 8280 	bne.w	8009cf0 <main+0x8b4>
 80097f0:	2201      	movs	r2, #1
 80097f2:	900d      	str	r0, [sp, #52]	; 0x34
 80097f4:	f1ab 0114 	sub.w	r1, fp, #20
 80097f8:	a8f6      	add	r0, sp, #984	; 0x3d8
 80097fa:	ab0d      	add	r3, sp, #52	; 0x34
 80097fc:	f004 f884 	bl	800d908 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8009800:	f20d 40a4 	addw	r0, sp, #1188	; 0x4a4
 8009804:	f003 fdfc 	bl	800d400 <LLRPDevice::LLRPDevice()>
 8009808:	f50d 7a76 	add.w	sl, sp, #984	; 0x3d8
 800980c:	4ba2      	ldr	r3, [pc, #648]	; (8009a98 <main+0x65c>)
 800980e:	f8ca 3000 	str.w	r3, [sl]
 8009812:	3324      	adds	r3, #36	; 0x24
 8009814:	f8ca 30cc 	str.w	r3, [sl, #204]	; 0xcc
 8009818:	2100      	movs	r1, #0
 800981a:	f50d 6095 	add.w	r0, sp, #1192	; 0x4a8
 800981e:	f004 fa5f 	bl	800dce0 <RDMHandler::RDMHandler(bool)>
 8009822:	4b9e      	ldr	r3, [pc, #632]	; (8009a9c <main+0x660>)
 8009824:	499e      	ldr	r1, [pc, #632]	; (8009aa0 <main+0x664>)
 8009826:	6818      	ldr	r0, [r3, #0]
 8009828:	f00c f92a 	bl	8015a80 <Hardware::GetUuid(unsigned char*)>
 800982c:	b2ea      	uxtb	r2, r5
 800982e:	2a20      	cmp	r2, #32
 8009830:	f89a 3004 	ldrb.w	r3, [sl, #4]
 8009834:	bf28      	it	cs
 8009836:	2220      	movcs	r2, #32
 8009838:	4691      	mov	r9, r2
 800983a:	2b00      	cmp	r3, #0
 800983c:	f000 825e 	beq.w	8009cfc <main+0x8c0>
 8009840:	f20d 35e7 	addw	r5, sp, #999	; 0x3e7
 8009844:	a930      	add	r1, sp, #192	; 0xc0
 8009846:	4628      	mov	r0, r5
 8009848:	f7ff fc0d 	bl	8009066 <memcpy>
 800984c:	f8da 007c 	ldr.w	r0, [sl, #124]	; 0x7c
 8009850:	f88a 902f 	strb.w	r9, [sl, #47]	; 0x2f
 8009854:	b120      	cbz	r0, 8009860 <main+0x424>
 8009856:	6803      	ldr	r3, [r0, #0]
 8009858:	464a      	mov	r2, r9
 800985a:	689b      	ldr	r3, [r3, #8]
 800985c:	4629      	mov	r1, r5
 800985e:	4798      	blx	r3
 8009860:	abf6      	add	r3, sp, #984	; 0x3d8
 8009862:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009866:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800986a:	f240 6201 	movw	r2, #1537	; 0x601
 800986e:	4618      	mov	r0, r3
 8009870:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 8009874:	f004 f896 	bl	800d9a4 <RDMDeviceResponder::Init()>
 8009878:	a815      	add	r0, sp, #84	; 0x54
 800987a:	f00b f96d 	bl	8014b58 <StoreRDMDevice::StoreRDMDevice()>
 800987e:	a915      	add	r1, sp, #84	; 0x54
 8009880:	a87d      	add	r0, sp, #500	; 0x1f4
 8009882:	f003 ffcf 	bl	800d824 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8009886:	a87d      	add	r0, sp, #500	; 0x1f4
 8009888:	f003 ffde 	bl	800d848 <RDMDeviceParams::Load()>
 800988c:	b130      	cbz	r0, 800989c <main+0x460>
 800988e:	a87d      	add	r0, sp, #500	; 0x1f4
 8009890:	f004 f81c 	bl	800d8cc <RDMDeviceParams::Dump()>
 8009894:	a9f7      	add	r1, sp, #988	; 0x3dc
 8009896:	a87d      	add	r0, sp, #500	; 0x1f4
 8009898:	f003 ffe1 	bl	800d85e <RDMDeviceParams::Set(RDMDevice*)>
 800989c:	abf6      	add	r3, sp, #984	; 0x3d8
 800989e:	3c10      	subs	r4, #16
 80098a0:	67dc      	str	r4, [r3, #124]	; 0x7c
 80098a2:	4618      	mov	r0, r3
 80098a4:	f003 fec4 	bl	800d630 <RDMNetDevice::Print()>
 80098a8:	f8d8 3000 	ldr.w	r3, [r8]
 80098ac:	497d      	ldr	r1, [pc, #500]	; (8009aa4 <main+0x668>)
 80098ae:	685b      	ldr	r3, [r3, #4]
 80098b0:	4632      	mov	r2, r6
 80098b2:	a898      	add	r0, sp, #608	; 0x260
 80098b4:	f00a f8b2 	bl	8013a1c <DisplayUdf::SetTitle(char const*, ...)>
 80098b8:	2203      	movs	r2, #3
 80098ba:	2102      	movs	r1, #2
 80098bc:	a898      	add	r0, sp, #608	; 0x260
 80098be:	f00a f8c0 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80098c2:	2207      	movs	r2, #7
 80098c4:	2103      	movs	r1, #3
 80098c6:	a898      	add	r0, sp, #608	; 0x260
 80098c8:	f00a f8bb 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80098cc:	2202      	movs	r2, #2
 80098ce:	2104      	movs	r1, #4
 80098d0:	a898      	add	r0, sp, #608	; 0x260
 80098d2:	f00a f8b6 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80098d6:	ac71      	add	r4, sp, #452	; 0x1c4
 80098d8:	2212      	movs	r2, #18
 80098da:	2105      	movs	r1, #5
 80098dc:	a898      	add	r0, sp, #608	; 0x260
 80098de:	f00a f8b0 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80098e2:	2213      	movs	r2, #19
 80098e4:	2106      	movs	r1, #6
 80098e6:	a898      	add	r0, sp, #608	; 0x260
 80098e8:	f00a f8ab 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80098ec:	6820      	ldr	r0, [r4, #0]
 80098ee:	f006 fe4b 	bl	8010588 <PixelType::GetType(pixel::Type)>
 80098f2:	9005      	str	r0, [sp, #20]
 80098f4:	68a0      	ldr	r0, [r4, #8]
 80098f6:	6865      	ldr	r5, [r4, #4]
 80098f8:	6a26      	ldr	r6, [r4, #32]
 80098fa:	f006 fe9d 	bl	8010638 <PixelType::GetMap(pixel::Map)>
 80098fe:	9b05      	ldr	r3, [sp, #20]
 8009900:	4a69      	ldr	r2, [pc, #420]	; (8009aa8 <main+0x66c>)
 8009902:	9500      	str	r5, [sp, #0]
 8009904:	2107      	movs	r1, #7
 8009906:	e9cd 6001 	strd	r6, r0, [sp, #4]
 800990a:	a898      	add	r0, sp, #608	; 0x260
 800990c:	f7ff fcca 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8009910:	a80e      	add	r0, sp, #56	; 0x38
 8009912:	f00a fdeb 	bl	80144ec <StoreDisplayUdf::StoreDisplayUdf()>
 8009916:	a90e      	add	r1, sp, #56	; 0x38
 8009918:	a867      	add	r0, sp, #412	; 0x19c
 800991a:	f00a fa13 	bl	8013d44 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800991e:	a867      	add	r0, sp, #412	; 0x19c
 8009920:	f00a fa1d 	bl	8013d5e <DisplayUdfParams::Load()>
 8009924:	b130      	cbz	r0, 8009934 <main+0x4f8>
 8009926:	a867      	add	r0, sp, #412	; 0x19c
 8009928:	a998      	add	r1, sp, #608	; 0x260
 800992a:	f00a fb52 	bl	8013fd2 <DisplayUdfParams::Set(DisplayUdf*)>
 800992e:	a867      	add	r0, sp, #412	; 0x19c
 8009930:	f00a fb82 	bl	8014038 <DisplayUdfParams::Dump()>
 8009934:	f20d 41b4 	addw	r1, sp, #1204	; 0x4b4
 8009938:	a898      	add	r0, sp, #608	; 0x260
 800993a:	f00a fb7f 	bl	801403c <DisplayUdf::Show(E131Bridge*)>
 800993e:	b187      	cbz	r7, 8009962 <main+0x526>
 8009940:	989e      	ldr	r0, [sp, #632]	; 0x278
 8009942:	ab98      	add	r3, sp, #608	; 0x260
 8009944:	b118      	cbz	r0, 800994e <main+0x512>
 8009946:	6803      	ldr	r3, [r0, #0]
 8009948:	2106      	movs	r1, #6
 800994a:	691b      	ldr	r3, [r3, #16]
 800994c:	4798      	blx	r3
 800994e:	4638      	mov	r0, r7
 8009950:	f006 ff6e 	bl	8010830 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8009954:	4a55      	ldr	r2, [pc, #340]	; (8009aac <main+0x670>)
 8009956:	9700      	str	r7, [sp, #0]
 8009958:	4603      	mov	r3, r0
 800995a:	2106      	movs	r1, #6
 800995c:	a898      	add	r0, sp, #608	; 0x260
 800995e:	f7ff fca1 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8009962:	f20d 43b4 	addw	r3, sp, #1204	; 0x4b4
 8009966:	2203      	movs	r2, #3
 8009968:	f893 350b 	ldrb.w	r3, [r3, #1291]	; 0x50b
 800996c:	2101      	movs	r1, #1
 800996e:	a84b      	add	r0, sp, #300	; 0x12c
 8009970:	f001 f8a2 	bl	800aab8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8009974:	a80f      	add	r0, sp, #60	; 0x3c
 8009976:	f00a febf 	bl	80146f8 <StoreRemoteConfig::StoreRemoteConfig()>
 800997a:	a90f      	add	r1, sp, #60	; 0x3c
 800997c:	a854      	add	r0, sp, #336	; 0x150
 800997e:	f001 fb9f 	bl	800b0c0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009982:	a854      	add	r0, sp, #336	; 0x150
 8009984:	f001 fba6 	bl	800b0d4 <RemoteConfigParams::Load()>
 8009988:	b130      	cbz	r0, 8009998 <main+0x55c>
 800998a:	a854      	add	r0, sp, #336	; 0x150
 800998c:	f001 fce9 	bl	800b362 <RemoteConfigParams::Dump()>
 8009990:	a94b      	add	r1, sp, #300	; 0x12c
 8009992:	a854      	add	r0, sp, #336	; 0x150
 8009994:	f001 fcc5 	bl	800b322 <RemoteConfigParams::Set(RemoteConfig*)>
 8009998:	a817      	add	r0, sp, #92	; 0x5c
 800999a:	f00a fd25 	bl	80143e8 <ConfigStore::Flash()>
 800999e:	2800      	cmp	r0, #0
 80099a0:	d1fa      	bne.n	8009998 <main+0x55c>
 80099a2:	4943      	ldr	r1, [pc, #268]	; (8009ab0 <main+0x674>)
 80099a4:	4c43      	ldr	r4, [pc, #268]	; (8009ab4 <main+0x678>)
 80099a6:	4d44      	ldr	r5, [pc, #272]	; (8009ab8 <main+0x67c>)
 80099a8:	2303      	movs	r3, #3
 80099aa:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80099ae:	a898      	add	r0, sp, #608	; 0x260
 80099b0:	f7ff fce2 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80099b4:	4a41      	ldr	r2, [pc, #260]	; (8009abc <main+0x680>)
 80099b6:	4942      	ldr	r1, [pc, #264]	; (8009ac0 <main+0x684>)
 80099b8:	4842      	ldr	r0, [pc, #264]	; (8009ac4 <main+0x688>)
 80099ba:	232b      	movs	r3, #43	; 0x2b
 80099bc:	f000 fd64 	bl	800a488 <printf>
 80099c0:	6820      	ldr	r0, [r4, #0]
 80099c2:	f241 51c1 	movw	r1, #5569	; 0x15c1
 80099c6:	f008 ff40 	bl	801284a <Network::Begin(unsigned short)>
 80099ca:	6028      	str	r0, [r5, #0]
 80099cc:	3001      	adds	r0, #1
 80099ce:	d105      	bne.n	80099dc <main+0x5a0>
 80099d0:	4b3d      	ldr	r3, [pc, #244]	; (8009ac8 <main+0x68c>)
 80099d2:	4a3a      	ldr	r2, [pc, #232]	; (8009abc <main+0x680>)
 80099d4:	483a      	ldr	r0, [pc, #232]	; (8009ac0 <main+0x684>)
 80099d6:	212d      	movs	r1, #45	; 0x2d
 80099d8:	f000 fa4a 	bl	8009e70 <__assert_func>
 80099dc:	4b3b      	ldr	r3, [pc, #236]	; (8009acc <main+0x690>)
 80099de:	6829      	ldr	r1, [r5, #0]
 80099e0:	681a      	ldr	r2, [r3, #0]
 80099e2:	6820      	ldr	r0, [r4, #0]
 80099e4:	f008 ff42 	bl	801286c <Network::JoinGroup(int, unsigned int)>
 80099e8:	4a34      	ldr	r2, [pc, #208]	; (8009abc <main+0x680>)
 80099ea:	4935      	ldr	r1, [pc, #212]	; (8009ac0 <main+0x684>)
 80099ec:	4838      	ldr	r0, [pc, #224]	; (8009ad0 <main+0x694>)
 80099ee:	232f      	movs	r3, #47	; 0x2f
 80099f0:	f000 fd4a 	bl	800a488 <printf>
 80099f4:	4937      	ldr	r1, [pc, #220]	; (8009ad4 <main+0x698>)
 80099f6:	2302      	movs	r3, #2
 80099f8:	f248 0280 	movw	r2, #32896	; 0x8080
 80099fc:	a898      	add	r0, sp, #608	; 0x260
 80099fe:	f7ff fcbb 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a02:	4935      	ldr	r1, [pc, #212]	; (8009ad8 <main+0x69c>)
 8009a04:	2303      	movs	r3, #3
 8009a06:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009a0a:	a898      	add	r0, sp, #608	; 0x260
 8009a0c:	f7ff fcb4 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a10:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009a14:	f002 fa52 	bl	800bebc <E131Bridge::Start()>
 8009a18:	f248 0280 	movw	r2, #32896	; 0x8080
 8009a1c:	2302      	movs	r3, #2
 8009a1e:	492f      	ldr	r1, [pc, #188]	; (8009adc <main+0x6a0>)
 8009a20:	a898      	add	r0, sp, #608	; 0x260
 8009a22:	f7ff fca9 	bl	8009378 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a26:	2102      	movs	r1, #2
 8009a28:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009a2c:	f00d f8e2 	bl	8016bf4 <fwdgt_config>
 8009a30:	ab06      	add	r3, sp, #24
 8009a32:	2801      	cmp	r0, #1
 8009a34:	bf0c      	ite	eq
 8009a36:	2201      	moveq	r2, #1
 8009a38:	2200      	movne	r2, #0
 8009a3a:	701a      	strb	r2, [r3, #0]
 8009a3c:	d101      	bne.n	8009a42 <main+0x606>
 8009a3e:	f00d f8c9 	bl	8016bd4 <fwdgt_enable>
 8009a42:	4e27      	ldr	r6, [pc, #156]	; (8009ae0 <main+0x6a4>)
 8009a44:	4f27      	ldr	r7, [pc, #156]	; (8009ae4 <main+0x6a8>)
 8009a46:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8009aec <main+0x6b0>
 8009a4a:	f00d f8cb 	bl	8016be4 <fwdgt_counter_reload>
 8009a4e:	f7fe fd89 	bl	8008564 <net_handle>
 8009a52:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009a56:	f002 fe5b 	bl	800c710 <E131Bridge::Run()>
 8009a5a:	a84b      	add	r0, sp, #300	; 0x12c
 8009a5c:	f001 f9e0 	bl	800ae20 <RemoteConfig::Run()>
 8009a60:	a817      	add	r0, sp, #92	; 0x5c
 8009a62:	f00a fcc1 	bl	80143e8 <ConfigStore::Flash()>
 8009a66:	4b20      	ldr	r3, [pc, #128]	; (8009ae8 <main+0x6ac>)
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	b113      	cbz	r3, 8009a72 <main+0x636>
 8009a6c:	a809      	add	r0, sp, #36	; 0x24
 8009a6e:	f007 f903 	bl	8010c78 <PixelPatterns::Run()>
 8009a72:	9b04      	ldr	r3, [sp, #16]
 8009a74:	2b00      	cmp	r3, #0
 8009a76:	d067      	beq.n	8009b48 <main+0x70c>
 8009a78:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 8009a7c:	4918      	ldr	r1, [pc, #96]	; (8009ae0 <main+0x6a4>)
 8009a7e:	7838      	ldrb	r0, [r7, #0]
 8009a80:	f1ab 0208 	sub.w	r2, fp, #8
 8009a84:	f008 f9ee 	bl	8011e64 <udp_recv2>
 8009a88:	f1a0 030b 	sub.w	r3, r0, #11
 8009a8c:	b29b      	uxth	r3, r3
 8009a8e:	2b05      	cmp	r3, #5
 8009a90:	4604      	mov	r4, r0
 8009a92:	e02d      	b.n	8009af0 <main+0x6b4>
 8009a94:	080186e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, pc}
 8009a98:	08018804 	stmdaeq	r1, {r2, fp, pc}
 8009a9c:	2000fd80 	andcs	pc, r0, r0, lsl #27
 8009aa0:	200007e9 	andcs	r0, r0, r9, ror #15
 8009aa4:	080186f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, sl, pc}
 8009aa8:	08018709 	stmdaeq	r1, {r0, r3, r8, r9, sl, pc}
 8009aac:	08018716 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, pc}
 8009ab0:	08019d02 	stmdaeq	r1, {r1, r8, sl, fp, ip, pc}
 8009ab4:	2000f994 	mulcs	r0, r4, r9
 8009ab8:	20000000 	andcs	r0, r0, r0
 8009abc:	0801871c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, pc}
 8009ac0:	08018722 	stmdaeq	r1, {r1, r5, r8, r9, sl, pc}
 8009ac4:	08018745 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, pc}
 8009ac8:	08018753 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, pc}
 8009acc:	200006dc 	ldrdcs	r0, [r0], -ip
 8009ad0:	08018767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, pc}
 8009ad4:	08019cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip, pc}
 8009ad8:	08019b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, ip, pc}
 8009adc:	08019b53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, fp, ip, pc}
 8009ae0:	2000104c 	andcs	r1, r0, ip, asr #32
 8009ae4:	20000010 	andcs	r0, r0, r0, lsl r0
 8009ae8:	20001260 	andcs	r1, r0, r0, ror #4
 8009aec:	08018775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, pc}
 8009af0:	d82a      	bhi.n	8009b48 <main+0x70c>
 8009af2:	6835      	ldr	r5, [r6, #0]
 8009af4:	2204      	movs	r2, #4
 8009af6:	4629      	mov	r1, r5
 8009af8:	4640      	mov	r0, r8
 8009afa:	f7ff faa4 	bl	8009046 <memcmp>
 8009afe:	bb18      	cbnz	r0, 8009b48 <main+0x70c>
 8009b00:	192b      	adds	r3, r5, r4
 8009b02:	1d29      	adds	r1, r5, #4
 8009b04:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8009b08:	2b0a      	cmp	r3, #10
 8009b0a:	bf04      	itt	eq
 8009b0c:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009b10:	b2a4      	uxtheq	r4, r4
 8009b12:	2c0a      	cmp	r4, #10
 8009b14:	f000 80fa 	beq.w	8009d0c <main+0x8d0>
 8009b18:	2c0e      	cmp	r4, #14
 8009b1a:	f200 80f7 	bhi.w	8009d0c <main+0x8d0>
 8009b1e:	48a7      	ldr	r0, [pc, #668]	; (8009dbc <main+0x980>)
 8009b20:	9105      	str	r1, [sp, #20]
 8009b22:	2206      	movs	r2, #6
 8009b24:	f7ff fa8f 	bl	8009046 <memcmp>
 8009b28:	9905      	ldr	r1, [sp, #20]
 8009b2a:	2800      	cmp	r0, #0
 8009b2c:	f040 80ee 	bne.w	8009d0c <main+0x8d0>
 8009b30:	2104      	movs	r1, #4
 8009b32:	f105 000a 	add.w	r0, r5, #10
 8009b36:	f7ff fb31 	bl	800919c <dmxconfigudp::atoi(char const*, unsigned int)>
 8009b3a:	285b      	cmp	r0, #91	; 0x5b
 8009b3c:	4601      	mov	r1, r0
 8009b3e:	d903      	bls.n	8009b48 <main+0x70c>
 8009b40:	4b9f      	ldr	r3, [pc, #636]	; (8009dc0 <main+0x984>)
 8009b42:	6818      	ldr	r0, [r3, #0]
 8009b44:	f005 fb9e 	bl	800f284 <Dmx::SetDmxBreakTime(unsigned int)>
 8009b48:	a808      	add	r0, sp, #32
 8009b4a:	f008 fddd 	bl	8012708 <MDNS::Run()>
 8009b4e:	f20d 40a4 	addw	r0, sp, #1188	; 0x4a4
 8009b52:	f003 fd17 	bl	800d584 <LLRPDevice::Run()>
 8009b56:	a85d      	add	r0, sp, #372	; 0x174
 8009b58:	f001 ff4a 	bl	800b9f0 <HttpDaemon::Run()>
 8009b5c:	999d      	ldr	r1, [sp, #628]	; 0x274
 8009b5e:	aa98      	add	r2, sp, #608	; 0x260
 8009b60:	b169      	cbz	r1, 8009b7e <main+0x742>
 8009b62:	7c13      	ldrb	r3, [r2, #16]
 8009b64:	2b00      	cmp	r3, #0
 8009b66:	f040 8121 	bne.w	8009dac <main+0x970>
 8009b6a:	4b96      	ldr	r3, [pc, #600]	; (8009dc4 <main+0x988>)
 8009b6c:	6852      	ldr	r2, [r2, #4]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	1a9b      	subs	r3, r3, r2
 8009b72:	4299      	cmp	r1, r3
 8009b74:	d203      	bcs.n	8009b7e <main+0x742>
 8009b76:	2101      	movs	r1, #1
 8009b78:	a898      	add	r0, sp, #608	; 0x260
 8009b7a:	f7ff fc25 	bl	80093c8 <Display::SetSleep(bool)>
 8009b7e:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8009b80:	ab21      	add	r3, sp, #132	; 0x84
 8009b82:	2c00      	cmp	r4, #0
 8009b84:	f43f af61 	beq.w	8009a4a <main+0x60e>
 8009b88:	498e      	ldr	r1, [pc, #568]	; (8009dc4 <main+0x988>)
 8009b8a:	6958      	ldr	r0, [r3, #20]
 8009b8c:	680a      	ldr	r2, [r1, #0]
 8009b8e:	1a12      	subs	r2, r2, r0
 8009b90:	4294      	cmp	r4, r2
 8009b92:	f63f af5a 	bhi.w	8009a4a <main+0x60e>
 8009b96:	680a      	ldr	r2, [r1, #0]
 8009b98:	615a      	str	r2, [r3, #20]
 8009b9a:	691a      	ldr	r2, [r3, #16]
 8009b9c:	f082 0101 	eor.w	r1, r2, #1
 8009ba0:	2a01      	cmp	r2, #1
 8009ba2:	6119      	str	r1, [r3, #16]
 8009ba4:	4b88      	ldr	r3, [pc, #544]	; (8009dc8 <main+0x98c>)
 8009ba6:	bf1a      	itte	ne
 8009ba8:	2201      	movne	r2, #1
 8009baa:	f8c3 2818 	strne.w	r2, [r3, #2072]	; 0x818
 8009bae:	f8c3 2828 	streq.w	r2, [r3, #2088]	; 0x828
 8009bb2:	e74a      	b.n	8009a4a <main+0x60e>
 8009bb4:	2d0f      	cmp	r5, #15
 8009bb6:	d816      	bhi.n	8009be6 <main+0x7aa>
 8009bb8:	aa89      	add	r2, sp, #548	; 0x224
 8009bba:	fa0a f305 	lsl.w	r3, sl, r5
 8009bbe:	6852      	ldr	r2, [r2, #4]
 8009bc0:	4393      	bics	r3, r2
 8009bc2:	ab89      	add	r3, sp, #548	; 0x224
 8009bc4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8009bc8:	bf08      	it	eq
 8009bca:	f04f 0801 	moveq.w	r8, #1
 8009bce:	8b5f      	ldrh	r7, [r3, #26]
 8009bd0:	bf18      	it	ne
 8009bd2:	f04f 0800 	movne.w	r8, #0
 8009bd6:	9b04      	ldr	r3, [sp, #16]
 8009bd8:	1a7f      	subs	r7, r7, r1
 8009bda:	eb01 0903 	add.w	r9, r1, r3
 8009bde:	4549      	cmp	r1, r9
 8009be0:	d105      	bne.n	8009bee <main+0x7b2>
 8009be2:	3501      	adds	r5, #1
 8009be4:	e50d      	b.n	8009602 <main+0x1c6>
 8009be6:	f04f 0800 	mov.w	r8, #0
 8009bea:	4647      	mov	r7, r8
 8009bec:	e7f3      	b.n	8009bd6 <main+0x79a>
 8009bee:	f1b8 0f00 	cmp.w	r8, #0
 8009bf2:	d008      	beq.n	8009c06 <main+0x7ca>
 8009bf4:	187b      	adds	r3, r7, r1
 8009bf6:	b29b      	uxth	r3, r3
 8009bf8:	2201      	movs	r2, #1
 8009bfa:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009bfe:	9105      	str	r1, [sp, #20]
 8009c00:	f002 fa20 	bl	800c044 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009c04:	9905      	ldr	r1, [sp, #20]
 8009c06:	3101      	adds	r1, #1
 8009c08:	e7e9      	b.n	8009bde <main+0x7a2>
 8009c0a:	f8df a1e8 	ldr.w	sl, [pc, #488]	; 8009df4 <main+0x9b8>
 8009c0e:	f8df 91e8 	ldr.w	r9, [pc, #488]	; 8009df8 <main+0x9bc>
 8009c12:	2500      	movs	r5, #0
 8009c14:	2f05      	cmp	r7, #5
 8009c16:	d862      	bhi.n	8009cde <main+0x8a2>
 8009c18:	e8df f007 	tbb	[pc, r7]
 8009c1c:	190f0336 	stmdbne	pc, {r1, r2, r4, r5, r8, r9}	; <UNPREDICTABLE>
 8009c20:	23002a22 	movwcs	r2, #2594	; 0xa22
 8009c24:	2264      	movs	r2, #100	; 0x64
 8009c26:	4629      	mov	r1, r5
 8009c28:	a809      	add	r0, sp, #36	; 0x24
 8009c2a:	f006 fe0d 	bl	8010848 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8009c2e:	3501      	adds	r5, #1
 8009c30:	2d10      	cmp	r5, #16
 8009c32:	f10a 0a20 	add.w	sl, sl, #32
 8009c36:	d1ed      	bne.n	8009c14 <main+0x7d8>
 8009c38:	e4f2      	b.n	8009620 <main+0x1e4>
 8009c3a:	2364      	movs	r3, #100	; 0x64
 8009c3c:	2200      	movs	r2, #0
 8009c3e:	e9cd 3200 	strd	r3, r2, [sp]
 8009c42:	4629      	mov	r1, r5
 8009c44:	4b61      	ldr	r3, [pc, #388]	; (8009dcc <main+0x990>)
 8009c46:	a809      	add	r0, sp, #36	; 0x24
 8009c48:	f006 fe14 	bl	8010874 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009c4c:	e7ef      	b.n	8009c2e <main+0x7f2>
 8009c4e:	2300      	movs	r3, #0
 8009c50:	9300      	str	r3, [sp, #0]
 8009c52:	4a5e      	ldr	r2, [pc, #376]	; (8009dcc <main+0x990>)
 8009c54:	2364      	movs	r3, #100	; 0x64
 8009c56:	4629      	mov	r1, r5
 8009c58:	a809      	add	r0, sp, #36	; 0x24
 8009c5a:	f006 fe27 	bl	80108ac <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009c5e:	e7e6      	b.n	8009c2e <main+0x7f2>
 8009c60:	2364      	movs	r3, #100	; 0x64
 8009c62:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8009c66:	4629      	mov	r1, r5
 8009c68:	a809      	add	r0, sp, #36	; 0x24
 8009c6a:	f006 fe39 	bl	80108e0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8009c6e:	e7de      	b.n	8009c2e <main+0x7f2>
 8009c70:	2364      	movs	r3, #100	; 0x64
 8009c72:	2200      	movs	r2, #0
 8009c74:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009c78:	230a      	movs	r3, #10
 8009c7a:	9300      	str	r3, [sp, #0]
 8009c7c:	4629      	mov	r1, r5
 8009c7e:	4b53      	ldr	r3, [pc, #332]	; (8009dcc <main+0x990>)
 8009c80:	a809      	add	r0, sp, #36	; 0x24
 8009c82:	f006 fe61 	bl	8010948 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009c86:	e7d2      	b.n	8009c2e <main+0x7f2>
 8009c88:	2200      	movs	r2, #0
 8009c8a:	f8ca 201c 	str.w	r2, [sl, #28]
 8009c8e:	4690      	mov	r8, r2
 8009c90:	4b4f      	ldr	r3, [pc, #316]	; (8009dd0 <main+0x994>)
 8009c92:	f8d9 0000 	ldr.w	r0, [r9]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	4598      	cmp	r8, r3
 8009c9a:	d30a      	bcc.n	8009cb2 <main+0x876>
 8009c9c:	f8d9 0000 	ldr.w	r0, [r9]
 8009ca0:	f007 fc76 	bl	8011590 <WS28xxMulti::IsUpdating()>
 8009ca4:	2800      	cmp	r0, #0
 8009ca6:	d1f9      	bne.n	8009c9c <main+0x860>
 8009ca8:	f8d9 0000 	ldr.w	r0, [r9]
 8009cac:	f007 fb0a 	bl	80112c4 <WS28xxMulti::Update()>
 8009cb0:	e7bd      	b.n	8009c2e <main+0x7f2>
 8009cb2:	6803      	ldr	r3, [r0, #0]
 8009cb4:	2b07      	cmp	r3, #7
 8009cb6:	f04f 0300 	mov.w	r3, #0
 8009cba:	d008      	beq.n	8009cce <main+0x892>
 8009cbc:	e9cd 3300 	strd	r3, r3, [sp]
 8009cc0:	4642      	mov	r2, r8
 8009cc2:	4629      	mov	r1, r5
 8009cc4:	f007 fce4 	bl	8011690 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8009cc8:	f108 0801 	add.w	r8, r8, #1
 8009ccc:	e7e0      	b.n	8009c90 <main+0x854>
 8009cce:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009cd2:	9300      	str	r3, [sp, #0]
 8009cd4:	4642      	mov	r2, r8
 8009cd6:	4629      	mov	r1, r5
 8009cd8:	f007 fd5c 	bl	8011794 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009cdc:	e7f4      	b.n	8009cc8 <main+0x88c>
 8009cde:	4b3d      	ldr	r3, [pc, #244]	; (8009dd4 <main+0x998>)
 8009ce0:	4a3d      	ldr	r2, [pc, #244]	; (8009dd8 <main+0x99c>)
 8009ce2:	483e      	ldr	r0, [pc, #248]	; (8009ddc <main+0x9a0>)
 8009ce4:	214a      	movs	r1, #74	; 0x4a
 8009ce6:	f000 f8c3 	bl	8009e70 <__assert_func>
 8009cea:	e7a0      	b.n	8009c2e <main+0x7f2>
 8009cec:	9504      	str	r5, [sp, #16]
 8009cee:	e4ec      	b.n	80096ca <main+0x28e>
 8009cf0:	f803 1b01 	strb.w	r1, [r3], #1
 8009cf4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009cf6:	3101      	adds	r1, #1
 8009cf8:	6281      	str	r1, [r0, #40]	; 0x28
 8009cfa:	e573      	b.n	80097e4 <main+0x3a8>
 8009cfc:	a930      	add	r1, sp, #192	; 0xc0
 8009cfe:	f20d 402e 	addw	r0, sp, #1070	; 0x42e
 8009d02:	f7ff f9b0 	bl	8009066 <memcpy>
 8009d06:	f88a 9076 	strb.w	r9, [sl, #118]	; 0x76
 8009d0a:	e5a9      	b.n	8009860 <main+0x424>
 8009d0c:	4834      	ldr	r0, [pc, #208]	; (8009de0 <main+0x9a4>)
 8009d0e:	9105      	str	r1, [sp, #20]
 8009d10:	2204      	movs	r2, #4
 8009d12:	f7ff f998 	bl	8009046 <memcmp>
 8009d16:	9905      	ldr	r1, [sp, #20]
 8009d18:	b980      	cbnz	r0, 8009d3c <main+0x900>
 8009d1a:	2107      	movs	r1, #7
 8009d1c:	f105 0008 	add.w	r0, r5, #8
 8009d20:	f7ff fa3c 	bl	800919c <dmxconfigudp::atoi(char const*, unsigned int)>
 8009d24:	4b2f      	ldr	r3, [pc, #188]	; (8009de4 <main+0x9a8>)
 8009d26:	f1a0 020c 	sub.w	r2, r0, #12
 8009d2a:	429a      	cmp	r2, r3
 8009d2c:	4601      	mov	r1, r0
 8009d2e:	f63f af0b 	bhi.w	8009b48 <main+0x70c>
 8009d32:	4b23      	ldr	r3, [pc, #140]	; (8009dc0 <main+0x984>)
 8009d34:	6818      	ldr	r0, [r3, #0]
 8009d36:	f005 faaf 	bl	800f298 <Dmx::SetDmxMabTime(unsigned int)>
 8009d3a:	e705      	b.n	8009b48 <main+0x70c>
 8009d3c:	2c0c      	cmp	r4, #12
 8009d3e:	d917      	bls.n	8009d70 <main+0x934>
 8009d40:	2c0e      	cmp	r4, #14
 8009d42:	d82f      	bhi.n	8009da4 <main+0x968>
 8009d44:	4828      	ldr	r0, [pc, #160]	; (8009de8 <main+0x9ac>)
 8009d46:	9105      	str	r1, [sp, #20]
 8009d48:	2208      	movs	r2, #8
 8009d4a:	f7ff f97c 	bl	8009046 <memcmp>
 8009d4e:	9905      	ldr	r1, [sp, #20]
 8009d50:	bb40      	cbnz	r0, 8009da4 <main+0x968>
 8009d52:	2102      	movs	r1, #2
 8009d54:	f105 000c 	add.w	r0, r5, #12
 8009d58:	f7ff fa20 	bl	800919c <dmxconfigudp::atoi(char const*, unsigned int)>
 8009d5c:	4601      	mov	r1, r0
 8009d5e:	b110      	cbz	r0, 8009d66 <main+0x92a>
 8009d60:	4b22      	ldr	r3, [pc, #136]	; (8009dec <main+0x9b0>)
 8009d62:	fbb3 f1f0 	udiv	r1, r3, r0
 8009d66:	4b16      	ldr	r3, [pc, #88]	; (8009dc0 <main+0x984>)
 8009d68:	6818      	ldr	r0, [r3, #0]
 8009d6a:	f005 fa63 	bl	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009d6e:	e6eb      	b.n	8009b48 <main+0x70c>
 8009d70:	2c0a      	cmp	r4, #10
 8009d72:	f43f aee9 	beq.w	8009b48 <main+0x70c>
 8009d76:	481e      	ldr	r0, [pc, #120]	; (8009df0 <main+0x9b4>)
 8009d78:	2206      	movs	r2, #6
 8009d7a:	f7ff f964 	bl	8009046 <memcmp>
 8009d7e:	2800      	cmp	r0, #0
 8009d80:	f47f aee2 	bne.w	8009b48 <main+0x70c>
 8009d84:	2103      	movs	r1, #3
 8009d86:	f105 000a 	add.w	r0, r5, #10
 8009d8a:	f7ff fa07 	bl	800919c <dmxconfigudp::atoi(char const*, unsigned int)>
 8009d8e:	1e83      	subs	r3, r0, #2
 8009d90:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009d94:	f63f aed8 	bhi.w	8009b48 <main+0x70c>
 8009d98:	4b09      	ldr	r3, [pc, #36]	; (8009dc0 <main+0x984>)
 8009d9a:	b281      	uxth	r1, r0
 8009d9c:	6818      	ldr	r0, [r3, #0]
 8009d9e:	f005 fa85 	bl	800f2ac <Dmx::SetDmxSlots(unsigned short)>
 8009da2:	e6d1      	b.n	8009b48 <main+0x70c>
 8009da4:	2c0d      	cmp	r4, #13
 8009da6:	f47f aecf 	bne.w	8009b48 <main+0x70c>
 8009daa:	e7e4      	b.n	8009d76 <main+0x93a>
 8009dac:	f7ff fb2c 	bl	8009408 <display::timeout::gpio_renew()>
 8009db0:	2800      	cmp	r0, #0
 8009db2:	f43f aee4 	beq.w	8009b7e <main+0x742>
 8009db6:	2100      	movs	r1, #0
 8009db8:	e6de      	b.n	8009b78 <main+0x73c>
 8009dba:	bf00      	nop
 8009dbc:	0801877a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, pc}
 8009dc0:	20001048 	andcs	r1, r0, r8, asr #32
 8009dc4:	2000fd94 	mulcs	r0, r4, sp
 8009dc8:	40020000 	andmi	r0, r2, r0
 8009dcc:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009dd0:	20001258 	andcs	r1, r0, r8, asr r2
 8009dd4:	0801a362 	stmdaeq	r1, {r1, r5, r6, r8, r9, sp, pc}
 8009dd8:	08018600 	stmdaeq	r1, {r9, sl, pc}
 8009ddc:	0801860b 	stmdaeq	r1, {r0, r1, r3, r9, sl, pc}
 8009de0:	08018781 	stmdaeq	r1, {r0, r7, r8, r9, sl, pc}
 8009de4:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8009de8:	08018786 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, pc}
 8009dec:	000f4240 	andeq	r4, pc, r0, asr #4
 8009df0:	0801878f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, sl, pc}
 8009df4:	20001050 	andcs	r1, r0, r0, asr r0
 8009df8:	2000125c 	andcs	r1, r0, ip, asr r2

08009dfc <StoreNetwork::SaveDhcp(bool)>:
 8009dfc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009dfe:	2301      	movs	r3, #1
 8009e00:	f88d 1017 	strb.w	r1, [sp, #23]
 8009e04:	2100      	movs	r1, #0
 8009e06:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009e0a:	4805      	ldr	r0, [pc, #20]	; (8009e20 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8009e0c:	9300      	str	r3, [sp, #0]
 8009e0e:	6800      	ldr	r0, [r0, #0]
 8009e10:	f10d 0317 	add.w	r3, sp, #23
 8009e14:	2214      	movs	r2, #20
 8009e16:	f00a fa75 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8009e1a:	b007      	add	sp, #28
 8009e1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009e20:	2000fc68 	andcs	pc, r0, r8, ror #24

08009e24 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8009e24:	f1a0 0004 	sub.w	r0, r0, #4
 8009e28:	e7e8      	b.n	8009dfc <StoreNetwork::SaveDhcp(bool)>
 8009e2a:	bf00      	nop

08009e2c <rdm::device::responder::factorydefaults()>:
 8009e2c:	b508      	push	{r3, lr}
 8009e2e:	4b08      	ldr	r3, [pc, #32]	; (8009e50 <rdm::device::responder::factorydefaults()+0x24>)
 8009e30:	2100      	movs	r1, #0
 8009e32:	6818      	ldr	r0, [r3, #0]
 8009e34:	f000 fe8c 	bl	800ab50 <RemoteConfig::SetDisable(bool)>
 8009e38:	4b06      	ldr	r3, [pc, #24]	; (8009e54 <rdm::device::responder::factorydefaults()+0x28>)
 8009e3a:	210b      	movs	r1, #11
 8009e3c:	6818      	ldr	r0, [r3, #0]
 8009e3e:	f00a fa4f 	bl	80142e0 <ConfigStore::ResetSetList(configstore::Store)>
 8009e42:	4b05      	ldr	r3, [pc, #20]	; (8009e58 <rdm::device::responder::factorydefaults()+0x2c>)
 8009e44:	2101      	movs	r1, #1
 8009e46:	6818      	ldr	r0, [r3, #0]
 8009e48:	f7ff ffd8 	bl	8009dfc <StoreNetwork::SaveDhcp(bool)>
 8009e4c:	bd08      	pop	{r3, pc}
 8009e4e:	bf00      	nop
 8009e50:	20000124 	andcs	r0, r0, r4, lsr #2
 8009e54:	2000fc68 	andcs	pc, r0, r8, ror #24
 8009e58:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>

08009e5c <RDMSoftwareVersion::GetVersion()>:
 8009e5c:	4800      	ldr	r0, [pc, #0]	; (8009e60 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009e5e:	4770      	bx	lr
 8009e60:	08018945 	stmdaeq	r1, {r0, r2, r6, r8, fp, pc}

08009e64 <RDMSoftwareVersion::GetVersionLength()>:
 8009e64:	2003      	movs	r0, #3
 8009e66:	4770      	bx	lr

08009e68 <RDMSoftwareVersion::GetVersionId()>:
 8009e68:	4800      	ldr	r0, [pc, #0]	; (8009e6c <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009e6a:	4770      	bx	lr
 8009e6c:	63a848a4 			; <UNDEFINED> instruction: 0x63a848a4

08009e70 <__assert_func>:
 8009e70:	b507      	push	{r0, r1, r2, lr}
 8009e72:	460c      	mov	r4, r1
 8009e74:	4619      	mov	r1, r3
 8009e76:	b142      	cbz	r2, 8009e8a <__assert_func+0x1a>
 8009e78:	4b05      	ldr	r3, [pc, #20]	; (8009e90 <__assert_func+0x20>)
 8009e7a:	e9cd 3200 	strd	r3, r2, [sp]
 8009e7e:	4602      	mov	r2, r0
 8009e80:	4623      	mov	r3, r4
 8009e82:	4804      	ldr	r0, [pc, #16]	; (8009e94 <__assert_func+0x24>)
 8009e84:	f000 fb00 	bl	800a488 <printf>
 8009e88:	e7fe      	b.n	8009e88 <__assert_func+0x18>
 8009e8a:	4b03      	ldr	r3, [pc, #12]	; (8009e98 <__assert_func+0x28>)
 8009e8c:	461a      	mov	r2, r3
 8009e8e:	e7f4      	b.n	8009e7a <__assert_func+0xa>
 8009e90:	08018949 	stmdaeq	r1, {r0, r3, r6, r8, fp, pc}
 8009e94:	08018956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, pc}
 8009e98:	08019001 	stmdaeq	r1, {r0, ip, pc}

08009e9c <_itostr>:
 8009e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e9e:	0fc7      	lsrs	r7, r0, #31
 8009ea0:	b091      	sub	sp, #68	; 0x44
 8009ea2:	bf18      	it	ne
 8009ea4:	4240      	negne	r0, r0
 8009ea6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009eaa:	b9c8      	cbnz	r0, 8009ee0 <_itostr+0x44>
 8009eac:	2330      	movs	r3, #48	; 0x30
 8009eae:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009eb2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009eb6:	b132      	cbz	r2, 8009ec6 <_itostr+0x2a>
 8009eb8:	4668      	mov	r0, sp
 8009eba:	2530      	movs	r5, #48	; 0x30
 8009ebc:	1ae6      	subs	r6, r4, r3
 8009ebe:	4296      	cmp	r6, r2
 8009ec0:	da01      	bge.n	8009ec6 <_itostr+0x2a>
 8009ec2:	4283      	cmp	r3, r0
 8009ec4:	d81c      	bhi.n	8009f00 <_itostr+0x64>
 8009ec6:	b117      	cbz	r7, 8009ece <_itostr+0x32>
 8009ec8:	222d      	movs	r2, #45	; 0x2d
 8009eca:	f803 2901 	strb.w	r2, [r3], #-1
 8009ece:	3301      	adds	r3, #1
 8009ed0:	1ae0      	subs	r0, r4, r3
 8009ed2:	3901      	subs	r1, #1
 8009ed4:	aa10      	add	r2, sp, #64	; 0x40
 8009ed6:	4293      	cmp	r3, r2
 8009ed8:	d315      	bcc.n	8009f06 <_itostr+0x6a>
 8009eda:	3001      	adds	r0, #1
 8009edc:	b011      	add	sp, #68	; 0x44
 8009ede:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ee0:	4623      	mov	r3, r4
 8009ee2:	250a      	movs	r5, #10
 8009ee4:	46ec      	mov	ip, sp
 8009ee6:	fb90 f6f5 	sdiv	r6, r0, r5
 8009eea:	fb05 0016 	mls	r0, r5, r6, r0
 8009eee:	3030      	adds	r0, #48	; 0x30
 8009ef0:	f803 0901 	strb.w	r0, [r3], #-1
 8009ef4:	4630      	mov	r0, r6
 8009ef6:	2e00      	cmp	r6, #0
 8009ef8:	d0dd      	beq.n	8009eb6 <_itostr+0x1a>
 8009efa:	4563      	cmp	r3, ip
 8009efc:	d1f3      	bne.n	8009ee6 <_itostr+0x4a>
 8009efe:	e7da      	b.n	8009eb6 <_itostr+0x1a>
 8009f00:	f803 5901 	strb.w	r5, [r3], #-1
 8009f04:	e7da      	b.n	8009ebc <_itostr+0x20>
 8009f06:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009f0a:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009f0e:	e7e1      	b.n	8009ed4 <_itostr+0x38>

08009f10 <_xputch>:
 8009f10:	4603      	mov	r3, r0
 8009f12:	b410      	push	{r4}
 8009f14:	4c09      	ldr	r4, [pc, #36]	; (8009f3c <_xputch+0x2c>)
 8009f16:	68da      	ldr	r2, [r3, #12]
 8009f18:	4608      	mov	r0, r1
 8009f1a:	6821      	ldr	r1, [r4, #0]
 8009f1c:	3201      	adds	r2, #1
 8009f1e:	60da      	str	r2, [r3, #12]
 8009f20:	b141      	cbz	r1, 8009f34 <_xputch+0x24>
 8009f22:	691b      	ldr	r3, [r3, #16]
 8009f24:	429a      	cmp	r2, r3
 8009f26:	da02      	bge.n	8009f2e <_xputch+0x1e>
 8009f28:	1c4b      	adds	r3, r1, #1
 8009f2a:	6023      	str	r3, [r4, #0]
 8009f2c:	7008      	strb	r0, [r1, #0]
 8009f2e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009f32:	4770      	bx	lr
 8009f34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009f38:	f00b bb7e 	b.w	8015638 <console_putc>
 8009f3c:	200000f8 	strdcs	r0, [r0], -r8

08009f40 <_format_int>:
 8009f40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f44:	4698      	mov	r8, r3
 8009f46:	b091      	sub	sp, #68	; 0x44
 8009f48:	ea52 0308 	orrs.w	r3, r2, r8
 8009f4c:	4606      	mov	r6, r0
 8009f4e:	4617      	mov	r7, r2
 8009f50:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009f54:	d133      	bne.n	8009fbe <_format_int+0x7e>
 8009f56:	2330      	movs	r3, #48	; 0x30
 8009f58:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009f5c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009f60:	6833      	ldr	r3, [r6, #0]
 8009f62:	07d8      	lsls	r0, r3, #31
 8009f64:	d507      	bpl.n	8009f76 <_format_int+0x36>
 8009f66:	6871      	ldr	r1, [r6, #4]
 8009f68:	466a      	mov	r2, sp
 8009f6a:	2030      	movs	r0, #48	; 0x30
 8009f6c:	1b2f      	subs	r7, r5, r4
 8009f6e:	428f      	cmp	r7, r1
 8009f70:	da01      	bge.n	8009f76 <_format_int+0x36>
 8009f72:	4294      	cmp	r4, r2
 8009f74:	d839      	bhi.n	8009fea <_format_int+0xaa>
 8009f76:	0699      	lsls	r1, r3, #26
 8009f78:	d507      	bpl.n	8009f8a <_format_int+0x4a>
 8009f7a:	68b1      	ldr	r1, [r6, #8]
 8009f7c:	466a      	mov	r2, sp
 8009f7e:	2030      	movs	r0, #48	; 0x30
 8009f80:	1b2f      	subs	r7, r5, r4
 8009f82:	428f      	cmp	r7, r1
 8009f84:	da01      	bge.n	8009f8a <_format_int+0x4a>
 8009f86:	4294      	cmp	r4, r2
 8009f88:	d832      	bhi.n	8009ff0 <_format_int+0xb0>
 8009f8a:	071a      	lsls	r2, r3, #28
 8009f8c:	bf44      	itt	mi
 8009f8e:	222d      	movmi	r2, #45	; 0x2d
 8009f90:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009f94:	065b      	lsls	r3, r3, #25
 8009f96:	d407      	bmi.n	8009fa8 <_format_int+0x68>
 8009f98:	68b2      	ldr	r2, [r6, #8]
 8009f9a:	466b      	mov	r3, sp
 8009f9c:	2120      	movs	r1, #32
 8009f9e:	1b28      	subs	r0, r5, r4
 8009fa0:	4290      	cmp	r0, r2
 8009fa2:	da01      	bge.n	8009fa8 <_format_int+0x68>
 8009fa4:	429c      	cmp	r4, r3
 8009fa6:	d826      	bhi.n	8009ff6 <_format_int+0xb6>
 8009fa8:	1b2d      	subs	r5, r5, r4
 8009faa:	3401      	adds	r4, #1
 8009fac:	ab10      	add	r3, sp, #64	; 0x40
 8009fae:	429c      	cmp	r4, r3
 8009fb0:	d324      	bcc.n	8009ffc <_format_int+0xbc>
 8009fb2:	68b3      	ldr	r3, [r6, #8]
 8009fb4:	42ab      	cmp	r3, r5
 8009fb6:	dc27      	bgt.n	800a008 <_format_int+0xc8>
 8009fb8:	b011      	add	sp, #68	; 0x44
 8009fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009fbe:	462c      	mov	r4, r5
 8009fc0:	46e9      	mov	r9, sp
 8009fc2:	4638      	mov	r0, r7
 8009fc4:	4641      	mov	r1, r8
 8009fc6:	220a      	movs	r2, #10
 8009fc8:	2300      	movs	r3, #0
 8009fca:	f7fe fe65 	bl	8008c98 <__aeabi_uldivmod>
 8009fce:	3230      	adds	r2, #48	; 0x30
 8009fd0:	f804 2901 	strb.w	r2, [r4], #-1
 8009fd4:	463a      	mov	r2, r7
 8009fd6:	4643      	mov	r3, r8
 8009fd8:	2a0a      	cmp	r2, #10
 8009fda:	f173 0300 	sbcs.w	r3, r3, #0
 8009fde:	4607      	mov	r7, r0
 8009fe0:	4688      	mov	r8, r1
 8009fe2:	d3bd      	bcc.n	8009f60 <_format_int+0x20>
 8009fe4:	454c      	cmp	r4, r9
 8009fe6:	d1ec      	bne.n	8009fc2 <_format_int+0x82>
 8009fe8:	e7ba      	b.n	8009f60 <_format_int+0x20>
 8009fea:	f804 0901 	strb.w	r0, [r4], #-1
 8009fee:	e7bd      	b.n	8009f6c <_format_int+0x2c>
 8009ff0:	f804 0901 	strb.w	r0, [r4], #-1
 8009ff4:	e7c4      	b.n	8009f80 <_format_int+0x40>
 8009ff6:	f804 1901 	strb.w	r1, [r4], #-1
 8009ffa:	e7d0      	b.n	8009f9e <_format_int+0x5e>
 8009ffc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a000:	4630      	mov	r0, r6
 800a002:	f7ff ff85 	bl	8009f10 <_xputch>
 800a006:	e7d1      	b.n	8009fac <_format_int+0x6c>
 800a008:	2120      	movs	r1, #32
 800a00a:	4630      	mov	r0, r6
 800a00c:	f7ff ff80 	bl	8009f10 <_xputch>
 800a010:	3501      	adds	r5, #1
 800a012:	e7ce      	b.n	8009fb2 <_format_int+0x72>

0800a014 <_format_hex>:
 800a014:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a016:	b091      	sub	sp, #68	; 0x44
 800a018:	6804      	ldr	r4, [r0, #0]
 800a01a:	4606      	mov	r6, r0
 800a01c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800a020:	bb61      	cbnz	r1, 800a07c <_format_hex+0x68>
 800a022:	2330      	movs	r3, #48	; 0x30
 800a024:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800a028:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800a02c:	07e5      	lsls	r5, r4, #31
 800a02e:	d507      	bpl.n	800a040 <_format_hex+0x2c>
 800a030:	6870      	ldr	r0, [r6, #4]
 800a032:	4669      	mov	r1, sp
 800a034:	2530      	movs	r5, #48	; 0x30
 800a036:	1ad7      	subs	r7, r2, r3
 800a038:	4287      	cmp	r7, r0
 800a03a:	da01      	bge.n	800a040 <_format_hex+0x2c>
 800a03c:	428b      	cmp	r3, r1
 800a03e:	d831      	bhi.n	800a0a4 <_format_hex+0x90>
 800a040:	06a0      	lsls	r0, r4, #26
 800a042:	d507      	bpl.n	800a054 <_format_hex+0x40>
 800a044:	68b0      	ldr	r0, [r6, #8]
 800a046:	4669      	mov	r1, sp
 800a048:	2530      	movs	r5, #48	; 0x30
 800a04a:	1ad7      	subs	r7, r2, r3
 800a04c:	4287      	cmp	r7, r0
 800a04e:	da01      	bge.n	800a054 <_format_hex+0x40>
 800a050:	428b      	cmp	r3, r1
 800a052:	d82a      	bhi.n	800a0aa <_format_hex+0x96>
 800a054:	0661      	lsls	r1, r4, #25
 800a056:	d407      	bmi.n	800a068 <_format_hex+0x54>
 800a058:	68b0      	ldr	r0, [r6, #8]
 800a05a:	4669      	mov	r1, sp
 800a05c:	2420      	movs	r4, #32
 800a05e:	1ad5      	subs	r5, r2, r3
 800a060:	4285      	cmp	r5, r0
 800a062:	da01      	bge.n	800a068 <_format_hex+0x54>
 800a064:	428b      	cmp	r3, r1
 800a066:	d823      	bhi.n	800a0b0 <_format_hex+0x9c>
 800a068:	1ad5      	subs	r5, r2, r3
 800a06a:	1c5c      	adds	r4, r3, #1
 800a06c:	ab10      	add	r3, sp, #64	; 0x40
 800a06e:	429c      	cmp	r4, r3
 800a070:	d321      	bcc.n	800a0b6 <_format_hex+0xa2>
 800a072:	68b3      	ldr	r3, [r6, #8]
 800a074:	429d      	cmp	r5, r3
 800a076:	db24      	blt.n	800a0c2 <_format_hex+0xae>
 800a078:	b011      	add	sp, #68	; 0x44
 800a07a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a07c:	f014 0f02 	tst.w	r4, #2
 800a080:	bf0c      	ite	eq
 800a082:	2757      	moveq	r7, #87	; 0x57
 800a084:	2737      	movne	r7, #55	; 0x37
 800a086:	4613      	mov	r3, r2
 800a088:	466d      	mov	r5, sp
 800a08a:	f001 000f 	and.w	r0, r1, #15
 800a08e:	2809      	cmp	r0, #9
 800a090:	bf94      	ite	ls
 800a092:	3030      	addls	r0, #48	; 0x30
 800a094:	19c0      	addhi	r0, r0, r7
 800a096:	0909      	lsrs	r1, r1, #4
 800a098:	f803 0901 	strb.w	r0, [r3], #-1
 800a09c:	d0c6      	beq.n	800a02c <_format_hex+0x18>
 800a09e:	42ab      	cmp	r3, r5
 800a0a0:	d1f3      	bne.n	800a08a <_format_hex+0x76>
 800a0a2:	e7c3      	b.n	800a02c <_format_hex+0x18>
 800a0a4:	f803 5901 	strb.w	r5, [r3], #-1
 800a0a8:	e7c5      	b.n	800a036 <_format_hex+0x22>
 800a0aa:	f803 5901 	strb.w	r5, [r3], #-1
 800a0ae:	e7cc      	b.n	800a04a <_format_hex+0x36>
 800a0b0:	f803 4901 	strb.w	r4, [r3], #-1
 800a0b4:	e7d3      	b.n	800a05e <_format_hex+0x4a>
 800a0b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a0ba:	4630      	mov	r0, r6
 800a0bc:	f7ff ff28 	bl	8009f10 <_xputch>
 800a0c0:	e7d4      	b.n	800a06c <_format_hex+0x58>
 800a0c2:	2120      	movs	r1, #32
 800a0c4:	4630      	mov	r0, r6
 800a0c6:	f7ff ff23 	bl	8009f10 <_xputch>
 800a0ca:	3501      	adds	r5, #1
 800a0cc:	e7d1      	b.n	800a072 <_format_hex+0x5e>
	...

0800a0d0 <_vprintf>:
 800a0d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0d4:	f04f 0800 	mov.w	r8, #0
 800a0d8:	b096      	sub	sp, #88	; 0x58
 800a0da:	e9cd 8004 	strd	r8, r0, [sp, #16]
 800a0de:	4614      	mov	r4, r2
 800a0e0:	af06      	add	r7, sp, #24
 800a0e2:	780b      	ldrb	r3, [r1, #0]
 800a0e4:	b91b      	cbnz	r3, 800a0ee <_vprintf+0x1e>
 800a0e6:	9804      	ldr	r0, [sp, #16]
 800a0e8:	b016      	add	sp, #88	; 0x58
 800a0ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a0ee:	2b25      	cmp	r3, #37	; 0x25
 800a0f0:	f101 0601 	add.w	r6, r1, #1
 800a0f4:	d005      	beq.n	800a102 <_vprintf+0x32>
 800a0f6:	4619      	mov	r1, r3
 800a0f8:	a801      	add	r0, sp, #4
 800a0fa:	f7ff ff09 	bl	8009f10 <_xputch>
 800a0fe:	4631      	mov	r1, r6
 800a100:	e7ef      	b.n	800a0e2 <_vprintf+0x12>
 800a102:	784b      	ldrb	r3, [r1, #1]
 800a104:	f8cd 800c 	str.w	r8, [sp, #12]
 800a108:	2b30      	cmp	r3, #48	; 0x30
 800a10a:	e9cd 8801 	strd	r8, r8, [sp, #4]
 800a10e:	d129      	bne.n	800a164 <_vprintf+0x94>
 800a110:	2320      	movs	r3, #32
 800a112:	9301      	str	r3, [sp, #4]
 800a114:	1c8e      	adds	r6, r1, #2
 800a116:	2200      	movs	r2, #0
 800a118:	4635      	mov	r5, r6
 800a11a:	4613      	mov	r3, r2
 800a11c:	f04f 0c0a 	mov.w	ip, #10
 800a120:	7829      	ldrb	r1, [r5, #0]
 800a122:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800a126:	2809      	cmp	r0, #9
 800a128:	462e      	mov	r6, r5
 800a12a:	f105 0501 	add.w	r5, r5, #1
 800a12e:	d91d      	bls.n	800a16c <_vprintf+0x9c>
 800a130:	b12a      	cbz	r2, 800a13e <_vprintf+0x6e>
 800a132:	9303      	str	r3, [sp, #12]
 800a134:	b11b      	cbz	r3, 800a13e <_vprintf+0x6e>
 800a136:	9b01      	ldr	r3, [sp, #4]
 800a138:	f043 0310 	orr.w	r3, r3, #16
 800a13c:	9301      	str	r3, [sp, #4]
 800a13e:	292e      	cmp	r1, #46	; 0x2e
 800a140:	d123      	bne.n	800a18a <_vprintf+0xba>
 800a142:	7873      	ldrb	r3, [r6, #1]
 800a144:	2b2a      	cmp	r3, #42	; 0x2a
 800a146:	d015      	beq.n	800a174 <_vprintf+0xa4>
 800a148:	2100      	movs	r1, #0
 800a14a:	1c70      	adds	r0, r6, #1
 800a14c:	460a      	mov	r2, r1
 800a14e:	250a      	movs	r5, #10
 800a150:	7803      	ldrb	r3, [r0, #0]
 800a152:	3b30      	subs	r3, #48	; 0x30
 800a154:	2b09      	cmp	r3, #9
 800a156:	4606      	mov	r6, r0
 800a158:	f100 0001 	add.w	r0, r0, #1
 800a15c:	d958      	bls.n	800a210 <_vprintf+0x140>
 800a15e:	b181      	cbz	r1, 800a182 <_vprintf+0xb2>
 800a160:	9202      	str	r2, [sp, #8]
 800a162:	e00e      	b.n	800a182 <_vprintf+0xb2>
 800a164:	2b2d      	cmp	r3, #45	; 0x2d
 800a166:	d1d6      	bne.n	800a116 <_vprintf+0x46>
 800a168:	2340      	movs	r3, #64	; 0x40
 800a16a:	e7d2      	b.n	800a112 <_vprintf+0x42>
 800a16c:	fb0c 0303 	mla	r3, ip, r3, r0
 800a170:	2201      	movs	r2, #1
 800a172:	e7d5      	b.n	800a120 <_vprintf+0x50>
 800a174:	f854 3b04 	ldr.w	r3, [r4], #4
 800a178:	2b00      	cmp	r3, #0
 800a17a:	bfb8      	it	lt
 800a17c:	425b      	neglt	r3, r3
 800a17e:	3602      	adds	r6, #2
 800a180:	9302      	str	r3, [sp, #8]
 800a182:	9b01      	ldr	r3, [sp, #4]
 800a184:	f043 0301 	orr.w	r3, r3, #1
 800a188:	9301      	str	r3, [sp, #4]
 800a18a:	7833      	ldrb	r3, [r6, #0]
 800a18c:	2b6c      	cmp	r3, #108	; 0x6c
 800a18e:	bf04      	itt	eq
 800a190:	3601      	addeq	r6, #1
 800a192:	9b01      	ldreq	r3, [sp, #4]
 800a194:	7831      	ldrb	r1, [r6, #0]
 800a196:	bf04      	itt	eq
 800a198:	f043 0304 	orreq.w	r3, r3, #4
 800a19c:	9301      	streq	r3, [sp, #4]
 800a19e:	2958      	cmp	r1, #88	; 0x58
 800a1a0:	f000 8169 	beq.w	800a476 <_vprintf+0x3a6>
 800a1a4:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800a1a8:	b2da      	uxtb	r2, r3
 800a1aa:	2a15      	cmp	r2, #21
 800a1ac:	d8a4      	bhi.n	800a0f8 <_vprintf+0x28>
 800a1ae:	2b15      	cmp	r3, #21
 800a1b0:	d8a2      	bhi.n	800a0f8 <_vprintf+0x28>
 800a1b2:	a201      	add	r2, pc, #4	; (adr r2, 800a1b8 <_vprintf+0xe8>)
 800a1b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a1b8:	0800a219 	stmdaeq	r0, {r0, r3, r4, r9, sp, pc}
 800a1bc:	0800a22b 	stmdaeq	r0, {r0, r1, r3, r5, r9, sp, pc}
 800a1c0:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1c4:	0800a261 	stmdaeq	r0, {r0, r5, r6, r9, sp, pc}
 800a1c8:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1cc:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1d0:	0800a22b 	stmdaeq	r0, {r0, r1, r3, r5, r9, sp, pc}
 800a1d4:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1d8:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1dc:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1e0:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1e4:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1e8:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1ec:	0800a3b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sp, pc}
 800a1f0:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1f4:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a1f8:	0800a3e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sp, pc}
 800a1fc:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a200:	0800a457 	stmdaeq	r0, {r0, r1, r2, r4, r6, sl, sp, pc}
 800a204:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a208:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 800a20c:	0800a47f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, sl, sp, pc}
 800a210:	fb05 3202 	mla	r2, r5, r2, r3
 800a214:	2101      	movs	r1, #1
 800a216:	e79b      	b.n	800a150 <_vprintf+0x80>
 800a218:	4625      	mov	r5, r4
 800a21a:	a801      	add	r0, sp, #4
 800a21c:	f855 1b04 	ldr.w	r1, [r5], #4
 800a220:	f7ff fe76 	bl	8009f10 <_xputch>
 800a224:	3601      	adds	r6, #1
 800a226:	462c      	mov	r4, r5
 800a228:	e769      	b.n	800a0fe <_vprintf+0x2e>
 800a22a:	9901      	ldr	r1, [sp, #4]
 800a22c:	074d      	lsls	r5, r1, #29
 800a22e:	bf4b      	itete	mi
 800a230:	3407      	addmi	r4, #7
 800a232:	4625      	movpl	r5, r4
 800a234:	f024 0407 	bicmi.w	r4, r4, #7
 800a238:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800a23c:	bf45      	ittet	mi
 800a23e:	6863      	ldrmi	r3, [r4, #4]
 800a240:	4625      	movmi	r5, r4
 800a242:	17d3      	asrpl	r3, r2, #31
 800a244:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800a248:	2b00      	cmp	r3, #0
 800a24a:	da05      	bge.n	800a258 <_vprintf+0x188>
 800a24c:	f041 0108 	orr.w	r1, r1, #8
 800a250:	4252      	negs	r2, r2
 800a252:	9101      	str	r1, [sp, #4]
 800a254:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a258:	a801      	add	r0, sp, #4
 800a25a:	f7ff fe71 	bl	8009f40 <_format_int>
 800a25e:	e7e1      	b.n	800a224 <_vprintf+0x154>
 800a260:	3407      	adds	r4, #7
 800a262:	f024 0507 	bic.w	r5, r4, #7
 800a266:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800a26a:	f7fe fcc5 	bl	8008bf8 <__aeabi_d2f>
 800a26e:	9b01      	ldr	r3, [sp, #4]
 800a270:	ee07 0a90 	vmov	s15, r0
 800a274:	07dc      	lsls	r4, r3, #31
 800a276:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a27a:	bf4c      	ite	mi
 800a27c:	9c02      	ldrmi	r4, [sp, #8]
 800a27e:	2406      	movpl	r4, #6
 800a280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a284:	bf48      	it	mi
 800a286:	eef1 7a67 	vnegmi.f32	s15, s15
 800a28a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a28e:	bf4a      	itet	mi
 800a290:	f10d 0a19 	addmi.w	sl, sp, #25
 800a294:	46ba      	movpl	sl, r7
 800a296:	232d      	movmi	r3, #45	; 0x2d
 800a298:	ee17 0a10 	vmov	r0, s14
 800a29c:	f04f 0200 	mov.w	r2, #0
 800a2a0:	4651      	mov	r1, sl
 800a2a2:	bf48      	it	mi
 800a2a4:	f88d 3018 	strbmi.w	r3, [sp, #24]
 800a2a8:	f7ff fdf8 	bl	8009e9c <_itostr>
 800a2ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a2b0:	232e      	movs	r3, #46	; 0x2e
 800a2b2:	f80a 3000 	strb.w	r3, [sl, r0]
 800a2b6:	eb0a 0900 	add.w	r9, sl, r0
 800a2ba:	230a      	movs	r3, #10
 800a2bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800a2c0:	1c62      	adds	r2, r4, #1
 800a2c2:	f109 0901 	add.w	r9, r9, #1
 800a2c6:	4619      	mov	r1, r3
 800a2c8:	2c00      	cmp	r4, #0
 800a2ca:	dc3d      	bgt.n	800a348 <_vprintf+0x278>
 800a2cc:	ee07 3a10 	vmov	s14, r3
 800a2d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a2d4:	4649      	mov	r1, r9
 800a2d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a2da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2de:	ee17 0a90 	vmov	r0, s15
 800a2e2:	f7ff fddb 	bl	8009e9c <_itostr>
 800a2e6:	4448      	add	r0, r9
 800a2e8:	1bc0      	subs	r0, r0, r7
 800a2ea:	1e44      	subs	r4, r0, #1
 800a2ec:	193a      	adds	r2, r7, r4
 800a2ee:	5d3b      	ldrb	r3, [r7, r4]
 800a2f0:	2b34      	cmp	r3, #52	; 0x34
 800a2f2:	d911      	bls.n	800a318 <_vprintf+0x248>
 800a2f4:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800a2f8:	292e      	cmp	r1, #46	; 0x2e
 800a2fa:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800a2fe:	d029      	beq.n	800a354 <_vprintf+0x284>
 800a300:	469c      	mov	ip, r3
 800a302:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800a306:	4663      	mov	r3, ip
 800a308:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800a30c:	2939      	cmp	r1, #57	; 0x39
 800a30e:	d01e      	beq.n	800a34e <_vprintf+0x27e>
 800a310:	292e      	cmp	r1, #46	; 0x2e
 800a312:	d01f      	beq.n	800a354 <_vprintf+0x284>
 800a314:	3101      	adds	r1, #1
 800a316:	7019      	strb	r1, [r3, #0]
 800a318:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800a31c:	446b      	add	r3, sp
 800a31e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800a322:	2b2e      	cmp	r3, #46	; 0x2e
 800a324:	bf08      	it	eq
 800a326:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800a32a:	46a1      	mov	r9, r4
 800a32c:	9b03      	ldr	r3, [sp, #12]
 800a32e:	4599      	cmp	r9, r3
 800a330:	db3b      	blt.n	800a3aa <_vprintf+0x2da>
 800a332:	46b9      	mov	r9, r7
 800a334:	2c00      	cmp	r4, #0
 800a336:	f77f af75 	ble.w	800a224 <_vprintf+0x154>
 800a33a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800a33e:	a801      	add	r0, sp, #4
 800a340:	f7ff fde6 	bl	8009f10 <_xputch>
 800a344:	3c01      	subs	r4, #1
 800a346:	e7f5      	b.n	800a334 <_vprintf+0x264>
 800a348:	434b      	muls	r3, r1
 800a34a:	3c01      	subs	r4, #1
 800a34c:	e7bc      	b.n	800a2c8 <_vprintf+0x1f8>
 800a34e:	f88c e001 	strb.w	lr, [ip, #1]
 800a352:	e7d8      	b.n	800a306 <_vprintf+0x236>
 800a354:	3b01      	subs	r3, #1
 800a356:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800a35a:	7819      	ldrb	r1, [r3, #0]
 800a35c:	2939      	cmp	r1, #57	; 0x39
 800a35e:	d112      	bne.n	800a386 <_vprintf+0x2b6>
 800a360:	42bb      	cmp	r3, r7
 800a362:	d20d      	bcs.n	800a380 <_vprintf+0x2b0>
 800a364:	1c5c      	adds	r4, r3, #1
 800a366:	1c99      	adds	r1, r3, #2
 800a368:	428c      	cmp	r4, r1
 800a36a:	eba2 0203 	sub.w	r2, r2, r3
 800a36e:	d913      	bls.n	800a398 <_vprintf+0x2c8>
 800a370:	4619      	mov	r1, r3
 800a372:	441a      	add	r2, r3
 800a374:	428a      	cmp	r2, r1
 800a376:	d10b      	bne.n	800a390 <_vprintf+0x2c0>
 800a378:	2231      	movs	r2, #49	; 0x31
 800a37a:	705a      	strb	r2, [r3, #1]
 800a37c:	4604      	mov	r4, r0
 800a37e:	e7cb      	b.n	800a318 <_vprintf+0x248>
 800a380:	f803 c901 	strb.w	ip, [r3], #-1
 800a384:	e7e9      	b.n	800a35a <_vprintf+0x28a>
 800a386:	42bb      	cmp	r3, r7
 800a388:	d3ec      	bcc.n	800a364 <_vprintf+0x294>
 800a38a:	292d      	cmp	r1, #45	; 0x2d
 800a38c:	d0ea      	beq.n	800a364 <_vprintf+0x294>
 800a38e:	e7c1      	b.n	800a314 <_vprintf+0x244>
 800a390:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a394:	704c      	strb	r4, [r1, #1]
 800a396:	e7ed      	b.n	800a374 <_vprintf+0x2a4>
 800a398:	4414      	add	r4, r2
 800a39a:	440a      	add	r2, r1
 800a39c:	428a      	cmp	r2, r1
 800a39e:	d0eb      	beq.n	800a378 <_vprintf+0x2a8>
 800a3a0:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800a3a4:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800a3a8:	e7f8      	b.n	800a39c <_vprintf+0x2cc>
 800a3aa:	2120      	movs	r1, #32
 800a3ac:	a801      	add	r0, sp, #4
 800a3ae:	f7ff fdaf 	bl	8009f10 <_xputch>
 800a3b2:	f109 0901 	add.w	r9, r9, #1
 800a3b6:	e7b9      	b.n	800a32c <_vprintf+0x25c>
 800a3b8:	4625      	mov	r5, r4
 800a3ba:	2308      	movs	r3, #8
 800a3bc:	f855 4b04 	ldr.w	r4, [r5], #4
 800a3c0:	9303      	str	r3, [sp, #12]
 800a3c2:	2130      	movs	r1, #48	; 0x30
 800a3c4:	2320      	movs	r3, #32
 800a3c6:	a801      	add	r0, sp, #4
 800a3c8:	9301      	str	r3, [sp, #4]
 800a3ca:	f7ff fda1 	bl	8009f10 <_xputch>
 800a3ce:	2178      	movs	r1, #120	; 0x78
 800a3d0:	a801      	add	r0, sp, #4
 800a3d2:	f7ff fd9d 	bl	8009f10 <_xputch>
 800a3d6:	4621      	mov	r1, r4
 800a3d8:	a801      	add	r0, sp, #4
 800a3da:	f7ff fe1b 	bl	800a014 <_format_hex>
 800a3de:	e721      	b.n	800a224 <_vprintf+0x154>
 800a3e0:	4625      	mov	r5, r4
 800a3e2:	2400      	movs	r4, #0
 800a3e4:	f855 9b04 	ldr.w	r9, [r5], #4
 800a3e8:	f819 3004 	ldrb.w	r3, [r9, r4]
 800a3ec:	b993      	cbnz	r3, 800a414 <_vprintf+0x344>
 800a3ee:	9b01      	ldr	r3, [sp, #4]
 800a3f0:	07d9      	lsls	r1, r3, #31
 800a3f2:	d503      	bpl.n	800a3fc <_vprintf+0x32c>
 800a3f4:	9b02      	ldr	r3, [sp, #8]
 800a3f6:	429c      	cmp	r4, r3
 800a3f8:	bfa8      	it	ge
 800a3fa:	461c      	movge	r4, r3
 800a3fc:	9b01      	ldr	r3, [sp, #4]
 800a3fe:	065a      	lsls	r2, r3, #25
 800a400:	f104 0a01 	add.w	sl, r4, #1
 800a404:	d403      	bmi.n	800a40e <_vprintf+0x33e>
 800a406:	9b03      	ldr	r3, [sp, #12]
 800a408:	429c      	cmp	r4, r3
 800a40a:	db05      	blt.n	800a418 <_vprintf+0x348>
 800a40c:	4654      	mov	r4, sl
 800a40e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a412:	e00d      	b.n	800a430 <_vprintf+0x360>
 800a414:	3401      	adds	r4, #1
 800a416:	e7e7      	b.n	800a3e8 <_vprintf+0x318>
 800a418:	2120      	movs	r1, #32
 800a41a:	a801      	add	r0, sp, #4
 800a41c:	f7ff fd78 	bl	8009f10 <_xputch>
 800a420:	4654      	mov	r4, sl
 800a422:	e7eb      	b.n	800a3fc <_vprintf+0x32c>
 800a424:	a801      	add	r0, sp, #4
 800a426:	f7ff fd73 	bl	8009f10 <_xputch>
 800a42a:	9b02      	ldr	r3, [sp, #8]
 800a42c:	3b01      	subs	r3, #1
 800a42e:	9302      	str	r3, [sp, #8]
 800a430:	9b01      	ldr	r3, [sp, #4]
 800a432:	07db      	lsls	r3, r3, #31
 800a434:	d501      	bpl.n	800a43a <_vprintf+0x36a>
 800a436:	9b02      	ldr	r3, [sp, #8]
 800a438:	b11b      	cbz	r3, 800a442 <_vprintf+0x372>
 800a43a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800a43e:	2900      	cmp	r1, #0
 800a440:	d1f0      	bne.n	800a424 <_vprintf+0x354>
 800a442:	9b03      	ldr	r3, [sp, #12]
 800a444:	429c      	cmp	r4, r3
 800a446:	f6bf aeed 	bge.w	800a224 <_vprintf+0x154>
 800a44a:	2120      	movs	r1, #32
 800a44c:	a801      	add	r0, sp, #4
 800a44e:	f7ff fd5f 	bl	8009f10 <_xputch>
 800a452:	3401      	adds	r4, #1
 800a454:	e7f5      	b.n	800a442 <_vprintf+0x372>
 800a456:	9b01      	ldr	r3, [sp, #4]
 800a458:	f013 0304 	ands.w	r3, r3, #4
 800a45c:	bf1d      	ittte	ne
 800a45e:	3407      	addne	r4, #7
 800a460:	f024 0407 	bicne.w	r4, r4, #7
 800a464:	4625      	movne	r5, r4
 800a466:	4625      	moveq	r5, r4
 800a468:	bf1a      	itte	ne
 800a46a:	f855 2b08 	ldrne.w	r2, [r5], #8
 800a46e:	6863      	ldrne	r3, [r4, #4]
 800a470:	f855 2b04 	ldreq.w	r2, [r5], #4
 800a474:	e6f0      	b.n	800a258 <_vprintf+0x188>
 800a476:	9b01      	ldr	r3, [sp, #4]
 800a478:	f043 0302 	orr.w	r3, r3, #2
 800a47c:	9301      	str	r3, [sp, #4]
 800a47e:	4625      	mov	r5, r4
 800a480:	f855 1b04 	ldr.w	r1, [r5], #4
 800a484:	e7a8      	b.n	800a3d8 <_vprintf+0x308>
 800a486:	bf00      	nop

0800a488 <printf>:
 800a488:	b40f      	push	{r0, r1, r2, r3}
 800a48a:	b507      	push	{r0, r1, r2, lr}
 800a48c:	aa04      	add	r2, sp, #16
 800a48e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a492:	f852 1b04 	ldr.w	r1, [r2], #4
 800a496:	9201      	str	r2, [sp, #4]
 800a498:	f7ff fe1a 	bl	800a0d0 <_vprintf>
 800a49c:	b003      	add	sp, #12
 800a49e:	f85d eb04 	ldr.w	lr, [sp], #4
 800a4a2:	b004      	add	sp, #16
 800a4a4:	4770      	bx	lr
	...

0800a4a8 <sprintf>:
 800a4a8:	b40e      	push	{r1, r2, r3}
 800a4aa:	b517      	push	{r0, r1, r2, r4, lr}
 800a4ac:	4c09      	ldr	r4, [pc, #36]	; (800a4d4 <sprintf+0x2c>)
 800a4ae:	aa05      	add	r2, sp, #20
 800a4b0:	6020      	str	r0, [r4, #0]
 800a4b2:	f852 1b04 	ldr.w	r1, [r2], #4
 800a4b6:	9201      	str	r2, [sp, #4]
 800a4b8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a4bc:	f7ff fe08 	bl	800a0d0 <_vprintf>
 800a4c0:	6822      	ldr	r2, [r4, #0]
 800a4c2:	2300      	movs	r3, #0
 800a4c4:	7013      	strb	r3, [r2, #0]
 800a4c6:	6023      	str	r3, [r4, #0]
 800a4c8:	b003      	add	sp, #12
 800a4ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4ce:	b003      	add	sp, #12
 800a4d0:	4770      	bx	lr
 800a4d2:	bf00      	nop
 800a4d4:	200000f8 	strdcs	r0, [r0], -r8

0800a4d8 <snprintf>:
 800a4d8:	b40c      	push	{r2, r3}
 800a4da:	b513      	push	{r0, r1, r4, lr}
 800a4dc:	4c09      	ldr	r4, [pc, #36]	; (800a504 <snprintf+0x2c>)
 800a4de:	aa04      	add	r2, sp, #16
 800a4e0:	460b      	mov	r3, r1
 800a4e2:	6020      	str	r0, [r4, #0]
 800a4e4:	f852 1b04 	ldr.w	r1, [r2], #4
 800a4e8:	9201      	str	r2, [sp, #4]
 800a4ea:	4618      	mov	r0, r3
 800a4ec:	f7ff fdf0 	bl	800a0d0 <_vprintf>
 800a4f0:	6822      	ldr	r2, [r4, #0]
 800a4f2:	2300      	movs	r3, #0
 800a4f4:	7013      	strb	r3, [r2, #0]
 800a4f6:	6023      	str	r3, [r4, #0]
 800a4f8:	b002      	add	sp, #8
 800a4fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4fe:	b002      	add	sp, #8
 800a500:	4770      	bx	lr
 800a502:	bf00      	nop
 800a504:	200000f8 	strdcs	r0, [r0], -r8

0800a508 <vsnprintf>:
 800a508:	b538      	push	{r3, r4, r5, lr}
 800a50a:	4c06      	ldr	r4, [pc, #24]	; (800a524 <vsnprintf+0x1c>)
 800a50c:	4605      	mov	r5, r0
 800a50e:	4608      	mov	r0, r1
 800a510:	4611      	mov	r1, r2
 800a512:	461a      	mov	r2, r3
 800a514:	6025      	str	r5, [r4, #0]
 800a516:	f7ff fddb 	bl	800a0d0 <_vprintf>
 800a51a:	6822      	ldr	r2, [r4, #0]
 800a51c:	2300      	movs	r3, #0
 800a51e:	7013      	strb	r3, [r2, #0]
 800a520:	6023      	str	r3, [r4, #0]
 800a522:	bd38      	pop	{r3, r4, r5, pc}
 800a524:	200000f8 	strdcs	r0, [r0], -r8

0800a528 <__udivmoddi4>:
 800a528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a52c:	9e08      	ldr	r6, [sp, #32]
 800a52e:	460d      	mov	r5, r1
 800a530:	4604      	mov	r4, r0
 800a532:	460f      	mov	r7, r1
 800a534:	2b00      	cmp	r3, #0
 800a536:	d14a      	bne.n	800a5ce <__udivmoddi4+0xa6>
 800a538:	428a      	cmp	r2, r1
 800a53a:	4694      	mov	ip, r2
 800a53c:	d965      	bls.n	800a60a <__udivmoddi4+0xe2>
 800a53e:	fab2 f382 	clz	r3, r2
 800a542:	b143      	cbz	r3, 800a556 <__udivmoddi4+0x2e>
 800a544:	fa02 fc03 	lsl.w	ip, r2, r3
 800a548:	f1c3 0220 	rsb	r2, r3, #32
 800a54c:	409f      	lsls	r7, r3
 800a54e:	fa20 f202 	lsr.w	r2, r0, r2
 800a552:	4317      	orrs	r7, r2
 800a554:	409c      	lsls	r4, r3
 800a556:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800a55a:	fa1f f58c 	uxth.w	r5, ip
 800a55e:	fbb7 f1fe 	udiv	r1, r7, lr
 800a562:	0c22      	lsrs	r2, r4, #16
 800a564:	fb0e 7711 	mls	r7, lr, r1, r7
 800a568:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800a56c:	fb01 f005 	mul.w	r0, r1, r5
 800a570:	4290      	cmp	r0, r2
 800a572:	d90a      	bls.n	800a58a <__udivmoddi4+0x62>
 800a574:	eb1c 0202 	adds.w	r2, ip, r2
 800a578:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 800a57c:	f080 811c 	bcs.w	800a7b8 <__udivmoddi4+0x290>
 800a580:	4290      	cmp	r0, r2
 800a582:	f240 8119 	bls.w	800a7b8 <__udivmoddi4+0x290>
 800a586:	3902      	subs	r1, #2
 800a588:	4462      	add	r2, ip
 800a58a:	1a12      	subs	r2, r2, r0
 800a58c:	b2a4      	uxth	r4, r4
 800a58e:	fbb2 f0fe 	udiv	r0, r2, lr
 800a592:	fb0e 2210 	mls	r2, lr, r0, r2
 800a596:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a59a:	fb00 f505 	mul.w	r5, r0, r5
 800a59e:	42a5      	cmp	r5, r4
 800a5a0:	d90a      	bls.n	800a5b8 <__udivmoddi4+0x90>
 800a5a2:	eb1c 0404 	adds.w	r4, ip, r4
 800a5a6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a5aa:	f080 8107 	bcs.w	800a7bc <__udivmoddi4+0x294>
 800a5ae:	42a5      	cmp	r5, r4
 800a5b0:	f240 8104 	bls.w	800a7bc <__udivmoddi4+0x294>
 800a5b4:	4464      	add	r4, ip
 800a5b6:	3802      	subs	r0, #2
 800a5b8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800a5bc:	1b64      	subs	r4, r4, r5
 800a5be:	2100      	movs	r1, #0
 800a5c0:	b11e      	cbz	r6, 800a5ca <__udivmoddi4+0xa2>
 800a5c2:	40dc      	lsrs	r4, r3
 800a5c4:	2300      	movs	r3, #0
 800a5c6:	e9c6 4300 	strd	r4, r3, [r6]
 800a5ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5ce:	428b      	cmp	r3, r1
 800a5d0:	d908      	bls.n	800a5e4 <__udivmoddi4+0xbc>
 800a5d2:	2e00      	cmp	r6, #0
 800a5d4:	f000 80ed 	beq.w	800a7b2 <__udivmoddi4+0x28a>
 800a5d8:	2100      	movs	r1, #0
 800a5da:	e9c6 0500 	strd	r0, r5, [r6]
 800a5de:	4608      	mov	r0, r1
 800a5e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5e4:	fab3 f183 	clz	r1, r3
 800a5e8:	2900      	cmp	r1, #0
 800a5ea:	d149      	bne.n	800a680 <__udivmoddi4+0x158>
 800a5ec:	42ab      	cmp	r3, r5
 800a5ee:	d302      	bcc.n	800a5f6 <__udivmoddi4+0xce>
 800a5f0:	4282      	cmp	r2, r0
 800a5f2:	f200 80f8 	bhi.w	800a7e6 <__udivmoddi4+0x2be>
 800a5f6:	1a84      	subs	r4, r0, r2
 800a5f8:	eb65 0203 	sbc.w	r2, r5, r3
 800a5fc:	2001      	movs	r0, #1
 800a5fe:	4617      	mov	r7, r2
 800a600:	2e00      	cmp	r6, #0
 800a602:	d0e2      	beq.n	800a5ca <__udivmoddi4+0xa2>
 800a604:	e9c6 4700 	strd	r4, r7, [r6]
 800a608:	e7df      	b.n	800a5ca <__udivmoddi4+0xa2>
 800a60a:	b902      	cbnz	r2, 800a60e <__udivmoddi4+0xe6>
 800a60c:	deff      	udf	#255	; 0xff
 800a60e:	fab2 f382 	clz	r3, r2
 800a612:	2b00      	cmp	r3, #0
 800a614:	f040 8090 	bne.w	800a738 <__udivmoddi4+0x210>
 800a618:	1a8a      	subs	r2, r1, r2
 800a61a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a61e:	fa1f fe8c 	uxth.w	lr, ip
 800a622:	2101      	movs	r1, #1
 800a624:	fbb2 f5f7 	udiv	r5, r2, r7
 800a628:	fb07 2015 	mls	r0, r7, r5, r2
 800a62c:	0c22      	lsrs	r2, r4, #16
 800a62e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a632:	fb0e f005 	mul.w	r0, lr, r5
 800a636:	4290      	cmp	r0, r2
 800a638:	d908      	bls.n	800a64c <__udivmoddi4+0x124>
 800a63a:	eb1c 0202 	adds.w	r2, ip, r2
 800a63e:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a642:	d202      	bcs.n	800a64a <__udivmoddi4+0x122>
 800a644:	4290      	cmp	r0, r2
 800a646:	f200 80cb 	bhi.w	800a7e0 <__udivmoddi4+0x2b8>
 800a64a:	4645      	mov	r5, r8
 800a64c:	1a12      	subs	r2, r2, r0
 800a64e:	b2a4      	uxth	r4, r4
 800a650:	fbb2 f0f7 	udiv	r0, r2, r7
 800a654:	fb07 2210 	mls	r2, r7, r0, r2
 800a658:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a65c:	fb0e fe00 	mul.w	lr, lr, r0
 800a660:	45a6      	cmp	lr, r4
 800a662:	d908      	bls.n	800a676 <__udivmoddi4+0x14e>
 800a664:	eb1c 0404 	adds.w	r4, ip, r4
 800a668:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a66c:	d202      	bcs.n	800a674 <__udivmoddi4+0x14c>
 800a66e:	45a6      	cmp	lr, r4
 800a670:	f200 80bb 	bhi.w	800a7ea <__udivmoddi4+0x2c2>
 800a674:	4610      	mov	r0, r2
 800a676:	eba4 040e 	sub.w	r4, r4, lr
 800a67a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800a67e:	e79f      	b.n	800a5c0 <__udivmoddi4+0x98>
 800a680:	f1c1 0720 	rsb	r7, r1, #32
 800a684:	408b      	lsls	r3, r1
 800a686:	fa22 fc07 	lsr.w	ip, r2, r7
 800a68a:	ea4c 0c03 	orr.w	ip, ip, r3
 800a68e:	fa05 f401 	lsl.w	r4, r5, r1
 800a692:	fa20 f307 	lsr.w	r3, r0, r7
 800a696:	40fd      	lsrs	r5, r7
 800a698:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800a69c:	4323      	orrs	r3, r4
 800a69e:	fbb5 f8f9 	udiv	r8, r5, r9
 800a6a2:	fa1f fe8c 	uxth.w	lr, ip
 800a6a6:	fb09 5518 	mls	r5, r9, r8, r5
 800a6aa:	0c1c      	lsrs	r4, r3, #16
 800a6ac:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a6b0:	fb08 f50e 	mul.w	r5, r8, lr
 800a6b4:	42a5      	cmp	r5, r4
 800a6b6:	fa02 f201 	lsl.w	r2, r2, r1
 800a6ba:	fa00 f001 	lsl.w	r0, r0, r1
 800a6be:	d90b      	bls.n	800a6d8 <__udivmoddi4+0x1b0>
 800a6c0:	eb1c 0404 	adds.w	r4, ip, r4
 800a6c4:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800a6c8:	f080 8088 	bcs.w	800a7dc <__udivmoddi4+0x2b4>
 800a6cc:	42a5      	cmp	r5, r4
 800a6ce:	f240 8085 	bls.w	800a7dc <__udivmoddi4+0x2b4>
 800a6d2:	f1a8 0802 	sub.w	r8, r8, #2
 800a6d6:	4464      	add	r4, ip
 800a6d8:	1b64      	subs	r4, r4, r5
 800a6da:	b29d      	uxth	r5, r3
 800a6dc:	fbb4 f3f9 	udiv	r3, r4, r9
 800a6e0:	fb09 4413 	mls	r4, r9, r3, r4
 800a6e4:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800a6e8:	fb03 fe0e 	mul.w	lr, r3, lr
 800a6ec:	45a6      	cmp	lr, r4
 800a6ee:	d908      	bls.n	800a702 <__udivmoddi4+0x1da>
 800a6f0:	eb1c 0404 	adds.w	r4, ip, r4
 800a6f4:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 800a6f8:	d26c      	bcs.n	800a7d4 <__udivmoddi4+0x2ac>
 800a6fa:	45a6      	cmp	lr, r4
 800a6fc:	d96a      	bls.n	800a7d4 <__udivmoddi4+0x2ac>
 800a6fe:	3b02      	subs	r3, #2
 800a700:	4464      	add	r4, ip
 800a702:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800a706:	fba3 9502 	umull	r9, r5, r3, r2
 800a70a:	eba4 040e 	sub.w	r4, r4, lr
 800a70e:	42ac      	cmp	r4, r5
 800a710:	46c8      	mov	r8, r9
 800a712:	46ae      	mov	lr, r5
 800a714:	d356      	bcc.n	800a7c4 <__udivmoddi4+0x29c>
 800a716:	d053      	beq.n	800a7c0 <__udivmoddi4+0x298>
 800a718:	b156      	cbz	r6, 800a730 <__udivmoddi4+0x208>
 800a71a:	ebb0 0208 	subs.w	r2, r0, r8
 800a71e:	eb64 040e 	sbc.w	r4, r4, lr
 800a722:	fa04 f707 	lsl.w	r7, r4, r7
 800a726:	40ca      	lsrs	r2, r1
 800a728:	40cc      	lsrs	r4, r1
 800a72a:	4317      	orrs	r7, r2
 800a72c:	e9c6 7400 	strd	r7, r4, [r6]
 800a730:	4618      	mov	r0, r3
 800a732:	2100      	movs	r1, #0
 800a734:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a738:	f1c3 0120 	rsb	r1, r3, #32
 800a73c:	fa02 fc03 	lsl.w	ip, r2, r3
 800a740:	fa20 f201 	lsr.w	r2, r0, r1
 800a744:	fa25 f101 	lsr.w	r1, r5, r1
 800a748:	409d      	lsls	r5, r3
 800a74a:	432a      	orrs	r2, r5
 800a74c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a750:	fa1f fe8c 	uxth.w	lr, ip
 800a754:	fbb1 f0f7 	udiv	r0, r1, r7
 800a758:	fb07 1510 	mls	r5, r7, r0, r1
 800a75c:	0c11      	lsrs	r1, r2, #16
 800a75e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800a762:	fb00 f50e 	mul.w	r5, r0, lr
 800a766:	428d      	cmp	r5, r1
 800a768:	fa04 f403 	lsl.w	r4, r4, r3
 800a76c:	d908      	bls.n	800a780 <__udivmoddi4+0x258>
 800a76e:	eb1c 0101 	adds.w	r1, ip, r1
 800a772:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800a776:	d22f      	bcs.n	800a7d8 <__udivmoddi4+0x2b0>
 800a778:	428d      	cmp	r5, r1
 800a77a:	d92d      	bls.n	800a7d8 <__udivmoddi4+0x2b0>
 800a77c:	3802      	subs	r0, #2
 800a77e:	4461      	add	r1, ip
 800a780:	1b49      	subs	r1, r1, r5
 800a782:	b292      	uxth	r2, r2
 800a784:	fbb1 f5f7 	udiv	r5, r1, r7
 800a788:	fb07 1115 	mls	r1, r7, r5, r1
 800a78c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a790:	fb05 f10e 	mul.w	r1, r5, lr
 800a794:	4291      	cmp	r1, r2
 800a796:	d908      	bls.n	800a7aa <__udivmoddi4+0x282>
 800a798:	eb1c 0202 	adds.w	r2, ip, r2
 800a79c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a7a0:	d216      	bcs.n	800a7d0 <__udivmoddi4+0x2a8>
 800a7a2:	4291      	cmp	r1, r2
 800a7a4:	d914      	bls.n	800a7d0 <__udivmoddi4+0x2a8>
 800a7a6:	3d02      	subs	r5, #2
 800a7a8:	4462      	add	r2, ip
 800a7aa:	1a52      	subs	r2, r2, r1
 800a7ac:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800a7b0:	e738      	b.n	800a624 <__udivmoddi4+0xfc>
 800a7b2:	4631      	mov	r1, r6
 800a7b4:	4630      	mov	r0, r6
 800a7b6:	e708      	b.n	800a5ca <__udivmoddi4+0xa2>
 800a7b8:	4639      	mov	r1, r7
 800a7ba:	e6e6      	b.n	800a58a <__udivmoddi4+0x62>
 800a7bc:	4610      	mov	r0, r2
 800a7be:	e6fb      	b.n	800a5b8 <__udivmoddi4+0x90>
 800a7c0:	4548      	cmp	r0, r9
 800a7c2:	d2a9      	bcs.n	800a718 <__udivmoddi4+0x1f0>
 800a7c4:	ebb9 0802 	subs.w	r8, r9, r2
 800a7c8:	eb65 0e0c 	sbc.w	lr, r5, ip
 800a7cc:	3b01      	subs	r3, #1
 800a7ce:	e7a3      	b.n	800a718 <__udivmoddi4+0x1f0>
 800a7d0:	4645      	mov	r5, r8
 800a7d2:	e7ea      	b.n	800a7aa <__udivmoddi4+0x282>
 800a7d4:	462b      	mov	r3, r5
 800a7d6:	e794      	b.n	800a702 <__udivmoddi4+0x1da>
 800a7d8:	4640      	mov	r0, r8
 800a7da:	e7d1      	b.n	800a780 <__udivmoddi4+0x258>
 800a7dc:	46d0      	mov	r8, sl
 800a7de:	e77b      	b.n	800a6d8 <__udivmoddi4+0x1b0>
 800a7e0:	3d02      	subs	r5, #2
 800a7e2:	4462      	add	r2, ip
 800a7e4:	e732      	b.n	800a64c <__udivmoddi4+0x124>
 800a7e6:	4608      	mov	r0, r1
 800a7e8:	e70a      	b.n	800a600 <__udivmoddi4+0xd8>
 800a7ea:	4464      	add	r4, ip
 800a7ec:	3802      	subs	r0, #2
 800a7ee:	e742      	b.n	800a676 <__udivmoddi4+0x14e>

0800a7f0 <RemoteConfig::HandleList()>:
 800a7f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a7f4:	6801      	ldr	r1, [r0, #0]
 800a7f6:	4a2b      	ldr	r2, [pc, #172]	; (800a8a4 <RemoteConfig::HandleList()+0xb4>)
 800a7f8:	4b2b      	ldr	r3, [pc, #172]	; (800a8a8 <RemoteConfig::HandleList()+0xb8>)
 800a7fa:	4e2c      	ldr	r6, [pc, #176]	; (800a8ac <RemoteConfig::HandleList()+0xbc>)
 800a7fc:	681b      	ldr	r3, [r3, #0]
 800a7fe:	6835      	ldr	r5, [r6, #0]
 800a800:	695f      	ldr	r7, [r3, #20]
 800a802:	4604      	mov	r4, r0
 800a804:	2012      	movs	r0, #18
 800a806:	fb00 2201 	mla	r2, r0, r1, r2
 800a80a:	6860      	ldr	r0, [r4, #4]
 800a80c:	4928      	ldr	r1, [pc, #160]	; (800a8b0 <RemoteConfig::HandleList()+0xc0>)
 800a80e:	f04f 080c 	mov.w	r8, #12
 800a812:	fb08 1100 	mla	r1, r8, r0, r1
 800a816:	4827      	ldr	r0, [pc, #156]	; (800a8b4 <RemoteConfig::HandleList()+0xc4>)
 800a818:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a81c:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a820:	b2fb      	uxtb	r3, r7
 800a822:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a826:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a82a:	b089      	sub	sp, #36	; 0x24
 800a82c:	3507      	adds	r5, #7
 800a82e:	0e3f      	lsrs	r7, r7, #24
 800a830:	f1b9 0f00 	cmp.w	r9, #0
 800a834:	d01d      	beq.n	800a872 <RemoteConfig::HandleList()+0x82>
 800a836:	3009      	adds	r0, #9
 800a838:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a83c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a840:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a844:	4a1c      	ldr	r2, [pc, #112]	; (800a8b8 <RemoteConfig::HandleList()+0xc8>)
 800a846:	f8cd c000 	str.w	ip, [sp]
 800a84a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a84e:	4628      	mov	r0, r5
 800a850:	f7ff fe42 	bl	800a4d8 <snprintf>
 800a854:	69e3      	ldr	r3, [r4, #28]
 800a856:	2b05      	cmp	r3, #5
 800a858:	d118      	bne.n	800a88c <RemoteConfig::HandleList()+0x9c>
 800a85a:	f642 1305 	movw	r3, #10501	; 0x2905
 800a85e:	9300      	str	r3, [sp, #0]
 800a860:	69a3      	ldr	r3, [r4, #24]
 800a862:	b282      	uxth	r2, r0
 800a864:	4629      	mov	r1, r5
 800a866:	7d20      	ldrb	r0, [r4, #20]
 800a868:	f007 fb22 	bl	8011eb0 <udp_send>
 800a86c:	b009      	add	sp, #36	; 0x24
 800a86e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a872:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a876:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a87a:	e9cd ce00 	strd	ip, lr, [sp]
 800a87e:	4a0f      	ldr	r2, [pc, #60]	; (800a8bc <RemoteConfig::HandleList()+0xcc>)
 800a880:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a884:	4628      	mov	r0, r5
 800a886:	f7ff fe27 	bl	800a4d8 <snprintf>
 800a88a:	e7e3      	b.n	800a854 <RemoteConfig::HandleList()+0x64>
 800a88c:	2b06      	cmp	r3, #6
 800a88e:	d1ed      	bne.n	800a86c <RemoteConfig::HandleList()+0x7c>
 800a890:	6833      	ldr	r3, [r6, #0]
 800a892:	799b      	ldrb	r3, [r3, #6]
 800a894:	2b2a      	cmp	r3, #42	; 0x2a
 800a896:	d1e9      	bne.n	800a86c <RemoteConfig::HandleList()+0x7c>
 800a898:	f642 1305 	movw	r3, #10501	; 0x2905
 800a89c:	9300      	str	r3, [sp, #0]
 800a89e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a8a2:	e7de      	b.n	800a862 <RemoteConfig::HandleList()+0x72>
 800a8a4:	08018a70 	stmdaeq	r1, {r4, r5, r6, r9, fp, pc}
 800a8a8:	2000f994 	mulcs	r0, r4, r9
 800a8ac:	200000fc 	strdcs	r0, [r0], -ip
 800a8b0:	08018b36 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, fp, pc}
 800a8b4:	20000100 	andcs	r0, r0, r0, lsl #2
 800a8b8:	08018985 	stmdaeq	r1, {r0, r2, r7, r8, fp, pc}
 800a8bc:	0801899e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, fp, pc}

0800a8c0 <RemoteConfig::HandleDisplayGet()>:
 800a8c0:	69c3      	ldr	r3, [r0, #28]
 800a8c2:	2b08      	cmp	r3, #8
 800a8c4:	d11b      	bne.n	800a8fe <RemoteConfig::HandleDisplayGet()+0x3e>
 800a8c6:	4b0e      	ldr	r3, [pc, #56]	; (800a900 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a8c8:	681b      	ldr	r3, [r3, #0]
 800a8ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a8cc:	7c19      	ldrb	r1, [r3, #16]
 800a8ce:	4d0d      	ldr	r5, [pc, #52]	; (800a904 <RemoteConfig::HandleDisplayGet()+0x44>)
 800a8d0:	4a0d      	ldr	r2, [pc, #52]	; (800a908 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a8d2:	4b0e      	ldr	r3, [pc, #56]	; (800a90c <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a8d4:	4604      	mov	r4, r0
 800a8d6:	2900      	cmp	r1, #0
 800a8d8:	bf18      	it	ne
 800a8da:	4613      	movne	r3, r2
 800a8dc:	6828      	ldr	r0, [r5, #0]
 800a8de:	4a0c      	ldr	r2, [pc, #48]	; (800a910 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a8e0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a8e4:	f7ff fdf8 	bl	800a4d8 <snprintf>
 800a8e8:	f642 1305 	movw	r3, #10501	; 0x2905
 800a8ec:	9300      	str	r3, [sp, #0]
 800a8ee:	b282      	uxth	r2, r0
 800a8f0:	69a3      	ldr	r3, [r4, #24]
 800a8f2:	6829      	ldr	r1, [r5, #0]
 800a8f4:	7d20      	ldrb	r0, [r4, #20]
 800a8f6:	f007 fadb 	bl	8011eb0 <udp_send>
 800a8fa:	b003      	add	sp, #12
 800a8fc:	bd30      	pop	{r4, r5, pc}
 800a8fe:	4770      	bx	lr
 800a900:	2000fc90 	mulcs	r0, r0, ip
 800a904:	200000fc 	strdcs	r0, [r0], -ip
 800a908:	080189b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, pc}
 800a90c:	080189b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, pc}
 800a910:	080189bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, pc}

0800a914 <RemoteConfig::HandleTftpGet()>:
 800a914:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a916:	4604      	mov	r4, r0
 800a918:	f000 fda8 	bl	800b46c <RemoteConfig::PlatformHandleTftpGet()>
 800a91c:	69e3      	ldr	r3, [r4, #28]
 800a91e:	2b05      	cmp	r3, #5
 800a920:	d116      	bne.n	800a950 <RemoteConfig::HandleTftpGet()+0x3c>
 800a922:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a926:	4d0b      	ldr	r5, [pc, #44]	; (800a954 <RemoteConfig::HandleTftpGet()+0x40>)
 800a928:	4a0b      	ldr	r2, [pc, #44]	; (800a958 <RemoteConfig::HandleTftpGet()+0x44>)
 800a92a:	4b0c      	ldr	r3, [pc, #48]	; (800a95c <RemoteConfig::HandleTftpGet()+0x48>)
 800a92c:	6828      	ldr	r0, [r5, #0]
 800a92e:	2900      	cmp	r1, #0
 800a930:	bf08      	it	eq
 800a932:	4613      	moveq	r3, r2
 800a934:	4a0a      	ldr	r2, [pc, #40]	; (800a960 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a936:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a93a:	f7ff fdcd 	bl	800a4d8 <snprintf>
 800a93e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a942:	9300      	str	r3, [sp, #0]
 800a944:	b282      	uxth	r2, r0
 800a946:	69a3      	ldr	r3, [r4, #24]
 800a948:	6829      	ldr	r1, [r5, #0]
 800a94a:	7d20      	ldrb	r0, [r4, #20]
 800a94c:	f007 fab0 	bl	8011eb0 <udp_send>
 800a950:	b003      	add	sp, #12
 800a952:	bd30      	pop	{r4, r5, pc}
 800a954:	200000fc 	strdcs	r0, [r0], -ip
 800a958:	080189b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, pc}
 800a95c:	080189b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, pc}
 800a960:	080189c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, fp, pc}

0800a964 <RemoteConfig::HandleVersion()>:
 800a964:	69c3      	ldr	r3, [r0, #28]
 800a966:	2b08      	cmp	r3, #8
 800a968:	d114      	bne.n	800a994 <RemoteConfig::HandleVersion()+0x30>
 800a96a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a96c:	4d0a      	ldr	r5, [pc, #40]	; (800a998 <RemoteConfig::HandleVersion()+0x34>)
 800a96e:	4b0b      	ldr	r3, [pc, #44]	; (800a99c <RemoteConfig::HandleVersion()+0x38>)
 800a970:	4a0b      	ldr	r2, [pc, #44]	; (800a9a0 <RemoteConfig::HandleVersion()+0x3c>)
 800a972:	4604      	mov	r4, r0
 800a974:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a978:	6828      	ldr	r0, [r5, #0]
 800a97a:	f7ff fdad 	bl	800a4d8 <snprintf>
 800a97e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a982:	9300      	str	r3, [sp, #0]
 800a984:	b282      	uxth	r2, r0
 800a986:	69a3      	ldr	r3, [r4, #24]
 800a988:	6829      	ldr	r1, [r5, #0]
 800a98a:	7d20      	ldrb	r0, [r4, #20]
 800a98c:	f007 fa90 	bl	8011eb0 <udp_send>
 800a990:	b003      	add	sp, #12
 800a992:	bd30      	pop	{r4, r5, pc}
 800a994:	4770      	bx	lr
 800a996:	bf00      	nop
 800a998:	200000fc 	strdcs	r0, [r0], -ip
 800a99c:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>
 800a9a0:	080189d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, pc}

0800a9a4 <RemoteConfig::HandleUptime()>:
 800a9a4:	7bc3      	ldrb	r3, [r0, #15]
 800a9a6:	b1e3      	cbz	r3, 800a9e2 <RemoteConfig::HandleUptime()+0x3e>
 800a9a8:	4b0e      	ldr	r3, [pc, #56]	; (800a9e4 <RemoteConfig::HandleUptime()+0x40>)
 800a9aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a9ac:	681a      	ldr	r2, [r3, #0]
 800a9ae:	69c3      	ldr	r3, [r0, #28]
 800a9b0:	2b07      	cmp	r3, #7
 800a9b2:	4604      	mov	r4, r0
 800a9b4:	d113      	bne.n	800a9de <RemoteConfig::HandleUptime()+0x3a>
 800a9b6:	4d0c      	ldr	r5, [pc, #48]	; (800a9e8 <RemoteConfig::HandleUptime()+0x44>)
 800a9b8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a9bc:	6828      	ldr	r0, [r5, #0]
 800a9be:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a9c2:	fbb2 f3f3 	udiv	r3, r2, r3
 800a9c6:	4a09      	ldr	r2, [pc, #36]	; (800a9ec <RemoteConfig::HandleUptime()+0x48>)
 800a9c8:	f7ff fd86 	bl	800a4d8 <snprintf>
 800a9cc:	f642 1305 	movw	r3, #10501	; 0x2905
 800a9d0:	9300      	str	r3, [sp, #0]
 800a9d2:	b282      	uxth	r2, r0
 800a9d4:	69a3      	ldr	r3, [r4, #24]
 800a9d6:	6829      	ldr	r1, [r5, #0]
 800a9d8:	7d20      	ldrb	r0, [r4, #20]
 800a9da:	f007 fa69 	bl	8011eb0 <udp_send>
 800a9de:	b003      	add	sp, #12
 800a9e0:	bd30      	pop	{r4, r5, pc}
 800a9e2:	4770      	bx	lr
 800a9e4:	2000fd94 	mulcs	r0, r4, sp
 800a9e8:	200000fc 	strdcs	r0, [r0], -ip
 800a9ec:	080189db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, pc}

0800a9f0 <Display::Status(Display7SegmentMessage)>:
 800a9f0:	7c43      	ldrb	r3, [r0, #17]
 800a9f2:	b1bb      	cbz	r3, 800aa24 <Display::Status(Display7SegmentMessage)+0x34>
 800a9f4:	b513      	push	{r0, r1, r4, lr}
 800a9f6:	2312      	movs	r3, #18
 800a9f8:	43c9      	mvns	r1, r1
 800a9fa:	4604      	mov	r4, r0
 800a9fc:	f88d 3004 	strb.w	r3, [sp, #4]
 800aa00:	7a00      	ldrb	r0, [r0, #8]
 800aa02:	f88d 1006 	strb.w	r1, [sp, #6]
 800aa06:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800aa0a:	f88d 3005 	strb.w	r3, [sp, #5]
 800aa0e:	f00c fe99 	bl	8017744 <gd32_i2c_set_address>
 800aa12:	68e0      	ldr	r0, [r4, #12]
 800aa14:	f00c fe8e 	bl	8017734 <gd32_i2c_set_baudrate>
 800aa18:	2103      	movs	r1, #3
 800aa1a:	a801      	add	r0, sp, #4
 800aa1c:	f00c fe98 	bl	8017750 <gd32_i2c_write>
 800aa20:	b002      	add	sp, #8
 800aa22:	bd10      	pop	{r4, pc}
 800aa24:	4770      	bx	lr
	...

0800aa28 <RemoteConfig::HandleDisplaySet()>:
 800aa28:	b508      	push	{r3, lr}
 800aa2a:	69c3      	ldr	r3, [r0, #28]
 800aa2c:	2b09      	cmp	r3, #9
 800aa2e:	d10a      	bne.n	800aa46 <RemoteConfig::HandleDisplaySet()+0x1e>
 800aa30:	4b05      	ldr	r3, [pc, #20]	; (800aa48 <RemoteConfig::HandleDisplaySet()+0x20>)
 800aa32:	681b      	ldr	r3, [r3, #0]
 800aa34:	7a59      	ldrb	r1, [r3, #9]
 800aa36:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800aa3a:	4259      	negs	r1, r3
 800aa3c:	4159      	adcs	r1, r3
 800aa3e:	4b03      	ldr	r3, [pc, #12]	; (800aa4c <RemoteConfig::HandleDisplaySet()+0x24>)
 800aa40:	6818      	ldr	r0, [r3, #0]
 800aa42:	f7fe fcc1 	bl	80093c8 <Display::SetSleep(bool)>
 800aa46:	bd08      	pop	{r3, pc}
 800aa48:	200000fc 	strdcs	r0, [r0], -ip
 800aa4c:	2000fc90 	mulcs	r0, r0, ip

0800aa50 <RemoteConfig::HandleTftpSet()>:
 800aa50:	69c3      	ldr	r3, [r0, #28]
 800aa52:	2b06      	cmp	r3, #6
 800aa54:	d127      	bne.n	800aaa6 <RemoteConfig::HandleTftpSet()+0x56>
 800aa56:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa58:	4b13      	ldr	r3, [pc, #76]	; (800aaa8 <RemoteConfig::HandleTftpSet()+0x58>)
 800aa5a:	4d14      	ldr	r5, [pc, #80]	; (800aaac <RemoteConfig::HandleTftpSet()+0x5c>)
 800aa5c:	681b      	ldr	r3, [r3, #0]
 800aa5e:	799b      	ldrb	r3, [r3, #6]
 800aa60:	2b30      	cmp	r3, #48	; 0x30
 800aa62:	bf14      	ite	ne
 800aa64:	2301      	movne	r3, #1
 800aa66:	2300      	moveq	r3, #0
 800aa68:	4604      	mov	r4, r0
 800aa6a:	f880 3020 	strb.w	r3, [r0, #32]
 800aa6e:	6828      	ldr	r0, [r5, #0]
 800aa70:	d012      	beq.n	800aa98 <RemoteConfig::HandleTftpSet()+0x48>
 800aa72:	2100      	movs	r1, #0
 800aa74:	f7fe fca8 	bl	80093c8 <Display::SetSleep(bool)>
 800aa78:	6828      	ldr	r0, [r5, #0]
 800aa7a:	490d      	ldr	r1, [pc, #52]	; (800aab0 <RemoteConfig::HandleTftpSet()+0x60>)
 800aa7c:	9001      	str	r0, [sp, #4]
 800aa7e:	f7fe fc2d 	bl	80092dc <Display::TextStatus(char const*)>
 800aa82:	f244 0171 	movw	r1, #16497	; 0x4071
 800aa86:	9801      	ldr	r0, [sp, #4]
 800aa88:	f7ff ffb2 	bl	800a9f0 <Display::Status(Display7SegmentMessage)>
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	b003      	add	sp, #12
 800aa90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800aa94:	f000 bce2 	b.w	800b45c <RemoteConfig::PlatformHandleTftpSet()>
 800aa98:	4906      	ldr	r1, [pc, #24]	; (800aab4 <RemoteConfig::HandleTftpSet()+0x64>)
 800aa9a:	9001      	str	r0, [sp, #4]
 800aa9c:	f7fe fc1e 	bl	80092dc <Display::TextStatus(char const*)>
 800aaa0:	f248 0171 	movw	r1, #32881	; 0x8071
 800aaa4:	e7ef      	b.n	800aa86 <RemoteConfig::HandleTftpSet()+0x36>
 800aaa6:	4770      	bx	lr
 800aaa8:	200000fc 	strdcs	r0, [r0], -ip
 800aaac:	2000fc90 	mulcs	r0, r0, ip
 800aab0:	080189e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, pc}
 800aab4:	080189fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, fp, pc}

0800aab8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800aab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aabc:	2500      	movs	r5, #0
 800aabe:	461f      	mov	r7, r3
 800aac0:	6083      	str	r3, [r0, #8]
 800aac2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aac6:	4e13      	ldr	r6, [pc, #76]	; (800ab14 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 800aac8:	f8df a050 	ldr.w	sl, [pc, #80]	; 800ab1c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 800aacc:	60c5      	str	r5, [r0, #12]
 800aace:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800aad2:	4b11      	ldr	r3, [pc, #68]	; (800ab18 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 800aad4:	8205      	strh	r5, [r0, #16]
 800aad6:	e9c0 1200 	strd	r1, r2, [r0]
 800aada:	4604      	mov	r4, r0
 800aadc:	6018      	str	r0, [r3, #0]
 800aade:	4689      	mov	r9, r1
 800aae0:	61c5      	str	r5, [r0, #28]
 800aae2:	f880 5020 	strb.w	r5, [r0, #32]
 800aae6:	4631      	mov	r1, r6
 800aae8:	f8da 0000 	ldr.w	r0, [sl]
 800aaec:	4690      	mov	r8, r2
 800aaee:	f007 feb2 	bl	8012856 <Network::MacAddressCopyTo(unsigned char*)>
 800aaf2:	f8da 0000 	ldr.w	r0, [sl]
 800aaf6:	f886 9006 	strb.w	r9, [r6, #6]
 800aafa:	f642 1105 	movw	r1, #10501	; 0x2905
 800aafe:	f886 8007 	strb.w	r8, [r6, #7]
 800ab02:	7237      	strb	r7, [r6, #8]
 800ab04:	7275      	strb	r5, [r6, #9]
 800ab06:	f007 fea0 	bl	801284a <Network::Begin(unsigned short)>
 800ab0a:	6160      	str	r0, [r4, #20]
 800ab0c:	4620      	mov	r0, r4
 800ab0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab12:	bf00      	nop
 800ab14:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab18:	20000124 	andcs	r0, r0, r4, lsr #2
 800ab1c:	2000f994 	mulcs	r0, r4, r9

0800ab20 <RemoteConfig::GetStringNode() const>:
 800ab20:	4b03      	ldr	r3, [pc, #12]	; (800ab30 <RemoteConfig::GetStringNode() const+0x10>)
 800ab22:	7998      	ldrb	r0, [r3, #6]
 800ab24:	4b03      	ldr	r3, [pc, #12]	; (800ab34 <RemoteConfig::GetStringNode() const+0x14>)
 800ab26:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800ab2a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800ab2e:	4770      	bx	lr
 800ab30:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab34:	08018a70 	stmdaeq	r1, {r4, r5, r6, r9, fp, pc}

0800ab38 <RemoteConfig::GetStringOutput() const>:
 800ab38:	4b03      	ldr	r3, [pc, #12]	; (800ab48 <RemoteConfig::GetStringOutput() const+0x10>)
 800ab3a:	79d8      	ldrb	r0, [r3, #7]
 800ab3c:	4b03      	ldr	r3, [pc, #12]	; (800ab4c <RemoteConfig::GetStringOutput() const+0x14>)
 800ab3e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800ab42:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800ab46:	4770      	bx	lr
 800ab48:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab4c:	08018b36 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, fp, pc}

0800ab50 <RemoteConfig::SetDisable(bool)>:
 800ab50:	b538      	push	{r3, r4, r5, lr}
 800ab52:	7b03      	ldrb	r3, [r0, #12]
 800ab54:	4604      	mov	r4, r0
 800ab56:	b161      	cbz	r1, 800ab72 <RemoteConfig::SetDisable(bool)+0x22>
 800ab58:	b953      	cbnz	r3, 800ab70 <RemoteConfig::SetDisable(bool)+0x20>
 800ab5a:	4b0c      	ldr	r3, [pc, #48]	; (800ab8c <RemoteConfig::SetDisable(bool)+0x3c>)
 800ab5c:	f642 1105 	movw	r1, #10501	; 0x2905
 800ab60:	6818      	ldr	r0, [r3, #0]
 800ab62:	f007 fe75 	bl	8012850 <Network::End(unsigned short)>
 800ab66:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ab6a:	6163      	str	r3, [r4, #20]
 800ab6c:	2301      	movs	r3, #1
 800ab6e:	7323      	strb	r3, [r4, #12]
 800ab70:	bd38      	pop	{r3, r4, r5, pc}
 800ab72:	2b00      	cmp	r3, #0
 800ab74:	d0fc      	beq.n	800ab70 <RemoteConfig::SetDisable(bool)+0x20>
 800ab76:	4b05      	ldr	r3, [pc, #20]	; (800ab8c <RemoteConfig::SetDisable(bool)+0x3c>)
 800ab78:	460d      	mov	r5, r1
 800ab7a:	6818      	ldr	r0, [r3, #0]
 800ab7c:	f642 1105 	movw	r1, #10501	; 0x2905
 800ab80:	f007 fe63 	bl	801284a <Network::Begin(unsigned short)>
 800ab84:	7325      	strb	r5, [r4, #12]
 800ab86:	6160      	str	r0, [r4, #20]
 800ab88:	e7f2      	b.n	800ab70 <RemoteConfig::SetDisable(bool)+0x20>
 800ab8a:	bf00      	nop
 800ab8c:	2000f994 	mulcs	r0, r4, r9

0800ab90 <RemoteConfig::SetDisplayName(char const*)>:
 800ab90:	4809      	ldr	r0, [pc, #36]	; (800abb8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800ab92:	b508      	push	{r3, lr}
 800ab94:	2217      	movs	r2, #23
 800ab96:	1e4b      	subs	r3, r1, #1
 800ab98:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ab9c:	b911      	cbnz	r1, 800aba4 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800ab9e:	f00b f93d 	bl	8015e1c <memset>
 800aba2:	e003      	b.n	800abac <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800aba4:	3a01      	subs	r2, #1
 800aba6:	f800 1b01 	strb.w	r1, [r0], #1
 800abaa:	d1f5      	bne.n	800ab98 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800abac:	4b03      	ldr	r3, [pc, #12]	; (800abbc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800abae:	2200      	movs	r2, #0
 800abb0:	f883 2020 	strb.w	r2, [r3, #32]
 800abb4:	bd08      	pop	{r3, pc}
 800abb6:	bf00      	nop
 800abb8:	20000109 	andcs	r0, r0, r9, lsl #2
 800abbc:	20000100 	andcs	r0, r0, r0, lsl #2

0800abc0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800abc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abc2:	4f2a      	ldr	r7, [pc, #168]	; (800ac6c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800abc4:	b085      	sub	sp, #20
 800abc6:	4604      	mov	r4, r0
 800abc8:	4616      	mov	r6, r2
 800abca:	460d      	mov	r5, r1
 800abcc:	b9a9      	cbnz	r1, 800abfa <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800abce:	6839      	ldr	r1, [r7, #0]
 800abd0:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800abd4:	aa03      	add	r2, sp, #12
 800abd6:	3105      	adds	r1, #5
 800abd8:	9303      	str	r3, [sp, #12]
 800abda:	f000 fc15 	bl	800b408 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800abde:	1e03      	subs	r3, r0, #0
 800abe0:	da1b      	bge.n	800ac1a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800abe2:	f642 1305 	movw	r3, #10501	; 0x2905
 800abe6:	9300      	str	r3, [sp, #0]
 800abe8:	4921      	ldr	r1, [pc, #132]	; (800ac70 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800abea:	69a3      	ldr	r3, [r4, #24]
 800abec:	7d20      	ldrb	r0, [r4, #20]
 800abee:	220b      	movs	r2, #11
 800abf0:	f007 f95e 	bl	8011eb0 <udp_send>
 800abf4:	200c      	movs	r0, #12
 800abf6:	b005      	add	sp, #20
 800abf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abfa:	9203      	str	r2, [sp, #12]
 800abfc:	aa03      	add	r2, sp, #12
 800abfe:	6039      	str	r1, [r7, #0]
 800ac00:	f000 fc02 	bl	800b408 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800ac04:	1e03      	subs	r3, r0, #0
 800ac06:	da08      	bge.n	800ac1a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800ac08:	2e0b      	cmp	r6, #11
 800ac0a:	4632      	mov	r2, r6
 800ac0c:	4918      	ldr	r1, [pc, #96]	; (800ac70 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800ac0e:	bf28      	it	cs
 800ac10:	220b      	movcs	r2, #11
 800ac12:	4628      	mov	r0, r5
 800ac14:	f00b f8e0 	bl	8015dd8 <memcpy>
 800ac18:	e7ec      	b.n	800abf4 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800ac1a:	4916      	ldr	r1, [pc, #88]	; (800ac74 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800ac1c:	221c      	movs	r2, #28
 800ac1e:	4353      	muls	r3, r2
 800ac20:	18ca      	adds	r2, r1, r3
 800ac22:	58cb      	ldr	r3, [r1, r3]
 800ac24:	6852      	ldr	r2, [r2, #4]
 800ac26:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800ac2a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ac2e:	07d2      	lsls	r2, r2, #31
 800ac30:	bf48      	it	mi
 800ac32:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800ac36:	a903      	add	r1, sp, #12
 800ac38:	bf48      	it	mi
 800ac3a:	58d3      	ldrmi	r3, [r2, r3]
 800ac3c:	4798      	blx	r3
 800ac3e:	b95d      	cbnz	r5, 800ac58 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800ac40:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac44:	9300      	str	r3, [sp, #0]
 800ac46:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ac4a:	69a3      	ldr	r3, [r4, #24]
 800ac4c:	6839      	ldr	r1, [r7, #0]
 800ac4e:	7d20      	ldrb	r0, [r4, #20]
 800ac50:	f007 f92e 	bl	8011eb0 <udp_send>
 800ac54:	9803      	ldr	r0, [sp, #12]
 800ac56:	e7ce      	b.n	800abf6 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800ac58:	9a03      	ldr	r2, [sp, #12]
 800ac5a:	6839      	ldr	r1, [r7, #0]
 800ac5c:	42b2      	cmp	r2, r6
 800ac5e:	bf28      	it	cs
 800ac60:	4632      	movcs	r2, r6
 800ac62:	4628      	mov	r0, r5
 800ac64:	f00b f8c3 	bl	8015dee <memmove>
 800ac68:	e7f4      	b.n	800ac54 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800ac6a:	bf00      	nop
 800ac6c:	200000fc 	strdcs	r0, [r0], -ip
 800ac70:	08018a0d 	stmdaeq	r1, {r0, r2, r3, r9, fp, pc}
 800ac74:	08018d00 	stmdaeq	r1, {r8, sl, fp, pc}

0800ac78 <RemoteConfig::HandleGetNoParams()>:
 800ac78:	2200      	movs	r2, #0
 800ac7a:	4611      	mov	r1, r2
 800ac7c:	f7ff bfa0 	b.w	800abc0 <RemoteConfig::HandleGet(void*, unsigned int)>

0800ac80 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800ac80:	b500      	push	{lr}
 800ac82:	4a09      	ldr	r2, [pc, #36]	; (800aca8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800ac84:	b08d      	sub	sp, #52	; 0x34
 800ac86:	a803      	add	r0, sp, #12
 800ac88:	9101      	str	r1, [sp, #4]
 800ac8a:	6811      	ldr	r1, [r2, #0]
 800ac8c:	f000 fa18 	bl	800b0c0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ac90:	4906      	ldr	r1, [pc, #24]	; (800acac <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x2c>)
 800ac92:	9b01      	ldr	r3, [sp, #4]
 800ac94:	6809      	ldr	r1, [r1, #0]
 800ac96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ac9a:	a803      	add	r0, sp, #12
 800ac9c:	f000 fb34 	bl	800b308 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800aca0:	b00d      	add	sp, #52	; 0x34
 800aca2:	f85d fb04 	ldr.w	pc, [sp], #4
 800aca6:	bf00      	nop
 800aca8:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>
 800acac:	200000fc 	strdcs	r0, [r0], -ip

0800acb0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800acb0:	b500      	push	{lr}
 800acb2:	4a09      	ldr	r2, [pc, #36]	; (800acd8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800acb4:	b09d      	sub	sp, #116	; 0x74
 800acb6:	a803      	add	r0, sp, #12
 800acb8:	9101      	str	r1, [sp, #4]
 800acba:	6811      	ldr	r1, [r2, #0]
 800acbc:	f008 f8c2 	bl	8012e44 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800acc0:	4906      	ldr	r1, [pc, #24]	; (800acdc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x2c>)
 800acc2:	9b01      	ldr	r3, [sp, #4]
 800acc4:	6809      	ldr	r1, [r1, #0]
 800acc6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800acca:	a803      	add	r0, sp, #12
 800accc:	f008 fa94 	bl	80131f8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800acd0:	b01d      	add	sp, #116	; 0x74
 800acd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800acd6:	bf00      	nop
 800acd8:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>
 800acdc:	200000fc 	strdcs	r0, [r0], -ip

0800ace0 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800ace0:	b500      	push	{lr}
 800ace2:	4a09      	ldr	r2, [pc, #36]	; (800ad08 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800ace4:	b08d      	sub	sp, #52	; 0x34
 800ace6:	a803      	add	r0, sp, #12
 800ace8:	9101      	str	r1, [sp, #4]
 800acea:	6811      	ldr	r1, [r2, #0]
 800acec:	f002 f816 	bl	800cd1c <E131Params::E131Params(E131ParamsStore*)>
 800acf0:	4906      	ldr	r1, [pc, #24]	; (800ad0c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x2c>)
 800acf2:	9b01      	ldr	r3, [sp, #4]
 800acf4:	6809      	ldr	r1, [r1, #0]
 800acf6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800acfa:	a803      	add	r0, sp, #12
 800acfc:	f002 fb04 	bl	800d308 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800ad00:	b00d      	add	sp, #52	; 0x34
 800ad02:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad06:	bf00      	nop
 800ad08:	2000fc80 	andcs	pc, r0, r0, lsl #25
 800ad0c:	200000fc 	strdcs	r0, [r0], -ip

0800ad10 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800ad10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ad12:	4a08      	ldr	r2, [pc, #32]	; (800ad34 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800ad14:	9101      	str	r1, [sp, #4]
 800ad16:	a802      	add	r0, sp, #8
 800ad18:	6811      	ldr	r1, [r2, #0]
 800ad1a:	f003 fe81 	bl	800ea20 <DmxParams::DmxParams(DmxParamsStore*)>
 800ad1e:	4906      	ldr	r1, [pc, #24]	; (800ad38 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800ad20:	9b01      	ldr	r3, [sp, #4]
 800ad22:	6809      	ldr	r1, [r1, #0]
 800ad24:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad28:	a802      	add	r0, sp, #8
 800ad2a:	f003 ff9b 	bl	800ec64 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800ad2e:	b007      	add	sp, #28
 800ad30:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad34:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>
 800ad38:	200000fc 	strdcs	r0, [r0], -ip

0800ad3c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800ad3c:	b500      	push	{lr}
 800ad3e:	4a09      	ldr	r2, [pc, #36]	; (800ad64 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800ad40:	b093      	sub	sp, #76	; 0x4c
 800ad42:	a803      	add	r0, sp, #12
 800ad44:	9101      	str	r1, [sp, #4]
 800ad46:	6811      	ldr	r1, [r2, #0]
 800ad48:	f004 fdc6 	bl	800f8d8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ad4c:	4906      	ldr	r1, [pc, #24]	; (800ad68 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x2c>)
 800ad4e:	9b01      	ldr	r3, [sp, #4]
 800ad50:	6809      	ldr	r1, [r1, #0]
 800ad52:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad56:	a803      	add	r0, sp, #12
 800ad58:	f005 f94a 	bl	800fff0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 800ad5c:	b013      	add	sp, #76	; 0x4c
 800ad5e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad62:	bf00      	nop
 800ad64:	2000fc84 	andcs	pc, r0, r4, lsl #25
 800ad68:	200000fc 	strdcs	r0, [r0], -ip

0800ad6c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800ad6c:	b500      	push	{lr}
 800ad6e:	4a09      	ldr	r2, [pc, #36]	; (800ad94 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800ad70:	b08d      	sub	sp, #52	; 0x34
 800ad72:	a802      	add	r0, sp, #8
 800ad74:	9101      	str	r1, [sp, #4]
 800ad76:	6811      	ldr	r1, [r2, #0]
 800ad78:	f008 ffe4 	bl	8013d44 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ad7c:	4906      	ldr	r1, [pc, #24]	; (800ad98 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x2c>)
 800ad7e:	9b01      	ldr	r3, [sp, #4]
 800ad80:	6809      	ldr	r1, [r1, #0]
 800ad82:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad86:	a802      	add	r0, sp, #8
 800ad88:	f009 f916 	bl	8013fb8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800ad8c:	b00d      	add	sp, #52	; 0x34
 800ad8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad92:	bf00      	nop
 800ad94:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>
 800ad98:	200000fc 	strdcs	r0, [r0], -ip

0800ad9c <RemoteConfig::HandleSet(void*, unsigned int)>:
 800ad9c:	b530      	push	{r4, r5, lr}
 800ad9e:	b085      	sub	sp, #20
 800ada0:	4604      	mov	r4, r0
 800ada2:	9201      	str	r2, [sp, #4]
 800ada4:	b9d1      	cbnz	r1, 800addc <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800ada6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800adaa:	9303      	str	r3, [sp, #12]
 800adac:	4b19      	ldr	r3, [pc, #100]	; (800ae14 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800adae:	6819      	ldr	r1, [r3, #0]
 800adb0:	aa03      	add	r2, sp, #12
 800adb2:	3101      	adds	r1, #1
 800adb4:	f000 fb28 	bl	800b408 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800adb8:	2800      	cmp	r0, #0
 800adba:	db0d      	blt.n	800add8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800adbc:	4b16      	ldr	r3, [pc, #88]	; (800ae18 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 800adbe:	221c      	movs	r2, #28
 800adc0:	fb02 3300 	mla	r3, r2, r0, r3
 800adc4:	68da      	ldr	r2, [r3, #12]
 800adc6:	689b      	ldr	r3, [r3, #8]
 800adc8:	1051      	asrs	r1, r2, #1
 800adca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800adce:	07d2      	lsls	r2, r2, #31
 800add0:	bf44      	itt	mi
 800add2:	5862      	ldrmi	r2, [r4, r1]
 800add4:	58d3      	ldrmi	r3, [r2, r3]
 800add6:	4798      	blx	r3
 800add8:	b005      	add	sp, #20
 800adda:	bd30      	pop	{r4, r5, pc}
 800addc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ade0:	d8fa      	bhi.n	800add8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ade2:	4b0e      	ldr	r3, [pc, #56]	; (800ae1c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800ade4:	781b      	ldrb	r3, [r3, #0]
 800ade6:	460d      	mov	r5, r1
 800ade8:	07d9      	lsls	r1, r3, #31
 800adea:	d50b      	bpl.n	800ae04 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800adec:	782b      	ldrb	r3, [r5, #0]
 800adee:	2b7b      	cmp	r3, #123	; 0x7b
 800adf0:	d108      	bne.n	800ae04 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800adf2:	1e51      	subs	r1, r2, #1
 800adf4:	b289      	uxth	r1, r1
 800adf6:	2200      	movs	r2, #0
 800adf8:	4628      	mov	r0, r5
 800adfa:	f009 feb9 	bl	8014b70 <properties::convert_json_file(char*, unsigned short, bool)>
 800adfe:	1e02      	subs	r2, r0, #0
 800ae00:	ddea      	ble.n	800add8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ae02:	b292      	uxth	r2, r2
 800ae04:	4b03      	ldr	r3, [pc, #12]	; (800ae14 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800ae06:	61e2      	str	r2, [r4, #28]
 800ae08:	601d      	str	r5, [r3, #0]
 800ae0a:	aa01      	add	r2, sp, #4
 800ae0c:	1c69      	adds	r1, r5, #1
 800ae0e:	4620      	mov	r0, r4
 800ae10:	e7d0      	b.n	800adb4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ae12:	bf00      	nop
 800ae14:	200000fc 	strdcs	r0, [r0], -ip
 800ae18:	08018d00 	stmdaeq	r1, {r8, sl, fp, pc}
 800ae1c:	2000fc8c 	andcs	pc, r0, ip, lsl #25

0800ae20 <RemoteConfig::Run()>:
 800ae20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ae24:	7b05      	ldrb	r5, [r0, #12]
 800ae26:	2d00      	cmp	r5, #0
 800ae28:	d156      	bne.n	800aed8 <RemoteConfig::Run()+0xb8>
 800ae2a:	4e45      	ldr	r6, [pc, #276]	; (800af40 <RemoteConfig::Run()+0x120>)
 800ae2c:	4604      	mov	r4, r0
 800ae2e:	f100 0218 	add.w	r2, r0, #24
 800ae32:	f10d 030e 	add.w	r3, sp, #14
 800ae36:	7d00      	ldrb	r0, [r0, #20]
 800ae38:	4631      	mov	r1, r6
 800ae3a:	f007 f813 	bl	8011e64 <udp_recv2>
 800ae3e:	2803      	cmp	r0, #3
 800ae40:	61e0      	str	r0, [r4, #28]
 800ae42:	d949      	bls.n	800aed8 <RemoteConfig::Run()+0xb8>
 800ae44:	1e43      	subs	r3, r0, #1
 800ae46:	6831      	ldr	r1, [r6, #0]
 800ae48:	5cca      	ldrb	r2, [r1, r3]
 800ae4a:	2a0a      	cmp	r2, #10
 800ae4c:	bf18      	it	ne
 800ae4e:	4603      	movne	r3, r0
 800ae50:	61e3      	str	r3, [r4, #28]
 800ae52:	7808      	ldrb	r0, [r1, #0]
 800ae54:	283f      	cmp	r0, #63	; 0x3f
 800ae56:	d137      	bne.n	800aec8 <RemoteConfig::Run()+0xa8>
 800ae58:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 800af58 <RemoteConfig::Run()+0x138>
 800ae5c:	3b01      	subs	r3, #1
 800ae5e:	61e3      	str	r3, [r4, #28]
 800ae60:	462a      	mov	r2, r5
 800ae62:	4667      	mov	r7, ip
 800ae64:	f89c 500e 	ldrb.w	r5, [ip, #14]
 800ae68:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800ae6c:	b16d      	cbz	r5, 800ae8a <RemoteConfig::Run()+0x6a>
 800ae6e:	4283      	cmp	r3, r0
 800ae70:	d80d      	bhi.n	800ae8e <RemoteConfig::Run()+0x6e>
 800ae72:	3201      	adds	r2, #1
 800ae74:	2a09      	cmp	r2, #9
 800ae76:	f10c 0c10 	add.w	ip, ip, #16
 800ae7a:	d1f3      	bne.n	800ae64 <RemoteConfig::Run()+0x44>
 800ae7c:	f642 1305 	movw	r3, #10501	; 0x2905
 800ae80:	9300      	str	r3, [sp, #0]
 800ae82:	69a3      	ldr	r3, [r4, #24]
 800ae84:	492f      	ldr	r1, [pc, #188]	; (800af44 <RemoteConfig::Run()+0x124>)
 800ae86:	2208      	movs	r2, #8
 800ae88:	e04e      	b.n	800af28 <RemoteConfig::Run()+0x108>
 800ae8a:	4283      	cmp	r3, r0
 800ae8c:	d1f1      	bne.n	800ae72 <RemoteConfig::Run()+0x52>
 800ae8e:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800ae92:	460e      	mov	r6, r1
 800ae94:	3d01      	subs	r5, #1
 800ae96:	4408      	add	r0, r1
 800ae98:	4286      	cmp	r6, r0
 800ae9a:	d10b      	bne.n	800aeb4 <RemoteConfig::Run()+0x94>
 800ae9c:	0113      	lsls	r3, r2, #4
 800ae9e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800aea2:	58fb      	ldr	r3, [r7, r3]
 800aea4:	6852      	ldr	r2, [r2, #4]
 800aea6:	1051      	asrs	r1, r2, #1
 800aea8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aeac:	07d2      	lsls	r2, r2, #31
 800aeae:	d408      	bmi.n	800aec2 <RemoteConfig::Run()+0xa2>
 800aeb0:	4798      	blx	r3
 800aeb2:	e011      	b.n	800aed8 <RemoteConfig::Run()+0xb8>
 800aeb4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800aeb8:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800aebc:	45f0      	cmp	r8, lr
 800aebe:	d0eb      	beq.n	800ae98 <RemoteConfig::Run()+0x78>
 800aec0:	e7d7      	b.n	800ae72 <RemoteConfig::Run()+0x52>
 800aec2:	5862      	ldr	r2, [r4, r1]
 800aec4:	58d3      	ldr	r3, [r2, r3]
 800aec6:	e7f3      	b.n	800aeb0 <RemoteConfig::Run()+0x90>
 800aec8:	7b62      	ldrb	r2, [r4, #13]
 800aeca:	b92a      	cbnz	r2, 800aed8 <RemoteConfig::Run()+0xb8>
 800aecc:	2823      	cmp	r0, #35	; 0x23
 800aece:	d106      	bne.n	800aede <RemoteConfig::Run()+0xbe>
 800aed0:	4611      	mov	r1, r2
 800aed2:	4620      	mov	r0, r4
 800aed4:	f7ff ff62 	bl	800ad9c <RemoteConfig::HandleSet(void*, unsigned int)>
 800aed8:	b004      	add	sp, #16
 800aeda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aede:	2821      	cmp	r0, #33	; 0x21
 800aee0:	d1fa      	bne.n	800aed8 <RemoteConfig::Run()+0xb8>
 800aee2:	3b01      	subs	r3, #1
 800aee4:	2b05      	cmp	r3, #5
 800aee6:	61e3      	str	r3, [r4, #28]
 800aee8:	d918      	bls.n	800af1c <RemoteConfig::Run()+0xfc>
 800aeea:	4d17      	ldr	r5, [pc, #92]	; (800af48 <RemoteConfig::Run()+0x128>)
 800aeec:	460a      	mov	r2, r1
 800aeee:	f101 0c05 	add.w	ip, r1, #5
 800aef2:	4608      	mov	r0, r1
 800aef4:	4560      	cmp	r0, ip
 800aef6:	d01b      	beq.n	800af30 <RemoteConfig::Run()+0x110>
 800aef8:	f815 6b01 	ldrb.w	r6, [r5], #1
 800aefc:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800af00:	42b7      	cmp	r7, r6
 800af02:	d0f7      	beq.n	800aef4 <RemoteConfig::Run()+0xd4>
 800af04:	2b08      	cmp	r3, #8
 800af06:	d909      	bls.n	800af1c <RemoteConfig::Run()+0xfc>
 800af08:	4b10      	ldr	r3, [pc, #64]	; (800af4c <RemoteConfig::Run()+0x12c>)
 800af0a:	3108      	adds	r1, #8
 800af0c:	428a      	cmp	r2, r1
 800af0e:	d015      	beq.n	800af3c <RemoteConfig::Run()+0x11c>
 800af10:	f813 0b01 	ldrb.w	r0, [r3], #1
 800af14:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800af18:	4285      	cmp	r5, r0
 800af1a:	d0f7      	beq.n	800af0c <RemoteConfig::Run()+0xec>
 800af1c:	f642 1305 	movw	r3, #10501	; 0x2905
 800af20:	9300      	str	r3, [sp, #0]
 800af22:	69a3      	ldr	r3, [r4, #24]
 800af24:	490a      	ldr	r1, [pc, #40]	; (800af50 <RemoteConfig::Run()+0x130>)
 800af26:	2208      	movs	r2, #8
 800af28:	7d20      	ldrb	r0, [r4, #20]
 800af2a:	f006 ffc1 	bl	8011eb0 <udp_send>
 800af2e:	e7d3      	b.n	800aed8 <RemoteConfig::Run()+0xb8>
 800af30:	2300      	movs	r3, #0
 800af32:	4a08      	ldr	r2, [pc, #32]	; (800af54 <RemoteConfig::Run()+0x134>)
 800af34:	011b      	lsls	r3, r3, #4
 800af36:	4620      	mov	r0, r4
 800af38:	58d3      	ldr	r3, [r2, r3]
 800af3a:	e7b9      	b.n	800aeb0 <RemoteConfig::Run()+0x90>
 800af3c:	2301      	movs	r3, #1
 800af3e:	e7f8      	b.n	800af32 <RemoteConfig::Run()+0x112>
 800af40:	200000fc 	strdcs	r0, [r0], -ip
 800af44:	08018a31 	stmdaeq	r1, {r0, r4, r5, r9, fp, pc}
 800af48:	08018a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, pc}
 800af4c:	08018a1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, fp, pc}
 800af50:	08018a28 	stmdaeq	r1, {r3, r5, r9, fp, pc}
 800af54:	08018c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, pc}
 800af58:	08018bc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, fp, pc}

0800af5c <RemoteConfig::HandleSetRconfig()>:
 800af5c:	b510      	push	{r4, lr}
 800af5e:	4b09      	ldr	r3, [pc, #36]	; (800af84 <RemoteConfig::HandleSetRconfig()+0x28>)
 800af60:	b08a      	sub	sp, #40	; 0x28
 800af62:	4604      	mov	r4, r0
 800af64:	6819      	ldr	r1, [r3, #0]
 800af66:	a801      	add	r0, sp, #4
 800af68:	f000 f8aa 	bl	800b0c0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800af6c:	4b06      	ldr	r3, [pc, #24]	; (800af88 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800af6e:	69e2      	ldr	r2, [r4, #28]
 800af70:	6819      	ldr	r1, [r3, #0]
 800af72:	a801      	add	r0, sp, #4
 800af74:	f000 f8ba 	bl	800b0ec <RemoteConfigParams::Load(char const*, unsigned int)>
 800af78:	4621      	mov	r1, r4
 800af7a:	a801      	add	r0, sp, #4
 800af7c:	f000 f9d1 	bl	800b322 <RemoteConfigParams::Set(RemoteConfig*)>
 800af80:	b00a      	add	sp, #40	; 0x28
 800af82:	bd10      	pop	{r4, pc}
 800af84:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>
 800af88:	200000fc 	strdcs	r0, [r0], -ip

0800af8c <RemoteConfig::HandleSetNetworkTxt()>:
 800af8c:	b510      	push	{r4, lr}
 800af8e:	4b07      	ldr	r3, [pc, #28]	; (800afac <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800af90:	b09a      	sub	sp, #104	; 0x68
 800af92:	6819      	ldr	r1, [r3, #0]
 800af94:	4604      	mov	r4, r0
 800af96:	a801      	add	r0, sp, #4
 800af98:	f007 ff54 	bl	8012e44 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800af9c:	4b04      	ldr	r3, [pc, #16]	; (800afb0 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800af9e:	69e2      	ldr	r2, [r4, #28]
 800afa0:	6819      	ldr	r1, [r3, #0]
 800afa2:	a801      	add	r0, sp, #4
 800afa4:	f007 ff66 	bl	8012e74 <NetworkParams::Load(char const*, unsigned int)>
 800afa8:	b01a      	add	sp, #104	; 0x68
 800afaa:	bd10      	pop	{r4, pc}
 800afac:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>
 800afb0:	200000fc 	strdcs	r0, [r0], -ip

0800afb4 <RemoteConfig::HandleSetE131Txt()>:
 800afb4:	b510      	push	{r4, lr}
 800afb6:	4b07      	ldr	r3, [pc, #28]	; (800afd4 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800afb8:	b08a      	sub	sp, #40	; 0x28
 800afba:	6819      	ldr	r1, [r3, #0]
 800afbc:	4604      	mov	r4, r0
 800afbe:	a801      	add	r0, sp, #4
 800afc0:	f001 feac 	bl	800cd1c <E131Params::E131Params(E131ParamsStore*)>
 800afc4:	4b04      	ldr	r3, [pc, #16]	; (800afd8 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800afc6:	69e2      	ldr	r2, [r4, #28]
 800afc8:	6819      	ldr	r1, [r3, #0]
 800afca:	a801      	add	r0, sp, #4
 800afcc:	f001 fed6 	bl	800cd7c <E131Params::Load(char const*, unsigned int)>
 800afd0:	b00a      	add	sp, #40	; 0x28
 800afd2:	bd10      	pop	{r4, pc}
 800afd4:	2000fc80 	andcs	pc, r0, r0, lsl #25
 800afd8:	200000fc 	strdcs	r0, [r0], -ip

0800afdc <RemoteConfig::HandleSetParamsTxt()>:
 800afdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800afde:	4b07      	ldr	r3, [pc, #28]	; (800affc <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800afe0:	4604      	mov	r4, r0
 800afe2:	6819      	ldr	r1, [r3, #0]
 800afe4:	4668      	mov	r0, sp
 800afe6:	f003 fd1b 	bl	800ea20 <DmxParams::DmxParams(DmxParamsStore*)>
 800afea:	4b05      	ldr	r3, [pc, #20]	; (800b000 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800afec:	69e2      	ldr	r2, [r4, #28]
 800afee:	6819      	ldr	r1, [r3, #0]
 800aff0:	4668      	mov	r0, sp
 800aff2:	f003 fd2d 	bl	800ea50 <DmxParams::Load(char const*, unsigned int)>
 800aff6:	b004      	add	sp, #16
 800aff8:	bd10      	pop	{r4, pc}
 800affa:	bf00      	nop
 800affc:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>
 800b000:	200000fc 	strdcs	r0, [r0], -ip

0800b004 <RemoteConfig::HandleSetDevicesTxt()>:
 800b004:	b510      	push	{r4, lr}
 800b006:	4b07      	ldr	r3, [pc, #28]	; (800b024 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800b008:	b090      	sub	sp, #64	; 0x40
 800b00a:	6819      	ldr	r1, [r3, #0]
 800b00c:	4604      	mov	r4, r0
 800b00e:	a801      	add	r0, sp, #4
 800b010:	f004 fc62 	bl	800f8d8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800b014:	4b04      	ldr	r3, [pc, #16]	; (800b028 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800b016:	69e2      	ldr	r2, [r4, #28]
 800b018:	6819      	ldr	r1, [r3, #0]
 800b01a:	a801      	add	r0, sp, #4
 800b01c:	f004 fc88 	bl	800f930 <PixelDmxParams::Load(char const*, unsigned int)>
 800b020:	b010      	add	sp, #64	; 0x40
 800b022:	bd10      	pop	{r4, pc}
 800b024:	2000fc84 	andcs	pc, r0, r4, lsl #25
 800b028:	200000fc 	strdcs	r0, [r0], -ip

0800b02c <RemoteConfig::HandleSetDisplayTxt()>:
 800b02c:	b510      	push	{r4, lr}
 800b02e:	4b07      	ldr	r3, [pc, #28]	; (800b04c <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800b030:	b08a      	sub	sp, #40	; 0x28
 800b032:	6819      	ldr	r1, [r3, #0]
 800b034:	4604      	mov	r4, r0
 800b036:	4668      	mov	r0, sp
 800b038:	f008 fe84 	bl	8013d44 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800b03c:	4b04      	ldr	r3, [pc, #16]	; (800b050 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800b03e:	69e2      	ldr	r2, [r4, #28]
 800b040:	6819      	ldr	r1, [r3, #0]
 800b042:	4668      	mov	r0, sp
 800b044:	f008 fe98 	bl	8013d78 <DisplayUdfParams::Load(char const*, unsigned int)>
 800b048:	b00a      	add	sp, #40	; 0x28
 800b04a:	bd10      	pop	{r4, pc}
 800b04c:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>
 800b050:	200000fc 	strdcs	r0, [r0], -ip

0800b054 <RemoteConfig::HandleFactory()>:
 800b054:	b538      	push	{r3, r4, r5, lr}
 800b056:	4d05      	ldr	r5, [pc, #20]	; (800b06c <RemoteConfig::HandleFactory()+0x18>)
 800b058:	2400      	movs	r4, #0
 800b05a:	4621      	mov	r1, r4
 800b05c:	6828      	ldr	r0, [r5, #0]
 800b05e:	3401      	adds	r4, #1
 800b060:	f009 f93e 	bl	80142e0 <ConfigStore::ResetSetList(configstore::Store)>
 800b064:	2c1c      	cmp	r4, #28
 800b066:	d1f8      	bne.n	800b05a <RemoteConfig::HandleFactory()+0x6>
 800b068:	bd38      	pop	{r3, r4, r5, pc}
 800b06a:	bf00      	nop
 800b06c:	2000fc68 	andcs	pc, r0, r8, ror #24

0800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800b070:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b072:	460b      	mov	r3, r1
 800b074:	8885      	ldrh	r5, [r0, #4]
 800b076:	88c1      	ldrh	r1, [r0, #6]
 800b078:	42a9      	cmp	r1, r5
 800b07a:	d214      	bcs.n	800b0a6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800b07c:	4604      	mov	r4, r0
 800b07e:	6800      	ldr	r0, [r0, #0]
 800b080:	1a6d      	subs	r5, r5, r1
 800b082:	4408      	add	r0, r1
 800b084:	7a21      	ldrb	r1, [r4, #8]
 800b086:	b91a      	cbnz	r2, 800b090 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800b088:	b919      	cbnz	r1, 800b092 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800b08a:	4a0a      	ldr	r2, [pc, #40]	; (800b0b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800b08c:	9100      	str	r1, [sp, #0]
 800b08e:	e002      	b.n	800b096 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b090:	b159      	cbz	r1, 800b0aa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800b092:	9200      	str	r2, [sp, #0]
 800b094:	4a08      	ldr	r2, [pc, #32]	; (800b0b8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800b096:	4629      	mov	r1, r5
 800b098:	f7ff fa1e 	bl	800a4d8 <snprintf>
 800b09c:	4285      	cmp	r5, r0
 800b09e:	bfa2      	ittt	ge
 800b0a0:	88e3      	ldrhge	r3, [r4, #6]
 800b0a2:	181b      	addge	r3, r3, r0
 800b0a4:	80e3      	strhge	r3, [r4, #6]
 800b0a6:	b003      	add	sp, #12
 800b0a8:	bd30      	pop	{r4, r5, pc}
 800b0aa:	2201      	movs	r2, #1
 800b0ac:	9200      	str	r2, [sp, #0]
 800b0ae:	4a03      	ldr	r2, [pc, #12]	; (800b0bc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800b0b0:	e7f1      	b.n	800b096 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b0b2:	bf00      	nop
 800b0b4:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800b0b8:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800b0bc:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800b0c0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800b0c0:	b510      	push	{r4, lr}
 800b0c2:	2220      	movs	r2, #32
 800b0c4:	4604      	mov	r4, r0
 800b0c6:	f840 1b04 	str.w	r1, [r0], #4
 800b0ca:	2100      	movs	r1, #0
 800b0cc:	f00a fea6 	bl	8015e1c <memset>
 800b0d0:	4620      	mov	r0, r4
 800b0d2:	bd10      	pop	{r4, pc}

0800b0d4 <RemoteConfigParams::Load()>:
 800b0d4:	b508      	push	{r3, lr}
 800b0d6:	2300      	movs	r3, #0
 800b0d8:	4601      	mov	r1, r0
 800b0da:	6043      	str	r3, [r0, #4]
 800b0dc:	6800      	ldr	r0, [r0, #0]
 800b0de:	b120      	cbz	r0, 800b0ea <RemoteConfigParams::Load()+0x16>
 800b0e0:	6803      	ldr	r3, [r0, #0]
 800b0e2:	3104      	adds	r1, #4
 800b0e4:	68db      	ldr	r3, [r3, #12]
 800b0e6:	4798      	blx	r3
 800b0e8:	2001      	movs	r0, #1
 800b0ea:	bd08      	pop	{r3, pc}

0800b0ec <RemoteConfigParams::Load(char const*, unsigned int)>:
 800b0ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	6043      	str	r3, [r0, #4]
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	460d      	mov	r5, r1
 800b0f6:	4616      	mov	r6, r2
 800b0f8:	490a      	ldr	r1, [pc, #40]	; (800b124 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800b0fa:	4602      	mov	r2, r0
 800b0fc:	4668      	mov	r0, sp
 800b0fe:	f009 fe89 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b102:	4632      	mov	r2, r6
 800b104:	4629      	mov	r1, r5
 800b106:	4668      	mov	r0, sp
 800b108:	f009 fe88 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 800b10c:	4621      	mov	r1, r4
 800b10e:	f851 0b04 	ldr.w	r0, [r1], #4
 800b112:	6803      	ldr	r3, [r0, #0]
 800b114:	689b      	ldr	r3, [r3, #8]
 800b116:	4798      	blx	r3
 800b118:	4668      	mov	r0, sp
 800b11a:	f009 fe7e 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 800b11e:	b002      	add	sp, #8
 800b120:	bd70      	pop	{r4, r5, r6, pc}
 800b122:	bf00      	nop
 800b124:	0800b1e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, ip, sp, pc}

0800b128 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800b128:	6843      	ldr	r3, [r0, #4]
 800b12a:	b111      	cbz	r1, 800b132 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800b12c:	431a      	orrs	r2, r3
 800b12e:	6042      	str	r2, [r0, #4]
 800b130:	4770      	bx	lr
 800b132:	ea23 0202 	bic.w	r2, r3, r2
 800b136:	e7fa      	b.n	800b12e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800b138 <RemoteConfigParams::callbackFunction(char const*)>:
 800b138:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b13a:	460d      	mov	r5, r1
 800b13c:	4604      	mov	r4, r0
 800b13e:	4923      	ldr	r1, [pc, #140]	; (800b1cc <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800b140:	f10d 0203 	add.w	r2, sp, #3
 800b144:	4628      	mov	r0, r5
 800b146:	f009 ff9a 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b14a:	b940      	cbnz	r0, 800b15e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800b14c:	2201      	movs	r2, #1
 800b14e:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800b152:	4620      	mov	r0, r4
 800b154:	b003      	add	sp, #12
 800b156:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b15a:	f7ff bfe5 	b.w	800b128 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800b15e:	491c      	ldr	r1, [pc, #112]	; (800b1d0 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800b160:	f10d 0203 	add.w	r2, sp, #3
 800b164:	4628      	mov	r0, r5
 800b166:	f009 ff8a 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b16a:	b908      	cbnz	r0, 800b170 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800b16c:	2202      	movs	r2, #2
 800b16e:	e7ee      	b.n	800b14e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b170:	4918      	ldr	r1, [pc, #96]	; (800b1d4 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800b172:	f10d 0203 	add.w	r2, sp, #3
 800b176:	4628      	mov	r0, r5
 800b178:	f009 ff81 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b17c:	b908      	cbnz	r0, 800b182 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800b17e:	2204      	movs	r2, #4
 800b180:	e7e5      	b.n	800b14e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b182:	4915      	ldr	r1, [pc, #84]	; (800b1d8 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800b184:	f10d 0203 	add.w	r2, sp, #3
 800b188:	4628      	mov	r0, r5
 800b18a:	f009 ff78 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b18e:	b908      	cbnz	r0, 800b194 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800b190:	2208      	movs	r2, #8
 800b192:	e7dc      	b.n	800b14e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b194:	4911      	ldr	r1, [pc, #68]	; (800b1dc <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800b196:	f10d 0203 	add.w	r2, sp, #3
 800b19a:	4628      	mov	r0, r5
 800b19c:	f009 ff6f 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b1a0:	b908      	cbnz	r0, 800b1a6 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800b1a2:	2220      	movs	r2, #32
 800b1a4:	e7d3      	b.n	800b14e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b1a6:	2317      	movs	r3, #23
 800b1a8:	9301      	str	r3, [sp, #4]
 800b1aa:	490d      	ldr	r1, [pc, #52]	; (800b1e0 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800b1ac:	ab01      	add	r3, sp, #4
 800b1ae:	f104 020c 	add.w	r2, r4, #12
 800b1b2:	4628      	mov	r0, r5
 800b1b4:	f009 fe66 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1b8:	b930      	cbnz	r0, 800b1c8 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800b1ba:	9b01      	ldr	r3, [sp, #4]
 800b1bc:	4423      	add	r3, r4
 800b1be:	7318      	strb	r0, [r3, #12]
 800b1c0:	6863      	ldr	r3, [r4, #4]
 800b1c2:	f043 0310 	orr.w	r3, r3, #16
 800b1c6:	6063      	str	r3, [r4, #4]
 800b1c8:	b003      	add	sp, #12
 800b1ca:	bd30      	pop	{r4, r5, pc}
 800b1cc:	0801908d 	stmdaeq	r1, {r0, r2, r3, r7, ip, pc}
 800b1d0:	080190ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, ip, pc}
 800b1d4:	080190bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, ip, pc}
 800b1d8:	080190ca 	stmdaeq	r1, {r1, r3, r6, r7, ip, pc}
 800b1dc:	080190d8 	stmdaeq	r1, {r3, r4, r6, r7, ip, pc}
 800b1e0:	080190a1 	stmdaeq	r1, {r0, r5, r7, ip, pc}

0800b1e4 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800b1e4:	f7ff bfa8 	b.w	800b138 <RemoteConfigParams::callbackFunction(char const*)>

0800b1e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800b1e8:	b570      	push	{r4, r5, r6, lr}
 800b1ea:	4604      	mov	r4, r0
 800b1ec:	b086      	sub	sp, #24
 800b1ee:	4615      	mov	r5, r2
 800b1f0:	461e      	mov	r6, r3
 800b1f2:	3004      	adds	r0, #4
 800b1f4:	2900      	cmp	r1, #0
 800b1f6:	d041      	beq.n	800b27c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800b1f8:	2220      	movs	r2, #32
 800b1fa:	f00a fdf8 	bl	8015dee <memmove>
 800b1fe:	4633      	mov	r3, r6
 800b200:	462a      	mov	r2, r5
 800b202:	4937      	ldr	r1, [pc, #220]	; (800b2e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800b204:	a803      	add	r0, sp, #12
 800b206:	f009 fd65 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b20a:	6862      	ldr	r2, [r4, #4]
 800b20c:	4935      	ldr	r1, [pc, #212]	; (800b2e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800b20e:	f002 0201 	and.w	r2, r2, #1
 800b212:	a803      	add	r0, sp, #12
 800b214:	f7ff ff2c 	bl	800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b218:	6862      	ldr	r2, [r4, #4]
 800b21a:	4933      	ldr	r1, [pc, #204]	; (800b2e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b21c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800b220:	a803      	add	r0, sp, #12
 800b222:	f7ff ff25 	bl	800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b226:	6862      	ldr	r2, [r4, #4]
 800b228:	4930      	ldr	r1, [pc, #192]	; (800b2ec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800b22a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800b22e:	a803      	add	r0, sp, #12
 800b230:	f7ff ff1e 	bl	800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b234:	6862      	ldr	r2, [r4, #4]
 800b236:	492e      	ldr	r1, [pc, #184]	; (800b2f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800b238:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800b23c:	a803      	add	r0, sp, #12
 800b23e:	f7ff ff17 	bl	800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b242:	6862      	ldr	r2, [r4, #4]
 800b244:	492b      	ldr	r1, [pc, #172]	; (800b2f4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800b246:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800b24a:	a803      	add	r0, sp, #12
 800b24c:	f7ff ff10 	bl	800b070 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b250:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b254:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b258:	6862      	ldr	r2, [r4, #4]
 800b25a:	42ab      	cmp	r3, r5
 800b25c:	d223      	bcs.n	800b2a6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800b25e:	9803      	ldr	r0, [sp, #12]
 800b260:	06d2      	lsls	r2, r2, #27
 800b262:	4418      	add	r0, r3
 800b264:	eba5 0503 	sub.w	r5, r5, r3
 800b268:	f104 040c 	add.w	r4, r4, #12
 800b26c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b270:	d40b      	bmi.n	800b28a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800b272:	b95b      	cbnz	r3, 800b28c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800b274:	4b20      	ldr	r3, [pc, #128]	; (800b2f8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b276:	4a21      	ldr	r2, [pc, #132]	; (800b2fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b278:	9400      	str	r4, [sp, #0]
 800b27a:	e00a      	b.n	800b292 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b27c:	6823      	ldr	r3, [r4, #0]
 800b27e:	681a      	ldr	r2, [r3, #0]
 800b280:	4601      	mov	r1, r0
 800b282:	68d2      	ldr	r2, [r2, #12]
 800b284:	4618      	mov	r0, r3
 800b286:	4790      	blx	r2
 800b288:	e7b9      	b.n	800b1fe <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800b28a:	b32b      	cbz	r3, 800b2d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800b28c:	4b1a      	ldr	r3, [pc, #104]	; (800b2f8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b28e:	4a1c      	ldr	r2, [pc, #112]	; (800b300 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800b290:	9400      	str	r4, [sp, #0]
 800b292:	4629      	mov	r1, r5
 800b294:	f7ff f920 	bl	800a4d8 <snprintf>
 800b298:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b29c:	4285      	cmp	r5, r0
 800b29e:	bfa4      	itt	ge
 800b2a0:	181b      	addge	r3, r3, r0
 800b2a2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b2a6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b2aa:	b17b      	cbz	r3, 800b2cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800b2ac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b2b0:	9b03      	ldr	r3, [sp, #12]
 800b2b2:	4413      	add	r3, r2
 800b2b4:	227d      	movs	r2, #125	; 0x7d
 800b2b6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b2ba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b2be:	9903      	ldr	r1, [sp, #12]
 800b2c0:	54ca      	strb	r2, [r1, r3]
 800b2c2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b2c6:	3301      	adds	r3, #1
 800b2c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b2cc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b2d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b2d2:	601a      	str	r2, [r3, #0]
 800b2d4:	b006      	add	sp, #24
 800b2d6:	bd70      	pop	{r4, r5, r6, pc}
 800b2d8:	4b07      	ldr	r3, [pc, #28]	; (800b2f8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b2da:	4a0a      	ldr	r2, [pc, #40]	; (800b304 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b2dc:	9400      	str	r4, [sp, #0]
 800b2de:	e7d8      	b.n	800b292 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b2e0:	08019095 	stmdaeq	r1, {r0, r2, r4, r7, ip, pc}
 800b2e4:	0801908d 	stmdaeq	r1, {r0, r2, r3, r7, ip, pc}
 800b2e8:	080190ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, ip, pc}
 800b2ec:	080190bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, ip, pc}
 800b2f0:	080190ca 	stmdaeq	r1, {r1, r3, r6, r7, ip, pc}
 800b2f4:	080190d8 	stmdaeq	r1, {r3, r4, r6, r7, ip, pc}
 800b2f8:	080190a1 	stmdaeq	r1, {r0, r5, r7, ip, pc}
 800b2fc:	08018c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, pc}
 800b300:	08018c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, pc}
 800b304:	08018c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, pc}

0800b308 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b308:	b513      	push	{r0, r1, r4, lr}
 800b30a:	6804      	ldr	r4, [r0, #0]
 800b30c:	b914      	cbnz	r4, 800b314 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b30e:	601c      	str	r4, [r3, #0]
 800b310:	b002      	add	sp, #8
 800b312:	bd10      	pop	{r4, pc}
 800b314:	9300      	str	r3, [sp, #0]
 800b316:	4613      	mov	r3, r2
 800b318:	460a      	mov	r2, r1
 800b31a:	2100      	movs	r1, #0
 800b31c:	f7ff ff64 	bl	800b1e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b320:	e7f6      	b.n	800b310 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b322 <RemoteConfigParams::Set(RemoteConfig*)>:
 800b322:	b538      	push	{r3, r4, r5, lr}
 800b324:	460c      	mov	r4, r1
 800b326:	6841      	ldr	r1, [r0, #4]
 800b328:	4605      	mov	r5, r0
 800b32a:	f001 0101 	and.w	r1, r1, #1
 800b32e:	4620      	mov	r0, r4
 800b330:	f7ff fc0e 	bl	800ab50 <RemoteConfig::SetDisable(bool)>
 800b334:	686b      	ldr	r3, [r5, #4]
 800b336:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b33a:	7362      	strb	r2, [r4, #13]
 800b33c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b340:	73a2      	strb	r2, [r4, #14]
 800b342:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b346:	73e2      	strb	r2, [r4, #15]
 800b348:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b34c:	06db      	lsls	r3, r3, #27
 800b34e:	7422      	strb	r2, [r4, #16]
 800b350:	d506      	bpl.n	800b360 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800b352:	f105 010c 	add.w	r1, r5, #12
 800b356:	4620      	mov	r0, r4
 800b358:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b35c:	f7ff bc18 	b.w	800ab90 <RemoteConfig::SetDisplayName(char const*)>
 800b360:	bd38      	pop	{r3, r4, r5, pc}

0800b362 <RemoteConfigParams::Dump()>:
 800b362:	4770      	bx	lr

0800b364 <RemoteConfig::HandleReboot()>:
 800b364:	7b83      	ldrb	r3, [r0, #14]
 800b366:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b368:	2b00      	cmp	r3, #0
 800b36a:	d03c      	beq.n	800b3e6 <RemoteConfig::HandleReboot()+0x82>
 800b36c:	4c1f      	ldr	r4, [pc, #124]	; (800b3ec <RemoteConfig::HandleReboot()+0x88>)
 800b36e:	6825      	ldr	r5, [r4, #0]
 800b370:	2301      	movs	r3, #1
 800b372:	7443      	strb	r3, [r0, #17]
 800b374:	69a8      	ldr	r0, [r5, #24]
 800b376:	b138      	cbz	r0, 800b388 <RemoteConfig::HandleReboot()+0x24>
 800b378:	6803      	ldr	r3, [r0, #0]
 800b37a:	2100      	movs	r1, #0
 800b37c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b37e:	7429      	strb	r1, [r5, #16]
 800b380:	4798      	blx	r3
 800b382:	4b1b      	ldr	r3, [pc, #108]	; (800b3f0 <RemoteConfig::HandleReboot()+0x8c>)
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	606b      	str	r3, [r5, #4]
 800b388:	4d1a      	ldr	r5, [pc, #104]	; (800b3f4 <RemoteConfig::HandleReboot()+0x90>)
 800b38a:	6828      	ldr	r0, [r5, #0]
 800b38c:	f009 f82c 	bl	80143e8 <ConfigStore::Flash()>
 800b390:	2800      	cmp	r0, #0
 800b392:	d1fa      	bne.n	800b38a <RemoteConfig::HandleReboot()+0x26>
 800b394:	4b18      	ldr	r3, [pc, #96]	; (800b3f8 <RemoteConfig::HandleReboot()+0x94>)
 800b396:	6818      	ldr	r0, [r3, #0]
 800b398:	f007 fa50 	bl	801283c <Network::Shutdown()>
 800b39c:	4817      	ldr	r0, [pc, #92]	; (800b3fc <RemoteConfig::HandleReboot()+0x98>)
 800b39e:	f7ff f873 	bl	800a488 <printf>
 800b3a2:	6823      	ldr	r3, [r4, #0]
 800b3a4:	6998      	ldr	r0, [r3, #24]
 800b3a6:	b110      	cbz	r0, 800b3ae <RemoteConfig::HandleReboot()+0x4a>
 800b3a8:	6803      	ldr	r3, [r0, #0]
 800b3aa:	68db      	ldr	r3, [r3, #12]
 800b3ac:	4798      	blx	r3
 800b3ae:	6824      	ldr	r4, [r4, #0]
 800b3b0:	4913      	ldr	r1, [pc, #76]	; (800b400 <RemoteConfig::HandleReboot()+0x9c>)
 800b3b2:	4620      	mov	r0, r4
 800b3b4:	f7fd ff92 	bl	80092dc <Display::TextStatus(char const*)>
 800b3b8:	7c63      	ldrb	r3, [r4, #17]
 800b3ba:	b183      	cbz	r3, 800b3de <RemoteConfig::HandleReboot()+0x7a>
 800b3bc:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b3c0:	7a20      	ldrb	r0, [r4, #8]
 800b3c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b3c6:	23bf      	movs	r3, #191	; 0xbf
 800b3c8:	f88d 3006 	strb.w	r3, [sp, #6]
 800b3cc:	f00c f9ba 	bl	8017744 <gd32_i2c_set_address>
 800b3d0:	68e0      	ldr	r0, [r4, #12]
 800b3d2:	f00c f9af 	bl	8017734 <gd32_i2c_set_baudrate>
 800b3d6:	2103      	movs	r1, #3
 800b3d8:	a801      	add	r0, sp, #4
 800b3da:	f00c f9b9 	bl	8017750 <gd32_i2c_write>
 800b3de:	4b09      	ldr	r3, [pc, #36]	; (800b404 <RemoteConfig::HandleReboot()+0xa0>)
 800b3e0:	6818      	ldr	r0, [r3, #0]
 800b3e2:	f00a fb69 	bl	8015ab8 <Hardware::Reboot()>
 800b3e6:	b003      	add	sp, #12
 800b3e8:	bd30      	pop	{r4, r5, pc}
 800b3ea:	bf00      	nop
 800b3ec:	2000fc90 	mulcs	r0, r0, ip
 800b3f0:	2000fd94 	mulcs	r0, r4, sp
 800b3f4:	2000fc68 	andcs	pc, r0, r8, ror #24
 800b3f8:	2000f994 	mulcs	r0, r4, r9
 800b3fc:	08018c9c 	stmdaeq	r1, {r2, r3, r4, r7, sl, fp, pc}
 800b400:	08018cab 	stmdaeq	r1, {r0, r1, r3, r5, r7, sl, fp, pc}
 800b404:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800b408 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b408:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b40c:	4d12      	ldr	r5, [pc, #72]	; (800b458 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b40e:	2000      	movs	r0, #0
 800b410:	f10d 0c04 	add.w	ip, sp, #4
 800b414:	6814      	ldr	r4, [r2, #0]
 800b416:	7d2b      	ldrb	r3, [r5, #20]
 800b418:	9301      	str	r3, [sp, #4]
 800b41a:	42a3      	cmp	r3, r4
 800b41c:	bf34      	ite	cc
 800b41e:	4664      	movcc	r4, ip
 800b420:	4614      	movcs	r4, r2
 800b422:	692e      	ldr	r6, [r5, #16]
 800b424:	6827      	ldr	r7, [r4, #0]
 800b426:	3e01      	subs	r6, #1
 800b428:	440f      	add	r7, r1
 800b42a:	460c      	mov	r4, r1
 800b42c:	42bc      	cmp	r4, r7
 800b42e:	d101      	bne.n	800b434 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b430:	6013      	str	r3, [r2, #0]
 800b432:	e00c      	b.n	800b44e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b434:	f894 8000 	ldrb.w	r8, [r4]
 800b438:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b43c:	45f0      	cmp	r8, lr
 800b43e:	d009      	beq.n	800b454 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b440:	3001      	adds	r0, #1
 800b442:	2806      	cmp	r0, #6
 800b444:	f105 051c 	add.w	r5, r5, #28
 800b448:	d1e4      	bne.n	800b414 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b44a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b44e:	b002      	add	sp, #8
 800b450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b454:	3401      	adds	r4, #1
 800b456:	e7e9      	b.n	800b42c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b458:	08018d00 	stmdaeq	r1, {r8, sl, fp, pc}

0800b45c <RemoteConfig::PlatformHandleTftpSet()>:
 800b45c:	f890 1020 	ldrb.w	r1, [r0, #32]
 800b460:	b109      	cbz	r1, 800b466 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b462:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b466:	2001      	movs	r0, #1
 800b468:	f00c b8a8 	b.w	80175bc <bkp_data_write(bkp_data_register_enum, unsigned short)>

0800b46c <RemoteConfig::PlatformHandleTftpGet()>:
 800b46c:	b510      	push	{r4, lr}
 800b46e:	4604      	mov	r4, r0
 800b470:	2001      	movs	r0, #1
 800b472:	f00c f8ab 	bl	80175cc <bkp_data_read(bkp_data_register_enum)>
 800b476:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b47a:	1ac3      	subs	r3, r0, r3
 800b47c:	4258      	negs	r0, r3
 800b47e:	4158      	adcs	r0, r3
 800b480:	f884 0020 	strb.w	r0, [r4, #32]
 800b484:	bd10      	pop	{r4, pc}

0800b486 <strcmp>:
 800b486:	1e43      	subs	r3, r0, #1
 800b488:	3901      	subs	r1, #1
 800b48a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b48e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b492:	4290      	cmp	r0, r2
 800b494:	d001      	beq.n	800b49a <strcmp+0x14>
 800b496:	1a80      	subs	r0, r0, r2
 800b498:	e001      	b.n	800b49e <strcmp+0x18>
 800b49a:	2800      	cmp	r0, #0
 800b49c:	d1f5      	bne.n	800b48a <strcmp+0x4>
 800b49e:	4770      	bx	lr

0800b4a0 <strcasecmp>:
 800b4a0:	b530      	push	{r4, r5, lr}
 800b4a2:	1e42      	subs	r2, r0, #1
 800b4a4:	3901      	subs	r1, #1
 800b4a6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b4aa:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b4ae:	2b19      	cmp	r3, #25
 800b4b0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b4b4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b4b8:	4604      	mov	r4, r0
 800b4ba:	bf98      	it	ls
 800b4bc:	f100 0420 	addls.w	r4, r0, #32
 800b4c0:	2d19      	cmp	r5, #25
 800b4c2:	bf98      	it	ls
 800b4c4:	3320      	addls	r3, #32
 800b4c6:	42a3      	cmp	r3, r4
 800b4c8:	d001      	beq.n	800b4ce <strcasecmp+0x2e>
 800b4ca:	1ae0      	subs	r0, r4, r3
 800b4cc:	e001      	b.n	800b4d2 <strcasecmp+0x32>
 800b4ce:	2800      	cmp	r0, #0
 800b4d0:	d1e9      	bne.n	800b4a6 <strcasecmp+0x6>
 800b4d2:	bd30      	pop	{r4, r5, pc}

0800b4d4 <PropertiesConfig::EnableJSON(bool)>:
 800b4d4:	4a04      	ldr	r2, [pc, #16]	; (800b4e8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b4d6:	7813      	ldrb	r3, [r2, #0]
 800b4d8:	b118      	cbz	r0, 800b4e2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b4da:	f043 0301 	orr.w	r3, r3, #1
 800b4de:	7013      	strb	r3, [r2, #0]
 800b4e0:	4770      	bx	lr
 800b4e2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b4e6:	e7fa      	b.n	800b4de <PropertiesConfig::EnableJSON(bool)+0xa>
 800b4e8:	2000fc8c 	andcs	pc, r0, ip, lsl #25

0800b4ec <HttpDaemon::HttpDaemon()>:
 800b4ec:	4a08      	ldr	r2, [pc, #32]	; (800b510 <HttpDaemon::HttpDaemon()+0x24>)
 800b4ee:	6002      	str	r2, [r0, #0]
 800b4f0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b4f4:	2200      	movs	r2, #0
 800b4f6:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b4fa:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b4fe:	2102      	movs	r1, #2
 800b500:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b504:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b508:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800b50c:	60c2      	str	r2, [r0, #12]
 800b50e:	4770      	bx	lr
 800b510:	0801900d 	stmdaeq	r1, {r0, r2, r3, ip, pc}

0800b514 <HttpDaemon::Start()>:
 800b514:	4b04      	ldr	r3, [pc, #16]	; (800b528 <HttpDaemon::Start()+0x14>)
 800b516:	b510      	push	{r4, lr}
 800b518:	2150      	movs	r1, #80	; 0x50
 800b51a:	4604      	mov	r4, r0
 800b51c:	6818      	ldr	r0, [r3, #0]
 800b51e:	f007 fc85 	bl	8012e2c <Network::TcpBegin(unsigned short)>
 800b522:	6120      	str	r0, [r4, #16]
 800b524:	bd10      	pop	{r4, pc}
 800b526:	bf00      	nop
 800b528:	2000f994 	mulcs	r0, r4, r9

0800b52c <HttpDaemon::ParseMethod(char*)>:
 800b52c:	b538      	push	{r3, r4, r5, lr}
 800b52e:	4604      	mov	r4, r0
 800b530:	4608      	mov	r0, r1
 800b532:	491a      	ldr	r1, [pc, #104]	; (800b59c <HttpDaemon::ParseMethod(char*)+0x70>)
 800b534:	f00a fc9c 	bl	8015e70 <strtok>
 800b538:	4605      	mov	r5, r0
 800b53a:	b360      	cbz	r0, 800b596 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b53c:	4918      	ldr	r1, [pc, #96]	; (800b5a0 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b53e:	f7ff ffa2 	bl	800b486 <strcmp>
 800b542:	b128      	cbz	r0, 800b550 <HttpDaemon::ParseMethod(char*)+0x24>
 800b544:	4917      	ldr	r1, [pc, #92]	; (800b5a4 <HttpDaemon::ParseMethod(char*)+0x78>)
 800b546:	4628      	mov	r0, r5
 800b548:	f7ff ff9d 	bl	800b486 <strcmp>
 800b54c:	bb18      	cbnz	r0, 800b596 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b54e:	2001      	movs	r0, #1
 800b550:	61e0      	str	r0, [r4, #28]
 800b552:	4912      	ldr	r1, [pc, #72]	; (800b59c <HttpDaemon::ParseMethod(char*)+0x70>)
 800b554:	2000      	movs	r0, #0
 800b556:	f00a fc8b 	bl	8015e70 <strtok>
 800b55a:	b910      	cbnz	r0, 800b562 <HttpDaemon::ParseMethod(char*)+0x36>
 800b55c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b560:	bd38      	pop	{r3, r4, r5, pc}
 800b562:	6060      	str	r0, [r4, #4]
 800b564:	4910      	ldr	r1, [pc, #64]	; (800b5a8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b566:	2000      	movs	r0, #0
 800b568:	f00a fc82 	bl	8015e70 <strtok>
 800b56c:	2800      	cmp	r0, #0
 800b56e:	d0f5      	beq.n	800b55c <HttpDaemon::ParseMethod(char*)+0x30>
 800b570:	490e      	ldr	r1, [pc, #56]	; (800b5ac <HttpDaemon::ParseMethod(char*)+0x80>)
 800b572:	f7ff ff88 	bl	800b486 <strcmp>
 800b576:	2800      	cmp	r0, #0
 800b578:	d1f0      	bne.n	800b55c <HttpDaemon::ParseMethod(char*)+0x30>
 800b57a:	490d      	ldr	r1, [pc, #52]	; (800b5b0 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b57c:	f00a fc78 	bl	8015e70 <strtok>
 800b580:	2800      	cmp	r0, #0
 800b582:	d0eb      	beq.n	800b55c <HttpDaemon::ParseMethod(char*)+0x30>
 800b584:	490b      	ldr	r1, [pc, #44]	; (800b5b4 <HttpDaemon::ParseMethod(char*)+0x88>)
 800b586:	f7ff ff7e 	bl	800b486 <strcmp>
 800b58a:	2800      	cmp	r0, #0
 800b58c:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b590:	bf08      	it	eq
 800b592:	20c8      	moveq	r0, #200	; 0xc8
 800b594:	e7e4      	b.n	800b560 <HttpDaemon::ParseMethod(char*)+0x34>
 800b596:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b59a:	e7e1      	b.n	800b560 <HttpDaemon::ParseMethod(char*)+0x34>
 800b59c:	0801bd50 	stmdaeq	r1, {r4, r6, r8, sl, fp, ip, sp, pc}
 800b5a0:	08018da8 	stmdaeq	r1, {r3, r5, r7, r8, sl, fp, pc}
 800b5a4:	08018dac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, fp, pc}
 800b5a8:	08018e16 	stmdaeq	r1, {r1, r2, r4, r9, sl, fp, pc}
 800b5ac:	08018db1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, fp, pc}
 800b5b0:	08018db6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, sl, fp, pc}
 800b5b4:	08018db9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, fp, pc}

0800b5b8 <HttpDaemon::ParseHeaderField(char*)>:
 800b5b8:	b538      	push	{r3, r4, r5, lr}
 800b5ba:	4605      	mov	r5, r0
 800b5bc:	4608      	mov	r0, r1
 800b5be:	491d      	ldr	r1, [pc, #116]	; (800b634 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b5c0:	f00a fc56 	bl	8015e70 <strtok>
 800b5c4:	4604      	mov	r4, r0
 800b5c6:	b910      	cbnz	r0, 800b5ce <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b5c8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b5cc:	bd38      	pop	{r3, r4, r5, pc}
 800b5ce:	491a      	ldr	r1, [pc, #104]	; (800b638 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b5d0:	f7ff ff66 	bl	800b4a0 <strcasecmp>
 800b5d4:	b970      	cbnz	r0, 800b5f4 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b5d6:	4919      	ldr	r1, [pc, #100]	; (800b63c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b5d8:	f00a fc4a 	bl	8015e70 <strtok>
 800b5dc:	2800      	cmp	r0, #0
 800b5de:	d0f3      	beq.n	800b5c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b5e0:	4917      	ldr	r1, [pc, #92]	; (800b640 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b5e2:	f7ff ff50 	bl	800b486 <strcmp>
 800b5e6:	b108      	cbz	r0, 800b5ec <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b5e8:	20c8      	movs	r0, #200	; 0xc8
 800b5ea:	e7ef      	b.n	800b5cc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b5ec:	2301      	movs	r3, #1
 800b5ee:	f885 3020 	strb.w	r3, [r5, #32]
 800b5f2:	e7f9      	b.n	800b5e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b5f4:	4620      	mov	r0, r4
 800b5f6:	4913      	ldr	r1, [pc, #76]	; (800b644 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b5f8:	f7ff ff52 	bl	800b4a0 <strcasecmp>
 800b5fc:	4604      	mov	r4, r0
 800b5fe:	2800      	cmp	r0, #0
 800b600:	d1f2      	bne.n	800b5e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b602:	4911      	ldr	r1, [pc, #68]	; (800b648 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b604:	f00a fc34 	bl	8015e70 <strtok>
 800b608:	2800      	cmp	r0, #0
 800b60a:	d0dd      	beq.n	800b5c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b60c:	1e42      	subs	r2, r0, #1
 800b60e:	4623      	mov	r3, r4
 800b610:	200a      	movs	r0, #10
 800b612:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b616:	b909      	cbnz	r1, 800b61c <HttpDaemon::ParseHeaderField(char*)+0x64>
 800b618:	84eb      	strh	r3, [r5, #38]	; 0x26
 800b61a:	e7e5      	b.n	800b5e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b61c:	3930      	subs	r1, #48	; 0x30
 800b61e:	2909      	cmp	r1, #9
 800b620:	d8d2      	bhi.n	800b5c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b622:	fb00 1303 	mla	r3, r0, r3, r1
 800b626:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b62a:	d9f2      	bls.n	800b612 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b62c:	f240 109d 	movw	r0, #413	; 0x19d
 800b630:	e7cc      	b.n	800b5cc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b632:	bf00      	nop
 800b634:	08018dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, pc}
 800b638:	08018dbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, pc}
 800b63c:	08018dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, pc}
 800b640:	08018dcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sl, fp, pc}
 800b644:	08018de0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, pc}
 800b648:	0801bd50 	stmdaeq	r1, {r4, r6, r8, sl, fp, ip, sp, pc}

0800b64c <HttpDaemon::ParseRequest()>:
 800b64c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b64e:	68c1      	ldr	r1, [r0, #12]
 800b650:	2400      	movs	r4, #0
 800b652:	4605      	mov	r5, r0
 800b654:	f880 4020 	strb.w	r4, [r0, #32]
 800b658:	6244      	str	r4, [r0, #36]	; 0x24
 800b65a:	4622      	mov	r2, r4
 800b65c:	4626      	mov	r6, r4
 800b65e:	8aab      	ldrh	r3, [r5, #20]
 800b660:	42a3      	cmp	r3, r4
 800b662:	d91e      	bls.n	800b6a2 <HttpDaemon::ParseRequest()+0x56>
 800b664:	68eb      	ldr	r3, [r5, #12]
 800b666:	5d18      	ldrb	r0, [r3, r4]
 800b668:	280a      	cmp	r0, #10
 800b66a:	d10f      	bne.n	800b68c <HttpDaemon::ParseRequest()+0x40>
 800b66c:	4423      	add	r3, r4
 800b66e:	1c57      	adds	r7, r2, #1
 800b670:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b674:	b96a      	cbnz	r2, 800b692 <HttpDaemon::ParseRequest()+0x46>
 800b676:	4628      	mov	r0, r5
 800b678:	f7ff ff58 	bl	800b52c <HttpDaemon::ParseMethod(char*)>
 800b67c:	28c8      	cmp	r0, #200	; 0xc8
 800b67e:	d111      	bne.n	800b6a4 <HttpDaemon::ParseRequest()+0x58>
 800b680:	68eb      	ldr	r3, [r5, #12]
 800b682:	1c61      	adds	r1, r4, #1
 800b684:	b28c      	uxth	r4, r1
 800b686:	463a      	mov	r2, r7
 800b688:	fa13 f181 	uxtah	r1, r3, r1
 800b68c:	3401      	adds	r4, #1
 800b68e:	b2a4      	uxth	r4, r4
 800b690:	e7e5      	b.n	800b65e <HttpDaemon::ParseRequest()+0x12>
 800b692:	7808      	ldrb	r0, [r1, #0]
 800b694:	b968      	cbnz	r0, 800b6b2 <HttpDaemon::ParseRequest()+0x66>
 800b696:	696b      	ldr	r3, [r5, #20]
 800b698:	3b01      	subs	r3, #1
 800b69a:	1b1b      	subs	r3, r3, r4
 800b69c:	b29b      	uxth	r3, r3
 800b69e:	84ab      	strh	r3, [r5, #36]	; 0x24
 800b6a0:	b90b      	cbnz	r3, 800b6a6 <HttpDaemon::ParseRequest()+0x5a>
 800b6a2:	20c8      	movs	r0, #200	; 0xc8
 800b6a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b6a6:	68ea      	ldr	r2, [r5, #12]
 800b6a8:	3401      	adds	r4, #1
 800b6aa:	4414      	add	r4, r2
 800b6ac:	60ac      	str	r4, [r5, #8]
 800b6ae:	54e0      	strb	r0, [r4, r3]
 800b6b0:	e7f7      	b.n	800b6a2 <HttpDaemon::ParseRequest()+0x56>
 800b6b2:	4628      	mov	r0, r5
 800b6b4:	f7ff ff80 	bl	800b5b8 <HttpDaemon::ParseHeaderField(char*)>
 800b6b8:	e7e0      	b.n	800b67c <HttpDaemon::ParseRequest()+0x30>
	...

0800b6bc <HttpDaemon::HandleGetTxt()>:
 800b6bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6c0:	6846      	ldr	r6, [r0, #4]
 800b6c2:	1db4      	adds	r4, r6, #6
 800b6c4:	4607      	mov	r7, r0
 800b6c6:	4622      	mov	r2, r4
 800b6c8:	4613      	mov	r3, r2
 800b6ca:	3201      	adds	r2, #1
 800b6cc:	7819      	ldrb	r1, [r3, #0]
 800b6ce:	2900      	cmp	r1, #0
 800b6d0:	d1fa      	bne.n	800b6c8 <HttpDaemon::HandleGetTxt()+0xc>
 800b6d2:	1b1b      	subs	r3, r3, r4
 800b6d4:	2b04      	cmp	r3, #4
 800b6d6:	d803      	bhi.n	800b6e0 <HttpDaemon::HandleGetTxt()+0x24>
 800b6d8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b6dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6e0:	3b04      	subs	r3, #4
 800b6e2:	4914      	ldr	r1, [pc, #80]	; (800b734 <HttpDaemon::HandleGetTxt()+0x78>)
 800b6e4:	18e0      	adds	r0, r4, r3
 800b6e6:	f7ff fece 	bl	800b486 <strcmp>
 800b6ea:	2800      	cmp	r0, #0
 800b6ec:	d1f4      	bne.n	800b6d8 <HttpDaemon::HandleGetTxt()+0x1c>
 800b6ee:	4b12      	ldr	r3, [pc, #72]	; (800b738 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b6f0:	2001      	movs	r0, #1
 800b6f2:	f893 8000 	ldrb.w	r8, [r3]
 800b6f6:	f7ff feed 	bl	800b4d4 <PropertiesConfig::EnableJSON(bool)>
 800b6fa:	4b10      	ldr	r3, [pc, #64]	; (800b73c <HttpDaemon::HandleGetTxt()+0x80>)
 800b6fc:	f240 529b 	movw	r2, #1435	; 0x59b
 800b700:	6818      	ldr	r0, [r3, #0]
 800b702:	4621      	mov	r1, r4
 800b704:	f7ff fa5c 	bl	800abc0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b708:	f008 0801 	and.w	r8, r8, #1
 800b70c:	4605      	mov	r5, r0
 800b70e:	4640      	mov	r0, r8
 800b710:	f7ff fee0 	bl	800b4d4 <PropertiesConfig::EnableJSON(bool)>
 800b714:	2d00      	cmp	r5, #0
 800b716:	d0df      	beq.n	800b6d8 <HttpDaemon::HandleGetTxt()+0x1c>
 800b718:	847d      	strh	r5, [r7, #34]	; 0x22
 800b71a:	4b09      	ldr	r3, [pc, #36]	; (800b740 <HttpDaemon::HandleGetTxt()+0x84>)
 800b71c:	3506      	adds	r5, #6
 800b71e:	442e      	add	r6, r5
 800b720:	42b4      	cmp	r4, r6
 800b722:	d101      	bne.n	800b728 <HttpDaemon::HandleGetTxt()+0x6c>
 800b724:	20c8      	movs	r0, #200	; 0xc8
 800b726:	e7d9      	b.n	800b6dc <HttpDaemon::HandleGetTxt()+0x20>
 800b728:	f814 2b01 	ldrb.w	r2, [r4], #1
 800b72c:	f803 2b01 	strb.w	r2, [r3], #1
 800b730:	e7f6      	b.n	800b720 <HttpDaemon::HandleGetTxt()+0x64>
 800b732:	bf00      	nop
 800b734:	08018ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, pc}
 800b738:	2000fc8c 	andcs	pc, r0, ip, lsl #25
 800b73c:	20000124 	andcs	r0, r0, r4, lsr #2
 800b740:	20000128 	andcs	r0, r0, r8, lsr #2

0800b744 <HttpDaemon::HandleGet()>:
 800b744:	b570      	push	{r4, r5, r6, lr}
 800b746:	6845      	ldr	r5, [r0, #4]
 800b748:	493e      	ldr	r1, [pc, #248]	; (800b844 <HttpDaemon::HandleGet()+0x100>)
 800b74a:	4604      	mov	r4, r0
 800b74c:	4628      	mov	r0, r5
 800b74e:	f7ff fe9a 	bl	800b486 <strcmp>
 800b752:	b120      	cbz	r0, 800b75e <HttpDaemon::HandleGet()+0x1a>
 800b754:	493c      	ldr	r1, [pc, #240]	; (800b848 <HttpDaemon::HandleGet()+0x104>)
 800b756:	4628      	mov	r0, r5
 800b758:	f7ff fe95 	bl	800b486 <strcmp>
 800b75c:	b950      	cbnz	r0, 800b774 <HttpDaemon::HandleGet()+0x30>
 800b75e:	4b3b      	ldr	r3, [pc, #236]	; (800b84c <HttpDaemon::HandleGet()+0x108>)
 800b760:	493b      	ldr	r1, [pc, #236]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b762:	483c      	ldr	r0, [pc, #240]	; (800b854 <HttpDaemon::HandleGet()+0x110>)
 800b764:	6023      	str	r3, [r4, #0]
 800b766:	f000 fa63 	bl	800bc30 <get_file_content(char const*, char*)>
 800b76a:	2800      	cmp	r0, #0
 800b76c:	dd2f      	ble.n	800b7ce <HttpDaemon::HandleGet()+0x8a>
 800b76e:	8460      	strh	r0, [r4, #34]	; 0x22
 800b770:	20c8      	movs	r0, #200	; 0xc8
 800b772:	bd70      	pop	{r4, r5, r6, pc}
 800b774:	4938      	ldr	r1, [pc, #224]	; (800b858 <HttpDaemon::HandleGet()+0x114>)
 800b776:	4628      	mov	r0, r5
 800b778:	f7ff fe85 	bl	800b486 <strcmp>
 800b77c:	b920      	cbnz	r0, 800b788 <HttpDaemon::HandleGet()+0x44>
 800b77e:	4b37      	ldr	r3, [pc, #220]	; (800b85c <HttpDaemon::HandleGet()+0x118>)
 800b780:	4933      	ldr	r1, [pc, #204]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b782:	4837      	ldr	r0, [pc, #220]	; (800b860 <HttpDaemon::HandleGet()+0x11c>)
 800b784:	6023      	str	r3, [r4, #0]
 800b786:	e7ee      	b.n	800b766 <HttpDaemon::HandleGet()+0x22>
 800b788:	4936      	ldr	r1, [pc, #216]	; (800b864 <HttpDaemon::HandleGet()+0x120>)
 800b78a:	4628      	mov	r0, r5
 800b78c:	f7ff fe7b 	bl	800b486 <strcmp>
 800b790:	b190      	cbz	r0, 800b7b8 <HttpDaemon::HandleGet()+0x74>
 800b792:	4a35      	ldr	r2, [pc, #212]	; (800b868 <HttpDaemon::HandleGet()+0x124>)
 800b794:	1e6b      	subs	r3, r5, #1
 800b796:	1d69      	adds	r1, r5, #5
 800b798:	428b      	cmp	r3, r1
 800b79a:	d112      	bne.n	800b7c2 <HttpDaemon::HandleGet()+0x7e>
 800b79c:	4b33      	ldr	r3, [pc, #204]	; (800b86c <HttpDaemon::HandleGet()+0x128>)
 800b79e:	4934      	ldr	r1, [pc, #208]	; (800b870 <HttpDaemon::HandleGet()+0x12c>)
 800b7a0:	6023      	str	r3, [r4, #0]
 800b7a2:	3506      	adds	r5, #6
 800b7a4:	4628      	mov	r0, r5
 800b7a6:	f7ff fe6e 	bl	800b486 <strcmp>
 800b7aa:	b998      	cbnz	r0, 800b7d4 <HttpDaemon::HandleGet()+0x90>
 800b7ac:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b7b0:	4827      	ldr	r0, [pc, #156]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b7b2:	f000 f9c9 	bl	800bb48 <remoteconfig::json_get_list(char*, unsigned short)>
 800b7b6:	e7d8      	b.n	800b76a <HttpDaemon::HandleGet()+0x26>
 800b7b8:	4b2e      	ldr	r3, [pc, #184]	; (800b874 <HttpDaemon::HandleGet()+0x130>)
 800b7ba:	4925      	ldr	r1, [pc, #148]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b7bc:	482e      	ldr	r0, [pc, #184]	; (800b878 <HttpDaemon::HandleGet()+0x134>)
 800b7be:	6023      	str	r3, [r4, #0]
 800b7c0:	e7d1      	b.n	800b766 <HttpDaemon::HandleGet()+0x22>
 800b7c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b7c6:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b7ca:	4286      	cmp	r6, r0
 800b7cc:	d0e4      	beq.n	800b798 <HttpDaemon::HandleGet()+0x54>
 800b7ce:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b7d2:	e7ce      	b.n	800b772 <HttpDaemon::HandleGet()+0x2e>
 800b7d4:	4929      	ldr	r1, [pc, #164]	; (800b87c <HttpDaemon::HandleGet()+0x138>)
 800b7d6:	4628      	mov	r0, r5
 800b7d8:	f7ff fe55 	bl	800b486 <strcmp>
 800b7dc:	b928      	cbnz	r0, 800b7ea <HttpDaemon::HandleGet()+0xa6>
 800b7de:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b7e2:	481b      	ldr	r0, [pc, #108]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b7e4:	f000 f9e0 	bl	800bba8 <remoteconfig::json_get_version(char*, unsigned short)>
 800b7e8:	e7bf      	b.n	800b76a <HttpDaemon::HandleGet()+0x26>
 800b7ea:	4925      	ldr	r1, [pc, #148]	; (800b880 <HttpDaemon::HandleGet()+0x13c>)
 800b7ec:	4628      	mov	r0, r5
 800b7ee:	f7ff fe4a 	bl	800b486 <strcmp>
 800b7f2:	b948      	cbnz	r0, 800b808 <HttpDaemon::HandleGet()+0xc4>
 800b7f4:	4b23      	ldr	r3, [pc, #140]	; (800b884 <HttpDaemon::HandleGet()+0x140>)
 800b7f6:	681b      	ldr	r3, [r3, #0]
 800b7f8:	7bdb      	ldrb	r3, [r3, #15]
 800b7fa:	b303      	cbz	r3, 800b83e <HttpDaemon::HandleGet()+0xfa>
 800b7fc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b800:	4813      	ldr	r0, [pc, #76]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b802:	f000 f9ed 	bl	800bbe0 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b806:	e7b0      	b.n	800b76a <HttpDaemon::HandleGet()+0x26>
 800b808:	491f      	ldr	r1, [pc, #124]	; (800b888 <HttpDaemon::HandleGet()+0x144>)
 800b80a:	4628      	mov	r0, r5
 800b80c:	f7ff fe3b 	bl	800b486 <strcmp>
 800b810:	b928      	cbnz	r0, 800b81e <HttpDaemon::HandleGet()+0xda>
 800b812:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b816:	480e      	ldr	r0, [pc, #56]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b818:	f000 f9f2 	bl	800bc00 <remoteconfig::json_get_display(char*, unsigned short)>
 800b81c:	e7a5      	b.n	800b76a <HttpDaemon::HandleGet()+0x26>
 800b81e:	491b      	ldr	r1, [pc, #108]	; (800b88c <HttpDaemon::HandleGet()+0x148>)
 800b820:	4628      	mov	r0, r5
 800b822:	f7ff fe30 	bl	800b486 <strcmp>
 800b826:	b928      	cbnz	r0, 800b834 <HttpDaemon::HandleGet()+0xf0>
 800b828:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b82c:	4808      	ldr	r0, [pc, #32]	; (800b850 <HttpDaemon::HandleGet()+0x10c>)
 800b82e:	f000 f9f7 	bl	800bc20 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b832:	e79a      	b.n	800b76a <HttpDaemon::HandleGet()+0x26>
 800b834:	4620      	mov	r0, r4
 800b836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b83a:	f7ff bf3f 	b.w	800b6bc <HttpDaemon::HandleGetTxt()>
 800b83e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b842:	e796      	b.n	800b772 <HttpDaemon::HandleGet()+0x2e>
 800b844:	08018e16 	stmdaeq	r1, {r1, r2, r4, r9, sl, fp, pc}
 800b848:	08018def 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl, fp, pc}
 800b84c:	0801900d 	stmdaeq	r1, {r0, r2, r3, ip, pc}
 800b850:	20000128 	andcs	r0, r0, r8, lsr #2
 800b854:	08018df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, pc}
 800b858:	08018dfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, fp, pc}
 800b85c:	0801902d 	stmdaeq	r1, {r0, r2, r3, r5, ip, pc}
 800b860:	08018dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}
 800b864:	08018e07 	stmdaeq	r1, {r0, r1, r2, r9, sl, fp, pc}
 800b868:	08018e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, pc}
 800b86c:	0801906d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip, pc}
 800b870:	08018e18 	stmdaeq	r1, {r3, r4, r9, sl, fp, pc}
 800b874:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800b878:	08018e08 	stmdaeq	r1, {r3, r9, sl, fp, pc}
 800b87c:	08018e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp, pc}
 800b880:	08018e25 	stmdaeq	r1, {r0, r2, r5, r9, sl, fp, pc}
 800b884:	20000124 	andcs	r0, r0, r4, lsr #2
 800b888:	08018e2c 	stmdaeq	r1, {r2, r3, r5, r9, sl, fp, pc}
 800b88c:	08018e34 	stmdaeq	r1, {r2, r4, r5, r9, sl, fp, pc}

0800b890 <HttpDaemon::HandlePost(bool)>:
 800b890:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b892:	4604      	mov	r4, r0
 800b894:	2900      	cmp	r1, #0
 800b896:	f040 808a 	bne.w	800b9ae <HttpDaemon::HandlePost(bool)+0x11e>
 800b89a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b89e:	2b00      	cmp	r3, #0
 800b8a0:	d05a      	beq.n	800b958 <HttpDaemon::HandlePost(bool)+0xc8>
 800b8a2:	6845      	ldr	r5, [r0, #4]
 800b8a4:	4944      	ldr	r1, [pc, #272]	; (800b9b8 <HttpDaemon::HandlePost(bool)+0x128>)
 800b8a6:	4628      	mov	r0, r5
 800b8a8:	f7ff fded 	bl	800b486 <strcmp>
 800b8ac:	2800      	cmp	r0, #0
 800b8ae:	bf0c      	ite	eq
 800b8b0:	2301      	moveq	r3, #1
 800b8b2:	2300      	movne	r3, #0
 800b8b4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b8b8:	d052      	beq.n	800b960 <HttpDaemon::HandlePost(bool)+0xd0>
 800b8ba:	4940      	ldr	r1, [pc, #256]	; (800b9bc <HttpDaemon::HandlePost(bool)+0x12c>)
 800b8bc:	4628      	mov	r0, r5
 800b8be:	f7ff fde2 	bl	800b486 <strcmp>
 800b8c2:	2800      	cmp	r0, #0
 800b8c4:	d04c      	beq.n	800b960 <HttpDaemon::HandlePost(bool)+0xd0>
 800b8c6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b8ca:	e047      	b.n	800b95c <HttpDaemon::HandlePost(bool)+0xcc>
 800b8cc:	493c      	ldr	r1, [pc, #240]	; (800b9c0 <HttpDaemon::HandlePost(bool)+0x130>)
 800b8ce:	68a0      	ldr	r0, [r4, #8]
 800b8d0:	f10d 0207 	add.w	r2, sp, #7
 800b8d4:	f009 fbd3 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b8d8:	b9d8      	cbnz	r0, 800b912 <HttpDaemon::HandlePost(bool)+0x82>
 800b8da:	4b3a      	ldr	r3, [pc, #232]	; (800b9c4 <HttpDaemon::HandlePost(bool)+0x134>)
 800b8dc:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b8e0:	681d      	ldr	r5, [r3, #0]
 800b8e2:	69a8      	ldr	r0, [r5, #24]
 800b8e4:	fab6 f186 	clz	r1, r6
 800b8e8:	0949      	lsrs	r1, r1, #5
 800b8ea:	b138      	cbz	r0, 800b8fc <HttpDaemon::HandlePost(bool)+0x6c>
 800b8ec:	6803      	ldr	r3, [r0, #0]
 800b8ee:	7429      	strb	r1, [r5, #16]
 800b8f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8f2:	4798      	blx	r3
 800b8f4:	b116      	cbz	r6, 800b8fc <HttpDaemon::HandlePost(bool)+0x6c>
 800b8f6:	4b34      	ldr	r3, [pc, #208]	; (800b9c8 <HttpDaemon::HandlePost(bool)+0x138>)
 800b8f8:	681b      	ldr	r3, [r3, #0]
 800b8fa:	606b      	str	r3, [r5, #4]
 800b8fc:	4b33      	ldr	r3, [pc, #204]	; (800b9cc <HttpDaemon::HandlePost(bool)+0x13c>)
 800b8fe:	4a34      	ldr	r2, [pc, #208]	; (800b9d0 <HttpDaemon::HandlePost(bool)+0x140>)
 800b900:	4834      	ldr	r0, [pc, #208]	; (800b9d4 <HttpDaemon::HandlePost(bool)+0x144>)
 800b902:	6023      	str	r3, [r4, #0]
 800b904:	f240 519f 	movw	r1, #1439	; 0x59f
 800b908:	f7fe fde6 	bl	800a4d8 <snprintf>
 800b90c:	8460      	strh	r0, [r4, #34]	; 0x22
 800b90e:	20c8      	movs	r0, #200	; 0xc8
 800b910:	e024      	b.n	800b95c <HttpDaemon::HandlePost(bool)+0xcc>
 800b912:	4931      	ldr	r1, [pc, #196]	; (800b9d8 <HttpDaemon::HandlePost(bool)+0x148>)
 800b914:	68a0      	ldr	r0, [r4, #8]
 800b916:	f10d 0207 	add.w	r2, sp, #7
 800b91a:	f009 fbb0 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b91e:	b9d8      	cbnz	r0, 800b958 <HttpDaemon::HandlePost(bool)+0xc8>
 800b920:	4b2e      	ldr	r3, [pc, #184]	; (800b9dc <HttpDaemon::HandlePost(bool)+0x14c>)
 800b922:	6818      	ldr	r0, [r3, #0]
 800b924:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b928:	b11b      	cbz	r3, 800b932 <HttpDaemon::HandlePost(bool)+0xa2>
 800b92a:	2104      	movs	r1, #4
 800b92c:	f009 ff90 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800b930:	e7e4      	b.n	800b8fc <HttpDaemon::HandlePost(bool)+0x6c>
 800b932:	2102      	movs	r1, #2
 800b934:	e7fa      	b.n	800b92c <HttpDaemon::HandlePost(bool)+0x9c>
 800b936:	4b2a      	ldr	r3, [pc, #168]	; (800b9e0 <HttpDaemon::HandlePost(bool)+0x150>)
 800b938:	2001      	movs	r0, #1
 800b93a:	781d      	ldrb	r5, [r3, #0]
 800b93c:	f7ff fdca 	bl	800b4d4 <PropertiesConfig::EnableJSON(bool)>
 800b940:	4b28      	ldr	r3, [pc, #160]	; (800b9e4 <HttpDaemon::HandlePost(bool)+0x154>)
 800b942:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800b944:	6818      	ldr	r0, [r3, #0]
 800b946:	68a1      	ldr	r1, [r4, #8]
 800b948:	f005 0501 	and.w	r5, r5, #1
 800b94c:	f7ff fa26 	bl	800ad9c <RemoteConfig::HandleSet(void*, unsigned int)>
 800b950:	4628      	mov	r0, r5
 800b952:	f7ff fdbf 	bl	800b4d4 <PropertiesConfig::EnableJSON(bool)>
 800b956:	e7d1      	b.n	800b8fc <HttpDaemon::HandlePost(bool)+0x6c>
 800b958:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b95c:	b002      	add	sp, #8
 800b95e:	bd70      	pop	{r4, r5, r6, pc}
 800b960:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b962:	6962      	ldr	r2, [r4, #20]
 800b964:	429a      	cmp	r2, r3
 800b966:	dbd2      	blt.n	800b90e <HttpDaemon::HandlePost(bool)+0x7e>
 800b968:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b96a:	2b00      	cmp	r3, #0
 800b96c:	d0cf      	beq.n	800b90e <HttpDaemon::HandlePost(bool)+0x7e>
 800b96e:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b972:	2b00      	cmp	r3, #0
 800b974:	d0df      	beq.n	800b936 <HttpDaemon::HandlePost(bool)+0xa6>
 800b976:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800b978:	68a0      	ldr	r0, [r4, #8]
 800b97a:	2201      	movs	r2, #1
 800b97c:	f009 f8f8 	bl	8014b70 <properties::convert_json_file(char*, unsigned short, bool)>
 800b980:	2800      	cmp	r0, #0
 800b982:	dde9      	ble.n	800b958 <HttpDaemon::HandlePost(bool)+0xc8>
 800b984:	4918      	ldr	r1, [pc, #96]	; (800b9e8 <HttpDaemon::HandlePost(bool)+0x158>)
 800b986:	68a0      	ldr	r0, [r4, #8]
 800b988:	f10d 0207 	add.w	r2, sp, #7
 800b98c:	f009 fb77 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b990:	2800      	cmp	r0, #0
 800b992:	d19b      	bne.n	800b8cc <HttpDaemon::HandlePost(bool)+0x3c>
 800b994:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b998:	2b00      	cmp	r3, #0
 800b99a:	d0af      	beq.n	800b8fc <HttpDaemon::HandlePost(bool)+0x6c>
 800b99c:	4b11      	ldr	r3, [pc, #68]	; (800b9e4 <HttpDaemon::HandlePost(bool)+0x154>)
 800b99e:	681b      	ldr	r3, [r3, #0]
 800b9a0:	7b9b      	ldrb	r3, [r3, #14]
 800b9a2:	2b00      	cmp	r3, #0
 800b9a4:	d0d8      	beq.n	800b958 <HttpDaemon::HandlePost(bool)+0xc8>
 800b9a6:	4b11      	ldr	r3, [pc, #68]	; (800b9ec <HttpDaemon::HandlePost(bool)+0x15c>)
 800b9a8:	6818      	ldr	r0, [r3, #0]
 800b9aa:	f00a f885 	bl	8015ab8 <Hardware::Reboot()>
 800b9ae:	68c3      	ldr	r3, [r0, #12]
 800b9b0:	6083      	str	r3, [r0, #8]
 800b9b2:	6943      	ldr	r3, [r0, #20]
 800b9b4:	8483      	strh	r3, [r0, #36]	; 0x24
 800b9b6:	e7da      	b.n	800b96e <HttpDaemon::HandlePost(bool)+0xde>
 800b9b8:	08018e3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, sl, fp, pc}
 800b9bc:	08018dda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, fp, pc}
 800b9c0:	08018e2c 	stmdaeq	r1, {r2, r3, r5, r9, sl, fp, pc}
 800b9c4:	2000fc90 	mulcs	r0, r0, ip
 800b9c8:	2000fd94 	mulcs	r0, r4, sp
 800b9cc:	0801900d 	stmdaeq	r1, {r0, r2, r3, ip, pc}
 800b9d0:	08018e5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, sl, fp, pc}
 800b9d4:	20000128 	andcs	r0, r0, r8, lsr #2
 800b9d8:	08018e52 	stmdaeq	r1, {r1, r4, r6, r9, sl, fp, pc}
 800b9dc:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800b9e0:	2000fc8c 	andcs	pc, r0, ip, lsl #25
 800b9e4:	20000124 	andcs	r0, r0, r4, lsr #2
 800b9e8:	08018e4b 	stmdaeq	r1, {r0, r1, r3, r6, r9, sl, fp, pc}
 800b9ec:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800b9f0 <HttpDaemon::Run()>:
 800b9f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b9f2:	4e46      	ldr	r6, [pc, #280]	; (800bb0c <HttpDaemon::Run()+0x11c>)
 800b9f4:	6901      	ldr	r1, [r0, #16]
 800b9f6:	4604      	mov	r4, r0
 800b9f8:	f100 020c 	add.w	r2, r0, #12
 800b9fc:	6830      	ldr	r0, [r6, #0]
 800b9fe:	f007 fa18 	bl	8012e32 <Network::TcpRead(int, unsigned char const**)>
 800ba02:	6160      	str	r0, [r4, #20]
 800ba04:	2800      	cmp	r0, #0
 800ba06:	d05b      	beq.n	800bac0 <HttpDaemon::Run()+0xd0>
 800ba08:	69a3      	ldr	r3, [r4, #24]
 800ba0a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ba0e:	d159      	bne.n	800bac4 <HttpDaemon::Run()+0xd4>
 800ba10:	4620      	mov	r0, r4
 800ba12:	f7ff fe1b 	bl	800b64c <HttpDaemon::ParseRequest()>
 800ba16:	28c8      	cmp	r0, #200	; 0xc8
 800ba18:	61a0      	str	r0, [r4, #24]
 800ba1a:	d106      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800ba1c:	69e3      	ldr	r3, [r4, #28]
 800ba1e:	2b00      	cmp	r3, #0
 800ba20:	d142      	bne.n	800baa8 <HttpDaemon::Run()+0xb8>
 800ba22:	4620      	mov	r0, r4
 800ba24:	f7ff fe8e 	bl	800b744 <HttpDaemon::HandleGet()>
 800ba28:	61a0      	str	r0, [r4, #24]
 800ba2a:	69a3      	ldr	r3, [r4, #24]
 800ba2c:	2bc8      	cmp	r3, #200	; 0xc8
 800ba2e:	d06b      	beq.n	800bb08 <HttpDaemon::Run()+0x118>
 800ba30:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800ba34:	d05e      	beq.n	800baf4 <HttpDaemon::Run()+0x104>
 800ba36:	dc4e      	bgt.n	800bad6 <HttpDaemon::Run()+0xe6>
 800ba38:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800ba3c:	d05c      	beq.n	800baf8 <HttpDaemon::Run()+0x108>
 800ba3e:	f240 129d 	movw	r2, #413	; 0x19d
 800ba42:	4293      	cmp	r3, r2
 800ba44:	d05a      	beq.n	800bafc <HttpDaemon::Run()+0x10c>
 800ba46:	4d32      	ldr	r5, [pc, #200]	; (800bb10 <HttpDaemon::Run()+0x120>)
 800ba48:	4a32      	ldr	r2, [pc, #200]	; (800bb14 <HttpDaemon::Run()+0x124>)
 800ba4a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800ba4e:	bf18      	it	ne
 800ba50:	4615      	movne	r5, r2
 800ba52:	4a31      	ldr	r2, [pc, #196]	; (800bb18 <HttpDaemon::Run()+0x128>)
 800ba54:	6022      	str	r2, [r4, #0]
 800ba56:	e9cd 5500 	strd	r5, r5, [sp]
 800ba5a:	4a30      	ldr	r2, [pc, #192]	; (800bb1c <HttpDaemon::Run()+0x12c>)
 800ba5c:	4830      	ldr	r0, [pc, #192]	; (800bb20 <HttpDaemon::Run()+0x130>)
 800ba5e:	f240 519f 	movw	r1, #1439	; 0x59f
 800ba62:	f7fe fd39 	bl	800a4d8 <snprintf>
 800ba66:	8460      	strh	r0, [r4, #34]	; 0x22
 800ba68:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ba6a:	9303      	str	r3, [sp, #12]
 800ba6c:	6823      	ldr	r3, [r4, #0]
 800ba6e:	9302      	str	r3, [sp, #8]
 800ba70:	4b2c      	ldr	r3, [pc, #176]	; (800bb24 <HttpDaemon::Run()+0x134>)
 800ba72:	4a2d      	ldr	r2, [pc, #180]	; (800bb28 <HttpDaemon::Run()+0x138>)
 800ba74:	68e0      	ldr	r0, [r4, #12]
 800ba76:	e9cd 5300 	strd	r5, r3, [sp]
 800ba7a:	f240 519f 	movw	r1, #1439	; 0x59f
 800ba7e:	69a3      	ldr	r3, [r4, #24]
 800ba80:	f7fe fd2a 	bl	800a4d8 <snprintf>
 800ba84:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800ba88:	b283      	uxth	r3, r0
 800ba8a:	6830      	ldr	r0, [r6, #0]
 800ba8c:	f007 f9d5 	bl	8012e3a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800ba90:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ba92:	4a23      	ldr	r2, [pc, #140]	; (800bb20 <HttpDaemon::Run()+0x130>)
 800ba94:	6921      	ldr	r1, [r4, #16]
 800ba96:	6830      	ldr	r0, [r6, #0]
 800ba98:	f007 f9cf 	bl	8012e3a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800ba9c:	f44f 7202 	mov.w	r2, #520	; 0x208
 800baa0:	2302      	movs	r3, #2
 800baa2:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800baa6:	e00b      	b.n	800bac0 <HttpDaemon::Run()+0xd0>
 800baa8:	2b01      	cmp	r3, #1
 800baaa:	d1be      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800baac:	2100      	movs	r1, #0
 800baae:	4620      	mov	r0, r4
 800bab0:	f7ff feee 	bl	800b890 <HttpDaemon::HandlePost(bool)>
 800bab4:	28c8      	cmp	r0, #200	; 0xc8
 800bab6:	61a0      	str	r0, [r4, #24]
 800bab8:	d1b7      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800baba:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800babc:	2b00      	cmp	r3, #0
 800babe:	d1b4      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800bac0:	b004      	add	sp, #16
 800bac2:	bd70      	pop	{r4, r5, r6, pc}
 800bac4:	2bc8      	cmp	r3, #200	; 0xc8
 800bac6:	d1b0      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800bac8:	69e1      	ldr	r1, [r4, #28]
 800baca:	2901      	cmp	r1, #1
 800bacc:	d1ad      	bne.n	800ba2a <HttpDaemon::Run()+0x3a>
 800bace:	4620      	mov	r0, r4
 800bad0:	f7ff fede 	bl	800b890 <HttpDaemon::HandlePost(bool)>
 800bad4:	e7a8      	b.n	800ba28 <HttpDaemon::Run()+0x38>
 800bad6:	f240 12f5 	movw	r2, #501	; 0x1f5
 800bada:	4293      	cmp	r3, r2
 800badc:	d010      	beq.n	800bb00 <HttpDaemon::Run()+0x110>
 800bade:	f240 12f9 	movw	r2, #505	; 0x1f9
 800bae2:	4293      	cmp	r3, r2
 800bae4:	d00e      	beq.n	800bb04 <HttpDaemon::Run()+0x114>
 800bae6:	4d11      	ldr	r5, [pc, #68]	; (800bb2c <HttpDaemon::Run()+0x13c>)
 800bae8:	4a0a      	ldr	r2, [pc, #40]	; (800bb14 <HttpDaemon::Run()+0x124>)
 800baea:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800baee:	bf18      	it	ne
 800baf0:	4615      	movne	r5, r2
 800baf2:	e7ae      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800baf4:	4d0e      	ldr	r5, [pc, #56]	; (800bb30 <HttpDaemon::Run()+0x140>)
 800baf6:	e7ac      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800baf8:	4d0e      	ldr	r5, [pc, #56]	; (800bb34 <HttpDaemon::Run()+0x144>)
 800bafa:	e7aa      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800bafc:	4d0e      	ldr	r5, [pc, #56]	; (800bb38 <HttpDaemon::Run()+0x148>)
 800bafe:	e7a8      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800bb00:	4d0e      	ldr	r5, [pc, #56]	; (800bb3c <HttpDaemon::Run()+0x14c>)
 800bb02:	e7a6      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800bb04:	4d0e      	ldr	r5, [pc, #56]	; (800bb40 <HttpDaemon::Run()+0x150>)
 800bb06:	e7a4      	b.n	800ba52 <HttpDaemon::Run()+0x62>
 800bb08:	4d0e      	ldr	r5, [pc, #56]	; (800bb44 <HttpDaemon::Run()+0x154>)
 800bb0a:	e7ad      	b.n	800ba68 <HttpDaemon::Run()+0x78>
 800bb0c:	2000f994 	mulcs	r0, r4, r9
 800bb10:	08018eb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r9, sl, fp, pc}
 800bb14:	08018f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 800bb18:	0801900d 	stmdaeq	r1, {r0, r2, r3, ip, pc}
 800bb1c:	08018f4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, fp, pc}
 800bb20:	20000128 	andcs	r0, r0, r8, lsr #2
 800bb24:	08019002 	stmdaeq	r1, {r1, ip, pc}
 800bb28:	08018faa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, fp, pc}
 800bb2c:	08018efb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, fp, pc}
 800bb30:	08018ee6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, fp, pc}
 800bb34:	08018ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, pc}
 800bb38:	08018ecd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, fp, pc}
 800bb3c:	08018f11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, pc}
 800bb40:	08018f28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, pc}
 800bb44:	08018f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp, pc}

0800bb48 <remoteconfig::json_get_list(char*, unsigned short)>:
 800bb48:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb4a:	4b13      	ldr	r3, [pc, #76]	; (800bb98 <remoteconfig::json_get_list(char*, unsigned short)+0x50>)
 800bb4c:	4f13      	ldr	r7, [pc, #76]	; (800bb9c <remoteconfig::json_get_list(char*, unsigned short)+0x54>)
 800bb4e:	681b      	ldr	r3, [r3, #0]
 800bb50:	b08b      	sub	sp, #44	; 0x2c
 800bb52:	4605      	mov	r5, r0
 800bb54:	6838      	ldr	r0, [r7, #0]
 800bb56:	695c      	ldr	r4, [r3, #20]
 800bb58:	9109      	str	r1, [sp, #36]	; 0x24
 800bb5a:	f7fe ffe1 	bl	800ab20 <RemoteConfig::GetStringNode() const>
 800bb5e:	4606      	mov	r6, r0
 800bb60:	6838      	ldr	r0, [r7, #0]
 800bb62:	f7fe ffe9 	bl	800ab38 <RemoteConfig::GetStringOutput() const>
 800bb66:	4b0e      	ldr	r3, [pc, #56]	; (800bba0 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800bb68:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bb6a:	7a1a      	ldrb	r2, [r3, #8]
 800bb6c:	9604      	str	r6, [sp, #16]
 800bb6e:	3309      	adds	r3, #9
 800bb70:	9303      	str	r3, [sp, #12]
 800bb72:	0e23      	lsrs	r3, r4, #24
 800bb74:	9302      	str	r3, [sp, #8]
 800bb76:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800bb7a:	9301      	str	r3, [sp, #4]
 800bb7c:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800bb80:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800bb84:	9300      	str	r3, [sp, #0]
 800bb86:	4a07      	ldr	r2, [pc, #28]	; (800bba4 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>)
 800bb88:	b2e3      	uxtb	r3, r4
 800bb8a:	4628      	mov	r0, r5
 800bb8c:	f7fe fca4 	bl	800a4d8 <snprintf>
 800bb90:	b280      	uxth	r0, r0
 800bb92:	b00b      	add	sp, #44	; 0x2c
 800bb94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb96:	bf00      	nop
 800bb98:	2000f994 	mulcs	r0, r4, r9
 800bb9c:	20000124 	andcs	r0, r0, r4, lsr #2
 800bba0:	20000100 	andcs	r0, r0, r0, lsl #2
 800bba4:	080190e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, ip, pc}

0800bba8 <remoteconfig::json_get_version(char*, unsigned short)>:
 800bba8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bbaa:	4b0a      	ldr	r3, [pc, #40]	; (800bbd4 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800bbac:	9305      	str	r3, [sp, #20]
 800bbae:	2208      	movs	r2, #8
 800bbb0:	9204      	str	r2, [sp, #16]
 800bbb2:	f1a3 020b 	sub.w	r2, r3, #11
 800bbb6:	9203      	str	r2, [sp, #12]
 800bbb8:	220b      	movs	r2, #11
 800bbba:	9202      	str	r2, [sp, #8]
 800bbbc:	3b0e      	subs	r3, #14
 800bbbe:	4a06      	ldr	r2, [pc, #24]	; (800bbd8 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800bbc0:	9201      	str	r2, [sp, #4]
 800bbc2:	9300      	str	r3, [sp, #0]
 800bbc4:	4a05      	ldr	r2, [pc, #20]	; (800bbdc <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800bbc6:	2303      	movs	r3, #3
 800bbc8:	f7fe fc86 	bl	800a4d8 <snprintf>
 800bbcc:	b280      	uxth	r0, r0
 800bbce:	b007      	add	sp, #28
 800bbd0:	f85d fb04 	ldr.w	pc, [sp], #4
 800bbd4:	2000fd2e 	andcs	pc, r0, lr, lsr #26
 800bbd8:	08019002 	stmdaeq	r1, {r1, ip, pc}
 800bbdc:	08019146 	stmdaeq	r1, {r1, r2, r6, r8, ip, pc}

0800bbe0 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800bbe0:	b508      	push	{r3, lr}
 800bbe2:	4b05      	ldr	r3, [pc, #20]	; (800bbf8 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800bbe4:	681a      	ldr	r2, [r3, #0]
 800bbe6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800bbea:	fbb2 f3f3 	udiv	r3, r2, r3
 800bbee:	4a03      	ldr	r2, [pc, #12]	; (800bbfc <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800bbf0:	f7fe fc72 	bl	800a4d8 <snprintf>
 800bbf4:	b280      	uxth	r0, r0
 800bbf6:	bd08      	pop	{r3, pc}
 800bbf8:	2000fd94 	mulcs	r0, r4, sp
 800bbfc:	0801918c 	stmdaeq	r1, {r2, r3, r7, r8, ip, pc}

0800bc00 <remoteconfig::json_get_display(char*, unsigned short)>:
 800bc00:	b508      	push	{r3, lr}
 800bc02:	4b05      	ldr	r3, [pc, #20]	; (800bc18 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800bc04:	4a05      	ldr	r2, [pc, #20]	; (800bc1c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800bc06:	681b      	ldr	r3, [r3, #0]
 800bc08:	7c1b      	ldrb	r3, [r3, #16]
 800bc0a:	f083 0301 	eor.w	r3, r3, #1
 800bc0e:	f7fe fc63 	bl	800a4d8 <snprintf>
 800bc12:	b280      	uxth	r0, r0
 800bc14:	bd08      	pop	{r3, pc}
 800bc16:	bf00      	nop
 800bc18:	2000fc90 	mulcs	r0, r0, ip
 800bc1c:	0801919b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, ip, pc}

0800bc20 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800bc20:	b508      	push	{r3, lr}
 800bc22:	4a02      	ldr	r2, [pc, #8]	; (800bc2c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800bc24:	f7fe fc58 	bl	800a4d8 <snprintf>
 800bc28:	b280      	uxth	r0, r0
 800bc2a:	bd08      	pop	{r3, pc}
 800bc2c:	080191aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, ip, pc}

0800bc30 <get_file_content(char const*, char*)>:
 800bc30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc32:	4a11      	ldr	r2, [pc, #68]	; (800bc78 <get_file_content(char const*, char*)+0x48>)
 800bc34:	2300      	movs	r3, #0
 800bc36:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800bc3a:	1e46      	subs	r6, r0, #1
 800bc3c:	3c01      	subs	r4, #1
 800bc3e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800bc42:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800bc46:	42bd      	cmp	r5, r7
 800bc48:	d005      	beq.n	800bc56 <get_file_content(char const*, char*)+0x26>
 800bc4a:	3301      	adds	r3, #1
 800bc4c:	2b03      	cmp	r3, #3
 800bc4e:	d1f2      	bne.n	800bc36 <get_file_content(char const*, char*)+0x6>
 800bc50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bc54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bc56:	2d00      	cmp	r5, #0
 800bc58:	d1f1      	bne.n	800bc3e <get_file_content(char const*, char*)+0xe>
 800bc5a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800bc5e:	4608      	mov	r0, r1
 800bc60:	6853      	ldr	r3, [r2, #4]
 800bc62:	3b01      	subs	r3, #1
 800bc64:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800bc68:	f800 2b01 	strb.w	r2, [r0], #1
 800bc6c:	2a00      	cmp	r2, #0
 800bc6e:	d1f9      	bne.n	800bc64 <get_file_content(char const*, char*)+0x34>
 800bc70:	1a41      	subs	r1, r0, r1
 800bc72:	1e48      	subs	r0, r1, #1
 800bc74:	e7ee      	b.n	800bc54 <get_file_content(char const*, char*)+0x24>
 800bc76:	bf00      	nop
 800bc78:	08019508 	stmdaeq	r1, {r3, r8, sl, ip, pc}

0800bc7c <e131::universe_to_multicast_ip(unsigned short)>:
 800bc7c:	b513      	push	{r0, r1, r4, lr}
 800bc7e:	4604      	mov	r4, r0
 800bc80:	a901      	add	r1, sp, #4
 800bc82:	4806      	ldr	r0, [pc, #24]	; (800bc9c <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800bc84:	f009 ffba 	bl	8015bfc <inet_aton>
 800bc88:	9801      	ldr	r0, [sp, #4]
 800bc8a:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800bc8e:	0224      	lsls	r4, r4, #8
 800bc90:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800bc94:	4320      	orrs	r0, r4
 800bc96:	b002      	add	sp, #8
 800bc98:	bd10      	pop	{r4, pc}
 800bc9a:	bf00      	nop
 800bc9c:	08019a4a 	stmdaeq	r1, {r1, r3, r6, r9, fp, ip, pc}

0800bca0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800bca0:	b510      	push	{r4, lr}
 800bca2:	f240 6304 	movw	r3, #1540	; 0x604
 800bca6:	fb03 0001 	mla	r0, r3, r1, r0
 800bcaa:	2300      	movs	r3, #0
 800bcac:	4293      	cmp	r3, r2
 800bcae:	d100      	bne.n	800bcb2 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800bcb0:	bd10      	pop	{r4, pc}
 800bcb2:	f810 4b01 	ldrb.w	r4, [r0], #1
 800bcb6:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800bcba:	42a1      	cmp	r1, r4
 800bcbc:	bf38      	it	cc
 800bcbe:	4621      	movcc	r1, r4
 800bcc0:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800bcc4:	3301      	adds	r3, #1
 800bcc6:	e7f1      	b.n	800bcac <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800bcc8 <memset.constprop.0.isra.0>:
 800bcc8:	4401      	add	r1, r0
 800bcca:	2300      	movs	r3, #0
 800bccc:	4288      	cmp	r0, r1
 800bcce:	d100      	bne.n	800bcd2 <memset.constprop.0.isra.0+0xa>
 800bcd0:	4770      	bx	lr
 800bcd2:	f800 3b01 	strb.w	r3, [r0], #1
 800bcd6:	e7f9      	b.n	800bccc <memset.constprop.0.isra.0+0x4>

0800bcd8 <memcpy.isra.0>:
 800bcd8:	3801      	subs	r0, #1
 800bcda:	440a      	add	r2, r1
 800bcdc:	4291      	cmp	r1, r2
 800bcde:	d100      	bne.n	800bce2 <memcpy.isra.0+0xa>
 800bce0:	4770      	bx	lr
 800bce2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bce6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bcea:	e7f7      	b.n	800bcdc <memcpy.isra.0+0x4>

0800bcec <lightset::Data::Get()>:
 800bcec:	4b03      	ldr	r3, [pc, #12]	; (800bcfc <lightset::Data::Get()+0x10>)
 800bcee:	4804      	ldr	r0, [pc, #16]	; (800bd00 <lightset::Data::Get()+0x14>)
 800bcf0:	681a      	ldr	r2, [r3, #0]
 800bcf2:	07d2      	lsls	r2, r2, #31
 800bcf4:	bf5c      	itt	pl
 800bcf6:	2201      	movpl	r2, #1
 800bcf8:	601a      	strpl	r2, [r3, #0]
 800bcfa:	4770      	bx	lr
 800bcfc:	200006c8 	andcs	r0, r0, r8, asr #13
 800bd00:	20030000 	andcs	r0, r3, r0

0800bd04 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800bd04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bd06:	4604      	mov	r4, r0
 800bd08:	9103      	str	r1, [sp, #12]
 800bd0a:	9201      	str	r2, [sp, #4]
 800bd0c:	f7ff ffee 	bl	800bcec <lightset::Data::Get()>
 800bd10:	f240 6304 	movw	r3, #1540	; 0x604
 800bd14:	435c      	muls	r4, r3
 800bd16:	1906      	adds	r6, r0, r4
 800bd18:	9a01      	ldr	r2, [sp, #4]
 800bd1a:	9903      	ldr	r1, [sp, #12]
 800bd1c:	9202      	str	r2, [sp, #8]
 800bd1e:	4605      	mov	r5, r0
 800bd20:	4630      	mov	r0, r6
 800bd22:	9101      	str	r1, [sp, #4]
 800bd24:	f7ff ffd8 	bl	800bcd8 <memcpy.isra.0>
 800bd28:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bd2c:	9a02      	ldr	r2, [sp, #8]
 800bd2e:	9901      	ldr	r1, [sp, #4]
 800bd30:	f8c6 2600 	str.w	r2, [r6, #1536]	; 0x600
 800bd34:	1928      	adds	r0, r5, r4
 800bd36:	b004      	add	sp, #16
 800bd38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd3c:	f7ff bfcc 	b.w	800bcd8 <memcpy.isra.0>

0800bd40 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bd40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bd44:	4606      	mov	r6, r0
 800bd46:	9103      	str	r1, [sp, #12]
 800bd48:	9201      	str	r2, [sp, #4]
 800bd4a:	461f      	mov	r7, r3
 800bd4c:	f7ff ffce 	bl	800bcec <lightset::Data::Get()>
 800bd50:	f240 6404 	movw	r4, #1540	; 0x604
 800bd54:	4374      	muls	r4, r6
 800bd56:	eb00 0804 	add.w	r8, r0, r4
 800bd5a:	9a01      	ldr	r2, [sp, #4]
 800bd5c:	9903      	ldr	r1, [sp, #12]
 800bd5e:	9202      	str	r2, [sp, #8]
 800bd60:	4605      	mov	r5, r0
 800bd62:	4640      	mov	r0, r8
 800bd64:	9101      	str	r1, [sp, #4]
 800bd66:	f7ff ffb7 	bl	800bcd8 <memcpy.isra.0>
 800bd6a:	9a02      	ldr	r2, [sp, #8]
 800bd6c:	9901      	ldr	r1, [sp, #4]
 800bd6e:	f8c8 2600 	str.w	r2, [r8, #1536]	; 0x600
 800bd72:	b937      	cbnz	r7, 800bd82 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800bd74:	4631      	mov	r1, r6
 800bd76:	4628      	mov	r0, r5
 800bd78:	b004      	add	sp, #16
 800bd7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bd7e:	f7ff bf8f 	b.w	800bca0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800bd82:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bd86:	1928      	adds	r0, r5, r4
 800bd88:	b004      	add	sp, #16
 800bd8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bd8e:	f7ff bfa3 	b.w	800bcd8 <memcpy.isra.0>

0800bd92 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bd92:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd94:	b085      	sub	sp, #20
 800bd96:	461f      	mov	r7, r3
 800bd98:	4606      	mov	r6, r0
 800bd9a:	9103      	str	r1, [sp, #12]
 800bd9c:	9201      	str	r2, [sp, #4]
 800bd9e:	f7ff ffa5 	bl	800bcec <lightset::Data::Get()>
 800bda2:	f240 6404 	movw	r4, #1540	; 0x604
 800bda6:	4374      	muls	r4, r6
 800bda8:	4605      	mov	r5, r0
 800bdaa:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800bdae:	9a01      	ldr	r2, [sp, #4]
 800bdb0:	9903      	ldr	r1, [sp, #12]
 800bdb2:	9202      	str	r2, [sp, #8]
 800bdb4:	4428      	add	r0, r5
 800bdb6:	9101      	str	r1, [sp, #4]
 800bdb8:	f7ff ff8e 	bl	800bcd8 <memcpy.isra.0>
 800bdbc:	192b      	adds	r3, r5, r4
 800bdbe:	9a02      	ldr	r2, [sp, #8]
 800bdc0:	9901      	ldr	r1, [sp, #4]
 800bdc2:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
 800bdc6:	b937      	cbnz	r7, 800bdd6 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x44>
 800bdc8:	4631      	mov	r1, r6
 800bdca:	4628      	mov	r0, r5
 800bdcc:	b005      	add	sp, #20
 800bdce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bdd2:	f7ff bf65 	b.w	800bca0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800bdd6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bdda:	1928      	adds	r0, r5, r4
 800bddc:	b005      	add	sp, #20
 800bdde:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bde2:	f7ff bf79 	b.w	800bcd8 <memcpy.isra.0>
	...

0800bde8 <E131Bridge::E131Bridge()>:
 800bde8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bdea:	2300      	movs	r3, #0
 800bdec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800bdf0:	e9c0 2300 	strd	r2, r3, [r0]
 800bdf4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800bdf8:	2201      	movs	r2, #1
 800bdfa:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800bdfe:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800be02:	6743      	str	r3, [r0, #116]	; 0x74
 800be04:	4b28      	ldr	r3, [pc, #160]	; (800bea8 <E131Bridge::E131Bridge()+0xc0>)
 800be06:	7202      	strb	r2, [r0, #8]
 800be08:	f500 55cd 	add.w	r5, r0, #6560	; 0x19a0
 800be0c:	f500 52b4 	add.w	r2, r0, #5760	; 0x1680
 800be10:	b093      	sub	sp, #76	; 0x4c
 800be12:	4604      	mov	r4, r0
 800be14:	6018      	str	r0, [r3, #0]
 800be16:	f200 5614 	addw	r6, r0, #1300	; 0x514
 800be1a:	321c      	adds	r2, #28
 800be1c:	3514      	adds	r5, #20
 800be1e:	2764      	movs	r7, #100	; 0x64
 800be20:	4630      	mov	r0, r6
 800be22:	2144      	movs	r1, #68	; 0x44
 800be24:	f7ff ff50 	bl	800bcc8 <memset.constprop.0.isra.0>
 800be28:	4610      	mov	r0, r2
 800be2a:	210c      	movs	r1, #12
 800be2c:	f7ff ff4c 	bl	800bcc8 <memset.constprop.0.isra.0>
 800be30:	320c      	adds	r2, #12
 800be32:	f802 7c03 	strb.w	r7, [r2, #-3]
 800be36:	4295      	cmp	r5, r2
 800be38:	f106 0644 	add.w	r6, r6, #68	; 0x44
 800be3c:	d1f0      	bne.n	800be20 <E131Bridge::E131Bridge()+0x38>
 800be3e:	2120      	movs	r1, #32
 800be40:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800be44:	4d19      	ldr	r5, [pc, #100]	; (800beac <E131Bridge::E131Bridge()+0xc4>)
 800be46:	4a1a      	ldr	r2, [pc, #104]	; (800beb0 <E131Bridge::E131Bridge()+0xc8>)
 800be48:	f7ff ff3e 	bl	800bcc8 <memset.constprop.0.isra.0>
 800be4c:	2301      	movs	r3, #1
 800be4e:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800be52:	682b      	ldr	r3, [r5, #0]
 800be54:	9200      	str	r2, [sp, #0]
 800be56:	3320      	adds	r3, #32
 800be58:	4a16      	ldr	r2, [pc, #88]	; (800beb4 <E131Bridge::E131Bridge()+0xcc>)
 800be5a:	2140      	movs	r1, #64	; 0x40
 800be5c:	a802      	add	r0, sp, #8
 800be5e:	f7fe fb3b 	bl	800a4d8 <snprintf>
 800be62:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800be66:	a902      	add	r1, sp, #8
 800be68:	233f      	movs	r3, #63	; 0x3f
 800be6a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800be6e:	b928      	cbnz	r0, 800be7c <E131Bridge::E131Bridge()+0x94>
 800be70:	4413      	add	r3, r2
 800be72:	429a      	cmp	r2, r3
 800be74:	d006      	beq.n	800be84 <E131Bridge::E131Bridge()+0x9c>
 800be76:	f802 0b01 	strb.w	r0, [r2], #1
 800be7a:	e7fa      	b.n	800be72 <E131Bridge::E131Bridge()+0x8a>
 800be7c:	3b01      	subs	r3, #1
 800be7e:	f802 0b01 	strb.w	r0, [r2], #1
 800be82:	d1f2      	bne.n	800be6a <E131Bridge::E131Bridge()+0x82>
 800be84:	2300      	movs	r3, #0
 800be86:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800be8a:	6828      	ldr	r0, [r5, #0]
 800be8c:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800be90:	f006 fcdb 	bl	801284a <Network::Begin(unsigned short)>
 800be94:	4b08      	ldr	r3, [pc, #32]	; (800beb8 <E131Bridge::E131Bridge()+0xd0>)
 800be96:	4621      	mov	r1, r4
 800be98:	f841 0b24 	str.w	r0, [r1], #36
 800be9c:	6818      	ldr	r0, [r3, #0]
 800be9e:	f009 fdef 	bl	8015a80 <Hardware::GetUuid(unsigned char*)>
 800bea2:	4620      	mov	r0, r4
 800bea4:	b013      	add	sp, #76	; 0x4c
 800bea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bea8:	200006cc 	andcs	r0, r0, ip, asr #13
 800beac:	2000f994 	mulcs	r0, r4, r9
 800beb0:	08019002 	stmdaeq	r1, {r1, ip, pc}
 800beb4:	08019a56 	stmdaeq	r1, {r1, r2, r4, r6, r9, fp, ip, pc}
 800beb8:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800bebc <E131Bridge::Start()>:
 800bebc:	6943      	ldr	r3, [r0, #20]
 800bebe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bec0:	4604      	mov	r4, r0
 800bec2:	b363      	cbz	r3, 800bf1e <E131Bridge::Start()+0x62>
 800bec4:	6983      	ldr	r3, [r0, #24]
 800bec6:	b9cb      	cbnz	r3, 800befc <E131Bridge::Start()+0x40>
 800bec8:	a901      	add	r1, sp, #4
 800beca:	4819      	ldr	r0, [pc, #100]	; (800bf30 <E131Bridge::Start()+0x74>)
 800becc:	f009 fe96 	bl	8015bfc <inet_aton>
 800bed0:	9b01      	ldr	r3, [sp, #4]
 800bed2:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800bed6:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800beda:	6223      	str	r3, [r4, #32]
 800bedc:	f240 207e 	movw	r0, #638	; 0x27e
 800bee0:	f009 fe88 	bl	8015bf4 <operator new(unsigned int)>
 800bee4:	61a0      	str	r0, [r4, #24]
 800bee6:	4620      	mov	r0, r4
 800bee8:	f000 fd42 	bl	800c970 <E131Bridge::FillDataPacket()>
 800beec:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800bef0:	f009 fe80 	bl	8015bf4 <operator new(unsigned int)>
 800bef4:	61e0      	str	r0, [r4, #28]
 800bef6:	4620      	mov	r0, r4
 800bef8:	f000 fc92 	bl	800c820 <E131Bridge::FillDiscoveryPacket()>
 800befc:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800bf00:	2500      	movs	r5, #0
 800bf02:	361e      	adds	r6, #30
 800bf04:	270c      	movs	r7, #12
 800bf06:	fb07 f305 	mul.w	r3, r7, r5
 800bf0a:	5cf3      	ldrb	r3, [r6, r3]
 800bf0c:	b123      	cbz	r3, 800bf18 <E131Bridge::Start()+0x5c>
 800bf0e:	6960      	ldr	r0, [r4, #20]
 800bf10:	6803      	ldr	r3, [r0, #0]
 800bf12:	4629      	mov	r1, r5
 800bf14:	689b      	ldr	r3, [r3, #8]
 800bf16:	4798      	blx	r3
 800bf18:	3501      	adds	r5, #1
 800bf1a:	2d42      	cmp	r5, #66	; 0x42
 800bf1c:	d1f3      	bne.n	800bf06 <E131Bridge::Start()+0x4a>
 800bf1e:	4b05      	ldr	r3, [pc, #20]	; (800bf34 <E131Bridge::Start()+0x78>)
 800bf20:	6818      	ldr	r0, [r3, #0]
 800bf22:	2102      	movs	r1, #2
 800bf24:	b003      	add	sp, #12
 800bf26:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bf2a:	f009 bc91 	b.w	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800bf2e:	bf00      	nop
 800bf30:	08019a4a 	stmdaeq	r1, {r1, r3, r6, r9, fp, ip, pc}
 800bf34:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800bf38 <E131Bridge::Stop()>:
 800bf38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf3c:	2301      	movs	r3, #1
 800bf3e:	2500      	movs	r5, #0
 800bf40:	4604      	mov	r4, r0
 800bf42:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800bf46:	f240 6804 	movw	r8, #1540	; 0x604
 800bf4a:	462e      	mov	r6, r5
 800bf4c:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800bf50:	6860      	ldr	r0, [r4, #4]
 800bf52:	b118      	cbz	r0, 800bf5c <E131Bridge::Stop()+0x24>
 800bf54:	6803      	ldr	r3, [r0, #0]
 800bf56:	4629      	mov	r1, r5
 800bf58:	68db      	ldr	r3, [r3, #12]
 800bf5a:	4798      	blx	r3
 800bf5c:	f7ff fec6 	bl	800bcec <lightset::Data::Get()>
 800bf60:	2344      	movs	r3, #68	; 0x44
 800bf62:	fb08 0005 	mla	r0, r8, r5, r0
 800bf66:	436b      	muls	r3, r5
 800bf68:	3501      	adds	r5, #1
 800bf6a:	2d42      	cmp	r5, #66	; 0x42
 800bf6c:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800bf70:	54fe      	strb	r6, [r7, r3]
 800bf72:	d1ed      	bne.n	800bf50 <E131Bridge::Stop()+0x18>
 800bf74:	6963      	ldr	r3, [r4, #20]
 800bf76:	b183      	cbz	r3, 800bf9a <E131Bridge::Stop()+0x62>
 800bf78:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800bf7c:	2500      	movs	r5, #0
 800bf7e:	361e      	adds	r6, #30
 800bf80:	270c      	movs	r7, #12
 800bf82:	fb07 f305 	mul.w	r3, r7, r5
 800bf86:	5cf3      	ldrb	r3, [r6, r3]
 800bf88:	b123      	cbz	r3, 800bf94 <E131Bridge::Stop()+0x5c>
 800bf8a:	6960      	ldr	r0, [r4, #20]
 800bf8c:	6803      	ldr	r3, [r0, #0]
 800bf8e:	4629      	mov	r1, r5
 800bf90:	68db      	ldr	r3, [r3, #12]
 800bf92:	4798      	blx	r3
 800bf94:	3501      	adds	r5, #1
 800bf96:	2d42      	cmp	r5, #66	; 0x42
 800bf98:	d1f3      	bne.n	800bf82 <E131Bridge::Stop()+0x4a>
 800bf9a:	4b03      	ldr	r3, [pc, #12]	; (800bfa8 <E131Bridge::Stop()+0x70>)
 800bf9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bfa0:	6818      	ldr	r0, [r3, #0]
 800bfa2:	2100      	movs	r1, #0
 800bfa4:	f009 bc54 	b.w	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800bfa8:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800bfac <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800bfac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfae:	2300      	movs	r3, #0
 800bfb0:	f200 5414 	addw	r4, r0, #1300	; 0x514
 800bfb4:	2544      	movs	r5, #68	; 0x44
 800bfb6:	4299      	cmp	r1, r3
 800bfb8:	d004      	beq.n	800bfc4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x18>
 800bfba:	fb05 f603 	mul.w	r6, r5, r3
 800bfbe:	5ba6      	ldrh	r6, [r4, r6]
 800bfc0:	4296      	cmp	r6, r2
 800bfc2:	d011      	beq.n	800bfe8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>
 800bfc4:	3301      	adds	r3, #1
 800bfc6:	2b42      	cmp	r3, #66	; 0x42
 800bfc8:	d1f5      	bne.n	800bfb6 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xa>
 800bfca:	4b08      	ldr	r3, [pc, #32]	; (800bfec <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x40>)
 800bfcc:	6801      	ldr	r1, [r0, #0]
 800bfce:	681c      	ldr	r4, [r3, #0]
 800bfd0:	9101      	str	r1, [sp, #4]
 800bfd2:	4610      	mov	r0, r2
 800bfd4:	f7ff fe52 	bl	800bc7c <e131::universe_to_multicast_ip(unsigned short)>
 800bfd8:	9901      	ldr	r1, [sp, #4]
 800bfda:	4602      	mov	r2, r0
 800bfdc:	4620      	mov	r0, r4
 800bfde:	b002      	add	sp, #8
 800bfe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bfe4:	f006 bc45 	b.w	8012872 <Network::LeaveGroup(int, unsigned int)>
 800bfe8:	b002      	add	sp, #8
 800bfea:	bd70      	pop	{r4, r5, r6, pc}
 800bfec:	2000f994 	mulcs	r0, r4, r9

0800bff0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800bff0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bff2:	4604      	mov	r4, r0
 800bff4:	461d      	mov	r5, r3
 800bff6:	b1d1      	cbz	r1, 800c02e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3e>
 800bff8:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800bffc:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800c000:	b12a      	cbz	r2, 800c00e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800c002:	42aa      	cmp	r2, r5
 800c004:	d019      	beq.n	800c03a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800c006:	2142      	movs	r1, #66	; 0x42
 800c008:	4620      	mov	r0, r4
 800c00a:	f7ff ffcf 	bl	800bfac <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c00e:	4b0c      	ldr	r3, [pc, #48]	; (800c040 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x50>)
 800c010:	6821      	ldr	r1, [r4, #0]
 800c012:	8035      	strh	r5, [r6, #0]
 800c014:	4628      	mov	r0, r5
 800c016:	681c      	ldr	r4, [r3, #0]
 800c018:	9101      	str	r1, [sp, #4]
 800c01a:	f7ff fe2f 	bl	800bc7c <e131::universe_to_multicast_ip(unsigned short)>
 800c01e:	9901      	ldr	r1, [sp, #4]
 800c020:	4602      	mov	r2, r0
 800c022:	4620      	mov	r0, r4
 800c024:	b002      	add	sp, #8
 800c026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c02a:	f006 bc1f 	b.w	801286c <Network::JoinGroup(int, unsigned int)>
 800c02e:	b122      	cbz	r2, 800c03a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800c030:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800c034:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800c038:	e7e2      	b.n	800c000 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800c03a:	b002      	add	sp, #8
 800c03c:	bd70      	pop	{r4, r5, r6, pc}
 800c03e:	bf00      	nop
 800c040:	2000f994 	mulcs	r0, r4, r9

0800c044 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800c044:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c046:	4604      	mov	r4, r0
 800c048:	460d      	mov	r5, r1
 800c04a:	461e      	mov	r6, r3
 800c04c:	bb1a      	cbnz	r2, 800c096 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x52>
 800c04e:	2941      	cmp	r1, #65	; 0x41
 800c050:	d846      	bhi.n	800c0e0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800c052:	230c      	movs	r3, #12
 800c054:	fb03 0301 	mla	r3, r3, r1, r0
 800c058:	f241 619e 	movw	r1, #5790	; 0x169e
 800c05c:	5c5a      	ldrb	r2, [r3, r1]
 800c05e:	b132      	cbz	r2, 800c06e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x2a>
 800c060:	f241 629c 	movw	r2, #5788	; 0x169c
 800c064:	5a9b      	ldrh	r3, [r3, r2]
 800c066:	42b3      	cmp	r3, r6
 800c068:	d108      	bne.n	800c07c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800c06a:	b003      	add	sp, #12
 800c06c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c06e:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c072:	3201      	adds	r2, #1
 800c074:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800c078:	2201      	movs	r2, #1
 800c07a:	545a      	strb	r2, [r3, r1]
 800c07c:	230c      	movs	r3, #12
 800c07e:	fb03 4405 	mla	r4, r3, r5, r4
 800c082:	f241 639c 	movw	r3, #5788	; 0x169c
 800c086:	4630      	mov	r0, r6
 800c088:	52e6      	strh	r6, [r4, r3]
 800c08a:	f7ff fdf7 	bl	800bc7c <e131::universe_to_multicast_ip(unsigned short)>
 800c08e:	f504 54b5 	add.w	r4, r4, #5792	; 0x16a0
 800c092:	6020      	str	r0, [r4, #0]
 800c094:	e7e9      	b.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c096:	2a02      	cmp	r2, #2
 800c098:	d122      	bne.n	800c0e0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800c09a:	2941      	cmp	r1, #65	; 0x41
 800c09c:	d8e5      	bhi.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c09e:	2344      	movs	r3, #68	; 0x44
 800c0a0:	fb03 0301 	mla	r3, r3, r1, r0
 800c0a4:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800c0a8:	b152      	cbz	r2, 800c0c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 800c0aa:	2200      	movs	r2, #0
 800c0ac:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800c0b0:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800c0b4:	3b01      	subs	r3, #1
 800c0b6:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800c0ba:	4632      	mov	r2, r6
 800c0bc:	f7ff ff76 	bl	800bfac <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c0c0:	230c      	movs	r3, #12
 800c0c2:	fb03 4505 	mla	r5, r3, r5, r4
 800c0c6:	f241 639e 	movw	r3, #5790	; 0x169e
 800c0ca:	5cea      	ldrb	r2, [r5, r3]
 800c0cc:	2a00      	cmp	r2, #0
 800c0ce:	d0cc      	beq.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c0d0:	2200      	movs	r2, #0
 800c0d2:	54ea      	strb	r2, [r5, r3]
 800c0d4:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800c0d8:	3b01      	subs	r3, #1
 800c0da:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800c0de:	e7c4      	b.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c0e0:	2344      	movs	r3, #68	; 0x44
 800c0e2:	fb03 4305 	mla	r3, r3, r5, r4
 800c0e6:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800c0ea:	b1d2      	cbz	r2, 800c122 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xde>
 800c0ec:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800c0f0:	42b3      	cmp	r3, r6
 800c0f2:	d0ba      	beq.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c0f4:	4632      	mov	r2, r6
 800c0f6:	4629      	mov	r1, r5
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	f7ff ff57 	bl	800bfac <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c0fe:	4b0d      	ldr	r3, [pc, #52]	; (800c134 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xf0>)
 800c100:	6821      	ldr	r1, [r4, #0]
 800c102:	681f      	ldr	r7, [r3, #0]
 800c104:	9101      	str	r1, [sp, #4]
 800c106:	4630      	mov	r0, r6
 800c108:	f7ff fdb8 	bl	800bc7c <e131::universe_to_multicast_ip(unsigned short)>
 800c10c:	9901      	ldr	r1, [sp, #4]
 800c10e:	4602      	mov	r2, r0
 800c110:	4638      	mov	r0, r7
 800c112:	f006 fbab 	bl	801286c <Network::JoinGroup(int, unsigned int)>
 800c116:	2344      	movs	r3, #68	; 0x44
 800c118:	fb03 4305 	mla	r3, r3, r5, r4
 800c11c:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800c120:	e7a3      	b.n	800c06a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c122:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800c126:	3201      	adds	r2, #1
 800c128:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800c12c:	2201      	movs	r2, #1
 800c12e:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800c132:	e7e4      	b.n	800c0fe <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xba>
 800c134:	2000f994 	mulcs	r0, r4, r9

0800c138 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800c138:	b963      	cbnz	r3, 800c154 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x1c>
 800c13a:	2941      	cmp	r1, #65	; 0x41
 800c13c:	d813      	bhi.n	800c166 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2e>
 800c13e:	230c      	movs	r3, #12
 800c140:	fb03 0101 	mla	r1, r3, r1, r0
 800c144:	f241 639c 	movw	r3, #5788	; 0x169c
 800c148:	5acb      	ldrh	r3, [r1, r3]
 800c14a:	8013      	strh	r3, [r2, #0]
 800c14c:	f241 639e 	movw	r3, #5790	; 0x169e
 800c150:	5cc8      	ldrb	r0, [r1, r3]
 800c152:	4770      	bx	lr
 800c154:	2344      	movs	r3, #68	; 0x44
 800c156:	fb03 0101 	mla	r1, r3, r1, r0
 800c15a:	f8b1 3514 	ldrh.w	r3, [r1, #1300]	; 0x514
 800c15e:	f891 0516 	ldrb.w	r0, [r1, #1302]	; 0x516
 800c162:	8013      	strh	r3, [r2, #0]
 800c164:	4770      	bx	lr
 800c166:	4618      	mov	r0, r3
 800c168:	4770      	bx	lr

0800c16a <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800c16a:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800c16e:	b923      	cbnz	r3, 800c17a <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800c170:	2301      	movs	r3, #1
 800c172:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800c176:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c17a:	2344      	movs	r3, #68	; 0x44
 800c17c:	fb03 0101 	mla	r1, r3, r1, r0
 800c180:	2301      	movs	r3, #1
 800c182:	f881 3555 	strb.w	r3, [r1, #1365]	; 0x555
 800c186:	4770      	bx	lr

0800c188 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800c188:	4602      	mov	r2, r0
 800c18a:	2044      	movs	r0, #68	; 0x44
 800c18c:	4348      	muls	r0, r1
 800c18e:	b570      	push	{r4, r5, r6, lr}
 800c190:	1815      	adds	r5, r2, r0
 800c192:	68d3      	ldr	r3, [r2, #12]
 800c194:	460c      	mov	r4, r1
 800c196:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800c19a:	1a5b      	subs	r3, r3, r1
 800c19c:	f242 7110 	movw	r1, #10000	; 0x2710
 800c1a0:	428b      	cmp	r3, r1
 800c1a2:	d90a      	bls.n	800c1ba <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800c1a4:	2600      	movs	r6, #0
 800c1a6:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800c1aa:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800c1ae:	2110      	movs	r1, #16
 800c1b0:	4410      	add	r0, r2
 800c1b2:	f7ff fd89 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c1b6:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c1ba:	2344      	movs	r3, #68	; 0x44
 800c1bc:	435c      	muls	r4, r3
 800c1be:	1915      	adds	r5, r2, r4
 800c1c0:	68d3      	ldr	r3, [r2, #12]
 800c1c2:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800c1c6:	1a5b      	subs	r3, r3, r1
 800c1c8:	f242 7110 	movw	r1, #10000	; 0x2710
 800c1cc:	428b      	cmp	r3, r1
 800c1ce:	d90a      	bls.n	800c1e6 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800c1d0:	2600      	movs	r6, #0
 800c1d2:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800c1d6:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800c1da:	2110      	movs	r1, #16
 800c1dc:	1910      	adds	r0, r2, r4
 800c1de:	f7ff fd73 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c1e2:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c1e6:	f502 508c 	add.w	r0, r2, #4480	; 0x1180
 800c1ea:	4611      	mov	r1, r2
 800c1ec:	3008      	adds	r0, #8
 800c1ee:	2300      	movs	r3, #0
 800c1f0:	f891 4555 	ldrb.w	r4, [r1, #1365]	; 0x555
 800c1f4:	3144      	adds	r1, #68	; 0x44
 800c1f6:	4281      	cmp	r1, r0
 800c1f8:	ea43 0304 	orr.w	r3, r3, r4
 800c1fc:	d1f8      	bne.n	800c1f0 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x68>
 800c1fe:	b923      	cbnz	r3, 800c20a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x82>
 800c200:	2101      	movs	r1, #1
 800c202:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800c206:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800c20a:	bd70      	pop	{r4, r5, r6, pc}

0800c20c <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800c20c:	2244      	movs	r2, #68	; 0x44
 800c20e:	fb02 0101 	mla	r1, r2, r1, r0
 800c212:	68c3      	ldr	r3, [r0, #12]
 800c214:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800c218:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800c21c:	b510      	push	{r4, lr}
 800c21e:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800c222:	1a9a      	subs	r2, r3, r2
 800c224:	b184      	cbz	r4, 800c248 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800c226:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800c22a:	1a5b      	subs	r3, r3, r1
 800c22c:	b128      	cbz	r0, 800c23a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800c22e:	f242 700f 	movw	r0, #9999	; 0x270f
 800c232:	4283      	cmp	r3, r0
 800c234:	d90d      	bls.n	800c252 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800c236:	4282      	cmp	r2, r0
 800c238:	e002      	b.n	800c240 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800c23a:	f242 7010 	movw	r0, #10000	; 0x2710
 800c23e:	4283      	cmp	r3, r0
 800c240:	bf94      	ite	ls
 800c242:	2000      	movls	r0, #0
 800c244:	2001      	movhi	r0, #1
 800c246:	bd10      	pop	{r4, pc}
 800c248:	2800      	cmp	r0, #0
 800c24a:	d0fc      	beq.n	800c246 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800c24c:	f242 7010 	movw	r0, #10000	; 0x2710
 800c250:	e7f1      	b.n	800c236 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800c252:	2000      	movs	r0, #0
 800c254:	e7f7      	b.n	800c246 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800c256 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800c256:	684a      	ldr	r2, [r1, #4]
 800c258:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800c25a:	429a      	cmp	r2, r3
 800c25c:	b510      	push	{r4, lr}
 800c25e:	d10d      	bne.n	800c27c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800c260:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800c264:	3107      	adds	r1, #7
 800c266:	30a1      	adds	r0, #161	; 0xa1
 800c268:	4283      	cmp	r3, r0
 800c26a:	d101      	bne.n	800c270 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800c26c:	2001      	movs	r0, #1
 800c26e:	bd10      	pop	{r4, pc}
 800c270:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c274:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c278:	4294      	cmp	r4, r2
 800c27a:	d0f5      	beq.n	800c268 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800c27c:	2000      	movs	r0, #0
 800c27e:	e7f6      	b.n	800c26e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>

0800c280 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800c280:	2301      	movs	r3, #1
 800c282:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c286:	4604      	mov	r4, r0
 800c288:	4690      	mov	r8, r2
 800c28a:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c28e:	460f      	mov	r7, r1
 800c290:	2900      	cmp	r1, #0
 800c292:	d044      	beq.n	800c31e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c294:	2a00      	cmp	r2, #0
 800c296:	d042      	beq.n	800c31e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c298:	2600      	movs	r6, #0
 800c29a:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800c29e:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800c2a2:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c2a6:	4632      	mov	r2, r6
 800c2a8:	4637      	mov	r7, r6
 800c2aa:	f240 6904 	movw	r9, #1540	; 0x604
 800c2ae:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800c2b2:	f1b8 0f00 	cmp.w	r8, #0
 800c2b6:	d018      	beq.n	800c2ea <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800c2b8:	2110      	movs	r1, #16
 800c2ba:	4628      	mov	r0, r5
 800c2bc:	f845 7c04 	str.w	r7, [r5, #-4]
 800c2c0:	f7ff fd02 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c2c4:	2110      	movs	r1, #16
 800c2c6:	f105 001c 	add.w	r0, r5, #28
 800c2ca:	61af      	str	r7, [r5, #24]
 800c2cc:	f7ff fcfc 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c2d0:	f7ff fd0c 	bl	800bcec <lightset::Data::Get()>
 800c2d4:	fb09 0006 	mla	r0, r9, r6, r0
 800c2d8:	4642      	mov	r2, r8
 800c2da:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800c2de:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800c2e2:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800c2e6:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800c2ea:	3601      	adds	r6, #1
 800c2ec:	2e42      	cmp	r6, #66	; 0x42
 800c2ee:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c2f2:	d1dc      	bne.n	800c2ae <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800c2f4:	b12a      	cbz	r2, 800c302 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c2f6:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800c2fa:	2901      	cmp	r1, #1
 800c2fc:	d04a      	beq.n	800c394 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800c2fe:	2902      	cmp	r1, #2
 800c300:	d04d      	beq.n	800c39e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800c302:	4b29      	ldr	r3, [pc, #164]	; (800c3a8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800c304:	2102      	movs	r1, #2
 800c306:	6818      	ldr	r0, [r3, #0]
 800c308:	f009 faa2 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800c30c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c310:	f023 0302 	bic.w	r3, r3, #2
 800c314:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c318:	b003      	add	sp, #12
 800c31a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c31e:	2600      	movs	r6, #0
 800c320:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800c324:	4632      	mov	r2, r6
 800c326:	f240 6b04 	movw	fp, #1540	; 0x604
 800c32a:	46b1      	mov	r9, r6
 800c32c:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800c330:	f1ba 0f00 	cmp.w	sl, #0
 800c334:	d028      	beq.n	800c388 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c336:	b15f      	cbz	r7, 800c350 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c338:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800c33c:	b143      	cbz	r3, 800c350 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c33e:	f845 9c20 	str.w	r9, [r5, #-32]
 800c342:	2110      	movs	r1, #16
 800c344:	f1a5 001c 	sub.w	r0, r5, #28
 800c348:	f7ff fcbe 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c34c:	f885 9019 	strb.w	r9, [r5, #25]
 800c350:	f1b8 0f00 	cmp.w	r8, #0
 800c354:	d00a      	beq.n	800c36c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c356:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c35a:	b13b      	cbz	r3, 800c36c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c35c:	f845 9c04 	str.w	r9, [r5, #-4]
 800c360:	2110      	movs	r1, #16
 800c362:	4628      	mov	r0, r5
 800c364:	f7ff fcb0 	bl	800bcc8 <memset.constprop.0.isra.0>
 800c368:	f885 9019 	strb.w	r9, [r5, #25]
 800c36c:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c370:	b953      	cbnz	r3, 800c388 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c372:	9301      	str	r3, [sp, #4]
 800c374:	f7ff fcba 	bl	800bcec <lightset::Data::Get()>
 800c378:	fb0b 0006 	mla	r0, fp, r6, r0
 800c37c:	9b01      	ldr	r3, [sp, #4]
 800c37e:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800c382:	4652      	mov	r2, sl
 800c384:	762b      	strb	r3, [r5, #24]
 800c386:	76ab      	strb	r3, [r5, #26]
 800c388:	3601      	adds	r6, #1
 800c38a:	2e42      	cmp	r6, #66	; 0x42
 800c38c:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c390:	d1cc      	bne.n	800c32c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800c392:	e7af      	b.n	800c2f4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800c394:	6860      	ldr	r0, [r4, #4]
 800c396:	6803      	ldr	r3, [r0, #0]
 800c398:	695b      	ldr	r3, [r3, #20]
 800c39a:	4798      	blx	r3
 800c39c:	e7b1      	b.n	800c302 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c39e:	6860      	ldr	r0, [r4, #4]
 800c3a0:	6803      	ldr	r3, [r0, #0]
 800c3a2:	699b      	ldr	r3, [r3, #24]
 800c3a4:	4798      	blx	r3
 800c3a6:	e7ac      	b.n	800c302 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c3a8:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800c3ac <E131Bridge::HandleDmx()>:
 800c3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3b0:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800c3b4:	b085      	sub	sp, #20
 800c3b6:	ba7f      	rev16	r7, r7
 800c3b8:	b2bf      	uxth	r7, r7
 800c3ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c3be:	4604      	mov	r4, r0
 800c3c0:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800c3c4:	3f01      	subs	r7, #1
 800c3c6:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c3ca:	9301      	str	r3, [sp, #4]
 800c3cc:	2600      	movs	r6, #0
 800c3ce:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800c3d2:	b353      	cbz	r3, 800c42a <E131Bridge::HandleDmx()+0x7e>
 800c3d4:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800c3d8:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800c3dc:	ba5b      	rev16	r3, r3
 800c3de:	b29b      	uxth	r3, r3
 800c3e0:	429a      	cmp	r2, r3
 800c3e2:	d122      	bne.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c3e4:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c3e8:	9302      	str	r3, [sp, #8]
 800c3ea:	f1a5 0108 	sub.w	r1, r5, #8
 800c3ee:	4620      	mov	r0, r4
 800c3f0:	f7ff ff31 	bl	800c256 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c3f4:	f105 0114 	add.w	r1, r5, #20
 800c3f8:	4682      	mov	sl, r0
 800c3fa:	4620      	mov	r0, r4
 800c3fc:	f7ff ff2b 	bl	800c256 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c400:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800c404:	4680      	mov	r8, r0
 800c406:	f1ba 0f00 	cmp.w	sl, #0
 800c40a:	d01a      	beq.n	800c442 <E131Bridge::HandleDmx()+0x96>
 800c40c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c410:	7c2a      	ldrb	r2, [r5, #16]
 800c412:	742b      	strb	r3, [r5, #16]
 800c414:	3313      	adds	r3, #19
 800c416:	1a9b      	subs	r3, r3, r2
 800c418:	b2db      	uxtb	r3, r3
 800c41a:	2b13      	cmp	r3, #19
 800c41c:	d905      	bls.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c41e:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800c422:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c426:	2a00      	cmp	r2, #0
 800c428:	da14      	bge.n	800c454 <E131Bridge::HandleDmx()+0xa8>
 800c42a:	9b01      	ldr	r3, [sp, #4]
 800c42c:	3601      	adds	r6, #1
 800c42e:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800c432:	2e42      	cmp	r6, #66	; 0x42
 800c434:	9301      	str	r3, [sp, #4]
 800c436:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c43a:	d1c8      	bne.n	800c3ce <E131Bridge::HandleDmx()+0x22>
 800c43c:	b005      	add	sp, #20
 800c43e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c442:	2800      	cmp	r0, #0
 800c444:	d0eb      	beq.n	800c41e <E131Bridge::HandleDmx()+0x72>
 800c446:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c44a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800c44e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c452:	e7df      	b.n	800c414 <E131Bridge::HandleDmx()+0x68>
 800c454:	065a      	lsls	r2, r3, #25
 800c456:	d50b      	bpl.n	800c470 <E131Bridge::HandleDmx()+0xc4>
 800c458:	f1ba 0f00 	cmp.w	sl, #0
 800c45c:	d102      	bne.n	800c464 <E131Bridge::HandleDmx()+0xb8>
 800c45e:	f1b8 0f00 	cmp.w	r8, #0
 800c462:	d0e2      	beq.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c464:	4642      	mov	r2, r8
 800c466:	4651      	mov	r1, sl
 800c468:	4620      	mov	r0, r4
 800c46a:	f7ff ff09 	bl	800c280 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c46e:	e7dc      	b.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c470:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c474:	b133      	cbz	r3, 800c484 <E131Bridge::HandleDmx()+0xd8>
 800c476:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800c47a:	b91b      	cbnz	r3, 800c484 <E131Bridge::HandleDmx()+0xd8>
 800c47c:	4631      	mov	r1, r6
 800c47e:	4620      	mov	r0, r4
 800c480:	f7ff fe82 	bl	800c188 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800c484:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800c488:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800c48c:	4293      	cmp	r3, r2
 800c48e:	d259      	bcs.n	800c544 <E131Bridge::HandleDmx()+0x198>
 800c490:	4631      	mov	r1, r6
 800c492:	4620      	mov	r0, r4
 800c494:	9303      	str	r3, [sp, #12]
 800c496:	f7ff feb9 	bl	800c20c <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800c49a:	2800      	cmp	r0, #0
 800c49c:	d0c5      	beq.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c49e:	9b03      	ldr	r3, [sp, #12]
 800c4a0:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800c4a4:	9b02      	ldr	r3, [sp, #8]
 800c4a6:	2b00      	cmp	r3, #0
 800c4a8:	d154      	bne.n	800c554 <E131Bridge::HandleDmx()+0x1a8>
 800c4aa:	f1bb 0f00 	cmp.w	fp, #0
 800c4ae:	d15c      	bne.n	800c56a <E131Bridge::HandleDmx()+0x1be>
 800c4b0:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c4b2:	f845 3c04 	str.w	r3, [r5, #-4]
 800c4b6:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c4ba:	742b      	strb	r3, [r5, #16]
 800c4bc:	2210      	movs	r2, #16
 800c4be:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c4c2:	4628      	mov	r0, r5
 800c4c4:	f7ff fc08 	bl	800bcd8 <memcpy.isra.0>
 800c4c8:	68e3      	ldr	r3, [r4, #12]
 800c4ca:	f845 3c08 	str.w	r3, [r5, #-8]
 800c4ce:	463a      	mov	r2, r7
 800c4d0:	4649      	mov	r1, r9
 800c4d2:	4630      	mov	r0, r6
 800c4d4:	f7ff fc16 	bl	800bd04 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800c4d8:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c4dc:	069b      	lsls	r3, r3, #26
 800c4de:	f100 80aa 	bmi.w	800c636 <E131Bridge::HandleDmx()+0x28a>
 800c4e2:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800c4e6:	b29a      	uxth	r2, r3
 800c4e8:	2a00      	cmp	r2, #0
 800c4ea:	f000 80a8 	beq.w	800c63e <E131Bridge::HandleDmx()+0x292>
 800c4ee:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800c4f2:	2a00      	cmp	r2, #0
 800c4f4:	f040 80a3 	bne.w	800c63e <E131Bridge::HandleDmx()+0x292>
 800c4f8:	ba5b      	rev16	r3, r3
 800c4fa:	b29b      	uxth	r3, r3
 800c4fc:	f1ba 0f00 	cmp.w	sl, #0
 800c500:	f040 8096 	bne.w	800c630 <E131Bridge::HandleDmx()+0x284>
 800c504:	f1b8 0f00 	cmp.w	r8, #0
 800c508:	f040 8092 	bne.w	800c630 <E131Bridge::HandleDmx()+0x284>
 800c50c:	69aa      	ldr	r2, [r5, #24]
 800c50e:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800c512:	3a00      	subs	r2, #0
 800c514:	bf18      	it	ne
 800c516:	2201      	movne	r2, #1
 800c518:	3900      	subs	r1, #0
 800c51a:	bf18      	it	ne
 800c51c:	2101      	movne	r1, #1
 800c51e:	4620      	mov	r0, r4
 800c520:	f7ff fd66 	bl	800bff0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800c524:	f240 1301 	movw	r3, #257	; 0x101
 800c528:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800c52c:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800c530:	2b00      	cmp	r3, #0
 800c532:	f040 8089 	bne.w	800c648 <E131Bridge::HandleDmx()+0x29c>
 800c536:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c53a:	f043 0302 	orr.w	r3, r3, #2
 800c53e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c542:	e772      	b.n	800c42a <E131Bridge::HandleDmx()+0x7e>
 800c544:	d9ae      	bls.n	800c4a4 <E131Bridge::HandleDmx()+0xf8>
 800c546:	2200      	movs	r2, #0
 800c548:	f845 2c04 	str.w	r2, [r5, #-4]
 800c54c:	61aa      	str	r2, [r5, #24]
 800c54e:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800c552:	e7a5      	b.n	800c4a0 <E131Bridge::HandleDmx()+0xf4>
 800c554:	f1ba 0f00 	cmp.w	sl, #0
 800c558:	f000 809a 	beq.w	800c690 <E131Bridge::HandleDmx()+0x2e4>
 800c55c:	f1bb 0f00 	cmp.w	fp, #0
 800c560:	d159      	bne.n	800c616 <E131Bridge::HandleDmx()+0x26a>
 800c562:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c566:	742b      	strb	r3, [r5, #16]
 800c568:	e7ae      	b.n	800c4c8 <E131Bridge::HandleDmx()+0x11c>
 800c56a:	f1b8 0f00 	cmp.w	r8, #0
 800c56e:	d038      	beq.n	800c5e2 <E131Bridge::HandleDmx()+0x236>
 800c570:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c574:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c578:	68e3      	ldr	r3, [r4, #12]
 800c57a:	616b      	str	r3, [r5, #20]
 800c57c:	f7ff fbb6 	bl	800bcec <lightset::Data::Get()>
 800c580:	9b01      	ldr	r3, [sp, #4]
 800c582:	4683      	mov	fp, r0
 800c584:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800c588:	463a      	mov	r2, r7
 800c58a:	4649      	mov	r1, r9
 800c58c:	4458      	add	r0, fp
 800c58e:	f7ff fba3 	bl	800bcd8 <memcpy.isra.0>
 800c592:	f240 6304 	movw	r3, #1540	; 0x604
 800c596:	fb03 b306 	mla	r3, r3, r6, fp
 800c59a:	463a      	mov	r2, r7
 800c59c:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800c5a0:	9b01      	ldr	r3, [sp, #4]
 800c5a2:	4649      	mov	r1, r9
 800c5a4:	eb0b 0003 	add.w	r0, fp, r3
 800c5a8:	f7ff fb96 	bl	800bcd8 <memcpy.isra.0>
 800c5ac:	e794      	b.n	800c4d8 <E131Bridge::HandleDmx()+0x12c>
 800c5ae:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c5b0:	61ab      	str	r3, [r5, #24]
 800c5b2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c5b6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c5ba:	2210      	movs	r2, #16
 800c5bc:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c5c0:	f105 001c 	add.w	r0, r5, #28
 800c5c4:	f7ff fb88 	bl	800bcd8 <memcpy.isra.0>
 800c5c8:	68e3      	ldr	r3, [r4, #12]
 800c5ca:	616b      	str	r3, [r5, #20]
 800c5cc:	4631      	mov	r1, r6
 800c5ce:	4620      	mov	r0, r4
 800c5d0:	f7ff fdcb 	bl	800c16a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c5d4:	463a      	mov	r2, r7
 800c5d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c5d8:	4649      	mov	r1, r9
 800c5da:	4630      	mov	r0, r6
 800c5dc:	f7ff fbd9 	bl	800bd92 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c5e0:	e77a      	b.n	800c4d8 <E131Bridge::HandleDmx()+0x12c>
 800c5e2:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c5e4:	f845 3c04 	str.w	r3, [r5, #-4]
 800c5e8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c5ec:	742b      	strb	r3, [r5, #16]
 800c5ee:	2210      	movs	r2, #16
 800c5f0:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c5f4:	4628      	mov	r0, r5
 800c5f6:	f7ff fb6f 	bl	800bcd8 <memcpy.isra.0>
 800c5fa:	68e3      	ldr	r3, [r4, #12]
 800c5fc:	f845 3c08 	str.w	r3, [r5, #-8]
 800c600:	4631      	mov	r1, r6
 800c602:	4620      	mov	r0, r4
 800c604:	f7ff fdb1 	bl	800c16a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c608:	463a      	mov	r2, r7
 800c60a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c60c:	4649      	mov	r1, r9
 800c60e:	4630      	mov	r0, r6
 800c610:	f7ff fb96 	bl	800bd40 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c614:	e760      	b.n	800c4d8 <E131Bridge::HandleDmx()+0x12c>
 800c616:	f1b8 0f00 	cmp.w	r8, #0
 800c61a:	d103      	bne.n	800c624 <E131Bridge::HandleDmx()+0x278>
 800c61c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c620:	742b      	strb	r3, [r5, #16]
 800c622:	e7ea      	b.n	800c5fa <E131Bridge::HandleDmx()+0x24e>
 800c624:	4820      	ldr	r0, [pc, #128]	; (800c6a8 <E131Bridge::HandleDmx()+0x2fc>)
 800c626:	b005      	add	sp, #20
 800c628:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c62c:	f7fd bf2c 	b.w	800a488 <printf>
 800c630:	4642      	mov	r2, r8
 800c632:	4651      	mov	r1, sl
 800c634:	e773      	b.n	800c51e <E131Bridge::HandleDmx()+0x172>
 800c636:	f04f 0300 	mov.w	r3, #0
 800c63a:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800c63e:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c642:	2b00      	cmp	r3, #0
 800c644:	f47f af72 	bne.w	800c52c <E131Bridge::HandleDmx()+0x180>
 800c648:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800c64c:	f7ff fb4e 	bl	800bcec <lightset::Data::Get()>
 800c650:	f8d8 2000 	ldr.w	r2, [r8]
 800c654:	f240 6304 	movw	r3, #1540	; 0x604
 800c658:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800c65c:	9a01      	ldr	r2, [sp, #4]
 800c65e:	fb03 0306 	mla	r3, r3, r6, r0
 800c662:	1882      	adds	r2, r0, r2
 800c664:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800c668:	4631      	mov	r1, r6
 800c66a:	4640      	mov	r0, r8
 800c66c:	47d0      	blx	sl
 800c66e:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800c672:	2b00      	cmp	r3, #0
 800c674:	f47f af5f 	bne.w	800c536 <E131Bridge::HandleDmx()+0x18a>
 800c678:	6860      	ldr	r0, [r4, #4]
 800c67a:	6803      	ldr	r3, [r0, #0]
 800c67c:	4631      	mov	r1, r6
 800c67e:	689b      	ldr	r3, [r3, #8]
 800c680:	4798      	blx	r3
 800c682:	f04f 0301 	mov.w	r3, #1
 800c686:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800c68a:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800c68e:	e752      	b.n	800c536 <E131Bridge::HandleDmx()+0x18a>
 800c690:	f1bb 0f00 	cmp.w	fp, #0
 800c694:	d08b      	beq.n	800c5ae <E131Bridge::HandleDmx()+0x202>
 800c696:	f1b8 0f00 	cmp.w	r8, #0
 800c69a:	d0c3      	beq.n	800c624 <E131Bridge::HandleDmx()+0x278>
 800c69c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c6a0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c6a4:	e790      	b.n	800c5c8 <E131Bridge::HandleDmx()+0x21c>
 800c6a6:	bf00      	nop
 800c6a8:	08019a5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, fp, ip, pc}

0800c6ac <E131Bridge::IsValidRoot()>:
 800c6ac:	b530      	push	{r4, r5, lr}
 800c6ae:	4a0d      	ldr	r2, [pc, #52]	; (800c6e4 <E131Bridge::IsValidRoot()+0x38>)
 800c6b0:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800c6b4:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800c6b8:	4299      	cmp	r1, r3
 800c6ba:	d109      	bne.n	800c6d0 <E131Bridge::IsValidRoot()+0x24>
 800c6bc:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800c6c0:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800c6c4:	d00c      	beq.n	800c6e0 <E131Bridge::IsValidRoot()+0x34>
 800c6c6:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800c6ca:	4258      	negs	r0, r3
 800c6cc:	4158      	adcs	r0, r3
 800c6ce:	bd30      	pop	{r4, r5, pc}
 800c6d0:	f812 4b01 	ldrb.w	r4, [r2], #1
 800c6d4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800c6d8:	42a5      	cmp	r5, r4
 800c6da:	d0ed      	beq.n	800c6b8 <E131Bridge::IsValidRoot()+0xc>
 800c6dc:	2000      	movs	r0, #0
 800c6de:	e7f6      	b.n	800c6ce <E131Bridge::IsValidRoot()+0x22>
 800c6e0:	2001      	movs	r0, #1
 800c6e2:	e7f4      	b.n	800c6ce <E131Bridge::IsValidRoot()+0x22>
 800c6e4:	08019c0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, ip, pc}

0800c6e8 <E131Bridge::IsValidDataPacket()>:
 800c6e8:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800c6ec:	2b02      	cmp	r3, #2
 800c6ee:	d10d      	bne.n	800c70c <E131Bridge::IsValidDataPacket()+0x24>
 800c6f0:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800c6f4:	2ba1      	cmp	r3, #161	; 0xa1
 800c6f6:	d109      	bne.n	800c70c <E131Bridge::IsValidDataPacket()+0x24>
 800c6f8:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800c6fc:	b933      	cbnz	r3, 800c70c <E131Bridge::IsValidDataPacket()+0x24>
 800c6fe:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800c702:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800c706:	4258      	negs	r0, r3
 800c708:	4158      	adcs	r0, r3
 800c70a:	4770      	bx	lr
 800c70c:	2000      	movs	r0, #0
 800c70e:	4770      	bx	lr

0800c710 <E131Bridge::Run()>:
 800c710:	b530      	push	{r4, r5, lr}
 800c712:	4601      	mov	r1, r0
 800c714:	b085      	sub	sp, #20
 800c716:	4604      	mov	r4, r0
 800c718:	f10d 030e 	add.w	r3, sp, #14
 800c71c:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800c720:	9300      	str	r3, [sp, #0]
 800c722:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800c726:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800c72a:	f005 fb65 	bl	8011df8 <udp_recv>
 800c72e:	4b3a      	ldr	r3, [pc, #232]	; (800c818 <E131Bridge::Run()+0x108>)
 800c730:	681d      	ldr	r5, [r3, #0]
 800c732:	60e5      	str	r5, [r4, #12]
 800c734:	2800      	cmp	r0, #0
 800c736:	d138      	bne.n	800c7aa <E131Bridge::Run()+0x9a>
 800c738:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800c73c:	b16b      	cbz	r3, 800c75a <E131Bridge::Run()+0x4a>
 800c73e:	6923      	ldr	r3, [r4, #16]
 800c740:	1aed      	subs	r5, r5, r3
 800c742:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800c746:	429d      	cmp	r5, r3
 800c748:	d928      	bls.n	800c79c <E131Bridge::Run()+0x8c>
 800c74a:	6863      	ldr	r3, [r4, #4]
 800c74c:	b9eb      	cbnz	r3, 800c78a <E131Bridge::Run()+0x7a>
 800c74e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c752:	f023 0302 	bic.w	r3, r3, #2
 800c756:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c75a:	6963      	ldr	r3, [r4, #20]
 800c75c:	b12b      	cbz	r3, 800c76a <E131Bridge::Run()+0x5a>
 800c75e:	4620      	mov	r0, r4
 800c760:	f000 f94c 	bl	800c9fc <E131Bridge::HandleDmxIn()>
 800c764:	4620      	mov	r0, r4
 800c766:	f000 f8c7 	bl	800c8f8 <E131Bridge::SendDiscoveryPacket()>
 800c76a:	7a23      	ldrb	r3, [r4, #8]
 800c76c:	b15b      	cbz	r3, 800c786 <E131Bridge::Run()+0x76>
 800c76e:	4b2b      	ldr	r3, [pc, #172]	; (800c81c <E131Bridge::Run()+0x10c>)
 800c770:	6818      	ldr	r0, [r3, #0]
 800c772:	6843      	ldr	r3, [r0, #4]
 800c774:	2b04      	cmp	r3, #4
 800c776:	d006      	beq.n	800c786 <E131Bridge::Run()+0x76>
 800c778:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c77c:	2b00      	cmp	r3, #0
 800c77e:	d049      	beq.n	800c814 <E131Bridge::Run()+0x104>
 800c780:	2103      	movs	r1, #3
 800c782:	f009 f865 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800c786:	b005      	add	sp, #20
 800c788:	bd30      	pop	{r4, r5, pc}
 800c78a:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800c78e:	2b00      	cmp	r3, #0
 800c790:	d1dd      	bne.n	800c74e <E131Bridge::Run()+0x3e>
 800c792:	2201      	movs	r2, #1
 800c794:	4611      	mov	r1, r2
 800c796:	4620      	mov	r0, r4
 800c798:	f7ff fd72 	bl	800c280 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c79c:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800c7a0:	1a9b      	subs	r3, r3, r2
 800c7a2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c7a6:	d3d8      	bcc.n	800c75a <E131Bridge::Run()+0x4a>
 800c7a8:	e7d1      	b.n	800c74e <E131Bridge::Run()+0x3e>
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	f7ff ff7e 	bl	800c6ac <E131Bridge::IsValidRoot()>
 800c7b0:	2800      	cmp	r0, #0
 800c7b2:	d0e8      	beq.n	800c786 <E131Bridge::Run()+0x76>
 800c7b4:	2300      	movs	r3, #0
 800c7b6:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800c7ba:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c7be:	6125      	str	r5, [r4, #16]
 800c7c0:	b15b      	cbz	r3, 800c7da <E131Bridge::Run()+0xca>
 800c7c2:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800c7c6:	b943      	cbnz	r3, 800c7da <E131Bridge::Run()+0xca>
 800c7c8:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800c7cc:	1aad      	subs	r5, r5, r2
 800c7ce:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800c7d2:	4295      	cmp	r5, r2
 800c7d4:	bf88      	it	hi
 800c7d6:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800c7da:	6863      	ldr	r3, [r4, #4]
 800c7dc:	2b00      	cmp	r3, #0
 800c7de:	d0bc      	beq.n	800c75a <E131Bridge::Run()+0x4a>
 800c7e0:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800c7e4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800c7e8:	ba1a      	rev	r2, r3
 800c7ea:	d108      	bne.n	800c7fe <E131Bridge::Run()+0xee>
 800c7ec:	4620      	mov	r0, r4
 800c7ee:	f7ff ff7b 	bl	800c6e8 <E131Bridge::IsValidDataPacket()>
 800c7f2:	2800      	cmp	r0, #0
 800c7f4:	d0b1      	beq.n	800c75a <E131Bridge::Run()+0x4a>
 800c7f6:	4620      	mov	r0, r4
 800c7f8:	f7ff fdd8 	bl	800c3ac <E131Bridge::HandleDmx()>
 800c7fc:	e7ad      	b.n	800c75a <E131Bridge::Run()+0x4a>
 800c7fe:	2a08      	cmp	r2, #8
 800c800:	d1ab      	bne.n	800c75a <E131Bridge::Run()+0x4a>
 800c802:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800c806:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c80a:	d1a6      	bne.n	800c75a <E131Bridge::Run()+0x4a>
 800c80c:	4620      	mov	r0, r4
 800c80e:	f000 f971 	bl	800caf4 <E131Bridge::HandleSynchronization()>
 800c812:	e7a2      	b.n	800c75a <E131Bridge::Run()+0x4a>
 800c814:	2102      	movs	r1, #2
 800c816:	e7b4      	b.n	800c782 <E131Bridge::Run()+0x72>
 800c818:	2000fd94 	mulcs	r0, r4, sp
 800c81c:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800c820 <E131Bridge::FillDiscoveryPacket()>:
 800c820:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c824:	b510      	push	{r4, lr}
 800c826:	333c      	adds	r3, #60	; 0x3c
 800c828:	005b      	lsls	r3, r3, #1
 800c82a:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800c82e:	69c3      	ldr	r3, [r0, #28]
 800c830:	2200      	movs	r2, #0
 800c832:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800c836:	428b      	cmp	r3, r1
 800c838:	d14a      	bne.n	800c8d0 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800c83a:	69c3      	ldr	r3, [r0, #28]
 800c83c:	492d      	ldr	r1, [pc, #180]	; (800c8f4 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800c83e:	701a      	strb	r2, [r3, #0]
 800c840:	2210      	movs	r2, #16
 800c842:	705a      	strb	r2, [r3, #1]
 800c844:	1cda      	adds	r2, r3, #3
 800c846:	330f      	adds	r3, #15
 800c848:	4293      	cmp	r3, r2
 800c84a:	d144      	bne.n	800c8d6 <E131Bridge::FillDiscoveryPacket()+0xb6>
 800c84c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c850:	69c3      	ldr	r3, [r0, #28]
 800c852:	3234      	adds	r2, #52	; 0x34
 800c854:	0052      	lsls	r2, r2, #1
 800c856:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c85a:	ba52      	rev16	r2, r2
 800c85c:	821a      	strh	r2, [r3, #16]
 800c85e:	2200      	movs	r2, #0
 800c860:	749a      	strb	r2, [r3, #18]
 800c862:	74da      	strb	r2, [r3, #19]
 800c864:	751a      	strb	r2, [r3, #20]
 800c866:	2208      	movs	r2, #8
 800c868:	f803 2f15 	strb.w	r2, [r3, #21]!
 800c86c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800c870:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800c874:	4291      	cmp	r1, r2
 800c876:	d133      	bne.n	800c8e0 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800c878:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c87c:	69c3      	ldr	r3, [r0, #28]
 800c87e:	3229      	adds	r2, #41	; 0x29
 800c880:	0052      	lsls	r2, r2, #1
 800c882:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c886:	ba52      	rev16	r2, r2
 800c888:	84da      	strh	r2, [r3, #38]	; 0x26
 800c88a:	2200      	movs	r2, #0
 800c88c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800c890:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800c894:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800c898:	2202      	movs	r2, #2
 800c89a:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800c89e:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800c8a2:	4291      	cmp	r1, r2
 800c8a4:	d121      	bne.n	800c8ea <E131Bridge::FillDiscoveryPacket()+0xca>
 800c8a6:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c8aa:	69c2      	ldr	r2, [r0, #28]
 800c8ac:	3304      	adds	r3, #4
 800c8ae:	005b      	lsls	r3, r3, #1
 800c8b0:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800c8b4:	ba5b      	rev16	r3, r3
 800c8b6:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800c8ba:	2300      	movs	r3, #0
 800c8bc:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800c8c0:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800c8c4:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800c8c8:	2301      	movs	r3, #1
 800c8ca:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800c8ce:	bd10      	pop	{r4, pc}
 800c8d0:	f803 2b01 	strb.w	r2, [r3], #1
 800c8d4:	e7af      	b.n	800c836 <E131Bridge::FillDiscoveryPacket()+0x16>
 800c8d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c8da:	f802 4f01 	strb.w	r4, [r2, #1]!
 800c8de:	e7b3      	b.n	800c848 <E131Bridge::FillDiscoveryPacket()+0x28>
 800c8e0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c8e4:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c8e8:	e7c4      	b.n	800c874 <E131Bridge::FillDiscoveryPacket()+0x54>
 800c8ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c8ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c8f2:	e7d6      	b.n	800c8a2 <E131Bridge::FillDiscoveryPacket()+0x82>
 800c8f4:	08019c0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, ip, pc}

0800c8f8 <E131Bridge::SendDiscoveryPacket()>:
 800c8f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c8fa:	68c2      	ldr	r2, [r0, #12]
 800c8fc:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800c900:	f242 710f 	movw	r1, #9999	; 0x270f
 800c904:	1ad3      	subs	r3, r2, r3
 800c906:	428b      	cmp	r3, r1
 800c908:	4604      	mov	r4, r0
 800c90a:	d924      	bls.n	800c956 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800c90c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c910:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800c914:	b1ab      	cbz	r3, 800c942 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800c916:	2500      	movs	r5, #0
 800c918:	462e      	mov	r6, r5
 800c91a:	2300      	movs	r3, #0
 800c91c:	f10d 020e 	add.w	r2, sp, #14
 800c920:	4629      	mov	r1, r5
 800c922:	4620      	mov	r0, r4
 800c924:	f7ff fc08 	bl	800c138 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800c928:	b140      	cbz	r0, 800c93c <E131Bridge::SendDiscoveryPacket()+0x44>
 800c92a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c92e:	69e2      	ldr	r2, [r4, #28]
 800c930:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800c934:	ba5b      	rev16	r3, r3
 800c936:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800c93a:	3601      	adds	r6, #1
 800c93c:	3501      	adds	r5, #1
 800c93e:	2d42      	cmp	r5, #66	; 0x42
 800c940:	d1eb      	bne.n	800c91a <E131Bridge::SendDiscoveryPacket()+0x22>
 800c942:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800c946:	9300      	str	r3, [sp, #0]
 800c948:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800c94c:	6a23      	ldr	r3, [r4, #32]
 800c94e:	69e1      	ldr	r1, [r4, #28]
 800c950:	7820      	ldrb	r0, [r4, #0]
 800c952:	f005 faad 	bl	8011eb0 <udp_send>
 800c956:	b004      	add	sp, #16
 800c958:	bd70      	pop	{r4, r5, r6, pc}

0800c95a <memcpy.isra.0>:
 800c95a:	3801      	subs	r0, #1
 800c95c:	440a      	add	r2, r1
 800c95e:	4291      	cmp	r1, r2
 800c960:	d100      	bne.n	800c964 <memcpy.isra.0+0xa>
 800c962:	4770      	bx	lr
 800c964:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c968:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c96c:	e7f7      	b.n	800c95e <memcpy.isra.0+0x4>
	...

0800c970 <E131Bridge::FillDataPacket()>:
 800c970:	b570      	push	{r4, r5, r6, lr}
 800c972:	4605      	mov	r5, r0
 800c974:	6980      	ldr	r0, [r0, #24]
 800c976:	4920      	ldr	r1, [pc, #128]	; (800c9f8 <E131Bridge::FillDataPacket()+0x88>)
 800c978:	2400      	movs	r4, #0
 800c97a:	2610      	movs	r6, #16
 800c97c:	7046      	strb	r6, [r0, #1]
 800c97e:	7004      	strb	r4, [r0, #0]
 800c980:	7084      	strb	r4, [r0, #2]
 800c982:	70c4      	strb	r4, [r0, #3]
 800c984:	220c      	movs	r2, #12
 800c986:	3004      	adds	r0, #4
 800c988:	f7ff ffe7 	bl	800c95a <memcpy.isra.0>
 800c98c:	69a8      	ldr	r0, [r5, #24]
 800c98e:	2304      	movs	r3, #4
 800c990:	7543      	strb	r3, [r0, #21]
 800c992:	7484      	strb	r4, [r0, #18]
 800c994:	74c4      	strb	r4, [r0, #19]
 800c996:	7504      	strb	r4, [r0, #20]
 800c998:	4632      	mov	r2, r6
 800c99a:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800c99e:	3016      	adds	r0, #22
 800c9a0:	f7ff ffdb 	bl	800c95a <memcpy.isra.0>
 800c9a4:	69a8      	ldr	r0, [r5, #24]
 800c9a6:	2602      	movs	r6, #2
 800c9a8:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800c9ac:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800c9b0:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800c9b4:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800c9b8:	2240      	movs	r2, #64	; 0x40
 800c9ba:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800c9be:	302c      	adds	r0, #44	; 0x2c
 800c9c0:	f7ff ffcb 	bl	800c95a <memcpy.isra.0>
 800c9c4:	69ab      	ldr	r3, [r5, #24]
 800c9c6:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800c9ca:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800c9ce:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800c9d2:	69ab      	ldr	r3, [r5, #24]
 800c9d4:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800c9d8:	69ab      	ldr	r3, [r5, #24]
 800c9da:	22a1      	movs	r2, #161	; 0xa1
 800c9dc:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800c9e0:	69ab      	ldr	r3, [r5, #24]
 800c9e2:	2201      	movs	r2, #1
 800c9e4:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800c9e8:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800c9ec:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800c9f0:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800c9f4:	bd70      	pop	{r4, r5, r6, pc}
 800c9f6:	bf00      	nop
 800c9f8:	08019c0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, ip, pc}

0800c9fc <E131Bridge::HandleDmxIn()>:
 800c9fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ca00:	f500 55b4 	add.w	r5, r0, #5760	; 0x1680
 800ca04:	4f3a      	ldr	r7, [pc, #232]	; (800caf0 <E131Bridge::HandleDmxIn()+0xf4>)
 800ca06:	4604      	mov	r4, r0
 800ca08:	351c      	adds	r5, #28
 800ca0a:	2600      	movs	r6, #0
 800ca0c:	78ab      	ldrb	r3, [r5, #2]
 800ca0e:	2b00      	cmp	r3, #0
 800ca10:	d056      	beq.n	800cac0 <E131Bridge::HandleDmxIn()+0xc4>
 800ca12:	6960      	ldr	r0, [r4, #20]
 800ca14:	6803      	ldr	r3, [r0, #0]
 800ca16:	4631      	mov	r1, r6
 800ca18:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800ca1c:	aa02      	add	r2, sp, #8
 800ca1e:	ab03      	add	r3, sp, #12
 800ca20:	47c0      	blx	r8
 800ca22:	4601      	mov	r1, r0
 800ca24:	2800      	cmp	r0, #0
 800ca26:	d053      	beq.n	800cad0 <E131Bridge::HandleDmxIn()+0xd4>
 800ca28:	9a02      	ldr	r2, [sp, #8]
 800ca2a:	69a0      	ldr	r0, [r4, #24]
 800ca2c:	b293      	uxth	r3, r2
 800ca2e:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800ca32:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800ca36:	fa9c fc9c 	rev16.w	ip, ip
 800ca3a:	f8a0 c010 	strh.w	ip, [r0, #16]
 800ca3e:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800ca42:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800ca46:	fa9c fc9c 	rev16.w	ip, ip
 800ca4a:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800ca4e:	f895 c009 	ldrb.w	ip, [r5, #9]
 800ca52:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800ca56:	f895 c008 	ldrb.w	ip, [r5, #8]
 800ca5a:	f10c 0001 	add.w	r0, ip, #1
 800ca5e:	7228      	strb	r0, [r5, #8]
 800ca60:	69a0      	ldr	r0, [r4, #24]
 800ca62:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800ca66:	f8b5 c000 	ldrh.w	ip, [r5]
 800ca6a:	69a0      	ldr	r0, [r4, #24]
 800ca6c:	330a      	adds	r3, #10
 800ca6e:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800ca72:	fa9c fc9c 	rev16.w	ip, ip
 800ca76:	ba5b      	rev16	r3, r3
 800ca78:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800ca7c:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800ca80:	307d      	adds	r0, #125	; 0x7d
 800ca82:	f7ff ff6a 	bl	800c95a <memcpy.isra.0>
 800ca86:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800ca8a:	69a1      	ldr	r1, [r4, #24]
 800ca8c:	7820      	ldrb	r0, [r4, #0]
 800ca8e:	ba53      	rev16	r3, r2
 800ca90:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800ca94:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800ca98:	9300      	str	r3, [sp, #0]
 800ca9a:	327d      	adds	r2, #125	; 0x7d
 800ca9c:	686b      	ldr	r3, [r5, #4]
 800ca9e:	b292      	uxth	r2, r2
 800caa0:	f005 fa06 	bl	8011eb0 <udp_send>
 800caa4:	683a      	ldr	r2, [r7, #0]
 800caa6:	2301      	movs	r3, #1
 800caa8:	40b3      	lsls	r3, r6
 800caaa:	ea33 0102 	bics.w	r1, r3, r2
 800caae:	d007      	beq.n	800cac0 <E131Bridge::HandleDmxIn()+0xc4>
 800cab0:	4313      	orrs	r3, r2
 800cab2:	603b      	str	r3, [r7, #0]
 800cab4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800cab8:	f043 0301 	orr.w	r3, r3, #1
 800cabc:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800cac0:	3601      	adds	r6, #1
 800cac2:	2e42      	cmp	r6, #66	; 0x42
 800cac4:	f105 050c 	add.w	r5, r5, #12
 800cac8:	d1a0      	bne.n	800ca0c <E131Bridge::HandleDmxIn()+0x10>
 800caca:	b004      	add	sp, #16
 800cacc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cad0:	9b03      	ldr	r3, [sp, #12]
 800cad2:	2b00      	cmp	r3, #0
 800cad4:	d1f4      	bne.n	800cac0 <E131Bridge::HandleDmxIn()+0xc4>
 800cad6:	683b      	ldr	r3, [r7, #0]
 800cad8:	2201      	movs	r2, #1
 800cada:	40b2      	lsls	r2, r6
 800cadc:	ea23 0302 	bic.w	r3, r3, r2
 800cae0:	603b      	str	r3, [r7, #0]
 800cae2:	2b00      	cmp	r3, #0
 800cae4:	d1ec      	bne.n	800cac0 <E131Bridge::HandleDmxIn()+0xc4>
 800cae6:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800caea:	f023 0301 	bic.w	r3, r3, #1
 800caee:	e7e5      	b.n	800cabc <E131Bridge::HandleDmxIn()+0xc0>
 800caf0:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800caf4 <E131Bridge::HandleSynchronization()>:
 800caf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800caf8:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800cafc:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800cb00:	ba5b      	rev16	r3, r3
 800cb02:	b29b      	uxth	r3, r3
 800cb04:	429a      	cmp	r2, r3
 800cb06:	4604      	mov	r4, r0
 800cb08:	d00a      	beq.n	800cb20 <E131Bridge::HandleSynchronization()+0x2c>
 800cb0a:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800cb0e:	429a      	cmp	r2, r3
 800cb10:	d006      	beq.n	800cb20 <E131Bridge::HandleSynchronization()+0x2c>
 800cb12:	4b24      	ldr	r3, [pc, #144]	; (800cba4 <E131Bridge::HandleSynchronization()+0xb0>)
 800cb14:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb18:	6818      	ldr	r0, [r3, #0]
 800cb1a:	2102      	movs	r1, #2
 800cb1c:	f008 be98 	b.w	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800cb20:	68e3      	ldr	r3, [r4, #12]
 800cb22:	4e21      	ldr	r6, [pc, #132]	; (800cba8 <E131Bridge::HandleSynchronization()+0xb4>)
 800cb24:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800cbac <E131Bridge::HandleSynchronization()+0xb8>
 800cb28:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800cb2c:	2500      	movs	r5, #0
 800cb2e:	4627      	mov	r7, r4
 800cb30:	46a9      	mov	r9, r5
 800cb32:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800cb36:	b323      	cbz	r3, 800cb82 <E131Bridge::HandleSynchronization()+0x8e>
 800cb38:	f8d8 3000 	ldr.w	r3, [r8]
 800cb3c:	6860      	ldr	r0, [r4, #4]
 800cb3e:	07da      	lsls	r2, r3, #31
 800cb40:	bf5c      	itt	pl
 800cb42:	2301      	movpl	r3, #1
 800cb44:	f8c8 3000 	strpl.w	r3, [r8]
 800cb48:	6803      	ldr	r3, [r0, #0]
 800cb4a:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800cb4e:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800cb52:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800cb56:	4629      	mov	r1, r5
 800cb58:	47d0      	blx	sl
 800cb5a:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800cb5e:	b93b      	cbnz	r3, 800cb70 <E131Bridge::HandleSynchronization()+0x7c>
 800cb60:	6860      	ldr	r0, [r4, #4]
 800cb62:	6803      	ldr	r3, [r0, #0]
 800cb64:	4629      	mov	r1, r5
 800cb66:	689b      	ldr	r3, [r3, #8]
 800cb68:	4798      	blx	r3
 800cb6a:	2301      	movs	r3, #1
 800cb6c:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800cb70:	f8d8 3000 	ldr.w	r3, [r8]
 800cb74:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800cb78:	07db      	lsls	r3, r3, #31
 800cb7a:	bf5c      	itt	pl
 800cb7c:	2301      	movpl	r3, #1
 800cb7e:	f8c8 3000 	strpl.w	r3, [r8]
 800cb82:	3501      	adds	r5, #1
 800cb84:	2d42      	cmp	r5, #66	; 0x42
 800cb86:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800cb8a:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800cb8e:	d1d0      	bne.n	800cb32 <E131Bridge::HandleSynchronization()+0x3e>
 800cb90:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800cb92:	b120      	cbz	r0, 800cb9e <E131Bridge::HandleSynchronization()+0xaa>
 800cb94:	6803      	ldr	r3, [r0, #0]
 800cb96:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb9a:	689b      	ldr	r3, [r3, #8]
 800cb9c:	4718      	bx	r3
 800cb9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cba2:	bf00      	nop
 800cba4:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800cba8:	20030000 	andcs	r0, r3, r0
 800cbac:	200006c8 	andcs	r0, r0, r8, asr #13

0800cbb0 <E131Bridge::Print()>:
 800cbb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbb4:	b08c      	sub	sp, #48	; 0x30
 800cbb6:	a902      	add	r1, sp, #8
 800cbb8:	4604      	mov	r4, r0
 800cbba:	2500      	movs	r5, #0
 800cbbc:	3024      	adds	r0, #36	; 0x24
 800cbbe:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cbc2:	f001 fe83 	bl	800e8cc <uuid_unparse>
 800cbc6:	482c      	ldr	r0, [pc, #176]	; (800cc78 <E131Bridge::Print()+0xc8>)
 800cbc8:	f7fd fc5e 	bl	800a488 <printf>
 800cbcc:	4b2b      	ldr	r3, [pc, #172]	; (800cc7c <E131Bridge::Print()+0xcc>)
 800cbce:	482c      	ldr	r0, [pc, #176]	; (800cc80 <E131Bridge::Print()+0xd0>)
 800cbd0:	7819      	ldrb	r1, [r3, #0]
 800cbd2:	785a      	ldrb	r2, [r3, #1]
 800cbd4:	f7fd fc58 	bl	800a488 <printf>
 800cbd8:	482a      	ldr	r0, [pc, #168]	; (800cc84 <E131Bridge::Print()+0xd4>)
 800cbda:	a902      	add	r1, sp, #8
 800cbdc:	f7fd fc54 	bl	800a488 <printf>
 800cbe0:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800cbe4:	b303      	cbz	r3, 800cc28 <E131Bridge::Print()+0x78>
 800cbe6:	4828      	ldr	r0, [pc, #160]	; (800cc88 <E131Bridge::Print()+0xd8>)
 800cbe8:	4e28      	ldr	r6, [pc, #160]	; (800cc8c <E131Bridge::Print()+0xdc>)
 800cbea:	4f29      	ldr	r7, [pc, #164]	; (800cc90 <E131Bridge::Print()+0xe0>)
 800cbec:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800cca0 <E131Bridge::Print()+0xf0>
 800cbf0:	f7fd fc4a 	bl	800a488 <printf>
 800cbf4:	2301      	movs	r3, #1
 800cbf6:	f10d 0206 	add.w	r2, sp, #6
 800cbfa:	4629      	mov	r1, r5
 800cbfc:	4620      	mov	r0, r4
 800cbfe:	f7ff fa9b 	bl	800c138 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cc02:	b170      	cbz	r0, 800cc22 <E131Bridge::Print()+0x72>
 800cc04:	2344      	movs	r3, #68	; 0x44
 800cc06:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800cc0a:	436b      	muls	r3, r5
 800cc0c:	4629      	mov	r1, r5
 800cc0e:	58d3      	ldr	r3, [r2, r3]
 800cc10:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cc14:	2b00      	cmp	r3, #0
 800cc16:	bf0c      	ite	eq
 800cc18:	4633      	moveq	r3, r6
 800cc1a:	463b      	movne	r3, r7
 800cc1c:	4640      	mov	r0, r8
 800cc1e:	f7fd fc33 	bl	800a488 <printf>
 800cc22:	3501      	adds	r5, #1
 800cc24:	2d42      	cmp	r5, #66	; 0x42
 800cc26:	d1e5      	bne.n	800cbf4 <E131Bridge::Print()+0x44>
 800cc28:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800cc2c:	b1db      	cbz	r3, 800cc66 <E131Bridge::Print()+0xb6>
 800cc2e:	4819      	ldr	r0, [pc, #100]	; (800cc94 <E131Bridge::Print()+0xe4>)
 800cc30:	4f19      	ldr	r7, [pc, #100]	; (800cc98 <E131Bridge::Print()+0xe8>)
 800cc32:	f7fd fc29 	bl	800a488 <printf>
 800cc36:	f504 56b5 	add.w	r6, r4, #5792	; 0x16a0
 800cc3a:	2500      	movs	r5, #0
 800cc3c:	3605      	adds	r6, #5
 800cc3e:	2300      	movs	r3, #0
 800cc40:	f10d 0206 	add.w	r2, sp, #6
 800cc44:	4629      	mov	r1, r5
 800cc46:	4620      	mov	r0, r4
 800cc48:	f7ff fa76 	bl	800c138 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cc4c:	b140      	cbz	r0, 800cc60 <E131Bridge::Print()+0xb0>
 800cc4e:	230c      	movs	r3, #12
 800cc50:	436b      	muls	r3, r5
 800cc52:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cc56:	5cf3      	ldrb	r3, [r6, r3]
 800cc58:	4629      	mov	r1, r5
 800cc5a:	4638      	mov	r0, r7
 800cc5c:	f7fd fc14 	bl	800a488 <printf>
 800cc60:	3501      	adds	r5, #1
 800cc62:	2d42      	cmp	r5, #66	; 0x42
 800cc64:	d1eb      	bne.n	800cc3e <E131Bridge::Print()+0x8e>
 800cc66:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800cc6a:	b113      	cbz	r3, 800cc72 <E131Bridge::Print()+0xc2>
 800cc6c:	480b      	ldr	r0, [pc, #44]	; (800cc9c <E131Bridge::Print()+0xec>)
 800cc6e:	f7fd fc0b 	bl	800a488 <printf>
 800cc72:	b00c      	add	sp, #48	; 0x30
 800cc74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc78:	08019a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, pc}
 800cc7c:	08019c19 	stmdaeq	r1, {r0, r3, r4, sl, fp, ip, pc}
 800cc80:	08019a9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, fp, ip, pc}
 800cc84:	08019aaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, fp, ip, pc}
 800cc88:	08019abf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, fp, ip, pc}
 800cc8c:	08019a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, ip, pc}
 800cc90:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 800cc94:	08019ae7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, fp, ip, pc}
 800cc98:	08019aef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, fp, ip, pc}
 800cc9c:	08019b0e 	stmdaeq	r1, {r1, r2, r3, r8, r9, fp, ip, pc}
 800cca0:	08019ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip, pc}

0800cca4 <memcmp>:
 800cca4:	4402      	add	r2, r0
 800cca6:	4290      	cmp	r0, r2
 800cca8:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800ccac:	d106      	bne.n	800ccbc <memcmp+0x18>
 800ccae:	2000      	movs	r0, #0
 800ccb0:	4770      	bx	lr
 800ccb2:	3001      	adds	r0, #1
 800ccb4:	4290      	cmp	r0, r2
 800ccb6:	d102      	bne.n	800ccbe <memcmp+0x1a>
 800ccb8:	2000      	movs	r0, #0
 800ccba:	e006      	b.n	800ccca <memcmp+0x26>
 800ccbc:	b510      	push	{r4, lr}
 800ccbe:	7803      	ldrb	r3, [r0, #0]
 800ccc0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ccc4:	42a3      	cmp	r3, r4
 800ccc6:	d0f4      	beq.n	800ccb2 <memcmp+0xe>
 800ccc8:	1b18      	subs	r0, r3, r4
 800ccca:	bd10      	pop	{r4, pc}

0800cccc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800cccc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ccce:	88c6      	ldrh	r6, [r0, #6]
 800ccd0:	8885      	ldrh	r5, [r0, #4]
 800ccd2:	42ae      	cmp	r6, r5
 800ccd4:	d216      	bcs.n	800cd04 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800ccd6:	4604      	mov	r4, r0
 800ccd8:	6800      	ldr	r0, [r0, #0]
 800ccda:	1bad      	subs	r5, r5, r6
 800ccdc:	4430      	add	r0, r6
 800ccde:	7a26      	ldrb	r6, [r4, #8]
 800cce0:	b923      	cbnz	r3, 800ccec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800cce2:	b926      	cbnz	r6, 800ccee <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800cce4:	9200      	str	r2, [sp, #0]
 800cce6:	460b      	mov	r3, r1
 800cce8:	4a09      	ldr	r2, [pc, #36]	; (800cd10 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800ccea:	e003      	b.n	800ccf4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ccec:	b166      	cbz	r6, 800cd08 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800ccee:	9200      	str	r2, [sp, #0]
 800ccf0:	4a08      	ldr	r2, [pc, #32]	; (800cd14 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800ccf2:	460b      	mov	r3, r1
 800ccf4:	4629      	mov	r1, r5
 800ccf6:	f7fd fbef 	bl	800a4d8 <snprintf>
 800ccfa:	4285      	cmp	r5, r0
 800ccfc:	bfa2      	ittt	ge
 800ccfe:	88e3      	ldrhge	r3, [r4, #6]
 800cd00:	181b      	addge	r3, r3, r0
 800cd02:	80e3      	strhge	r3, [r4, #6]
 800cd04:	b002      	add	sp, #8
 800cd06:	bd70      	pop	{r4, r5, r6, pc}
 800cd08:	9200      	str	r2, [sp, #0]
 800cd0a:	460b      	mov	r3, r1
 800cd0c:	4a02      	ldr	r2, [pc, #8]	; (800cd18 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800cd0e:	e7f1      	b.n	800ccf4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800cd10:	08018c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, pc}
 800cd14:	08018c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, pc}
 800cd18:	08018c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, pc}

0800cd1c <E131Params::E131Params(E131ParamsStore*)>:
 800cd1c:	b510      	push	{r4, lr}
 800cd1e:	2219      	movs	r2, #25
 800cd20:	4604      	mov	r4, r0
 800cd22:	f840 1b04 	str.w	r1, [r0], #4
 800cd26:	2100      	movs	r1, #0
 800cd28:	f009 f878 	bl	8015e1c <memset>
 800cd2c:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800cd30:	f8c4 301f 	str.w	r3, [r4, #31]
 800cd34:	2300      	movs	r3, #0
 800cd36:	2201      	movs	r2, #1
 800cd38:	7323      	strb	r3, [r4, #12]
 800cd3a:	77a3      	strb	r3, [r4, #30]
 800cd3c:	4b08      	ldr	r3, [pc, #32]	; (800cd60 <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800cd3e:	72e2      	strb	r2, [r4, #11]
 800cd40:	2155      	movs	r1, #85	; 0x55
 800cd42:	2202      	movs	r2, #2
 800cd44:	f8a4 200d 	strh.w	r2, [r4, #13]
 800cd48:	7761      	strb	r1, [r4, #29]
 800cd4a:	2203      	movs	r2, #3
 800cd4c:	6819      	ldr	r1, [r3, #0]
 800cd4e:	f8a4 200f 	strh.w	r2, [r4, #15]
 800cd52:	2204      	movs	r2, #4
 800cd54:	f8a4 2011 	strh.w	r2, [r4, #17]
 800cd58:	b901      	cbnz	r1, 800cd5c <E131Params::E131Params(E131ParamsStore*)+0x40>
 800cd5a:	601a      	str	r2, [r3, #0]
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	bd10      	pop	{r4, pc}
 800cd60:	200006d4 	ldrdcs	r0, [r0], -r4

0800cd64 <E131Params::Load()>:
 800cd64:	b508      	push	{r3, lr}
 800cd66:	2300      	movs	r3, #0
 800cd68:	4601      	mov	r1, r0
 800cd6a:	6043      	str	r3, [r0, #4]
 800cd6c:	6800      	ldr	r0, [r0, #0]
 800cd6e:	b120      	cbz	r0, 800cd7a <E131Params::Load()+0x16>
 800cd70:	6803      	ldr	r3, [r0, #0]
 800cd72:	3104      	adds	r1, #4
 800cd74:	68db      	ldr	r3, [r3, #12]
 800cd76:	4798      	blx	r3
 800cd78:	2001      	movs	r0, #1
 800cd7a:	bd08      	pop	{r3, pc}

0800cd7c <E131Params::Load(char const*, unsigned int)>:
 800cd7c:	6803      	ldr	r3, [r0, #0]
 800cd7e:	b1d3      	cbz	r3, 800cdb6 <E131Params::Load(char const*, unsigned int)+0x3a>
 800cd80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd82:	2300      	movs	r3, #0
 800cd84:	6043      	str	r3, [r0, #4]
 800cd86:	4604      	mov	r4, r0
 800cd88:	460d      	mov	r5, r1
 800cd8a:	4616      	mov	r6, r2
 800cd8c:	490a      	ldr	r1, [pc, #40]	; (800cdb8 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800cd8e:	4602      	mov	r2, r0
 800cd90:	4668      	mov	r0, sp
 800cd92:	f008 f83f 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cd96:	4632      	mov	r2, r6
 800cd98:	4629      	mov	r1, r5
 800cd9a:	4668      	mov	r0, sp
 800cd9c:	f008 f83e 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 800cda0:	4621      	mov	r1, r4
 800cda2:	f851 0b04 	ldr.w	r0, [r1], #4
 800cda6:	6803      	ldr	r3, [r0, #0]
 800cda8:	689b      	ldr	r3, [r3, #8]
 800cdaa:	4798      	blx	r3
 800cdac:	4668      	mov	r0, sp
 800cdae:	f008 f834 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 800cdb2:	b002      	add	sp, #8
 800cdb4:	bd70      	pop	{r4, r5, r6, pc}
 800cdb6:	4770      	bx	lr
 800cdb8:	0800d055 	stmdaeq	r0, {r0, r2, r4, r6, ip, lr, pc}

0800cdbc <E131Params::callbackFunction(char const*)>:
 800cdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdc0:	460e      	mov	r6, r1
 800cdc2:	b087      	sub	sp, #28
 800cdc4:	2708      	movs	r7, #8
 800cdc6:	4604      	mov	r4, r0
 800cdc8:	4998      	ldr	r1, [pc, #608]	; (800d02c <E131Params::callbackFunction(char const*)+0x270>)
 800cdca:	9701      	str	r7, [sp, #4]
 800cdcc:	ab01      	add	r3, sp, #4
 800cdce:	eb0d 0207 	add.w	r2, sp, r7
 800cdd2:	4630      	mov	r0, r6
 800cdd4:	f008 f856 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cdd8:	bb68      	cbnz	r0, 800ce36 <E131Params::callbackFunction(char const*)+0x7a>
 800cdda:	4995      	ldr	r1, [pc, #596]	; (800d030 <E131Params::callbackFunction(char const*)+0x274>)
 800cddc:	2204      	movs	r2, #4
 800cdde:	eb0d 0007 	add.w	r0, sp, r7
 800cde2:	f7ff ff5f 	bl	800cca4 <memcmp>
 800cde6:	6865      	ldr	r5, [r4, #4]
 800cde8:	b1a0      	cbz	r0, 800ce14 <E131Params::callbackFunction(char const*)+0x58>
 800cdea:	4992      	ldr	r1, [pc, #584]	; (800d034 <E131Params::callbackFunction(char const*)+0x278>)
 800cdec:	2203      	movs	r2, #3
 800cdee:	eb0d 0007 	add.w	r0, sp, r7
 800cdf2:	f7ff ff57 	bl	800cca4 <memcmp>
 800cdf6:	b1b0      	cbz	r0, 800ce26 <E131Params::callbackFunction(char const*)+0x6a>
 800cdf8:	498f      	ldr	r1, [pc, #572]	; (800d038 <E131Params::callbackFunction(char const*)+0x27c>)
 800cdfa:	2202      	movs	r2, #2
 800cdfc:	eb0d 0007 	add.w	r0, sp, r7
 800ce00:	f7ff ff50 	bl	800cca4 <memcmp>
 800ce04:	b198      	cbz	r0, 800ce2e <E131Params::callbackFunction(char const*)+0x72>
 800ce06:	498d      	ldr	r1, [pc, #564]	; (800d03c <E131Params::callbackFunction(char const*)+0x280>)
 800ce08:	463a      	mov	r2, r7
 800ce0a:	eb0d 0007 	add.w	r0, sp, r7
 800ce0e:	f7ff ff49 	bl	800cca4 <memcmp>
 800ce12:	b170      	cbz	r0, 800ce32 <E131Params::callbackFunction(char const*)+0x76>
 800ce14:	f025 0501 	bic.w	r5, r5, #1
 800ce18:	2300      	movs	r3, #0
 800ce1a:	6065      	str	r5, [r4, #4]
 800ce1c:	f8a4 3009 	strh.w	r3, [r4, #9]
 800ce20:	b007      	add	sp, #28
 800ce22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce26:	2301      	movs	r3, #1
 800ce28:	f045 0501 	orr.w	r5, r5, #1
 800ce2c:	e7f5      	b.n	800ce1a <E131Params::callbackFunction(char const*)+0x5e>
 800ce2e:	2302      	movs	r3, #2
 800ce30:	e7fa      	b.n	800ce28 <E131Params::callbackFunction(char const*)+0x6c>
 800ce32:	2303      	movs	r3, #3
 800ce34:	e7f8      	b.n	800ce28 <E131Params::callbackFunction(char const*)+0x6c>
 800ce36:	f8df 920c 	ldr.w	r9, [pc, #524]	; 800d044 <E131Params::callbackFunction(char const*)+0x288>
 800ce3a:	f8df 820c 	ldr.w	r8, [pc, #524]	; 800d048 <E131Params::callbackFunction(char const*)+0x28c>
 800ce3e:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800d04c <E131Params::callbackFunction(char const*)+0x290>
 800ce42:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800d050 <E131Params::callbackFunction(char const*)+0x294>
 800ce46:	2500      	movs	r5, #0
 800ce48:	f10d 0202 	add.w	r2, sp, #2
 800ce4c:	4649      	mov	r1, r9
 800ce4e:	4630      	mov	r0, r6
 800ce50:	f008 f8cd 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ce54:	b9d8      	cbnz	r0, 800ce8e <E131Params::callbackFunction(char const*)+0xd2>
 800ce56:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800ce5a:	6861      	ldr	r1, [r4, #4]
 800ce5c:	1e42      	subs	r2, r0, #1
 800ce5e:	b292      	uxth	r2, r2
 800ce60:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800ce64:	2310      	movs	r3, #16
 800ce66:	42b2      	cmp	r2, r6
 800ce68:	fa03 f305 	lsl.w	r3, r3, r5
 800ce6c:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800ce70:	d907      	bls.n	800ce82 <E131Params::callbackFunction(char const*)+0xc6>
 800ce72:	4422      	add	r2, r4
 800ce74:	3501      	adds	r5, #1
 800ce76:	ea21 0103 	bic.w	r1, r1, r3
 800ce7a:	f8a2 500b 	strh.w	r5, [r2, #11]
 800ce7e:	6061      	str	r1, [r4, #4]
 800ce80:	e7ce      	b.n	800ce20 <E131Params::callbackFunction(char const*)+0x64>
 800ce82:	4422      	add	r2, r4
 800ce84:	430b      	orrs	r3, r1
 800ce86:	f8a2 000b 	strh.w	r0, [r2, #11]
 800ce8a:	6063      	str	r3, [r4, #4]
 800ce8c:	e7c8      	b.n	800ce20 <E131Params::callbackFunction(char const*)+0x64>
 800ce8e:	2712      	movs	r7, #18
 800ce90:	2303      	movs	r3, #3
 800ce92:	436f      	muls	r7, r5
 800ce94:	9301      	str	r3, [sp, #4]
 800ce96:	aa02      	add	r2, sp, #8
 800ce98:	ab01      	add	r3, sp, #4
 800ce9a:	eb0a 0107 	add.w	r1, sl, r7
 800ce9e:	4630      	mov	r0, r6
 800cea0:	f007 fff0 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cea4:	bb08      	cbnz	r0, 800ceea <E131Params::callbackFunction(char const*)+0x12e>
 800cea6:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800ceaa:	6862      	ldr	r2, [r4, #4]
 800ceac:	f041 0120 	orr.w	r1, r1, #32
 800ceb0:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ceb4:	296c      	cmp	r1, #108	; 0x6c
 800ceb6:	fa03 f305 	lsl.w	r3, r3, r5
 800ceba:	4425      	add	r5, r4
 800cebc:	d10f      	bne.n	800cede <E131Params::callbackFunction(char const*)+0x122>
 800cebe:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800cec2:	f041 0120 	orr.w	r1, r1, #32
 800cec6:	2974      	cmp	r1, #116	; 0x74
 800cec8:	d109      	bne.n	800cede <E131Params::callbackFunction(char const*)+0x122>
 800ceca:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800cece:	f041 0120 	orr.w	r1, r1, #32
 800ced2:	2970      	cmp	r1, #112	; 0x70
 800ced4:	d103      	bne.n	800cede <E131Params::callbackFunction(char const*)+0x122>
 800ced6:	2101      	movs	r1, #1
 800ced8:	7529      	strb	r1, [r5, #20]
 800ceda:	4313      	orrs	r3, r2
 800cedc:	e7d5      	b.n	800ce8a <E131Params::callbackFunction(char const*)+0xce>
 800cede:	2100      	movs	r1, #0
 800cee0:	ea22 0203 	bic.w	r2, r2, r3
 800cee4:	7529      	strb	r1, [r5, #20]
 800cee6:	6062      	str	r2, [r4, #4]
 800cee8:	e79a      	b.n	800ce20 <E131Params::callbackFunction(char const*)+0x64>
 800ceea:	2307      	movs	r3, #7
 800ceec:	9301      	str	r3, [sp, #4]
 800ceee:	aa02      	add	r2, sp, #8
 800cef0:	ab01      	add	r3, sp, #4
 800cef2:	eb0b 0107 	add.w	r1, fp, r7
 800cef6:	4630      	mov	r0, r6
 800cef8:	f007 ffc4 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cefc:	2800      	cmp	r0, #0
 800cefe:	d15e      	bne.n	800cfbe <E131Params::callbackFunction(char const*)+0x202>
 800cf00:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800cf04:	f043 0320 	orr.w	r3, r3, #32
 800cf08:	2b69      	cmp	r3, #105	; 0x69
 800cf0a:	d123      	bne.n	800cf54 <E131Params::callbackFunction(char const*)+0x198>
 800cf0c:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800cf10:	f043 0320 	orr.w	r3, r3, #32
 800cf14:	2b6e      	cmp	r3, #110	; 0x6e
 800cf16:	d146      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf18:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800cf1c:	f043 0320 	orr.w	r3, r3, #32
 800cf20:	2b70      	cmp	r3, #112	; 0x70
 800cf22:	d140      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf24:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800cf28:	f043 0320 	orr.w	r3, r3, #32
 800cf2c:	2b75      	cmp	r3, #117	; 0x75
 800cf2e:	d13a      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf30:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800cf34:	f043 0320 	orr.w	r3, r3, #32
 800cf38:	3b74      	subs	r3, #116	; 0x74
 800cf3a:	bf18      	it	ne
 800cf3c:	2301      	movne	r3, #1
 800cf3e:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800cf42:	006d      	lsls	r5, r5, #1
 800cf44:	2103      	movs	r1, #3
 800cf46:	40a9      	lsls	r1, r5
 800cf48:	ea22 0201 	bic.w	r2, r2, r1
 800cf4c:	bb6b      	cbnz	r3, 800cfaa <E131Params::callbackFunction(char const*)+0x1ee>
 800cf4e:	f8a4 201d 	strh.w	r2, [r4, #29]
 800cf52:	e765      	b.n	800ce20 <E131Params::callbackFunction(char const*)+0x64>
 800cf54:	2b64      	cmp	r3, #100	; 0x64
 800cf56:	d126      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf58:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800cf5c:	f043 0320 	orr.w	r3, r3, #32
 800cf60:	2b69      	cmp	r3, #105	; 0x69
 800cf62:	d120      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf64:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800cf68:	f043 0320 	orr.w	r3, r3, #32
 800cf6c:	2b73      	cmp	r3, #115	; 0x73
 800cf6e:	d11a      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf70:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800cf74:	f043 0320 	orr.w	r3, r3, #32
 800cf78:	2b61      	cmp	r3, #97	; 0x61
 800cf7a:	d114      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf7c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800cf80:	f043 0320 	orr.w	r3, r3, #32
 800cf84:	2b62      	cmp	r3, #98	; 0x62
 800cf86:	d10e      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf88:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800cf8c:	f043 0320 	orr.w	r3, r3, #32
 800cf90:	2b6c      	cmp	r3, #108	; 0x6c
 800cf92:	d108      	bne.n	800cfa6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf94:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800cf98:	f043 0320 	orr.w	r3, r3, #32
 800cf9c:	2b65      	cmp	r3, #101	; 0x65
 800cf9e:	bf14      	ite	ne
 800cfa0:	2301      	movne	r3, #1
 800cfa2:	2302      	moveq	r3, #2
 800cfa4:	e7cb      	b.n	800cf3e <E131Params::callbackFunction(char const*)+0x182>
 800cfa6:	2301      	movs	r3, #1
 800cfa8:	e7c9      	b.n	800cf3e <E131Params::callbackFunction(char const*)+0x182>
 800cfaa:	2b02      	cmp	r3, #2
 800cfac:	bf15      	itete	ne
 800cfae:	2301      	movne	r3, #1
 800cfb0:	40ab      	lsleq	r3, r5
 800cfb2:	fa03 f505 	lslne.w	r5, r3, r5
 800cfb6:	431a      	orreq	r2, r3
 800cfb8:	bf18      	it	ne
 800cfba:	432a      	orrne	r2, r5
 800cfbc:	e7c7      	b.n	800cf4e <E131Params::callbackFunction(char const*)+0x192>
 800cfbe:	f10d 0201 	add.w	r2, sp, #1
 800cfc2:	4641      	mov	r1, r8
 800cfc4:	4630      	mov	r0, r6
 800cfc6:	f008 f85a 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cfca:	b9a0      	cbnz	r0, 800cff6 <E131Params::callbackFunction(char const*)+0x23a>
 800cfcc:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cfd0:	6863      	ldr	r3, [r4, #4]
 800cfd2:	1e48      	subs	r0, r1, #1
 800cfd4:	b2c0      	uxtb	r0, r0
 800cfd6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800cfda:	28c7      	cmp	r0, #199	; 0xc7
 800cfdc:	fa02 f205 	lsl.w	r2, r2, r5
 800cfe0:	4425      	add	r5, r4
 800cfe2:	d803      	bhi.n	800cfec <E131Params::callbackFunction(char const*)+0x230>
 800cfe4:	2964      	cmp	r1, #100	; 0x64
 800cfe6:	d001      	beq.n	800cfec <E131Params::callbackFunction(char const*)+0x230>
 800cfe8:	77e9      	strb	r1, [r5, #31]
 800cfea:	e776      	b.n	800ceda <E131Params::callbackFunction(char const*)+0x11e>
 800cfec:	2164      	movs	r1, #100	; 0x64
 800cfee:	77e9      	strb	r1, [r5, #31]
 800cff0:	ea23 0302 	bic.w	r3, r3, r2
 800cff4:	e749      	b.n	800ce8a <E131Params::callbackFunction(char const*)+0xce>
 800cff6:	3501      	adds	r5, #1
 800cff8:	2d04      	cmp	r5, #4
 800cffa:	f109 0910 	add.w	r9, r9, #16
 800cffe:	f108 0812 	add.w	r8, r8, #18
 800d002:	f47f af21 	bne.w	800ce48 <E131Params::callbackFunction(char const*)+0x8c>
 800d006:	490e      	ldr	r1, [pc, #56]	; (800d040 <E131Params::callbackFunction(char const*)+0x284>)
 800d008:	f10d 0201 	add.w	r2, sp, #1
 800d00c:	4630      	mov	r0, r6
 800d00e:	f008 f836 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d012:	2800      	cmp	r0, #0
 800d014:	f47f af04 	bne.w	800ce20 <E131Params::callbackFunction(char const*)+0x64>
 800d018:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d01c:	6863      	ldr	r3, [r4, #4]
 800d01e:	b112      	cbz	r2, 800d026 <E131Params::callbackFunction(char const*)+0x26a>
 800d020:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d024:	e731      	b.n	800ce8a <E131Params::callbackFunction(char const*)+0xce>
 800d026:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d02a:	e72e      	b.n	800ce8a <E131Params::callbackFunction(char const*)+0xce>
 800d02c:	0801b7d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, ip, sp, pc}
 800d030:	08019b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, ip, pc}
 800d034:	08019b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, pc}
 800d038:	0801bba1 	stmdaeq	r1, {r0, r5, r7, r8, r9, fp, ip, sp, pc}
 800d03c:	08019b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, pc}
 800d040:	0801b7bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp, pc}
 800d044:	0801b5e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, sp, pc}
 800d048:	08019bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, ip, pc}
 800d04c:	0801b762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip, sp, pc}
 800d050:	0801b7e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, ip, sp, pc}

0800d054 <E131Params::staticCallbackFunction(void*, char const*)>:
 800d054:	f7ff beb2 	b.w	800cdbc <E131Params::callbackFunction(char const*)>

0800d058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800d058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d05c:	4604      	mov	r4, r0
 800d05e:	b087      	sub	sp, #28
 800d060:	4615      	mov	r5, r2
 800d062:	461e      	mov	r6, r3
 800d064:	3004      	adds	r0, #4
 800d066:	2900      	cmp	r1, #0
 800d068:	d05f      	beq.n	800d12a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800d06a:	221f      	movs	r2, #31
 800d06c:	f008 febf 	bl	8015dee <memmove>
 800d070:	4633      	mov	r3, r6
 800d072:	462a      	mov	r2, r5
 800d074:	4990      	ldr	r1, [pc, #576]	; (800d2b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800d076:	4f91      	ldr	r7, [pc, #580]	; (800d2bc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800d078:	4e91      	ldr	r6, [pc, #580]	; (800d2c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800d07a:	f8df 8280 	ldr.w	r8, [pc, #640]	; 800d2fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>
 800d07e:	f8df 9278 	ldr.w	r9, [pc, #632]	; 800d2f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>
 800d082:	a803      	add	r0, sp, #12
 800d084:	f007 fe26 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d088:	2500      	movs	r5, #0
 800d08a:	f8d8 2000 	ldr.w	r2, [r8]
 800d08e:	6863      	ldr	r3, [r4, #4]
 800d090:	42aa      	cmp	r2, r5
 800d092:	d851      	bhi.n	800d138 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800d094:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800d098:	4a8a      	ldr	r2, [pc, #552]	; (800d2c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800d09a:	4e8b      	ldr	r6, [pc, #556]	; (800d2c8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800d09c:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800d0a0:	498a      	ldr	r1, [pc, #552]	; (800d2cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800d0a2:	f8df 925c 	ldr.w	r9, [pc, #604]	; 800d300 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>
 800d0a6:	f8df a25c 	ldr.w	sl, [pc, #604]	; 800d304 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>
 800d0aa:	f003 0301 	and.w	r3, r3, #1
 800d0ae:	a803      	add	r0, sp, #12
 800d0b0:	f7ff fe0c 	bl	800cccc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d0b4:	4986      	ldr	r1, [pc, #536]	; (800d2d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800d0b6:	a803      	add	r0, sp, #12
 800d0b8:	f007 fe92 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800d0bc:	f104 0713 	add.w	r7, r4, #19
 800d0c0:	2500      	movs	r5, #0
 800d0c2:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800d0c6:	f8d8 3000 	ldr.w	r3, [r8]
 800d0ca:	42ab      	cmp	r3, r5
 800d0cc:	d87f      	bhi.n	800d1ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800d0ce:	4981      	ldr	r1, [pc, #516]	; (800d2d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800d0d0:	4e81      	ldr	r6, [pc, #516]	; (800d2d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800d0d2:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800d2f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800d0d6:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800d2e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>
 800d0da:	a803      	add	r0, sp, #12
 800d0dc:	f007 fe80 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800d0e0:	f104 091e 	add.w	r9, r4, #30
 800d0e4:	2700      	movs	r7, #0
 800d0e6:	f8d8 3000 	ldr.w	r3, [r8]
 800d0ea:	42bb      	cmp	r3, r7
 800d0ec:	f200 8083 	bhi.w	800d1f6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800d0f0:	497a      	ldr	r1, [pc, #488]	; (800d2dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800d0f2:	a803      	add	r0, sp, #12
 800d0f4:	f007 fe74 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800d0f8:	6863      	ldr	r3, [r4, #4]
 800d0fa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d0fe:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d102:	42a2      	cmp	r2, r4
 800d104:	f080 80b8 	bcs.w	800d278 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800d108:	9803      	ldr	r0, [sp, #12]
 800d10a:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800d10e:	4410      	add	r0, r2
 800d110:	eba4 0402 	sub.w	r4, r4, r2
 800d114:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d118:	f040 809d 	bne.w	800d256 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800d11c:	2a00      	cmp	r2, #0
 800d11e:	f040 809b 	bne.w	800d258 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800d122:	9200      	str	r2, [sp, #0]
 800d124:	4b6e      	ldr	r3, [pc, #440]	; (800d2e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d126:	4a6f      	ldr	r2, [pc, #444]	; (800d2e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d128:	e09c      	b.n	800d264 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d12a:	6823      	ldr	r3, [r4, #0]
 800d12c:	681a      	ldr	r2, [r3, #0]
 800d12e:	4601      	mov	r1, r0
 800d130:	68d2      	ldr	r2, [r2, #12]
 800d132:	4618      	mov	r0, r3
 800d134:	4790      	blx	r2
 800d136:	e79b      	b.n	800d070 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800d138:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800d13c:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800d140:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800d144:	45dc      	cmp	ip, fp
 800d146:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800d14a:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800d14e:	d221      	bcs.n	800d194 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800d150:	2110      	movs	r1, #16
 800d152:	9803      	ldr	r0, [sp, #12]
 800d154:	40a9      	lsls	r1, r5
 800d156:	ea31 0303 	bics.w	r3, r1, r3
 800d15a:	4460      	add	r0, ip
 800d15c:	ebab 0b0c 	sub.w	fp, fp, ip
 800d160:	f89d c014 	ldrb.w	ip, [sp, #20]
 800d164:	d006      	beq.n	800d174 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800d166:	f1bc 0f00 	cmp.w	ip, #0
 800d16a:	d106      	bne.n	800d17a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800d16c:	9200      	str	r2, [sp, #0]
 800d16e:	4633      	mov	r3, r6
 800d170:	4a5c      	ldr	r2, [pc, #368]	; (800d2e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d172:	e005      	b.n	800d180 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d174:	f1bc 0f00 	cmp.w	ip, #0
 800d178:	d023      	beq.n	800d1c2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800d17a:	9200      	str	r2, [sp, #0]
 800d17c:	4633      	mov	r3, r6
 800d17e:	464a      	mov	r2, r9
 800d180:	4659      	mov	r1, fp
 800d182:	f7fd f9a9 	bl	800a4d8 <snprintf>
 800d186:	4583      	cmp	fp, r0
 800d188:	bfa2      	ittt	ge
 800d18a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d18e:	18c0      	addge	r0, r0, r3
 800d190:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d194:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800d198:	fa23 f30a 	lsr.w	r3, r3, sl
 800d19c:	f013 0303 	ands.w	r3, r3, #3
 800d1a0:	d013      	beq.n	800d1ca <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800d1a2:	4a51      	ldr	r2, [pc, #324]	; (800d2e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800d1a4:	4951      	ldr	r1, [pc, #324]	; (800d2ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800d1a6:	2b02      	cmp	r3, #2
 800d1a8:	bf08      	it	eq
 800d1aa:	460a      	moveq	r2, r1
 800d1ac:	3b01      	subs	r3, #1
 800d1ae:	4639      	mov	r1, r7
 800d1b0:	bf18      	it	ne
 800d1b2:	2301      	movne	r3, #1
 800d1b4:	a803      	add	r0, sp, #12
 800d1b6:	f7ff fd89 	bl	800cccc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d1ba:	3501      	adds	r5, #1
 800d1bc:	3712      	adds	r7, #18
 800d1be:	3610      	adds	r6, #16
 800d1c0:	e763      	b.n	800d08a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800d1c2:	9200      	str	r2, [sp, #0]
 800d1c4:	4633      	mov	r3, r6
 800d1c6:	4a4a      	ldr	r2, [pc, #296]	; (800d2f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d1c8:	e7da      	b.n	800d180 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d1ca:	4a4a      	ldr	r2, [pc, #296]	; (800d2f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800d1cc:	e7ee      	b.n	800d1ac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800d1ce:	6861      	ldr	r1, [r4, #4]
 800d1d0:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d1d4:	fa0b f305 	lsl.w	r3, fp, r5
 800d1d8:	438b      	bics	r3, r1
 800d1da:	bf0c      	ite	eq
 800d1dc:	2301      	moveq	r3, #1
 800d1de:	2300      	movne	r3, #0
 800d1e0:	4631      	mov	r1, r6
 800d1e2:	2a00      	cmp	r2, #0
 800d1e4:	bf0c      	ite	eq
 800d1e6:	464a      	moveq	r2, r9
 800d1e8:	4652      	movne	r2, sl
 800d1ea:	a803      	add	r0, sp, #12
 800d1ec:	f7ff fd6e 	bl	800cccc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d1f0:	3501      	adds	r5, #1
 800d1f2:	3612      	adds	r6, #18
 800d1f4:	e767      	b.n	800d0c6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800d1f6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d1fa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d1fe:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800d202:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800d206:	42a9      	cmp	r1, r5
 800d208:	d21e      	bcs.n	800d248 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800d20a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800d20e:	9803      	ldr	r0, [sp, #12]
 800d210:	40ba      	lsls	r2, r7
 800d212:	ea32 0c0c 	bics.w	ip, r2, ip
 800d216:	4408      	add	r0, r1
 800d218:	eba5 0501 	sub.w	r5, r5, r1
 800d21c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d220:	d004      	beq.n	800d22c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800d222:	b921      	cbnz	r1, 800d22e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800d224:	9300      	str	r3, [sp, #0]
 800d226:	465a      	mov	r2, fp
 800d228:	4633      	mov	r3, r6
 800d22a:	e003      	b.n	800d234 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d22c:	b179      	cbz	r1, 800d24e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800d22e:	4a32      	ldr	r2, [pc, #200]	; (800d2f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d230:	9300      	str	r3, [sp, #0]
 800d232:	4633      	mov	r3, r6
 800d234:	4629      	mov	r1, r5
 800d236:	f7fd f94f 	bl	800a4d8 <snprintf>
 800d23a:	4285      	cmp	r5, r0
 800d23c:	bfa2      	ittt	ge
 800d23e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d242:	18c0      	addge	r0, r0, r3
 800d244:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d248:	3701      	adds	r7, #1
 800d24a:	3612      	adds	r6, #18
 800d24c:	e74b      	b.n	800d0e6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800d24e:	9300      	str	r3, [sp, #0]
 800d250:	4652      	mov	r2, sl
 800d252:	4633      	mov	r3, r6
 800d254:	e7ee      	b.n	800d234 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d256:	b34a      	cbz	r2, 800d2ac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800d258:	3b00      	subs	r3, #0
 800d25a:	bf18      	it	ne
 800d25c:	2301      	movne	r3, #1
 800d25e:	9300      	str	r3, [sp, #0]
 800d260:	4a25      	ldr	r2, [pc, #148]	; (800d2f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d262:	4b1f      	ldr	r3, [pc, #124]	; (800d2e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d264:	4621      	mov	r1, r4
 800d266:	f7fd f937 	bl	800a4d8 <snprintf>
 800d26a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d26e:	4284      	cmp	r4, r0
 800d270:	bfa4      	itt	ge
 800d272:	181b      	addge	r3, r3, r0
 800d274:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d278:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d27c:	b17b      	cbz	r3, 800d29e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800d27e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d282:	9b03      	ldr	r3, [sp, #12]
 800d284:	4413      	add	r3, r2
 800d286:	227d      	movs	r2, #125	; 0x7d
 800d288:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d28c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d290:	9903      	ldr	r1, [sp, #12]
 800d292:	54ca      	strb	r2, [r1, r3]
 800d294:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d298:	3301      	adds	r3, #1
 800d29a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d29e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d2a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d2a4:	601a      	str	r2, [r3, #0]
 800d2a6:	b007      	add	sp, #28
 800d2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2ac:	2301      	movs	r3, #1
 800d2ae:	9300      	str	r3, [sp, #0]
 800d2b0:	4a0f      	ldr	r2, [pc, #60]	; (800d2f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d2b2:	4b0b      	ldr	r3, [pc, #44]	; (800d2e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d2b4:	e7d6      	b.n	800d264 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d2b6:	bf00      	nop
 800d2b8:	08019c04 	stmdaeq	r1, {r2, sl, fp, ip, pc}
 800d2bc:	0801b7e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, ip, sp, pc}
 800d2c0:	0801b5e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, sp, pc}
 800d2c4:	08019bac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, fp, ip, pc}
 800d2c8:	0801b762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip, sp, pc}
 800d2cc:	0801b7d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, ip, sp, pc}
 800d2d0:	08019b95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, fp, ip, pc}
 800d2d4:	08019ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, ip, pc}
 800d2d8:	08019bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, ip, pc}
 800d2dc:	08018a41 	stmdaeq	r1, {r0, r6, r9, fp, pc}
 800d2e0:	0801b7bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp, pc}
 800d2e4:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800d2e8:	08019b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, pc}
 800d2ec:	08019b85 	stmdaeq	r1, {r0, r2, r7, r8, r9, fp, ip, pc}
 800d2f0:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}
 800d2f4:	08019b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, ip, pc}
 800d2f8:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800d2fc:	200006d4 	ldrdcs	r0, [r0], -r4
 800d300:	08019b91 	stmdaeq	r1, {r0, r4, r7, r8, r9, fp, ip, pc}
 800d304:	08019b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, ip, pc}

0800d308 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800d308:	b513      	push	{r0, r1, r4, lr}
 800d30a:	6804      	ldr	r4, [r0, #0]
 800d30c:	b914      	cbnz	r4, 800d314 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800d30e:	601c      	str	r4, [r3, #0]
 800d310:	b002      	add	sp, #8
 800d312:	bd10      	pop	{r4, pc}
 800d314:	9300      	str	r3, [sp, #0]
 800d316:	4613      	mov	r3, r2
 800d318:	460a      	mov	r2, r1
 800d31a:	2100      	movs	r1, #0
 800d31c:	f7ff fe9c 	bl	800d058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800d320:	e7f6      	b.n	800d310 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800d324 <E131Params::Set(unsigned int)>:
 800d324:	1e4b      	subs	r3, r1, #1
 800d326:	2b40      	cmp	r3, #64	; 0x40
 800d328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d32c:	d807      	bhi.n	800d33e <E131Params::Set(unsigned int)+0x1a>
 800d32e:	4a27      	ldr	r2, [pc, #156]	; (800d3cc <E131Params::Set(unsigned int)+0xa8>)
 800d330:	f1c1 0342 	rsb	r3, r1, #66	; 0x42
 800d334:	6814      	ldr	r4, [r2, #0]
 800d336:	42a3      	cmp	r3, r4
 800d338:	bf94      	ite	ls
 800d33a:	6013      	strls	r3, [r2, #0]
 800d33c:	6014      	strhi	r4, [r2, #0]
 800d33e:	6843      	ldr	r3, [r0, #4]
 800d340:	b1fb      	cbz	r3, 800d382 <E131Params::Set(unsigned int)+0x5e>
 800d342:	4b23      	ldr	r3, [pc, #140]	; (800d3d0 <E131Params::Set(unsigned int)+0xac>)
 800d344:	681c      	ldr	r4, [r3, #0]
 800d346:	4b21      	ldr	r3, [pc, #132]	; (800d3cc <E131Params::Set(unsigned int)+0xa8>)
 800d348:	2244      	movs	r2, #68	; 0x44
 800d34a:	f504 57b5 	add.w	r7, r4, #5792	; 0x16a0
 800d34e:	f8d3 c000 	ldr.w	ip, [r3]
 800d352:	f100 0514 	add.w	r5, r0, #20
 800d356:	fb02 4201 	mla	r2, r2, r1, r4
 800d35a:	2300      	movs	r3, #0
 800d35c:	f44f 7e80 	mov.w	lr, #256	; 0x100
 800d360:	f44f 3880 	mov.w	r8, #65536	; 0x10000
 800d364:	3705      	adds	r7, #5
 800d366:	f04f 090c 	mov.w	r9, #12
 800d36a:	459c      	cmp	ip, r3
 800d36c:	6846      	ldr	r6, [r0, #4]
 800d36e:	d10a      	bne.n	800d386 <E131Params::Set(unsigned int)+0x62>
 800d370:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800d374:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800d378:	04b3      	lsls	r3, r6, #18
 800d37a:	bf44      	itt	mi
 800d37c:	2301      	movmi	r3, #1
 800d37e:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800d382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d386:	eb03 0a01 	add.w	sl, r3, r1
 800d38a:	f1ba 0f41 	cmp.w	sl, #65	; 0x41
 800d38e:	d8ef      	bhi.n	800d370 <E131Params::Set(unsigned int)+0x4c>
 800d390:	fa0e fa03 	lsl.w	sl, lr, r3
 800d394:	ea3a 0a06 	bics.w	sl, sl, r6
 800d398:	bf04      	itt	eq
 800d39a:	f895 a000 	ldrbeq.w	sl, [r5]
 800d39e:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800d3a2:	fa08 fa03 	lsl.w	sl, r8, r3
 800d3a6:	ea3a 0a06 	bics.w	sl, sl, r6
 800d3aa:	d10a      	bne.n	800d3c2 <E131Params::Set(unsigned int)+0x9e>
 800d3ac:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800d3b0:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800d3b4:	b2f6      	uxtb	r6, r6
 800d3b6:	2ec7      	cmp	r6, #199	; 0xc7
 800d3b8:	bf9c      	itt	ls
 800d3ba:	fb09 f603 	mulls.w	r6, r9, r3
 800d3be:	f807 a006 	strbls.w	sl, [r7, r6]
 800d3c2:	3301      	adds	r3, #1
 800d3c4:	3501      	adds	r5, #1
 800d3c6:	3244      	adds	r2, #68	; 0x44
 800d3c8:	e7cf      	b.n	800d36a <E131Params::Set(unsigned int)+0x46>
 800d3ca:	bf00      	nop
 800d3cc:	200006d4 	ldrdcs	r0, [r0], -r4
 800d3d0:	200006cc 	andcs	r0, r0, ip, asr #13

0800d3d4 <E131Params::Dump()>:
 800d3d4:	4770      	bx	lr

0800d3d6 <LLRPDevice::~LLRPDevice()>:
 800d3d6:	4770      	bx	lr

0800d3d8 <LLRPDevice::CopyUID(unsigned char*)>:
 800d3d8:	4770      	bx	lr

0800d3da <LLRPDevice::CopyCID(unsigned char*)>:
 800d3da:	4770      	bx	lr

0800d3dc <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800d3dc:	2000      	movs	r0, #0
 800d3de:	4770      	bx	lr

0800d3e0 <LLRPDevice::~LLRPDevice()>:
 800d3e0:	b510      	push	{r4, lr}
 800d3e2:	4604      	mov	r4, r0
 800d3e4:	f008 fc02 	bl	8015bec <operator delete(void*)>
 800d3e8:	4620      	mov	r0, r4
 800d3ea:	bd10      	pop	{r4, pc}

0800d3ec <memcpy.isra.0>:
 800d3ec:	3801      	subs	r0, #1
 800d3ee:	440a      	add	r2, r1
 800d3f0:	4291      	cmp	r1, r2
 800d3f2:	d100      	bne.n	800d3f6 <memcpy.isra.0+0xa>
 800d3f4:	4770      	bx	lr
 800d3f6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d3fa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d3fe:	e7f7      	b.n	800d3f0 <memcpy.isra.0+0x4>

0800d400 <LLRPDevice::LLRPDevice()>:
 800d400:	b513      	push	{r0, r1, r4, lr}
 800d402:	4b0a      	ldr	r3, [pc, #40]	; (800d42c <LLRPDevice::LLRPDevice()+0x2c>)
 800d404:	6003      	str	r3, [r0, #0]
 800d406:	4604      	mov	r4, r0
 800d408:	a901      	add	r1, sp, #4
 800d40a:	4809      	ldr	r0, [pc, #36]	; (800d430 <LLRPDevice::LLRPDevice()+0x30>)
 800d40c:	f008 fbf6 	bl	8015bfc <inet_aton>
 800d410:	4b08      	ldr	r3, [pc, #32]	; (800d434 <LLRPDevice::LLRPDevice()+0x34>)
 800d412:	9a01      	ldr	r2, [sp, #4]
 800d414:	4808      	ldr	r0, [pc, #32]	; (800d438 <LLRPDevice::LLRPDevice()+0x38>)
 800d416:	601a      	str	r2, [r3, #0]
 800d418:	a901      	add	r1, sp, #4
 800d41a:	f008 fbef 	bl	8015bfc <inet_aton>
 800d41e:	4b07      	ldr	r3, [pc, #28]	; (800d43c <LLRPDevice::LLRPDevice()+0x3c>)
 800d420:	9a01      	ldr	r2, [sp, #4]
 800d422:	601a      	str	r2, [r3, #0]
 800d424:	4620      	mov	r0, r4
 800d426:	b002      	add	sp, #8
 800d428:	bd10      	pop	{r4, pc}
 800d42a:	bf00      	nop
 800d42c:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 800d430:	08019c1b 	stmdaeq	r1, {r0, r1, r3, r4, sl, fp, ip, pc}
 800d434:	200006dc 	ldrdcs	r0, [r0], -ip
 800d438:	08019c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, ip, pc}
 800d43c:	200006e0 	andcs	r0, r0, r0, ror #13

0800d440 <LLRPDevice::HandleRequestMessage()>:
 800d440:	b530      	push	{r4, r5, lr}
 800d442:	4b24      	ldr	r3, [pc, #144]	; (800d4d4 <LLRPDevice::HandleRequestMessage()+0x94>)
 800d444:	681c      	ldr	r4, [r3, #0]
 800d446:	b089      	sub	sp, #36	; 0x24
 800d448:	2210      	movs	r2, #16
 800d44a:	4605      	mov	r5, r0
 800d44c:	f104 0117 	add.w	r1, r4, #23
 800d450:	eb0d 0002 	add.w	r0, sp, r2
 800d454:	9103      	str	r1, [sp, #12]
 800d456:	f7ff ffc9 	bl	800d3ec <memcpy.isra.0>
 800d45a:	2343      	movs	r3, #67	; 0x43
 800d45c:	74a3      	strb	r3, [r4, #18]
 800d45e:	682b      	ldr	r3, [r5, #0]
 800d460:	9903      	ldr	r1, [sp, #12]
 800d462:	68db      	ldr	r3, [r3, #12]
 800d464:	4628      	mov	r0, r5
 800d466:	4798      	blx	r3
 800d468:	232c      	movs	r3, #44	; 0x2c
 800d46a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d46e:	2300      	movs	r3, #0
 800d470:	2210      	movs	r2, #16
 800d472:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800d476:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800d47a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d47e:	2302      	movs	r3, #2
 800d480:	eb0d 0102 	add.w	r1, sp, r2
 800d484:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800d488:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d48c:	f7ff ffae 	bl	800d3ec <memcpy.isra.0>
 800d490:	2311      	movs	r3, #17
 800d492:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d496:	2301      	movs	r3, #1
 800d498:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d49c:	682b      	ldr	r3, [r5, #0]
 800d49e:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800d4a2:	4628      	mov	r0, r5
 800d4a4:	689b      	ldr	r3, [r3, #8]
 800d4a6:	4798      	blx	r3
 800d4a8:	4b0b      	ldr	r3, [pc, #44]	; (800d4d8 <LLRPDevice::HandleRequestMessage()+0x98>)
 800d4aa:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800d4ae:	6818      	ldr	r0, [r3, #0]
 800d4b0:	f005 f9d1 	bl	8012856 <Network::MacAddressCopyTo(unsigned char*)>
 800d4b4:	23ff      	movs	r3, #255	; 0xff
 800d4b6:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800d4ba:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d4be:	9300      	str	r3, [sp, #0]
 800d4c0:	4806      	ldr	r0, [pc, #24]	; (800d4dc <LLRPDevice::HandleRequestMessage()+0x9c>)
 800d4c2:	4b07      	ldr	r3, [pc, #28]	; (800d4e0 <LLRPDevice::HandleRequestMessage()+0xa0>)
 800d4c4:	7800      	ldrb	r0, [r0, #0]
 800d4c6:	681b      	ldr	r3, [r3, #0]
 800d4c8:	2253      	movs	r2, #83	; 0x53
 800d4ca:	4621      	mov	r1, r4
 800d4cc:	f004 fcf0 	bl	8011eb0 <udp_send>
 800d4d0:	b009      	add	sp, #36	; 0x24
 800d4d2:	bd30      	pop	{r4, r5, pc}
 800d4d4:	200006e4 	andcs	r0, r0, r4, ror #13
 800d4d8:	2000f994 	mulcs	r0, r4, r9
 800d4dc:	20000000 	andcs	r0, r0, r0
 800d4e0:	200006e0 	andcs	r0, r0, r0, ror #13

0800d4e4 <LLRPDevice::HandleRdmCommand()>:
 800d4e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4e8:	4b23      	ldr	r3, [pc, #140]	; (800d578 <LLRPDevice::HandleRdmCommand()+0x94>)
 800d4ea:	681c      	ldr	r4, [r3, #0]
 800d4ec:	6803      	ldr	r3, [r0, #0]
 800d4ee:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800d4f2:	691b      	ldr	r3, [r3, #16]
 800d4f4:	b089      	sub	sp, #36	; 0x24
 800d4f6:	4649      	mov	r1, r9
 800d4f8:	4607      	mov	r7, r0
 800d4fa:	4798      	blx	r3
 800d4fc:	4605      	mov	r5, r0
 800d4fe:	2800      	cmp	r0, #0
 800d500:	d036      	beq.n	800d570 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d502:	7803      	ldrb	r3, [r0, #0]
 800d504:	2bcc      	cmp	r3, #204	; 0xcc
 800d506:	d133      	bne.n	800d570 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d508:	2210      	movs	r2, #16
 800d50a:	eb0d 0002 	add.w	r0, sp, r2
 800d50e:	f104 0117 	add.w	r1, r4, #23
 800d512:	9103      	str	r1, [sp, #12]
 800d514:	f7ff ff6a 	bl	800d3ec <memcpy.isra.0>
 800d518:	78ae      	ldrb	r6, [r5, #2]
 800d51a:	9903      	ldr	r1, [sp, #12]
 800d51c:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800d520:	fa5f f888 	uxtb.w	r8, r8
 800d524:	f884 8012 	strb.w	r8, [r4, #18]
 800d528:	683b      	ldr	r3, [r7, #0]
 800d52a:	4638      	mov	r0, r7
 800d52c:	68db      	ldr	r3, [r3, #12]
 800d52e:	4798      	blx	r3
 800d530:	f106 0320 	add.w	r3, r6, #32
 800d534:	2210      	movs	r2, #16
 800d536:	eb0d 0102 	add.w	r1, sp, r2
 800d53a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d53e:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d542:	f7ff ff53 	bl	800d3ec <memcpy.isra.0>
 800d546:	1d73      	adds	r3, r6, #5
 800d548:	1c72      	adds	r2, r6, #1
 800d54a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d54e:	b2d2      	uxtb	r2, r2
 800d550:	1c69      	adds	r1, r5, #1
 800d552:	4648      	mov	r0, r9
 800d554:	f7ff ff4a 	bl	800d3ec <memcpy.isra.0>
 800d558:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d55c:	9300      	str	r3, [sp, #0]
 800d55e:	4807      	ldr	r0, [pc, #28]	; (800d57c <LLRPDevice::HandleRdmCommand()+0x98>)
 800d560:	4b07      	ldr	r3, [pc, #28]	; (800d580 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800d562:	7800      	ldrb	r0, [r0, #0]
 800d564:	681b      	ldr	r3, [r3, #0]
 800d566:	f108 0210 	add.w	r2, r8, #16
 800d56a:	4621      	mov	r1, r4
 800d56c:	f004 fca0 	bl	8011eb0 <udp_send>
 800d570:	b009      	add	sp, #36	; 0x24
 800d572:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d576:	bf00      	nop
 800d578:	200006e4 	andcs	r0, r0, r4, ror #13
 800d57c:	20000000 	andcs	r0, r0, r0
 800d580:	200006e0 	andcs	r0, r0, r0, ror #13

0800d584 <LLRPDevice::Run()>:
 800d584:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d586:	4d0f      	ldr	r5, [pc, #60]	; (800d5c4 <LLRPDevice::Run()+0x40>)
 800d588:	4a0f      	ldr	r2, [pc, #60]	; (800d5c8 <LLRPDevice::Run()+0x44>)
 800d58a:	4604      	mov	r4, r0
 800d58c:	480f      	ldr	r0, [pc, #60]	; (800d5cc <LLRPDevice::Run()+0x48>)
 800d58e:	f10d 0306 	add.w	r3, sp, #6
 800d592:	7800      	ldrb	r0, [r0, #0]
 800d594:	4629      	mov	r1, r5
 800d596:	f004 fc65 	bl	8011e64 <udp_recv2>
 800d59a:	2841      	cmp	r0, #65	; 0x41
 800d59c:	d908      	bls.n	800d5b0 <LLRPDevice::Run()+0x2c>
 800d59e:	682b      	ldr	r3, [r5, #0]
 800d5a0:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800d5a4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d5a8:	ba1a      	rev	r2, r3
 800d5aa:	d003      	beq.n	800d5b4 <LLRPDevice::Run()+0x30>
 800d5ac:	2a03      	cmp	r2, #3
 800d5ae:	d005      	beq.n	800d5bc <LLRPDevice::Run()+0x38>
 800d5b0:	b003      	add	sp, #12
 800d5b2:	bd30      	pop	{r4, r5, pc}
 800d5b4:	4620      	mov	r0, r4
 800d5b6:	f7ff ff43 	bl	800d440 <LLRPDevice::HandleRequestMessage()>
 800d5ba:	e7f9      	b.n	800d5b0 <LLRPDevice::Run()+0x2c>
 800d5bc:	4620      	mov	r0, r4
 800d5be:	f7ff ff91 	bl	800d4e4 <LLRPDevice::HandleRdmCommand()>
 800d5c2:	e7f5      	b.n	800d5b0 <LLRPDevice::Run()+0x2c>
 800d5c4:	200006e4 	andcs	r0, r0, r4, ror #13
 800d5c8:	200006d8 	ldrdcs	r0, [r0], -r8
 800d5cc:	20000000 	andcs	r0, r0, r0

0800d5d0 <LLRPDevice::Print()>:
 800d5d0:	b507      	push	{r0, r1, r2, lr}
 800d5d2:	4811      	ldr	r0, [pc, #68]	; (800d618 <LLRPDevice::Print()+0x48>)
 800d5d4:	f7fc ff58 	bl	800a488 <printf>
 800d5d8:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800d5dc:	480f      	ldr	r0, [pc, #60]	; (800d61c <LLRPDevice::Print()+0x4c>)
 800d5de:	f7fc ff53 	bl	800a488 <printf>
 800d5e2:	4b0f      	ldr	r3, [pc, #60]	; (800d620 <LLRPDevice::Print()+0x50>)
 800d5e4:	480f      	ldr	r0, [pc, #60]	; (800d624 <LLRPDevice::Print()+0x54>)
 800d5e6:	6819      	ldr	r1, [r3, #0]
 800d5e8:	0e0b      	lsrs	r3, r1, #24
 800d5ea:	9300      	str	r3, [sp, #0]
 800d5ec:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5f0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5f4:	b2c9      	uxtb	r1, r1
 800d5f6:	f7fc ff47 	bl	800a488 <printf>
 800d5fa:	4b0b      	ldr	r3, [pc, #44]	; (800d628 <LLRPDevice::Print()+0x58>)
 800d5fc:	480b      	ldr	r0, [pc, #44]	; (800d62c <LLRPDevice::Print()+0x5c>)
 800d5fe:	6819      	ldr	r1, [r3, #0]
 800d600:	0e0b      	lsrs	r3, r1, #24
 800d602:	9300      	str	r3, [sp, #0]
 800d604:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d608:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d60c:	b2c9      	uxtb	r1, r1
 800d60e:	f7fc ff3b 	bl	800a488 <printf>
 800d612:	b003      	add	sp, #12
 800d614:	f85d fb04 	ldr.w	pc, [sp], #4
 800d618:	08019c3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, fp, ip, pc}
 800d61c:	08019c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, pc}
 800d620:	200006dc 	ldrdcs	r0, [r0], -ip
 800d624:	08019c74 	stmdaeq	r1, {r2, r4, r5, r6, sl, fp, ip, pc}
 800d628:	200006e0 	andcs	r0, r0, r0, ror #13
 800d62c:	08019c9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, sl, fp, ip, pc}

0800d630 <RDMNetDevice::Print()>:
 800d630:	b510      	push	{r4, lr}
 800d632:	b08a      	sub	sp, #40	; 0x28
 800d634:	2300      	movs	r3, #0
 800d636:	4604      	mov	r4, r0
 800d638:	4669      	mov	r1, sp
 800d63a:	480a      	ldr	r0, [pc, #40]	; (800d664 <RDMNetDevice::Print()+0x34>)
 800d63c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d640:	f001 f944 	bl	800e8cc <uuid_unparse>
 800d644:	4808      	ldr	r0, [pc, #32]	; (800d668 <RDMNetDevice::Print()+0x38>)
 800d646:	f7fc ff1f 	bl	800a488 <printf>
 800d64a:	4669      	mov	r1, sp
 800d64c:	4807      	ldr	r0, [pc, #28]	; (800d66c <RDMNetDevice::Print()+0x3c>)
 800d64e:	f7fc ff1b 	bl	800a488 <printf>
 800d652:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800d656:	f7ff ffbb 	bl	800d5d0 <LLRPDevice::Print()>
 800d65a:	4620      	mov	r0, r4
 800d65c:	f000 fa36 	bl	800dacc <RDMDeviceResponder::Print()>
 800d660:	b00a      	add	sp, #40	; 0x28
 800d662:	bd10      	pop	{r4, pc}
 800d664:	200007e9 	andcs	r0, r0, r9, ror #15
 800d668:	08019d12 	stmdaeq	r1, {r1, r4, r8, sl, fp, ip, pc}
 800d66c:	08019d1a 	stmdaeq	r1, {r1, r3, r4, r8, sl, fp, ip, pc}

0800d670 <RDMSensors::RDMSensors()>:
 800d670:	2200      	movs	r2, #0
 800d672:	6002      	str	r2, [r0, #0]
 800d674:	7102      	strb	r2, [r0, #4]
 800d676:	4a01      	ldr	r2, [pc, #4]	; (800d67c <RDMSensors::RDMSensors()+0xc>)
 800d678:	6010      	str	r0, [r2, #0]
 800d67a:	4770      	bx	lr
 800d67c:	200007fc 	strdcs	r0, [r0], -ip

0800d680 <RDMSensors::~RDMSensors()>:
 800d680:	b570      	push	{r4, r5, r6, lr}
 800d682:	2500      	movs	r5, #0
 800d684:	4604      	mov	r4, r0
 800d686:	462e      	mov	r6, r5
 800d688:	7923      	ldrb	r3, [r4, #4]
 800d68a:	6820      	ldr	r0, [r4, #0]
 800d68c:	42ab      	cmp	r3, r5
 800d68e:	d804      	bhi.n	800d69a <RDMSensors::~RDMSensors()+0x1a>
 800d690:	b108      	cbz	r0, 800d696 <RDMSensors::~RDMSensors()+0x16>
 800d692:	f008 faad 	bl	8015bf0 <operator delete[](void*)>
 800d696:	4620      	mov	r0, r4
 800d698:	bd70      	pop	{r4, r5, r6, pc}
 800d69a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d69e:	b128      	cbz	r0, 800d6ac <RDMSensors::~RDMSensors()+0x2c>
 800d6a0:	6803      	ldr	r3, [r0, #0]
 800d6a2:	685b      	ldr	r3, [r3, #4]
 800d6a4:	4798      	blx	r3
 800d6a6:	6823      	ldr	r3, [r4, #0]
 800d6a8:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800d6ac:	3501      	adds	r5, #1
 800d6ae:	e7eb      	b.n	800d688 <RDMSensors::~RDMSensors()+0x8>

0800d6b0 <RDMSubDevices::RDMSubDevices()>:
 800d6b0:	2200      	movs	r2, #0
 800d6b2:	6002      	str	r2, [r0, #0]
 800d6b4:	8082      	strh	r2, [r0, #4]
 800d6b6:	4a01      	ldr	r2, [pc, #4]	; (800d6bc <RDMSubDevices::RDMSubDevices()+0xc>)
 800d6b8:	6010      	str	r0, [r2, #0]
 800d6ba:	4770      	bx	lr
 800d6bc:	20000800 	andcs	r0, r0, r0, lsl #16

0800d6c0 <RDMSubDevices::~RDMSubDevices()>:
 800d6c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6c2:	2500      	movs	r5, #0
 800d6c4:	4604      	mov	r4, r0
 800d6c6:	462e      	mov	r6, r5
 800d6c8:	88a3      	ldrh	r3, [r4, #4]
 800d6ca:	6820      	ldr	r0, [r4, #0]
 800d6cc:	42ab      	cmp	r3, r5
 800d6ce:	d804      	bhi.n	800d6da <RDMSubDevices::~RDMSubDevices()+0x1a>
 800d6d0:	b108      	cbz	r0, 800d6d6 <RDMSubDevices::~RDMSubDevices()+0x16>
 800d6d2:	f008 fa8d 	bl	8015bf0 <operator delete[](void*)>
 800d6d6:	4620      	mov	r0, r4
 800d6d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d6da:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d6de:	00af      	lsls	r7, r5, #2
 800d6e0:	b110      	cbz	r0, 800d6e8 <RDMSubDevices::~RDMSubDevices()+0x28>
 800d6e2:	6803      	ldr	r3, [r0, #0]
 800d6e4:	685b      	ldr	r3, [r3, #4]
 800d6e6:	4798      	blx	r3
 800d6e8:	6823      	ldr	r3, [r4, #0]
 800d6ea:	3501      	adds	r5, #1
 800d6ec:	51de      	str	r6, [r3, r7]
 800d6ee:	e7eb      	b.n	800d6c8 <RDMSubDevices::~RDMSubDevices()+0x8>

0800d6f0 <RDMSubDevices::GetInfo(unsigned short)>:
 800d6f0:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800d6f4:	6803      	ldr	r3, [r0, #0]
 800d6f6:	3901      	subs	r1, #1
 800d6f8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d6fc:	3010      	adds	r0, #16
 800d6fe:	4770      	bx	lr

0800d700 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800d700:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800d704:	6800      	ldr	r0, [r0, #0]
 800d706:	3b01      	subs	r3, #1
 800d708:	4611      	mov	r1, r2
 800d70a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800d70e:	f000 b830 	b.w	800d772 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800d712 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800d712:	b410      	push	{r4}
 800d714:	460c      	mov	r4, r1
 800d716:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800d71a:	3c01      	subs	r4, #1
 800d71c:	6800      	ldr	r0, [r0, #0]
 800d71e:	4611      	mov	r1, r2
 800d720:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800d724:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d728:	461a      	mov	r2, r3
 800d72a:	f000 b837 	b.w	800d79c <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800d72e <RDMSubDevices::GetFactoryDefaults()>:
 800d72e:	b538      	push	{r3, r4, r5, lr}
 800d730:	4605      	mov	r5, r0
 800d732:	2400      	movs	r4, #0
 800d734:	88ab      	ldrh	r3, [r5, #4]
 800d736:	42a3      	cmp	r3, r4
 800d738:	d801      	bhi.n	800d73e <RDMSubDevices::GetFactoryDefaults()+0x10>
 800d73a:	2001      	movs	r0, #1
 800d73c:	e009      	b.n	800d752 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800d73e:	682b      	ldr	r3, [r5, #0]
 800d740:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d744:	b908      	cbnz	r0, 800d74a <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800d746:	3401      	adds	r4, #1
 800d748:	e7f4      	b.n	800d734 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800d74a:	f000 f85c 	bl	800d806 <RDMSubDevice::GetFactoryDefaults()>
 800d74e:	2800      	cmp	r0, #0
 800d750:	d1f9      	bne.n	800d746 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800d752:	bd38      	pop	{r3, r4, r5, pc}

0800d754 <RDMSubDevices::SetFactoryDefaults()>:
 800d754:	b538      	push	{r3, r4, r5, lr}
 800d756:	4605      	mov	r5, r0
 800d758:	2400      	movs	r4, #0
 800d75a:	88ab      	ldrh	r3, [r5, #4]
 800d75c:	42a3      	cmp	r3, r4
 800d75e:	d800      	bhi.n	800d762 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800d760:	bd38      	pop	{r3, r4, r5, pc}
 800d762:	682b      	ldr	r3, [r5, #0]
 800d764:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d768:	b108      	cbz	r0, 800d76e <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800d76a:	f000 f826 	bl	800d7ba <RDMSubDevice::SetFactoryDefaults()>
 800d76e:	3401      	adds	r4, #1
 800d770:	e7f3      	b.n	800d75a <RDMSubDevices::SetFactoryDefaults()+0x6>

0800d772 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800d772:	f100 0316 	add.w	r3, r0, #22
 800d776:	600b      	str	r3, [r1, #0]
 800d778:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d77c:	710b      	strb	r3, [r1, #4]
 800d77e:	4770      	bx	lr

0800d780 <RDMSubDevice::SetLabel(char const*)>:
 800d780:	b510      	push	{r4, lr}
 800d782:	2300      	movs	r3, #0
 800d784:	f100 0415 	add.w	r4, r0, #21
 800d788:	5cca      	ldrb	r2, [r1, r3]
 800d78a:	b122      	cbz	r2, 800d796 <RDMSubDevice::SetLabel(char const*)+0x16>
 800d78c:	3301      	adds	r3, #1
 800d78e:	2b20      	cmp	r3, #32
 800d790:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d794:	d1f8      	bne.n	800d788 <RDMSubDevice::SetLabel(char const*)+0x8>
 800d796:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d79a:	bd10      	pop	{r4, pc}

0800d79c <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800d79c:	b530      	push	{r4, r5, lr}
 800d79e:	2300      	movs	r3, #0
 800d7a0:	f100 0415 	add.w	r4, r0, #21
 800d7a4:	429a      	cmp	r2, r3
 800d7a6:	d905      	bls.n	800d7b4 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800d7a8:	5ccd      	ldrb	r5, [r1, r3]
 800d7aa:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d7ae:	3301      	adds	r3, #1
 800d7b0:	2b20      	cmp	r3, #32
 800d7b2:	d1f7      	bne.n	800d7a4 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800d7b4:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d7b8:	bd30      	pop	{r4, r5, pc}

0800d7ba <RDMSubDevice::SetFactoryDefaults()>:
 800d7ba:	7a03      	ldrb	r3, [r0, #8]
 800d7bc:	b510      	push	{r4, lr}
 800d7be:	b94b      	cbnz	r3, 800d7d4 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800d7c0:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800d7c4:	f7ff ffdc 	bl	800d780 <RDMSubDevice::SetLabel(char const*)>
 800d7c8:	8983      	ldrh	r3, [r0, #12]
 800d7ca:	8243      	strh	r3, [r0, #18]
 800d7cc:	7b83      	ldrb	r3, [r0, #14]
 800d7ce:	7503      	strb	r3, [r0, #20]
 800d7d0:	2301      	movs	r3, #1
 800d7d2:	7203      	strb	r3, [r0, #8]
 800d7d4:	bd10      	pop	{r4, pc}

0800d7d6 <RDMSubDevice::CalculateChecksum()>:
 800d7d6:	b510      	push	{r4, lr}
 800d7d8:	8a43      	ldrh	r3, [r0, #18]
 800d7da:	7d02      	ldrb	r2, [r0, #20]
 800d7dc:	f890 4036 	ldrb.w	r4, [r0, #54]	; 0x36
 800d7e0:	4413      	add	r3, r2
 800d7e2:	f100 0215 	add.w	r2, r0, #21
 800d7e6:	f1c0 20ff 	rsb	r0, r0, #4278255360	; 0xff00ff00
 800d7ea:	f500 007f 	add.w	r0, r0, #16711680	; 0xff0000
 800d7ee:	b29b      	uxth	r3, r3
 800d7f0:	30eb      	adds	r0, #235	; 0xeb
 800d7f2:	1881      	adds	r1, r0, r2
 800d7f4:	428c      	cmp	r4, r1
 800d7f6:	d801      	bhi.n	800d7fc <RDMSubDevice::CalculateChecksum()+0x26>
 800d7f8:	4618      	mov	r0, r3
 800d7fa:	bd10      	pop	{r4, pc}
 800d7fc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d800:	440b      	add	r3, r1
 800d802:	b29b      	uxth	r3, r3
 800d804:	e7f5      	b.n	800d7f2 <RDMSubDevice::CalculateChecksum()+0x1c>

0800d806 <RDMSubDevice::GetFactoryDefaults()>:
 800d806:	7a03      	ldrb	r3, [r0, #8]
 800d808:	b510      	push	{r4, lr}
 800d80a:	4604      	mov	r4, r0
 800d80c:	b133      	cbz	r3, 800d81c <RDMSubDevice::GetFactoryDefaults()+0x16>
 800d80e:	f7ff ffe2 	bl	800d7d6 <RDMSubDevice::CalculateChecksum()>
 800d812:	8963      	ldrh	r3, [r4, #10]
 800d814:	4283      	cmp	r3, r0
 800d816:	bf1c      	itt	ne
 800d818:	2300      	movne	r3, #0
 800d81a:	7223      	strbne	r3, [r4, #8]
 800d81c:	7a20      	ldrb	r0, [r4, #8]
 800d81e:	bd10      	pop	{r4, pc}

0800d820 <memcpy.isra.0>:
 800d820:	f008 bada 	b.w	8015dd8 <memcpy>

0800d824 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800d824:	b510      	push	{r4, lr}
 800d826:	6001      	str	r1, [r0, #0]
 800d828:	2100      	movs	r1, #0
 800d82a:	4604      	mov	r4, r0
 800d82c:	6041      	str	r1, [r0, #4]
 800d82e:	2220      	movs	r2, #32
 800d830:	3008      	adds	r0, #8
 800d832:	f008 faf3 	bl	8015e1c <memset>
 800d836:	4b03      	ldr	r3, [pc, #12]	; (800d844 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800d838:	62a3      	str	r3, [r4, #40]	; 0x28
 800d83a:	237f      	movs	r3, #127	; 0x7f
 800d83c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d840:	4620      	mov	r0, r4
 800d842:	bd10      	pop	{r4, pc}
 800d844:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800d848 <RDMDeviceParams::Load()>:
 800d848:	4601      	mov	r1, r0
 800d84a:	6800      	ldr	r0, [r0, #0]
 800d84c:	b130      	cbz	r0, 800d85c <RDMDeviceParams::Load()+0x14>
 800d84e:	b508      	push	{r3, lr}
 800d850:	6803      	ldr	r3, [r0, #0]
 800d852:	3104      	adds	r1, #4
 800d854:	68db      	ldr	r3, [r3, #12]
 800d856:	4798      	blx	r3
 800d858:	2001      	movs	r0, #1
 800d85a:	bd08      	pop	{r3, pc}
 800d85c:	4770      	bx	lr

0800d85e <RDMDeviceParams::Set(RDMDevice*)>:
 800d85e:	6843      	ldr	r3, [r0, #4]
 800d860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d864:	460c      	mov	r4, r1
 800d866:	07d9      	lsls	r1, r3, #31
 800d868:	4605      	mov	r5, r0
 800d86a:	d518      	bpl.n	800d89e <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800d86c:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800d870:	7823      	ldrb	r3, [r4, #0]
 800d872:	2e20      	cmp	r6, #32
 800d874:	f100 0108 	add.w	r1, r0, #8
 800d878:	bf28      	it	cs
 800d87a:	2620      	movcs	r6, #32
 800d87c:	b1f3      	cbz	r3, 800d8bc <RDMDeviceParams::Set(RDMDevice*)+0x5e>
 800d87e:	f104 070b 	add.w	r7, r4, #11
 800d882:	4638      	mov	r0, r7
 800d884:	4632      	mov	r2, r6
 800d886:	f7ff ffcb 	bl	800d820 <memcpy.isra.0>
 800d88a:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800d88c:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
 800d890:	b128      	cbz	r0, 800d89e <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800d892:	6802      	ldr	r2, [r0, #0]
 800d894:	4639      	mov	r1, r7
 800d896:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800d89a:	4632      	mov	r2, r6
 800d89c:	47c0      	blx	r8
 800d89e:	686b      	ldr	r3, [r5, #4]
 800d8a0:	079a      	lsls	r2, r3, #30
 800d8a2:	bf44      	itt	mi
 800d8a4:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800d8a8:	f8a4 204e 	strhmi.w	r2, [r4, #78]	; 0x4e
 800d8ac:	075b      	lsls	r3, r3, #29
 800d8ae:	bf44      	itt	mi
 800d8b0:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800d8b4:	f8a4 3050 	strhmi.w	r3, [r4, #80]	; 0x50
 800d8b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8bc:	4632      	mov	r2, r6
 800d8be:	f104 0052 	add.w	r0, r4, #82	; 0x52
 800d8c2:	f7ff ffad 	bl	800d820 <memcpy.isra.0>
 800d8c6:	f884 6072 	strb.w	r6, [r4, #114]	; 0x72
 800d8ca:	e7e8      	b.n	800d89e <RDMDeviceParams::Set(RDMDevice*)+0x40>

0800d8cc <RDMDeviceParams::Dump()>:
 800d8cc:	4770      	bx	lr

0800d8ce <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800d8ce:	4770      	bx	lr

0800d8d0 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800d8d0:	4770      	bx	lr
	...

0800d8d4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d8d4:	b510      	push	{r4, lr}
 800d8d6:	4b06      	ldr	r3, [pc, #24]	; (800d8f0 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800d8d8:	4604      	mov	r4, r0
 800d8da:	f840 3b8c 	str.w	r3, [r0], #140
 800d8de:	f7ff feef 	bl	800d6c0 <RDMSubDevices::~RDMSubDevices()>
 800d8e2:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800d8e6:	f7ff fecb 	bl	800d680 <RDMSensors::~RDMSensors()>
 800d8ea:	4620      	mov	r0, r4
 800d8ec:	bd10      	pop	{r4, pc}
 800d8ee:	bf00      	nop
 800d8f0:	08019de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, pc}

0800d8f4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d8f4:	b510      	push	{r4, lr}
 800d8f6:	4604      	mov	r4, r0
 800d8f8:	f7ff ffec 	bl	800d8d4 <RDMDeviceResponder::~RDMDeviceResponder()>
 800d8fc:	4620      	mov	r0, r4
 800d8fe:	f008 f975 	bl	8015bec <operator delete(void*)>
 800d902:	4620      	mov	r0, r4
 800d904:	bd10      	pop	{r4, pc}
	...

0800d908 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800d908:	b570      	push	{r4, r5, r6, lr}
 800d90a:	4604      	mov	r4, r0
 800d90c:	3004      	adds	r0, #4
 800d90e:	460e      	mov	r6, r1
 800d910:	4615      	mov	r5, r2
 800d912:	f000 fee1 	bl	800e6d8 <RDMDevice::RDMDevice()>
 800d916:	4620      	mov	r0, r4
 800d918:	4b20      	ldr	r3, [pc, #128]	; (800d99c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x94>)
 800d91a:	f840 3b80 	str.w	r3, [r0], #128
 800d91e:	f000 fceb 	bl	800e2f8 <RDMIdentify::RDMIdentify()>
 800d922:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800d926:	f7ff fea3 	bl	800d670 <RDMSensors::RDMSensors()>
 800d92a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800d92e:	f7ff febf 	bl	800d6b0 <RDMSubDevices::RDMSubDevices()>
 800d932:	4b1b      	ldr	r3, [pc, #108]	; (800d9a0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800d934:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800d938:	601c      	str	r4, [r3, #0]
 800d93a:	2365      	movs	r3, #101	; 0x65
 800d93c:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800d940:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800d944:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800d948:	2301      	movs	r3, #1
 800d94a:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800d94e:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800d952:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800d956:	2100      	movs	r1, #0
 800d958:	4293      	cmp	r3, r2
 800d95a:	d119      	bne.n	800d990 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800d95c:	f104 02c3 	add.w	r2, r4, #195	; 0xc3
 800d960:	2100      	movs	r1, #0
 800d962:	4293      	cmp	r3, r2
 800d964:	d117      	bne.n	800d996 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8e>
 800d966:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800d96a:	f7fc fa77 	bl	8009e5c <RDMSoftwareVersion::GetVersion()>
 800d96e:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800d972:	f7fc fa77 	bl	8009e64 <RDMSoftwareVersion::GetVersionLength()>
 800d976:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800d97a:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800d97e:	681b      	ldr	r3, [r3, #0]
 800d980:	685b      	ldr	r3, [r3, #4]
 800d982:	b91b      	cbnz	r3, 800d98c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x84>
 800d984:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d988:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800d98c:	4620      	mov	r0, r4
 800d98e:	bd70      	pop	{r4, r5, r6, pc}
 800d990:	f803 1b01 	strb.w	r1, [r3], #1
 800d994:	e7e0      	b.n	800d958 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x50>
 800d996:	f803 1b01 	strb.w	r1, [r3], #1
 800d99a:	e7e2      	b.n	800d962 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5a>
 800d99c:	08019de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, pc}
 800d9a0:	20000804 	andcs	r0, r0, r4, lsl #16

0800d9a4 <RDMDeviceResponder::Init()>:
 800d9a4:	b570      	push	{r4, r5, r6, lr}
 800d9a6:	2301      	movs	r3, #1
 800d9a8:	4604      	mov	r4, r0
 800d9aa:	7103      	strb	r3, [r0, #4]
 800d9ac:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800d9b0:	2a20      	cmp	r2, #32
 800d9b2:	bf28      	it	cs
 800d9b4:	2220      	movcs	r2, #32
 800d9b6:	3056      	adds	r0, #86	; 0x56
 800d9b8:	f104 010f 	add.w	r1, r4, #15
 800d9bc:	4613      	mov	r3, r2
 800d9be:	3b01      	subs	r3, #1
 800d9c0:	d25d      	bcs.n	800da7e <RDMDeviceResponder::Init()+0xda>
 800d9c2:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 800d9c4:	f884 202f 	strb.w	r2, [r4, #47]	; 0x2f
 800d9c8:	b110      	cbz	r0, 800d9d0 <RDMDeviceResponder::Init()+0x2c>
 800d9ca:	6803      	ldr	r3, [r0, #0]
 800d9cc:	689b      	ldr	r3, [r3, #8]
 800d9ce:	4798      	blx	r3
 800d9d0:	f06f 050d 	mvn.w	r5, #13
 800d9d4:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800d9d8:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800d9dc:	f104 020e 	add.w	r2, r4, #14
 800d9e0:	1b2d      	subs	r5, r5, r4
 800d9e2:	18a9      	adds	r1, r5, r2
 800d9e4:	4288      	cmp	r0, r1
 800d9e6:	d84f      	bhi.n	800da88 <RDMDeviceResponder::Init()+0xe4>
 800d9e8:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800d9ec:	f7fc fa3c 	bl	8009e68 <RDMSoftwareVersion::GetVersionId()>
 800d9f0:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800d9f4:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800d9f8:	2201      	movs	r2, #1
 800d9fa:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800d9fe:	2200      	movs	r2, #0
 800da00:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800da04:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800da08:	0a1a      	lsrs	r2, r3, #8
 800da0a:	0e03      	lsrs	r3, r0, #24
 800da0c:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800da10:	0c03      	lsrs	r3, r0, #16
 800da12:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800da16:	0a03      	lsrs	r3, r0, #8
 800da18:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800da1c:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800da20:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800da24:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800da28:	681b      	ldr	r3, [r3, #0]
 800da2a:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800da2e:	685d      	ldr	r5, [r3, #4]
 800da30:	bb7d      	cbnz	r5, 800da92 <RDMDeviceResponder::Init()+0xee>
 800da32:	f8b4 00c8 	ldrh.w	r0, [r4, #200]	; 0xc8
 800da36:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800da3a:	0a03      	lsrs	r3, r0, #8
 800da3c:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800da40:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800da44:	2301      	movs	r3, #1
 800da46:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800da4a:	0a33      	lsrs	r3, r6, #8
 800da4c:	b2c0      	uxtb	r0, r0
 800da4e:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800da52:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800da56:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800da5a:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800da5e:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800da62:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800da66:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800da6a:	4293      	cmp	r3, r2
 800da6c:	d12a      	bne.n	800dac4 <RDMDeviceResponder::Init()+0x120>
 800da6e:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800da72:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800da76:	4413      	add	r3, r2
 800da78:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800da7c:	bd70      	pop	{r4, r5, r6, pc}
 800da7e:	f810 5b01 	ldrb.w	r5, [r0], #1
 800da82:	f800 5c48 	strb.w	r5, [r0, #-72]
 800da86:	e79a      	b.n	800d9be <RDMDeviceResponder::Init()+0x1a>
 800da88:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800da8c:	440b      	add	r3, r1
 800da8e:	b29b      	uxth	r3, r3
 800da90:	e7a7      	b.n	800d9e2 <RDMDeviceResponder::Init()+0x3e>
 800da92:	682b      	ldr	r3, [r5, #0]
 800da94:	4628      	mov	r0, r5
 800da96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800da98:	4798      	blx	r3
 800da9a:	0a00      	lsrs	r0, r0, #8
 800da9c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800daa0:	682b      	ldr	r3, [r5, #0]
 800daa2:	4628      	mov	r0, r5
 800daa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800daa6:	4798      	blx	r3
 800daa8:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800daac:	682b      	ldr	r3, [r5, #0]
 800daae:	4628      	mov	r0, r5
 800dab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dab2:	4798      	blx	r3
 800dab4:	0a00      	lsrs	r0, r0, #8
 800dab6:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800daba:	682b      	ldr	r3, [r5, #0]
 800dabc:	4628      	mov	r0, r5
 800dabe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dac0:	4798      	blx	r3
 800dac2:	e7bf      	b.n	800da44 <RDMDeviceResponder::Init()+0xa0>
 800dac4:	f813 1b01 	ldrb.w	r1, [r3], #1
 800dac8:	7499      	strb	r1, [r3, #18]
 800daca:	e7ce      	b.n	800da6a <RDMDeviceResponder::Init()+0xc6>

0800dacc <RDMDeviceResponder::Print()>:
 800dacc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dace:	4604      	mov	r4, r0
 800dad0:	3004      	adds	r0, #4
 800dad2:	f000 fe75 	bl	800e7c0 <RDMDevice::Print()>
 800dad6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800dada:	481c      	ldr	r0, [pc, #112]	; (800db4c <RDMDeviceResponder::Print()+0x80>)
 800dadc:	681d      	ldr	r5, [r3, #0]
 800dade:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800dae0:	f7fc fcd2 	bl	800a488 <printf>
 800dae4:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800dae8:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800daec:	4818      	ldr	r0, [pc, #96]	; (800db50 <RDMDeviceResponder::Print()+0x84>)
 800daee:	f7fc fccb 	bl	800a488 <printf>
 800daf2:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800daf6:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800dafa:	4816      	ldr	r0, [pc, #88]	; (800db54 <RDMDeviceResponder::Print()+0x88>)
 800dafc:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db00:	f7fc fcc2 	bl	800a488 <printf>
 800db04:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800db08:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800db0c:	4812      	ldr	r0, [pc, #72]	; (800db58 <RDMDeviceResponder::Print()+0x8c>)
 800db0e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db12:	3508      	adds	r5, #8
 800db14:	f7fc fcb8 	bl	800a488 <printf>
 800db18:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800db1c:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800db20:	9500      	str	r5, [sp, #0]
 800db22:	b2f3      	uxtb	r3, r6
 800db24:	480d      	ldr	r0, [pc, #52]	; (800db5c <RDMDeviceResponder::Print()+0x90>)
 800db26:	f7fc fcaf 	bl	800a488 <printf>
 800db2a:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800db2e:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800db32:	480b      	ldr	r0, [pc, #44]	; (800db60 <RDMDeviceResponder::Print()+0x94>)
 800db34:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db38:	f7fc fca6 	bl	800a488 <printf>
 800db3c:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800db40:	4808      	ldr	r0, [pc, #32]	; (800db64 <RDMDeviceResponder::Print()+0x98>)
 800db42:	b002      	add	sp, #8
 800db44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db48:	f7fc bc9e 	b.w	800a488 <printf>
 800db4c:	08019d25 	stmdaeq	r1, {r0, r2, r5, r8, sl, fp, ip, pc}
 800db50:	08019d42 	stmdaeq	r1, {r1, r6, r8, sl, fp, ip, pc}
 800db54:	08019d5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, fp, ip, pc}
 800db58:	08019d73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, ip, pc}
 800db5c:	08019d8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sl, fp, ip, pc}
 800db60:	08019da9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, fp, ip, pc}
 800db64:	08019dc1 	stmdaeq	r1, {r0, r6, r7, r8, sl, fp, ip, pc}

0800db68 <memcmp>:
 800db68:	b510      	push	{r4, lr}
 800db6a:	3901      	subs	r1, #1
 800db6c:	4402      	add	r2, r0
 800db6e:	4290      	cmp	r0, r2
 800db70:	d101      	bne.n	800db76 <memcmp+0xe>
 800db72:	2000      	movs	r0, #0
 800db74:	e005      	b.n	800db82 <memcmp+0x1a>
 800db76:	7803      	ldrb	r3, [r0, #0]
 800db78:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800db7c:	42a3      	cmp	r3, r4
 800db7e:	d001      	beq.n	800db84 <memcmp+0x1c>
 800db80:	1b18      	subs	r0, r3, r4
 800db82:	bd10      	pop	{r4, pc}
 800db84:	3001      	adds	r0, #1
 800db86:	e7f2      	b.n	800db6e <memcmp+0x6>

0800db88 <memcpy.isra.0>:
 800db88:	3801      	subs	r0, #1
 800db8a:	440a      	add	r2, r1
 800db8c:	4291      	cmp	r1, r2
 800db8e:	d100      	bne.n	800db92 <memcpy.isra.0+0xa>
 800db90:	4770      	bx	lr
 800db92:	f811 3b01 	ldrb.w	r3, [r1], #1
 800db96:	f800 3f01 	strb.w	r3, [r0, #1]!
 800db9a:	e7f7      	b.n	800db8c <memcpy.isra.0+0x4>

0800db9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800db9c:	b570      	push	{r4, r5, r6, lr}
 800db9e:	790d      	ldrb	r5, [r1, #4]
 800dba0:	7803      	ldrb	r3, [r0, #0]
 800dba2:	6809      	ldr	r1, [r1, #0]
 800dba4:	2d20      	cmp	r5, #32
 800dba6:	4604      	mov	r4, r0
 800dba8:	bf28      	it	cs
 800dbaa:	2520      	movcs	r5, #32
 800dbac:	b18b      	cbz	r3, 800dbd2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800dbae:	f100 060b 	add.w	r6, r0, #11
 800dbb2:	4630      	mov	r0, r6
 800dbb4:	462a      	mov	r2, r5
 800dbb6:	f7ff ffe7 	bl	800db88 <memcpy.isra.0>
 800dbba:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800dbbc:	f884 502b 	strb.w	r5, [r4, #43]	; 0x2b
 800dbc0:	b168      	cbz	r0, 800dbde <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800dbc2:	6802      	ldr	r2, [r0, #0]
 800dbc4:	6894      	ldr	r4, [r2, #8]
 800dbc6:	4631      	mov	r1, r6
 800dbc8:	462a      	mov	r2, r5
 800dbca:	4623      	mov	r3, r4
 800dbcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbd0:	4718      	bx	r3
 800dbd2:	462a      	mov	r2, r5
 800dbd4:	3052      	adds	r0, #82	; 0x52
 800dbd6:	f7ff ffd7 	bl	800db88 <memcpy.isra.0>
 800dbda:	f884 5072 	strb.w	r5, [r4, #114]	; 0x72
 800dbde:	bd70      	pop	{r4, r5, r6, pc}

0800dbe0 <RDMDeviceResponder::SetFactoryDefaults()>:
 800dbe0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dbe2:	f100 0356 	add.w	r3, r0, #86	; 0x56
 800dbe6:	4604      	mov	r4, r0
 800dbe8:	9300      	str	r3, [sp, #0]
 800dbea:	4669      	mov	r1, sp
 800dbec:	f890 3076 	ldrb.w	r3, [r0, #118]	; 0x76
 800dbf0:	f88d 3004 	strb.w	r3, [sp, #4]
 800dbf4:	3004      	adds	r0, #4
 800dbf6:	f7ff ffd1 	bl	800db9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800dbfa:	f06f 050d 	mvn.w	r5, #13
 800dbfe:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800dc02:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800dc06:	f104 020e 	add.w	r2, r4, #14
 800dc0a:	1b2d      	subs	r5, r5, r4
 800dc0c:	18a8      	adds	r0, r5, r2
 800dc0e:	4288      	cmp	r0, r1
 800dc10:	d361      	bcc.n	800dcd6 <RDMDeviceResponder::SetFactoryDefaults()+0xf6>
 800dc12:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800dc16:	2301      	movs	r3, #1
 800dc18:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800dc1c:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800dc20:	681b      	ldr	r3, [r3, #0]
 800dc22:	685d      	ldr	r5, [r3, #4]
 800dc24:	b1f5      	cbz	r5, 800dc64 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800dc26:	682b      	ldr	r3, [r5, #0]
 800dc28:	4628      	mov	r0, r5
 800dc2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc2c:	4798      	blx	r3
 800dc2e:	0a00      	lsrs	r0, r0, #8
 800dc30:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800dc34:	682b      	ldr	r3, [r5, #0]
 800dc36:	4628      	mov	r0, r5
 800dc38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc3a:	4798      	blx	r3
 800dc3c:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800dc40:	682b      	ldr	r3, [r5, #0]
 800dc42:	4628      	mov	r0, r5
 800dc44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc46:	4798      	blx	r3
 800dc48:	0a00      	lsrs	r0, r0, #8
 800dc4a:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800dc4e:	682b      	ldr	r3, [r5, #0]
 800dc50:	4628      	mov	r0, r5
 800dc52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc54:	4798      	blx	r3
 800dc56:	6823      	ldr	r3, [r4, #0]
 800dc58:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800dc5c:	689b      	ldr	r3, [r3, #8]
 800dc5e:	4629      	mov	r1, r5
 800dc60:	4620      	mov	r0, r4
 800dc62:	4798      	blx	r3
 800dc64:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800dc68:	1e6b      	subs	r3, r5, #1
 800dc6a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800dc6e:	d218      	bcs.n	800dca2 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800dc70:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800dc74:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800dc78:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800dc7c:	3b01      	subs	r3, #1
 800dc7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800dc82:	6858      	ldr	r0, [r3, #4]
 800dc84:	b168      	cbz	r0, 800dca2 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800dc86:	6803      	ldr	r3, [r0, #0]
 800dc88:	4629      	mov	r1, r5
 800dc8a:	6a1b      	ldr	r3, [r3, #32]
 800dc8c:	4798      	blx	r3
 800dc8e:	b120      	cbz	r0, 800dc9a <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800dc90:	0a2b      	lsrs	r3, r5, #8
 800dc92:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800dc96:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800dc9a:	6823      	ldr	r3, [r4, #0]
 800dc9c:	4620      	mov	r0, r4
 800dc9e:	68db      	ldr	r3, [r3, #12]
 800dca0:	4798      	blx	r3
 800dca2:	2213      	movs	r2, #19
 800dca4:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800dca8:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800dcac:	f7ff ff6c 	bl	800db88 <memcpy.isra.0>
 800dcb0:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800dcb4:	f7ff fd4e 	bl	800d754 <RDMSubDevices::SetFactoryDefaults()>
 800dcb8:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800dcbc:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800dcc0:	4413      	add	r3, r2
 800dcc2:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800dcc6:	2301      	movs	r3, #1
 800dcc8:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800dccc:	b003      	add	sp, #12
 800dcce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dcd2:	f7fc b8ab 	b.w	8009e2c <rdm::device::responder::factorydefaults()>
 800dcd6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800dcda:	4403      	add	r3, r0
 800dcdc:	b29b      	uxth	r3, r3
 800dcde:	e795      	b.n	800dc0c <RDMDeviceResponder::SetFactoryDefaults()+0x2c>

0800dce0 <RDMHandler::RDMHandler(bool)>:
 800dce0:	2200      	movs	r2, #0
 800dce2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800dce6:	7001      	strb	r1, [r0, #0]
 800dce8:	7042      	strb	r2, [r0, #1]
 800dcea:	4770      	bx	lr

0800dcec <RDMHandler::HandleString(char const*, unsigned int)>:
 800dcec:	6883      	ldr	r3, [r0, #8]
 800dcee:	f803 2f17 	strb.w	r2, [r3, #23]!
 800dcf2:	440a      	add	r2, r1
 800dcf4:	4291      	cmp	r1, r2
 800dcf6:	d100      	bne.n	800dcfa <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800dcf8:	4770      	bx	lr
 800dcfa:	f811 0b01 	ldrb.w	r0, [r1], #1
 800dcfe:	f803 0f01 	strb.w	r0, [r3, #1]!
 800dd02:	e7f7      	b.n	800dcf4 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800dd04 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800dd04:	b570      	push	{r4, r5, r6, lr}
 800dd06:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800dd0a:	25cc      	movs	r5, #204	; 0xcc
 800dd0c:	701d      	strb	r5, [r3, #0]
 800dd0e:	7825      	ldrb	r5, [r4, #0]
 800dd10:	705d      	strb	r5, [r3, #1]
 800dd12:	7ba5      	ldrb	r5, [r4, #14]
 800dd14:	73dd      	strb	r5, [r3, #15]
 800dd16:	2500      	movs	r5, #0
 800dd18:	745d      	strb	r5, [r3, #17]
 800dd1a:	7c65      	ldrb	r5, [r4, #17]
 800dd1c:	749d      	strb	r5, [r3, #18]
 800dd1e:	7ca5      	ldrb	r5, [r4, #18]
 800dd20:	74dd      	strb	r5, [r3, #19]
 800dd22:	7ce5      	ldrb	r5, [r4, #19]
 800dd24:	3501      	adds	r5, #1
 800dd26:	751d      	strb	r5, [r3, #20]
 800dd28:	7d25      	ldrb	r5, [r4, #20]
 800dd2a:	755d      	strb	r5, [r3, #21]
 800dd2c:	7d65      	ldrb	r5, [r4, #21]
 800dd2e:	759d      	strb	r5, [r3, #22]
 800dd30:	b119      	cbz	r1, 800dd3a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800dd32:	1e4d      	subs	r5, r1, #1
 800dd34:	2d01      	cmp	r5, #1
 800dd36:	d921      	bls.n	800dd7c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800dd38:	bd70      	pop	{r4, r5, r6, pc}
 800dd3a:	7dda      	ldrb	r2, [r3, #23]
 800dd3c:	7419      	strb	r1, [r3, #16]
 800dd3e:	3218      	adds	r2, #24
 800dd40:	709a      	strb	r2, [r3, #2]
 800dd42:	4a15      	ldr	r2, [pc, #84]	; (800dd98 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800dd44:	6812      	ldr	r2, [r2, #0]
 800dd46:	1de1      	adds	r1, r4, #7
 800dd48:	1c9d      	adds	r5, r3, #2
 800dd4a:	3204      	adds	r2, #4
 800dd4c:	340d      	adds	r4, #13
 800dd4e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800dd52:	f805 6f01 	strb.w	r6, [r5, #1]!
 800dd56:	42a1      	cmp	r1, r4
 800dd58:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800dd5c:	71ae      	strb	r6, [r5, #6]
 800dd5e:	d1f6      	bne.n	800dd4e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800dd60:	2200      	movs	r2, #0
 800dd62:	6884      	ldr	r4, [r0, #8]
 800dd64:	7899      	ldrb	r1, [r3, #2]
 800dd66:	4613      	mov	r3, r2
 800dd68:	428a      	cmp	r2, r1
 800dd6a:	eb04 0502 	add.w	r5, r4, r2
 800dd6e:	d30e      	bcc.n	800dd8e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800dd70:	0a1a      	lsrs	r2, r3, #8
 800dd72:	702a      	strb	r2, [r5, #0]
 800dd74:	6882      	ldr	r2, [r0, #8]
 800dd76:	440a      	add	r2, r1
 800dd78:	7053      	strb	r3, [r2, #1]
 800dd7a:	e7dd      	b.n	800dd38 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800dd7c:	7419      	strb	r1, [r3, #16]
 800dd7e:	2102      	movs	r1, #2
 800dd80:	251a      	movs	r5, #26
 800dd82:	75d9      	strb	r1, [r3, #23]
 800dd84:	0a11      	lsrs	r1, r2, #8
 800dd86:	709d      	strb	r5, [r3, #2]
 800dd88:	7619      	strb	r1, [r3, #24]
 800dd8a:	765a      	strb	r2, [r3, #25]
 800dd8c:	e7d9      	b.n	800dd42 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800dd8e:	5ca5      	ldrb	r5, [r4, r2]
 800dd90:	442b      	add	r3, r5
 800dd92:	b29b      	uxth	r3, r3
 800dd94:	3201      	adds	r2, #1
 800dd96:	e7e7      	b.n	800dd68 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800dd98:	20000804 	andcs	r0, r0, r4, lsl #16

0800dd9c <RDMHandler::RespondMessageAck()>:
 800dd9c:	6843      	ldr	r3, [r0, #4]
 800dd9e:	7d9a      	ldrb	r2, [r3, #22]
 800dda0:	b90a      	cbnz	r2, 800dda6 <RDMHandler::RespondMessageAck()+0xa>
 800dda2:	2218      	movs	r2, #24
 800dda4:	705a      	strb	r2, [r3, #1]
 800dda6:	2200      	movs	r2, #0
 800dda8:	4611      	mov	r1, r2
 800ddaa:	f7ff bfab 	b.w	800dd04 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800ddb0 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800ddb0:	b538      	push	{r3, r4, r5, lr}
 800ddb2:	4b18      	ldr	r3, [pc, #96]	; (800de14 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800ddb4:	4605      	mov	r5, r0
 800ddb6:	681c      	ldr	r4, [r3, #0]
 800ddb8:	b349      	cbz	r1, 800de0e <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800ddba:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800ddbe:	f7ff fc97 	bl	800d6f0 <RDMSubDevices::GetInfo(unsigned short)>
 800ddc2:	b1b8      	cbz	r0, 800ddf4 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800ddc4:	8803      	ldrh	r3, [r0, #0]
 800ddc6:	0a1b      	lsrs	r3, r3, #8
 800ddc8:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800ddcc:	8803      	ldrh	r3, [r0, #0]
 800ddce:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800ddd2:	7903      	ldrb	r3, [r0, #4]
 800ddd4:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800ddd8:	7943      	ldrb	r3, [r0, #5]
 800ddda:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800ddde:	8843      	ldrh	r3, [r0, #2]
 800dde0:	0a1b      	lsrs	r3, r3, #8
 800dde2:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800dde6:	8843      	ldrh	r3, [r0, #2]
 800dde8:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800ddec:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800ddf0:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800ddf4:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800ddf8:	68a8      	ldr	r0, [r5, #8]
 800ddfa:	2213      	movs	r2, #19
 800ddfc:	75c2      	strb	r2, [r0, #23]
 800ddfe:	3018      	adds	r0, #24
 800de00:	f7ff fec2 	bl	800db88 <memcpy.isra.0>
 800de04:	4628      	mov	r0, r5
 800de06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de0a:	f7ff bfc7 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800de0e:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800de12:	e7f1      	b.n	800ddf8 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800de14:	20000804 	andcs	r0, r0, r4, lsl #16

0800de18 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800de18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de1a:	6886      	ldr	r6, [r0, #8]
 800de1c:	2301      	movs	r3, #1
 800de1e:	75f3      	strb	r3, [r6, #23]
 800de20:	4b1c      	ldr	r3, [pc, #112]	; (800de94 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800de22:	681c      	ldr	r4, [r3, #0]
 800de24:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800de28:	4605      	mov	r5, r0
 800de2a:	b37b      	cbz	r3, 800de8c <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800de2c:	f06f 0c0d 	mvn.w	ip, #13
 800de30:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800de34:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800de38:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800de3c:	f104 020e 	add.w	r2, r4, #14
 800de40:	ebac 0c04 	sub.w	ip, ip, r4
 800de44:	eb0c 0702 	add.w	r7, ip, r2
 800de48:	4287      	cmp	r7, r0
 800de4a:	d30a      	bcc.n	800de62 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800de4c:	4299      	cmp	r1, r3
 800de4e:	d00d      	beq.n	800de6c <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800de50:	2300      	movs	r3, #0
 800de52:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800de56:	7633      	strb	r3, [r6, #24]
 800de58:	4628      	mov	r0, r5
 800de5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800de5e:	f7ff bf9d 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800de62:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800de66:	443b      	add	r3, r7
 800de68:	b29b      	uxth	r3, r3
 800de6a:	e7eb      	b.n	800de44 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800de6c:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800de70:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800de74:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800de78:	440b      	add	r3, r1
 800de7a:	429a      	cmp	r2, r3
 800de7c:	d1e8      	bne.n	800de50 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800de7e:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800de82:	f7ff fc54 	bl	800d72e <RDMSubDevices::GetFactoryDefaults()>
 800de86:	4603      	mov	r3, r0
 800de88:	2800      	cmp	r0, #0
 800de8a:	d0e2      	beq.n	800de52 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800de8c:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800de90:	e7e1      	b.n	800de56 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800de92:	bf00      	nop
 800de94:	20000804 	andcs	r0, r0, r4, lsl #16

0800de98 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800de98:	b510      	push	{r4, lr}
 800de9a:	4905      	ldr	r1, [pc, #20]	; (800deb0 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800de9c:	4604      	mov	r4, r0
 800de9e:	220a      	movs	r2, #10
 800dea0:	f7ff ff24 	bl	800dcec <RDMHandler::HandleString(char const*, unsigned int)>
 800dea4:	4620      	mov	r0, r4
 800dea6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800deaa:	f7ff bf77 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800deae:	bf00      	nop
 800deb0:	08019002 	stmdaeq	r1, {r1, ip, pc}

0800deb4 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800deb4:	b510      	push	{r4, lr}
 800deb6:	4b06      	ldr	r3, [pc, #24]	; (800ded0 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800deb8:	6819      	ldr	r1, [r3, #0]
 800deba:	4604      	mov	r4, r0
 800debc:	f891 2050 	ldrb.w	r2, [r1, #80]	; 0x50
 800dec0:	3130      	adds	r1, #48	; 0x30
 800dec2:	f7ff ff13 	bl	800dcec <RDMHandler::HandleString(char const*, unsigned int)>
 800dec6:	4620      	mov	r0, r4
 800dec8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800decc:	f7ff bf66 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800ded0:	20000804 	andcs	r0, r0, r4, lsl #16

0800ded4 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800ded4:	4b0d      	ldr	r3, [pc, #52]	; (800df0c <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800ded6:	b513      	push	{r0, r1, r4, lr}
 800ded8:	4604      	mov	r4, r0
 800deda:	6818      	ldr	r0, [r3, #0]
 800dedc:	b171      	cbz	r1, 800defc <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800dede:	466a      	mov	r2, sp
 800dee0:	308c      	adds	r0, #140	; 0x8c
 800dee2:	f7ff fc0d 	bl	800d700 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800dee6:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800deea:	9900      	ldr	r1, [sp, #0]
 800deec:	4620      	mov	r0, r4
 800deee:	f7ff fefd 	bl	800dcec <RDMHandler::HandleString(char const*, unsigned int)>
 800def2:	4620      	mov	r0, r4
 800def4:	f7ff ff52 	bl	800dd9c <RDMHandler::RespondMessageAck()>
 800def8:	b002      	add	sp, #8
 800defa:	bd10      	pop	{r4, pc}
 800defc:	f100 030f 	add.w	r3, r0, #15
 800df00:	9300      	str	r3, [sp, #0]
 800df02:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800df06:	f88d 3004 	strb.w	r3, [sp, #4]
 800df0a:	e7ec      	b.n	800dee6 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800df0c:	20000804 	andcs	r0, r0, r4, lsl #16

0800df10 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800df10:	6883      	ldr	r3, [r0, #8]
 800df12:	2201      	movs	r2, #1
 800df14:	75da      	strb	r2, [r3, #23]
 800df16:	4a02      	ldr	r2, [pc, #8]	; (800df20 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800df18:	7812      	ldrb	r2, [r2, #0]
 800df1a:	761a      	strb	r2, [r3, #24]
 800df1c:	f7ff bf3e 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800df20:	20000808 	andcs	r0, r0, r8, lsl #16

0800df24 <RDMHandler::RespondMessageNack(unsigned short)>:
 800df24:	460a      	mov	r2, r1
 800df26:	2102      	movs	r1, #2
 800df28:	f7ff beec 	b.w	800dd04 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800df2c <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800df2c:	b510      	push	{r4, lr}
 800df2e:	6843      	ldr	r3, [r0, #4]
 800df30:	7d9a      	ldrb	r2, [r3, #22]
 800df32:	2a01      	cmp	r2, #1
 800df34:	4604      	mov	r4, r0
 800df36:	d004      	beq.n	800df42 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800df38:	2101      	movs	r1, #1
 800df3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df3e:	f7ff bff1 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800df42:	7ddb      	ldrb	r3, [r3, #23]
 800df44:	2b01      	cmp	r3, #1
 800df46:	d003      	beq.n	800df50 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800df48:	2bff      	cmp	r3, #255	; 0xff
 800df4a:	d001      	beq.n	800df50 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800df4c:	2106      	movs	r1, #6
 800df4e:	e7f4      	b.n	800df3a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800df50:	68a2      	ldr	r2, [r4, #8]
 800df52:	2100      	movs	r1, #0
 800df54:	2bff      	cmp	r3, #255	; 0xff
 800df56:	75d1      	strb	r1, [r2, #23]
 800df58:	d102      	bne.n	800df60 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800df5a:	2104      	movs	r1, #4
 800df5c:	4620      	mov	r0, r4
 800df5e:	e7ec      	b.n	800df3a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800df60:	4b03      	ldr	r3, [pc, #12]	; (800df70 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800df62:	6818      	ldr	r0, [r3, #0]
 800df64:	f007 fda8 	bl	8015ab8 <Hardware::Reboot()>
 800df68:	2800      	cmp	r0, #0
 800df6a:	d0f6      	beq.n	800df5a <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800df6c:	bd10      	pop	{r4, pc}
 800df6e:	bf00      	nop
 800df70:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800df74 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800df74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df76:	6843      	ldr	r3, [r0, #4]
 800df78:	460d      	mov	r5, r1
 800df7a:	7d99      	ldrb	r1, [r3, #22]
 800df7c:	2901      	cmp	r1, #1
 800df7e:	4604      	mov	r4, r0
 800df80:	d004      	beq.n	800df8c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800df82:	2101      	movs	r1, #1
 800df84:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800df88:	f7ff bfcc 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800df8c:	7ddb      	ldrb	r3, [r3, #23]
 800df8e:	2b01      	cmp	r3, #1
 800df90:	d901      	bls.n	800df96 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800df92:	2106      	movs	r1, #6
 800df94:	e7f6      	b.n	800df84 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800df96:	4a12      	ldr	r2, [pc, #72]	; (800dfe0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800df98:	4f12      	ldr	r7, [pc, #72]	; (800dfe4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800df9a:	6816      	ldr	r6, [r2, #0]
 800df9c:	4a12      	ldr	r2, [pc, #72]	; (800dfe8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800df9e:	6810      	ldr	r0, [r2, #0]
 800dfa0:	4a12      	ldr	r2, [pc, #72]	; (800dfec <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800dfa2:	b983      	cbnz	r3, 800dfc6 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800dfa4:	2102      	movs	r1, #2
 800dfa6:	7013      	strb	r3, [r2, #0]
 800dfa8:	f007 fc52 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800dfac:	7839      	ldrb	r1, [r7, #0]
 800dfae:	b111      	cbz	r1, 800dfb6 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dfb0:	4630      	mov	r0, r6
 800dfb2:	f000 f9a8 	bl	800e306 <RDMIdentify::Off(rdm::identify::Mode)>
 800dfb6:	b98d      	cbnz	r5, 800dfdc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800dfb8:	68a3      	ldr	r3, [r4, #8]
 800dfba:	75dd      	strb	r5, [r3, #23]
 800dfbc:	4620      	mov	r0, r4
 800dfbe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dfc2:	f7ff beeb 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800dfc6:	7011      	strb	r1, [r2, #0]
 800dfc8:	2104      	movs	r1, #4
 800dfca:	f007 fc41 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 800dfce:	7839      	ldrb	r1, [r7, #0]
 800dfd0:	2900      	cmp	r1, #0
 800dfd2:	d0f0      	beq.n	800dfb6 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dfd4:	4630      	mov	r0, r6
 800dfd6:	f000 f995 	bl	800e304 <RDMIdentify::On(rdm::identify::Mode)>
 800dfda:	e7ec      	b.n	800dfb6 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dfdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dfde:	bf00      	nop
 800dfe0:	2000080c 	andcs	r0, r0, ip, lsl #16
 800dfe4:	20000809 	andcs	r0, r0, r9, lsl #16
 800dfe8:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800dfec:	20000808 	andcs	r0, r0, r8, lsl #16

0800dff0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800dff0:	b538      	push	{r3, r4, r5, lr}
 800dff2:	6843      	ldr	r3, [r0, #4]
 800dff4:	7d9b      	ldrb	r3, [r3, #22]
 800dff6:	4604      	mov	r4, r0
 800dff8:	460d      	mov	r5, r1
 800dffa:	b123      	cbz	r3, 800e006 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800dffc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e000:	2101      	movs	r1, #1
 800e002:	f7ff bf8f 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e006:	4b06      	ldr	r3, [pc, #24]	; (800e020 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800e008:	6818      	ldr	r0, [r3, #0]
 800e00a:	f7ff fde9 	bl	800dbe0 <RDMDeviceResponder::SetFactoryDefaults()>
 800e00e:	b935      	cbnz	r5, 800e01e <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800e010:	68a3      	ldr	r3, [r4, #8]
 800e012:	75dd      	strb	r5, [r3, #23]
 800e014:	4620      	mov	r0, r4
 800e016:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e01a:	f7ff bebf 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e01e:	bd38      	pop	{r3, r4, r5, pc}
 800e020:	20000804 	andcs	r0, r0, r4, lsl #16

0800e024 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800e024:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e026:	6845      	ldr	r5, [r0, #4]
 800e028:	7dab      	ldrb	r3, [r5, #22]
 800e02a:	2b20      	cmp	r3, #32
 800e02c:	460e      	mov	r6, r1
 800e02e:	4604      	mov	r4, r0
 800e030:	4611      	mov	r1, r2
 800e032:	d905      	bls.n	800e040 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800e034:	2101      	movs	r1, #1
 800e036:	b002      	add	sp, #8
 800e038:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e03c:	f7ff bf72 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e040:	4a0d      	ldr	r2, [pc, #52]	; (800e078 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800e042:	6810      	ldr	r0, [r2, #0]
 800e044:	f105 0217 	add.w	r2, r5, #23
 800e048:	b159      	cbz	r1, 800e062 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800e04a:	308c      	adds	r0, #140	; 0x8c
 800e04c:	f7ff fb61 	bl	800d712 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800e050:	b97e      	cbnz	r6, 800e072 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800e052:	68a3      	ldr	r3, [r4, #8]
 800e054:	4620      	mov	r0, r4
 800e056:	75de      	strb	r6, [r3, #23]
 800e058:	b002      	add	sp, #8
 800e05a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e05e:	f7ff be9d 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e062:	4669      	mov	r1, sp
 800e064:	3004      	adds	r0, #4
 800e066:	9200      	str	r2, [sp, #0]
 800e068:	f88d 3004 	strb.w	r3, [sp, #4]
 800e06c:	f7ff fd96 	bl	800db9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e070:	e7ee      	b.n	800e050 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800e072:	b002      	add	sp, #8
 800e074:	bd70      	pop	{r4, r5, r6, pc}
 800e076:	bf00      	nop
 800e078:	20000804 	andcs	r0, r0, r4, lsl #16

0800e07c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800e07c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e080:	4616      	mov	r6, r2
 800e082:	4604      	mov	r4, r0
 800e084:	f006 00ef 	and.w	r0, r6, #239	; 0xef
 800e088:	2700      	movs	r7, #0
 800e08a:	2820      	cmp	r0, #32
 800e08c:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800e090:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800e094:	46be      	mov	lr, r7
 800e096:	d005      	beq.n	800e0a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
 800e098:	2105      	movs	r1, #5
 800e09a:	4620      	mov	r0, r4
 800e09c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0a0:	f7ff bf40 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e0a4:	482b      	ldr	r0, [pc, #172]	; (800e154 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd8>)
 800e0a6:	6800      	ldr	r0, [r0, #0]
 800e0a8:	8880      	ldrh	r0, [r0, #4]
 800e0aa:	4290      	cmp	r0, r2
 800e0ac:	d205      	bcs.n	800e0ba <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800e0ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e0b2:	4282      	cmp	r2, r0
 800e0b4:	d001      	beq.n	800e0ba <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800e0b6:	2109      	movs	r1, #9
 800e0b8:	e7ef      	b.n	800e09a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e0ba:	4d27      	ldr	r5, [pc, #156]	; (800e158 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800e0bc:	f04f 0c14 	mov.w	ip, #20
 800e0c0:	2000      	movs	r0, #0
 800e0c2:	f8b5 9000 	ldrh.w	r9, [r5]
 800e0c6:	4599      	cmp	r9, r3
 800e0c8:	bf02      	ittt	eq
 800e0ca:	7daf      	ldrbeq	r7, [r5, #22]
 800e0cc:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800e0d0:	4628      	moveq	r0, r5
 800e0d2:	f1bc 0c01 	subs.w	ip, ip, #1
 800e0d6:	f105 0518 	add.w	r5, r5, #24
 800e0da:	d1f2      	bne.n	800e0c2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x46>
 800e0dc:	b908      	cbnz	r0, 800e0e2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x66>
 800e0de:	2100      	movs	r1, #0
 800e0e0:	e7db      	b.n	800e09a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e0e2:	7823      	ldrb	r3, [r4, #0]
 800e0e4:	b193      	cbz	r3, 800e10c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
 800e0e6:	2f00      	cmp	r7, #0
 800e0e8:	d0f9      	beq.n	800e0de <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e0ea:	2e20      	cmp	r6, #32
 800e0ec:	d11f      	bne.n	800e12e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800e0ee:	bb71      	cbnz	r1, 800e14e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd2>
 800e0f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e0f4:	429a      	cmp	r2, r3
 800e0f6:	d0de      	beq.n	800e0b6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800e0f8:	6843      	ldr	r3, [r0, #4]
 800e0fa:	b913      	cbnz	r3, 800e102 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x86>
 800e0fc:	6881      	ldr	r1, [r0, #8]
 800e0fe:	07cd      	lsls	r5, r1, #31
 800e100:	d5ca      	bpl.n	800e098 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e102:	7d01      	ldrb	r1, [r0, #20]
 800e104:	4541      	cmp	r1, r8
 800e106:	d005      	beq.n	800e114 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x98>
 800e108:	2101      	movs	r1, #1
 800e10a:	e7c6      	b.n	800e09a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e10c:	f1be 0f00 	cmp.w	lr, #0
 800e110:	d1eb      	bne.n	800e0ea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6e>
 800e112:	e7e4      	b.n	800e0de <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e114:	6881      	ldr	r1, [r0, #8]
 800e116:	104d      	asrs	r5, r1, #1
 800e118:	eb04 0061 	add.w	r0, r4, r1, asr #1
 800e11c:	07c9      	lsls	r1, r1, #31
 800e11e:	bf48      	it	mi
 800e120:	5961      	ldrmi	r1, [r4, r5]
 800e122:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e126:	bf48      	it	mi
 800e128:	58cb      	ldrmi	r3, [r1, r3]
 800e12a:	4611      	mov	r1, r2
 800e12c:	4718      	bx	r3
 800e12e:	e9d0 3003 	ldrd	r3, r0, [r0, #12]
 800e132:	f000 0501 	and.w	r5, r0, #1
 800e136:	b90b      	cbnz	r3, 800e13c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800e138:	2d00      	cmp	r5, #0
 800e13a:	d0ad      	beq.n	800e098 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e13c:	1046      	asrs	r6, r0, #1
 800e13e:	eb04 0060 	add.w	r0, r4, r0, asr #1
 800e142:	b10d      	cbz	r5, 800e148 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800e144:	59a4      	ldr	r4, [r4, r6]
 800e146:	58e3      	ldr	r3, [r4, r3]
 800e148:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e14c:	4718      	bx	r3
 800e14e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e152:	bf00      	nop
 800e154:	20000800 	andcs	r0, r0, r0, lsl #16
 800e158:	08019dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, pc}

0800e15c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800e15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e160:	23ff      	movs	r3, #255	; 0xff
 800e162:	7013      	strb	r3, [r2, #0]
 800e164:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e168:	b085      	sub	sp, #20
 800e16a:	7ccb      	ldrb	r3, [r1, #19]
 800e16c:	7d4f      	ldrb	r7, [r1, #21]
 800e16e:	9303      	str	r3, [sp, #12]
 800e170:	7d0b      	ldrb	r3, [r1, #20]
 800e172:	f101 0a02 	add.w	sl, r1, #2
 800e176:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800e17a:	4b5c      	ldr	r3, [pc, #368]	; (800e2ec <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800e17c:	4606      	mov	r6, r0
 800e17e:	460d      	mov	r5, r1
 800e180:	4614      	mov	r4, r2
 800e182:	495b      	ldr	r1, [pc, #364]	; (800e2f0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e184:	f8d3 8000 	ldr.w	r8, [r3]
 800e188:	2206      	movs	r2, #6
 800e18a:	4650      	mov	r0, sl
 800e18c:	f7ff fcec 	bl	800db68 <memcmp>
 800e190:	f108 0905 	add.w	r9, r8, #5
 800e194:	4683      	mov	fp, r0
 800e196:	2202      	movs	r2, #2
 800e198:	4649      	mov	r1, r9
 800e19a:	4650      	mov	r0, sl
 800e19c:	b2bf      	uxth	r7, r7
 800e19e:	f7ff fce3 	bl	800db68 <memcmp>
 800e1a2:	b928      	cbnz	r0, 800e1b0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800e1a4:	2204      	movs	r2, #4
 800e1a6:	4952      	ldr	r1, [pc, #328]	; (800e2f0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e1a8:	18a8      	adds	r0, r5, r2
 800e1aa:	f7ff fcdd 	bl	800db68 <memcmp>
 800e1ae:	b158      	cbz	r0, 800e1c8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800e1b0:	2206      	movs	r2, #6
 800e1b2:	4649      	mov	r1, r9
 800e1b4:	4650      	mov	r0, sl
 800e1b6:	f7ff fcd7 	bl	800db68 <memcmp>
 800e1ba:	b130      	cbz	r0, 800e1ca <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800e1bc:	f1bb 0f00 	cmp.w	fp, #0
 800e1c0:	d04b      	beq.n	800e25a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800e1c2:	b005      	add	sp, #20
 800e1c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e1c8:	2001      	movs	r0, #1
 800e1ca:	2301      	movs	r3, #1
 800e1cc:	9a03      	ldr	r2, [sp, #12]
 800e1ce:	2a10      	cmp	r2, #16
 800e1d0:	d177      	bne.n	800e2c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800e1d2:	2f01      	cmp	r7, #1
 800e1d4:	d144      	bne.n	800e260 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800e1d6:	7873      	ldrb	r3, [r6, #1]
 800e1d8:	2b00      	cmp	r3, #0
 800e1da:	d1f2      	bne.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1dc:	2206      	movs	r2, #6
 800e1de:	4649      	mov	r1, r9
 800e1e0:	f105 0017 	add.w	r0, r5, #23
 800e1e4:	f7ff fcc0 	bl	800db68 <memcmp>
 800e1e8:	2800      	cmp	r0, #0
 800e1ea:	dcea      	bgt.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1ec:	2206      	movs	r2, #6
 800e1ee:	f105 011d 	add.w	r1, r5, #29
 800e1f2:	4648      	mov	r0, r9
 800e1f4:	f7ff fcb8 	bl	800db68 <memcmp>
 800e1f8:	2800      	cmp	r0, #0
 800e1fa:	dce2      	bgt.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1fc:	23fe      	movs	r3, #254	; 0xfe
 800e1fe:	7023      	strb	r3, [r4, #0]
 800e200:	7063      	strb	r3, [r4, #1]
 800e202:	70a3      	strb	r3, [r4, #2]
 800e204:	70e3      	strb	r3, [r4, #3]
 800e206:	7123      	strb	r3, [r4, #4]
 800e208:	7163      	strb	r3, [r4, #5]
 800e20a:	71a3      	strb	r3, [r4, #6]
 800e20c:	23aa      	movs	r3, #170	; 0xaa
 800e20e:	71e3      	strb	r3, [r4, #7]
 800e210:	f108 0204 	add.w	r2, r8, #4
 800e214:	4621      	mov	r1, r4
 800e216:	f108 080a 	add.w	r8, r8, #10
 800e21a:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800e21e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e222:	f060 0055 	orn	r0, r0, #85	; 0x55
 800e226:	7208      	strb	r0, [r1, #8]
 800e228:	7810      	ldrb	r0, [r2, #0]
 800e22a:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800e22e:	7248      	strb	r0, [r1, #9]
 800e230:	7810      	ldrb	r0, [r2, #0]
 800e232:	4542      	cmp	r2, r8
 800e234:	4403      	add	r3, r0
 800e236:	b29b      	uxth	r3, r3
 800e238:	f101 0102 	add.w	r1, r1, #2
 800e23c:	d1ef      	bne.n	800e21e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc2>
 800e23e:	0a1a      	lsrs	r2, r3, #8
 800e240:	f062 0155 	orn	r1, r2, #85	; 0x55
 800e244:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800e248:	7562      	strb	r2, [r4, #21]
 800e24a:	f063 0255 	orn	r2, r3, #85	; 0x55
 800e24e:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800e252:	7521      	strb	r1, [r4, #20]
 800e254:	75a2      	strb	r2, [r4, #22]
 800e256:	75e3      	strb	r3, [r4, #23]
 800e258:	e7b3      	b.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e25a:	4658      	mov	r0, fp
 800e25c:	465b      	mov	r3, fp
 800e25e:	e7b5      	b.n	800e1cc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800e260:	2f03      	cmp	r7, #3
 800e262:	d11a      	bne.n	800e29a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800e264:	7daa      	ldrb	r2, [r5, #22]
 800e266:	2a00      	cmp	r2, #0
 800e268:	d1ab      	bne.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e26a:	7072      	strb	r2, [r6, #1]
 800e26c:	f1bb 0f00 	cmp.w	fp, #0
 800e270:	d0a7      	beq.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e272:	2b00      	cmp	r3, #0
 800e274:	d0a5      	beq.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e276:	2302      	movs	r3, #2
 800e278:	75e3      	strb	r3, [r4, #23]
 800e27a:	4b1e      	ldr	r3, [pc, #120]	; (800e2f4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e27c:	7622      	strb	r2, [r4, #24]
 800e27e:	681b      	ldr	r3, [r3, #0]
 800e280:	7662      	strb	r2, [r4, #25]
 800e282:	889b      	ldrh	r3, [r3, #4]
 800e284:	3b00      	subs	r3, #0
 800e286:	bf18      	it	ne
 800e288:	2301      	movne	r3, #1
 800e28a:	005b      	lsls	r3, r3, #1
 800e28c:	4630      	mov	r0, r6
 800e28e:	7663      	strb	r3, [r4, #25]
 800e290:	b005      	add	sp, #20
 800e292:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e296:	f7ff bd81 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e29a:	2f02      	cmp	r7, #2
 800e29c:	d191      	bne.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e29e:	7daa      	ldrb	r2, [r5, #22]
 800e2a0:	2a00      	cmp	r2, #0
 800e2a2:	d18e      	bne.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2a4:	2101      	movs	r1, #1
 800e2a6:	7071      	strb	r1, [r6, #1]
 800e2a8:	2b00      	cmp	r3, #0
 800e2aa:	d08a      	beq.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2ac:	4b11      	ldr	r3, [pc, #68]	; (800e2f4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e2ae:	75e7      	strb	r7, [r4, #23]
 800e2b0:	681b      	ldr	r3, [r3, #0]
 800e2b2:	7622      	strb	r2, [r4, #24]
 800e2b4:	7662      	strb	r2, [r4, #25]
 800e2b6:	889b      	ldrh	r3, [r3, #4]
 800e2b8:	3b00      	subs	r3, #0
 800e2ba:	bf18      	it	ne
 800e2bc:	2301      	movne	r3, #1
 800e2be:	408b      	lsls	r3, r1
 800e2c0:	e7e4      	b.n	800e28c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800e2c2:	7c6a      	ldrb	r2, [r5, #17]
 800e2c4:	7cab      	ldrb	r3, [r5, #18]
 800e2c6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800e2ca:	b29b      	uxth	r3, r3
 800e2cc:	f1bb 0f00 	cmp.w	fp, #0
 800e2d0:	9301      	str	r3, [sp, #4]
 800e2d2:	7dab      	ldrb	r3, [r5, #22]
 800e2d4:	9300      	str	r3, [sp, #0]
 800e2d6:	bf18      	it	ne
 800e2d8:	4601      	movne	r1, r0
 800e2da:	9a03      	ldr	r2, [sp, #12]
 800e2dc:	463b      	mov	r3, r7
 800e2de:	bf08      	it	eq
 800e2e0:	2101      	moveq	r1, #1
 800e2e2:	4630      	mov	r0, r6
 800e2e4:	f7ff feca 	bl	800e07c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800e2e8:	e76b      	b.n	800e1c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2ea:	bf00      	nop
 800e2ec:	20000804 	andcs	r0, r0, r4, lsl #16
 800e2f0:	08019df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, ip, pc}
 800e2f4:	20000800 	andcs	r0, r0, r0, lsl #16

0800e2f8 <RDMIdentify::RDMIdentify()>:
 800e2f8:	4b01      	ldr	r3, [pc, #4]	; (800e300 <RDMIdentify::RDMIdentify()+0x8>)
 800e2fa:	6018      	str	r0, [r3, #0]
 800e2fc:	4770      	bx	lr
 800e2fe:	bf00      	nop
 800e300:	2000080c 	andcs	r0, r0, ip, lsl #16

0800e304 <RDMIdentify::On(rdm::identify::Mode)>:
 800e304:	4770      	bx	lr

0800e306 <RDMIdentify::Off(rdm::identify::Mode)>:
 800e306:	4770      	bx	lr

0800e308 <memcpy.constprop.0.isra.0>:
 800e308:	3801      	subs	r0, #1
 800e30a:	1d0b      	adds	r3, r1, #4
 800e30c:	4299      	cmp	r1, r3
 800e30e:	d100      	bne.n	800e312 <memcpy.constprop.0.isra.0+0xa>
 800e310:	4770      	bx	lr
 800e312:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e316:	f800 2f01 	strb.w	r2, [r0, #1]!
 800e31a:	e7f7      	b.n	800e30c <memcpy.constprop.0.isra.0+0x4>

0800e31c <RDMHandler::GetInterfaceList(unsigned short)>:
 800e31c:	4a08      	ldr	r2, [pc, #32]	; (800e340 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800e31e:	6883      	ldr	r3, [r0, #8]
 800e320:	6812      	ldr	r2, [r2, #0]
 800e322:	6892      	ldr	r2, [r2, #8]
 800e324:	76da      	strb	r2, [r3, #27]
 800e326:	0e11      	lsrs	r1, r2, #24
 800e328:	7619      	strb	r1, [r3, #24]
 800e32a:	0c11      	lsrs	r1, r2, #16
 800e32c:	7659      	strb	r1, [r3, #25]
 800e32e:	0a11      	lsrs	r1, r2, #8
 800e330:	2200      	movs	r2, #0
 800e332:	771a      	strb	r2, [r3, #28]
 800e334:	2206      	movs	r2, #6
 800e336:	7699      	strb	r1, [r3, #26]
 800e338:	775a      	strb	r2, [r3, #29]
 800e33a:	75da      	strb	r2, [r3, #23]
 800e33c:	f7ff bd2e 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e340:	2000f994 	mulcs	r0, r4, r9

0800e344 <RDMHandler::GetInterfaceName(unsigned short)>:
 800e344:	b538      	push	{r3, r4, r5, lr}
 800e346:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e34a:	4604      	mov	r4, r0
 800e34c:	3117      	adds	r1, #23
 800e34e:	f105 0018 	add.w	r0, r5, #24
 800e352:	f7ff ffd9 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e356:	4a0d      	ldr	r2, [pc, #52]	; (800e38c <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800e358:	6813      	ldr	r3, [r2, #0]
 800e35a:	f105 001b 	add.w	r0, r5, #27
 800e35e:	33a6      	adds	r3, #166	; 0xa6
 800e360:	f813 1b01 	ldrb.w	r1, [r3], #1
 800e364:	f800 1f01 	strb.w	r1, [r0, #1]!
 800e368:	2900      	cmp	r1, #0
 800e36a:	d1f9      	bne.n	800e360 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800e36c:	6812      	ldr	r2, [r2, #0]
 800e36e:	32a6      	adds	r2, #166	; 0xa6
 800e370:	4611      	mov	r1, r2
 800e372:	460b      	mov	r3, r1
 800e374:	3101      	adds	r1, #1
 800e376:	7818      	ldrb	r0, [r3, #0]
 800e378:	2800      	cmp	r0, #0
 800e37a:	d1fa      	bne.n	800e372 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800e37c:	1a9b      	subs	r3, r3, r2
 800e37e:	3304      	adds	r3, #4
 800e380:	75eb      	strb	r3, [r5, #23]
 800e382:	4620      	mov	r0, r4
 800e384:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e388:	f7ff bd08 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e38c:	2000f994 	mulcs	r0, r4, r9

0800e390 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800e390:	b538      	push	{r3, r4, r5, lr}
 800e392:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e396:	4604      	mov	r4, r0
 800e398:	3117      	adds	r1, #23
 800e39a:	f105 0018 	add.w	r0, r5, #24
 800e39e:	f7ff ffb3 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e3a2:	4b06      	ldr	r3, [pc, #24]	; (800e3bc <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800e3a4:	f105 011c 	add.w	r1, r5, #28
 800e3a8:	6818      	ldr	r0, [r3, #0]
 800e3aa:	f004 fa54 	bl	8012856 <Network::MacAddressCopyTo(unsigned char*)>
 800e3ae:	230a      	movs	r3, #10
 800e3b0:	75eb      	strb	r3, [r5, #23]
 800e3b2:	4620      	mov	r0, r4
 800e3b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e3b8:	f7ff bcf0 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e3bc:	2000f994 	mulcs	r0, r4, r9

0800e3c0 <RDMHandler::GetDHCPMode(unsigned short)>:
 800e3c0:	b538      	push	{r3, r4, r5, lr}
 800e3c2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e3c6:	4604      	mov	r4, r0
 800e3c8:	3117      	adds	r1, #23
 800e3ca:	f105 0018 	add.w	r0, r5, #24
 800e3ce:	f7ff ff9b 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e3d2:	4b05      	ldr	r3, [pc, #20]	; (800e3e8 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800e3d4:	681b      	ldr	r3, [r3, #0]
 800e3d6:	795b      	ldrb	r3, [r3, #5]
 800e3d8:	772b      	strb	r3, [r5, #28]
 800e3da:	2305      	movs	r3, #5
 800e3dc:	75eb      	strb	r3, [r5, #23]
 800e3de:	4620      	mov	r0, r4
 800e3e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e3e4:	f7ff bcda 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e3e8:	2000f994 	mulcs	r0, r4, r9

0800e3ec <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800e3ec:	4b10      	ldr	r3, [pc, #64]	; (800e430 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800e3ee:	6842      	ldr	r2, [r0, #4]
 800e3f0:	681b      	ldr	r3, [r3, #0]
 800e3f2:	7919      	ldrb	r1, [r3, #4]
 800e3f4:	b510      	push	{r4, lr}
 800e3f6:	4604      	mov	r4, r0
 800e3f8:	b921      	cbnz	r1, 800e404 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800e3fa:	210b      	movs	r1, #11
 800e3fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e400:	f7ff bd90 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e404:	7ed2      	ldrb	r2, [r2, #27]
 800e406:	2a01      	cmp	r2, #1
 800e408:	d109      	bne.n	800e41e <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800e40a:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800e40e:	f042 0204 	orr.w	r2, r2, #4
 800e412:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800e416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e41a:	f7ff bcbf 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e41e:	b92a      	cbnz	r2, 800e42c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800e420:	4618      	mov	r0, r3
 800e422:	4611      	mov	r1, r2
 800e424:	f004 fc38 	bl	8012c98 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e428:	4620      	mov	r0, r4
 800e42a:	e7f4      	b.n	800e416 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800e42c:	2106      	movs	r1, #6
 800e42e:	e7e5      	b.n	800e3fc <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800e430:	2000f994 	mulcs	r0, r4, r9

0800e434 <RDMHandler::GetNameServers(unsigned short)>:
 800e434:	6842      	ldr	r2, [r0, #4]
 800e436:	7dd2      	ldrb	r2, [r2, #23]
 800e438:	2a02      	cmp	r2, #2
 800e43a:	d902      	bls.n	800e442 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800e43c:	2106      	movs	r1, #6
 800e43e:	f7ff bd71 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e442:	6883      	ldr	r3, [r0, #8]
 800e444:	2200      	movs	r2, #0
 800e446:	765a      	strb	r2, [r3, #25]
 800e448:	769a      	strb	r2, [r3, #26]
 800e44a:	76da      	strb	r2, [r3, #27]
 800e44c:	771a      	strb	r2, [r3, #28]
 800e44e:	2205      	movs	r2, #5
 800e450:	75da      	strb	r2, [r3, #23]
 800e452:	f7ff bca3 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
	...

0800e458 <RDMHandler::GetZeroconf(unsigned short)>:
 800e458:	b538      	push	{r3, r4, r5, lr}
 800e45a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e45e:	4604      	mov	r4, r0
 800e460:	3117      	adds	r1, #23
 800e462:	f105 0018 	add.w	r0, r5, #24
 800e466:	f7ff ff4f 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e46a:	4b06      	ldr	r3, [pc, #24]	; (800e484 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800e46c:	681a      	ldr	r2, [r3, #0]
 800e46e:	7993      	ldrb	r3, [r2, #6]
 800e470:	b103      	cbz	r3, 800e474 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800e472:	79d3      	ldrb	r3, [r2, #7]
 800e474:	772b      	strb	r3, [r5, #28]
 800e476:	2305      	movs	r3, #5
 800e478:	75eb      	strb	r3, [r5, #23]
 800e47a:	4620      	mov	r0, r4
 800e47c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e480:	f7ff bc8c 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e484:	2000f994 	mulcs	r0, r4, r9

0800e488 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800e488:	4b10      	ldr	r3, [pc, #64]	; (800e4cc <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800e48a:	6842      	ldr	r2, [r0, #4]
 800e48c:	681b      	ldr	r3, [r3, #0]
 800e48e:	7999      	ldrb	r1, [r3, #6]
 800e490:	b510      	push	{r4, lr}
 800e492:	4604      	mov	r4, r0
 800e494:	b921      	cbnz	r1, 800e4a0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800e496:	210b      	movs	r1, #11
 800e498:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e49c:	f7ff bd42 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e4a0:	7ed2      	ldrb	r2, [r2, #27]
 800e4a2:	2a01      	cmp	r2, #1
 800e4a4:	d109      	bne.n	800e4ba <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800e4a6:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800e4aa:	f042 0208 	orr.w	r2, r2, #8
 800e4ae:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800e4b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4b6:	f7ff bc71 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e4ba:	b92a      	cbnz	r2, 800e4c8 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800e4bc:	4618      	mov	r0, r3
 800e4be:	4611      	mov	r1, r2
 800e4c0:	f004 fbea 	bl	8012c98 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e4c4:	4620      	mov	r0, r4
 800e4c6:	e7f4      	b.n	800e4b2 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800e4c8:	2106      	movs	r1, #6
 800e4ca:	e7e5      	b.n	800e498 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800e4cc:	2000f994 	mulcs	r0, r4, r9

0800e4d0 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800e4d0:	4b09      	ldr	r3, [pc, #36]	; (800e4f8 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800e4d2:	681b      	ldr	r3, [r3, #0]
 800e4d4:	795a      	ldrb	r2, [r3, #5]
 800e4d6:	b510      	push	{r4, lr}
 800e4d8:	4604      	mov	r4, r0
 800e4da:	b922      	cbnz	r2, 800e4e6 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800e4dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4e0:	210b      	movs	r1, #11
 800e4e2:	f7ff bd1f 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e4e6:	4618      	mov	r0, r3
 800e4e8:	f004 fb90 	bl	8012c0c <Network::EnableDhcp()>
 800e4ec:	4620      	mov	r0, r4
 800e4ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4f2:	f7ff bc53 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e4f6:	bf00      	nop
 800e4f8:	2000f994 	mulcs	r0, r4, r9

0800e4fc <RDMHandler::GetAddressNetmask(unsigned short)>:
 800e4fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e4fe:	4e10      	ldr	r6, [pc, #64]	; (800e540 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800e500:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e504:	6833      	ldr	r3, [r6, #0]
 800e506:	4604      	mov	r4, r0
 800e508:	695b      	ldr	r3, [r3, #20]
 800e50a:	9301      	str	r3, [sp, #4]
 800e50c:	f105 0018 	add.w	r0, r5, #24
 800e510:	3117      	adds	r1, #23
 800e512:	f7ff fef9 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e516:	a901      	add	r1, sp, #4
 800e518:	f105 001c 	add.w	r0, r5, #28
 800e51c:	f7ff fef4 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e520:	6836      	ldr	r6, [r6, #0]
 800e522:	69f0      	ldr	r0, [r6, #28]
 800e524:	f009 ffe2 	bl	80184ec <__popcountsi2>
 800e528:	f885 0020 	strb.w	r0, [r5, #32]
 800e52c:	7973      	ldrb	r3, [r6, #5]
 800e52e:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800e532:	230a      	movs	r3, #10
 800e534:	75eb      	strb	r3, [r5, #23]
 800e536:	4620      	mov	r0, r4
 800e538:	f7ff fc30 	bl	800dd9c <RDMHandler::RespondMessageAck()>
 800e53c:	b002      	add	sp, #8
 800e53e:	bd70      	pop	{r4, r5, r6, pc}
 800e540:	2000f994 	mulcs	r0, r4, r9

0800e544 <RDMHandler::GetStaticAddress(unsigned short)>:
 800e544:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e546:	4e0f      	ldr	r6, [pc, #60]	; (800e584 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800e548:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e54c:	6833      	ldr	r3, [r6, #0]
 800e54e:	4604      	mov	r4, r0
 800e550:	695b      	ldr	r3, [r3, #20]
 800e552:	9301      	str	r3, [sp, #4]
 800e554:	f105 0018 	add.w	r0, r5, #24
 800e558:	3117      	adds	r1, #23
 800e55a:	f7ff fed5 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e55e:	a901      	add	r1, sp, #4
 800e560:	f105 001c 	add.w	r0, r5, #28
 800e564:	f7ff fed0 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e568:	6833      	ldr	r3, [r6, #0]
 800e56a:	69d8      	ldr	r0, [r3, #28]
 800e56c:	f009 ffbe 	bl	80184ec <__popcountsi2>
 800e570:	2309      	movs	r3, #9
 800e572:	f885 0020 	strb.w	r0, [r5, #32]
 800e576:	75eb      	strb	r3, [r5, #23]
 800e578:	4620      	mov	r0, r4
 800e57a:	f7ff fc0f 	bl	800dd9c <RDMHandler::RespondMessageAck()>
 800e57e:	b002      	add	sp, #8
 800e580:	bd70      	pop	{r4, r5, r6, pc}
 800e582:	bf00      	nop
 800e584:	2000f994 	mulcs	r0, r4, r9

0800e588 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800e588:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e58a:	6845      	ldr	r5, [r0, #4]
 800e58c:	7dab      	ldrb	r3, [r5, #22]
 800e58e:	2b09      	cmp	r3, #9
 800e590:	4604      	mov	r4, r0
 800e592:	d005      	beq.n	800e5a0 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800e594:	2101      	movs	r1, #1
 800e596:	b003      	add	sp, #12
 800e598:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e59c:	f7ff bcc2 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e5a0:	f105 011b 	add.w	r1, r5, #27
 800e5a4:	a801      	add	r0, sp, #4
 800e5a6:	f7ff feaf 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e5aa:	4b09      	ldr	r3, [pc, #36]	; (800e5d0 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800e5ac:	7fea      	ldrb	r2, [r5, #31]
 800e5ae:	6818      	ldr	r0, [r3, #0]
 800e5b0:	9901      	ldr	r1, [sp, #4]
 800e5b2:	b12a      	cbz	r2, 800e5c0 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800e5b4:	f1c2 0220 	rsb	r2, r2, #32
 800e5b8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e5bc:	4093      	lsls	r3, r2
 800e5be:	ba1a      	rev	r2, r3
 800e5c0:	f004 fb6a 	bl	8012c98 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	f7ff fbe9 	bl	800dd9c <RDMHandler::RespondMessageAck()>
 800e5ca:	b003      	add	sp, #12
 800e5cc:	bd30      	pop	{r4, r5, pc}
 800e5ce:	bf00      	nop
 800e5d0:	2000f994 	mulcs	r0, r4, r9

0800e5d4 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800e5d4:	4b08      	ldr	r3, [pc, #32]	; (800e5f8 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800e5d6:	b510      	push	{r4, lr}
 800e5d8:	4604      	mov	r4, r0
 800e5da:	6818      	ldr	r0, [r3, #0]
 800e5dc:	f004 fb69 	bl	8012cb2 <Network::ApplyQueuedConfig()>
 800e5e0:	b120      	cbz	r0, 800e5ec <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800e5e2:	4620      	mov	r0, r4
 800e5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5e8:	f7ff bbd8 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e5ec:	4620      	mov	r0, r4
 800e5ee:	2101      	movs	r1, #1
 800e5f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5f4:	f7ff bc96 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e5f8:	2000f994 	mulcs	r0, r4, r9

0800e5fc <RDMHandler::GetDefaultRoute(unsigned short)>:
 800e5fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5fe:	4b0c      	ldr	r3, [pc, #48]	; (800e630 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800e600:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e604:	681b      	ldr	r3, [r3, #0]
 800e606:	4604      	mov	r4, r0
 800e608:	699b      	ldr	r3, [r3, #24]
 800e60a:	9301      	str	r3, [sp, #4]
 800e60c:	f105 0018 	add.w	r0, r5, #24
 800e610:	3117      	adds	r1, #23
 800e612:	f7ff fe79 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e616:	a901      	add	r1, sp, #4
 800e618:	f105 001c 	add.w	r0, r5, #28
 800e61c:	f7ff fe74 	bl	800e308 <memcpy.constprop.0.isra.0>
 800e620:	2308      	movs	r3, #8
 800e622:	75eb      	strb	r3, [r5, #23]
 800e624:	4620      	mov	r0, r4
 800e626:	f7ff fbb9 	bl	800dd9c <RDMHandler::RespondMessageAck()>
 800e62a:	b003      	add	sp, #12
 800e62c:	bd30      	pop	{r4, r5, pc}
 800e62e:	bf00      	nop
 800e630:	2000f994 	mulcs	r0, r4, r9

0800e634 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800e634:	210b      	movs	r1, #11
 800e636:	f7ff bc75 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e63c <RDMHandler::GetHostName(unsigned short)>:
 800e63c:	4b0a      	ldr	r3, [pc, #40]	; (800e668 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800e63e:	b513      	push	{r0, r1, r4, lr}
 800e640:	6819      	ldr	r1, [r3, #0]
 800e642:	3120      	adds	r1, #32
 800e644:	460b      	mov	r3, r1
 800e646:	461a      	mov	r2, r3
 800e648:	3301      	adds	r3, #1
 800e64a:	7814      	ldrb	r4, [r2, #0]
 800e64c:	2c00      	cmp	r4, #0
 800e64e:	d1fa      	bne.n	800e646 <RDMHandler::GetHostName(unsigned short)+0xa>
 800e650:	1a52      	subs	r2, r2, r1
 800e652:	b292      	uxth	r2, r2
 800e654:	9001      	str	r0, [sp, #4]
 800e656:	f7ff fb49 	bl	800dcec <RDMHandler::HandleString(char const*, unsigned int)>
 800e65a:	9801      	ldr	r0, [sp, #4]
 800e65c:	b002      	add	sp, #8
 800e65e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e662:	f7ff bb9b 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e666:	bf00      	nop
 800e668:	2000f994 	mulcs	r0, r4, r9

0800e66c <RDMHandler::SetHostName(bool, unsigned short)>:
 800e66c:	b510      	push	{r4, lr}
 800e66e:	6841      	ldr	r1, [r0, #4]
 800e670:	7d8b      	ldrb	r3, [r1, #22]
 800e672:	2b3f      	cmp	r3, #63	; 0x3f
 800e674:	4604      	mov	r4, r0
 800e676:	d904      	bls.n	800e682 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800e678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e67c:	2102      	movs	r1, #2
 800e67e:	f7ff bc51 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
 800e682:	440b      	add	r3, r1
 800e684:	2200      	movs	r2, #0
 800e686:	75da      	strb	r2, [r3, #23]
 800e688:	4b04      	ldr	r3, [pc, #16]	; (800e69c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800e68a:	3117      	adds	r1, #23
 800e68c:	6818      	ldr	r0, [r3, #0]
 800e68e:	f004 fa82 	bl	8012b96 <Network::SetHostName(char const*)>
 800e692:	4620      	mov	r0, r4
 800e694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e698:	f7ff bb80 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e69c:	2000f994 	mulcs	r0, r4, r9

0800e6a0 <RDMHandler::GetDomainName(unsigned short)>:
 800e6a0:	4b0a      	ldr	r3, [pc, #40]	; (800e6cc <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800e6a2:	b513      	push	{r0, r1, r4, lr}
 800e6a4:	6819      	ldr	r1, [r3, #0]
 800e6a6:	3160      	adds	r1, #96	; 0x60
 800e6a8:	460b      	mov	r3, r1
 800e6aa:	461a      	mov	r2, r3
 800e6ac:	3301      	adds	r3, #1
 800e6ae:	7814      	ldrb	r4, [r2, #0]
 800e6b0:	2c00      	cmp	r4, #0
 800e6b2:	d1fa      	bne.n	800e6aa <RDMHandler::GetDomainName(unsigned short)+0xa>
 800e6b4:	1a52      	subs	r2, r2, r1
 800e6b6:	b292      	uxth	r2, r2
 800e6b8:	9001      	str	r0, [sp, #4]
 800e6ba:	f7ff fb17 	bl	800dcec <RDMHandler::HandleString(char const*, unsigned int)>
 800e6be:	9801      	ldr	r0, [sp, #4]
 800e6c0:	b002      	add	sp, #8
 800e6c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6c6:	f7ff bb69 	b.w	800dd9c <RDMHandler::RespondMessageAck()>
 800e6ca:	bf00      	nop
 800e6cc:	2000f994 	mulcs	r0, r4, r9

0800e6d0 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800e6d0:	210b      	movs	r1, #11
 800e6d2:	f7ff bc27 	b.w	800df24 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e6d8 <RDMDevice::RDMDevice()>:
 800e6d8:	4a34      	ldr	r2, [pc, #208]	; (800e7ac <RDMDevice::RDMDevice()+0xd4>)
 800e6da:	2300      	movs	r3, #0
 800e6dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e6de:	4604      	mov	r4, r0
 800e6e0:	7003      	strb	r3, [r0, #0]
 800e6e2:	f880 3072 	strb.w	r3, [r0, #114]	; 0x72
 800e6e6:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
 800e6ea:	6783      	str	r3, [r0, #120]	; 0x78
 800e6ec:	4611      	mov	r1, r2
 800e6ee:	4613      	mov	r3, r2
 800e6f0:	3201      	adds	r2, #1
 800e6f2:	7818      	ldrb	r0, [r3, #0]
 800e6f4:	2800      	cmp	r0, #0
 800e6f6:	d1fa      	bne.n	800e6ee <RDMDevice::RDMDevice()+0x16>
 800e6f8:	1a5b      	subs	r3, r3, r1
 800e6fa:	2b20      	cmp	r3, #32
 800e6fc:	bf28      	it	cs
 800e6fe:	2320      	movcs	r3, #32
 800e700:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800e704:	4829      	ldr	r0, [pc, #164]	; (800e7ac <RDMDevice::RDMDevice()+0xd4>)
 800e706:	4629      	mov	r1, r5
 800e708:	461a      	mov	r2, r3
 800e70a:	3a01      	subs	r2, #1
 800e70c:	d23e      	bcs.n	800e78c <RDMDevice::RDMDevice()+0xb4>
 800e70e:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e712:	4b27      	ldr	r3, [pc, #156]	; (800e7b0 <RDMDevice::RDMDevice()+0xd8>)
 800e714:	4e27      	ldr	r6, [pc, #156]	; (800e7b4 <RDMDevice::RDMDevice()+0xdc>)
 800e716:	781a      	ldrb	r2, [r3, #0]
 800e718:	7062      	strb	r2, [r4, #1]
 800e71a:	785b      	ldrb	r3, [r3, #1]
 800e71c:	6830      	ldr	r0, [r6, #0]
 800e71e:	70a3      	strb	r3, [r4, #2]
 800e720:	4669      	mov	r1, sp
 800e722:	f004 f898 	bl	8012856 <Network::MacAddressCopyTo(unsigned char*)>
 800e726:	6833      	ldr	r3, [r6, #0]
 800e728:	695b      	ldr	r3, [r3, #20]
 800e72a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e72e:	0e18      	lsrs	r0, r3, #24
 800e730:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800e734:	b2db      	uxtb	r3, r3
 800e736:	70e3      	strb	r3, [r4, #3]
 800e738:	72a3      	strb	r3, [r4, #10]
 800e73a:	4b1f      	ldr	r3, [pc, #124]	; (800e7b8 <RDMDevice::RDMDevice()+0xe0>)
 800e73c:	7122      	strb	r2, [r4, #4]
 800e73e:	7262      	strb	r2, [r4, #9]
 800e740:	71a0      	strb	r0, [r4, #6]
 800e742:	7161      	strb	r1, [r4, #5]
 800e744:	71e0      	strb	r0, [r4, #7]
 800e746:	7221      	strb	r1, [r4, #8]
 800e748:	461a      	mov	r2, r3
 800e74a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e74e:	2900      	cmp	r1, #0
 800e750:	d1fb      	bne.n	800e74a <RDMDevice::RDMDevice()+0x72>
 800e752:	1a9b      	subs	r3, r3, r2
 800e754:	2b20      	cmp	r3, #32
 800e756:	bf28      	it	cs
 800e758:	2320      	movcs	r3, #32
 800e75a:	4917      	ldr	r1, [pc, #92]	; (800e7b8 <RDMDevice::RDMDevice()+0xe0>)
 800e75c:	461a      	mov	r2, r3
 800e75e:	3a01      	subs	r2, #1
 800e760:	d219      	bcs.n	800e796 <RDMDevice::RDMDevice()+0xbe>
 800e762:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e766:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e76a:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e76e:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800e772:	4a12      	ldr	r2, [pc, #72]	; (800e7bc <RDMDevice::RDMDevice()+0xe4>)
 800e774:	2315      	movs	r3, #21
 800e776:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
 800e77a:	f104 0166 	add.w	r1, r4, #102	; 0x66
 800e77e:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800e782:	4299      	cmp	r1, r3
 800e784:	d10c      	bne.n	800e7a0 <RDMDevice::RDMDevice()+0xc8>
 800e786:	4620      	mov	r0, r4
 800e788:	b002      	add	sp, #8
 800e78a:	bd70      	pop	{r4, r5, r6, pc}
 800e78c:	f810 6b01 	ldrb.w	r6, [r0], #1
 800e790:	f801 6f01 	strb.w	r6, [r1, #1]!
 800e794:	e7b9      	b.n	800e70a <RDMDevice::RDMDevice()+0x32>
 800e796:	f811 0b01 	ldrb.w	r0, [r1], #1
 800e79a:	f805 0f01 	strb.w	r0, [r5, #1]!
 800e79e:	e7de      	b.n	800e75e <RDMDevice::RDMDevice()+0x86>
 800e7a0:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e7a4:	f803 0f01 	strb.w	r0, [r3, #1]!
 800e7a8:	e7eb      	b.n	800e782 <RDMDevice::RDMDevice()+0xaa>
 800e7aa:	bf00      	nop
 800e7ac:	0801a0dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sp, pc}
 800e7b0:	0801a0db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sp, pc}
 800e7b4:	2000f994 	mulcs	r0, r4, r9
 800e7b8:	08019fdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 800e7bc:	0801a0c5 	stmdaeq	r1, {r0, r2, r6, r7, sp, pc}

0800e7c0 <RDMDevice::Print()>:
 800e7c0:	b513      	push	{r0, r1, r4, lr}
 800e7c2:	4604      	mov	r4, r0
 800e7c4:	4818      	ldr	r0, [pc, #96]	; (800e828 <RDMDevice::Print()+0x68>)
 800e7c6:	f7fb fe5f 	bl	800a488 <printf>
 800e7ca:	f894 104c 	ldrb.w	r1, [r4, #76]	; 0x4c
 800e7ce:	4817      	ldr	r0, [pc, #92]	; (800e82c <RDMDevice::Print()+0x6c>)
 800e7d0:	f104 022c 	add.w	r2, r4, #44	; 0x2c
 800e7d4:	f7fb fe58 	bl	800a488 <printf>
 800e7d8:	78a2      	ldrb	r2, [r4, #2]
 800e7da:	7861      	ldrb	r1, [r4, #1]
 800e7dc:	4814      	ldr	r0, [pc, #80]	; (800e830 <RDMDevice::Print()+0x70>)
 800e7de:	f7fb fe53 	bl	800a488 <printf>
 800e7e2:	79e3      	ldrb	r3, [r4, #7]
 800e7e4:	7a62      	ldrb	r2, [r4, #9]
 800e7e6:	7aa1      	ldrb	r1, [r4, #10]
 800e7e8:	9300      	str	r3, [sp, #0]
 800e7ea:	4812      	ldr	r0, [pc, #72]	; (800e834 <RDMDevice::Print()+0x74>)
 800e7ec:	7a23      	ldrb	r3, [r4, #8]
 800e7ee:	f7fb fe4b 	bl	800a488 <printf>
 800e7f2:	f894 102b 	ldrb.w	r1, [r4, #43]	; 0x2b
 800e7f6:	4810      	ldr	r0, [pc, #64]	; (800e838 <RDMDevice::Print()+0x78>)
 800e7f8:	f104 020b 	add.w	r2, r4, #11
 800e7fc:	f7fb fe44 	bl	800a488 <printf>
 800e800:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e804:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800e808:	480c      	ldr	r0, [pc, #48]	; (800e83c <RDMDevice::Print()+0x7c>)
 800e80a:	0a09      	lsrs	r1, r1, #8
 800e80c:	f7fb fe3c 	bl	800a488 <printf>
 800e810:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e814:	f894 2050 	ldrb.w	r2, [r4, #80]	; 0x50
 800e818:	4809      	ldr	r0, [pc, #36]	; (800e840 <RDMDevice::Print()+0x80>)
 800e81a:	0a09      	lsrs	r1, r1, #8
 800e81c:	b002      	add	sp, #8
 800e81e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e822:	f7fb be31 	b.w	800a488 <printf>
 800e826:	bf00      	nop
 800e828:	08019ff1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 800e82c:	0801a00b 	stmdaeq	r1, {r0, r1, r3, sp, pc}
 800e830:	0801a026 	stmdaeq	r1, {r1, r2, r5, sp, pc}
 800e834:	0801a045 	stmdaeq	r1, {r0, r2, r6, sp, pc}
 800e838:	0801a06c 	stmdaeq	r1, {r2, r3, r5, r6, sp, pc}
 800e83c:	0801a087 	stmdaeq	r1, {r0, r1, r2, r7, sp, pc}
 800e840:	0801a0a6 	stmdaeq	r1, {r1, r2, r5, r7, sp, pc}

0800e844 <uuid_unparse_x>:
 800e844:	b530      	push	{r4, r5, lr}
 800e846:	4603      	mov	r3, r0
 800e848:	4608      	mov	r0, r1
 800e84a:	4611      	mov	r1, r2
 800e84c:	681a      	ldr	r2, [r3, #0]
 800e84e:	891c      	ldrh	r4, [r3, #8]
 800e850:	b08f      	sub	sp, #60	; 0x3c
 800e852:	ba12      	rev	r2, r2
 800e854:	920a      	str	r2, [sp, #40]	; 0x28
 800e856:	889a      	ldrh	r2, [r3, #4]
 800e858:	ba52      	rev16	r2, r2
 800e85a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e85e:	88da      	ldrh	r2, [r3, #6]
 800e860:	ba64      	rev16	r4, r4
 800e862:	ba52      	rev16	r2, r2
 800e864:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e868:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800e86c:	f103 020a 	add.w	r2, r3, #10
 800e870:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800e874:	3310      	adds	r3, #16
 800e876:	4293      	cmp	r3, r2
 800e878:	d122      	bne.n	800e8c0 <uuid_unparse_x+0x7c>
 800e87a:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800e87e:	9208      	str	r2, [sp, #32]
 800e880:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800e884:	9207      	str	r2, [sp, #28]
 800e886:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800e88a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e88e:	9206      	str	r2, [sp, #24]
 800e890:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800e894:	9205      	str	r2, [sp, #20]
 800e896:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800e89a:	9204      	str	r2, [sp, #16]
 800e89c:	0a1b      	lsrs	r3, r3, #8
 800e89e:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800e8a2:	9203      	str	r2, [sp, #12]
 800e8a4:	9301      	str	r3, [sp, #4]
 800e8a6:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800e8aa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e8ae:	9202      	str	r2, [sp, #8]
 800e8b0:	9300      	str	r3, [sp, #0]
 800e8b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e8b4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e8b8:	f7fb fdf6 	bl	800a4a8 <sprintf>
 800e8bc:	b00f      	add	sp, #60	; 0x3c
 800e8be:	bd30      	pop	{r4, r5, pc}
 800e8c0:	f812 5b01 	ldrb.w	r5, [r2], #1
 800e8c4:	f804 5f01 	strb.w	r5, [r4, #1]!
 800e8c8:	e7d5      	b.n	800e876 <uuid_unparse_x+0x32>
	...

0800e8cc <uuid_unparse>:
 800e8cc:	4a01      	ldr	r2, [pc, #4]	; (800e8d4 <uuid_unparse+0x8>)
 800e8ce:	f7ff bfb9 	b.w	800e844 <uuid_unparse_x>
 800e8d2:	bf00      	nop
 800e8d4:	0801a0f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sp, pc}

0800e8d8 <DmxSend::~DmxSend()>:
 800e8d8:	4770      	bx	lr
	...

0800e8dc <DmxSend::Start(unsigned int)>:
 800e8dc:	b430      	push	{r4, r5}
 800e8de:	4c09      	ldr	r4, [pc, #36]	; (800e904 <DmxSend::Start(unsigned int)+0x28>)
 800e8e0:	2301      	movs	r3, #1
 800e8e2:	7822      	ldrb	r2, [r4, #0]
 800e8e4:	fa03 f001 	lsl.w	r0, r3, r1
 800e8e8:	ea30 0502 	bics.w	r5, r0, r2
 800e8ec:	d007      	beq.n	800e8fe <DmxSend::Start(unsigned int)+0x22>
 800e8ee:	4302      	orrs	r2, r0
 800e8f0:	4805      	ldr	r0, [pc, #20]	; (800e908 <DmxSend::Start(unsigned int)+0x2c>)
 800e8f2:	7022      	strb	r2, [r4, #0]
 800e8f4:	6800      	ldr	r0, [r0, #0]
 800e8f6:	bc30      	pop	{r4, r5}
 800e8f8:	2200      	movs	r2, #0
 800e8fa:	f000 bbab 	b.w	800f054 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e8fe:	bc30      	pop	{r4, r5}
 800e900:	4770      	bx	lr
 800e902:	bf00      	nop
 800e904:	20000810 	andcs	r0, r0, r0, lsl r8
 800e908:	20001048 	andcs	r1, r0, r8, asr #32

0800e90c <DmxSend::Stop(unsigned int)>:
 800e90c:	b410      	push	{r4}
 800e90e:	480b      	ldr	r0, [pc, #44]	; (800e93c <DmxSend::Stop(unsigned int)+0x30>)
 800e910:	2201      	movs	r2, #1
 800e912:	7803      	ldrb	r3, [r0, #0]
 800e914:	408a      	lsls	r2, r1
 800e916:	ea03 0402 	and.w	r4, r3, r2
 800e91a:	439a      	bics	r2, r3
 800e91c:	d10a      	bne.n	800e934 <DmxSend::Stop(unsigned int)+0x28>
 800e91e:	ea23 0304 	bic.w	r3, r3, r4
 800e922:	7003      	strb	r3, [r0, #0]
 800e924:	4806      	ldr	r0, [pc, #24]	; (800e940 <DmxSend::Stop(unsigned int)+0x34>)
 800e926:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e92a:	6800      	ldr	r0, [r0, #0]
 800e92c:	2300      	movs	r3, #0
 800e92e:	461a      	mov	r2, r3
 800e930:	f000 bb90 	b.w	800f054 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e934:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e938:	4770      	bx	lr
 800e93a:	bf00      	nop
 800e93c:	20000810 	andcs	r0, r0, r0, lsl r8
 800e940:	20001048 	andcs	r1, r0, r8, asr #32

0800e944 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e944:	b11b      	cbz	r3, 800e94e <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800e946:	4802      	ldr	r0, [pc, #8]	; (800e950 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800e948:	6800      	ldr	r0, [r0, #0]
 800e94a:	f000 bcc5 	b.w	800f2d8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800e94e:	4770      	bx	lr
 800e950:	20001048 	andcs	r1, r0, r8, asr #32

0800e954 <DmxSend::Blackout(bool)>:
 800e954:	4b01      	ldr	r3, [pc, #4]	; (800e95c <DmxSend::Blackout(bool)+0x8>)
 800e956:	6818      	ldr	r0, [r3, #0]
 800e958:	f000 bce4 	b.w	800f324 <Dmx::Blackout()>
 800e95c:	20001048 	andcs	r1, r0, r8, asr #32

0800e960 <DmxSend::FullOn()>:
 800e960:	4b01      	ldr	r3, [pc, #4]	; (800e968 <DmxSend::FullOn()+0x8>)
 800e962:	6818      	ldr	r0, [r3, #0]
 800e964:	f000 bd22 	b.w	800f3ac <Dmx::FullOn()>
 800e968:	20001048 	andcs	r1, r0, r8, asr #32

0800e96c <DmxSend::Print()>:
 800e96c:	b510      	push	{r4, lr}
 800e96e:	4c0e      	ldr	r4, [pc, #56]	; (800e9a8 <DmxSend::Print()+0x3c>)
 800e970:	480e      	ldr	r0, [pc, #56]	; (800e9ac <DmxSend::Print()+0x40>)
 800e972:	f7fb fd89 	bl	800a488 <printf>
 800e976:	6823      	ldr	r3, [r4, #0]
 800e978:	480d      	ldr	r0, [pc, #52]	; (800e9b0 <DmxSend::Print()+0x44>)
 800e97a:	6819      	ldr	r1, [r3, #0]
 800e97c:	f7fb fd84 	bl	800a488 <printf>
 800e980:	6823      	ldr	r3, [r4, #0]
 800e982:	480c      	ldr	r0, [pc, #48]	; (800e9b4 <DmxSend::Print()+0x48>)
 800e984:	6859      	ldr	r1, [r3, #4]
 800e986:	f7fb fd7f 	bl	800a488 <printf>
 800e98a:	6823      	ldr	r3, [r4, #0]
 800e98c:	490a      	ldr	r1, [pc, #40]	; (800e9b8 <DmxSend::Print()+0x4c>)
 800e98e:	689b      	ldr	r3, [r3, #8]
 800e990:	480a      	ldr	r0, [pc, #40]	; (800e9bc <DmxSend::Print()+0x50>)
 800e992:	fbb1 f1f3 	udiv	r1, r1, r3
 800e996:	f7fb fd77 	bl	800a488 <printf>
 800e99a:	6823      	ldr	r3, [r4, #0]
 800e99c:	4808      	ldr	r0, [pc, #32]	; (800e9c0 <DmxSend::Print()+0x54>)
 800e99e:	8a19      	ldrh	r1, [r3, #16]
 800e9a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e9a4:	f7fb bd70 	b.w	800a488 <printf>
 800e9a8:	20001048 	andcs	r1, r0, r8, asr #32
 800e9ac:	0801a12a 	stmdaeq	r1, {r1, r3, r5, r8, sp, pc}
 800e9b0:	0801a134 	stmdaeq	r1, {r2, r4, r5, r8, sp, pc}
 800e9b4:	0801a148 	stmdaeq	r1, {r3, r6, r8, sp, pc}
 800e9b8:	000f4240 	andeq	r4, pc, r0, asr #4
 800e9bc:	0801a15c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sp, pc}
 800e9c0:	0801a170 	stmdaeq	r1, {r4, r5, r6, r8, sp, pc}

0800e9c4 <DmxSend::~DmxSend()>:
 800e9c4:	b510      	push	{r4, lr}
 800e9c6:	4604      	mov	r4, r0
 800e9c8:	f007 f910 	bl	8015bec <operator delete(void*)>
 800e9cc:	4620      	mov	r0, r4
 800e9ce:	bd10      	pop	{r4, pc}

0800e9d0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800e9d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e9d2:	88c6      	ldrh	r6, [r0, #6]
 800e9d4:	8885      	ldrh	r5, [r0, #4]
 800e9d6:	42ae      	cmp	r6, r5
 800e9d8:	d216      	bcs.n	800ea08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800e9da:	4604      	mov	r4, r0
 800e9dc:	6800      	ldr	r0, [r0, #0]
 800e9de:	1bad      	subs	r5, r5, r6
 800e9e0:	4430      	add	r0, r6
 800e9e2:	7a26      	ldrb	r6, [r4, #8]
 800e9e4:	b923      	cbnz	r3, 800e9f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800e9e6:	b926      	cbnz	r6, 800e9f2 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800e9e8:	9200      	str	r2, [sp, #0]
 800e9ea:	460b      	mov	r3, r1
 800e9ec:	4a09      	ldr	r2, [pc, #36]	; (800ea14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800e9ee:	e003      	b.n	800e9f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e9f0:	b166      	cbz	r6, 800ea0c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800e9f2:	9200      	str	r2, [sp, #0]
 800e9f4:	4a08      	ldr	r2, [pc, #32]	; (800ea18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800e9f6:	460b      	mov	r3, r1
 800e9f8:	4629      	mov	r1, r5
 800e9fa:	f7fb fd6d 	bl	800a4d8 <snprintf>
 800e9fe:	4285      	cmp	r5, r0
 800ea00:	bfa2      	ittt	ge
 800ea02:	88e3      	ldrhge	r3, [r4, #6]
 800ea04:	181b      	addge	r3, r3, r0
 800ea06:	80e3      	strhge	r3, [r4, #6]
 800ea08:	b002      	add	sp, #8
 800ea0a:	bd70      	pop	{r4, r5, r6, pc}
 800ea0c:	9200      	str	r2, [sp, #0]
 800ea0e:	460b      	mov	r3, r1
 800ea10:	4a02      	ldr	r2, [pc, #8]	; (800ea1c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ea12:	e7f1      	b.n	800e9f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ea14:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800ea18:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800ea1c:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800ea20 <DmxParams::DmxParams(DmxParamsStore*)>:
 800ea20:	4a04      	ldr	r2, [pc, #16]	; (800ea34 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800ea22:	6001      	str	r1, [r0, #0]
 800ea24:	2100      	movs	r1, #0
 800ea26:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ea2a:	f64f 7228 	movw	r2, #65320	; 0xff28
 800ea2e:	8182      	strh	r2, [r0, #12]
 800ea30:	4770      	bx	lr
 800ea32:	bf00      	nop
 800ea34:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800ea38 <DmxParams::Load()>:
 800ea38:	b508      	push	{r3, lr}
 800ea3a:	2300      	movs	r3, #0
 800ea3c:	4601      	mov	r1, r0
 800ea3e:	6043      	str	r3, [r0, #4]
 800ea40:	6800      	ldr	r0, [r0, #0]
 800ea42:	b120      	cbz	r0, 800ea4e <DmxParams::Load()+0x16>
 800ea44:	6803      	ldr	r3, [r0, #0]
 800ea46:	3104      	adds	r1, #4
 800ea48:	68db      	ldr	r3, [r3, #12]
 800ea4a:	4798      	blx	r3
 800ea4c:	2001      	movs	r0, #1
 800ea4e:	bd08      	pop	{r3, pc}

0800ea50 <DmxParams::Load(char const*, unsigned int)>:
 800ea50:	6803      	ldr	r3, [r0, #0]
 800ea52:	b1d3      	cbz	r3, 800ea8a <DmxParams::Load(char const*, unsigned int)+0x3a>
 800ea54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ea56:	2300      	movs	r3, #0
 800ea58:	6043      	str	r3, [r0, #4]
 800ea5a:	4604      	mov	r4, r0
 800ea5c:	460d      	mov	r5, r1
 800ea5e:	4616      	mov	r6, r2
 800ea60:	490a      	ldr	r1, [pc, #40]	; (800ea8c <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800ea62:	4602      	mov	r2, r0
 800ea64:	4668      	mov	r0, sp
 800ea66:	f006 f9d5 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ea6a:	4632      	mov	r2, r6
 800ea6c:	4629      	mov	r1, r5
 800ea6e:	4668      	mov	r0, sp
 800ea70:	f006 f9d4 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 800ea74:	4621      	mov	r1, r4
 800ea76:	f851 0b04 	ldr.w	r0, [r1], #4
 800ea7a:	6803      	ldr	r3, [r0, #0]
 800ea7c:	689b      	ldr	r3, [r3, #8]
 800ea7e:	4798      	blx	r3
 800ea80:	4668      	mov	r0, sp
 800ea82:	f006 f9ca 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 800ea86:	b002      	add	sp, #8
 800ea88:	bd70      	pop	{r4, r5, r6, pc}
 800ea8a:	4770      	bx	lr
 800ea8c:	0800eb5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, fp, sp, lr, pc}

0800ea90 <DmxParams::callbackFunction(char const*)>:
 800ea90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ea92:	460d      	mov	r5, r1
 800ea94:	4604      	mov	r4, r0
 800ea96:	492d      	ldr	r1, [pc, #180]	; (800eb4c <DmxParams::callbackFunction(char const*)+0xbc>)
 800ea98:	f10d 0206 	add.w	r2, sp, #6
 800ea9c:	4628      	mov	r0, r5
 800ea9e:	f006 faa6 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800eaa2:	b988      	cbnz	r0, 800eac8 <DmxParams::callbackFunction(char const*)+0x38>
 800eaa4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eaa8:	6863      	ldr	r3, [r4, #4]
 800eaaa:	2a5b      	cmp	r2, #91	; 0x5b
 800eaac:	d907      	bls.n	800eabe <DmxParams::callbackFunction(char const*)+0x2e>
 800eaae:	2ab0      	cmp	r2, #176	; 0xb0
 800eab0:	d005      	beq.n	800eabe <DmxParams::callbackFunction(char const*)+0x2e>
 800eab2:	8122      	strh	r2, [r4, #8]
 800eab4:	f043 0301 	orr.w	r3, r3, #1
 800eab8:	6063      	str	r3, [r4, #4]
 800eaba:	b003      	add	sp, #12
 800eabc:	bd30      	pop	{r4, r5, pc}
 800eabe:	22b0      	movs	r2, #176	; 0xb0
 800eac0:	8122      	strh	r2, [r4, #8]
 800eac2:	f023 0301 	bic.w	r3, r3, #1
 800eac6:	e7f7      	b.n	800eab8 <DmxParams::callbackFunction(char const*)+0x28>
 800eac8:	4921      	ldr	r1, [pc, #132]	; (800eb50 <DmxParams::callbackFunction(char const*)+0xc0>)
 800eaca:	f10d 0206 	add.w	r2, sp, #6
 800eace:	4628      	mov	r0, r5
 800ead0:	f006 fa8d 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ead4:	b968      	cbnz	r0, 800eaf2 <DmxParams::callbackFunction(char const*)+0x62>
 800ead6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eada:	6863      	ldr	r3, [r4, #4]
 800eadc:	2a0c      	cmp	r2, #12
 800eade:	bf93      	iteet	ls
 800eae0:	220c      	movls	r2, #12
 800eae2:	8162      	strhhi	r2, [r4, #10]
 800eae4:	f043 0302 	orrhi.w	r3, r3, #2
 800eae8:	8162      	strhls	r2, [r4, #10]
 800eaea:	bf98      	it	ls
 800eaec:	f023 0302 	bicls.w	r3, r3, #2
 800eaf0:	e7e2      	b.n	800eab8 <DmxParams::callbackFunction(char const*)+0x28>
 800eaf2:	4918      	ldr	r1, [pc, #96]	; (800eb54 <DmxParams::callbackFunction(char const*)+0xc4>)
 800eaf4:	f10d 0205 	add.w	r2, sp, #5
 800eaf8:	4628      	mov	r0, r5
 800eafa:	f006 fac0 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eafe:	b950      	cbnz	r0, 800eb16 <DmxParams::callbackFunction(char const*)+0x86>
 800eb00:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800eb04:	6863      	ldr	r3, [r4, #4]
 800eb06:	7322      	strb	r2, [r4, #12]
 800eb08:	2a28      	cmp	r2, #40	; 0x28
 800eb0a:	bf14      	ite	ne
 800eb0c:	f043 0304 	orrne.w	r3, r3, #4
 800eb10:	f023 0304 	biceq.w	r3, r3, #4
 800eb14:	e7d0      	b.n	800eab8 <DmxParams::callbackFunction(char const*)+0x28>
 800eb16:	4910      	ldr	r1, [pc, #64]	; (800eb58 <DmxParams::callbackFunction(char const*)+0xc8>)
 800eb18:	f10d 0206 	add.w	r2, sp, #6
 800eb1c:	4628      	mov	r0, r5
 800eb1e:	f006 fa66 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800eb22:	2800      	cmp	r0, #0
 800eb24:	d1c9      	bne.n	800eaba <DmxParams::callbackFunction(char const*)+0x2a>
 800eb26:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eb2a:	6863      	ldr	r3, [r4, #4]
 800eb2c:	1e91      	subs	r1, r2, #2
 800eb2e:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800eb32:	bf3b      	ittet	cc
 800eb34:	0852      	lsrcc	r2, r2, #1
 800eb36:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800eb3a:	22ff      	movcs	r2, #255	; 0xff
 800eb3c:	7362      	strbcc	r2, [r4, #13]
 800eb3e:	bf32      	itee	cc
 800eb40:	f043 0308 	orrcc.w	r3, r3, #8
 800eb44:	7362      	strbcs	r2, [r4, #13]
 800eb46:	f023 0308 	biccs.w	r3, r3, #8
 800eb4a:	e7b5      	b.n	800eab8 <DmxParams::callbackFunction(char const*)+0x28>
 800eb4c:	0801a1bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sp, pc}
 800eb50:	0801a1e0 	stmdaeq	r1, {r5, r6, r7, r8, sp, pc}
 800eb54:	0801a1d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sp, pc}
 800eb58:	0801a1c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sp, pc}

0800eb5c <DmxParams::staticCallbackFunction(void*, char const*)>:
 800eb5c:	f7ff bf98 	b.w	800ea90 <DmxParams::callbackFunction(char const*)>

0800eb60 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800eb60:	b570      	push	{r4, r5, r6, lr}
 800eb62:	4604      	mov	r4, r0
 800eb64:	b086      	sub	sp, #24
 800eb66:	4615      	mov	r5, r2
 800eb68:	461e      	mov	r6, r3
 800eb6a:	3004      	adds	r0, #4
 800eb6c:	b369      	cbz	r1, 800ebca <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800eb6e:	220a      	movs	r2, #10
 800eb70:	f007 f93d 	bl	8015dee <memmove>
 800eb74:	462a      	mov	r2, r5
 800eb76:	4933      	ldr	r1, [pc, #204]	; (800ec44 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800eb78:	4633      	mov	r3, r6
 800eb7a:	a803      	add	r0, sp, #12
 800eb7c:	f006 f8aa 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800eb80:	6863      	ldr	r3, [r4, #4]
 800eb82:	8922      	ldrh	r2, [r4, #8]
 800eb84:	4930      	ldr	r1, [pc, #192]	; (800ec48 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800eb86:	f003 0301 	and.w	r3, r3, #1
 800eb8a:	a803      	add	r0, sp, #12
 800eb8c:	f7ff ff20 	bl	800e9d0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800eb90:	6863      	ldr	r3, [r4, #4]
 800eb92:	8962      	ldrh	r2, [r4, #10]
 800eb94:	492d      	ldr	r1, [pc, #180]	; (800ec4c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800eb96:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800eb9a:	a803      	add	r0, sp, #12
 800eb9c:	f7ff ff18 	bl	800e9d0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800eba0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eba4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800eba8:	7b23      	ldrb	r3, [r4, #12]
 800ebaa:	6861      	ldr	r1, [r4, #4]
 800ebac:	42aa      	cmp	r2, r5
 800ebae:	d221      	bcs.n	800ebf4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800ebb0:	9803      	ldr	r0, [sp, #12]
 800ebb2:	0749      	lsls	r1, r1, #29
 800ebb4:	4410      	add	r0, r2
 800ebb6:	eba5 0502 	sub.w	r5, r5, r2
 800ebba:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ebbe:	d40b      	bmi.n	800ebd8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800ebc0:	b95a      	cbnz	r2, 800ebda <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800ebc2:	9300      	str	r3, [sp, #0]
 800ebc4:	4a22      	ldr	r2, [pc, #136]	; (800ec50 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800ebc6:	4b23      	ldr	r3, [pc, #140]	; (800ec54 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ebc8:	e00a      	b.n	800ebe0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800ebca:	6823      	ldr	r3, [r4, #0]
 800ebcc:	681a      	ldr	r2, [r3, #0]
 800ebce:	4601      	mov	r1, r0
 800ebd0:	68d2      	ldr	r2, [r2, #12]
 800ebd2:	4618      	mov	r0, r3
 800ebd4:	4790      	blx	r2
 800ebd6:	e7cd      	b.n	800eb74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800ebd8:	b37a      	cbz	r2, 800ec3a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800ebda:	9300      	str	r3, [sp, #0]
 800ebdc:	4a1e      	ldr	r2, [pc, #120]	; (800ec58 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800ebde:	4b1d      	ldr	r3, [pc, #116]	; (800ec54 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ebe0:	4629      	mov	r1, r5
 800ebe2:	f7fb fc79 	bl	800a4d8 <snprintf>
 800ebe6:	4285      	cmp	r5, r0
 800ebe8:	bfa2      	ittt	ge
 800ebea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ebee:	18c0      	addge	r0, r0, r3
 800ebf0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ebf4:	7b62      	ldrb	r2, [r4, #13]
 800ebf6:	6863      	ldr	r3, [r4, #4]
 800ebf8:	4918      	ldr	r1, [pc, #96]	; (800ec5c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800ebfa:	3201      	adds	r2, #1
 800ebfc:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800ec00:	0052      	lsls	r2, r2, #1
 800ec02:	a803      	add	r0, sp, #12
 800ec04:	f7ff fee4 	bl	800e9d0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ec08:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ec0c:	b17b      	cbz	r3, 800ec2e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800ec0e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ec12:	9b03      	ldr	r3, [sp, #12]
 800ec14:	4413      	add	r3, r2
 800ec16:	227d      	movs	r2, #125	; 0x7d
 800ec18:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ec1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ec20:	9903      	ldr	r1, [sp, #12]
 800ec22:	54ca      	strb	r2, [r1, r3]
 800ec24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ec28:	3301      	adds	r3, #1
 800ec2a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ec2e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ec32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec34:	601a      	str	r2, [r3, #0]
 800ec36:	b006      	add	sp, #24
 800ec38:	bd70      	pop	{r4, r5, r6, pc}
 800ec3a:	9300      	str	r3, [sp, #0]
 800ec3c:	4a08      	ldr	r2, [pc, #32]	; (800ec60 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800ec3e:	4b05      	ldr	r3, [pc, #20]	; (800ec54 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ec40:	e7ce      	b.n	800ebe0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800ec42:	bf00      	nop
 800ec44:	0801a1e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sp, pc}
 800ec48:	0801a1bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sp, pc}
 800ec4c:	0801a1e0 	stmdaeq	r1, {r5, r6, r7, r8, sp, pc}
 800ec50:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800ec54:	0801a1d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sp, pc}
 800ec58:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800ec5c:	0801a1c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sp, pc}
 800ec60:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800ec64 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800ec64:	b513      	push	{r0, r1, r4, lr}
 800ec66:	6804      	ldr	r4, [r0, #0]
 800ec68:	b914      	cbnz	r4, 800ec70 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ec6a:	601c      	str	r4, [r3, #0]
 800ec6c:	b002      	add	sp, #8
 800ec6e:	bd10      	pop	{r4, pc}
 800ec70:	9300      	str	r3, [sp, #0]
 800ec72:	4613      	mov	r3, r2
 800ec74:	460a      	mov	r2, r1
 800ec76:	2100      	movs	r1, #0
 800ec78:	f7ff ff72 	bl	800eb60 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800ec7c:	e7f6      	b.n	800ec6c <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800ec80 <DmxParams::Set(Dmx*)>:
 800ec80:	b513      	push	{r0, r1, r4, lr}
 800ec82:	4604      	mov	r4, r0
 800ec84:	4608      	mov	r0, r1
 800ec86:	6863      	ldr	r3, [r4, #4]
 800ec88:	07db      	lsls	r3, r3, #31
 800ec8a:	d504      	bpl.n	800ec96 <DmxParams::Set(Dmx*)+0x16>
 800ec8c:	8921      	ldrh	r1, [r4, #8]
 800ec8e:	9001      	str	r0, [sp, #4]
 800ec90:	f000 faf8 	bl	800f284 <Dmx::SetDmxBreakTime(unsigned int)>
 800ec94:	9801      	ldr	r0, [sp, #4]
 800ec96:	6863      	ldr	r3, [r4, #4]
 800ec98:	0799      	lsls	r1, r3, #30
 800ec9a:	d504      	bpl.n	800eca6 <DmxParams::Set(Dmx*)+0x26>
 800ec9c:	8961      	ldrh	r1, [r4, #10]
 800ec9e:	9001      	str	r0, [sp, #4]
 800eca0:	f000 fafa 	bl	800f298 <Dmx::SetDmxMabTime(unsigned int)>
 800eca4:	9801      	ldr	r0, [sp, #4]
 800eca6:	6863      	ldr	r3, [r4, #4]
 800eca8:	075a      	lsls	r2, r3, #29
 800ecaa:	d508      	bpl.n	800ecbe <DmxParams::Set(Dmx*)+0x3e>
 800ecac:	7b21      	ldrb	r1, [r4, #12]
 800ecae:	b111      	cbz	r1, 800ecb6 <DmxParams::Set(Dmx*)+0x36>
 800ecb0:	4b09      	ldr	r3, [pc, #36]	; (800ecd8 <DmxParams::Set(Dmx*)+0x58>)
 800ecb2:	fbb3 f1f1 	udiv	r1, r3, r1
 800ecb6:	9001      	str	r0, [sp, #4]
 800ecb8:	f000 fabc 	bl	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 800ecbc:	9801      	ldr	r0, [sp, #4]
 800ecbe:	6863      	ldr	r3, [r4, #4]
 800ecc0:	071b      	lsls	r3, r3, #28
 800ecc2:	d507      	bpl.n	800ecd4 <DmxParams::Set(Dmx*)+0x54>
 800ecc4:	7b61      	ldrb	r1, [r4, #13]
 800ecc6:	3101      	adds	r1, #1
 800ecc8:	0049      	lsls	r1, r1, #1
 800ecca:	b002      	add	sp, #8
 800eccc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecd0:	f000 baec 	b.w	800f2ac <Dmx::SetDmxSlots(unsigned short)>
 800ecd4:	b002      	add	sp, #8
 800ecd6:	bd10      	pop	{r4, pc}
 800ecd8:	000f4240 	andeq	r4, pc, r0, asr #4

0800ecdc <DmxParams::Dump()>:
 800ecdc:	4770      	bx	lr

0800ecde <_gpio_mode_output(unsigned int, unsigned int)>:
 800ecde:	b513      	push	{r0, r1, r4, lr}
 800ece0:	460a      	mov	r2, r1
 800ece2:	9101      	str	r1, [sp, #4]
 800ece4:	2100      	movs	r1, #0
 800ece6:	4604      	mov	r4, r0
 800ece8:	f007 ffe9 	bl	8016cbe <gpio_af_set>
 800ecec:	9b01      	ldr	r3, [sp, #4]
 800ecee:	2200      	movs	r2, #0
 800ecf0:	2101      	movs	r1, #1
 800ecf2:	4620      	mov	r0, r4
 800ecf4:	b002      	add	sp, #8
 800ecf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecfa:	f007 bfa5 	b.w	8016c48 <gpio_mode_set>
	...

0800ed00 <_port_to_uart(unsigned int)>:
 800ed00:	4a03      	ldr	r2, [pc, #12]	; (800ed10 <_port_to_uart(unsigned int)+0x10>)
 800ed02:	4b04      	ldr	r3, [pc, #16]	; (800ed14 <_port_to_uart(unsigned int)+0x14>)
 800ed04:	2800      	cmp	r0, #0
 800ed06:	bf14      	ite	ne
 800ed08:	4610      	movne	r0, r2
 800ed0a:	4618      	moveq	r0, r3
 800ed0c:	4770      	bx	lr
 800ed0e:	bf00      	nop
 800ed10:	40011400 	andmi	r1, r1, r0, lsl #8
 800ed14:	40004800 	andmi	r4, r0, r0, lsl #16

0800ed18 <TIMER1_IRQHandler>:
 800ed18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed1a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ed1e:	4d47      	ldr	r5, [pc, #284]	; (800ee3c <TIMER1_IRQHandler+0x124>)
 800ed20:	691e      	ldr	r6, [r3, #16]
 800ed22:	4f47      	ldr	r7, [pc, #284]	; (800ee40 <TIMER1_IRQHandler+0x128>)
 800ed24:	882c      	ldrh	r4, [r5, #0]
 800ed26:	2308      	movs	r3, #8
 800ed28:	07b1      	lsls	r1, r6, #30
 800ed2a:	b2a4      	uxth	r4, r4
 800ed2c:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
 800ed30:	d528      	bpl.n	800ed84 <TIMER1_IRQHandler+0x6c>
 800ed32:	07e2      	lsls	r2, r4, #31
 800ed34:	d50d      	bpl.n	800ed52 <TIMER1_IRQHandler+0x3a>
 800ed36:	882b      	ldrh	r3, [r5, #0]
 800ed38:	4842      	ldr	r0, [pc, #264]	; (800ee44 <TIMER1_IRQHandler+0x12c>)
 800ed3a:	b29b      	uxth	r3, r3
 800ed3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ed40:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ed44:	802b      	strh	r3, [r5, #0]
 800ed46:	f7ff ffca 	bl	800ecde <_gpio_mode_output(unsigned int, unsigned int)>
 800ed4a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ed4e:	f8c7 3c28 	str.w	r3, [r7, #3112]	; 0xc28
 800ed52:	07a3      	lsls	r3, r4, #30
 800ed54:	d50c      	bpl.n	800ed70 <TIMER1_IRQHandler+0x58>
 800ed56:	882b      	ldrh	r3, [r5, #0]
 800ed58:	483b      	ldr	r0, [pc, #236]	; (800ee48 <TIMER1_IRQHandler+0x130>)
 800ed5a:	b29b      	uxth	r3, r3
 800ed5c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ed60:	2140      	movs	r1, #64	; 0x40
 800ed62:	802b      	strh	r3, [r5, #0]
 800ed64:	f7ff ffbb 	bl	800ecde <_gpio_mode_output(unsigned int, unsigned int)>
 800ed68:	4b35      	ldr	r3, [pc, #212]	; (800ee40 <TIMER1_IRQHandler+0x128>)
 800ed6a:	2240      	movs	r2, #64	; 0x40
 800ed6c:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800ed70:	4631      	mov	r1, r6
 800ed72:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ed76:	f008 f98c 	bl	8017092 <timer_interrupt_flag_clear>
 800ed7a:	4b31      	ldr	r3, [pc, #196]	; (800ee40 <TIMER1_IRQHandler+0x128>)
 800ed7c:	2208      	movs	r2, #8
 800ed7e:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800ed82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed84:	0777      	lsls	r7, r6, #29
 800ed86:	d51c      	bpl.n	800edc2 <TIMER1_IRQHandler+0xaa>
 800ed88:	05e5      	lsls	r5, r4, #23
 800ed8a:	d50c      	bpl.n	800eda6 <TIMER1_IRQHandler+0x8e>
 800ed8c:	482d      	ldr	r0, [pc, #180]	; (800ee44 <TIMER1_IRQHandler+0x12c>)
 800ed8e:	2201      	movs	r2, #1
 800ed90:	2102      	movs	r1, #2
 800ed92:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ed96:	f007 ff57 	bl	8016c48 <gpio_mode_set>
 800ed9a:	482a      	ldr	r0, [pc, #168]	; (800ee44 <TIMER1_IRQHandler+0x12c>)
 800ed9c:	f44f 7280 	mov.w	r2, #256	; 0x100
 800eda0:	2107      	movs	r1, #7
 800eda2:	f007 ff8c 	bl	8016cbe <gpio_af_set>
 800eda6:	05a0      	lsls	r0, r4, #22
 800eda8:	d5e2      	bpl.n	800ed70 <TIMER1_IRQHandler+0x58>
 800edaa:	4827      	ldr	r0, [pc, #156]	; (800ee48 <TIMER1_IRQHandler+0x130>)
 800edac:	2340      	movs	r3, #64	; 0x40
 800edae:	2201      	movs	r2, #1
 800edb0:	2102      	movs	r1, #2
 800edb2:	f007 ff49 	bl	8016c48 <gpio_mode_set>
 800edb6:	4824      	ldr	r0, [pc, #144]	; (800ee48 <TIMER1_IRQHandler+0x130>)
 800edb8:	2240      	movs	r2, #64	; 0x40
 800edba:	2108      	movs	r1, #8
 800edbc:	f007 ff7f 	bl	8016cbe <gpio_af_set>
 800edc0:	e7d6      	b.n	800ed70 <TIMER1_IRQHandler+0x58>
 800edc2:	0731      	lsls	r1, r6, #28
 800edc4:	d5d4      	bpl.n	800ed70 <TIMER1_IRQHandler+0x58>
 800edc6:	05e2      	lsls	r2, r4, #23
 800edc8:	d516      	bpl.n	800edf8 <TIMER1_IRQHandler+0xe0>
 800edca:	4d20      	ldr	r5, [pc, #128]	; (800ee4c <TIMER1_IRQHandler+0x134>)
 800edcc:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800edce:	f023 0301 	bic.w	r3, r3, #1
 800edd2:	65ab      	str	r3, [r5, #88]	; 0x58
 800edd4:	2103      	movs	r1, #3
 800edd6:	4628      	mov	r0, r5
 800edd8:	2220      	movs	r2, #32
 800edda:	f007 fb09 	bl	80163f0 <dma_interrupt_flag_clear>
 800edde:	4b1c      	ldr	r3, [pc, #112]	; (800ee50 <TIMER1_IRQHandler+0x138>)
 800ede0:	666b      	str	r3, [r5, #100]	; 0x64
 800ede2:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800ede6:	65eb      	str	r3, [r5, #92]	; 0x5c
 800ede8:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800edea:	481a      	ldr	r0, [pc, #104]	; (800ee54 <TIMER1_IRQHandler+0x13c>)
 800edec:	f043 0301 	orr.w	r3, r3, #1
 800edf0:	65ab      	str	r3, [r5, #88]	; 0x58
 800edf2:	2180      	movs	r1, #128	; 0x80
 800edf4:	f008 fb94 	bl	8017520 <usart_dma_transmit_config>
 800edf8:	05a3      	lsls	r3, r4, #22
 800edfa:	d5b9      	bpl.n	800ed70 <TIMER1_IRQHandler+0x58>
 800edfc:	4c13      	ldr	r4, [pc, #76]	; (800ee4c <TIMER1_IRQHandler+0x134>)
 800edfe:	4816      	ldr	r0, [pc, #88]	; (800ee58 <TIMER1_IRQHandler+0x140>)
 800ee00:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800ee04:	f023 0301 	bic.w	r3, r3, #1
 800ee08:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800ee0c:	2220      	movs	r2, #32
 800ee0e:	2106      	movs	r1, #6
 800ee10:	f007 faee 	bl	80163f0 <dma_interrupt_flag_clear>
 800ee14:	4b0e      	ldr	r3, [pc, #56]	; (800ee50 <TIMER1_IRQHandler+0x138>)
 800ee16:	4811      	ldr	r0, [pc, #68]	; (800ee5c <TIMER1_IRQHandler+0x144>)
 800ee18:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800ee1c:	f8b3 3406 	ldrh.w	r3, [r3, #1030]	; 0x406
 800ee20:	f8c4 24ac 	str.w	r2, [r4, #1196]	; 0x4ac
 800ee24:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 800ee28:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800ee2c:	f043 0301 	orr.w	r3, r3, #1
 800ee30:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800ee34:	2180      	movs	r1, #128	; 0x80
 800ee36:	f008 fb73 	bl	8017520 <usart_dma_transmit_config>
 800ee3a:	e799      	b.n	800ed70 <TIMER1_IRQHandler+0x58>
 800ee3c:	20001044 	andcs	r1, r0, r4, asr #32
 800ee40:	40020000 	andmi	r0, r2, r0
 800ee44:	40020c00 	andmi	r0, r2, r0, lsl #24
 800ee48:	40020800 	andmi	r0, r2, r0, lsl #16
 800ee4c:	40026000 	andmi	r6, r2, r0
 800ee50:	20000c34 	andcs	r0, r0, r4, lsr ip
 800ee54:	40004800 	andmi	r4, r0, r0, lsl #16
 800ee58:	40026400 	andmi	r6, r2, r0, lsl #8
 800ee5c:	40011400 	andmi	r1, r1, r0, lsl #8

0800ee60 <Dmx::ClearData(unsigned int)>:
 800ee60:	4a0a      	ldr	r2, [pc, #40]	; (800ee8c <Dmx::ClearData(unsigned int)+0x2c>)
 800ee62:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ee66:	fb03 2301 	mla	r3, r3, r1, r2
 800ee6a:	b510      	push	{r4, lr}
 800ee6c:	f203 2002 	addw	r0, r3, #514	; 0x202
 800ee70:	2400      	movs	r4, #0
 800ee72:	f823 4b02 	strh.w	r4, [r3], #2
 800ee76:	4283      	cmp	r3, r0
 800ee78:	d1fb      	bne.n	800ee72 <Dmx::ClearData(unsigned int)+0x12>
 800ee7a:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ee7e:	fb03 2101 	mla	r1, r3, r1, r2
 800ee82:	f240 2301 	movw	r3, #513	; 0x201
 800ee86:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 800ee8a:	bd10      	pop	{r4, pc}
 800ee8c:	20000c34 	andcs	r0, r0, r4, lsr ip

0800ee90 <Dmx::StartData(unsigned int, unsigned int)>:
 800ee90:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee92:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800ee96:	b085      	sub	sp, #20
 800ee98:	6943      	ldr	r3, [r0, #20]
 800ee9a:	460c      	mov	r4, r1
 800ee9c:	4615      	mov	r5, r2
 800ee9e:	2b00      	cmp	r3, #0
 800eea0:	d168      	bne.n	800ef74 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800eea2:	4e41      	ldr	r6, [pc, #260]	; (800efa8 <Dmx::StartData(unsigned int, unsigned int)+0x118>)
 800eea4:	8834      	ldrh	r4, [r6, #0]
 800eea6:	b2a4      	uxth	r4, r4
 800eea8:	2c00      	cmp	r4, #0
 800eeaa:	d157      	bne.n	800ef5c <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 800eeac:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800eeb0:	f007 ff46 	bl	8016d40 <rcu_periph_clock_enable>
 800eeb4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eeb8:	f007 fffe 	bl	8016eb8 <timer_deinit>
 800eebc:	4b3b      	ldr	r3, [pc, #236]	; (800efac <Dmx::StartData(unsigned int, unsigned int)+0x11c>)
 800eebe:	f88d 400c 	strb.w	r4, [sp, #12]
 800eec2:	681b      	ldr	r3, [r3, #0]
 800eec4:	9302      	str	r3, [sp, #8]
 800eec6:	4669      	mov	r1, sp
 800eec8:	23c7      	movs	r3, #199	; 0xc7
 800eeca:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eece:	e9cd 3400 	strd	r3, r4, [sp]
 800eed2:	f008 f897 	bl	8017004 <timer_init>
 800eed6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800eeda:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eede:	f008 f8db 	bl	8017098 <timer_flag_clear>
 800eee2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800eee6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eeea:	f008 f8d2 	bl	8017092 <timer_interrupt_flag_clear>
 800eeee:	2210      	movs	r2, #16
 800eef0:	4621      	mov	r1, r4
 800eef2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eef6:	f008 f9bf 	bl	8017278 <timer_channel_output_mode_config>
 800eefa:	2210      	movs	r2, #16
 800eefc:	2101      	movs	r1, #1
 800eefe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef02:	f008 f9b9 	bl	8017278 <timer_channel_output_mode_config>
 800ef06:	4f2a      	ldr	r7, [pc, #168]	; (800efb0 <Dmx::StartData(unsigned int, unsigned int)+0x120>)
 800ef08:	2210      	movs	r2, #16
 800ef0a:	2102      	movs	r1, #2
 800ef0c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef10:	f008 f9b2 	bl	8017278 <timer_channel_output_mode_config>
 800ef14:	4622      	mov	r2, r4
 800ef16:	4621      	mov	r1, r4
 800ef18:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef1c:	f008 f9d2 	bl	80172c4 <timer_channel_output_pulse_value_config>
 800ef20:	683a      	ldr	r2, [r7, #0]
 800ef22:	2101      	movs	r1, #1
 800ef24:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef28:	f008 f9cc 	bl	80172c4 <timer_channel_output_pulse_value_config>
 800ef2c:	4b21      	ldr	r3, [pc, #132]	; (800efb4 <Dmx::StartData(unsigned int, unsigned int)+0x124>)
 800ef2e:	683a      	ldr	r2, [r7, #0]
 800ef30:	681b      	ldr	r3, [r3, #0]
 800ef32:	2102      	movs	r1, #2
 800ef34:	441a      	add	r2, r3
 800ef36:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef3a:	f008 f9c3 	bl	80172c4 <timer_channel_output_pulse_value_config>
 800ef3e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef42:	210e      	movs	r1, #14
 800ef44:	f008 f8a1 	bl	801708a <timer_interrupt_enable>
 800ef48:	4b1b      	ldr	r3, [pc, #108]	; (800efb8 <Dmx::StartData(unsigned int, unsigned int)+0x128>)
 800ef4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef4e:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800ef52:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ef56:	601a      	str	r2, [r3, #0]
 800ef58:	f008 f892 	bl	8017080 <timer_enable>
 800ef5c:	8831      	ldrh	r1, [r6, #0]
 800ef5e:	2201      	movs	r2, #1
 800ef60:	fa02 f305 	lsl.w	r3, r2, r5
 800ef64:	430b      	orrs	r3, r1
 800ef66:	b29b      	uxth	r3, r3
 800ef68:	8033      	strh	r3, [r6, #0]
 800ef6a:	4b14      	ldr	r3, [pc, #80]	; (800efbc <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800ef6c:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800ef70:	b005      	add	sp, #20
 800ef72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef74:	4b12      	ldr	r3, [pc, #72]	; (800efc0 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800ef76:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ef7a:	fb02 3305 	mla	r3, r2, r5, r3
 800ef7e:	2200      	movs	r2, #0
 800ef80:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ef84:	2107      	movs	r1, #7
 800ef86:	4620      	mov	r0, r4
 800ef88:	f008 fad0 	bl	801752c <usart_flag_get>
 800ef8c:	2800      	cmp	r0, #0
 800ef8e:	d0f9      	beq.n	800ef84 <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 800ef90:	490c      	ldr	r1, [pc, #48]	; (800efc4 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800ef92:	4620      	mov	r0, r4
 800ef94:	f008 faec 	bl	8017570 <usart_interrupt_flag_clear>
 800ef98:	f240 3105 	movw	r1, #773	; 0x305
 800ef9c:	4620      	mov	r0, r4
 800ef9e:	f008 fadb 	bl	8017558 <usart_interrupt_enable>
 800efa2:	4b06      	ldr	r3, [pc, #24]	; (800efbc <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800efa4:	2202      	movs	r2, #2
 800efa6:	e7e1      	b.n	800ef6c <Dmx::StartData(unsigned int, unsigned int)+0xdc>
 800efa8:	20001044 	andcs	r1, r0, r4, asr #32
 800efac:	20000004 	andcs	r0, r0, r4
 800efb0:	2000000c 	andcs	r0, r0, ip
 800efb4:	20000008 	andcs	r0, r0, r8
 800efb8:	e000e100 	and	lr, r0, r0, lsl #2
 800efbc:	2000103c 	andcs	r1, r0, ip, lsr r0
 800efc0:	20000814 	andcs	r0, r0, r4, lsl r8
 800efc4:	00050305 	andeq	r0, r5, r5, lsl #6

0800efc8 <Dmx::StopData(unsigned int, unsigned int)>:
 800efc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efcc:	4f1e      	ldr	r7, [pc, #120]	; (800f048 <Dmx::StopData(unsigned int, unsigned int)+0x80>)
 800efce:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800efd2:	4688      	mov	r8, r1
 800efd4:	4614      	mov	r4, r2
 800efd6:	b333      	cbz	r3, 800f026 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800efd8:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800efdc:	6943      	ldr	r3, [r0, #20]
 800efde:	bb23      	cbnz	r3, 800f02a <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800efe0:	4d1a      	ldr	r5, [pc, #104]	; (800f04c <Dmx::StopData(unsigned int, unsigned int)+0x84>)
 800efe2:	882b      	ldrh	r3, [r5, #0]
 800efe4:	2601      	movs	r6, #1
 800efe6:	fa06 f202 	lsl.w	r2, r6, r2
 800efea:	b29b      	uxth	r3, r3
 800efec:	ea23 0302 	bic.w	r3, r3, r2
 800eff0:	802b      	strh	r3, [r5, #0]
 800eff2:	f3bf 8f5f 	dmb	sy
 800eff6:	882b      	ldrh	r3, [r5, #0]
 800eff8:	f104 0208 	add.w	r2, r4, #8
 800effc:	b29b      	uxth	r3, r3
 800effe:	4096      	lsls	r6, r2
 800f000:	ea36 0303 	bics.w	r3, r6, r3
 800f004:	d105      	bne.n	800f012 <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800f006:	2107      	movs	r1, #7
 800f008:	4640      	mov	r0, r8
 800f00a:	f008 fa8f 	bl	801752c <usart_flag_get>
 800f00e:	2801      	cmp	r0, #1
 800f010:	d1f9      	bne.n	800f006 <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800f012:	882b      	ldrh	r3, [r5, #0]
 800f014:	b29b      	uxth	r3, r3
 800f016:	ea23 0306 	bic.w	r3, r3, r6
 800f01a:	802b      	strh	r3, [r5, #0]
 800f01c:	f3bf 8f4f 	dsb	sy
 800f020:	2300      	movs	r3, #0
 800f022:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800f026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f02a:	f240 3105 	movw	r1, #773	; 0x305
 800f02e:	4640      	mov	r0, r8
 800f030:	f008 fa9c 	bl	801756c <usart_interrupt_disable>
 800f034:	4b06      	ldr	r3, [pc, #24]	; (800f050 <Dmx::StopData(unsigned int, unsigned int)+0x88>)
 800f036:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f03a:	fb02 3304 	mla	r3, r2, r4, r3
 800f03e:	2200      	movs	r2, #0
 800f040:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800f044:	e7ec      	b.n	800f020 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800f046:	bf00      	nop
 800f048:	2000103c 	andcs	r1, r0, ip, lsr r0
 800f04c:	20001044 	andcs	r1, r0, r4, asr #32
 800f050:	20000814 	andcs	r0, r0, r4, lsl r8

0800f054 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800f054:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f056:	4605      	mov	r5, r0
 800f058:	460c      	mov	r4, r1
 800f05a:	4608      	mov	r0, r1
 800f05c:	4616      	mov	r6, r2
 800f05e:	461f      	mov	r7, r3
 800f060:	f7ff fe4e 	bl	800ed00 <_port_to_uart(unsigned int)>
 800f064:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800f068:	4601      	mov	r1, r0
 800f06a:	695a      	ldr	r2, [r3, #20]
 800f06c:	42b2      	cmp	r2, r6
 800f06e:	d01b      	beq.n	800f0a8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800f070:	9001      	str	r0, [sp, #4]
 800f072:	615e      	str	r6, [r3, #20]
 800f074:	4622      	mov	r2, r4
 800f076:	4628      	mov	r0, r5
 800f078:	f7ff ffa6 	bl	800efc8 <Dmx::StopData(unsigned int, unsigned int)>
 800f07c:	9901      	ldr	r1, [sp, #4]
 800f07e:	b94e      	cbnz	r6, 800f094 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800f080:	4b11      	ldr	r3, [pc, #68]	; (800f0c8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800f082:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800f086:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f08a:	685b      	ldr	r3, [r3, #4]
 800f08c:	6193      	str	r3, [r2, #24]
 800f08e:	b967      	cbnz	r7, 800f0aa <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800f090:	b003      	add	sp, #12
 800f092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f094:	2e01      	cmp	r6, #1
 800f096:	d1fa      	bne.n	800f08e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800f098:	4b0b      	ldr	r3, [pc, #44]	; (800f0c8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800f09a:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800f09e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f0a2:	685b      	ldr	r3, [r3, #4]
 800f0a4:	6293      	str	r3, [r2, #40]	; 0x28
 800f0a6:	e7f2      	b.n	800f08e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800f0a8:	b137      	cbz	r7, 800f0b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800f0aa:	4622      	mov	r2, r4
 800f0ac:	4628      	mov	r0, r5
 800f0ae:	b003      	add	sp, #12
 800f0b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f0b4:	f7ff beec 	b.w	800ee90 <Dmx::StartData(unsigned int, unsigned int)>
 800f0b8:	4622      	mov	r2, r4
 800f0ba:	4628      	mov	r0, r5
 800f0bc:	b003      	add	sp, #12
 800f0be:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f0c2:	f7ff bf81 	b.w	800efc8 <Dmx::StopData(unsigned int, unsigned int)>
 800f0c6:	bf00      	nop
 800f0c8:	0801a1f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sp, pc}

0800f0cc <Dmx::Dmx()>:
 800f0cc:	230c      	movs	r3, #12
 800f0ce:	225c      	movs	r2, #92	; 0x5c
 800f0d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0d4:	e9c0 2300 	strd	r2, r3, [r0]
 800f0d8:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800f0dc:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800f0e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 800f0e4:	8203      	strh	r3, [r0, #16]
 800f0e6:	4b46      	ldr	r3, [pc, #280]	; (800f200 <Dmx::Dmx()+0x134>)
 800f0e8:	4f46      	ldr	r7, [pc, #280]	; (800f204 <Dmx::Dmx()+0x138>)
 800f0ea:	6018      	str	r0, [r3, #0]
 800f0ec:	4b46      	ldr	r3, [pc, #280]	; (800f208 <Dmx::Dmx()+0x13c>)
 800f0ee:	2400      	movs	r4, #0
 800f0f0:	b08e      	sub	sp, #56	; 0x38
 800f0f2:	4605      	mov	r5, r0
 800f0f4:	801c      	strh	r4, [r3, #0]
 800f0f6:	4626      	mov	r6, r4
 800f0f8:	e9d7 0800 	ldrd	r0, r8, [r7]
 800f0fc:	2202      	movs	r2, #2
 800f0fe:	4643      	mov	r3, r8
 800f100:	2101      	movs	r1, #1
 800f102:	9003      	str	r0, [sp, #12]
 800f104:	f007 fda0 	bl	8016c48 <gpio_mode_set>
 800f108:	4643      	mov	r3, r8
 800f10a:	9803      	ldr	r0, [sp, #12]
 800f10c:	2202      	movs	r2, #2
 800f10e:	2100      	movs	r1, #0
 800f110:	f007 fdba 	bl	8016c88 <gpio_output_options_set>
 800f114:	4642      	mov	r2, r8
 800f116:	9803      	ldr	r0, [sp, #12]
 800f118:	2100      	movs	r1, #0
 800f11a:	f007 fdd0 	bl	8016cbe <gpio_af_set>
 800f11e:	4621      	mov	r1, r4
 800f120:	4628      	mov	r0, r5
 800f122:	f7ff fe9d 	bl	800ee60 <Dmx::ClearData(unsigned int)>
 800f126:	4b39      	ldr	r3, [pc, #228]	; (800f20c <Dmx::Dmx()+0x140>)
 800f128:	2201      	movs	r2, #1
 800f12a:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800f12e:	4621      	mov	r1, r4
 800f130:	2300      	movs	r3, #0
 800f132:	4628      	mov	r0, r5
 800f134:	f7ff ff8e 	bl	800f054 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800f138:	4b35      	ldr	r3, [pc, #212]	; (800f210 <Dmx::Dmx()+0x144>)
 800f13a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f13e:	fb02 3304 	mla	r3, r2, r4, r3
 800f142:	3708      	adds	r7, #8
 800f144:	f8c3 620c 	str.w	r6, [r3, #524]	; 0x20c
 800f148:	2c00      	cmp	r4, #0
 800f14a:	d056      	beq.n	800f1fa <Dmx::Dmx()+0x12e>
 800f14c:	f640 4015 	movw	r0, #3093	; 0xc15
 800f150:	f007 fdf6 	bl	8016d40 <rcu_periph_clock_enable>
 800f154:	f640 4016 	movw	r0, #3094	; 0xc16
 800f158:	f007 fdf2 	bl	8016d40 <rcu_periph_clock_enable>
 800f15c:	482d      	ldr	r0, [pc, #180]	; (800f214 <Dmx::Dmx()+0x148>)
 800f15e:	2103      	movs	r1, #3
 800f160:	f007 f8a4 	bl	80162ac <dma_deinit>
 800f164:	4b2c      	ldr	r3, [pc, #176]	; (800f218 <Dmx::Dmx()+0x14c>)
 800f166:	482b      	ldr	r0, [pc, #172]	; (800f214 <Dmx::Dmx()+0x148>)
 800f168:	9608      	str	r6, [sp, #32]
 800f16a:	aa05      	add	r2, sp, #20
 800f16c:	f04f 0840 	mov.w	r8, #64	; 0x40
 800f170:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800f174:	2103      	movs	r1, #3
 800f176:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f17a:	9609      	str	r6, [sp, #36]	; 0x24
 800f17c:	970d      	str	r7, [sp, #52]	; 0x34
 800f17e:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f182:	f007 f8ca 	bl	801631a <dma_single_data_mode_init>
 800f186:	4823      	ldr	r0, [pc, #140]	; (800f214 <Dmx::Dmx()+0x148>)
 800f188:	2103      	movs	r1, #3
 800f18a:	f007 f905 	bl	8016398 <dma_circulation_disable>
 800f18e:	2204      	movs	r2, #4
 800f190:	4820      	ldr	r0, [pc, #128]	; (800f214 <Dmx::Dmx()+0x148>)
 800f192:	2103      	movs	r1, #3
 800f194:	f007 f908 	bl	80163a8 <dma_channel_subperipheral_select>
 800f198:	4820      	ldr	r0, [pc, #128]	; (800f21c <Dmx::Dmx()+0x150>)
 800f19a:	2106      	movs	r1, #6
 800f19c:	f007 f886 	bl	80162ac <dma_deinit>
 800f1a0:	4b1f      	ldr	r3, [pc, #124]	; (800f220 <Dmx::Dmx()+0x154>)
 800f1a2:	481e      	ldr	r0, [pc, #120]	; (800f21c <Dmx::Dmx()+0x150>)
 800f1a4:	9608      	str	r6, [sp, #32]
 800f1a6:	aa05      	add	r2, sp, #20
 800f1a8:	2106      	movs	r1, #6
 800f1aa:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f1ae:	9609      	str	r6, [sp, #36]	; 0x24
 800f1b0:	970d      	str	r7, [sp, #52]	; 0x34
 800f1b2:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f1b6:	f007 f8b0 	bl	801631a <dma_single_data_mode_init>
 800f1ba:	4818      	ldr	r0, [pc, #96]	; (800f21c <Dmx::Dmx()+0x150>)
 800f1bc:	4c19      	ldr	r4, [pc, #100]	; (800f224 <Dmx::Dmx()+0x158>)
 800f1be:	2106      	movs	r1, #6
 800f1c0:	f007 f8ea 	bl	8016398 <dma_circulation_disable>
 800f1c4:	2702      	movs	r7, #2
 800f1c6:	4815      	ldr	r0, [pc, #84]	; (800f21c <Dmx::Dmx()+0x150>)
 800f1c8:	2205      	movs	r2, #5
 800f1ca:	2106      	movs	r1, #6
 800f1cc:	f007 f8ec 	bl	80163a8 <dma_channel_subperipheral_select>
 800f1d0:	2680      	movs	r6, #128	; 0x80
 800f1d2:	4915      	ldr	r1, [pc, #84]	; (800f228 <Dmx::Dmx()+0x15c>)
 800f1d4:	4815      	ldr	r0, [pc, #84]	; (800f22c <Dmx::Dmx()+0x160>)
 800f1d6:	9700      	str	r7, [sp, #0]
 800f1d8:	2300      	movs	r3, #0
 800f1da:	2208      	movs	r2, #8
 800f1dc:	f008 fd16 	bl	8017c0c <gd32_uart_begin>
 800f1e0:	6066      	str	r6, [r4, #4]
 800f1e2:	4911      	ldr	r1, [pc, #68]	; (800f228 <Dmx::Dmx()+0x15c>)
 800f1e4:	4812      	ldr	r0, [pc, #72]	; (800f230 <Dmx::Dmx()+0x164>)
 800f1e6:	9700      	str	r7, [sp, #0]
 800f1e8:	2300      	movs	r3, #0
 800f1ea:	2208      	movs	r2, #8
 800f1ec:	f008 fd0e 	bl	8017c0c <gd32_uart_begin>
 800f1f0:	4628      	mov	r0, r5
 800f1f2:	60a6      	str	r6, [r4, #8]
 800f1f4:	b00e      	add	sp, #56	; 0x38
 800f1f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1fa:	2401      	movs	r4, #1
 800f1fc:	e77c      	b.n	800f0f8 <Dmx::Dmx()+0x2c>
 800f1fe:	bf00      	nop
 800f200:	20001048 	andcs	r1, r0, r8, asr #32
 800f204:	0801a1f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sp, pc}
 800f208:	20001044 	andcs	r1, r0, r4, asr #32
 800f20c:	2000103c 	andcs	r1, r0, ip, lsr r0
 800f210:	20000814 	andcs	r0, r0, r4, lsl r8
 800f214:	40026000 	andmi	r6, r2, r0
 800f218:	40004804 	andmi	r4, r0, r4, lsl #16
 800f21c:	40026400 	andmi	r6, r2, r0, lsl #8
 800f220:	40011404 	andmi	r1, r1, r4, lsl #8
 800f224:	e000e100 	and	lr, r0, r0, lsl #2
 800f228:	0003d090 	muleq	r3, r0, r0
 800f22c:	40004800 	andmi	r4, r0, r0, lsl #16
 800f230:	40011400 	andmi	r1, r1, r0, lsl #8

0800f234 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800f234:	4b0f      	ldr	r3, [pc, #60]	; (800f274 <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 800f236:	60c1      	str	r1, [r0, #12]
 800f238:	f8b3 2406 	ldrh.w	r2, [r3, #1030]	; 0x406
 800f23c:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800f240:	480d      	ldr	r0, [pc, #52]	; (800f278 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 800f242:	429a      	cmp	r2, r3
 800f244:	bf38      	it	cc
 800f246:	461a      	movcc	r2, r3
 800f248:	4b0c      	ldr	r3, [pc, #48]	; (800f27c <Dmx::SetDmxPeriodTime(unsigned int)+0x48>)
 800f24a:	6800      	ldr	r0, [r0, #0]
 800f24c:	681b      	ldr	r3, [r3, #0]
 800f24e:	4403      	add	r3, r0
 800f250:	202c      	movs	r0, #44	; 0x2c
 800f252:	fb00 3302 	mla	r3, r0, r2, r3
 800f256:	b151      	cbz	r1, 800f26e <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800f258:	4299      	cmp	r1, r3
 800f25a:	d205      	bcs.n	800f268 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800f25c:	1819      	adds	r1, r3, r0
 800f25e:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800f262:	4299      	cmp	r1, r3
 800f264:	bf38      	it	cc
 800f266:	4619      	movcc	r1, r3
 800f268:	4b05      	ldr	r3, [pc, #20]	; (800f280 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>)
 800f26a:	6019      	str	r1, [r3, #0]
 800f26c:	4770      	bx	lr
 800f26e:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800f272:	e7f4      	b.n	800f25e <Dmx::SetDmxPeriodTime(unsigned int)+0x2a>
 800f274:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f278:	20000008 	andcs	r0, r0, r8
 800f27c:	2000000c 	andcs	r0, r0, ip
 800f280:	20000004 	andcs	r0, r0, r4

0800f284 <Dmx::SetDmxBreakTime(unsigned int)>:
 800f284:	295c      	cmp	r1, #92	; 0x5c
 800f286:	4b03      	ldr	r3, [pc, #12]	; (800f294 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800f288:	bf38      	it	cc
 800f28a:	215c      	movcc	r1, #92	; 0x5c
 800f28c:	6019      	str	r1, [r3, #0]
 800f28e:	68c1      	ldr	r1, [r0, #12]
 800f290:	f7ff bfd0 	b.w	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f294:	2000000c 	andcs	r0, r0, ip

0800f298 <Dmx::SetDmxMabTime(unsigned int)>:
 800f298:	290c      	cmp	r1, #12
 800f29a:	4b03      	ldr	r3, [pc, #12]	; (800f2a8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800f29c:	bf38      	it	cc
 800f29e:	210c      	movcc	r1, #12
 800f2a0:	6019      	str	r1, [r3, #0]
 800f2a2:	68c1      	ldr	r1, [r0, #12]
 800f2a4:	f7ff bfc6 	b.w	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f2a8:	20000008 	andcs	r0, r0, r8

0800f2ac <Dmx::SetDmxSlots(unsigned short)>:
 800f2ac:	1e8b      	subs	r3, r1, #2
 800f2ae:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800f2b2:	d80f      	bhi.n	800f2d4 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800f2b4:	69c3      	ldr	r3, [r0, #28]
 800f2b6:	8201      	strh	r1, [r0, #16]
 800f2b8:	b11b      	cbz	r3, 800f2c2 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800f2ba:	4299      	cmp	r1, r3
 800f2bc:	bf94      	ite	ls
 800f2be:	61c1      	strls	r1, [r0, #28]
 800f2c0:	61c3      	strhi	r3, [r0, #28]
 800f2c2:	6a03      	ldr	r3, [r0, #32]
 800f2c4:	b11b      	cbz	r3, 800f2ce <Dmx::SetDmxSlots(unsigned short)+0x22>
 800f2c6:	4299      	cmp	r1, r3
 800f2c8:	bf94      	ite	ls
 800f2ca:	6201      	strls	r1, [r0, #32]
 800f2cc:	6203      	strhi	r3, [r0, #32]
 800f2ce:	68c1      	ldr	r1, [r0, #12]
 800f2d0:	f7ff bfb0 	b.w	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f2d4:	4770      	bx	lr
	...

0800f2d8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800f2d8:	b470      	push	{r4, r5, r6}
 800f2da:	8a04      	ldrh	r4, [r0, #16]
 800f2dc:	f892 f000 	pld	[r2]
 800f2e0:	42a3      	cmp	r3, r4
 800f2e2:	bf28      	it	cs
 800f2e4:	4623      	movcs	r3, r4
 800f2e6:	4c0e      	ldr	r4, [pc, #56]	; (800f320 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800f2e8:	f44f 7501 	mov.w	r5, #516	; 0x204
 800f2ec:	fb05 4401 	mla	r4, r5, r1, r4
 800f2f0:	1c5d      	adds	r5, r3, #1
 800f2f2:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800f2f6:	18d5      	adds	r5, r2, r3
 800f2f8:	4295      	cmp	r5, r2
 800f2fa:	d109      	bne.n	800f310 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800f2fc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800f300:	69ca      	ldr	r2, [r1, #28]
 800f302:	429a      	cmp	r2, r3
 800f304:	d009      	beq.n	800f31a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800f306:	61cb      	str	r3, [r1, #28]
 800f308:	bc70      	pop	{r4, r5, r6}
 800f30a:	68c1      	ldr	r1, [r0, #12]
 800f30c:	f7ff bf92 	b.w	800f234 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f310:	f812 6b01 	ldrb.w	r6, [r2], #1
 800f314:	f804 6f01 	strb.w	r6, [r4, #1]!
 800f318:	e7ee      	b.n	800f2f8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800f31a:	bc70      	pop	{r4, r5, r6}
 800f31c:	4770      	bx	lr
 800f31e:	bf00      	nop
 800f320:	20000c34 	andcs	r0, r0, r4, lsr ip

0800f324 <Dmx::Blackout()>:
 800f324:	b538      	push	{r3, r4, r5, lr}
 800f326:	4c1e      	ldr	r4, [pc, #120]	; (800f3a0 <Dmx::Blackout()+0x7c>)
 800f328:	8823      	ldrh	r3, [r4, #0]
 800f32a:	b29b      	uxth	r3, r3
 800f32c:	b3bb      	cbz	r3, 800f39e <Dmx::Blackout()+0x7a>
 800f32e:	f3bf 8f5f 	dmb	sy
 800f332:	8823      	ldrh	r3, [r4, #0]
 800f334:	05da      	lsls	r2, r3, #23
 800f336:	d515      	bpl.n	800f364 <Dmx::Blackout()+0x40>
 800f338:	2000      	movs	r0, #0
 800f33a:	f7ff fce1 	bl	800ed00 <_port_to_uart(unsigned int)>
 800f33e:	4605      	mov	r5, r0
 800f340:	2107      	movs	r1, #7
 800f342:	4628      	mov	r0, r5
 800f344:	f008 f8f2 	bl	801752c <usart_flag_get>
 800f348:	2801      	cmp	r0, #1
 800f34a:	d1f9      	bne.n	800f340 <Dmx::Blackout()+0x1c>
 800f34c:	4b15      	ldr	r3, [pc, #84]	; (800f3a4 <Dmx::Blackout()+0x80>)
 800f34e:	2000      	movs	r0, #0
 800f350:	461a      	mov	r2, r3
 800f352:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f356:	f823 0b02 	strh.w	r0, [r3], #2
 800f35a:	428b      	cmp	r3, r1
 800f35c:	d1fb      	bne.n	800f356 <Dmx::Blackout()+0x32>
 800f35e:	f04f 0300 	mov.w	r3, #0
 800f362:	7013      	strb	r3, [r2, #0]
 800f364:	f3bf 8f5f 	dmb	sy
 800f368:	8823      	ldrh	r3, [r4, #0]
 800f36a:	059b      	lsls	r3, r3, #22
 800f36c:	d517      	bpl.n	800f39e <Dmx::Blackout()+0x7a>
 800f36e:	2001      	movs	r0, #1
 800f370:	f7ff fcc6 	bl	800ed00 <_port_to_uart(unsigned int)>
 800f374:	4604      	mov	r4, r0
 800f376:	2107      	movs	r1, #7
 800f378:	4620      	mov	r0, r4
 800f37a:	f008 f8d7 	bl	801752c <usart_flag_get>
 800f37e:	2801      	cmp	r0, #1
 800f380:	d1f9      	bne.n	800f376 <Dmx::Blackout()+0x52>
 800f382:	4b09      	ldr	r3, [pc, #36]	; (800f3a8 <Dmx::Blackout()+0x84>)
 800f384:	2000      	movs	r0, #0
 800f386:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f38a:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f38e:	f823 0b02 	strh.w	r0, [r3], #2
 800f392:	428b      	cmp	r3, r1
 800f394:	d1fb      	bne.n	800f38e <Dmx::Blackout()+0x6a>
 800f396:	f04f 0300 	mov.w	r3, #0
 800f39a:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f39e:	bd38      	pop	{r3, r4, r5, pc}
 800f3a0:	20001044 	andcs	r1, r0, r4, asr #32
 800f3a4:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f3a8:	20000e38 	andcs	r0, r0, r8, lsr lr

0800f3ac <Dmx::FullOn()>:
 800f3ac:	b538      	push	{r3, r4, r5, lr}
 800f3ae:	4c1e      	ldr	r4, [pc, #120]	; (800f428 <Dmx::FullOn()+0x7c>)
 800f3b0:	8823      	ldrh	r3, [r4, #0]
 800f3b2:	b29b      	uxth	r3, r3
 800f3b4:	b3bb      	cbz	r3, 800f426 <Dmx::FullOn()+0x7a>
 800f3b6:	f3bf 8f5f 	dmb	sy
 800f3ba:	8823      	ldrh	r3, [r4, #0]
 800f3bc:	05da      	lsls	r2, r3, #23
 800f3be:	d515      	bpl.n	800f3ec <Dmx::FullOn()+0x40>
 800f3c0:	2000      	movs	r0, #0
 800f3c2:	f7ff fc9d 	bl	800ed00 <_port_to_uart(unsigned int)>
 800f3c6:	4605      	mov	r5, r0
 800f3c8:	2107      	movs	r1, #7
 800f3ca:	4628      	mov	r0, r5
 800f3cc:	f008 f8ae 	bl	801752c <usart_flag_get>
 800f3d0:	2801      	cmp	r0, #1
 800f3d2:	d1f9      	bne.n	800f3c8 <Dmx::FullOn()+0x1c>
 800f3d4:	4b15      	ldr	r3, [pc, #84]	; (800f42c <Dmx::FullOn()+0x80>)
 800f3d6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f3da:	461a      	mov	r2, r3
 800f3dc:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f3e0:	f823 0b02 	strh.w	r0, [r3], #2
 800f3e4:	428b      	cmp	r3, r1
 800f3e6:	d1fb      	bne.n	800f3e0 <Dmx::FullOn()+0x34>
 800f3e8:	2300      	movs	r3, #0
 800f3ea:	7013      	strb	r3, [r2, #0]
 800f3ec:	f3bf 8f5f 	dmb	sy
 800f3f0:	8823      	ldrh	r3, [r4, #0]
 800f3f2:	059b      	lsls	r3, r3, #22
 800f3f4:	d517      	bpl.n	800f426 <Dmx::FullOn()+0x7a>
 800f3f6:	2001      	movs	r0, #1
 800f3f8:	f7ff fc82 	bl	800ed00 <_port_to_uart(unsigned int)>
 800f3fc:	4604      	mov	r4, r0
 800f3fe:	2107      	movs	r1, #7
 800f400:	4620      	mov	r0, r4
 800f402:	f008 f893 	bl	801752c <usart_flag_get>
 800f406:	2801      	cmp	r0, #1
 800f408:	d1f9      	bne.n	800f3fe <Dmx::FullOn()+0x52>
 800f40a:	4b09      	ldr	r3, [pc, #36]	; (800f430 <Dmx::FullOn()+0x84>)
 800f40c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f410:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f414:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f418:	f823 0b02 	strh.w	r0, [r3], #2
 800f41c:	428b      	cmp	r3, r1
 800f41e:	d1fb      	bne.n	800f418 <Dmx::FullOn()+0x6c>
 800f420:	2300      	movs	r3, #0
 800f422:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f426:	bd38      	pop	{r3, r4, r5, pc}
 800f428:	20001044 	andcs	r1, r0, r4, asr #32
 800f42c:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f430:	20000e38 	andcs	r0, r0, r8, lsr lr

0800f434 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800f434:	2000      	movs	r0, #0
 800f436:	4770      	bx	lr

0800f438 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800f438:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f43c:	4770      	bx	lr

0800f43e <WS28xxDmxMulti::GetDmxFootprint()>:
 800f43e:	2000      	movs	r0, #0
 800f440:	4770      	bx	lr
	...

0800f444 <WS28xxDmxMulti::Start(unsigned int)>:
 800f444:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f446:	4604      	mov	r4, r0
 800f448:	9100      	str	r1, [sp, #0]
 800f44a:	234b      	movs	r3, #75	; 0x4b
 800f44c:	4a09      	ldr	r2, [pc, #36]	; (800f474 <WS28xxDmxMulti::Start(unsigned int)+0x30>)
 800f44e:	480a      	ldr	r0, [pc, #40]	; (800f478 <WS28xxDmxMulti::Start(unsigned int)+0x34>)
 800f450:	460d      	mov	r5, r1
 800f452:	490a      	ldr	r1, [pc, #40]	; (800f47c <WS28xxDmxMulti::Start(unsigned int)+0x38>)
 800f454:	f7fb f818 	bl	800a488 <printf>
 800f458:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f45a:	b923      	cbnz	r3, 800f466 <WS28xxDmxMulti::Start(unsigned int)+0x22>
 800f45c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f45e:	b110      	cbz	r0, 800f466 <WS28xxDmxMulti::Start(unsigned int)+0x22>
 800f460:	6803      	ldr	r3, [r0, #0]
 800f462:	689b      	ldr	r3, [r3, #8]
 800f464:	4798      	blx	r3
 800f466:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f468:	2201      	movs	r2, #1
 800f46a:	40aa      	lsls	r2, r5
 800f46c:	4313      	orrs	r3, r2
 800f46e:	6523      	str	r3, [r4, #80]	; 0x50
 800f470:	b003      	add	sp, #12
 800f472:	bd30      	pop	{r4, r5, pc}
 800f474:	0801a204 	stmdaeq	r1, {r2, r9, sp, pc}
 800f478:	0801a21f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sp, pc}
 800f47c:	0801871c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, pc}

0800f480 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f480:	b538      	push	{r3, r4, r5, lr}
 800f482:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800f484:	4b05      	ldr	r3, [pc, #20]	; (800f49c <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800f486:	6003      	str	r3, [r0, #0]
 800f488:	4604      	mov	r4, r0
 800f48a:	b12d      	cbz	r5, 800f498 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800f48c:	4628      	mov	r0, r5
 800f48e:	f001 fc99 	bl	8010dc4 <WS28xxMulti::~WS28xxMulti()>
 800f492:	4628      	mov	r0, r5
 800f494:	f006 fbaa 	bl	8015bec <operator delete(void*)>
 800f498:	4620      	mov	r0, r4
 800f49a:	bd38      	pop	{r3, r4, r5, pc}
 800f49c:	0801a2dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp, pc}

0800f4a0 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f4a0:	b510      	push	{r4, lr}
 800f4a2:	4604      	mov	r4, r0
 800f4a4:	f7ff ffec 	bl	800f480 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800f4a8:	4620      	mov	r0, r4
 800f4aa:	f006 fb9f 	bl	8015bec <operator delete(void*)>
 800f4ae:	4620      	mov	r0, r4
 800f4b0:	bd10      	pop	{r4, pc}

0800f4b2 <WS28xxDmxMulti::Blackout(bool)>:
 800f4b2:	b538      	push	{r3, r4, r5, lr}
 800f4b4:	4604      	mov	r4, r0
 800f4b6:	460d      	mov	r5, r1
 800f4b8:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f4bc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f4be:	f002 f867 	bl	8011590 <WS28xxMulti::IsUpdating()>
 800f4c2:	2800      	cmp	r0, #0
 800f4c4:	d1fa      	bne.n	800f4bc <WS28xxDmxMulti::Blackout(bool)+0xa>
 800f4c6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f4c8:	b11d      	cbz	r5, 800f4d2 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800f4ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f4ce:	f001 bf9d 	b.w	801140c <WS28xxMulti::Blackout()>
 800f4d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f4d6:	f001 bef5 	b.w	80112c4 <WS28xxMulti::Update()>
	...

0800f4dc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800f4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4e0:	ed2d 8b02 	vpush	{d8}
 800f4e4:	b087      	sub	sp, #28
 800f4e6:	4605      	mov	r5, r0
 800f4e8:	9105      	str	r1, [sp, #20]
 800f4ea:	4698      	mov	r8, r3
 800f4ec:	9204      	str	r2, [sp, #16]
 800f4ee:	b92a      	cbnz	r2, 800f4fc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x20>
 800f4f0:	4b53      	ldr	r3, [pc, #332]	; (800f640 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x164>)
 800f4f2:	4a54      	ldr	r2, [pc, #336]	; (800f644 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f4f4:	4854      	ldr	r0, [pc, #336]	; (800f648 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f4f6:	2164      	movs	r1, #100	; 0x64
 800f4f8:	f7fa fcba 	bl	8009e70 <__assert_func>
 800f4fc:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 800f500:	d905      	bls.n	800f50e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800f502:	4b52      	ldr	r3, [pc, #328]	; (800f64c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x170>)
 800f504:	4a4f      	ldr	r2, [pc, #316]	; (800f644 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f506:	4850      	ldr	r0, [pc, #320]	; (800f648 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f508:	2165      	movs	r1, #101	; 0x65
 800f50a:	f7fa fcb1 	bl	8009e70 <__assert_func>
 800f50e:	6aec      	ldr	r4, [r5, #44]	; 0x2c
 800f510:	9b05      	ldr	r3, [sp, #20]
 800f512:	fbb3 f3f4 	udiv	r3, r3, r4
 800f516:	ee08 3a10 	vmov	s16, r3
 800f51a:	9b05      	ldr	r3, [sp, #20]
 800f51c:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 800f51e:	ee18 2a10 	vmov	r2, s16
 800f522:	fb04 3412 	mls	r4, r4, r2, r3
 800f526:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800f528:	2c03      	cmp	r4, #3
 800f52a:	d82b      	bhi.n	800f584 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa8>
 800f52c:	e8df f004 	tbb	[pc, r4]
 800f530:	2a282302 	bcs	8a18140 <__exidx_end+0x9fc080>
 800f534:	fbb8 f3f3 	udiv	r3, r8, r3
 800f538:	429f      	cmp	r7, r3
 800f53a:	bf28      	it	cs
 800f53c:	461f      	movcs	r7, r3
 800f53e:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f540:	f002 f826 	bl	8011590 <WS28xxMulti::IsUpdating()>
 800f544:	2800      	cmp	r0, #0
 800f546:	d1fa      	bne.n	800f53e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x62>
 800f548:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800f54a:	f8d5 a024 	ldr.w	sl, [r5, #36]	; 0x24
 800f54e:	2b03      	cmp	r3, #3
 800f550:	fb0a f604 	mul.w	r6, sl, r4
 800f554:	d13b      	bne.n	800f5ce <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf2>
 800f556:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f55a:	42bc      	cmp	r4, r7
 800f55c:	d323      	bcc.n	800f5a6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xca>
 800f55e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800f560:	9a05      	ldr	r2, [sp, #20]
 800f562:	4293      	cmp	r3, r2
 800f564:	d166      	bne.n	800f634 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x158>
 800f566:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f568:	b007      	add	sp, #28
 800f56a:	ecbd 8b02 	vpop	{d8}
 800f56e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f572:	f001 bea7 	b.w	80112c4 <WS28xxMulti::Update()>
 800f576:	6b6c      	ldr	r4, [r5, #52]	; 0x34
 800f578:	fbb8 f3f3 	udiv	r3, r8, r3
 800f57c:	4423      	add	r3, r4
 800f57e:	e7db      	b.n	800f538 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5c>
 800f580:	6bac      	ldr	r4, [r5, #56]	; 0x38
 800f582:	e7f9      	b.n	800f578 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9c>
 800f584:	6bec      	ldr	r4, [r5, #60]	; 0x3c
 800f586:	e7f7      	b.n	800f578 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9c>
 800f588:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f58c:	9301      	str	r3, [sp, #4]
 800f58e:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f592:	9300      	str	r3, [sp, #0]
 800f594:	f899 3000 	ldrb.w	r3, [r9]
 800f598:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f59a:	ee18 1a10 	vmov	r1, s16
 800f59e:	4432      	add	r2, r6
 800f5a0:	f002 f876 	bl	8011690 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f5a4:	e008      	b.n	800f5b8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800f5a6:	9b04      	ldr	r3, [sp, #16]
 800f5a8:	eba9 0303 	sub.w	r3, r9, r3
 800f5ac:	4598      	cmp	r8, r3
 800f5ae:	d9d6      	bls.n	800f55e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f5b0:	f899 f000 	pld	[r9]
 800f5b4:	f04f 0b00 	mov.w	fp, #0
 800f5b8:	fa1f f28b 	uxth.w	r2, fp
 800f5bc:	4552      	cmp	r2, sl
 800f5be:	f10b 0b01 	add.w	fp, fp, #1
 800f5c2:	d3e1      	bcc.n	800f588 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xac>
 800f5c4:	3401      	adds	r4, #1
 800f5c6:	f109 0903 	add.w	r9, r9, #3
 800f5ca:	4456      	add	r6, sl
 800f5cc:	e7c5      	b.n	800f55a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x7e>
 800f5ce:	2b04      	cmp	r3, #4
 800f5d0:	d005      	beq.n	800f5de <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x102>
 800f5d2:	4b1f      	ldr	r3, [pc, #124]	; (800f650 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x174>)
 800f5d4:	4a1b      	ldr	r2, [pc, #108]	; (800f644 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f5d6:	481c      	ldr	r0, [pc, #112]	; (800f648 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f5d8:	219c      	movs	r1, #156	; 0x9c
 800f5da:	f7fa fc49 	bl	8009e70 <__assert_func>
 800f5de:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f5e2:	e00d      	b.n	800f600 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x124>
 800f5e4:	f899 f000 	pld	[r9]
 800f5e8:	f04f 0b00 	mov.w	fp, #0
 800f5ec:	fa1f f28b 	uxth.w	r2, fp
 800f5f0:	4552      	cmp	r2, sl
 800f5f2:	f10b 0b01 	add.w	fp, fp, #1
 800f5f6:	d30b      	bcc.n	800f610 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x134>
 800f5f8:	3401      	adds	r4, #1
 800f5fa:	f109 0904 	add.w	r9, r9, #4
 800f5fe:	4456      	add	r6, sl
 800f600:	42bc      	cmp	r4, r7
 800f602:	d2ac      	bcs.n	800f55e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f604:	9b04      	ldr	r3, [sp, #16]
 800f606:	eba9 0303 	sub.w	r3, r9, r3
 800f60a:	4543      	cmp	r3, r8
 800f60c:	d3ea      	bcc.n	800f5e4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x108>
 800f60e:	e7a6      	b.n	800f55e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f610:	f899 3003 	ldrb.w	r3, [r9, #3]
 800f614:	9302      	str	r3, [sp, #8]
 800f616:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f61a:	9301      	str	r3, [sp, #4]
 800f61c:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f620:	9300      	str	r3, [sp, #0]
 800f622:	f899 3000 	ldrb.w	r3, [r9]
 800f626:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f628:	ee18 1a10 	vmov	r1, s16
 800f62c:	4432      	add	r2, r6
 800f62e:	f002 f8b1 	bl	8011794 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f632:	e7db      	b.n	800f5ec <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x110>
 800f634:	b007      	add	sp, #28
 800f636:	ecbd 8b02 	vpop	{d8}
 800f63a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f63e:	bf00      	nop
 800f640:	0801a235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp, pc}
 800f644:	0801a246 	stmdaeq	r1, {r1, r2, r6, r9, sp, pc}
 800f648:	0801a204 	stmdaeq	r1, {r2, r9, sp, pc}
 800f64c:	0801a24e 	stmdaeq	r1, {r1, r2, r3, r6, r9, sp, pc}
 800f650:	0801a26c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sp, pc}

0800f654 <WS28xxDmxMulti::FullOn()>:
 800f654:	b510      	push	{r4, lr}
 800f656:	4604      	mov	r4, r0
 800f658:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f65a:	f001 ff99 	bl	8011590 <WS28xxMulti::IsUpdating()>
 800f65e:	2800      	cmp	r0, #0
 800f660:	d1fa      	bne.n	800f658 <WS28xxDmxMulti::FullOn()+0x4>
 800f662:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f668:	f001 bf32 	b.w	80114d0 <WS28xxMulti::FullOn()>

0800f66c <WS28xxDmxMulti::Print()>:
 800f66c:	3004      	adds	r0, #4
 800f66e:	f000 be67 	b.w	8010340 <PixelDmxConfiguration::Print()>
	...

0800f674 <WS28xxDmxMulti::Stop(unsigned int)>:
 800f674:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f676:	4604      	mov	r4, r0
 800f678:	460d      	mov	r5, r1
 800f67a:	4a0e      	ldr	r2, [pc, #56]	; (800f6b4 <WS28xxDmxMulti::Stop(unsigned int)+0x40>)
 800f67c:	9100      	str	r1, [sp, #0]
 800f67e:	2356      	movs	r3, #86	; 0x56
 800f680:	490d      	ldr	r1, [pc, #52]	; (800f6b8 <WS28xxDmxMulti::Stop(unsigned int)+0x44>)
 800f682:	480e      	ldr	r0, [pc, #56]	; (800f6bc <WS28xxDmxMulti::Stop(unsigned int)+0x48>)
 800f684:	f7fa ff00 	bl	800a488 <printf>
 800f688:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f68a:	fa23 f205 	lsr.w	r2, r3, r5
 800f68e:	07d2      	lsls	r2, r2, #31
 800f690:	bf41      	itttt	mi
 800f692:	2201      	movmi	r2, #1
 800f694:	40aa      	lslmi	r2, r5
 800f696:	4393      	bicmi	r3, r2
 800f698:	6523      	strmi	r3, [r4, #80]	; 0x50
 800f69a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f69c:	b93b      	cbnz	r3, 800f6ae <WS28xxDmxMulti::Stop(unsigned int)+0x3a>
 800f69e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f6a0:	b128      	cbz	r0, 800f6ae <WS28xxDmxMulti::Stop(unsigned int)+0x3a>
 800f6a2:	6803      	ldr	r3, [r0, #0]
 800f6a4:	68db      	ldr	r3, [r3, #12]
 800f6a6:	b003      	add	sp, #12
 800f6a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f6ac:	4718      	bx	r3
 800f6ae:	b003      	add	sp, #12
 800f6b0:	bd30      	pop	{r4, r5, pc}
 800f6b2:	bf00      	nop
 800f6b4:	0801a204 	stmdaeq	r1, {r2, r9, sp, pc}
 800f6b8:	0801a285 	stmdaeq	r1, {r0, r2, r7, r9, sp, pc}
 800f6bc:	0801a21f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sp, pc}

0800f6c0 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800f6c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f6c4:	4604      	mov	r4, r0
 800f6c6:	4b21      	ldr	r3, [pc, #132]	; (800f74c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x8c>)
 800f6c8:	f844 3b04 	str.w	r3, [r4], #4
 800f6cc:	460d      	mov	r5, r1
 800f6ce:	4606      	mov	r6, r0
 800f6d0:	460f      	mov	r7, r1
 800f6d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f6d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f6d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f6d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f6da:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800f6de:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800f760 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0xa0>
 800f6e2:	4d1b      	ldr	r5, [pc, #108]	; (800f750 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x90>)
 800f6e4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f6e8:	2300      	movs	r3, #0
 800f6ea:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800f6ee:	6533      	str	r3, [r6, #80]	; 0x50
 800f6f0:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800f6f4:	4642      	mov	r2, r8
 800f6f6:	4629      	mov	r1, r5
 800f6f8:	2337      	movs	r3, #55	; 0x37
 800f6fa:	4816      	ldr	r0, [pc, #88]	; (800f754 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x94>)
 800f6fc:	f7fa fec4 	bl	800a488 <printf>
 800f700:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800f704:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800f708:	1d30      	adds	r0, r6, #4
 800f70a:	2110      	movs	r1, #16
 800f70c:	f000 fdb6 	bl	801027c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800f710:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800f712:	9300      	str	r3, [sp, #0]
 800f714:	462a      	mov	r2, r5
 800f716:	233b      	movs	r3, #59	; 0x3b
 800f718:	4641      	mov	r1, r8
 800f71a:	480f      	ldr	r0, [pc, #60]	; (800f758 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x98>)
 800f71c:	f7fa feb4 	bl	800a488 <printf>
 800f720:	2020      	movs	r0, #32
 800f722:	f006 fa67 	bl	8015bf4 <operator new(unsigned int)>
 800f726:	4639      	mov	r1, r7
 800f728:	4604      	mov	r4, r0
 800f72a:	f001 fd6d 	bl	8011208 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800f72e:	4620      	mov	r0, r4
 800f730:	64b4      	str	r4, [r6, #72]	; 0x48
 800f732:	f001 fe6b 	bl	801140c <WS28xxMulti::Blackout()>
 800f736:	2342      	movs	r3, #66	; 0x42
 800f738:	4642      	mov	r2, r8
 800f73a:	4629      	mov	r1, r5
 800f73c:	4807      	ldr	r0, [pc, #28]	; (800f75c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x9c>)
 800f73e:	f7fa fea3 	bl	800a488 <printf>
 800f742:	4630      	mov	r0, r6
 800f744:	b002      	add	sp, #8
 800f746:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f74a:	bf00      	nop
 800f74c:	0801a2dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp, pc}
 800f750:	0801a204 	stmdaeq	r1, {r2, r9, sp, pc}
 800f754:	08018745 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, pc}
 800f758:	0801a299 	stmdaeq	r1, {r0, r3, r4, r7, r9, sp, pc}
 800f75c:	08018767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, pc}
 800f760:	0801a28a 	stmdaeq	r1, {r1, r3, r7, r9, sp, pc}

0800f764 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800f764:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f766:	88c6      	ldrh	r6, [r0, #6]
 800f768:	8885      	ldrh	r5, [r0, #4]
 800f76a:	42ae      	cmp	r6, r5
 800f76c:	d216      	bcs.n	800f79c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800f76e:	4604      	mov	r4, r0
 800f770:	6800      	ldr	r0, [r0, #0]
 800f772:	1bad      	subs	r5, r5, r6
 800f774:	4430      	add	r0, r6
 800f776:	7a26      	ldrb	r6, [r4, #8]
 800f778:	b923      	cbnz	r3, 800f784 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800f77a:	b926      	cbnz	r6, 800f786 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800f77c:	9200      	str	r2, [sp, #0]
 800f77e:	460b      	mov	r3, r1
 800f780:	4a09      	ldr	r2, [pc, #36]	; (800f7a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800f782:	e003      	b.n	800f78c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f784:	b166      	cbz	r6, 800f7a0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800f786:	9200      	str	r2, [sp, #0]
 800f788:	4a08      	ldr	r2, [pc, #32]	; (800f7ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800f78a:	460b      	mov	r3, r1
 800f78c:	4629      	mov	r1, r5
 800f78e:	f7fa fea3 	bl	800a4d8 <snprintf>
 800f792:	4285      	cmp	r5, r0
 800f794:	bfa2      	ittt	ge
 800f796:	88e3      	ldrhge	r3, [r4, #6]
 800f798:	181b      	addge	r3, r3, r0
 800f79a:	80e3      	strhge	r3, [r4, #6]
 800f79c:	b002      	add	sp, #8
 800f79e:	bd70      	pop	{r4, r5, r6, pc}
 800f7a0:	9200      	str	r2, [sp, #0]
 800f7a2:	460b      	mov	r3, r1
 800f7a4:	4a02      	ldr	r2, [pc, #8]	; (800f7b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f7a6:	e7f1      	b.n	800f78c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f7a8:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800f7ac:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800f7b0:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800f7b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800f7b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f7b6:	88c6      	ldrh	r6, [r0, #6]
 800f7b8:	8885      	ldrh	r5, [r0, #4]
 800f7ba:	42ae      	cmp	r6, r5
 800f7bc:	d216      	bcs.n	800f7ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800f7be:	4604      	mov	r4, r0
 800f7c0:	6800      	ldr	r0, [r0, #0]
 800f7c2:	1bad      	subs	r5, r5, r6
 800f7c4:	4430      	add	r0, r6
 800f7c6:	7a26      	ldrb	r6, [r4, #8]
 800f7c8:	b923      	cbnz	r3, 800f7d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800f7ca:	b926      	cbnz	r6, 800f7d6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800f7cc:	9200      	str	r2, [sp, #0]
 800f7ce:	460b      	mov	r3, r1
 800f7d0:	4a09      	ldr	r2, [pc, #36]	; (800f7f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800f7d2:	e003      	b.n	800f7dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f7d4:	b166      	cbz	r6, 800f7f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800f7d6:	9200      	str	r2, [sp, #0]
 800f7d8:	4a08      	ldr	r2, [pc, #32]	; (800f7fc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800f7da:	460b      	mov	r3, r1
 800f7dc:	4629      	mov	r1, r5
 800f7de:	f7fa fe7b 	bl	800a4d8 <snprintf>
 800f7e2:	4285      	cmp	r5, r0
 800f7e4:	bfa2      	ittt	ge
 800f7e6:	88e3      	ldrhge	r3, [r4, #6]
 800f7e8:	181b      	addge	r3, r3, r0
 800f7ea:	80e3      	strhge	r3, [r4, #6]
 800f7ec:	b002      	add	sp, #8
 800f7ee:	bd70      	pop	{r4, r5, r6, pc}
 800f7f0:	9200      	str	r2, [sp, #0]
 800f7f2:	460b      	mov	r3, r1
 800f7f4:	4a02      	ldr	r2, [pc, #8]	; (800f800 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f7f6:	e7f1      	b.n	800f7dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f7f8:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800f7fc:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800f800:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800f804 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800f804:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f806:	88c6      	ldrh	r6, [r0, #6]
 800f808:	8885      	ldrh	r5, [r0, #4]
 800f80a:	42ae      	cmp	r6, r5
 800f80c:	d216      	bcs.n	800f83c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800f80e:	4604      	mov	r4, r0
 800f810:	6800      	ldr	r0, [r0, #0]
 800f812:	1bad      	subs	r5, r5, r6
 800f814:	4430      	add	r0, r6
 800f816:	7a26      	ldrb	r6, [r4, #8]
 800f818:	b923      	cbnz	r3, 800f824 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800f81a:	b926      	cbnz	r6, 800f826 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800f81c:	9200      	str	r2, [sp, #0]
 800f81e:	460b      	mov	r3, r1
 800f820:	4a09      	ldr	r2, [pc, #36]	; (800f848 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800f822:	e003      	b.n	800f82c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f824:	b166      	cbz	r6, 800f840 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800f826:	9200      	str	r2, [sp, #0]
 800f828:	4a08      	ldr	r2, [pc, #32]	; (800f84c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800f82a:	460b      	mov	r3, r1
 800f82c:	4629      	mov	r1, r5
 800f82e:	f7fa fe53 	bl	800a4d8 <snprintf>
 800f832:	4285      	cmp	r5, r0
 800f834:	bfa2      	ittt	ge
 800f836:	88e3      	ldrhge	r3, [r4, #6]
 800f838:	181b      	addge	r3, r3, r0
 800f83a:	80e3      	strhge	r3, [r4, #6]
 800f83c:	b002      	add	sp, #8
 800f83e:	bd70      	pop	{r4, r5, r6, pc}
 800f840:	9200      	str	r2, [sp, #0]
 800f842:	460b      	mov	r3, r1
 800f844:	4a02      	ldr	r2, [pc, #8]	; (800f850 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f846:	e7f1      	b.n	800f82c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f848:	08018c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, pc}
 800f84c:	08018c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, pc}
 800f850:	08018c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, pc}

0800f854 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800f854:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f858:	8885      	ldrh	r5, [r0, #4]
 800f85a:	4698      	mov	r8, r3
 800f85c:	88c3      	ldrh	r3, [r0, #6]
 800f85e:	42ab      	cmp	r3, r5
 800f860:	4604      	mov	r4, r0
 800f862:	d229      	bcs.n	800f8b8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800f864:	6826      	ldr	r6, [r4, #0]
 800f866:	f894 9008 	ldrb.w	r9, [r4, #8]
 800f86a:	4692      	mov	sl, r2
 800f86c:	ee10 0a10 	vmov	r0, s0
 800f870:	460f      	mov	r7, r1
 800f872:	441e      	add	r6, r3
 800f874:	1aed      	subs	r5, r5, r3
 800f876:	f7f9 fb8d 	bl	8008f94 <__aeabi_f2d>
 800f87a:	f1ba 0f00 	cmp.w	sl, #0
 800f87e:	d109      	bne.n	800f894 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800f880:	f1b9 0f00 	cmp.w	r9, #0
 800f884:	d109      	bne.n	800f89a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800f886:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f88a:	4a10      	ldr	r2, [pc, #64]	; (800f8cc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800f88c:	f8cd 8000 	str.w	r8, [sp]
 800f890:	463b      	mov	r3, r7
 800f892:	e008      	b.n	800f8a6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f894:	f1b9 0f00 	cmp.w	r9, #0
 800f898:	d011      	beq.n	800f8be <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800f89a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f89e:	4a0c      	ldr	r2, [pc, #48]	; (800f8d0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800f8a0:	f8cd 8000 	str.w	r8, [sp]
 800f8a4:	463b      	mov	r3, r7
 800f8a6:	4629      	mov	r1, r5
 800f8a8:	4630      	mov	r0, r6
 800f8aa:	f7fa fe15 	bl	800a4d8 <snprintf>
 800f8ae:	4285      	cmp	r5, r0
 800f8b0:	bfa2      	ittt	ge
 800f8b2:	88e3      	ldrhge	r3, [r4, #6]
 800f8b4:	18c0      	addge	r0, r0, r3
 800f8b6:	80e0      	strhge	r0, [r4, #6]
 800f8b8:	b004      	add	sp, #16
 800f8ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f8c2:	4a04      	ldr	r2, [pc, #16]	; (800f8d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800f8c4:	f8cd 8000 	str.w	r8, [sp]
 800f8c8:	463b      	mov	r3, r7
 800f8ca:	e7ec      	b.n	800f8a6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f8cc:	0801a317 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, sp, pc}
 800f8d0:	0801a30c 	stmdaeq	r1, {r2, r3, r8, r9, sp, pc}
 800f8d4:	0801a318 	stmdaeq	r1, {r3, r4, r8, r9, sp, pc}

0800f8d8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800f8d8:	6001      	str	r1, [r0, #0]
 800f8da:	2106      	movs	r1, #6
 800f8dc:	2200      	movs	r2, #0
 800f8de:	75c1      	strb	r1, [r0, #23]
 800f8e0:	490b      	ldr	r1, [pc, #44]	; (800f910 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800f8e2:	7582      	strb	r2, [r0, #22]
 800f8e4:	8302      	strh	r2, [r0, #24]
 800f8e6:	6042      	str	r2, [r0, #4]
 800f8e8:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 800f8ec:	e9c0 1202 	strd	r1, r2, [r0, #8]
 800f8f0:	2301      	movs	r3, #1
 800f8f2:	4a08      	ldr	r2, [pc, #32]	; (800f914 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800f8f4:	6102      	str	r2, [r0, #16]
 800f8f6:	7543      	strb	r3, [r0, #21]
 800f8f8:	f100 0218 	add.w	r2, r0, #24
 800f8fc:	f822 3f02 	strh.w	r3, [r2, #2]!
 800f900:	3304      	adds	r3, #4
 800f902:	b29b      	uxth	r3, r3
 800f904:	2b41      	cmp	r3, #65	; 0x41
 800f906:	d1f9      	bne.n	800f8fc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>
 800f908:	2300      	movs	r3, #0
 800f90a:	7503      	strb	r3, [r0, #20]
 800f90c:	4770      	bx	lr
 800f90e:	bf00      	nop
 800f910:	0100aa03 	tsteq	r0, r3, lsl #20
 800f914:	01ff003d 	mvnseq	r0, sp, lsr r0

0800f918 <PixelDmxParams::Load()>:
 800f918:	b508      	push	{r3, lr}
 800f91a:	2300      	movs	r3, #0
 800f91c:	4601      	mov	r1, r0
 800f91e:	6043      	str	r3, [r0, #4]
 800f920:	6800      	ldr	r0, [r0, #0]
 800f922:	b120      	cbz	r0, 800f92e <PixelDmxParams::Load()+0x16>
 800f924:	6803      	ldr	r3, [r0, #0]
 800f926:	3104      	adds	r1, #4
 800f928:	68db      	ldr	r3, [r3, #12]
 800f92a:	4798      	blx	r3
 800f92c:	2001      	movs	r0, #1
 800f92e:	bd08      	pop	{r3, pc}

0800f930 <PixelDmxParams::Load(char const*, unsigned int)>:
 800f930:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f932:	4604      	mov	r4, r0
 800f934:	4616      	mov	r6, r2
 800f936:	460d      	mov	r5, r1
 800f938:	b929      	cbnz	r1, 800f946 <PixelDmxParams::Load(char const*, unsigned int)+0x16>
 800f93a:	4b17      	ldr	r3, [pc, #92]	; (800f998 <PixelDmxParams::Load(char const*, unsigned int)+0x68>)
 800f93c:	4a17      	ldr	r2, [pc, #92]	; (800f99c <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800f93e:	4818      	ldr	r0, [pc, #96]	; (800f9a0 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800f940:	2180      	movs	r1, #128	; 0x80
 800f942:	f7fa fa95 	bl	8009e70 <__assert_func>
 800f946:	b92e      	cbnz	r6, 800f954 <PixelDmxParams::Load(char const*, unsigned int)+0x24>
 800f948:	4b16      	ldr	r3, [pc, #88]	; (800f9a4 <PixelDmxParams::Load(char const*, unsigned int)+0x74>)
 800f94a:	4a14      	ldr	r2, [pc, #80]	; (800f99c <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800f94c:	4814      	ldr	r0, [pc, #80]	; (800f9a0 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800f94e:	2181      	movs	r1, #129	; 0x81
 800f950:	f7fa fa8e 	bl	8009e70 <__assert_func>
 800f954:	6823      	ldr	r3, [r4, #0]
 800f956:	b93b      	cbnz	r3, 800f968 <PixelDmxParams::Load(char const*, unsigned int)+0x38>
 800f958:	4b13      	ldr	r3, [pc, #76]	; (800f9a8 <PixelDmxParams::Load(char const*, unsigned int)+0x78>)
 800f95a:	4a10      	ldr	r2, [pc, #64]	; (800f99c <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800f95c:	4810      	ldr	r0, [pc, #64]	; (800f9a0 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800f95e:	2182      	movs	r1, #130	; 0x82
 800f960:	f7fa fa86 	bl	8009e70 <__assert_func>
 800f964:	6823      	ldr	r3, [r4, #0]
 800f966:	b1a3      	cbz	r3, 800f992 <PixelDmxParams::Load(char const*, unsigned int)+0x62>
 800f968:	2300      	movs	r3, #0
 800f96a:	6063      	str	r3, [r4, #4]
 800f96c:	490f      	ldr	r1, [pc, #60]	; (800f9ac <PixelDmxParams::Load(char const*, unsigned int)+0x7c>)
 800f96e:	4622      	mov	r2, r4
 800f970:	4668      	mov	r0, sp
 800f972:	f005 fa4f 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f976:	4632      	mov	r2, r6
 800f978:	4629      	mov	r1, r5
 800f97a:	4668      	mov	r0, sp
 800f97c:	f005 fa4e 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 800f980:	4621      	mov	r1, r4
 800f982:	f851 0b04 	ldr.w	r0, [r1], #4
 800f986:	6803      	ldr	r3, [r0, #0]
 800f988:	689b      	ldr	r3, [r3, #8]
 800f98a:	4798      	blx	r3
 800f98c:	4668      	mov	r0, sp
 800f98e:	f005 fa44 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 800f992:	b002      	add	sp, #8
 800f994:	bd70      	pop	{r4, r5, r6, pc}
 800f996:	bf00      	nop
 800f998:	0801a321 	stmdaeq	r1, {r0, r5, r8, r9, sp, pc}
 800f99c:	0801a334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp, pc}
 800f9a0:	0801a339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sp, pc}
 800f9a4:	0801a357 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sp, pc}
 800f9a8:	0801a364 	stmdaeq	r1, {r2, r5, r6, r8, r9, sp, pc}
 800f9ac:	0800fc8d 	stmdaeq	r0, {r0, r2, r3, r7, sl, fp, ip, sp, lr, pc}

0800f9b0 <PixelDmxParams::callbackFunction(char const*)>:
 800f9b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f9b4:	4604      	mov	r4, r0
 800f9b6:	b08a      	sub	sp, #40	; 0x28
 800f9b8:	460d      	mov	r5, r1
 800f9ba:	b929      	cbnz	r1, 800f9c8 <PixelDmxParams::callbackFunction(char const*)+0x18>
 800f9bc:	4ba2      	ldr	r3, [pc, #648]	; (800fc48 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800f9be:	4aa3      	ldr	r2, [pc, #652]	; (800fc4c <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800f9c0:	48a3      	ldr	r0, [pc, #652]	; (800fc50 <PixelDmxParams::callbackFunction(char const*)+0x2a0>)
 800f9c2:	2192      	movs	r1, #146	; 0x92
 800f9c4:	f7fa fa54 	bl	8009e70 <__assert_func>
 800f9c8:	2308      	movs	r3, #8
 800f9ca:	9304      	str	r3, [sp, #16]
 800f9cc:	49a1      	ldr	r1, [pc, #644]	; (800fc54 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800f9ce:	ab04      	add	r3, sp, #16
 800f9d0:	aa06      	add	r2, sp, #24
 800f9d2:	4628      	mov	r0, r5
 800f9d4:	f005 fa56 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f9d8:	b9a0      	cbnz	r0, 800fa04 <PixelDmxParams::callbackFunction(char const*)+0x54>
 800f9da:	9b04      	ldr	r3, [sp, #16]
 800f9dc:	3328      	adds	r3, #40	; 0x28
 800f9de:	446b      	add	r3, sp
 800f9e0:	f803 0c10 	strb.w	r0, [r3, #-16]
 800f9e4:	a806      	add	r0, sp, #24
 800f9e6:	f000 fddb 	bl	80105a0 <PixelType::GetType(char const*)>
 800f9ea:	6863      	ldr	r3, [r4, #4]
 800f9ec:	280e      	cmp	r0, #14
 800f9ee:	bf0d      	iteet	eq
 800f9f0:	2203      	moveq	r2, #3
 800f9f2:	7220      	strbne	r0, [r4, #8]
 800f9f4:	f043 0301 	orrne.w	r3, r3, #1
 800f9f8:	7222      	strbeq	r2, [r4, #8]
 800f9fa:	bf08      	it	eq
 800f9fc:	f023 0301 	biceq.w	r3, r3, #1
 800fa00:	6063      	str	r3, [r4, #4]
 800fa02:	e033      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fa04:	4994      	ldr	r1, [pc, #592]	; (800fc58 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800fa06:	f10d 020a 	add.w	r2, sp, #10
 800fa0a:	4628      	mov	r0, r5
 800fa0c:	f005 faef 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800fa10:	b990      	cbnz	r0, 800fa38 <PixelDmxParams::callbackFunction(char const*)+0x88>
 800fa12:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800fa16:	6863      	ldr	r3, [r4, #4]
 800fa18:	1e51      	subs	r1, r2, #1
 800fa1a:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800fa1e:	bf2d      	iteet	cs
 800fa20:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800fa24:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800fa28:	f043 0302 	orrcc.w	r3, r3, #2
 800fa2c:	7262      	strbcs	r2, [r4, #9]
 800fa2e:	bf24      	itt	cs
 800fa30:	72a0      	strbcs	r0, [r4, #10]
 800fa32:	f023 0302 	biccs.w	r3, r3, #2
 800fa36:	e7e3      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fa38:	2303      	movs	r3, #3
 800fa3a:	9304      	str	r3, [sp, #16]
 800fa3c:	4987      	ldr	r1, [pc, #540]	; (800fc5c <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800fa3e:	ab04      	add	r3, sp, #16
 800fa40:	aa06      	add	r2, sp, #24
 800fa42:	4628      	mov	r0, r5
 800fa44:	f005 fa1e 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800fa48:	b998      	cbnz	r0, 800fa72 <PixelDmxParams::callbackFunction(char const*)+0xc2>
 800fa4a:	9b04      	ldr	r3, [sp, #16]
 800fa4c:	3328      	adds	r3, #40	; 0x28
 800fa4e:	446b      	add	r3, sp
 800fa50:	f803 0c10 	strb.w	r0, [r3, #-16]
 800fa54:	a806      	add	r0, sp, #24
 800fa56:	f000 fdc7 	bl	80105e8 <PixelType::GetMap(char const*)>
 800fa5a:	6863      	ldr	r3, [r4, #4]
 800fa5c:	75e0      	strb	r0, [r4, #23]
 800fa5e:	2806      	cmp	r0, #6
 800fa60:	bf14      	ite	ne
 800fa62:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800fa66:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800fa6a:	6063      	str	r3, [r4, #4]
 800fa6c:	b00a      	add	sp, #40	; 0x28
 800fa6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fa72:	497b      	ldr	r1, [pc, #492]	; (800fc60 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800fa74:	aa03      	add	r2, sp, #12
 800fa76:	4628      	mov	r0, r5
 800fa78:	f005 fa1d 	bl	8014eb6 <Sscan::Float(char const*, char const*, float&)>
 800fa7c:	b968      	cbnz	r0, 800fa9a <PixelDmxParams::callbackFunction(char const*)+0xea>
 800fa7e:	ed9d 0a03 	vldr	s0, [sp, #12]
 800fa82:	f000 fe1d 	bl	80106c0 <PixelType::ConvertTxH(float)>
 800fa86:	6863      	ldr	r3, [r4, #4]
 800fa88:	b120      	cbz	r0, 800fa94 <PixelDmxParams::callbackFunction(char const*)+0xe4>
 800fa8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800fa8e:	6063      	str	r3, [r4, #4]
 800fa90:	7620      	strb	r0, [r4, #24]
 800fa92:	e7eb      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fa94:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800fa98:	e7f9      	b.n	800fa8e <PixelDmxParams::callbackFunction(char const*)+0xde>
 800fa9a:	4972      	ldr	r1, [pc, #456]	; (800fc64 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800fa9c:	aa03      	add	r2, sp, #12
 800fa9e:	4628      	mov	r0, r5
 800faa0:	f005 fa09 	bl	8014eb6 <Sscan::Float(char const*, char const*, float&)>
 800faa4:	b968      	cbnz	r0, 800fac2 <PixelDmxParams::callbackFunction(char const*)+0x112>
 800faa6:	ed9d 0a03 	vldr	s0, [sp, #12]
 800faaa:	f000 fe09 	bl	80106c0 <PixelType::ConvertTxH(float)>
 800faae:	6863      	ldr	r3, [r4, #4]
 800fab0:	b120      	cbz	r0, 800fabc <PixelDmxParams::callbackFunction(char const*)+0x10c>
 800fab2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800fab6:	6063      	str	r3, [r4, #4]
 800fab8:	7660      	strb	r0, [r4, #25]
 800faba:	e7d7      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fabc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800fac0:	e7f9      	b.n	800fab6 <PixelDmxParams::callbackFunction(char const*)+0x106>
 800fac2:	4969      	ldr	r1, [pc, #420]	; (800fc68 <PixelDmxParams::callbackFunction(char const*)+0x2b8>)
 800fac4:	f10d 020a 	add.w	r2, sp, #10
 800fac8:	4628      	mov	r0, r5
 800faca:	f005 fa90 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800face:	b998      	cbnz	r0, 800faf8 <PixelDmxParams::callbackFunction(char const*)+0x148>
 800fad0:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800fad4:	6863      	ldr	r3, [r4, #4]
 800fad6:	1e8a      	subs	r2, r1, #2
 800fad8:	b292      	uxth	r2, r2
 800fada:	f240 25a6 	movw	r5, #678	; 0x2a6
 800fade:	42aa      	cmp	r2, r5
 800fae0:	bf81      	itttt	hi
 800fae2:	2201      	movhi	r2, #1
 800fae4:	7562      	strbhi	r2, [r4, #21]
 800fae6:	75a0      	strbhi	r0, [r4, #22]
 800fae8:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800faec:	bf9c      	itt	ls
 800faee:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800faf2:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800faf6:	e783      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800faf8:	495c      	ldr	r1, [pc, #368]	; (800fc6c <PixelDmxParams::callbackFunction(char const*)+0x2bc>)
 800fafa:	aa05      	add	r2, sp, #20
 800fafc:	4628      	mov	r0, r5
 800fafe:	f005 fa95 	bl	801502c <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800fb02:	b960      	cbnz	r0, 800fb1e <PixelDmxParams::callbackFunction(char const*)+0x16e>
 800fb04:	9a05      	ldr	r2, [sp, #20]
 800fb06:	495a      	ldr	r1, [pc, #360]	; (800fc70 <PixelDmxParams::callbackFunction(char const*)+0x2c0>)
 800fb08:	6863      	ldr	r3, [r4, #4]
 800fb0a:	f8c4 200e 	str.w	r2, [r4, #14]
 800fb0e:	428a      	cmp	r2, r1
 800fb10:	bf14      	ite	ne
 800fb12:	f043 0310 	orrne.w	r3, r3, #16
 800fb16:	f023 0310 	biceq.w	r3, r3, #16
 800fb1a:	6063      	str	r3, [r4, #4]
 800fb1c:	e7a6      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fb1e:	4955      	ldr	r1, [pc, #340]	; (800fc74 <PixelDmxParams::callbackFunction(char const*)+0x2c4>)
 800fb20:	f10d 0209 	add.w	r2, sp, #9
 800fb24:	4628      	mov	r0, r5
 800fb26:	f005 faaa 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fb2a:	b988      	cbnz	r0, 800fb50 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800fb2c:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800fb30:	6863      	ldr	r3, [r4, #4]
 800fb32:	1e4a      	subs	r2, r1, #1
 800fb34:	b2d2      	uxtb	r2, r2
 800fb36:	2afd      	cmp	r2, #253	; 0xfd
 800fb38:	bf89      	itett	hi
 800fb3a:	f023 0320 	bichi.w	r3, r3, #32
 800fb3e:	f043 0320 	orrls.w	r3, r3, #32
 800fb42:	6063      	strhi	r3, [r4, #4]
 800fb44:	23ff      	movhi	r3, #255	; 0xff
 800fb46:	bf9a      	itte	ls
 800fb48:	6063      	strls	r3, [r4, #4]
 800fb4a:	74a1      	strbls	r1, [r4, #18]
 800fb4c:	74a3      	strbhi	r3, [r4, #18]
 800fb4e:	e78d      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fb50:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800fc88 <PixelDmxParams::callbackFunction(char const*)+0x2d8>
 800fb54:	f104 071a 	add.w	r7, r4, #26
 800fb58:	2600      	movs	r6, #0
 800fb5a:	f04f 0814 	mov.w	r8, #20
 800fb5e:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800fb62:	f10d 020a 	add.w	r2, sp, #10
 800fb66:	fb08 9106 	mla	r1, r8, r6, r9
 800fb6a:	4628      	mov	r0, r5
 800fb6c:	f005 fa3f 	bl	8014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800fb70:	b940      	cbnz	r0, 800fb84 <PixelDmxParams::callbackFunction(char const*)+0x1d4>
 800fb72:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800fb76:	6863      	ldr	r3, [r4, #4]
 800fb78:	fa0a f106 	lsl.w	r1, sl, r6
 800fb7c:	b1ea      	cbz	r2, 800fbba <PixelDmxParams::callbackFunction(char const*)+0x20a>
 800fb7e:	803a      	strh	r2, [r7, #0]
 800fb80:	430b      	orrs	r3, r1
 800fb82:	6063      	str	r3, [r4, #4]
 800fb84:	3601      	adds	r6, #1
 800fb86:	2e10      	cmp	r6, #16
 800fb88:	f107 0702 	add.w	r7, r7, #2
 800fb8c:	d1e9      	bne.n	800fb62 <PixelDmxParams::callbackFunction(char const*)+0x1b2>
 800fb8e:	493a      	ldr	r1, [pc, #232]	; (800fc78 <PixelDmxParams::callbackFunction(char const*)+0x2c8>)
 800fb90:	f10d 0209 	add.w	r2, sp, #9
 800fb94:	4628      	mov	r0, r5
 800fb96:	f005 fa72 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fb9a:	b9a0      	cbnz	r0, 800fbc6 <PixelDmxParams::callbackFunction(char const*)+0x216>
 800fb9c:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800fba0:	6863      	ldr	r3, [r4, #4]
 800fba2:	1e91      	subs	r1, r2, #2
 800fba4:	290e      	cmp	r1, #14
 800fba6:	bf8d      	iteet	hi
 800fba8:	2201      	movhi	r2, #1
 800fbaa:	74e2      	strbls	r2, [r4, #19]
 800fbac:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800fbb0:	74e2      	strbhi	r2, [r4, #19]
 800fbb2:	bf88      	it	hi
 800fbb4:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800fbb8:	e722      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fbba:	00b2      	lsls	r2, r6, #2
 800fbbc:	3201      	adds	r2, #1
 800fbbe:	803a      	strh	r2, [r7, #0]
 800fbc0:	ea23 0301 	bic.w	r3, r3, r1
 800fbc4:	e7dd      	b.n	800fb82 <PixelDmxParams::callbackFunction(char const*)+0x1d2>
 800fbc6:	492d      	ldr	r1, [pc, #180]	; (800fc7c <PixelDmxParams::callbackFunction(char const*)+0x2cc>)
 800fbc8:	f10d 0209 	add.w	r2, sp, #9
 800fbcc:	4628      	mov	r0, r5
 800fbce:	f005 fa56 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fbd2:	b960      	cbnz	r0, 800fbee <PixelDmxParams::callbackFunction(char const*)+0x23e>
 800fbd4:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800fbd8:	6863      	ldr	r3, [r4, #4]
 800fbda:	1e51      	subs	r1, r2, #1
 800fbdc:	2904      	cmp	r1, #4
 800fbde:	bf99      	ittee	ls
 800fbe0:	7522      	strbls	r2, [r4, #20]
 800fbe2:	f043 0308 	orrls.w	r3, r3, #8
 800fbe6:	7520      	strbhi	r0, [r4, #20]
 800fbe8:	f023 0308 	bichi.w	r3, r3, #8
 800fbec:	e708      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fbee:	4924      	ldr	r1, [pc, #144]	; (800fc80 <PixelDmxParams::callbackFunction(char const*)+0x2d0>)
 800fbf0:	f10d 0209 	add.w	r2, sp, #9
 800fbf4:	4628      	mov	r0, r5
 800fbf6:	f005 fa42 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fbfa:	b948      	cbnz	r0, 800fc10 <PixelDmxParams::callbackFunction(char const*)+0x260>
 800fbfc:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800fc00:	6863      	ldr	r3, [r4, #4]
 800fc02:	b112      	cbz	r2, 800fc0a <PixelDmxParams::callbackFunction(char const*)+0x25a>
 800fc04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fc08:	e6fa      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fc0a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fc0e:	e6f7      	b.n	800fa00 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fc10:	491c      	ldr	r1, [pc, #112]	; (800fc84 <PixelDmxParams::callbackFunction(char const*)+0x2d4>)
 800fc12:	aa03      	add	r2, sp, #12
 800fc14:	4628      	mov	r0, r5
 800fc16:	f005 f94e 	bl	8014eb6 <Sscan::Float(char const*, char const*, float&)>
 800fc1a:	2800      	cmp	r0, #0
 800fc1c:	f47f af26 	bne.w	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fc20:	eddd 7a03 	vldr	s15, [sp, #12]
 800fc24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800fc28:	ee67 7a87 	vmul.f32	s15, s15, s14
 800fc2c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800fc30:	edcd 7a01 	vstr	s15, [sp, #4]
 800fc34:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800fc38:	f1a3 0214 	sub.w	r2, r3, #20
 800fc3c:	2a05      	cmp	r2, #5
 800fc3e:	bf8c      	ite	hi
 800fc40:	7360      	strbhi	r0, [r4, #13]
 800fc42:	7363      	strbls	r3, [r4, #13]
 800fc44:	e712      	b.n	800fa6c <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fc46:	bf00      	nop
 800fc48:	0801a386 	stmdaeq	r1, {r1, r2, r7, r8, r9, sp, pc}
 800fc4c:	0801a397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sp, pc}
 800fc50:	0801a339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sp, pc}
 800fc54:	0801b586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, sp, pc}
 800fc58:	0801b58f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, sl, ip, sp, pc}
 800fc5c:	0801b576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, sp, pc}
 800fc60:	0801b599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, ip, sp, pc}
 800fc64:	0801b5a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, ip, sp, pc}
 800fc68:	0801b543 	stmdaeq	r1, {r0, r1, r6, r8, sl, ip, sp, pc}
 800fc6c:	0801b527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp, pc}
 800fc70:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800fc74:	0801b564 	stmdaeq	r1, {r2, r5, r6, r8, sl, ip, sp, pc}
 800fc78:	0801b510 	stmdaeq	r1, {r4, r8, sl, ip, sp, pc}
 800fc7c:	0801b536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, ip, sp, pc}
 800fc80:	0801b553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, pc}
 800fc84:	0801b51b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, sp, pc}
 800fc88:	0801b622 	stmdaeq	r1, {r1, r5, r9, sl, ip, sp, pc}

0800fc8c <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800fc8c:	b538      	push	{r3, r4, r5, lr}
 800fc8e:	460d      	mov	r5, r1
 800fc90:	4604      	mov	r4, r0
 800fc92:	b930      	cbnz	r0, 800fca2 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x16>
 800fc94:	4b0a      	ldr	r3, [pc, #40]	; (800fcc0 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x34>)
 800fc96:	4a0b      	ldr	r2, [pc, #44]	; (800fcc4 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800fc98:	480b      	ldr	r0, [pc, #44]	; (800fcc8 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800fc9a:	f240 1145 	movw	r1, #325	; 0x145
 800fc9e:	f7fa f8e7 	bl	8009e70 <__assert_func>
 800fca2:	b935      	cbnz	r5, 800fcb2 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x26>
 800fca4:	4b09      	ldr	r3, [pc, #36]	; (800fccc <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x40>)
 800fca6:	4a07      	ldr	r2, [pc, #28]	; (800fcc4 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800fca8:	4807      	ldr	r0, [pc, #28]	; (800fcc8 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800fcaa:	f44f 71a3 	mov.w	r1, #326	; 0x146
 800fcae:	f7fa f8df 	bl	8009e70 <__assert_func>
 800fcb2:	4629      	mov	r1, r5
 800fcb4:	4620      	mov	r0, r4
 800fcb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fcba:	f7ff be79 	b.w	800f9b0 <PixelDmxParams::callbackFunction(char const*)>
 800fcbe:	bf00      	nop
 800fcc0:	0801a3a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sp, pc}
 800fcc4:	0801a3b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sp, pc}
 800fcc8:	0801a339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sp, pc}
 800fccc:	0801a3cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sp, pc}

0800fcd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800fcd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fcd4:	4604      	mov	r4, r0
 800fcd6:	b086      	sub	sp, #24
 800fcd8:	460e      	mov	r6, r1
 800fcda:	461f      	mov	r7, r3
 800fcdc:	4615      	mov	r5, r2
 800fcde:	b932      	cbnz	r2, 800fcee <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1e>
 800fce0:	4ba7      	ldr	r3, [pc, #668]	; (800ff80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800fce2:	4aa8      	ldr	r2, [pc, #672]	; (800ff84 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800fce4:	48a8      	ldr	r0, [pc, #672]	; (800ff88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800fce6:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 800fcea:	f7fa f8c1 	bl	8009e70 <__assert_func>
 800fcee:	1d20      	adds	r0, r4, #4
 800fcf0:	2e00      	cmp	r6, #0
 800fcf2:	d032      	beq.n	800fd5a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x8a>
 800fcf4:	2236      	movs	r2, #54	; 0x36
 800fcf6:	4631      	mov	r1, r6
 800fcf8:	f006 f879 	bl	8015dee <memmove>
 800fcfc:	462a      	mov	r2, r5
 800fcfe:	49a3      	ldr	r1, [pc, #652]	; (800ff8c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800fd00:	463b      	mov	r3, r7
 800fd02:	a803      	add	r0, sp, #12
 800fd04:	f004 ffe6 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800fd08:	7a20      	ldrb	r0, [r4, #8]
 800fd0a:	f000 fc3d 	bl	8010588 <PixelType::GetType(pixel::Type)>
 800fd0e:	6863      	ldr	r3, [r4, #4]
 800fd10:	499f      	ldr	r1, [pc, #636]	; (800ff90 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800fd12:	4602      	mov	r2, r0
 800fd14:	f003 0301 	and.w	r3, r3, #1
 800fd18:	a803      	add	r0, sp, #12
 800fd1a:	f7ff fd73 	bl	800f804 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fd1e:	6863      	ldr	r3, [r4, #4]
 800fd20:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800fd24:	499b      	ldr	r1, [pc, #620]	; (800ff94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800fd26:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800fd2a:	a803      	add	r0, sp, #12
 800fd2c:	f7ff fd42 	bl	800f7b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800fd30:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fd34:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800fd38:	6863      	ldr	r3, [r4, #4]
 800fd3a:	42aa      	cmp	r2, r5
 800fd3c:	d227      	bcs.n	800fd8e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xbe>
 800fd3e:	9803      	ldr	r0, [sp, #12]
 800fd40:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800fd44:	4410      	add	r0, r2
 800fd46:	eba5 0502 	sub.w	r5, r5, r2
 800fd4a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800fd4e:	d10b      	bne.n	800fd68 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x98>
 800fd50:	b96a      	cbnz	r2, 800fd6e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800fd52:	9200      	str	r2, [sp, #0]
 800fd54:	4b90      	ldr	r3, [pc, #576]	; (800ff98 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fd56:	4a91      	ldr	r2, [pc, #580]	; (800ff9c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800fd58:	e00f      	b.n	800fd7a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xaa>
 800fd5a:	6823      	ldr	r3, [r4, #0]
 800fd5c:	681a      	ldr	r2, [r3, #0]
 800fd5e:	4601      	mov	r1, r0
 800fd60:	68d2      	ldr	r2, [r2, #12]
 800fd62:	4618      	mov	r0, r3
 800fd64:	4790      	blx	r2
 800fd66:	e7c9      	b.n	800fcfc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c>
 800fd68:	2a00      	cmp	r2, #0
 800fd6a:	f000 8087 	beq.w	800fe7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ac>
 800fd6e:	3b00      	subs	r3, #0
 800fd70:	bf18      	it	ne
 800fd72:	2301      	movne	r3, #1
 800fd74:	9300      	str	r3, [sp, #0]
 800fd76:	4a8a      	ldr	r2, [pc, #552]	; (800ffa0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800fd78:	4b87      	ldr	r3, [pc, #540]	; (800ff98 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fd7a:	4629      	mov	r1, r5
 800fd7c:	f7fa fbac 	bl	800a4d8 <snprintf>
 800fd80:	4285      	cmp	r5, r0
 800fd82:	bfa2      	ittt	ge
 800fd84:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800fd88:	18c0      	addge	r0, r0, r3
 800fd8a:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800fd8e:	7b63      	ldrb	r3, [r4, #13]
 800fd90:	2b00      	cmp	r3, #0
 800fd92:	d178      	bne.n	800fe86 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1b6>
 800fd94:	4a83      	ldr	r2, [pc, #524]	; (800ffa4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800fd96:	4984      	ldr	r1, [pc, #528]	; (800ffa8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800fd98:	a803      	add	r0, sp, #12
 800fd9a:	f7ff fd33 	bl	800f804 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fd9e:	4983      	ldr	r1, [pc, #524]	; (800ffac <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800fda0:	a803      	add	r0, sp, #12
 800fda2:	f005 f81d 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800fda6:	6863      	ldr	r3, [r4, #4]
 800fda8:	059e      	lsls	r6, r3, #22
 800fdaa:	d403      	bmi.n	800fdb4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 800fdac:	7a20      	ldrb	r0, [r4, #8]
 800fdae:	f000 fc4f 	bl	8010650 <PixelType::GetMap(pixel::Type)>
 800fdb2:	75e0      	strb	r0, [r4, #23]
 800fdb4:	7de0      	ldrb	r0, [r4, #23]
 800fdb6:	f000 fc3f 	bl	8010638 <PixelType::GetMap(pixel::Map)>
 800fdba:	6863      	ldr	r3, [r4, #4]
 800fdbc:	497c      	ldr	r1, [pc, #496]	; (800ffb0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800fdbe:	4602      	mov	r2, r0
 800fdc0:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800fdc4:	a803      	add	r0, sp, #12
 800fdc6:	f7ff fd1d 	bl	800f804 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fdca:	6863      	ldr	r3, [r4, #4]
 800fdcc:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800fdd0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800fdd4:	d011      	beq.n	800fdfa <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x12a>
 800fdd6:	f10d 020b 	add.w	r2, sp, #11
 800fdda:	7a20      	ldrb	r0, [r4, #8]
 800fddc:	f10d 010a 	add.w	r1, sp, #10
 800fde0:	f000 fac6 	bl	8010370 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800fde4:	6863      	ldr	r3, [r4, #4]
 800fde6:	055d      	lsls	r5, r3, #21
 800fde8:	bf5c      	itt	pl
 800fdea:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800fdee:	7622      	strbpl	r2, [r4, #24]
 800fdf0:	0518      	lsls	r0, r3, #20
 800fdf2:	bf5c      	itt	pl
 800fdf4:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800fdf8:	7663      	strbpl	r3, [r4, #25]
 800fdfa:	496e      	ldr	r1, [pc, #440]	; (800ffb4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800fdfc:	a803      	add	r0, sp, #12
 800fdfe:	f004 ffef 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800fe02:	7e20      	ldrb	r0, [r4, #24]
 800fe04:	f000 fc2e 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 800fe08:	6862      	ldr	r2, [r4, #4]
 800fe0a:	496b      	ldr	r1, [pc, #428]	; (800ffb8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 800fe0c:	2302      	movs	r3, #2
 800fe0e:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800fe12:	a803      	add	r0, sp, #12
 800fe14:	f7ff fd1e 	bl	800f854 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fe18:	7e60      	ldrb	r0, [r4, #25]
 800fe1a:	f000 fc23 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 800fe1e:	6862      	ldr	r2, [r4, #4]
 800fe20:	4966      	ldr	r1, [pc, #408]	; (800ffbc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 800fe22:	2302      	movs	r3, #2
 800fe24:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800fe28:	a803      	add	r0, sp, #12
 800fe2a:	f7ff fd13 	bl	800f854 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fe2e:	4964      	ldr	r1, [pc, #400]	; (800ffc0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f0>)
 800fe30:	a803      	add	r0, sp, #12
 800fe32:	f004 ffd5 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800fe36:	6863      	ldr	r3, [r4, #4]
 800fe38:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800fe3c:	4961      	ldr	r1, [pc, #388]	; (800ffc4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f4>)
 800fe3e:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800fe42:	a803      	add	r0, sp, #12
 800fe44:	f7ff fcb6 	bl	800f7b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800fe48:	495f      	ldr	r1, [pc, #380]	; (800ffc8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f8>)
 800fe4a:	a803      	add	r0, sp, #12
 800fe4c:	f004 ffc8 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800fe50:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fe54:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800fe58:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800fe5c:	6861      	ldr	r1, [r4, #4]
 800fe5e:	42aa      	cmp	r2, r5
 800fe60:	d22f      	bcs.n	800fec2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1f2>
 800fe62:	9803      	ldr	r0, [sp, #12]
 800fe64:	06c9      	lsls	r1, r1, #27
 800fe66:	4410      	add	r0, r2
 800fe68:	eba5 0502 	sub.w	r5, r5, r2
 800fe6c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800fe70:	d418      	bmi.n	800fea4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800fe72:	b9ca      	cbnz	r2, 800fea8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>
 800fe74:	9300      	str	r3, [sp, #0]
 800fe76:	4a49      	ldr	r2, [pc, #292]	; (800ff9c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800fe78:	4b54      	ldr	r3, [pc, #336]	; (800ffcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 800fe7a:	e018      	b.n	800feae <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800fe7c:	2301      	movs	r3, #1
 800fe7e:	9300      	str	r3, [sp, #0]
 800fe80:	4a53      	ldr	r2, [pc, #332]	; (800ffd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 800fe82:	4b45      	ldr	r3, [pc, #276]	; (800ff98 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fe84:	e779      	b.n	800fd7a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xaa>
 800fe86:	ee07 3a90 	vmov	s15, r3
 800fe8a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800fe8e:	2301      	movs	r3, #1
 800fe90:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 800fe94:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800fe98:	4943      	ldr	r1, [pc, #268]	; (800ffa8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800fe9a:	461a      	mov	r2, r3
 800fe9c:	a803      	add	r0, sp, #12
 800fe9e:	f7ff fcd9 	bl	800f854 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fea2:	e77c      	b.n	800fd9e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800fea4:	2a00      	cmp	r2, #0
 800fea6:	d066      	beq.n	800ff76 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a6>
 800fea8:	9300      	str	r3, [sp, #0]
 800feaa:	4a3d      	ldr	r2, [pc, #244]	; (800ffa0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800feac:	4b47      	ldr	r3, [pc, #284]	; (800ffcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 800feae:	4629      	mov	r1, r5
 800feb0:	f7fa fb12 	bl	800a4d8 <snprintf>
 800feb4:	4285      	cmp	r5, r0
 800feb6:	bfa2      	ittt	ge
 800feb8:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800febc:	18c0      	addge	r0, r0, r3
 800febe:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800fec2:	4944      	ldr	r1, [pc, #272]	; (800ffd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x304>)
 800fec4:	4e44      	ldr	r6, [pc, #272]	; (800ffd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x308>)
 800fec6:	a803      	add	r0, sp, #12
 800fec8:	f004 ff8a 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800fecc:	6863      	ldr	r3, [r4, #4]
 800fece:	7ca2      	ldrb	r2, [r4, #18]
 800fed0:	4942      	ldr	r1, [pc, #264]	; (800ffdc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x30c>)
 800fed2:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800fed6:	a803      	add	r0, sp, #12
 800fed8:	f7ff fc44 	bl	800f764 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fedc:	f104 0718 	add.w	r7, r4, #24
 800fee0:	2500      	movs	r5, #0
 800fee2:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800fee6:	6862      	ldr	r2, [r4, #4]
 800fee8:	fa08 f305 	lsl.w	r3, r8, r5
 800feec:	4393      	bics	r3, r2
 800feee:	bf0c      	ite	eq
 800fef0:	2301      	moveq	r3, #1
 800fef2:	2300      	movne	r3, #0
 800fef4:	4631      	mov	r1, r6
 800fef6:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800fefa:	a803      	add	r0, sp, #12
 800fefc:	3501      	adds	r5, #1
 800fefe:	f7ff fc59 	bl	800f7b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ff02:	2d10      	cmp	r5, #16
 800ff04:	f106 0614 	add.w	r6, r6, #20
 800ff08:	d1ed      	bne.n	800fee6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x216>
 800ff0a:	6863      	ldr	r3, [r4, #4]
 800ff0c:	7ce2      	ldrb	r2, [r4, #19]
 800ff0e:	4934      	ldr	r1, [pc, #208]	; (800ffe0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x310>)
 800ff10:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800ff14:	a803      	add	r0, sp, #12
 800ff16:	f7ff fc25 	bl	800f764 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ff1a:	4932      	ldr	r1, [pc, #200]	; (800ffe4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x314>)
 800ff1c:	a803      	add	r0, sp, #12
 800ff1e:	f004 ff5f 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 800ff22:	6863      	ldr	r3, [r4, #4]
 800ff24:	7d22      	ldrb	r2, [r4, #20]
 800ff26:	4930      	ldr	r1, [pc, #192]	; (800ffe8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x318>)
 800ff28:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800ff2c:	a803      	add	r0, sp, #12
 800ff2e:	f7ff fc19 	bl	800f764 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ff32:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ff36:	b17b      	cbz	r3, 800ff58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>
 800ff38:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ff3c:	9b03      	ldr	r3, [sp, #12]
 800ff3e:	4413      	add	r3, r2
 800ff40:	227d      	movs	r2, #125	; 0x7d
 800ff42:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ff46:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ff4a:	9903      	ldr	r1, [sp, #12]
 800ff4c:	54ca      	strb	r2, [r1, r3]
 800ff4e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ff52:	3301      	adds	r3, #1
 800ff54:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ff58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ff5a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ff5e:	6013      	str	r3, [r2, #0]
 800ff60:	4908      	ldr	r1, [pc, #32]	; (800ff84 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800ff62:	9300      	str	r3, [sp, #0]
 800ff64:	4a08      	ldr	r2, [pc, #32]	; (800ff88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800ff66:	4821      	ldr	r0, [pc, #132]	; (800ffec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x31c>)
 800ff68:	f240 1393 	movw	r3, #403	; 0x193
 800ff6c:	f7fa fa8c 	bl	800a488 <printf>
 800ff70:	b006      	add	sp, #24
 800ff72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff76:	9300      	str	r3, [sp, #0]
 800ff78:	4a15      	ldr	r2, [pc, #84]	; (800ffd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 800ff7a:	4b14      	ldr	r3, [pc, #80]	; (800ffcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 800ff7c:	e797      	b.n	800feae <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800ff7e:	bf00      	nop
 800ff80:	0801a321 	stmdaeq	r1, {r0, r5, r8, r9, sp, pc}
 800ff84:	0801a3d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sp, pc}
 800ff88:	0801a339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sp, pc}
 800ff8c:	0801b5a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, ip, sp, pc}
 800ff90:	0801b586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, sp, pc}
 800ff94:	0801b58f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, sl, ip, sp, pc}
 800ff98:	0801b553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, pc}
 800ff9c:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 800ffa0:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 800ffa4:	0801a3e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sp, pc}
 800ffa8:	0801b51b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, sp, pc}
 800ffac:	0801a3eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, sp, pc}
 800ffb0:	0801b576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, sp, pc}
 800ffb4:	0801a3ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sp, pc}
 800ffb8:	0801b599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, ip, sp, pc}
 800ffbc:	0801b5a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, ip, sp, pc}
 800ffc0:	0801a415 	stmdaeq	r1, {r0, r2, r4, sl, sp, pc}
 800ffc4:	0801b543 	stmdaeq	r1, {r0, r1, r6, r8, sl, ip, sp, pc}
 800ffc8:	0801a41e 	stmdaeq	r1, {r1, r2, r3, r4, sl, sp, pc}
 800ffcc:	0801b527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp, pc}
 800ffd0:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}
 800ffd4:	0801a430 	stmdaeq	r1, {r4, r5, sl, sp, pc}
 800ffd8:	0801b622 	stmdaeq	r1, {r1, r5, r9, sl, ip, sp, pc}
 800ffdc:	0801b564 	stmdaeq	r1, {r2, r5, r6, r8, sl, ip, sp, pc}
 800ffe0:	0801b510 	stmdaeq	r1, {r4, r8, sl, ip, sp, pc}
 800ffe4:	0801a43e 	stmdaeq	r1, {r1, r2, r3, r4, r5, sl, sp, pc}
 800ffe8:	0801b536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, ip, sp, pc}
 800ffec:	0801a44b 	stmdaeq	r1, {r0, r1, r3, r6, sl, sp, pc}

0800fff0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800fff0:	b513      	push	{r0, r1, r4, lr}
 800fff2:	6804      	ldr	r4, [r0, #0]
 800fff4:	b914      	cbnz	r4, 800fffc <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800fff6:	601c      	str	r4, [r3, #0]
 800fff8:	b002      	add	sp, #8
 800fffa:	bd10      	pop	{r4, pc}
 800fffc:	9300      	str	r3, [sp, #0]
 800fffe:	4613      	mov	r3, r2
 8010000:	460a      	mov	r2, r1
 8010002:	2100      	movs	r1, #0
 8010004:	f7ff fe64 	bl	800fcd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 8010008:	e7f6      	b.n	800fff8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0801000c <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 801000c:	b538      	push	{r3, r4, r5, lr}
 801000e:	4605      	mov	r5, r0
 8010010:	460c      	mov	r4, r1
 8010012:	b931      	cbnz	r1, 8010022 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x16>
 8010014:	4b20      	ldr	r3, [pc, #128]	; (8010098 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x8c>)
 8010016:	4a21      	ldr	r2, [pc, #132]	; (801009c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x90>)
 8010018:	4821      	ldr	r0, [pc, #132]	; (80100a0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x94>)
 801001a:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 801001e:	f7f9 ff27 	bl	8009e70 <__assert_func>
 8010022:	686b      	ldr	r3, [r5, #4]
 8010024:	07da      	lsls	r2, r3, #31
 8010026:	bf44      	itt	mi
 8010028:	7a2a      	ldrbmi	r2, [r5, #8]
 801002a:	6022      	strmi	r2, [r4, #0]
 801002c:	0798      	lsls	r0, r3, #30
 801002e:	d505      	bpl.n	801003c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x30>
 8010030:	f8b5 2009 	ldrh.w	r2, [r5, #9]
 8010034:	2a00      	cmp	r2, #0
 8010036:	bf08      	it	eq
 8010038:	22aa      	moveq	r2, #170	; 0xaa
 801003a:	6062      	str	r2, [r4, #4]
 801003c:	0599      	lsls	r1, r3, #22
 801003e:	bf44      	itt	mi
 8010040:	7dea      	ldrbmi	r2, [r5, #23]
 8010042:	60a2      	strmi	r2, [r4, #8]
 8010044:	055a      	lsls	r2, r3, #21
 8010046:	bf44      	itt	mi
 8010048:	7e2a      	ldrbmi	r2, [r5, #24]
 801004a:	7422      	strbmi	r2, [r4, #16]
 801004c:	0518      	lsls	r0, r3, #20
 801004e:	bf44      	itt	mi
 8010050:	7e6a      	ldrbmi	r2, [r5, #25]
 8010052:	7462      	strbmi	r2, [r4, #17]
 8010054:	06d9      	lsls	r1, r3, #27
 8010056:	bf44      	itt	mi
 8010058:	f8d5 200e 	ldrmi.w	r2, [r5, #14]
 801005c:	60e2      	strmi	r2, [r4, #12]
 801005e:	069a      	lsls	r2, r3, #26
 8010060:	bf44      	itt	mi
 8010062:	7caa      	ldrbmi	r2, [r5, #18]
 8010064:	74a2      	strbmi	r2, [r4, #18]
 8010066:	0618      	lsls	r0, r3, #24
 8010068:	d504      	bpl.n	8010074 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x68>
 801006a:	2201      	movs	r2, #1
 801006c:	7522      	strb	r2, [r4, #20]
 801006e:	7b6a      	ldrb	r2, [r5, #13]
 8010070:	b102      	cbz	r2, 8010074 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x68>
 8010072:	74e2      	strb	r2, [r4, #19]
 8010074:	0759      	lsls	r1, r3, #29
 8010076:	bf41      	itttt	mi
 8010078:	7aea      	ldrbmi	r2, [r5, #11]
 801007a:	7b29      	ldrbmi	r1, [r5, #12]
 801007c:	ea42 2201 	orrmi.w	r2, r2, r1, lsl #8
 8010080:	85a2      	strhmi	r2, [r4, #44]	; 0x2c
 8010082:	05da      	lsls	r2, r3, #23
 8010084:	bf44      	itt	mi
 8010086:	f8b5 2015 	ldrhmi.w	r2, [r5, #21]
 801008a:	6222      	strmi	r2, [r4, #32]
 801008c:	065b      	lsls	r3, r3, #25
 801008e:	bf44      	itt	mi
 8010090:	7ceb      	ldrbmi	r3, [r5, #19]
 8010092:	61e3      	strmi	r3, [r4, #28]
 8010094:	bd38      	pop	{r3, r4, r5, pc}
 8010096:	bf00      	nop
 8010098:	0801a467 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, sp, pc}
 801009c:	0801a489 	stmdaeq	r1, {r0, r3, r7, sl, sp, pc}
 80100a0:	0801a339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sp, pc}

080100a4 <PixelDmxParams::Dump()>:
 80100a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80100a8:	4604      	mov	r4, r0
 80100aa:	4b5c      	ldr	r3, [pc, #368]	; (801021c <PixelDmxParams::Dump()+0x178>)
 80100ac:	4a5c      	ldr	r2, [pc, #368]	; (8010220 <PixelDmxParams::Dump()+0x17c>)
 80100ae:	495d      	ldr	r1, [pc, #372]	; (8010224 <PixelDmxParams::Dump()+0x180>)
 80100b0:	485d      	ldr	r0, [pc, #372]	; (8010228 <PixelDmxParams::Dump()+0x184>)
 80100b2:	b085      	sub	sp, #20
 80100b4:	f7fa f9e8 	bl	800a488 <printf>
 80100b8:	6863      	ldr	r3, [r4, #4]
 80100ba:	07dd      	lsls	r5, r3, #31
 80100bc:	d508      	bpl.n	80100d0 <PixelDmxParams::Dump()+0x2c>
 80100be:	7a20      	ldrb	r0, [r4, #8]
 80100c0:	f000 fa62 	bl	8010588 <PixelType::GetType(pixel::Type)>
 80100c4:	7a23      	ldrb	r3, [r4, #8]
 80100c6:	4959      	ldr	r1, [pc, #356]	; (801022c <PixelDmxParams::Dump()+0x188>)
 80100c8:	4602      	mov	r2, r0
 80100ca:	4859      	ldr	r0, [pc, #356]	; (8010230 <PixelDmxParams::Dump()+0x18c>)
 80100cc:	f7fa f9dc 	bl	800a488 <printf>
 80100d0:	6863      	ldr	r3, [r4, #4]
 80100d2:	0598      	lsls	r0, r3, #22
 80100d4:	d50a      	bpl.n	80100ec <PixelDmxParams::Dump()+0x48>
 80100d6:	7de2      	ldrb	r2, [r4, #23]
 80100d8:	9203      	str	r2, [sp, #12]
 80100da:	4610      	mov	r0, r2
 80100dc:	f000 faac 	bl	8010638 <PixelType::GetMap(pixel::Map)>
 80100e0:	9a03      	ldr	r2, [sp, #12]
 80100e2:	4954      	ldr	r1, [pc, #336]	; (8010234 <PixelDmxParams::Dump()+0x190>)
 80100e4:	4603      	mov	r3, r0
 80100e6:	4854      	ldr	r0, [pc, #336]	; (8010238 <PixelDmxParams::Dump()+0x194>)
 80100e8:	f7fa f9ce 	bl	800a488 <printf>
 80100ec:	6863      	ldr	r3, [r4, #4]
 80100ee:	0559      	lsls	r1, r3, #21
 80100f0:	d50e      	bpl.n	8010110 <PixelDmxParams::Dump()+0x6c>
 80100f2:	7e20      	ldrb	r0, [r4, #24]
 80100f4:	f000 fab6 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 80100f8:	ee10 0a10 	vmov	r0, s0
 80100fc:	f7f8 ff4a 	bl	8008f94 <__aeabi_f2d>
 8010100:	460b      	mov	r3, r1
 8010102:	7e21      	ldrb	r1, [r4, #24]
 8010104:	9100      	str	r1, [sp, #0]
 8010106:	4602      	mov	r2, r0
 8010108:	494c      	ldr	r1, [pc, #304]	; (801023c <PixelDmxParams::Dump()+0x198>)
 801010a:	484d      	ldr	r0, [pc, #308]	; (8010240 <PixelDmxParams::Dump()+0x19c>)
 801010c:	f7fa f9bc 	bl	800a488 <printf>
 8010110:	6863      	ldr	r3, [r4, #4]
 8010112:	051a      	lsls	r2, r3, #20
 8010114:	d50e      	bpl.n	8010134 <PixelDmxParams::Dump()+0x90>
 8010116:	7e60      	ldrb	r0, [r4, #25]
 8010118:	f000 faa4 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 801011c:	ee10 0a10 	vmov	r0, s0
 8010120:	f7f8 ff38 	bl	8008f94 <__aeabi_f2d>
 8010124:	460b      	mov	r3, r1
 8010126:	7e61      	ldrb	r1, [r4, #25]
 8010128:	9100      	str	r1, [sp, #0]
 801012a:	4602      	mov	r2, r0
 801012c:	4945      	ldr	r1, [pc, #276]	; (8010244 <PixelDmxParams::Dump()+0x1a0>)
 801012e:	4844      	ldr	r0, [pc, #272]	; (8010240 <PixelDmxParams::Dump()+0x19c>)
 8010130:	f7fa f9aa 	bl	800a488 <printf>
 8010134:	6863      	ldr	r3, [r4, #4]
 8010136:	079b      	lsls	r3, r3, #30
 8010138:	d505      	bpl.n	8010146 <PixelDmxParams::Dump()+0xa2>
 801013a:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 801013e:	4942      	ldr	r1, [pc, #264]	; (8010248 <PixelDmxParams::Dump()+0x1a4>)
 8010140:	4842      	ldr	r0, [pc, #264]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 8010142:	f7fa f9a1 	bl	800a488 <printf>
 8010146:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8010278 <PixelDmxParams::Dump()+0x1d4>
 801014a:	f8df 8100 	ldr.w	r8, [pc, #256]	; 801024c <PixelDmxParams::Dump()+0x1a8>
 801014e:	2500      	movs	r5, #0
 8010150:	f44f 5680 	mov.w	r6, #4096	; 0x1000
 8010154:	f104 071a 	add.w	r7, r4, #26
 8010158:	6862      	ldr	r2, [r4, #4]
 801015a:	fa06 f305 	lsl.w	r3, r6, r5
 801015e:	4393      	bics	r3, r2
 8010160:	d105      	bne.n	801016e <PixelDmxParams::Dump()+0xca>
 8010162:	f837 2015 	ldrh.w	r2, [r7, r5, lsl #1]
 8010166:	4649      	mov	r1, r9
 8010168:	4640      	mov	r0, r8
 801016a:	f7fa f98d 	bl	800a488 <printf>
 801016e:	3501      	adds	r5, #1
 8010170:	2d10      	cmp	r5, #16
 8010172:	f109 0914 	add.w	r9, r9, #20
 8010176:	d1ef      	bne.n	8010158 <PixelDmxParams::Dump()+0xb4>
 8010178:	6863      	ldr	r3, [r4, #4]
 801017a:	065f      	lsls	r7, r3, #25
 801017c:	d504      	bpl.n	8010188 <PixelDmxParams::Dump()+0xe4>
 801017e:	7ce2      	ldrb	r2, [r4, #19]
 8010180:	4933      	ldr	r1, [pc, #204]	; (8010250 <PixelDmxParams::Dump()+0x1ac>)
 8010182:	4832      	ldr	r0, [pc, #200]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 8010184:	f7fa f980 	bl	800a488 <printf>
 8010188:	6863      	ldr	r3, [r4, #4]
 801018a:	05de      	lsls	r6, r3, #23
 801018c:	d505      	bpl.n	801019a <PixelDmxParams::Dump()+0xf6>
 801018e:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 8010192:	4930      	ldr	r1, [pc, #192]	; (8010254 <PixelDmxParams::Dump()+0x1b0>)
 8010194:	482d      	ldr	r0, [pc, #180]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 8010196:	f7fa f977 	bl	800a488 <printf>
 801019a:	6863      	ldr	r3, [r4, #4]
 801019c:	06dd      	lsls	r5, r3, #27
 801019e:	d505      	bpl.n	80101ac <PixelDmxParams::Dump()+0x108>
 80101a0:	f8d4 200e 	ldr.w	r2, [r4, #14]
 80101a4:	492c      	ldr	r1, [pc, #176]	; (8010258 <PixelDmxParams::Dump()+0x1b4>)
 80101a6:	4829      	ldr	r0, [pc, #164]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 80101a8:	f7fa f96e 	bl	800a488 <printf>
 80101ac:	6863      	ldr	r3, [r4, #4]
 80101ae:	0698      	lsls	r0, r3, #26
 80101b0:	d504      	bpl.n	80101bc <PixelDmxParams::Dump()+0x118>
 80101b2:	7ca2      	ldrb	r2, [r4, #18]
 80101b4:	4929      	ldr	r1, [pc, #164]	; (801025c <PixelDmxParams::Dump()+0x1b8>)
 80101b6:	4825      	ldr	r0, [pc, #148]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 80101b8:	f7fa f966 	bl	800a488 <printf>
 80101bc:	6863      	ldr	r3, [r4, #4]
 80101be:	0759      	lsls	r1, r3, #29
 80101c0:	d505      	bpl.n	80101ce <PixelDmxParams::Dump()+0x12a>
 80101c2:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 80101c6:	4926      	ldr	r1, [pc, #152]	; (8010260 <PixelDmxParams::Dump()+0x1bc>)
 80101c8:	4820      	ldr	r0, [pc, #128]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 80101ca:	f7fa f95d 	bl	800a488 <printf>
 80101ce:	6863      	ldr	r3, [r4, #4]
 80101d0:	071a      	lsls	r2, r3, #28
 80101d2:	d504      	bpl.n	80101de <PixelDmxParams::Dump()+0x13a>
 80101d4:	7d22      	ldrb	r2, [r4, #20]
 80101d6:	4923      	ldr	r1, [pc, #140]	; (8010264 <PixelDmxParams::Dump()+0x1c0>)
 80101d8:	481c      	ldr	r0, [pc, #112]	; (801024c <PixelDmxParams::Dump()+0x1a8>)
 80101da:	f7fa f955 	bl	800a488 <printf>
 80101de:	6863      	ldr	r3, [r4, #4]
 80101e0:	061b      	lsls	r3, r3, #24
 80101e2:	d517      	bpl.n	8010214 <PixelDmxParams::Dump()+0x170>
 80101e4:	4920      	ldr	r1, [pc, #128]	; (8010268 <PixelDmxParams::Dump()+0x1c4>)
 80101e6:	4821      	ldr	r0, [pc, #132]	; (801026c <PixelDmxParams::Dump()+0x1c8>)
 80101e8:	f7fa f94e 	bl	800a488 <printf>
 80101ec:	7b64      	ldrb	r4, [r4, #13]
 80101ee:	ee07 4a90 	vmov	s15, r4
 80101f2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80101f6:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80101fa:	eec7 7a27 	vdiv.f32	s15, s14, s15
 80101fe:	ee17 0a90 	vmov	r0, s15
 8010202:	f7f8 fec7 	bl	8008f94 <__aeabi_f2d>
 8010206:	9400      	str	r4, [sp, #0]
 8010208:	4602      	mov	r2, r0
 801020a:	460b      	mov	r3, r1
 801020c:	4818      	ldr	r0, [pc, #96]	; (8010270 <PixelDmxParams::Dump()+0x1cc>)
 801020e:	4919      	ldr	r1, [pc, #100]	; (8010274 <PixelDmxParams::Dump()+0x1d0>)
 8010210:	f7fa f93a 	bl	800a488 <printf>
 8010214:	b005      	add	sp, #20
 8010216:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801021a:	bf00      	nop
 801021c:	0801b5a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, ip, sp, pc}
 8010220:	0801a48d 	stmdaeq	r1, {r0, r2, r3, r7, sl, sp, pc}
 8010224:	0801a492 	stmdaeq	r1, {r1, r4, r7, sl, sp, pc}
 8010228:	0801a4b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp, pc}
 801022c:	0801b586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, sp, pc}
 8010230:	0801a4c2 	stmdaeq	r1, {r1, r6, r7, sl, sp, pc}
 8010234:	0801b576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, sp, pc}
 8010238:	0801a4cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, sp, pc}
 801023c:	0801b599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, ip, sp, pc}
 8010240:	0801a4dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, sp, pc}
 8010244:	0801b5a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, ip, sp, pc}
 8010248:	0801b58f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, sl, ip, sp, pc}
 801024c:	0801a4ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl, sp, pc}
 8010250:	0801b510 	stmdaeq	r1, {r4, r8, sl, ip, sp, pc}
 8010254:	0801b543 	stmdaeq	r1, {r0, r1, r6, r8, sl, ip, sp, pc}
 8010258:	0801b527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp, pc}
 801025c:	0801b564 	stmdaeq	r1, {r2, r5, r6, r8, sl, ip, sp, pc}
 8010260:	0801b7aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp, pc}
 8010264:	0801b536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, ip, sp, pc}
 8010268:	0801b553 	stmdaeq	r1, {r0, r1, r4, r6, r8, sl, ip, sp, pc}
 801026c:	0801a4f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, sp, pc}
 8010270:	0801a502 	stmdaeq	r1, {r1, r8, sl, sp, pc}
 8010274:	0801b51b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, sp, pc}
 8010278:	0801b622 	stmdaeq	r1, {r1, r5, r9, sl, ip, sp, pc}

0801027c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 801027c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801027e:	4604      	mov	r4, r0
 8010280:	4617      	mov	r7, r2
 8010282:	482a      	ldr	r0, [pc, #168]	; (801032c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb0>)
 8010284:	4a2a      	ldr	r2, [pc, #168]	; (8010330 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 8010286:	460e      	mov	r6, r1
 8010288:	461d      	mov	r5, r3
 801028a:	492a      	ldr	r1, [pc, #168]	; (8010334 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 801028c:	2331      	movs	r3, #49	; 0x31
 801028e:	f7fa f8fb 	bl	800a488 <printf>
 8010292:	4639      	mov	r1, r7
 8010294:	4620      	mov	r0, r4
 8010296:	f000 f879 	bl	801038c <PixelConfiguration::Validate(unsigned int&)>
 801029a:	7d62      	ldrb	r2, [r4, #21]
 801029c:	b94a      	cbnz	r2, 80102b2 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x36>
 801029e:	6823      	ldr	r3, [r4, #0]
 80102a0:	b11b      	cbz	r3, 80102aa <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x2e>
 80102a2:	3b0b      	subs	r3, #11
 80102a4:	2b01      	cmp	r3, #1
 80102a6:	bf88      	it	hi
 80102a8:	6022      	strhi	r2, [r4, #0]
 80102aa:	4639      	mov	r1, r7
 80102ac:	4620      	mov	r0, r4
 80102ae:	f000 f86d 	bl	801038c <PixelConfiguration::Validate(unsigned int&)>
 80102b2:	6823      	ldr	r3, [r4, #0]
 80102b4:	2b07      	cmp	r3, #7
 80102b6:	bf15      	itete	ne
 80102b8:	f44f 71aa 	movne.w	r1, #340	; 0x154
 80102bc:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80102c0:	23aa      	movne	r3, #170	; 0xaa
 80102c2:	2380      	moveq	r3, #128	; 0x80
 80102c4:	e9c5 3100 	strd	r3, r1, [r5]
 80102c8:	6a21      	ldr	r1, [r4, #32]
 80102ca:	bf14      	ite	ne
 80102cc:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 80102d0:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 80102d4:	60aa      	str	r2, [r5, #8]
 80102d6:	6862      	ldr	r2, [r4, #4]
 80102d8:	b109      	cbz	r1, 80102de <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x62>
 80102da:	4291      	cmp	r1, r2
 80102dc:	d900      	bls.n	80102e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x64>
 80102de:	6222      	str	r2, [r4, #32]
 80102e0:	69e0      	ldr	r0, [r4, #28]
 80102e2:	6a21      	ldr	r1, [r4, #32]
 80102e4:	fbb2 f2f1 	udiv	r2, r2, r1
 80102e8:	42b0      	cmp	r0, r6
 80102ea:	bf28      	it	cs
 80102ec:	4630      	movcs	r0, r6
 80102ee:	6262      	str	r2, [r4, #36]	; 0x24
 80102f0:	2e01      	cmp	r6, #1
 80102f2:	f103 0301 	add.w	r3, r3, #1
 80102f6:	fbb2 f2f3 	udiv	r2, r2, r3
 80102fa:	f102 0301 	add.w	r3, r2, #1
 80102fe:	62a3      	str	r3, [r4, #40]	; 0x28
 8010300:	bf1c      	itt	ne
 8010302:	4343      	mulne	r3, r0
 8010304:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 8010308:	61e0      	str	r0, [r4, #28]
 801030a:	9200      	str	r2, [sp, #0]
 801030c:	60ea      	str	r2, [r5, #12]
 801030e:	4908      	ldr	r1, [pc, #32]	; (8010330 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 8010310:	4a08      	ldr	r2, [pc, #32]	; (8010334 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 8010312:	4809      	ldr	r0, [pc, #36]	; (8010338 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xbc>)
 8010314:	235b      	movs	r3, #91	; 0x5b
 8010316:	f7fa f8b7 	bl	800a488 <printf>
 801031a:	4a05      	ldr	r2, [pc, #20]	; (8010330 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 801031c:	4905      	ldr	r1, [pc, #20]	; (8010334 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 801031e:	4807      	ldr	r0, [pc, #28]	; (801033c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xc0>)
 8010320:	235c      	movs	r3, #92	; 0x5c
 8010322:	b003      	add	sp, #12
 8010324:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010328:	f7fa b8ae 	b.w	800a488 <printf>
 801032c:	08018745 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, pc}
 8010330:	0801a512 	stmdaeq	r1, {r1, r4, r8, sl, sp, pc}
 8010334:	0801a51b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, sp, pc}
 8010338:	0801a539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, pc}
 801033c:	08018767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, pc}

08010340 <PixelDmxConfiguration::Print()>:
 8010340:	b510      	push	{r4, lr}
 8010342:	4604      	mov	r4, r0
 8010344:	f000 f8b8 	bl	80104b8 <PixelConfiguration::Print()>
 8010348:	4806      	ldr	r0, [pc, #24]	; (8010364 <PixelDmxConfiguration::Print()+0x24>)
 801034a:	f7fa f89d 	bl	800a488 <printf>
 801034e:	69e1      	ldr	r1, [r4, #28]
 8010350:	4805      	ldr	r0, [pc, #20]	; (8010368 <PixelDmxConfiguration::Print()+0x28>)
 8010352:	f7fa f899 	bl	800a488 <printf>
 8010356:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 801035a:	4804      	ldr	r0, [pc, #16]	; (801036c <PixelDmxConfiguration::Print()+0x2c>)
 801035c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010360:	f7fa b892 	b.w	800a488 <printf>
 8010364:	0801a56f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, sp, pc}
 8010368:	0801a588 	stmdaeq	r1, {r3, r7, r8, sl, sp, pc}
 801036c:	0801a597 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, sl, sp, pc}

08010370 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 8010370:	23c0      	movs	r3, #192	; 0xc0
 8010372:	2803      	cmp	r0, #3
 8010374:	700b      	strb	r3, [r1, #0]
 8010376:	d006      	beq.n	8010386 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 8010378:	3808      	subs	r0, #8
 801037a:	2803      	cmp	r0, #3
 801037c:	bf34      	ite	cc
 801037e:	23fc      	movcc	r3, #252	; 0xfc
 8010380:	23f0      	movcs	r3, #240	; 0xf0
 8010382:	7013      	strb	r3, [r2, #0]
 8010384:	4770      	bx	lr
 8010386:	23f8      	movs	r3, #248	; 0xf8
 8010388:	e7fb      	b.n	8010382 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0801038c <PixelConfiguration::Validate(unsigned int&)>:
 801038c:	b513      	push	{r0, r1, r4, lr}
 801038e:	4604      	mov	r4, r0
 8010390:	6800      	ldr	r0, [r0, #0]
 8010392:	6863      	ldr	r3, [r4, #4]
 8010394:	68a2      	ldr	r2, [r4, #8]
 8010396:	2807      	cmp	r0, #7
 8010398:	d127      	bne.n	80103ea <PixelConfiguration::Validate(unsigned int&)+0x5e>
 801039a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801039e:	bf28      	it	cs
 80103a0:	f44f 7300 	movcs.w	r3, #512	; 0x200
 80103a4:	6063      	str	r3, [r4, #4]
 80103a6:	2304      	movs	r3, #4
 80103a8:	600b      	str	r3, [r1, #0]
 80103aa:	2301      	movs	r3, #1
 80103ac:	2a06      	cmp	r2, #6
 80103ae:	7563      	strb	r3, [r4, #21]
 80103b0:	d102      	bne.n	80103b8 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 80103b2:	f000 f94d 	bl	8010650 <PixelType::GetMap(pixel::Type)>
 80103b6:	60a0      	str	r0, [r4, #8]
 80103b8:	7c63      	ldrb	r3, [r4, #17]
 80103ba:	7c22      	ldrb	r2, [r4, #16]
 80103bc:	6820      	ldr	r0, [r4, #0]
 80103be:	429a      	cmp	r2, r3
 80103c0:	bf24      	itt	cs
 80103c2:	2300      	movcs	r3, #0
 80103c4:	8223      	strhcs	r3, [r4, #16]
 80103c6:	f10d 0207 	add.w	r2, sp, #7
 80103ca:	f10d 0106 	add.w	r1, sp, #6
 80103ce:	f7ff ffcf 	bl	8010370 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 80103d2:	7c23      	ldrb	r3, [r4, #16]
 80103d4:	b913      	cbnz	r3, 80103dc <PixelConfiguration::Validate(unsigned int&)+0x50>
 80103d6:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80103da:	7423      	strb	r3, [r4, #16]
 80103dc:	7c63      	ldrb	r3, [r4, #17]
 80103de:	b913      	cbnz	r3, 80103e6 <PixelConfiguration::Validate(unsigned int&)+0x5a>
 80103e0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80103e4:	7463      	strb	r3, [r4, #17]
 80103e6:	4b2a      	ldr	r3, [pc, #168]	; (8010490 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 80103e8:	e01e      	b.n	8010428 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 80103ea:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 80103ee:	bf28      	it	cs
 80103f0:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 80103f4:	6063      	str	r3, [r4, #4]
 80103f6:	2303      	movs	r3, #3
 80103f8:	600b      	str	r3, [r1, #0]
 80103fa:	f1a0 030b 	sub.w	r3, r0, #11
 80103fe:	2b01      	cmp	r3, #1
 8010400:	d806      	bhi.n	8010410 <PixelConfiguration::Validate(unsigned int&)+0x84>
 8010402:	7ca3      	ldrb	r3, [r4, #18]
 8010404:	2b1f      	cmp	r3, #31
 8010406:	d83d      	bhi.n	8010484 <PixelConfiguration::Validate(unsigned int&)+0xf8>
 8010408:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 801040c:	74a3      	strb	r3, [r4, #18]
 801040e:	e001      	b.n	8010414 <PixelConfiguration::Validate(unsigned int&)+0x88>
 8010410:	2800      	cmp	r0, #0
 8010412:	d139      	bne.n	8010488 <PixelConfiguration::Validate(unsigned int&)+0xfc>
 8010414:	2300      	movs	r3, #0
 8010416:	2a06      	cmp	r2, #6
 8010418:	bf08      	it	eq
 801041a:	60a3      	streq	r3, [r4, #8]
 801041c:	280d      	cmp	r0, #13
 801041e:	7563      	strb	r3, [r4, #21]
 8010420:	68e3      	ldr	r3, [r4, #12]
 8010422:	d119      	bne.n	8010458 <PixelConfiguration::Validate(unsigned int&)+0xcc>
 8010424:	b913      	cbnz	r3, 801042c <PixelConfiguration::Validate(unsigned int&)+0xa0>
 8010426:	4b1b      	ldr	r3, [pc, #108]	; (8010494 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 8010428:	60e3      	str	r3, [r4, #12]
 801042a:	e003      	b.n	8010434 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 801042c:	4a1a      	ldr	r2, [pc, #104]	; (8010498 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 801042e:	4293      	cmp	r3, r2
 8010430:	d900      	bls.n	8010434 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 8010432:	60e2      	str	r2, [r4, #12]
 8010434:	7d23      	ldrb	r3, [r4, #20]
 8010436:	b31b      	cbz	r3, 8010480 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 8010438:	7ce3      	ldrb	r3, [r4, #19]
 801043a:	b9ab      	cbnz	r3, 8010468 <PixelConfiguration::Validate(unsigned int&)+0xdc>
 801043c:	6822      	ldr	r2, [r4, #0]
 801043e:	b17a      	cbz	r2, 8010460 <PixelConfiguration::Validate(unsigned int&)+0xd4>
 8010440:	f1a2 030b 	sub.w	r3, r2, #11
 8010444:	2b01      	cmp	r3, #1
 8010446:	d90d      	bls.n	8010464 <PixelConfiguration::Validate(unsigned int&)+0xd8>
 8010448:	4b14      	ldr	r3, [pc, #80]	; (801049c <PixelConfiguration::Validate(unsigned int&)+0x110>)
 801044a:	4915      	ldr	r1, [pc, #84]	; (80104a0 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 801044c:	2a0d      	cmp	r2, #13
 801044e:	bf08      	it	eq
 8010450:	460b      	moveq	r3, r1
 8010452:	61a3      	str	r3, [r4, #24]
 8010454:	b002      	add	sp, #8
 8010456:	bd10      	pop	{r4, pc}
 8010458:	2b00      	cmp	r3, #0
 801045a:	d0e4      	beq.n	8010426 <PixelConfiguration::Validate(unsigned int&)+0x9a>
 801045c:	4a11      	ldr	r2, [pc, #68]	; (80104a4 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 801045e:	e7e6      	b.n	801042e <PixelConfiguration::Validate(unsigned int&)+0xa2>
 8010460:	4b11      	ldr	r3, [pc, #68]	; (80104a8 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 8010462:	e7f6      	b.n	8010452 <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010464:	4b11      	ldr	r3, [pc, #68]	; (80104ac <PixelConfiguration::Validate(unsigned int&)+0x120>)
 8010466:	e7f4      	b.n	8010452 <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010468:	f1a3 0214 	sub.w	r2, r3, #20
 801046c:	2a05      	cmp	r2, #5
 801046e:	d807      	bhi.n	8010480 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 8010470:	3b15      	subs	r3, #21
 8010472:	2b04      	cmp	r3, #4
 8010474:	bf96      	itet	ls
 8010476:	4a0e      	ldrls	r2, [pc, #56]	; (80104b0 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 8010478:	4b0e      	ldrhi	r3, [pc, #56]	; (80104b4 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 801047a:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 801047e:	e7e8      	b.n	8010452 <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010480:	4b07      	ldr	r3, [pc, #28]	; (80104a0 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 8010482:	e7e6      	b.n	8010452 <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010484:	23ff      	movs	r3, #255	; 0xff
 8010486:	e7c1      	b.n	801040c <PixelConfiguration::Validate(unsigned int&)+0x80>
 8010488:	280d      	cmp	r0, #13
 801048a:	d18e      	bne.n	80103aa <PixelConfiguration::Validate(unsigned int&)+0x1e>
 801048c:	e7c2      	b.n	8010414 <PixelConfiguration::Validate(unsigned int&)+0x88>
 801048e:	bf00      	nop
 8010490:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 8010494:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8010498:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 801049c:	0801a990 	stmdaeq	r1, {r4, r7, r8, fp, sp, pc}
 80104a0:	0801a690 	stmdaeq	r1, {r4, r7, r9, sl, sp, pc}
 80104a4:	017d7840 	cmneq	sp, r0, asr #16
 80104a8:	0801ac90 	stmdaeq	r1, {r4, r7, sl, fp, sp, pc}
 80104ac:	0801ad90 	stmdaeq	r1, {r4, r7, r8, sl, fp, sp, pc}
 80104b0:	0801a67c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, sp, pc}
 80104b4:	0801a790 	stmdaeq	r1, {r4, r7, r8, r9, sl, sp, pc}

080104b8 <PixelConfiguration::Print()>:
 80104b8:	b513      	push	{r0, r1, r4, lr}
 80104ba:	4604      	mov	r4, r0
 80104bc:	4827      	ldr	r0, [pc, #156]	; (801055c <PixelConfiguration::Print()+0xa4>)
 80104be:	f7f9 ffe3 	bl	800a488 <printf>
 80104c2:	6820      	ldr	r0, [r4, #0]
 80104c4:	f000 f860 	bl	8010588 <PixelType::GetType(pixel::Type)>
 80104c8:	6822      	ldr	r2, [r4, #0]
 80104ca:	4601      	mov	r1, r0
 80104cc:	4824      	ldr	r0, [pc, #144]	; (8010560 <PixelConfiguration::Print()+0xa8>)
 80104ce:	f7f9 ffdb 	bl	800a488 <printf>
 80104d2:	6861      	ldr	r1, [r4, #4]
 80104d4:	4823      	ldr	r0, [pc, #140]	; (8010564 <PixelConfiguration::Print()+0xac>)
 80104d6:	f7f9 ffd7 	bl	800a488 <printf>
 80104da:	7d63      	ldrb	r3, [r4, #21]
 80104dc:	2b00      	cmp	r3, #0
 80104de:	d034      	beq.n	801054a <PixelConfiguration::Print()+0x92>
 80104e0:	68a0      	ldr	r0, [r4, #8]
 80104e2:	f000 f8a9 	bl	8010638 <PixelType::GetMap(pixel::Map)>
 80104e6:	68a2      	ldr	r2, [r4, #8]
 80104e8:	4601      	mov	r1, r0
 80104ea:	481f      	ldr	r0, [pc, #124]	; (8010568 <PixelConfiguration::Print()+0xb0>)
 80104ec:	f7f9 ffcc 	bl	800a488 <printf>
 80104f0:	7c20      	ldrb	r0, [r4, #16]
 80104f2:	f000 f8b7 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 80104f6:	ee10 0a10 	vmov	r0, s0
 80104fa:	f7f8 fd4b 	bl	8008f94 <__aeabi_f2d>
 80104fe:	460b      	mov	r3, r1
 8010500:	7c21      	ldrb	r1, [r4, #16]
 8010502:	9100      	str	r1, [sp, #0]
 8010504:	4602      	mov	r2, r0
 8010506:	4819      	ldr	r0, [pc, #100]	; (801056c <PixelConfiguration::Print()+0xb4>)
 8010508:	f7f9 ffbe 	bl	800a488 <printf>
 801050c:	7c60      	ldrb	r0, [r4, #17]
 801050e:	f000 f8a9 	bl	8010664 <PixelType::ConvertTxH(unsigned char)>
 8010512:	ee10 0a10 	vmov	r0, s0
 8010516:	f7f8 fd3d 	bl	8008f94 <__aeabi_f2d>
 801051a:	460b      	mov	r3, r1
 801051c:	7c61      	ldrb	r1, [r4, #17]
 801051e:	9100      	str	r1, [sp, #0]
 8010520:	4602      	mov	r2, r0
 8010522:	4813      	ldr	r0, [pc, #76]	; (8010570 <PixelConfiguration::Print()+0xb8>)
 8010524:	f7f9 ffb0 	bl	800a488 <printf>
 8010528:	7d21      	ldrb	r1, [r4, #20]
 801052a:	4a12      	ldr	r2, [pc, #72]	; (8010574 <PixelConfiguration::Print()+0xbc>)
 801052c:	4b12      	ldr	r3, [pc, #72]	; (8010578 <PixelConfiguration::Print()+0xc0>)
 801052e:	4813      	ldr	r0, [pc, #76]	; (801057c <PixelConfiguration::Print()+0xc4>)
 8010530:	2900      	cmp	r1, #0
 8010532:	bf14      	ite	ne
 8010534:	4611      	movne	r1, r2
 8010536:	4619      	moveq	r1, r3
 8010538:	f7f9 ffa6 	bl	800a488 <printf>
 801053c:	68e1      	ldr	r1, [r4, #12]
 801053e:	4810      	ldr	r0, [pc, #64]	; (8010580 <PixelConfiguration::Print()+0xc8>)
 8010540:	b002      	add	sp, #8
 8010542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010546:	f7f9 bf9f 	b.w	800a488 <printf>
 801054a:	6823      	ldr	r3, [r4, #0]
 801054c:	3b0b      	subs	r3, #11
 801054e:	2b01      	cmp	r3, #1
 8010550:	d8ea      	bhi.n	8010528 <PixelConfiguration::Print()+0x70>
 8010552:	7ca1      	ldrb	r1, [r4, #18]
 8010554:	480b      	ldr	r0, [pc, #44]	; (8010584 <PixelConfiguration::Print()+0xcc>)
 8010556:	f7f9 ff97 	bl	800a488 <printf>
 801055a:	e7e5      	b.n	8010528 <PixelConfiguration::Print()+0x70>
 801055c:	0801a5c2 	stmdaeq	r1, {r1, r6, r7, r8, sl, sp, pc}
 8010560:	0801a5d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl, sp, pc}
 8010564:	0801a5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, sp, pc}
 8010568:	0801a5fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, sp, pc}
 801056c:	0801a60e 	stmdaeq	r1, {r1, r2, r3, r9, sl, sp, pc}
 8010570:	0801a626 	stmdaeq	r1, {r1, r2, r5, r9, sl, sp, pc}
 8010574:	0801a5bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, sp, pc}
 8010578:	0801a5bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sl, sp, pc}
 801057c:	0801a655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, sp, pc}
 8010580:	0801a66b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, sp, pc}
 8010584:	0801a63e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, sl, sp, pc}

08010588 <PixelType::GetType(pixel::Type)>:
 8010588:	280d      	cmp	r0, #13
 801058a:	bfda      	itte	le
 801058c:	4b02      	ldrle	r3, [pc, #8]	; (8010598 <PixelType::GetType(pixel::Type)+0x10>)
 801058e:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 8010592:	4802      	ldrgt	r0, [pc, #8]	; (801059c <PixelType::GetType(pixel::Type)+0x14>)
 8010594:	4770      	bx	lr
 8010596:	bf00      	nop
 8010598:	0801aec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, sp, pc}
 801059c:	0801ae90 	stmdaeq	r1, {r4, r7, r9, sl, fp, sp, pc}

080105a0 <PixelType::GetType(char const*)>:
 80105a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105a2:	4c10      	ldr	r4, [pc, #64]	; (80105e4 <PixelType::GetType(char const*)+0x44>)
 80105a4:	2300      	movs	r3, #0
 80105a6:	1e47      	subs	r7, r0, #1
 80105a8:	1e66      	subs	r6, r4, #1
 80105aa:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 80105ae:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
 80105b2:	2a19      	cmp	r2, #25
 80105b4:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 80105b8:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 80105bc:	460d      	mov	r5, r1
 80105be:	bf98      	it	ls
 80105c0:	f101 0520 	addls.w	r5, r1, #32
 80105c4:	f1bc 0f19 	cmp.w	ip, #25
 80105c8:	bf98      	it	ls
 80105ca:	3220      	addls	r2, #32
 80105cc:	42aa      	cmp	r2, r5
 80105ce:	d005      	beq.n	80105dc <PixelType::GetType(char const*)+0x3c>
 80105d0:	3301      	adds	r3, #1
 80105d2:	2b0e      	cmp	r3, #14
 80105d4:	f104 0408 	add.w	r4, r4, #8
 80105d8:	d1e5      	bne.n	80105a6 <PixelType::GetType(char const*)+0x6>
 80105da:	e001      	b.n	80105e0 <PixelType::GetType(char const*)+0x40>
 80105dc:	2900      	cmp	r1, #0
 80105de:	d1e4      	bne.n	80105aa <PixelType::GetType(char const*)+0xa>
 80105e0:	4618      	mov	r0, r3
 80105e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105e4:	0801aec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, sp, pc}

080105e8 <PixelType::GetMap(char const*)>:
 80105e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105ea:	4a12      	ldr	r2, [pc, #72]	; (8010634 <PixelType::GetMap(char const*)+0x4c>)
 80105ec:	2300      	movs	r3, #0
 80105ee:	1e55      	subs	r5, r2, #1
 80105f0:	1e46      	subs	r6, r0, #1
 80105f2:	f102 0c02 	add.w	ip, r2, #2
 80105f6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80105fa:	f1a1 0441 	sub.w	r4, r1, #65	; 0x41
 80105fe:	2c19      	cmp	r4, #25
 8010600:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 8010604:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8010608:	460f      	mov	r7, r1
 801060a:	bf98      	it	ls
 801060c:	f101 0720 	addls.w	r7, r1, #32
 8010610:	f1be 0f19 	cmp.w	lr, #25
 8010614:	bf98      	it	ls
 8010616:	3420      	addls	r4, #32
 8010618:	42bc      	cmp	r4, r7
 801061a:	d006      	beq.n	801062a <PixelType::GetMap(char const*)+0x42>
 801061c:	3301      	adds	r3, #1
 801061e:	2b06      	cmp	r3, #6
 8010620:	f102 0204 	add.w	r2, r2, #4
 8010624:	d1e3      	bne.n	80105ee <PixelType::GetMap(char const*)+0x6>
 8010626:	4618      	mov	r0, r3
 8010628:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801062a:	2900      	cmp	r1, #0
 801062c:	d0fb      	beq.n	8010626 <PixelType::GetMap(char const*)+0x3e>
 801062e:	4565      	cmp	r5, ip
 8010630:	d1e1      	bne.n	80105f6 <PixelType::GetMap(char const*)+0xe>
 8010632:	e7f8      	b.n	8010626 <PixelType::GetMap(char const*)+0x3e>
 8010634:	0801aeac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, sp, pc}

08010638 <PixelType::GetMap(pixel::Map)>:
 8010638:	2805      	cmp	r0, #5
 801063a:	bfda      	itte	le
 801063c:	4b02      	ldrle	r3, [pc, #8]	; (8010648 <PixelType::GetMap(pixel::Map)+0x10>)
 801063e:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 8010642:	4802      	ldrgt	r0, [pc, #8]	; (801064c <PixelType::GetMap(pixel::Map)+0x14>)
 8010644:	4770      	bx	lr
 8010646:	bf00      	nop
 8010648:	0801aeac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, sp, pc}
 801064c:	0801ae98 	stmdaeq	r1, {r3, r4, r7, r9, sl, fp, sp, pc}

08010650 <PixelType::GetMap(pixel::Type)>:
 8010650:	3801      	subs	r0, #1
 8010652:	2809      	cmp	r0, #9
 8010654:	bf9a      	itte	ls
 8010656:	4b02      	ldrls	r3, [pc, #8]	; (8010660 <PixelType::GetMap(pixel::Type)+0x10>)
 8010658:	5618      	ldrsbls	r0, [r3, r0]
 801065a:	2002      	movhi	r0, #2
 801065c:	4770      	bx	lr
 801065e:	bf00      	nop
 8010660:	0801aea2 	stmdaeq	r1, {r1, r5, r7, r9, sl, fp, sp, pc}

08010664 <PixelType::ConvertTxH(unsigned char)>:
 8010664:	28f0      	cmp	r0, #240	; 0xf0
 8010666:	d017      	beq.n	8010698 <PixelType::ConvertTxH(unsigned char)+0x34>
 8010668:	d80c      	bhi.n	8010684 <PixelType::ConvertTxH(unsigned char)+0x20>
 801066a:	28c0      	cmp	r0, #192	; 0xc0
 801066c:	d017      	beq.n	801069e <PixelType::ConvertTxH(unsigned char)+0x3a>
 801066e:	28e0      	cmp	r0, #224	; 0xe0
 8010670:	d018      	beq.n	80106a4 <PixelType::ConvertTxH(unsigned char)+0x40>
 8010672:	ed9f 0a11 	vldr	s0, [pc, #68]	; 80106b8 <PixelType::ConvertTxH(unsigned char)+0x54>
 8010676:	2880      	cmp	r0, #128	; 0x80
 8010678:	eef4 7a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
 801067c:	bf08      	it	eq
 801067e:	eeb0 0a67 	vmoveq.f32	s0, s15
 8010682:	4770      	bx	lr
 8010684:	28fc      	cmp	r0, #252	; 0xfc
 8010686:	d010      	beq.n	80106aa <PixelType::ConvertTxH(unsigned char)+0x46>
 8010688:	28fe      	cmp	r0, #254	; 0xfe
 801068a:	d011      	beq.n	80106b0 <PixelType::ConvertTxH(unsigned char)+0x4c>
 801068c:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 80106b8 <PixelType::ConvertTxH(unsigned char)+0x54>
 8010690:	28f8      	cmp	r0, #248	; 0xf8
 8010692:	eef6 7a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
 8010696:	e7f1      	b.n	801067c <PixelType::ConvertTxH(unsigned char)+0x18>
 8010698:	eeb6 0a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
 801069c:	4770      	bx	lr
 801069e:	eeb5 0a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
 80106a2:	4770      	bx	lr
 80106a4:	eeb5 0a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
 80106a8:	4770      	bx	lr
 80106aa:	eeb6 0a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
 80106ae:	4770      	bx	lr
 80106b0:	ed9f 0a02 	vldr	s0, [pc, #8]	; 80106bc <PixelType::ConvertTxH(unsigned char)+0x58>
 80106b4:	4770      	bx	lr
 80106b6:	bf00      	nop
 80106b8:	00000000 	andeq	r0, r0, r0
 80106bc:	3f8c0000 	svccc	0x008c0000

080106c0 <PixelType::ConvertTxH(float)>:
 80106c0:	eddf 7a24 	vldr	s15, [pc, #144]	; 8010754 <PixelType::ConvertTxH(float)+0x94>
 80106c4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80106c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106cc:	d433      	bmi.n	8010736 <PixelType::ConvertTxH(float)+0x76>
 80106ce:	eef4 7a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
 80106d2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80106d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106da:	d42e      	bmi.n	801073a <PixelType::ConvertTxH(float)+0x7a>
 80106dc:	eef5 7a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
 80106e0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80106e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106e8:	d429      	bmi.n	801073e <PixelType::ConvertTxH(float)+0x7e>
 80106ea:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8010758 <PixelType::ConvertTxH(float)+0x98>
 80106ee:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80106f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106f6:	d424      	bmi.n	8010742 <PixelType::ConvertTxH(float)+0x82>
 80106f8:	eddf 7a18 	vldr	s15, [pc, #96]	; 801075c <PixelType::ConvertTxH(float)+0x9c>
 80106fc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010704:	d41f      	bmi.n	8010746 <PixelType::ConvertTxH(float)+0x86>
 8010706:	eddf 7a16 	vldr	s15, [pc, #88]	; 8010760 <PixelType::ConvertTxH(float)+0xa0>
 801070a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801070e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010712:	d41a      	bmi.n	801074a <PixelType::ConvertTxH(float)+0x8a>
 8010714:	eddf 7a13 	vldr	s15, [pc, #76]	; 8010764 <PixelType::ConvertTxH(float)+0xa4>
 8010718:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801071c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010720:	d415      	bmi.n	801074e <PixelType::ConvertTxH(float)+0x8e>
 8010722:	eddf 7a11 	vldr	s15, [pc, #68]	; 8010768 <PixelType::ConvertTxH(float)+0xa8>
 8010726:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801072a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801072e:	bf4c      	ite	mi
 8010730:	20fe      	movmi	r0, #254	; 0xfe
 8010732:	2000      	movpl	r0, #0
 8010734:	4770      	bx	lr
 8010736:	2000      	movs	r0, #0
 8010738:	4770      	bx	lr
 801073a:	2080      	movs	r0, #128	; 0x80
 801073c:	4770      	bx	lr
 801073e:	20c0      	movs	r0, #192	; 0xc0
 8010740:	4770      	bx	lr
 8010742:	20e0      	movs	r0, #224	; 0xe0
 8010744:	4770      	bx	lr
 8010746:	20f0      	movs	r0, #240	; 0xf0
 8010748:	4770      	bx	lr
 801074a:	20f8      	movs	r0, #248	; 0xf8
 801074c:	4770      	bx	lr
 801074e:	20fc      	movs	r0, #252	; 0xfc
 8010750:	4770      	bx	lr
 8010752:	bf00      	nop
 8010754:	3da00000 	stccc	0, cr0, [r0]
 8010758:	3f0c0000 	svccc	0x000c0000
 801075c:	3f340000 	svccc	0x00340000
 8010760:	3f5c0000 	svccc	0x005c0000
 8010764:	3f820000 	svccc	0x00820000
 8010768:	3f960000 	svccc	0x00960000

0801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 801076c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801076e:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8010772:	f3c2 2607 	ubfx	r6, r2, #8, #8
 8010776:	b2d4      	uxtb	r4, r2
 8010778:	4a10      	ldr	r2, [pc, #64]	; (80107bc <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 801077a:	4605      	mov	r5, r0
 801077c:	6810      	ldr	r0, [r2, #0]
 801077e:	6802      	ldr	r2, [r0, #0]
 8010780:	2a07      	cmp	r2, #7
 8010782:	d007      	beq.n	8010794 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 8010784:	460a      	mov	r2, r1
 8010786:	e9cd 6400 	strd	r6, r4, [sp]
 801078a:	4629      	mov	r1, r5
 801078c:	f000 ff80 	bl	8011690 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8010790:	b004      	add	sp, #16
 8010792:	bd70      	pop	{r4, r5, r6, pc}
 8010794:	42b3      	cmp	r3, r6
 8010796:	f04f 0200 	mov.w	r2, #0
 801079a:	d10a      	bne.n	80107b2 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 801079c:	42a3      	cmp	r3, r4
 801079e:	d108      	bne.n	80107b2 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 80107a0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80107a4:	9200      	str	r2, [sp, #0]
 80107a6:	4613      	mov	r3, r2
 80107a8:	460a      	mov	r2, r1
 80107aa:	4629      	mov	r1, r5
 80107ac:	f000 fff2 	bl	8011794 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 80107b0:	e7ee      	b.n	8010790 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 80107b2:	e9cd 4201 	strd	r4, r2, [sp, #4]
 80107b6:	9600      	str	r6, [sp, #0]
 80107b8:	e7f6      	b.n	80107a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 80107ba:	bf00      	nop
 80107bc:	2000125c 	andcs	r1, r0, ip, asr r2

080107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 80107c0:	b570      	push	{r4, r5, r6, lr}
 80107c2:	4d07      	ldr	r5, [pc, #28]	; (80107e0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 80107c4:	4606      	mov	r6, r0
 80107c6:	2400      	movs	r4, #0
 80107c8:	682b      	ldr	r3, [r5, #0]
 80107ca:	429c      	cmp	r4, r3
 80107cc:	d300      	bcc.n	80107d0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 80107ce:	bd70      	pop	{r4, r5, r6, pc}
 80107d0:	4621      	mov	r1, r4
 80107d2:	2200      	movs	r2, #0
 80107d4:	4630      	mov	r0, r6
 80107d6:	f7ff ffc9 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 80107da:	3401      	adds	r4, #1
 80107dc:	e7f4      	b.n	80107c8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 80107de:	bf00      	nop
 80107e0:	20001258 	andcs	r1, r0, r8, asr r2

080107e4 <PixelPatterns::PixelPatterns(unsigned int)>:
 80107e4:	4b0c      	ldr	r3, [pc, #48]	; (8010818 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 80107e6:	4a0d      	ldr	r2, [pc, #52]	; (801081c <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 80107e8:	681b      	ldr	r3, [r3, #0]
 80107ea:	b510      	push	{r4, lr}
 80107ec:	2910      	cmp	r1, #16
 80107ee:	6013      	str	r3, [r2, #0]
 80107f0:	4a0b      	ldr	r2, [pc, #44]	; (8010820 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 80107f2:	bf28      	it	cs
 80107f4:	2110      	movcs	r1, #16
 80107f6:	6011      	str	r1, [r2, #0]
 80107f8:	685a      	ldr	r2, [r3, #4]
 80107fa:	4b0a      	ldr	r3, [pc, #40]	; (8010824 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 80107fc:	601a      	str	r2, [r3, #0]
 80107fe:	4b0a      	ldr	r3, [pc, #40]	; (8010828 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 8010800:	681c      	ldr	r4, [r3, #0]
 8010802:	4b0a      	ldr	r3, [pc, #40]	; (801082c <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 8010804:	2210      	movs	r2, #16
 8010806:	2100      	movs	r1, #0
 8010808:	3a01      	subs	r2, #1
 801080a:	61d9      	str	r1, [r3, #28]
 801080c:	601c      	str	r4, [r3, #0]
 801080e:	6199      	str	r1, [r3, #24]
 8010810:	f103 0320 	add.w	r3, r3, #32
 8010814:	d1f8      	bne.n	8010808 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 8010816:	bd10      	pop	{r4, pc}
 8010818:	20001268 	andcs	r1, r0, r8, ror #4
 801081c:	2000125c 	andcs	r1, r0, ip, asr r2
 8010820:	20001250 	andcs	r1, r0, r0, asr r2
 8010824:	20001258 	andcs	r1, r0, r8, asr r2
 8010828:	2000fd94 	mulcs	r0, r4, sp
 801082c:	20001050 	andcs	r1, r0, r0, asr r0

08010830 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 8010830:	2805      	cmp	r0, #5
 8010832:	bfdd      	ittte	le
 8010834:	4b02      	ldrle	r3, [pc, #8]	; (8010840 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 8010836:	220e      	movle	r2, #14
 8010838:	fb02 3000 	mlale	r0, r2, r0, r3
 801083c:	4801      	ldrgt	r0, [pc, #4]	; (8010844 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 801083e:	4770      	bx	lr
 8010840:	0801af34 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, fp, sp, pc}
 8010844:	0801ae90 	stmdaeq	r1, {r4, r7, r9, sl, fp, sp, pc}

08010848 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010848:	b5e0      	push	{r5, r6, r7, lr}
 801084a:	4608      	mov	r0, r1
 801084c:	460d      	mov	r5, r1
 801084e:	4617      	mov	r7, r2
 8010850:	461e      	mov	r6, r3
 8010852:	f7ff ffb5 	bl	80107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010856:	4906      	ldr	r1, [pc, #24]	; (8010870 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 8010858:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 801085c:	2301      	movs	r3, #1
 801085e:	61cb      	str	r3, [r1, #28]
 8010860:	22ff      	movs	r2, #255	; 0xff
 8010862:	2300      	movs	r3, #0
 8010864:	e9c1 2304 	strd	r2, r3, [r1, #16]
 8010868:	604f      	str	r7, [r1, #4]
 801086a:	618e      	str	r6, [r1, #24]
 801086c:	bde0      	pop	{r5, r6, r7, pc}
 801086e:	bf00      	nop
 8010870:	20001050 	andcs	r1, r0, r0, asr r0

08010874 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010874:	b5e0      	push	{r5, r6, r7, lr}
 8010876:	4608      	mov	r0, r1
 8010878:	460d      	mov	r5, r1
 801087a:	461e      	mov	r6, r3
 801087c:	4617      	mov	r7, r2
 801087e:	f7ff ff9f 	bl	80107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010882:	4908      	ldr	r1, [pc, #32]	; (80108a4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010884:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010888:	2302      	movs	r3, #2
 801088a:	61cb      	str	r3, [r1, #28]
 801088c:	9b04      	ldr	r3, [sp, #16]
 801088e:	604b      	str	r3, [r1, #4]
 8010890:	4b05      	ldr	r3, [pc, #20]	; (80108a8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 8010892:	681b      	ldr	r3, [r3, #0]
 8010894:	610b      	str	r3, [r1, #16]
 8010896:	2300      	movs	r3, #0
 8010898:	614b      	str	r3, [r1, #20]
 801089a:	9b05      	ldr	r3, [sp, #20]
 801089c:	618b      	str	r3, [r1, #24]
 801089e:	e9c1 7602 	strd	r7, r6, [r1, #8]
 80108a2:	bde0      	pop	{r5, r6, r7, pc}
 80108a4:	20001050 	andcs	r1, r0, r0, asr r0
 80108a8:	20001258 	andcs	r1, r0, r8, asr r2

080108ac <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 80108ac:	b5e0      	push	{r5, r6, r7, lr}
 80108ae:	4608      	mov	r0, r1
 80108b0:	460d      	mov	r5, r1
 80108b2:	461f      	mov	r7, r3
 80108b4:	4616      	mov	r6, r2
 80108b6:	f7ff ff83 	bl	80107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 80108ba:	4907      	ldr	r1, [pc, #28]	; (80108d8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 80108bc:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 80108c0:	2303      	movs	r3, #3
 80108c2:	61cb      	str	r3, [r1, #28]
 80108c4:	4b05      	ldr	r3, [pc, #20]	; (80108dc <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 80108c6:	604f      	str	r7, [r1, #4]
 80108c8:	681b      	ldr	r3, [r3, #0]
 80108ca:	610b      	str	r3, [r1, #16]
 80108cc:	2300      	movs	r3, #0
 80108ce:	614b      	str	r3, [r1, #20]
 80108d0:	9b04      	ldr	r3, [sp, #16]
 80108d2:	608e      	str	r6, [r1, #8]
 80108d4:	618b      	str	r3, [r1, #24]
 80108d6:	bde0      	pop	{r5, r6, r7, pc}
 80108d8:	20001050 	andcs	r1, r0, r0, asr r0
 80108dc:	20001258 	andcs	r1, r0, r8, asr r2

080108e0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 80108e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108e2:	4608      	mov	r0, r1
 80108e4:	460d      	mov	r5, r1
 80108e6:	461f      	mov	r7, r3
 80108e8:	4616      	mov	r6, r2
 80108ea:	4c14      	ldr	r4, [pc, #80]	; (801093c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 80108ec:	f7ff ff68 	bl	80107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 80108f0:	4913      	ldr	r1, [pc, #76]	; (8010940 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 80108f2:	6820      	ldr	r0, [r4, #0]
 80108f4:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 80108f8:	2304      	movs	r3, #4
 80108fa:	61cb      	str	r3, [r1, #28]
 80108fc:	1e43      	subs	r3, r0, #1
 80108fe:	005b      	lsls	r3, r3, #1
 8010900:	b29b      	uxth	r3, r3
 8010902:	4d10      	ldr	r5, [pc, #64]	; (8010944 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 8010904:	610b      	str	r3, [r1, #16]
 8010906:	2300      	movs	r3, #0
 8010908:	614b      	str	r3, [r1, #20]
 801090a:	682b      	ldr	r3, [r5, #0]
 801090c:	604f      	str	r7, [r1, #4]
 801090e:	608e      	str	r6, [r1, #8]
 8010910:	b97b      	cbnz	r3, 8010932 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 8010912:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8010916:	4298      	cmp	r0, r3
 8010918:	bf34      	ite	cc
 801091a:	0080      	lslcc	r0, r0, #2
 801091c:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 8010920:	f005 f96a 	bl	8015bf8 <operator new[](unsigned int)>
 8010924:	6823      	ldr	r3, [r4, #0]
 8010926:	6028      	str	r0, [r5, #0]
 8010928:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801092c:	2200      	movs	r2, #0
 801092e:	4298      	cmp	r0, r3
 8010930:	d100      	bne.n	8010934 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 8010932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010934:	f840 2b04 	str.w	r2, [r0], #4
 8010938:	e7f9      	b.n	801092e <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 801093a:	bf00      	nop
 801093c:	20001258 	andcs	r1, r0, r8, asr r2
 8010940:	20001050 	andcs	r1, r0, r0, asr r0
 8010944:	20001254 	andcs	r1, r0, r4, asr r2

08010948 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010948:	b5e0      	push	{r5, r6, r7, lr}
 801094a:	4608      	mov	r0, r1
 801094c:	460d      	mov	r5, r1
 801094e:	461e      	mov	r6, r3
 8010950:	4617      	mov	r7, r2
 8010952:	f7ff ff35 	bl	80107c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010956:	4908      	ldr	r1, [pc, #32]	; (8010978 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010958:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 801095c:	2305      	movs	r3, #5
 801095e:	61cb      	str	r3, [r1, #28]
 8010960:	9b05      	ldr	r3, [sp, #20]
 8010962:	604b      	str	r3, [r1, #4]
 8010964:	9b04      	ldr	r3, [sp, #16]
 8010966:	610b      	str	r3, [r1, #16]
 8010968:	2300      	movs	r3, #0
 801096a:	614b      	str	r3, [r1, #20]
 801096c:	9b06      	ldr	r3, [sp, #24]
 801096e:	618b      	str	r3, [r1, #24]
 8010970:	e9c1 7602 	strd	r7, r6, [r1, #8]
 8010974:	bde0      	pop	{r5, r6, r7, pc}
 8010976:	bf00      	nop
 8010978:	20001050 	andcs	r1, r0, r0, asr r0

0801097c <PixelPatterns::Wheel(unsigned char)>:
 801097c:	43cb      	mvns	r3, r1
 801097e:	b2db      	uxtb	r3, r3
 8010980:	2b54      	cmp	r3, #84	; 0x54
 8010982:	d809      	bhi.n	8010998 <PixelPatterns::Wheel(unsigned char)+0x1c>
 8010984:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 8010988:	b2db      	uxtb	r3, r3
 801098a:	1e5a      	subs	r2, r3, #1
 801098c:	4258      	negs	r0, r3
 801098e:	b2d2      	uxtb	r2, r2
 8010990:	b2c0      	uxtb	r0, r0
 8010992:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8010996:	4770      	bx	lr
 8010998:	2ba9      	cmp	r3, #169	; 0xa9
 801099a:	d809      	bhi.n	80109b0 <PixelPatterns::Wheel(unsigned char)+0x34>
 801099c:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 80109a0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80109a4:	b2c9      	uxtb	r1, r1
 80109a6:	43c8      	mvns	r0, r1
 80109a8:	b2c0      	uxtb	r0, r0
 80109aa:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80109ae:	4770      	bx	lr
 80109b0:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 80109b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80109b8:	b2c9      	uxtb	r1, r1
 80109ba:	0208      	lsls	r0, r1, #8
 80109bc:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 80109c0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80109c4:	4770      	bx	lr
	...

080109c8 <PixelPatterns::Increment(unsigned int)>:
 80109c8:	4a0d      	ldr	r2, [pc, #52]	; (8010a00 <PixelPatterns::Increment(unsigned int)+0x38>)
 80109ca:	b510      	push	{r4, lr}
 80109cc:	014c      	lsls	r4, r1, #5
 80109ce:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 80109d2:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 80109d6:	b930      	cbnz	r0, 80109e6 <PixelPatterns::Increment(unsigned int)+0x1e>
 80109d8:	690a      	ldr	r2, [r1, #16]
 80109da:	3301      	adds	r3, #1
 80109dc:	4293      	cmp	r3, r2
 80109de:	bf18      	it	ne
 80109e0:	4618      	movne	r0, r3
 80109e2:	6148      	str	r0, [r1, #20]
 80109e4:	bd10      	pop	{r4, pc}
 80109e6:	b92b      	cbnz	r3, 80109f4 <PixelPatterns::Increment(unsigned int)+0x2c>
 80109e8:	4422      	add	r2, r4
 80109ea:	6913      	ldr	r3, [r2, #16]
 80109ec:	3b01      	subs	r3, #1
 80109ee:	b29b      	uxth	r3, r3
 80109f0:	6153      	str	r3, [r2, #20]
 80109f2:	e7f7      	b.n	80109e4 <PixelPatterns::Increment(unsigned int)+0x1c>
 80109f4:	3b01      	subs	r3, #1
 80109f6:	614b      	str	r3, [r1, #20]
 80109f8:	2b00      	cmp	r3, #0
 80109fa:	d1f3      	bne.n	80109e4 <PixelPatterns::Increment(unsigned int)+0x1c>
 80109fc:	e7f4      	b.n	80109e8 <PixelPatterns::Increment(unsigned int)+0x20>
 80109fe:	bf00      	nop
 8010a00:	20001050 	andcs	r1, r0, r0, asr r0

08010a04 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 8010a04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010a08:	4b12      	ldr	r3, [pc, #72]	; (8010a54 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 8010a0a:	f8df 804c 	ldr.w	r8, [pc, #76]	; 8010a58 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 8010a0e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010a12:	4605      	mov	r5, r0
 8010a14:	f8d3 9014 	ldr.w	r9, [r3, #20]
 8010a18:	460c      	mov	r4, r1
 8010a1a:	2700      	movs	r7, #0
 8010a1c:	f8d8 3000 	ldr.w	r3, [r8]
 8010a20:	b2be      	uxth	r6, r7
 8010a22:	42b3      	cmp	r3, r6
 8010a24:	f107 0701 	add.w	r7, r7, #1
 8010a28:	d805      	bhi.n	8010a36 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 8010a2a:	4621      	mov	r1, r4
 8010a2c:	4628      	mov	r0, r5
 8010a2e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010a32:	f7ff bfc9 	b.w	80109c8 <PixelPatterns::Increment(unsigned int)>
 8010a36:	0231      	lsls	r1, r6, #8
 8010a38:	fbb1 f1f3 	udiv	r1, r1, r3
 8010a3c:	4449      	add	r1, r9
 8010a3e:	b2c9      	uxtb	r1, r1
 8010a40:	4628      	mov	r0, r5
 8010a42:	f7ff ff9b 	bl	801097c <PixelPatterns::Wheel(unsigned char)>
 8010a46:	4631      	mov	r1, r6
 8010a48:	4602      	mov	r2, r0
 8010a4a:	4620      	mov	r0, r4
 8010a4c:	f7ff fe8e 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010a50:	e7e4      	b.n	8010a1c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 8010a52:	bf00      	nop
 8010a54:	20001050 	andcs	r1, r0, r0, asr r0
 8010a58:	20001258 	andcs	r1, r0, r8, asr r2

08010a5c <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 8010a5c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a60:	4b13      	ldr	r3, [pc, #76]	; (8010ab0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 8010a62:	4e14      	ldr	r6, [pc, #80]	; (8010ab4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 8010a64:	f8df a050 	ldr.w	sl, [pc, #80]	; 8010ab8 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 8010a68:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010a6c:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 8010a70:	f8d3 9014 	ldr.w	r9, [r3, #20]
 8010a74:	4605      	mov	r5, r0
 8010a76:	460c      	mov	r4, r1
 8010a78:	f04f 0b00 	mov.w	fp, #0
 8010a7c:	6833      	ldr	r3, [r6, #0]
 8010a7e:	fa1f f18b 	uxth.w	r1, fp
 8010a82:	428b      	cmp	r3, r1
 8010a84:	d805      	bhi.n	8010a92 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 8010a86:	4621      	mov	r1, r4
 8010a88:	4628      	mov	r0, r5
 8010a8a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a8e:	f7ff bf9b 	b.w	80109c8 <PixelPatterns::Increment(unsigned int)>
 8010a92:	eb09 0301 	add.w	r3, r9, r1
 8010a96:	fb0a f303 	mul.w	r3, sl, r3
 8010a9a:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 8010a9e:	bf94      	ite	ls
 8010aa0:	463a      	movls	r2, r7
 8010aa2:	4642      	movhi	r2, r8
 8010aa4:	4620      	mov	r0, r4
 8010aa6:	f7ff fe61 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010aaa:	f10b 0b01 	add.w	fp, fp, #1
 8010aae:	e7e5      	b.n	8010a7c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 8010ab0:	20001050 	andcs	r1, r0, r0, asr r0
 8010ab4:	20001258 	andcs	r1, r0, r8, asr r2
 8010ab8:	aaaaaaab 	bge	6abb56c <__stack_size+0x6ab756c>

08010abc <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 8010abc:	b538      	push	{r3, r4, r5, lr}
 8010abe:	4b08      	ldr	r3, [pc, #32]	; (8010ae0 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 8010ac0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010ac4:	460c      	mov	r4, r1
 8010ac6:	4605      	mov	r5, r0
 8010ac8:	6959      	ldr	r1, [r3, #20]
 8010aca:	689a      	ldr	r2, [r3, #8]
 8010acc:	4620      	mov	r0, r4
 8010ace:	f7ff fe4d 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010ad2:	4621      	mov	r1, r4
 8010ad4:	4628      	mov	r0, r5
 8010ad6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010ada:	f7ff bf75 	b.w	80109c8 <PixelPatterns::Increment(unsigned int)>
 8010ade:	bf00      	nop
 8010ae0:	20001050 	andcs	r1, r0, r0, asr r0

08010ae4 <PixelPatterns::ScannerUpdate(unsigned int)>:
 8010ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ae8:	4b29      	ldr	r3, [pc, #164]	; (8010b90 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>)
 8010aea:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8010b94 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 8010aee:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 8010b98 <PixelPatterns::ScannerUpdate(unsigned int)+0xb4>
 8010af2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010af6:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 8010afa:	b085      	sub	sp, #20
 8010afc:	689d      	ldr	r5, [r3, #8]
 8010afe:	00b3      	lsls	r3, r6, #2
 8010b00:	4680      	mov	r8, r0
 8010b02:	9301      	str	r3, [sp, #4]
 8010b04:	4608      	mov	r0, r1
 8010b06:	f04f 0900 	mov.w	r9, #0
 8010b0a:	1bbf      	subs	r7, r7, r6
 8010b0c:	f8da 2000 	ldr.w	r2, [sl]
 8010b10:	fa1f f489 	uxth.w	r4, r9
 8010b14:	42a2      	cmp	r2, r4
 8010b16:	d806      	bhi.n	8010b26 <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 8010b18:	4601      	mov	r1, r0
 8010b1a:	4640      	mov	r0, r8
 8010b1c:	b005      	add	sp, #20
 8010b1e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b22:	f7ff bf51 	b.w	80109c8 <PixelPatterns::Increment(unsigned int)>
 8010b26:	42a6      	cmp	r6, r4
 8010b28:	d10c      	bne.n	8010b44 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 8010b2a:	462a      	mov	r2, r5
 8010b2c:	4631      	mov	r1, r6
 8010b2e:	9002      	str	r0, [sp, #8]
 8010b30:	f7ff fe1c 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010b34:	f8db 2000 	ldr.w	r2, [fp]
 8010b38:	9b01      	ldr	r3, [sp, #4]
 8010b3a:	50d5      	str	r5, [r2, r3]
 8010b3c:	9802      	ldr	r0, [sp, #8]
 8010b3e:	f109 0901 	add.w	r9, r9, #1
 8010b42:	e7e3      	b.n	8010b0c <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 8010b44:	42a7      	cmp	r7, r4
 8010b46:	d109      	bne.n	8010b5c <PixelPatterns::ScannerUpdate(unsigned int)+0x78>
 8010b48:	462a      	mov	r2, r5
 8010b4a:	4639      	mov	r1, r7
 8010b4c:	9002      	str	r0, [sp, #8]
 8010b4e:	f7ff fe0d 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010b52:	f8db 2000 	ldr.w	r2, [fp]
 8010b56:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 8010b5a:	e7ef      	b.n	8010b3c <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 8010b5c:	f8db 2000 	ldr.w	r2, [fp]
 8010b60:	9002      	str	r0, [sp, #8]
 8010b62:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 8010b66:	f3c1 2246 	ubfx	r2, r1, #9, #7
 8010b6a:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 8010b6e:	0212      	lsls	r2, r2, #8
 8010b70:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8010b74:	f3c1 0146 	ubfx	r1, r1, #1, #7
 8010b78:	430a      	orrs	r2, r1
 8010b7a:	4621      	mov	r1, r4
 8010b7c:	9203      	str	r2, [sp, #12]
 8010b7e:	f7ff fdf5 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010b82:	f8db 1000 	ldr.w	r1, [fp]
 8010b86:	9a03      	ldr	r2, [sp, #12]
 8010b88:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 8010b8c:	e7d6      	b.n	8010b3c <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 8010b8e:	bf00      	nop
 8010b90:	20001050 	andcs	r1, r0, r0, asr r0
 8010b94:	20001258 	andcs	r1, r0, r8, asr r2
 8010b98:	20001254 	andcs	r1, r0, r4, asr r2

08010b9c <PixelPatterns::FadeUpdate(unsigned int)>:
 8010b9c:	4a20      	ldr	r2, [pc, #128]	; (8010c20 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 8010b9e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8010ba2:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 8010ba6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010baa:	460e      	mov	r6, r1
 8010bac:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 8010bb0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010bb4:	f3cc 2407 	ubfx	r4, ip, #8, #8
 8010bb8:	437a      	muls	r2, r7
 8010bba:	4605      	mov	r5, r0
 8010bbc:	1bc8      	subs	r0, r1, r7
 8010bbe:	fb00 2204 	mla	r2, r0, r4, r2
 8010bc2:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8010bc6:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 8010bca:	437c      	muls	r4, r7
 8010bcc:	fb00 440e 	mla	r4, r0, lr, r4
 8010bd0:	b2db      	uxtb	r3, r3
 8010bd2:	fbb2 f2f1 	udiv	r2, r2, r1
 8010bd6:	fbb4 f4f1 	udiv	r4, r4, r1
 8010bda:	0212      	lsls	r2, r2, #8
 8010bdc:	0424      	lsls	r4, r4, #16
 8010bde:	437b      	muls	r3, r7
 8010be0:	b292      	uxth	r2, r2
 8010be2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8010be6:	fa5f fc8c 	uxtb.w	ip, ip
 8010bea:	4314      	orrs	r4, r2
 8010bec:	fb00 330c 	mla	r3, r0, ip, r3
 8010bf0:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8010c24 <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 8010bf4:	fbb3 f3f1 	udiv	r3, r3, r1
 8010bf8:	b2db      	uxtb	r3, r3
 8010bfa:	431c      	orrs	r4, r3
 8010bfc:	2700      	movs	r7, #0
 8010bfe:	f8d8 3000 	ldr.w	r3, [r8]
 8010c02:	429f      	cmp	r7, r3
 8010c04:	d305      	bcc.n	8010c12 <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 8010c06:	4631      	mov	r1, r6
 8010c08:	4628      	mov	r0, r5
 8010c0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010c0e:	f7ff bedb 	b.w	80109c8 <PixelPatterns::Increment(unsigned int)>
 8010c12:	4639      	mov	r1, r7
 8010c14:	4622      	mov	r2, r4
 8010c16:	4630      	mov	r0, r6
 8010c18:	f7ff fda8 	bl	801076c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010c1c:	3701      	adds	r7, #1
 8010c1e:	e7ee      	b.n	8010bfe <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 8010c20:	20001050 	andcs	r1, r0, r0, asr r0
 8010c24:	20001258 	andcs	r1, r0, r8, asr r2

08010c28 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 8010c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010c2a:	4b12      	ldr	r3, [pc, #72]	; (8010c74 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 8010c2c:	014e      	lsls	r6, r1, #5
 8010c2e:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 8010c32:	599c      	ldr	r4, [r3, r6]
 8010c34:	686f      	ldr	r7, [r5, #4]
 8010c36:	1b14      	subs	r4, r2, r4
 8010c38:	42bc      	cmp	r4, r7
 8010c3a:	d319      	bcc.n	8010c70 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010c3c:	519a      	str	r2, [r3, r6]
 8010c3e:	69eb      	ldr	r3, [r5, #28]
 8010c40:	3b01      	subs	r3, #1
 8010c42:	2b04      	cmp	r3, #4
 8010c44:	d814      	bhi.n	8010c70 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010c46:	e8df f003 	tbb	[pc, r3]
 8010c4a:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 8010c4e:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 8010c52:	fed8 2001 	cdp2	0, 13, cr2, cr8, cr1, {0}
 8010c56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c58:	f7ff ff00 	bl	8010a5c <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 8010c5c:	e7fa      	b.n	8010c54 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010c5e:	f7ff ff2d 	bl	8010abc <PixelPatterns::ColourWipeUpdate(unsigned int)>
 8010c62:	e7f7      	b.n	8010c54 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010c64:	f7ff ff3e 	bl	8010ae4 <PixelPatterns::ScannerUpdate(unsigned int)>
 8010c68:	e7f4      	b.n	8010c54 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010c6a:	f7ff ff97 	bl	8010b9c <PixelPatterns::FadeUpdate(unsigned int)>
 8010c6e:	e7f1      	b.n	8010c54 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010c70:	2000      	movs	r0, #0
 8010c72:	e7f0      	b.n	8010c56 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 8010c74:	20001050 	andcs	r1, r0, r0, asr r0

08010c78 <PixelPatterns::Run()>:
 8010c78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c7c:	4f11      	ldr	r7, [pc, #68]	; (8010cc4 <PixelPatterns::Run()+0x4c>)
 8010c7e:	4606      	mov	r6, r0
 8010c80:	6838      	ldr	r0, [r7, #0]
 8010c82:	f000 fc85 	bl	8011590 <WS28xxMulti::IsUpdating()>
 8010c86:	4604      	mov	r4, r0
 8010c88:	b9c8      	cbnz	r0, 8010cbe <PixelPatterns::Run()+0x46>
 8010c8a:	4b0f      	ldr	r3, [pc, #60]	; (8010cc8 <PixelPatterns::Run()+0x50>)
 8010c8c:	f8df 803c 	ldr.w	r8, [pc, #60]	; 8010ccc <PixelPatterns::Run()+0x54>
 8010c90:	f8d3 9000 	ldr.w	r9, [r3]
 8010c94:	4605      	mov	r5, r0
 8010c96:	f8d8 3000 	ldr.w	r3, [r8]
 8010c9a:	b2e9      	uxtb	r1, r5
 8010c9c:	428b      	cmp	r3, r1
 8010c9e:	f105 0501 	add.w	r5, r5, #1
 8010ca2:	d805      	bhi.n	8010cb0 <PixelPatterns::Run()+0x38>
 8010ca4:	b15c      	cbz	r4, 8010cbe <PixelPatterns::Run()+0x46>
 8010ca6:	6838      	ldr	r0, [r7, #0]
 8010ca8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010cac:	f000 bb0a 	b.w	80112c4 <WS28xxMulti::Update()>
 8010cb0:	464a      	mov	r2, r9
 8010cb2:	4630      	mov	r0, r6
 8010cb4:	f7ff ffb8 	bl	8010c28 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 8010cb8:	4320      	orrs	r0, r4
 8010cba:	b2c4      	uxtb	r4, r0
 8010cbc:	e7eb      	b.n	8010c96 <PixelPatterns::Run()+0x1e>
 8010cbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010cc2:	bf00      	nop
 8010cc4:	2000125c 	andcs	r1, r0, ip, asr r2
 8010cc8:	2000fd94 	mulcs	r0, r4, sp
 8010ccc:	20001250 	andcs	r1, r0, r0, asr r2

08010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 8010cd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cd2:	4c20      	ldr	r4, [pc, #128]	; (8010d54 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 8010cd4:	f89d e014 	ldrb.w	lr, [sp, #20]
 8010cd8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010cdc:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 8010ce0:	4c1d      	ldr	r4, [pc, #116]	; (8010d58 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x88>)
 8010ce2:	b2c0      	uxtb	r0, r0
 8010ce4:	440c      	add	r4, r1
 8010ce6:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 8010cea:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 8010cee:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8010cf2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8010cf6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8010cfa:	0089      	lsls	r1, r1, #2
 8010cfc:	2080      	movs	r0, #128	; 0x80
 8010cfe:	2601      	movs	r6, #1
 8010d00:	ea12 0400 	ands.w	r4, r2, r0
 8010d04:	bf0b      	itete	eq
 8010d06:	f5ac 67c0 	subeq.w	r7, ip, #1536	; 0x600
 8010d0a:	f5ac 64c0 	subne.w	r4, ip, #1536	; 0x600
 8010d0e:	603c      	streq	r4, [r7, #0]
 8010d10:	6026      	strne	r6, [r4, #0]
 8010d12:	ea13 0400 	ands.w	r4, r3, r0
 8010d16:	bf0b      	itete	eq
 8010d18:	f5ac 6780 	subeq.w	r7, ip, #1024	; 0x400
 8010d1c:	f5ac 6480 	subne.w	r4, ip, #1024	; 0x400
 8010d20:	603c      	streq	r4, [r7, #0]
 8010d22:	6026      	strne	r6, [r4, #0]
 8010d24:	ea1e 0400 	ands.w	r4, lr, r0
 8010d28:	bf15      	itete	ne
 8010d2a:	f5ac 7400 	subne.w	r4, ip, #512	; 0x200
 8010d2e:	f5ac 7700 	subeq.w	r7, ip, #512	; 0x200
 8010d32:	6026      	strne	r6, [r4, #0]
 8010d34:	603c      	streq	r4, [r7, #0]
 8010d36:	ea15 0400 	ands.w	r4, r5, r0
 8010d3a:	bf14      	ite	ne
 8010d3c:	f8cc 6000 	strne.w	r6, [ip]
 8010d40:	f8cc 4000 	streq.w	r4, [ip]
 8010d44:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 8010d48:	4561      	cmp	r1, ip
 8010d4a:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8010d4e:	d1d7      	bne.n	8010d00 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x30>
 8010d50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d52:	bf00      	nop
 8010d54:	2000126c 	andcs	r1, r0, ip, ror #4
 8010d58:	e1100030 	tst	r0, r0, lsr r0

08010d5c <TIMER3_IRQHandler>:
 8010d5c:	f3bf 8f5f 	dmb	sy
 8010d60:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010d64:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 8010d68:	0791      	lsls	r1, r2, #30
 8010d6a:	d51e      	bpl.n	8010daa <TIMER3_IRQHandler+0x4e>
 8010d6c:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 8010d70:	f021 0101 	bic.w	r1, r1, #1
 8010d74:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 8010d78:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 8010d7c:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 8010d80:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 8010d84:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 8010d88:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 8010d8c:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 8010d90:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 8010d94:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8010d98:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 8010d9c:	4b07      	ldr	r3, [pc, #28]	; (8010dbc <TIMER3_IRQHandler+0x60>)
 8010d9e:	2100      	movs	r1, #0
 8010da0:	7019      	strb	r1, [r3, #0]
 8010da2:	4b07      	ldr	r3, [pc, #28]	; (8010dc0 <TIMER3_IRQHandler+0x64>)
 8010da4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010da8:	6299      	str	r1, [r3, #40]	; 0x28
 8010daa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010dae:	43d2      	mvns	r2, r2
 8010db0:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 8010db4:	f3bf 8f5f 	dmb	sy
 8010db8:	4770      	bx	lr
 8010dba:	bf00      	nop
 8010dbc:	20001264 	andcs	r1, r0, r4, ror #4
 8010dc0:	40021000 	andmi	r1, r2, r0

08010dc4 <WS28xxMulti::~WS28xxMulti()>:
 8010dc4:	4b01      	ldr	r3, [pc, #4]	; (8010dcc <WS28xxMulti::~WS28xxMulti()+0x8>)
 8010dc6:	2200      	movs	r2, #0
 8010dc8:	601a      	str	r2, [r3, #0]
 8010dca:	4770      	bx	lr
 8010dcc:	20001268 	andcs	r1, r0, r8, ror #4

08010dd0 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 8010dd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010dd4:	4680      	mov	r8, r0
 8010dd6:	b08e      	sub	sp, #56	; 0x38
 8010dd8:	4608      	mov	r0, r1
 8010dda:	4614      	mov	r4, r2
 8010ddc:	f007 fb86 	bl	80184ec <__popcountsi2>
 8010de0:	4607      	mov	r7, r0
 8010de2:	4620      	mov	r0, r4
 8010de4:	f007 fb82 	bl	80184ec <__popcountsi2>
 8010de8:	4c70      	ldr	r4, [pc, #448]	; (8010fac <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 8010dea:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8010fc0 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 8010dee:	4606      	mov	r6, r0
 8010df0:	f241 0001 	movw	r0, #4097	; 0x1001
 8010df4:	f005 ffa4 	bl	8016d40 <rcu_periph_clock_enable>
 8010df8:	4620      	mov	r0, r4
 8010dfa:	f006 f85d 	bl	8016eb8 <timer_deinit>
 8010dfe:	2500      	movs	r5, #0
 8010e00:	23f9      	movs	r3, #249	; 0xf9
 8010e02:	a901      	add	r1, sp, #4
 8010e04:	4620      	mov	r0, r4
 8010e06:	9303      	str	r3, [sp, #12]
 8010e08:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8010e0c:	f006 f8fa 	bl	8017004 <timer_init>
 8010e10:	4620      	mov	r0, r4
 8010e12:	2101      	movs	r1, #1
 8010e14:	f006 faa2 	bl	801735c <timer_master_slave_mode_config>
 8010e18:	4620      	mov	r0, r4
 8010e1a:	2130      	movs	r1, #48	; 0x30
 8010e1c:	f006 fa8e 	bl	801733c <timer_master_output_trigger_source_select>
 8010e20:	4629      	mov	r1, r5
 8010e22:	4620      	mov	r0, r4
 8010e24:	2210      	movs	r2, #16
 8010e26:	f006 fa27 	bl	8017278 <timer_channel_output_mode_config>
 8010e2a:	4620      	mov	r0, r4
 8010e2c:	2210      	movs	r2, #16
 8010e2e:	2102      	movs	r1, #2
 8010e30:	f006 fa22 	bl	8017278 <timer_channel_output_mode_config>
 8010e34:	4620      	mov	r0, r4
 8010e36:	2210      	movs	r2, #16
 8010e38:	2103      	movs	r1, #3
 8010e3a:	f006 fa1d 	bl	8017278 <timer_channel_output_mode_config>
 8010e3e:	f04f 09fa 	mov.w	r9, #250	; 0xfa
 8010e42:	4629      	mov	r1, r5
 8010e44:	4620      	mov	r0, r4
 8010e46:	2201      	movs	r2, #1
 8010e48:	f006 fa3c 	bl	80172c4 <timer_channel_output_pulse_value_config>
 8010e4c:	fb09 f207 	mul.w	r2, r9, r7
 8010e50:	4620      	mov	r0, r4
 8010e52:	08d2      	lsrs	r2, r2, #3
 8010e54:	2102      	movs	r1, #2
 8010e56:	f006 fa35 	bl	80172c4 <timer_channel_output_pulse_value_config>
 8010e5a:	fb09 f206 	mul.w	r2, r9, r6
 8010e5e:	08d2      	lsrs	r2, r2, #3
 8010e60:	2103      	movs	r1, #3
 8010e62:	4620      	mov	r0, r4
 8010e64:	f006 fa2e 	bl	80172c4 <timer_channel_output_pulse_value_config>
 8010e68:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8010e6c:	f241 0002 	movw	r0, #4098	; 0x1002
 8010e70:	f005 ff66 	bl	8016d40 <rcu_periph_clock_enable>
 8010e74:	4620      	mov	r0, r4
 8010e76:	f006 f81f 	bl	8016eb8 <timer_deinit>
 8010e7a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010e7e:	a901      	add	r1, sp, #4
 8010e80:	4620      	mov	r0, r4
 8010e82:	9303      	str	r3, [sp, #12]
 8010e84:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8010e88:	f006 f8bc 	bl	8017004 <timer_init>
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	2101      	movs	r1, #1
 8010e90:	f006 fa64 	bl	801735c <timer_master_slave_mode_config>
 8010e94:	4620      	mov	r0, r4
 8010e96:	2107      	movs	r1, #7
 8010e98:	f006 fa58 	bl	801734c <timer_slave_mode_select>
 8010e9c:	4620      	mov	r0, r4
 8010e9e:	2120      	movs	r1, #32
 8010ea0:	f006 fa44 	bl	801732c <timer_input_trigger_source_select>
 8010ea4:	4629      	mov	r1, r5
 8010ea6:	4620      	mov	r0, r4
 8010ea8:	2210      	movs	r2, #16
 8010eaa:	f006 f9e5 	bl	8017278 <timer_channel_output_mode_config>
 8010eae:	f8d8 201c 	ldr.w	r2, [r8, #28]
 8010eb2:	4629      	mov	r1, r5
 8010eb4:	3201      	adds	r2, #1
 8010eb6:	4620      	mov	r0, r4
 8010eb8:	f006 fa04 	bl	80172c4 <timer_channel_output_pulse_value_config>
 8010ebc:	2102      	movs	r1, #2
 8010ebe:	4620      	mov	r0, r4
 8010ec0:	f006 f8e3 	bl	801708a <timer_interrupt_enable>
 8010ec4:	4b3a      	ldr	r3, [pc, #232]	; (8010fb0 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 8010ec6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8010eca:	f504 3416 	add.w	r4, r4, #153600	; 0x25800
 8010ece:	f883 531e 	strb.w	r5, [r3, #798]	; 0x31e
 8010ed2:	f640 4015 	movw	r0, #3093	; 0xc15
 8010ed6:	601a      	str	r2, [r3, #0]
 8010ed8:	f005 ff32 	bl	8016d40 <rcu_periph_clock_enable>
 8010edc:	2104      	movs	r1, #4
 8010ede:	4620      	mov	r0, r4
 8010ee0:	f005 f9e4 	bl	80162ac <dma_deinit>
 8010ee4:	a805      	add	r0, sp, #20
 8010ee6:	f005 fa0c 	bl	8016302 <dma_single_data_para_struct_init>
 8010eea:	4b32      	ldr	r3, [pc, #200]	; (8010fb4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 8010eec:	f8cd a01c 	str.w	sl, [sp, #28]
 8010ef0:	2601      	movs	r6, #1
 8010ef2:	f04f 0940 	mov.w	r9, #64	; 0x40
 8010ef6:	f44f 6800 	mov.w	r8, #2048	; 0x800
 8010efa:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 8010efe:	aa05      	add	r2, sp, #20
 8010f00:	4620      	mov	r0, r4
 8010f02:	2104      	movs	r1, #4
 8010f04:	e9cd 3605 	strd	r3, r6, [sp, #20]
 8010f08:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010f0c:	9608      	str	r6, [sp, #32]
 8010f0e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010f12:	970d      	str	r7, [sp, #52]	; 0x34
 8010f14:	f005 fa01 	bl	801631a <dma_single_data_mode_init>
 8010f18:	4620      	mov	r0, r4
 8010f1a:	2104      	movs	r1, #4
 8010f1c:	f005 fa3c 	bl	8016398 <dma_circulation_disable>
 8010f20:	2205      	movs	r2, #5
 8010f22:	4620      	mov	r0, r4
 8010f24:	2104      	movs	r1, #4
 8010f26:	f005 fa3f 	bl	80163a8 <dma_channel_subperipheral_select>
 8010f2a:	2107      	movs	r1, #7
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	f005 f9bd 	bl	80162ac <dma_deinit>
 8010f32:	a805      	add	r0, sp, #20
 8010f34:	f005 f9e5 	bl	8016302 <dma_single_data_para_struct_init>
 8010f38:	4b1f      	ldr	r3, [pc, #124]	; (8010fb8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 8010f3a:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010f3e:	e9cd 3507 	strd	r3, r5, [sp, #28]
 8010f42:	4d1e      	ldr	r5, [pc, #120]	; (8010fbc <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>)
 8010f44:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010f48:	aa05      	add	r2, sp, #20
 8010f4a:	4620      	mov	r0, r4
 8010f4c:	2107      	movs	r1, #7
 8010f4e:	e9cd 5605 	strd	r5, r6, [sp, #20]
 8010f52:	970d      	str	r7, [sp, #52]	; 0x34
 8010f54:	f005 f9e1 	bl	801631a <dma_single_data_mode_init>
 8010f58:	4620      	mov	r0, r4
 8010f5a:	2107      	movs	r1, #7
 8010f5c:	f005 fa1c 	bl	8016398 <dma_circulation_disable>
 8010f60:	2205      	movs	r2, #5
 8010f62:	4620      	mov	r0, r4
 8010f64:	2107      	movs	r1, #7
 8010f66:	f005 fa1f 	bl	80163a8 <dma_channel_subperipheral_select>
 8010f6a:	2102      	movs	r1, #2
 8010f6c:	4620      	mov	r0, r4
 8010f6e:	f005 f99d 	bl	80162ac <dma_deinit>
 8010f72:	a805      	add	r0, sp, #20
 8010f74:	f005 f9c5 	bl	8016302 <dma_single_data_para_struct_init>
 8010f78:	aa05      	add	r2, sp, #20
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	2102      	movs	r1, #2
 8010f7e:	e9cd a607 	strd	sl, r6, [sp, #28]
 8010f82:	e9cd 5605 	strd	r5, r6, [sp, #20]
 8010f86:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010f8a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010f8e:	970d      	str	r7, [sp, #52]	; 0x34
 8010f90:	f005 f9c3 	bl	801631a <dma_single_data_mode_init>
 8010f94:	4620      	mov	r0, r4
 8010f96:	2102      	movs	r1, #2
 8010f98:	f005 f9fe 	bl	8016398 <dma_circulation_disable>
 8010f9c:	2205      	movs	r2, #5
 8010f9e:	2102      	movs	r1, #2
 8010fa0:	4620      	mov	r0, r4
 8010fa2:	f005 fa01 	bl	80163a8 <dma_channel_subperipheral_select>
 8010fa6:	b00e      	add	sp, #56	; 0x38
 8010fa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010fac:	40000400 	andmi	r0, r0, r0, lsl #8
 8010fb0:	e000e100 	and	lr, r0, r0, lsl #2
 8010fb4:	40021018 	andmi	r1, r2, r8, lsl r0
 8010fb8:	2000126c 	andcs	r1, r0, ip, ror #4
 8010fbc:	40021028 	andmi	r1, r2, r8, lsr #32
 8010fc0:	0801af88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, sp, pc}

08010fc4 <WS28xxMulti::Setup(unsigned int)>:
 8010fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010fc8:	4680      	mov	r8, r0
 8010fca:	b092      	sub	sp, #72	; 0x48
 8010fcc:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8010fd0:	460c      	mov	r4, r1
 8010fd2:	f005 feb5 	bl	8016d40 <rcu_periph_clock_enable>
 8010fd6:	4882      	ldr	r0, [pc, #520]	; (80111e0 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010fd8:	4d82      	ldr	r5, [pc, #520]	; (80111e4 <WS28xxMulti::Setup(unsigned int)+0x220>)
 8010fda:	2340      	movs	r3, #64	; 0x40
 8010fdc:	2200      	movs	r2, #0
 8010fde:	2102      	movs	r1, #2
 8010fe0:	f005 fe32 	bl	8016c48 <gpio_mode_set>
 8010fe4:	2340      	movs	r3, #64	; 0x40
 8010fe6:	487e      	ldr	r0, [pc, #504]	; (80111e0 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010fe8:	2202      	movs	r2, #2
 8010fea:	2100      	movs	r1, #0
 8010fec:	f005 fe4c 	bl	8016c88 <gpio_output_options_set>
 8010ff0:	2240      	movs	r2, #64	; 0x40
 8010ff2:	2102      	movs	r1, #2
 8010ff4:	487a      	ldr	r0, [pc, #488]	; (80111e0 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010ff6:	f005 fe62 	bl	8016cbe <gpio_af_set>
 8010ffa:	fbb5 f5f4 	udiv	r5, r5, r4
 8010ffe:	f241 0001 	movw	r0, #4097	; 0x1001
 8011002:	2d0c      	cmp	r5, #12
 8011004:	bf38      	it	cc
 8011006:	250c      	movcc	r5, #12
 8011008:	f005 fe9a 	bl	8016d40 <rcu_periph_clock_enable>
 801100c:	4876      	ldr	r0, [pc, #472]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801100e:	2400      	movs	r4, #0
 8011010:	f005 ff52 	bl	8016eb8 <timer_deinit>
 8011014:	1e6b      	subs	r3, r5, #1
 8011016:	4874      	ldr	r0, [pc, #464]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011018:	9307      	str	r3, [sp, #28]
 801101a:	a905      	add	r1, sp, #20
 801101c:	2602      	movs	r6, #2
 801101e:	2701      	movs	r7, #1
 8011020:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8011024:	f88d 4020 	strb.w	r4, [sp, #32]
 8011028:	f005 ffec 	bl	8017004 <timer_init>
 801102c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011030:	486d      	ldr	r0, [pc, #436]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011032:	9304      	str	r3, [sp, #16]
 8011034:	aa02      	add	r2, sp, #8
 8011036:	4621      	mov	r1, r4
 8011038:	e9cd 7602 	strd	r7, r6, [sp, #8]
 801103c:	f006 f834 	bl	80170a8 <timer_channel_output_config>
 8011040:	fa25 f207 	lsr.w	r2, r5, r7
 8011044:	4868      	ldr	r0, [pc, #416]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011046:	3a01      	subs	r2, #1
 8011048:	4621      	mov	r1, r4
 801104a:	f006 f93b 	bl	80172c4 <timer_channel_output_pulse_value_config>
 801104e:	4866      	ldr	r0, [pc, #408]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011050:	2260      	movs	r2, #96	; 0x60
 8011052:	4621      	mov	r1, r4
 8011054:	f006 f910 	bl	8017278 <timer_channel_output_mode_config>
 8011058:	4863      	ldr	r0, [pc, #396]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801105a:	4622      	mov	r2, r4
 801105c:	4621      	mov	r1, r4
 801105e:	f006 f93f 	bl	80172e0 <timer_channel_output_shadow_config>
 8011062:	4861      	ldr	r0, [pc, #388]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011064:	2210      	movs	r2, #16
 8011066:	4631      	mov	r1, r6
 8011068:	f006 f906 	bl	8017278 <timer_channel_output_mode_config>
 801106c:	485e      	ldr	r0, [pc, #376]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801106e:	2210      	movs	r2, #16
 8011070:	2103      	movs	r1, #3
 8011072:	f006 f901 	bl	8017278 <timer_channel_output_mode_config>
 8011076:	485c      	ldr	r0, [pc, #368]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011078:	463a      	mov	r2, r7
 801107a:	4631      	mov	r1, r6
 801107c:	f006 f922 	bl	80172c4 <timer_channel_output_pulse_value_config>
 8011080:	fa25 f206 	lsr.w	r2, r5, r6
 8011084:	3a01      	subs	r2, #1
 8011086:	4858      	ldr	r0, [pc, #352]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011088:	2103      	movs	r1, #3
 801108a:	f006 f91b 	bl	80172c4 <timer_channel_output_pulse_value_config>
 801108e:	4856      	ldr	r0, [pc, #344]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011090:	4639      	mov	r1, r7
 8011092:	f006 f963 	bl	801735c <timer_master_slave_mode_config>
 8011096:	2130      	movs	r1, #48	; 0x30
 8011098:	4853      	ldr	r0, [pc, #332]	; (80111e8 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801109a:	f006 f94f 	bl	801733c <timer_master_output_trigger_source_select>
 801109e:	f241 0002 	movw	r0, #4098	; 0x1002
 80110a2:	f005 fe4d 	bl	8016d40 <rcu_periph_clock_enable>
 80110a6:	4851      	ldr	r0, [pc, #324]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110a8:	f005 ff06 	bl	8016eb8 <timer_deinit>
 80110ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80110b0:	484e      	ldr	r0, [pc, #312]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110b2:	9307      	str	r3, [sp, #28]
 80110b4:	a905      	add	r1, sp, #20
 80110b6:	e9cd 4405 	strd	r4, r4, [sp, #20]
 80110ba:	f005 ffa3 	bl	8017004 <timer_init>
 80110be:	484b      	ldr	r0, [pc, #300]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110c0:	4639      	mov	r1, r7
 80110c2:	f006 f94b 	bl	801735c <timer_master_slave_mode_config>
 80110c6:	4849      	ldr	r0, [pc, #292]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110c8:	2107      	movs	r1, #7
 80110ca:	f006 f93f 	bl	801734c <timer_slave_mode_select>
 80110ce:	4847      	ldr	r0, [pc, #284]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110d0:	2120      	movs	r1, #32
 80110d2:	f006 f92b 	bl	801732c <timer_input_trigger_source_select>
 80110d6:	4845      	ldr	r0, [pc, #276]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110d8:	2210      	movs	r2, #16
 80110da:	4621      	mov	r1, r4
 80110dc:	f006 f8cc 	bl	8017278 <timer_channel_output_mode_config>
 80110e0:	f8d8 201c 	ldr.w	r2, [r8, #28]
 80110e4:	4841      	ldr	r0, [pc, #260]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110e6:	4621      	mov	r1, r4
 80110e8:	f006 f8ec 	bl	80172c4 <timer_channel_output_pulse_value_config>
 80110ec:	4631      	mov	r1, r6
 80110ee:	483f      	ldr	r0, [pc, #252]	; (80111ec <WS28xxMulti::Setup(unsigned int)+0x228>)
 80110f0:	f005 ffcb 	bl	801708a <timer_interrupt_enable>
 80110f4:	4b3e      	ldr	r3, [pc, #248]	; (80111f0 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 80110f6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80110fa:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 80110fe:	f640 4015 	movw	r0, #3093	; 0xc15
 8011102:	601a      	str	r2, [r3, #0]
 8011104:	f005 fe1c 	bl	8016d40 <rcu_periph_clock_enable>
 8011108:	2107      	movs	r1, #7
 801110a:	483a      	ldr	r0, [pc, #232]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 801110c:	f005 f8ce 	bl	80162ac <dma_deinit>
 8011110:	a809      	add	r0, sp, #36	; 0x24
 8011112:	f005 f8f6 	bl	8016302 <dma_single_data_para_struct_init>
 8011116:	4b38      	ldr	r3, [pc, #224]	; (80111f8 <WS28xxMulti::Setup(unsigned int)+0x234>)
 8011118:	4836      	ldr	r0, [pc, #216]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 801111a:	e9cd 370b 	strd	r3, r7, [sp, #44]	; 0x2c
 801111e:	4b37      	ldr	r3, [pc, #220]	; (80111fc <WS28xxMulti::Setup(unsigned int)+0x238>)
 8011120:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 8011124:	aa09      	add	r2, sp, #36	; 0x24
 8011126:	f04f 0a40 	mov.w	sl, #64	; 0x40
 801112a:	f44f 6900 	mov.w	r9, #2048	; 0x800
 801112e:	2107      	movs	r1, #7
 8011130:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 8011134:	9511      	str	r5, [sp, #68]	; 0x44
 8011136:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 801113a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801113e:	f005 f8ec 	bl	801631a <dma_single_data_mode_init>
 8011142:	482c      	ldr	r0, [pc, #176]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011144:	2107      	movs	r1, #7
 8011146:	f005 f927 	bl	8016398 <dma_circulation_disable>
 801114a:	2205      	movs	r2, #5
 801114c:	4829      	ldr	r0, [pc, #164]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 801114e:	2107      	movs	r1, #7
 8011150:	f005 f92a 	bl	80163a8 <dma_channel_subperipheral_select>
 8011154:	4631      	mov	r1, r6
 8011156:	4827      	ldr	r0, [pc, #156]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011158:	f005 f8a8 	bl	80162ac <dma_deinit>
 801115c:	a809      	add	r0, sp, #36	; 0x24
 801115e:	f005 f8d0 	bl	8016302 <dma_single_data_para_struct_init>
 8011162:	4b27      	ldr	r3, [pc, #156]	; (8011200 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 8011164:	4823      	ldr	r0, [pc, #140]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011166:	9511      	str	r5, [sp, #68]	; 0x44
 8011168:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
 801116c:	4b25      	ldr	r3, [pc, #148]	; (8011204 <WS28xxMulti::Setup(unsigned int)+0x240>)
 801116e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8011172:	aa09      	add	r2, sp, #36	; 0x24
 8011174:	4631      	mov	r1, r6
 8011176:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 801117a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801117e:	f005 f8cc 	bl	801631a <dma_single_data_mode_init>
 8011182:	481c      	ldr	r0, [pc, #112]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011184:	4631      	mov	r1, r6
 8011186:	f005 f907 	bl	8016398 <dma_circulation_disable>
 801118a:	481a      	ldr	r0, [pc, #104]	; (80111f4 <WS28xxMulti::Setup(unsigned int)+0x230>)
 801118c:	2205      	movs	r2, #5
 801118e:	4631      	mov	r1, r6
 8011190:	f005 f90a 	bl	80163a8 <dma_channel_subperipheral_select>
 8011194:	f8d8 5000 	ldr.w	r5, [r8]
 8011198:	3d0b      	subs	r5, #11
 801119a:	42b5      	cmp	r5, r6
 801119c:	d81c      	bhi.n	80111d8 <WS28xxMulti::Setup(unsigned int)+0x214>
 801119e:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80111a2:	4627      	mov	r7, r4
 80111a4:	3601      	adds	r6, #1
 80111a6:	f04f 08ff 	mov.w	r8, #255	; 0xff
 80111aa:	2300      	movs	r3, #0
 80111ac:	461a      	mov	r2, r3
 80111ae:	4619      	mov	r1, r3
 80111b0:	4620      	mov	r0, r4
 80111b2:	e9cd 7700 	strd	r7, r7, [sp]
 80111b6:	f7ff fd8b 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80111ba:	2d02      	cmp	r5, #2
 80111bc:	bf1b      	ittet	ne
 80111be:	23ff      	movne	r3, #255	; 0xff
 80111c0:	e9cd 8800 	strdne	r8, r8, [sp]
 80111c4:	e9cd 7700 	strdeq	r7, r7, [sp]
 80111c8:	461a      	movne	r2, r3
 80111ca:	4620      	mov	r0, r4
 80111cc:	4631      	mov	r1, r6
 80111ce:	3401      	adds	r4, #1
 80111d0:	f7ff fd7e 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80111d4:	2c10      	cmp	r4, #16
 80111d6:	d1e8      	bne.n	80111aa <WS28xxMulti::Setup(unsigned int)+0x1e6>
 80111d8:	b012      	add	sp, #72	; 0x48
 80111da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80111de:	bf00      	nop
 80111e0:	40020000 	andmi	r0, r2, r0
 80111e4:	0bebc200 	bleq	7b019ec <__stack_size+0x7afd9ec>
 80111e8:	40000400 	andmi	r0, r0, r0, lsl #8
 80111ec:	40000800 	andmi	r0, r0, r0, lsl #16
 80111f0:	e000e100 	and	lr, r0, r0, lsl #2
 80111f4:	40026000 	andmi	r6, r2, r0
 80111f8:	0801af88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, sp, pc}
 80111fc:	40021028 	andmi	r1, r2, r8, lsr #32
 8011200:	2000126c 	andcs	r1, r0, ip, ror #4
 8011204:	40021018 	andmi	r1, r2, r8, lsl r0

08011208 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 8011208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801120a:	460f      	mov	r7, r1
 801120c:	4604      	mov	r4, r0
 801120e:	460d      	mov	r5, r1
 8011210:	4606      	mov	r6, r0
 8011212:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011214:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8011216:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 801121a:	2300      	movs	r3, #0
 801121c:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8011220:	61e3      	str	r3, [r4, #28]
 8011222:	4b26      	ldr	r3, [pc, #152]	; (80112bc <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb4>)
 8011224:	a901      	add	r1, sp, #4
 8011226:	4628      	mov	r0, r5
 8011228:	601c      	str	r4, [r3, #0]
 801122a:	f7ff f8af 	bl	801038c <PixelConfiguration::Validate(unsigned int&)>
 801122e:	6826      	ldr	r6, [r4, #0]
 8011230:	3e0b      	subs	r6, #11
 8011232:	2e02      	cmp	r6, #2
 8011234:	d80a      	bhi.n	801124c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 8011236:	686b      	ldr	r3, [r5, #4]
 8011238:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 801123c:	d906      	bls.n	801124c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 801123e:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 8011242:	606b      	str	r3, [r5, #4]
 8011244:	a901      	add	r1, sp, #4
 8011246:	4628      	mov	r0, r5
 8011248:	f7ff f8a0 	bl	801038c <PixelConfiguration::Validate(unsigned int&)>
 801124c:	6863      	ldr	r3, [r4, #4]
 801124e:	9a01      	ldr	r2, [sp, #4]
 8011250:	2e02      	cmp	r6, #2
 8011252:	fb03 f202 	mul.w	r2, r3, r2
 8011256:	bf9b      	ittet	ls
 8011258:	3308      	addls	r3, #8
 801125a:	189b      	addls	r3, r3, r2
 801125c:	61e2      	strhi	r2, [r4, #28]
 801125e:	61e3      	strls	r3, [r4, #28]
 8011260:	69e3      	ldr	r3, [r4, #28]
 8011262:	4e17      	ldr	r6, [pc, #92]	; (80112c0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb8>)
 8011264:	00db      	lsls	r3, r3, #3
 8011266:	61e3      	str	r3, [r4, #28]
 8011268:	f640 4004 	movw	r0, #3076	; 0xc04
 801126c:	f005 fd68 	bl	8016d40 <rcu_periph_clock_enable>
 8011270:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011274:	2100      	movs	r1, #0
 8011276:	4630      	mov	r0, r6
 8011278:	f005 fd21 	bl	8016cbe <gpio_af_set>
 801127c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011280:	2202      	movs	r2, #2
 8011282:	2101      	movs	r1, #1
 8011284:	4630      	mov	r0, r6
 8011286:	f005 fcdf 	bl	8016c48 <gpio_mode_set>
 801128a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801128e:	2202      	movs	r2, #2
 8011290:	2100      	movs	r1, #0
 8011292:	4630      	mov	r0, r6
 8011294:	f005 fcf8 	bl	8016c88 <gpio_output_options_set>
 8011298:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801129c:	62b3      	str	r3, [r6, #40]	; 0x28
 801129e:	7d6b      	ldrb	r3, [r5, #21]
 80112a0:	b13b      	cbz	r3, 80112b2 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xaa>
 80112a2:	7c6a      	ldrb	r2, [r5, #17]
 80112a4:	7c29      	ldrb	r1, [r5, #16]
 80112a6:	4620      	mov	r0, r4
 80112a8:	f7ff fd92 	bl	8010dd0 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 80112ac:	4620      	mov	r0, r4
 80112ae:	b003      	add	sp, #12
 80112b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112b2:	68e9      	ldr	r1, [r5, #12]
 80112b4:	4620      	mov	r0, r4
 80112b6:	f7ff fe85 	bl	8010fc4 <WS28xxMulti::Setup(unsigned int)>
 80112ba:	e7f7      	b.n	80112ac <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa4>
 80112bc:	20001268 	andcs	r1, r0, r8, ror #4
 80112c0:	40021000 	andmi	r1, r2, r0

080112c4 <WS28xxMulti::Update()>:
 80112c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80112c6:	4b4c      	ldr	r3, [pc, #304]	; (80113f8 <WS28xxMulti::Update()+0x134>)
 80112c8:	4e4c      	ldr	r6, [pc, #304]	; (80113fc <WS28xxMulti::Update()+0x138>)
 80112ca:	4c4d      	ldr	r4, [pc, #308]	; (8011400 <WS28xxMulti::Update()+0x13c>)
 80112cc:	4f4d      	ldr	r7, [pc, #308]	; (8011404 <WS28xxMulti::Update()+0x140>)
 80112ce:	2201      	movs	r2, #1
 80112d0:	701a      	strb	r2, [r3, #0]
 80112d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80112d6:	2100      	movs	r1, #0
 80112d8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80112dc:	f022 0201 	bic.w	r2, r2, #1
 80112e0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80112e4:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 80112e8:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80112ec:	f022 0201 	bic.w	r2, r2, #1
 80112f0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80112f4:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 80112f8:	7d43      	ldrb	r3, [r0, #21]
 80112fa:	4605      	mov	r5, r0
 80112fc:	2b00      	cmp	r3, #0
 80112fe:	d053      	beq.n	80113a8 <WS28xxMulti::Update()+0xe4>
 8011300:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8011302:	f023 0301 	bic.w	r3, r3, #1
 8011306:	6723      	str	r3, [r4, #112]	; 0x70
 8011308:	2220      	movs	r2, #32
 801130a:	2104      	movs	r1, #4
 801130c:	4620      	mov	r0, r4
 801130e:	f005 f86f 	bl	80163f0 <dma_interrupt_flag_clear>
 8011312:	67e6      	str	r6, [r4, #124]	; 0x7c
 8011314:	8bab      	ldrh	r3, [r5, #28]
 8011316:	6763      	str	r3, [r4, #116]	; 0x74
 8011318:	6f23      	ldr	r3, [r4, #112]	; 0x70
 801131a:	f043 0301 	orr.w	r3, r3, #1
 801131e:	6723      	str	r3, [r4, #112]	; 0x70
 8011320:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8011324:	f023 0301 	bic.w	r3, r3, #1
 8011328:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801132c:	2220      	movs	r2, #32
 801132e:	2107      	movs	r1, #7
 8011330:	4620      	mov	r0, r4
 8011332:	f005 f85d 	bl	80163f0 <dma_interrupt_flag_clear>
 8011336:	f8c4 70c4 	str.w	r7, [r4, #196]	; 0xc4
 801133a:	8bab      	ldrh	r3, [r5, #28]
 801133c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011340:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8011344:	f043 0301 	orr.w	r3, r3, #1
 8011348:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801134c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801134e:	f023 0301 	bic.w	r3, r3, #1
 8011352:	6423      	str	r3, [r4, #64]	; 0x40
 8011354:	2102      	movs	r1, #2
 8011356:	4620      	mov	r0, r4
 8011358:	2220      	movs	r2, #32
 801135a:	f005 f849 	bl	80163f0 <dma_interrupt_flag_clear>
 801135e:	64e6      	str	r6, [r4, #76]	; 0x4c
 8011360:	8bab      	ldrh	r3, [r5, #28]
 8011362:	6463      	str	r3, [r4, #68]	; 0x44
 8011364:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011366:	4828      	ldr	r0, [pc, #160]	; (8011408 <WS28xxMulti::Update()+0x144>)
 8011368:	f043 0301 	orr.w	r3, r3, #1
 801136c:	6423      	str	r3, [r4, #64]	; 0x40
 801136e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8011372:	f005 fe94 	bl	801709e <timer_dma_enable>
 8011376:	4824      	ldr	r0, [pc, #144]	; (8011408 <WS28xxMulti::Update()+0x144>)
 8011378:	f44f 6100 	mov.w	r1, #2048	; 0x800
 801137c:	f005 fe8f 	bl	801709e <timer_dma_enable>
 8011380:	4821      	ldr	r0, [pc, #132]	; (8011408 <WS28xxMulti::Update()+0x144>)
 8011382:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8011386:	f005 fe8a 	bl	801709e <timer_dma_enable>
 801138a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801138e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8011392:	f042 0201 	orr.w	r2, r2, #1
 8011396:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 801139a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 801139e:	f042 0201 	orr.w	r2, r2, #1
 80113a2:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80113a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80113a8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80113ac:	f023 0301 	bic.w	r3, r3, #1
 80113b0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80113b4:	2220      	movs	r2, #32
 80113b6:	2107      	movs	r1, #7
 80113b8:	4620      	mov	r0, r4
 80113ba:	f005 f819 	bl	80163f0 <dma_interrupt_flag_clear>
 80113be:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 80113c2:	8bab      	ldrh	r3, [r5, #28]
 80113c4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80113c8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80113cc:	f043 0301 	orr.w	r3, r3, #1
 80113d0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80113d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80113d6:	f023 0301 	bic.w	r3, r3, #1
 80113da:	6423      	str	r3, [r4, #64]	; 0x40
 80113dc:	2220      	movs	r2, #32
 80113de:	2102      	movs	r1, #2
 80113e0:	4620      	mov	r0, r4
 80113e2:	f005 f805 	bl	80163f0 <dma_interrupt_flag_clear>
 80113e6:	64e7      	str	r7, [r4, #76]	; 0x4c
 80113e8:	8bab      	ldrh	r3, [r5, #28]
 80113ea:	6463      	str	r3, [r4, #68]	; 0x44
 80113ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80113ee:	f043 0301 	orr.w	r3, r3, #1
 80113f2:	6423      	str	r3, [r4, #64]	; 0x40
 80113f4:	e7bf      	b.n	8011376 <WS28xxMulti::Update()+0xb2>
 80113f6:	bf00      	nop
 80113f8:	20001264 	andcs	r1, r0, r4, ror #4
 80113fc:	0801af88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, sp, pc}
 8011400:	40026000 	andmi	r6, r2, r0
 8011404:	2000126c 	andcs	r1, r0, ip, ror #4
 8011408:	40000400 	andmi	r0, r0, r0, lsl #8

0801140c <WS28xxMulti::Blackout()>:
 801140c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011410:	4f2d      	ldr	r7, [pc, #180]	; (80114c8 <WS28xxMulti::Blackout()+0xbc>)
 8011412:	4605      	mov	r5, r0
 8011414:	f3bf 8f5f 	dmb	sy
 8011418:	783a      	ldrb	r2, [r7, #0]
 801141a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 801141e:	2a00      	cmp	r2, #0
 8011420:	d1f8      	bne.n	8011414 <WS28xxMulti::Blackout()+0x8>
 8011422:	7d6c      	ldrb	r4, [r5, #21]
 8011424:	b19c      	cbz	r4, 801144e <WS28xxMulti::Blackout()+0x42>
 8011426:	4a29      	ldr	r2, [pc, #164]	; (80114cc <WS28xxMulti::Blackout()+0xc0>)
 8011428:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 801142c:	3301      	adds	r3, #1
 801142e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8011432:	f842 1b04 	str.w	r1, [r2], #4
 8011436:	d1f9      	bne.n	801142c <WS28xxMulti::Blackout()+0x20>
 8011438:	4628      	mov	r0, r5
 801143a:	f7ff ff43 	bl	80112c4 <WS28xxMulti::Update()>
 801143e:	f3bf 8f5f 	dmb	sy
 8011442:	783b      	ldrb	r3, [r7, #0]
 8011444:	2b00      	cmp	r3, #0
 8011446:	d1fa      	bne.n	801143e <WS28xxMulti::Blackout()+0x32>
 8011448:	b003      	add	sp, #12
 801144a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801144e:	682b      	ldr	r3, [r5, #0]
 8011450:	f1a3 080b 	sub.w	r8, r3, #11
 8011454:	f1b8 0f02 	cmp.w	r8, #2
 8011458:	d908      	bls.n	801146c <WS28xxMulti::Blackout()+0x60>
 801145a:	4b1c      	ldr	r3, [pc, #112]	; (80114cc <WS28xxMulti::Blackout()+0xc0>)
 801145c:	4622      	mov	r2, r4
 801145e:	3401      	adds	r4, #1
 8011460:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 8011464:	f843 2b04 	str.w	r2, [r3], #4
 8011468:	d1f9      	bne.n	801145e <WS28xxMulti::Blackout()+0x52>
 801146a:	e7e5      	b.n	8011438 <WS28xxMulti::Blackout()+0x2c>
 801146c:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8011470:	4626      	mov	r6, r4
 8011472:	f10a 0b01 	add.w	fp, sl, #1
 8011476:	2300      	movs	r3, #0
 8011478:	e9cd 6600 	strd	r6, r6, [sp]
 801147c:	461a      	mov	r2, r3
 801147e:	4619      	mov	r1, r3
 8011480:	4620      	mov	r0, r4
 8011482:	f7ff fc25 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011486:	f04f 0901 	mov.w	r9, #1
 801148a:	45ca      	cmp	sl, r9
 801148c:	d211      	bcs.n	80114b2 <WS28xxMulti::Blackout()+0xa6>
 801148e:	f1b8 0f02 	cmp.w	r8, #2
 8011492:	bf15      	itete	ne
 8011494:	23ff      	movne	r3, #255	; 0xff
 8011496:	2300      	moveq	r3, #0
 8011498:	e9cd 3300 	strdne	r3, r3, [sp]
 801149c:	e9cd 6600 	strdeq	r6, r6, [sp]
 80114a0:	4620      	mov	r0, r4
 80114a2:	461a      	mov	r2, r3
 80114a4:	4659      	mov	r1, fp
 80114a6:	3401      	adds	r4, #1
 80114a8:	f7ff fc12 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80114ac:	2c10      	cmp	r4, #16
 80114ae:	d1e2      	bne.n	8011476 <WS28xxMulti::Blackout()+0x6a>
 80114b0:	e7c2      	b.n	8011438 <WS28xxMulti::Blackout()+0x2c>
 80114b2:	4649      	mov	r1, r9
 80114b4:	e9cd 6600 	strd	r6, r6, [sp]
 80114b8:	2300      	movs	r3, #0
 80114ba:	22e0      	movs	r2, #224	; 0xe0
 80114bc:	4620      	mov	r0, r4
 80114be:	f7ff fc07 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80114c2:	f109 0901 	add.w	r9, r9, #1
 80114c6:	e7e0      	b.n	801148a <WS28xxMulti::Blackout()+0x7e>
 80114c8:	20001264 	andcs	r1, r0, r4, ror #4
 80114cc:	2000126c 	andcs	r1, r0, ip, ror #4

080114d0 <WS28xxMulti::FullOn()>:
 80114d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114d4:	4f2c      	ldr	r7, [pc, #176]	; (8011588 <WS28xxMulti::FullOn()+0xb8>)
 80114d6:	4605      	mov	r5, r0
 80114d8:	f3bf 8f5f 	dmb	sy
 80114dc:	783a      	ldrb	r2, [r7, #0]
 80114de:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 80114e2:	2a00      	cmp	r2, #0
 80114e4:	d1f8      	bne.n	80114d8 <WS28xxMulti::FullOn()+0x8>
 80114e6:	7d6c      	ldrb	r4, [r5, #21]
 80114e8:	b194      	cbz	r4, 8011510 <WS28xxMulti::FullOn()+0x40>
 80114ea:	4a28      	ldr	r2, [pc, #160]	; (801158c <WS28xxMulti::FullOn()+0xbc>)
 80114ec:	4619      	mov	r1, r3
 80114ee:	3301      	adds	r3, #1
 80114f0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80114f4:	f842 1b04 	str.w	r1, [r2], #4
 80114f8:	d1f9      	bne.n	80114ee <WS28xxMulti::FullOn()+0x1e>
 80114fa:	4628      	mov	r0, r5
 80114fc:	f7ff fee2 	bl	80112c4 <WS28xxMulti::Update()>
 8011500:	f3bf 8f5f 	dmb	sy
 8011504:	783b      	ldrb	r3, [r7, #0]
 8011506:	2b00      	cmp	r3, #0
 8011508:	d1fa      	bne.n	8011500 <WS28xxMulti::FullOn()+0x30>
 801150a:	b003      	add	sp, #12
 801150c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011510:	682e      	ldr	r6, [r5, #0]
 8011512:	3e0b      	subs	r6, #11
 8011514:	2e02      	cmp	r6, #2
 8011516:	d908      	bls.n	801152a <WS28xxMulti::FullOn()+0x5a>
 8011518:	4b1c      	ldr	r3, [pc, #112]	; (801158c <WS28xxMulti::FullOn()+0xbc>)
 801151a:	22ff      	movs	r2, #255	; 0xff
 801151c:	3401      	adds	r4, #1
 801151e:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 8011522:	f843 2b04 	str.w	r2, [r3], #4
 8011526:	d1f9      	bne.n	801151c <WS28xxMulti::FullOn()+0x4c>
 8011528:	e7e7      	b.n	80114fa <WS28xxMulti::FullOn()+0x2a>
 801152a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 801152e:	46a0      	mov	r8, r4
 8011530:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8011534:	2300      	movs	r3, #0
 8011536:	e9cd 8800 	strd	r8, r8, [sp]
 801153a:	461a      	mov	r2, r3
 801153c:	4619      	mov	r1, r3
 801153e:	4620      	mov	r0, r4
 8011540:	f7ff fbc6 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011544:	f04f 0b01 	mov.w	fp, #1
 8011548:	45da      	cmp	sl, fp
 801154a:	d211      	bcs.n	8011570 <WS28xxMulti::FullOn()+0xa0>
 801154c:	2e02      	cmp	r6, #2
 801154e:	bf15      	itete	ne
 8011550:	23ff      	movne	r3, #255	; 0xff
 8011552:	2300      	moveq	r3, #0
 8011554:	e9cd 9900 	strdne	r9, r9, [sp]
 8011558:	e9cd 8800 	strdeq	r8, r8, [sp]
 801155c:	4620      	mov	r0, r4
 801155e:	f10a 0101 	add.w	r1, sl, #1
 8011562:	461a      	mov	r2, r3
 8011564:	3401      	adds	r4, #1
 8011566:	f7ff fbb3 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801156a:	2c10      	cmp	r4, #16
 801156c:	d1e2      	bne.n	8011534 <WS28xxMulti::FullOn()+0x64>
 801156e:	e7c4      	b.n	80114fa <WS28xxMulti::FullOn()+0x2a>
 8011570:	4659      	mov	r1, fp
 8011572:	e9cd 9900 	strd	r9, r9, [sp]
 8011576:	23ff      	movs	r3, #255	; 0xff
 8011578:	22e0      	movs	r2, #224	; 0xe0
 801157a:	4620      	mov	r0, r4
 801157c:	f7ff fba8 	bl	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011580:	f10b 0b01 	add.w	fp, fp, #1
 8011584:	e7e0      	b.n	8011548 <WS28xxMulti::FullOn()+0x78>
 8011586:	bf00      	nop
 8011588:	20001264 	andcs	r1, r0, r4, ror #4
 801158c:	2000126c 	andcs	r1, r0, ip, ror #4

08011590 <WS28xxMulti::IsUpdating()>:
 8011590:	f3bf 8f5f 	dmb	sy
 8011594:	4b01      	ldr	r3, [pc, #4]	; (801159c <WS28xxMulti::IsUpdating()+0xc>)
 8011596:	7818      	ldrb	r0, [r3, #0]
 8011598:	4770      	bx	lr
 801159a:	bf00      	nop
 801159c:	20001264 	andcs	r1, r0, r4, ror #4

080115a0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 80115a0:	b2c8      	uxtb	r0, r1
 80115a2:	491c      	ldr	r1, [pc, #112]	; (8011614 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 80115a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80115a8:	b570      	push	{r4, r5, r6, lr}
 80115aa:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 80115ae:	4a1a      	ldr	r2, [pc, #104]	; (8011618 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 80115b0:	f89d e010 	ldrb.w	lr, [sp, #16]
 80115b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80115b8:	440a      	add	r2, r1
 80115ba:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80115be:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 80115c2:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 80115c6:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80115ca:	0092      	lsls	r2, r2, #2
 80115cc:	0080      	lsls	r0, r0, #2
 80115ce:	2180      	movs	r1, #128	; 0x80
 80115d0:	2400      	movs	r4, #0
 80115d2:	2501      	movs	r5, #1
 80115d4:	420b      	tst	r3, r1
 80115d6:	f5a2 6c80 	sub.w	ip, r2, #1024	; 0x400
 80115da:	bf16      	itet	ne
 80115dc:	f5a2 6c80 	subne.w	ip, r2, #1024	; 0x400
 80115e0:	f8cc 5000 	streq.w	r5, [ip]
 80115e4:	f8cc 4000 	strne.w	r4, [ip]
 80115e8:	ea1e 0f01 	tst.w	lr, r1
 80115ec:	f5a2 7c00 	sub.w	ip, r2, #512	; 0x200
 80115f0:	bf16      	itet	ne
 80115f2:	f5a2 7c00 	subne.w	ip, r2, #512	; 0x200
 80115f6:	f8cc 5000 	streq.w	r5, [ip]
 80115fa:	f8cc 4000 	strne.w	r4, [ip]
 80115fe:	420e      	tst	r6, r1
 8011600:	bf0c      	ite	eq
 8011602:	6015      	streq	r5, [r2, #0]
 8011604:	6014      	strne	r4, [r2, #0]
 8011606:	3240      	adds	r2, #64	; 0x40
 8011608:	4290      	cmp	r0, r2
 801160a:	ea4f 0151 	mov.w	r1, r1, lsr #1
 801160e:	d1e1      	bne.n	80115d4 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 8011610:	bd70      	pop	{r4, r5, r6, pc}
 8011612:	bf00      	nop
 8011614:	2000126c 	andcs	r1, r0, ip, ror #4
 8011618:	e1100020 	tst	r0, r0, lsr #32

0801161c <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 801161c:	b2c8      	uxtb	r0, r1
 801161e:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8011622:	4a19      	ldr	r2, [pc, #100]	; (8011688 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>)
 8011624:	b570      	push	{r4, r5, r6, lr}
 8011626:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 801162a:	4918      	ldr	r1, [pc, #96]	; (801168c <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 801162c:	f89d c010 	ldrb.w	ip, [sp, #16]
 8011630:	f89d e014 	ldrb.w	lr, [sp, #20]
 8011634:	4411      	add	r1, r2
 8011636:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801163a:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 801163e:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 8011642:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 8011646:	0089      	lsls	r1, r1, #2
 8011648:	0080      	lsls	r0, r0, #2
 801164a:	2280      	movs	r2, #128	; 0x80
 801164c:	2401      	movs	r4, #1
 801164e:	ea13 0502 	ands.w	r5, r3, r2
 8011652:	f5a1 6680 	sub.w	r6, r1, #1024	; 0x400
 8011656:	bf0a      	itet	eq
 8011658:	f5a1 6680 	subeq.w	r6, r1, #1024	; 0x400
 801165c:	6034      	strne	r4, [r6, #0]
 801165e:	6035      	streq	r5, [r6, #0]
 8011660:	ea1c 0502 	ands.w	r5, ip, r2
 8011664:	f5a1 7600 	sub.w	r6, r1, #512	; 0x200
 8011668:	bf0a      	itet	eq
 801166a:	f5a1 7600 	subeq.w	r6, r1, #512	; 0x200
 801166e:	6034      	strne	r4, [r6, #0]
 8011670:	6035      	streq	r5, [r6, #0]
 8011672:	ea1e 0502 	ands.w	r5, lr, r2
 8011676:	bf14      	ite	ne
 8011678:	600c      	strne	r4, [r1, #0]
 801167a:	600d      	streq	r5, [r1, #0]
 801167c:	3140      	adds	r1, #64	; 0x40
 801167e:	4288      	cmp	r0, r1
 8011680:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8011684:	d1e3      	bne.n	801164e <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x32>
 8011686:	bd70      	pop	{r4, r5, r6, pc}
 8011688:	2000126c 	andcs	r1, r0, ip, ror #4
 801168c:	e1100020 	tst	r0, r0, lsr #32

08011690 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8011690:	b530      	push	{r4, r5, lr}
 8011692:	6984      	ldr	r4, [r0, #24]
 8011694:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8011698:	468c      	mov	ip, r1
 801169a:	4611      	mov	r1, r2
 801169c:	5ce2      	ldrb	r2, [r4, r3]
 801169e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80116a2:	5d65      	ldrb	r5, [r4, r5]
 80116a4:	5ce3      	ldrb	r3, [r4, r3]
 80116a6:	7d44      	ldrb	r4, [r0, #21]
 80116a8:	bb1c      	cbnz	r4, 80116f2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x62>
 80116aa:	6804      	ldr	r4, [r0, #0]
 80116ac:	b1cc      	cbz	r4, 80116e2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x52>
 80116ae:	3c0b      	subs	r4, #11
 80116b0:	2c01      	cmp	r4, #1
 80116b2:	9204      	str	r2, [sp, #16]
 80116b4:	d94a      	bls.n	801174c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 80116b6:	ea6f 0493 	mvn.w	r4, r3, lsr #2
 80116ba:	9503      	str	r5, [sp, #12]
 80116bc:	f004 0430 	and.w	r4, r4, #48	; 0x30
 80116c0:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80116c4:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 80116c8:	f005 050c 	and.w	r5, r5, #12
 80116cc:	ea44 1292 	orr.w	r2, r4, r2, lsr #6
 80116d0:	432a      	orrs	r2, r5
 80116d2:	3101      	adds	r1, #1
 80116d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80116d8:	4660      	mov	r0, ip
 80116da:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 80116de:	f7ff baf7 	b.w	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80116e2:	6884      	ldr	r4, [r0, #8]
 80116e4:	2c05      	cmp	r4, #5
 80116e6:	d854      	bhi.n	8011792 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x102>
 80116e8:	e8df f004 	tbb	[pc, r4]
 80116ec:	4c484440 	cfstrdmi	mvd4, [r8], {64}	; 0x40
 80116f0:	68843850 	stmvs	r4, {r4, r6, fp, ip, sp}
 80116f4:	2c05      	cmp	r4, #5
 80116f6:	d826      	bhi.n	8011746 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 80116f8:	e8df f004 	tbb	[pc, r4]
 80116fc:	0b141821 	bleq	8517788 <__exidx_end+0x4fb6c8>
 8011700:	e9cd2503 	stmib	sp, {r0, r1, r8, sl, sp}^
 8011704:	2503      	movs	r5, #3
 8011706:	460a      	mov	r2, r1
 8011708:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801170c:	4661      	mov	r1, ip
 801170e:	f7ff bf47 	b.w	80115a0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011712:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8011716:	462b      	mov	r3, r5
 8011718:	460a      	mov	r2, r1
 801171a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801171e:	4661      	mov	r1, ip
 8011720:	f7ff bf3e 	b.w	80115a0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011724:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011728:	462b      	mov	r3, r5
 801172a:	e7f5      	b.n	8011718 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x88>
 801172c:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8011730:	4613      	mov	r3, r2
 8011732:	460a      	mov	r2, r1
 8011734:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011738:	4661      	mov	r1, ip
 801173a:	f7ff bf31 	b.w	80115a0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801173e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8011742:	4613      	mov	r3, r2
 8011744:	e7f5      	b.n	8011732 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa2>
 8011746:	e9cd 5203 	strd	r5, r2, [sp, #12]
 801174a:	e7dc      	b.n	8011706 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x76>
 801174c:	7c82      	ldrb	r2, [r0, #18]
 801174e:	9503      	str	r5, [sp, #12]
 8011750:	3101      	adds	r1, #1
 8011752:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011756:	4660      	mov	r0, ip
 8011758:	f7ff baba 	b.w	8010cd0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801175c:	e9cd 5203 	strd	r5, r2, [sp, #12]
 8011760:	460a      	mov	r2, r1
 8011762:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011766:	4661      	mov	r1, ip
 8011768:	f7ff bf58 	b.w	801161c <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801176c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8011770:	4613      	mov	r3, r2
 8011772:	e7f5      	b.n	8011760 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011774:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8011778:	4613      	mov	r3, r2
 801177a:	e7f1      	b.n	8011760 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 801177c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011780:	462b      	mov	r3, r5
 8011782:	e7ed      	b.n	8011760 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011784:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8011788:	462b      	mov	r3, r5
 801178a:	e7e9      	b.n	8011760 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 801178c:	e9cd 2503 	strd	r2, r5, [sp, #12]
 8011790:	e7e6      	b.n	8011760 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011792:	bf00      	nop

08011794 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 8011794:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011796:	6980      	ldr	r0, [r0, #24]
 8011798:	f89d 4014 	ldrb.w	r4, [sp, #20]
 801179c:	f810 c003 	ldrb.w	ip, [r0, r3]
 80117a0:	4b1c      	ldr	r3, [pc, #112]	; (8011814 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>)
 80117a2:	f810 e004 	ldrb.w	lr, [r0, r4]
 80117a6:	eb03 1282 	add.w	r2, r3, r2, lsl #6
 80117aa:	4b1b      	ldr	r3, [pc, #108]	; (8011818 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x84>)
 80117ac:	b2c9      	uxtb	r1, r1
 80117ae:	4413      	add	r3, r2
 80117b0:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80117b4:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 80117b8:	f501 7100 	add.w	r1, r1, #512	; 0x200
 80117bc:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80117c0:	f89d 1018 	ldrb.w	r1, [sp, #24]
 80117c4:	5c45      	ldrb	r5, [r0, r1]
 80117c6:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80117ca:	009b      	lsls	r3, r3, #2
 80117cc:	5c46      	ldrb	r6, [r0, r1]
 80117ce:	0092      	lsls	r2, r2, #2
 80117d0:	2180      	movs	r1, #128	; 0x80
 80117d2:	2000      	movs	r0, #0
 80117d4:	2401      	movs	r4, #1
 80117d6:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 80117da:	ea1e 0f01 	tst.w	lr, r1
 80117de:	bf0c      	ite	eq
 80117e0:	603c      	streq	r4, [r7, #0]
 80117e2:	6038      	strne	r0, [r7, #0]
 80117e4:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 80117e8:	ea1c 0f01 	tst.w	ip, r1
 80117ec:	bf0c      	ite	eq
 80117ee:	603c      	streq	r4, [r7, #0]
 80117f0:	6038      	strne	r0, [r7, #0]
 80117f2:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 80117f6:	420d      	tst	r5, r1
 80117f8:	bf0c      	ite	eq
 80117fa:	603c      	streq	r4, [r7, #0]
 80117fc:	6038      	strne	r0, [r7, #0]
 80117fe:	420e      	tst	r6, r1
 8011800:	bf0c      	ite	eq
 8011802:	601c      	streq	r4, [r3, #0]
 8011804:	6018      	strne	r0, [r3, #0]
 8011806:	3340      	adds	r3, #64	; 0x40
 8011808:	429a      	cmp	r2, r3
 801180a:	ea4f 0151 	mov.w	r1, r1, lsr #1
 801180e:	d1e2      	bne.n	80117d6 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x42>
 8011810:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011812:	bf00      	nop
 8011814:	2000126c 	andcs	r1, r0, ip, ror #4
 8011818:	e1100030 	tst	r0, r0, lsr r0

0801181c <net_set_ip>:
 801181c:	b510      	push	{r4, lr}
 801181e:	4c05      	ldr	r4, [pc, #20]	; (8011834 <net_set_ip+0x18>)
 8011820:	6020      	str	r0, [r4, #0]
 8011822:	4621      	mov	r1, r4
 8011824:	4804      	ldr	r0, [pc, #16]	; (8011838 <net_set_ip+0x1c>)
 8011826:	f7f6 fd77 	bl	8008318 <arp_init>
 801182a:	4620      	mov	r0, r4
 801182c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011830:	f002 b888 	b.w	8013944 <ip_set_ip>
 8011834:	2000926c 	andcs	r9, r0, ip, ror #4
 8011838:	20009278 	andcs	r9, r0, r8, ror r2

0801183c <net_set_dhcp>:
 801183c:	b570      	push	{r4, r5, r6, lr}
 801183e:	2400      	movs	r4, #0
 8011840:	7014      	strb	r4, [r2, #0]
 8011842:	4605      	mov	r5, r0
 8011844:	4616      	mov	r6, r2
 8011846:	4810      	ldr	r0, [pc, #64]	; (8011888 <net_set_dhcp+0x4c>)
 8011848:	460a      	mov	r2, r1
 801184a:	4910      	ldr	r1, [pc, #64]	; (801188c <net_set_dhcp+0x50>)
 801184c:	f001 fe60 	bl	8013510 <dhcp_client>
 8011850:	42a0      	cmp	r0, r4
 8011852:	da17      	bge.n	8011884 <net_set_dhcp+0x48>
 8011854:	480d      	ldr	r0, [pc, #52]	; (801188c <net_set_dhcp+0x50>)
 8011856:	f000 f859 	bl	801190c <rfc3927>
 801185a:	7030      	strb	r0, [r6, #0]
 801185c:	490b      	ldr	r1, [pc, #44]	; (801188c <net_set_dhcp+0x50>)
 801185e:	480a      	ldr	r0, [pc, #40]	; (8011888 <net_set_dhcp+0x4c>)
 8011860:	f7f6 fd5a 	bl	8008318 <arp_init>
 8011864:	4809      	ldr	r0, [pc, #36]	; (801188c <net_set_dhcp+0x50>)
 8011866:	f002 f86d 	bl	8013944 <ip_set_ip>
 801186a:	4a08      	ldr	r2, [pc, #32]	; (801188c <net_set_dhcp+0x50>)
 801186c:	1e6b      	subs	r3, r5, #1
 801186e:	350b      	adds	r5, #11
 8011870:	f812 1b01 	ldrb.w	r1, [r2], #1
 8011874:	f803 1f01 	strb.w	r1, [r3, #1]!
 8011878:	42ab      	cmp	r3, r5
 801187a:	d1f9      	bne.n	8011870 <net_set_dhcp+0x34>
 801187c:	4b04      	ldr	r3, [pc, #16]	; (8011890 <net_set_dhcp+0x54>)
 801187e:	4620      	mov	r0, r4
 8011880:	701c      	strb	r4, [r3, #0]
 8011882:	bd70      	pop	{r4, r5, r6, pc}
 8011884:	2401      	movs	r4, #1
 8011886:	e7e9      	b.n	801185c <net_set_dhcp+0x20>
 8011888:	20009278 	andcs	r9, r0, r8, ror r2
 801188c:	2000926c 	andcs	r9, r0, ip, ror #4
 8011890:	2000927e 	andcs	r9, r0, lr, ror r2

08011894 <net_dhcp_release>:
 8011894:	b508      	push	{r3, lr}
 8011896:	f001 ff43 	bl	8013720 <dhcp_client_release>
 801189a:	4b02      	ldr	r3, [pc, #8]	; (80118a4 <net_dhcp_release+0x10>)
 801189c:	2200      	movs	r2, #0
 801189e:	701a      	strb	r2, [r3, #0]
 80118a0:	bd08      	pop	{r3, pc}
 80118a2:	bf00      	nop
 80118a4:	2000927e 	andcs	r9, r0, lr, ror r2

080118a8 <net_set_zeroconf>:
 80118a8:	b538      	push	{r3, r4, r5, lr}
 80118aa:	4604      	mov	r4, r0
 80118ac:	480c      	ldr	r0, [pc, #48]	; (80118e0 <net_set_zeroconf+0x38>)
 80118ae:	f000 f82d 	bl	801190c <rfc3927>
 80118b2:	4605      	mov	r5, r0
 80118b4:	b190      	cbz	r0, 80118dc <net_set_zeroconf+0x34>
 80118b6:	490a      	ldr	r1, [pc, #40]	; (80118e0 <net_set_zeroconf+0x38>)
 80118b8:	480a      	ldr	r0, [pc, #40]	; (80118e4 <net_set_zeroconf+0x3c>)
 80118ba:	f7f6 fd2d 	bl	8008318 <arp_init>
 80118be:	4808      	ldr	r0, [pc, #32]	; (80118e0 <net_set_zeroconf+0x38>)
 80118c0:	f002 f840 	bl	8013944 <ip_set_ip>
 80118c4:	4a06      	ldr	r2, [pc, #24]	; (80118e0 <net_set_zeroconf+0x38>)
 80118c6:	1e63      	subs	r3, r4, #1
 80118c8:	340b      	adds	r4, #11
 80118ca:	f812 1b01 	ldrb.w	r1, [r2], #1
 80118ce:	f803 1f01 	strb.w	r1, [r3, #1]!
 80118d2:	42a3      	cmp	r3, r4
 80118d4:	d1f9      	bne.n	80118ca <net_set_zeroconf+0x22>
 80118d6:	4b04      	ldr	r3, [pc, #16]	; (80118e8 <net_set_zeroconf+0x40>)
 80118d8:	2200      	movs	r2, #0
 80118da:	701a      	strb	r2, [r3, #0]
 80118dc:	4628      	mov	r0, r5
 80118de:	bd38      	pop	{r3, r4, r5, pc}
 80118e0:	2000926c 	andcs	r9, r0, ip, ror #4
 80118e4:	20009278 	andcs	r9, r0, r8, ror r2
 80118e8:	2000927e 	andcs	r9, r0, lr, ror r2

080118ec <net_timers_run>:
 80118ec:	4b05      	ldr	r3, [pc, #20]	; (8011904 <net_timers_run+0x18>)
 80118ee:	4a06      	ldr	r2, [pc, #24]	; (8011908 <net_timers_run+0x1c>)
 80118f0:	681b      	ldr	r3, [r3, #0]
 80118f2:	6811      	ldr	r1, [r2, #0]
 80118f4:	4299      	cmp	r1, r3
 80118f6:	d803      	bhi.n	8011900 <net_timers_run+0x14>
 80118f8:	3364      	adds	r3, #100	; 0x64
 80118fa:	6013      	str	r3, [r2, #0]
 80118fc:	f001 bf9c 	b.w	8013838 <igmp_timer>
 8011900:	4770      	bx	lr
 8011902:	bf00      	nop
 8011904:	2000fd94 	mulcs	r0, r4, sp
 8011908:	20009284 	andcs	r9, r0, r4, lsl #5

0801190c <rfc3927>:
 801190c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011910:	4b19      	ldr	r3, [pc, #100]	; (8011978 <rfc3927+0x6c>)
 8011912:	4f1a      	ldr	r7, [pc, #104]	; (801197c <rfc3927+0x70>)
 8011914:	791a      	ldrb	r2, [r3, #4]
 8011916:	78dc      	ldrb	r4, [r3, #3]
 8011918:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8011980 <rfc3927+0x74>
 801191c:	f8d7 9000 	ldr.w	r9, [r7]
 8011920:	f8df b060 	ldr.w	fp, [pc, #96]	; 8011984 <rfc3927+0x78>
 8011924:	f8df a060 	ldr.w	sl, [pc, #96]	; 8011988 <rfc3927+0x7c>
 8011928:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 801192c:	4606      	mov	r6, r0
 801192e:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8011932:	25ff      	movs	r5, #255	; 0xff
 8011934:	4659      	mov	r1, fp
 8011936:	4620      	mov	r0, r4
 8011938:	f001 fcde 	bl	80132f8 <arp_cache_lookup>
 801193c:	b190      	cbz	r0, 8011964 <rfc3927+0x58>
 801193e:	ba24      	rev	r4, r4
 8011940:	3401      	adds	r4, #1
 8011942:	3d01      	subs	r5, #1
 8011944:	ba24      	rev	r4, r4
 8011946:	b2ad      	uxth	r5, r5
 8011948:	4554      	cmp	r4, sl
 801194a:	bf08      	it	eq
 801194c:	4644      	moveq	r4, r8
 801194e:	b18d      	cbz	r5, 8011974 <rfc3927+0x68>
 8011950:	683b      	ldr	r3, [r7, #0]
 8011952:	eba3 0309 	sub.w	r3, r3, r9
 8011956:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 801195a:	d3eb      	bcc.n	8011934 <rfc3927+0x28>
 801195c:	2400      	movs	r4, #0
 801195e:	4623      	mov	r3, r4
 8011960:	4620      	mov	r0, r4
 8011962:	e002      	b.n	801196a <rfc3927+0x5e>
 8011964:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011968:	2001      	movs	r0, #1
 801196a:	e9c6 3401 	strd	r3, r4, [r6, #4]
 801196e:	6034      	str	r4, [r6, #0]
 8011970:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011974:	462c      	mov	r4, r5
 8011976:	e7f2      	b.n	801195e <rfc3927+0x52>
 8011978:	20009288 	andcs	r9, r0, r8, lsl #5
 801197c:	2000fd94 	mulcs	r0, r4, sp
 8011980:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 8011984:	20009290 	mulcs	r0, r0, r2
 8011988:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0801198c <_init_tcb>:
 801198c:	b510      	push	{r4, lr}
 801198e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 8011992:	4603      	mov	r3, r0
 8011994:	2400      	movs	r4, #0
 8011996:	4293      	cmp	r3, r2
 8011998:	d10d      	bne.n	80119b6 <_init_tcb+0x2a>
 801199a:	4b08      	ldr	r3, [pc, #32]	; (80119bc <_init_tcb+0x30>)
 801199c:	681b      	ldr	r3, [r3, #0]
 801199e:	6283      	str	r3, [r0, #40]	; 0x28
 80119a0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80119a4:	f640 3268 	movw	r2, #2920	; 0xb68
 80119a8:	6243      	str	r3, [r0, #36]	; 0x24
 80119aa:	2301      	movs	r3, #1
 80119ac:	8001      	strh	r1, [r0, #0]
 80119ae:	8702      	strh	r2, [r0, #56]	; 0x38
 80119b0:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 80119b4:	bd10      	pop	{r4, pc}
 80119b6:	f803 4b01 	strb.w	r4, [r3], #1
 80119ba:	e7ec      	b.n	8011996 <_init_tcb+0xa>
 80119bc:	2000fd94 	mulcs	r0, r4, sp

080119c0 <memcpy.isra.0>:
 80119c0:	3801      	subs	r0, #1
 80119c2:	440a      	add	r2, r1
 80119c4:	4291      	cmp	r1, r2
 80119c6:	d100      	bne.n	80119ca <memcpy.isra.0+0xa>
 80119c8:	4770      	bx	lr
 80119ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80119ce:	f800 3f01 	strb.w	r3, [r0, #1]!
 80119d2:	e7f7      	b.n	80119c4 <memcpy.isra.0+0x4>

080119d4 <_bswap32>:
 80119d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80119d6:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 80119da:	2204      	movs	r2, #4
 80119dc:	4629      	mov	r1, r5
 80119de:	4604      	mov	r4, r0
 80119e0:	eb0d 0002 	add.w	r0, sp, r2
 80119e4:	f7ff ffec 	bl	80119c0 <memcpy.isra.0>
 80119e8:	9b01      	ldr	r3, [sp, #4]
 80119ea:	2204      	movs	r2, #4
 80119ec:	ba1b      	rev	r3, r3
 80119ee:	eb0d 0102 	add.w	r1, sp, r2
 80119f2:	4628      	mov	r0, r5
 80119f4:	9301      	str	r3, [sp, #4]
 80119f6:	3426      	adds	r4, #38	; 0x26
 80119f8:	f7ff ffe2 	bl	80119c0 <memcpy.isra.0>
 80119fc:	2204      	movs	r2, #4
 80119fe:	eb0d 0002 	add.w	r0, sp, r2
 8011a02:	4621      	mov	r1, r4
 8011a04:	f7ff ffdc 	bl	80119c0 <memcpy.isra.0>
 8011a08:	9b01      	ldr	r3, [sp, #4]
 8011a0a:	2204      	movs	r2, #4
 8011a0c:	ba1b      	rev	r3, r3
 8011a0e:	eb0d 0102 	add.w	r1, sp, r2
 8011a12:	4620      	mov	r0, r4
 8011a14:	9301      	str	r3, [sp, #4]
 8011a16:	f7ff ffd3 	bl	80119c0 <memcpy.isra.0>
 8011a1a:	b003      	add	sp, #12
 8011a1c:	bd30      	pop	{r4, r5, pc}
	...

08011a20 <_tcp_send_package>:
 8011a20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011a24:	7a0b      	ldrb	r3, [r1, #8]
 8011a26:	4c4c      	ldr	r4, [pc, #304]	; (8011b58 <_tcp_send_package+0x138>)
 8011a28:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8011a2a:	f013 0f02 	tst.w	r3, #2
 8011a2e:	4605      	mov	r5, r0
 8011a30:	bf0c      	ite	eq
 8011a32:	f04f 0805 	moveq.w	r8, #5
 8011a36:	f04f 0806 	movne.w	r8, #6
 8011a3a:	460f      	mov	r7, r1
 8011a3c:	2206      	movs	r2, #6
 8011a3e:	f100 0108 	add.w	r1, r0, #8
 8011a42:	4620      	mov	r0, r4
 8011a44:	f7ff ffbc 	bl	80119c0 <memcpy.isra.0>
 8011a48:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 8011a4c:	f8b4 35ec 	ldrh.w	r3, [r4, #1516]	; 0x5ec
 8011a50:	8263      	strh	r3, [r4, #18]
 8011a52:	b2b6      	uxth	r6, r6
 8011a54:	1c5a      	adds	r2, r3, #1
 8011a56:	f105 0904 	add.w	r9, r5, #4
 8011a5a:	f106 0314 	add.w	r3, r6, #20
 8011a5e:	ba5b      	rev16	r3, r3
 8011a60:	f8a4 25ec 	strh.w	r2, [r4, #1516]	; 0x5ec
 8011a64:	4649      	mov	r1, r9
 8011a66:	2204      	movs	r2, #4
 8011a68:	f104 001e 	add.w	r0, r4, #30
 8011a6c:	8223      	strh	r3, [r4, #16]
 8011a6e:	f04f 0a00 	mov.w	sl, #0
 8011a72:	f7ff ffa5 	bl	80119c0 <memcpy.isra.0>
 8011a76:	2114      	movs	r1, #20
 8011a78:	f104 000e 	add.w	r0, r4, #14
 8011a7c:	f8a4 a018 	strh.w	sl, [r4, #24]
 8011a80:	f001 ff69 	bl	8013956 <net_chksum>
 8011a84:	882b      	ldrh	r3, [r5, #0]
 8011a86:	8463      	strh	r3, [r4, #34]	; 0x22
 8011a88:	886b      	ldrh	r3, [r5, #2]
 8011a8a:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011a8c:	683b      	ldr	r3, [r7, #0]
 8011a8e:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 8011a92:	ea4f 1808 	mov.w	r8, r8, lsl #4
 8011a96:	687b      	ldr	r3, [r7, #4]
 8011a98:	8320      	strh	r0, [r4, #24]
 8011a9a:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 8011a9e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 8011aa2:	7a3b      	ldrb	r3, [r7, #8]
 8011aa4:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 8011aa8:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 8011aaa:	8622      	strh	r2, [r4, #48]	; 0x30
 8011aac:	079b      	lsls	r3, r3, #30
 8011aae:	8baa      	ldrh	r2, [r5, #28]
 8011ab0:	86a2      	strh	r2, [r4, #52]	; 0x34
 8011ab2:	bf41      	itttt	mi
 8011ab4:	f240 4302 	movwmi	r3, #1026	; 0x402
 8011ab8:	4622      	movmi	r2, r4
 8011aba:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 8011abc:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8011ac0:	bf48      	it	mi
 8011ac2:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 8011ac6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8011ac8:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 8011acc:	bf58      	it	pl
 8011ace:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 8011ad2:	2b00      	cmp	r3, #0
 8011ad4:	d13e      	bne.n	8011b54 <_tcp_send_package+0x134>
 8011ad6:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8011ad8:	481f      	ldr	r0, [pc, #124]	; (8011b58 <_tcp_send_package+0x138>)
 8011ada:	ba5b      	rev16	r3, r3
 8011adc:	8463      	strh	r3, [r4, #34]	; 0x22
 8011ade:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8011ae0:	ba5b      	rev16	r3, r3
 8011ae2:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011ae4:	f7ff ff76 	bl	80119d4 <_bswap32>
 8011ae8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011aea:	491c      	ldr	r1, [pc, #112]	; (8011b5c <_tcp_send_package+0x13c>)
 8011aec:	ba5b      	rev16	r3, r3
 8011aee:	8623      	strh	r3, [r4, #48]	; 0x30
 8011af0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011af2:	a801      	add	r0, sp, #4
 8011af4:	ba5b      	rev16	r3, r3
 8011af6:	220c      	movs	r2, #12
 8011af8:	86a3      	strh	r3, [r4, #52]	; 0x34
 8011afa:	f7ff ff61 	bl	80119c0 <memcpy.isra.0>
 8011afe:	4918      	ldr	r1, [pc, #96]	; (8011b60 <_tcp_send_package+0x140>)
 8011b00:	4816      	ldr	r0, [pc, #88]	; (8011b5c <_tcp_send_package+0x13c>)
 8011b02:	2204      	movs	r2, #4
 8011b04:	f7ff ff5c 	bl	80119c0 <memcpy.isra.0>
 8011b08:	2204      	movs	r2, #4
 8011b0a:	4649      	mov	r1, r9
 8011b0c:	4815      	ldr	r0, [pc, #84]	; (8011b64 <_tcp_send_package+0x144>)
 8011b0e:	f7ff ff57 	bl	80119c0 <memcpy.isra.0>
 8011b12:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8011b16:	83e3      	strh	r3, [r4, #30]
 8011b18:	f106 010c 	add.w	r1, r6, #12
 8011b1c:	ba73      	rev16	r3, r6
 8011b1e:	480f      	ldr	r0, [pc, #60]	; (8011b5c <_tcp_send_package+0x13c>)
 8011b20:	8423      	strh	r3, [r4, #32]
 8011b22:	f001 ff18 	bl	8013956 <net_chksum>
 8011b26:	a901      	add	r1, sp, #4
 8011b28:	4605      	mov	r5, r0
 8011b2a:	220c      	movs	r2, #12
 8011b2c:	480b      	ldr	r0, [pc, #44]	; (8011b5c <_tcp_send_package+0x13c>)
 8011b2e:	f7ff ff47 	bl	80119c0 <memcpy.isra.0>
 8011b32:	4809      	ldr	r0, [pc, #36]	; (8011b58 <_tcp_send_package+0x138>)
 8011b34:	8665      	strh	r5, [r4, #50]	; 0x32
 8011b36:	f106 0122 	add.w	r1, r6, #34	; 0x22
 8011b3a:	b004      	add	sp, #16
 8011b3c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b40:	f005 bd3a 	b.w	80175b8 <emac_eth_send>
 8011b44:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8011b46:	5cc9      	ldrb	r1, [r1, r3]
 8011b48:	54d1      	strb	r1, [r2, r3]
 8011b4a:	3301      	adds	r3, #1
 8011b4c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 8011b4e:	4299      	cmp	r1, r3
 8011b50:	d8f8      	bhi.n	8011b44 <_tcp_send_package+0x124>
 8011b52:	e7c0      	b.n	8011ad6 <_tcp_send_package+0xb6>
 8011b54:	2300      	movs	r3, #0
 8011b56:	e7f9      	b.n	8011b4c <_tcp_send_package+0x12c>
 8011b58:	10000000 	andne	r0, r0, r0
 8011b5c:	10000016 	andne	r0, r0, r6, lsl r0
 8011b60:	2000926c 	andcs	r9, r0, ip, ror #4
 8011b64:	1000001a 	andne	r0, r0, sl, lsl r0

08011b68 <_send_reset>:
 8011b68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011b6a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 8011b6e:	075a      	lsls	r2, r3, #29
 8011b70:	4604      	mov	r4, r0
 8011b72:	460e      	mov	r6, r1
 8011b74:	d421      	bmi.n	8011bba <_send_reset+0x52>
 8011b76:	2204      	movs	r2, #4
 8011b78:	f013 0310 	ands.w	r3, r3, #16
 8011b7c:	f88d 200c 	strb.w	r2, [sp, #12]
 8011b80:	d01d      	beq.n	8011bbe <_send_reset+0x56>
 8011b82:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 8011b86:	4668      	mov	r0, sp
 8011b88:	f7ff ff1a 	bl	80119c0 <memcpy.isra.0>
 8011b8c:	9b00      	ldr	r3, [sp, #0]
 8011b8e:	9301      	str	r3, [sp, #4]
 8011b90:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 8011b94:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8011b98:	f3c3 0540 	ubfx	r5, r3, #1, #1
 8011b9c:	4668      	mov	r0, sp
 8011b9e:	07db      	lsls	r3, r3, #31
 8011ba0:	f04f 0204 	mov.w	r2, #4
 8011ba4:	bf48      	it	mi
 8011ba6:	3501      	addmi	r5, #1
 8011ba8:	f7ff ff0a 	bl	80119c0 <memcpy.isra.0>
 8011bac:	9b00      	ldr	r3, [sp, #0]
 8011bae:	a901      	add	r1, sp, #4
 8011bb0:	441d      	add	r5, r3
 8011bb2:	4630      	mov	r0, r6
 8011bb4:	9502      	str	r5, [sp, #8]
 8011bb6:	f7ff ff33 	bl	8011a20 <_tcp_send_package>
 8011bba:	b004      	add	sp, #16
 8011bbc:	bd70      	pop	{r4, r5, r6, pc}
 8011bbe:	9301      	str	r3, [sp, #4]
 8011bc0:	2314      	movs	r3, #20
 8011bc2:	f88d 300c 	strb.w	r3, [sp, #12]
 8011bc6:	e7e3      	b.n	8011b90 <_send_reset+0x28>

08011bc8 <tcp_begin>:
 8011bc8:	b508      	push	{r3, lr}
 8011bca:	4b0b      	ldr	r3, [pc, #44]	; (8011bf8 <tcp_begin+0x30>)
 8011bcc:	f8b3 25f0 	ldrh.w	r2, [r3, #1520]	; 0x5f0
 8011bd0:	4282      	cmp	r2, r0
 8011bd2:	4601      	mov	r1, r0
 8011bd4:	d102      	bne.n	8011bdc <tcp_begin+0x14>
 8011bd6:	f893 0630 	ldrb.w	r0, [r3, #1584]	; 0x630
 8011bda:	b130      	cbz	r0, 8011bea <tcp_begin+0x22>
 8011bdc:	b12a      	cbz	r2, 8011bea <tcp_begin+0x22>
 8011bde:	4807      	ldr	r0, [pc, #28]	; (8011bfc <tcp_begin+0x34>)
 8011be0:	f003 fd50 	bl	8015684 <console_error>
 8011be4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011be8:	bd08      	pop	{r3, pc}
 8011bea:	4805      	ldr	r0, [pc, #20]	; (8011c00 <tcp_begin+0x38>)
 8011bec:	f8a3 15f0 	strh.w	r1, [r3, #1520]	; 0x5f0
 8011bf0:	f7ff fecc 	bl	801198c <_init_tcb>
 8011bf4:	2000      	movs	r0, #0
 8011bf6:	e7f7      	b.n	8011be8 <tcp_begin+0x20>
 8011bf8:	10000000 	andne	r0, r0, r0
 8011bfc:	0801af8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, fp, sp, pc}
 8011c00:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08011c04 <tcp_write>:
 8011c04:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8011c08:	b530      	push	{r4, r5, lr}
 8011c0a:	429a      	cmp	r2, r3
 8011c0c:	bf28      	it	cs
 8011c0e:	461a      	movcs	r2, r3
 8011c10:	4615      	mov	r5, r2
 8011c12:	4b12      	ldr	r3, [pc, #72]	; (8011c5c <tcp_write+0x58>)
 8011c14:	2244      	movs	r2, #68	; 0x44
 8011c16:	4350      	muls	r0, r2
 8011c18:	181c      	adds	r4, r3, r0
 8011c1a:	b085      	sub	sp, #20
 8011c1c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8011c20:	9201      	str	r2, [sp, #4]
 8011c22:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 8011c26:	f8d4 2624 	ldr.w	r2, [r4, #1572]	; 0x624
 8011c2a:	f8c4 161c 	str.w	r1, [r4, #1564]	; 0x61c
 8011c2e:	9202      	str	r2, [sp, #8]
 8011c30:	4418      	add	r0, r3
 8011c32:	2218      	movs	r2, #24
 8011c34:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
 8011c38:	a901      	add	r1, sp, #4
 8011c3a:	f88d 200c 	strb.w	r2, [sp, #12]
 8011c3e:	f7ff feef 	bl	8011a20 <_tcp_send_package>
 8011c42:	2300      	movs	r3, #0
 8011c44:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 8011c48:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 8011c4c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8011c50:	442b      	add	r3, r5
 8011c52:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 8011c56:	b005      	add	sp, #20
 8011c58:	bd30      	pop	{r4, r5, pc}
 8011c5a:	bf00      	nop
 8011c5c:	10000000 	andne	r0, r0, r0

08011c60 <tcp_read>:
 8011c60:	4b23      	ldr	r3, [pc, #140]	; (8011cf0 <tcp_read+0x90>)
 8011c62:	2244      	movs	r2, #68	; 0x44
 8011c64:	4342      	muls	r2, r0
 8011c66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c68:	189c      	adds	r4, r3, r2
 8011c6a:	b085      	sub	sp, #20
 8011c6c:	f894 5630 	ldrb.w	r5, [r4, #1584]	; 0x630
 8011c70:	2d07      	cmp	r5, #7
 8011c72:	d118      	bne.n	8011ca6 <tcp_read+0x46>
 8011c74:	f8d4 1604 	ldr.w	r1, [r4, #1540]	; 0x604
 8011c78:	9101      	str	r1, [sp, #4]
 8011c7a:	f8d4 1624 	ldr.w	r1, [r4, #1572]	; 0x624
 8011c7e:	9102      	str	r1, [sp, #8]
 8011c80:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 8011c84:	2111      	movs	r1, #17
 8011c86:	f88d 100c 	strb.w	r1, [sp, #12]
 8011c8a:	1898      	adds	r0, r3, r2
 8011c8c:	a901      	add	r1, sp, #4
 8011c8e:	f7ff fec7 	bl	8011a20 <_tcp_send_package>
 8011c92:	2309      	movs	r3, #9
 8011c94:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 8011c98:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8011c9c:	3301      	adds	r3, #1
 8011c9e:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 8011ca2:	2000      	movs	r0, #0
 8011ca4:	e022      	b.n	8011cec <tcp_read+0x8c>
 8011ca6:	f44f 6237 	mov.w	r2, #2928	; 0xb70
 8011caa:	4350      	muls	r0, r2
 8011cac:	181e      	adds	r6, r3, r0
 8011cae:	f8b6 5636 	ldrh.w	r5, [r6, #1590]	; 0x636
 8011cb2:	f8b6 2634 	ldrh.w	r2, [r6, #1588]	; 0x634
 8011cb6:	42aa      	cmp	r2, r5
 8011cb8:	d0f3      	beq.n	8011ca2 <tcp_read+0x42>
 8011cba:	f240 52b6 	movw	r2, #1462	; 0x5b6
 8011cbe:	f100 0c04 	add.w	ip, r0, #4
 8011cc2:	436a      	muls	r2, r5
 8011cc4:	f203 6734 	addw	r7, r3, #1588	; 0x634
 8011cc8:	4494      	add	ip, r2
 8011cca:	4467      	add	r7, ip
 8011ccc:	600f      	str	r7, [r1, #0]
 8011cce:	4402      	add	r2, r0
 8011cd0:	441a      	add	r2, r3
 8011cd2:	f8b4 3628 	ldrh.w	r3, [r4, #1576]	; 0x628
 8011cd6:	f8b2 0bec 	ldrh.w	r0, [r2, #3052]	; 0xbec
 8011cda:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
 8011cde:	f8a4 3628 	strh.w	r3, [r4, #1576]	; 0x628
 8011ce2:	1c6b      	adds	r3, r5, #1
 8011ce4:	f003 0301 	and.w	r3, r3, #1
 8011ce8:	f8a6 3636 	strh.w	r3, [r6, #1590]	; 0x636
 8011cec:	b005      	add	sp, #20
 8011cee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011cf0:	10000000 	andne	r0, r0, r0

08011cf4 <memcpy.isra.0>:
 8011cf4:	3801      	subs	r0, #1
 8011cf6:	440a      	add	r2, r1
 8011cf8:	4291      	cmp	r1, r2
 8011cfa:	d100      	bne.n	8011cfe <memcpy.isra.0+0xa>
 8011cfc:	4770      	bx	lr
 8011cfe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011d02:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011d06:	e7f7      	b.n	8011cf8 <memcpy.isra.0+0x4>

08011d08 <net_memcpy>:
 8011d08:	ea40 0301 	orr.w	r3, r0, r1
 8011d0c:	079b      	lsls	r3, r3, #30
 8011d0e:	b570      	push	{r4, r5, r6, lr}
 8011d10:	d108      	bne.n	8011d24 <net_memcpy+0x1c>
 8011d12:	f022 0303 	bic.w	r3, r2, #3
 8011d16:	1f04      	subs	r4, r0, #4
 8011d18:	18cd      	adds	r5, r1, r3
 8011d1a:	42a9      	cmp	r1, r5
 8011d1c:	d108      	bne.n	8011d30 <net_memcpy+0x28>
 8011d1e:	1ad2      	subs	r2, r2, r3
 8011d20:	4403      	add	r3, r0
 8011d22:	e000      	b.n	8011d26 <net_memcpy+0x1e>
 8011d24:	4603      	mov	r3, r0
 8011d26:	3b01      	subs	r3, #1
 8011d28:	440a      	add	r2, r1
 8011d2a:	4291      	cmp	r1, r2
 8011d2c:	d105      	bne.n	8011d3a <net_memcpy+0x32>
 8011d2e:	bd70      	pop	{r4, r5, r6, pc}
 8011d30:	f851 6b04 	ldr.w	r6, [r1], #4
 8011d34:	f844 6f04 	str.w	r6, [r4, #4]!
 8011d38:	e7ef      	b.n	8011d1a <net_memcpy+0x12>
 8011d3a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011d3e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8011d42:	e7f2      	b.n	8011d2a <net_memcpy+0x22>

08011d44 <udp_set_ip>:
 8011d44:	b513      	push	{r0, r1, r4, lr}
 8011d46:	2204      	movs	r2, #4
 8011d48:	4604      	mov	r4, r0
 8011d4a:	6803      	ldr	r3, [r0, #0]
 8011d4c:	4809      	ldr	r0, [pc, #36]	; (8011d74 <udp_set_ip+0x30>)
 8011d4e:	9301      	str	r3, [sp, #4]
 8011d50:	eb0d 0102 	add.w	r1, sp, r2
 8011d54:	f7ff ffce 	bl	8011cf4 <memcpy.isra.0>
 8011d58:	6862      	ldr	r2, [r4, #4]
 8011d5a:	4b07      	ldr	r3, [pc, #28]	; (8011d78 <udp_set_ip+0x34>)
 8011d5c:	43d1      	mvns	r1, r2
 8011d5e:	6019      	str	r1, [r3, #0]
 8011d60:	6823      	ldr	r3, [r4, #0]
 8011d62:	4013      	ands	r3, r2
 8011d64:	4a05      	ldr	r2, [pc, #20]	; (8011d7c <udp_set_ip+0x38>)
 8011d66:	6013      	str	r3, [r2, #0]
 8011d68:	68a2      	ldr	r2, [r4, #8]
 8011d6a:	4b05      	ldr	r3, [pc, #20]	; (8011d80 <udp_set_ip+0x3c>)
 8011d6c:	601a      	str	r2, [r3, #0]
 8011d6e:	b002      	add	sp, #8
 8011d70:	bd10      	pop	{r4, pc}
 8011d72:	bf00      	nop
 8011d74:	2000ef82 	andcs	lr, r0, r2, lsl #31
 8011d78:	20009298 	mulcs	r0, r8, r2
 8011d7c:	200092a0 	andcs	r9, r0, r0, lsr #5
 8011d80:	2000929c 	mulcs	r0, ip, r2

08011d84 <udp_bind>:
 8011d84:	4a0a      	ldr	r2, [pc, #40]	; (8011db0 <udp_bind+0x2c>)
 8011d86:	b510      	push	{r4, lr}
 8011d88:	2300      	movs	r3, #0
 8011d8a:	4614      	mov	r4, r2
 8011d8c:	f852 1b04 	ldr.w	r1, [r2], #4
 8011d90:	4281      	cmp	r1, r0
 8011d92:	d008      	beq.n	8011da6 <udp_bind+0x22>
 8011d94:	b149      	cbz	r1, 8011daa <udp_bind+0x26>
 8011d96:	3301      	adds	r3, #1
 8011d98:	2b08      	cmp	r3, #8
 8011d9a:	d1f7      	bne.n	8011d8c <udp_bind+0x8>
 8011d9c:	4805      	ldr	r0, [pc, #20]	; (8011db4 <udp_bind+0x30>)
 8011d9e:	f003 fc71 	bl	8015684 <console_error>
 8011da2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011da6:	4618      	mov	r0, r3
 8011da8:	bd10      	pop	{r4, pc}
 8011daa:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 8011dae:	e7fa      	b.n	8011da6 <udp_bind+0x22>
 8011db0:	200092a8 	andcs	r9, r0, r8, lsr #5
 8011db4:	0801afaa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, fp, sp, pc}

08011db8 <udp_unbind>:
 8011db8:	b510      	push	{r4, lr}
 8011dba:	4a0c      	ldr	r2, [pc, #48]	; (8011dec <udp_unbind+0x34>)
 8011dbc:	2300      	movs	r3, #0
 8011dbe:	4611      	mov	r1, r2
 8011dc0:	f852 4b04 	ldr.w	r4, [r2], #4
 8011dc4:	4284      	cmp	r4, r0
 8011dc6:	d108      	bne.n	8011dda <udp_unbind+0x22>
 8011dc8:	2000      	movs	r0, #0
 8011dca:	f640 3294 	movw	r2, #2964	; 0xb94
 8011dce:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8011dd2:	4353      	muls	r3, r2
 8011dd4:	4a06      	ldr	r2, [pc, #24]	; (8011df0 <udp_unbind+0x38>)
 8011dd6:	50d0      	str	r0, [r2, r3]
 8011dd8:	bd10      	pop	{r4, pc}
 8011dda:	3301      	adds	r3, #1
 8011ddc:	2b08      	cmp	r3, #8
 8011dde:	d1ef      	bne.n	8011dc0 <udp_unbind+0x8>
 8011de0:	4804      	ldr	r0, [pc, #16]	; (8011df4 <udp_unbind+0x3c>)
 8011de2:	f003 fc4f 	bl	8015684 <console_error>
 8011de6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011dea:	e7f5      	b.n	8011dd8 <udp_unbind+0x20>
 8011dec:	200092a8 	andcs	r9, r0, r8, lsr #5
 8011df0:	200092c8 	andcs	r9, r0, r8, asr #5
 8011df4:	0801afaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, sl, fp, sp, pc}

08011df8 <udp_recv>:
 8011df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011dfc:	4604      	mov	r4, r0
 8011dfe:	4698      	mov	r8, r3
 8011e00:	4608      	mov	r0, r1
 8011e02:	f640 3394 	movw	r3, #2964	; 0xb94
 8011e06:	4916      	ldr	r1, [pc, #88]	; (8011e60 <udp_recv+0x68>)
 8011e08:	435c      	muls	r4, r3
 8011e0a:	190f      	adds	r7, r1, r4
 8011e0c:	5b0b      	ldrh	r3, [r1, r4]
 8011e0e:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 8011e12:	4563      	cmp	r3, ip
 8011e14:	d021      	beq.n	8011e5a <udp_recv+0x62>
 8011e16:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8011e1a:	fb03 fc0c 	mul.w	ip, r3, ip
 8011e1e:	eb0c 0604 	add.w	r6, ip, r4
 8011e22:	440e      	add	r6, r1
 8011e24:	3404      	adds	r4, #4
 8011e26:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8011e2a:	4295      	cmp	r5, r2
 8011e2c:	bf28      	it	cs
 8011e2e:	4615      	movcs	r5, r2
 8011e30:	4464      	add	r4, ip
 8011e32:	462a      	mov	r2, r5
 8011e34:	4421      	add	r1, r4
 8011e36:	f7ff ff67 	bl	8011d08 <net_memcpy>
 8011e3a:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8011e3e:	f8c8 3000 	str.w	r3, [r8]
 8011e42:	9b06      	ldr	r3, [sp, #24]
 8011e44:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8011e48:	801a      	strh	r2, [r3, #0]
 8011e4a:	887b      	ldrh	r3, [r7, #2]
 8011e4c:	3301      	adds	r3, #1
 8011e4e:	f003 0301 	and.w	r3, r3, #1
 8011e52:	807b      	strh	r3, [r7, #2]
 8011e54:	4628      	mov	r0, r5
 8011e56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e5a:	2500      	movs	r5, #0
 8011e5c:	e7fa      	b.n	8011e54 <udp_recv+0x5c>
 8011e5e:	bf00      	nop
 8011e60:	200092c8 	andcs	r9, r0, r8, asr #5

08011e64 <udp_recv2>:
 8011e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e66:	4c11      	ldr	r4, [pc, #68]	; (8011eac <udp_recv2+0x48>)
 8011e68:	f640 3594 	movw	r5, #2964	; 0xb94
 8011e6c:	4368      	muls	r0, r5
 8011e6e:	1827      	adds	r7, r4, r0
 8011e70:	5a26      	ldrh	r6, [r4, r0]
 8011e72:	887d      	ldrh	r5, [r7, #2]
 8011e74:	42ae      	cmp	r6, r5
 8011e76:	d017      	beq.n	8011ea8 <udp_recv2+0x44>
 8011e78:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8011e7c:	1d06      	adds	r6, r0, #4
 8011e7e:	fb0c f505 	mul.w	r5, ip, r5
 8011e82:	442e      	add	r6, r5
 8011e84:	4405      	add	r5, r0
 8011e86:	4426      	add	r6, r4
 8011e88:	442c      	add	r4, r5
 8011e8a:	600e      	str	r6, [r1, #0]
 8011e8c:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8011e90:	6011      	str	r1, [r2, #0]
 8011e92:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 8011e96:	801a      	strh	r2, [r3, #0]
 8011e98:	887b      	ldrh	r3, [r7, #2]
 8011e9a:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8011e9e:	3301      	adds	r3, #1
 8011ea0:	f003 0301 	and.w	r3, r3, #1
 8011ea4:	807b      	strh	r3, [r7, #2]
 8011ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ea8:	2000      	movs	r0, #0
 8011eaa:	e7fc      	b.n	8011ea6 <udp_recv2+0x42>
 8011eac:	200092c8 	andcs	r9, r0, r8, asr #5

08011eb0 <udp_send>:
 8011eb0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011eb4:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8012008 <udp_send+0x158>
 8011eb8:	461c      	mov	r4, r3
 8011eba:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8011ebe:	4607      	mov	r7, r0
 8011ec0:	4688      	mov	r8, r1
 8011ec2:	4616      	mov	r6, r2
 8011ec4:	2b00      	cmp	r3, #0
 8011ec6:	f000 808b 	beq.w	8011fe0 <udp_send+0x130>
 8011eca:	1c63      	adds	r3, r4, #1
 8011ecc:	d141      	bne.n	8011f52 <udp_send+0xa2>
 8011ece:	4a46      	ldr	r2, [pc, #280]	; (8011fe8 <udp_send+0x138>)
 8011ed0:	2307      	movs	r3, #7
 8011ed2:	4611      	mov	r1, r2
 8011ed4:	20ff      	movs	r0, #255	; 0xff
 8011ed6:	e001      	b.n	8011edc <udp_send+0x2c>
 8011ed8:	f802 0b01 	strb.w	r0, [r2], #1
 8011edc:	3b01      	subs	r3, #1
 8011ede:	d1fb      	bne.n	8011ed8 <udp_send+0x28>
 8011ee0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011ee4:	83cb      	strh	r3, [r1, #30]
 8011ee6:	840b      	strh	r3, [r1, #32]
 8011ee8:	f8df a120 	ldr.w	sl, [pc, #288]	; 801200c <udp_send+0x15c>
 8011eec:	4c3e      	ldr	r4, [pc, #248]	; (8011fe8 <udp_send+0x138>)
 8011eee:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ef2:	8263      	strh	r3, [r4, #18]
 8011ef4:	f106 031c 	add.w	r3, r6, #28
 8011ef8:	ba5b      	rev16	r3, r3
 8011efa:	2500      	movs	r5, #0
 8011efc:	2114      	movs	r1, #20
 8011efe:	f104 000e 	add.w	r0, r4, #14
 8011f02:	8223      	strh	r3, [r4, #16]
 8011f04:	8325      	strh	r5, [r4, #24]
 8011f06:	f001 fd26 	bl	8013956 <net_chksum>
 8011f0a:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8011f0e:	8320      	strh	r0, [r4, #24]
 8011f10:	ba5b      	rev16	r3, r3
 8011f12:	8463      	strh	r3, [r4, #34]	; 0x22
 8011f14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8011f18:	ba5b      	rev16	r3, r3
 8011f1a:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8011f1e:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011f20:	f106 0308 	add.w	r3, r6, #8
 8011f24:	ba5b      	rev16	r3, r3
 8011f26:	4632      	mov	r2, r6
 8011f28:	4641      	mov	r1, r8
 8011f2a:	bf28      	it	cs
 8011f2c:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8011f30:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8011f34:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011f36:	f7ff fee7 	bl	8011d08 <net_memcpy>
 8011f3a:	4620      	mov	r0, r4
 8011f3c:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8011f40:	f005 fb3a 	bl	80175b8 <emac_eth_send>
 8011f44:	f8ba 3000 	ldrh.w	r3, [sl]
 8011f48:	3301      	adds	r3, #1
 8011f4a:	f8aa 3000 	strh.w	r3, [sl]
 8011f4e:	4628      	mov	r0, r5
 8011f50:	e037      	b.n	8011fc2 <udp_send+0x112>
 8011f52:	4b26      	ldr	r3, [pc, #152]	; (8011fec <udp_send+0x13c>)
 8011f54:	681b      	ldr	r3, [r3, #0]
 8011f56:	43a3      	bics	r3, r4
 8011f58:	d10f      	bne.n	8011f7a <udp_send+0xca>
 8011f5a:	4a23      	ldr	r2, [pc, #140]	; (8011fe8 <udp_send+0x138>)
 8011f5c:	2307      	movs	r3, #7
 8011f5e:	21ff      	movs	r1, #255	; 0xff
 8011f60:	e001      	b.n	8011f66 <udp_send+0xb6>
 8011f62:	f802 1b01 	strb.w	r1, [r2], #1
 8011f66:	3b01      	subs	r3, #1
 8011f68:	d1fb      	bne.n	8011f62 <udp_send+0xb2>
 8011f6a:	2204      	movs	r2, #4
 8011f6c:	4820      	ldr	r0, [pc, #128]	; (8011ff0 <udp_send+0x140>)
 8011f6e:	9401      	str	r4, [sp, #4]
 8011f70:	eb0d 0102 	add.w	r1, sp, r2
 8011f74:	f7ff febe 	bl	8011cf4 <memcpy.isra.0>
 8011f78:	e7b6      	b.n	8011ee8 <udp_send+0x38>
 8011f7a:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8011f7e:	2be0      	cmp	r3, #224	; 0xe0
 8011f80:	d10e      	bne.n	8011fa0 <udp_send+0xf0>
 8011f82:	491c      	ldr	r1, [pc, #112]	; (8011ff4 <udp_send+0x144>)
 8011f84:	4818      	ldr	r0, [pc, #96]	; (8011fe8 <udp_send+0x138>)
 8011f86:	f3c4 2206 	ubfx	r2, r4, #8, #7
 8011f8a:	70ca      	strb	r2, [r1, #3]
 8011f8c:	f3c4 4207 	ubfx	r2, r4, #16, #8
 8011f90:	710a      	strb	r2, [r1, #4]
 8011f92:	f3c4 6207 	ubfx	r2, r4, #24, #8
 8011f96:	714a      	strb	r2, [r1, #5]
 8011f98:	2206      	movs	r2, #6
 8011f9a:	f7ff feab 	bl	8011cf4 <memcpy.isra.0>
 8011f9e:	e7e4      	b.n	8011f6a <udp_send+0xba>
 8011fa0:	4b15      	ldr	r3, [pc, #84]	; (8011ff8 <udp_send+0x148>)
 8011fa2:	681b      	ldr	r3, [r3, #0]
 8011fa4:	43a3      	bics	r3, r4
 8011fa6:	d00f      	beq.n	8011fc8 <udp_send+0x118>
 8011fa8:	4d14      	ldr	r5, [pc, #80]	; (8011ffc <udp_send+0x14c>)
 8011faa:	490f      	ldr	r1, [pc, #60]	; (8011fe8 <udp_send+0x138>)
 8011fac:	6828      	ldr	r0, [r5, #0]
 8011fae:	f001 f9a3 	bl	80132f8 <arp_cache_lookup>
 8011fb2:	682b      	ldr	r3, [r5, #0]
 8011fb4:	4298      	cmp	r0, r3
 8011fb6:	d0d8      	beq.n	8011f6a <udp_send+0xba>
 8011fb8:	4811      	ldr	r0, [pc, #68]	; (8012000 <udp_send+0x150>)
 8011fba:	f003 fb63 	bl	8015684 <console_error>
 8011fbe:	f06f 0002 	mvn.w	r0, #2
 8011fc2:	b002      	add	sp, #8
 8011fc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011fc8:	4907      	ldr	r1, [pc, #28]	; (8011fe8 <udp_send+0x138>)
 8011fca:	4620      	mov	r0, r4
 8011fcc:	f001 f994 	bl	80132f8 <arp_cache_lookup>
 8011fd0:	42a0      	cmp	r0, r4
 8011fd2:	d0ca      	beq.n	8011f6a <udp_send+0xba>
 8011fd4:	480b      	ldr	r0, [pc, #44]	; (8012004 <udp_send+0x154>)
 8011fd6:	f003 fb55 	bl	8015684 <console_error>
 8011fda:	f06f 0001 	mvn.w	r0, #1
 8011fde:	e7f0      	b.n	8011fc2 <udp_send+0x112>
 8011fe0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011fe4:	e7ed      	b.n	8011fc2 <udp_send+0x112>
 8011fe6:	bf00      	nop
 8011fe8:	2000ef68 	andcs	lr, r0, r8, ror #30
 8011fec:	20009298 	mulcs	r0, r8, r2
 8011ff0:	2000ef86 	andcs	lr, r0, r6, lsl #31
 8011ff4:	20000014 	andcs	r0, r0, r4, lsl r0
 8011ff8:	200092a0 	andcs	r9, r0, r0, lsr #5
 8011ffc:	2000929c 	mulcs	r0, ip, r2
 8012000:	0801afb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 8012004:	0801afdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, pc}
 8012008:	200092a8 	andcs	r9, r0, r8, lsr #5
 801200c:	200092a4 	andcs	r9, r0, r4, lsr #5

08012010 <strlen>:
 8012010:	4603      	mov	r3, r0
 8012012:	461a      	mov	r2, r3
 8012014:	3301      	adds	r3, #1
 8012016:	7811      	ldrb	r1, [r2, #0]
 8012018:	2900      	cmp	r1, #0
 801201a:	d1fa      	bne.n	8012012 <strlen+0x2>
 801201c:	1a10      	subs	r0, r2, r0
 801201e:	4770      	bx	lr

08012020 <strcmp>:
 8012020:	1e43      	subs	r3, r0, #1
 8012022:	3901      	subs	r1, #1
 8012024:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012028:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 801202c:	4290      	cmp	r0, r2
 801202e:	d001      	beq.n	8012034 <strcmp+0x14>
 8012030:	1a80      	subs	r0, r0, r2
 8012032:	e001      	b.n	8012038 <strcmp+0x18>
 8012034:	2800      	cmp	r0, #0
 8012036:	d1f5      	bne.n	8012024 <strcmp+0x4>
 8012038:	4770      	bx	lr

0801203a <strcpy.isra.0>:
 801203a:	3801      	subs	r0, #1
 801203c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012040:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012044:	2b00      	cmp	r3, #0
 8012046:	d1f9      	bne.n	801203c <strcpy.isra.0+0x2>
 8012048:	4770      	bx	lr

0801204a <strcat.isra.0>:
 801204a:	b513      	push	{r0, r1, r4, lr}
 801204c:	4604      	mov	r4, r0
 801204e:	9101      	str	r1, [sp, #4]
 8012050:	f7ff ffde 	bl	8012010 <strlen>
 8012054:	9901      	ldr	r1, [sp, #4]
 8012056:	4420      	add	r0, r4
 8012058:	b002      	add	sp, #8
 801205a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801205e:	f7ff bfec 	b.w	801203a <strcpy.isra.0>
	...

08012064 <MDNS::MDNS()>:
 8012064:	b513      	push	{r0, r1, r4, lr}
 8012066:	4604      	mov	r4, r0
 8012068:	a901      	add	r1, sp, #4
 801206a:	4804      	ldr	r0, [pc, #16]	; (801207c <MDNS::MDNS()+0x18>)
 801206c:	f003 fdc6 	bl	8015bfc <inet_aton>
 8012070:	4b03      	ldr	r3, [pc, #12]	; (8012080 <MDNS::MDNS()+0x1c>)
 8012072:	9a01      	ldr	r2, [sp, #4]
 8012074:	601a      	str	r2, [r3, #0]
 8012076:	4620      	mov	r0, r4
 8012078:	b002      	add	sp, #8
 801207a:	bd10      	pop	{r4, pc}
 801207c:	0801b00e 	stmdaeq	r1, {r1, r2, r3, ip, sp, pc}
 8012080:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>

08012084 <MDNS::SetName(char const*)>:
 8012084:	b538      	push	{r3, r4, r5, lr}
 8012086:	4d0b      	ldr	r5, [pc, #44]	; (80120b4 <MDNS::SetName(char const*)+0x30>)
 8012088:	6828      	ldr	r0, [r5, #0]
 801208a:	460c      	mov	r4, r1
 801208c:	b108      	cbz	r0, 8012092 <MDNS::SetName(char const*)+0xe>
 801208e:	f003 fdaf 	bl	8015bf0 <operator delete[](void*)>
 8012092:	4620      	mov	r0, r4
 8012094:	f7ff ffbc 	bl	8012010 <strlen>
 8012098:	3007      	adds	r0, #7
 801209a:	f003 fdad 	bl	8015bf8 <operator new[](unsigned int)>
 801209e:	4621      	mov	r1, r4
 80120a0:	6028      	str	r0, [r5, #0]
 80120a2:	f7ff ffca 	bl	801203a <strcpy.isra.0>
 80120a6:	6828      	ldr	r0, [r5, #0]
 80120a8:	4903      	ldr	r1, [pc, #12]	; (80120b8 <MDNS::SetName(char const*)+0x34>)
 80120aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80120ae:	f7ff bfcc 	b.w	801204a <strcat.isra.0>
 80120b2:	bf00      	nop
 80120b4:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80120b8:	0801b01e 	stmdaeq	r1, {r1, r2, r3, r4, ip, sp, pc}

080120bc <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 80120bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80120c0:	f04f 0e00 	mov.w	lr, #0
 80120c4:	4e1c      	ldr	r6, [pc, #112]	; (8012138 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 80120c6:	4f1d      	ldr	r7, [pc, #116]	; (801213c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 80120c8:	4675      	mov	r5, lr
 80120ca:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 80120ce:	780b      	ldrb	r3, [r1, #0]
 80120d0:	1c68      	adds	r0, r5, #1
 80120d2:	b913      	cbnz	r3, 80120da <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 80120d4:	7013      	strb	r3, [r2, #0]
 80120d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120da:	2b3f      	cmp	r3, #63	; 0x3f
 80120dc:	d91c      	bls.n	8012118 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 80120de:	7849      	ldrb	r1, [r1, #1]
 80120e0:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 80120e4:	430b      	orrs	r3, r1
 80120e6:	6839      	ldr	r1, [r7, #0]
 80120e8:	5ccc      	ldrb	r4, [r1, r3]
 80120ea:	3301      	adds	r3, #1
 80120ec:	4419      	add	r1, r3
 80120ee:	f1be 0f00 	cmp.w	lr, #0
 80120f2:	bf08      	it	eq
 80120f4:	4605      	moveq	r5, r0
 80120f6:	2300      	movs	r3, #0
 80120f8:	42a3      	cmp	r3, r4
 80120fa:	5cc8      	ldrb	r0, [r1, r3]
 80120fc:	d309      	bcc.n	8012112 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 80120fe:	4421      	add	r1, r4
 8012100:	f04f 0e01 	mov.w	lr, #1
 8012104:	4414      	add	r4, r2
 8012106:	780b      	ldrb	r3, [r1, #0]
 8012108:	b10b      	cbz	r3, 801210e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 801210a:	f804 cb01 	strb.w	ip, [r4], #1
 801210e:	4622      	mov	r2, r4
 8012110:	e7dd      	b.n	80120ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8012112:	54d0      	strb	r0, [r2, r3]
 8012114:	3301      	adds	r3, #1
 8012116:	e7ef      	b.n	80120f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8012118:	4688      	mov	r8, r1
 801211a:	18d4      	adds	r4, r2, r3
 801211c:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8012120:	f802 9b01 	strb.w	r9, [r2], #1
 8012124:	4294      	cmp	r4, r2
 8012126:	d1f9      	bne.n	801211c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8012128:	1c5a      	adds	r2, r3, #1
 801212a:	4411      	add	r1, r2
 801212c:	f1be 0f00 	cmp.w	lr, #0
 8012130:	d1e9      	bne.n	8012106 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8012132:	181d      	adds	r5, r3, r0
 8012134:	e7e7      	b.n	8012106 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8012136:	bf00      	nop
 8012138:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 801213c:	2000f990 	mulcs	r0, r0, r9

08012140 <MDNS::FindFirstDotFromRight(char const*) const>:
 8012140:	b510      	push	{r4, lr}
 8012142:	4608      	mov	r0, r1
 8012144:	460c      	mov	r4, r1
 8012146:	f7ff ff63 	bl	8012010 <strlen>
 801214a:	4420      	add	r0, r4
 801214c:	42a0      	cmp	r0, r4
 801214e:	d903      	bls.n	8012158 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8012150:	f810 3901 	ldrb.w	r3, [r0], #-1
 8012154:	2b2e      	cmp	r3, #46	; 0x2e
 8012156:	d1f9      	bne.n	801214c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8012158:	3001      	adds	r0, #1
 801215a:	bd10      	pop	{r4, pc}

0801215c <MDNS::WriteDnsName(char const*, char*, bool)>:
 801215c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801215e:	4610      	mov	r0, r2
 8012160:	1c44      	adds	r4, r0, #1
 8012162:	460f      	mov	r7, r1
 8012164:	463d      	mov	r5, r7
 8012166:	f817 6b01 	ldrb.w	r6, [r7], #1
 801216a:	b946      	cbnz	r6, 801217e <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 801216c:	1a69      	subs	r1, r5, r1
 801216e:	7001      	strb	r1, [r0, #0]
 8012170:	7829      	ldrb	r1, [r5, #0]
 8012172:	b949      	cbnz	r1, 8012188 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8012174:	b10b      	cbz	r3, 801217a <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8012176:	f804 1b01 	strb.w	r1, [r4], #1
 801217a:	1aa0      	subs	r0, r4, r2
 801217c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801217e:	2e2e      	cmp	r6, #46	; 0x2e
 8012180:	d0f4      	beq.n	801216c <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8012182:	f804 6b01 	strb.w	r6, [r4], #1
 8012186:	e7ed      	b.n	8012164 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8012188:	1c69      	adds	r1, r5, #1
 801218a:	4620      	mov	r0, r4
 801218c:	e7e8      	b.n	8012160 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08012190 <MDNS::CreateAnswerLocalIpAddress()>:
 8012190:	b510      	push	{r4, lr}
 8012192:	4c10      	ldr	r4, [pc, #64]	; (80121d4 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8012194:	4910      	ldr	r1, [pc, #64]	; (80121d8 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8012196:	2384      	movs	r3, #132	; 0x84
 8012198:	80e3      	strh	r3, [r4, #6]
 801219a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801219e:	2300      	movs	r3, #0
 80121a0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80121a4:	6809      	ldr	r1, [r1, #0]
 80121a6:	f104 0210 	add.w	r2, r4, #16
 80121aa:	2301      	movs	r3, #1
 80121ac:	f7ff ffd6 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 80121b0:	490a      	ldr	r1, [pc, #40]	; (80121dc <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 80121b2:	5011      	str	r1, [r2, r0]
 80121b4:	1813      	adds	r3, r2, r0
 80121b6:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 80121ba:	605a      	str	r2, [r3, #4]
 80121bc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80121c0:	811a      	strh	r2, [r3, #8]
 80121c2:	4a07      	ldr	r2, [pc, #28]	; (80121e0 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 80121c4:	6812      	ldr	r2, [r2, #0]
 80121c6:	6952      	ldr	r2, [r2, #20]
 80121c8:	f8c3 200a 	str.w	r2, [r3, #10]
 80121cc:	1b1b      	subs	r3, r3, r4
 80121ce:	330a      	adds	r3, #10
 80121d0:	6023      	str	r3, [r4, #0]
 80121d2:	bd10      	pop	{r4, pc}
 80121d4:	2000f560 	andcs	pc, r0, r0, ror #10
 80121d8:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80121dc:	01800100 	orreq	r0, r0, r0, lsl #2
 80121e0:	2000f994 	mulcs	r0, r4, r9

080121e4 <MDNS::Start()>:
 80121e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80121e6:	4c1d      	ldr	r4, [pc, #116]	; (801225c <MDNS::Start()+0x78>)
 80121e8:	4e1d      	ldr	r6, [pc, #116]	; (8012260 <MDNS::Start()+0x7c>)
 80121ea:	4f1e      	ldr	r7, [pc, #120]	; (8012264 <MDNS::Start()+0x80>)
 80121ec:	f241 41e9 	movw	r1, #5353	; 0x14e9
 80121f0:	4605      	mov	r5, r0
 80121f2:	6820      	ldr	r0, [r4, #0]
 80121f4:	f000 fb29 	bl	801284a <Network::Begin(unsigned short)>
 80121f8:	683a      	ldr	r2, [r7, #0]
 80121fa:	6030      	str	r0, [r6, #0]
 80121fc:	4601      	mov	r1, r0
 80121fe:	6820      	ldr	r0, [r4, #0]
 8012200:	f000 fb34 	bl	801286c <Network::JoinGroup(int, unsigned int)>
 8012204:	4b18      	ldr	r3, [pc, #96]	; (8012268 <MDNS::Start()+0x84>)
 8012206:	681b      	ldr	r3, [r3, #0]
 8012208:	b923      	cbnz	r3, 8012214 <MDNS::Start()+0x30>
 801220a:	6821      	ldr	r1, [r4, #0]
 801220c:	4628      	mov	r0, r5
 801220e:	3120      	adds	r1, #32
 8012210:	f7ff ff38 	bl	8012084 <MDNS::SetName(char const*)>
 8012214:	4628      	mov	r0, r5
 8012216:	f7ff ffbb 	bl	8012190 <MDNS::CreateAnswerLocalIpAddress()>
 801221a:	4914      	ldr	r1, [pc, #80]	; (801226c <MDNS::Start()+0x88>)
 801221c:	7830      	ldrb	r0, [r6, #0]
 801221e:	f831 2b04 	ldrh.w	r2, [r1], #4
 8012222:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012226:	9300      	str	r3, [sp, #0]
 8012228:	683b      	ldr	r3, [r7, #0]
 801222a:	f7ff fe41 	bl	8011eb0 <udp_send>
 801222e:	6820      	ldr	r0, [r4, #0]
 8012230:	4c0f      	ldr	r4, [pc, #60]	; (8012270 <MDNS::Start()+0x8c>)
 8012232:	f100 0260 	add.w	r2, r0, #96	; 0x60
 8012236:	233f      	movs	r3, #63	; 0x3f
 8012238:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801223c:	b929      	cbnz	r1, 801224a <MDNS::Start()+0x66>
 801223e:	4413      	add	r3, r2
 8012240:	429a      	cmp	r2, r3
 8012242:	d006      	beq.n	8012252 <MDNS::Start()+0x6e>
 8012244:	f802 1b01 	strb.w	r1, [r2], #1
 8012248:	e7fa      	b.n	8012240 <MDNS::Start()+0x5c>
 801224a:	3b01      	subs	r3, #1
 801224c:	f802 1b01 	strb.w	r1, [r2], #1
 8012250:	d1f2      	bne.n	8012238 <MDNS::Start()+0x54>
 8012252:	2300      	movs	r3, #0
 8012254:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 8012258:	b003      	add	sp, #12
 801225a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801225c:	2000f994 	mulcs	r0, r4, r9
 8012260:	2000001c 	andcs	r0, r0, ip, lsl r0
 8012264:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>
 8012268:	2000f98c 	andcs	pc, r0, ip, lsl #19
 801226c:	2000f560 	andcs	pc, r0, r0, ror #10
 8012270:	0801b01e 	stmdaeq	r1, {r1, r2, r3, r4, ip, sp, pc}

08012274 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8012274:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012276:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 801227a:	4c1b      	ldr	r4, [pc, #108]	; (80122e8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 801227c:	2300      	movs	r3, #0
 801227e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8012282:	f854 100c 	ldr.w	r1, [r4, ip]
 8012286:	4607      	mov	r7, r0
 8012288:	f7ff ff68 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 801228c:	4616      	mov	r6, r2
 801228e:	7bac      	ldrb	r4, [r5, #14]
 8012290:	4916      	ldr	r1, [pc, #88]	; (80122ec <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8012292:	4402      	add	r2, r0
 8012294:	4816      	ldr	r0, [pc, #88]	; (80122f0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8012296:	2301      	movs	r3, #1
 8012298:	429c      	cmp	r4, r3
 801229a:	bf18      	it	ne
 801229c:	4601      	movne	r1, r0
 801229e:	4638      	mov	r0, r7
 80122a0:	f7ff ff5c 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 80122a4:	4b13      	ldr	r3, [pc, #76]	; (80122f4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 80122a6:	5013      	str	r3, [r2, r0]
 80122a8:	1814      	adds	r4, r2, r0
 80122aa:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80122ae:	6063      	str	r3, [r4, #4]
 80122b0:	4b11      	ldr	r3, [pc, #68]	; (80122f8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 80122b2:	6819      	ldr	r1, [r3, #0]
 80122b4:	9101      	str	r1, [sp, #4]
 80122b6:	4608      	mov	r0, r1
 80122b8:	f7ff feaa 	bl	8012010 <strlen>
 80122bc:	f100 0308 	add.w	r3, r0, #8
 80122c0:	ba5b      	rev16	r3, r3
 80122c2:	8123      	strh	r3, [r4, #8]
 80122c4:	2300      	movs	r3, #0
 80122c6:	f8c4 300a 	str.w	r3, [r4, #10]
 80122ca:	89ab      	ldrh	r3, [r5, #12]
 80122cc:	9901      	ldr	r1, [sp, #4]
 80122ce:	ba5b      	rev16	r3, r3
 80122d0:	81e3      	strh	r3, [r4, #14]
 80122d2:	f104 0210 	add.w	r2, r4, #16
 80122d6:	2301      	movs	r3, #1
 80122d8:	4638      	mov	r0, r7
 80122da:	f7ff ff3f 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 80122de:	4410      	add	r0, r2
 80122e0:	1b80      	subs	r0, r0, r6
 80122e2:	b003      	add	sp, #12
 80122e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122e6:	bf00      	nop
 80122e8:	2000f764 	andcs	pc, r0, r4, ror #14
 80122ec:	0801b01a 	stmdaeq	r1, {r1, r3, r4, ip, sp, pc}
 80122f0:	0801b037 	stmdaeq	r1, {r0, r1, r2, r4, r5, ip, sp, pc}
 80122f4:	01802100 	orreq	r2, r0, r0, lsl #2
 80122f8:	2000f98c 	andcs	pc, r0, ip, lsl #19

080122fc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 80122fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012300:	4e19      	ldr	r6, [pc, #100]	; (8012368 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8012302:	010f      	lsls	r7, r1, #4
 8012304:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8012308:	2300      	movs	r3, #0
 801230a:	59f1      	ldr	r1, [r6, r7]
 801230c:	4604      	mov	r4, r0
 801230e:	f7ff ff25 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 8012312:	4690      	mov	r8, r2
 8012314:	7bae      	ldrb	r6, [r5, #14]
 8012316:	4915      	ldr	r1, [pc, #84]	; (801236c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8012318:	4402      	add	r2, r0
 801231a:	4815      	ldr	r0, [pc, #84]	; (8012370 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 801231c:	2301      	movs	r3, #1
 801231e:	429e      	cmp	r6, r3
 8012320:	bf18      	it	ne
 8012322:	4601      	movne	r1, r0
 8012324:	4620      	mov	r0, r4
 8012326:	f7ff ff19 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 801232a:	4b12      	ldr	r3, [pc, #72]	; (8012374 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 801232c:	5013      	str	r3, [r2, r0]
 801232e:	1816      	adds	r6, r2, r0
 8012330:	68a8      	ldr	r0, [r5, #8]
 8012332:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8012336:	6073      	str	r3, [r6, #4]
 8012338:	f106 040b 	add.w	r4, r6, #11
 801233c:	b938      	cbnz	r0, 801234e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 801233e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012342:	8133      	strh	r3, [r6, #8]
 8012344:	72b0      	strb	r0, [r6, #10]
 8012346:	eba4 0008 	sub.w	r0, r4, r8
 801234a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801234e:	f7ff fe5f 	bl	8012010 <strlen>
 8012352:	1c43      	adds	r3, r0, #1
 8012354:	72b0      	strb	r0, [r6, #10]
 8012356:	ba5b      	rev16	r3, r3
 8012358:	4607      	mov	r7, r0
 801235a:	68a9      	ldr	r1, [r5, #8]
 801235c:	8133      	strh	r3, [r6, #8]
 801235e:	4620      	mov	r0, r4
 8012360:	f7ff fe6b 	bl	801203a <strcpy.isra.0>
 8012364:	443c      	add	r4, r7
 8012366:	e7ee      	b.n	8012346 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8012368:	2000f764 	andcs	pc, r0, r4, ror #14
 801236c:	0801b01a 	stmdaeq	r1, {r1, r3, r4, ip, sp, pc}
 8012370:	0801b037 	stmdaeq	r1, {r0, r1, r2, r4, r5, ip, sp, pc}
 8012374:	01801000 	orreq	r1, r0, r0

08012378 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8012378:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801237c:	f8df 8070 	ldr.w	r8, [pc, #112]	; 80123f0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x78>
 8012380:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8012384:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8012388:	2301      	movs	r3, #1
 801238a:	6869      	ldr	r1, [r5, #4]
 801238c:	4607      	mov	r7, r0
 801238e:	f7ff fee5 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 8012392:	f858 1009 	ldr.w	r1, [r8, r9]
 8012396:	4b13      	ldr	r3, [pc, #76]	; (80123e4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8012398:	5013      	str	r3, [r2, r0]
 801239a:	1816      	adds	r6, r2, r0
 801239c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80123a0:	6073      	str	r3, [r6, #4]
 80123a2:	4608      	mov	r0, r1
 80123a4:	4614      	mov	r4, r2
 80123a6:	9101      	str	r1, [sp, #4]
 80123a8:	f7ff fe32 	bl	8012010 <strlen>
 80123ac:	f100 030d 	add.w	r3, r0, #13
 80123b0:	ba5b      	rev16	r3, r3
 80123b2:	9901      	ldr	r1, [sp, #4]
 80123b4:	8133      	strh	r3, [r6, #8]
 80123b6:	f106 020a 	add.w	r2, r6, #10
 80123ba:	2300      	movs	r3, #0
 80123bc:	4638      	mov	r0, r7
 80123be:	f7ff fecd 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 80123c2:	7bad      	ldrb	r5, [r5, #14]
 80123c4:	4908      	ldr	r1, [pc, #32]	; (80123e8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 80123c6:	4402      	add	r2, r0
 80123c8:	4808      	ldr	r0, [pc, #32]	; (80123ec <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 80123ca:	2301      	movs	r3, #1
 80123cc:	429d      	cmp	r5, r3
 80123ce:	bf18      	it	ne
 80123d0:	4601      	movne	r1, r0
 80123d2:	4638      	mov	r0, r7
 80123d4:	f7ff fec2 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 80123d8:	4410      	add	r0, r2
 80123da:	1b00      	subs	r0, r0, r4
 80123dc:	b003      	add	sp, #12
 80123de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80123e2:	bf00      	nop
 80123e4:	01000c00 	tsteq	r0, r0, lsl #24
 80123e8:	0801b01a 	stmdaeq	r1, {r1, r3, r4, ip, sp, pc}
 80123ec:	0801b037 	stmdaeq	r1, {r0, r1, r2, r4, r5, ip, sp, pc}
 80123f0:	2000f764 	andcs	pc, r0, r4, ror #14

080123f4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 80123f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80123f6:	2301      	movs	r3, #1
 80123f8:	460f      	mov	r7, r1
 80123fa:	4910      	ldr	r1, [pc, #64]	; (801243c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 80123fc:	4606      	mov	r6, r0
 80123fe:	f7ff fead 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 8012402:	490f      	ldr	r1, [pc, #60]	; (8012440 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8012404:	4b0f      	ldr	r3, [pc, #60]	; (8012444 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x50>)
 8012406:	5013      	str	r3, [r2, r0]
 8012408:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 801240c:	1815      	adds	r5, r2, r0
 801240e:	6849      	ldr	r1, [r1, #4]
 8012410:	9101      	str	r1, [sp, #4]
 8012412:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8012416:	606b      	str	r3, [r5, #4]
 8012418:	4608      	mov	r0, r1
 801241a:	4614      	mov	r4, r2
 801241c:	f7ff fdf8 	bl	8012010 <strlen>
 8012420:	1c83      	adds	r3, r0, #2
 8012422:	ba5b      	rev16	r3, r3
 8012424:	812b      	strh	r3, [r5, #8]
 8012426:	f105 020a 	add.w	r2, r5, #10
 801242a:	9901      	ldr	r1, [sp, #4]
 801242c:	2301      	movs	r3, #1
 801242e:	4630      	mov	r0, r6
 8012430:	f7ff fe94 	bl	801215c <MDNS::WriteDnsName(char const*, char*, bool)>
 8012434:	4410      	add	r0, r2
 8012436:	1b00      	subs	r0, r0, r4
 8012438:	b003      	add	sp, #12
 801243a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801243c:	0801b025 	stmdaeq	r1, {r0, r2, r5, ip, sp, pc}
 8012440:	2000f764 	andcs	pc, r0, r4, ror #14
 8012444:	01000c00 	tsteq	r0, r0, lsl #24

08012448 <MDNS::CreateMDNSMessage(unsigned int)>:
 8012448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801244a:	4d1a      	ldr	r5, [pc, #104]	; (80124b4 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 801244c:	2384      	movs	r3, #132	; 0x84
 801244e:	80eb      	strh	r3, [r5, #6]
 8012450:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8012454:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012458:	f105 0410 	add.w	r4, r5, #16
 801245c:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8012460:	4622      	mov	r2, r4
 8012462:	4606      	mov	r6, r0
 8012464:	460f      	mov	r7, r1
 8012466:	f7ff ff05 	bl	8012274 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 801246a:	4404      	add	r4, r0
 801246c:	4622      	mov	r2, r4
 801246e:	4639      	mov	r1, r7
 8012470:	4630      	mov	r0, r6
 8012472:	f7ff ff43 	bl	80122fc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8012476:	4404      	add	r4, r0
 8012478:	4622      	mov	r2, r4
 801247a:	4639      	mov	r1, r7
 801247c:	4630      	mov	r0, r6
 801247e:	f7ff ffb9 	bl	80123f4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 8012482:	4404      	add	r4, r0
 8012484:	4622      	mov	r2, r4
 8012486:	4639      	mov	r1, r7
 8012488:	4630      	mov	r0, r6
 801248a:	f7ff ff75 	bl	8012378 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 801248e:	4a0a      	ldr	r2, [pc, #40]	; (80124b8 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8012490:	f852 3b10 	ldr.w	r3, [r2], #16
 8012494:	4420      	add	r0, r4
 8012496:	3b0c      	subs	r3, #12
 8012498:	1e44      	subs	r4, r0, #1
 801249a:	4619      	mov	r1, r3
 801249c:	3901      	subs	r1, #1
 801249e:	d204      	bcs.n	80124aa <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 80124a0:	18c4      	adds	r4, r0, r3
 80124a2:	4b06      	ldr	r3, [pc, #24]	; (80124bc <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 80124a4:	1ae4      	subs	r4, r4, r3
 80124a6:	602c      	str	r4, [r5, #0]
 80124a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80124aa:	f812 6b01 	ldrb.w	r6, [r2], #1
 80124ae:	f804 6f01 	strb.w	r6, [r4, #1]!
 80124b2:	e7f3      	b.n	801249c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 80124b4:	2000f788 	andcs	pc, r0, r8, lsl #15
 80124b8:	2000f560 	andcs	pc, r0, r0, ror #10
 80124bc:	2000f78c 	andcs	pc, r0, ip, lsl #15

080124c0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 80124c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124c4:	4d41      	ldr	r5, [pc, #260]	; (80125cc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 80124c6:	b085      	sub	sp, #20
 80124c8:	682c      	ldr	r4, [r5, #0]
 80124ca:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
 80124ce:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 80124d2:	4607      	mov	r7, r0
 80124d4:	4616      	mov	r6, r2
 80124d6:	b11c      	cbz	r4, 80124e0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x20>
 80124d8:	692a      	ldr	r2, [r5, #16]
 80124da:	2a00      	cmp	r2, #0
 80124dc:	d172      	bne.n	80125c4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>
 80124de:	2401      	movs	r4, #1
 80124e0:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 80124e4:	ea4f 1804 	mov.w	r8, r4, lsl #4
 80124e8:	8193      	strh	r3, [r2, #12]
 80124ea:	f882 a00e 	strb.w	sl, [r2, #14]
 80124ee:	2900      	cmp	r1, #0
 80124f0:	d158      	bne.n	80125a4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe4>
 80124f2:	4b37      	ldr	r3, [pc, #220]	; (80125d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 80124f4:	6818      	ldr	r0, [r3, #0]
 80124f6:	3020      	adds	r0, #32
 80124f8:	f7ff fd8a 	bl	8012010 <strlen>
 80124fc:	4683      	mov	fp, r0
 80124fe:	4630      	mov	r0, r6
 8012500:	f7ff fd86 	bl	8012010 <strlen>
 8012504:	4458      	add	r0, fp
 8012506:	3001      	adds	r0, #1
 8012508:	f003 fb76 	bl	8015bf8 <operator new[](unsigned int)>
 801250c:	4b30      	ldr	r3, [pc, #192]	; (80125d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 801250e:	f845 0008 	str.w	r0, [r5, r8]
 8012512:	6819      	ldr	r1, [r3, #0]
 8012514:	3120      	adds	r1, #32
 8012516:	f7ff fd90 	bl	801203a <strcpy.isra.0>
 801251a:	f855 0008 	ldr.w	r0, [r5, r8]
 801251e:	4631      	mov	r1, r6
 8012520:	f7ff fd93 	bl	801204a <strcat.isra.0>
 8012524:	4631      	mov	r1, r6
 8012526:	4638      	mov	r0, r7
 8012528:	f7ff fe0a 	bl	8012140 <MDNS::FindFirstDotFromRight(char const*) const>
 801252c:	9003      	str	r0, [sp, #12]
 801252e:	f7ff fd6f 	bl	8012010 <strlen>
 8012532:	300d      	adds	r0, #13
 8012534:	f003 fb60 	bl	8015bf8 <operator new[](unsigned int)>
 8012538:	eb05 0b08 	add.w	fp, r5, r8
 801253c:	9903      	ldr	r1, [sp, #12]
 801253e:	f8cb 0004 	str.w	r0, [fp, #4]
 8012542:	f7ff fd7a 	bl	801203a <strcpy.isra.0>
 8012546:	4923      	ldr	r1, [pc, #140]	; (80125d4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8012548:	f8db 0004 	ldr.w	r0, [fp, #4]
 801254c:	f7ff fd7d 	bl	801204a <strcat.isra.0>
 8012550:	4921      	ldr	r1, [pc, #132]	; (80125d8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 8012552:	4b22      	ldr	r3, [pc, #136]	; (80125dc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8012554:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012558:	f1ba 0f01 	cmp.w	sl, #1
 801255c:	bf18      	it	ne
 801255e:	4619      	movne	r1, r3
 8012560:	f7ff fd73 	bl	801204a <strcat.isra.0>
 8012564:	f1b9 0f00 	cmp.w	r9, #0
 8012568:	d00a      	beq.n	8012580 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xc0>
 801256a:	4648      	mov	r0, r9
 801256c:	f7ff fd50 	bl	8012010 <strlen>
 8012570:	3001      	adds	r0, #1
 8012572:	f003 fb41 	bl	8015bf8 <operator new[](unsigned int)>
 8012576:	4649      	mov	r1, r9
 8012578:	f8cb 0008 	str.w	r0, [fp, #8]
 801257c:	f7ff fd5d 	bl	801203a <strcpy.isra.0>
 8012580:	4621      	mov	r1, r4
 8012582:	4638      	mov	r0, r7
 8012584:	f7ff ff60 	bl	8012448 <MDNS::CreateMDNSMessage(unsigned int)>
 8012588:	4915      	ldr	r1, [pc, #84]	; (80125e0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 801258a:	4816      	ldr	r0, [pc, #88]	; (80125e4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 801258c:	f831 2b04 	ldrh.w	r2, [r1], #4
 8012590:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012594:	9300      	str	r3, [sp, #0]
 8012596:	4b14      	ldr	r3, [pc, #80]	; (80125e8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x128>)
 8012598:	7800      	ldrb	r0, [r0, #0]
 801259a:	681b      	ldr	r3, [r3, #0]
 801259c:	f7ff fc88 	bl	8011eb0 <udp_send>
 80125a0:	2001      	movs	r0, #1
 80125a2:	e010      	b.n	80125c6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x106>
 80125a4:	4608      	mov	r0, r1
 80125a6:	9103      	str	r1, [sp, #12]
 80125a8:	f7ff fd32 	bl	8012010 <strlen>
 80125ac:	4683      	mov	fp, r0
 80125ae:	4630      	mov	r0, r6
 80125b0:	f7ff fd2e 	bl	8012010 <strlen>
 80125b4:	4458      	add	r0, fp
 80125b6:	3001      	adds	r0, #1
 80125b8:	f003 fb1e 	bl	8015bf8 <operator new[](unsigned int)>
 80125bc:	9903      	ldr	r1, [sp, #12]
 80125be:	f845 0008 	str.w	r0, [r5, r8]
 80125c2:	e7a8      	b.n	8012516 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x56>
 80125c4:	2000      	movs	r0, #0
 80125c6:	b005      	add	sp, #20
 80125c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125cc:	2000f764 	andcs	pc, r0, r4, ror #14
 80125d0:	2000f994 	mulcs	r0, r4, r9
 80125d4:	08018cb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, fp, pc}
 80125d8:	0801b01a 	stmdaeq	r1, {r1, r3, r4, ip, sp, pc}
 80125dc:	0801b037 	stmdaeq	r1, {r0, r1, r2, r4, r5, ip, sp, pc}
 80125e0:	2000f788 	andcs	pc, r0, r8, lsl #15
 80125e4:	2000001c 	andcs	r0, r0, ip, lsl r0
 80125e8:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>

080125ec <MDNS::HandleRequest(unsigned short)>:
 80125ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125f0:	b0c5      	sub	sp, #276	; 0x114
 80125f2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80126d8 <MDNS::HandleRequest(unsigned short)+0xec>
 80125f6:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 80126dc <MDNS::HandleRequest(unsigned short)+0xf0>
 80125fa:	9103      	str	r1, [sp, #12]
 80125fc:	4605      	mov	r5, r0
 80125fe:	2700      	movs	r7, #0
 8012600:	f04f 080c 	mov.w	r8, #12
 8012604:	9b03      	ldr	r3, [sp, #12]
 8012606:	42bb      	cmp	r3, r7
 8012608:	d802      	bhi.n	8012610 <MDNS::HandleRequest(unsigned short)+0x24>
 801260a:	b045      	add	sp, #276	; 0x114
 801260c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012610:	f8da 1000 	ldr.w	r1, [sl]
 8012614:	aa04      	add	r2, sp, #16
 8012616:	4441      	add	r1, r8
 8012618:	4628      	mov	r0, r5
 801261a:	f7ff fd4f 	bl	80120bc <MDNS::DecodeDNSNameNotation(char const*, char*)>
 801261e:	f8da 2000 	ldr.w	r2, [sl]
 8012622:	4440      	add	r0, r8
 8012624:	1813      	adds	r3, r2, r0
 8012626:	f100 0804 	add.w	r8, r0, #4
 801262a:	885b      	ldrh	r3, [r3, #2]
 801262c:	ba5b      	rev16	r3, r3
 801262e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8012632:	2b01      	cmp	r3, #1
 8012634:	d13d      	bne.n	80126b2 <MDNS::HandleRequest(unsigned short)+0xc6>
 8012636:	5a14      	ldrh	r4, [r2, r0]
 8012638:	4b20      	ldr	r3, [pc, #128]	; (80126bc <MDNS::HandleRequest(unsigned short)+0xd0>)
 801263a:	ba64      	rev16	r4, r4
 801263c:	6818      	ldr	r0, [r3, #0]
 801263e:	a904      	add	r1, sp, #16
 8012640:	b2a4      	uxth	r4, r4
 8012642:	f7ff fced 	bl	8012020 <strcmp>
 8012646:	b968      	cbnz	r0, 8012664 <MDNS::HandleRequest(unsigned short)+0x78>
 8012648:	2c01      	cmp	r4, #1
 801264a:	d10b      	bne.n	8012664 <MDNS::HandleRequest(unsigned short)+0x78>
 801264c:	491c      	ldr	r1, [pc, #112]	; (80126c0 <MDNS::HandleRequest(unsigned short)+0xd4>)
 801264e:	481d      	ldr	r0, [pc, #116]	; (80126c4 <MDNS::HandleRequest(unsigned short)+0xd8>)
 8012650:	f831 2b04 	ldrh.w	r2, [r1], #4
 8012654:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012658:	9300      	str	r3, [sp, #0]
 801265a:	4b1b      	ldr	r3, [pc, #108]	; (80126c8 <MDNS::HandleRequest(unsigned short)+0xdc>)
 801265c:	7800      	ldrb	r0, [r0, #0]
 801265e:	681b      	ldr	r3, [r3, #0]
 8012660:	f7ff fc26 	bl	8011eb0 <udp_send>
 8012664:	4819      	ldr	r0, [pc, #100]	; (80126cc <MDNS::HandleRequest(unsigned short)+0xe0>)
 8012666:	4e1a      	ldr	r6, [pc, #104]	; (80126d0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8012668:	a904      	add	r1, sp, #16
 801266a:	f7ff fcd9 	bl	8012020 <strcmp>
 801266e:	f04f 0900 	mov.w	r9, #0
 8012672:	9002      	str	r0, [sp, #8]
 8012674:	6833      	ldr	r3, [r6, #0]
 8012676:	b1c3      	cbz	r3, 80126aa <MDNS::HandleRequest(unsigned short)+0xbe>
 8012678:	9b02      	ldr	r3, [sp, #8]
 801267a:	b123      	cbz	r3, 8012686 <MDNS::HandleRequest(unsigned short)+0x9a>
 801267c:	6870      	ldr	r0, [r6, #4]
 801267e:	a904      	add	r1, sp, #16
 8012680:	f7ff fcce 	bl	8012020 <strcmp>
 8012684:	b988      	cbnz	r0, 80126aa <MDNS::HandleRequest(unsigned short)+0xbe>
 8012686:	2c0c      	cmp	r4, #12
 8012688:	d10f      	bne.n	80126aa <MDNS::HandleRequest(unsigned short)+0xbe>
 801268a:	4649      	mov	r1, r9
 801268c:	4628      	mov	r0, r5
 801268e:	f7ff fedb 	bl	8012448 <MDNS::CreateMDNSMessage(unsigned int)>
 8012692:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012696:	9300      	str	r3, [sp, #0]
 8012698:	480a      	ldr	r0, [pc, #40]	; (80126c4 <MDNS::HandleRequest(unsigned short)+0xd8>)
 801269a:	4b0b      	ldr	r3, [pc, #44]	; (80126c8 <MDNS::HandleRequest(unsigned short)+0xdc>)
 801269c:	f8bb 2000 	ldrh.w	r2, [fp]
 80126a0:	681b      	ldr	r3, [r3, #0]
 80126a2:	490c      	ldr	r1, [pc, #48]	; (80126d4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 80126a4:	7800      	ldrb	r0, [r0, #0]
 80126a6:	f7ff fc03 	bl	8011eb0 <udp_send>
 80126aa:	3610      	adds	r6, #16
 80126ac:	f1b9 0f00 	cmp.w	r9, #0
 80126b0:	d001      	beq.n	80126b6 <MDNS::HandleRequest(unsigned short)+0xca>
 80126b2:	3701      	adds	r7, #1
 80126b4:	e7a6      	b.n	8012604 <MDNS::HandleRequest(unsigned short)+0x18>
 80126b6:	f04f 0901 	mov.w	r9, #1
 80126ba:	e7db      	b.n	8012674 <MDNS::HandleRequest(unsigned short)+0x88>
 80126bc:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80126c0:	2000f560 	andcs	pc, r0, r0, ror #10
 80126c4:	2000001c 	andcs	r0, r0, ip, lsl r0
 80126c8:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>
 80126cc:	0801b025 	stmdaeq	r1, {r0, r2, r5, ip, sp, pc}
 80126d0:	2000f764 	andcs	pc, r0, r4, ror #14
 80126d4:	2000f78c 	andcs	pc, r0, ip, lsl #15
 80126d8:	2000f990 	mulcs	r0, r0, r9
 80126dc:	2000f788 	andcs	pc, r0, r8, lsl #15

080126e0 <MDNS::Parse()>:
 80126e0:	4b08      	ldr	r3, [pc, #32]	; (8012704 <MDNS::Parse()+0x24>)
 80126e2:	681a      	ldr	r2, [r3, #0]
 80126e4:	8853      	ldrh	r3, [r2, #2]
 80126e6:	ba5b      	rev16	r3, r3
 80126e8:	b299      	uxth	r1, r3
 80126ea:	041b      	lsls	r3, r3, #16
 80126ec:	d408      	bmi.n	8012700 <MDNS::Parse()+0x20>
 80126ee:	0b89      	lsrs	r1, r1, #14
 80126f0:	d106      	bne.n	8012700 <MDNS::Parse()+0x20>
 80126f2:	8891      	ldrh	r1, [r2, #4]
 80126f4:	b28b      	uxth	r3, r1
 80126f6:	b11b      	cbz	r3, 8012700 <MDNS::Parse()+0x20>
 80126f8:	ba49      	rev16	r1, r1
 80126fa:	b289      	uxth	r1, r1
 80126fc:	f7ff bf76 	b.w	80125ec <MDNS::HandleRequest(unsigned short)>
 8012700:	4770      	bx	lr
 8012702:	bf00      	nop
 8012704:	2000f990 	mulcs	r0, r0, r9

08012708 <MDNS::Run()>:
 8012708:	b538      	push	{r3, r4, r5, lr}
 801270a:	4d0c      	ldr	r5, [pc, #48]	; (801273c <MDNS::Run()+0x34>)
 801270c:	490c      	ldr	r1, [pc, #48]	; (8012740 <MDNS::Run()+0x38>)
 801270e:	4a0d      	ldr	r2, [pc, #52]	; (8012744 <MDNS::Run()+0x3c>)
 8012710:	4604      	mov	r4, r0
 8012712:	480d      	ldr	r0, [pc, #52]	; (8012748 <MDNS::Run()+0x40>)
 8012714:	462b      	mov	r3, r5
 8012716:	7800      	ldrb	r0, [r0, #0]
 8012718:	f7ff fba4 	bl	8011e64 <udp_recv2>
 801271c:	4b0b      	ldr	r3, [pc, #44]	; (801274c <MDNS::Run()+0x44>)
 801271e:	8829      	ldrh	r1, [r5, #0]
 8012720:	8018      	strh	r0, [r3, #0]
 8012722:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012726:	4299      	cmp	r1, r3
 8012728:	d106      	bne.n	8012738 <MDNS::Run()+0x30>
 801272a:	280c      	cmp	r0, #12
 801272c:	d904      	bls.n	8012738 <MDNS::Run()+0x30>
 801272e:	4620      	mov	r0, r4
 8012730:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012734:	f7ff bfd4 	b.w	80126e0 <MDNS::Parse()>
 8012738:	bd38      	pop	{r3, r4, r5, pc}
 801273a:	bf00      	nop
 801273c:	2000f558 	andcs	pc, r0, r8, asr r5	; <UNPREDICTABLE>
 8012740:	2000f990 	mulcs	r0, r0, r9
 8012744:	2000f554 	andcs	pc, r0, r4, asr r5	; <UNPREDICTABLE>
 8012748:	2000001c 	andcs	r0, r0, ip, lsl r0
 801274c:	2000f784 	andcs	pc, r0, r4, lsl #15

08012750 <MDNS::Print()>:
 8012750:	b510      	push	{r4, lr}
 8012752:	4816      	ldr	r0, [pc, #88]	; (80127ac <MDNS::Print()+0x5c>)
 8012754:	f7f7 fe98 	bl	800a488 <printf>
 8012758:	4b15      	ldr	r3, [pc, #84]	; (80127b0 <MDNS::Print()+0x60>)
 801275a:	681b      	ldr	r3, [r3, #0]
 801275c:	3301      	adds	r3, #1
 801275e:	d104      	bne.n	801276a <MDNS::Print()+0x1a>
 8012760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012764:	4813      	ldr	r0, [pc, #76]	; (80127b4 <MDNS::Print()+0x64>)
 8012766:	f7f7 be8f 	b.w	800a488 <printf>
 801276a:	4b13      	ldr	r3, [pc, #76]	; (80127b8 <MDNS::Print()+0x68>)
 801276c:	4c13      	ldr	r4, [pc, #76]	; (80127bc <MDNS::Print()+0x6c>)
 801276e:	6819      	ldr	r1, [r3, #0]
 8012770:	4813      	ldr	r0, [pc, #76]	; (80127c0 <MDNS::Print()+0x70>)
 8012772:	f7f7 fe89 	bl	800a488 <printf>
 8012776:	6823      	ldr	r3, [r4, #0]
 8012778:	b14b      	cbz	r3, 801278e <MDNS::Print()+0x3e>
 801277a:	4a12      	ldr	r2, [pc, #72]	; (80127c4 <MDNS::Print()+0x74>)
 801277c:	68a3      	ldr	r3, [r4, #8]
 801277e:	6861      	ldr	r1, [r4, #4]
 8012780:	4811      	ldr	r0, [pc, #68]	; (80127c8 <MDNS::Print()+0x78>)
 8012782:	2b00      	cmp	r3, #0
 8012784:	bf08      	it	eq
 8012786:	4613      	moveq	r3, r2
 8012788:	89a2      	ldrh	r2, [r4, #12]
 801278a:	f7f7 fe7d 	bl	800a488 <printf>
 801278e:	6923      	ldr	r3, [r4, #16]
 8012790:	b15b      	cbz	r3, 80127aa <MDNS::Print()+0x5a>
 8012792:	69a3      	ldr	r3, [r4, #24]
 8012794:	4a0b      	ldr	r2, [pc, #44]	; (80127c4 <MDNS::Print()+0x74>)
 8012796:	6961      	ldr	r1, [r4, #20]
 8012798:	480b      	ldr	r0, [pc, #44]	; (80127c8 <MDNS::Print()+0x78>)
 801279a:	2b00      	cmp	r3, #0
 801279c:	bf08      	it	eq
 801279e:	4613      	moveq	r3, r2
 80127a0:	8ba2      	ldrh	r2, [r4, #28]
 80127a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80127a6:	f7f7 be6f 	b.w	800a488 <printf>
 80127aa:	bd10      	pop	{r4, pc}
 80127ac:	0801b042 	stmdaeq	r1, {r1, r6, ip, sp, pc}
 80127b0:	2000001c 	andcs	r0, r0, ip, lsl r0
 80127b4:	0801b048 	stmdaeq	r1, {r3, r6, ip, sp, pc}
 80127b8:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80127bc:	2000f764 	andcs	pc, r0, r4, ror #14
 80127c0:	0801b056 	stmdaeq	r1, {r1, r2, r4, r6, ip, sp, pc}
 80127c4:	08019001 	stmdaeq	r1, {r0, ip, pc}
 80127c8:	0801b062 	stmdaeq	r1, {r1, r5, r6, ip, sp, pc}

080127cc <strncpy.constprop.0.isra.0>:
 80127cc:	3901      	subs	r1, #1
 80127ce:	233f      	movs	r3, #63	; 0x3f
 80127d0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80127d4:	b92a      	cbnz	r2, 80127e2 <strncpy.constprop.0.isra.0+0x16>
 80127d6:	4403      	add	r3, r0
 80127d8:	4298      	cmp	r0, r3
 80127da:	d006      	beq.n	80127ea <strncpy.constprop.0.isra.0+0x1e>
 80127dc:	f800 2b01 	strb.w	r2, [r0], #1
 80127e0:	e7fa      	b.n	80127d8 <strncpy.constprop.0.isra.0+0xc>
 80127e2:	3b01      	subs	r3, #1
 80127e4:	f800 2b01 	strb.w	r2, [r0], #1
 80127e8:	d1f2      	bne.n	80127d0 <strncpy.constprop.0.isra.0+0x4>
 80127ea:	4770      	bx	lr

080127ec <Network::Network()>:
 80127ec:	4a11      	ldr	r2, [pc, #68]	; (8012834 <Network::Network()+0x48>)
 80127ee:	2300      	movs	r3, #0
 80127f0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80127f4:	6010      	str	r0, [r2, #0]
 80127f6:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 80127fa:	2201      	movs	r2, #1
 80127fc:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 8012800:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012804:	e9c0 2100 	strd	r2, r1, [r0]
 8012808:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801280c:	490a      	ldr	r1, [pc, #40]	; (8012838 <Network::Network()+0x4c>)
 801280e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 8012812:	2200      	movs	r2, #0
 8012814:	6102      	str	r2, [r0, #16]
 8012816:	61c3      	str	r3, [r0, #28]
 8012818:	f880 3020 	strb.w	r3, [r0, #32]
 801281c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8012820:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 8012824:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012828:	f802 3f01 	strb.w	r3, [r2, #1]!
 801282c:	2b00      	cmp	r3, #0
 801282e:	d1f9      	bne.n	8012824 <Network::Network()+0x38>
 8012830:	4770      	bx	lr
 8012832:	bf00      	nop
 8012834:	2000f994 	mulcs	r0, r4, r9
 8012838:	0801b06d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip, sp, pc}

0801283c <Network::Shutdown()>:
 801283c:	b508      	push	{r3, lr}
 801283e:	f001 fc7d 	bl	801413c <network::display_emac_shutdown()>
 8012842:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012846:	f7f5 bcfd 	b.w	8008244 <net_shutdown>

0801284a <Network::Begin(unsigned short)>:
 801284a:	4608      	mov	r0, r1
 801284c:	f7ff ba9a 	b.w	8011d84 <udp_bind>

08012850 <Network::End(unsigned short)>:
 8012850:	4608      	mov	r0, r1
 8012852:	f7ff bab1 	b.w	8011db8 <udp_unbind>

08012856 <Network::MacAddressCopyTo(unsigned char*)>:
 8012856:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 801285a:	3901      	subs	r1, #1
 801285c:	30a5      	adds	r0, #165	; 0xa5
 801285e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8012862:	f801 2f01 	strb.w	r2, [r1, #1]!
 8012866:	4283      	cmp	r3, r0
 8012868:	d1f9      	bne.n	801285e <Network::MacAddressCopyTo(unsigned char*)+0x8>
 801286a:	4770      	bx	lr

0801286c <Network::JoinGroup(int, unsigned int)>:
 801286c:	4610      	mov	r0, r2
 801286e:	f000 bffd 	b.w	801386c <igmp_join>

08012872 <Network::LeaveGroup(int, unsigned int)>:
 8012872:	4610      	mov	r0, r2
 8012874:	f001 b826 	b.w	80138c4 <igmp_leave>

08012878 <Network::SetDefaultIp()>:
 8012878:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801287c:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 8012880:	041b      	lsls	r3, r3, #16
 8012882:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8012886:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 801288a:	3302      	adds	r3, #2
 801288c:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8012890:	22ff      	movs	r2, #255	; 0xff
 8012892:	e9c0 3206 	strd	r3, r2, [r0, #24]
 8012896:	6143      	str	r3, [r0, #20]
 8012898:	4770      	bx	lr
	...

0801289c <Network::Init(NetworkParamsStore*)>:
 801289c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128a0:	b0a5      	sub	sp, #148	; 0x94
 80128a2:	4604      	mov	r4, r0
 80128a4:	a80b      	add	r0, sp, #44	; 0x2c
 80128a6:	f000 facd 	bl	8012e44 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80128aa:	a80b      	add	r0, sp, #44	; 0x2c
 80128ac:	f000 fad6 	bl	8012e5c <NetworkParams::Load()>
 80128b0:	b110      	cbz	r0, 80128b8 <Network::Init(NetworkParamsStore*)+0x1c>
 80128b2:	a80b      	add	r0, sp, #44	; 0x2c
 80128b4:	f000 fcad 	bl	8013212 <NetworkParams::Dump()>
 80128b8:	f001 fc22 	bl	8014100 <network::display_emac_start()>
 80128bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80128be:	9308      	str	r3, [sp, #32]
 80128c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128c2:	9309      	str	r3, [sp, #36]	; 0x24
 80128c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80128c6:	930a      	str	r3, [sp, #40]	; 0x28
 80128c8:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80128cc:	7163      	strb	r3, [r4, #5]
 80128ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80128d0:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 80128d4:	bf18      	it	ne
 80128d6:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 80128da:	60e2      	str	r2, [r4, #12]
 80128dc:	061b      	lsls	r3, r3, #24
 80128de:	bf4c      	ite	mi
 80128e0:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 80128e4:	2300      	movpl	r3, #0
 80128e6:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 80128ea:	6123      	str	r3, [r4, #16]
 80128ec:	4630      	mov	r0, r6
 80128ee:	f005 fa99 	bl	8017e24 <emac_start(unsigned char*)>
 80128f2:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 80128f6:	f104 0720 	add.w	r7, r4, #32
 80128fa:	2b00      	cmp	r3, #0
 80128fc:	f040 80c5 	bne.w	8012a8a <Network::Init(NetworkParamsStore*)+0x1ee>
 8012900:	4982      	ldr	r1, [pc, #520]	; (8012b0c <Network::Init(NetworkParamsStore*)+0x270>)
 8012902:	f104 001f 	add.w	r0, r4, #31
 8012906:	f811 2b01 	ldrb.w	r2, [r1], #1
 801290a:	1c5d      	adds	r5, r3, #1
 801290c:	2a00      	cmp	r2, #0
 801290e:	f040 80b8 	bne.w	8012a82 <Network::Init(NetworkParamsStore*)+0x1e6>
 8012912:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8012916:	0910      	lsrs	r0, r2, #4
 8012918:	2a9f      	cmp	r2, #159	; 0x9f
 801291a:	f002 020f 	and.w	r2, r2, #15
 801291e:	bf94      	ite	ls
 8012920:	3030      	addls	r0, #48	; 0x30
 8012922:	3037      	addhi	r0, #55	; 0x37
 8012924:	18e1      	adds	r1, r4, r3
 8012926:	2a09      	cmp	r2, #9
 8012928:	4425      	add	r5, r4
 801292a:	bf94      	ite	ls
 801292c:	3230      	addls	r2, #48	; 0x30
 801292e:	3237      	addhi	r2, #55	; 0x37
 8012930:	f881 0020 	strb.w	r0, [r1, #32]
 8012934:	f885 2020 	strb.w	r2, [r5, #32]
 8012938:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 801293c:	f103 0e02 	add.w	lr, r3, #2
 8012940:	0910      	lsrs	r0, r2, #4
 8012942:	2a9f      	cmp	r2, #159	; 0x9f
 8012944:	eb04 050e 	add.w	r5, r4, lr
 8012948:	f002 020f 	and.w	r2, r2, #15
 801294c:	bf94      	ite	ls
 801294e:	3030      	addls	r0, #48	; 0x30
 8012950:	3037      	addhi	r0, #55	; 0x37
 8012952:	f103 0c03 	add.w	ip, r3, #3
 8012956:	f885 0020 	strb.w	r0, [r5, #32]
 801295a:	2a09      	cmp	r2, #9
 801295c:	eb04 000c 	add.w	r0, r4, ip
 8012960:	bf94      	ite	ls
 8012962:	3230      	addls	r2, #48	; 0x30
 8012964:	3237      	addhi	r2, #55	; 0x37
 8012966:	f880 2020 	strb.w	r2, [r0, #32]
 801296a:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 801296e:	1d1d      	adds	r5, r3, #4
 8012970:	0910      	lsrs	r0, r2, #4
 8012972:	2a9f      	cmp	r2, #159	; 0x9f
 8012974:	f103 0305 	add.w	r3, r3, #5
 8012978:	f002 020f 	and.w	r2, r2, #15
 801297c:	bf94      	ite	ls
 801297e:	3030      	addls	r0, #48	; 0x30
 8012980:	3037      	addhi	r0, #55	; 0x37
 8012982:	4423      	add	r3, r4
 8012984:	2a09      	cmp	r2, #9
 8012986:	4425      	add	r5, r4
 8012988:	bf94      	ite	ls
 801298a:	3230      	addls	r2, #48	; 0x30
 801298c:	3237      	addhi	r2, #55	; 0x37
 801298e:	f885 0020 	strb.w	r0, [r5, #32]
 8012992:	f883 2020 	strb.w	r2, [r3, #32]
 8012996:	2300      	movs	r3, #0
 8012998:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 801299c:	f000 fff5 	bl	801398a <net::link_register_read()>
 80129a0:	7963      	ldrb	r3, [r4, #5]
 80129a2:	6020      	str	r0, [r4, #0]
 80129a4:	2800      	cmp	r0, #0
 80129a6:	f040 809b 	bne.w	8012ae0 <Network::Init(NetworkParamsStore*)+0x244>
 80129aa:	2b00      	cmp	r3, #0
 80129ac:	f040 80a9 	bne.w	8012b02 <Network::Init(NetworkParamsStore*)+0x266>
 80129b0:	9b08      	ldr	r3, [sp, #32]
 80129b2:	2b00      	cmp	r3, #0
 80129b4:	d172      	bne.n	8012a9c <Network::Init(NetworkParamsStore*)+0x200>
 80129b6:	4620      	mov	r0, r4
 80129b8:	f7ff ff5e 	bl	8012878 <Network::SetDefaultIp()>
 80129bc:	6963      	ldr	r3, [r4, #20]
 80129be:	69e2      	ldr	r2, [r4, #28]
 80129c0:	9308      	str	r3, [sp, #32]
 80129c2:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 80129c6:	f104 0905 	add.w	r9, r4, #5
 80129ca:	f104 0a07 	add.w	sl, r4, #7
 80129ce:	464b      	mov	r3, r9
 80129d0:	f8cd a000 	str.w	sl, [sp]
 80129d4:	463a      	mov	r2, r7
 80129d6:	a908      	add	r1, sp, #32
 80129d8:	4630      	mov	r0, r6
 80129da:	f7f5 fbe7 	bl	80081ac <net_init>
 80129de:	79e3      	ldrb	r3, [r4, #7]
 80129e0:	b113      	cbz	r3, 80129e8 <Network::Init(NetworkParamsStore*)+0x14c>
 80129e2:	2004      	movs	r0, #4
 80129e4:	f001 fbb0 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 80129e8:	f89d 508d 	ldrb.w	r5, [sp, #141]	; 0x8d
 80129ec:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 80129f0:	9302      	str	r3, [sp, #8]
 80129f2:	ebc5 1505 	rsb	r5, r5, r5, lsl #4
 80129f6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80129fa:	9303      	str	r3, [sp, #12]
 80129fc:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8012b14 <Network::Init(NetworkParamsStore*)+0x278>
 8012a00:	f8df b114 	ldr.w	fp, [pc, #276]	; 8012b18 <Network::Init(NetworkParamsStore*)+0x27c>
 8012a04:	00ab      	lsls	r3, r5, #2
 8012a06:	9305      	str	r3, [sp, #20]
 8012a08:	79e3      	ldrb	r3, [r4, #7]
 8012a0a:	b37b      	cbz	r3, 8012a6c <Network::Init(NetworkParamsStore*)+0x1d0>
 8012a0c:	9b02      	ldr	r3, [sp, #8]
 8012a0e:	b36b      	cbz	r3, 8012a6c <Network::Init(NetworkParamsStore*)+0x1d0>
 8012a10:	9b03      	ldr	r3, [sp, #12]
 8012a12:	b35b      	cbz	r3, 8012a6c <Network::Init(NetworkParamsStore*)+0x1d0>
 8012a14:	2104      	movs	r1, #4
 8012a16:	f8d8 0000 	ldr.w	r0, [r8]
 8012a1a:	f002 ff19 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 8012a1e:	2003      	movs	r0, #3
 8012a20:	f001 fb92 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012a24:	2000      	movs	r0, #0
 8012a26:	f003 fb1d 	bl	8016064 <time>
 8012a2a:	9004      	str	r0, [sp, #16]
 8012a2c:	2000      	movs	r0, #0
 8012a2e:	f003 fb19 	bl	8016064 <time>
 8012a32:	9b04      	ldr	r3, [sp, #16]
 8012a34:	4936      	ldr	r1, [pc, #216]	; (8012b10 <Network::Init(NetworkParamsStore*)+0x274>)
 8012a36:	1ac0      	subs	r0, r0, r3
 8012a38:	9b05      	ldr	r3, [sp, #20]
 8012a3a:	4298      	cmp	r0, r3
 8012a3c:	db36      	blt.n	8012aac <Network::Init(NetworkParamsStore*)+0x210>
 8012a3e:	2001      	movs	r0, #1
 8012a40:	f001 fb82 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012a44:	f8d8 0000 	ldr.w	r0, [r8]
 8012a48:	2101      	movs	r1, #1
 8012a4a:	f002 ff01 	bl	8015850 <LedBlink::SetMode(ledblink::Mode)>
 8012a4e:	2301      	movs	r3, #1
 8012a50:	7163      	strb	r3, [r4, #5]
 8012a52:	2300      	movs	r3, #0
 8012a54:	71e3      	strb	r3, [r4, #7]
 8012a56:	f8cd a000 	str.w	sl, [sp]
 8012a5a:	464b      	mov	r3, r9
 8012a5c:	463a      	mov	r2, r7
 8012a5e:	a908      	add	r1, sp, #32
 8012a60:	4630      	mov	r0, r6
 8012a62:	f7f5 fba3 	bl	80081ac <net_init>
 8012a66:	7963      	ldrb	r3, [r4, #5]
 8012a68:	2b00      	cmp	r3, #0
 8012a6a:	d0cd      	beq.n	8012a08 <Network::Init(NetworkParamsStore*)+0x16c>
 8012a6c:	9b08      	ldr	r3, [sp, #32]
 8012a6e:	6163      	str	r3, [r4, #20]
 8012a70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a72:	61e3      	str	r3, [r4, #28]
 8012a74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a76:	61a3      	str	r3, [r4, #24]
 8012a78:	f001 fb48 	bl	801410c <network::display_ip()>
 8012a7c:	b025      	add	sp, #148	; 0x94
 8012a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a82:	f800 2f01 	strb.w	r2, [r0, #1]!
 8012a86:	462b      	mov	r3, r5
 8012a88:	e73d      	b.n	8012906 <Network::Init(NetworkParamsStore*)+0x6a>
 8012a8a:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 8012a8e:	4638      	mov	r0, r7
 8012a90:	f7ff fe9c 	bl	80127cc <strncpy.constprop.0.isra.0>
 8012a94:	2300      	movs	r3, #0
 8012a96:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8012a9a:	e77f      	b.n	801299c <Network::Init(NetworkParamsStore*)+0x100>
 8012a9c:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8012aa0:	69e1      	ldr	r1, [r4, #28]
 8012aa2:	4053      	eors	r3, r2
 8012aa4:	420b      	tst	r3, r1
 8012aa6:	bf18      	it	ne
 8012aa8:	920a      	strne	r2, [sp, #40]	; 0x28
 8012aaa:	e78c      	b.n	80129c6 <Network::Init(NetworkParamsStore*)+0x12a>
 8012aac:	f8d8 3000 	ldr.w	r3, [r8]
 8012ab0:	68da      	ldr	r2, [r3, #12]
 8012ab2:	2a00      	cmp	r2, #0
 8012ab4:	d0ba      	beq.n	8012a2c <Network::Init(NetworkParamsStore*)+0x190>
 8012ab6:	f8db 0000 	ldr.w	r0, [fp]
 8012aba:	695d      	ldr	r5, [r3, #20]
 8012abc:	1b40      	subs	r0, r0, r5
 8012abe:	4282      	cmp	r2, r0
 8012ac0:	d8b4      	bhi.n	8012a2c <Network::Init(NetworkParamsStore*)+0x190>
 8012ac2:	f8db 0000 	ldr.w	r0, [fp]
 8012ac6:	6158      	str	r0, [r3, #20]
 8012ac8:	6918      	ldr	r0, [r3, #16]
 8012aca:	2801      	cmp	r0, #1
 8012acc:	f080 0201 	eor.w	r2, r0, #1
 8012ad0:	611a      	str	r2, [r3, #16]
 8012ad2:	bf1a      	itte	ne
 8012ad4:	2301      	movne	r3, #1
 8012ad6:	f8c1 3818 	strne.w	r3, [r1, #2072]	; 0x818
 8012ada:	f8c1 0828 	streq.w	r0, [r1, #2088]	; 0x828
 8012ade:	e7a5      	b.n	8012a2c <Network::Init(NetworkParamsStore*)+0x190>
 8012ae0:	b11b      	cbz	r3, 8012aea <Network::Init(NetworkParamsStore*)+0x24e>
 8012ae2:	2300      	movs	r3, #0
 8012ae4:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8012ae8:	9308      	str	r3, [sp, #32]
 8012aea:	2300      	movs	r3, #0
 8012aec:	f88d 301f 	strb.w	r3, [sp, #31]
 8012af0:	f10d 031f 	add.w	r3, sp, #31
 8012af4:	9300      	str	r3, [sp, #0]
 8012af6:	463a      	mov	r2, r7
 8012af8:	a908      	add	r1, sp, #32
 8012afa:	4630      	mov	r0, r6
 8012afc:	f7f5 fb56 	bl	80081ac <net_init>
 8012b00:	e7b4      	b.n	8012a6c <Network::Init(NetworkParamsStore*)+0x1d0>
 8012b02:	2001      	movs	r0, #1
 8012b04:	f001 fb20 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012b08:	e75d      	b.n	80129c6 <Network::Init(NetworkParamsStore*)+0x12a>
 8012b0a:	bf00      	nop
 8012b0c:	0801b072 	stmdaeq	r1, {r1, r4, r5, r6, ip, sp, pc}
 8012b10:	40020000 	andmi	r0, r2, r0
 8012b14:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 8012b18:	2000fd94 	mulcs	r0, r4, sp

08012b1c <Network::SetIp(unsigned int)>:
 8012b1c:	7943      	ldrb	r3, [r0, #5]
 8012b1e:	b570      	push	{r4, r5, r6, lr}
 8012b20:	4604      	mov	r4, r0
 8012b22:	460d      	mov	r5, r1
 8012b24:	2600      	movs	r6, #0
 8012b26:	b113      	cbz	r3, 8012b2e <Network::SetIp(unsigned int)+0x12>
 8012b28:	7146      	strb	r6, [r0, #5]
 8012b2a:	f7fe feb3 	bl	8011894 <net_dhcp_release>
 8012b2e:	71e6      	strb	r6, [r4, #7]
 8012b30:	b95d      	cbnz	r5, 8012b4a <Network::SetIp(unsigned int)+0x2e>
 8012b32:	4620      	mov	r0, r4
 8012b34:	f7ff fea0 	bl	8012878 <Network::SetDefaultIp()>
 8012b38:	6960      	ldr	r0, [r4, #20]
 8012b3a:	f7fe fe6f 	bl	801181c <net_set_ip>
 8012b3e:	f001 fae5 	bl	801410c <network::display_ip()>
 8012b42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b46:	f001 bae7 	b.w	8014118 <network::display_netmask()>
 8012b4a:	4628      	mov	r0, r5
 8012b4c:	f7fe fe66 	bl	801181c <net_set_ip>
 8012b50:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012b54:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8012b58:	2800      	cmp	r0, #0
 8012b5a:	d0f0      	beq.n	8012b3e <Network::SetIp(unsigned int)+0x22>
 8012b5c:	6803      	ldr	r3, [r0, #0]
 8012b5e:	4629      	mov	r1, r5
 8012b60:	689b      	ldr	r3, [r3, #8]
 8012b62:	4798      	blx	r3
 8012b64:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012b68:	6803      	ldr	r3, [r0, #0]
 8012b6a:	2100      	movs	r1, #0
 8012b6c:	699b      	ldr	r3, [r3, #24]
 8012b6e:	4798      	blx	r3
 8012b70:	e7e5      	b.n	8012b3e <Network::SetIp(unsigned int)+0x22>

08012b72 <Network::SetNetmask(unsigned int)>:
 8012b72:	69c2      	ldr	r2, [r0, #28]
 8012b74:	428a      	cmp	r2, r1
 8012b76:	b508      	push	{r3, lr}
 8012b78:	d00c      	beq.n	8012b94 <Network::SetNetmask(unsigned int)+0x22>
 8012b7a:	61c1      	str	r1, [r0, #28]
 8012b7c:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 8012b80:	b110      	cbz	r0, 8012b88 <Network::SetNetmask(unsigned int)+0x16>
 8012b82:	6803      	ldr	r3, [r0, #0]
 8012b84:	68db      	ldr	r3, [r3, #12]
 8012b86:	4798      	blx	r3
 8012b88:	f001 fac0 	bl	801410c <network::display_ip()>
 8012b8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012b90:	f001 bac2 	b.w	8014118 <network::display_netmask()>
 8012b94:	bd08      	pop	{r3, pc}

08012b96 <Network::SetHostName(char const*)>:
 8012b96:	b538      	push	{r3, r4, r5, lr}
 8012b98:	4604      	mov	r4, r0
 8012b9a:	f100 0520 	add.w	r5, r0, #32
 8012b9e:	4628      	mov	r0, r5
 8012ba0:	f7ff fe14 	bl	80127cc <strncpy.constprop.0.isra.0>
 8012ba4:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012ba8:	2300      	movs	r3, #0
 8012baa:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8012bae:	b158      	cbz	r0, 8012bc8 <Network::SetHostName(char const*)+0x32>
 8012bb0:	6803      	ldr	r3, [r0, #0]
 8012bb2:	695c      	ldr	r4, [r3, #20]
 8012bb4:	462b      	mov	r3, r5
 8012bb6:	461a      	mov	r2, r3
 8012bb8:	3301      	adds	r3, #1
 8012bba:	7811      	ldrb	r1, [r2, #0]
 8012bbc:	2900      	cmp	r1, #0
 8012bbe:	d1fa      	bne.n	8012bb6 <Network::SetHostName(char const*)+0x20>
 8012bc0:	1b52      	subs	r2, r2, r5
 8012bc2:	b292      	uxth	r2, r2
 8012bc4:	4629      	mov	r1, r5
 8012bc6:	47a0      	blx	r4
 8012bc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012bcc:	f001 bab0 	b.w	8014130 <network::display_hostname()>

08012bd0 <Network::SetZeroconf()>:
 8012bd0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012bd2:	4604      	mov	r4, r0
 8012bd4:	a801      	add	r0, sp, #4
 8012bd6:	f7fe fe67 	bl	80118a8 <net_set_zeroconf>
 8012bda:	71e0      	strb	r0, [r4, #7]
 8012bdc:	b170      	cbz	r0, 8012bfc <Network::SetZeroconf()+0x2c>
 8012bde:	9b01      	ldr	r3, [sp, #4]
 8012be0:	6163      	str	r3, [r4, #20]
 8012be2:	9b02      	ldr	r3, [sp, #8]
 8012be4:	61e3      	str	r3, [r4, #28]
 8012be6:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012bea:	9b03      	ldr	r3, [sp, #12]
 8012bec:	61a3      	str	r3, [r4, #24]
 8012bee:	2300      	movs	r3, #0
 8012bf0:	7163      	strb	r3, [r4, #5]
 8012bf2:	b118      	cbz	r0, 8012bfc <Network::SetZeroconf()+0x2c>
 8012bf4:	6803      	ldr	r3, [r0, #0]
 8012bf6:	2101      	movs	r1, #1
 8012bf8:	699b      	ldr	r3, [r3, #24]
 8012bfa:	4798      	blx	r3
 8012bfc:	f001 fa86 	bl	801410c <network::display_ip()>
 8012c00:	f001 fa8a 	bl	8014118 <network::display_netmask()>
 8012c04:	79e0      	ldrb	r0, [r4, #7]
 8012c06:	b004      	add	sp, #16
 8012c08:	bd10      	pop	{r4, pc}
	...

08012c0c <Network::EnableDhcp()>:
 8012c0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012c0e:	4d21      	ldr	r5, [pc, #132]	; (8012c94 <Network::EnableDhcp()+0x88>)
 8012c10:	682b      	ldr	r3, [r5, #0]
 8012c12:	781e      	ldrb	r6, [r3, #0]
 8012c14:	4604      	mov	r4, r0
 8012c16:	b136      	cbz	r6, 8012c26 <Network::EnableDhcp()+0x1a>
 8012c18:	2200      	movs	r2, #0
 8012c1a:	701a      	strb	r2, [r3, #0]
 8012c1c:	2104      	movs	r1, #4
 8012c1e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012c22:	f003 ffe7 	bl	8016bf4 <fwdgt_config>
 8012c26:	2001      	movs	r0, #1
 8012c28:	f001 fa8e 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012c2c:	1de2      	adds	r2, r4, #7
 8012c2e:	f104 0120 	add.w	r1, r4, #32
 8012c32:	a801      	add	r0, sp, #4
 8012c34:	f7fe fe02 	bl	801183c <net_set_dhcp>
 8012c38:	79e3      	ldrb	r3, [r4, #7]
 8012c3a:	7160      	strb	r0, [r4, #5]
 8012c3c:	b33b      	cbz	r3, 8012c8e <Network::EnableDhcp()+0x82>
 8012c3e:	2004      	movs	r0, #4
 8012c40:	f001 fa82 	bl	8014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012c44:	b16e      	cbz	r6, 8012c62 <Network::EnableDhcp()+0x56>
 8012c46:	2102      	movs	r1, #2
 8012c48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012c4c:	682d      	ldr	r5, [r5, #0]
 8012c4e:	f003 ffd1 	bl	8016bf4 <fwdgt_config>
 8012c52:	2801      	cmp	r0, #1
 8012c54:	bf0c      	ite	eq
 8012c56:	2301      	moveq	r3, #1
 8012c58:	2300      	movne	r3, #0
 8012c5a:	702b      	strb	r3, [r5, #0]
 8012c5c:	d101      	bne.n	8012c62 <Network::EnableDhcp()+0x56>
 8012c5e:	f003 ffb9 	bl	8016bd4 <fwdgt_enable>
 8012c62:	9b01      	ldr	r3, [sp, #4]
 8012c64:	6163      	str	r3, [r4, #20]
 8012c66:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012c6a:	9b02      	ldr	r3, [sp, #8]
 8012c6c:	61e3      	str	r3, [r4, #28]
 8012c6e:	9b03      	ldr	r3, [sp, #12]
 8012c70:	61a3      	str	r3, [r4, #24]
 8012c72:	b118      	cbz	r0, 8012c7c <Network::EnableDhcp()+0x70>
 8012c74:	6803      	ldr	r3, [r0, #0]
 8012c76:	7961      	ldrb	r1, [r4, #5]
 8012c78:	699b      	ldr	r3, [r3, #24]
 8012c7a:	4798      	blx	r3
 8012c7c:	f001 fa46 	bl	801410c <network::display_ip()>
 8012c80:	f001 fa4a 	bl	8014118 <network::display_netmask()>
 8012c84:	f001 fa4e 	bl	8014124 <network::display_gateway()>
 8012c88:	7960      	ldrb	r0, [r4, #5]
 8012c8a:	b004      	add	sp, #16
 8012c8c:	bd70      	pop	{r4, r5, r6, pc}
 8012c8e:	2002      	movs	r0, #2
 8012c90:	e7d6      	b.n	8012c40 <Network::EnableDhcp()+0x34>
 8012c92:	bf00      	nop
 8012c94:	2000fd80 	andcs	pc, r0, r0, lsl #27

08012c98 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8012c98:	b109      	cbz	r1, 8012c9e <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8012c9a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 8012c9e:	b10a      	cbz	r2, 8012ca4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8012ca0:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 8012ca4:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8012ca8:	f043 0303 	orr.w	r3, r3, #3
 8012cac:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8012cb0:	4770      	bx	lr

08012cb2 <Network::ApplyQueuedConfig()>:
 8012cb2:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8012cb6:	b510      	push	{r4, lr}
 8012cb8:	4604      	mov	r4, r0
 8012cba:	b3c3      	cbz	r3, 8012d2e <Network::ApplyQueuedConfig()+0x7c>
 8012cbc:	079a      	lsls	r2, r3, #30
 8012cbe:	d01a      	beq.n	8012cf6 <Network::ApplyQueuedConfig()+0x44>
 8012cc0:	079b      	lsls	r3, r3, #30
 8012cc2:	d509      	bpl.n	8012cd8 <Network::ApplyQueuedConfig()+0x26>
 8012cc4:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8012cc8:	f7ff ff53 	bl	8012b72 <Network::SetNetmask(unsigned int)>
 8012ccc:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012cd0:	f023 0302 	bic.w	r3, r3, #2
 8012cd4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012cd8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012cdc:	07d9      	lsls	r1, r3, #31
 8012cde:	d50a      	bpl.n	8012cf6 <Network::ApplyQueuedConfig()+0x44>
 8012ce0:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8012ce4:	4620      	mov	r0, r4
 8012ce6:	f7ff ff19 	bl	8012b1c <Network::SetIp(unsigned int)>
 8012cea:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012cee:	f023 0301 	bic.w	r3, r3, #1
 8012cf2:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012cf6:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012cfa:	075a      	lsls	r2, r3, #29
 8012cfc:	d508      	bpl.n	8012d10 <Network::ApplyQueuedConfig()+0x5e>
 8012cfe:	4620      	mov	r0, r4
 8012d00:	f7ff ff84 	bl	8012c0c <Network::EnableDhcp()>
 8012d04:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012d08:	f023 0304 	bic.w	r3, r3, #4
 8012d0c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012d10:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012d14:	071b      	lsls	r3, r3, #28
 8012d16:	d508      	bpl.n	8012d2a <Network::ApplyQueuedConfig()+0x78>
 8012d18:	4620      	mov	r0, r4
 8012d1a:	f7ff ff59 	bl	8012bd0 <Network::SetZeroconf()>
 8012d1e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012d22:	f023 0308 	bic.w	r3, r3, #8
 8012d26:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012d2a:	2001      	movs	r0, #1
 8012d2c:	e000      	b.n	8012d30 <Network::ApplyQueuedConfig()+0x7e>
 8012d2e:	4618      	mov	r0, r3
 8012d30:	bd10      	pop	{r4, pc}
	...

08012d34 <Network::Print()>:
 8012d34:	b530      	push	{r4, r5, lr}
 8012d36:	4604      	mov	r4, r0
 8012d38:	b085      	sub	sp, #20
 8012d3a:	4832      	ldr	r0, [pc, #200]	; (8012e04 <Network::Print()+0xd0>)
 8012d3c:	f7f7 fba4 	bl	800a488 <printf>
 8012d40:	f104 0120 	add.w	r1, r4, #32
 8012d44:	4830      	ldr	r0, [pc, #192]	; (8012e08 <Network::Print()+0xd4>)
 8012d46:	f7f7 fb9f 	bl	800a488 <printf>
 8012d4a:	68a1      	ldr	r1, [r4, #8]
 8012d4c:	482f      	ldr	r0, [pc, #188]	; (8012e0c <Network::Print()+0xd8>)
 8012d4e:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 8012d52:	f7f7 fb99 	bl	800a488 <printf>
 8012d56:	69e0      	ldr	r0, [r4, #28]
 8012d58:	6965      	ldr	r5, [r4, #20]
 8012d5a:	f005 fbc7 	bl	80184ec <__popcountsi2>
 8012d5e:	0e2b      	lsrs	r3, r5, #24
 8012d60:	9001      	str	r0, [sp, #4]
 8012d62:	9300      	str	r3, [sp, #0]
 8012d64:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8012d68:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8012d6c:	b2e9      	uxtb	r1, r5
 8012d6e:	4828      	ldr	r0, [pc, #160]	; (8012e10 <Network::Print()+0xdc>)
 8012d70:	f7f7 fb8a 	bl	800a488 <printf>
 8012d74:	69e1      	ldr	r1, [r4, #28]
 8012d76:	4827      	ldr	r0, [pc, #156]	; (8012e14 <Network::Print()+0xe0>)
 8012d78:	0e0b      	lsrs	r3, r1, #24
 8012d7a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012d7e:	9300      	str	r3, [sp, #0]
 8012d80:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8012d84:	b2c9      	uxtb	r1, r1
 8012d86:	f7f7 fb7f 	bl	800a488 <printf>
 8012d8a:	69a1      	ldr	r1, [r4, #24]
 8012d8c:	4822      	ldr	r0, [pc, #136]	; (8012e18 <Network::Print()+0xe4>)
 8012d8e:	0e0b      	lsrs	r3, r1, #24
 8012d90:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012d94:	9300      	str	r3, [sp, #0]
 8012d96:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8012d9a:	b2c9      	uxtb	r1, r1
 8012d9c:	f7f7 fb74 	bl	800a488 <printf>
 8012da0:	69e3      	ldr	r3, [r4, #28]
 8012da2:	6961      	ldr	r1, [r4, #20]
 8012da4:	481d      	ldr	r0, [pc, #116]	; (8012e1c <Network::Print()+0xe8>)
 8012da6:	ea61 0103 	orn	r1, r1, r3
 8012daa:	0e0b      	lsrs	r3, r1, #24
 8012dac:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8012db0:	9300      	str	r3, [sp, #0]
 8012db2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8012db6:	b2c9      	uxtb	r1, r1
 8012db8:	f7f7 fb66 	bl	800a488 <printf>
 8012dbc:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8012dc0:	9302      	str	r3, [sp, #8]
 8012dc2:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8012dc6:	9301      	str	r3, [sp, #4]
 8012dc8:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8012dcc:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8012dd0:	9300      	str	r3, [sp, #0]
 8012dd2:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8012dd6:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8012dda:	4811      	ldr	r0, [pc, #68]	; (8012e20 <Network::Print()+0xec>)
 8012ddc:	f7f7 fb54 	bl	800a488 <printf>
 8012de0:	4b10      	ldr	r3, [pc, #64]	; (8012e24 <Network::Print()+0xf0>)
 8012de2:	681b      	ldr	r3, [r3, #0]
 8012de4:	79da      	ldrb	r2, [r3, #7]
 8012de6:	b952      	cbnz	r2, 8012dfe <Network::Print()+0xca>
 8012de8:	795b      	ldrb	r3, [r3, #5]
 8012dea:	2b00      	cmp	r3, #0
 8012dec:	bf14      	ite	ne
 8012dee:	2144      	movne	r1, #68	; 0x44
 8012df0:	2153      	moveq	r1, #83	; 0x53
 8012df2:	480d      	ldr	r0, [pc, #52]	; (8012e28 <Network::Print()+0xf4>)
 8012df4:	b005      	add	sp, #20
 8012df6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012dfa:	f7f7 bb45 	b.w	800a488 <printf>
 8012dfe:	215a      	movs	r1, #90	; 0x5a
 8012e00:	e7f7      	b.n	8012df2 <Network::Print()+0xbe>
 8012e02:	bf00      	nop
 8012e04:	0801b07e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, ip, sp, pc}
 8012e08:	0801b087 	stmdaeq	r1, {r0, r1, r2, r7, ip, sp, pc}
 8012e0c:	0801b098 	stmdaeq	r1, {r3, r4, r7, ip, sp, pc}
 8012e10:	0801b0ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, ip, sp, pc}
 8012e14:	0801b0ca 	stmdaeq	r1, {r1, r3, r6, r7, ip, sp, pc}
 8012e18:	0801b0e4 	stmdaeq	r1, {r2, r5, r6, r7, ip, sp, pc}
 8012e1c:	0801b0fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, ip, sp, pc}
 8012e20:	0801b118 	stmdaeq	r1, {r3, r4, r8, ip, sp, pc}
 8012e24:	2000f994 	mulcs	r0, r4, r9
 8012e28:	0801b144 	stmdaeq	r1, {r2, r6, r8, ip, sp, pc}

08012e2c <Network::TcpBegin(unsigned short)>:
 8012e2c:	4608      	mov	r0, r1
 8012e2e:	f7fe becb 	b.w	8011bc8 <tcp_begin>

08012e32 <Network::TcpRead(int, unsigned char const**)>:
 8012e32:	4608      	mov	r0, r1
 8012e34:	4611      	mov	r1, r2
 8012e36:	f7fe bf13 	b.w	8011c60 <tcp_read>

08012e3a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8012e3a:	4608      	mov	r0, r1
 8012e3c:	4611      	mov	r1, r2
 8012e3e:	461a      	mov	r2, r3
 8012e40:	f7fe bee0 	b.w	8011c04 <tcp_write>

08012e44 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8012e44:	b510      	push	{r4, lr}
 8012e46:	225e      	movs	r2, #94	; 0x5e
 8012e48:	4604      	mov	r4, r0
 8012e4a:	f840 1b04 	str.w	r1, [r0], #4
 8012e4e:	2100      	movs	r1, #0
 8012e50:	f002 ffe4 	bl	8015e1c <memset>
 8012e54:	2301      	movs	r3, #1
 8012e56:	7623      	strb	r3, [r4, #24]
 8012e58:	4620      	mov	r0, r4
 8012e5a:	bd10      	pop	{r4, pc}

08012e5c <NetworkParams::Load()>:
 8012e5c:	b508      	push	{r3, lr}
 8012e5e:	2300      	movs	r3, #0
 8012e60:	4601      	mov	r1, r0
 8012e62:	6043      	str	r3, [r0, #4]
 8012e64:	6800      	ldr	r0, [r0, #0]
 8012e66:	b120      	cbz	r0, 8012e72 <NetworkParams::Load()+0x16>
 8012e68:	6803      	ldr	r3, [r0, #0]
 8012e6a:	3104      	adds	r1, #4
 8012e6c:	68db      	ldr	r3, [r3, #12]
 8012e6e:	4798      	blx	r3
 8012e70:	2001      	movs	r0, #1
 8012e72:	bd08      	pop	{r3, pc}

08012e74 <NetworkParams::Load(char const*, unsigned int)>:
 8012e74:	6803      	ldr	r3, [r0, #0]
 8012e76:	b1d3      	cbz	r3, 8012eae <NetworkParams::Load(char const*, unsigned int)+0x3a>
 8012e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e7a:	2300      	movs	r3, #0
 8012e7c:	6043      	str	r3, [r0, #4]
 8012e7e:	4604      	mov	r4, r0
 8012e80:	460d      	mov	r5, r1
 8012e82:	4616      	mov	r6, r2
 8012e84:	490a      	ldr	r1, [pc, #40]	; (8012eb0 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8012e86:	4602      	mov	r2, r0
 8012e88:	4668      	mov	r0, sp
 8012e8a:	f001 ffc3 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012e8e:	4632      	mov	r2, r6
 8012e90:	4629      	mov	r1, r5
 8012e92:	4668      	mov	r0, sp
 8012e94:	f001 ffc2 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 8012e98:	4621      	mov	r1, r4
 8012e9a:	f851 0b04 	ldr.w	r0, [r1], #4
 8012e9e:	6803      	ldr	r3, [r0, #0]
 8012ea0:	689b      	ldr	r3, [r3, #8]
 8012ea2:	4798      	blx	r3
 8012ea4:	4668      	mov	r0, sp
 8012ea6:	f001 ffb8 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 8012eaa:	b002      	add	sp, #8
 8012eac:	bd70      	pop	{r4, r5, r6, pc}
 8012eae:	4770      	bx	lr
 8012eb0:	08012fe1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, fp, sp}

08012eb4 <NetworkParams::callbackFunction(char const*)>:
 8012eb4:	b530      	push	{r4, r5, lr}
 8012eb6:	460d      	mov	r5, r1
 8012eb8:	b085      	sub	sp, #20
 8012eba:	4604      	mov	r4, r0
 8012ebc:	4942      	ldr	r1, [pc, #264]	; (8012fc8 <NetworkParams::callbackFunction(char const*)+0x114>)
 8012ebe:	f10d 0207 	add.w	r2, sp, #7
 8012ec2:	4628      	mov	r0, r5
 8012ec4:	f002 f8db 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012ec8:	b978      	cbnz	r0, 8012eea <NetworkParams::callbackFunction(char const*)+0x36>
 8012eca:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012ece:	6863      	ldr	r3, [r4, #4]
 8012ed0:	b142      	cbz	r2, 8012ee4 <NetworkParams::callbackFunction(char const*)+0x30>
 8012ed2:	f023 0301 	bic.w	r3, r3, #1
 8012ed6:	3a00      	subs	r2, #0
 8012ed8:	bf18      	it	ne
 8012eda:	2201      	movne	r2, #1
 8012edc:	6063      	str	r3, [r4, #4]
 8012ede:	7622      	strb	r2, [r4, #24]
 8012ee0:	b005      	add	sp, #20
 8012ee2:	bd30      	pop	{r4, r5, pc}
 8012ee4:	f043 0301 	orr.w	r3, r3, #1
 8012ee8:	e7f5      	b.n	8012ed6 <NetworkParams::callbackFunction(char const*)+0x22>
 8012eea:	4938      	ldr	r1, [pc, #224]	; (8012fcc <NetworkParams::callbackFunction(char const*)+0x118>)
 8012eec:	f10d 0207 	add.w	r2, sp, #7
 8012ef0:	4628      	mov	r0, r5
 8012ef2:	f002 f8c4 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012ef6:	b980      	cbnz	r0, 8012f1a <NetworkParams::callbackFunction(char const*)+0x66>
 8012ef8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012efc:	6863      	ldr	r3, [r4, #4]
 8012efe:	1e51      	subs	r1, r2, #1
 8012f00:	2904      	cmp	r1, #4
 8012f02:	bf97      	itett	ls
 8012f04:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8012f08:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8012f0c:	6063      	strls	r3, [r4, #4]
 8012f0e:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8012f12:	bf84      	itt	hi
 8012f14:	6063      	strhi	r3, [r4, #4]
 8012f16:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 8012f1a:	492d      	ldr	r1, [pc, #180]	; (8012fd0 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8012f1c:	aa02      	add	r2, sp, #8
 8012f1e:	4628      	mov	r0, r5
 8012f20:	f002 f824 	bl	8014f6c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012f24:	b9e8      	cbnz	r0, 8012f62 <NetworkParams::callbackFunction(char const*)+0xae>
 8012f26:	9a02      	ldr	r2, [sp, #8]
 8012f28:	6863      	ldr	r3, [r4, #4]
 8012f2a:	b2d1      	uxtb	r1, r2
 8012f2c:	29ac      	cmp	r1, #172	; 0xac
 8012f2e:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8012f32:	d007      	beq.n	8012f44 <NetworkParams::callbackFunction(char const*)+0x90>
 8012f34:	29c0      	cmp	r1, #192	; 0xc0
 8012f36:	d00c      	beq.n	8012f52 <NetworkParams::callbackFunction(char const*)+0x9e>
 8012f38:	290a      	cmp	r1, #10
 8012f3a:	d10d      	bne.n	8012f58 <NetworkParams::callbackFunction(char const*)+0xa4>
 8012f3c:	60a2      	str	r2, [r4, #8]
 8012f3e:	f043 0302 	orr.w	r3, r3, #2
 8012f42:	e004      	b.n	8012f4e <NetworkParams::callbackFunction(char const*)+0x9a>
 8012f44:	3810      	subs	r0, #16
 8012f46:	280f      	cmp	r0, #15
 8012f48:	d9f8      	bls.n	8012f3c <NetworkParams::callbackFunction(char const*)+0x88>
 8012f4a:	f023 0302 	bic.w	r3, r3, #2
 8012f4e:	6063      	str	r3, [r4, #4]
 8012f50:	e7c6      	b.n	8012ee0 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012f52:	28a8      	cmp	r0, #168	; 0xa8
 8012f54:	d1f9      	bne.n	8012f4a <NetworkParams::callbackFunction(char const*)+0x96>
 8012f56:	e7f1      	b.n	8012f3c <NetworkParams::callbackFunction(char const*)+0x88>
 8012f58:	2902      	cmp	r1, #2
 8012f5a:	d0ef      	beq.n	8012f3c <NetworkParams::callbackFunction(char const*)+0x88>
 8012f5c:	2a00      	cmp	r2, #0
 8012f5e:	d0ed      	beq.n	8012f3c <NetworkParams::callbackFunction(char const*)+0x88>
 8012f60:	e7f3      	b.n	8012f4a <NetworkParams::callbackFunction(char const*)+0x96>
 8012f62:	491c      	ldr	r1, [pc, #112]	; (8012fd4 <NetworkParams::callbackFunction(char const*)+0x120>)
 8012f64:	aa02      	add	r2, sp, #8
 8012f66:	4628      	mov	r0, r5
 8012f68:	f002 f800 	bl	8014f6c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012f6c:	b970      	cbnz	r0, 8012f8c <NetworkParams::callbackFunction(char const*)+0xd8>
 8012f6e:	9a02      	ldr	r2, [sp, #8]
 8012f70:	6863      	ldr	r3, [r4, #4]
 8012f72:	b142      	cbz	r2, 8012f86 <NetworkParams::callbackFunction(char const*)+0xd2>
 8012f74:	ba11      	rev	r1, r2
 8012f76:	43c8      	mvns	r0, r1
 8012f78:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8012f7c:	d103      	bne.n	8012f86 <NetworkParams::callbackFunction(char const*)+0xd2>
 8012f7e:	60e2      	str	r2, [r4, #12]
 8012f80:	f043 0304 	orr.w	r3, r3, #4
 8012f84:	e7e3      	b.n	8012f4e <NetworkParams::callbackFunction(char const*)+0x9a>
 8012f86:	f023 0304 	bic.w	r3, r3, #4
 8012f8a:	e7e0      	b.n	8012f4e <NetworkParams::callbackFunction(char const*)+0x9a>
 8012f8c:	4912      	ldr	r1, [pc, #72]	; (8012fd8 <NetworkParams::callbackFunction(char const*)+0x124>)
 8012f8e:	aa02      	add	r2, sp, #8
 8012f90:	4628      	mov	r0, r5
 8012f92:	f001 ffeb 	bl	8014f6c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012f96:	b928      	cbnz	r0, 8012fa4 <NetworkParams::callbackFunction(char const*)+0xf0>
 8012f98:	9b02      	ldr	r3, [sp, #8]
 8012f9a:	6123      	str	r3, [r4, #16]
 8012f9c:	6863      	ldr	r3, [r4, #4]
 8012f9e:	f043 0308 	orr.w	r3, r3, #8
 8012fa2:	e7d4      	b.n	8012f4e <NetworkParams::callbackFunction(char const*)+0x9a>
 8012fa4:	233f      	movs	r3, #63	; 0x3f
 8012fa6:	9303      	str	r3, [sp, #12]
 8012fa8:	490c      	ldr	r1, [pc, #48]	; (8012fdc <NetworkParams::callbackFunction(char const*)+0x128>)
 8012faa:	ab03      	add	r3, sp, #12
 8012fac:	f104 0219 	add.w	r2, r4, #25
 8012fb0:	4628      	mov	r0, r5
 8012fb2:	f001 ff67 	bl	8014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8012fb6:	2800      	cmp	r0, #0
 8012fb8:	d192      	bne.n	8012ee0 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012fba:	9b03      	ldr	r3, [sp, #12]
 8012fbc:	4423      	add	r3, r4
 8012fbe:	7658      	strb	r0, [r3, #25]
 8012fc0:	6863      	ldr	r3, [r4, #4]
 8012fc2:	f043 0320 	orr.w	r3, r3, #32
 8012fc6:	e7c2      	b.n	8012f4e <NetworkParams::callbackFunction(char const*)+0x9a>
 8012fc8:	0801b19c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip, sp, pc}
 8012fcc:	0801b17a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp, pc}
 8012fd0:	0801b15f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, ip, sp, pc}
 8012fd4:	0801b193 	stmdaeq	r1, {r0, r1, r4, r7, r8, ip, sp, pc}
 8012fd8:	0801b16a 	stmdaeq	r1, {r1, r3, r5, r6, r8, ip, sp, pc}
 8012fdc:	0801b18a 	stmdaeq	r1, {r1, r3, r7, r8, ip, sp, pc}

08012fe0 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8012fe0:	f7ff bf68 	b.w	8012eb4 <NetworkParams::callbackFunction(char const*)>

08012fe4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8012fe4:	b570      	push	{r4, r5, r6, lr}
 8012fe6:	4604      	mov	r4, r0
 8012fe8:	b086      	sub	sp, #24
 8012fea:	4615      	mov	r5, r2
 8012fec:	461e      	mov	r6, r3
 8012fee:	3004      	adds	r0, #4
 8012ff0:	2900      	cmp	r1, #0
 8012ff2:	d02a      	beq.n	801304a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x66>
 8012ff4:	225e      	movs	r2, #94	; 0x5e
 8012ff6:	f002 fefa 	bl	8015dee <memmove>
 8012ffa:	462a      	mov	r2, r5
 8012ffc:	4633      	mov	r3, r6
 8012ffe:	496f      	ldr	r1, [pc, #444]	; (80131bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>)
 8013000:	a803      	add	r0, sp, #12
 8013002:	f001 fe67 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8013006:	6863      	ldr	r3, [r4, #4]
 8013008:	079a      	lsls	r2, r3, #30
 801300a:	bf5f      	itttt	pl
 801300c:	4a6c      	ldrpl	r2, [pc, #432]	; (80131c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 801300e:	6812      	ldrpl	r2, [r2, #0]
 8013010:	6952      	ldrpl	r2, [r2, #20]
 8013012:	60a2      	strpl	r2, [r4, #8]
 8013014:	075e      	lsls	r6, r3, #29
 8013016:	bf5f      	itttt	pl
 8013018:	4a69      	ldrpl	r2, [pc, #420]	; (80131c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 801301a:	6812      	ldrpl	r2, [r2, #0]
 801301c:	69d2      	ldrpl	r2, [r2, #28]
 801301e:	60e2      	strpl	r2, [r4, #12]
 8013020:	071d      	lsls	r5, r3, #28
 8013022:	bf5f      	itttt	pl
 8013024:	4a66      	ldrpl	r2, [pc, #408]	; (80131c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013026:	6812      	ldrpl	r2, [r2, #0]
 8013028:	6992      	ldrpl	r2, [r2, #24]
 801302a:	6122      	strpl	r2, [r4, #16]
 801302c:	0698      	lsls	r0, r3, #26
 801302e:	f104 0519 	add.w	r5, r4, #25
 8013032:	d418      	bmi.n	8013066 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8013034:	4b62      	ldr	r3, [pc, #392]	; (80131c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013036:	681b      	ldr	r3, [r3, #0]
 8013038:	4628      	mov	r0, r5
 801303a:	331f      	adds	r3, #31
 801303c:	223f      	movs	r2, #63	; 0x3f
 801303e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013042:	b949      	cbnz	r1, 8013058 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 8013044:	f002 feea 	bl	8015e1c <memset>
 8013048:	e00a      	b.n	8013060 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 801304a:	6823      	ldr	r3, [r4, #0]
 801304c:	681a      	ldr	r2, [r3, #0]
 801304e:	4601      	mov	r1, r0
 8013050:	68d2      	ldr	r2, [r2, #12]
 8013052:	4618      	mov	r0, r3
 8013054:	4790      	blx	r2
 8013056:	e7d0      	b.n	8012ffa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8013058:	3a01      	subs	r2, #1
 801305a:	f800 1b01 	strb.w	r1, [r0], #1
 801305e:	d1ee      	bne.n	801303e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 8013060:	2300      	movs	r3, #0
 8013062:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8013066:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801306a:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 801306e:	7e23      	ldrb	r3, [r4, #24]
 8013070:	6861      	ldr	r1, [r4, #4]
 8013072:	42b2      	cmp	r2, r6
 8013074:	d21a      	bcs.n	80130ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 8013076:	9803      	ldr	r0, [sp, #12]
 8013078:	07c9      	lsls	r1, r1, #31
 801307a:	4410      	add	r0, r2
 801307c:	eba6 0602 	sub.w	r6, r6, r2
 8013080:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013084:	d404      	bmi.n	8013090 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8013086:	b922      	cbnz	r2, 8013092 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8013088:	9300      	str	r3, [sp, #0]
 801308a:	4a4e      	ldr	r2, [pc, #312]	; (80131c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801308c:	4b4e      	ldr	r3, [pc, #312]	; (80131c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 801308e:	e003      	b.n	8013098 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8013090:	b312      	cbz	r2, 80130d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf4>
 8013092:	9300      	str	r3, [sp, #0]
 8013094:	4a4d      	ldr	r2, [pc, #308]	; (80131cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8013096:	4b4c      	ldr	r3, [pc, #304]	; (80131c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8013098:	4631      	mov	r1, r6
 801309a:	f7f7 fa1d 	bl	800a4d8 <snprintf>
 801309e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80130a2:	4286      	cmp	r6, r0
 80130a4:	bfa4      	itt	ge
 80130a6:	181b      	addge	r3, r3, r0
 80130a8:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80130ac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80130b0:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80130b4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80130b8:	6861      	ldr	r1, [r4, #4]
 80130ba:	42b2      	cmp	r2, r6
 80130bc:	d21f      	bcs.n	80130fe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11a>
 80130be:	9803      	ldr	r0, [sp, #12]
 80130c0:	05c9      	lsls	r1, r1, #23
 80130c2:	4410      	add	r0, r2
 80130c4:	eba6 0602 	sub.w	r6, r6, r2
 80130c8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80130cc:	d408      	bmi.n	80130e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 80130ce:	b94a      	cbnz	r2, 80130e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x100>
 80130d0:	9300      	str	r3, [sp, #0]
 80130d2:	4a3c      	ldr	r2, [pc, #240]	; (80131c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 80130d4:	4b3e      	ldr	r3, [pc, #248]	; (80131d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80130d6:	e008      	b.n	80130ea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80130d8:	9300      	str	r3, [sp, #0]
 80130da:	4a3e      	ldr	r2, [pc, #248]	; (80131d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80130dc:	4b3a      	ldr	r3, [pc, #232]	; (80131c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 80130de:	e7db      	b.n	8013098 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 80130e0:	2a00      	cmp	r2, #0
 80130e2:	d03c      	beq.n	801315e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17a>
 80130e4:	9300      	str	r3, [sp, #0]
 80130e6:	4a39      	ldr	r2, [pc, #228]	; (80131cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 80130e8:	4b39      	ldr	r3, [pc, #228]	; (80131d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80130ea:	4631      	mov	r1, r6
 80130ec:	f7f7 f9f4 	bl	800a4d8 <snprintf>
 80130f0:	4286      	cmp	r6, r0
 80130f2:	bfa2      	ittt	ge
 80130f4:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80130f8:	18c0      	addge	r0, r0, r3
 80130fa:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80130fe:	4936      	ldr	r1, [pc, #216]	; (80131d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8013100:	a803      	add	r0, sp, #12
 8013102:	f001 fe6d 	bl	8014de0 <PropertiesBuilder::AddComment(char const*)>
 8013106:	6863      	ldr	r3, [r4, #4]
 8013108:	68a2      	ldr	r2, [r4, #8]
 801310a:	4934      	ldr	r1, [pc, #208]	; (80131dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 801310c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8013110:	a803      	add	r0, sp, #12
 8013112:	f001 fe21 	bl	8014d58 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013116:	6863      	ldr	r3, [r4, #4]
 8013118:	68e2      	ldr	r2, [r4, #12]
 801311a:	4931      	ldr	r1, [pc, #196]	; (80131e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 801311c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8013120:	a803      	add	r0, sp, #12
 8013122:	f001 fe19 	bl	8014d58 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013126:	6863      	ldr	r3, [r4, #4]
 8013128:	6922      	ldr	r2, [r4, #16]
 801312a:	492e      	ldr	r1, [pc, #184]	; (80131e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 801312c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8013130:	a803      	add	r0, sp, #12
 8013132:	f001 fe11 	bl	8014d58 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013136:	6862      	ldr	r2, [r4, #4]
 8013138:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801313c:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8013140:	42a3      	cmp	r3, r4
 8013142:	d21e      	bcs.n	8013182 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 8013144:	9803      	ldr	r0, [sp, #12]
 8013146:	0692      	lsls	r2, r2, #26
 8013148:	4418      	add	r0, r3
 801314a:	eba4 0403 	sub.w	r4, r4, r3
 801314e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013152:	d408      	bmi.n	8013166 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x182>
 8013154:	b943      	cbnz	r3, 8013168 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 8013156:	4b24      	ldr	r3, [pc, #144]	; (80131e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8013158:	4a24      	ldr	r2, [pc, #144]	; (80131ec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 801315a:	9500      	str	r5, [sp, #0]
 801315c:	e007      	b.n	801316e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 801315e:	9300      	str	r3, [sp, #0]
 8013160:	4a1c      	ldr	r2, [pc, #112]	; (80131d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8013162:	4b1b      	ldr	r3, [pc, #108]	; (80131d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8013164:	e7c1      	b.n	80130ea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8013166:	b32b      	cbz	r3, 80131b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d0>
 8013168:	4b1f      	ldr	r3, [pc, #124]	; (80131e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 801316a:	4a21      	ldr	r2, [pc, #132]	; (80131f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 801316c:	9500      	str	r5, [sp, #0]
 801316e:	4621      	mov	r1, r4
 8013170:	f7f7 f9b2 	bl	800a4d8 <snprintf>
 8013174:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013178:	4284      	cmp	r4, r0
 801317a:	bfa4      	itt	ge
 801317c:	181b      	addge	r3, r3, r0
 801317e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013182:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013186:	b17b      	cbz	r3, 80131a8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 8013188:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801318c:	9b03      	ldr	r3, [sp, #12]
 801318e:	4413      	add	r3, r2
 8013190:	227d      	movs	r2, #125	; 0x7d
 8013192:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013196:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801319a:	9903      	ldr	r1, [sp, #12]
 801319c:	54ca      	strb	r2, [r1, r3]
 801319e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80131a2:	3301      	adds	r3, #1
 80131a4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80131a8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80131ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80131ae:	601a      	str	r2, [r3, #0]
 80131b0:	b006      	add	sp, #24
 80131b2:	bd70      	pop	{r4, r5, r6, pc}
 80131b4:	4b0c      	ldr	r3, [pc, #48]	; (80131e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 80131b6:	4a0f      	ldr	r2, [pc, #60]	; (80131f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 80131b8:	9500      	str	r5, [sp, #0]
 80131ba:	e7d8      	b.n	801316e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 80131bc:	0801b1a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, ip, sp, pc}
 80131c0:	2000f994 	mulcs	r0, r4, r9
 80131c4:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 80131c8:	0801b19c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip, sp, pc}
 80131cc:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 80131d0:	0801b17a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp, pc}
 80131d4:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}
 80131d8:	0801b155 	stmdaeq	r1, {r0, r2, r4, r6, r8, ip, sp, pc}
 80131dc:	0801b15f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, ip, sp, pc}
 80131e0:	0801b193 	stmdaeq	r1, {r0, r1, r4, r7, r8, ip, sp, pc}
 80131e4:	0801b16a 	stmdaeq	r1, {r1, r3, r5, r6, r8, ip, sp, pc}
 80131e8:	0801b18a 	stmdaeq	r1, {r1, r3, r7, r8, ip, sp, pc}
 80131ec:	08018c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, pc}
 80131f0:	08018c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, pc}
 80131f4:	08018c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, pc}

080131f8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 80131f8:	b513      	push	{r0, r1, r4, lr}
 80131fa:	6804      	ldr	r4, [r0, #0]
 80131fc:	b914      	cbnz	r4, 8013204 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80131fe:	601c      	str	r4, [r3, #0]
 8013200:	b002      	add	sp, #8
 8013202:	bd10      	pop	{r4, pc}
 8013204:	9300      	str	r3, [sp, #0]
 8013206:	4613      	mov	r3, r2
 8013208:	460a      	mov	r2, r1
 801320a:	2100      	movs	r1, #0
 801320c:	f7ff feea 	bl	8012fe4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8013210:	e7f6      	b.n	8013200 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08013212 <NetworkParams::Dump()>:
 8013212:	4770      	bx	lr

08013214 <memcpy.isra.0>:
 8013214:	3801      	subs	r0, #1
 8013216:	440a      	add	r2, r1
 8013218:	4291      	cmp	r1, r2
 801321a:	d100      	bne.n	801321e <memcpy.isra.0+0xa>
 801321c:	4770      	bx	lr
 801321e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013222:	f800 3f01 	strb.w	r3, [r0, #1]!
 8013226:	e7f7      	b.n	8013218 <memcpy.isra.0+0x4>

08013228 <arp_announce>:
 8013228:	4803      	ldr	r0, [pc, #12]	; (8013238 <arp_announce+0x10>)
 801322a:	69c3      	ldr	r3, [r0, #28]
 801322c:	b113      	cbz	r3, 8013234 <arp_announce+0xc>
 801322e:	212a      	movs	r1, #42	; 0x2a
 8013230:	f004 b9c2 	b.w	80175b8 <emac_eth_send>
 8013234:	4770      	bx	lr
 8013236:	bf00      	nop
 8013238:	2000f998 	mulcs	r0, r8, r9

0801323c <arp_handle_request>:
 801323c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801323e:	2204      	movs	r2, #4
 8013240:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8013244:	4604      	mov	r4, r0
 8013246:	eb0d 0002 	add.w	r0, sp, r2
 801324a:	f7ff ffe3 	bl	8013214 <memcpy.isra.0>
 801324e:	4b0d      	ldr	r3, [pc, #52]	; (8013284 <arp_handle_request+0x48>)
 8013250:	9a01      	ldr	r2, [sp, #4]
 8013252:	69db      	ldr	r3, [r3, #28]
 8013254:	429a      	cmp	r2, r3
 8013256:	d113      	bne.n	8013280 <arp_handle_request+0x44>
 8013258:	4d0b      	ldr	r5, [pc, #44]	; (8013288 <arp_handle_request+0x4c>)
 801325a:	2206      	movs	r2, #6
 801325c:	18a1      	adds	r1, r4, r2
 801325e:	4628      	mov	r0, r5
 8013260:	f7ff ffd8 	bl	8013214 <memcpy.isra.0>
 8013264:	f104 0116 	add.w	r1, r4, #22
 8013268:	f105 0020 	add.w	r0, r5, #32
 801326c:	2206      	movs	r2, #6
 801326e:	f7ff ffd1 	bl	8013214 <memcpy.isra.0>
 8013272:	69e3      	ldr	r3, [r4, #28]
 8013274:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8013278:	212a      	movs	r1, #42	; 0x2a
 801327a:	4628      	mov	r0, r5
 801327c:	f004 f99c 	bl	80175b8 <emac_eth_send>
 8013280:	b003      	add	sp, #12
 8013282:	bd30      	pop	{r4, r5, pc}
 8013284:	2000f998 	mulcs	r0, r8, r9
 8013288:	2000f9c4 	andcs	pc, r0, r4, asr #19

0801328c <arp_handle_reply>:
 801328c:	69c1      	ldr	r1, [r0, #28]
 801328e:	3016      	adds	r0, #22
 8013290:	f000 b80a 	b.w	80132a8 <arp_cache_update>

08013294 <arp_send_request>:
 8013294:	4b03      	ldr	r3, [pc, #12]	; (80132a4 <arp_send_request+0x10>)
 8013296:	212a      	movs	r1, #42	; 0x2a
 8013298:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 801329c:	4618      	mov	r0, r3
 801329e:	f004 b98b 	b.w	80175b8 <emac_eth_send>
 80132a2:	bf00      	nop
 80132a4:	2000f9f0 	strdcs	pc, [r0], -r0

080132a8 <arp_cache_update>:
 80132a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80132aa:	4c12      	ldr	r4, [pc, #72]	; (80132f4 <arp_cache_update+0x4c>)
 80132ac:	8823      	ldrh	r3, [r4, #0]
 80132ae:	2b20      	cmp	r3, #32
 80132b0:	d019      	beq.n	80132e6 <arp_cache_update+0x3e>
 80132b2:	2500      	movs	r5, #0
 80132b4:	1d22      	adds	r2, r4, #4
 80132b6:	260c      	movs	r6, #12
 80132b8:	b2af      	uxth	r7, r5
 80132ba:	42bb      	cmp	r3, r7
 80132bc:	d80c      	bhi.n	80132d8 <arp_cache_update+0x30>
 80132be:	fb06 2203 	mla	r2, r6, r3, r2
 80132c2:	3203      	adds	r2, #3
 80132c4:	1d85      	adds	r5, r0, #6
 80132c6:	42a8      	cmp	r0, r5
 80132c8:	d10e      	bne.n	80132e8 <arp_cache_update+0x40>
 80132ca:	220c      	movs	r2, #12
 80132cc:	fb02 4203 	mla	r2, r2, r3, r4
 80132d0:	3301      	adds	r3, #1
 80132d2:	6051      	str	r1, [r2, #4]
 80132d4:	8023      	strh	r3, [r4, #0]
 80132d6:	e006      	b.n	80132e6 <arp_cache_update+0x3e>
 80132d8:	3501      	adds	r5, #1
 80132da:	fb06 2705 	mla	r7, r6, r5, r2
 80132de:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 80132e2:	428f      	cmp	r7, r1
 80132e4:	d1e8      	bne.n	80132b8 <arp_cache_update+0x10>
 80132e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132e8:	f810 6b01 	ldrb.w	r6, [r0], #1
 80132ec:	f802 6f01 	strb.w	r6, [r2, #1]!
 80132f0:	e7e9      	b.n	80132c6 <arp_cache_update+0x1e>
 80132f2:	bf00      	nop
 80132f4:	100011a4 	andne	r1, r0, r4, lsr #3

080132f8 <arp_cache_lookup>:
 80132f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132fc:	f8df 808c 	ldr.w	r8, [pc, #140]	; 801338c <arp_cache_lookup+0x94>
 8013300:	4606      	mov	r6, r0
 8013302:	460c      	mov	r4, r1
 8013304:	2200      	movs	r2, #0
 8013306:	200c      	movs	r0, #12
 8013308:	fb00 f302 	mul.w	r3, r0, r2
 801330c:	f853 1008 	ldr.w	r1, [r3, r8]
 8013310:	42b1      	cmp	r1, r6
 8013312:	d10d      	bne.n	8013330 <arp_cache_lookup+0x38>
 8013314:	3304      	adds	r3, #4
 8013316:	4443      	add	r3, r8
 8013318:	3c01      	subs	r4, #1
 801331a:	1d9a      	adds	r2, r3, #6
 801331c:	4293      	cmp	r3, r2
 801331e:	d102      	bne.n	8013326 <arp_cache_lookup+0x2e>
 8013320:	4630      	mov	r0, r6
 8013322:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013326:	f813 1b01 	ldrb.w	r1, [r3], #1
 801332a:	f804 1f01 	strb.w	r1, [r4, #1]!
 801332e:	e7f5      	b.n	801331c <arp_cache_lookup+0x24>
 8013330:	b111      	cbz	r1, 8013338 <arp_cache_lookup+0x40>
 8013332:	3201      	adds	r2, #1
 8013334:	2a20      	cmp	r2, #32
 8013336:	d1e7      	bne.n	8013308 <arp_cache_lookup+0x10>
 8013338:	f8df a054 	ldr.w	sl, [pc, #84]	; 8013390 <arp_cache_lookup+0x98>
 801333c:	f8ba 5000 	ldrh.w	r5, [sl]
 8013340:	2704      	movs	r7, #4
 8013342:	3f01      	subs	r7, #1
 8013344:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8013348:	d101      	bne.n	801334e <arp_cache_lookup+0x56>
 801334a:	463e      	mov	r6, r7
 801334c:	e7e8      	b.n	8013320 <arp_cache_lookup+0x28>
 801334e:	4630      	mov	r0, r6
 8013350:	f7ff ffa0 	bl	8013294 <arp_send_request>
 8013354:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8013358:	f1b9 0901 	subs.w	r9, r9, #1
 801335c:	f8ba 3000 	ldrh.w	r3, [sl]
 8013360:	d011      	beq.n	8013386 <arp_cache_lookup+0x8e>
 8013362:	429d      	cmp	r5, r3
 8013364:	d00c      	beq.n	8013380 <arp_cache_lookup+0x88>
 8013366:	230c      	movs	r3, #12
 8013368:	fb03 8505 	mla	r5, r3, r5, r8
 801336c:	1d2b      	adds	r3, r5, #4
 801336e:	3c01      	subs	r4, #1
 8013370:	350a      	adds	r5, #10
 8013372:	42ab      	cmp	r3, r5
 8013374:	d0d4      	beq.n	8013320 <arp_cache_lookup+0x28>
 8013376:	f813 2b01 	ldrb.w	r2, [r3], #1
 801337a:	f804 2f01 	strb.w	r2, [r4, #1]!
 801337e:	e7f8      	b.n	8013372 <arp_cache_lookup+0x7a>
 8013380:	f7f5 f8f0 	bl	8008564 <net_handle>
 8013384:	e7e8      	b.n	8013358 <arp_cache_lookup+0x60>
 8013386:	429d      	cmp	r5, r3
 8013388:	d0db      	beq.n	8013342 <arp_cache_lookup+0x4a>
 801338a:	e7ec      	b.n	8013366 <arp_cache_lookup+0x6e>
 801338c:	100011a8 	andne	r1, r0, r8, lsr #3
 8013390:	100011a4 	andne	r1, r0, r4, lsr #3

08013394 <_parse_response>:
 8013394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013398:	2400      	movs	r4, #0
 801339a:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 801339e:	4e52      	ldr	r6, [pc, #328]	; (80134e8 <_parse_response+0x154>)
 80133a0:	9009      	str	r0, [sp, #36]	; 0x24
 80133a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80133a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
 80133aa:	6833      	ldr	r3, [r6, #0]
 80133ac:	9402      	str	r4, [sp, #8]
 80133ae:	460d      	mov	r5, r1
 80133b0:	46a3      	mov	fp, r4
 80133b2:	4627      	mov	r7, r4
 80133b4:	46a2      	mov	sl, r4
 80133b6:	46a1      	mov	r9, r4
 80133b8:	9407      	str	r4, [sp, #28]
 80133ba:	46a0      	mov	r8, r4
 80133bc:	9308      	str	r3, [sp, #32]
 80133be:	f7f5 f8d1 	bl	8008564 <net_handle>
 80133c2:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80133c6:	9300      	str	r3, [sp, #0]
 80133c8:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 80133cc:	ab0c      	add	r3, sp, #48	; 0x30
 80133ce:	f44f 7209 	mov.w	r2, #548	; 0x224
 80133d2:	a90d      	add	r1, sp, #52	; 0x34
 80133d4:	f7fe fd10 	bl	8011df8 <udp_recv>
 80133d8:	2800      	cmp	r0, #0
 80133da:	d040      	beq.n	801345e <_parse_response+0xca>
 80133dc:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80133e0:	2b43      	cmp	r3, #67	; 0x43
 80133e2:	d13c      	bne.n	801345e <_parse_response+0xca>
 80133e4:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 80133e8:	1e6b      	subs	r3, r5, #1
 80133ea:	1d69      	adds	r1, r5, #5
 80133ec:	4299      	cmp	r1, r3
 80133ee:	d130      	bne.n	8013452 <_parse_response+0xbe>
 80133f0:	2500      	movs	r5, #0
 80133f2:	ab0d      	add	r3, sp, #52	; 0x34
 80133f4:	4418      	add	r0, r3
 80133f6:	46ac      	mov	ip, r5
 80133f8:	462e      	mov	r6, r5
 80133fa:	ab49      	add	r3, sp, #292	; 0x124
 80133fc:	4629      	mov	r1, r5
 80133fe:	4283      	cmp	r3, r0
 8013400:	d338      	bcc.n	8013474 <_parse_response+0xe0>
 8013402:	b145      	cbz	r5, 8013416 <_parse_response+0x82>
 8013404:	4b39      	ldr	r3, [pc, #228]	; (80134ec <_parse_response+0x158>)
 8013406:	9a07      	ldr	r2, [sp, #28]
 8013408:	709a      	strb	r2, [r3, #2]
 801340a:	9a06      	ldr	r2, [sp, #24]
 801340c:	705a      	strb	r2, [r3, #1]
 801340e:	9a05      	ldr	r2, [sp, #20]
 8013410:	f883 8003 	strb.w	r8, [r3, #3]
 8013414:	701a      	strb	r2, [r3, #0]
 8013416:	f1bc 0f00 	cmp.w	ip, #0
 801341a:	d007      	beq.n	801342c <_parse_response+0x98>
 801341c:	4b34      	ldr	r3, [pc, #208]	; (80134f0 <_parse_response+0x15c>)
 801341e:	9a04      	ldr	r2, [sp, #16]
 8013420:	70da      	strb	r2, [r3, #3]
 8013422:	9a03      	ldr	r2, [sp, #12]
 8013424:	709a      	strb	r2, [r3, #2]
 8013426:	9a02      	ldr	r2, [sp, #8]
 8013428:	705c      	strb	r4, [r3, #1]
 801342a:	701a      	strb	r2, [r3, #0]
 801342c:	b13e      	cbz	r6, 801343e <_parse_response+0xaa>
 801342e:	4b31      	ldr	r3, [pc, #196]	; (80134f4 <_parse_response+0x160>)
 8013430:	70df      	strb	r7, [r3, #3]
 8013432:	f883 a002 	strb.w	sl, [r3, #2]
 8013436:	f883 9001 	strb.w	r9, [r3, #1]
 801343a:	f883 b000 	strb.w	fp, [r3]
 801343e:	2902      	cmp	r1, #2
 8013440:	bf02      	ittt	eq
 8013442:	4b2d      	ldreq	r3, [pc, #180]	; (80134f8 <_parse_response+0x164>)
 8013444:	9a11      	ldreq	r2, [sp, #68]	; 0x44
 8013446:	601a      	streq	r2, [r3, #0]
 8013448:	4608      	mov	r0, r1
 801344a:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 801344e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013452:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8013456:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 801345a:	45e6      	cmp	lr, ip
 801345c:	d0c6      	beq.n	80133ec <_parse_response+0x58>
 801345e:	6833      	ldr	r3, [r6, #0]
 8013460:	9a08      	ldr	r2, [sp, #32]
 8013462:	1a9b      	subs	r3, r3, r2
 8013464:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8013468:	d3a9      	bcc.n	80133be <_parse_response+0x2a>
 801346a:	2800      	cmp	r0, #0
 801346c:	d1c0      	bne.n	80133f0 <_parse_response+0x5c>
 801346e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013472:	e7ea      	b.n	801344a <_parse_response+0xb6>
 8013474:	781a      	ldrb	r2, [r3, #0]
 8013476:	2a35      	cmp	r2, #53	; 0x35
 8013478:	d011      	beq.n	801349e <_parse_response+0x10a>
 801347a:	d808      	bhi.n	801348e <_parse_response+0xfa>
 801347c:	2a01      	cmp	r2, #1
 801347e:	d011      	beq.n	80134a4 <_parse_response+0x110>
 8013480:	2a03      	cmp	r2, #3
 8013482:	d019      	beq.n	80134b8 <_parse_response+0x124>
 8013484:	b14a      	cbz	r2, 801349a <_parse_response+0x106>
 8013486:	1c9a      	adds	r2, r3, #2
 8013488:	785b      	ldrb	r3, [r3, #1]
 801348a:	4413      	add	r3, r2
 801348c:	e7b7      	b.n	80133fe <_parse_response+0x6a>
 801348e:	2a36      	cmp	r2, #54	; 0x36
 8013490:	d01f      	beq.n	80134d2 <_parse_response+0x13e>
 8013492:	2aff      	cmp	r2, #255	; 0xff
 8013494:	d1f7      	bne.n	8013486 <_parse_response+0xf2>
 8013496:	4603      	mov	r3, r0
 8013498:	e7b1      	b.n	80133fe <_parse_response+0x6a>
 801349a:	3301      	adds	r3, #1
 801349c:	e7af      	b.n	80133fe <_parse_response+0x6a>
 801349e:	7899      	ldrb	r1, [r3, #2]
 80134a0:	3303      	adds	r3, #3
 80134a2:	e7ac      	b.n	80133fe <_parse_response+0x6a>
 80134a4:	f893 b002 	ldrb.w	fp, [r3, #2]
 80134a8:	f893 9003 	ldrb.w	r9, [r3, #3]
 80134ac:	f893 a004 	ldrb.w	sl, [r3, #4]
 80134b0:	795f      	ldrb	r7, [r3, #5]
 80134b2:	4616      	mov	r6, r2
 80134b4:	3306      	adds	r3, #6
 80134b6:	e7a2      	b.n	80133fe <_parse_response+0x6a>
 80134b8:	789a      	ldrb	r2, [r3, #2]
 80134ba:	9202      	str	r2, [sp, #8]
 80134bc:	791a      	ldrb	r2, [r3, #4]
 80134be:	9203      	str	r2, [sp, #12]
 80134c0:	795a      	ldrb	r2, [r3, #5]
 80134c2:	9204      	str	r2, [sp, #16]
 80134c4:	785a      	ldrb	r2, [r3, #1]
 80134c6:	78dc      	ldrb	r4, [r3, #3]
 80134c8:	4413      	add	r3, r2
 80134ca:	3302      	adds	r3, #2
 80134cc:	f04f 0c01 	mov.w	ip, #1
 80134d0:	e795      	b.n	80133fe <_parse_response+0x6a>
 80134d2:	789a      	ldrb	r2, [r3, #2]
 80134d4:	9205      	str	r2, [sp, #20]
 80134d6:	78da      	ldrb	r2, [r3, #3]
 80134d8:	9206      	str	r2, [sp, #24]
 80134da:	791a      	ldrb	r2, [r3, #4]
 80134dc:	f893 8005 	ldrb.w	r8, [r3, #5]
 80134e0:	9207      	str	r2, [sp, #28]
 80134e2:	3306      	adds	r3, #6
 80134e4:	2501      	movs	r5, #1
 80134e6:	e78a      	b.n	80133fe <_parse_response+0x6a>
 80134e8:	2000fd94 	mulcs	r0, r4, sp
 80134ec:	2000fc4c 	andcs	pc, r0, ip, asr #24
 80134f0:	2000fa1c 	andcs	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
 80134f4:	2000fa24 	andcs	pc, r0, r4, lsr #20
 80134f8:	2000fa20 	andcs	pc, r0, r0, lsr #20

080134fc <memcpy.isra.0>:
 80134fc:	3801      	subs	r0, #1
 80134fe:	440a      	add	r2, r1
 8013500:	4291      	cmp	r1, r2
 8013502:	d100      	bne.n	8013506 <memcpy.isra.0+0xa>
 8013504:	4770      	bx	lr
 8013506:	f811 3b01 	ldrb.w	r3, [r1], #1
 801350a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801350e:	e7f7      	b.n	8013500 <memcpy.isra.0+0x4>

08013510 <dhcp_client>:
 8013510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013514:	b087      	sub	sp, #28
 8013516:	460f      	mov	r7, r1
 8013518:	9203      	str	r2, [sp, #12]
 801351a:	4a77      	ldr	r2, [pc, #476]	; (80136f8 <dhcp_client+0x1e8>)
 801351c:	4605      	mov	r5, r0
 801351e:	f44f 7309 	mov.w	r3, #548	; 0x224
 8013522:	4614      	mov	r4, r2
 8013524:	2100      	movs	r1, #0
 8013526:	3b01      	subs	r3, #1
 8013528:	f802 1b01 	strb.w	r1, [r2], #1
 801352c:	d1fb      	bne.n	8013526 <dhcp_client+0x16>
 801352e:	f240 1301 	movw	r3, #257	; 0x101
 8013532:	2206      	movs	r2, #6
 8013534:	4871      	ldr	r0, [pc, #452]	; (80136fc <dhcp_client+0x1ec>)
 8013536:	8023      	strh	r3, [r4, #0]
 8013538:	4629      	mov	r1, r5
 801353a:	70a2      	strb	r2, [r4, #2]
 801353c:	f7ff ffde 	bl	80134fc <memcpy.isra.0>
 8013540:	4b6f      	ldr	r3, [pc, #444]	; (8013700 <dhcp_client+0x1f0>)
 8013542:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8013546:	f240 1335 	movw	r3, #309	; 0x135
 801354a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 801354e:	2044      	movs	r0, #68	; 0x44
 8013550:	f7fe fc18 	bl	8011d84 <udp_bind>
 8013554:	1e06      	subs	r6, r0, #0
 8013556:	f2c0 80c9 	blt.w	80136ec <dhcp_client+0x1dc>
 801355a:	f8df a19c 	ldr.w	sl, [pc, #412]	; 80136f8 <dhcp_client+0x1e8>
 801355e:	f04f 0915 	mov.w	r9, #21
 8013562:	f1b9 0901 	subs.w	r9, r9, #1
 8013566:	d11f      	bne.n	80135a8 <dhcp_client+0x98>
 8013568:	464c      	mov	r4, r9
 801356a:	2044      	movs	r0, #68	; 0x44
 801356c:	f7fe fc24 	bl	8011db8 <udp_unbind>
 8013570:	2c00      	cmp	r4, #0
 8013572:	f000 80be 	beq.w	80136f2 <dhcp_client+0x1e2>
 8013576:	4963      	ldr	r1, [pc, #396]	; (8013704 <dhcp_client+0x1f4>)
 8013578:	2204      	movs	r2, #4
 801357a:	a805      	add	r0, sp, #20
 801357c:	f7ff ffbe 	bl	80134fc <memcpy.isra.0>
 8013580:	9b05      	ldr	r3, [sp, #20]
 8013582:	4961      	ldr	r1, [pc, #388]	; (8013708 <dhcp_client+0x1f8>)
 8013584:	603b      	str	r3, [r7, #0]
 8013586:	2204      	movs	r2, #4
 8013588:	a805      	add	r0, sp, #20
 801358a:	f7ff ffb7 	bl	80134fc <memcpy.isra.0>
 801358e:	9b05      	ldr	r3, [sp, #20]
 8013590:	60bb      	str	r3, [r7, #8]
 8013592:	a805      	add	r0, sp, #20
 8013594:	495d      	ldr	r1, [pc, #372]	; (801370c <dhcp_client+0x1fc>)
 8013596:	2204      	movs	r2, #4
 8013598:	f7ff ffb0 	bl	80134fc <memcpy.isra.0>
 801359c:	9b05      	ldr	r3, [sp, #20]
 801359e:	607b      	str	r3, [r7, #4]
 80135a0:	2000      	movs	r0, #0
 80135a2:	b007      	add	sp, #28
 80135a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135a8:	f643 5301 	movw	r3, #15617	; 0x3d01
 80135ac:	f240 1807 	movw	r8, #263	; 0x107
 80135b0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80135b4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80135b8:	782b      	ldrb	r3, [r5, #0]
 80135ba:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80135be:	786b      	ldrb	r3, [r5, #1]
 80135c0:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80135c4:	78ab      	ldrb	r3, [r5, #2]
 80135c6:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80135ca:	78eb      	ldrb	r3, [r5, #3]
 80135cc:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80135d0:	792b      	ldrb	r3, [r5, #4]
 80135d2:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 80135d6:	796b      	ldrb	r3, [r5, #5]
 80135d8:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 80135dc:	4a4c      	ldr	r2, [pc, #304]	; (8013710 <dhcp_client+0x200>)
 80135de:	4b4d      	ldr	r3, [pc, #308]	; (8013714 <dhcp_client+0x204>)
 80135e0:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 80135e4:	23ff      	movs	r3, #255	; 0xff
 80135e6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80135ea:	fa5f fb86 	uxtb.w	fp, r6
 80135ee:	2343      	movs	r3, #67	; 0x43
 80135f0:	9300      	str	r3, [sp, #0]
 80135f2:	f240 1205 	movw	r2, #261	; 0x105
 80135f6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80135fa:	4651      	mov	r1, sl
 80135fc:	4658      	mov	r0, fp
 80135fe:	f7fe fc57 	bl	8011eb0 <udp_send>
 8013602:	4629      	mov	r1, r5
 8013604:	4630      	mov	r0, r6
 8013606:	f7ff fec5 	bl	8013394 <_parse_response>
 801360a:	2802      	cmp	r0, #2
 801360c:	d1a9      	bne.n	8013562 <dhcp_client+0x52>
 801360e:	f643 5303 	movw	r3, #15619	; 0x3d03
 8013612:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8013616:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 801361a:	782b      	ldrb	r3, [r5, #0]
 801361c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8013620:	786b      	ldrb	r3, [r5, #1]
 8013622:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8013626:	78ab      	ldrb	r3, [r5, #2]
 8013628:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801362c:	78eb      	ldrb	r3, [r5, #3]
 801362e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8013632:	792b      	ldrb	r3, [r5, #4]
 8013634:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8013638:	796b      	ldrb	r3, [r5, #5]
 801363a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801363e:	f240 4332 	movw	r3, #1074	; 0x432
 8013642:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8013646:	4b2f      	ldr	r3, [pc, #188]	; (8013704 <dhcp_client+0x1f4>)
 8013648:	f8df c0d0 	ldr.w	ip, [pc, #208]	; 801371c <dhcp_client+0x20c>
 801364c:	881a      	ldrh	r2, [r3, #0]
 801364e:	885b      	ldrh	r3, [r3, #2]
 8013650:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8013654:	f240 4336 	movw	r3, #1078	; 0x436
 8013658:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 801365c:	4b2e      	ldr	r3, [pc, #184]	; (8013718 <dhcp_client+0x208>)
 801365e:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8013662:	681b      	ldr	r3, [r3, #0]
 8013664:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8013668:	230c      	movs	r3, #12
 801366a:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 801366e:	9b03      	ldr	r3, [sp, #12]
 8013670:	221e      	movs	r2, #30
 8013672:	1e58      	subs	r0, r3, #1
 8013674:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8013678:	f1a2 0e1e 	sub.w	lr, r2, #30
 801367c:	1c51      	adds	r1, r2, #1
 801367e:	bb8b      	cbnz	r3, 80136e4 <dhcp_client+0x1d4>
 8013680:	18a3      	adds	r3, r4, r2
 8013682:	2037      	movs	r0, #55	; 0x37
 8013684:	4421      	add	r1, r4
 8013686:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 801368a:	2006      	movs	r0, #6
 801368c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8013690:	2103      	movs	r1, #3
 8013692:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8013696:	210f      	movs	r1, #15
 8013698:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 801369c:	213a      	movs	r1, #58	; 0x3a
 801369e:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80136a2:	213b      	movs	r1, #59	; 0x3b
 80136a4:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80136a8:	f04f 0801 	mov.w	r8, #1
 80136ac:	21ff      	movs	r1, #255	; 0xff
 80136ae:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80136b2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 80136b6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 80136ba:	32f5      	adds	r2, #245	; 0xf5
 80136bc:	2343      	movs	r3, #67	; 0x43
 80136be:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 80136c2:	b292      	uxth	r2, r2
 80136c4:	9300      	str	r3, [sp, #0]
 80136c6:	4651      	mov	r1, sl
 80136c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80136cc:	4658      	mov	r0, fp
 80136ce:	f7fe fbef 	bl	8011eb0 <udp_send>
 80136d2:	4629      	mov	r1, r5
 80136d4:	4630      	mov	r0, r6
 80136d6:	f7ff fe5d 	bl	8013394 <_parse_response>
 80136da:	2805      	cmp	r0, #5
 80136dc:	f47f af41 	bne.w	8013562 <dhcp_client+0x52>
 80136e0:	4644      	mov	r4, r8
 80136e2:	e742      	b.n	801356a <dhcp_client+0x5a>
 80136e4:	f80c 3f01 	strb.w	r3, [ip, #1]!
 80136e8:	460a      	mov	r2, r1
 80136ea:	e7c3      	b.n	8013674 <dhcp_client+0x164>
 80136ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80136f0:	e757      	b.n	80135a2 <dhcp_client+0x92>
 80136f2:	f06f 0001 	mvn.w	r0, #1
 80136f6:	e754      	b.n	80135a2 <dhcp_client+0x92>
 80136f8:	2000fa28 	andcs	pc, r0, r8, lsr #20
 80136fc:	2000fa44 	andcs	pc, r0, r4, asr #20
 8013700:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8013704:	2000fa20 	andcs	pc, r0, r0, lsr #20
 8013708:	2000fa1c 	andcs	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
 801370c:	2000fa24 	andcs	pc, r0, r4, lsr #20
 8013710:	03010637 	movweq	r0, #5687	; 0x1637
 8013714:	3b3a0f06 	blcc	8e97334 <__exidx_end+0xe7b274>
 8013718:	2000fc4c 	andcs	pc, r0, ip, asr #24
 801371c:	2000fb31 	andcs	pc, r0, r1, lsr fp	; <UNPREDICTABLE>

08013720 <dhcp_client_release>:
 8013720:	b507      	push	{r0, r1, r2, lr}
 8013722:	2044      	movs	r0, #68	; 0x44
 8013724:	f7fe fb2e 	bl	8011d84 <udp_bind>
 8013728:	4912      	ldr	r1, [pc, #72]	; (8013774 <dhcp_client_release+0x54>)
 801372a:	f243 6307 	movw	r3, #13831	; 0x3607
 801372e:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8013732:	2304      	movs	r3, #4
 8013734:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8013738:	4b0f      	ldr	r3, [pc, #60]	; (8013778 <dhcp_client_release+0x58>)
 801373a:	781a      	ldrb	r2, [r3, #0]
 801373c:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8013740:	785a      	ldrb	r2, [r3, #1]
 8013742:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8013746:	789a      	ldrb	r2, [r3, #2]
 8013748:	78db      	ldrb	r3, [r3, #3]
 801374a:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 801374e:	23ff      	movs	r3, #255	; 0xff
 8013750:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8013754:	2343      	movs	r3, #67	; 0x43
 8013756:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 801375a:	b2c0      	uxtb	r0, r0
 801375c:	9300      	str	r3, [sp, #0]
 801375e:	22fa      	movs	r2, #250	; 0xfa
 8013760:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013764:	f7fe fba4 	bl	8011eb0 <udp_send>
 8013768:	2044      	movs	r0, #68	; 0x44
 801376a:	b003      	add	sp, #12
 801376c:	f85d eb04 	ldr.w	lr, [sp], #4
 8013770:	f7fe bb22 	b.w	8011db8 <udp_unbind>
 8013774:	2000fa28 	andcs	pc, r0, r8, lsr #20
 8013778:	2000fc4c 	andcs	pc, r0, ip, asr #24

0801377c <memcpy.isra.0>:
 801377c:	3801      	subs	r0, #1
 801377e:	440a      	add	r2, r1
 8013780:	4291      	cmp	r1, r2
 8013782:	d100      	bne.n	8013786 <memcpy.isra.0+0xa>
 8013784:	4770      	bx	lr
 8013786:	f811 3b01 	ldrb.w	r3, [r1], #1
 801378a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801378e:	e7f7      	b.n	8013780 <memcpy.isra.0+0x4>

08013790 <_send_report>:
 8013790:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013792:	4c1d      	ldr	r4, [pc, #116]	; (8013808 <_send_report+0x78>)
 8013794:	9001      	str	r0, [sp, #4]
 8013796:	f3c0 2306 	ubfx	r3, r0, #8, #7
 801379a:	70e3      	strb	r3, [r4, #3]
 801379c:	f104 0508 	add.w	r5, r4, #8
 80137a0:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80137a4:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80137a8:	7160      	strb	r0, [r4, #5]
 80137aa:	4621      	mov	r1, r4
 80137ac:	4628      	mov	r0, r5
 80137ae:	2206      	movs	r2, #6
 80137b0:	7123      	strb	r3, [r4, #4]
 80137b2:	f7ff ffe3 	bl	801377c <memcpy.isra.0>
 80137b6:	2204      	movs	r2, #4
 80137b8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80137ba:	8363      	strh	r3, [r4, #26]
 80137bc:	eb0d 0102 	add.w	r1, sp, r2
 80137c0:	f104 0026 	add.w	r0, r4, #38	; 0x26
 80137c4:	f104 0616 	add.w	r6, r4, #22
 80137c8:	f7ff ffd8 	bl	801377c <memcpy.isra.0>
 80137cc:	2700      	movs	r7, #0
 80137ce:	2118      	movs	r1, #24
 80137d0:	4630      	mov	r0, r6
 80137d2:	8427      	strh	r7, [r4, #32]
 80137d4:	f000 f8bf 	bl	8013956 <net_chksum>
 80137d8:	2204      	movs	r2, #4
 80137da:	eb0d 0102 	add.w	r1, sp, r2
 80137de:	8420      	strh	r0, [r4, #32]
 80137e0:	f104 0032 	add.w	r0, r4, #50	; 0x32
 80137e4:	f7ff ffca 	bl	801377c <memcpy.isra.0>
 80137e8:	2120      	movs	r1, #32
 80137ea:	4630      	mov	r0, r6
 80137ec:	8627      	strh	r7, [r4, #48]	; 0x30
 80137ee:	f000 f8b2 	bl	8013956 <net_chksum>
 80137f2:	212e      	movs	r1, #46	; 0x2e
 80137f4:	8620      	strh	r0, [r4, #48]	; 0x30
 80137f6:	4628      	mov	r0, r5
 80137f8:	f003 fede 	bl	80175b8 <emac_eth_send>
 80137fc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80137fe:	3301      	adds	r3, #1
 8013800:	8723      	strh	r3, [r4, #56]	; 0x38
 8013802:	b003      	add	sp, #12
 8013804:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013806:	bf00      	nop
 8013808:	10001328 	andne	r1, r0, r8, lsr #6

0801380c <igmp_set_ip>:
 801380c:	b513      	push	{r0, r1, r4, lr}
 801380e:	4c09      	ldr	r4, [pc, #36]	; (8013834 <igmp_set_ip+0x28>)
 8013810:	6803      	ldr	r3, [r0, #0]
 8013812:	9301      	str	r3, [sp, #4]
 8013814:	2204      	movs	r2, #4
 8013816:	eb0d 0102 	add.w	r1, sp, r2
 801381a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 801381e:	f7ff ffad 	bl	801377c <memcpy.isra.0>
 8013822:	2204      	movs	r2, #4
 8013824:	eb0d 0102 	add.w	r1, sp, r2
 8013828:	f104 0056 	add.w	r0, r4, #86	; 0x56
 801382c:	f7ff ffa6 	bl	801377c <memcpy.isra.0>
 8013830:	b002      	add	sp, #8
 8013832:	bd10      	pop	{r4, pc}
 8013834:	10001328 	andne	r1, r0, r8, lsr #6

08013838 <igmp_timer>:
 8013838:	b570      	push	{r4, r5, r6, lr}
 801383a:	4c0b      	ldr	r4, [pc, #44]	; (8013868 <igmp_timer+0x30>)
 801383c:	2500      	movs	r5, #0
 801383e:	2602      	movs	r6, #2
 8013840:	7963      	ldrb	r3, [r4, #5]
 8013842:	2b01      	cmp	r3, #1
 8013844:	d109      	bne.n	801385a <igmp_timer+0x22>
 8013846:	7923      	ldrb	r3, [r4, #4]
 8013848:	b13b      	cbz	r3, 801385a <igmp_timer+0x22>
 801384a:	3b01      	subs	r3, #1
 801384c:	b2db      	uxtb	r3, r3
 801384e:	7123      	strb	r3, [r4, #4]
 8013850:	b91b      	cbnz	r3, 801385a <igmp_timer+0x22>
 8013852:	6820      	ldr	r0, [r4, #0]
 8013854:	f7ff ff9c 	bl	8013790 <_send_report>
 8013858:	7166      	strb	r6, [r4, #5]
 801385a:	3501      	adds	r5, #1
 801385c:	2d46      	cmp	r5, #70	; 0x46
 801385e:	f104 0408 	add.w	r4, r4, #8
 8013862:	d1ed      	bne.n	8013840 <igmp_timer+0x8>
 8013864:	bd70      	pop	{r4, r5, r6, pc}
 8013866:	bf00      	nop
 8013868:	10001394 	mulne	r0, r4, r3

0801386c <igmp_join>:
 801386c:	b538      	push	{r3, r4, r5, lr}
 801386e:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8013872:	2be0      	cmp	r3, #224	; 0xe0
 8013874:	d11e      	bne.n	80138b4 <igmp_join+0x48>
 8013876:	4a12      	ldr	r2, [pc, #72]	; (80138c0 <igmp_join+0x54>)
 8013878:	f8d2 429c 	ldr.w	r4, [r2, #668]	; 0x29c
 801387c:	2c46      	cmp	r4, #70	; 0x46
 801387e:	d01c      	beq.n	80138ba <igmp_join+0x4e>
 8013880:	2300      	movs	r3, #0
 8013882:	f102 016c 	add.w	r1, r2, #108	; 0x6c
 8013886:	429c      	cmp	r4, r3
 8013888:	dc0e      	bgt.n	80138a8 <igmp_join+0x3c>
 801388a:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
 801388e:	f44f 7181 	mov.w	r1, #258	; 0x102
 8013892:	66d8      	str	r0, [r3, #108]	; 0x6c
 8013894:	f8a3 1070 	strh.w	r1, [r3, #112]	; 0x70
 8013898:	1c63      	adds	r3, r4, #1
 801389a:	f8c2 329c 	str.w	r3, [r2, #668]	; 0x29c
 801389e:	f7ff ff77 	bl	8013790 <_send_report>
 80138a2:	4623      	mov	r3, r4
 80138a4:	4618      	mov	r0, r3
 80138a6:	bd38      	pop	{r3, r4, r5, pc}
 80138a8:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
 80138ac:	4285      	cmp	r5, r0
 80138ae:	d0f9      	beq.n	80138a4 <igmp_join+0x38>
 80138b0:	3301      	adds	r3, #1
 80138b2:	e7e8      	b.n	8013886 <igmp_join+0x1a>
 80138b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80138b8:	e7f4      	b.n	80138a4 <igmp_join+0x38>
 80138ba:	f06f 0301 	mvn.w	r3, #1
 80138be:	e7f1      	b.n	80138a4 <igmp_join+0x38>
 80138c0:	10001328 	andne	r1, r0, r8, lsr #6

080138c4 <igmp_leave>:
 80138c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80138c6:	4c1d      	ldr	r4, [pc, #116]	; (801393c <igmp_leave+0x78>)
 80138c8:	2600      	movs	r6, #0
 80138ca:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80138ce:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 80138d2:	4282      	cmp	r2, r0
 80138d4:	d006      	beq.n	80138e4 <igmp_leave+0x20>
 80138d6:	3601      	adds	r6, #1
 80138d8:	2e46      	cmp	r6, #70	; 0x46
 80138da:	d1f8      	bne.n	80138ce <igmp_leave+0xa>
 80138dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80138e0:	b002      	add	sp, #8
 80138e2:	bd70      	pop	{r4, r5, r6, pc}
 80138e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80138e6:	9001      	str	r0, [sp, #4]
 80138e8:	2500      	movs	r5, #0
 80138ea:	2118      	movs	r1, #24
 80138ec:	f104 0016 	add.w	r0, r4, #22
 80138f0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 80138f4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80138f8:	f000 f82d 	bl	8013956 <net_chksum>
 80138fc:	2204      	movs	r2, #4
 80138fe:	eb0d 0102 	add.w	r1, sp, r2
 8013902:	f8a4 0054 	strh.w	r0, [r4, #84]	; 0x54
 8013906:	f104 0066 	add.w	r0, r4, #102	; 0x66
 801390a:	f7ff ff37 	bl	801377c <memcpy.isra.0>
 801390e:	2120      	movs	r1, #32
 8013910:	f104 004a 	add.w	r0, r4, #74	; 0x4a
 8013914:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8013918:	f000 f81d 	bl	8013956 <net_chksum>
 801391c:	212e      	movs	r1, #46	; 0x2e
 801391e:	f8a4 0064 	strh.w	r0, [r4, #100]	; 0x64
 8013922:	4807      	ldr	r0, [pc, #28]	; (8013940 <igmp_leave+0x7c>)
 8013924:	f003 fe48 	bl	80175b8 <emac_eth_send>
 8013928:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801392a:	3301      	adds	r3, #1
 801392c:	8723      	strh	r3, [r4, #56]	; 0x38
 801392e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8013932:	4628      	mov	r0, r5
 8013934:	66e5      	str	r5, [r4, #108]	; 0x6c
 8013936:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 801393a:	e7d1      	b.n	80138e0 <igmp_leave+0x1c>
 801393c:	10001328 	andne	r1, r0, r8, lsr #6
 8013940:	10001364 	andne	r1, r0, r4, ror #6

08013944 <ip_set_ip>:
 8013944:	b510      	push	{r4, lr}
 8013946:	4604      	mov	r4, r0
 8013948:	f7fe f9fc 	bl	8011d44 <udp_set_ip>
 801394c:	4620      	mov	r0, r4
 801394e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013952:	f7ff bf5b 	b.w	801380c <igmp_set_ip>

08013956 <net_chksum>:
 8013956:	f021 0201 	bic.w	r2, r1, #1
 801395a:	b530      	push	{r4, r5, lr}
 801395c:	2300      	movs	r3, #0
 801395e:	1884      	adds	r4, r0, r2
 8013960:	42a0      	cmp	r0, r4
 8013962:	d10b      	bne.n	801397c <net_chksum+0x26>
 8013964:	4291      	cmp	r1, r2
 8013966:	d004      	beq.n	8013972 <net_chksum+0x1c>
 8013968:	7802      	ldrb	r2, [r0, #0]
 801396a:	0212      	lsls	r2, r2, #8
 801396c:	ba52      	rev16	r2, r2
 801396e:	fa13 f382 	uxtah	r3, r3, r2
 8013972:	0c1a      	lsrs	r2, r3, #16
 8013974:	d106      	bne.n	8013984 <net_chksum+0x2e>
 8013976:	43d8      	mvns	r0, r3
 8013978:	b280      	uxth	r0, r0
 801397a:	bd30      	pop	{r4, r5, pc}
 801397c:	f830 5b02 	ldrh.w	r5, [r0], #2
 8013980:	442b      	add	r3, r5
 8013982:	e7ed      	b.n	8013960 <net_chksum+0xa>
 8013984:	fa12 f383 	uxtah	r3, r2, r3
 8013988:	e7f3      	b.n	8013972 <net_chksum+0x1c>

0801398a <net::link_register_read()>:
 801398a:	b507      	push	{r0, r1, r2, lr}
 801398c:	2201      	movs	r2, #1
 801398e:	f10d 0306 	add.w	r3, sp, #6
 8013992:	4611      	mov	r1, r2
 8013994:	2000      	movs	r0, #0
 8013996:	f002 fe41 	bl	801661c <enet_phy_write_read>
 801399a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801399e:	f080 0004 	eor.w	r0, r0, #4
 80139a2:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80139a6:	b003      	add	sp, #12
 80139a8:	f85d fb04 	ldr.w	pc, [sp], #4

080139ac <memcpy.isra.0>:
 80139ac:	3801      	subs	r0, #1
 80139ae:	440a      	add	r2, r1
 80139b0:	4291      	cmp	r1, r2
 80139b2:	d100      	bne.n	80139b6 <memcpy.isra.0+0xa>
 80139b4:	4770      	bx	lr
 80139b6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80139ba:	f800 3f01 	strb.w	r3, [r0, #1]!
 80139be:	e7f7      	b.n	80139b0 <memcpy.isra.0+0x4>

080139c0 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 80139c0:	b430      	push	{r4, r5}
 80139c2:	b168      	cbz	r0, 80139e0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 80139c4:	7905      	ldrb	r5, [r0, #4]
 80139c6:	2300      	movs	r3, #0
 80139c8:	5cd4      	ldrb	r4, [r2, r3]
 80139ca:	b11c      	cbz	r4, 80139d4 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80139cc:	1c5c      	adds	r4, r3, #1
 80139ce:	429d      	cmp	r5, r3
 80139d0:	4623      	mov	r3, r4
 80139d2:	dcf9      	bgt.n	80139c8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 80139d4:	6804      	ldr	r4, [r0, #0]
 80139d6:	69e4      	ldr	r4, [r4, #28]
 80139d8:	b2db      	uxtb	r3, r3
 80139da:	46a4      	mov	ip, r4
 80139dc:	bc30      	pop	{r4, r5}
 80139de:	4760      	bx	ip
 80139e0:	bc30      	pop	{r4, r5}
 80139e2:	4770      	bx	lr

080139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 80139e4:	b110      	cbz	r0, 80139ec <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 80139e6:	6803      	ldr	r3, [r0, #0]
 80139e8:	691b      	ldr	r3, [r3, #16]
 80139ea:	4718      	bx	r3
 80139ec:	4770      	bx	lr
	...

080139f0 <DisplayUdf::DisplayUdf()>:
 80139f0:	b510      	push	{r4, lr}
 80139f2:	4604      	mov	r4, r0
 80139f4:	f001 fc04 	bl	8015200 <Display::Display()>
 80139f8:	2202      	movs	r2, #2
 80139fa:	2300      	movs	r3, #0
 80139fc:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8013a00:	4b05      	ldr	r3, [pc, #20]	; (8013a18 <DisplayUdf::DisplayUdf()+0x28>)
 8013a02:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8013a06:	601c      	str	r4, [r3, #0]
 8013a08:	2301      	movs	r3, #1
 8013a0a:	f802 3f01 	strb.w	r3, [r2, #1]!
 8013a0e:	3301      	adds	r3, #1
 8013a10:	2b15      	cmp	r3, #21
 8013a12:	d1fa      	bne.n	8013a0a <DisplayUdf::DisplayUdf()+0x1a>
 8013a14:	4620      	mov	r0, r4
 8013a16:	bd10      	pop	{r4, pc}
 8013a18:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013a1c <DisplayUdf::SetTitle(char const*, ...)>:
 8013a1c:	b40e      	push	{r1, r2, r3}
 8013a1e:	b517      	push	{r0, r1, r2, r4, lr}
 8013a20:	ab05      	add	r3, sp, #20
 8013a22:	4604      	mov	r4, r0
 8013a24:	f853 2b04 	ldr.w	r2, [r3], #4
 8013a28:	9301      	str	r3, [sp, #4]
 8013a2a:	211f      	movs	r1, #31
 8013a2c:	301c      	adds	r0, #28
 8013a2e:	f7f6 fd6b 	bl	800a508 <vsnprintf>
 8013a32:	4420      	add	r0, r4
 8013a34:	2300      	movs	r3, #0
 8013a36:	7703      	strb	r3, [r0, #28]
 8013a38:	b003      	add	sp, #12
 8013a3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a3e:	b003      	add	sp, #12
 8013a40:	4770      	bx	lr

08013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 8013a42:	1e4b      	subs	r3, r1, #1
 8013a44:	2b05      	cmp	r3, #5
 8013a46:	b530      	push	{r4, r5, lr}
 8013a48:	d80f      	bhi.n	8013a6a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8013a4a:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 8013a4e:	2300      	movs	r3, #0
 8013a50:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8013a54:	428d      	cmp	r5, r1
 8013a56:	d109      	bne.n	8013a6c <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8013a58:	1884      	adds	r4, r0, r2
 8013a5a:	4403      	add	r3, r0
 8013a5c:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8013a60:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8013a64:	4402      	add	r2, r0
 8013a66:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
 8013a6a:	bd30      	pop	{r4, r5, pc}
 8013a6c:	3301      	adds	r3, #1
 8013a6e:	2b14      	cmp	r3, #20
 8013a70:	d1ee      	bne.n	8013a50 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8013a72:	e7f7      	b.n	8013a64 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

08013a74 <DisplayUdf::ShowEmacStart()>:
 8013a74:	b510      	push	{r4, lr}
 8013a76:	4604      	mov	r4, r0
 8013a78:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8013a7c:	6980      	ldr	r0, [r0, #24]
 8013a7e:	f7ff ffb1 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013a82:	4a03      	ldr	r2, [pc, #12]	; (8013a90 <DisplayUdf::ShowEmacStart()+0x1c>)
 8013a84:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013a88:	4620      	mov	r0, r4
 8013a8a:	f7f5 fc0b 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013a8e:	bd10      	pop	{r4, pc}
 8013a90:	0801b1b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, ip, sp, pc}

08013a94 <DisplayUdf::ShowIpAddress()>:
 8013a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a98:	4604      	mov	r4, r0
 8013a9a:	b088      	sub	sp, #32
 8013a9c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8013aa0:	6980      	ldr	r0, [r0, #24]
 8013aa2:	f7ff ff9f 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013aa6:	4b13      	ldr	r3, [pc, #76]	; (8013af4 <DisplayUdf::ShowIpAddress()+0x60>)
 8013aa8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013aac:	681d      	ldr	r5, [r3, #0]
 8013aae:	9107      	str	r1, [sp, #28]
 8013ab0:	696e      	ldr	r6, [r5, #20]
 8013ab2:	69e8      	ldr	r0, [r5, #28]
 8013ab4:	b2f3      	uxtb	r3, r6
 8013ab6:	9306      	str	r3, [sp, #24]
 8013ab8:	f004 fd18 	bl	80184ec <__popcountsi2>
 8013abc:	79ea      	ldrb	r2, [r5, #7]
 8013abe:	f3c6 2707 	ubfx	r7, r6, #8, #8
 8013ac2:	f3c6 4807 	ubfx	r8, r6, #16, #8
 8013ac6:	e9dd 3106 	ldrd	r3, r1, [sp, #24]
 8013aca:	0e36      	lsrs	r6, r6, #24
 8013acc:	b982      	cbnz	r2, 8013af0 <DisplayUdf::ShowIpAddress()+0x5c>
 8013ace:	796a      	ldrb	r2, [r5, #5]
 8013ad0:	2a00      	cmp	r2, #0
 8013ad2:	bf14      	ite	ne
 8013ad4:	2244      	movne	r2, #68	; 0x44
 8013ad6:	2253      	moveq	r2, #83	; 0x53
 8013ad8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8013adc:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8013ae0:	4a05      	ldr	r2, [pc, #20]	; (8013af8 <DisplayUdf::ShowIpAddress()+0x64>)
 8013ae2:	9700      	str	r7, [sp, #0]
 8013ae4:	4620      	mov	r0, r4
 8013ae6:	f7f5 fbdd 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013aea:	b008      	add	sp, #32
 8013aec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013af0:	225a      	movs	r2, #90	; 0x5a
 8013af2:	e7f1      	b.n	8013ad8 <DisplayUdf::ShowIpAddress()+0x44>
 8013af4:	2000f994 	mulcs	r0, r4, r9
 8013af8:	0801b1c0 	stmdaeq	r1, {r6, r7, r8, ip, sp, pc}

08013afc <DisplayUdf::ShowNetmask()>:
 8013afc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013afe:	4b0c      	ldr	r3, [pc, #48]	; (8013b30 <DisplayUdf::ShowNetmask()+0x34>)
 8013b00:	681b      	ldr	r3, [r3, #0]
 8013b02:	69db      	ldr	r3, [r3, #28]
 8013b04:	0e1a      	lsrs	r2, r3, #24
 8013b06:	9202      	str	r2, [sp, #8]
 8013b08:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013b0c:	9201      	str	r2, [sp, #4]
 8013b0e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013b12:	9200      	str	r2, [sp, #0]
 8013b14:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8013b18:	4a06      	ldr	r2, [pc, #24]	; (8013b34 <DisplayUdf::ShowNetmask()+0x38>)
 8013b1a:	b2db      	uxtb	r3, r3
 8013b1c:	4604      	mov	r4, r0
 8013b1e:	f7f5 fbc1 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013b22:	4620      	mov	r0, r4
 8013b24:	b004      	add	sp, #16
 8013b26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b2a:	f7ff bfb3 	b.w	8013a94 <DisplayUdf::ShowIpAddress()>
 8013b2e:	bf00      	nop
 8013b30:	2000f994 	mulcs	r0, r4, r9
 8013b34:	0801b1d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, ip, sp, pc}

08013b38 <DisplayUdf::ShowGatewayIp()>:
 8013b38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013b3a:	4604      	mov	r4, r0
 8013b3c:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 8013b40:	6980      	ldr	r0, [r0, #24]
 8013b42:	f7ff ff4f 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013b46:	4b0a      	ldr	r3, [pc, #40]	; (8013b70 <DisplayUdf::ShowGatewayIp()+0x38>)
 8013b48:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8013b4c:	681b      	ldr	r3, [r3, #0]
 8013b4e:	699b      	ldr	r3, [r3, #24]
 8013b50:	0e1a      	lsrs	r2, r3, #24
 8013b52:	9202      	str	r2, [sp, #8]
 8013b54:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013b58:	9201      	str	r2, [sp, #4]
 8013b5a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013b5e:	9200      	str	r2, [sp, #0]
 8013b60:	b2db      	uxtb	r3, r3
 8013b62:	4a04      	ldr	r2, [pc, #16]	; (8013b74 <DisplayUdf::ShowGatewayIp()+0x3c>)
 8013b64:	4620      	mov	r0, r4
 8013b66:	f7f5 fb9d 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013b6a:	b004      	add	sp, #16
 8013b6c:	bd10      	pop	{r4, pc}
 8013b6e:	bf00      	nop
 8013b70:	2000f994 	mulcs	r0, r4, r9
 8013b74:	0801b1e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, ip, sp, pc}

08013b78 <DisplayUdf::ShowHostName()>:
 8013b78:	b510      	push	{r4, lr}
 8013b7a:	4604      	mov	r4, r0
 8013b7c:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8013b80:	6980      	ldr	r0, [r0, #24]
 8013b82:	f7ff ff2f 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013b86:	4b05      	ldr	r3, [pc, #20]	; (8013b9c <DisplayUdf::ShowHostName()+0x24>)
 8013b88:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8013b8c:	681a      	ldr	r2, [r3, #0]
 8013b8e:	69a0      	ldr	r0, [r4, #24]
 8013b90:	3220      	adds	r2, #32
 8013b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b96:	f7ff bf13 	b.w	80139c0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013b9a:	bf00      	nop
 8013b9c:	2000f994 	mulcs	r0, r4, r9

08013ba0 <DisplayUdf::Show()>:
 8013ba0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013ba2:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 8013ba6:	4604      	mov	r4, r0
 8013ba8:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8013bac:	21ff      	movs	r1, #255	; 0xff
 8013bae:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013bb2:	2806      	cmp	r0, #6
 8013bb4:	bf88      	it	hi
 8013bb6:	7019      	strbhi	r1, [r3, #0]
 8013bb8:	429a      	cmp	r2, r3
 8013bba:	d1f8      	bne.n	8013bae <DisplayUdf::Show()+0xe>
 8013bbc:	2501      	movs	r5, #1
 8013bbe:	4629      	mov	r1, r5
 8013bc0:	3501      	adds	r5, #1
 8013bc2:	69a0      	ldr	r0, [r4, #24]
 8013bc4:	b2ed      	uxtb	r5, r5
 8013bc6:	f7ff ff0d 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013bca:	2d06      	cmp	r5, #6
 8013bcc:	d1f7      	bne.n	8013bbe <DisplayUdf::Show()+0x1e>
 8013bce:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8013bd2:	69a0      	ldr	r0, [r4, #24]
 8013bd4:	f104 021c 	add.w	r2, r4, #28
 8013bd8:	f7ff fef2 	bl	80139c0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013bdc:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8013be0:	69a0      	ldr	r0, [r4, #24]
 8013be2:	4a0d      	ldr	r2, [pc, #52]	; (8013c18 <DisplayUdf::Show()+0x78>)
 8013be4:	f7ff feec 	bl	80139c0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013be8:	4b0c      	ldr	r3, [pc, #48]	; (8013c1c <DisplayUdf::Show()+0x7c>)
 8013bea:	4a0d      	ldr	r2, [pc, #52]	; (8013c20 <DisplayUdf::Show()+0x80>)
 8013bec:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8013bf0:	9300      	str	r3, [sp, #0]
 8013bf2:	4620      	mov	r0, r4
 8013bf4:	2303      	movs	r3, #3
 8013bf6:	f7f5 fb55 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013bfa:	4620      	mov	r0, r4
 8013bfc:	f7ff ff4a 	bl	8013a94 <DisplayUdf::ShowIpAddress()>
 8013c00:	4620      	mov	r0, r4
 8013c02:	f7ff ff99 	bl	8013b38 <DisplayUdf::ShowGatewayIp()>
 8013c06:	4620      	mov	r0, r4
 8013c08:	f7ff ff78 	bl	8013afc <DisplayUdf::ShowNetmask()>
 8013c0c:	4620      	mov	r0, r4
 8013c0e:	b003      	add	sp, #12
 8013c10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013c14:	f7ff bfb0 	b.w	8013b78 <DisplayUdf::ShowHostName()>
 8013c18:	08019002 	stmdaeq	r1, {r1, ip, pc}
 8013c1c:	2000fd20 	andcs	pc, r0, r0, lsr #26
 8013c20:	0801b1f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, pc}

08013c24 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8013c24:	3901      	subs	r1, #1
 8013c26:	b510      	push	{r4, lr}
 8013c28:	4604      	mov	r4, r0
 8013c2a:	2903      	cmp	r1, #3
 8013c2c:	d814      	bhi.n	8013c58 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8013c2e:	e8df f001 	tbb	[pc, r1]
 8013c32:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8013c36:	4b14      	ldr	r3, [pc, #80]	; (8013c88 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013c38:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8013c3c:	6818      	ldr	r0, [r3, #0]
 8013c3e:	f7f6 fed7 	bl	800a9f0 <Display::Status(Display7SegmentMessage)>
 8013c42:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013c46:	69a0      	ldr	r0, [r4, #24]
 8013c48:	f7ff fecc 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013c4c:	4a0f      	ldr	r2, [pc, #60]	; (8013c8c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 8013c4e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013c52:	4620      	mov	r0, r4
 8013c54:	f7f5 fb26 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013c58:	bd10      	pop	{r4, pc}
 8013c5a:	f248 0180 	movw	r1, #32896	; 0x8080
 8013c5e:	4b0a      	ldr	r3, [pc, #40]	; (8013c88 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013c60:	6818      	ldr	r0, [r3, #0]
 8013c62:	f7f6 fec5 	bl	800a9f0 <Display::Status(Display7SegmentMessage)>
 8013c66:	e7f7      	b.n	8013c58 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8013c68:	4b07      	ldr	r3, [pc, #28]	; (8013c88 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013c6a:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8013c6e:	6818      	ldr	r0, [r3, #0]
 8013c70:	f7f6 febe 	bl	800a9f0 <Display::Status(Display7SegmentMessage)>
 8013c74:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013c78:	69a0      	ldr	r0, [r4, #24]
 8013c7a:	f7ff feb3 	bl	80139e4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013c7e:	4a04      	ldr	r2, [pc, #16]	; (8013c90 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8013c80:	e7e5      	b.n	8013c4e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8013c82:	f645 3179 	movw	r1, #23417	; 0x5b79
 8013c86:	e7ea      	b.n	8013c5e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8013c88:	2000fc90 	mulcs	r0, r0, ip
 8013c8c:	0801b1ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp, pc}
 8013c90:	0801b20d 	stmdaeq	r1, {r0, r2, r3, r9, ip, sp, pc}

08013c94 <DisplayUdf::ShowShutdown()>:
 8013c94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013c96:	4604      	mov	r4, r0
 8013c98:	6980      	ldr	r0, [r0, #24]
 8013c9a:	b1c0      	cbz	r0, 8013cce <DisplayUdf::ShowShutdown()+0x3a>
 8013c9c:	7947      	ldrb	r7, [r0, #5]
 8013c9e:	6803      	ldr	r3, [r0, #0]
 8013ca0:	7905      	ldrb	r5, [r0, #4]
 8013ca2:	6a1b      	ldr	r3, [r3, #32]
 8013ca4:	1e7a      	subs	r2, r7, #1
 8013ca6:	b2d2      	uxtb	r2, r2
 8013ca8:	9201      	str	r2, [sp, #4]
 8013caa:	2100      	movs	r1, #0
 8013cac:	4798      	blx	r3
 8013cae:	9a01      	ldr	r2, [sp, #4]
 8013cb0:	2600      	movs	r6, #0
 8013cb2:	3d01      	subs	r5, #1
 8013cb4:	42ae      	cmp	r6, r5
 8013cb6:	69a0      	ldr	r0, [r4, #24]
 8013cb8:	d310      	bcc.n	8013cdc <DisplayUdf::ShowShutdown()+0x48>
 8013cba:	b118      	cbz	r0, 8013cc4 <DisplayUdf::ShowShutdown()+0x30>
 8013cbc:	6803      	ldr	r3, [r0, #0]
 8013cbe:	2100      	movs	r1, #0
 8013cc0:	6a1b      	ldr	r3, [r3, #32]
 8013cc2:	4798      	blx	r3
 8013cc4:	4a0a      	ldr	r2, [pc, #40]	; (8013cf0 <DisplayUdf::ShowShutdown()+0x5c>)
 8013cc6:	69a0      	ldr	r0, [r4, #24]
 8013cc8:	4639      	mov	r1, r7
 8013cca:	f7ff fe79 	bl	80139c0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013cce:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8013cd2:	4620      	mov	r0, r4
 8013cd4:	f7f6 fe8c 	bl	800a9f0 <Display::Status(Display7SegmentMessage)>
 8013cd8:	b003      	add	sp, #12
 8013cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013cdc:	b128      	cbz	r0, 8013cea <DisplayUdf::ShowShutdown()+0x56>
 8013cde:	6803      	ldr	r3, [r0, #0]
 8013ce0:	9201      	str	r2, [sp, #4]
 8013ce2:	695b      	ldr	r3, [r3, #20]
 8013ce4:	2120      	movs	r1, #32
 8013ce6:	4798      	blx	r3
 8013ce8:	9a01      	ldr	r2, [sp, #4]
 8013cea:	3601      	adds	r6, #1
 8013cec:	e7e2      	b.n	8013cb4 <DisplayUdf::ShowShutdown()+0x20>
 8013cee:	bf00      	nop
 8013cf0:	0801b21b 	stmdaeq	r1, {r0, r1, r3, r4, r9, ip, sp, pc}

08013cf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8013cf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013cf6:	88c6      	ldrh	r6, [r0, #6]
 8013cf8:	8885      	ldrh	r5, [r0, #4]
 8013cfa:	42ae      	cmp	r6, r5
 8013cfc:	d216      	bcs.n	8013d2c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8013cfe:	4604      	mov	r4, r0
 8013d00:	6800      	ldr	r0, [r0, #0]
 8013d02:	1bad      	subs	r5, r5, r6
 8013d04:	4430      	add	r0, r6
 8013d06:	7a26      	ldrb	r6, [r4, #8]
 8013d08:	b923      	cbnz	r3, 8013d14 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8013d0a:	b926      	cbnz	r6, 8013d16 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8013d0c:	9200      	str	r2, [sp, #0]
 8013d0e:	460b      	mov	r3, r1
 8013d10:	4a09      	ldr	r2, [pc, #36]	; (8013d38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8013d12:	e003      	b.n	8013d1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013d14:	b166      	cbz	r6, 8013d30 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8013d16:	9200      	str	r2, [sp, #0]
 8013d18:	4a08      	ldr	r2, [pc, #32]	; (8013d3c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8013d1a:	460b      	mov	r3, r1
 8013d1c:	4629      	mov	r1, r5
 8013d1e:	f7f6 fbdb 	bl	800a4d8 <snprintf>
 8013d22:	4285      	cmp	r5, r0
 8013d24:	bfa2      	ittt	ge
 8013d26:	88e3      	ldrhge	r3, [r4, #6]
 8013d28:	181b      	addge	r3, r3, r0
 8013d2a:	80e3      	strhge	r3, [r4, #6]
 8013d2c:	b002      	add	sp, #8
 8013d2e:	bd70      	pop	{r4, r5, r6, pc}
 8013d30:	9200      	str	r2, [sp, #0]
 8013d32:	460b      	mov	r3, r1
 8013d34:	4a02      	ldr	r2, [pc, #8]	; (8013d40 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8013d36:	e7f1      	b.n	8013d1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013d38:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 8013d3c:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 8013d40:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

08013d44 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8013d44:	b510      	push	{r4, lr}
 8013d46:	2220      	movs	r2, #32
 8013d48:	4604      	mov	r4, r0
 8013d4a:	f840 1b04 	str.w	r1, [r0], #4
 8013d4e:	2100      	movs	r1, #0
 8013d50:	f002 f864 	bl	8015e1c <memset>
 8013d54:	f647 7305 	movw	r3, #32517	; 0x7f05
 8013d58:	84a3      	strh	r3, [r4, #36]	; 0x24
 8013d5a:	4620      	mov	r0, r4
 8013d5c:	bd10      	pop	{r4, pc}

08013d5e <DisplayUdfParams::Load()>:
 8013d5e:	b508      	push	{r3, lr}
 8013d60:	2300      	movs	r3, #0
 8013d62:	4601      	mov	r1, r0
 8013d64:	6043      	str	r3, [r0, #4]
 8013d66:	6800      	ldr	r0, [r0, #0]
 8013d68:	b120      	cbz	r0, 8013d74 <DisplayUdfParams::Load()+0x16>
 8013d6a:	6803      	ldr	r3, [r0, #0]
 8013d6c:	3104      	adds	r1, #4
 8013d6e:	68db      	ldr	r3, [r3, #12]
 8013d70:	4798      	blx	r3
 8013d72:	2001      	movs	r0, #1
 8013d74:	bd08      	pop	{r3, pc}
	...

08013d78 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8013d78:	6803      	ldr	r3, [r0, #0]
 8013d7a:	b1d3      	cbz	r3, 8013db2 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8013d7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013d7e:	2300      	movs	r3, #0
 8013d80:	6043      	str	r3, [r0, #4]
 8013d82:	4604      	mov	r4, r0
 8013d84:	460d      	mov	r5, r1
 8013d86:	4616      	mov	r6, r2
 8013d88:	490a      	ldr	r1, [pc, #40]	; (8013db4 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8013d8a:	4602      	mov	r2, r0
 8013d8c:	4668      	mov	r0, sp
 8013d8e:	f001 f841 	bl	8014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8013d92:	4632      	mov	r2, r6
 8013d94:	4629      	mov	r1, r5
 8013d96:	4668      	mov	r0, sp
 8013d98:	f001 f840 	bl	8014e1c <ReadConfigFile::Read(char const*, unsigned int)>
 8013d9c:	4621      	mov	r1, r4
 8013d9e:	f851 0b04 	ldr.w	r0, [r1], #4
 8013da2:	6803      	ldr	r3, [r0, #0]
 8013da4:	689b      	ldr	r3, [r3, #8]
 8013da6:	4798      	blx	r3
 8013da8:	4668      	mov	r0, sp
 8013daa:	f001 f836 	bl	8014e1a <ReadConfigFile::~ReadConfigFile()>
 8013dae:	b002      	add	sp, #8
 8013db0:	bd70      	pop	{r4, r5, r6, pc}
 8013db2:	4770      	bx	lr
 8013db4:	08013e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip, sp}

08013db8 <DisplayUdfParams::callbackFunction(char const*)>:
 8013db8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013dba:	460e      	mov	r6, r1
 8013dbc:	4604      	mov	r4, r0
 8013dbe:	492c      	ldr	r1, [pc, #176]	; (8013e70 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8013dc0:	f10d 0207 	add.w	r2, sp, #7
 8013dc4:	4630      	mov	r0, r6
 8013dc6:	f001 f95a 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013dca:	b968      	cbnz	r0, 8013de8 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8013dcc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013dd0:	6863      	ldr	r3, [r4, #4]
 8013dd2:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8013dd6:	2a7f      	cmp	r2, #127	; 0x7f
 8013dd8:	bf14      	ite	ne
 8013dda:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8013dde:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8013de2:	6063      	str	r3, [r4, #4]
 8013de4:	b003      	add	sp, #12
 8013de6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013de8:	4922      	ldr	r1, [pc, #136]	; (8013e74 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8013dea:	f10d 0207 	add.w	r2, sp, #7
 8013dee:	4630      	mov	r0, r6
 8013df0:	f001 f945 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013df4:	b958      	cbnz	r0, 8013e0e <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8013df6:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013dfa:	6863      	ldr	r3, [r4, #4]
 8013dfc:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8013e00:	2a05      	cmp	r2, #5
 8013e02:	bf14      	ite	ne
 8013e04:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8013e08:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8013e0c:	e7e9      	b.n	8013de2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013e0e:	491a      	ldr	r1, [pc, #104]	; (8013e78 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8013e10:	f10d 0207 	add.w	r2, sp, #7
 8013e14:	4630      	mov	r0, r6
 8013e16:	f001 f932 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013e1a:	b948      	cbnz	r0, 8013e30 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8013e1c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013e20:	6863      	ldr	r3, [r4, #4]
 8013e22:	b112      	cbz	r2, 8013e2a <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8013e24:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8013e28:	e7db      	b.n	8013de2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013e2a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8013e2e:	e7d8      	b.n	8013de2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013e30:	4f12      	ldr	r7, [pc, #72]	; (8013e7c <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8013e32:	2500      	movs	r5, #0
 8013e34:	f857 1b04 	ldr.w	r1, [r7], #4
 8013e38:	f10d 0207 	add.w	r2, sp, #7
 8013e3c:	4630      	mov	r0, r6
 8013e3e:	f001 f91e 	bl	801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013e42:	b988      	cbnz	r0, 8013e68 <DisplayUdfParams::callbackFunction(char const*)+0xb0>
 8013e44:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013e48:	6862      	ldr	r2, [r4, #4]
 8013e4a:	1e4e      	subs	r6, r1, #1
 8013e4c:	2301      	movs	r3, #1
 8013e4e:	2e05      	cmp	r6, #5
 8013e50:	fa03 f305 	lsl.w	r3, r3, r5
 8013e54:	4425      	add	r5, r4
 8013e56:	d802      	bhi.n	8013e5e <DisplayUdfParams::callbackFunction(char const*)+0xa6>
 8013e58:	7229      	strb	r1, [r5, #8]
 8013e5a:	4313      	orrs	r3, r2
 8013e5c:	e7c1      	b.n	8013de2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013e5e:	ea22 0203 	bic.w	r2, r2, r3
 8013e62:	7228      	strb	r0, [r5, #8]
 8013e64:	6062      	str	r2, [r4, #4]
 8013e66:	e7bd      	b.n	8013de4 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8013e68:	3501      	adds	r5, #1
 8013e6a:	2d14      	cmp	r5, #20
 8013e6c:	d1e2      	bne.n	8013e34 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8013e6e:	e7b9      	b.n	8013de4 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8013e70:	0801b2da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, ip, sp, pc}
 8013e74:	0801b2a2 	stmdaeq	r1, {r1, r5, r7, r9, ip, sp, pc}
 8013e78:	0801b2b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp, pc}
 8013e7c:	0801b22c 	stmdaeq	r1, {r2, r3, r5, r9, ip, sp, pc}

08013e80 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8013e80:	f7ff bf9a 	b.w	8013db8 <DisplayUdfParams::callbackFunction(char const*)>

08013e84 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8013e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e88:	4604      	mov	r4, r0
 8013e8a:	b086      	sub	sp, #24
 8013e8c:	4615      	mov	r5, r2
 8013e8e:	461e      	mov	r6, r3
 8013e90:	3004      	adds	r0, #4
 8013e92:	b379      	cbz	r1, 8013ef4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8013e94:	2222      	movs	r2, #34	; 0x22
 8013e96:	f001 ffaa 	bl	8015dee <memmove>
 8013e9a:	462a      	mov	r2, r5
 8013e9c:	493e      	ldr	r1, [pc, #248]	; (8013f98 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8013e9e:	4633      	mov	r3, r6
 8013ea0:	a803      	add	r0, sp, #12
 8013ea2:	f000 ff17 	bl	8014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8013ea6:	6863      	ldr	r3, [r4, #4]
 8013ea8:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8013eac:	493b      	ldr	r1, [pc, #236]	; (8013f9c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8013eae:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8013eb2:	a803      	add	r0, sp, #12
 8013eb4:	f7ff ff1e 	bl	8013cf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013eb8:	6863      	ldr	r3, [r4, #4]
 8013eba:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8013ebe:	4938      	ldr	r1, [pc, #224]	; (8013fa0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8013ec0:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8013ec4:	a803      	add	r0, sp, #12
 8013ec6:	f7ff ff15 	bl	8013cf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013eca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013ece:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8013ed2:	6863      	ldr	r3, [r4, #4]
 8013ed4:	42aa      	cmp	r2, r5
 8013ed6:	d226      	bcs.n	8013f26 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8013ed8:	9803      	ldr	r0, [sp, #12]
 8013eda:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8013ede:	4410      	add	r0, r2
 8013ee0:	eba5 0502 	sub.w	r5, r5, r2
 8013ee4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013ee8:	d10b      	bne.n	8013f02 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8013eea:	b962      	cbnz	r2, 8013f06 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8013eec:	9200      	str	r2, [sp, #0]
 8013eee:	4b2d      	ldr	r3, [pc, #180]	; (8013fa4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013ef0:	4a2d      	ldr	r2, [pc, #180]	; (8013fa8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8013ef2:	e00e      	b.n	8013f12 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8013ef4:	6823      	ldr	r3, [r4, #0]
 8013ef6:	681a      	ldr	r2, [r3, #0]
 8013ef8:	4601      	mov	r1, r0
 8013efa:	68d2      	ldr	r2, [r2, #12]
 8013efc:	4618      	mov	r0, r3
 8013efe:	4790      	blx	r2
 8013f00:	e7cb      	b.n	8013e9a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8013f02:	2a00      	cmp	r2, #0
 8013f04:	d042      	beq.n	8013f8c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8013f06:	3b00      	subs	r3, #0
 8013f08:	bf18      	it	ne
 8013f0a:	2301      	movne	r3, #1
 8013f0c:	9300      	str	r3, [sp, #0]
 8013f0e:	4a27      	ldr	r2, [pc, #156]	; (8013fac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8013f10:	4b24      	ldr	r3, [pc, #144]	; (8013fa4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013f12:	4629      	mov	r1, r5
 8013f14:	f7f6 fae0 	bl	800a4d8 <snprintf>
 8013f18:	4285      	cmp	r5, r0
 8013f1a:	bfa2      	ittt	ge
 8013f1c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8013f20:	181b      	addge	r3, r3, r0
 8013f22:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013f26:	4e22      	ldr	r6, [pc, #136]	; (8013fb0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8013f28:	2500      	movs	r5, #0
 8013f2a:	2701      	movs	r7, #1
 8013f2c:	f104 0808 	add.w	r8, r4, #8
 8013f30:	f856 1b04 	ldr.w	r1, [r6], #4
 8013f34:	780b      	ldrb	r3, [r1, #0]
 8013f36:	b163      	cbz	r3, 8013f52 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 8013f38:	6862      	ldr	r2, [r4, #4]
 8013f3a:	fa07 f305 	lsl.w	r3, r7, r5
 8013f3e:	4393      	bics	r3, r2
 8013f40:	bf08      	it	eq
 8013f42:	2301      	moveq	r3, #1
 8013f44:	f818 2005 	ldrb.w	r2, [r8, r5]
 8013f48:	bf18      	it	ne
 8013f4a:	2300      	movne	r3, #0
 8013f4c:	a803      	add	r0, sp, #12
 8013f4e:	f7ff fed1 	bl	8013cf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013f52:	3501      	adds	r5, #1
 8013f54:	2d14      	cmp	r5, #20
 8013f56:	d1eb      	bne.n	8013f30 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8013f58:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013f5c:	b17b      	cbz	r3, 8013f7e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xfa>
 8013f5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013f62:	9b03      	ldr	r3, [sp, #12]
 8013f64:	4413      	add	r3, r2
 8013f66:	227d      	movs	r2, #125	; 0x7d
 8013f68:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013f6c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013f70:	9903      	ldr	r1, [sp, #12]
 8013f72:	54ca      	strb	r2, [r1, r3]
 8013f74:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013f78:	3301      	adds	r3, #1
 8013f7a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013f7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f84:	601a      	str	r2, [r3, #0]
 8013f86:	b006      	add	sp, #24
 8013f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f8c:	2301      	movs	r3, #1
 8013f8e:	9300      	str	r3, [sp, #0]
 8013f90:	4a08      	ldr	r2, [pc, #32]	; (8013fb4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x130>)
 8013f92:	4b04      	ldr	r3, [pc, #16]	; (8013fa4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013f94:	e7bd      	b.n	8013f12 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8013f96:	bf00      	nop
 8013f98:	0801b2ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, ip, sp, pc}
 8013f9c:	0801b2da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, ip, sp, pc}
 8013fa0:	0801b2a2 	stmdaeq	r1, {r1, r5, r7, r9, ip, sp, pc}
 8013fa4:	0801b2b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp, pc}
 8013fa8:	08018c81 	stmdaeq	r1, {r0, r7, sl, fp, pc}
 8013fac:	08018c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, pc}
 8013fb0:	0801b22c 	stmdaeq	r1, {r2, r3, r5, r9, ip, sp, pc}
 8013fb4:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

08013fb8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8013fb8:	b513      	push	{r0, r1, r4, lr}
 8013fba:	6804      	ldr	r4, [r0, #0]
 8013fbc:	b914      	cbnz	r4, 8013fc4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8013fbe:	601c      	str	r4, [r3, #0]
 8013fc0:	b002      	add	sp, #8
 8013fc2:	bd10      	pop	{r4, pc}
 8013fc4:	9300      	str	r3, [sp, #0]
 8013fc6:	4613      	mov	r3, r2
 8013fc8:	460a      	mov	r2, r1
 8013fca:	2100      	movs	r1, #0
 8013fcc:	f7ff ff5a 	bl	8013e84 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8013fd0:	e7f6      	b.n	8013fc0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08013fd2 <DisplayUdfParams::Set(DisplayUdf*)>:
 8013fd2:	6843      	ldr	r3, [r0, #4]
 8013fd4:	009a      	lsls	r2, r3, #2
 8013fd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013fda:	4604      	mov	r4, r0
 8013fdc:	460e      	mov	r6, r1
 8013fde:	d506      	bpl.n	8013fee <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8013fe0:	6988      	ldr	r0, [r1, #24]
 8013fe2:	b120      	cbz	r0, 8013fee <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8013fe4:	6803      	ldr	r3, [r0, #0]
 8013fe6:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8013fea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fec:	4798      	blx	r3
 8013fee:	6863      	ldr	r3, [r4, #4]
 8013ff0:	69b0      	ldr	r0, [r6, #24]
 8013ff2:	00db      	lsls	r3, r3, #3
 8013ff4:	bf41      	itttt	mi
 8013ff6:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8013ffa:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8013ffe:	4353      	mulmi	r3, r2
 8014000:	6173      	strmi	r3, [r6, #20]
 8014002:	6861      	ldr	r1, [r4, #4]
 8014004:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8014008:	b110      	cbz	r0, 8014010 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 801400a:	6803      	ldr	r3, [r0, #0]
 801400c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801400e:	4798      	blx	r3
 8014010:	2500      	movs	r5, #0
 8014012:	2701      	movs	r7, #1
 8014014:	f104 0808 	add.w	r8, r4, #8
 8014018:	6862      	ldr	r2, [r4, #4]
 801401a:	fa07 f305 	lsl.w	r3, r7, r5
 801401e:	4393      	bics	r3, r2
 8014020:	d105      	bne.n	801402e <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8014022:	f818 1005 	ldrb.w	r1, [r8, r5]
 8014026:	462a      	mov	r2, r5
 8014028:	4630      	mov	r0, r6
 801402a:	f7ff fd0a 	bl	8013a42 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 801402e:	3501      	adds	r5, #1
 8014030:	2d14      	cmp	r5, #20
 8014032:	d1f1      	bne.n	8014018 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8014034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014038 <DisplayUdfParams::Dump()>:
 8014038:	4770      	bx	lr
	...

0801403c <DisplayUdf::Show(E131Bridge*)>:
 801403c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014040:	460e      	mov	r6, r1
 8014042:	b085      	sub	sp, #20
 8014044:	4604      	mov	r4, r0
 8014046:	f7ff fdab 	bl	8013ba0 <DisplayUdf::Show()>
 801404a:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 801404e:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8014052:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8014056:	4f22      	ldr	r7, [pc, #136]	; (80140e0 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8014058:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80140f8 <DisplayUdf::Show(E131Bridge*)+0xbc>
 801405c:	f8df 909c 	ldr.w	r9, [pc, #156]	; 80140fc <DisplayUdf::Show(E131Bridge*)+0xc0>
 8014060:	4413      	add	r3, r2
 8014062:	4620      	mov	r0, r4
 8014064:	4a1f      	ldr	r2, [pc, #124]	; (80140e4 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8014066:	f7f5 f91d 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 801406a:	2500      	movs	r5, #0
 801406c:	2301      	movs	r3, #1
 801406e:	f10d 020e 	add.w	r2, sp, #14
 8014072:	4629      	mov	r1, r5
 8014074:	4630      	mov	r0, r6
 8014076:	f7f8 f85f 	bl	800c138 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 801407a:	b1a8      	cbz	r0, 80140a8 <DisplayUdf::Show(E131Bridge*)+0x6c>
 801407c:	2344      	movs	r3, #68	; 0x44
 801407e:	436b      	muls	r3, r5
 8014080:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8014084:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8014088:	58d2      	ldr	r2, [r2, r3]
 801408a:	2a00      	cmp	r2, #0
 801408c:	bf0c      	ite	eq
 801408e:	463b      	moveq	r3, r7
 8014090:	4643      	movne	r3, r8
 8014092:	e9cd 0300 	strd	r0, r3, [sp]
 8014096:	f104 0144 	add.w	r1, r4, #68	; 0x44
 801409a:	f105 0341 	add.w	r3, r5, #65	; 0x41
 801409e:	5d49      	ldrb	r1, [r1, r5]
 80140a0:	464a      	mov	r2, r9
 80140a2:	4620      	mov	r0, r4
 80140a4:	f7f5 f8fe 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80140a8:	3501      	adds	r5, #1
 80140aa:	2d04      	cmp	r5, #4
 80140ac:	d1de      	bne.n	801406c <DisplayUdf::Show(E131Bridge*)+0x30>
 80140ae:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80140b0:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 80140b4:	2a02      	cmp	r2, #2
 80140b6:	d001      	beq.n	80140bc <DisplayUdf::Show(E131Bridge*)+0x80>
 80140b8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80140ba:	b933      	cbnz	r3, 80140ca <DisplayUdf::Show(E131Bridge*)+0x8e>
 80140bc:	4a0a      	ldr	r2, [pc, #40]	; (80140e8 <DisplayUdf::Show(E131Bridge*)+0xac>)
 80140be:	4620      	mov	r0, r4
 80140c0:	f7f5 f8f0 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80140c4:	b005      	add	sp, #20
 80140c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80140ca:	4808      	ldr	r0, [pc, #32]	; (80140ec <DisplayUdf::Show(E131Bridge*)+0xb0>)
 80140cc:	9300      	str	r3, [sp, #0]
 80140ce:	4b08      	ldr	r3, [pc, #32]	; (80140f0 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 80140d0:	2a00      	cmp	r2, #0
 80140d2:	bf08      	it	eq
 80140d4:	4603      	moveq	r3, r0
 80140d6:	4a07      	ldr	r2, [pc, #28]	; (80140f4 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 80140d8:	4620      	mov	r0, r4
 80140da:	f7f5 f8e3 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80140de:	e7f1      	b.n	80140c4 <DisplayUdf::Show(E131Bridge*)+0x88>
 80140e0:	08019a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, ip, pc}
 80140e4:	0801b2e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, ip, sp, pc}
 80140e8:	0801b2fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, ip, sp, pc}
 80140ec:	08019ba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, pc}
 80140f0:	08019b99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, fp, ip, pc}
 80140f4:	0801b301 	stmdaeq	r1, {r0, r8, r9, ip, sp, pc}
 80140f8:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 80140fc:	0801b2eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, ip, sp, pc}

08014100 <network::display_emac_start()>:
 8014100:	4b01      	ldr	r3, [pc, #4]	; (8014108 <network::display_emac_start()+0x8>)
 8014102:	6818      	ldr	r0, [r3, #0]
 8014104:	f7ff bcb6 	b.w	8013a74 <DisplayUdf::ShowEmacStart()>
 8014108:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

0801410c <network::display_ip()>:
 801410c:	4b01      	ldr	r3, [pc, #4]	; (8014114 <network::display_ip()+0x8>)
 801410e:	6818      	ldr	r0, [r3, #0]
 8014110:	f7ff bcc0 	b.w	8013a94 <DisplayUdf::ShowIpAddress()>
 8014114:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08014118 <network::display_netmask()>:
 8014118:	4b01      	ldr	r3, [pc, #4]	; (8014120 <network::display_netmask()+0x8>)
 801411a:	6818      	ldr	r0, [r3, #0]
 801411c:	f7ff bcee 	b.w	8013afc <DisplayUdf::ShowNetmask()>
 8014120:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08014124 <network::display_gateway()>:
 8014124:	4b01      	ldr	r3, [pc, #4]	; (801412c <network::display_gateway()+0x8>)
 8014126:	6818      	ldr	r0, [r3, #0]
 8014128:	f7ff bd06 	b.w	8013b38 <DisplayUdf::ShowGatewayIp()>
 801412c:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08014130 <network::display_hostname()>:
 8014130:	4b01      	ldr	r3, [pc, #4]	; (8014138 <network::display_hostname()+0x8>)
 8014132:	6818      	ldr	r0, [r3, #0]
 8014134:	f7ff bd20 	b.w	8013b78 <DisplayUdf::ShowHostName()>
 8014138:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

0801413c <network::display_emac_shutdown()>:
 801413c:	4b01      	ldr	r3, [pc, #4]	; (8014144 <network::display_emac_shutdown()+0x8>)
 801413e:	6818      	ldr	r0, [r3, #0]
 8014140:	f7ff bda8 	b.w	8013c94 <DisplayUdf::ShowShutdown()>
 8014144:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08014148 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 8014148:	4b02      	ldr	r3, [pc, #8]	; (8014154 <network::display_dhcp_status(network::dhcp::ClientStatus)+0xc>)
 801414a:	4601      	mov	r1, r0
 801414c:	6818      	ldr	r0, [r3, #0]
 801414e:	f7ff bd69 	b.w	8013c24 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8014152:	bf00      	nop
 8014154:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08014158 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8014158:	b510      	push	{r4, lr}
 801415a:	4a05      	ldr	r2, [pc, #20]	; (8014170 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 801415c:	2300      	movs	r3, #0
 801415e:	2020      	movs	r0, #32
 8014160:	428b      	cmp	r3, r1
 8014162:	d100      	bne.n	8014166 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8014164:	bd10      	pop	{r4, pc}
 8014166:	f852 4b04 	ldr.w	r4, [r2], #4
 801416a:	3301      	adds	r3, #1
 801416c:	4420      	add	r0, r4
 801416e:	e7f7      	b.n	8014160 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8014170:	0801b30c 	stmdaeq	r1, {r2, r3, r8, r9, ip, sp, pc}

08014174 <ConfigStore::Init()>:
 8014174:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014178:	b085      	sub	sp, #20
 801417a:	4607      	mov	r7, r0
 801417c:	f000 fb4f 	bl	801481e <StoreDevice::GetSectorSize() const>
 8014180:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8014184:	4605      	mov	r5, r0
 8014186:	d004      	beq.n	8014192 <ConfigStore::Init()+0x1e>
 8014188:	2500      	movs	r5, #0
 801418a:	4628      	mov	r0, r5
 801418c:	b005      	add	sp, #20
 801418e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014192:	4638      	mov	r0, r7
 8014194:	f000 fb40 	bl	8014818 <StoreDevice::GetSize() const>
 8014198:	4b3a      	ldr	r3, [pc, #232]	; (8014284 <ConfigStore::Init()+0x110>)
 801419a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 801419e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 80141a2:	6019      	str	r1, [r3, #0]
 80141a4:	2e00      	cmp	r6, #0
 80141a6:	d1ef      	bne.n	8014188 <ConfigStore::Init()+0x14>
 80141a8:	4c37      	ldr	r4, [pc, #220]	; (8014288 <ConfigStore::Init()+0x114>)
 80141aa:	ab03      	add	r3, sp, #12
 80141ac:	462a      	mov	r2, r5
 80141ae:	9300      	str	r3, [sp, #0]
 80141b0:	4638      	mov	r0, r7
 80141b2:	4623      	mov	r3, r4
 80141b4:	f000 fb36 	bl	8014824 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 80141b8:	7823      	ldrb	r3, [r4, #0]
 80141ba:	2b41      	cmp	r3, #65	; 0x41
 80141bc:	bf1c      	itt	ne
 80141be:	2341      	movne	r3, #65	; 0x41
 80141c0:	7023      	strbne	r3, [r4, #0]
 80141c2:	7863      	ldrb	r3, [r4, #1]
 80141c4:	bf14      	ite	ne
 80141c6:	4635      	movne	r5, r6
 80141c8:	2501      	moveq	r5, #1
 80141ca:	2b76      	cmp	r3, #118	; 0x76
 80141cc:	bf1c      	itt	ne
 80141ce:	2376      	movne	r3, #118	; 0x76
 80141d0:	7063      	strbne	r3, [r4, #1]
 80141d2:	78a3      	ldrb	r3, [r4, #2]
 80141d4:	bf18      	it	ne
 80141d6:	2500      	movne	r5, #0
 80141d8:	2b56      	cmp	r3, #86	; 0x56
 80141da:	bf1c      	itt	ne
 80141dc:	2356      	movne	r3, #86	; 0x56
 80141de:	70a3      	strbne	r3, [r4, #2]
 80141e0:	78e3      	ldrb	r3, [r4, #3]
 80141e2:	bf18      	it	ne
 80141e4:	2500      	movne	r5, #0
 80141e6:	2b10      	cmp	r3, #16
 80141e8:	d01f      	beq.n	801422a <ConfigStore::Init()+0xb6>
 80141ea:	2310      	movs	r3, #16
 80141ec:	70e3      	strb	r3, [r4, #3]
 80141ee:	4b27      	ldr	r3, [pc, #156]	; (801428c <ConfigStore::Init()+0x118>)
 80141f0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8014294 <ConfigStore::Init()+0x120>
 80141f4:	2201      	movs	r2, #1
 80141f6:	701a      	strb	r2, [r3, #0]
 80141f8:	2500      	movs	r5, #0
 80141fa:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80141fe:	4631      	mov	r1, r6
 8014200:	4638      	mov	r0, r7
 8014202:	f7ff ffa9 	bl	8014158 <ConfigStore::GetStoreOffset(configstore::Store)>
 8014206:	1823      	adds	r3, r4, r0
 8014208:	5425      	strb	r5, [r4, r0]
 801420a:	705d      	strb	r5, [r3, #1]
 801420c:	709d      	strb	r5, [r3, #2]
 801420e:	70dd      	strb	r5, [r3, #3]
 8014210:	f858 3b04 	ldr.w	r3, [r8], #4
 8014214:	1d02      	adds	r2, r0, #4
 8014216:	4403      	add	r3, r0
 8014218:	429a      	cmp	r2, r3
 801421a:	d32f      	bcc.n	801427c <ConfigStore::Init()+0x108>
 801421c:	3601      	adds	r6, #1
 801421e:	2e1c      	cmp	r6, #28
 8014220:	d1ed      	bne.n	80141fe <ConfigStore::Init()+0x8a>
 8014222:	4b1b      	ldr	r3, [pc, #108]	; (8014290 <ConfigStore::Init()+0x11c>)
 8014224:	2501      	movs	r5, #1
 8014226:	601d      	str	r5, [r3, #0]
 8014228:	e7af      	b.n	801418a <ConfigStore::Init()+0x16>
 801422a:	2d00      	cmp	r5, #0
 801422c:	d0df      	beq.n	80141ee <ConfigStore::Init()+0x7a>
 801422e:	f04f 0900 	mov.w	r9, #0
 8014232:	46c8      	mov	r8, r9
 8014234:	4631      	mov	r1, r6
 8014236:	4638      	mov	r0, r7
 8014238:	f7ff ff8e 	bl	8014158 <ConfigStore::GetStoreOffset(configstore::Store)>
 801423c:	5c23      	ldrb	r3, [r4, r0]
 801423e:	2bff      	cmp	r3, #255	; 0xff
 8014240:	d112      	bne.n	8014268 <ConfigStore::Init()+0xf4>
 8014242:	1823      	adds	r3, r4, r0
 8014244:	785a      	ldrb	r2, [r3, #1]
 8014246:	2aff      	cmp	r2, #255	; 0xff
 8014248:	d10e      	bne.n	8014268 <ConfigStore::Init()+0xf4>
 801424a:	789a      	ldrb	r2, [r3, #2]
 801424c:	2aff      	cmp	r2, #255	; 0xff
 801424e:	d10b      	bne.n	8014268 <ConfigStore::Init()+0xf4>
 8014250:	78da      	ldrb	r2, [r3, #3]
 8014252:	2aff      	cmp	r2, #255	; 0xff
 8014254:	d108      	bne.n	8014268 <ConfigStore::Init()+0xf4>
 8014256:	f804 8000 	strb.w	r8, [r4, r0]
 801425a:	46a9      	mov	r9, r5
 801425c:	f883 8001 	strb.w	r8, [r3, #1]
 8014260:	f883 8002 	strb.w	r8, [r3, #2]
 8014264:	f883 8003 	strb.w	r8, [r3, #3]
 8014268:	3601      	adds	r6, #1
 801426a:	2e1c      	cmp	r6, #28
 801426c:	d1e2      	bne.n	8014234 <ConfigStore::Init()+0xc0>
 801426e:	f1b9 0f00 	cmp.w	r9, #0
 8014272:	d08a      	beq.n	801418a <ConfigStore::Init()+0x16>
 8014274:	4b06      	ldr	r3, [pc, #24]	; (8014290 <ConfigStore::Init()+0x11c>)
 8014276:	2201      	movs	r2, #1
 8014278:	601a      	str	r2, [r3, #0]
 801427a:	e786      	b.n	801418a <ConfigStore::Init()+0x16>
 801427c:	f804 9002 	strb.w	r9, [r4, r2]
 8014280:	3201      	adds	r2, #1
 8014282:	e7c9      	b.n	8014218 <ConfigStore::Init()+0xa4>
 8014284:	2000fc58 	andcs	pc, r0, r8, asr ip	; <UNPREDICTABLE>
 8014288:	40024000 	andmi	r4, r2, r0
 801428c:	2000fc6c 	andcs	pc, r0, ip, ror #24
 8014290:	2000fc64 	andcs	pc, r0, r4, ror #24
 8014294:	0801b30c 	stmdaeq	r1, {r2, r3, r8, r9, ip, sp, pc}

08014298 <ConfigStore::ConfigStore()>:
 8014298:	b538      	push	{r3, r4, r5, lr}
 801429a:	4604      	mov	r4, r0
 801429c:	f000 fa8e 	bl	80147bc <StoreDevice::StoreDevice()>
 80142a0:	4b0b      	ldr	r3, [pc, #44]	; (80142d0 <ConfigStore::ConfigStore()+0x38>)
 80142a2:	4d0c      	ldr	r5, [pc, #48]	; (80142d4 <ConfigStore::ConfigStore()+0x3c>)
 80142a4:	601c      	str	r4, [r3, #0]
 80142a6:	7aa3      	ldrb	r3, [r4, #10]
 80142a8:	b11b      	cbz	r3, 80142b2 <ConfigStore::ConfigStore()+0x1a>
 80142aa:	4620      	mov	r0, r4
 80142ac:	f7ff ff62 	bl	8014174 <ConfigStore::Init()>
 80142b0:	7028      	strb	r0, [r5, #0]
 80142b2:	782b      	ldrb	r3, [r5, #0]
 80142b4:	b153      	cbz	r3, 80142cc <ConfigStore::ConfigStore()+0x34>
 80142b6:	4908      	ldr	r1, [pc, #32]	; (80142d8 <ConfigStore::ConfigStore()+0x40>)
 80142b8:	2320      	movs	r3, #32
 80142ba:	2200      	movs	r2, #0
 80142bc:	f851 0b04 	ldr.w	r0, [r1], #4
 80142c0:	3201      	adds	r2, #1
 80142c2:	2a1c      	cmp	r2, #28
 80142c4:	4403      	add	r3, r0
 80142c6:	d1f9      	bne.n	80142bc <ConfigStore::ConfigStore()+0x24>
 80142c8:	4a04      	ldr	r2, [pc, #16]	; (80142dc <ConfigStore::ConfigStore()+0x44>)
 80142ca:	6013      	str	r3, [r2, #0]
 80142cc:	4620      	mov	r0, r4
 80142ce:	bd38      	pop	{r3, r4, r5, pc}
 80142d0:	2000fc68 	andcs	pc, r0, r8, ror #24
 80142d4:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 80142d8:	0801b30c 	stmdaeq	r1, {r2, r3, r8, r9, ip, sp, pc}
 80142dc:	2000fc60 	andcs	pc, r0, r0, ror #24

080142e0 <ConfigStore::ResetSetList(configstore::Store)>:
 80142e0:	b508      	push	{r3, lr}
 80142e2:	f7ff ff39 	bl	8014158 <ConfigStore::GetStoreOffset(configstore::Store)>
 80142e6:	4905      	ldr	r1, [pc, #20]	; (80142fc <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 80142e8:	1842      	adds	r2, r0, r1
 80142ea:	2300      	movs	r3, #0
 80142ec:	540b      	strb	r3, [r1, r0]
 80142ee:	7053      	strb	r3, [r2, #1]
 80142f0:	7093      	strb	r3, [r2, #2]
 80142f2:	70d3      	strb	r3, [r2, #3]
 80142f4:	4b02      	ldr	r3, [pc, #8]	; (8014300 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 80142f6:	2201      	movs	r2, #1
 80142f8:	601a      	str	r2, [r3, #0]
 80142fa:	bd08      	pop	{r3, pc}
 80142fc:	40024000 	andmi	r4, r2, r0
 8014300:	2000fc64 	andcs	pc, r0, r4, ror #24

08014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8014304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014308:	461c      	mov	r4, r3
 801430a:	4b19      	ldr	r3, [pc, #100]	; (8014370 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 801430c:	9d07      	ldr	r5, [sp, #28]
 801430e:	781f      	ldrb	r7, [r3, #0]
 8014310:	4616      	mov	r6, r2
 8014312:	b307      	cbz	r7, 8014356 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8014314:	f7ff ff20 	bl	8014158 <ConfigStore::GetStoreOffset(configstore::Store)>
 8014318:	4a16      	ldr	r2, [pc, #88]	; (8014374 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 801431a:	1831      	adds	r1, r6, r0
 801431c:	1e63      	subs	r3, r4, #1
 801431e:	9c06      	ldr	r4, [sp, #24]
 8014320:	4411      	add	r1, r2
 8014322:	440c      	add	r4, r1
 8014324:	f04f 0c00 	mov.w	ip, #0
 8014328:	42a1      	cmp	r1, r4
 801432a:	d116      	bne.n	801435a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 801432c:	f1bc 0f00 	cmp.w	ip, #0
 8014330:	d011      	beq.n	8014356 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8014332:	4b11      	ldr	r3, [pc, #68]	; (8014378 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8014334:	6819      	ldr	r1, [r3, #0]
 8014336:	b109      	cbz	r1, 801433c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8014338:	2906      	cmp	r1, #6
 801433a:	d101      	bne.n	8014340 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 801433c:	2101      	movs	r1, #1
 801433e:	6019      	str	r1, [r3, #0]
 8014340:	4b0e      	ldr	r3, [pc, #56]	; (801437c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8014342:	6819      	ldr	r1, [r3, #0]
 8014344:	4b0e      	ldr	r3, [pc, #56]	; (8014380 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8014346:	6019      	str	r1, [r3, #0]
 8014348:	b12e      	cbz	r6, 8014356 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 801434a:	b125      	cbz	r5, 8014356 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 801434c:	9b08      	ldr	r3, [sp, #32]
 801434e:	4418      	add	r0, r3
 8014350:	5813      	ldr	r3, [r2, r0]
 8014352:	432b      	orrs	r3, r5
 8014354:	5013      	str	r3, [r2, r0]
 8014356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801435a:	f891 8000 	ldrb.w	r8, [r1]
 801435e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8014362:	45f0      	cmp	r8, lr
 8014364:	bf1c      	itt	ne
 8014366:	f881 e000 	strbne.w	lr, [r1]
 801436a:	46bc      	movne	ip, r7
 801436c:	3101      	adds	r1, #1
 801436e:	e7db      	b.n	8014328 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8014370:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 8014374:	40024000 	andmi	r4, r2, r0
 8014378:	2000fc64 	andcs	pc, r0, r4, ror #24
 801437c:	2000fd94 	mulcs	r0, r4, sp
 8014380:	2000fc54 	andcs	pc, r0, r4, asr ip	; <UNPREDICTABLE>

08014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8014384:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014388:	461d      	mov	r5, r3
 801438a:	4b15      	ldr	r3, [pc, #84]	; (80143e0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 801438c:	b085      	sub	sp, #20
 801438e:	781b      	ldrb	r3, [r3, #0]
 8014390:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8014394:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8014398:	4607      	mov	r7, r0
 801439a:	4614      	mov	r4, r2
 801439c:	b193      	cbz	r3, 80143c4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 801439e:	f7ff fedb 	bl	8014158 <ConfigStore::GetStoreOffset(configstore::Store)>
 80143a2:	4a10      	ldr	r2, [pc, #64]	; (80143e4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 80143a4:	eb08 0600 	add.w	r6, r8, r0
 80143a8:	18b3      	adds	r3, r6, r2
 80143aa:	f1b9 0f00 	cmp.w	r9, #0
 80143ae:	d013      	beq.n	80143d8 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80143b0:	5990      	ldr	r0, [r2, r6]
 80143b2:	b988      	cbnz	r0, 80143d8 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80143b4:	e9cd 0001 	strd	r0, r0, [sp, #4]
 80143b8:	9500      	str	r5, [sp, #0]
 80143ba:	4623      	mov	r3, r4
 80143bc:	4642      	mov	r2, r8
 80143be:	4638      	mov	r0, r7
 80143c0:	f7ff ffa0 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80143c4:	b005      	add	sp, #20
 80143c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80143ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80143ce:	f804 2f01 	strb.w	r2, [r4, #1]!
 80143d2:	429d      	cmp	r5, r3
 80143d4:	d1f9      	bne.n	80143ca <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 80143d6:	e7f5      	b.n	80143c4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 80143d8:	3c01      	subs	r4, #1
 80143da:	441d      	add	r5, r3
 80143dc:	e7f9      	b.n	80143d2 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 80143de:	bf00      	nop
 80143e0:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 80143e4:	40024000 	andmi	r4, r2, r0

080143e8 <ConfigStore::Flash()>:
 80143e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143ea:	4c24      	ldr	r4, [pc, #144]	; (801447c <ConfigStore::Flash()+0x94>)
 80143ec:	6823      	ldr	r3, [r4, #0]
 80143ee:	2b00      	cmp	r3, #0
 80143f0:	d041      	beq.n	8014476 <ConfigStore::Flash()+0x8e>
 80143f2:	3b01      	subs	r3, #1
 80143f4:	2b05      	cmp	r3, #5
 80143f6:	d82f      	bhi.n	8014458 <ConfigStore::Flash()+0x70>
 80143f8:	e8df f003 	tbb	[pc, r3]
 80143fc:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8014400:	4b1f2e23 	blmi	87dfc94 <__exidx_end+0x7c3bd4>
 8014404:	681a      	ldr	r2, [r3, #0]
 8014406:	4b1f      	ldr	r3, [pc, #124]	; (8014484 <ConfigStore::Flash()+0x9c>)
 8014408:	601a      	str	r2, [r3, #0]
 801440a:	2302      	movs	r3, #2
 801440c:	6023      	str	r3, [r4, #0]
 801440e:	2001      	movs	r0, #1
 8014410:	e02f      	b.n	8014472 <ConfigStore::Flash()+0x8a>
 8014412:	4b1b      	ldr	r3, [pc, #108]	; (8014480 <ConfigStore::Flash()+0x98>)
 8014414:	4a1b      	ldr	r2, [pc, #108]	; (8014484 <ConfigStore::Flash()+0x9c>)
 8014416:	681b      	ldr	r3, [r3, #0]
 8014418:	6812      	ldr	r2, [r2, #0]
 801441a:	1a9b      	subs	r3, r3, r2
 801441c:	2b63      	cmp	r3, #99	; 0x63
 801441e:	d9f6      	bls.n	801440e <ConfigStore::Flash()+0x26>
 8014420:	2303      	movs	r3, #3
 8014422:	e7f3      	b.n	801440c <ConfigStore::Flash()+0x24>
 8014424:	4918      	ldr	r1, [pc, #96]	; (8014488 <ConfigStore::Flash()+0xa0>)
 8014426:	ab03      	add	r3, sp, #12
 8014428:	6809      	ldr	r1, [r1, #0]
 801442a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801442e:	f000 fa1d 	bl	801486c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8014432:	2800      	cmp	r0, #0
 8014434:	d0eb      	beq.n	801440e <ConfigStore::Flash()+0x26>
 8014436:	4b12      	ldr	r3, [pc, #72]	; (8014480 <ConfigStore::Flash()+0x98>)
 8014438:	681a      	ldr	r2, [r3, #0]
 801443a:	4b12      	ldr	r3, [pc, #72]	; (8014484 <ConfigStore::Flash()+0x9c>)
 801443c:	601a      	str	r2, [r3, #0]
 801443e:	2305      	movs	r3, #5
 8014440:	e7e4      	b.n	801440c <ConfigStore::Flash()+0x24>
 8014442:	4b0f      	ldr	r3, [pc, #60]	; (8014480 <ConfigStore::Flash()+0x98>)
 8014444:	4a0f      	ldr	r2, [pc, #60]	; (8014484 <ConfigStore::Flash()+0x9c>)
 8014446:	681b      	ldr	r3, [r3, #0]
 8014448:	6812      	ldr	r2, [r2, #0]
 801444a:	1a9b      	subs	r3, r3, r2
 801444c:	2b63      	cmp	r3, #99	; 0x63
 801444e:	d9de      	bls.n	801440e <ConfigStore::Flash()+0x26>
 8014450:	2304      	movs	r3, #4
 8014452:	e7db      	b.n	801440c <ConfigStore::Flash()+0x24>
 8014454:	2306      	movs	r3, #6
 8014456:	e7d9      	b.n	801440c <ConfigStore::Flash()+0x24>
 8014458:	ab03      	add	r3, sp, #12
 801445a:	4a0c      	ldr	r2, [pc, #48]	; (801448c <ConfigStore::Flash()+0xa4>)
 801445c:	490a      	ldr	r1, [pc, #40]	; (8014488 <ConfigStore::Flash()+0xa0>)
 801445e:	9300      	str	r3, [sp, #0]
 8014460:	6812      	ldr	r2, [r2, #0]
 8014462:	4b0b      	ldr	r3, [pc, #44]	; (8014490 <ConfigStore::Flash()+0xa8>)
 8014464:	6809      	ldr	r1, [r1, #0]
 8014466:	f000 fa05 	bl	8014874 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 801446a:	2800      	cmp	r0, #0
 801446c:	d0cf      	beq.n	801440e <ConfigStore::Flash()+0x26>
 801446e:	2000      	movs	r0, #0
 8014470:	6020      	str	r0, [r4, #0]
 8014472:	b004      	add	sp, #16
 8014474:	bd10      	pop	{r4, pc}
 8014476:	4618      	mov	r0, r3
 8014478:	e7fb      	b.n	8014472 <ConfigStore::Flash()+0x8a>
 801447a:	bf00      	nop
 801447c:	2000fc64 	andcs	pc, r0, r4, ror #24
 8014480:	2000fd94 	mulcs	r0, r4, sp
 8014484:	2000fc54 	andcs	pc, r0, r4, asr ip	; <UNPREDICTABLE>
 8014488:	2000fc58 	andcs	pc, r0, r8, asr ip	; <UNPREDICTABLE>
 801448c:	2000fc60 	andcs	pc, r0, r0, ror #24
 8014490:	40024000 	andmi	r4, r2, r0

08014494 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8014494:	4770      	bx	lr
	...

08014498 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8014498:	b507      	push	{r0, r1, r2, lr}
 801449a:	2300      	movs	r3, #0
 801449c:	460a      	mov	r2, r1
 801449e:	2101      	movs	r1, #1
 80144a0:	e9cd 3100 	strd	r3, r1, [sp]
 80144a4:	4804      	ldr	r0, [pc, #16]	; (80144b8 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 80144a6:	2322      	movs	r3, #34	; 0x22
 80144a8:	6800      	ldr	r0, [r0, #0]
 80144aa:	210f      	movs	r1, #15
 80144ac:	f7ff ff6a 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80144b0:	b003      	add	sp, #12
 80144b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80144b6:	bf00      	nop
 80144b8:	2000fc68 	andcs	pc, r0, r8, ror #24

080144bc <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 80144bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80144be:	2200      	movs	r2, #0
 80144c0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80144c4:	460b      	mov	r3, r1
 80144c6:	4805      	ldr	r0, [pc, #20]	; (80144dc <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 80144c8:	2122      	movs	r1, #34	; 0x22
 80144ca:	9100      	str	r1, [sp, #0]
 80144cc:	6800      	ldr	r0, [r0, #0]
 80144ce:	210f      	movs	r1, #15
 80144d0:	f7ff ff18 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80144d4:	b005      	add	sp, #20
 80144d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80144da:	bf00      	nop
 80144dc:	2000fc68 	andcs	pc, r0, r8, ror #24

080144e0 <StoreDisplayUdf::~StoreDisplayUdf()>:
 80144e0:	b510      	push	{r4, lr}
 80144e2:	4604      	mov	r4, r0
 80144e4:	f001 fb82 	bl	8015bec <operator delete(void*)>
 80144e8:	4620      	mov	r0, r4
 80144ea:	bd10      	pop	{r4, pc}

080144ec <StoreDisplayUdf::StoreDisplayUdf()>:
 80144ec:	4a02      	ldr	r2, [pc, #8]	; (80144f8 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 80144ee:	6002      	str	r2, [r0, #0]
 80144f0:	4a02      	ldr	r2, [pc, #8]	; (80144fc <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 80144f2:	6010      	str	r0, [r2, #0]
 80144f4:	4770      	bx	lr
 80144f6:	bf00      	nop
 80144f8:	0801b384 	stmdaeq	r1, {r2, r7, r8, r9, ip, sp, pc}
 80144fc:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>

08014500 <StoreDmxSend::~StoreDmxSend()>:
 8014500:	4770      	bx	lr
	...

08014504 <StoreDmxSend::Copy(TDmxParams*)>:
 8014504:	b507      	push	{r0, r1, r2, lr}
 8014506:	2300      	movs	r3, #0
 8014508:	460a      	mov	r2, r1
 801450a:	2101      	movs	r1, #1
 801450c:	e9cd 3100 	strd	r3, r1, [sp]
 8014510:	4804      	ldr	r0, [pc, #16]	; (8014524 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 8014512:	230a      	movs	r3, #10
 8014514:	6800      	ldr	r0, [r0, #0]
 8014516:	2102      	movs	r1, #2
 8014518:	f7ff ff34 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 801451c:	b003      	add	sp, #12
 801451e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014522:	bf00      	nop
 8014524:	2000fc68 	andcs	pc, r0, r8, ror #24

08014528 <StoreDmxSend::Update(TDmxParams const*)>:
 8014528:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801452a:	2200      	movs	r2, #0
 801452c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8014530:	460b      	mov	r3, r1
 8014532:	4805      	ldr	r0, [pc, #20]	; (8014548 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 8014534:	210a      	movs	r1, #10
 8014536:	9100      	str	r1, [sp, #0]
 8014538:	6800      	ldr	r0, [r0, #0]
 801453a:	2102      	movs	r1, #2
 801453c:	f7ff fee2 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014540:	b005      	add	sp, #20
 8014542:	f85d fb04 	ldr.w	pc, [sp], #4
 8014546:	bf00      	nop
 8014548:	2000fc68 	andcs	pc, r0, r8, ror #24

0801454c <StoreDmxSend::~StoreDmxSend()>:
 801454c:	b510      	push	{r4, lr}
 801454e:	4604      	mov	r4, r0
 8014550:	f001 fb4c 	bl	8015bec <operator delete(void*)>
 8014554:	4620      	mov	r0, r4
 8014556:	bd10      	pop	{r4, pc}

08014558 <StoreDmxSend::StoreDmxSend()>:
 8014558:	4a02      	ldr	r2, [pc, #8]	; (8014564 <StoreDmxSend::StoreDmxSend()+0xc>)
 801455a:	6002      	str	r2, [r0, #0]
 801455c:	4a02      	ldr	r2, [pc, #8]	; (8014568 <StoreDmxSend::StoreDmxSend()+0x10>)
 801455e:	6010      	str	r0, [r2, #0]
 8014560:	4770      	bx	lr
 8014562:	bf00      	nop
 8014564:	0801b39c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, ip, sp, pc}
 8014568:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>

0801456c <StoreNetwork::~StoreNetwork()>:
 801456c:	4770      	bx	lr

0801456e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 801456e:	3804      	subs	r0, #4
 8014570:	4770      	bx	lr
	...

08014574 <StoreNetwork::Update(networkparams::Params const*)>:
 8014574:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014576:	2200      	movs	r2, #0
 8014578:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801457c:	460b      	mov	r3, r1
 801457e:	4805      	ldr	r0, [pc, #20]	; (8014594 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 8014580:	215e      	movs	r1, #94	; 0x5e
 8014582:	9100      	str	r1, [sp, #0]
 8014584:	6800      	ldr	r0, [r0, #0]
 8014586:	4611      	mov	r1, r2
 8014588:	f7ff febc 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801458c:	b005      	add	sp, #20
 801458e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014592:	bf00      	nop
 8014594:	2000fc68 	andcs	pc, r0, r8, ror #24

08014598 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 8014598:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801459a:	2308      	movs	r3, #8
 801459c:	9105      	str	r1, [sp, #20]
 801459e:	2100      	movs	r1, #0
 80145a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80145a4:	4805      	ldr	r0, [pc, #20]	; (80145bc <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 80145a6:	2304      	movs	r3, #4
 80145a8:	9300      	str	r3, [sp, #0]
 80145aa:	6800      	ldr	r0, [r0, #0]
 80145ac:	ab05      	add	r3, sp, #20
 80145ae:	220c      	movs	r2, #12
 80145b0:	f7ff fea8 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80145b4:	b007      	add	sp, #28
 80145b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80145ba:	bf00      	nop
 80145bc:	2000fc68 	andcs	pc, r0, r8, ror #24

080145c0 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 80145c0:	f1a0 0004 	sub.w	r0, r0, #4
 80145c4:	e7e8      	b.n	8014598 <StoreNetwork::SaveGatewayIp(unsigned int)>
 80145c6:	bf00      	nop

080145c8 <StoreNetwork::SaveNetMask(unsigned int)>:
 80145c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80145ca:	2304      	movs	r3, #4
 80145cc:	9105      	str	r1, [sp, #20]
 80145ce:	2100      	movs	r1, #0
 80145d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80145d4:	4804      	ldr	r0, [pc, #16]	; (80145e8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 80145d6:	9300      	str	r3, [sp, #0]
 80145d8:	6800      	ldr	r0, [r0, #0]
 80145da:	ab05      	add	r3, sp, #20
 80145dc:	2208      	movs	r2, #8
 80145de:	f7ff fe91 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80145e2:	b007      	add	sp, #28
 80145e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80145e8:	2000fc68 	andcs	pc, r0, r8, ror #24

080145ec <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 80145ec:	f1a0 0004 	sub.w	r0, r0, #4
 80145f0:	e7ea      	b.n	80145c8 <StoreNetwork::SaveNetMask(unsigned int)>
 80145f2:	bf00      	nop

080145f4 <StoreNetwork::SaveIp(unsigned int)>:
 80145f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80145f6:	2302      	movs	r3, #2
 80145f8:	9105      	str	r1, [sp, #20]
 80145fa:	2100      	movs	r1, #0
 80145fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8014600:	2204      	movs	r2, #4
 8014602:	4804      	ldr	r0, [pc, #16]	; (8014614 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8014604:	9200      	str	r2, [sp, #0]
 8014606:	6800      	ldr	r0, [r0, #0]
 8014608:	ab05      	add	r3, sp, #20
 801460a:	f7ff fe7b 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801460e:	b007      	add	sp, #28
 8014610:	f85d fb04 	ldr.w	pc, [sp], #4
 8014614:	2000fc68 	andcs	pc, r0, r8, ror #24

08014618 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8014618:	f1a0 0004 	sub.w	r0, r0, #4
 801461c:	e7ea      	b.n	80145f4 <StoreNetwork::SaveIp(unsigned int)>
 801461e:	bf00      	nop

08014620 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8014620:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014622:	460b      	mov	r3, r1
 8014624:	2000      	movs	r0, #0
 8014626:	2120      	movs	r1, #32
 8014628:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801462c:	2a40      	cmp	r2, #64	; 0x40
 801462e:	bf28      	it	cs
 8014630:	2240      	movcs	r2, #64	; 0x40
 8014632:	4601      	mov	r1, r0
 8014634:	4804      	ldr	r0, [pc, #16]	; (8014648 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x28>)
 8014636:	9200      	str	r2, [sp, #0]
 8014638:	6800      	ldr	r0, [r0, #0]
 801463a:	2215      	movs	r2, #21
 801463c:	f7ff fe62 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014640:	b005      	add	sp, #20
 8014642:	f85d fb04 	ldr.w	pc, [sp], #4
 8014646:	bf00      	nop
 8014648:	2000fc68 	andcs	pc, r0, r8, ror #24

0801464c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 801464c:	f1a0 0004 	sub.w	r0, r0, #4
 8014650:	e7e6      	b.n	8014620 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 8014652:	bf00      	nop

08014654 <StoreNetwork::~StoreNetwork()>:
 8014654:	b510      	push	{r4, lr}
 8014656:	4604      	mov	r4, r0
 8014658:	f001 fac8 	bl	8015bec <operator delete(void*)>
 801465c:	4620      	mov	r0, r4
 801465e:	bd10      	pop	{r4, pc}

08014660 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8014660:	f1a0 0004 	sub.w	r0, r0, #4
 8014664:	e7f6      	b.n	8014654 <StoreNetwork::~StoreNetwork()>
	...

08014668 <StoreNetwork::Copy(networkparams::Params*)>:
 8014668:	b507      	push	{r0, r1, r2, lr}
 801466a:	2301      	movs	r3, #1
 801466c:	460a      	mov	r2, r1
 801466e:	2100      	movs	r1, #0
 8014670:	e9cd 1300 	strd	r1, r3, [sp]
 8014674:	4803      	ldr	r0, [pc, #12]	; (8014684 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 8014676:	235e      	movs	r3, #94	; 0x5e
 8014678:	6800      	ldr	r0, [r0, #0]
 801467a:	f7ff fe83 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 801467e:	b003      	add	sp, #12
 8014680:	f85d fb04 	ldr.w	pc, [sp], #4
 8014684:	2000fc68 	andcs	pc, r0, r8, ror #24

08014688 <StoreNetwork::StoreNetwork()>:
 8014688:	4a03      	ldr	r2, [pc, #12]	; (8014698 <StoreNetwork::StoreNetwork()+0x10>)
 801468a:	6002      	str	r2, [r0, #0]
 801468c:	322c      	adds	r2, #44	; 0x2c
 801468e:	6042      	str	r2, [r0, #4]
 8014690:	4a02      	ldr	r2, [pc, #8]	; (801469c <StoreNetwork::StoreNetwork()+0x14>)
 8014692:	6010      	str	r0, [r2, #0]
 8014694:	4770      	bx	lr
 8014696:	bf00      	nop
 8014698:	0801b3b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, ip, sp, pc}
 801469c:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>

080146a0 <StoreRemoteConfig::~StoreRemoteConfig()>:
 80146a0:	4770      	bx	lr
	...

080146a4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 80146a4:	b507      	push	{r0, r1, r2, lr}
 80146a6:	2300      	movs	r3, #0
 80146a8:	460a      	mov	r2, r1
 80146aa:	2101      	movs	r1, #1
 80146ac:	e9cd 3100 	strd	r3, r1, [sp]
 80146b0:	4804      	ldr	r0, [pc, #16]	; (80146c4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 80146b2:	2320      	movs	r3, #32
 80146b4:	6800      	ldr	r0, [r0, #0]
 80146b6:	210c      	movs	r1, #12
 80146b8:	f7ff fe64 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80146bc:	b003      	add	sp, #12
 80146be:	f85d fb04 	ldr.w	pc, [sp], #4
 80146c2:	bf00      	nop
 80146c4:	2000fc68 	andcs	pc, r0, r8, ror #24

080146c8 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 80146c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80146ca:	2200      	movs	r2, #0
 80146cc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80146d0:	460b      	mov	r3, r1
 80146d2:	4805      	ldr	r0, [pc, #20]	; (80146e8 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 80146d4:	2120      	movs	r1, #32
 80146d6:	9100      	str	r1, [sp, #0]
 80146d8:	6800      	ldr	r0, [r0, #0]
 80146da:	210c      	movs	r1, #12
 80146dc:	f7ff fe12 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80146e0:	b005      	add	sp, #20
 80146e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80146e6:	bf00      	nop
 80146e8:	2000fc68 	andcs	pc, r0, r8, ror #24

080146ec <StoreRemoteConfig::~StoreRemoteConfig()>:
 80146ec:	b510      	push	{r4, lr}
 80146ee:	4604      	mov	r4, r0
 80146f0:	f001 fa7c 	bl	8015bec <operator delete(void*)>
 80146f4:	4620      	mov	r0, r4
 80146f6:	bd10      	pop	{r4, pc}

080146f8 <StoreRemoteConfig::StoreRemoteConfig()>:
 80146f8:	4a02      	ldr	r2, [pc, #8]	; (8014704 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 80146fa:	6002      	str	r2, [r0, #0]
 80146fc:	4a02      	ldr	r2, [pc, #8]	; (8014708 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 80146fe:	6010      	str	r0, [r2, #0]
 8014700:	4770      	bx	lr
 8014702:	bf00      	nop
 8014704:	0801b404 	stmdaeq	r1, {r2, sl, ip, sp, pc}
 8014708:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>

0801470c <HAL_I2C::Setup()>:
 801470c:	b510      	push	{r4, lr}
 801470e:	4604      	mov	r4, r0
 8014710:	7800      	ldrb	r0, [r0, #0]
 8014712:	f003 f817 	bl	8017744 <gd32_i2c_set_address>
 8014716:	6860      	ldr	r0, [r4, #4]
 8014718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801471c:	f003 b80a 	b.w	8017734 <gd32_i2c_set_baudrate>

08014720 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>:
 8014720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014724:	b08d      	sub	sp, #52	; 0x34
 8014726:	4606      	mov	r6, r0
 8014728:	9301      	str	r3, [sp, #4]
 801472a:	7a03      	ldrb	r3, [r0, #8]
 801472c:	460c      	mov	r4, r1
 801472e:	4617      	mov	r7, r2
 8014730:	2b00      	cmp	r3, #0
 8014732:	d13c      	bne.n	80147ae <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8014734:	b00d      	add	sp, #52	; 0x34
 8014736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801473a:	2101      	movs	r1, #1
 801473c:	4640      	mov	r0, r8
 801473e:	f003 f86d 	bl	801781c <gd32_i2c_read>
 8014742:	2800      	cmp	r0, #0
 8014744:	d1f9      	bne.n	801473a <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8014746:	7a73      	ldrb	r3, [r6, #9]
 8014748:	f8cd 9008 	str.w	r9, [sp, #8]
 801474c:	2d1d      	cmp	r5, #29
 801474e:	bf8c      	ite	hi
 8014750:	a902      	addhi	r1, sp, #8
 8014752:	a901      	addls	r1, sp, #4
 8014754:	fbb4 f2f3 	udiv	r2, r4, r3
 8014758:	fb03 4212 	mls	r2, r3, r2, r4
 801475c:	1a9b      	subs	r3, r3, r2
 801475e:	680a      	ldr	r2, [r1, #0]
 8014760:	9303      	str	r3, [sp, #12]
 8014762:	4293      	cmp	r3, r2
 8014764:	bf98      	it	ls
 8014766:	4641      	movls	r1, r8
 8014768:	ba63      	rev16	r3, r4
 801476a:	f8d1 a000 	ldr.w	sl, [r1]
 801476e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8014772:	eb07 030b 	add.w	r3, r7, fp
 8014776:	f10d 0211 	add.w	r2, sp, #17
 801477a:	eb03 010a 	add.w	r1, r3, sl
 801477e:	428b      	cmp	r3, r1
 8014780:	d110      	bne.n	80147a4 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x84>
 8014782:	4630      	mov	r0, r6
 8014784:	f7ff ffc2 	bl	801470c <HAL_I2C::Setup()>
 8014788:	eba5 050a 	sub.w	r5, r5, sl
 801478c:	f10a 0102 	add.w	r1, sl, #2
 8014790:	a804      	add	r0, sp, #16
 8014792:	f002 ffdd 	bl	8017750 <gd32_i2c_write>
 8014796:	4454      	add	r4, sl
 8014798:	9501      	str	r5, [sp, #4]
 801479a:	44d3      	add	fp, sl
 801479c:	9d01      	ldr	r5, [sp, #4]
 801479e:	2d00      	cmp	r5, #0
 80147a0:	d1cb      	bne.n	801473a <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 80147a2:	e7c7      	b.n	8014734 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x14>
 80147a4:	f813 0b01 	ldrb.w	r0, [r3], #1
 80147a8:	f802 0f01 	strb.w	r0, [r2, #1]!
 80147ac:	e7e7      	b.n	801477e <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x5e>
 80147ae:	f04f 0b00 	mov.w	fp, #0
 80147b2:	f10d 080c 	add.w	r8, sp, #12
 80147b6:	f04f 091e 	mov.w	r9, #30
 80147ba:	e7ef      	b.n	801479c <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x7c>

080147bc <StoreDevice::StoreDevice()>:
 80147bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80147be:	4604      	mov	r4, r0
 80147c0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80147c4:	2050      	movs	r0, #80	; 0x50
 80147c6:	4d11      	ldr	r5, [pc, #68]	; (801480c <StoreDevice::StoreDevice()+0x50>)
 80147c8:	8123      	strh	r3, [r4, #8]
 80147ca:	7020      	strb	r0, [r4, #0]
 80147cc:	6065      	str	r5, [r4, #4]
 80147ce:	f002 ffb9 	bl	8017744 <gd32_i2c_set_address>
 80147d2:	4628      	mov	r0, r5
 80147d4:	f002 ffae 	bl	8017734 <gd32_i2c_set_baudrate>
 80147d8:	2101      	movs	r1, #1
 80147da:	f10d 0007 	add.w	r0, sp, #7
 80147de:	f003 f81d 	bl	801781c <gd32_i2c_read>
 80147e2:	2800      	cmp	r0, #0
 80147e4:	bf0c      	ite	eq
 80147e6:	2301      	moveq	r3, #1
 80147e8:	2300      	movne	r3, #0
 80147ea:	7223      	strb	r3, [r4, #8]
 80147ec:	72a3      	strb	r3, [r4, #10]
 80147ee:	d006      	beq.n	80147fe <StoreDevice::StoreDevice()+0x42>
 80147f0:	7821      	ldrb	r1, [r4, #0]
 80147f2:	4807      	ldr	r0, [pc, #28]	; (8014810 <StoreDevice::StoreDevice()+0x54>)
 80147f4:	f7f5 fe48 	bl	800a488 <printf>
 80147f8:	4620      	mov	r0, r4
 80147fa:	b003      	add	sp, #12
 80147fc:	bd30      	pop	{r4, r5, pc}
 80147fe:	2204      	movs	r2, #4
 8014800:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8014804:	4803      	ldr	r0, [pc, #12]	; (8014814 <StoreDevice::StoreDevice()+0x58>)
 8014806:	f7f5 fe3f 	bl	800a488 <printf>
 801480a:	e7f5      	b.n	80147f8 <StoreDevice::StoreDevice()+0x3c>
 801480c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8014810:	0801b414 	stmdaeq	r1, {r2, r4, sl, ip, sp, pc}
 8014814:	0801b433 	stmdaeq	r1, {r0, r1, r4, r5, sl, ip, sp, pc}

08014818 <StoreDevice::GetSize() const>:
 8014818:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 801481c:	4770      	bx	lr

0801481e <StoreDevice::GetSectorSize() const>:
 801481e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8014822:	4770      	bx	lr

08014824 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 8014824:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014826:	461e      	mov	r6, r3
 8014828:	7a03      	ldrb	r3, [r0, #8]
 801482a:	4604      	mov	r4, r0
 801482c:	460d      	mov	r5, r1
 801482e:	4617      	mov	r7, r2
 8014830:	b1b3      	cbz	r3, 8014860 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x3c>
 8014832:	2101      	movs	r1, #1
 8014834:	a801      	add	r0, sp, #4
 8014836:	f002 fff1 	bl	801781c <gd32_i2c_read>
 801483a:	2800      	cmp	r0, #0
 801483c:	d1f9      	bne.n	8014832 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xe>
 801483e:	4620      	mov	r0, r4
 8014840:	ba6d      	rev16	r5, r5
 8014842:	f8ad 5004 	strh.w	r5, [sp, #4]
 8014846:	f7ff ff61 	bl	801470c <HAL_I2C::Setup()>
 801484a:	2102      	movs	r1, #2
 801484c:	a801      	add	r0, sp, #4
 801484e:	f002 ff7f 	bl	8017750 <gd32_i2c_write>
 8014852:	4620      	mov	r0, r4
 8014854:	f7ff ff5a 	bl	801470c <HAL_I2C::Setup()>
 8014858:	4639      	mov	r1, r7
 801485a:	4630      	mov	r0, r6
 801485c:	f002 ffde 	bl	801781c <gd32_i2c_read>
 8014860:	9b08      	ldr	r3, [sp, #32]
 8014862:	2200      	movs	r2, #0
 8014864:	2001      	movs	r0, #1
 8014866:	601a      	str	r2, [r3, #0]
 8014868:	b003      	add	sp, #12
 801486a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801486c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 801486c:	2200      	movs	r2, #0
 801486e:	601a      	str	r2, [r3, #0]
 8014870:	2001      	movs	r0, #1
 8014872:	4770      	bx	lr

08014874 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8014874:	b510      	push	{r4, lr}
 8014876:	4614      	mov	r4, r2
 8014878:	461a      	mov	r2, r3
 801487a:	4623      	mov	r3, r4
 801487c:	f7ff ff50 	bl	8014720 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>
 8014880:	9b02      	ldr	r3, [sp, #8]
 8014882:	2200      	movs	r2, #0
 8014884:	601a      	str	r2, [r3, #0]
 8014886:	2001      	movs	r0, #1
 8014888:	bd10      	pop	{r4, pc}

0801488a <StoreE131::~StoreE131()>:
 801488a:	4770      	bx	lr

0801488c <StoreE131::Copy(e131params::Params*)>:
 801488c:	b507      	push	{r0, r1, r2, lr}
 801488e:	2300      	movs	r3, #0
 8014890:	460a      	mov	r2, r1
 8014892:	2101      	movs	r1, #1
 8014894:	e9cd 3100 	strd	r3, r1, [sp]
 8014898:	4804      	ldr	r0, [pc, #16]	; (80148ac <StoreE131::Copy(e131params::Params*)+0x20>)
 801489a:	231f      	movs	r3, #31
 801489c:	6800      	ldr	r0, [r0, #0]
 801489e:	2104      	movs	r1, #4
 80148a0:	f7ff fd70 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80148a4:	b003      	add	sp, #12
 80148a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80148aa:	bf00      	nop
 80148ac:	2000fc68 	andcs	pc, r0, r8, ror #24

080148b0 <StoreE131::Update(e131params::Params const*)>:
 80148b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80148b2:	2200      	movs	r2, #0
 80148b4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80148b8:	460b      	mov	r3, r1
 80148ba:	4805      	ldr	r0, [pc, #20]	; (80148d0 <StoreE131::Update(e131params::Params const*)+0x20>)
 80148bc:	211f      	movs	r1, #31
 80148be:	9100      	str	r1, [sp, #0]
 80148c0:	6800      	ldr	r0, [r0, #0]
 80148c2:	2104      	movs	r1, #4
 80148c4:	f7ff fd1e 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80148c8:	b005      	add	sp, #20
 80148ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80148ce:	bf00      	nop
 80148d0:	2000fc68 	andcs	pc, r0, r8, ror #24

080148d4 <StoreE131::~StoreE131()>:
 80148d4:	b510      	push	{r4, lr}
 80148d6:	4604      	mov	r4, r0
 80148d8:	f001 f988 	bl	8015bec <operator delete(void*)>
 80148dc:	4620      	mov	r0, r4
 80148de:	bd10      	pop	{r4, pc}

080148e0 <StoreE131::StoreE131()>:
 80148e0:	4a02      	ldr	r2, [pc, #8]	; (80148ec <StoreE131::StoreE131()+0xc>)
 80148e2:	6002      	str	r2, [r0, #0]
 80148e4:	4a02      	ldr	r2, [pc, #8]	; (80148f0 <StoreE131::StoreE131()+0x10>)
 80148e6:	6010      	str	r0, [r2, #0]
 80148e8:	4770      	bx	lr
 80148ea:	bf00      	nop
 80148ec:	0801b478 	stmdaeq	r1, {r3, r4, r5, r6, sl, ip, sp, pc}
 80148f0:	2000fc80 	andcs	pc, r0, r0, lsl #25

080148f4 <StorePixelDmx::~StorePixelDmx()>:
 80148f4:	4770      	bx	lr

080148f6 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 80148f6:	3804      	subs	r0, #4
 80148f8:	4770      	bx	lr
	...

080148fc <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 80148fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80148fe:	2200      	movs	r2, #0
 8014900:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8014904:	460b      	mov	r3, r1
 8014906:	4805      	ldr	r0, [pc, #20]	; (801491c <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8014908:	2136      	movs	r1, #54	; 0x36
 801490a:	9100      	str	r1, [sp, #0]
 801490c:	6800      	ldr	r0, [r0, #0]
 801490e:	2103      	movs	r1, #3
 8014910:	f7ff fcf8 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014914:	b005      	add	sp, #20
 8014916:	f85d fb04 	ldr.w	pc, [sp], #4
 801491a:	bf00      	nop
 801491c:	2000fc68 	andcs	pc, r0, r8, ror #24

08014920 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8014920:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014922:	2304      	movs	r3, #4
 8014924:	2200      	movs	r2, #0
 8014926:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801492a:	4807      	ldr	r0, [pc, #28]	; (8014948 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 801492c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014930:	2302      	movs	r3, #2
 8014932:	9300      	str	r3, [sp, #0]
 8014934:	6800      	ldr	r0, [r0, #0]
 8014936:	f10d 0316 	add.w	r3, sp, #22
 801493a:	2207      	movs	r2, #7
 801493c:	2103      	movs	r1, #3
 801493e:	f7ff fce1 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014942:	b007      	add	sp, #28
 8014944:	f85d fb04 	ldr.w	pc, [sp], #4
 8014948:	2000fc68 	andcs	pc, r0, r8, ror #24

0801494c <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 801494c:	f1a0 0004 	sub.w	r0, r0, #4
 8014950:	e7e6      	b.n	8014920 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 8014952:	bf00      	nop

08014954 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8014954:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014956:	2308      	movs	r3, #8
 8014958:	2200      	movs	r2, #0
 801495a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801495e:	4807      	ldr	r0, [pc, #28]	; (801497c <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 8014960:	f88d 1017 	strb.w	r1, [sp, #23]
 8014964:	2301      	movs	r3, #1
 8014966:	9300      	str	r3, [sp, #0]
 8014968:	6800      	ldr	r0, [r0, #0]
 801496a:	f10d 0317 	add.w	r3, sp, #23
 801496e:	2210      	movs	r2, #16
 8014970:	2103      	movs	r1, #3
 8014972:	f7ff fcc7 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014976:	b007      	add	sp, #28
 8014978:	f85d fb04 	ldr.w	pc, [sp], #4
 801497c:	2000fc68 	andcs	pc, r0, r8, ror #24

08014980 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 8014980:	f1a0 0004 	sub.w	r0, r0, #4
 8014984:	e7e6      	b.n	8014954 <StorePixelDmx::SaveTestPattern(unsigned char)>
 8014986:	bf00      	nop

08014988 <StorePixelDmx::SaveMap(unsigned char)>:
 8014988:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801498a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801498e:	2200      	movs	r2, #0
 8014990:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014994:	4807      	ldr	r0, [pc, #28]	; (80149b4 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 8014996:	f88d 1017 	strb.w	r1, [sp, #23]
 801499a:	2301      	movs	r3, #1
 801499c:	9300      	str	r3, [sp, #0]
 801499e:	6800      	ldr	r0, [r0, #0]
 80149a0:	f10d 0317 	add.w	r3, sp, #23
 80149a4:	2213      	movs	r2, #19
 80149a6:	2103      	movs	r1, #3
 80149a8:	f7ff fcac 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80149ac:	b007      	add	sp, #28
 80149ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80149b2:	bf00      	nop
 80149b4:	2000fc68 	andcs	pc, r0, r8, ror #24

080149b8 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 80149b8:	f1a0 0004 	sub.w	r0, r0, #4
 80149bc:	e7e4      	b.n	8014988 <StorePixelDmx::SaveMap(unsigned char)>
 80149be:	bf00      	nop

080149c0 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 80149c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80149c2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80149c6:	2200      	movs	r2, #0
 80149c8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80149cc:	4807      	ldr	r0, [pc, #28]	; (80149ec <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 80149ce:	f8ad 1016 	strh.w	r1, [sp, #22]
 80149d2:	2302      	movs	r3, #2
 80149d4:	9300      	str	r3, [sp, #0]
 80149d6:	6800      	ldr	r0, [r0, #0]
 80149d8:	f10d 0316 	add.w	r3, sp, #22
 80149dc:	2211      	movs	r2, #17
 80149de:	2103      	movs	r1, #3
 80149e0:	f7ff fc90 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80149e4:	b007      	add	sp, #28
 80149e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80149ea:	bf00      	nop
 80149ec:	2000fc68 	andcs	pc, r0, r8, ror #24

080149f0 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 80149f0:	f1a0 0004 	sub.w	r0, r0, #4
 80149f4:	e7e4      	b.n	80149c0 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 80149f6:	bf00      	nop

080149f8 <StorePixelDmx::SaveCount(unsigned short)>:
 80149f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80149fa:	2302      	movs	r3, #2
 80149fc:	2200      	movs	r2, #0
 80149fe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014a02:	4807      	ldr	r0, [pc, #28]	; (8014a20 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8014a04:	9300      	str	r3, [sp, #0]
 8014a06:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014a0a:	6800      	ldr	r0, [r0, #0]
 8014a0c:	f10d 0316 	add.w	r3, sp, #22
 8014a10:	2205      	movs	r2, #5
 8014a12:	2103      	movs	r1, #3
 8014a14:	f7ff fc76 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014a18:	b007      	add	sp, #28
 8014a1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8014a1e:	bf00      	nop
 8014a20:	2000fc68 	andcs	pc, r0, r8, ror #24

08014a24 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8014a24:	f1a0 0004 	sub.w	r0, r0, #4
 8014a28:	e7e6      	b.n	80149f8 <StorePixelDmx::SaveCount(unsigned short)>
 8014a2a:	bf00      	nop

08014a2c <StorePixelDmx::SaveType(unsigned char)>:
 8014a2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014a2e:	2301      	movs	r3, #1
 8014a30:	2200      	movs	r2, #0
 8014a32:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014a36:	4807      	ldr	r0, [pc, #28]	; (8014a54 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8014a38:	9300      	str	r3, [sp, #0]
 8014a3a:	f88d 1017 	strb.w	r1, [sp, #23]
 8014a3e:	6800      	ldr	r0, [r0, #0]
 8014a40:	f10d 0317 	add.w	r3, sp, #23
 8014a44:	2204      	movs	r2, #4
 8014a46:	2103      	movs	r1, #3
 8014a48:	f7ff fc5c 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014a4c:	b007      	add	sp, #28
 8014a4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014a52:	bf00      	nop
 8014a54:	2000fc68 	andcs	pc, r0, r8, ror #24

08014a58 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8014a58:	f1a0 0004 	sub.w	r0, r0, #4
 8014a5c:	e7e6      	b.n	8014a2c <StorePixelDmx::SaveType(unsigned char)>
 8014a5e:	bf00      	nop

08014a60 <StorePixelDmx::~StorePixelDmx()>:
 8014a60:	b510      	push	{r4, lr}
 8014a62:	4604      	mov	r4, r0
 8014a64:	f001 f8c2 	bl	8015bec <operator delete(void*)>
 8014a68:	4620      	mov	r0, r4
 8014a6a:	bd10      	pop	{r4, pc}

08014a6c <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8014a6c:	f1a0 0004 	sub.w	r0, r0, #4
 8014a70:	e7f6      	b.n	8014a60 <StorePixelDmx::~StorePixelDmx()>
	...

08014a74 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 8014a74:	b507      	push	{r0, r1, r2, lr}
 8014a76:	2300      	movs	r3, #0
 8014a78:	460a      	mov	r2, r1
 8014a7a:	2101      	movs	r1, #1
 8014a7c:	e9cd 3100 	strd	r3, r1, [sp]
 8014a80:	4804      	ldr	r0, [pc, #16]	; (8014a94 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 8014a82:	2336      	movs	r3, #54	; 0x36
 8014a84:	6800      	ldr	r0, [r0, #0]
 8014a86:	2103      	movs	r1, #3
 8014a88:	f7ff fc7c 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8014a8c:	b003      	add	sp, #12
 8014a8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014a92:	bf00      	nop
 8014a94:	2000fc68 	andcs	pc, r0, r8, ror #24

08014a98 <StorePixelDmx::StorePixelDmx()>:
 8014a98:	4a03      	ldr	r2, [pc, #12]	; (8014aa8 <StorePixelDmx::StorePixelDmx()+0x10>)
 8014a9a:	6002      	str	r2, [r0, #0]
 8014a9c:	3230      	adds	r2, #48	; 0x30
 8014a9e:	6042      	str	r2, [r0, #4]
 8014aa0:	4a02      	ldr	r2, [pc, #8]	; (8014aac <StorePixelDmx::StorePixelDmx()+0x14>)
 8014aa2:	6010      	str	r0, [r2, #0]
 8014aa4:	4770      	bx	lr
 8014aa6:	bf00      	nop
 8014aa8:	0801b490 	stmdaeq	r1, {r4, r7, sl, ip, sp, pc}
 8014aac:	2000fc84 	andcs	pc, r0, r4, lsl #25

08014ab0 <StoreRDMDevice::~StoreRDMDevice()>:
 8014ab0:	4770      	bx	lr

08014ab2 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8014ab2:	3804      	subs	r0, #4
 8014ab4:	4770      	bx	lr
	...

08014ab8 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8014ab8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014aba:	2200      	movs	r2, #0
 8014abc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8014ac0:	460b      	mov	r3, r1
 8014ac2:	4805      	ldr	r0, [pc, #20]	; (8014ad8 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 8014ac4:	2129      	movs	r1, #41	; 0x29
 8014ac6:	9100      	str	r1, [sp, #0]
 8014ac8:	6800      	ldr	r0, [r0, #0]
 8014aca:	210b      	movs	r1, #11
 8014acc:	f7ff fc1a 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014ad0:	b005      	add	sp, #20
 8014ad2:	f85d fb04 	ldr.w	pc, [sp], #4
 8014ad6:	bf00      	nop
 8014ad8:	2000fc68 	andcs	pc, r0, r8, ror #24

08014adc <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8014adc:	b570      	push	{r4, r5, r6, lr}
 8014ade:	4d0d      	ldr	r5, [pc, #52]	; (8014b14 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8014ae0:	b086      	sub	sp, #24
 8014ae2:	2401      	movs	r4, #1
 8014ae4:	2600      	movs	r6, #0
 8014ae6:	6828      	ldr	r0, [r5, #0]
 8014ae8:	f88d 2017 	strb.w	r2, [sp, #23]
 8014aec:	460b      	mov	r3, r1
 8014aee:	9200      	str	r2, [sp, #0]
 8014af0:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8014af4:	2204      	movs	r2, #4
 8014af6:	210b      	movs	r1, #11
 8014af8:	f7ff fc04 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014afc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8014b00:	6828      	ldr	r0, [r5, #0]
 8014b02:	9400      	str	r4, [sp, #0]
 8014b04:	f10d 0317 	add.w	r3, sp, #23
 8014b08:	2224      	movs	r2, #36	; 0x24
 8014b0a:	210b      	movs	r1, #11
 8014b0c:	f7ff fbfa 	bl	8014304 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014b10:	b006      	add	sp, #24
 8014b12:	bd70      	pop	{r4, r5, r6, pc}
 8014b14:	2000fc68 	andcs	pc, r0, r8, ror #24

08014b18 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8014b18:	f1a0 0004 	sub.w	r0, r0, #4
 8014b1c:	e7de      	b.n	8014adc <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8014b1e:	bf00      	nop

08014b20 <StoreRDMDevice::~StoreRDMDevice()>:
 8014b20:	b510      	push	{r4, lr}
 8014b22:	4604      	mov	r4, r0
 8014b24:	f001 f862 	bl	8015bec <operator delete(void*)>
 8014b28:	4620      	mov	r0, r4
 8014b2a:	bd10      	pop	{r4, pc}

08014b2c <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8014b2c:	f1a0 0004 	sub.w	r0, r0, #4
 8014b30:	e7f6      	b.n	8014b20 <StoreRDMDevice::~StoreRDMDevice()>
	...

08014b34 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8014b34:	b507      	push	{r0, r1, r2, lr}
 8014b36:	2300      	movs	r3, #0
 8014b38:	460a      	mov	r2, r1
 8014b3a:	2101      	movs	r1, #1
 8014b3c:	e9cd 3100 	strd	r3, r1, [sp]
 8014b40:	4804      	ldr	r0, [pc, #16]	; (8014b54 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 8014b42:	2329      	movs	r3, #41	; 0x29
 8014b44:	6800      	ldr	r0, [r0, #0]
 8014b46:	210b      	movs	r1, #11
 8014b48:	f7ff fc1c 	bl	8014384 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8014b4c:	b003      	add	sp, #12
 8014b4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014b52:	bf00      	nop
 8014b54:	2000fc68 	andcs	pc, r0, r8, ror #24

08014b58 <StoreRDMDevice::StoreRDMDevice()>:
 8014b58:	4a03      	ldr	r2, [pc, #12]	; (8014b68 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8014b5a:	6002      	str	r2, [r0, #0]
 8014b5c:	321c      	adds	r2, #28
 8014b5e:	6042      	str	r2, [r0, #4]
 8014b60:	4a02      	ldr	r2, [pc, #8]	; (8014b6c <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8014b62:	6010      	str	r0, [r2, #0]
 8014b64:	4770      	bx	lr
 8014b66:	bf00      	nop
 8014b68:	0801b4e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, ip, sp, pc}
 8014b6c:	2000fc88 	andcs	pc, r0, r8, lsl #25

08014b70 <properties::convert_json_file(char*, unsigned short, bool)>:
 8014b70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b74:	7803      	ldrb	r3, [r0, #0]
 8014b76:	2b7b      	cmp	r3, #123	; 0x7b
 8014b78:	f040 80a4 	bne.w	8014cc4 <properties::convert_json_file(char*, unsigned short, bool)+0x154>
 8014b7c:	b182      	cbz	r2, 8014ba0 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8014b7e:	2401      	movs	r4, #1
 8014b80:	4606      	mov	r6, r0
 8014b82:	4623      	mov	r3, r4
 8014b84:	2a00      	cmp	r2, #0
 8014b86:	bf0c      	ite	eq
 8014b88:	f04f 0c0a 	moveq.w	ip, #10
 8014b8c:	f04f 0c00 	movne.w	ip, #0
 8014b90:	273d      	movs	r7, #61	; 0x3d
 8014b92:	42a1      	cmp	r1, r4
 8014b94:	d852      	bhi.n	8014c3c <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8014b96:	4618      	mov	r0, r3
 8014b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014b9c:	463c      	mov	r4, r7
 8014b9e:	e7f1      	b.n	8014b84 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 8014ba0:	2323      	movs	r3, #35	; 0x23
 8014ba2:	f800 3b01 	strb.w	r3, [r0], #1
 8014ba6:	2701      	movs	r7, #1
 8014ba8:	4604      	mov	r4, r0
 8014baa:	42b9      	cmp	r1, r7
 8014bac:	d811      	bhi.n	8014bd2 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8014bae:	2301      	movs	r3, #1
 8014bb0:	4606      	mov	r6, r0
 8014bb2:	200a      	movs	r0, #10
 8014bb4:	f806 0b01 	strb.w	r0, [r6], #1
 8014bb8:	3301      	adds	r3, #1
 8014bba:	4625      	mov	r5, r4
 8014bbc:	4628      	mov	r0, r5
 8014bbe:	3501      	adds	r5, #1
 8014bc0:	7804      	ldrb	r4, [r0, #0]
 8014bc2:	2c7b      	cmp	r4, #123	; 0x7b
 8014bc4:	d0ea      	beq.n	8014b9c <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8014bc6:	42b9      	cmp	r1, r7
 8014bc8:	f107 0401 	add.w	r4, r7, #1
 8014bcc:	d9da      	bls.n	8014b84 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 8014bce:	4627      	mov	r7, r4
 8014bd0:	e7f4      	b.n	8014bbc <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8014bd2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014bd6:	2b22      	cmp	r3, #34	; 0x22
 8014bd8:	d119      	bne.n	8014c0e <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8014bda:	46a4      	mov	ip, r4
 8014bdc:	4605      	mov	r5, r0
 8014bde:	2601      	movs	r6, #1
 8014be0:	f89c e000 	ldrb.w	lr, [ip]
 8014be4:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014be8:	4664      	mov	r4, ip
 8014bea:	4628      	mov	r0, r5
 8014bec:	4633      	mov	r3, r6
 8014bee:	f10c 0c01 	add.w	ip, ip, #1
 8014bf2:	f105 0501 	add.w	r5, r5, #1
 8014bf6:	f106 0601 	add.w	r6, r6, #1
 8014bfa:	d0d9      	beq.n	8014bb0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8014bfc:	3701      	adds	r7, #1
 8014bfe:	42b9      	cmp	r1, r7
 8014c00:	4664      	mov	r4, ip
 8014c02:	f805 ec01 	strb.w	lr, [r5, #-1]
 8014c06:	d8eb      	bhi.n	8014be0 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8014c08:	4633      	mov	r3, r6
 8014c0a:	4628      	mov	r0, r5
 8014c0c:	e7d0      	b.n	8014bb0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8014c0e:	3701      	adds	r7, #1
 8014c10:	e7cb      	b.n	8014baa <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8014c12:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014c16:	d111      	bne.n	8014c3c <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8014c18:	eba3 0800 	sub.w	r8, r3, r0
 8014c1c:	eb08 0300 	add.w	r3, r8, r0
 8014c20:	4602      	mov	r2, r0
 8014c22:	f810 eb01 	ldrb.w	lr, [r0], #1
 8014c26:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014c2a:	f104 0501 	add.w	r5, r4, #1
 8014c2e:	d04c      	beq.n	8014cca <properties::convert_json_file(char*, unsigned short, bool)+0x15a>
 8014c30:	42a1      	cmp	r1, r4
 8014c32:	d911      	bls.n	8014c58 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8014c34:	f806 eb01 	strb.w	lr, [r6], #1
 8014c38:	462c      	mov	r4, r5
 8014c3a:	e7ef      	b.n	8014c1c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8014c3c:	42a1      	cmp	r1, r4
 8014c3e:	f890 e000 	ldrb.w	lr, [r0]
 8014c42:	4605      	mov	r5, r0
 8014c44:	f104 0401 	add.w	r4, r4, #1
 8014c48:	f100 0001 	add.w	r0, r0, #1
 8014c4c:	d8e1      	bhi.n	8014c12 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8014c4e:	4628      	mov	r0, r5
 8014c50:	e7e2      	b.n	8014c18 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8014c52:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8014c56:	d009      	beq.n	8014c6c <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 8014c58:	42a9      	cmp	r1, r5
 8014c5a:	f892 e000 	ldrb.w	lr, [r2]
 8014c5e:	4614      	mov	r4, r2
 8014c60:	f105 0501 	add.w	r5, r5, #1
 8014c64:	f102 0201 	add.w	r2, r2, #1
 8014c68:	d8f3      	bhi.n	8014c52 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8014c6a:	4622      	mov	r2, r4
 8014c6c:	7814      	ldrb	r4, [r2, #0]
 8014c6e:	2c2f      	cmp	r4, #47	; 0x2f
 8014c70:	4696      	mov	lr, r2
 8014c72:	4628      	mov	r0, r5
 8014c74:	f102 0201 	add.w	r2, r2, #1
 8014c78:	f105 0501 	add.w	r5, r5, #1
 8014c7c:	d81a      	bhi.n	8014cb4 <properties::convert_json_file(char*, unsigned short, bool)+0x144>
 8014c7e:	4281      	cmp	r1, r0
 8014c80:	d8f4      	bhi.n	8014c6c <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 8014c82:	2c22      	cmp	r4, #34	; 0x22
 8014c84:	bf08      	it	eq
 8014c86:	4696      	moveq	lr, r2
 8014c88:	4670      	mov	r0, lr
 8014c8a:	1c6c      	adds	r4, r5, #1
 8014c8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014c90:	2a22      	cmp	r2, #34	; 0x22
 8014c92:	d011      	beq.n	8014cb8 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014c94:	2a2c      	cmp	r2, #44	; 0x2c
 8014c96:	d00f      	beq.n	8014cb8 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014c98:	2a7d      	cmp	r2, #125	; 0x7d
 8014c9a:	d00d      	beq.n	8014cb8 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014c9c:	42a9      	cmp	r1, r5
 8014c9e:	d90f      	bls.n	8014cc0 <properties::convert_json_file(char*, unsigned short, bool)+0x150>
 8014ca0:	f1a2 0520 	sub.w	r5, r2, #32
 8014ca4:	2d5a      	cmp	r5, #90	; 0x5a
 8014ca6:	d803      	bhi.n	8014cb0 <properties::convert_json_file(char*, unsigned short, bool)+0x140>
 8014ca8:	f806 2b01 	strb.w	r2, [r6], #1
 8014cac:	3301      	adds	r3, #1
 8014cae:	4686      	mov	lr, r0
 8014cb0:	4625      	mov	r5, r4
 8014cb2:	e7e9      	b.n	8014c88 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8014cb4:	4605      	mov	r5, r0
 8014cb6:	e7e7      	b.n	8014c88 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8014cb8:	f806 cb01 	strb.w	ip, [r6], #1
 8014cbc:	3301      	adds	r3, #1
 8014cbe:	462c      	mov	r4, r5
 8014cc0:	3401      	adds	r4, #1
 8014cc2:	e766      	b.n	8014b92 <properties::convert_json_file(char*, unsigned short, bool)+0x22>
 8014cc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014cc8:	e766      	b.n	8014b98 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8014cca:	f806 7b01 	strb.w	r7, [r6], #1
 8014cce:	3301      	adds	r3, #1
 8014cd0:	4625      	mov	r5, r4
 8014cd2:	e7c1      	b.n	8014c58 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>

08014cd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8014cd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014cd8:	6002      	str	r2, [r0, #0]
 8014cda:	4614      	mov	r4, r2
 8014cdc:	2200      	movs	r2, #0
 8014cde:	80c2      	strh	r2, [r0, #6]
 8014ce0:	4a1c      	ldr	r2, [pc, #112]	; (8014d54 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8014ce2:	8083      	strh	r3, [r0, #4]
 8014ce4:	7812      	ldrb	r2, [r2, #0]
 8014ce6:	f002 0201 	and.w	r2, r2, #1
 8014cea:	4606      	mov	r6, r0
 8014cec:	7202      	strb	r2, [r0, #8]
 8014cee:	4608      	mov	r0, r1
 8014cf0:	4605      	mov	r5, r0
 8014cf2:	3001      	adds	r0, #1
 8014cf4:	782f      	ldrb	r7, [r5, #0]
 8014cf6:	2f00      	cmp	r7, #0
 8014cf8:	d1fa      	bne.n	8014cf0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8014cfa:	1a6d      	subs	r5, r5, r1
 8014cfc:	b29b      	uxth	r3, r3
 8014cfe:	b1d2      	cbz	r2, 8014d36 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8014d00:	1d2f      	adds	r7, r5, #4
 8014d02:	429f      	cmp	r7, r3
 8014d04:	d814      	bhi.n	8014d30 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014d06:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8014d0a:	f04f 0922 	mov.w	r9, #34	; 0x22
 8014d0e:	462a      	mov	r2, r5
 8014d10:	f884 8000 	strb.w	r8, [r4]
 8014d14:	f884 9001 	strb.w	r9, [r4, #1]
 8014d18:	1ca0      	adds	r0, r4, #2
 8014d1a:	f001 f868 	bl	8015dee <memmove>
 8014d1e:	1963      	adds	r3, r4, r5
 8014d20:	223a      	movs	r2, #58	; 0x3a
 8014d22:	f883 9002 	strb.w	r9, [r3, #2]
 8014d26:	70da      	strb	r2, [r3, #3]
 8014d28:	3505      	adds	r5, #5
 8014d2a:	f804 8007 	strb.w	r8, [r4, r7]
 8014d2e:	80f5      	strh	r5, [r6, #6]
 8014d30:	4630      	mov	r0, r6
 8014d32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014d36:	1caf      	adds	r7, r5, #2
 8014d38:	429f      	cmp	r7, r3
 8014d3a:	d8f9      	bhi.n	8014d30 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014d3c:	4620      	mov	r0, r4
 8014d3e:	2323      	movs	r3, #35	; 0x23
 8014d40:	f800 3b01 	strb.w	r3, [r0], #1
 8014d44:	462a      	mov	r2, r5
 8014d46:	442c      	add	r4, r5
 8014d48:	f001 f851 	bl	8015dee <memmove>
 8014d4c:	230a      	movs	r3, #10
 8014d4e:	7063      	strb	r3, [r4, #1]
 8014d50:	80f7      	strh	r7, [r6, #6]
 8014d52:	e7ed      	b.n	8014d30 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014d54:	2000fc8c 	andcs	pc, r0, ip, lsl #25

08014d58 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8014d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d5a:	469c      	mov	ip, r3
 8014d5c:	8885      	ldrh	r5, [r0, #4]
 8014d5e:	88c3      	ldrh	r3, [r0, #6]
 8014d60:	42ab      	cmp	r3, r5
 8014d62:	b085      	sub	sp, #20
 8014d64:	d302      	bcc.n	8014d6c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8014d66:	2000      	movs	r0, #0
 8014d68:	b005      	add	sp, #20
 8014d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014d6c:	4604      	mov	r4, r0
 8014d6e:	6800      	ldr	r0, [r0, #0]
 8014d70:	f894 e008 	ldrb.w	lr, [r4, #8]
 8014d74:	4418      	add	r0, r3
 8014d76:	1aed      	subs	r5, r5, r3
 8014d78:	b2d6      	uxtb	r6, r2
 8014d7a:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8014d7e:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8014d82:	0e12      	lsrs	r2, r2, #24
 8014d84:	f1bc 0f00 	cmp.w	ip, #0
 8014d88:	d109      	bne.n	8014d9e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8014d8a:	f1be 0f00 	cmp.w	lr, #0
 8014d8e:	d109      	bne.n	8014da4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8014d90:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014d94:	e9cd 6700 	strd	r6, r7, [sp]
 8014d98:	4a0e      	ldr	r2, [pc, #56]	; (8014dd4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8014d9a:	460b      	mov	r3, r1
 8014d9c:	e008      	b.n	8014db0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8014d9e:	f1be 0f00 	cmp.w	lr, #0
 8014da2:	d00f      	beq.n	8014dc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8014da4:	e9cd 6700 	strd	r6, r7, [sp]
 8014da8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014dac:	4a0a      	ldr	r2, [pc, #40]	; (8014dd8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8014dae:	460b      	mov	r3, r1
 8014db0:	4629      	mov	r1, r5
 8014db2:	f7f5 fb91 	bl	800a4d8 <snprintf>
 8014db6:	4285      	cmp	r5, r0
 8014db8:	dbd5      	blt.n	8014d66 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8014dba:	88e3      	ldrh	r3, [r4, #6]
 8014dbc:	4403      	add	r3, r0
 8014dbe:	80e3      	strh	r3, [r4, #6]
 8014dc0:	2001      	movs	r0, #1
 8014dc2:	e7d1      	b.n	8014d68 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8014dc4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014dc8:	e9cd 6700 	strd	r6, r7, [sp]
 8014dcc:	4a03      	ldr	r2, [pc, #12]	; (8014ddc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8014dce:	460b      	mov	r3, r1
 8014dd0:	e7ee      	b.n	8014db0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8014dd2:	bf00      	nop
 8014dd4:	0801b5c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, ip, sp, pc}
 8014dd8:	0801b5b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, ip, sp, pc}
 8014ddc:	0801b5ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sl, ip, sp, pc}

08014de0 <PropertiesBuilder::AddComment(char const*)>:
 8014de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014de2:	7a06      	ldrb	r6, [r0, #8]
 8014de4:	b996      	cbnz	r6, 8014e0c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8014de6:	4604      	mov	r4, r0
 8014de8:	88c0      	ldrh	r0, [r0, #6]
 8014dea:	88a5      	ldrh	r5, [r4, #4]
 8014dec:	42a8      	cmp	r0, r5
 8014dee:	d20d      	bcs.n	8014e0c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8014df0:	6827      	ldr	r7, [r4, #0]
 8014df2:	4a07      	ldr	r2, [pc, #28]	; (8014e10 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8014df4:	1a2d      	subs	r5, r5, r0
 8014df6:	460b      	mov	r3, r1
 8014df8:	4438      	add	r0, r7
 8014dfa:	4629      	mov	r1, r5
 8014dfc:	f7f5 fb6c 	bl	800a4d8 <snprintf>
 8014e00:	4285      	cmp	r5, r0
 8014e02:	bfa1      	itttt	ge
 8014e04:	88e3      	ldrhge	r3, [r4, #6]
 8014e06:	18c0      	addge	r0, r0, r3
 8014e08:	80e0      	strhge	r0, [r4, #6]
 8014e0a:	2601      	movge	r6, #1
 8014e0c:	4630      	mov	r0, r6
 8014e0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e10:	0801b5da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, ip, sp, pc}

08014e14 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8014e14:	e9c0 1200 	strd	r1, r2, [r0]
 8014e18:	4770      	bx	lr

08014e1a <ReadConfigFile::~ReadConfigFile()>:
 8014e1a:	4770      	bx	lr

08014e1c <ReadConfigFile::Read(char const*, unsigned int)>:
 8014e1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014e20:	4606      	mov	r6, r0
 8014e22:	b0a0      	sub	sp, #128	; 0x80
 8014e24:	460d      	mov	r5, r1
 8014e26:	4614      	mov	r4, r2
 8014e28:	f04f 0800 	mov.w	r8, #0
 8014e2c:	b33c      	cbz	r4, 8014e7e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8014e2e:	466b      	mov	r3, sp
 8014e30:	462a      	mov	r2, r5
 8014e32:	4619      	mov	r1, r3
 8014e34:	e007      	b.n	8014e46 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8014e36:	f803 7b01 	strb.w	r7, [r3], #1
 8014e3a:	1a58      	subs	r0, r3, r1
 8014e3c:	287f      	cmp	r0, #127	; 0x7f
 8014e3e:	4615      	mov	r5, r2
 8014e40:	dc1d      	bgt.n	8014e7e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8014e42:	3c01      	subs	r4, #1
 8014e44:	d00f      	beq.n	8014e66 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8014e46:	7817      	ldrb	r7, [r2, #0]
 8014e48:	2f0d      	cmp	r7, #13
 8014e4a:	4610      	mov	r0, r2
 8014e4c:	f102 0201 	add.w	r2, r2, #1
 8014e50:	d001      	beq.n	8014e56 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8014e52:	2f0a      	cmp	r7, #10
 8014e54:	d1ef      	bne.n	8014e36 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8014e56:	4605      	mov	r5, r0
 8014e58:	b12c      	cbz	r4, 8014e66 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8014e5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014e5e:	2a0d      	cmp	r2, #13
 8014e60:	d00b      	beq.n	8014e7a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8014e62:	2a0a      	cmp	r2, #10
 8014e64:	d009      	beq.n	8014e7a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8014e66:	f89d 2000 	ldrb.w	r2, [sp]
 8014e6a:	2a60      	cmp	r2, #96	; 0x60
 8014e6c:	d9de      	bls.n	8014e2c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8014e6e:	f883 8000 	strb.w	r8, [r3]
 8014e72:	e9d6 3000 	ldrd	r3, r0, [r6]
 8014e76:	4798      	blx	r3
 8014e78:	e7d8      	b.n	8014e2c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8014e7a:	3c01      	subs	r4, #1
 8014e7c:	e7eb      	b.n	8014e56 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8014e7e:	b020      	add	sp, #128	; 0x80
 8014e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e84 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8014e84:	b570      	push	{r4, r5, r6, lr}
 8014e86:	4615      	mov	r5, r2
 8014e88:	461c      	mov	r4, r3
 8014e8a:	f000 f916 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8014e8e:	b180      	cbz	r0, 8014eb2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8014e90:	2100      	movs	r1, #0
 8014e92:	5c43      	ldrb	r3, [r0, r1]
 8014e94:	6826      	ldr	r6, [r4, #0]
 8014e96:	b28a      	uxth	r2, r1
 8014e98:	b143      	cbz	r3, 8014eac <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8014e9a:	42b2      	cmp	r2, r6
 8014e9c:	d303      	bcc.n	8014ea6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8014e9e:	2b0a      	cmp	r3, #10
 8014ea0:	d004      	beq.n	8014eac <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8014ea2:	2002      	movs	r0, #2
 8014ea4:	e004      	b.n	8014eb0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8014ea6:	546b      	strb	r3, [r5, r1]
 8014ea8:	3101      	adds	r1, #1
 8014eaa:	e7f2      	b.n	8014e92 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8014eac:	6022      	str	r2, [r4, #0]
 8014eae:	2000      	movs	r0, #0
 8014eb0:	bd70      	pop	{r4, r5, r6, pc}
 8014eb2:	2001      	movs	r0, #1
 8014eb4:	e7fc      	b.n	8014eb0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08014eb6 <Sscan::Float(char const*, char const*, float&)>:
 8014eb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014eb8:	4614      	mov	r4, r2
 8014eba:	f000 f8fe 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8014ebe:	2800      	cmp	r0, #0
 8014ec0:	d052      	beq.n	8014f68 <Sscan::Float(char const*, char const*, float&)+0xb2>
 8014ec2:	7803      	ldrb	r3, [r0, #0]
 8014ec4:	2b2d      	cmp	r3, #45	; 0x2d
 8014ec6:	bf04      	itt	eq
 8014ec8:	3001      	addeq	r0, #1
 8014eca:	2601      	moveq	r6, #1
 8014ecc:	7803      	ldrb	r3, [r0, #0]
 8014ece:	bf18      	it	ne
 8014ed0:	2600      	movne	r6, #0
 8014ed2:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8014ed6:	d101      	bne.n	8014edc <Sscan::Float(char const*, char const*, float&)+0x26>
 8014ed8:	2002      	movs	r0, #2
 8014eda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014edc:	2300      	movs	r3, #0
 8014ede:	210a      	movs	r1, #10
 8014ee0:	7802      	ldrb	r2, [r0, #0]
 8014ee2:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8014ee6:	2d09      	cmp	r5, #9
 8014ee8:	d8f6      	bhi.n	8014ed8 <Sscan::Float(char const*, char const*, float&)+0x22>
 8014eea:	fb01 2303 	mla	r3, r1, r3, r2
 8014eee:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8014ef2:	2a2e      	cmp	r2, #46	; 0x2e
 8014ef4:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 8014ef8:	d002      	beq.n	8014f00 <Sscan::Float(char const*, char const*, float&)+0x4a>
 8014efa:	f012 0fdf 	tst.w	r2, #223	; 0xdf
 8014efe:	d1ef      	bne.n	8014ee0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8014f00:	ee07 3a90 	vmov	s15, r3
 8014f04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8014f08:	edc4 7a00 	vstr	s15, [r4]
 8014f0c:	7803      	ldrb	r3, [r0, #0]
 8014f0e:	2b2e      	cmp	r3, #46	; 0x2e
 8014f10:	d007      	beq.n	8014f22 <Sscan::Float(char const*, char const*, float&)+0x6c>
 8014f12:	b90e      	cbnz	r6, 8014f18 <Sscan::Float(char const*, char const*, float&)+0x62>
 8014f14:	2000      	movs	r0, #0
 8014f16:	e7e0      	b.n	8014eda <Sscan::Float(char const*, char const*, float&)+0x24>
 8014f18:	eef1 7a67 	vneg.f32	s15, s15
 8014f1c:	edc4 7a00 	vstr	s15, [r4]
 8014f20:	e7f8      	b.n	8014f14 <Sscan::Float(char const*, char const*, float&)+0x5e>
 8014f22:	4603      	mov	r3, r0
 8014f24:	2101      	movs	r1, #1
 8014f26:	2500      	movs	r5, #0
 8014f28:	270a      	movs	r7, #10
 8014f2a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8014f2e:	f012 00df 	ands.w	r0, r2, #223	; 0xdf
 8014f32:	d112      	bne.n	8014f5a <Sscan::Float(char const*, char const*, float&)+0xa4>
 8014f34:	ee07 5a10 	vmov	s14, r5
 8014f38:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8014f3c:	ee07 1a10 	vmov	s14, r1
 8014f40:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8014f44:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8014f48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014f4c:	2e00      	cmp	r6, #0
 8014f4e:	d0e5      	beq.n	8014f1c <Sscan::Float(char const*, char const*, float&)+0x66>
 8014f50:	eef1 7a67 	vneg.f32	s15, s15
 8014f54:	edc4 7a00 	vstr	s15, [r4]
 8014f58:	e7bf      	b.n	8014eda <Sscan::Float(char const*, char const*, float&)+0x24>
 8014f5a:	3a30      	subs	r2, #48	; 0x30
 8014f5c:	2a09      	cmp	r2, #9
 8014f5e:	d8bb      	bhi.n	8014ed8 <Sscan::Float(char const*, char const*, float&)+0x22>
 8014f60:	fb07 2505 	mla	r5, r7, r5, r2
 8014f64:	4379      	muls	r1, r7
 8014f66:	e7e0      	b.n	8014f2a <Sscan::Float(char const*, char const*, float&)+0x74>
 8014f68:	2001      	movs	r0, #1
 8014f6a:	e7b6      	b.n	8014eda <Sscan::Float(char const*, char const*, float&)+0x24>

08014f6c <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8014f6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f6e:	4615      	mov	r5, r2
 8014f70:	f000 f8a3 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8014f74:	bb58      	cbnz	r0, 8014fce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8014f76:	2001      	movs	r0, #1
 8014f78:	e027      	b.n	8014fca <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8014f7a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8014f7e:	2b09      	cmp	r3, #9
 8014f80:	d822      	bhi.n	8014fc8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014f82:	fb0c 2101 	mla	r1, ip, r1, r2
 8014f86:	3930      	subs	r1, #48	; 0x30
 8014f88:	4603      	mov	r3, r0
 8014f8a:	4618      	mov	r0, r3
 8014f8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014f90:	2a2e      	cmp	r2, #46	; 0x2e
 8014f92:	d115      	bne.n	8014fc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8014f94:	29ff      	cmp	r1, #255	; 0xff
 8014f96:	d817      	bhi.n	8014fc8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014f98:	3401      	adds	r4, #1
 8014f9a:	2c03      	cmp	r4, #3
 8014f9c:	f806 1b01 	strb.w	r1, [r6], #1
 8014fa0:	d119      	bne.n	8014fd6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8014fa2:	1d1a      	adds	r2, r3, #4
 8014fa4:	2400      	movs	r4, #0
 8014fa6:	260a      	movs	r6, #10
 8014fa8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8014fac:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8014fb0:	d115      	bne.n	8014fde <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8014fb2:	2cff      	cmp	r4, #255	; 0xff
 8014fb4:	d808      	bhi.n	8014fc8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014fb6:	f88d 4007 	strb.w	r4, [sp, #7]
 8014fba:	9b01      	ldr	r3, [sp, #4]
 8014fbc:	602b      	str	r3, [r5, #0]
 8014fbe:	e004      	b.n	8014fca <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8014fc0:	2a00      	cmp	r2, #0
 8014fc2:	d0e7      	beq.n	8014f94 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8014fc4:	42b8      	cmp	r0, r7
 8014fc6:	d1d8      	bne.n	8014f7a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8014fc8:	2002      	movs	r0, #2
 8014fca:	b003      	add	sp, #12
 8014fcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014fce:	ae01      	add	r6, sp, #4
 8014fd0:	2400      	movs	r4, #0
 8014fd2:	f04f 0c0a 	mov.w	ip, #10
 8014fd6:	4603      	mov	r3, r0
 8014fd8:	1d07      	adds	r7, r0, #4
 8014fda:	2100      	movs	r1, #0
 8014fdc:	e7d5      	b.n	8014f8a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8014fde:	4293      	cmp	r3, r2
 8014fe0:	d0f2      	beq.n	8014fc8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014fe2:	3930      	subs	r1, #48	; 0x30
 8014fe4:	2909      	cmp	r1, #9
 8014fe6:	d8ef      	bhi.n	8014fc8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014fe8:	fb06 1404 	mla	r4, r6, r4, r1
 8014fec:	e7dc      	b.n	8014fa8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08014fee <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8014fee:	b538      	push	{r3, r4, r5, lr}
 8014ff0:	4614      	mov	r4, r2
 8014ff2:	f000 f862 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8014ff6:	b1a8      	cbz	r0, 8015024 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x36>
 8014ff8:	2100      	movs	r1, #0
 8014ffa:	220a      	movs	r2, #10
 8014ffc:	7803      	ldrb	r3, [r0, #0]
 8014ffe:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8015002:	2d09      	cmp	r5, #9
 8015004:	d810      	bhi.n	8015028 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8015006:	fb02 3101 	mla	r1, r2, r1, r3
 801500a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 801500e:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8015012:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8015016:	d1f1      	bne.n	8014ffc <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8015018:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801501c:	d204      	bcs.n	8015028 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 801501e:	8021      	strh	r1, [r4, #0]
 8015020:	4618      	mov	r0, r3
 8015022:	bd38      	pop	{r3, r4, r5, pc}
 8015024:	2301      	movs	r3, #1
 8015026:	e7fb      	b.n	8015020 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8015028:	2302      	movs	r3, #2
 801502a:	e7f9      	b.n	8015020 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801502c <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 801502c:	b570      	push	{r4, r5, r6, lr}
 801502e:	4614      	mov	r4, r2
 8015030:	f000 f843 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8015034:	b1f8      	cbz	r0, 8015076 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8015036:	2300      	movs	r3, #0
 8015038:	461a      	mov	r2, r3
 801503a:	260a      	movs	r6, #10
 801503c:	7805      	ldrb	r5, [r0, #0]
 801503e:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
 8015042:	2909      	cmp	r1, #9
 8015044:	d819      	bhi.n	801507a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8015046:	fba3 3106 	umull	r3, r1, r3, r6
 801504a:	fb06 1102 	mla	r1, r6, r2, r1
 801504e:	3b30      	subs	r3, #48	; 0x30
 8015050:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8015054:	18eb      	adds	r3, r5, r3
 8015056:	f141 0200 	adc.w	r2, r1, #0
 801505a:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 801505e:	f011 01df 	ands.w	r1, r1, #223	; 0xdf
 8015062:	d1eb      	bne.n	801503c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x10>
 8015064:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015068:	4298      	cmp	r0, r3
 801506a:	eb71 0202 	sbcs.w	r2, r1, r2
 801506e:	d304      	bcc.n	801507a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8015070:	6023      	str	r3, [r4, #0]
 8015072:	4608      	mov	r0, r1
 8015074:	bd70      	pop	{r4, r5, r6, pc}
 8015076:	2101      	movs	r1, #1
 8015078:	e7fb      	b.n	8015072 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>
 801507a:	2102      	movs	r1, #2
 801507c:	e7f9      	b.n	8015072 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>

0801507e <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 801507e:	b538      	push	{r3, r4, r5, lr}
 8015080:	4614      	mov	r4, r2
 8015082:	f000 f81a 	bl	80150ba <Sscan::checkName(char const*, char const*)>
 8015086:	b1a0      	cbz	r0, 80150b2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 8015088:	2100      	movs	r1, #0
 801508a:	220a      	movs	r2, #10
 801508c:	7803      	ldrb	r3, [r0, #0]
 801508e:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8015092:	2d09      	cmp	r5, #9
 8015094:	d80f      	bhi.n	80150b6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8015096:	fb02 3101 	mla	r1, r2, r1, r3
 801509a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 801509e:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 80150a2:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 80150a6:	d1f1      	bne.n	801508c <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 80150a8:	29ff      	cmp	r1, #255	; 0xff
 80150aa:	d804      	bhi.n	80150b6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 80150ac:	7021      	strb	r1, [r4, #0]
 80150ae:	4618      	mov	r0, r3
 80150b0:	bd38      	pop	{r3, r4, r5, pc}
 80150b2:	2301      	movs	r3, #1
 80150b4:	e7fb      	b.n	80150ae <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80150b6:	2302      	movs	r3, #2
 80150b8:	e7f9      	b.n	80150ae <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080150ba <Sscan::checkName(char const*, char const*)>:
 80150ba:	b510      	push	{r4, lr}
 80150bc:	3901      	subs	r1, #1
 80150be:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80150c2:	4604      	mov	r4, r0
 80150c4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80150c8:	b123      	cbz	r3, 80150d4 <Sscan::checkName(char const*, char const*)+0x1a>
 80150ca:	b10a      	cbz	r2, 80150d0 <Sscan::checkName(char const*, char const*)+0x16>
 80150cc:	4293      	cmp	r3, r2
 80150ce:	d0f6      	beq.n	80150be <Sscan::checkName(char const*, char const*)+0x4>
 80150d0:	2000      	movs	r0, #0
 80150d2:	e006      	b.n	80150e2 <Sscan::checkName(char const*, char const*)+0x28>
 80150d4:	2a3d      	cmp	r2, #61	; 0x3d
 80150d6:	d1fb      	bne.n	80150d0 <Sscan::checkName(char const*, char const*)+0x16>
 80150d8:	7860      	ldrb	r0, [r4, #1]
 80150da:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80150de:	d000      	beq.n	80150e2 <Sscan::checkName(char const*, char const*)+0x28>
 80150e0:	1c60      	adds	r0, r4, #1
 80150e2:	bd10      	pop	{r4, pc}

080150e4 <LightSet::GetDmxStartAddress()>:
 80150e4:	2001      	movs	r0, #1
 80150e6:	4770      	bx	lr

080150e8 <LightSet::GetDmxFootprint()>:
 80150e8:	f44f 7000 	mov.w	r0, #512	; 0x200
 80150ec:	4770      	bx	lr

080150ee <LightSet::SetDmxStartAddress(unsigned short)>:
 80150ee:	2000      	movs	r0, #0
 80150f0:	4770      	bx	lr

080150f2 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 80150f2:	2300      	movs	r3, #0
 80150f4:	2001      	movs	r0, #1
 80150f6:	7093      	strb	r3, [r2, #2]
 80150f8:	8010      	strh	r0, [r2, #0]
 80150fa:	4770      	bx	lr

080150fc <Display::PrintInfo() [clone .isra.0]>:
 80150fc:	b910      	cbnz	r0, 8015104 <Display::PrintInfo() [clone .isra.0]+0x8>
 80150fe:	4803      	ldr	r0, [pc, #12]	; (801510c <Display::PrintInfo() [clone .isra.0]+0x10>)
 8015100:	f000 bead 	b.w	8015e5e <puts>
 8015104:	6803      	ldr	r3, [r0, #0]
 8015106:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015108:	4718      	bx	r3
 801510a:	bf00      	nop
 801510c:	0801b82c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, pc}

08015110 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8015110:	b513      	push	{r0, r1, r4, lr}
 8015112:	4604      	mov	r4, r0
 8015114:	0a13      	lsrs	r3, r2, #8
 8015116:	7800      	ldrb	r0, [r0, #0]
 8015118:	f88d 1004 	strb.w	r1, [sp, #4]
 801511c:	f88d 3005 	strb.w	r3, [sp, #5]
 8015120:	f88d 2006 	strb.w	r2, [sp, #6]
 8015124:	f002 fb0e 	bl	8017744 <gd32_i2c_set_address>
 8015128:	6860      	ldr	r0, [r4, #4]
 801512a:	f002 fb03 	bl	8017734 <gd32_i2c_set_baudrate>
 801512e:	2103      	movs	r1, #3
 8015130:	a801      	add	r0, sp, #4
 8015132:	f002 fb0d 	bl	8017750 <gd32_i2c_write>
 8015136:	b002      	add	sp, #8
 8015138:	bd10      	pop	{r4, pc}

0801513a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 801513a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801513c:	460d      	mov	r5, r1
 801513e:	4604      	mov	r4, r0
 8015140:	f002 fb00 	bl	8017744 <gd32_i2c_set_address>
 8015144:	4628      	mov	r0, r5
 8015146:	f002 faf5 	bl	8017734 <gd32_i2c_set_baudrate>
 801514a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801514e:	2b07      	cmp	r3, #7
 8015150:	d902      	bls.n	8015158 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8015152:	3c50      	subs	r4, #80	; 0x50
 8015154:	2c0f      	cmp	r4, #15
 8015156:	d809      	bhi.n	801516c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8015158:	2101      	movs	r1, #1
 801515a:	f10d 0007 	add.w	r0, sp, #7
 801515e:	f002 fb5d 	bl	801781c <gd32_i2c_read>
 8015162:	fab0 f080 	clz	r0, r0
 8015166:	0940      	lsrs	r0, r0, #5
 8015168:	b003      	add	sp, #12
 801516a:	bd30      	pop	{r4, r5, pc}
 801516c:	2100      	movs	r1, #0
 801516e:	4608      	mov	r0, r1
 8015170:	f002 faee 	bl	8017750 <gd32_i2c_write>
 8015174:	e7f5      	b.n	8015162 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08015176 <Display::Detect7Segment()>:
 8015176:	b513      	push	{r0, r1, r4, lr}
 8015178:	68c1      	ldr	r1, [r0, #12]
 801517a:	4604      	mov	r4, r0
 801517c:	7a00      	ldrb	r0, [r0, #8]
 801517e:	f7ff ffdc 	bl	801513a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8015182:	7460      	strb	r0, [r4, #17]
 8015184:	b170      	cbz	r0, 80151a4 <Display::Detect7Segment()+0x2e>
 8015186:	2200      	movs	r2, #0
 8015188:	f104 0008 	add.w	r0, r4, #8
 801518c:	4611      	mov	r1, r2
 801518e:	9001      	str	r0, [sp, #4]
 8015190:	f7ff ffbe 	bl	8015110 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8015194:	7c63      	ldrb	r3, [r4, #17]
 8015196:	9801      	ldr	r0, [sp, #4]
 8015198:	b123      	cbz	r3, 80151a4 <Display::Detect7Segment()+0x2e>
 801519a:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 801519e:	2112      	movs	r1, #18
 80151a0:	f7ff ffb6 	bl	8015110 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80151a4:	b002      	add	sp, #8
 80151a6:	bd10      	pop	{r4, pc}

080151a8 <Display::Detect(display::Type)>:
 80151a8:	2902      	cmp	r1, #2
 80151aa:	b538      	push	{r3, r4, r5, lr}
 80151ac:	4604      	mov	r4, r0
 80151ae:	d014      	beq.n	80151da <Display::Detect(display::Type)+0x32>
 80151b0:	2904      	cmp	r1, #4
 80151b2:	d01b      	beq.n	80151ec <Display::Detect(display::Type)+0x44>
 80151b4:	69a0      	ldr	r0, [r4, #24]
 80151b6:	b168      	cbz	r0, 80151d4 <Display::Detect(display::Type)+0x2c>
 80151b8:	6803      	ldr	r3, [r0, #0]
 80151ba:	689b      	ldr	r3, [r3, #8]
 80151bc:	4798      	blx	r3
 80151be:	69a3      	ldr	r3, [r4, #24]
 80151c0:	b9b0      	cbnz	r0, 80151f0 <Display::Detect(display::Type)+0x48>
 80151c2:	b11b      	cbz	r3, 80151cc <Display::Detect(display::Type)+0x24>
 80151c4:	681a      	ldr	r2, [r3, #0]
 80151c6:	4618      	mov	r0, r3
 80151c8:	6852      	ldr	r2, [r2, #4]
 80151ca:	4790      	blx	r2
 80151cc:	2300      	movs	r3, #0
 80151ce:	61a3      	str	r3, [r4, #24]
 80151d0:	2304      	movs	r3, #4
 80151d2:	6023      	str	r3, [r4, #0]
 80151d4:	2300      	movs	r3, #0
 80151d6:	6163      	str	r3, [r4, #20]
 80151d8:	e011      	b.n	80151fe <Display::Detect(display::Type)+0x56>
 80151da:	2018      	movs	r0, #24
 80151dc:	f000 fd0a 	bl	8015bf4 <operator new(unsigned int)>
 80151e0:	2100      	movs	r1, #0
 80151e2:	4605      	mov	r5, r0
 80151e4:	f000 f896 	bl	8015314 <Ssd1306::Ssd1306(TOledPanel)>
 80151e8:	61a5      	str	r5, [r4, #24]
 80151ea:	e7e3      	b.n	80151b4 <Display::Detect(display::Type)+0xc>
 80151ec:	6001      	str	r1, [r0, #0]
 80151ee:	e7e1      	b.n	80151b4 <Display::Detect(display::Type)+0xc>
 80151f0:	681a      	ldr	r2, [r3, #0]
 80151f2:	4618      	mov	r0, r3
 80151f4:	68d2      	ldr	r2, [r2, #12]
 80151f6:	4790      	blx	r2
 80151f8:	69a3      	ldr	r3, [r4, #24]
 80151fa:	2b00      	cmp	r3, #0
 80151fc:	d0ea      	beq.n	80151d4 <Display::Detect(display::Type)+0x2c>
 80151fe:	bd38      	pop	{r3, r4, r5, pc}

08015200 <Display::Display()>:
 8015200:	2304      	movs	r3, #4
 8015202:	b510      	push	{r4, lr}
 8015204:	6003      	str	r3, [r0, #0]
 8015206:	4b0f      	ldr	r3, [pc, #60]	; (8015244 <Display::Display()+0x44>)
 8015208:	4a0f      	ldr	r2, [pc, #60]	; (8015248 <Display::Display()+0x48>)
 801520a:	681b      	ldr	r3, [r3, #0]
 801520c:	6043      	str	r3, [r0, #4]
 801520e:	2321      	movs	r3, #33	; 0x21
 8015210:	7203      	strb	r3, [r0, #8]
 8015212:	4b0e      	ldr	r3, [pc, #56]	; (801524c <Display::Display()+0x4c>)
 8015214:	60c3      	str	r3, [r0, #12]
 8015216:	2300      	movs	r3, #0
 8015218:	e9c0 2305 	strd	r2, r3, [r0, #20]
 801521c:	8203      	strh	r3, [r0, #16]
 801521e:	4b0c      	ldr	r3, [pc, #48]	; (8015250 <Display::Display()+0x50>)
 8015220:	4604      	mov	r4, r0
 8015222:	2102      	movs	r1, #2
 8015224:	6018      	str	r0, [r3, #0]
 8015226:	f7ff ffbf 	bl	80151a8 <Display::Detect(display::Type)>
 801522a:	4620      	mov	r0, r4
 801522c:	f7ff ffa3 	bl	8015176 <Display::Detect7Segment()>
 8015230:	69a3      	ldr	r3, [r4, #24]
 8015232:	b10b      	cbz	r3, 8015238 <Display::Display()+0x38>
 8015234:	f7f4 f8d8 	bl	80093e8 <display::timeout::gpio_init()>
 8015238:	69a0      	ldr	r0, [r4, #24]
 801523a:	f7ff ff5f 	bl	80150fc <Display::PrintInfo() [clone .isra.0]>
 801523e:	4620      	mov	r0, r4
 8015240:	bd10      	pop	{r4, pc}
 8015242:	bf00      	nop
 8015244:	2000fd94 	mulcs	r0, r4, sp
 8015248:	000493e0 	andeq	r9, r4, r0, ror #7
 801524c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8015250:	2000fc90 	mulcs	r0, r0, ip

08015254 <Ssd1306::~Ssd1306()>:
 8015254:	4770      	bx	lr

08015256 <Ssd1306::SetCursor(unsigned int)>:
 8015256:	4770      	bx	lr

08015258 <Ssd1306::PrintInfo()>:
 8015258:	b410      	push	{r4}
 801525a:	4906      	ldr	r1, [pc, #24]	; (8015274 <Ssd1306::PrintInfo()+0x1c>)
 801525c:	7c44      	ldrb	r4, [r0, #17]
 801525e:	7903      	ldrb	r3, [r0, #4]
 8015260:	7942      	ldrb	r2, [r0, #5]
 8015262:	4805      	ldr	r0, [pc, #20]	; (8015278 <Ssd1306::PrintInfo()+0x20>)
 8015264:	2c00      	cmp	r4, #0
 8015266:	bf08      	it	eq
 8015268:	4601      	moveq	r1, r0
 801526a:	4804      	ldr	r0, [pc, #16]	; (801527c <Ssd1306::PrintInfo()+0x24>)
 801526c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015270:	f7f5 b90a 	b.w	800a488 <printf>
 8015274:	0801b83d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp, pc}
 8015278:	0801b844 	stmdaeq	r1, {r2, r6, fp, ip, sp, pc}
 801527c:	0801b84c 	stmdaeq	r1, {r2, r3, r6, fp, ip, sp, pc}

08015280 <Ssd1306::~Ssd1306()>:
 8015280:	b510      	push	{r4, lr}
 8015282:	4604      	mov	r4, r0
 8015284:	f000 fcb2 	bl	8015bec <operator delete(void*)>
 8015288:	4620      	mov	r0, r4
 801528a:	bd10      	pop	{r4, pc}

0801528c <Ssd1306::PutChar(int)>:
 801528c:	b510      	push	{r4, lr}
 801528e:	3920      	subs	r1, #32
 8015290:	295f      	cmp	r1, #95	; 0x5f
 8015292:	f100 0008 	add.w	r0, r0, #8
 8015296:	bf94      	ite	ls
 8015298:	460c      	movls	r4, r1
 801529a:	2400      	movhi	r4, #0
 801529c:	f7ff fa36 	bl	801470c <HAL_I2C::Setup()>
 80152a0:	4804      	ldr	r0, [pc, #16]	; (80152b4 <Ssd1306::PutChar(int)+0x28>)
 80152a2:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80152a6:	4420      	add	r0, r4
 80152a8:	2107      	movs	r1, #7
 80152aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80152ae:	f002 ba4f 	b.w	8017750 <gd32_i2c_write>
 80152b2:	bf00      	nop
 80152b4:	0801b860 	stmdaeq	r1, {r5, r6, fp, ip, sp, pc}

080152b8 <Ssd1306::PutString(char const*)>:
 80152b8:	b538      	push	{r3, r4, r5, lr}
 80152ba:	4605      	mov	r5, r0
 80152bc:	1e4c      	subs	r4, r1, #1
 80152be:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80152c2:	b901      	cbnz	r1, 80152c6 <Ssd1306::PutString(char const*)+0xe>
 80152c4:	bd38      	pop	{r3, r4, r5, pc}
 80152c6:	4628      	mov	r0, r5
 80152c8:	f7ff ffe0 	bl	801528c <Ssd1306::PutChar(int)>
 80152cc:	e7f7      	b.n	80152be <Ssd1306::PutString(char const*)+0x6>

080152ce <Ssd1306::Text(char const*, unsigned int)>:
 80152ce:	b570      	push	{r4, r5, r6, lr}
 80152d0:	7903      	ldrb	r3, [r0, #4]
 80152d2:	4605      	mov	r5, r0
 80152d4:	460c      	mov	r4, r1
 80152d6:	4293      	cmp	r3, r2
 80152d8:	bf94      	ite	ls
 80152da:	18ce      	addls	r6, r1, r3
 80152dc:	188e      	addhi	r6, r1, r2
 80152de:	42b4      	cmp	r4, r6
 80152e0:	d100      	bne.n	80152e4 <Ssd1306::Text(char const*, unsigned int)+0x16>
 80152e2:	bd70      	pop	{r4, r5, r6, pc}
 80152e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80152e8:	4628      	mov	r0, r5
 80152ea:	f7ff ffcf 	bl	801528c <Ssd1306::PutChar(int)>
 80152ee:	e7f6      	b.n	80152de <Ssd1306::Text(char const*, unsigned int)+0x10>

080152f0 <Ssd1306::InitMembers()>:
 80152f0:	7c03      	ldrb	r3, [r0, #16]
 80152f2:	b14b      	cbz	r3, 8015308 <Ssd1306::InitMembers()+0x18>
 80152f4:	3b01      	subs	r3, #1
 80152f6:	2b01      	cmp	r3, #1
 80152f8:	d909      	bls.n	801530e <Ssd1306::InitMembers()+0x1e>
 80152fa:	2308      	movs	r3, #8
 80152fc:	2204      	movs	r2, #4
 80152fe:	2115      	movs	r1, #21
 8015300:	7101      	strb	r1, [r0, #4]
 8015302:	7143      	strb	r3, [r0, #5]
 8015304:	6142      	str	r2, [r0, #20]
 8015306:	4770      	bx	lr
 8015308:	2308      	movs	r3, #8
 801530a:	461a      	mov	r2, r3
 801530c:	e7f7      	b.n	80152fe <Ssd1306::InitMembers()+0xe>
 801530e:	2304      	movs	r3, #4
 8015310:	e7fb      	b.n	801530a <Ssd1306::InitMembers()+0x1a>
	...

08015314 <Ssd1306::Ssd1306(TOledPanel)>:
 8015314:	4a08      	ldr	r2, [pc, #32]	; (8015338 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8015316:	6002      	str	r2, [r0, #0]
 8015318:	227f      	movs	r2, #127	; 0x7f
 801531a:	b508      	push	{r3, lr}
 801531c:	80c2      	strh	r2, [r0, #6]
 801531e:	223c      	movs	r2, #60	; 0x3c
 8015320:	7202      	strb	r2, [r0, #8]
 8015322:	4a06      	ldr	r2, [pc, #24]	; (801533c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8015324:	60c2      	str	r2, [r0, #12]
 8015326:	2200      	movs	r2, #0
 8015328:	7442      	strb	r2, [r0, #17]
 801532a:	4a05      	ldr	r2, [pc, #20]	; (8015340 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 801532c:	7401      	strb	r1, [r0, #16]
 801532e:	6010      	str	r0, [r2, #0]
 8015330:	f7ff ffde 	bl	80152f0 <Ssd1306::InitMembers()>
 8015334:	bd08      	pop	{r3, pc}
 8015336:	bf00      	nop
 8015338:	0801bb38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, sp, pc}
 801533c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8015340:	2000fd1c 	andcs	pc, r0, ip, lsl sp	; <UNPREDICTABLE>

08015344 <Ssd1306::SendCommand(unsigned char)>:
 8015344:	b507      	push	{r0, r1, r2, lr}
 8015346:	2300      	movs	r3, #0
 8015348:	3008      	adds	r0, #8
 801534a:	f88d 3004 	strb.w	r3, [sp, #4]
 801534e:	f88d 1005 	strb.w	r1, [sp, #5]
 8015352:	f7ff f9db 	bl	801470c <HAL_I2C::Setup()>
 8015356:	2102      	movs	r1, #2
 8015358:	a801      	add	r0, sp, #4
 801535a:	f002 f9f9 	bl	8017750 <gd32_i2c_write>
 801535e:	b003      	add	sp, #12
 8015360:	f85d fb04 	ldr.w	pc, [sp], #4

08015364 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8015364:	2914      	cmp	r1, #20
 8015366:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015368:	4615      	mov	r5, r2
 801536a:	d81d      	bhi.n	80153a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801536c:	7943      	ldrb	r3, [r0, #5]
 801536e:	4293      	cmp	r3, r2
 8015370:	d91a      	bls.n	80153a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8015372:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015376:	7c43      	ldrb	r3, [r0, #17]
 8015378:	004c      	lsls	r4, r1, #1
 801537a:	b2e4      	uxtb	r4, r4
 801537c:	b10b      	cbz	r3, 8015382 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 801537e:	3404      	adds	r4, #4
 8015380:	b2e4      	uxtb	r4, r4
 8015382:	f004 010e 	and.w	r1, r4, #14
 8015386:	9001      	str	r0, [sp, #4]
 8015388:	f7ff ffdc 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801538c:	0921      	lsrs	r1, r4, #4
 801538e:	9801      	ldr	r0, [sp, #4]
 8015390:	f041 0110 	orr.w	r1, r1, #16
 8015394:	f7ff ffd6 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015398:	9801      	ldr	r0, [sp, #4]
 801539a:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 801539e:	b003      	add	sp, #12
 80153a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80153a4:	f7ff bfce 	b.w	8015344 <Ssd1306::SendCommand(unsigned char)>
 80153a8:	b003      	add	sp, #12
 80153aa:	bd30      	pop	{r4, r5, pc}

080153ac <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 80153ac:	b5e0      	push	{r5, r6, r7, lr}
 80153ae:	461f      	mov	r7, r3
 80153b0:	7943      	ldrb	r3, [r0, #5]
 80153b2:	428b      	cmp	r3, r1
 80153b4:	4605      	mov	r5, r0
 80153b6:	4616      	mov	r6, r2
 80153b8:	d30b      	bcc.n	80153d2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 80153ba:	1e4a      	subs	r2, r1, #1
 80153bc:	b2d2      	uxtb	r2, r2
 80153be:	2100      	movs	r1, #0
 80153c0:	f7ff ffd0 	bl	8015364 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80153c4:	463a      	mov	r2, r7
 80153c6:	4631      	mov	r1, r6
 80153c8:	4628      	mov	r0, r5
 80153ca:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 80153ce:	f7ff bf7e 	b.w	80152ce <Ssd1306::Text(char const*, unsigned int)>
 80153d2:	bde0      	pop	{r5, r6, r7, pc}

080153d4 <Ssd1306::ClearLine(unsigned char)>:
 80153d4:	b513      	push	{r0, r1, r4, lr}
 80153d6:	7943      	ldrb	r3, [r0, #5]
 80153d8:	428b      	cmp	r3, r1
 80153da:	4604      	mov	r4, r0
 80153dc:	d315      	bcc.n	801540a <Ssd1306::ClearLine(unsigned char)+0x36>
 80153de:	1e4a      	subs	r2, r1, #1
 80153e0:	b2d2      	uxtb	r2, r2
 80153e2:	2100      	movs	r1, #0
 80153e4:	9201      	str	r2, [sp, #4]
 80153e6:	f7ff ffbd 	bl	8015364 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80153ea:	f104 0008 	add.w	r0, r4, #8
 80153ee:	f7ff f98d 	bl	801470c <HAL_I2C::Setup()>
 80153f2:	2181      	movs	r1, #129	; 0x81
 80153f4:	4806      	ldr	r0, [pc, #24]	; (8015410 <Ssd1306::ClearLine(unsigned char)+0x3c>)
 80153f6:	f002 f9ab 	bl	8017750 <gd32_i2c_write>
 80153fa:	9a01      	ldr	r2, [sp, #4]
 80153fc:	2100      	movs	r1, #0
 80153fe:	4620      	mov	r0, r4
 8015400:	b002      	add	sp, #8
 8015402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015406:	f7ff bfad 	b.w	8015364 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801540a:	b002      	add	sp, #8
 801540c:	bd10      	pop	{r4, pc}
 801540e:	bf00      	nop
 8015410:	2000fc94 	mulcs	r0, r4, ip

08015414 <Ssd1306::SetSleep(bool)>:
 8015414:	b111      	cbz	r1, 801541c <Ssd1306::SetSleep(bool)+0x8>
 8015416:	21ae      	movs	r1, #174	; 0xae
 8015418:	f7ff bf94 	b.w	8015344 <Ssd1306::SendCommand(unsigned char)>
 801541c:	21af      	movs	r1, #175	; 0xaf
 801541e:	e7fb      	b.n	8015418 <Ssd1306::SetSleep(bool)+0x4>

08015420 <Ssd1306::SetContrast(unsigned char)>:
 8015420:	b538      	push	{r3, r4, r5, lr}
 8015422:	4604      	mov	r4, r0
 8015424:	460d      	mov	r5, r1
 8015426:	7181      	strb	r1, [r0, #6]
 8015428:	2181      	movs	r1, #129	; 0x81
 801542a:	f7ff ff8b 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801542e:	4629      	mov	r1, r5
 8015430:	4620      	mov	r0, r4
 8015432:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015436:	f7ff bf85 	b.w	8015344 <Ssd1306::SendCommand(unsigned char)>

0801543a <Ssd1306::SetFlipVertically(bool)>:
 801543a:	b510      	push	{r4, lr}
 801543c:	4604      	mov	r4, r0
 801543e:	71c1      	strb	r1, [r0, #7]
 8015440:	b141      	cbz	r1, 8015454 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8015442:	21c0      	movs	r1, #192	; 0xc0
 8015444:	f7ff ff7e 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015448:	21a0      	movs	r1, #160	; 0xa0
 801544a:	4620      	mov	r0, r4
 801544c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015450:	f7ff bf78 	b.w	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015454:	21c8      	movs	r1, #200	; 0xc8
 8015456:	f7ff ff75 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801545a:	21a1      	movs	r1, #161	; 0xa1
 801545c:	e7f5      	b.n	801544a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08015460 <Ssd1306::CheckSH1106()>:
 8015460:	b530      	push	{r4, r5, lr}
 8015462:	2100      	movs	r1, #0
 8015464:	b087      	sub	sp, #28
 8015466:	4604      	mov	r4, r0
 8015468:	f7ff ff6c 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801546c:	2190      	movs	r1, #144	; 0x90
 801546e:	4620      	mov	r0, r4
 8015470:	f7ff ff68 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015474:	21b0      	movs	r1, #176	; 0xb0
 8015476:	4620      	mov	r0, r4
 8015478:	f7ff ff64 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801547c:	4b22      	ldr	r3, [pc, #136]	; (8015508 <Ssd1306::CheckSH1106()+0xa8>)
 801547e:	f104 0508 	add.w	r5, r4, #8
 8015482:	6818      	ldr	r0, [r3, #0]
 8015484:	9002      	str	r0, [sp, #8]
 8015486:	791b      	ldrb	r3, [r3, #4]
 8015488:	f88d 300c 	strb.w	r3, [sp, #12]
 801548c:	4628      	mov	r0, r5
 801548e:	f7ff f93d 	bl	801470c <HAL_I2C::Setup()>
 8015492:	2105      	movs	r1, #5
 8015494:	a802      	add	r0, sp, #8
 8015496:	f002 f95b 	bl	8017750 <gd32_i2c_write>
 801549a:	2100      	movs	r1, #0
 801549c:	4620      	mov	r0, r4
 801549e:	f7ff ff51 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 80154a2:	2190      	movs	r1, #144	; 0x90
 80154a4:	4620      	mov	r0, r4
 80154a6:	f7ff ff4d 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 80154aa:	21b0      	movs	r1, #176	; 0xb0
 80154ac:	4620      	mov	r0, r4
 80154ae:	f7ff ff49 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 80154b2:	2300      	movs	r3, #0
 80154b4:	9304      	str	r3, [sp, #16]
 80154b6:	f88d 3014 	strb.w	r3, [sp, #20]
 80154ba:	4628      	mov	r0, r5
 80154bc:	2340      	movs	r3, #64	; 0x40
 80154be:	f88d 3007 	strb.w	r3, [sp, #7]
 80154c2:	f7ff f923 	bl	801470c <HAL_I2C::Setup()>
 80154c6:	2101      	movs	r1, #1
 80154c8:	f10d 0007 	add.w	r0, sp, #7
 80154cc:	f002 f940 	bl	8017750 <gd32_i2c_write>
 80154d0:	4628      	mov	r0, r5
 80154d2:	f7ff f91b 	bl	801470c <HAL_I2C::Setup()>
 80154d6:	2105      	movs	r1, #5
 80154d8:	a804      	add	r0, sp, #16
 80154da:	f002 f99f 	bl	801781c <gd32_i2c_read>
 80154de:	aa02      	add	r2, sp, #8
 80154e0:	a904      	add	r1, sp, #16
 80154e2:	2004      	movs	r0, #4
 80154e4:	3801      	subs	r0, #1
 80154e6:	d201      	bcs.n	80154ec <Ssd1306::CheckSH1106()+0x8c>
 80154e8:	2300      	movs	r3, #0
 80154ea:	e006      	b.n	80154fa <Ssd1306::CheckSH1106()+0x9a>
 80154ec:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80154f0:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 80154f4:	42ab      	cmp	r3, r5
 80154f6:	d0f5      	beq.n	80154e4 <Ssd1306::CheckSH1106()+0x84>
 80154f8:	1b5b      	subs	r3, r3, r5
 80154fa:	fab3 f383 	clz	r3, r3
 80154fe:	095b      	lsrs	r3, r3, #5
 8015500:	7463      	strb	r3, [r4, #17]
 8015502:	b007      	add	sp, #28
 8015504:	bd30      	pop	{r4, r5, pc}
 8015506:	bf00      	nop
 8015508:	0801b858 	stmdaeq	r1, {r3, r4, r6, fp, ip, sp, pc}

0801550c <Ssd1306::Cls()>:
 801550c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015510:	7c45      	ldrb	r5, [r0, #17]
 8015512:	00ad      	lsls	r5, r5, #2
 8015514:	b2ed      	uxtb	r5, r5
 8015516:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 801551a:	4604      	mov	r4, r0
 801551c:	2600      	movs	r6, #0
 801551e:	f045 0810 	orr.w	r8, r5, #16
 8015522:	b2ff      	uxtb	r7, r7
 8015524:	6963      	ldr	r3, [r4, #20]
 8015526:	42b3      	cmp	r3, r6
 8015528:	4629      	mov	r1, r5
 801552a:	4620      	mov	r0, r4
 801552c:	d80b      	bhi.n	8015546 <Ssd1306::Cls()+0x3a>
 801552e:	f7ff ff09 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015532:	4641      	mov	r1, r8
 8015534:	4620      	mov	r0, r4
 8015536:	f7ff ff05 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801553a:	4620      	mov	r0, r4
 801553c:	21b0      	movs	r1, #176	; 0xb0
 801553e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015542:	f7ff beff 	b.w	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015546:	f7ff fefd 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801554a:	4641      	mov	r1, r8
 801554c:	4620      	mov	r0, r4
 801554e:	f7ff fef9 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015552:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8015556:	b2c9      	uxtb	r1, r1
 8015558:	4620      	mov	r0, r4
 801555a:	f7ff fef3 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801555e:	7c23      	ldrb	r3, [r4, #16]
 8015560:	b123      	cbz	r3, 801556c <Ssd1306::Cls()+0x60>
 8015562:	3b01      	subs	r3, #1
 8015564:	2b01      	cmp	r3, #1
 8015566:	d901      	bls.n	801556c <Ssd1306::Cls()+0x60>
 8015568:	3601      	adds	r6, #1
 801556a:	e7db      	b.n	8015524 <Ssd1306::Cls()+0x18>
 801556c:	f104 0008 	add.w	r0, r4, #8
 8015570:	f7ff f8cc 	bl	801470c <HAL_I2C::Setup()>
 8015574:	4639      	mov	r1, r7
 8015576:	4802      	ldr	r0, [pc, #8]	; (8015580 <Ssd1306::Cls()+0x74>)
 8015578:	f002 f8ea 	bl	8017750 <gd32_i2c_write>
 801557c:	e7f4      	b.n	8015568 <Ssd1306::Cls()+0x5c>
 801557e:	bf00      	nop
 8015580:	2000fc94 	mulcs	r0, r4, ip

08015584 <Ssd1306::Start()>:
 8015584:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015586:	7a04      	ldrb	r4, [r0, #8]
 8015588:	68c6      	ldr	r6, [r0, #12]
 801558a:	4605      	mov	r5, r0
 801558c:	4620      	mov	r0, r4
 801558e:	f002 f8d9 	bl	8017744 <gd32_i2c_set_address>
 8015592:	4630      	mov	r0, r6
 8015594:	f002 f8ce 	bl	8017734 <gd32_i2c_set_baudrate>
 8015598:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801559c:	2b07      	cmp	r3, #7
 801559e:	d902      	bls.n	80155a6 <Ssd1306::Start()+0x22>
 80155a0:	3c50      	subs	r4, #80	; 0x50
 80155a2:	2c0f      	cmp	r4, #15
 80155a4:	d80f      	bhi.n	80155c6 <Ssd1306::Start()+0x42>
 80155a6:	2101      	movs	r1, #1
 80155a8:	f10d 0007 	add.w	r0, sp, #7
 80155ac:	f002 f936 	bl	801781c <gd32_i2c_read>
 80155b0:	fab0 f480 	clz	r4, r0
 80155b4:	0964      	lsrs	r4, r4, #5
 80155b6:	b35c      	cbz	r4, 8015610 <Ssd1306::Start()+0x8c>
 80155b8:	7c2e      	ldrb	r6, [r5, #16]
 80155ba:	b14e      	cbz	r6, 80155d0 <Ssd1306::Start()+0x4c>
 80155bc:	3e01      	subs	r6, #1
 80155be:	2e01      	cmp	r6, #1
 80155c0:	d929      	bls.n	8015616 <Ssd1306::Start()+0x92>
 80155c2:	2400      	movs	r4, #0
 80155c4:	e024      	b.n	8015610 <Ssd1306::Start()+0x8c>
 80155c6:	2100      	movs	r1, #0
 80155c8:	4608      	mov	r0, r1
 80155ca:	f002 f8c1 	bl	8017750 <gd32_i2c_write>
 80155ce:	e7ef      	b.n	80155b0 <Ssd1306::Start()+0x2c>
 80155d0:	4f16      	ldr	r7, [pc, #88]	; (801562c <Ssd1306::Start()+0xa8>)
 80155d2:	f817 1b01 	ldrb.w	r1, [r7], #1
 80155d6:	4628      	mov	r0, r5
 80155d8:	3601      	adds	r6, #1
 80155da:	f7ff feb3 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 80155de:	2e18      	cmp	r6, #24
 80155e0:	d1f7      	bne.n	80155d2 <Ssd1306::Start()+0x4e>
 80155e2:	4a13      	ldr	r2, [pc, #76]	; (8015630 <Ssd1306::Start()+0xac>)
 80155e4:	2300      	movs	r3, #0
 80155e6:	4611      	mov	r1, r2
 80155e8:	4618      	mov	r0, r3
 80155ea:	3301      	adds	r3, #1
 80155ec:	2b86      	cmp	r3, #134	; 0x86
 80155ee:	f802 0b01 	strb.w	r0, [r2], #1
 80155f2:	d1fa      	bne.n	80155ea <Ssd1306::Start()+0x66>
 80155f4:	2340      	movs	r3, #64	; 0x40
 80155f6:	700b      	strb	r3, [r1, #0]
 80155f8:	4628      	mov	r0, r5
 80155fa:	f7ff ff31 	bl	8015460 <Ssd1306::CheckSH1106()>
 80155fe:	4628      	mov	r0, r5
 8015600:	f7ff ff84 	bl	801550c <Ssd1306::Cls()>
 8015604:	21af      	movs	r1, #175	; 0xaf
 8015606:	4628      	mov	r0, r5
 8015608:	f7ff fe9c 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 801560c:	2301      	movs	r3, #1
 801560e:	71eb      	strb	r3, [r5, #7]
 8015610:	4620      	mov	r0, r4
 8015612:	b003      	add	sp, #12
 8015614:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015616:	4f07      	ldr	r7, [pc, #28]	; (8015634 <Ssd1306::Start()+0xb0>)
 8015618:	2600      	movs	r6, #0
 801561a:	f817 1b01 	ldrb.w	r1, [r7], #1
 801561e:	4628      	mov	r0, r5
 8015620:	3601      	adds	r6, #1
 8015622:	f7ff fe8f 	bl	8015344 <Ssd1306::SendCommand(unsigned char)>
 8015626:	2e18      	cmp	r6, #24
 8015628:	d1f7      	bne.n	801561a <Ssd1306::Start()+0x96>
 801562a:	e7da      	b.n	80155e2 <Ssd1306::Start()+0x5e>
 801562c:	0801bb18 	stmdaeq	r1, {r3, r4, r8, r9, fp, ip, sp, pc}
 8015630:	2000fc94 	mulcs	r0, r4, ip
 8015634:	0801bb00 	stmdaeq	r1, {r8, r9, fp, ip, sp, pc}

08015638 <console_putc>:
 8015638:	f000 bd30 	b.w	801609c <uart0_putc>

0801563c <console_puts>:
 801563c:	f000 bd48 	b.w	80160d0 <uart0_puts>

08015640 <console_set_fg_color>:
 8015640:	2807      	cmp	r0, #7
 8015642:	d810      	bhi.n	8015666 <console_set_fg_color+0x26>
 8015644:	e8df f000 	tbb	[pc, r0]
 8015648:	0b090704 	bleq	8257260 <__exidx_end+0x23b1a0>
 801564c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8015618 <Ssd1306::Start()+0x94>
 8015650:	4806      	ldr	r0, [pc, #24]	; (801566c <console_set_fg_color+0x2c>)
 8015652:	f000 bd3d 	b.w	80160d0 <uart0_puts>
 8015656:	4806      	ldr	r0, [pc, #24]	; (8015670 <console_set_fg_color+0x30>)
 8015658:	e7fb      	b.n	8015652 <console_set_fg_color+0x12>
 801565a:	4806      	ldr	r0, [pc, #24]	; (8015674 <console_set_fg_color+0x34>)
 801565c:	e7f9      	b.n	8015652 <console_set_fg_color+0x12>
 801565e:	4806      	ldr	r0, [pc, #24]	; (8015678 <console_set_fg_color+0x38>)
 8015660:	e7f7      	b.n	8015652 <console_set_fg_color+0x12>
 8015662:	4806      	ldr	r0, [pc, #24]	; (801567c <console_set_fg_color+0x3c>)
 8015664:	e7f5      	b.n	8015652 <console_set_fg_color+0x12>
 8015666:	4806      	ldr	r0, [pc, #24]	; (8015680 <console_set_fg_color+0x40>)
 8015668:	e7f3      	b.n	8015652 <console_set_fg_color+0x12>
 801566a:	bf00      	nop
 801566c:	0801bb76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, sp, pc}
 8015670:	0801bb7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, pc}
 8015674:	0801bb82 	stmdaeq	r1, {r1, r7, r8, r9, fp, ip, sp, pc}
 8015678:	0801bb88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip, sp, pc}
 801567c:	080185d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, pc}
 8015680:	0801bb8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, fp, ip, sp, pc}

08015684 <console_error>:
 8015684:	b510      	push	{r4, lr}
 8015686:	4604      	mov	r4, r0
 8015688:	4805      	ldr	r0, [pc, #20]	; (80156a0 <console_error+0x1c>)
 801568a:	f000 fd21 	bl	80160d0 <uart0_puts>
 801568e:	4620      	mov	r0, r4
 8015690:	f000 fd1e 	bl	80160d0 <uart0_puts>
 8015694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015698:	4802      	ldr	r0, [pc, #8]	; (80156a4 <console_error+0x20>)
 801569a:	f000 bd19 	b.w	80160d0 <uart0_puts>
 801569e:	bf00      	nop
 80156a0:	0801bb7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, pc}
 80156a4:	080185d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, pc}

080156a8 <console_status>:
 80156a8:	b510      	push	{r4, lr}
 80156aa:	b280      	uxth	r0, r0
 80156ac:	460c      	mov	r4, r1
 80156ae:	f7ff ffc7 	bl	8015640 <console_set_fg_color>
 80156b2:	4807      	ldr	r0, [pc, #28]	; (80156d0 <console_status+0x28>)
 80156b4:	f000 fd0c 	bl	80160d0 <uart0_puts>
 80156b8:	4620      	mov	r0, r4
 80156ba:	f000 fd09 	bl	80160d0 <uart0_puts>
 80156be:	200a      	movs	r0, #10
 80156c0:	f000 fcec 	bl	801609c <uart0_putc>
 80156c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80156c8:	4802      	ldr	r0, [pc, #8]	; (80156d4 <console_status+0x2c>)
 80156ca:	f000 bd01 	b.w	80160d0 <uart0_puts>
 80156ce:	bf00      	nop
 80156d0:	0801bb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, ip, sp, pc}
 80156d4:	080185d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, pc}

080156d8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80156d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80156dc:	4688      	mov	r8, r1
 80156de:	b086      	sub	sp, #24
 80156e0:	4604      	mov	r4, r0
 80156e2:	4617      	mov	r7, r2
 80156e4:	461e      	mov	r6, r3
 80156e6:	4a2a      	ldr	r2, [pc, #168]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 80156e8:	492a      	ldr	r1, [pc, #168]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 80156ea:	482b      	ldr	r0, [pc, #172]	; (8015798 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc0>)
 80156ec:	2331      	movs	r3, #49	; 0x31
 80156ee:	f7f4 fecb 	bl	800a488 <printf>
 80156f2:	f1b8 0f00 	cmp.w	r8, #0
 80156f6:	d105      	bne.n	8015704 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x2c>
 80156f8:	4b28      	ldr	r3, [pc, #160]	; (801579c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc4>)
 80156fa:	4a25      	ldr	r2, [pc, #148]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 80156fc:	4825      	ldr	r0, [pc, #148]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 80156fe:	2133      	movs	r1, #51	; 0x33
 8015700:	f7f4 fbb6 	bl	8009e70 <__assert_func>
 8015704:	b92f      	cbnz	r7, 8015712 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x3a>
 8015706:	4b26      	ldr	r3, [pc, #152]	; (80157a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc8>)
 8015708:	4a21      	ldr	r2, [pc, #132]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 801570a:	4822      	ldr	r0, [pc, #136]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 801570c:	2134      	movs	r1, #52	; 0x34
 801570e:	f7f4 fbaf 	bl	8009e70 <__assert_func>
 8015712:	b92e      	cbnz	r6, 8015720 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x48>
 8015714:	4b23      	ldr	r3, [pc, #140]	; (80157a4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xcc>)
 8015716:	4a1e      	ldr	r2, [pc, #120]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015718:	481e      	ldr	r0, [pc, #120]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 801571a:	2135      	movs	r1, #53	; 0x35
 801571c:	f7f4 fba8 	bl	8009e70 <__assert_func>
 8015720:	4d21      	ldr	r5, [pc, #132]	; (80157a8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd0>)
 8015722:	682b      	ldr	r3, [r5, #0]
 8015724:	b12b      	cbz	r3, 8015732 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5a>
 8015726:	4b21      	ldr	r3, [pc, #132]	; (80157ac <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd4>)
 8015728:	4a19      	ldr	r2, [pc, #100]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 801572a:	481a      	ldr	r0, [pc, #104]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 801572c:	2137      	movs	r1, #55	; 0x37
 801572e:	f7f4 fb9f 	bl	8009e70 <__assert_func>
 8015732:	602c      	str	r4, [r5, #0]
 8015734:	4d1e      	ldr	r5, [pc, #120]	; (80157b0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd8>)
 8015736:	4641      	mov	r1, r8
 8015738:	2203      	movs	r2, #3
 801573a:	f105 0803 	add.w	r8, r5, #3
 801573e:	4628      	mov	r0, r5
 8015740:	f000 fb55 	bl	8015dee <memmove>
 8015744:	4639      	mov	r1, r7
 8015746:	220b      	movs	r2, #11
 8015748:	4640      	mov	r0, r8
 801574a:	f000 fb50 	bl	8015dee <memmove>
 801574e:	f105 030e 	add.w	r3, r5, #14
 8015752:	4631      	mov	r1, r6
 8015754:	2208      	movs	r2, #8
 8015756:	4618      	mov	r0, r3
 8015758:	f000 fb49 	bl	8015dee <memmove>
 801575c:	2308      	movs	r3, #8
 801575e:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8015762:	230b      	movs	r3, #11
 8015764:	9302      	str	r3, [sp, #8]
 8015766:	4b13      	ldr	r3, [pc, #76]	; (80157b4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xdc>)
 8015768:	9005      	str	r0, [sp, #20]
 801576a:	e9cd 5300 	strd	r5, r3, [sp]
 801576e:	4a12      	ldr	r2, [pc, #72]	; (80157b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe0>)
 8015770:	4812      	ldr	r0, [pc, #72]	; (80157bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe4>)
 8015772:	2303      	movs	r3, #3
 8015774:	213f      	movs	r1, #63	; 0x3f
 8015776:	f7f4 feaf 	bl	800a4d8 <snprintf>
 801577a:	4a05      	ldr	r2, [pc, #20]	; (8015790 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 801577c:	4905      	ldr	r1, [pc, #20]	; (8015794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 801577e:	4810      	ldr	r0, [pc, #64]	; (80157c0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe8>)
 8015780:	2346      	movs	r3, #70	; 0x46
 8015782:	f7f4 fe81 	bl	800a488 <printf>
 8015786:	4620      	mov	r0, r4
 8015788:	b006      	add	sp, #24
 801578a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801578e:	bf00      	nop
 8015790:	0801bb94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, sp, pc}
 8015794:	0801bba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, sp, pc}
 8015798:	08018745 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, pc}
 801579c:	0801bbbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, ip, sp, pc}
 80157a0:	0801bbd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, fp, ip, sp, pc}
 80157a4:	0801bbe1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 80157a8:	2000fd78 	andcs	pc, r0, r8, ror sp	; <UNPREDICTABLE>
 80157ac:	0801bbf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 80157b0:	2000fd20 	andcs	pc, r0, r0, lsr #26
 80157b4:	08019002 	stmdaeq	r1, {r1, ip, pc}
 80157b8:	0801bc05 	stmdaeq	r1, {r0, r2, sl, fp, ip, sp, pc}
 80157bc:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>
 80157c0:	08018767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, pc}

080157c4 <FirmwareVersion::Print(char const*)>:
 80157c4:	b510      	push	{r4, lr}
 80157c6:	4805      	ldr	r0, [pc, #20]	; (80157dc <FirmwareVersion::Print(char const*)+0x18>)
 80157c8:	460c      	mov	r4, r1
 80157ca:	f000 fb48 	bl	8015e5e <puts>
 80157ce:	b124      	cbz	r4, 80157da <FirmwareVersion::Print(char const*)+0x16>
 80157d0:	4620      	mov	r0, r4
 80157d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157d6:	f000 bb42 	b.w	8015e5e <puts>
 80157da:	bd10      	pop	{r4, pc}
 80157dc:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>

080157e0 <LedBlink::LedBlink()>:
 80157e0:	b538      	push	{r3, r4, r5, lr}
 80157e2:	2205      	movs	r2, #5
 80157e4:	2300      	movs	r3, #0
 80157e6:	4d14      	ldr	r5, [pc, #80]	; (8015838 <LedBlink::LedBlink()+0x58>)
 80157e8:	6083      	str	r3, [r0, #8]
 80157ea:	e9c0 3200 	strd	r3, r2, [r0]
 80157ee:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80157f2:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80157f6:	6143      	str	r3, [r0, #20]
 80157f8:	682b      	ldr	r3, [r5, #0]
 80157fa:	4604      	mov	r4, r0
 80157fc:	b12b      	cbz	r3, 801580a <LedBlink::LedBlink()+0x2a>
 80157fe:	4b0f      	ldr	r3, [pc, #60]	; (801583c <LedBlink::LedBlink()+0x5c>)
 8015800:	4a0f      	ldr	r2, [pc, #60]	; (8015840 <LedBlink::LedBlink()+0x60>)
 8015802:	4810      	ldr	r0, [pc, #64]	; (8015844 <LedBlink::LedBlink()+0x64>)
 8015804:	2128      	movs	r1, #40	; 0x28
 8015806:	f7f4 fb33 	bl	8009e70 <__assert_func>
 801580a:	f640 4002 	movw	r0, #3074	; 0xc02
 801580e:	602c      	str	r4, [r5, #0]
 8015810:	f001 fa96 	bl	8016d40 <rcu_periph_clock_enable>
 8015814:	2301      	movs	r3, #1
 8015816:	4619      	mov	r1, r3
 8015818:	480b      	ldr	r0, [pc, #44]	; (8015848 <LedBlink::LedBlink()+0x68>)
 801581a:	2200      	movs	r2, #0
 801581c:	f001 fa14 	bl	8016c48 <gpio_mode_set>
 8015820:	4809      	ldr	r0, [pc, #36]	; (8015848 <LedBlink::LedBlink()+0x68>)
 8015822:	2301      	movs	r3, #1
 8015824:	2202      	movs	r2, #2
 8015826:	2100      	movs	r1, #0
 8015828:	f001 fa2e 	bl	8016c88 <gpio_output_options_set>
 801582c:	4b07      	ldr	r3, [pc, #28]	; (801584c <LedBlink::LedBlink()+0x6c>)
 801582e:	2201      	movs	r2, #1
 8015830:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8015834:	4620      	mov	r0, r4
 8015836:	bd38      	pop	{r3, r4, r5, pc}
 8015838:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 801583c:	0801bbf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 8015840:	0801bc29 	stmdaeq	r1, {r0, r3, r5, sl, fp, ip, sp, pc}
 8015844:	0801bc32 	stmdaeq	r1, {r1, r4, r5, sl, fp, ip, sp, pc}
 8015848:	40020800 	andmi	r0, r2, r0, lsl #16
 801584c:	40020000 	andmi	r0, r2, r0

08015850 <LedBlink::SetMode(ledblink::Mode)>:
 8015850:	6843      	ldr	r3, [r0, #4]
 8015852:	428b      	cmp	r3, r1
 8015854:	b513      	push	{r0, r1, r4, lr}
 8015856:	4604      	mov	r4, r0
 8015858:	d01c      	beq.n	8015894 <LedBlink::SetMode(ledblink::Mode)+0x44>
 801585a:	6041      	str	r1, [r0, #4]
 801585c:	2904      	cmp	r1, #4
 801585e:	d82a      	bhi.n	80158b6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8015860:	e8df f001 	tbb	[pc, r1]
 8015864:	201a0329 	andscs	r0, sl, r9, lsr #6
 8015868:	23ff0025 	mvnscs	r0, #37	; 0x25
 801586c:	6003      	str	r3, [r0, #0]
 801586e:	2300      	movs	r3, #0
 8015870:	60c3      	str	r3, [r0, #12]
 8015872:	4b15      	ldr	r3, [pc, #84]	; (80158c8 <LedBlink::SetMode(ledblink::Mode)+0x78>)
 8015874:	2201      	movs	r2, #1
 8015876:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 801587a:	68a0      	ldr	r0, [r4, #8]
 801587c:	b110      	cbz	r0, 8015884 <LedBlink::SetMode(ledblink::Mode)+0x34>
 801587e:	6803      	ldr	r3, [r0, #0]
 8015880:	689b      	ldr	r3, [r3, #8]
 8015882:	4798      	blx	r3
 8015884:	6863      	ldr	r3, [r4, #4]
 8015886:	9300      	str	r3, [sp, #0]
 8015888:	4a10      	ldr	r2, [pc, #64]	; (80158cc <LedBlink::SetMode(ledblink::Mode)+0x7c>)
 801588a:	4911      	ldr	r1, [pc, #68]	; (80158d0 <LedBlink::SetMode(ledblink::Mode)+0x80>)
 801588c:	4811      	ldr	r0, [pc, #68]	; (80158d4 <LedBlink::SetMode(ledblink::Mode)+0x84>)
 801588e:	234e      	movs	r3, #78	; 0x4e
 8015890:	f7f4 fdfa 	bl	800a488 <printf>
 8015894:	b002      	add	sp, #8
 8015896:	bd10      	pop	{r4, pc}
 8015898:	2301      	movs	r3, #1
 801589a:	6003      	str	r3, [r0, #0]
 801589c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80158a0:	60e3      	str	r3, [r4, #12]
 80158a2:	e7ea      	b.n	801587a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80158a4:	2303      	movs	r3, #3
 80158a6:	6003      	str	r3, [r0, #0]
 80158a8:	f240 134d 	movw	r3, #333	; 0x14d
 80158ac:	e7f8      	b.n	80158a0 <LedBlink::SetMode(ledblink::Mode)+0x50>
 80158ae:	2305      	movs	r3, #5
 80158b0:	6003      	str	r3, [r0, #0]
 80158b2:	23c8      	movs	r3, #200	; 0xc8
 80158b4:	e7f4      	b.n	80158a0 <LedBlink::SetMode(ledblink::Mode)+0x50>
 80158b6:	2300      	movs	r3, #0
 80158b8:	6003      	str	r3, [r0, #0]
 80158ba:	60c3      	str	r3, [r0, #12]
 80158bc:	4b02      	ldr	r3, [pc, #8]	; (80158c8 <LedBlink::SetMode(ledblink::Mode)+0x78>)
 80158be:	2201      	movs	r2, #1
 80158c0:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 80158c4:	e7d9      	b.n	801587a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80158c6:	bf00      	nop
 80158c8:	40020000 	andmi	r0, r2, r0
 80158cc:	0801bc32 	stmdaeq	r1, {r1, r4, r5, sl, fp, ip, sp, pc}
 80158d0:	0801bc43 	stmdaeq	r1, {r0, r1, r6, sl, fp, ip, sp, pc}
 80158d4:	0801bc4b 	stmdaeq	r1, {r0, r1, r3, r6, sl, fp, ip, sp, pc}

080158d8 <Hardware::Hardware()>:
 80158d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80158da:	4c58      	ldr	r4, [pc, #352]	; (8015a3c <Hardware::Hardware()+0x164>)
 80158dc:	2300      	movs	r3, #0
 80158de:	7003      	strb	r3, [r0, #0]
 80158e0:	6823      	ldr	r3, [r4, #0]
 80158e2:	b095      	sub	sp, #84	; 0x54
 80158e4:	4605      	mov	r5, r0
 80158e6:	b12b      	cbz	r3, 80158f4 <Hardware::Hardware()+0x1c>
 80158e8:	4b55      	ldr	r3, [pc, #340]	; (8015a40 <Hardware::Hardware()+0x168>)
 80158ea:	4a56      	ldr	r2, [pc, #344]	; (8015a44 <Hardware::Hardware()+0x16c>)
 80158ec:	4856      	ldr	r0, [pc, #344]	; (8015a48 <Hardware::Hardware()+0x170>)
 80158ee:	2138      	movs	r1, #56	; 0x38
 80158f0:	f7f4 fabe 	bl	8009e70 <__assert_func>
 80158f4:	6025      	str	r5, [r4, #0]
 80158f6:	f7f2 fe25 	bl	8008544 <console_init>
 80158fa:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 80158fe:	f001 fa4b 	bl	8016d98 <rcu_timer_clock_prescaler_config>
 8015902:	2000      	movs	r0, #0
 8015904:	f001 fa58 	bl	8016db8 <rcu_clock_freq_get>
 8015908:	4607      	mov	r7, r0
 801590a:	2001      	movs	r0, #1
 801590c:	f001 fa54 	bl	8016db8 <rcu_clock_freq_get>
 8015910:	9003      	str	r0, [sp, #12]
 8015912:	2002      	movs	r0, #2
 8015914:	f001 fa50 	bl	8016db8 <rcu_clock_freq_get>
 8015918:	4606      	mov	r6, r0
 801591a:	2003      	movs	r0, #3
 801591c:	f001 fa4c 	bl	8016db8 <rcu_clock_freq_get>
 8015920:	4633      	mov	r3, r6
 8015922:	9000      	str	r0, [sp, #0]
 8015924:	9a03      	ldr	r2, [sp, #12]
 8015926:	4604      	mov	r4, r0
 8015928:	4639      	mov	r1, r7
 801592a:	4848      	ldr	r0, [pc, #288]	; (8015a4c <Hardware::Hardware()+0x174>)
 801592c:	f7f4 fdac 	bl	800a488 <printf>
 8015930:	4b47      	ldr	r3, [pc, #284]	; (8015a50 <Hardware::Hardware()+0x178>)
 8015932:	429f      	cmp	r7, r3
 8015934:	d005      	beq.n	8015942 <Hardware::Hardware()+0x6a>
 8015936:	4b47      	ldr	r3, [pc, #284]	; (8015a54 <Hardware::Hardware()+0x17c>)
 8015938:	4a42      	ldr	r2, [pc, #264]	; (8015a44 <Hardware::Hardware()+0x16c>)
 801593a:	4843      	ldr	r0, [pc, #268]	; (8015a48 <Hardware::Hardware()+0x170>)
 801593c:	2148      	movs	r1, #72	; 0x48
 801593e:	f7f4 fa97 	bl	8009e70 <__assert_func>
 8015942:	4b45      	ldr	r3, [pc, #276]	; (8015a58 <Hardware::Hardware()+0x180>)
 8015944:	429e      	cmp	r6, r3
 8015946:	d005      	beq.n	8015954 <Hardware::Hardware()+0x7c>
 8015948:	4b44      	ldr	r3, [pc, #272]	; (8015a5c <Hardware::Hardware()+0x184>)
 801594a:	4a3e      	ldr	r2, [pc, #248]	; (8015a44 <Hardware::Hardware()+0x16c>)
 801594c:	483e      	ldr	r0, [pc, #248]	; (8015a48 <Hardware::Hardware()+0x170>)
 801594e:	2149      	movs	r1, #73	; 0x49
 8015950:	f7f4 fa8e 	bl	8009e70 <__assert_func>
 8015954:	4b42      	ldr	r3, [pc, #264]	; (8015a60 <Hardware::Hardware()+0x188>)
 8015956:	429c      	cmp	r4, r3
 8015958:	d005      	beq.n	8015966 <Hardware::Hardware()+0x8e>
 801595a:	4b42      	ldr	r3, [pc, #264]	; (8015a64 <Hardware::Hardware()+0x18c>)
 801595c:	4a39      	ldr	r2, [pc, #228]	; (8015a44 <Hardware::Hardware()+0x16c>)
 801595e:	483a      	ldr	r0, [pc, #232]	; (8015a48 <Hardware::Hardware()+0x170>)
 8015960:	214a      	movs	r1, #74	; 0x4a
 8015962:	f7f4 fa85 	bl	8009e70 <__assert_func>
 8015966:	f000 fbc3 	bl	80160f0 <systick_config>
 801596a:	f002 fa19 	bl	8017da0 <udelay_init()>
 801596e:	f002 f9f7 	bl	8017d60 <micros_init()>
 8015972:	f241 001c 	movw	r0, #4124	; 0x101c
 8015976:	f001 f9e3 	bl	8016d40 <rcu_periph_clock_enable>
 801597a:	4e3b      	ldr	r6, [pc, #236]	; (8015a68 <Hardware::Hardware()+0x190>)
 801597c:	4c3b      	ldr	r4, [pc, #236]	; (8015a6c <Hardware::Hardware()+0x194>)
 801597e:	f44f 7000 	mov.w	r0, #512	; 0x200
 8015982:	f001 f9c9 	bl	8016d18 <pmu_backup_ldo_config>
 8015986:	f640 4012 	movw	r0, #3090	; 0xc12
 801598a:	f001 f9d9 	bl	8016d40 <rcu_periph_clock_enable>
 801598e:	1ba4      	subs	r4, r4, r6
 8015990:	f001 f9ce 	bl	8016d30 <pmu_backup_write_enable>
 8015994:	2100      	movs	r1, #0
 8015996:	2001      	movs	r0, #1
 8015998:	f001 fe10 	bl	80175bc <bkp_data_write(bkp_data_register_enum, unsigned short)>
 801599c:	4a2a      	ldr	r2, [pc, #168]	; (8015a48 <Hardware::Hardware()+0x170>)
 801599e:	4929      	ldr	r1, [pc, #164]	; (8015a44 <Hardware::Hardware()+0x16c>)
 80159a0:	4833      	ldr	r0, [pc, #204]	; (8015a70 <Hardware::Hardware()+0x198>)
 80159a2:	2363      	movs	r3, #99	; 0x63
 80159a4:	e9cd 6400 	strd	r6, r4, [sp]
 80159a8:	f7f4 fd6e 	bl	800a488 <printf>
 80159ac:	4623      	mov	r3, r4
 80159ae:	2200      	movs	r2, #0
 80159b0:	3b01      	subs	r3, #1
 80159b2:	d23d      	bcs.n	8015a30 <Hardware::Hardware()+0x158>
 80159b4:	4e2f      	ldr	r6, [pc, #188]	; (8015a74 <Hardware::Hardware()+0x19c>)
 80159b6:	4c30      	ldr	r4, [pc, #192]	; (8015a78 <Hardware::Hardware()+0x1a0>)
 80159b8:	4a23      	ldr	r2, [pc, #140]	; (8015a48 <Hardware::Hardware()+0x170>)
 80159ba:	4922      	ldr	r1, [pc, #136]	; (8015a44 <Hardware::Hardware()+0x16c>)
 80159bc:	482c      	ldr	r0, [pc, #176]	; (8015a70 <Hardware::Hardware()+0x198>)
 80159be:	1ba4      	subs	r4, r4, r6
 80159c0:	2368      	movs	r3, #104	; 0x68
 80159c2:	e9cd 6400 	strd	r6, r4, [sp]
 80159c6:	f7f4 fd5f 	bl	800a488 <printf>
 80159ca:	2300      	movs	r3, #0
 80159cc:	3c01      	subs	r4, #1
 80159ce:	d232      	bcs.n	8015a36 <Hardware::Hardware()+0x15e>
 80159d0:	f241 0004 	movw	r0, #4100	; 0x1004
 80159d4:	f001 f9b4 	bl	8016d40 <rcu_periph_clock_enable>
 80159d8:	4828      	ldr	r0, [pc, #160]	; (8015a7c <Hardware::Hardware()+0x1a4>)
 80159da:	f001 fa6d 	bl	8016eb8 <timer_deinit>
 80159de:	a907      	add	r1, sp, #28
 80159e0:	23c7      	movs	r3, #199	; 0xc7
 80159e2:	4826      	ldr	r0, [pc, #152]	; (8015a7c <Hardware::Hardware()+0x1a4>)
 80159e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80159e8:	9409      	str	r4, [sp, #36]	; 0x24
 80159ea:	f001 fb0b 	bl	8017004 <timer_init>
 80159ee:	4823      	ldr	r0, [pc, #140]	; (8015a7c <Hardware::Hardware()+0x1a4>)
 80159f0:	f001 fb46 	bl	8017080 <timer_enable>
 80159f4:	f001 fdf4 	bl	80175e0 <gd32_adc_init()>
 80159f8:	2219      	movs	r2, #25
 80159fa:	230b      	movs	r3, #11
 80159fc:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8015a00:	2400      	movs	r4, #0
 8015a02:	237a      	movs	r3, #122	; 0x7a
 8015a04:	a80b      	add	r0, sp, #44	; 0x2c
 8015a06:	9310      	str	r3, [sp, #64]	; 0x40
 8015a08:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
 8015a0c:	940b      	str	r4, [sp, #44]	; 0x2c
 8015a0e:	9413      	str	r4, [sp, #76]	; 0x4c
 8015a10:	f000 fa7e 	bl	8015f10 <mktime>
 8015a14:	4621      	mov	r1, r4
 8015a16:	e9cd 0405 	strd	r0, r4, [sp, #20]
 8015a1a:	a805      	add	r0, sp, #20
 8015a1c:	f000 fafc 	bl	8016018 <settimeofday>
 8015a20:	f001 fe3e 	bl	80176a0 <gd32_i2c_begin>
 8015a24:	a804      	add	r0, sp, #16
 8015a26:	f000 f885 	bl	8015b34 <I2cDetect::I2cDetect()>
 8015a2a:	4628      	mov	r0, r5
 8015a2c:	b015      	add	sp, #84	; 0x54
 8015a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015a30:	f806 2b01 	strb.w	r2, [r6], #1
 8015a34:	e7bc      	b.n	80159b0 <Hardware::Hardware()+0xd8>
 8015a36:	f806 3b01 	strb.w	r3, [r6], #1
 8015a3a:	e7c7      	b.n	80159cc <Hardware::Hardware()+0xf4>
 8015a3c:	2000fd80 	andcs	pc, r0, r0, lsl #27
 8015a40:	0801bbf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 8015a44:	0801bc66 	stmdaeq	r1, {r1, r2, r5, r6, sl, fp, ip, sp, pc}
 8015a48:	0801bc6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, fp, ip, sp, pc}
 8015a4c:	0801bc85 	stmdaeq	r1, {r0, r2, r7, sl, fp, ip, sp, pc}
 8015a50:	0bebc200 	bleq	7b06258 <__stack_size+0x7b02258>
 8015a54:	0801bcb0 	stmdaeq	r1, {r4, r5, r7, sl, fp, ip, sp, pc}
 8015a58:	02faf080 	rscseq	pc, sl, #128	; 0x80
 8015a5c:	0801bcc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, sl, fp, ip, sp, pc}
 8015a60:	05f5e100 	ldrbeq	lr, [r5, #256]!	; 0x100
 8015a64:	0801bce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, ip, sp, pc}
 8015a68:	10000000 	andne	r0, r0, r0
 8015a6c:	100015c8 	andne	r1, r0, r8, asr #11
 8015a70:	0801bcf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, ip, sp, pc}
 8015a74:	20030000 	andcs	r0, r3, r0
 8015a78:	20048d08 	andcs	r8, r4, r8, lsl #26
 8015a7c:	40001000 	andmi	r1, r0, r0

08015a80 <Hardware::GetUuid(unsigned char*)>:
 8015a80:	4a0c      	ldr	r2, [pc, #48]	; (8015ab4 <Hardware::GetUuid(unsigned char*)+0x34>)
 8015a82:	b084      	sub	sp, #16
 8015a84:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8015a88:	9300      	str	r3, [sp, #0]
 8015a8a:	f8d2 0a14 	ldr.w	r0, [r2, #2580]	; 0xa14
 8015a8e:	9001      	str	r0, [sp, #4]
 8015a90:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	; 0xa18
 8015a94:	9202      	str	r2, [sp, #8]
 8015a96:	4403      	add	r3, r0
 8015a98:	4413      	add	r3, r2
 8015a9a:	9303      	str	r3, [sp, #12]
 8015a9c:	466a      	mov	r2, sp
 8015a9e:	1e4b      	subs	r3, r1, #1
 8015aa0:	310f      	adds	r1, #15
 8015aa2:	428b      	cmp	r3, r1
 8015aa4:	d101      	bne.n	8015aaa <Hardware::GetUuid(unsigned char*)+0x2a>
 8015aa6:	b004      	add	sp, #16
 8015aa8:	4770      	bx	lr
 8015aaa:	f812 0b01 	ldrb.w	r0, [r2], #1
 8015aae:	f803 0f01 	strb.w	r0, [r3, #1]!
 8015ab2:	e7f6      	b.n	8015aa2 <Hardware::GetUuid(unsigned char*)+0x22>
 8015ab4:	1fff7000 	svcne	0x00ff7000

08015ab8 <Hardware::Reboot()>:
 8015ab8:	b508      	push	{r3, lr}
 8015aba:	2300      	movs	r3, #0
 8015abc:	7003      	strb	r3, [r0, #0]
 8015abe:	4604      	mov	r4, r0
 8015ac0:	2104      	movs	r1, #4
 8015ac2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015ac6:	f001 f895 	bl	8016bf4 <fwdgt_config>
 8015aca:	4620      	mov	r0, r4
 8015acc:	f7f3 fca6 	bl	800941c <Hardware::RebootHandler()>
 8015ad0:	2102      	movs	r1, #2
 8015ad2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015ad6:	f001 f88d 	bl	8016bf4 <fwdgt_config>
 8015ada:	2801      	cmp	r0, #1
 8015adc:	bf0c      	ite	eq
 8015ade:	2301      	moveq	r3, #1
 8015ae0:	2300      	movne	r3, #0
 8015ae2:	7023      	strb	r3, [r4, #0]
 8015ae4:	d101      	bne.n	8015aea <Hardware::Reboot()+0x32>
 8015ae6:	f001 f875 	bl	8016bd4 <fwdgt_enable>
 8015aea:	4b0f      	ldr	r3, [pc, #60]	; (8015b28 <Hardware::Reboot()+0x70>)
 8015aec:	480f      	ldr	r0, [pc, #60]	; (8015b2c <Hardware::Reboot()+0x74>)
 8015aee:	681b      	ldr	r3, [r3, #0]
 8015af0:	490f      	ldr	r1, [pc, #60]	; (8015b30 <Hardware::Reboot()+0x78>)
 8015af2:	2208      	movs	r2, #8
 8015af4:	601a      	str	r2, [r3, #0]
 8015af6:	227d      	movs	r2, #125	; 0x7d
 8015af8:	60da      	str	r2, [r3, #12]
 8015afa:	2501      	movs	r5, #1
 8015afc:	68dc      	ldr	r4, [r3, #12]
 8015afe:	b904      	cbnz	r4, 8015b02 <Hardware::Reboot()+0x4a>
 8015b00:	e7fe      	b.n	8015b00 <Hardware::Reboot()+0x48>
 8015b02:	6802      	ldr	r2, [r0, #0]
 8015b04:	695e      	ldr	r6, [r3, #20]
 8015b06:	1b92      	subs	r2, r2, r6
 8015b08:	4294      	cmp	r4, r2
 8015b0a:	d8f8      	bhi.n	8015afe <Hardware::Reboot()+0x46>
 8015b0c:	6802      	ldr	r2, [r0, #0]
 8015b0e:	615a      	str	r2, [r3, #20]
 8015b10:	691a      	ldr	r2, [r3, #16]
 8015b12:	2a01      	cmp	r2, #1
 8015b14:	f082 0401 	eor.w	r4, r2, #1
 8015b18:	611c      	str	r4, [r3, #16]
 8015b1a:	bf14      	ite	ne
 8015b1c:	f8c1 5818 	strne.w	r5, [r1, #2072]	; 0x818
 8015b20:	f8c1 2828 	streq.w	r2, [r1, #2088]	; 0x828
 8015b24:	e7ea      	b.n	8015afc <Hardware::Reboot()+0x44>
 8015b26:	bf00      	nop
 8015b28:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 8015b2c:	2000fd94 	mulcs	r0, r4, sp
 8015b30:	40020000 	andmi	r0, r2, r0

08015b34 <I2cDetect::I2cDetect()>:
 8015b34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b38:	4606      	mov	r6, r0
 8015b3a:	4825      	ldr	r0, [pc, #148]	; (8015bd0 <I2cDetect::I2cDetect()+0x9c>)
 8015b3c:	f8df 90a0 	ldr.w	r9, [pc, #160]	; 8015be0 <I2cDetect::I2cDetect()+0xac>
 8015b40:	4f24      	ldr	r7, [pc, #144]	; (8015bd4 <I2cDetect::I2cDetect()+0xa0>)
 8015b42:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8015be4 <I2cDetect::I2cDetect()+0xb0>
 8015b46:	f001 fdf5 	bl	8017734 <gd32_i2c_set_baudrate>
 8015b4a:	4823      	ldr	r0, [pc, #140]	; (8015bd8 <I2cDetect::I2cDetect()+0xa4>)
 8015b4c:	f000 f987 	bl	8015e5e <puts>
 8015b50:	2500      	movs	r5, #0
 8015b52:	4629      	mov	r1, r5
 8015b54:	4648      	mov	r0, r9
 8015b56:	f7f4 fc97 	bl	800a488 <printf>
 8015b5a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8015be8 <I2cDetect::I2cDetect()+0xb4>
 8015b5e:	462c      	mov	r4, r5
 8015b60:	1ee3      	subs	r3, r4, #3
 8015b62:	2b74      	cmp	r3, #116	; 0x74
 8015b64:	d905      	bls.n	8015b72 <I2cDetect::I2cDetect()+0x3e>
 8015b66:	4650      	mov	r0, sl
 8015b68:	f7f4 fc8e 	bl	800a488 <printf>
 8015b6c:	e019      	b.n	8015ba2 <I2cDetect::I2cDetect()+0x6e>
 8015b6e:	4625      	mov	r5, r4
 8015b70:	e7ef      	b.n	8015b52 <I2cDetect::I2cDetect()+0x1e>
 8015b72:	fa5f fb84 	uxtb.w	fp, r4
 8015b76:	4658      	mov	r0, fp
 8015b78:	f001 fde4 	bl	8017744 <gd32_i2c_set_address>
 8015b7c:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
 8015b80:	2b07      	cmp	r3, #7
 8015b82:	d904      	bls.n	8015b8e <I2cDetect::I2cDetect()+0x5a>
 8015b84:	f1ab 0b50 	sub.w	fp, fp, #80	; 0x50
 8015b88:	f1bb 0f0f 	cmp.w	fp, #15
 8015b8c:	d819      	bhi.n	8015bc2 <I2cDetect::I2cDetect()+0x8e>
 8015b8e:	2101      	movs	r1, #1
 8015b90:	f10d 0007 	add.w	r0, sp, #7
 8015b94:	f001 fe42 	bl	801781c <gd32_i2c_read>
 8015b98:	b9c0      	cbnz	r0, 8015bcc <I2cDetect::I2cDetect()+0x98>
 8015b9a:	4621      	mov	r1, r4
 8015b9c:	4640      	mov	r0, r8
 8015b9e:	f7f4 fc73 	bl	800a488 <printf>
 8015ba2:	3401      	adds	r4, #1
 8015ba4:	f105 0310 	add.w	r3, r5, #16
 8015ba8:	429c      	cmp	r4, r3
 8015baa:	d1d9      	bne.n	8015b60 <I2cDetect::I2cDetect()+0x2c>
 8015bac:	480b      	ldr	r0, [pc, #44]	; (8015bdc <I2cDetect::I2cDetect()+0xa8>)
 8015bae:	f000 f956 	bl	8015e5e <puts>
 8015bb2:	2c80      	cmp	r4, #128	; 0x80
 8015bb4:	d1db      	bne.n	8015b6e <I2cDetect::I2cDetect()+0x3a>
 8015bb6:	f001 fd73 	bl	80176a0 <gd32_i2c_begin>
 8015bba:	4630      	mov	r0, r6
 8015bbc:	b003      	add	sp, #12
 8015bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bc2:	2100      	movs	r1, #0
 8015bc4:	4608      	mov	r0, r1
 8015bc6:	f001 fdc3 	bl	8017750 <gd32_i2c_write>
 8015bca:	e7e5      	b.n	8015b98 <I2cDetect::I2cDetect()+0x64>
 8015bcc:	4638      	mov	r0, r7
 8015bce:	e7cb      	b.n	8015b68 <I2cDetect::I2cDetect()+0x34>
 8015bd0:	000186a0 	andeq	r8, r1, r0, lsr #13
 8015bd4:	0801bd58 	stmdaeq	r1, {r3, r4, r6, r8, sl, fp, ip, sp, pc}
 8015bd8:	0801bd12 	stmdaeq	r1, {r1, r4, r8, sl, fp, ip, sp, pc}
 8015bdc:	08019001 	stmdaeq	r1, {r0, ip, pc}
 8015be0:	0801bd47 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, fp, ip, sp, pc}
 8015be4:	0801bd52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, ip, sp, pc}
 8015be8:	0801bd4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, sl, fp, ip, sp, pc}

08015bec <operator delete(void*)>:
 8015bec:	f000 b8be 	b.w	8015d6c <free>

08015bf0 <operator delete[](void*)>:
 8015bf0:	f000 b8bc 	b.w	8015d6c <free>

08015bf4 <operator new(unsigned int)>:
 8015bf4:	f000 b842 	b.w	8015c7c <malloc>

08015bf8 <operator new[](unsigned int)>:
 8015bf8:	f000 b840 	b.w	8015c7c <malloc>

08015bfc <inet_aton>:
 8015bfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015bfe:	f04f 0c0a 	mov.w	ip, #10
 8015c02:	ae01      	add	r6, sp, #4
 8015c04:	2500      	movs	r5, #0
 8015c06:	4603      	mov	r3, r0
 8015c08:	1d07      	adds	r7, r0, #4
 8015c0a:	2200      	movs	r2, #0
 8015c0c:	e007      	b.n	8015c1e <inet_aton+0x22>
 8015c0e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8015c12:	2b09      	cmp	r3, #9
 8015c14:	d820      	bhi.n	8015c58 <inet_aton+0x5c>
 8015c16:	fb0c 4202 	mla	r2, ip, r2, r4
 8015c1a:	3a30      	subs	r2, #48	; 0x30
 8015c1c:	4603      	mov	r3, r0
 8015c1e:	4618      	mov	r0, r3
 8015c20:	f810 4b01 	ldrb.w	r4, [r0], #1
 8015c24:	2c2e      	cmp	r4, #46	; 0x2e
 8015c26:	d111      	bne.n	8015c4c <inet_aton+0x50>
 8015c28:	3501      	adds	r5, #1
 8015c2a:	2d03      	cmp	r5, #3
 8015c2c:	f806 2b01 	strb.w	r2, [r6], #1
 8015c30:	d1e9      	bne.n	8015c06 <inet_aton+0xa>
 8015c32:	1d1c      	adds	r4, r3, #4
 8015c34:	2200      	movs	r2, #0
 8015c36:	250a      	movs	r5, #10
 8015c38:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8015c3c:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8015c40:	d10d      	bne.n	8015c5e <inet_aton+0x62>
 8015c42:	f88d 2007 	strb.w	r2, [sp, #7]
 8015c46:	b9b1      	cbnz	r1, 8015c76 <inet_aton+0x7a>
 8015c48:	2001      	movs	r0, #1
 8015c4a:	e006      	b.n	8015c5a <inet_aton+0x5e>
 8015c4c:	2c00      	cmp	r4, #0
 8015c4e:	d0eb      	beq.n	8015c28 <inet_aton+0x2c>
 8015c50:	2c0a      	cmp	r4, #10
 8015c52:	d0e9      	beq.n	8015c28 <inet_aton+0x2c>
 8015c54:	42b8      	cmp	r0, r7
 8015c56:	d1da      	bne.n	8015c0e <inet_aton+0x12>
 8015c58:	2000      	movs	r0, #0
 8015c5a:	b003      	add	sp, #12
 8015c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015c5e:	280a      	cmp	r0, #10
 8015c60:	d0ef      	beq.n	8015c42 <inet_aton+0x46>
 8015c62:	42a3      	cmp	r3, r4
 8015c64:	d0f8      	beq.n	8015c58 <inet_aton+0x5c>
 8015c66:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8015c6a:	2e09      	cmp	r6, #9
 8015c6c:	d8f4      	bhi.n	8015c58 <inet_aton+0x5c>
 8015c6e:	fb05 0202 	mla	r2, r5, r2, r0
 8015c72:	3a30      	subs	r2, #48	; 0x30
 8015c74:	e7e0      	b.n	8015c38 <inet_aton+0x3c>
 8015c76:	9b01      	ldr	r3, [sp, #4]
 8015c78:	600b      	str	r3, [r1, #0]
 8015c7a:	e7e5      	b.n	8015c48 <inet_aton+0x4c>

08015c7c <malloc>:
 8015c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c7e:	4601      	mov	r1, r0
 8015c80:	4604      	mov	r4, r0
 8015c82:	482d      	ldr	r0, [pc, #180]	; (8015d38 <malloc+0xbc>)
 8015c84:	f7f4 fc00 	bl	800a488 <printf>
 8015c88:	b1fc      	cbz	r4, 8015cca <malloc+0x4e>
 8015c8a:	4e2c      	ldr	r6, [pc, #176]	; (8015d3c <malloc+0xc0>)
 8015c8c:	6837      	ldr	r7, [r6, #0]
 8015c8e:	b9ff      	cbnz	r7, 8015cd0 <malloc+0x54>
 8015c90:	4f2b      	ldr	r7, [pc, #172]	; (8015d40 <malloc+0xc4>)
 8015c92:	683d      	ldr	r5, [r7, #0]
 8015c94:	f104 061b 	add.w	r6, r4, #27
 8015c98:	f026 060f 	bic.w	r6, r6, #15
 8015c9c:	07a9      	lsls	r1, r5, #30
 8015c9e:	442e      	add	r6, r5
 8015ca0:	d005      	beq.n	8015cae <malloc+0x32>
 8015ca2:	4b28      	ldr	r3, [pc, #160]	; (8015d44 <malloc+0xc8>)
 8015ca4:	4a28      	ldr	r2, [pc, #160]	; (8015d48 <malloc+0xcc>)
 8015ca6:	4829      	ldr	r0, [pc, #164]	; (8015d4c <malloc+0xd0>)
 8015ca8:	2177      	movs	r1, #119	; 0x77
 8015caa:	f7f4 f8e1 	bl	8009e70 <__assert_func>
 8015cae:	07b2      	lsls	r2, r6, #30
 8015cb0:	d005      	beq.n	8015cbe <malloc+0x42>
 8015cb2:	4b27      	ldr	r3, [pc, #156]	; (8015d50 <malloc+0xd4>)
 8015cb4:	4a24      	ldr	r2, [pc, #144]	; (8015d48 <malloc+0xcc>)
 8015cb6:	4825      	ldr	r0, [pc, #148]	; (8015d4c <malloc+0xd0>)
 8015cb8:	2178      	movs	r1, #120	; 0x78
 8015cba:	f7f4 f8d9 	bl	8009e70 <__assert_func>
 8015cbe:	4b25      	ldr	r3, [pc, #148]	; (8015d54 <malloc+0xd8>)
 8015cc0:	429e      	cmp	r6, r3
 8015cc2:	d934      	bls.n	8015d2e <malloc+0xb2>
 8015cc4:	4824      	ldr	r0, [pc, #144]	; (8015d58 <malloc+0xdc>)
 8015cc6:	f7f4 fbdf 	bl	800a488 <printf>
 8015cca:	2600      	movs	r6, #0
 8015ccc:	4630      	mov	r0, r6
 8015cce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cd0:	42bc      	cmp	r4, r7
 8015cd2:	d80a      	bhi.n	8015cea <malloc+0x6e>
 8015cd4:	6873      	ldr	r3, [r6, #4]
 8015cd6:	68b2      	ldr	r2, [r6, #8]
 8015cd8:	3301      	adds	r3, #1
 8015cda:	4293      	cmp	r3, r2
 8015cdc:	6073      	str	r3, [r6, #4]
 8015cde:	d900      	bls.n	8015ce2 <malloc+0x66>
 8015ce0:	60b3      	str	r3, [r6, #8]
 8015ce2:	68f5      	ldr	r5, [r6, #12]
 8015ce4:	b91d      	cbnz	r5, 8015cee <malloc+0x72>
 8015ce6:	463c      	mov	r4, r7
 8015ce8:	e7d2      	b.n	8015c90 <malloc+0x14>
 8015cea:	3610      	adds	r6, #16
 8015cec:	e7ce      	b.n	8015c8c <malloc+0x10>
 8015cee:	682a      	ldr	r2, [r5, #0]
 8015cf0:	4b1a      	ldr	r3, [pc, #104]	; (8015d5c <malloc+0xe0>)
 8015cf2:	429a      	cmp	r2, r3
 8015cf4:	d005      	beq.n	8015d02 <malloc+0x86>
 8015cf6:	4b1a      	ldr	r3, [pc, #104]	; (8015d60 <malloc+0xe4>)
 8015cf8:	4a13      	ldr	r2, [pc, #76]	; (8015d48 <malloc+0xcc>)
 8015cfa:	4814      	ldr	r0, [pc, #80]	; (8015d4c <malloc+0xd0>)
 8015cfc:	216d      	movs	r1, #109	; 0x6d
 8015cfe:	f7f4 f8b7 	bl	8009e70 <__assert_func>
 8015d02:	68ab      	ldr	r3, [r5, #8]
 8015d04:	60f3      	str	r3, [r6, #12]
 8015d06:	463c      	mov	r4, r7
 8015d08:	2300      	movs	r3, #0
 8015d0a:	f105 060c 	add.w	r6, r5, #12
 8015d0e:	60ab      	str	r3, [r5, #8]
 8015d10:	4814      	ldr	r0, [pc, #80]	; (8015d64 <malloc+0xe8>)
 8015d12:	4633      	mov	r3, r6
 8015d14:	4622      	mov	r2, r4
 8015d16:	4629      	mov	r1, r5
 8015d18:	f7f4 fbb6 	bl	800a488 <printf>
 8015d1c:	07b3      	lsls	r3, r6, #30
 8015d1e:	d0d5      	beq.n	8015ccc <malloc+0x50>
 8015d20:	4b11      	ldr	r3, [pc, #68]	; (8015d68 <malloc+0xec>)
 8015d22:	4a09      	ldr	r2, [pc, #36]	; (8015d48 <malloc+0xcc>)
 8015d24:	4809      	ldr	r0, [pc, #36]	; (8015d4c <malloc+0xd0>)
 8015d26:	218c      	movs	r1, #140	; 0x8c
 8015d28:	f7f4 f8a2 	bl	8009e70 <__assert_func>
 8015d2c:	e7ce      	b.n	8015ccc <malloc+0x50>
 8015d2e:	4b0b      	ldr	r3, [pc, #44]	; (8015d5c <malloc+0xe0>)
 8015d30:	603e      	str	r6, [r7, #0]
 8015d32:	e9c5 3400 	strd	r3, r4, [r5]
 8015d36:	e7e7      	b.n	8015d08 <malloc+0x8c>
 8015d38:	0801bd8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, ip, sp, pc}
 8015d3c:	20000024 	andcs	r0, r0, r4, lsr #32
 8015d40:	20000020 	andcs	r0, r0, r0, lsr #32
 8015d44:	0801bdb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, ip, sp, pc}
 8015d48:	0801be9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 8015d4c:	0801bd7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 8015d50:	0801bddb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sl, fp, ip, sp, pc}
 8015d54:	1000c000 	andne	ip, r0, r0
 8015d58:	0801bdff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 8015d5c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8015d60:	0801bd98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip, sp, pc}
 8015d64:	0801be1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, fp, ip, sp, pc}
 8015d68:	0801be46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, ip, sp, pc}

08015d6c <free>:
 8015d6c:	b570      	push	{r4, r5, r6, lr}
 8015d6e:	4604      	mov	r4, r0
 8015d70:	b328      	cbz	r0, 8015dbe <free+0x52>
 8015d72:	f1a0 050c 	sub.w	r5, r0, #12
 8015d76:	4602      	mov	r2, r0
 8015d78:	4629      	mov	r1, r5
 8015d7a:	4811      	ldr	r0, [pc, #68]	; (8015dc0 <free+0x54>)
 8015d7c:	4e11      	ldr	r6, [pc, #68]	; (8015dc4 <free+0x58>)
 8015d7e:	f7f4 fb83 	bl	800a488 <printf>
 8015d82:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8015d86:	42b3      	cmp	r3, r6
 8015d88:	d009      	beq.n	8015d9e <free+0x32>
 8015d8a:	4b0f      	ldr	r3, [pc, #60]	; (8015dc8 <free+0x5c>)
 8015d8c:	4a0f      	ldr	r2, [pc, #60]	; (8015dcc <free+0x60>)
 8015d8e:	4810      	ldr	r0, [pc, #64]	; (8015dd0 <free+0x64>)
 8015d90:	219d      	movs	r1, #157	; 0x9d
 8015d92:	f7f4 f86d 	bl	8009e70 <__assert_func>
 8015d96:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8015d9a:	42b3      	cmp	r3, r6
 8015d9c:	d10f      	bne.n	8015dbe <free+0x52>
 8015d9e:	4b0d      	ldr	r3, [pc, #52]	; (8015dd4 <free+0x68>)
 8015da0:	e000      	b.n	8015da4 <free+0x38>
 8015da2:	3310      	adds	r3, #16
 8015da4:	681a      	ldr	r2, [r3, #0]
 8015da6:	b152      	cbz	r2, 8015dbe <free+0x52>
 8015da8:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8015dac:	4291      	cmp	r1, r2
 8015dae:	d1f8      	bne.n	8015da2 <free+0x36>
 8015db0:	68da      	ldr	r2, [r3, #12]
 8015db2:	f844 2c04 	str.w	r2, [r4, #-4]
 8015db6:	685a      	ldr	r2, [r3, #4]
 8015db8:	60dd      	str	r5, [r3, #12]
 8015dba:	3a01      	subs	r2, #1
 8015dbc:	605a      	str	r2, [r3, #4]
 8015dbe:	bd70      	pop	{r4, r5, r6, pc}
 8015dc0:	0801be72 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 8015dc4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8015dc8:	0801bd98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip, sp, pc}
 8015dcc:	0801be98 	stmdaeq	r1, {r3, r4, r7, r9, sl, fp, ip, sp, pc}
 8015dd0:	0801bd7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 8015dd4:	20000024 	andcs	r0, r0, r4, lsr #32

08015dd8 <memcpy>:
 8015dd8:	b510      	push	{r4, lr}
 8015dda:	1e43      	subs	r3, r0, #1
 8015ddc:	440a      	add	r2, r1
 8015dde:	4291      	cmp	r1, r2
 8015de0:	d100      	bne.n	8015de4 <memcpy+0xc>
 8015de2:	bd10      	pop	{r4, pc}
 8015de4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8015de8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8015dec:	e7f7      	b.n	8015dde <memcpy+0x6>

08015dee <memmove>:
 8015dee:	4288      	cmp	r0, r1
 8015df0:	b510      	push	{r4, lr}
 8015df2:	eb01 0302 	add.w	r3, r1, r2
 8015df6:	d208      	bcs.n	8015e0a <memmove+0x1c>
 8015df8:	1e42      	subs	r2, r0, #1
 8015dfa:	4299      	cmp	r1, r3
 8015dfc:	d100      	bne.n	8015e00 <memmove+0x12>
 8015dfe:	bd10      	pop	{r4, pc}
 8015e00:	f811 4b01 	ldrb.w	r4, [r1], #1
 8015e04:	f802 4f01 	strb.w	r4, [r2, #1]!
 8015e08:	e7f7      	b.n	8015dfa <memmove+0xc>
 8015e0a:	4402      	add	r2, r0
 8015e0c:	4601      	mov	r1, r0
 8015e0e:	428a      	cmp	r2, r1
 8015e10:	d0f5      	beq.n	8015dfe <memmove+0x10>
 8015e12:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8015e16:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8015e1a:	e7f8      	b.n	8015e0e <memmove+0x20>

08015e1c <memset>:
 8015e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e1e:	b1c2      	cbz	r2, 8015e52 <memset+0x36>
 8015e20:	b2c9      	uxtb	r1, r1
 8015e22:	4603      	mov	r3, r0
 8015e24:	075c      	lsls	r4, r3, #29
 8015e26:	d110      	bne.n	8015e4a <memset+0x2e>
 8015e28:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8015e2c:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8015e30:	f022 0407 	bic.w	r4, r2, #7
 8015e34:	463d      	mov	r5, r7
 8015e36:	441c      	add	r4, r3
 8015e38:	461e      	mov	r6, r3
 8015e3a:	42a6      	cmp	r6, r4
 8015e3c:	d10a      	bne.n	8015e54 <memset+0x38>
 8015e3e:	441a      	add	r2, r3
 8015e40:	4294      	cmp	r4, r2
 8015e42:	d006      	beq.n	8015e52 <memset+0x36>
 8015e44:	f804 1b01 	strb.w	r1, [r4], #1
 8015e48:	e7fa      	b.n	8015e40 <memset+0x24>
 8015e4a:	3a01      	subs	r2, #1
 8015e4c:	f803 1b01 	strb.w	r1, [r3], #1
 8015e50:	d1e8      	bne.n	8015e24 <memset+0x8>
 8015e52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015e54:	f846 7b08 	str.w	r7, [r6], #8
 8015e58:	f846 5c04 	str.w	r5, [r6, #-4]
 8015e5c:	e7ed      	b.n	8015e3a <memset+0x1e>

08015e5e <puts>:
 8015e5e:	b508      	push	{r3, lr}
 8015e60:	f7ff fbec 	bl	801563c <console_puts>
 8015e64:	200a      	movs	r0, #10
 8015e66:	f7ff fbe7 	bl	8015638 <console_putc>
 8015e6a:	2001      	movs	r0, #1
 8015e6c:	bd08      	pop	{r3, pc}
	...

08015e70 <strtok>:
 8015e70:	b530      	push	{r4, r5, lr}
 8015e72:	b910      	cbnz	r0, 8015e7a <strtok+0xa>
 8015e74:	4b12      	ldr	r3, [pc, #72]	; (8015ec0 <strtok+0x50>)
 8015e76:	6818      	ldr	r0, [r3, #0]
 8015e78:	b158      	cbz	r0, 8015e92 <strtok+0x22>
 8015e7a:	4603      	mov	r3, r0
 8015e7c:	4618      	mov	r0, r3
 8015e7e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015e82:	460d      	mov	r5, r1
 8015e84:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015e88:	b924      	cbnz	r4, 8015e94 <strtok+0x24>
 8015e8a:	b94a      	cbnz	r2, 8015ea0 <strtok+0x30>
 8015e8c:	4b0c      	ldr	r3, [pc, #48]	; (8015ec0 <strtok+0x50>)
 8015e8e:	4610      	mov	r0, r2
 8015e90:	601a      	str	r2, [r3, #0]
 8015e92:	bd30      	pop	{r4, r5, pc}
 8015e94:	42a2      	cmp	r2, r4
 8015e96:	d1f5      	bne.n	8015e84 <strtok+0x14>
 8015e98:	e7f0      	b.n	8015e7c <strtok+0xc>
 8015e9a:	4613      	mov	r3, r2
 8015e9c:	e00c      	b.n	8015eb8 <strtok+0x48>
 8015e9e:	b914      	cbnz	r4, 8015ea6 <strtok+0x36>
 8015ea0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015ea4:	460d      	mov	r5, r1
 8015ea6:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015eaa:	42a2      	cmp	r2, r4
 8015eac:	d1f7      	bne.n	8015e9e <strtok+0x2e>
 8015eae:	2a00      	cmp	r2, #0
 8015eb0:	d0f3      	beq.n	8015e9a <strtok+0x2a>
 8015eb2:	2200      	movs	r2, #0
 8015eb4:	f803 2c01 	strb.w	r2, [r3, #-1]
 8015eb8:	4a01      	ldr	r2, [pc, #4]	; (8015ec0 <strtok+0x50>)
 8015eba:	6013      	str	r3, [r2, #0]
 8015ebc:	e7e9      	b.n	8015e92 <strtok+0x22>
 8015ebe:	bf00      	nop
 8015ec0:	2000fd84 	andcs	pc, r0, r4, lsl #27

08015ec4 <isleapyear>:
 8015ec4:	2264      	movs	r2, #100	; 0x64
 8015ec6:	fb90 f3f2 	sdiv	r3, r0, r2
 8015eca:	fb02 0313 	mls	r3, r2, r3, r0
 8015ece:	b94b      	cbnz	r3, 8015ee4 <isleapyear+0x20>
 8015ed0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8015ed4:	fb90 f2f3 	sdiv	r2, r0, r3
 8015ed8:	fb03 0012 	mls	r0, r3, r2, r0
 8015edc:	fab0 f080 	clz	r0, r0
 8015ee0:	0940      	lsrs	r0, r0, #5
 8015ee2:	4770      	bx	lr
 8015ee4:	f010 0f03 	tst.w	r0, #3
 8015ee8:	bf0c      	ite	eq
 8015eea:	2001      	moveq	r0, #1
 8015eec:	2000      	movne	r0, #0
 8015eee:	4770      	bx	lr

08015ef0 <getdaysofmonth>:
 8015ef0:	b510      	push	{r4, lr}
 8015ef2:	4604      	mov	r4, r0
 8015ef4:	2c01      	cmp	r4, #1
 8015ef6:	4608      	mov	r0, r1
 8015ef8:	d102      	bne.n	8015f00 <getdaysofmonth+0x10>
 8015efa:	f7ff ffe3 	bl	8015ec4 <isleapyear>
 8015efe:	b918      	cbnz	r0, 8015f08 <getdaysofmonth+0x18>
 8015f00:	4b02      	ldr	r3, [pc, #8]	; (8015f0c <getdaysofmonth+0x1c>)
 8015f02:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8015f06:	bd10      	pop	{r4, pc}
 8015f08:	201d      	movs	r0, #29
 8015f0a:	e7fc      	b.n	8015f06 <getdaysofmonth+0x16>
 8015f0c:	0801bea4 	stmdaeq	r1, {r2, r5, r7, r9, sl, fp, ip, sp, pc}

08015f10 <mktime>:
 8015f10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015f14:	4604      	mov	r4, r0
 8015f16:	2800      	cmp	r0, #0
 8015f18:	d043      	beq.n	8015fa2 <mktime+0x92>
 8015f1a:	6941      	ldr	r1, [r0, #20]
 8015f1c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8015f20:	2b45      	cmp	r3, #69	; 0x45
 8015f22:	d83e      	bhi.n	8015fa2 <mktime+0x92>
 8015f24:	2600      	movs	r6, #0
 8015f26:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8015f2a:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8015f2e:	f240 186d 	movw	r8, #365	; 0x16d
 8015f32:	42af      	cmp	r7, r5
 8015f34:	da24      	bge.n	8015f80 <mktime+0x70>
 8015f36:	6927      	ldr	r7, [r4, #16]
 8015f38:	2f0b      	cmp	r7, #11
 8015f3a:	d832      	bhi.n	8015fa2 <mktime+0x92>
 8015f3c:	2500      	movs	r5, #0
 8015f3e:	42af      	cmp	r7, r5
 8015f40:	d129      	bne.n	8015f96 <mktime+0x86>
 8015f42:	68e5      	ldr	r5, [r4, #12]
 8015f44:	2d00      	cmp	r5, #0
 8015f46:	dd2c      	ble.n	8015fa2 <mktime+0x92>
 8015f48:	4638      	mov	r0, r7
 8015f4a:	f7ff ffd1 	bl	8015ef0 <getdaysofmonth>
 8015f4e:	4285      	cmp	r5, r0
 8015f50:	dc27      	bgt.n	8015fa2 <mktime+0x92>
 8015f52:	3d01      	subs	r5, #1
 8015f54:	2318      	movs	r3, #24
 8015f56:	4435      	add	r5, r6
 8015f58:	435d      	muls	r5, r3
 8015f5a:	68a3      	ldr	r3, [r4, #8]
 8015f5c:	2b17      	cmp	r3, #23
 8015f5e:	d820      	bhi.n	8015fa2 <mktime+0x92>
 8015f60:	442b      	add	r3, r5
 8015f62:	213c      	movs	r1, #60	; 0x3c
 8015f64:	fb01 f203 	mul.w	r2, r1, r3
 8015f68:	6863      	ldr	r3, [r4, #4]
 8015f6a:	2b3b      	cmp	r3, #59	; 0x3b
 8015f6c:	d819      	bhi.n	8015fa2 <mktime+0x92>
 8015f6e:	6820      	ldr	r0, [r4, #0]
 8015f70:	4413      	add	r3, r2
 8015f72:	283b      	cmp	r0, #59	; 0x3b
 8015f74:	fb01 f303 	mul.w	r3, r1, r3
 8015f78:	d813      	bhi.n	8015fa2 <mktime+0x92>
 8015f7a:	4418      	add	r0, r3
 8015f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f80:	4628      	mov	r0, r5
 8015f82:	f7ff ff9f 	bl	8015ec4 <isleapyear>
 8015f86:	2800      	cmp	r0, #0
 8015f88:	bf14      	ite	ne
 8015f8a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8015f8e:	4643      	moveq	r3, r8
 8015f90:	441e      	add	r6, r3
 8015f92:	3501      	adds	r5, #1
 8015f94:	e7cd      	b.n	8015f32 <mktime+0x22>
 8015f96:	4628      	mov	r0, r5
 8015f98:	f7ff ffaa 	bl	8015ef0 <getdaysofmonth>
 8015f9c:	3501      	adds	r5, #1
 8015f9e:	4406      	add	r6, r0
 8015fa0:	e7cd      	b.n	8015f3e <mktime+0x2e>
 8015fa2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015fa6:	e7e9      	b.n	8015f7c <mktime+0x6c>

08015fa8 <gettimeofday>:
 8015fa8:	b538      	push	{r3, r4, r5, lr}
 8015faa:	4605      	mov	r5, r0
 8015fac:	b928      	cbnz	r0, 8015fba <gettimeofday+0x12>
 8015fae:	4b13      	ldr	r3, [pc, #76]	; (8015ffc <gettimeofday+0x54>)
 8015fb0:	4a13      	ldr	r2, [pc, #76]	; (8016000 <gettimeofday+0x58>)
 8015fb2:	4814      	ldr	r0, [pc, #80]	; (8016004 <gettimeofday+0x5c>)
 8015fb4:	212c      	movs	r1, #44	; 0x2c
 8015fb6:	f7f3 ff5b 	bl	8009e70 <__assert_func>
 8015fba:	4a13      	ldr	r2, [pc, #76]	; (8016008 <gettimeofday+0x60>)
 8015fbc:	4b13      	ldr	r3, [pc, #76]	; (801600c <gettimeofday+0x64>)
 8015fbe:	6814      	ldr	r4, [r2, #0]
 8015fc0:	681b      	ldr	r3, [r3, #0]
 8015fc2:	6013      	str	r3, [r2, #0]
 8015fc4:	429c      	cmp	r4, r3
 8015fc6:	bf2c      	ite	cs
 8015fc8:	1ae4      	subcs	r4, r4, r3
 8015fca:	1b1c      	subcc	r4, r3, r4
 8015fcc:	4b10      	ldr	r3, [pc, #64]	; (8016010 <gettimeofday+0x68>)
 8015fce:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015fd2:	4354      	muls	r4, r2
 8015fd4:	e9d3 2100 	ldrd	r2, r1, [r3]
 8015fd8:	18a4      	adds	r4, r4, r2
 8015fda:	f141 0100 	adc.w	r1, r1, #0
 8015fde:	e9c3 4100 	strd	r4, r1, [r3]
 8015fe2:	4a0c      	ldr	r2, [pc, #48]	; (8016014 <gettimeofday+0x6c>)
 8015fe4:	2300      	movs	r3, #0
 8015fe6:	4620      	mov	r0, r4
 8015fe8:	f7f2 fe56 	bl	8008c98 <__aeabi_uldivmod>
 8015fec:	4b09      	ldr	r3, [pc, #36]	; (8016014 <gettimeofday+0x6c>)
 8015fee:	6028      	str	r0, [r5, #0]
 8015ff0:	fb03 4410 	mls	r4, r3, r0, r4
 8015ff4:	606c      	str	r4, [r5, #4]
 8015ff6:	2000      	movs	r0, #0
 8015ff8:	bd38      	pop	{r3, r4, r5, pc}
 8015ffa:	bf00      	nop
 8015ffc:	0801bed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8016000:	0801bef9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 8016004:	0801bedc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8016008:	2000fd90 	mulcs	r0, r0, sp
 801600c:	2000fd94 	mulcs	r0, r4, sp
 8016010:	2000fd88 	andcs	pc, r0, r8, lsl #27
 8016014:	000f4240 	andeq	r4, pc, r0, asr #4

08016018 <settimeofday>:
 8016018:	b510      	push	{r4, lr}
 801601a:	4604      	mov	r4, r0
 801601c:	b928      	cbnz	r0, 801602a <settimeofday+0x12>
 801601e:	4b0a      	ldr	r3, [pc, #40]	; (8016048 <settimeofday+0x30>)
 8016020:	4a0a      	ldr	r2, [pc, #40]	; (801604c <settimeofday+0x34>)
 8016022:	480b      	ldr	r0, [pc, #44]	; (8016050 <settimeofday+0x38>)
 8016024:	2142      	movs	r1, #66	; 0x42
 8016026:	f7f3 ff23 	bl	8009e70 <__assert_func>
 801602a:	4b0a      	ldr	r3, [pc, #40]	; (8016054 <settimeofday+0x3c>)
 801602c:	480a      	ldr	r0, [pc, #40]	; (8016058 <settimeofday+0x40>)
 801602e:	681a      	ldr	r2, [r3, #0]
 8016030:	4b0a      	ldr	r3, [pc, #40]	; (801605c <settimeofday+0x44>)
 8016032:	490b      	ldr	r1, [pc, #44]	; (8016060 <settimeofday+0x48>)
 8016034:	601a      	str	r2, [r3, #0]
 8016036:	6863      	ldr	r3, [r4, #4]
 8016038:	6824      	ldr	r4, [r4, #0]
 801603a:	17da      	asrs	r2, r3, #31
 801603c:	fbc4 3200 	smlal	r3, r2, r4, r0
 8016040:	e9c1 3200 	strd	r3, r2, [r1]
 8016044:	2000      	movs	r0, #0
 8016046:	bd10      	pop	{r4, pc}
 8016048:	0801bed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 801604c:	0801beec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 8016050:	0801bedc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8016054:	2000fd94 	mulcs	r0, r4, sp
 8016058:	000f4240 	andeq	r4, pc, r0, asr #4
 801605c:	2000fd90 	mulcs	r0, r0, sp
 8016060:	2000fd88 	andcs	pc, r0, r8, lsl #27

08016064 <time>:
 8016064:	b513      	push	{r0, r1, r4, lr}
 8016066:	4604      	mov	r4, r0
 8016068:	2100      	movs	r1, #0
 801606a:	4668      	mov	r0, sp
 801606c:	f7ff ff9c 	bl	8015fa8 <gettimeofday>
 8016070:	9800      	ldr	r0, [sp, #0]
 8016072:	b104      	cbz	r4, 8016076 <time+0x12>
 8016074:	6020      	str	r0, [r4, #0]
 8016076:	b002      	add	sp, #8
 8016078:	bd10      	pop	{r4, pc}
	...

0801607c <uart0_init>:
 801607c:	b507      	push	{r0, r1, r2, lr}
 801607e:	2301      	movs	r3, #1
 8016080:	9300      	str	r3, [sp, #0]
 8016082:	4805      	ldr	r0, [pc, #20]	; (8016098 <uart0_init+0x1c>)
 8016084:	2300      	movs	r3, #0
 8016086:	2208      	movs	r2, #8
 8016088:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 801608c:	f001 fdbe 	bl	8017c0c <gd32_uart_begin>
 8016090:	b003      	add	sp, #12
 8016092:	f85d fb04 	ldr.w	pc, [sp], #4
 8016096:	bf00      	nop
 8016098:	40011000 	andmi	r1, r1, r0

0801609c <uart0_putc>:
 801609c:	280a      	cmp	r0, #10
 801609e:	b570      	push	{r4, r5, r6, lr}
 80160a0:	4d0a      	ldr	r5, [pc, #40]	; (80160cc <uart0_putc+0x30>)
 80160a2:	4604      	mov	r4, r0
 80160a4:	d107      	bne.n	80160b6 <uart0_putc+0x1a>
 80160a6:	2107      	movs	r1, #7
 80160a8:	4628      	mov	r0, r5
 80160aa:	f001 fa3f 	bl	801752c <usart_flag_get>
 80160ae:	2800      	cmp	r0, #0
 80160b0:	d0f9      	beq.n	80160a6 <uart0_putc+0xa>
 80160b2:	230d      	movs	r3, #13
 80160b4:	606b      	str	r3, [r5, #4]
 80160b6:	4e05      	ldr	r6, [pc, #20]	; (80160cc <uart0_putc+0x30>)
 80160b8:	2107      	movs	r1, #7
 80160ba:	4630      	mov	r0, r6
 80160bc:	f001 fa36 	bl	801752c <usart_flag_get>
 80160c0:	2800      	cmp	r0, #0
 80160c2:	d0f9      	beq.n	80160b8 <uart0_putc+0x1c>
 80160c4:	b2e4      	uxtb	r4, r4
 80160c6:	606c      	str	r4, [r5, #4]
 80160c8:	bd70      	pop	{r4, r5, r6, pc}
 80160ca:	bf00      	nop
 80160cc:	40011000 	andmi	r1, r1, r0

080160d0 <uart0_puts>:
 80160d0:	b510      	push	{r4, lr}
 80160d2:	1e44      	subs	r4, r0, #1
 80160d4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80160d8:	b903      	cbnz	r3, 80160dc <uart0_puts+0xc>
 80160da:	bd10      	pop	{r4, pc}
 80160dc:	2b0a      	cmp	r3, #10
 80160de:	d102      	bne.n	80160e6 <uart0_puts+0x16>
 80160e0:	200d      	movs	r0, #13
 80160e2:	f7ff ffdb 	bl	801609c <uart0_putc>
 80160e6:	7820      	ldrb	r0, [r4, #0]
 80160e8:	f7ff ffd8 	bl	801609c <uart0_putc>
 80160ec:	e7f2      	b.n	80160d4 <uart0_puts+0x4>
	...

080160f0 <systick_config>:
 80160f0:	4b0c      	ldr	r3, [pc, #48]	; (8016124 <systick_config+0x34>)
 80160f2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80160f6:	681b      	ldr	r3, [r3, #0]
 80160f8:	fbb3 f3f2 	udiv	r3, r3, r2
 80160fc:	3b01      	subs	r3, #1
 80160fe:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8016102:	d20d      	bcs.n	8016120 <systick_config+0x30>
 8016104:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8016108:	21f0      	movs	r1, #240	; 0xf0
 801610a:	6153      	str	r3, [r2, #20]
 801610c:	4b06      	ldr	r3, [pc, #24]	; (8016128 <systick_config+0x38>)
 801610e:	2007      	movs	r0, #7
 8016110:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8016114:	2100      	movs	r1, #0
 8016116:	6191      	str	r1, [r2, #24]
 8016118:	6110      	str	r0, [r2, #16]
 801611a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801611e:	4770      	bx	lr
 8016120:	e7fe      	b.n	8016120 <systick_config+0x30>
 8016122:	bf00      	nop
 8016124:	200000f4 	strdcs	r0, [r0], -r4
 8016128:	e000ed00 	and	lr, r0, r0, lsl #26

0801612c <SysTick_Handler>:
 801612c:	4a02      	ldr	r2, [pc, #8]	; (8016138 <SysTick_Handler+0xc>)
 801612e:	6813      	ldr	r3, [r2, #0]
 8016130:	3301      	adds	r3, #1
 8016132:	6013      	str	r3, [r2, #0]
 8016134:	4770      	bx	lr
 8016136:	bf00      	nop
 8016138:	2000fd94 	mulcs	r0, r4, sp

0801613c <SystemInit>:
 801613c:	4a56      	ldr	r2, [pc, #344]	; (8016298 <SystemInit+0x15c>)
 801613e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8016142:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8016146:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 801614a:	4b54      	ldr	r3, [pc, #336]	; (801629c <SystemInit+0x160>)
 801614c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8016150:	f042 0201 	orr.w	r2, r2, #1
 8016154:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8016158:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 801615c:	b082      	sub	sp, #8
 801615e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8016162:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8016166:	2200      	movs	r2, #0
 8016168:	9201      	str	r2, [sp, #4]
 801616a:	f24c 314f 	movw	r1, #49999	; 0xc34f
 801616e:	9a01      	ldr	r2, [sp, #4]
 8016170:	428a      	cmp	r2, r1
 8016172:	d93e      	bls.n	80161f2 <SystemInit+0xb6>
 8016174:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8016178:	f042 0290 	orr.w	r2, r2, #144	; 0x90
 801617c:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8016180:	2300      	movs	r3, #0
 8016182:	9301      	str	r3, [sp, #4]
 8016184:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8016188:	9b01      	ldr	r3, [sp, #4]
 801618a:	4293      	cmp	r3, r2
 801618c:	d935      	bls.n	80161fa <SystemInit+0xbe>
 801618e:	4b43      	ldr	r3, [pc, #268]	; (801629c <SystemInit+0x160>)
 8016190:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8016194:	f022 0203 	bic.w	r2, r2, #3
 8016198:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 801619c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80161a0:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80161a4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80161a8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80161ac:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80161b0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80161b4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80161b8:	2200      	movs	r2, #0
 80161ba:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80161be:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 80161c2:	4937      	ldr	r1, [pc, #220]	; (80162a0 <SystemInit+0x164>)
 80161c4:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 80161c8:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 80161cc:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80161d0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80161d4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80161d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80161dc:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 80161e0:	0389      	lsls	r1, r1, #14
 80161e2:	d401      	bmi.n	80161e8 <SystemInit+0xac>
 80161e4:	3a01      	subs	r2, #1
 80161e6:	d1f9      	bne.n	80161dc <SystemInit+0xa0>
 80161e8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80161ec:	0392      	lsls	r2, r2, #14
 80161ee:	d408      	bmi.n	8016202 <SystemInit+0xc6>
 80161f0:	e7fe      	b.n	80161f0 <SystemInit+0xb4>
 80161f2:	9a01      	ldr	r2, [sp, #4]
 80161f4:	3201      	adds	r2, #1
 80161f6:	9201      	str	r2, [sp, #4]
 80161f8:	e7b9      	b.n	801616e <SystemInit+0x32>
 80161fa:	9b01      	ldr	r3, [sp, #4]
 80161fc:	3301      	adds	r3, #1
 80161fe:	9301      	str	r3, [sp, #4]
 8016200:	e7c2      	b.n	8016188 <SystemInit+0x4c>
 8016202:	f8d3 2840 	ldr.w	r2, [r3, #2112]	; 0x840
 8016206:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 801620a:	f8c3 2840 	str.w	r2, [r3, #2112]	; 0x840
 801620e:	4a25      	ldr	r2, [pc, #148]	; (80162a4 <SystemInit+0x168>)
 8016210:	6811      	ldr	r1, [r2, #0]
 8016212:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8016216:	6011      	str	r1, [r2, #0]
 8016218:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 801621c:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8016220:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8016224:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8016228:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 801622c:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8016230:	f441 51a0 	orr.w	r1, r1, #5120	; 0x1400
 8016234:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8016238:	491b      	ldr	r1, [pc, #108]	; (80162a8 <SystemInit+0x16c>)
 801623a:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 801623e:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8016242:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8016246:	f8c3 1800 	str.w	r1, [r3, #2048]	; 0x800
 801624a:	4914      	ldr	r1, [pc, #80]	; (801629c <SystemInit+0x160>)
 801624c:	f8d1 3800 	ldr.w	r3, [r1, #2048]	; 0x800
 8016250:	019b      	lsls	r3, r3, #6
 8016252:	d5fb      	bpl.n	801624c <SystemInit+0x110>
 8016254:	6813      	ldr	r3, [r2, #0]
 8016256:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801625a:	6013      	str	r3, [r2, #0]
 801625c:	4b11      	ldr	r3, [pc, #68]	; (80162a4 <SystemInit+0x168>)
 801625e:	685a      	ldr	r2, [r3, #4]
 8016260:	03d0      	lsls	r0, r2, #15
 8016262:	d5fc      	bpl.n	801625e <SystemInit+0x122>
 8016264:	681a      	ldr	r2, [r3, #0]
 8016266:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 801626a:	601a      	str	r2, [r3, #0]
 801626c:	685a      	ldr	r2, [r3, #4]
 801626e:	0391      	lsls	r1, r2, #14
 8016270:	d5fc      	bpl.n	801626c <SystemInit+0x130>
 8016272:	4b0a      	ldr	r3, [pc, #40]	; (801629c <SystemInit+0x160>)
 8016274:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8016278:	f022 0203 	bic.w	r2, r2, #3
 801627c:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8016280:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8016284:	f042 0202 	orr.w	r2, r2, #2
 8016288:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 801628c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8016290:	0712      	lsls	r2, r2, #28
 8016292:	d5fb      	bpl.n	801628c <SystemInit+0x150>
 8016294:	b002      	add	sp, #8
 8016296:	4770      	bx	lr
 8016298:	e000ed00 	and	lr, r0, r0, lsl #26
 801629c:	40023000 	andmi	r3, r2, r0
 80162a0:	24003010 	strcs	r3, [r0], #-16
 80162a4:	40007000 	andmi	r7, r0, r0
 80162a8:	09406419 	stmdbeq	r0, {r0, r3, r4, sl, sp, lr}^

080162ac <dma_deinit>:
 80162ac:	2318      	movs	r3, #24
 80162ae:	fb03 0301 	mla	r3, r3, r1, r0
 80162b2:	b510      	push	{r4, lr}
 80162b4:	691a      	ldr	r2, [r3, #16]
 80162b6:	f022 0201 	bic.w	r2, r2, #1
 80162ba:	611a      	str	r2, [r3, #16]
 80162bc:	2903      	cmp	r1, #3
 80162be:	f04f 0200 	mov.w	r2, #0
 80162c2:	611a      	str	r2, [r3, #16]
 80162c4:	615a      	str	r2, [r3, #20]
 80162c6:	619a      	str	r2, [r3, #24]
 80162c8:	61da      	str	r2, [r3, #28]
 80162ca:	621a      	str	r2, [r3, #32]
 80162cc:	625a      	str	r2, [r3, #36]	; 0x24
 80162ce:	d80a      	bhi.n	80162e6 <dma_deinit+0x3a>
 80162d0:	2406      	movs	r4, #6
 80162d2:	084b      	lsrs	r3, r1, #1
 80162d4:	4361      	muls	r1, r4
 80162d6:	6882      	ldr	r2, [r0, #8]
 80162d8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80162dc:	233d      	movs	r3, #61	; 0x3d
 80162de:	408b      	lsls	r3, r1
 80162e0:	4313      	orrs	r3, r2
 80162e2:	6083      	str	r3, [r0, #8]
 80162e4:	bd10      	pop	{r4, pc}
 80162e6:	3904      	subs	r1, #4
 80162e8:	b2ca      	uxtb	r2, r1
 80162ea:	2306      	movs	r3, #6
 80162ec:	435a      	muls	r2, r3
 80162ee:	f3c1 0140 	ubfx	r1, r1, #1, #1
 80162f2:	68c4      	ldr	r4, [r0, #12]
 80162f4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80162f8:	233d      	movs	r3, #61	; 0x3d
 80162fa:	4093      	lsls	r3, r2
 80162fc:	4323      	orrs	r3, r4
 80162fe:	60c3      	str	r3, [r0, #12]
 8016300:	e7f0      	b.n	80162e4 <dma_deinit+0x38>

08016302 <dma_single_data_para_struct_init>:
 8016302:	2300      	movs	r3, #0
 8016304:	2201      	movs	r2, #1
 8016306:	e9c0 3200 	strd	r3, r2, [r0]
 801630a:	e9c0 3202 	strd	r3, r2, [r0, #8]
 801630e:	e9c0 3204 	strd	r3, r2, [r0, #16]
 8016312:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016316:	6203      	str	r3, [r0, #32]
 8016318:	4770      	bx	lr

0801631a <dma_single_data_mode_init>:
 801631a:	2318      	movs	r3, #24
 801631c:	fb03 0101 	mla	r1, r3, r1, r0
 8016320:	b530      	push	{r4, r5, lr}
 8016322:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8016324:	f023 0304 	bic.w	r3, r3, #4
 8016328:	624b      	str	r3, [r1, #36]	; 0x24
 801632a:	6813      	ldr	r3, [r2, #0]
 801632c:	618b      	str	r3, [r1, #24]
 801632e:	6893      	ldr	r3, [r2, #8]
 8016330:	61cb      	str	r3, [r1, #28]
 8016332:	69d3      	ldr	r3, [r2, #28]
 8016334:	614b      	str	r3, [r1, #20]
 8016336:	6914      	ldr	r4, [r2, #16]
 8016338:	6a13      	ldr	r3, [r2, #32]
 801633a:	6908      	ldr	r0, [r1, #16]
 801633c:	6995      	ldr	r5, [r2, #24]
 801633e:	4323      	orrs	r3, r4
 8016340:	f420 305e 	bic.w	r0, r0, #227328	; 0x37800
 8016344:	432b      	orrs	r3, r5
 8016346:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 801634a:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 801634e:	4303      	orrs	r3, r0
 8016350:	610b      	str	r3, [r1, #16]
 8016352:	6853      	ldr	r3, [r2, #4]
 8016354:	b983      	cbnz	r3, 8016378 <dma_single_data_mode_init+0x5e>
 8016356:	690b      	ldr	r3, [r1, #16]
 8016358:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801635c:	610b      	str	r3, [r1, #16]
 801635e:	68d3      	ldr	r3, [r2, #12]
 8016360:	b993      	cbnz	r3, 8016388 <dma_single_data_mode_init+0x6e>
 8016362:	690b      	ldr	r3, [r1, #16]
 8016364:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8016368:	610b      	str	r3, [r1, #16]
 801636a:	6953      	ldr	r3, [r2, #20]
 801636c:	b983      	cbnz	r3, 8016390 <dma_single_data_mode_init+0x76>
 801636e:	690b      	ldr	r3, [r1, #16]
 8016370:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016374:	610b      	str	r3, [r1, #16]
 8016376:	bd30      	pop	{r4, r5, pc}
 8016378:	2b01      	cmp	r3, #1
 801637a:	690b      	ldr	r3, [r1, #16]
 801637c:	bf0c      	ite	eq
 801637e:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 8016382:	f443 4300 	orrne.w	r3, r3, #32768	; 0x8000
 8016386:	e7e9      	b.n	801635c <dma_single_data_mode_init+0x42>
 8016388:	690b      	ldr	r3, [r1, #16]
 801638a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801638e:	e7eb      	b.n	8016368 <dma_single_data_mode_init+0x4e>
 8016390:	690b      	ldr	r3, [r1, #16]
 8016392:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016396:	e7ed      	b.n	8016374 <dma_single_data_mode_init+0x5a>

08016398 <dma_circulation_disable>:
 8016398:	2318      	movs	r3, #24
 801639a:	4359      	muls	r1, r3
 801639c:	3010      	adds	r0, #16
 801639e:	580b      	ldr	r3, [r1, r0]
 80163a0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80163a4:	500b      	str	r3, [r1, r0]
 80163a6:	4770      	bx	lr

080163a8 <dma_channel_subperipheral_select>:
 80163a8:	2318      	movs	r3, #24
 80163aa:	4359      	muls	r1, r3
 80163ac:	3010      	adds	r0, #16
 80163ae:	580b      	ldr	r3, [r1, r0]
 80163b0:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 80163b4:	ea43 6242 	orr.w	r2, r3, r2, lsl #25
 80163b8:	500a      	str	r2, [r1, r0]
 80163ba:	4770      	bx	lr

080163bc <dma_flag_clear>:
 80163bc:	2903      	cmp	r1, #3
 80163be:	b530      	push	{r4, r5, lr}
 80163c0:	d809      	bhi.n	80163d6 <dma_flag_clear+0x1a>
 80163c2:	2506      	movs	r5, #6
 80163c4:	084c      	lsrs	r4, r1, #1
 80163c6:	4369      	muls	r1, r5
 80163c8:	6883      	ldr	r3, [r0, #8]
 80163ca:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80163ce:	408a      	lsls	r2, r1
 80163d0:	4313      	orrs	r3, r2
 80163d2:	6083      	str	r3, [r0, #8]
 80163d4:	bd30      	pop	{r4, r5, pc}
 80163d6:	3904      	subs	r1, #4
 80163d8:	b2cb      	uxtb	r3, r1
 80163da:	2506      	movs	r5, #6
 80163dc:	f3c1 0140 	ubfx	r1, r1, #1, #1
 80163e0:	436b      	muls	r3, r5
 80163e2:	68c4      	ldr	r4, [r0, #12]
 80163e4:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80163e8:	409a      	lsls	r2, r3
 80163ea:	4322      	orrs	r2, r4
 80163ec:	60c2      	str	r2, [r0, #12]
 80163ee:	e7f1      	b.n	80163d4 <dma_flag_clear+0x18>

080163f0 <dma_interrupt_flag_clear>:
 80163f0:	f7ff bfe4 	b.w	80163bc <dma_flag_clear>

080163f4 <enet_delay>:
 80163f4:	b082      	sub	sp, #8
 80163f6:	2300      	movs	r3, #0
 80163f8:	9301      	str	r3, [sp, #4]
 80163fa:	9001      	str	r0, [sp, #4]
 80163fc:	9b01      	ldr	r3, [sp, #4]
 80163fe:	b90b      	cbnz	r3, 8016404 <enet_delay+0x10>
 8016400:	b002      	add	sp, #8
 8016402:	4770      	bx	lr
 8016404:	9b01      	ldr	r3, [sp, #4]
 8016406:	3b01      	subs	r3, #1
 8016408:	9301      	str	r3, [sp, #4]
 801640a:	e7f7      	b.n	80163fc <enet_delay+0x8>

0801640c <enet_software_reset>:
 801640c:	4b07      	ldr	r3, [pc, #28]	; (801642c <enet_software_reset+0x20>)
 801640e:	681a      	ldr	r2, [r3, #0]
 8016410:	f042 0201 	orr.w	r2, r2, #1
 8016414:	601a      	str	r2, [r3, #0]
 8016416:	4a06      	ldr	r2, [pc, #24]	; (8016430 <enet_software_reset+0x24>)
 8016418:	6819      	ldr	r1, [r3, #0]
 801641a:	07c9      	lsls	r1, r1, #31
 801641c:	d501      	bpl.n	8016422 <enet_software_reset+0x16>
 801641e:	3a01      	subs	r2, #1
 8016420:	d1fa      	bne.n	8016418 <enet_software_reset+0xc>
 8016422:	6818      	ldr	r0, [r3, #0]
 8016424:	43c0      	mvns	r0, r0
 8016426:	f000 0001 	and.w	r0, r0, #1
 801642a:	4770      	bx	lr
 801642c:	40029000 	andmi	r9, r2, r0
 8016430:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08016434 <enet_descriptors_chain_init>:
 8016434:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8016438:	b5f0      	push	{r4, r5, r6, r7, lr}
 801643a:	4a19      	ldr	r2, [pc, #100]	; (80164a0 <enet_descriptors_chain_init+0x6c>)
 801643c:	d125      	bne.n	801648a <enet_descriptors_chain_init+0x56>
 801643e:	4b19      	ldr	r3, [pc, #100]	; (80164a4 <enet_descriptors_chain_init+0x70>)
 8016440:	6113      	str	r3, [r2, #16]
 8016442:	4a19      	ldr	r2, [pc, #100]	; (80164a8 <enet_descriptors_chain_init+0x74>)
 8016444:	4c19      	ldr	r4, [pc, #100]	; (80164ac <enet_descriptors_chain_init+0x78>)
 8016446:	6013      	str	r3, [r2, #0]
 8016448:	2500      	movs	r5, #0
 801644a:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801644e:	2008      	movs	r0, #8
 8016450:	4917      	ldr	r1, [pc, #92]	; (80164b0 <enet_descriptors_chain_init+0x7c>)
 8016452:	2200      	movs	r2, #0
 8016454:	600a      	str	r2, [r1, #0]
 8016456:	4917      	ldr	r1, [pc, #92]	; (80164b4 <enet_descriptors_chain_init+0x80>)
 8016458:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801645c:	600a      	str	r2, [r1, #0]
 801645e:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8016462:	f103 0110 	add.w	r1, r3, #16
 8016466:	fb0e 4702 	mla	r7, lr, r2, r4
 801646a:	f841 7c08 	str.w	r7, [r1, #-8]
 801646e:	4594      	cmp	ip, r2
 8016470:	bf94      	ite	ls
 8016472:	461f      	movls	r7, r3
 8016474:	460f      	movhi	r7, r1
 8016476:	3201      	adds	r2, #1
 8016478:	4290      	cmp	r0, r2
 801647a:	e941 6504 	strd	r6, r5, [r1, #-16]
 801647e:	f841 7c04 	str.w	r7, [r1, #-4]
 8016482:	f101 0110 	add.w	r1, r1, #16
 8016486:	d1ee      	bne.n	8016466 <enet_descriptors_chain_init+0x32>
 8016488:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801648a:	4b0b      	ldr	r3, [pc, #44]	; (80164b8 <enet_descriptors_chain_init+0x84>)
 801648c:	60d3      	str	r3, [r2, #12]
 801648e:	4a0b      	ldr	r2, [pc, #44]	; (80164bc <enet_descriptors_chain_init+0x88>)
 8016490:	4c0b      	ldr	r4, [pc, #44]	; (80164c0 <enet_descriptors_chain_init+0x8c>)
 8016492:	6013      	str	r3, [r2, #0]
 8016494:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8016498:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 801649c:	2046      	movs	r0, #70	; 0x46
 801649e:	e7d7      	b.n	8016450 <enet_descriptors_chain_init+0x1c>
 80164a0:	40029000 	andmi	r9, r2, r0
 80164a4:	2002d29c 	mulcs	r2, ip, r2
 80164a8:	2000fda4 	andcs	pc, r0, r4, lsr #27
 80164ac:	2002a2fc 	strdcs	sl, [r2], -ip
 80164b0:	2000fd98 	mulcs	r0, r8, sp
 80164b4:	2000fd9c 	mulcs	r0, ip, sp
 80164b8:	20029e9c 	mulcs	r2, ip, lr
 80164bc:	2000fda0 	andcs	pc, r0, r0, lsr #27
 80164c0:	2000fde4 	andcs	pc, r0, r4, ror #27

080164c4 <enet_frame_receive>:
 80164c4:	4b22      	ldr	r3, [pc, #136]	; (8016550 <enet_frame_receive+0x8c>)
 80164c6:	681a      	ldr	r2, [r3, #0]
 80164c8:	6812      	ldr	r2, [r2, #0]
 80164ca:	2a00      	cmp	r2, #0
 80164cc:	b570      	push	{r4, r5, r6, lr}
 80164ce:	db3c      	blt.n	801654a <enet_frame_receive+0x86>
 80164d0:	b970      	cbnz	r0, 80164f0 <enet_frame_receive+0x2c>
 80164d2:	681a      	ldr	r2, [r3, #0]
 80164d4:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80164d8:	6011      	str	r1, [r2, #0]
 80164da:	491e      	ldr	r1, [pc, #120]	; (8016554 <enet_frame_receive+0x90>)
 80164dc:	6948      	ldr	r0, [r1, #20]
 80164de:	0600      	lsls	r0, r0, #24
 80164e0:	d422      	bmi.n	8016528 <enet_frame_receive+0x64>
 80164e2:	6851      	ldr	r1, [r2, #4]
 80164e4:	0448      	lsls	r0, r1, #17
 80164e6:	d524      	bpl.n	8016532 <enet_frame_receive+0x6e>
 80164e8:	68d2      	ldr	r2, [r2, #12]
 80164ea:	601a      	str	r2, [r3, #0]
 80164ec:	2001      	movs	r0, #1
 80164ee:	bd70      	pop	{r4, r5, r6, pc}
 80164f0:	f402 4403 	and.w	r4, r2, #33536	; 0x8300
 80164f4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 80164f8:	d127      	bne.n	801654a <enet_frame_receive+0x86>
 80164fa:	4e17      	ldr	r6, [pc, #92]	; (8016558 <enet_frame_receive+0x94>)
 80164fc:	6836      	ldr	r6, [r6, #0]
 80164fe:	f3c2 450d 	ubfx	r5, r2, #16, #14
 8016502:	01b6      	lsls	r6, r6, #6
 8016504:	f1a5 0404 	sub.w	r4, r5, #4
 8016508:	d503      	bpl.n	8016512 <enet_frame_receive+0x4e>
 801650a:	f012 0f20 	tst.w	r2, #32
 801650e:	bf18      	it	ne
 8016510:	462c      	movne	r4, r5
 8016512:	428c      	cmp	r4, r1
 8016514:	d819      	bhi.n	801654a <enet_frame_receive+0x86>
 8016516:	2200      	movs	r2, #0
 8016518:	42a2      	cmp	r2, r4
 801651a:	6819      	ldr	r1, [r3, #0]
 801651c:	d0d9      	beq.n	80164d2 <enet_frame_receive+0xe>
 801651e:	6889      	ldr	r1, [r1, #8]
 8016520:	5c51      	ldrb	r1, [r2, r1]
 8016522:	5481      	strb	r1, [r0, r2]
 8016524:	3201      	adds	r2, #1
 8016526:	e7f7      	b.n	8016518 <enet_frame_receive+0x54>
 8016528:	2080      	movs	r0, #128	; 0x80
 801652a:	6148      	str	r0, [r1, #20]
 801652c:	2000      	movs	r0, #0
 801652e:	6088      	str	r0, [r1, #8]
 8016530:	e7d7      	b.n	80164e2 <enet_frame_receive+0x1e>
 8016532:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8016536:	4907      	ldr	r1, [pc, #28]	; (8016554 <enet_frame_receive+0x90>)
 8016538:	bf09      	itett	eq
 801653a:	6809      	ldreq	r1, [r1, #0]
 801653c:	68ca      	ldrne	r2, [r1, #12]
 801653e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8016542:	3210      	addeq	r2, #16
 8016544:	bf08      	it	eq
 8016546:	1852      	addeq	r2, r2, r1
 8016548:	e7cf      	b.n	80164ea <enet_frame_receive+0x26>
 801654a:	2000      	movs	r0, #0
 801654c:	e7cf      	b.n	80164ee <enet_frame_receive+0x2a>
 801654e:	bf00      	nop
 8016550:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8016554:	40029000 	andmi	r9, r2, r0
 8016558:	40028000 	andmi	r8, r2, r0

0801655c <enet_frame_transmit>:
 801655c:	4a1e      	ldr	r2, [pc, #120]	; (80165d8 <enet_frame_transmit+0x7c>)
 801655e:	6813      	ldr	r3, [r2, #0]
 8016560:	681b      	ldr	r3, [r3, #0]
 8016562:	2b00      	cmp	r3, #0
 8016564:	b530      	push	{r4, r5, lr}
 8016566:	db34      	blt.n	80165d2 <enet_frame_transmit+0x76>
 8016568:	f240 53f4 	movw	r3, #1524	; 0x5f4
 801656c:	4299      	cmp	r1, r3
 801656e:	d830      	bhi.n	80165d2 <enet_frame_transmit+0x76>
 8016570:	b9e8      	cbnz	r0, 80165ae <enet_frame_transmit+0x52>
 8016572:	6813      	ldr	r3, [r2, #0]
 8016574:	4819      	ldr	r0, [pc, #100]	; (80165dc <enet_frame_transmit+0x80>)
 8016576:	6059      	str	r1, [r3, #4]
 8016578:	6819      	ldr	r1, [r3, #0]
 801657a:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801657e:	6019      	str	r1, [r3, #0]
 8016580:	6941      	ldr	r1, [r0, #20]
 8016582:	6944      	ldr	r4, [r0, #20]
 8016584:	f001 0104 	and.w	r1, r1, #4
 8016588:	f004 0420 	and.w	r4, r4, #32
 801658c:	4321      	orrs	r1, r4
 801658e:	d110      	bne.n	80165b2 <enet_frame_transmit+0x56>
 8016590:	6819      	ldr	r1, [r3, #0]
 8016592:	02c8      	lsls	r0, r1, #11
 8016594:	d511      	bpl.n	80165ba <enet_frame_transmit+0x5e>
 8016596:	68db      	ldr	r3, [r3, #12]
 8016598:	6013      	str	r3, [r2, #0]
 801659a:	2001      	movs	r0, #1
 801659c:	bd30      	pop	{r4, r5, pc}
 801659e:	68a4      	ldr	r4, [r4, #8]
 80165a0:	5cc5      	ldrb	r5, [r0, r3]
 80165a2:	551d      	strb	r5, [r3, r4]
 80165a4:	3301      	adds	r3, #1
 80165a6:	428b      	cmp	r3, r1
 80165a8:	6814      	ldr	r4, [r2, #0]
 80165aa:	d1f8      	bne.n	801659e <enet_frame_transmit+0x42>
 80165ac:	e7e1      	b.n	8016572 <enet_frame_transmit+0x16>
 80165ae:	2300      	movs	r3, #0
 80165b0:	e7f9      	b.n	80165a6 <enet_frame_transmit+0x4a>
 80165b2:	6141      	str	r1, [r0, #20]
 80165b4:	2100      	movs	r1, #0
 80165b6:	6041      	str	r1, [r0, #4]
 80165b8:	e7ea      	b.n	8016590 <enet_frame_transmit+0x34>
 80165ba:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80165be:	4907      	ldr	r1, [pc, #28]	; (80165dc <enet_frame_transmit+0x80>)
 80165c0:	bf09      	itett	eq
 80165c2:	6809      	ldreq	r1, [r1, #0]
 80165c4:	690b      	ldrne	r3, [r1, #16]
 80165c6:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80165ca:	3310      	addeq	r3, #16
 80165cc:	bf08      	it	eq
 80165ce:	185b      	addeq	r3, r3, r1
 80165d0:	e7e2      	b.n	8016598 <enet_frame_transmit+0x3c>
 80165d2:	2000      	movs	r0, #0
 80165d4:	e7e2      	b.n	801659c <enet_frame_transmit+0x40>
 80165d6:	bf00      	nop
 80165d8:	2000fda4 	andcs	pc, r0, r4, lsr #27
 80165dc:	40029000 	andmi	r9, r2, r0

080165e0 <enet_transmit_checksum_config>:
 80165e0:	6803      	ldr	r3, [r0, #0]
 80165e2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80165e6:	430b      	orrs	r3, r1
 80165e8:	6003      	str	r3, [r0, #0]
 80165ea:	4770      	bx	lr

080165ec <enet_mac_address_set>:
 80165ec:	4b03      	ldr	r3, [pc, #12]	; (80165fc <enet_mac_address_set+0x10>)
 80165ee:	888a      	ldrh	r2, [r1, #4]
 80165f0:	50c2      	str	r2, [r0, r3]
 80165f2:	3304      	adds	r3, #4
 80165f4:	680a      	ldr	r2, [r1, #0]
 80165f6:	50c2      	str	r2, [r0, r3]
 80165f8:	4770      	bx	lr
 80165fa:	bf00      	nop
 80165fc:	40028040 	andmi	r8, r2, r0, asr #32

08016600 <enet_rx_enable>:
 8016600:	4a05      	ldr	r2, [pc, #20]	; (8016618 <enet_rx_enable+0x18>)
 8016602:	6813      	ldr	r3, [r2, #0]
 8016604:	f043 0304 	orr.w	r3, r3, #4
 8016608:	6013      	str	r3, [r2, #0]
 801660a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801660e:	6993      	ldr	r3, [r2, #24]
 8016610:	f043 0302 	orr.w	r3, r3, #2
 8016614:	6193      	str	r3, [r2, #24]
 8016616:	4770      	bx	lr
 8016618:	40028000 	andmi	r8, r2, r0

0801661c <enet_phy_write_read>:
 801661c:	b530      	push	{r4, r5, lr}
 801661e:	4d12      	ldr	r5, [pc, #72]	; (8016668 <enet_phy_write_read+0x4c>)
 8016620:	4604      	mov	r4, r0
 8016622:	6928      	ldr	r0, [r5, #16]
 8016624:	0192      	lsls	r2, r2, #6
 8016626:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801662a:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801662e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8016632:	4302      	orrs	r2, r0
 8016634:	02c9      	lsls	r1, r1, #11
 8016636:	b289      	uxth	r1, r1
 8016638:	4322      	orrs	r2, r4
 801663a:	430a      	orrs	r2, r1
 801663c:	2c02      	cmp	r4, #2
 801663e:	bf04      	itt	eq
 8016640:	8819      	ldrheq	r1, [r3, #0]
 8016642:	6169      	streq	r1, [r5, #20]
 8016644:	f042 0201 	orr.w	r2, r2, #1
 8016648:	612a      	str	r2, [r5, #16]
 801664a:	4907      	ldr	r1, [pc, #28]	; (8016668 <enet_phy_write_read+0x4c>)
 801664c:	4a07      	ldr	r2, [pc, #28]	; (801666c <enet_phy_write_read+0x50>)
 801664e:	6908      	ldr	r0, [r1, #16]
 8016650:	07c0      	lsls	r0, r0, #31
 8016652:	d501      	bpl.n	8016658 <enet_phy_write_read+0x3c>
 8016654:	3a01      	subs	r2, #1
 8016656:	d1fa      	bne.n	801664e <enet_phy_write_read+0x32>
 8016658:	690a      	ldr	r2, [r1, #16]
 801665a:	43d2      	mvns	r2, r2
 801665c:	f002 0001 	and.w	r0, r2, #1
 8016660:	b90c      	cbnz	r4, 8016666 <enet_phy_write_read+0x4a>
 8016662:	694a      	ldr	r2, [r1, #20]
 8016664:	801a      	strh	r2, [r3, #0]
 8016666:	bd30      	pop	{r4, r5, pc}
 8016668:	40028000 	andmi	r8, r2, r0
 801666c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08016670 <enet_phy_config>:
 8016670:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016672:	4d26      	ldr	r5, [pc, #152]	; (801670c <enet_phy_config+0x9c>)
 8016674:	2001      	movs	r0, #1
 8016676:	692c      	ldr	r4, [r5, #16]
 8016678:	f000 fb9e 	bl	8016db8 <rcu_clock_freq_get>
 801667c:	4b24      	ldr	r3, [pc, #144]	; (8016710 <enet_phy_config+0xa0>)
 801667e:	4a25      	ldr	r2, [pc, #148]	; (8016714 <enet_phy_config+0xa4>)
 8016680:	4403      	add	r3, r0
 8016682:	4293      	cmp	r3, r2
 8016684:	f024 041c 	bic.w	r4, r4, #28
 8016688:	d21f      	bcs.n	80166ca <enet_phy_config+0x5a>
 801668a:	f044 0408 	orr.w	r4, r4, #8
 801668e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016692:	612c      	str	r4, [r5, #16]
 8016694:	2200      	movs	r2, #0
 8016696:	f8ad 3006 	strh.w	r3, [sp, #6]
 801669a:	2101      	movs	r1, #1
 801669c:	f10d 0306 	add.w	r3, sp, #6
 80166a0:	2002      	movs	r0, #2
 80166a2:	f7ff ffbb 	bl	801661c <enet_phy_write_read>
 80166a6:	b350      	cbz	r0, 80166fe <enet_phy_config+0x8e>
 80166a8:	481b      	ldr	r0, [pc, #108]	; (8016718 <enet_phy_config+0xa8>)
 80166aa:	2200      	movs	r2, #0
 80166ac:	f7ff fea2 	bl	80163f4 <enet_delay>
 80166b0:	2101      	movs	r1, #1
 80166b2:	f10d 0306 	add.w	r3, sp, #6
 80166b6:	4610      	mov	r0, r2
 80166b8:	f7ff ffb0 	bl	801661c <enet_phy_write_read>
 80166bc:	b1f8      	cbz	r0, 80166fe <enet_phy_config+0x8e>
 80166be:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80166c2:	43c0      	mvns	r0, r0
 80166c4:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80166c8:	e01a      	b.n	8016700 <enet_phy_config+0x90>
 80166ca:	4b14      	ldr	r3, [pc, #80]	; (801671c <enet_phy_config+0xac>)
 80166cc:	4a14      	ldr	r2, [pc, #80]	; (8016720 <enet_phy_config+0xb0>)
 80166ce:	4403      	add	r3, r0
 80166d0:	4293      	cmp	r3, r2
 80166d2:	d802      	bhi.n	80166da <enet_phy_config+0x6a>
 80166d4:	f044 040c 	orr.w	r4, r4, #12
 80166d8:	e7d9      	b.n	801668e <enet_phy_config+0x1e>
 80166da:	4b12      	ldr	r3, [pc, #72]	; (8016724 <enet_phy_config+0xb4>)
 80166dc:	4a12      	ldr	r2, [pc, #72]	; (8016728 <enet_phy_config+0xb8>)
 80166de:	4403      	add	r3, r0
 80166e0:	4293      	cmp	r3, r2
 80166e2:	d3d4      	bcc.n	801668e <enet_phy_config+0x1e>
 80166e4:	4b11      	ldr	r3, [pc, #68]	; (801672c <enet_phy_config+0xbc>)
 80166e6:	4a12      	ldr	r2, [pc, #72]	; (8016730 <enet_phy_config+0xc0>)
 80166e8:	4403      	add	r3, r0
 80166ea:	4293      	cmp	r3, r2
 80166ec:	d802      	bhi.n	80166f4 <enet_phy_config+0x84>
 80166ee:	f044 0404 	orr.w	r4, r4, #4
 80166f2:	e7cc      	b.n	801668e <enet_phy_config+0x1e>
 80166f4:	4b0f      	ldr	r3, [pc, #60]	; (8016734 <enet_phy_config+0xc4>)
 80166f6:	4a10      	ldr	r2, [pc, #64]	; (8016738 <enet_phy_config+0xc8>)
 80166f8:	4403      	add	r3, r0
 80166fa:	4293      	cmp	r3, r2
 80166fc:	d902      	bls.n	8016704 <enet_phy_config+0x94>
 80166fe:	2000      	movs	r0, #0
 8016700:	b003      	add	sp, #12
 8016702:	bd30      	pop	{r4, r5, pc}
 8016704:	f044 0410 	orr.w	r4, r4, #16
 8016708:	e7c1      	b.n	801668e <enet_phy_config+0x1e>
 801670a:	bf00      	nop
 801670c:	40028000 	andmi	r8, r2, r0
 8016710:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8016714:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8016718:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 801671c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8016720:	017d783f 	cmneq	sp, pc, lsr r8
 8016724:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8016728:	02625a00 	rsbeq	r5, r2, #0, 20
 801672c:	fa0a1f00 	blx	829e334 <__exidx_end+0x282274>
 8016730:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8016734:	f70f2e80 			; <UNDEFINED> instruction: 0xf70f2e80
 8016738:	02faf080 	rscseq	pc, sl, #128	; 0x80

0801673c <enet_init>:
 801673c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801673e:	2300      	movs	r3, #0
 8016740:	4604      	mov	r4, r0
 8016742:	460d      	mov	r5, r1
 8016744:	4616      	mov	r6, r2
 8016746:	f8ad 3006 	strh.w	r3, [sp, #6]
 801674a:	f7ff ff91 	bl	8016670 <enet_phy_config>
 801674e:	2800      	cmp	r0, #0
 8016750:	d032      	beq.n	80167b8 <enet_init+0x7c>
 8016752:	4b39      	ldr	r3, [pc, #228]	; (8016838 <enet_init+0xfc>)
 8016754:	4a39      	ldr	r2, [pc, #228]	; (801683c <enet_init+0x100>)
 8016756:	6819      	ldr	r1, [r3, #0]
 8016758:	400a      	ands	r2, r1
 801675a:	601a      	str	r2, [r3, #0]
 801675c:	2200      	movs	r2, #0
 801675e:	605a      	str	r2, [r3, #4]
 8016760:	609a      	str	r2, [r3, #8]
 8016762:	60da      	str	r2, [r3, #12]
 8016764:	6999      	ldr	r1, [r3, #24]
 8016766:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801676a:	0409      	lsls	r1, r1, #16
 801676c:	0c09      	lsrs	r1, r1, #16
 801676e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8016772:	6199      	str	r1, [r3, #24]
 8016774:	4932      	ldr	r1, [pc, #200]	; (8016840 <enet_init+0x104>)
 8016776:	61da      	str	r2, [r3, #28]
 8016778:	6988      	ldr	r0, [r1, #24]
 801677a:	4b32      	ldr	r3, [pc, #200]	; (8016844 <enet_init+0x108>)
 801677c:	4003      	ands	r3, r0
 801677e:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8016782:	618b      	str	r3, [r1, #24]
 8016784:	680b      	ldr	r3, [r1, #0]
 8016786:	4b30      	ldr	r3, [pc, #192]	; (8016848 <enet_init+0x10c>)
 8016788:	600b      	str	r3, [r1, #0]
 801678a:	2c01      	cmp	r4, #1
 801678c:	d01e      	beq.n	80167cc <enet_init+0x90>
 801678e:	08e3      	lsrs	r3, r4, #3
 8016790:	0861      	lsrs	r1, r4, #1
 8016792:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8016796:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801679a:	430b      	orrs	r3, r1
 801679c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80167a0:	2101      	movs	r1, #1
 80167a2:	f10d 0306 	add.w	r3, sp, #6
 80167a6:	2002      	movs	r0, #2
 80167a8:	f7ff ff38 	bl	801661c <enet_phy_write_read>
 80167ac:	b158      	cbz	r0, 80167c6 <enet_init+0x8a>
 80167ae:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80167b2:	f7ff fe1f 	bl	80163f4 <enet_delay>
 80167b6:	e05e      	b.n	8016876 <enet_init+0x13a>
 80167b8:	4824      	ldr	r0, [pc, #144]	; (801684c <enet_init+0x110>)
 80167ba:	f7ff fe1b 	bl	80163f4 <enet_delay>
 80167be:	f7ff ff57 	bl	8016670 <enet_phy_config>
 80167c2:	2800      	cmp	r0, #0
 80167c4:	d1c5      	bne.n	8016752 <enet_init+0x16>
 80167c6:	2000      	movs	r0, #0
 80167c8:	b003      	add	sp, #12
 80167ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80167cc:	4f20      	ldr	r7, [pc, #128]	; (8016850 <enet_init+0x114>)
 80167ce:	4614      	mov	r4, r2
 80167d0:	2201      	movs	r2, #1
 80167d2:	4611      	mov	r1, r2
 80167d4:	f10d 0306 	add.w	r3, sp, #6
 80167d8:	2000      	movs	r0, #0
 80167da:	f7ff ff1f 	bl	801661c <enet_phy_write_read>
 80167de:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80167e2:	f002 0204 	and.w	r2, r2, #4
 80167e6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80167ea:	3401      	adds	r4, #1
 80167ec:	b912      	cbnz	r2, 80167f4 <enet_init+0xb8>
 80167ee:	42bc      	cmp	r4, r7
 80167f0:	d1ee      	bne.n	80167d0 <enet_init+0x94>
 80167f2:	e7e8      	b.n	80167c6 <enet_init+0x8a>
 80167f4:	42bc      	cmp	r4, r7
 80167f6:	d0e6      	beq.n	80167c6 <enet_init+0x8a>
 80167f8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80167fc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016800:	2101      	movs	r1, #1
 8016802:	2200      	movs	r2, #0
 8016804:	2002      	movs	r0, #2
 8016806:	f7ff ff09 	bl	801661c <enet_phy_write_read>
 801680a:	2800      	cmp	r0, #0
 801680c:	d0db      	beq.n	80167c6 <enet_init+0x8a>
 801680e:	4f10      	ldr	r7, [pc, #64]	; (8016850 <enet_init+0x114>)
 8016810:	2400      	movs	r4, #0
 8016812:	2201      	movs	r2, #1
 8016814:	4611      	mov	r1, r2
 8016816:	f10d 0306 	add.w	r3, sp, #6
 801681a:	2000      	movs	r0, #0
 801681c:	f7ff fefe 	bl	801661c <enet_phy_write_read>
 8016820:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8016824:	f002 0220 	and.w	r2, r2, #32
 8016828:	f8ad 2006 	strh.w	r2, [sp, #6]
 801682c:	3401      	adds	r4, #1
 801682e:	b98a      	cbnz	r2, 8016854 <enet_init+0x118>
 8016830:	42bc      	cmp	r4, r7
 8016832:	d1ee      	bne.n	8016812 <enet_init+0xd6>
 8016834:	e7c7      	b.n	80167c6 <enet_init+0x8a>
 8016836:	bf00      	nop
 8016838:	40028000 	andmi	r8, r2, r0
 801683c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8016840:	40029000 	andmi	r9, r2, r0
 8016844:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8016848:	02c16000 	sbceq	r6, r1, #0
 801684c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8016850:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8016854:	42bc      	cmp	r4, r7
 8016856:	d0b6      	beq.n	80167c6 <enet_init+0x8a>
 8016858:	2101      	movs	r1, #1
 801685a:	2210      	movs	r2, #16
 801685c:	2000      	movs	r0, #0
 801685e:	f7ff fedd 	bl	801661c <enet_phy_write_read>
 8016862:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8016866:	f3c3 0480 	ubfx	r4, r3, #2, #1
 801686a:	0799      	lsls	r1, r3, #30
 801686c:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8016870:	d401      	bmi.n	8016876 <enet_init+0x13a>
 8016872:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8016876:	4b69      	ldr	r3, [pc, #420]	; (8016a1c <enet_init+0x2e0>)
 8016878:	681a      	ldr	r2, [r3, #0]
 801687a:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 801687e:	4314      	orrs	r4, r2
 8016880:	056a      	lsls	r2, r5, #21
 8016882:	601c      	str	r4, [r3, #0]
 8016884:	d50b      	bpl.n	801689e <enet_init+0x162>
 8016886:	681a      	ldr	r2, [r3, #0]
 8016888:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801688c:	601a      	str	r2, [r3, #0]
 801688e:	4a64      	ldr	r2, [pc, #400]	; (8016a20 <enet_init+0x2e4>)
 8016890:	6993      	ldr	r3, [r2, #24]
 8016892:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8016896:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801689a:	431d      	orrs	r5, r3
 801689c:	6195      	str	r5, [r2, #24]
 801689e:	485f      	ldr	r0, [pc, #380]	; (8016a1c <enet_init+0x2e0>)
 80168a0:	6843      	ldr	r3, [r0, #4]
 80168a2:	431e      	orrs	r6, r3
 80168a4:	4b5f      	ldr	r3, [pc, #380]	; (8016a24 <enet_init+0x2e8>)
 80168a6:	6046      	str	r6, [r0, #4]
 80168a8:	681a      	ldr	r2, [r3, #0]
 80168aa:	07d7      	lsls	r7, r2, #31
 80168ac:	d513      	bpl.n	80168d6 <enet_init+0x19a>
 80168ae:	6801      	ldr	r1, [r0, #0]
 80168b0:	685a      	ldr	r2, [r3, #4]
 80168b2:	4c5d      	ldr	r4, [pc, #372]	; (8016a28 <enet_init+0x2ec>)
 80168b4:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
 80168b8:	4014      	ands	r4, r2
 80168ba:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80168be:	4321      	orrs	r1, r4
 80168c0:	6001      	str	r1, [r0, #0]
 80168c2:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 80168c6:	0892      	lsrs	r2, r2, #2
 80168c8:	6981      	ldr	r1, [r0, #24]
 80168ca:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80168ce:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80168d2:	430a      	orrs	r2, r1
 80168d4:	6182      	str	r2, [r0, #24]
 80168d6:	681a      	ldr	r2, [r3, #0]
 80168d8:	0796      	lsls	r6, r2, #30
 80168da:	d508      	bpl.n	80168ee <enet_init+0x1b2>
 80168dc:	4950      	ldr	r1, [pc, #320]	; (8016a20 <enet_init+0x2e4>)
 80168de:	6898      	ldr	r0, [r3, #8]
 80168e0:	680a      	ldr	r2, [r1, #0]
 80168e2:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 80168e6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80168ea:	4302      	orrs	r2, r0
 80168ec:	600a      	str	r2, [r1, #0]
 80168ee:	681a      	ldr	r2, [r3, #0]
 80168f0:	0755      	lsls	r5, r2, #29
 80168f2:	d508      	bpl.n	8016906 <enet_init+0x1ca>
 80168f4:	494a      	ldr	r1, [pc, #296]	; (8016a20 <enet_init+0x2e4>)
 80168f6:	68d8      	ldr	r0, [r3, #12]
 80168f8:	680a      	ldr	r2, [r1, #0]
 80168fa:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80168fe:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8016902:	4302      	orrs	r2, r0
 8016904:	600a      	str	r2, [r1, #0]
 8016906:	681a      	ldr	r2, [r3, #0]
 8016908:	0714      	lsls	r4, r2, #28
 801690a:	d508      	bpl.n	801691e <enet_init+0x1e2>
 801690c:	4944      	ldr	r1, [pc, #272]	; (8016a20 <enet_init+0x2e4>)
 801690e:	6918      	ldr	r0, [r3, #16]
 8016910:	680a      	ldr	r2, [r1, #0]
 8016912:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8016916:	f022 0202 	bic.w	r2, r2, #2
 801691a:	4302      	orrs	r2, r0
 801691c:	600a      	str	r2, [r1, #0]
 801691e:	681a      	ldr	r2, [r3, #0]
 8016920:	06d0      	lsls	r0, r2, #27
 8016922:	d506      	bpl.n	8016932 <enet_init+0x1f6>
 8016924:	493e      	ldr	r1, [pc, #248]	; (8016a20 <enet_init+0x2e4>)
 8016926:	4a41      	ldr	r2, [pc, #260]	; (8016a2c <enet_init+0x2f0>)
 8016928:	6988      	ldr	r0, [r1, #24]
 801692a:	4002      	ands	r2, r0
 801692c:	6958      	ldr	r0, [r3, #20]
 801692e:	4302      	orrs	r2, r0
 8016930:	618a      	str	r2, [r1, #24]
 8016932:	681a      	ldr	r2, [r3, #0]
 8016934:	0691      	lsls	r1, r2, #26
 8016936:	d511      	bpl.n	801695c <enet_init+0x220>
 8016938:	4839      	ldr	r0, [pc, #228]	; (8016a20 <enet_init+0x2e4>)
 801693a:	699a      	ldr	r2, [r3, #24]
 801693c:	6981      	ldr	r1, [r0, #24]
 801693e:	4c3c      	ldr	r4, [pc, #240]	; (8016a30 <enet_init+0x2f4>)
 8016940:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8016944:	4014      	ands	r4, r2
 8016946:	f021 0104 	bic.w	r1, r1, #4
 801694a:	4321      	orrs	r1, r4
 801694c:	6181      	str	r1, [r0, #24]
 801694e:	6801      	ldr	r1, [r0, #0]
 8016950:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8016954:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8016958:	430a      	orrs	r2, r1
 801695a:	6002      	str	r2, [r0, #0]
 801695c:	681a      	ldr	r2, [r3, #0]
 801695e:	0652      	lsls	r2, r2, #25
 8016960:	d506      	bpl.n	8016970 <enet_init+0x234>
 8016962:	492e      	ldr	r1, [pc, #184]	; (8016a1c <enet_init+0x2e0>)
 8016964:	69d8      	ldr	r0, [r3, #28]
 8016966:	69ca      	ldr	r2, [r1, #28]
 8016968:	0c52      	lsrs	r2, r2, #17
 801696a:	0452      	lsls	r2, r2, #17
 801696c:	4302      	orrs	r2, r0
 801696e:	61ca      	str	r2, [r1, #28]
 8016970:	681a      	ldr	r2, [r3, #0]
 8016972:	0617      	lsls	r7, r2, #24
 8016974:	d517      	bpl.n	80169a6 <enet_init+0x26a>
 8016976:	4c29      	ldr	r4, [pc, #164]	; (8016a1c <enet_init+0x2e0>)
 8016978:	6a1a      	ldr	r2, [r3, #32]
 801697a:	69a0      	ldr	r0, [r4, #24]
 801697c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8016980:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8016984:	0400      	lsls	r0, r0, #16
 8016986:	0c00      	lsrs	r0, r0, #16
 8016988:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 801698c:	4301      	orrs	r1, r0
 801698e:	4824      	ldr	r0, [pc, #144]	; (8016a20 <enet_init+0x2e4>)
 8016990:	61a1      	str	r1, [r4, #24]
 8016992:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8016996:	0a12      	lsrs	r2, r2, #8
 8016998:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 801699c:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80169a0:	430a      	orrs	r2, r1
 80169a2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80169a6:	681a      	ldr	r2, [r3, #0]
 80169a8:	05d6      	lsls	r6, r2, #23
 80169aa:	bf42      	ittt	mi
 80169ac:	4a1b      	ldrmi	r2, [pc, #108]	; (8016a1c <enet_init+0x2e0>)
 80169ae:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80169b0:	6091      	strmi	r1, [r2, #8]
 80169b2:	681a      	ldr	r2, [r3, #0]
 80169b4:	0595      	lsls	r5, r2, #22
 80169b6:	bf42      	ittt	mi
 80169b8:	4a18      	ldrmi	r2, [pc, #96]	; (8016a1c <enet_init+0x2e0>)
 80169ba:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80169bc:	60d1      	strmi	r1, [r2, #12]
 80169be:	681a      	ldr	r2, [r3, #0]
 80169c0:	0554      	lsls	r4, r2, #21
 80169c2:	d508      	bpl.n	80169d6 <enet_init+0x29a>
 80169c4:	4915      	ldr	r1, [pc, #84]	; (8016a1c <enet_init+0x2e0>)
 80169c6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80169c8:	684a      	ldr	r2, [r1, #4]
 80169ca:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80169ce:	f022 0206 	bic.w	r2, r2, #6
 80169d2:	4302      	orrs	r2, r0
 80169d4:	604a      	str	r2, [r1, #4]
 80169d6:	681a      	ldr	r2, [r3, #0]
 80169d8:	0510      	lsls	r0, r2, #20
 80169da:	d508      	bpl.n	80169ee <enet_init+0x2b2>
 80169dc:	490f      	ldr	r1, [pc, #60]	; (8016a1c <enet_init+0x2e0>)
 80169de:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80169e0:	680a      	ldr	r2, [r1, #0]
 80169e2:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80169e6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80169ea:	4302      	orrs	r2, r0
 80169ec:	600a      	str	r2, [r1, #0]
 80169ee:	681a      	ldr	r2, [r3, #0]
 80169f0:	04d1      	lsls	r1, r2, #19
 80169f2:	d506      	bpl.n	8016a02 <enet_init+0x2c6>
 80169f4:	4909      	ldr	r1, [pc, #36]	; (8016a1c <enet_init+0x2e0>)
 80169f6:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80169f8:	680a      	ldr	r2, [r1, #0]
 80169fa:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80169fe:	4302      	orrs	r2, r0
 8016a00:	600a      	str	r2, [r1, #0]
 8016a02:	681a      	ldr	r2, [r3, #0]
 8016a04:	0492      	lsls	r2, r2, #18
 8016a06:	d506      	bpl.n	8016a16 <enet_init+0x2da>
 8016a08:	4904      	ldr	r1, [pc, #16]	; (8016a1c <enet_init+0x2e0>)
 8016a0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016a0c:	680a      	ldr	r2, [r1, #0]
 8016a0e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8016a12:	4313      	orrs	r3, r2
 8016a14:	600b      	str	r3, [r1, #0]
 8016a16:	2001      	movs	r0, #1
 8016a18:	e6d6      	b.n	80167c8 <enet_init+0x8c>
 8016a1a:	bf00      	nop
 8016a1c:	40028000 	andmi	r8, r2, r0
 8016a20:	40029000 	andmi	r9, r2, r0
 8016a24:	2000fda8 	andcs	pc, r0, r8, lsr #27
 8016a28:	02000080 	andeq	r0, r0, #128	; 0x80
 8016a2c:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c
 8016a30:	01000004 	tsteq	r0, r4

08016a34 <enet_txfifo_flush>:
 8016a34:	4b06      	ldr	r3, [pc, #24]	; (8016a50 <enet_txfifo_flush+0x1c>)
 8016a36:	4807      	ldr	r0, [pc, #28]	; (8016a54 <enet_txfifo_flush+0x20>)
 8016a38:	699a      	ldr	r2, [r3, #24]
 8016a3a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8016a3e:	619a      	str	r2, [r3, #24]
 8016a40:	699a      	ldr	r2, [r3, #24]
 8016a42:	02d2      	lsls	r2, r2, #11
 8016a44:	d502      	bpl.n	8016a4c <enet_txfifo_flush+0x18>
 8016a46:	3801      	subs	r0, #1
 8016a48:	d1fa      	bne.n	8016a40 <enet_txfifo_flush+0xc>
 8016a4a:	4770      	bx	lr
 8016a4c:	2001      	movs	r0, #1
 8016a4e:	4770      	bx	lr
 8016a50:	40029000 	andmi	r9, r2, r0
 8016a54:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08016a58 <enet_tx_enable>:
 8016a58:	4a06      	ldr	r2, [pc, #24]	; (8016a74 <enet_tx_enable+0x1c>)
 8016a5a:	b508      	push	{r3, lr}
 8016a5c:	6813      	ldr	r3, [r2, #0]
 8016a5e:	f043 0308 	orr.w	r3, r3, #8
 8016a62:	6013      	str	r3, [r2, #0]
 8016a64:	f7ff ffe6 	bl	8016a34 <enet_txfifo_flush>
 8016a68:	4a03      	ldr	r2, [pc, #12]	; (8016a78 <enet_tx_enable+0x20>)
 8016a6a:	6993      	ldr	r3, [r2, #24]
 8016a6c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8016a70:	6193      	str	r3, [r2, #24]
 8016a72:	bd08      	pop	{r3, pc}
 8016a74:	40028000 	andmi	r8, r2, r0
 8016a78:	40029000 	andmi	r9, r2, r0

08016a7c <enet_enable>:
 8016a7c:	b508      	push	{r3, lr}
 8016a7e:	f7ff ffeb 	bl	8016a58 <enet_tx_enable>
 8016a82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016a86:	f7ff bdbb 	b.w	8016600 <enet_rx_enable>
	...

08016a8c <enet_desc_information_get>:
 8016a8c:	2905      	cmp	r1, #5
 8016a8e:	d820      	bhi.n	8016ad2 <enet_desc_information_get+0x46>
 8016a90:	e8df f001 	tbb	[pc, r1]
 8016a94:	0309191b 	movweq	r1, #39195	; 0x991b
 8016a98:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8016a9c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016aa0:	4770      	bx	lr
 8016aa2:	88c0      	ldrh	r0, [r0, #6]
 8016aa4:	e7fa      	b.n	8016a9c <enet_desc_information_get+0x10>
 8016aa6:	6802      	ldr	r2, [r0, #0]
 8016aa8:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8016aac:	2b04      	cmp	r3, #4
 8016aae:	d913      	bls.n	8016ad8 <enet_desc_information_get+0x4c>
 8016ab0:	490a      	ldr	r1, [pc, #40]	; (8016adc <enet_desc_information_get+0x50>)
 8016ab2:	6809      	ldr	r1, [r1, #0]
 8016ab4:	0189      	lsls	r1, r1, #6
 8016ab6:	f1a3 0004 	sub.w	r0, r3, #4
 8016aba:	d50e      	bpl.n	8016ada <enet_desc_information_get+0x4e>
 8016abc:	f012 0f20 	tst.w	r2, #32
 8016ac0:	bf18      	it	ne
 8016ac2:	4618      	movne	r0, r3
 8016ac4:	4770      	bx	lr
 8016ac6:	6880      	ldr	r0, [r0, #8]
 8016ac8:	4770      	bx	lr
 8016aca:	6800      	ldr	r0, [r0, #0]
 8016acc:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8016ad0:	4770      	bx	lr
 8016ad2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016ad6:	4770      	bx	lr
 8016ad8:	2000      	movs	r0, #0
 8016ada:	4770      	bx	lr
 8016adc:	40028000 	andmi	r8, r2, r0

08016ae0 <enet_rxframe_drop>:
 8016ae0:	4815      	ldr	r0, [pc, #84]	; (8016b38 <enet_rxframe_drop+0x58>)
 8016ae2:	4916      	ldr	r1, [pc, #88]	; (8016b3c <enet_rxframe_drop+0x5c>)
 8016ae4:	6802      	ldr	r2, [r0, #0]
 8016ae6:	b510      	push	{r4, lr}
 8016ae8:	6854      	ldr	r4, [r2, #4]
 8016aea:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8016aee:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8016af2:	6013      	str	r3, [r2, #0]
 8016af4:	680b      	ldr	r3, [r1, #0]
 8016af6:	d009      	beq.n	8016b0c <enet_rxframe_drop+0x2c>
 8016af8:	b12b      	cbz	r3, 8016b06 <enet_rxframe_drop+0x26>
 8016afa:	68da      	ldr	r2, [r3, #12]
 8016afc:	6002      	str	r2, [r0, #0]
 8016afe:	681a      	ldr	r2, [r3, #0]
 8016b00:	b1ba      	cbz	r2, 8016b32 <enet_rxframe_drop+0x52>
 8016b02:	600a      	str	r2, [r1, #0]
 8016b04:	bd10      	pop	{r4, pc}
 8016b06:	68d3      	ldr	r3, [r2, #12]
 8016b08:	6003      	str	r3, [r0, #0]
 8016b0a:	e7fb      	b.n	8016b04 <enet_rxframe_drop+0x24>
 8016b0c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8016b10:	4c0b      	ldr	r4, [pc, #44]	; (8016b40 <enet_rxframe_drop+0x60>)
 8016b12:	d006      	beq.n	8016b22 <enet_rxframe_drop+0x42>
 8016b14:	68e2      	ldr	r2, [r4, #12]
 8016b16:	6002      	str	r2, [r0, #0]
 8016b18:	2b00      	cmp	r3, #0
 8016b1a:	d0f3      	beq.n	8016b04 <enet_rxframe_drop+0x24>
 8016b1c:	681b      	ldr	r3, [r3, #0]
 8016b1e:	600b      	str	r3, [r1, #0]
 8016b20:	e7f0      	b.n	8016b04 <enet_rxframe_drop+0x24>
 8016b22:	6824      	ldr	r4, [r4, #0]
 8016b24:	3210      	adds	r2, #16
 8016b26:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8016b2a:	4422      	add	r2, r4
 8016b2c:	6002      	str	r2, [r0, #0]
 8016b2e:	2b00      	cmp	r3, #0
 8016b30:	d0e8      	beq.n	8016b04 <enet_rxframe_drop+0x24>
 8016b32:	3310      	adds	r3, #16
 8016b34:	e7f3      	b.n	8016b1e <enet_rxframe_drop+0x3e>
 8016b36:	bf00      	nop
 8016b38:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8016b3c:	2000fd98 	mulcs	r0, r8, sp
 8016b40:	40029000 	andmi	r9, r2, r0

08016b44 <enet_rxframe_size_get>:
 8016b44:	b508      	push	{r3, lr}
 8016b46:	4b10      	ldr	r3, [pc, #64]	; (8016b88 <enet_rxframe_size_get+0x44>)
 8016b48:	681b      	ldr	r3, [r3, #0]
 8016b4a:	681b      	ldr	r3, [r3, #0]
 8016b4c:	2b00      	cmp	r3, #0
 8016b4e:	db19      	blt.n	8016b84 <enet_rxframe_size_get+0x40>
 8016b50:	f403 4203 	and.w	r2, r3, #33536	; 0x8300
 8016b54:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8016b58:	d003      	beq.n	8016b62 <enet_rxframe_size_get+0x1e>
 8016b5a:	f7ff ffc1 	bl	8016ae0 <enet_rxframe_drop>
 8016b5e:	2001      	movs	r0, #1
 8016b60:	bd08      	pop	{r3, pc}
 8016b62:	f003 0221 	and.w	r2, r3, #33	; 0x21
 8016b66:	2a21      	cmp	r2, #33	; 0x21
 8016b68:	d0f7      	beq.n	8016b5a <enet_rxframe_size_get+0x16>
 8016b6a:	4908      	ldr	r1, [pc, #32]	; (8016b8c <enet_rxframe_size_get+0x48>)
 8016b6c:	6809      	ldr	r1, [r1, #0]
 8016b6e:	f3c3 420d 	ubfx	r2, r3, #16, #14
 8016b72:	0189      	lsls	r1, r1, #6
 8016b74:	f1a2 0004 	sub.w	r0, r2, #4
 8016b78:	d5f2      	bpl.n	8016b60 <enet_rxframe_size_get+0x1c>
 8016b7a:	f013 0f20 	tst.w	r3, #32
 8016b7e:	bf18      	it	ne
 8016b80:	4610      	movne	r0, r2
 8016b82:	e7ed      	b.n	8016b60 <enet_rxframe_size_get+0x1c>
 8016b84:	2000      	movs	r0, #0
 8016b86:	e7eb      	b.n	8016b60 <enet_rxframe_size_get+0x1c>
 8016b88:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8016b8c:	40028000 	andmi	r8, r2, r0

08016b90 <enet_initpara_reset>:
 8016b90:	4b08      	ldr	r3, [pc, #32]	; (8016bb4 <enet_initpara_reset+0x24>)
 8016b92:	2200      	movs	r2, #0
 8016b94:	e9c3 2200 	strd	r2, r2, [r3]
 8016b98:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8016b9c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8016ba0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8016ba4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8016ba8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8016bac:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8016bb0:	639a      	str	r2, [r3, #56]	; 0x38
 8016bb2:	4770      	bx	lr
 8016bb4:	2000fda8 	andcs	pc, r0, r8, lsr #27

08016bb8 <enet_deinit>:
 8016bb8:	b508      	push	{r3, lr}
 8016bba:	f240 4019 	movw	r0, #1049	; 0x419
 8016bbe:	f000 f8da 	bl	8016d76 <rcu_periph_reset_enable>
 8016bc2:	f240 4019 	movw	r0, #1049	; 0x419
 8016bc6:	f000 f8d8 	bl	8016d7a <rcu_periph_reset_disable>
 8016bca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016bce:	f7ff bfdf 	b.w	8016b90 <enet_initpara_reset>
	...

08016bd4 <fwdgt_enable>:
 8016bd4:	4b02      	ldr	r3, [pc, #8]	; (8016be0 <fwdgt_enable+0xc>)
 8016bd6:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8016bda:	601a      	str	r2, [r3, #0]
 8016bdc:	4770      	bx	lr
 8016bde:	bf00      	nop
 8016be0:	40003000 	andmi	r3, r0, r0

08016be4 <fwdgt_counter_reload>:
 8016be4:	4b02      	ldr	r3, [pc, #8]	; (8016bf0 <fwdgt_counter_reload+0xc>)
 8016be6:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8016bea:	601a      	str	r2, [r3, #0]
 8016bec:	4770      	bx	lr
 8016bee:	bf00      	nop
 8016bf0:	40003000 	andmi	r3, r0, r0

08016bf4 <fwdgt_config>:
 8016bf4:	4a12      	ldr	r2, [pc, #72]	; (8016c40 <fwdgt_config+0x4c>)
 8016bf6:	b510      	push	{r4, lr}
 8016bf8:	f245 5355 	movw	r3, #21845	; 0x5555
 8016bfc:	4c11      	ldr	r4, [pc, #68]	; (8016c44 <fwdgt_config+0x50>)
 8016bfe:	6013      	str	r3, [r2, #0]
 8016c00:	68d3      	ldr	r3, [r2, #12]
 8016c02:	3c01      	subs	r4, #1
 8016c04:	f003 0301 	and.w	r3, r3, #1
 8016c08:	d013      	beq.n	8016c32 <fwdgt_config+0x3e>
 8016c0a:	2b00      	cmp	r3, #0
 8016c0c:	d1f8      	bne.n	8016c00 <fwdgt_config+0xc>
 8016c0e:	6051      	str	r1, [r2, #4]
 8016c10:	490c      	ldr	r1, [pc, #48]	; (8016c44 <fwdgt_config+0x50>)
 8016c12:	4a0b      	ldr	r2, [pc, #44]	; (8016c40 <fwdgt_config+0x4c>)
 8016c14:	68d3      	ldr	r3, [r2, #12]
 8016c16:	3901      	subs	r1, #1
 8016c18:	f003 0302 	and.w	r3, r3, #2
 8016c1c:	d00d      	beq.n	8016c3a <fwdgt_config+0x46>
 8016c1e:	2b00      	cmp	r3, #0
 8016c20:	d1f8      	bne.n	8016c14 <fwdgt_config+0x20>
 8016c22:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8016c26:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8016c2a:	6090      	str	r0, [r2, #8]
 8016c2c:	6013      	str	r3, [r2, #0]
 8016c2e:	2001      	movs	r0, #1
 8016c30:	e002      	b.n	8016c38 <fwdgt_config+0x44>
 8016c32:	2b00      	cmp	r3, #0
 8016c34:	d0eb      	beq.n	8016c0e <fwdgt_config+0x1a>
 8016c36:	2000      	movs	r0, #0
 8016c38:	bd10      	pop	{r4, pc}
 8016c3a:	2b00      	cmp	r3, #0
 8016c3c:	d1fb      	bne.n	8016c36 <fwdgt_config+0x42>
 8016c3e:	e7f0      	b.n	8016c22 <fwdgt_config+0x2e>
 8016c40:	40003000 	andmi	r3, r0, r0
 8016c44:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08016c48 <gpio_mode_set>:
 8016c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c4c:	6805      	ldr	r5, [r0, #0]
 8016c4e:	68c4      	ldr	r4, [r0, #12]
 8016c50:	2600      	movs	r6, #0
 8016c52:	f04f 0e03 	mov.w	lr, #3
 8016c56:	fa23 f706 	lsr.w	r7, r3, r6
 8016c5a:	07ff      	lsls	r7, r7, #31
 8016c5c:	d50d      	bpl.n	8016c7a <gpio_mode_set+0x32>
 8016c5e:	0077      	lsls	r7, r6, #1
 8016c60:	fa0e fc07 	lsl.w	ip, lr, r7
 8016c64:	fa01 f807 	lsl.w	r8, r1, r7
 8016c68:	ea25 050c 	bic.w	r5, r5, ip
 8016c6c:	ea24 040c 	bic.w	r4, r4, ip
 8016c70:	fa02 f707 	lsl.w	r7, r2, r7
 8016c74:	ea48 0505 	orr.w	r5, r8, r5
 8016c78:	433c      	orrs	r4, r7
 8016c7a:	3601      	adds	r6, #1
 8016c7c:	2e10      	cmp	r6, #16
 8016c7e:	d1ea      	bne.n	8016c56 <gpio_mode_set+0xe>
 8016c80:	6005      	str	r5, [r0, #0]
 8016c82:	60c4      	str	r4, [r0, #12]
 8016c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016c88 <gpio_output_options_set>:
 8016c88:	2901      	cmp	r1, #1
 8016c8a:	6841      	ldr	r1, [r0, #4]
 8016c8c:	bf0c      	ite	eq
 8016c8e:	4319      	orreq	r1, r3
 8016c90:	4399      	bicne	r1, r3
 8016c92:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c94:	6041      	str	r1, [r0, #4]
 8016c96:	6881      	ldr	r1, [r0, #8]
 8016c98:	2400      	movs	r4, #0
 8016c9a:	2603      	movs	r6, #3
 8016c9c:	fa23 f504 	lsr.w	r5, r3, r4
 8016ca0:	07ed      	lsls	r5, r5, #31
 8016ca2:	d507      	bpl.n	8016cb4 <gpio_output_options_set+0x2c>
 8016ca4:	0065      	lsls	r5, r4, #1
 8016ca6:	fa06 f705 	lsl.w	r7, r6, r5
 8016caa:	ea21 0107 	bic.w	r1, r1, r7
 8016cae:	fa02 f505 	lsl.w	r5, r2, r5
 8016cb2:	4329      	orrs	r1, r5
 8016cb4:	3401      	adds	r4, #1
 8016cb6:	2c10      	cmp	r4, #16
 8016cb8:	d1f0      	bne.n	8016c9c <gpio_output_options_set+0x14>
 8016cba:	6081      	str	r1, [r0, #8]
 8016cbc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016cbe <gpio_af_set>:
 8016cbe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cc0:	6a06      	ldr	r6, [r0, #32]
 8016cc2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8016cc4:	2300      	movs	r3, #0
 8016cc6:	f04f 0c0f 	mov.w	ip, #15
 8016cca:	fa22 f403 	lsr.w	r4, r2, r3
 8016cce:	07e7      	lsls	r7, r4, #31
 8016cd0:	d507      	bpl.n	8016ce2 <gpio_af_set+0x24>
 8016cd2:	009c      	lsls	r4, r3, #2
 8016cd4:	fa0c f704 	lsl.w	r7, ip, r4
 8016cd8:	ea26 0607 	bic.w	r6, r6, r7
 8016cdc:	fa01 f404 	lsl.w	r4, r1, r4
 8016ce0:	4326      	orrs	r6, r4
 8016ce2:	3301      	adds	r3, #1
 8016ce4:	2b08      	cmp	r3, #8
 8016ce6:	d1f0      	bne.n	8016cca <gpio_af_set+0xc>
 8016ce8:	2300      	movs	r3, #0
 8016cea:	f04f 0c0f 	mov.w	ip, #15
 8016cee:	f103 0408 	add.w	r4, r3, #8
 8016cf2:	fa22 f404 	lsr.w	r4, r2, r4
 8016cf6:	07e4      	lsls	r4, r4, #31
 8016cf8:	d507      	bpl.n	8016d0a <gpio_af_set+0x4c>
 8016cfa:	009c      	lsls	r4, r3, #2
 8016cfc:	fa0c f704 	lsl.w	r7, ip, r4
 8016d00:	ea25 0507 	bic.w	r5, r5, r7
 8016d04:	fa01 f404 	lsl.w	r4, r1, r4
 8016d08:	4325      	orrs	r5, r4
 8016d0a:	3301      	adds	r3, #1
 8016d0c:	2b08      	cmp	r3, #8
 8016d0e:	d1ee      	bne.n	8016cee <gpio_af_set+0x30>
 8016d10:	6206      	str	r6, [r0, #32]
 8016d12:	6245      	str	r5, [r0, #36]	; 0x24
 8016d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016d18 <pmu_backup_ldo_config>:
 8016d18:	4b04      	ldr	r3, [pc, #16]	; (8016d2c <pmu_backup_ldo_config+0x14>)
 8016d1a:	685a      	ldr	r2, [r3, #4]
 8016d1c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8016d20:	605a      	str	r2, [r3, #4]
 8016d22:	685a      	ldr	r2, [r3, #4]
 8016d24:	4310      	orrs	r0, r2
 8016d26:	6058      	str	r0, [r3, #4]
 8016d28:	4770      	bx	lr
 8016d2a:	bf00      	nop
 8016d2c:	40007000 	andmi	r7, r0, r0

08016d30 <pmu_backup_write_enable>:
 8016d30:	4a02      	ldr	r2, [pc, #8]	; (8016d3c <pmu_backup_write_enable+0xc>)
 8016d32:	6813      	ldr	r3, [r2, #0]
 8016d34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016d38:	6013      	str	r3, [r2, #0]
 8016d3a:	4770      	bx	lr
 8016d3c:	40007000 	andmi	r7, r0, r0

08016d40 <rcu_periph_clock_enable>:
 8016d40:	0983      	lsrs	r3, r0, #6
 8016d42:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8016d46:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8016d4a:	f000 001f 	and.w	r0, r0, #31
 8016d4e:	6819      	ldr	r1, [r3, #0]
 8016d50:	2201      	movs	r2, #1
 8016d52:	4082      	lsls	r2, r0
 8016d54:	430a      	orrs	r2, r1
 8016d56:	601a      	str	r2, [r3, #0]
 8016d58:	4770      	bx	lr

08016d5a <rcu_periph_clock_disable>:
 8016d5a:	0983      	lsrs	r3, r0, #6
 8016d5c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8016d60:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8016d64:	f000 001f 	and.w	r0, r0, #31
 8016d68:	681a      	ldr	r2, [r3, #0]
 8016d6a:	2101      	movs	r1, #1
 8016d6c:	4081      	lsls	r1, r0
 8016d6e:	ea22 0201 	bic.w	r2, r2, r1
 8016d72:	601a      	str	r2, [r3, #0]
 8016d74:	4770      	bx	lr

08016d76 <rcu_periph_reset_enable>:
 8016d76:	f7ff bfe3 	b.w	8016d40 <rcu_periph_clock_enable>

08016d7a <rcu_periph_reset_disable>:
 8016d7a:	f7ff bfee 	b.w	8016d5a <rcu_periph_clock_disable>
	...

08016d80 <rcu_ckout0_config>:
 8016d80:	4a04      	ldr	r2, [pc, #16]	; (8016d94 <rcu_ckout0_config+0x14>)
 8016d82:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8016d86:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 8016d8a:	4319      	orrs	r1, r3
 8016d8c:	4308      	orrs	r0, r1
 8016d8e:	f8c2 0808 	str.w	r0, [r2, #2056]	; 0x808
 8016d92:	4770      	bx	lr
 8016d94:	40023000 	andmi	r3, r2, r0

08016d98 <rcu_timer_clock_prescaler_config>:
 8016d98:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 8016d9c:	4298      	cmp	r0, r3
 8016d9e:	4b05      	ldr	r3, [pc, #20]	; (8016db4 <rcu_timer_clock_prescaler_config+0x1c>)
 8016da0:	f8d3 288c 	ldr.w	r2, [r3, #2188]	; 0x88c
 8016da4:	bf0c      	ite	eq
 8016da6:	f022 7280 	biceq.w	r2, r2, #16777216	; 0x1000000
 8016daa:	4302      	orrne	r2, r0
 8016dac:	f8c3 288c 	str.w	r2, [r3, #2188]	; 0x88c
 8016db0:	4770      	bx	lr
 8016db2:	bf00      	nop
 8016db4:	40023000 	andmi	r3, r2, r0

08016db8 <rcu_clock_freq_get>:
 8016db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016dba:	4b35      	ldr	r3, [pc, #212]	; (8016e90 <rcu_clock_freq_get+0xd8>)
 8016dbc:	b089      	sub	sp, #36	; 0x24
 8016dbe:	4604      	mov	r4, r0
 8016dc0:	ad04      	add	r5, sp, #16
 8016dc2:	f103 0610 	add.w	r6, r3, #16
 8016dc6:	461f      	mov	r7, r3
 8016dc8:	6818      	ldr	r0, [r3, #0]
 8016dca:	6859      	ldr	r1, [r3, #4]
 8016dcc:	462a      	mov	r2, r5
 8016dce:	c203      	stmia	r2!, {r0, r1}
 8016dd0:	3308      	adds	r3, #8
 8016dd2:	42b3      	cmp	r3, r6
 8016dd4:	4615      	mov	r5, r2
 8016dd6:	d1f7      	bne.n	8016dc8 <rcu_clock_freq_get+0x10>
 8016dd8:	6938      	ldr	r0, [r7, #16]
 8016dda:	6871      	ldr	r1, [r6, #4]
 8016ddc:	4a2d      	ldr	r2, [pc, #180]	; (8016e94 <rcu_clock_freq_get+0xdc>)
 8016dde:	466b      	mov	r3, sp
 8016de0:	c303      	stmia	r3!, {r0, r1}
 8016de2:	c303      	stmia	r3!, {r0, r1}
 8016de4:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8016de8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016dec:	2b01      	cmp	r3, #1
 8016dee:	d03f      	beq.n	8016e70 <rcu_clock_freq_get+0xb8>
 8016df0:	2b02      	cmp	r3, #2
 8016df2:	d13f      	bne.n	8016e74 <rcu_clock_freq_get+0xbc>
 8016df4:	f8d2 0804 	ldr.w	r0, [r2, #2052]	; 0x804
 8016df8:	f8d2 1804 	ldr.w	r1, [r2, #2052]	; 0x804
 8016dfc:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8016e00:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8016e04:	4d24      	ldr	r5, [pc, #144]	; (8016e98 <rcu_clock_freq_get+0xe0>)
 8016e06:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8016e0a:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 8016e0e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8016e12:	f103 0301 	add.w	r3, r3, #1
 8016e16:	4a21      	ldr	r2, [pc, #132]	; (8016e9c <rcu_clock_freq_get+0xe4>)
 8016e18:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8016e1c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016e20:	bf08      	it	eq
 8016e22:	462a      	moveq	r2, r5
 8016e24:	fbb2 f2f0 	udiv	r2, r2, r0
 8016e28:	434a      	muls	r2, r1
 8016e2a:	fbb2 f0f3 	udiv	r0, r2, r3
 8016e2e:	4919      	ldr	r1, [pc, #100]	; (8016e94 <rcu_clock_freq_get+0xdc>)
 8016e30:	f8d1 3808 	ldr.w	r3, [r1, #2056]	; 0x808
 8016e34:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8016e38:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8016e3c:	3220      	adds	r2, #32
 8016e3e:	446a      	add	r2, sp
 8016e40:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8016e44:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 8016e48:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8016e4c:	3320      	adds	r3, #32
 8016e4e:	446b      	add	r3, sp
 8016e50:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8016e54:	3220      	adds	r2, #32
 8016e56:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8016e5a:	446a      	add	r2, sp
 8016e5c:	fa20 f303 	lsr.w	r3, r0, r3
 8016e60:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8016e64:	2c03      	cmp	r4, #3
 8016e66:	d810      	bhi.n	8016e8a <rcu_clock_freq_get+0xd2>
 8016e68:	e8df f004 	tbb	[pc, r4]
 8016e6c:	0c090607 	stceq	6, cr0, [r9], {7}
 8016e70:	480a      	ldr	r0, [pc, #40]	; (8016e9c <rcu_clock_freq_get+0xe4>)
 8016e72:	e7dc      	b.n	8016e2e <rcu_clock_freq_get+0x76>
 8016e74:	4808      	ldr	r0, [pc, #32]	; (8016e98 <rcu_clock_freq_get+0xe0>)
 8016e76:	e7da      	b.n	8016e2e <rcu_clock_freq_get+0x76>
 8016e78:	4618      	mov	r0, r3
 8016e7a:	b009      	add	sp, #36	; 0x24
 8016e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016e7e:	fa23 f005 	lsr.w	r0, r3, r5
 8016e82:	e7fa      	b.n	8016e7a <rcu_clock_freq_get+0xc2>
 8016e84:	fa23 f002 	lsr.w	r0, r3, r2
 8016e88:	e7f7      	b.n	8016e7a <rcu_clock_freq_get+0xc2>
 8016e8a:	2000      	movs	r0, #0
 8016e8c:	e7f5      	b.n	8016e7a <rcu_clock_freq_get+0xc2>
 8016e8e:	bf00      	nop
 8016e90:	08018514 	stmdaeq	r1, {r2, r4, r8, sl, pc}
 8016e94:	40023000 	andmi	r3, r2, r0
 8016e98:	00f42400 	rscseq	r2, r4, r0, lsl #8
 8016e9c:	017d7840 	cmneq	sp, r0, asr #16

08016ea0 <syscfg_enet_phy_interface_config>:
 8016ea0:	4a04      	ldr	r2, [pc, #16]	; (8016eb4 <syscfg_enet_phy_interface_config+0x14>)
 8016ea2:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8016ea6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8016eaa:	4318      	orrs	r0, r3
 8016eac:	f8c2 0804 	str.w	r0, [r2, #2052]	; 0x804
 8016eb0:	4770      	bx	lr
 8016eb2:	bf00      	nop
 8016eb4:	40013000 	andmi	r3, r1, r0

08016eb8 <timer_deinit>:
 8016eb8:	b508      	push	{r3, lr}
 8016eba:	4b4e      	ldr	r3, [pc, #312]	; (8016ff4 <timer_deinit+0x13c>)
 8016ebc:	4298      	cmp	r0, r3
 8016ebe:	f000 8092 	beq.w	8016fe6 <timer_deinit+0x12e>
 8016ec2:	d822      	bhi.n	8016f0a <timer_deinit+0x52>
 8016ec4:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8016ec8:	4298      	cmp	r0, r3
 8016eca:	d062      	beq.n	8016f92 <timer_deinit+0xda>
 8016ecc:	d80b      	bhi.n	8016ee6 <timer_deinit+0x2e>
 8016ece:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016ed2:	4298      	cmp	r0, r3
 8016ed4:	d04f      	beq.n	8016f76 <timer_deinit+0xbe>
 8016ed6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016eda:	4298      	cmp	r0, r3
 8016edc:	d052      	beq.n	8016f84 <timer_deinit+0xcc>
 8016ede:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8016ee2:	d041      	beq.n	8016f68 <timer_deinit+0xb0>
 8016ee4:	bd08      	pop	{r3, pc}
 8016ee6:	4b44      	ldr	r3, [pc, #272]	; (8016ff8 <timer_deinit+0x140>)
 8016ee8:	4298      	cmp	r0, r3
 8016eea:	d059      	beq.n	8016fa0 <timer_deinit+0xe8>
 8016eec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016ef0:	4298      	cmp	r0, r3
 8016ef2:	d071      	beq.n	8016fd8 <timer_deinit+0x120>
 8016ef4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016ef8:	4298      	cmp	r0, r3
 8016efa:	d1f3      	bne.n	8016ee4 <timer_deinit+0x2c>
 8016efc:	f640 0004 	movw	r0, #2052	; 0x804
 8016f00:	f7ff ff39 	bl	8016d76 <rcu_periph_reset_enable>
 8016f04:	f640 0004 	movw	r0, #2052	; 0x804
 8016f08:	e02a      	b.n	8016f60 <timer_deinit+0xa8>
 8016f0a:	4b3c      	ldr	r3, [pc, #240]	; (8016ffc <timer_deinit+0x144>)
 8016f0c:	4298      	cmp	r0, r3
 8016f0e:	d055      	beq.n	8016fbc <timer_deinit+0x104>
 8016f10:	d812      	bhi.n	8016f38 <timer_deinit+0x80>
 8016f12:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 8016f16:	4298      	cmp	r0, r3
 8016f18:	d01c      	beq.n	8016f54 <timer_deinit+0x9c>
 8016f1a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016f1e:	4298      	cmp	r0, r3
 8016f20:	d045      	beq.n	8016fae <timer_deinit+0xf6>
 8016f22:	f5a3 4364 	sub.w	r3, r3, #58368	; 0xe400
 8016f26:	4298      	cmp	r0, r3
 8016f28:	d1dc      	bne.n	8016ee4 <timer_deinit+0x2c>
 8016f2a:	f640 0008 	movw	r0, #2056	; 0x808
 8016f2e:	f7ff ff22 	bl	8016d76 <rcu_periph_reset_enable>
 8016f32:	f640 0008 	movw	r0, #2056	; 0x808
 8016f36:	e013      	b.n	8016f60 <timer_deinit+0xa8>
 8016f38:	4b31      	ldr	r3, [pc, #196]	; (8017000 <timer_deinit+0x148>)
 8016f3a:	4298      	cmp	r0, r3
 8016f3c:	d045      	beq.n	8016fca <timer_deinit+0x112>
 8016f3e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016f42:	4298      	cmp	r0, r3
 8016f44:	d1ce      	bne.n	8016ee4 <timer_deinit+0x2c>
 8016f46:	f640 1012 	movw	r0, #2322	; 0x912
 8016f4a:	f7ff ff14 	bl	8016d76 <rcu_periph_reset_enable>
 8016f4e:	f640 1012 	movw	r0, #2322	; 0x912
 8016f52:	e005      	b.n	8016f60 <timer_deinit+0xa8>
 8016f54:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8016f58:	f7ff ff0d 	bl	8016d76 <rcu_periph_reset_enable>
 8016f5c:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8016f60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016f64:	f7ff bf09 	b.w	8016d7a <rcu_periph_reset_disable>
 8016f68:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8016f6c:	f7ff ff03 	bl	8016d76 <rcu_periph_reset_enable>
 8016f70:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8016f74:	e7f4      	b.n	8016f60 <timer_deinit+0xa8>
 8016f76:	f640 0001 	movw	r0, #2049	; 0x801
 8016f7a:	f7ff fefc 	bl	8016d76 <rcu_periph_reset_enable>
 8016f7e:	f640 0001 	movw	r0, #2049	; 0x801
 8016f82:	e7ed      	b.n	8016f60 <timer_deinit+0xa8>
 8016f84:	f640 0002 	movw	r0, #2050	; 0x802
 8016f88:	f7ff fef5 	bl	8016d76 <rcu_periph_reset_enable>
 8016f8c:	f640 0002 	movw	r0, #2050	; 0x802
 8016f90:	e7e6      	b.n	8016f60 <timer_deinit+0xa8>
 8016f92:	f640 0003 	movw	r0, #2051	; 0x803
 8016f96:	f7ff feee 	bl	8016d76 <rcu_periph_reset_enable>
 8016f9a:	f640 0003 	movw	r0, #2051	; 0x803
 8016f9e:	e7df      	b.n	8016f60 <timer_deinit+0xa8>
 8016fa0:	f640 0005 	movw	r0, #2053	; 0x805
 8016fa4:	f7ff fee7 	bl	8016d76 <rcu_periph_reset_enable>
 8016fa8:	f640 0005 	movw	r0, #2053	; 0x805
 8016fac:	e7d8      	b.n	8016f60 <timer_deinit+0xa8>
 8016fae:	f640 1001 	movw	r0, #2305	; 0x901
 8016fb2:	f7ff fee0 	bl	8016d76 <rcu_periph_reset_enable>
 8016fb6:	f640 1001 	movw	r0, #2305	; 0x901
 8016fba:	e7d1      	b.n	8016f60 <timer_deinit+0xa8>
 8016fbc:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8016fc0:	f7ff fed9 	bl	8016d76 <rcu_periph_reset_enable>
 8016fc4:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8016fc8:	e7ca      	b.n	8016f60 <timer_deinit+0xa8>
 8016fca:	f640 1011 	movw	r0, #2321	; 0x911
 8016fce:	f7ff fed2 	bl	8016d76 <rcu_periph_reset_enable>
 8016fd2:	f640 1011 	movw	r0, #2321	; 0x911
 8016fd6:	e7c3      	b.n	8016f60 <timer_deinit+0xa8>
 8016fd8:	f640 0006 	movw	r0, #2054	; 0x806
 8016fdc:	f7ff fecb 	bl	8016d76 <rcu_periph_reset_enable>
 8016fe0:	f640 0006 	movw	r0, #2054	; 0x806
 8016fe4:	e7bc      	b.n	8016f60 <timer_deinit+0xa8>
 8016fe6:	f640 0007 	movw	r0, #2055	; 0x807
 8016fea:	f7ff fec4 	bl	8016d76 <rcu_periph_reset_enable>
 8016fee:	f640 0007 	movw	r0, #2055	; 0x807
 8016ff2:	e7b5      	b.n	8016f60 <timer_deinit+0xa8>
 8016ff4:	40001c00 	andmi	r1, r0, r0, lsl #24
 8016ff8:	40001400 	andmi	r1, r0, r0, lsl #8
 8016ffc:	40014000 	andmi	r4, r1, r0
 8017000:	40014400 	andmi	r4, r1, r0, lsl #8

08017004 <timer_init>:
 8017004:	880b      	ldrh	r3, [r1, #0]
 8017006:	6283      	str	r3, [r0, #40]	; 0x28
 8017008:	4b1a      	ldr	r3, [pc, #104]	; (8017074 <timer_init+0x70>)
 801700a:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 801700e:	429a      	cmp	r2, r3
 8017010:	d004      	beq.n	801701c <timer_init+0x18>
 8017012:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8017016:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801701a:	d10b      	bne.n	8017034 <timer_init+0x30>
 801701c:	6803      	ldr	r3, [r0, #0]
 801701e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8017022:	6003      	str	r3, [r0, #0]
 8017024:	6802      	ldr	r2, [r0, #0]
 8017026:	884b      	ldrh	r3, [r1, #2]
 8017028:	4313      	orrs	r3, r2
 801702a:	6003      	str	r3, [r0, #0]
 801702c:	6802      	ldr	r2, [r0, #0]
 801702e:	888b      	ldrh	r3, [r1, #4]
 8017030:	4313      	orrs	r3, r2
 8017032:	6003      	str	r3, [r0, #0]
 8017034:	688b      	ldr	r3, [r1, #8]
 8017036:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017038:	4b0f      	ldr	r3, [pc, #60]	; (8017078 <timer_init+0x74>)
 801703a:	4298      	cmp	r0, r3
 801703c:	d003      	beq.n	8017046 <timer_init+0x42>
 801703e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017042:	4298      	cmp	r0, r3
 8017044:	d104      	bne.n	8017050 <timer_init+0x4c>
 8017046:	6943      	ldr	r3, [r0, #20]
 8017048:	f043 0301 	orr.w	r3, r3, #1
 801704c:	6143      	str	r3, [r0, #20]
 801704e:	4770      	bx	lr
 8017050:	6803      	ldr	r3, [r0, #0]
 8017052:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8017056:	6003      	str	r3, [r0, #0]
 8017058:	6802      	ldr	r2, [r0, #0]
 801705a:	88cb      	ldrh	r3, [r1, #6]
 801705c:	4313      	orrs	r3, r2
 801705e:	6003      	str	r3, [r0, #0]
 8017060:	4b04      	ldr	r3, [pc, #16]	; (8017074 <timer_init+0x70>)
 8017062:	4298      	cmp	r0, r3
 8017064:	d002      	beq.n	801706c <timer_init+0x68>
 8017066:	4b05      	ldr	r3, [pc, #20]	; (801707c <timer_init+0x78>)
 8017068:	4298      	cmp	r0, r3
 801706a:	d1ec      	bne.n	8017046 <timer_init+0x42>
 801706c:	7b0b      	ldrb	r3, [r1, #12]
 801706e:	6303      	str	r3, [r0, #48]	; 0x30
 8017070:	e7e9      	b.n	8017046 <timer_init+0x42>
 8017072:	bf00      	nop
 8017074:	40010000 	andmi	r0, r1, r0
 8017078:	40001000 	andmi	r1, r0, r0
 801707c:	40010400 	andmi	r0, r1, r0, lsl #8

08017080 <timer_enable>:
 8017080:	6803      	ldr	r3, [r0, #0]
 8017082:	f043 0301 	orr.w	r3, r3, #1
 8017086:	6003      	str	r3, [r0, #0]
 8017088:	4770      	bx	lr

0801708a <timer_interrupt_enable>:
 801708a:	68c3      	ldr	r3, [r0, #12]
 801708c:	4319      	orrs	r1, r3
 801708e:	60c1      	str	r1, [r0, #12]
 8017090:	4770      	bx	lr

08017092 <timer_interrupt_flag_clear>:
 8017092:	43c9      	mvns	r1, r1
 8017094:	6101      	str	r1, [r0, #16]
 8017096:	4770      	bx	lr

08017098 <timer_flag_clear>:
 8017098:	43c9      	mvns	r1, r1
 801709a:	6101      	str	r1, [r0, #16]
 801709c:	4770      	bx	lr

0801709e <timer_dma_enable>:
 801709e:	68c3      	ldr	r3, [r0, #12]
 80170a0:	4319      	orrs	r1, r3
 80170a2:	60c1      	str	r1, [r0, #12]
 80170a4:	4770      	bx	lr
	...

080170a8 <timer_channel_output_config>:
 80170a8:	2903      	cmp	r1, #3
 80170aa:	d83e      	bhi.n	801712a <timer_channel_output_config+0x82>
 80170ac:	e8df f011 	tbh	[pc, r1, lsl #1]
 80170b0:	003e0004 	eorseq	r0, lr, r4
 80170b4:	00bc007d 	adcseq	r0, ip, sp, ror r0
 80170b8:	6a03      	ldr	r3, [r0, #32]
 80170ba:	f023 0301 	bic.w	r3, r3, #1
 80170be:	6203      	str	r3, [r0, #32]
 80170c0:	6983      	ldr	r3, [r0, #24]
 80170c2:	f023 0303 	bic.w	r3, r3, #3
 80170c6:	6183      	str	r3, [r0, #24]
 80170c8:	6a01      	ldr	r1, [r0, #32]
 80170ca:	8813      	ldrh	r3, [r2, #0]
 80170cc:	430b      	orrs	r3, r1
 80170ce:	6203      	str	r3, [r0, #32]
 80170d0:	6a03      	ldr	r3, [r0, #32]
 80170d2:	f023 0302 	bic.w	r3, r3, #2
 80170d6:	6203      	str	r3, [r0, #32]
 80170d8:	6a01      	ldr	r1, [r0, #32]
 80170da:	8893      	ldrh	r3, [r2, #4]
 80170dc:	430b      	orrs	r3, r1
 80170de:	6203      	str	r3, [r0, #32]
 80170e0:	4b64      	ldr	r3, [pc, #400]	; (8017274 <timer_channel_output_config+0x1cc>)
 80170e2:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80170e6:	4299      	cmp	r1, r3
 80170e8:	d11f      	bne.n	801712a <timer_channel_output_config+0x82>
 80170ea:	6a03      	ldr	r3, [r0, #32]
 80170ec:	f023 0304 	bic.w	r3, r3, #4
 80170f0:	6203      	str	r3, [r0, #32]
 80170f2:	6a01      	ldr	r1, [r0, #32]
 80170f4:	8853      	ldrh	r3, [r2, #2]
 80170f6:	430b      	orrs	r3, r1
 80170f8:	6203      	str	r3, [r0, #32]
 80170fa:	6a03      	ldr	r3, [r0, #32]
 80170fc:	f023 0308 	bic.w	r3, r3, #8
 8017100:	6203      	str	r3, [r0, #32]
 8017102:	6a01      	ldr	r1, [r0, #32]
 8017104:	88d3      	ldrh	r3, [r2, #6]
 8017106:	430b      	orrs	r3, r1
 8017108:	6203      	str	r3, [r0, #32]
 801710a:	6843      	ldr	r3, [r0, #4]
 801710c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8017110:	6043      	str	r3, [r0, #4]
 8017112:	6841      	ldr	r1, [r0, #4]
 8017114:	8913      	ldrh	r3, [r2, #8]
 8017116:	430b      	orrs	r3, r1
 8017118:	6043      	str	r3, [r0, #4]
 801711a:	6843      	ldr	r3, [r0, #4]
 801711c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8017120:	6043      	str	r3, [r0, #4]
 8017122:	6841      	ldr	r1, [r0, #4]
 8017124:	8953      	ldrh	r3, [r2, #10]
 8017126:	430b      	orrs	r3, r1
 8017128:	6043      	str	r3, [r0, #4]
 801712a:	4770      	bx	lr
 801712c:	6a03      	ldr	r3, [r0, #32]
 801712e:	8811      	ldrh	r1, [r2, #0]
 8017130:	f023 0310 	bic.w	r3, r3, #16
 8017134:	6203      	str	r3, [r0, #32]
 8017136:	6983      	ldr	r3, [r0, #24]
 8017138:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801713c:	6183      	str	r3, [r0, #24]
 801713e:	6a03      	ldr	r3, [r0, #32]
 8017140:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8017144:	6203      	str	r3, [r0, #32]
 8017146:	6a03      	ldr	r3, [r0, #32]
 8017148:	8891      	ldrh	r1, [r2, #4]
 801714a:	f023 0320 	bic.w	r3, r3, #32
 801714e:	6203      	str	r3, [r0, #32]
 8017150:	6a03      	ldr	r3, [r0, #32]
 8017152:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8017156:	6203      	str	r3, [r0, #32]
 8017158:	4b46      	ldr	r3, [pc, #280]	; (8017274 <timer_channel_output_config+0x1cc>)
 801715a:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 801715e:	4299      	cmp	r1, r3
 8017160:	d1e3      	bne.n	801712a <timer_channel_output_config+0x82>
 8017162:	6a03      	ldr	r3, [r0, #32]
 8017164:	8851      	ldrh	r1, [r2, #2]
 8017166:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801716a:	6203      	str	r3, [r0, #32]
 801716c:	6a03      	ldr	r3, [r0, #32]
 801716e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8017172:	6203      	str	r3, [r0, #32]
 8017174:	6a03      	ldr	r3, [r0, #32]
 8017176:	88d1      	ldrh	r1, [r2, #6]
 8017178:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801717c:	6203      	str	r3, [r0, #32]
 801717e:	6a03      	ldr	r3, [r0, #32]
 8017180:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8017184:	6203      	str	r3, [r0, #32]
 8017186:	6843      	ldr	r3, [r0, #4]
 8017188:	8911      	ldrh	r1, [r2, #8]
 801718a:	8952      	ldrh	r2, [r2, #10]
 801718c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8017190:	6043      	str	r3, [r0, #4]
 8017192:	6843      	ldr	r3, [r0, #4]
 8017194:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 8017198:	6043      	str	r3, [r0, #4]
 801719a:	6843      	ldr	r3, [r0, #4]
 801719c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80171a0:	6043      	str	r3, [r0, #4]
 80171a2:	6843      	ldr	r3, [r0, #4]
 80171a4:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80171a8:	e7be      	b.n	8017128 <timer_channel_output_config+0x80>
 80171aa:	6a03      	ldr	r3, [r0, #32]
 80171ac:	8811      	ldrh	r1, [r2, #0]
 80171ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80171b2:	6203      	str	r3, [r0, #32]
 80171b4:	69c3      	ldr	r3, [r0, #28]
 80171b6:	f023 0303 	bic.w	r3, r3, #3
 80171ba:	61c3      	str	r3, [r0, #28]
 80171bc:	6a03      	ldr	r3, [r0, #32]
 80171be:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80171c2:	6203      	str	r3, [r0, #32]
 80171c4:	6a03      	ldr	r3, [r0, #32]
 80171c6:	8891      	ldrh	r1, [r2, #4]
 80171c8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80171cc:	6203      	str	r3, [r0, #32]
 80171ce:	6a03      	ldr	r3, [r0, #32]
 80171d0:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80171d4:	6203      	str	r3, [r0, #32]
 80171d6:	4b27      	ldr	r3, [pc, #156]	; (8017274 <timer_channel_output_config+0x1cc>)
 80171d8:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 80171dc:	4299      	cmp	r1, r3
 80171de:	d1a4      	bne.n	801712a <timer_channel_output_config+0x82>
 80171e0:	6a03      	ldr	r3, [r0, #32]
 80171e2:	8851      	ldrh	r1, [r2, #2]
 80171e4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80171e8:	6203      	str	r3, [r0, #32]
 80171ea:	6a03      	ldr	r3, [r0, #32]
 80171ec:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80171f0:	6203      	str	r3, [r0, #32]
 80171f2:	6a03      	ldr	r3, [r0, #32]
 80171f4:	88d1      	ldrh	r1, [r2, #6]
 80171f6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80171fa:	6203      	str	r3, [r0, #32]
 80171fc:	6a03      	ldr	r3, [r0, #32]
 80171fe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8017202:	6203      	str	r3, [r0, #32]
 8017204:	6843      	ldr	r3, [r0, #4]
 8017206:	8911      	ldrh	r1, [r2, #8]
 8017208:	8952      	ldrh	r2, [r2, #10]
 801720a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801720e:	6043      	str	r3, [r0, #4]
 8017210:	6843      	ldr	r3, [r0, #4]
 8017212:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8017216:	6043      	str	r3, [r0, #4]
 8017218:	6843      	ldr	r3, [r0, #4]
 801721a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801721e:	6043      	str	r3, [r0, #4]
 8017220:	6843      	ldr	r3, [r0, #4]
 8017222:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8017226:	e77f      	b.n	8017128 <timer_channel_output_config+0x80>
 8017228:	6a03      	ldr	r3, [r0, #32]
 801722a:	8811      	ldrh	r1, [r2, #0]
 801722c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8017230:	6203      	str	r3, [r0, #32]
 8017232:	69c3      	ldr	r3, [r0, #28]
 8017234:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8017238:	61c3      	str	r3, [r0, #28]
 801723a:	6a03      	ldr	r3, [r0, #32]
 801723c:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8017240:	6203      	str	r3, [r0, #32]
 8017242:	6a03      	ldr	r3, [r0, #32]
 8017244:	8891      	ldrh	r1, [r2, #4]
 8017246:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801724a:	6203      	str	r3, [r0, #32]
 801724c:	6a03      	ldr	r3, [r0, #32]
 801724e:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8017252:	6203      	str	r3, [r0, #32]
 8017254:	4b07      	ldr	r3, [pc, #28]	; (8017274 <timer_channel_output_config+0x1cc>)
 8017256:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 801725a:	4299      	cmp	r1, r3
 801725c:	f47f af65 	bne.w	801712a <timer_channel_output_config+0x82>
 8017260:	6843      	ldr	r3, [r0, #4]
 8017262:	8912      	ldrh	r2, [r2, #8]
 8017264:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8017268:	6043      	str	r3, [r0, #4]
 801726a:	6843      	ldr	r3, [r0, #4]
 801726c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8017270:	e75a      	b.n	8017128 <timer_channel_output_config+0x80>
 8017272:	bf00      	nop
 8017274:	40010000 	andmi	r0, r1, r0

08017278 <timer_channel_output_mode_config>:
 8017278:	2903      	cmp	r1, #3
 801727a:	d81a      	bhi.n	80172b2 <timer_channel_output_mode_config+0x3a>
 801727c:	e8df f001 	tbb	[pc, r1]
 8017280:	1a120a02 	bne	8499a90 <__exidx_end+0x47d9d0>
 8017284:	6983      	ldr	r3, [r0, #24]
 8017286:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801728a:	6183      	str	r3, [r0, #24]
 801728c:	6983      	ldr	r3, [r0, #24]
 801728e:	4313      	orrs	r3, r2
 8017290:	6183      	str	r3, [r0, #24]
 8017292:	4770      	bx	lr
 8017294:	6983      	ldr	r3, [r0, #24]
 8017296:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801729a:	6183      	str	r3, [r0, #24]
 801729c:	6983      	ldr	r3, [r0, #24]
 801729e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80172a2:	e7f5      	b.n	8017290 <timer_channel_output_mode_config+0x18>
 80172a4:	69c3      	ldr	r3, [r0, #28]
 80172a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80172aa:	61c3      	str	r3, [r0, #28]
 80172ac:	69c3      	ldr	r3, [r0, #28]
 80172ae:	4313      	orrs	r3, r2
 80172b0:	61c3      	str	r3, [r0, #28]
 80172b2:	4770      	bx	lr
 80172b4:	69c3      	ldr	r3, [r0, #28]
 80172b6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80172ba:	61c3      	str	r3, [r0, #28]
 80172bc:	69c3      	ldr	r3, [r0, #28]
 80172be:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80172c2:	e7f5      	b.n	80172b0 <timer_channel_output_mode_config+0x38>

080172c4 <timer_channel_output_pulse_value_config>:
 80172c4:	2903      	cmp	r1, #3
 80172c6:	d80a      	bhi.n	80172de <timer_channel_output_pulse_value_config+0x1a>
 80172c8:	e8df f001 	tbb	[pc, r1]
 80172cc:	08060402 	stmdaeq	r6, {r1, sl}
 80172d0:	6342      	str	r2, [r0, #52]	; 0x34
 80172d2:	4770      	bx	lr
 80172d4:	6382      	str	r2, [r0, #56]	; 0x38
 80172d6:	4770      	bx	lr
 80172d8:	63c2      	str	r2, [r0, #60]	; 0x3c
 80172da:	4770      	bx	lr
 80172dc:	6402      	str	r2, [r0, #64]	; 0x40
 80172de:	4770      	bx	lr

080172e0 <timer_channel_output_shadow_config>:
 80172e0:	2903      	cmp	r1, #3
 80172e2:	d81a      	bhi.n	801731a <timer_channel_output_shadow_config+0x3a>
 80172e4:	e8df f001 	tbb	[pc, r1]
 80172e8:	1a120a02 	bne	8499af8 <__exidx_end+0x47da38>
 80172ec:	6983      	ldr	r3, [r0, #24]
 80172ee:	f023 0308 	bic.w	r3, r3, #8
 80172f2:	6183      	str	r3, [r0, #24]
 80172f4:	6983      	ldr	r3, [r0, #24]
 80172f6:	4313      	orrs	r3, r2
 80172f8:	6183      	str	r3, [r0, #24]
 80172fa:	4770      	bx	lr
 80172fc:	6983      	ldr	r3, [r0, #24]
 80172fe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017302:	6183      	str	r3, [r0, #24]
 8017304:	6983      	ldr	r3, [r0, #24]
 8017306:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801730a:	e7f5      	b.n	80172f8 <timer_channel_output_shadow_config+0x18>
 801730c:	69c3      	ldr	r3, [r0, #28]
 801730e:	f023 0308 	bic.w	r3, r3, #8
 8017312:	61c3      	str	r3, [r0, #28]
 8017314:	69c3      	ldr	r3, [r0, #28]
 8017316:	4313      	orrs	r3, r2
 8017318:	61c3      	str	r3, [r0, #28]
 801731a:	4770      	bx	lr
 801731c:	69c3      	ldr	r3, [r0, #28]
 801731e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017322:	61c3      	str	r3, [r0, #28]
 8017324:	69c3      	ldr	r3, [r0, #28]
 8017326:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801732a:	e7f5      	b.n	8017318 <timer_channel_output_shadow_config+0x38>

0801732c <timer_input_trigger_source_select>:
 801732c:	6883      	ldr	r3, [r0, #8]
 801732e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8017332:	6083      	str	r3, [r0, #8]
 8017334:	6883      	ldr	r3, [r0, #8]
 8017336:	4319      	orrs	r1, r3
 8017338:	6081      	str	r1, [r0, #8]
 801733a:	4770      	bx	lr

0801733c <timer_master_output_trigger_source_select>:
 801733c:	6843      	ldr	r3, [r0, #4]
 801733e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8017342:	6043      	str	r3, [r0, #4]
 8017344:	6843      	ldr	r3, [r0, #4]
 8017346:	4319      	orrs	r1, r3
 8017348:	6041      	str	r1, [r0, #4]
 801734a:	4770      	bx	lr

0801734c <timer_slave_mode_select>:
 801734c:	6883      	ldr	r3, [r0, #8]
 801734e:	f023 0307 	bic.w	r3, r3, #7
 8017352:	6083      	str	r3, [r0, #8]
 8017354:	6883      	ldr	r3, [r0, #8]
 8017356:	4319      	orrs	r1, r3
 8017358:	6081      	str	r1, [r0, #8]
 801735a:	4770      	bx	lr

0801735c <timer_master_slave_mode_config>:
 801735c:	b921      	cbnz	r1, 8017368 <timer_master_slave_mode_config+0xc>
 801735e:	6883      	ldr	r3, [r0, #8]
 8017360:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8017364:	6083      	str	r3, [r0, #8]
 8017366:	4770      	bx	lr
 8017368:	2901      	cmp	r1, #1
 801736a:	d1fc      	bne.n	8017366 <timer_master_slave_mode_config+0xa>
 801736c:	6883      	ldr	r3, [r0, #8]
 801736e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017372:	e7f7      	b.n	8017364 <timer_master_slave_mode_config+0x8>

08017374 <usart_deinit>:
 8017374:	b508      	push	{r3, lr}
 8017376:	4b2d      	ldr	r3, [pc, #180]	; (801742c <usart_deinit+0xb8>)
 8017378:	4298      	cmp	r0, r3
 801737a:	d050      	beq.n	801741e <usart_deinit+0xaa>
 801737c:	d817      	bhi.n	80173ae <usart_deinit+0x3a>
 801737e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8017382:	4298      	cmp	r0, r3
 8017384:	d044      	beq.n	8017410 <usart_deinit+0x9c>
 8017386:	d808      	bhi.n	801739a <usart_deinit+0x26>
 8017388:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801738c:	4298      	cmp	r0, r3
 801738e:	d02a      	beq.n	80173e6 <usart_deinit+0x72>
 8017390:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017394:	4298      	cmp	r0, r3
 8017396:	d02d      	beq.n	80173f4 <usart_deinit+0x80>
 8017398:	bd08      	pop	{r3, pc}
 801739a:	4b25      	ldr	r3, [pc, #148]	; (8017430 <usart_deinit+0xbc>)
 801739c:	4298      	cmp	r0, r3
 801739e:	d1fb      	bne.n	8017398 <usart_deinit+0x24>
 80173a0:	f640 0014 	movw	r0, #2068	; 0x814
 80173a4:	f7ff fce7 	bl	8016d76 <rcu_periph_reset_enable>
 80173a8:	f640 0014 	movw	r0, #2068	; 0x814
 80173ac:	e017      	b.n	80173de <usart_deinit+0x6a>
 80173ae:	4b21      	ldr	r3, [pc, #132]	; (8017434 <usart_deinit+0xc0>)
 80173b0:	4298      	cmp	r0, r3
 80173b2:	d00e      	beq.n	80173d2 <usart_deinit+0x5e>
 80173b4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80173b8:	4298      	cmp	r0, r3
 80173ba:	d022      	beq.n	8017402 <usart_deinit+0x8e>
 80173bc:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 80173c0:	4298      	cmp	r0, r3
 80173c2:	d1e9      	bne.n	8017398 <usart_deinit+0x24>
 80173c4:	f640 001f 	movw	r0, #2079	; 0x81f
 80173c8:	f7ff fcd5 	bl	8016d76 <rcu_periph_reset_enable>
 80173cc:	f640 001f 	movw	r0, #2079	; 0x81f
 80173d0:	e005      	b.n	80173de <usart_deinit+0x6a>
 80173d2:	f640 1004 	movw	r0, #2308	; 0x904
 80173d6:	f7ff fcce 	bl	8016d76 <rcu_periph_reset_enable>
 80173da:	f640 1004 	movw	r0, #2308	; 0x904
 80173de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80173e2:	f7ff bcca 	b.w	8016d7a <rcu_periph_reset_disable>
 80173e6:	f640 0011 	movw	r0, #2065	; 0x811
 80173ea:	f7ff fcc4 	bl	8016d76 <rcu_periph_reset_enable>
 80173ee:	f640 0011 	movw	r0, #2065	; 0x811
 80173f2:	e7f4      	b.n	80173de <usart_deinit+0x6a>
 80173f4:	f640 0012 	movw	r0, #2066	; 0x812
 80173f8:	f7ff fcbd 	bl	8016d76 <rcu_periph_reset_enable>
 80173fc:	f640 0012 	movw	r0, #2066	; 0x812
 8017400:	e7ed      	b.n	80173de <usart_deinit+0x6a>
 8017402:	f640 1005 	movw	r0, #2309	; 0x905
 8017406:	f7ff fcb6 	bl	8016d76 <rcu_periph_reset_enable>
 801740a:	f640 1005 	movw	r0, #2309	; 0x905
 801740e:	e7e6      	b.n	80173de <usart_deinit+0x6a>
 8017410:	f640 0013 	movw	r0, #2067	; 0x813
 8017414:	f7ff fcaf 	bl	8016d76 <rcu_periph_reset_enable>
 8017418:	f640 0013 	movw	r0, #2067	; 0x813
 801741c:	e7df      	b.n	80173de <usart_deinit+0x6a>
 801741e:	f640 001e 	movw	r0, #2078	; 0x81e
 8017422:	f7ff fca8 	bl	8016d76 <rcu_periph_reset_enable>
 8017426:	f640 001e 	movw	r0, #2078	; 0x81e
 801742a:	e7d8      	b.n	80173de <usart_deinit+0x6a>
 801742c:	40007800 	andmi	r7, r0, r0, lsl #16
 8017430:	40005000 	andmi	r5, r0, r0
 8017434:	40011000 	andmi	r1, r1, r0

08017438 <usart_baudrate_set>:
 8017438:	b538      	push	{r3, r4, r5, lr}
 801743a:	4b1e      	ldr	r3, [pc, #120]	; (80174b4 <usart_baudrate_set+0x7c>)
 801743c:	4298      	cmp	r0, r3
 801743e:	4604      	mov	r4, r0
 8017440:	460d      	mov	r5, r1
 8017442:	d02e      	beq.n	80174a2 <usart_baudrate_set+0x6a>
 8017444:	d821      	bhi.n	801748a <usart_baudrate_set+0x52>
 8017446:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801744a:	4298      	cmp	r0, r3
 801744c:	d029      	beq.n	80174a2 <usart_baudrate_set+0x6a>
 801744e:	d81a      	bhi.n	8017486 <usart_baudrate_set+0x4e>
 8017450:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8017454:	4298      	cmp	r0, r3
 8017456:	d024      	beq.n	80174a2 <usart_baudrate_set+0x6a>
 8017458:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801745c:	429c      	cmp	r4, r3
 801745e:	d020      	beq.n	80174a2 <usart_baudrate_set+0x6a>
 8017460:	2000      	movs	r0, #0
 8017462:	68e2      	ldr	r2, [r4, #12]
 8017464:	0412      	lsls	r2, r2, #16
 8017466:	ea4f 0355 	mov.w	r3, r5, lsr #1
 801746a:	d51c      	bpl.n	80174a6 <usart_baudrate_set+0x6e>
 801746c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8017470:	fbb3 f1f5 	udiv	r1, r3, r5
 8017474:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8017478:	f021 010f 	bic.w	r1, r1, #15
 801747c:	0409      	lsls	r1, r1, #16
 801747e:	0c09      	lsrs	r1, r1, #16
 8017480:	430b      	orrs	r3, r1
 8017482:	60a3      	str	r3, [r4, #8]
 8017484:	bd38      	pop	{r3, r4, r5, pc}
 8017486:	4b0c      	ldr	r3, [pc, #48]	; (80174b8 <usart_baudrate_set+0x80>)
 8017488:	e7e8      	b.n	801745c <usart_baudrate_set+0x24>
 801748a:	4b0c      	ldr	r3, [pc, #48]	; (80174bc <usart_baudrate_set+0x84>)
 801748c:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8017490:	429a      	cmp	r2, r3
 8017492:	d002      	beq.n	801749a <usart_baudrate_set+0x62>
 8017494:	f5a3 4314 	sub.w	r3, r3, #37888	; 0x9400
 8017498:	e7e0      	b.n	801745c <usart_baudrate_set+0x24>
 801749a:	2003      	movs	r0, #3
 801749c:	f7ff fc8c 	bl	8016db8 <rcu_clock_freq_get>
 80174a0:	e7df      	b.n	8017462 <usart_baudrate_set+0x2a>
 80174a2:	2002      	movs	r0, #2
 80174a4:	e7fa      	b.n	801749c <usart_baudrate_set+0x64>
 80174a6:	4403      	add	r3, r0
 80174a8:	fbb3 f1f5 	udiv	r1, r3, r5
 80174ac:	b289      	uxth	r1, r1
 80174ae:	60a1      	str	r1, [r4, #8]
 80174b0:	e7e8      	b.n	8017484 <usart_baudrate_set+0x4c>
 80174b2:	bf00      	nop
 80174b4:	40007800 	andmi	r7, r0, r0, lsl #16
 80174b8:	40005000 	andmi	r5, r0, r0
 80174bc:	40011000 	andmi	r1, r1, r0

080174c0 <usart_parity_config>:
 80174c0:	68c3      	ldr	r3, [r0, #12]
 80174c2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80174c6:	60c3      	str	r3, [r0, #12]
 80174c8:	68c3      	ldr	r3, [r0, #12]
 80174ca:	4319      	orrs	r1, r3
 80174cc:	60c1      	str	r1, [r0, #12]
 80174ce:	4770      	bx	lr

080174d0 <usart_word_length_set>:
 80174d0:	68c3      	ldr	r3, [r0, #12]
 80174d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80174d6:	60c3      	str	r3, [r0, #12]
 80174d8:	68c3      	ldr	r3, [r0, #12]
 80174da:	4319      	orrs	r1, r3
 80174dc:	60c1      	str	r1, [r0, #12]
 80174de:	4770      	bx	lr

080174e0 <usart_stop_bit_set>:
 80174e0:	6903      	ldr	r3, [r0, #16]
 80174e2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80174e6:	6103      	str	r3, [r0, #16]
 80174e8:	6903      	ldr	r3, [r0, #16]
 80174ea:	4319      	orrs	r1, r3
 80174ec:	6101      	str	r1, [r0, #16]
 80174ee:	4770      	bx	lr

080174f0 <usart_transmit_config>:
 80174f0:	68c3      	ldr	r3, [r0, #12]
 80174f2:	f023 0308 	bic.w	r3, r3, #8
 80174f6:	4319      	orrs	r1, r3
 80174f8:	60c1      	str	r1, [r0, #12]
 80174fa:	4770      	bx	lr

080174fc <usart_receive_config>:
 80174fc:	68c3      	ldr	r3, [r0, #12]
 80174fe:	f023 0304 	bic.w	r3, r3, #4
 8017502:	4319      	orrs	r1, r3
 8017504:	60c1      	str	r1, [r0, #12]
 8017506:	4770      	bx	lr

08017508 <usart_hardware_flow_rts_config>:
 8017508:	6943      	ldr	r3, [r0, #20]
 801750a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801750e:	4319      	orrs	r1, r3
 8017510:	6141      	str	r1, [r0, #20]
 8017512:	4770      	bx	lr

08017514 <usart_hardware_flow_cts_config>:
 8017514:	6943      	ldr	r3, [r0, #20]
 8017516:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801751a:	4319      	orrs	r1, r3
 801751c:	6141      	str	r1, [r0, #20]
 801751e:	4770      	bx	lr

08017520 <usart_dma_transmit_config>:
 8017520:	6943      	ldr	r3, [r0, #20]
 8017522:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017526:	4319      	orrs	r1, r3
 8017528:	6141      	str	r1, [r0, #20]
 801752a:	4770      	bx	lr

0801752c <usart_flag_get>:
 801752c:	098b      	lsrs	r3, r1, #6
 801752e:	f001 011f 	and.w	r1, r1, #31
 8017532:	581a      	ldr	r2, [r3, r0]
 8017534:	2301      	movs	r3, #1
 8017536:	408b      	lsls	r3, r1
 8017538:	4213      	tst	r3, r2
 801753a:	bf14      	ite	ne
 801753c:	2001      	movne	r0, #1
 801753e:	2000      	moveq	r0, #0
 8017540:	4770      	bx	lr

08017542 <usart_flag_clear>:
 8017542:	b510      	push	{r4, lr}
 8017544:	098c      	lsrs	r4, r1, #6
 8017546:	2201      	movs	r2, #1
 8017548:	5823      	ldr	r3, [r4, r0]
 801754a:	f001 011f 	and.w	r1, r1, #31
 801754e:	408a      	lsls	r2, r1
 8017550:	ea23 0302 	bic.w	r3, r3, r2
 8017554:	5023      	str	r3, [r4, r0]
 8017556:	bd10      	pop	{r4, pc}

08017558 <usart_interrupt_enable>:
 8017558:	098a      	lsrs	r2, r1, #6
 801755a:	b510      	push	{r4, lr}
 801755c:	f001 011f 	and.w	r1, r1, #31
 8017560:	5814      	ldr	r4, [r2, r0]
 8017562:	2301      	movs	r3, #1
 8017564:	408b      	lsls	r3, r1
 8017566:	4323      	orrs	r3, r4
 8017568:	5013      	str	r3, [r2, r0]
 801756a:	bd10      	pop	{r4, pc}

0801756c <usart_interrupt_disable>:
 801756c:	f7ff bfe9 	b.w	8017542 <usart_flag_clear>

08017570 <usart_interrupt_flag_clear>:
 8017570:	b510      	push	{r4, lr}
 8017572:	0d8c      	lsrs	r4, r1, #22
 8017574:	2201      	movs	r2, #1
 8017576:	5823      	ldr	r3, [r4, r0]
 8017578:	f3c1 4104 	ubfx	r1, r1, #16, #5
 801757c:	408a      	lsls	r2, r1
 801757e:	ea23 0302 	bic.w	r3, r3, r2
 8017582:	5023      	str	r3, [r4, r0]
 8017584:	bd10      	pop	{r4, pc}
	...

08017588 <emac_eth_recv>:
 8017588:	b538      	push	{r3, r4, r5, lr}
 801758a:	4605      	mov	r5, r0
 801758c:	f7ff fada 	bl	8016b44 <enet_rxframe_size_get>
 8017590:	4604      	mov	r4, r0
 8017592:	b138      	cbz	r0, 80175a4 <emac_eth_recv+0x1c>
 8017594:	4b05      	ldr	r3, [pc, #20]	; (80175ac <emac_eth_recv+0x24>)
 8017596:	2105      	movs	r1, #5
 8017598:	6818      	ldr	r0, [r3, #0]
 801759a:	f7ff fa77 	bl	8016a8c <enet_desc_information_get>
 801759e:	6028      	str	r0, [r5, #0]
 80175a0:	4620      	mov	r0, r4
 80175a2:	bd38      	pop	{r3, r4, r5, pc}
 80175a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80175a8:	e7fb      	b.n	80175a2 <emac_eth_recv+0x1a>
 80175aa:	bf00      	nop
 80175ac:	2000fda0 	andcs	pc, r0, r0, lsr #27

080175b0 <emac_free_pkt>:
 80175b0:	2100      	movs	r1, #0
 80175b2:	4608      	mov	r0, r1
 80175b4:	f7fe bf86 	b.w	80164c4 <enet_frame_receive>

080175b8 <emac_eth_send>:
 80175b8:	f7fe bfd0 	b.w	801655c <enet_frame_transmit>

080175bc <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 80175bc:	2801      	cmp	r0, #1
 80175be:	bf9c      	itt	ls
 80175c0:	4b01      	ldrls	r3, [pc, #4]	; (80175c8 <bkp_data_write(bkp_data_register_enum, unsigned short)+0xc>)
 80175c2:	f823 1010 	strhls.w	r1, [r3, r0, lsl #1]
 80175c6:	4770      	bx	lr
 80175c8:	40024010 	andmi	r4, r2, r0, lsl r0

080175cc <bkp_data_read(bkp_data_register_enum)>:
 80175cc:	2801      	cmp	r0, #1
 80175ce:	bf9d      	ittte	ls
 80175d0:	4b02      	ldrls	r3, [pc, #8]	; (80175dc <bkp_data_read(bkp_data_register_enum)+0x10>)
 80175d2:	f833 0010 	ldrhls.w	r0, [r3, r0, lsl #1]
 80175d6:	b280      	uxthls	r0, r0
 80175d8:	2000      	movhi	r0, #0
 80175da:	4770      	bx	lr
 80175dc:	40024010 	andmi	r4, r2, r0, lsl r0

080175e0 <gd32_adc_init()>:
 80175e0:	b510      	push	{r4, lr}
 80175e2:	f241 1008 	movw	r0, #4360	; 0x1108
 80175e6:	4c24      	ldr	r4, [pc, #144]	; (8017678 <gd32_adc_init()+0x98>)
 80175e8:	f7ff fbaa 	bl	8016d40 <rcu_periph_clock_enable>
 80175ec:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80175f0:	f000 fdb6 	bl	8018160 <adc_clock_config>
 80175f4:	4620      	mov	r0, r4
 80175f6:	2203      	movs	r2, #3
 80175f8:	2102      	movs	r1, #2
 80175fa:	f000 fe33 	bl	8018264 <adc_channel_length_config>
 80175fe:	4620      	mov	r0, r4
 8017600:	2306      	movs	r3, #6
 8017602:	2210      	movs	r2, #16
 8017604:	2100      	movs	r1, #0
 8017606:	f000 fe4a 	bl	801829e <adc_inserted_channel_config>
 801760a:	4620      	mov	r0, r4
 801760c:	2306      	movs	r3, #6
 801760e:	2211      	movs	r2, #17
 8017610:	2101      	movs	r1, #1
 8017612:	f000 fe44 	bl	801829e <adc_inserted_channel_config>
 8017616:	2306      	movs	r3, #6
 8017618:	4620      	mov	r0, r4
 801761a:	2212      	movs	r2, #18
 801761c:	2102      	movs	r1, #2
 801761e:	f000 fe3e 	bl	801829e <adc_inserted_channel_config>
 8017622:	2200      	movs	r2, #0
 8017624:	4620      	mov	r0, r4
 8017626:	2102      	movs	r1, #2
 8017628:	f000 fe68 	bl	80182fc <adc_external_trigger_config>
 801762c:	4620      	mov	r0, r4
 801762e:	2100      	movs	r1, #0
 8017630:	f000 fdce 	bl	80181d0 <adc_data_alignment_config>
 8017634:	2201      	movs	r2, #1
 8017636:	4620      	mov	r0, r4
 8017638:	f44f 7180 	mov.w	r1, #256	; 0x100
 801763c:	f000 fda0 	bl	8018180 <adc_special_function_config>
 8017640:	2101      	movs	r1, #1
 8017642:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8017646:	f000 fde5 	bl	8018214 <adc_channel_16_to_18>
 801764a:	2101      	movs	r1, #1
 801764c:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8017650:	f000 fde0 	bl	8018214 <adc_channel_16_to_18>
 8017654:	4620      	mov	r0, r4
 8017656:	f000 fdc4 	bl	80181e2 <adc_enable>
 801765a:	2100      	movs	r1, #0
 801765c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8017660:	f000 fbc8 	bl	8017df4 <udelay(unsigned int, unsigned int)>
 8017664:	4620      	mov	r0, r4
 8017666:	f000 fdc4 	bl	80181f2 <adc_calibration_enable>
 801766a:	4620      	mov	r0, r4
 801766c:	2102      	movs	r1, #2
 801766e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017672:	f000 be59 	b.w	8018328 <adc_software_trigger_enable>
 8017676:	bf00      	nop
 8017678:	40012000 	andmi	r2, r1, r0

0801767c <_stop() [clone .isra.0]>:
 801767c:	b508      	push	{r3, lr}
 801767e:	4806      	ldr	r0, [pc, #24]	; (8017698 <_stop() [clone .isra.0]+0x1c>)
 8017680:	f000 fee0 	bl	8018444 <i2c_stop_on_bus>
 8017684:	4905      	ldr	r1, [pc, #20]	; (801769c <_stop() [clone .isra.0]+0x20>)
 8017686:	f640 73ff 	movw	r3, #4095	; 0xfff
 801768a:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801768e:	0592      	lsls	r2, r2, #22
 8017690:	d501      	bpl.n	8017696 <_stop() [clone .isra.0]+0x1a>
 8017692:	3b01      	subs	r3, #1
 8017694:	d1f9      	bne.n	801768a <_stop() [clone .isra.0]+0xe>
 8017696:	bd08      	pop	{r3, pc}
 8017698:	40005400 	andmi	r5, r0, r0, lsl #8
 801769c:	40005000 	andmi	r5, r0, r0

080176a0 <gd32_i2c_begin>:
 80176a0:	b508      	push	{r3, lr}
 80176a2:	f241 0015 	movw	r0, #4117	; 0x1015
 80176a6:	f7ff fb4b 	bl	8016d40 <rcu_periph_clock_enable>
 80176aa:	f640 4001 	movw	r0, #3073	; 0xc01
 80176ae:	f7ff fb47 	bl	8016d40 <rcu_periph_clock_enable>
 80176b2:	f640 4001 	movw	r0, #3073	; 0xc01
 80176b6:	f7ff fb43 	bl	8016d40 <rcu_periph_clock_enable>
 80176ba:	481b      	ldr	r0, [pc, #108]	; (8017728 <gd32_i2c_begin+0x88>)
 80176bc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80176c0:	2104      	movs	r1, #4
 80176c2:	f7ff fafc 	bl	8016cbe <gpio_af_set>
 80176c6:	4818      	ldr	r0, [pc, #96]	; (8017728 <gd32_i2c_begin+0x88>)
 80176c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80176cc:	2104      	movs	r1, #4
 80176ce:	f7ff faf6 	bl	8016cbe <gpio_af_set>
 80176d2:	4815      	ldr	r0, [pc, #84]	; (8017728 <gd32_i2c_begin+0x88>)
 80176d4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80176d8:	2201      	movs	r2, #1
 80176da:	2102      	movs	r1, #2
 80176dc:	f7ff fab4 	bl	8016c48 <gpio_mode_set>
 80176e0:	4811      	ldr	r0, [pc, #68]	; (8017728 <gd32_i2c_begin+0x88>)
 80176e2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80176e6:	2202      	movs	r2, #2
 80176e8:	2101      	movs	r1, #1
 80176ea:	f7ff facd 	bl	8016c88 <gpio_output_options_set>
 80176ee:	480e      	ldr	r0, [pc, #56]	; (8017728 <gd32_i2c_begin+0x88>)
 80176f0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80176f4:	2201      	movs	r2, #1
 80176f6:	2102      	movs	r1, #2
 80176f8:	f7ff faa6 	bl	8016c48 <gpio_mode_set>
 80176fc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017700:	4809      	ldr	r0, [pc, #36]	; (8017728 <gd32_i2c_begin+0x88>)
 8017702:	2202      	movs	r2, #2
 8017704:	2101      	movs	r1, #1
 8017706:	f7ff fabf 	bl	8016c88 <gpio_output_options_set>
 801770a:	4908      	ldr	r1, [pc, #32]	; (801772c <gd32_i2c_begin+0x8c>)
 801770c:	4808      	ldr	r0, [pc, #32]	; (8017730 <gd32_i2c_begin+0x90>)
 801770e:	2200      	movs	r2, #0
 8017710:	f000 fe18 	bl	8018344 <i2c_clock_config>
 8017714:	4806      	ldr	r0, [pc, #24]	; (8017730 <gd32_i2c_begin+0x90>)
 8017716:	f000 fe8b 	bl	8018430 <i2c_enable>
 801771a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801771e:	4804      	ldr	r0, [pc, #16]	; (8017730 <gd32_i2c_begin+0x90>)
 8017720:	2101      	movs	r1, #1
 8017722:	f000 be6b 	b.w	80183fc <i2c_ack_config>
 8017726:	bf00      	nop
 8017728:	40020400 	andmi	r0, r2, r0, lsl #8
 801772c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8017730:	40005400 	andmi	r5, r0, r0, lsl #8

08017734 <gd32_i2c_set_baudrate>:
 8017734:	4601      	mov	r1, r0
 8017736:	2200      	movs	r2, #0
 8017738:	4801      	ldr	r0, [pc, #4]	; (8017740 <gd32_i2c_set_baudrate+0xc>)
 801773a:	f000 be03 	b.w	8018344 <i2c_clock_config>
 801773e:	bf00      	nop
 8017740:	40005400 	andmi	r5, r0, r0, lsl #8

08017744 <gd32_i2c_set_address>:
 8017744:	4b01      	ldr	r3, [pc, #4]	; (801774c <gd32_i2c_set_address+0x8>)
 8017746:	0040      	lsls	r0, r0, #1
 8017748:	7018      	strb	r0, [r3, #0]
 801774a:	4770      	bx	lr
 801774c:	2002d31c 	andcs	sp, r2, ip, lsl r3

08017750 <gd32_i2c_write>:
 8017750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017752:	4e30      	ldr	r6, [pc, #192]	; (8017814 <gd32_i2c_write+0xc4>)
 8017754:	4604      	mov	r4, r0
 8017756:	460f      	mov	r7, r1
 8017758:	f640 75ff 	movw	r5, #4095	; 0xfff
 801775c:	f240 6101 	movw	r1, #1537	; 0x601
 8017760:	4630      	mov	r0, r6
 8017762:	f000 fe79 	bl	8018458 <i2c_flag_get>
 8017766:	b9b0      	cbnz	r0, 8017796 <gd32_i2c_write+0x46>
 8017768:	482a      	ldr	r0, [pc, #168]	; (8017814 <gd32_i2c_write+0xc4>)
 801776a:	4e2a      	ldr	r6, [pc, #168]	; (8017814 <gd32_i2c_write+0xc4>)
 801776c:	f000 fe65 	bl	801843a <i2c_start_on_bus>
 8017770:	f640 75ff 	movw	r5, #4095	; 0xfff
 8017774:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8017778:	4630      	mov	r0, r6
 801777a:	f000 fe6d 	bl	8018458 <i2c_flag_get>
 801777e:	b190      	cbz	r0, 80177a6 <gd32_i2c_write+0x56>
 8017780:	4b25      	ldr	r3, [pc, #148]	; (8017818 <gd32_i2c_write+0xc8>)
 8017782:	4824      	ldr	r0, [pc, #144]	; (8017814 <gd32_i2c_write+0xc4>)
 8017784:	7819      	ldrb	r1, [r3, #0]
 8017786:	4e23      	ldr	r6, [pc, #140]	; (8017814 <gd32_i2c_write+0xc4>)
 8017788:	f06f 0201 	mvn.w	r2, #1
 801778c:	f000 fe48 	bl	8018420 <i2c_master_addressing>
 8017790:	f640 75ff 	movw	r5, #4095	; 0xfff
 8017794:	e00c      	b.n	80177b0 <gd32_i2c_write+0x60>
 8017796:	3d01      	subs	r5, #1
 8017798:	d1e0      	bne.n	801775c <gd32_i2c_write+0xc>
 801779a:	f7ff ff6f 	bl	801767c <_stop() [clone .isra.0]>
 801779e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80177a2:	4240      	negs	r0, r0
 80177a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80177a6:	3d01      	subs	r5, #1
 80177a8:	d1e4      	bne.n	8017774 <gd32_i2c_write+0x24>
 80177aa:	e7f6      	b.n	801779a <gd32_i2c_write+0x4a>
 80177ac:	3d01      	subs	r5, #1
 80177ae:	d0f4      	beq.n	801779a <gd32_i2c_write+0x4a>
 80177b0:	f240 5101 	movw	r1, #1281	; 0x501
 80177b4:	4630      	mov	r0, r6
 80177b6:	f000 fe4f 	bl	8018458 <i2c_flag_get>
 80177ba:	2800      	cmp	r0, #0
 80177bc:	d0f6      	beq.n	80177ac <gd32_i2c_write+0x5c>
 80177be:	4815      	ldr	r0, [pc, #84]	; (8017814 <gd32_i2c_write+0xc4>)
 80177c0:	4e14      	ldr	r6, [pc, #80]	; (8017814 <gd32_i2c_write+0xc4>)
 80177c2:	f240 5101 	movw	r1, #1281	; 0x501
 80177c6:	f000 fe52 	bl	801846e <i2c_flag_clear>
 80177ca:	f640 75ff 	movw	r5, #4095	; 0xfff
 80177ce:	f240 5107 	movw	r1, #1287	; 0x507
 80177d2:	4630      	mov	r0, r6
 80177d4:	f000 fe40 	bl	8018458 <i2c_flag_get>
 80177d8:	2801      	cmp	r0, #1
 80177da:	d107      	bne.n	80177ec <gd32_i2c_write+0x9c>
 80177dc:	4e0d      	ldr	r6, [pc, #52]	; (8017814 <gd32_i2c_write+0xc4>)
 80177de:	4427      	add	r7, r4
 80177e0:	42a7      	cmp	r7, r4
 80177e2:	d106      	bne.n	80177f2 <gd32_i2c_write+0xa2>
 80177e4:	f7ff ff4a 	bl	801767c <_stop() [clone .isra.0]>
 80177e8:	2000      	movs	r0, #0
 80177ea:	e7da      	b.n	80177a2 <gd32_i2c_write+0x52>
 80177ec:	3d01      	subs	r5, #1
 80177ee:	d1ee      	bne.n	80177ce <gd32_i2c_write+0x7e>
 80177f0:	e7d3      	b.n	801779a <gd32_i2c_write+0x4a>
 80177f2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80177f6:	4630      	mov	r0, r6
 80177f8:	f000 fe29 	bl	801844e <i2c_data_transmit>
 80177fc:	f640 75ff 	movw	r5, #4095	; 0xfff
 8017800:	f240 5102 	movw	r1, #1282	; 0x502
 8017804:	4630      	mov	r0, r6
 8017806:	f000 fe27 	bl	8018458 <i2c_flag_get>
 801780a:	2800      	cmp	r0, #0
 801780c:	d1e8      	bne.n	80177e0 <gd32_i2c_write+0x90>
 801780e:	3d01      	subs	r5, #1
 8017810:	d1f6      	bne.n	8017800 <gd32_i2c_write+0xb0>
 8017812:	e7c2      	b.n	801779a <gd32_i2c_write+0x4a>
 8017814:	40005400 	andmi	r5, r0, r0, lsl #8
 8017818:	2002d31c 	andcs	sp, r2, ip, lsl r3

0801781c <gd32_i2c_read>:
 801781c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017820:	4f4d      	ldr	r7, [pc, #308]	; (8017958 <gd32_i2c_read+0x13c>)
 8017822:	4680      	mov	r8, r0
 8017824:	460c      	mov	r4, r1
 8017826:	f640 76ff 	movw	r6, #4095	; 0xfff
 801782a:	f240 6101 	movw	r1, #1537	; 0x601
 801782e:	4638      	mov	r0, r7
 8017830:	f000 fe12 	bl	8018458 <i2c_flag_get>
 8017834:	4605      	mov	r5, r0
 8017836:	bb08      	cbnz	r0, 801787c <gd32_i2c_read+0x60>
 8017838:	2c02      	cmp	r4, #2
 801783a:	d103      	bne.n	8017844 <gd32_i2c_read+0x28>
 801783c:	4601      	mov	r1, r0
 801783e:	4846      	ldr	r0, [pc, #280]	; (8017958 <gd32_i2c_read+0x13c>)
 8017840:	f000 fde5 	bl	801840e <i2c_ackpos_config>
 8017844:	4844      	ldr	r0, [pc, #272]	; (8017958 <gd32_i2c_read+0x13c>)
 8017846:	4f44      	ldr	r7, [pc, #272]	; (8017958 <gd32_i2c_read+0x13c>)
 8017848:	f000 fdf7 	bl	801843a <i2c_start_on_bus>
 801784c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8017850:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8017854:	4638      	mov	r0, r7
 8017856:	f000 fdff 	bl	8018458 <i2c_flag_get>
 801785a:	b1a8      	cbz	r0, 8017888 <gd32_i2c_read+0x6c>
 801785c:	4b3f      	ldr	r3, [pc, #252]	; (801795c <gd32_i2c_read+0x140>)
 801785e:	483e      	ldr	r0, [pc, #248]	; (8017958 <gd32_i2c_read+0x13c>)
 8017860:	7819      	ldrb	r1, [r3, #0]
 8017862:	2201      	movs	r2, #1
 8017864:	f000 fddc 	bl	8018420 <i2c_master_addressing>
 8017868:	2c02      	cmp	r4, #2
 801786a:	d803      	bhi.n	8017874 <gd32_i2c_read+0x58>
 801786c:	483a      	ldr	r0, [pc, #232]	; (8017958 <gd32_i2c_read+0x13c>)
 801786e:	2100      	movs	r1, #0
 8017870:	f000 fdc4 	bl	80183fc <i2c_ack_config>
 8017874:	4f38      	ldr	r7, [pc, #224]	; (8017958 <gd32_i2c_read+0x13c>)
 8017876:	f640 76ff 	movw	r6, #4095	; 0xfff
 801787a:	e00a      	b.n	8017892 <gd32_i2c_read+0x76>
 801787c:	3e01      	subs	r6, #1
 801787e:	d1d4      	bne.n	801782a <gd32_i2c_read+0xe>
 8017880:	f7ff fefc 	bl	801767c <_stop() [clone .isra.0]>
 8017884:	2504      	movs	r5, #4
 8017886:	e04d      	b.n	8017924 <gd32_i2c_read+0x108>
 8017888:	3e01      	subs	r6, #1
 801788a:	d1e1      	bne.n	8017850 <gd32_i2c_read+0x34>
 801788c:	e7f8      	b.n	8017880 <gd32_i2c_read+0x64>
 801788e:	3e01      	subs	r6, #1
 8017890:	d0f6      	beq.n	8017880 <gd32_i2c_read+0x64>
 8017892:	f240 5101 	movw	r1, #1281	; 0x501
 8017896:	4638      	mov	r0, r7
 8017898:	f000 fdde 	bl	8018458 <i2c_flag_get>
 801789c:	2800      	cmp	r0, #0
 801789e:	d0f6      	beq.n	801788e <gd32_i2c_read+0x72>
 80178a0:	482d      	ldr	r0, [pc, #180]	; (8017958 <gd32_i2c_read+0x13c>)
 80178a2:	f240 5101 	movw	r1, #1281	; 0x501
 80178a6:	f000 fde2 	bl	801846e <i2c_flag_clear>
 80178aa:	2c01      	cmp	r4, #1
 80178ac:	d102      	bne.n	80178b4 <gd32_i2c_read+0x98>
 80178ae:	482a      	ldr	r0, [pc, #168]	; (8017958 <gd32_i2c_read+0x13c>)
 80178b0:	f000 fdc8 	bl	8018444 <i2c_stop_on_bus>
 80178b4:	4e28      	ldr	r6, [pc, #160]	; (8017958 <gd32_i2c_read+0x13c>)
 80178b6:	f640 77ff 	movw	r7, #4095	; 0xfff
 80178ba:	e022      	b.n	8017902 <gd32_i2c_read+0xe6>
 80178bc:	2c03      	cmp	r4, #3
 80178be:	d134      	bne.n	801792a <gd32_i2c_read+0x10e>
 80178c0:	f640 79ff 	movw	r9, #4095	; 0xfff
 80178c4:	e002      	b.n	80178cc <gd32_i2c_read+0xb0>
 80178c6:	f1b9 0901 	subs.w	r9, r9, #1
 80178ca:	d0d9      	beq.n	8017880 <gd32_i2c_read+0x64>
 80178cc:	f240 5102 	movw	r1, #1282	; 0x502
 80178d0:	4630      	mov	r0, r6
 80178d2:	f000 fdc1 	bl	8018458 <i2c_flag_get>
 80178d6:	2800      	cmp	r0, #0
 80178d8:	d0f5      	beq.n	80178c6 <gd32_i2c_read+0xaa>
 80178da:	2100      	movs	r1, #0
 80178dc:	4630      	mov	r0, r6
 80178de:	f000 fd8d 	bl	80183fc <i2c_ack_config>
 80178e2:	f240 5106 	movw	r1, #1286	; 0x506
 80178e6:	4630      	mov	r0, r6
 80178e8:	f000 fdb6 	bl	8018458 <i2c_flag_get>
 80178ec:	b138      	cbz	r0, 80178fe <gd32_i2c_read+0xe2>
 80178ee:	4630      	mov	r0, r6
 80178f0:	f000 fdaf 	bl	8018452 <i2c_data_receive>
 80178f4:	f808 0b01 	strb.w	r0, [r8], #1
 80178f8:	3c01      	subs	r4, #1
 80178fa:	f640 77ff 	movw	r7, #4095	; 0xfff
 80178fe:	3f01      	subs	r7, #1
 8017900:	d0be      	beq.n	8017880 <gd32_i2c_read+0x64>
 8017902:	2c00      	cmp	r4, #0
 8017904:	d1da      	bne.n	80178bc <gd32_i2c_read+0xa0>
 8017906:	4916      	ldr	r1, [pc, #88]	; (8017960 <gd32_i2c_read+0x144>)
 8017908:	f640 73ff 	movw	r3, #4095	; 0xfff
 801790c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8017910:	0592      	lsls	r2, r2, #22
 8017912:	d41d      	bmi.n	8017950 <gd32_i2c_read+0x134>
 8017914:	4810      	ldr	r0, [pc, #64]	; (8017958 <gd32_i2c_read+0x13c>)
 8017916:	2101      	movs	r1, #1
 8017918:	f000 fd70 	bl	80183fc <i2c_ack_config>
 801791c:	480e      	ldr	r0, [pc, #56]	; (8017958 <gd32_i2c_read+0x13c>)
 801791e:	2101      	movs	r1, #1
 8017920:	f000 fd75 	bl	801840e <i2c_ackpos_config>
 8017924:	4628      	mov	r0, r5
 8017926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801792a:	2c02      	cmp	r4, #2
 801792c:	d1d9      	bne.n	80178e2 <gd32_i2c_read+0xc6>
 801792e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8017932:	e002      	b.n	801793a <gd32_i2c_read+0x11e>
 8017934:	f1b9 0901 	subs.w	r9, r9, #1
 8017938:	d0a2      	beq.n	8017880 <gd32_i2c_read+0x64>
 801793a:	f240 5102 	movw	r1, #1282	; 0x502
 801793e:	4630      	mov	r0, r6
 8017940:	f000 fd8a 	bl	8018458 <i2c_flag_get>
 8017944:	2800      	cmp	r0, #0
 8017946:	d0f5      	beq.n	8017934 <gd32_i2c_read+0x118>
 8017948:	4630      	mov	r0, r6
 801794a:	f000 fd7b 	bl	8018444 <i2c_stop_on_bus>
 801794e:	e7c8      	b.n	80178e2 <gd32_i2c_read+0xc6>
 8017950:	3b01      	subs	r3, #1
 8017952:	d1db      	bne.n	801790c <gd32_i2c_read+0xf0>
 8017954:	e796      	b.n	8017884 <gd32_i2c_read+0x68>
 8017956:	bf00      	nop
 8017958:	40005400 	andmi	r5, r0, r0, lsl #8
 801795c:	2002d31c 	andcs	sp, r2, ip, lsl r3
 8017960:	40005000 	andmi	r5, r0, r0

08017964 <_gpio_init(unsigned int)>:
 8017964:	4b9e      	ldr	r3, [pc, #632]	; (8017be0 <_gpio_init(unsigned int)+0x27c>)
 8017966:	4298      	cmp	r0, r3
 8017968:	b510      	push	{r4, lr}
 801796a:	f000 8115 	beq.w	8017b98 <_gpio_init(unsigned int)+0x234>
 801796e:	d838      	bhi.n	80179e2 <_gpio_init(unsigned int)+0x7e>
 8017970:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8017974:	4298      	cmp	r0, r3
 8017976:	f000 80ca 	beq.w	8017b0e <_gpio_init(unsigned int)+0x1aa>
 801797a:	d80e      	bhi.n	801799a <_gpio_init(unsigned int)+0x36>
 801797c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8017980:	4298      	cmp	r0, r3
 8017982:	d07c      	beq.n	8017a7e <_gpio_init(unsigned int)+0x11a>
 8017984:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017988:	4298      	cmp	r0, r3
 801798a:	f000 8099 	beq.w	8017ac0 <_gpio_init(unsigned int)+0x15c>
 801798e:	4b95      	ldr	r3, [pc, #596]	; (8017be4 <_gpio_init(unsigned int)+0x280>)
 8017990:	4a95      	ldr	r2, [pc, #596]	; (8017be8 <_gpio_init(unsigned int)+0x284>)
 8017992:	4896      	ldr	r0, [pc, #600]	; (8017bec <_gpio_init(unsigned int)+0x288>)
 8017994:	21fe      	movs	r1, #254	; 0xfe
 8017996:	f7f2 fa6b 	bl	8009e70 <__assert_func>
 801799a:	4b95      	ldr	r3, [pc, #596]	; (8017bf0 <_gpio_init(unsigned int)+0x28c>)
 801799c:	4298      	cmp	r0, r3
 801799e:	d1f6      	bne.n	801798e <_gpio_init(unsigned int)+0x2a>
 80179a0:	4894      	ldr	r0, [pc, #592]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 80179a2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80179a6:	2108      	movs	r1, #8
 80179a8:	f7ff f989 	bl	8016cbe <gpio_af_set>
 80179ac:	4891      	ldr	r0, [pc, #580]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 80179ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80179b2:	2201      	movs	r2, #1
 80179b4:	2102      	movs	r1, #2
 80179b6:	f7ff f947 	bl	8016c48 <gpio_mode_set>
 80179ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80179be:	488d      	ldr	r0, [pc, #564]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 80179c0:	2202      	movs	r2, #2
 80179c2:	2100      	movs	r1, #0
 80179c4:	f7ff f960 	bl	8016c88 <gpio_output_options_set>
 80179c8:	488b      	ldr	r0, [pc, #556]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 80179ca:	2204      	movs	r2, #4
 80179cc:	2108      	movs	r1, #8
 80179ce:	f7ff f976 	bl	8016cbe <gpio_af_set>
 80179d2:	2304      	movs	r3, #4
 80179d4:	4888      	ldr	r0, [pc, #544]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 80179d6:	2201      	movs	r2, #1
 80179d8:	2102      	movs	r1, #2
 80179da:	f7ff f935 	bl	8016c48 <gpio_mode_set>
 80179de:	2304      	movs	r3, #4
 80179e0:	e091      	b.n	8017b06 <_gpio_init(unsigned int)+0x1a2>
 80179e2:	4b86      	ldr	r3, [pc, #536]	; (8017bfc <_gpio_init(unsigned int)+0x298>)
 80179e4:	4298      	cmp	r0, r3
 80179e6:	d026      	beq.n	8017a36 <_gpio_init(unsigned int)+0xd2>
 80179e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80179ec:	4298      	cmp	r0, r3
 80179ee:	f000 80b5 	beq.w	8017b5c <_gpio_init(unsigned int)+0x1f8>
 80179f2:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 80179f6:	4298      	cmp	r0, r3
 80179f8:	d1c9      	bne.n	801798e <_gpio_init(unsigned int)+0x2a>
 80179fa:	4881      	ldr	r0, [pc, #516]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 80179fc:	2202      	movs	r2, #2
 80179fe:	2108      	movs	r1, #8
 8017a00:	f7ff f95d 	bl	8016cbe <gpio_af_set>
 8017a04:	2302      	movs	r3, #2
 8017a06:	4619      	mov	r1, r3
 8017a08:	487d      	ldr	r0, [pc, #500]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017a0a:	2201      	movs	r2, #1
 8017a0c:	f7ff f91c 	bl	8016c48 <gpio_mode_set>
 8017a10:	2302      	movs	r3, #2
 8017a12:	461a      	mov	r2, r3
 8017a14:	487a      	ldr	r0, [pc, #488]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017a16:	2100      	movs	r1, #0
 8017a18:	f7ff f936 	bl	8016c88 <gpio_output_options_set>
 8017a1c:	4878      	ldr	r0, [pc, #480]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017a1e:	2201      	movs	r2, #1
 8017a20:	2108      	movs	r1, #8
 8017a22:	f7ff f94c 	bl	8016cbe <gpio_af_set>
 8017a26:	2301      	movs	r3, #1
 8017a28:	461a      	mov	r2, r3
 8017a2a:	4875      	ldr	r0, [pc, #468]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017a2c:	2102      	movs	r1, #2
 8017a2e:	f7ff f90b 	bl	8016c48 <gpio_mode_set>
 8017a32:	2301      	movs	r3, #1
 8017a34:	e0d0      	b.n	8017bd8 <_gpio_init(unsigned int)+0x274>
 8017a36:	4873      	ldr	r0, [pc, #460]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a38:	2240      	movs	r2, #64	; 0x40
 8017a3a:	2107      	movs	r1, #7
 8017a3c:	f7ff f93f 	bl	8016cbe <gpio_af_set>
 8017a40:	4870      	ldr	r0, [pc, #448]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a42:	2340      	movs	r3, #64	; 0x40
 8017a44:	2201      	movs	r2, #1
 8017a46:	2102      	movs	r1, #2
 8017a48:	f7ff f8fe 	bl	8016c48 <gpio_mode_set>
 8017a4c:	2340      	movs	r3, #64	; 0x40
 8017a4e:	486d      	ldr	r0, [pc, #436]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a50:	2202      	movs	r2, #2
 8017a52:	2100      	movs	r1, #0
 8017a54:	f7ff f918 	bl	8016c88 <gpio_output_options_set>
 8017a58:	486a      	ldr	r0, [pc, #424]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a5a:	2280      	movs	r2, #128	; 0x80
 8017a5c:	2107      	movs	r1, #7
 8017a5e:	f7ff f92e 	bl	8016cbe <gpio_af_set>
 8017a62:	4868      	ldr	r0, [pc, #416]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a64:	2380      	movs	r3, #128	; 0x80
 8017a66:	2201      	movs	r2, #1
 8017a68:	2102      	movs	r1, #2
 8017a6a:	f7ff f8ed 	bl	8016c48 <gpio_mode_set>
 8017a6e:	4865      	ldr	r0, [pc, #404]	; (8017c04 <_gpio_init(unsigned int)+0x2a0>)
 8017a70:	2380      	movs	r3, #128	; 0x80
 8017a72:	2202      	movs	r2, #2
 8017a74:	2100      	movs	r1, #0
 8017a76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017a7a:	f7ff b905 	b.w	8016c88 <gpio_output_options_set>
 8017a7e:	4862      	ldr	r0, [pc, #392]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017a80:	2204      	movs	r2, #4
 8017a82:	2107      	movs	r1, #7
 8017a84:	f7ff f91b 	bl	8016cbe <gpio_af_set>
 8017a88:	485f      	ldr	r0, [pc, #380]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017a8a:	2304      	movs	r3, #4
 8017a8c:	2201      	movs	r2, #1
 8017a8e:	2102      	movs	r1, #2
 8017a90:	f7ff f8da 	bl	8016c48 <gpio_mode_set>
 8017a94:	2304      	movs	r3, #4
 8017a96:	485c      	ldr	r0, [pc, #368]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017a98:	2202      	movs	r2, #2
 8017a9a:	2100      	movs	r1, #0
 8017a9c:	f7ff f8f4 	bl	8016c88 <gpio_output_options_set>
 8017aa0:	4859      	ldr	r0, [pc, #356]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017aa2:	2208      	movs	r2, #8
 8017aa4:	2107      	movs	r1, #7
 8017aa6:	f7ff f90a 	bl	8016cbe <gpio_af_set>
 8017aaa:	4857      	ldr	r0, [pc, #348]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017aac:	2308      	movs	r3, #8
 8017aae:	2201      	movs	r2, #1
 8017ab0:	2102      	movs	r1, #2
 8017ab2:	f7ff f8c9 	bl	8016c48 <gpio_mode_set>
 8017ab6:	4854      	ldr	r0, [pc, #336]	; (8017c08 <_gpio_init(unsigned int)+0x2a4>)
 8017ab8:	2308      	movs	r3, #8
 8017aba:	2202      	movs	r2, #2
 8017abc:	2100      	movs	r1, #0
 8017abe:	e7da      	b.n	8017a76 <_gpio_init(unsigned int)+0x112>
 8017ac0:	484d      	ldr	r0, [pc, #308]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017ac2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8017ac6:	2107      	movs	r1, #7
 8017ac8:	f7ff f8f9 	bl	8016cbe <gpio_af_set>
 8017acc:	484a      	ldr	r0, [pc, #296]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017ace:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017ad2:	2201      	movs	r2, #1
 8017ad4:	2102      	movs	r1, #2
 8017ad6:	f7ff f8b7 	bl	8016c48 <gpio_mode_set>
 8017ada:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017ade:	4846      	ldr	r0, [pc, #280]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017ae0:	2202      	movs	r2, #2
 8017ae2:	2100      	movs	r1, #0
 8017ae4:	f7ff f8d0 	bl	8016c88 <gpio_output_options_set>
 8017ae8:	4843      	ldr	r0, [pc, #268]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017aea:	f44f 7200 	mov.w	r2, #512	; 0x200
 8017aee:	2107      	movs	r1, #7
 8017af0:	f7ff f8e5 	bl	8016cbe <gpio_af_set>
 8017af4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017af8:	483f      	ldr	r0, [pc, #252]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017afa:	2201      	movs	r2, #1
 8017afc:	2102      	movs	r1, #2
 8017afe:	f7ff f8a3 	bl	8016c48 <gpio_mode_set>
 8017b02:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017b06:	483c      	ldr	r0, [pc, #240]	; (8017bf8 <_gpio_init(unsigned int)+0x294>)
 8017b08:	2202      	movs	r2, #2
 8017b0a:	2100      	movs	r1, #0
 8017b0c:	e7b3      	b.n	8017a76 <_gpio_init(unsigned int)+0x112>
 8017b0e:	4839      	ldr	r0, [pc, #228]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b10:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8017b14:	2108      	movs	r1, #8
 8017b16:	f7ff f8d2 	bl	8016cbe <gpio_af_set>
 8017b1a:	4836      	ldr	r0, [pc, #216]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8017b20:	2201      	movs	r2, #1
 8017b22:	2102      	movs	r1, #2
 8017b24:	f7ff f890 	bl	8016c48 <gpio_mode_set>
 8017b28:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8017b2c:	4831      	ldr	r0, [pc, #196]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b2e:	2202      	movs	r2, #2
 8017b30:	2100      	movs	r1, #0
 8017b32:	f7ff f8a9 	bl	8016c88 <gpio_output_options_set>
 8017b36:	482f      	ldr	r0, [pc, #188]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b38:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8017b3c:	2108      	movs	r1, #8
 8017b3e:	f7ff f8be 	bl	8016cbe <gpio_af_set>
 8017b42:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017b46:	482b      	ldr	r0, [pc, #172]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b48:	2201      	movs	r2, #1
 8017b4a:	2102      	movs	r1, #2
 8017b4c:	f7ff f87c 	bl	8016c48 <gpio_mode_set>
 8017b50:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017b54:	4827      	ldr	r0, [pc, #156]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b56:	2202      	movs	r2, #2
 8017b58:	2100      	movs	r1, #0
 8017b5a:	e78c      	b.n	8017a76 <_gpio_init(unsigned int)+0x112>
 8017b5c:	4825      	ldr	r0, [pc, #148]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b5e:	2240      	movs	r2, #64	; 0x40
 8017b60:	2108      	movs	r1, #8
 8017b62:	f7ff f8ac 	bl	8016cbe <gpio_af_set>
 8017b66:	4823      	ldr	r0, [pc, #140]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b68:	2340      	movs	r3, #64	; 0x40
 8017b6a:	2201      	movs	r2, #1
 8017b6c:	2102      	movs	r1, #2
 8017b6e:	f7ff f86b 	bl	8016c48 <gpio_mode_set>
 8017b72:	2340      	movs	r3, #64	; 0x40
 8017b74:	481f      	ldr	r0, [pc, #124]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b76:	2202      	movs	r2, #2
 8017b78:	2100      	movs	r1, #0
 8017b7a:	f7ff f885 	bl	8016c88 <gpio_output_options_set>
 8017b7e:	481d      	ldr	r0, [pc, #116]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b80:	2280      	movs	r2, #128	; 0x80
 8017b82:	2108      	movs	r1, #8
 8017b84:	f7ff f89b 	bl	8016cbe <gpio_af_set>
 8017b88:	2380      	movs	r3, #128	; 0x80
 8017b8a:	481a      	ldr	r0, [pc, #104]	; (8017bf4 <_gpio_init(unsigned int)+0x290>)
 8017b8c:	2201      	movs	r2, #1
 8017b8e:	2102      	movs	r1, #2
 8017b90:	f7ff f85a 	bl	8016c48 <gpio_mode_set>
 8017b94:	2380      	movs	r3, #128	; 0x80
 8017b96:	e7dd      	b.n	8017b54 <_gpio_init(unsigned int)+0x1f0>
 8017b98:	4819      	ldr	r0, [pc, #100]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017b9a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8017b9e:	2108      	movs	r1, #8
 8017ba0:	f7ff f88d 	bl	8016cbe <gpio_af_set>
 8017ba4:	4816      	ldr	r0, [pc, #88]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017ba6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017baa:	2201      	movs	r2, #1
 8017bac:	2102      	movs	r1, #2
 8017bae:	f7ff f84b 	bl	8016c48 <gpio_mode_set>
 8017bb2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017bb6:	4812      	ldr	r0, [pc, #72]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017bb8:	2202      	movs	r2, #2
 8017bba:	2100      	movs	r1, #0
 8017bbc:	f7ff f864 	bl	8016c88 <gpio_output_options_set>
 8017bc0:	480f      	ldr	r0, [pc, #60]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017bc2:	2280      	movs	r2, #128	; 0x80
 8017bc4:	2108      	movs	r1, #8
 8017bc6:	f7ff f87a 	bl	8016cbe <gpio_af_set>
 8017bca:	2380      	movs	r3, #128	; 0x80
 8017bcc:	480c      	ldr	r0, [pc, #48]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017bce:	2201      	movs	r2, #1
 8017bd0:	2102      	movs	r1, #2
 8017bd2:	f7ff f839 	bl	8016c48 <gpio_mode_set>
 8017bd6:	2380      	movs	r3, #128	; 0x80
 8017bd8:	4809      	ldr	r0, [pc, #36]	; (8017c00 <_gpio_init(unsigned int)+0x29c>)
 8017bda:	2202      	movs	r2, #2
 8017bdc:	2100      	movs	r1, #0
 8017bde:	e74a      	b.n	8017a76 <_gpio_init(unsigned int)+0x112>
 8017be0:	40007800 	andmi	r7, r0, r0, lsl #16
 8017be4:	0801a362 	stmdaeq	r1, {r1, r5, r6, r8, r9, sp, pc}
 8017be8:	0801bf06 	stmdaeq	r1, {r1, r2, r8, r9, sl, fp, ip, sp, pc}
 8017bec:	0801bf11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, sp, pc}
 8017bf0:	40005000 	andmi	r5, r0, r0
 8017bf4:	40020800 	andmi	r0, r2, r0, lsl #16
 8017bf8:	40020c00 	andmi	r0, r2, r0, lsl #24
 8017bfc:	40011000 	andmi	r1, r1, r0
 8017c00:	40021000 	andmi	r1, r2, r0
 8017c04:	40020400 	andmi	r0, r2, r0, lsl #8
 8017c08:	40020000 	andmi	r0, r2, r0

08017c0c <gd32_uart_begin>:
 8017c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017c0e:	461e      	mov	r6, r3
 8017c10:	4b4d      	ldr	r3, [pc, #308]	; (8017d48 <gd32_uart_begin+0x13c>)
 8017c12:	4298      	cmp	r0, r3
 8017c14:	4604      	mov	r4, r0
 8017c16:	460f      	mov	r7, r1
 8017c18:	4615      	mov	r5, r2
 8017c1a:	f000 8088 	beq.w	8017d2e <gd32_uart_begin+0x122>
 8017c1e:	d81c      	bhi.n	8017c5a <gd32_uart_begin+0x4e>
 8017c20:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8017c24:	4298      	cmp	r0, r3
 8017c26:	d078      	beq.n	8017d1a <gd32_uart_begin+0x10e>
 8017c28:	d80d      	bhi.n	8017c46 <gd32_uart_begin+0x3a>
 8017c2a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8017c2e:	4298      	cmp	r0, r3
 8017c30:	d065      	beq.n	8017cfe <gd32_uart_begin+0xf2>
 8017c32:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017c36:	4298      	cmp	r0, r3
 8017c38:	d068      	beq.n	8017d0c <gd32_uart_begin+0x100>
 8017c3a:	4b44      	ldr	r3, [pc, #272]	; (8017d4c <gd32_uart_begin+0x140>)
 8017c3c:	4a44      	ldr	r2, [pc, #272]	; (8017d50 <gd32_uart_begin+0x144>)
 8017c3e:	4845      	ldr	r0, [pc, #276]	; (8017d54 <gd32_uart_begin+0x148>)
 8017c40:	2165      	movs	r1, #101	; 0x65
 8017c42:	f7f2 f915 	bl	8009e70 <__assert_func>
 8017c46:	4b44      	ldr	r3, [pc, #272]	; (8017d58 <gd32_uart_begin+0x14c>)
 8017c48:	4298      	cmp	r0, r3
 8017c4a:	d1f6      	bne.n	8017c3a <gd32_uart_begin+0x2e>
 8017c4c:	f241 0014 	movw	r0, #4116	; 0x1014
 8017c50:	f7ff f876 	bl	8016d40 <rcu_periph_clock_enable>
 8017c54:	f640 4002 	movw	r0, #3074	; 0xc02
 8017c58:	e05a      	b.n	8017d10 <gd32_uart_begin+0x104>
 8017c5a:	4b40      	ldr	r3, [pc, #256]	; (8017d5c <gd32_uart_begin+0x150>)
 8017c5c:	4298      	cmp	r0, r3
 8017c5e:	d00a      	beq.n	8017c76 <gd32_uart_begin+0x6a>
 8017c60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017c64:	4298      	cmp	r0, r3
 8017c66:	d05f      	beq.n	8017d28 <gd32_uart_begin+0x11c>
 8017c68:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8017c6c:	4298      	cmp	r0, r3
 8017c6e:	d1e4      	bne.n	8017c3a <gd32_uart_begin+0x2e>
 8017c70:	f241 001f 	movw	r0, #4127	; 0x101f
 8017c74:	e05d      	b.n	8017d32 <gd32_uart_begin+0x126>
 8017c76:	f241 1004 	movw	r0, #4356	; 0x1104
 8017c7a:	f7ff f861 	bl	8016d40 <rcu_periph_clock_enable>
 8017c7e:	f640 4001 	movw	r0, #3073	; 0xc01
 8017c82:	f7ff f85d 	bl	8016d40 <rcu_periph_clock_enable>
 8017c86:	4620      	mov	r0, r4
 8017c88:	f7ff fe6c 	bl	8017964 <_gpio_init(unsigned int)>
 8017c8c:	4620      	mov	r0, r4
 8017c8e:	f7ff fb71 	bl	8017374 <usart_deinit>
 8017c92:	68e3      	ldr	r3, [r4, #12]
 8017c94:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8017c98:	60e3      	str	r3, [r4, #12]
 8017c9a:	4639      	mov	r1, r7
 8017c9c:	4620      	mov	r0, r4
 8017c9e:	f7ff fbcb 	bl	8017438 <usart_baudrate_set>
 8017ca2:	f1a5 0309 	sub.w	r3, r5, #9
 8017ca6:	4259      	negs	r1, r3
 8017ca8:	4159      	adcs	r1, r3
 8017caa:	0309      	lsls	r1, r1, #12
 8017cac:	4620      	mov	r0, r4
 8017cae:	f7ff fc0f 	bl	80174d0 <usart_word_length_set>
 8017cb2:	9906      	ldr	r1, [sp, #24]
 8017cb4:	1e8a      	subs	r2, r1, #2
 8017cb6:	4251      	negs	r1, r2
 8017cb8:	4151      	adcs	r1, r2
 8017cba:	0349      	lsls	r1, r1, #13
 8017cbc:	4620      	mov	r0, r4
 8017cbe:	f7ff fc0f 	bl	80174e0 <usart_stop_bit_set>
 8017cc2:	2e01      	cmp	r6, #1
 8017cc4:	d03a      	beq.n	8017d3c <gd32_uart_begin+0x130>
 8017cc6:	2e02      	cmp	r6, #2
 8017cc8:	d13b      	bne.n	8017d42 <gd32_uart_begin+0x136>
 8017cca:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8017cce:	4620      	mov	r0, r4
 8017cd0:	f7ff fbf6 	bl	80174c0 <usart_parity_config>
 8017cd4:	2100      	movs	r1, #0
 8017cd6:	4620      	mov	r0, r4
 8017cd8:	f7ff fc16 	bl	8017508 <usart_hardware_flow_rts_config>
 8017cdc:	2100      	movs	r1, #0
 8017cde:	4620      	mov	r0, r4
 8017ce0:	f7ff fc18 	bl	8017514 <usart_hardware_flow_cts_config>
 8017ce4:	2104      	movs	r1, #4
 8017ce6:	4620      	mov	r0, r4
 8017ce8:	f7ff fc08 	bl	80174fc <usart_receive_config>
 8017cec:	2108      	movs	r1, #8
 8017cee:	4620      	mov	r0, r4
 8017cf0:	f7ff fbfe 	bl	80174f0 <usart_transmit_config>
 8017cf4:	68e3      	ldr	r3, [r4, #12]
 8017cf6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8017cfa:	60e3      	str	r3, [r4, #12]
 8017cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017cfe:	f241 0011 	movw	r0, #4113	; 0x1011
 8017d02:	f7ff f81d 	bl	8016d40 <rcu_periph_clock_enable>
 8017d06:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8017d0a:	e7ba      	b.n	8017c82 <gd32_uart_begin+0x76>
 8017d0c:	f241 0012 	movw	r0, #4114	; 0x1012
 8017d10:	f7ff f816 	bl	8016d40 <rcu_periph_clock_enable>
 8017d14:	f640 4003 	movw	r0, #3075	; 0xc03
 8017d18:	e7b3      	b.n	8017c82 <gd32_uart_begin+0x76>
 8017d1a:	f241 0013 	movw	r0, #4115	; 0x1013
 8017d1e:	f7ff f80f 	bl	8016d40 <rcu_periph_clock_enable>
 8017d22:	f640 4002 	movw	r0, #3074	; 0xc02
 8017d26:	e7ac      	b.n	8017c82 <gd32_uart_begin+0x76>
 8017d28:	f241 1005 	movw	r0, #4357	; 0x1105
 8017d2c:	e7f7      	b.n	8017d1e <gd32_uart_begin+0x112>
 8017d2e:	f241 001e 	movw	r0, #4126	; 0x101e
 8017d32:	f7ff f805 	bl	8016d40 <rcu_periph_clock_enable>
 8017d36:	f640 4004 	movw	r0, #3076	; 0xc04
 8017d3a:	e7a2      	b.n	8017c82 <gd32_uart_begin+0x76>
 8017d3c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8017d40:	e7c5      	b.n	8017cce <gd32_uart_begin+0xc2>
 8017d42:	2100      	movs	r1, #0
 8017d44:	e7c3      	b.n	8017cce <gd32_uart_begin+0xc2>
 8017d46:	bf00      	nop
 8017d48:	40007800 	andmi	r7, r0, r0, lsl #16
 8017d4c:	0801a362 	stmdaeq	r1, {r1, r5, r6, r8, r9, sp, pc}
 8017d50:	0801bf23 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, fp, ip, sp, pc}
 8017d54:	0801bf11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, sp, pc}
 8017d58:	40005000 	andmi	r5, r0, r0
 8017d5c:	40011000 	andmi	r1, r1, r0

08017d60 <micros_init()>:
 8017d60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8017d62:	f241 0003 	movw	r0, #4099	; 0x1003
 8017d66:	f7fe ffeb 	bl	8016d40 <rcu_periph_clock_enable>
 8017d6a:	480c      	ldr	r0, [pc, #48]	; (8017d9c <micros_init()+0x3c>)
 8017d6c:	f7ff f8a4 	bl	8016eb8 <timer_deinit>
 8017d70:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8017d74:	2300      	movs	r3, #0
 8017d76:	f8c2 3c24 	str.w	r3, [r2, #3108]	; 0xc24
 8017d7a:	22c7      	movs	r2, #199	; 0xc7
 8017d7c:	e9cd 2300 	strd	r2, r3, [sp]
 8017d80:	4669      	mov	r1, sp
 8017d82:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8017d86:	4805      	ldr	r0, [pc, #20]	; (8017d9c <micros_init()+0x3c>)
 8017d88:	9302      	str	r3, [sp, #8]
 8017d8a:	f7ff f93b 	bl	8017004 <timer_init>
 8017d8e:	4803      	ldr	r0, [pc, #12]	; (8017d9c <micros_init()+0x3c>)
 8017d90:	f7ff f976 	bl	8017080 <timer_enable>
 8017d94:	b005      	add	sp, #20
 8017d96:	f85d fb04 	ldr.w	pc, [sp], #4
 8017d9a:	bf00      	nop
 8017d9c:	40000c00 	andmi	r0, r0, r0, lsl #24

08017da0 <udelay_init()>:
 8017da0:	b508      	push	{r3, lr}
 8017da2:	4b0d      	ldr	r3, [pc, #52]	; (8017dd8 <udelay_init()+0x38>)
 8017da4:	681a      	ldr	r2, [r3, #0]
 8017da6:	4b0d      	ldr	r3, [pc, #52]	; (8017ddc <udelay_init()+0x3c>)
 8017da8:	429a      	cmp	r2, r3
 8017daa:	d005      	beq.n	8017db8 <udelay_init()+0x18>
 8017dac:	4b0c      	ldr	r3, [pc, #48]	; (8017de0 <udelay_init()+0x40>)
 8017dae:	4a0d      	ldr	r2, [pc, #52]	; (8017de4 <udelay_init()+0x44>)
 8017db0:	480d      	ldr	r0, [pc, #52]	; (8017de8 <udelay_init()+0x48>)
 8017db2:	2122      	movs	r1, #34	; 0x22
 8017db4:	f7f2 f85c 	bl	8009e70 <__assert_func>
 8017db8:	4a0c      	ldr	r2, [pc, #48]	; (8017dec <udelay_init()+0x4c>)
 8017dba:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8017dbe:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8017dc2:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8017dc6:	4b0a      	ldr	r3, [pc, #40]	; (8017df0 <udelay_init()+0x50>)
 8017dc8:	2200      	movs	r2, #0
 8017dca:	605a      	str	r2, [r3, #4]
 8017dcc:	681a      	ldr	r2, [r3, #0]
 8017dce:	f042 0201 	orr.w	r2, r2, #1
 8017dd2:	601a      	str	r2, [r3, #0]
 8017dd4:	bd08      	pop	{r3, pc}
 8017dd6:	bf00      	nop
 8017dd8:	200000f4 	strdcs	r0, [r0], -r4
 8017ddc:	0bebc200 	bleq	7b085e4 <__stack_size+0x7b045e4>
 8017de0:	0801bf3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 8017de4:	0801bf5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8017de8:	0801bf6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8017dec:	e000ed00 	and	lr, r0, r0, lsl #26
 8017df0:	e0001000 	and	r1, r0, r0

08017df4 <udelay(unsigned int, unsigned int)>:
 8017df4:	23c8      	movs	r3, #200	; 0xc8
 8017df6:	b530      	push	{r4, r5, lr}
 8017df8:	4358      	muls	r0, r3
 8017dfa:	b909      	cbnz	r1, 8017e00 <udelay(unsigned int, unsigned int)+0xc>
 8017dfc:	4b08      	ldr	r3, [pc, #32]	; (8017e20 <udelay(unsigned int, unsigned int)+0x2c>)
 8017dfe:	6859      	ldr	r1, [r3, #4]
 8017e00:	4c07      	ldr	r4, [pc, #28]	; (8017e20 <udelay(unsigned int, unsigned int)+0x2c>)
 8017e02:	2300      	movs	r3, #0
 8017e04:	6862      	ldr	r2, [r4, #4]
 8017e06:	4291      	cmp	r1, r2
 8017e08:	d0fc      	beq.n	8017e04 <udelay(unsigned int, unsigned int)+0x10>
 8017e0a:	bf2a      	itet	cs
 8017e0c:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8017e10:	189b      	addcc	r3, r3, r2
 8017e12:	195b      	addcs	r3, r3, r5
 8017e14:	1a5b      	subs	r3, r3, r1
 8017e16:	4283      	cmp	r3, r0
 8017e18:	d300      	bcc.n	8017e1c <udelay(unsigned int, unsigned int)+0x28>
 8017e1a:	bd30      	pop	{r4, r5, pc}
 8017e1c:	4611      	mov	r1, r2
 8017e1e:	e7f1      	b.n	8017e04 <udelay(unsigned int, unsigned int)+0x10>
 8017e20:	e0001000 	and	r1, r0, r0

08017e24 <emac_start(unsigned char*)>:
 8017e24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e26:	4abc      	ldr	r2, [pc, #752]	; (8018118 <emac_start(unsigned char*)+0x2f4>)
 8017e28:	49bc      	ldr	r1, [pc, #752]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8017e2a:	b085      	sub	sp, #20
 8017e2c:	23b1      	movs	r3, #177	; 0xb1
 8017e2e:	4605      	mov	r5, r0
 8017e30:	48bb      	ldr	r0, [pc, #748]	; (8018120 <emac_start(unsigned char*)+0x2fc>)
 8017e32:	f7f2 fb29 	bl	800a488 <printf>
 8017e36:	4bbb      	ldr	r3, [pc, #748]	; (8018124 <emac_start(unsigned char*)+0x300>)
 8017e38:	4ab8      	ldr	r2, [pc, #736]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8017e3a:	49b7      	ldr	r1, [pc, #732]	; (8018118 <emac_start(unsigned char*)+0x2f4>)
 8017e3c:	9300      	str	r3, [sp, #0]
 8017e3e:	48ba      	ldr	r0, [pc, #744]	; (8018128 <emac_start(unsigned char*)+0x304>)
 8017e40:	23b5      	movs	r3, #181	; 0xb5
 8017e42:	f7f2 fb21 	bl	800a488 <printf>
 8017e46:	2346      	movs	r3, #70	; 0x46
 8017e48:	2208      	movs	r2, #8
 8017e4a:	e9cd 3200 	strd	r3, r2, [sp]
 8017e4e:	49b2      	ldr	r1, [pc, #712]	; (8018118 <emac_start(unsigned char*)+0x2f4>)
 8017e50:	4ab2      	ldr	r2, [pc, #712]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8017e52:	48b6      	ldr	r0, [pc, #728]	; (801812c <emac_start(unsigned char*)+0x308>)
 8017e54:	23bb      	movs	r3, #187	; 0xbb
 8017e56:	f7f2 fb17 	bl	800a488 <printf>
 8017e5a:	2325      	movs	r3, #37	; 0x25
 8017e5c:	4ab4      	ldr	r2, [pc, #720]	; (8018130 <emac_start(unsigned char*)+0x30c>)
 8017e5e:	49af      	ldr	r1, [pc, #700]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8017e60:	48af      	ldr	r0, [pc, #700]	; (8018120 <emac_start(unsigned char*)+0x2fc>)
 8017e62:	f7f2 fb11 	bl	800a488 <printf>
 8017e66:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8017e6a:	f7fe ff69 	bl	8016d40 <rcu_periph_clock_enable>
 8017e6e:	f640 4001 	movw	r0, #3073	; 0xc01
 8017e72:	f7fe ff65 	bl	8016d40 <rcu_periph_clock_enable>
 8017e76:	f640 4002 	movw	r0, #3074	; 0xc02
 8017e7a:	f7fe ff61 	bl	8016d40 <rcu_periph_clock_enable>
 8017e7e:	f241 100e 	movw	r0, #4366	; 0x110e
 8017e82:	f7fe ff5d 	bl	8016d40 <rcu_periph_clock_enable>
 8017e86:	48ab      	ldr	r0, [pc, #684]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017e88:	f44f 7280 	mov.w	r2, #256	; 0x100
 8017e8c:	2100      	movs	r1, #0
 8017e8e:	f7fe ff16 	bl	8016cbe <gpio_af_set>
 8017e92:	48a8      	ldr	r0, [pc, #672]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017e94:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017e98:	2200      	movs	r2, #0
 8017e9a:	2102      	movs	r1, #2
 8017e9c:	f7fe fed4 	bl	8016c48 <gpio_mode_set>
 8017ea0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017ea4:	2203      	movs	r2, #3
 8017ea6:	48a3      	ldr	r0, [pc, #652]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017ea8:	2100      	movs	r1, #0
 8017eaa:	f7fe feed 	bl	8016c88 <gpio_output_options_set>
 8017eae:	f04f 61c0 	mov.w	r1, #100663296	; 0x6000000
 8017eb2:	f44f 00c0 	mov.w	r0, #6291456	; 0x600000
 8017eb6:	f7fe ff63 	bl	8016d80 <rcu_ckout0_config>
 8017eba:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8017ebe:	f7fe ffef 	bl	8016ea0 <syscfg_enet_phy_interface_config>
 8017ec2:	2302      	movs	r3, #2
 8017ec4:	4619      	mov	r1, r3
 8017ec6:	489b      	ldr	r0, [pc, #620]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017ec8:	2200      	movs	r2, #0
 8017eca:	f7fe febd 	bl	8016c48 <gpio_mode_set>
 8017ece:	4899      	ldr	r0, [pc, #612]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017ed0:	2302      	movs	r3, #2
 8017ed2:	2203      	movs	r2, #3
 8017ed4:	2100      	movs	r1, #0
 8017ed6:	f7fe fed7 	bl	8016c88 <gpio_output_options_set>
 8017eda:	4896      	ldr	r0, [pc, #600]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017edc:	2304      	movs	r3, #4
 8017ede:	2200      	movs	r2, #0
 8017ee0:	2102      	movs	r1, #2
 8017ee2:	f7fe feb1 	bl	8016c48 <gpio_mode_set>
 8017ee6:	4893      	ldr	r0, [pc, #588]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017ee8:	2304      	movs	r3, #4
 8017eea:	2203      	movs	r2, #3
 8017eec:	2100      	movs	r1, #0
 8017eee:	f7fe fecb 	bl	8016c88 <gpio_output_options_set>
 8017ef2:	4890      	ldr	r0, [pc, #576]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017ef4:	2380      	movs	r3, #128	; 0x80
 8017ef6:	2200      	movs	r2, #0
 8017ef8:	2102      	movs	r1, #2
 8017efa:	f7fe fea5 	bl	8016c48 <gpio_mode_set>
 8017efe:	2380      	movs	r3, #128	; 0x80
 8017f00:	488c      	ldr	r0, [pc, #560]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017f02:	2203      	movs	r2, #3
 8017f04:	2100      	movs	r1, #0
 8017f06:	f7fe febf 	bl	8016c88 <gpio_output_options_set>
 8017f0a:	488a      	ldr	r0, [pc, #552]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017f0c:	2202      	movs	r2, #2
 8017f0e:	210b      	movs	r1, #11
 8017f10:	f7fe fed5 	bl	8016cbe <gpio_af_set>
 8017f14:	4887      	ldr	r0, [pc, #540]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017f16:	2204      	movs	r2, #4
 8017f18:	210b      	movs	r1, #11
 8017f1a:	f7fe fed0 	bl	8016cbe <gpio_af_set>
 8017f1e:	4885      	ldr	r0, [pc, #532]	; (8018134 <emac_start(unsigned char*)+0x310>)
 8017f20:	2280      	movs	r2, #128	; 0x80
 8017f22:	210b      	movs	r1, #11
 8017f24:	f7fe fecb 	bl	8016cbe <gpio_af_set>
 8017f28:	4883      	ldr	r0, [pc, #524]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f2a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017f2e:	2200      	movs	r2, #0
 8017f30:	2102      	movs	r1, #2
 8017f32:	f7fe fe89 	bl	8016c48 <gpio_mode_set>
 8017f36:	4880      	ldr	r0, [pc, #512]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f38:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017f3c:	2203      	movs	r2, #3
 8017f3e:	2100      	movs	r1, #0
 8017f40:	f7fe fea2 	bl	8016c88 <gpio_output_options_set>
 8017f44:	487c      	ldr	r0, [pc, #496]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f46:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8017f4a:	2200      	movs	r2, #0
 8017f4c:	2102      	movs	r1, #2
 8017f4e:	f7fe fe7b 	bl	8016c48 <gpio_mode_set>
 8017f52:	4879      	ldr	r0, [pc, #484]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f54:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8017f58:	2203      	movs	r2, #3
 8017f5a:	2100      	movs	r1, #0
 8017f5c:	f7fe fe94 	bl	8016c88 <gpio_output_options_set>
 8017f60:	4875      	ldr	r0, [pc, #468]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f62:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8017f66:	2200      	movs	r2, #0
 8017f68:	2102      	movs	r1, #2
 8017f6a:	f7fe fe6d 	bl	8016c48 <gpio_mode_set>
 8017f6e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8017f72:	4871      	ldr	r0, [pc, #452]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f74:	2203      	movs	r2, #3
 8017f76:	2100      	movs	r1, #0
 8017f78:	f7fe fe86 	bl	8016c88 <gpio_output_options_set>
 8017f7c:	486e      	ldr	r0, [pc, #440]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f7e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8017f82:	210b      	movs	r1, #11
 8017f84:	f7fe fe9b 	bl	8016cbe <gpio_af_set>
 8017f88:	486b      	ldr	r0, [pc, #428]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f8a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8017f8e:	210b      	movs	r1, #11
 8017f90:	f7fe fe95 	bl	8016cbe <gpio_af_set>
 8017f94:	4868      	ldr	r0, [pc, #416]	; (8018138 <emac_start(unsigned char*)+0x314>)
 8017f96:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8017f9a:	210b      	movs	r1, #11
 8017f9c:	f7fe fe8f 	bl	8016cbe <gpio_af_set>
 8017fa0:	2302      	movs	r3, #2
 8017fa2:	4619      	mov	r1, r3
 8017fa4:	4865      	ldr	r0, [pc, #404]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fa6:	2200      	movs	r2, #0
 8017fa8:	f7fe fe4e 	bl	8016c48 <gpio_mode_set>
 8017fac:	4863      	ldr	r0, [pc, #396]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fae:	2302      	movs	r3, #2
 8017fb0:	2203      	movs	r2, #3
 8017fb2:	2100      	movs	r1, #0
 8017fb4:	f7fe fe68 	bl	8016c88 <gpio_output_options_set>
 8017fb8:	4860      	ldr	r0, [pc, #384]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fba:	2310      	movs	r3, #16
 8017fbc:	2200      	movs	r2, #0
 8017fbe:	2102      	movs	r1, #2
 8017fc0:	f7fe fe42 	bl	8016c48 <gpio_mode_set>
 8017fc4:	485d      	ldr	r0, [pc, #372]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fc6:	2310      	movs	r3, #16
 8017fc8:	2203      	movs	r2, #3
 8017fca:	2100      	movs	r1, #0
 8017fcc:	f7fe fe5c 	bl	8016c88 <gpio_output_options_set>
 8017fd0:	485a      	ldr	r0, [pc, #360]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fd2:	2320      	movs	r3, #32
 8017fd4:	2200      	movs	r2, #0
 8017fd6:	2102      	movs	r1, #2
 8017fd8:	f7fe fe36 	bl	8016c48 <gpio_mode_set>
 8017fdc:	2320      	movs	r3, #32
 8017fde:	4857      	ldr	r0, [pc, #348]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fe0:	2203      	movs	r2, #3
 8017fe2:	2100      	movs	r1, #0
 8017fe4:	f7fe fe50 	bl	8016c88 <gpio_output_options_set>
 8017fe8:	4854      	ldr	r0, [pc, #336]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017fea:	2202      	movs	r2, #2
 8017fec:	210b      	movs	r1, #11
 8017fee:	f7fe fe66 	bl	8016cbe <gpio_af_set>
 8017ff2:	4852      	ldr	r0, [pc, #328]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017ff4:	2210      	movs	r2, #16
 8017ff6:	210b      	movs	r1, #11
 8017ff8:	f7fe fe61 	bl	8016cbe <gpio_af_set>
 8017ffc:	484f      	ldr	r0, [pc, #316]	; (801813c <emac_start(unsigned char*)+0x318>)
 8017ffe:	2220      	movs	r2, #32
 8018000:	210b      	movs	r1, #11
 8018002:	f7fe fe5c 	bl	8016cbe <gpio_af_set>
 8018006:	4a4a      	ldr	r2, [pc, #296]	; (8018130 <emac_start(unsigned char*)+0x30c>)
 8018008:	4944      	ldr	r1, [pc, #272]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 801800a:	484d      	ldr	r0, [pc, #308]	; (8018140 <emac_start(unsigned char*)+0x31c>)
 801800c:	238b      	movs	r3, #139	; 0x8b
 801800e:	f7f2 fa3b 	bl	800a488 <printf>
 8018012:	4a4c      	ldr	r2, [pc, #304]	; (8018144 <emac_start(unsigned char*)+0x320>)
 8018014:	4941      	ldr	r1, [pc, #260]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8018016:	4842      	ldr	r0, [pc, #264]	; (8018120 <emac_start(unsigned char*)+0x2fc>)
 8018018:	238f      	movs	r3, #143	; 0x8f
 801801a:	f7f2 fa35 	bl	800a488 <printf>
 801801e:	f640 4019 	movw	r0, #3097	; 0xc19
 8018022:	f7fe fe8d 	bl	8016d40 <rcu_periph_clock_enable>
 8018026:	f640 401a 	movw	r0, #3098	; 0xc1a
 801802a:	f7fe fe89 	bl	8016d40 <rcu_periph_clock_enable>
 801802e:	f640 401b 	movw	r0, #3099	; 0xc1b
 8018032:	f7fe fe85 	bl	8016d40 <rcu_periph_clock_enable>
 8018036:	f7fe fdbf 	bl	8016bb8 <enet_deinit>
 801803a:	f7fe f9e7 	bl	801640c <enet_software_reset>
 801803e:	4604      	mov	r4, r0
 8018040:	bb70      	cbnz	r0, 80180a0 <emac_start(unsigned char*)+0x27c>
 8018042:	4a40      	ldr	r2, [pc, #256]	; (8018144 <emac_start(unsigned char*)+0x320>)
 8018044:	4935      	ldr	r1, [pc, #212]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 8018046:	483e      	ldr	r0, [pc, #248]	; (8018140 <emac_start(unsigned char*)+0x31c>)
 8018048:	2397      	movs	r3, #151	; 0x97
 801804a:	f7f2 fa1d 	bl	800a488 <printf>
 801804e:	4628      	mov	r0, r5
 8018050:	f000 fa20 	bl	8018494 <mac_address_get(unsigned char*)>
 8018054:	4629      	mov	r1, r5
 8018056:	2000      	movs	r0, #0
 8018058:	f7fe fac8 	bl	80165ec <enet_mac_address_set>
 801805c:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8018060:	f7fe f9e8 	bl	8016434 <enet_descriptors_chain_init>
 8018064:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8018068:	f7fe f9e4 	bl	8016434 <enet_descriptors_chain_init>
 801806c:	4e36      	ldr	r6, [pc, #216]	; (8018148 <emac_start(unsigned char*)+0x324>)
 801806e:	2500      	movs	r5, #0
 8018070:	4630      	mov	r0, r6
 8018072:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8018076:	3501      	adds	r5, #1
 8018078:	f7fe fab2 	bl	80165e0 <enet_transmit_checksum_config>
 801807c:	2d08      	cmp	r5, #8
 801807e:	f106 0610 	add.w	r6, r6, #16
 8018082:	d1f5      	bne.n	8018070 <emac_start(unsigned char*)+0x24c>
 8018084:	f7fe fcfa 	bl	8016a7c <enet_enable>
 8018088:	4a23      	ldr	r2, [pc, #140]	; (8018118 <emac_start(unsigned char*)+0x2f4>)
 801808a:	4924      	ldr	r1, [pc, #144]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 801808c:	482c      	ldr	r0, [pc, #176]	; (8018140 <emac_start(unsigned char*)+0x31c>)
 801808e:	23ce      	movs	r3, #206	; 0xce
 8018090:	f7f2 f9fa 	bl	800a488 <printf>
 8018094:	fab4 f084 	clz	r0, r4
 8018098:	0940      	lsrs	r0, r0, #5
 801809a:	4240      	negs	r0, r0
 801809c:	b005      	add	sp, #20
 801809e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80180a0:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80180a4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80180a8:	2001      	movs	r0, #1
 80180aa:	f7fe fb47 	bl	801673c <enet_init>
 80180ae:	4a1b      	ldr	r2, [pc, #108]	; (801811c <emac_start(unsigned char*)+0x2f8>)
 80180b0:	9000      	str	r0, [sp, #0]
 80180b2:	4924      	ldr	r1, [pc, #144]	; (8018144 <emac_start(unsigned char*)+0x320>)
 80180b4:	4f25      	ldr	r7, [pc, #148]	; (801814c <emac_start(unsigned char*)+0x328>)
 80180b6:	4e26      	ldr	r6, [pc, #152]	; (8018150 <emac_start(unsigned char*)+0x32c>)
 80180b8:	4604      	mov	r4, r0
 80180ba:	239d      	movs	r3, #157	; 0x9d
 80180bc:	4825      	ldr	r0, [pc, #148]	; (8018154 <emac_start(unsigned char*)+0x330>)
 80180be:	f7f2 f9e3 	bl	800a488 <printf>
 80180c2:	2200      	movs	r2, #0
 80180c4:	f10d 030e 	add.w	r3, sp, #14
 80180c8:	2101      	movs	r1, #1
 80180ca:	4610      	mov	r0, r2
 80180cc:	f7fe faa6 	bl	801661c <enet_phy_write_read>
 80180d0:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 80180d4:	2801      	cmp	r0, #1
 80180d6:	bf0c      	ite	eq
 80180d8:	463a      	moveq	r2, r7
 80180da:	4632      	movne	r2, r6
 80180dc:	481e      	ldr	r0, [pc, #120]	; (8018158 <emac_start(unsigned char*)+0x334>)
 80180de:	f7f2 f9d3 	bl	800a488 <printf>
 80180e2:	2201      	movs	r2, #1
 80180e4:	f10d 030e 	add.w	r3, sp, #14
 80180e8:	4611      	mov	r1, r2
 80180ea:	2000      	movs	r0, #0
 80180ec:	f7fe fa96 	bl	801661c <enet_phy_write_read>
 80180f0:	2201      	movs	r2, #1
 80180f2:	4611      	mov	r1, r2
 80180f4:	f10d 030e 	add.w	r3, sp, #14
 80180f8:	2000      	movs	r0, #0
 80180fa:	f7fe fa8f 	bl	801661c <enet_phy_write_read>
 80180fe:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8018102:	2801      	cmp	r0, #1
 8018104:	bf0c      	ite	eq
 8018106:	463a      	moveq	r2, r7
 8018108:	4632      	movne	r2, r6
 801810a:	f001 0126 	and.w	r1, r1, #38	; 0x26
 801810e:	4813      	ldr	r0, [pc, #76]	; (801815c <emac_start(unsigned char*)+0x338>)
 8018110:	f7f2 f9ba 	bl	800a488 <printf>
 8018114:	e79b      	b.n	801804e <emac_start(unsigned char*)+0x22a>
 8018116:	bf00      	nop
 8018118:	0801bf86 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, fp, ip, sp, pc}
 801811c:	0801bf91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 8018120:	08018745 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, pc}
 8018124:	0801bfbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8018128:	0801bfa6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 801812c:	0801bfc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8018130:	0801bffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8018134:	40020000 	andmi	r0, r2, r0
 8018138:	40020400 	andmi	r0, r2, r0, lsl #8
 801813c:	40020800 	andmi	r0, r2, r0, lsl #16
 8018140:	08018767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, pc}
 8018144:	0801c00d 	stmdaeq	r1, {r0, r2, r3, lr, pc}
 8018148:	2002d29c 	mulcs	r2, ip, r2
 801814c:	0801bf79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8018150:	0801bf80 	stmdaeq	r1, {r7, r8, r9, sl, fp, ip, sp, pc}
 8018154:	0801c01d 	stmdaeq	r1, {r0, r2, r3, r4, lr, pc}
 8018158:	0801c044 	stmdaeq	r1, {r2, r6, lr, pc}
 801815c:	0801c052 	stmdaeq	r1, {r1, r4, r6, lr, pc}

08018160 <adc_clock_config>:
 8018160:	4b06      	ldr	r3, [pc, #24]	; (801817c <adc_clock_config+0x1c>)
 8018162:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8018166:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 801816a:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 801816e:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8018172:	4310      	orrs	r0, r2
 8018174:	f8c3 0304 	str.w	r0, [r3, #772]	; 0x304
 8018178:	4770      	bx	lr
 801817a:	bf00      	nop
 801817c:	40012000 	andmi	r2, r1, r0

08018180 <adc_special_function_config>:
 8018180:	b510      	push	{r4, lr}
 8018182:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8018186:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801818a:	f001 0102 	and.w	r1, r1, #2
 801818e:	b17a      	cbz	r2, 80181b0 <adc_special_function_config+0x30>
 8018190:	b11b      	cbz	r3, 801819a <adc_special_function_config+0x1a>
 8018192:	6843      	ldr	r3, [r0, #4]
 8018194:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8018198:	6043      	str	r3, [r0, #4]
 801819a:	b11c      	cbz	r4, 80181a4 <adc_special_function_config+0x24>
 801819c:	6843      	ldr	r3, [r0, #4]
 801819e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80181a2:	6043      	str	r3, [r0, #4]
 80181a4:	b119      	cbz	r1, 80181ae <adc_special_function_config+0x2e>
 80181a6:	6883      	ldr	r3, [r0, #8]
 80181a8:	f043 0302 	orr.w	r3, r3, #2
 80181ac:	6083      	str	r3, [r0, #8]
 80181ae:	bd10      	pop	{r4, pc}
 80181b0:	b11b      	cbz	r3, 80181ba <adc_special_function_config+0x3a>
 80181b2:	6843      	ldr	r3, [r0, #4]
 80181b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80181b8:	6043      	str	r3, [r0, #4]
 80181ba:	b11c      	cbz	r4, 80181c4 <adc_special_function_config+0x44>
 80181bc:	6843      	ldr	r3, [r0, #4]
 80181be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80181c2:	6043      	str	r3, [r0, #4]
 80181c4:	2900      	cmp	r1, #0
 80181c6:	d0f2      	beq.n	80181ae <adc_special_function_config+0x2e>
 80181c8:	6883      	ldr	r3, [r0, #8]
 80181ca:	f023 0302 	bic.w	r3, r3, #2
 80181ce:	e7ed      	b.n	80181ac <adc_special_function_config+0x2c>

080181d0 <adc_data_alignment_config>:
 80181d0:	6883      	ldr	r3, [r0, #8]
 80181d2:	b119      	cbz	r1, 80181dc <adc_data_alignment_config+0xc>
 80181d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80181d8:	6083      	str	r3, [r0, #8]
 80181da:	4770      	bx	lr
 80181dc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80181e0:	e7fa      	b.n	80181d8 <adc_data_alignment_config+0x8>

080181e2 <adc_enable>:
 80181e2:	6883      	ldr	r3, [r0, #8]
 80181e4:	07db      	lsls	r3, r3, #31
 80181e6:	bf5e      	ittt	pl
 80181e8:	6883      	ldrpl	r3, [r0, #8]
 80181ea:	f043 0301 	orrpl.w	r3, r3, #1
 80181ee:	6083      	strpl	r3, [r0, #8]
 80181f0:	4770      	bx	lr

080181f2 <adc_calibration_enable>:
 80181f2:	6883      	ldr	r3, [r0, #8]
 80181f4:	f043 0308 	orr.w	r3, r3, #8
 80181f8:	f100 0208 	add.w	r2, r0, #8
 80181fc:	6083      	str	r3, [r0, #8]
 80181fe:	6813      	ldr	r3, [r2, #0]
 8018200:	0719      	lsls	r1, r3, #28
 8018202:	d4fc      	bmi.n	80181fe <adc_calibration_enable+0xc>
 8018204:	6883      	ldr	r3, [r0, #8]
 8018206:	f043 0304 	orr.w	r3, r3, #4
 801820a:	6083      	str	r3, [r0, #8]
 801820c:	6813      	ldr	r3, [r2, #0]
 801820e:	075b      	lsls	r3, r3, #29
 8018210:	d4fc      	bmi.n	801820c <adc_calibration_enable+0x1a>
 8018212:	4770      	bx	lr

08018214 <adc_channel_16_to_18>:
 8018214:	f400 0380 	and.w	r3, r0, #4194304	; 0x400000
 8018218:	f400 0000 	and.w	r0, r0, #8388608	; 0x800000
 801821c:	b181      	cbz	r1, 8018240 <adc_channel_16_to_18+0x2c>
 801821e:	b133      	cbz	r3, 801822e <adc_channel_16_to_18+0x1a>
 8018220:	4a0f      	ldr	r2, [pc, #60]	; (8018260 <adc_channel_16_to_18+0x4c>)
 8018222:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8018226:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 801822a:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 801822e:	b130      	cbz	r0, 801823e <adc_channel_16_to_18+0x2a>
 8018230:	4a0b      	ldr	r2, [pc, #44]	; (8018260 <adc_channel_16_to_18+0x4c>)
 8018232:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8018236:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801823a:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 801823e:	4770      	bx	lr
 8018240:	b133      	cbz	r3, 8018250 <adc_channel_16_to_18+0x3c>
 8018242:	4a07      	ldr	r2, [pc, #28]	; (8018260 <adc_channel_16_to_18+0x4c>)
 8018244:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8018248:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 801824c:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8018250:	2800      	cmp	r0, #0
 8018252:	d0f4      	beq.n	801823e <adc_channel_16_to_18+0x2a>
 8018254:	4a02      	ldr	r2, [pc, #8]	; (8018260 <adc_channel_16_to_18+0x4c>)
 8018256:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 801825a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 801825e:	e7ec      	b.n	801823a <adc_channel_16_to_18+0x26>
 8018260:	40012000 	andmi	r2, r1, r0

08018264 <adc_channel_length_config>:
 8018264:	2901      	cmp	r1, #1
 8018266:	d002      	beq.n	801826e <adc_channel_length_config+0xa>
 8018268:	2902      	cmp	r1, #2
 801826a:	d00c      	beq.n	8018286 <adc_channel_length_config+0x22>
 801826c:	4770      	bx	lr
 801826e:	3a01      	subs	r2, #1
 8018270:	2a0f      	cmp	r2, #15
 8018272:	d813      	bhi.n	801829c <adc_channel_length_config+0x38>
 8018274:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8018276:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801827a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801827c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801827e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8018282:	62c3      	str	r3, [r0, #44]	; 0x2c
 8018284:	4770      	bx	lr
 8018286:	3a01      	subs	r2, #1
 8018288:	2a03      	cmp	r2, #3
 801828a:	d807      	bhi.n	801829c <adc_channel_length_config+0x38>
 801828c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801828e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8018292:	6383      	str	r3, [r0, #56]	; 0x38
 8018294:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8018296:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801829a:	6383      	str	r3, [r0, #56]	; 0x38
 801829c:	4770      	bx	lr

0801829e <adc_inserted_channel_config>:
 801829e:	2903      	cmp	r1, #3
 80182a0:	b530      	push	{r4, r5, lr}
 80182a2:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80182a4:	d80f      	bhi.n	80182c6 <adc_inserted_channel_config+0x28>
 80182a6:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80182aa:	1a61      	subs	r1, r4, r1
 80182ac:	f06f 0404 	mvn.w	r4, #4
 80182b0:	4361      	muls	r1, r4
 80182b2:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80182b4:	310f      	adds	r1, #15
 80182b6:	241f      	movs	r4, #31
 80182b8:	408c      	lsls	r4, r1
 80182ba:	ea25 0404 	bic.w	r4, r5, r4
 80182be:	fa02 f101 	lsl.w	r1, r2, r1
 80182c2:	4321      	orrs	r1, r4
 80182c4:	6381      	str	r1, [r0, #56]	; 0x38
 80182c6:	2a09      	cmp	r2, #9
 80182c8:	d80a      	bhi.n	80182e0 <adc_inserted_channel_config+0x42>
 80182ca:	6901      	ldr	r1, [r0, #16]
 80182cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80182d0:	2407      	movs	r4, #7
 80182d2:	4094      	lsls	r4, r2
 80182d4:	ea21 0104 	bic.w	r1, r1, r4
 80182d8:	4093      	lsls	r3, r2
 80182da:	430b      	orrs	r3, r1
 80182dc:	6103      	str	r3, [r0, #16]
 80182de:	bd30      	pop	{r4, r5, pc}
 80182e0:	2a12      	cmp	r2, #18
 80182e2:	d8fc      	bhi.n	80182de <adc_inserted_channel_config+0x40>
 80182e4:	3a0a      	subs	r2, #10
 80182e6:	68c1      	ldr	r1, [r0, #12]
 80182e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80182ec:	2407      	movs	r4, #7
 80182ee:	4094      	lsls	r4, r2
 80182f0:	ea21 0104 	bic.w	r1, r1, r4
 80182f4:	4093      	lsls	r3, r2
 80182f6:	430b      	orrs	r3, r1
 80182f8:	60c3      	str	r3, [r0, #12]
 80182fa:	e7f0      	b.n	80182de <adc_inserted_channel_config+0x40>

080182fc <adc_external_trigger_config>:
 80182fc:	2901      	cmp	r1, #1
 80182fe:	d002      	beq.n	8018306 <adc_external_trigger_config+0xa>
 8018300:	2902      	cmp	r1, #2
 8018302:	d009      	beq.n	8018318 <adc_external_trigger_config+0x1c>
 8018304:	4770      	bx	lr
 8018306:	6883      	ldr	r3, [r0, #8]
 8018308:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 801830c:	6083      	str	r3, [r0, #8]
 801830e:	6883      	ldr	r3, [r0, #8]
 8018310:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8018314:	6083      	str	r3, [r0, #8]
 8018316:	4770      	bx	lr
 8018318:	6883      	ldr	r3, [r0, #8]
 801831a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801831e:	6083      	str	r3, [r0, #8]
 8018320:	6883      	ldr	r3, [r0, #8]
 8018322:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8018326:	e7f5      	b.n	8018314 <adc_external_trigger_config+0x18>

08018328 <adc_software_trigger_enable>:
 8018328:	2901      	cmp	r1, #1
 801832a:	d002      	beq.n	8018332 <adc_software_trigger_enable+0xa>
 801832c:	2902      	cmp	r1, #2
 801832e:	d005      	beq.n	801833c <adc_software_trigger_enable+0x14>
 8018330:	4770      	bx	lr
 8018332:	6883      	ldr	r3, [r0, #8]
 8018334:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018338:	6083      	str	r3, [r0, #8]
 801833a:	4770      	bx	lr
 801833c:	6883      	ldr	r3, [r0, #8]
 801833e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8018342:	e7f9      	b.n	8018338 <adc_software_trigger_enable+0x10>

08018344 <i2c_clock_config>:
 8018344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018346:	4605      	mov	r5, r0
 8018348:	2002      	movs	r0, #2
 801834a:	460c      	mov	r4, r1
 801834c:	4617      	mov	r7, r2
 801834e:	f7fe fd33 	bl	8016db8 <rcu_clock_freq_get>
 8018352:	4a26      	ldr	r2, [pc, #152]	; (80183ec <i2c_clock_config+0xa8>)
 8018354:	686e      	ldr	r6, [r5, #4]
 8018356:	4603      	mov	r3, r0
 8018358:	4825      	ldr	r0, [pc, #148]	; (80183f0 <i2c_clock_config+0xac>)
 801835a:	fbb3 f0f0 	udiv	r0, r3, r0
 801835e:	4293      	cmp	r3, r2
 8018360:	bf94      	ite	ls
 8018362:	4601      	movls	r1, r0
 8018364:	2132      	movhi	r1, #50	; 0x32
 8018366:	4a23      	ldr	r2, [pc, #140]	; (80183f4 <i2c_clock_config+0xb0>)
 8018368:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 801836c:	430e      	orrs	r6, r1
 801836e:	4294      	cmp	r4, r2
 8018370:	606e      	str	r6, [r5, #4]
 8018372:	d811      	bhi.n	8018398 <i2c_clock_config+0x54>
 8018374:	3001      	adds	r0, #1
 8018376:	2831      	cmp	r0, #49	; 0x31
 8018378:	bf86      	itte	hi
 801837a:	2232      	movhi	r2, #50	; 0x32
 801837c:	622a      	strhi	r2, [r5, #32]
 801837e:	6228      	strls	r0, [r5, #32]
 8018380:	0064      	lsls	r4, r4, #1
 8018382:	fbb3 f4f4 	udiv	r4, r3, r4
 8018386:	2c04      	cmp	r4, #4
 8018388:	69ea      	ldr	r2, [r5, #28]
 801838a:	bf38      	it	cc
 801838c:	2404      	movcc	r4, #4
 801838e:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8018392:	4314      	orrs	r4, r2
 8018394:	61ec      	str	r4, [r5, #28]
 8018396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018398:	4a17      	ldr	r2, [pc, #92]	; (80183f8 <i2c_clock_config+0xb4>)
 801839a:	4294      	cmp	r4, r2
 801839c:	d8fb      	bhi.n	8018396 <i2c_clock_config+0x52>
 801839e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80183a2:	4351      	muls	r1, r2
 80183a4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80183a8:	fbb1 f1f2 	udiv	r1, r1, r2
 80183ac:	3101      	adds	r1, #1
 80183ae:	6229      	str	r1, [r5, #32]
 80183b0:	b9a7      	cbnz	r7, 80183dc <i2c_clock_config+0x98>
 80183b2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80183b6:	fbb3 f4f4 	udiv	r4, r3, r4
 80183ba:	69eb      	ldr	r3, [r5, #28]
 80183bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80183c0:	61eb      	str	r3, [r5, #28]
 80183c2:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80183c6:	b90b      	cbnz	r3, 80183cc <i2c_clock_config+0x88>
 80183c8:	f044 0401 	orr.w	r4, r4, #1
 80183cc:	69eb      	ldr	r3, [r5, #28]
 80183ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80183d2:	61eb      	str	r3, [r5, #28]
 80183d4:	69eb      	ldr	r3, [r5, #28]
 80183d6:	4323      	orrs	r3, r4
 80183d8:	61eb      	str	r3, [r5, #28]
 80183da:	e7dc      	b.n	8018396 <i2c_clock_config+0x52>
 80183dc:	2219      	movs	r2, #25
 80183de:	4354      	muls	r4, r2
 80183e0:	fbb3 f4f4 	udiv	r4, r3, r4
 80183e4:	69eb      	ldr	r3, [r5, #28]
 80183e6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80183ea:	e7e9      	b.n	80183c0 <i2c_clock_config+0x7c>
 80183ec:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 80183f0:	000f4240 	andeq	r4, pc, r0, asr #4
 80183f4:	000186a0 	andeq	r8, r1, r0, lsr #13
 80183f8:	00061a80 	andeq	r1, r6, r0, lsl #21

080183fc <i2c_ack_config>:
 80183fc:	6803      	ldr	r3, [r0, #0]
 80183fe:	2901      	cmp	r1, #1
 8018400:	bf0c      	ite	eq
 8018402:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8018406:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 801840a:	6003      	str	r3, [r0, #0]
 801840c:	4770      	bx	lr

0801840e <i2c_ackpos_config>:
 801840e:	6803      	ldr	r3, [r0, #0]
 8018410:	b919      	cbnz	r1, 801841a <i2c_ackpos_config+0xc>
 8018412:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8018416:	6003      	str	r3, [r0, #0]
 8018418:	4770      	bx	lr
 801841a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801841e:	e7fa      	b.n	8018416 <i2c_ackpos_config+0x8>

08018420 <i2c_master_addressing>:
 8018420:	3202      	adds	r2, #2
 8018422:	bf0c      	ite	eq
 8018424:	f021 0101 	biceq.w	r1, r1, #1
 8018428:	f041 0101 	orrne.w	r1, r1, #1
 801842c:	6101      	str	r1, [r0, #16]
 801842e:	4770      	bx	lr

08018430 <i2c_enable>:
 8018430:	6803      	ldr	r3, [r0, #0]
 8018432:	f043 0301 	orr.w	r3, r3, #1
 8018436:	6003      	str	r3, [r0, #0]
 8018438:	4770      	bx	lr

0801843a <i2c_start_on_bus>:
 801843a:	6803      	ldr	r3, [r0, #0]
 801843c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8018440:	6003      	str	r3, [r0, #0]
 8018442:	4770      	bx	lr

08018444 <i2c_stop_on_bus>:
 8018444:	6803      	ldr	r3, [r0, #0]
 8018446:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801844a:	6003      	str	r3, [r0, #0]
 801844c:	4770      	bx	lr

0801844e <i2c_data_transmit>:
 801844e:	6101      	str	r1, [r0, #16]
 8018450:	4770      	bx	lr

08018452 <i2c_data_receive>:
 8018452:	6900      	ldr	r0, [r0, #16]
 8018454:	b2c0      	uxtb	r0, r0
 8018456:	4770      	bx	lr

08018458 <i2c_flag_get>:
 8018458:	098b      	lsrs	r3, r1, #6
 801845a:	f001 011f 	and.w	r1, r1, #31
 801845e:	581a      	ldr	r2, [r3, r0]
 8018460:	2301      	movs	r3, #1
 8018462:	408b      	lsls	r3, r1
 8018464:	4213      	tst	r3, r2
 8018466:	bf14      	ite	ne
 8018468:	2001      	movne	r0, #1
 801846a:	2000      	moveq	r0, #0
 801846c:	4770      	bx	lr

0801846e <i2c_flag_clear>:
 801846e:	f240 5301 	movw	r3, #1281	; 0x501
 8018472:	4299      	cmp	r1, r3
 8018474:	b510      	push	{r4, lr}
 8018476:	d102      	bne.n	801847e <i2c_flag_clear+0x10>
 8018478:	6943      	ldr	r3, [r0, #20]
 801847a:	6983      	ldr	r3, [r0, #24]
 801847c:	bd10      	pop	{r4, pc}
 801847e:	098c      	lsrs	r4, r1, #6
 8018480:	2201      	movs	r2, #1
 8018482:	5823      	ldr	r3, [r4, r0]
 8018484:	f001 011f 	and.w	r1, r1, #31
 8018488:	408a      	lsls	r2, r1
 801848a:	ea23 0302 	bic.w	r3, r3, r2
 801848e:	5023      	str	r3, [r4, r0]
 8018490:	e7f4      	b.n	801847c <i2c_flag_clear+0xe>
	...

08018494 <mac_address_get(unsigned char*)>:
 8018494:	b570      	push	{r4, r5, r6, lr}
 8018496:	4a11      	ldr	r2, [pc, #68]	; (80184dc <mac_address_get(unsigned char*)+0x48>)
 8018498:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 801849c:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	; 0xa14
 80184a0:	7042      	strb	r2, [r0, #1]
 80184a2:	b086      	sub	sp, #24
 80184a4:	0c19      	lsrs	r1, r3, #16
 80184a6:	0a1c      	lsrs	r4, r3, #8
 80184a8:	70c1      	strb	r1, [r0, #3]
 80184aa:	7104      	strb	r4, [r0, #4]
 80184ac:	7143      	strb	r3, [r0, #5]
 80184ae:	0e1e      	lsrs	r6, r3, #24
 80184b0:	2502      	movs	r5, #2
 80184b2:	b2db      	uxtb	r3, r3
 80184b4:	b2e4      	uxtb	r4, r4
 80184b6:	b2c9      	uxtb	r1, r1
 80184b8:	b2d2      	uxtb	r2, r2
 80184ba:	7005      	strb	r5, [r0, #0]
 80184bc:	7086      	strb	r6, [r0, #2]
 80184be:	e9cd 6102 	strd	r6, r1, [sp, #8]
 80184c2:	e9cd 5200 	strd	r5, r2, [sp]
 80184c6:	9305      	str	r3, [sp, #20]
 80184c8:	4a05      	ldr	r2, [pc, #20]	; (80184e0 <mac_address_get(unsigned char*)+0x4c>)
 80184ca:	4906      	ldr	r1, [pc, #24]	; (80184e4 <mac_address_get(unsigned char*)+0x50>)
 80184cc:	9404      	str	r4, [sp, #16]
 80184ce:	232f      	movs	r3, #47	; 0x2f
 80184d0:	4805      	ldr	r0, [pc, #20]	; (80184e8 <mac_address_get(unsigned char*)+0x54>)
 80184d2:	f7f1 ffd9 	bl	800a488 <printf>
 80184d6:	b006      	add	sp, #24
 80184d8:	bd70      	pop	{r4, r5, r6, pc}
 80184da:	bf00      	nop
 80184dc:	1fff7000 	svcne	0x00ff7000
 80184e0:	0801c060 	stmdaeq	r1, {r5, r6, lr, pc}
 80184e4:	0801c074 	stmdaeq	r1, {r2, r4, r5, r6, lr, pc}
 80184e8:	0801c084 	stmdaeq	r1, {r2, r7, lr, pc}

080184ec <__popcountsi2>:
 80184ec:	0843      	lsrs	r3, r0, #1
 80184ee:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 80184f2:	1ac0      	subs	r0, r0, r3
 80184f4:	0883      	lsrs	r3, r0, #2
 80184f6:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 80184fa:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 80184fe:	4418      	add	r0, r3
 8018500:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8018504:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8018508:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 801850c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8018510:	0e00      	lsrs	r0, r0, #24
 8018512:	4770      	bx	lr

Disassembly of section .rodata:

08018514 <vtable for DisplayHandler-0x284>:
	...
 801851c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8018520:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8018524:	00000000 	andeq	r0, r0, r0
 8018528:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801852c:	6f436e28 	svcvs	0x00436e28
 8018530:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 8018534:	202d2073 	eorcs	r2, sp, r3, ror r0
 8018538:	3e202931 			; <UNDEFINED> instruction: 0x3e202931
 801853c:	0030203d 	eorseq	r2, r0, sp, lsr r0
 8018540:	74786554 	ldrbtvc	r6, [r8], #-1364	; 0xfffffaac
 8018544:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8018548:	2e007375 	mcrcs	3, 0, r7, cr0, cr5, {3}
 801854c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8018550:	69642d62 	stmdbvs	r4!, {r1, r5, r6, r8, sl, fp, sp}^
 8018554:	616c7073 	smcvs	50947	; 0xc703
 8018558:	6e692f79 	mcrvs	15, 3, r2, cr9, cr9, {3}
 801855c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 8018560:	32692f65 	rsbcc	r2, r9, #404	; 0x194
 8018564:	69642f63 	stmdbvs	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 8018568:	616c7073 	smcvs	50947	; 0xc703
 801856c:	00682e79 	rsbeq	r2, r8, r9, ror lr
 8018570:	6f526e28 	svcvs	0x00526e28
 8018574:	2d207377 	stccs	3, cr7, [r0, #-476]!	; 0xfffffe24
 8018578:	20293120 	eorcs	r3, r9, r0, lsr #2
 801857c:	30203d3e 	eorcc	r3, r0, lr, lsr sp
 8018580:	3a333100 	bcc	8ce4988 <__exidx_end+0xcc88c8>
 8018584:	303a3735 	eorscc	r3, sl, r5, lsr r7
 8018588:	65440038 	strbvs	r0, [r4, #-56]	; 0xffffffc8
 801858c:	35322063 	ldrcc	r2, [r2, #-99]!	; 0xffffff9d
 8018590:	32303220 	eorscc	r3, r0, #32, 4
 8018594:	5b1b0032 	blpl	86d8664 <__exidx_end+0x6bc5a4>
 8018598:	736d3233 	cmnvc	sp, #805306371	; 0x30000003
 801859c:	204e4341 	subcs	r4, lr, r1, asr #6
 80185a0:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 80185a4:	69502031 	ldmdbvs	r0, {r0, r4, r5, sp}^
 80185a8:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80185ac:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 80185b0:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 80185b4:	7b207265 	blvc	8834f50 <__exidx_end+0x818e90>
 80185b8:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 80185bc:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80185c0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80185c4:	207d7365 	rsbscs	r7, sp, r5, ror #6
 80185c8:	7832202f 	ldmdavc	r2!, {r0, r1, r2, r3, r5, sp}
 80185cc:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80185d0:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 80185d4:	5f2e006d 	svcpl	0x002e006d
 80185d8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80185dc:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 80185e0:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 80185e4:	6f6e0070 	svcvs	0x006e0070
 80185e8:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 80185ec:	204e4341 	subcs	r4, lr, r1, asr #6
 80185f0:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 80185f4:	69502031 	ldmdbvs	r0, {r0, r4, r5, sp}^
 80185f8:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80185fc:	00584d44 	subseq	r4, r8, r4, asr #26
 8018600:	50746553 	rsbspl	r6, r4, r3, asr r5
 8018604:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8018608:	2e006e72 	mcrcs	14, 0, r6, cr0, cr2, {3}
 801860c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8018610:	73772d62 	cmnvc	r7, #6272	; 0x1880
 8018614:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 8018618:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 801861c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 8018620:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 8018624:	65746c65 	ldrbvs	r6, [r4, #-3173]!	; 0xfffff39b
 8018628:	61707473 	cmnvs	r0, r3, ror r4
 801862c:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
 8018630:	00682e6e 	rsbeq	r2, r8, lr, ror #28
 8018634:	486e5f73 	stmdami	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018638:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 801863c:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
 8018640:	00312d20 	eorseq	r2, r1, r0, lsr #26
 8018644:	43786d44 	cmnmi	r8, #68, 26	; 0x1100
 8018648:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801864c:	70645567 	rsbvc	r5, r4, r7, ror #10
 8018650:	2f2e2e00 	svccs	0x002e2e00
 8018654:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
 8018658:	2f786d64 	svccs	0x00786d64
 801865c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 8018660:	2f656475 	svccs	0x00656475
 8018664:	63786d64 	cmnvs	r8, #100, 26	; 0x1900
 8018668:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801866c:	70647567 	rsbvc	r7, r4, r7, ror #10
 8018670:	2e00682e 	cdpcs	8, 0, cr6, cr0, cr14, {1}
 8018674:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8018678:	696c2d62 	stmdbvs	ip!, {r1, r5, r6, r8, sl, fp, sp}^
 801867c:	73746867 	cmnvc	r4, #6750208	; 0x670000
 8018680:	692f7465 	stmdbvs	pc!, {r0, r2, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
 8018684:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 8018688:	6c2f6564 	cfstr32vs	mvfx6, [pc], #-400	; 8018500 <__popcountsi2+0x14>
 801868c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 8018690:	36746573 			; <UNDEFINED> instruction: 0x36746573
 8018694:	74697734 	strbtvc	r7, [r9], #-1844	; 0xfffff8cc
 8018698:	682e3468 	stmdavs	lr!, {r3, r5, r6, sl, ip, sp}
 801869c:	67694c00 	strbvs	r4, [r9, -r0, lsl #24]!
 80186a0:	65537468 	ldrbvs	r7, [r3, #-1128]	; 0xfffffb98
 80186a4:	77343674 			; <UNDEFINED> instruction: 0x77343674
 80186a8:	34687469 	strbtcc	r7, [r8], #-1129	; 0xfffffb97
 80186ac:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 80186b0:	73252029 			; <UNDEFINED> instruction: 0x73252029
 80186b4:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 80186b8:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 80186bc:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 80186c0:	70252070 	eorvc	r2, r5, r0, ror r0
 80186c4:	4173000a 	cmnmi	r3, sl
 80186c8:	50204e43 	eorpl	r4, r0, r3, asr #28
 80186cc:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80186d0:	2d752520 	cfldr64cs	mvdx2, [r5, #-128]!	; 0xffffff80
 80186d4:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 80186d8:	4d442064 	stclmi	0, cr2, [r4, #-400]	; 0xfffffe70
 80186dc:	75252058 	strvc	r2, [r5, #-88]!	; 0xffffffa8
 80186e0:	33444700 	movtcc	r4, #18176	; 0x4700
 80186e4:	35344632 	ldrcc	r4, [r4, #-1586]!	; 0xfffff9ce
 80186e8:	20495630 	subcs	r5, r9, r0, lsr r6
 80186ec:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80186f0:	4d442d6c 	stclmi	13, cr2, [r4, #-432]	; 0xfffffe50
 80186f4:	41730058 	cmnmi	r3, r8, asr r0
 80186f8:	50204e43 	eorpl	r4, r0, r3, asr #28
 80186fc:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8018700:	253a3820 	ldrcs	r3, [sl, #-2080]!	; 0xfffff7e0
 8018704:	64257864 	strtvs	r7, [r5], #-2148	; 0xfffff79c
 8018708:	3a732500 	bcc	9ce1b10 <__exidx_end+0x1cc5a50>
 801870c:	47206425 	strmi	r6, [r0, -r5, lsr #8]!
 8018710:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 8018714:	73250073 			; <UNDEFINED> instruction: 0x73250073
 8018718:	0075253a 	rsbseq	r2, r5, sl, lsr r5
 801871c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8018720:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
 8018724:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 8018728:	6d64722d 	sfmvs	f7, 2, [r4, #-180]!	; 0xffffff4c
 801872c:	2f74656e 	svccs	0x0074656e
 8018730:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 8018734:	2f656475 	svccs	0x00656475
 8018738:	70726c6c 	rsbsvc	r6, r2, ip, ror #24
 801873c:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8018740:	682e6563 	stmdavs	lr!, {r0, r1, r5, r6, r8, sl, sp, lr}
 8018744:	3e2d2d00 	cdpcc	13, 2, cr2, cr13, cr0, {0}
 8018748:	3a732520 	bcc	9ce1bd0 <__exidx_end+0x1cc5b10>
 801874c:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8018750:	6d000a64 	vstrvs	s0, [r0, #-400]	; 0xfffffe70
 8018754:	61486e5f 	cmpvs	r8, pc, asr lr
 8018758:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 801875c:	50524c4c 	subspl	r4, r2, ip, asr #24
 8018760:	203d2120 	eorscs	r2, sp, r0, lsr #2
 8018764:	3c00312d 	stfccs	f3, [r0], {45}	; 0x2d
 8018768:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 801876c:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 8018770:	0a64253a 	beq	9921c60 <__exidx_end+0x1905ba0>
 8018774:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 8018778:	72620021 	rsbvc	r0, r2, #33	; 0x21
 801877c:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8018780:	62616d00 	rsbvs	r6, r1, #0, 26
 8018784:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 8018788:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 801878c:	73002368 	movwvc	r2, #872	; 0x368
 8018790:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8018794:	00000023 	andeq	r0, r0, r3, lsr #32

08018798 <vtable for DisplayHandler>:
	...
 80187a0:	0800907f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, ip, pc}
 80187a4:	080091c1 	stmdaeq	r0, {r0, r6, r7, r8, ip, pc}
 80187a8:	08009215 	stmdaeq	r0, {r0, r2, r4, r9, ip, pc}

080187ac <vtable for PixelDmxStartStop>:
	...
 80187b4:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 80187b8:	080091d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, ip, pc}
 80187bc:	08009085 	stmdaeq	r0, {r0, r2, r7, ip, pc}
 80187c0:	08009095 	stmdaeq	r0, {r0, r2, r4, r7, ip, pc}

080187c4 <vtable for LightSet64with4>:
	...
 80187cc:	080090a5 	stmdaeq	r0, {r0, r2, r5, r7, ip, pc}
 80187d0:	080091cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, ip, pc}
 80187d4:	080090a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, ip, pc}
 80187d8:	080090c9 	stmdaeq	r0, {r0, r3, r6, r7, ip, pc}
 80187dc:	080090eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, ip, pc}
 80187e0:	0800911f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, ip, pc}
 80187e4:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 80187e8:	08009141 	stmdaeq	r0, {r0, r6, r8, ip, pc}
 80187ec:	0800915f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, ip, pc}
 80187f0:	08009163 	stmdaeq	r0, {r0, r1, r5, r6, r8, ip, pc}
 80187f4:	08009169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, pc}
 80187f8:	0800916d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, ip, pc}

080187fc <vtable for RDMNetDevice>:
	...
 8018804:	08009265 	stmdaeq	r0, {r0, r2, r5, r6, r9, ip, pc}
 8018808:	0800928d 	stmdaeq	r0, {r0, r2, r3, r7, r9, ip, pc}
 801880c:	0800d8cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, fp, ip, lr, pc}
 8018810:	0800d8d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, ip, lr, pc}
 8018814:	08009171 	stmdaeq	r0, {r0, r4, r5, r6, r8, ip, pc}
 8018818:	08009185 	stmdaeq	r0, {r0, r2, r7, r8, ip, pc}
 801881c:	080091e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, ip, pc}
 8018820:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8018824:	00000000 	andeq	r0, r0, r0
 8018828:	08009285 	stmdaeq	r0, {r0, r2, r7, r9, ip, pc}
 801882c:	0800929f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8018830:	0800917d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip, pc}
 8018834:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8018838:	080091f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, pc}

0801883c <CSWTCH.134>:
 801883c:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8018840:	 			; <UNDEFINED> instruction: 0x312e3146

08018841 <SOFTWARE_VERSION>:
 8018841:	00312e31 	eorseq	r2, r1, r1, lsr lr

08018845 <gamma10_0>:
 8018845:	03020100 	movweq	r0, #8448	; 0x2100
 8018849:	07060504 	streq	r0, [r6, -r4, lsl #10]
 801884d:	0b0a0908 	bleq	829ac75 <__exidx_end+0x27ebb5>
 8018851:	0f0e0d0c 	svceq	0x000e0d0c
 8018855:	13121110 	tstne	r2, #16, 2
 8018859:	17161514 			; <UNDEFINED> instruction: 0x17161514
 801885d:	1b1a1918 	blne	869ecc5 <__exidx_end+0x682c05>
 8018861:	1f1e1d1c 	svcne	0x001e1d1c
 8018865:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018869:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 801886d:	2b2a2928 	blcs	8aa2d15 <__exidx_end+0xa86c55>
 8018871:	2f2e2d2c 	svccs	0x002e2d2c
 8018875:	33323130 	teqcc	r2, #48, 2
 8018879:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801887d:	3b3a3938 	blcc	8ea6d65 <__exidx_end+0xe8aca5>
 8018881:	3f3e3d3c 	svccc	0x003e3d3c
 8018885:	43424140 	movtmi	r4, #8512	; 0x2140
 8018889:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801888d:	4b4a4948 	blmi	92aadb5 <__exidx_end+0x128ecf5>
 8018891:	4f4e4d4c 	svcmi	0x004e4d4c
 8018895:	53525150 	cmppl	r2, #80, 2
 8018899:	57565554 			; <UNDEFINED> instruction: 0x57565554
 801889d:	5b5a5958 	blpl	96aee05 <__exidx_end+0x1692d45>
 80188a1:	5f5e5d5c 	svcpl	0x005e5d5c
 80188a5:	63626160 	cmnvs	r2, #96, 2
 80188a9:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80188ad:	6b6a6968 	blvs	9ab2e55 <__exidx_end+0x1a96d95>
 80188b1:	6f6e6d6c 	svcvs	0x006e6d6c
 80188b5:	73727170 	cmnvc	r2, #112, 2
 80188b9:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80188bd:	7b7a7978 	blvc	9eb6ea5 <__exidx_end+0x1e9ade5>
 80188c1:	7f7e7d7c 	svcvc	0x007e7d7c
 80188c5:	83828180 	orrhi	r8, r2, #128, 2
 80188c9:	87868584 	strhi	r8, [r6, r4, lsl #11]
 80188cd:	8b8a8988 	blhi	62baef5 <__stack_size+0x62b6ef5>
 80188d1:	8f8e8d8c 	svchi	0x008e8d8c
 80188d5:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 80188d9:	97969594 			; <UNDEFINED> instruction: 0x97969594
 80188dd:	9b9a9998 	blls	66bef45 <__stack_size+0x66baf45>
 80188e1:	9f9e9d9c 	svcls	0x009e9d9c
 80188e5:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80188e9:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 80188ed:	abaaa9a8 	blge	6ac2f95 <__stack_size+0x6abef95>
 80188f1:	afaeadac 	svcge	0x00aeadac
 80188f5:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 80188f9:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 80188fd:	bbbab9b8 	bllt	6ec6fe5 <__stack_size+0x6ec2fe5>
 8018901:	bfbebdbc 	svclt	0x00bebdbc
 8018905:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8018909:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801890d:	cbcac9c8 	blgt	72cb035 <__stack_size+0x72c7035>
 8018911:	cfcecdcc 	svcgt	0x00cecdcc
 8018915:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8018919:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 801891d:	dbdad9d8 	blle	76cf085 <__stack_size+0x76cb085>
 8018921:	dfdedddc 	svcle	0x00dedddc
 8018925:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8018929:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 801892d:	ebeae9e8 	bl	7ad30d5 <__stack_size+0x7acf0d5>
 8018931:	efeeedec 	svc	0x00eeedec
 8018935:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8018939:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 801893d:	fbfaf9f8 	blx	7ed7127 <__stack_size+0x7ed3127>
 8018941:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08018945 <SOFTWARE_VERSION>:
 8018945:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8018949:	7566202c 	strbvc	r2, [r6, #-44]!	; 0xffffffd4
 801894d:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018951:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8018955:	73736100 	cmnvc	r3, #0, 2
 8018959:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801895d:	22206e6f 	eorcs	r6, r0, #1776	; 0x6f0
 8018961:	20227325 	eorcs	r7, r2, r5, lsr #6
 8018965:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8018969:	203a6465 	eorscs	r6, sl, r5, ror #8
 801896d:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018971:	73252220 			; <UNDEFINED> instruction: 0x73252220
 8018975:	6c202c22 	stcvs	12, cr2, [r0], #-136	; 0xffffff78
 8018979:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801897d:	73256425 			; <UNDEFINED> instruction: 0x73256425
 8018981:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018985:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018989:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801898d:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8018991:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8018995:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8018999:	0a73252c 	beq	9ce1e51 <__exidx_end+0x1cc5d91>
 801899d:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80189a1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80189a5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80189a9:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80189ad:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80189b1:	4f000a64 	svcmi	0x00000a64
 80189b5:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80189b9:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80189bd:	616c7073 	smcvs	50947	; 0xc703
 80189c1:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80189c5:	6674000a 	ldrbtvs	r0, [r4], -sl
 80189c9:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80189cd:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80189d1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80189d5:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80189d9:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80189dd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80189e1:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80189e5:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 80189e9:	20505446 	subscs	r5, r0, r6, asr #8
 80189ed:	20206e4f 	eorcs	r6, r0, pc, asr #28
 80189f1:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 80189f5:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 80189f9:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 80189fd:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8018a01:	525b2066 	subspl	r2, fp, #102	; 0x66
 8018a05:	6f6f6265 	svcvs	0x006f6265
 8018a09:	00205d74 	eoreq	r5, r0, r4, ror sp
 8018a0d:	4f525245 	svcmi	0x00525245
 8018a11:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8018a15:	000a7465 	andeq	r7, sl, r5, ror #8
 8018a19:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8018a1d:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8018a21:	616c7073 	smcvs	50947	; 0xc703
 8018a25:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8018a29:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8018a2d:	000a2123 	andeq	r2, sl, r3, lsr #2
 8018a31:	4f525245 	svcmi	0x00525245
 8018a35:	0a3f2352 	beq	8fe1785 <__exidx_end+0xfc56c5>
 8018a39:	62657200 	rsbvs	r7, r5, #0, 4
 8018a3d:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8018a41:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8018a45:	00237473 	eoreq	r7, r3, r3, ror r4
 8018a49:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018a4d:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8018a51:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8018a55:	76002365 	strvc	r2, [r0], -r5, ror #6
 8018a59:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018a5d:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8018a61:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8018a65:	63616600 	cmnvs	r1, #0, 12
 8018a69:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018a6d:	 	tstmi	r0, r3, lsr #6

08018a70 <s_Node>:
 8018a70:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8018a74:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8018a80:	41730000 	cmnmi	r3, r0
 8018a84:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8018a88:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8018a94:	2043534f 	subcs	r5, r3, pc, asr #6
 8018a98:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8018a9c:	00007265 	andeq	r7, r0, r5, ror #4
 8018aa0:	00000000 	andeq	r0, r0, r0
 8018aa4:	544c0000 	strbpl	r0, [ip], #-0
 8018aa8:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8018ab8:	2043534f 	subcs	r5, r3, pc, asr #6
 8018abc:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8018ac0:	0000746e 	andeq	r7, r0, lr, ror #8
 8018ac4:	00000000 	andeq	r0, r0, r0
 8018ac8:	44520000 	ldrbmi	r0, [r2], #-0
 8018acc:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8018ad0:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8018ad4:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8018ad8:	0000796c 	andeq	r7, r0, ip, ror #18
 8018adc:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8018ae0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8018aec:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8018af0:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8018b00:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8018b10:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8018b14:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8018b18:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8018b1c:	00000072 	andeq	r0, r0, r2, ror r0
 8018b20:	00000000 	andeq	r0, r0, r0
 8018b24:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08018b36 <s_Output>:
 8018b36:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8018b42:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8018b4e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8018b52:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8018b56:	00000000 	andeq	r0, r0, r0
 8018b5a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8018b5e:	0000006c 	andeq	r0, r0, ip, rrx
 8018b62:	00000000 	andeq	r0, r0, r0
 8018b66:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8018b6a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8018b6e:	00000000 	andeq	r0, r0, r0
 8018b72:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8018b7e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018b82:	00006769 	andeq	r6, r0, r9, ror #14
 8018b86:	00000000 	andeq	r0, r0, r0
 8018b8a:	70657453 	rsbvc	r7, r5, r3, asr r4
 8018b8e:	00726570 	rsbseq	r6, r2, r0, ror r5
 8018b92:	00000000 	andeq	r0, r0, r0
 8018b96:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8018b9a:	00007265 	andeq	r7, r0, r5, ror #4
 8018b9e:	00000000 	andeq	r0, r0, r0
 8018ba2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8018ba6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018baa:	00000000 	andeq	r0, r0, r0
 8018bae:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8018bb2:	00006c61 	andeq	r6, r0, r1, ror #24
 8018bb6:	00000000 	andeq	r0, r0, r0
 8018bba:	20424752 	subcs	r4, r2, r2, asr r7
 8018bbe:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8018bc2:	0000006c 	andeq	r0, r0, ip, rrx
	...

08018bc8 <RemoteConfig::s_GET>:
 8018bc8:	0800b365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, pc}
 8018bcc:	00000000 	andeq	r0, r0, r0
 8018bd0:	08018a3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, fp, pc}
 8018bd4:	00000008 	andeq	r0, r0, r8
 8018bd8:	0800a7f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 8018bdc:	00000000 	andeq	r0, r0, r0
 8018be0:	08018a43 	stmdaeq	r1, {r0, r1, r6, r9, fp, pc}
 8018be4:	00000005 	andeq	r0, r0, r5
 8018be8:	0800a7f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 8018bec:	00000000 	andeq	r0, r0, r0
 8018bf0:	08018a49 	stmdaeq	r1, {r0, r3, r6, r9, fp, pc}
 8018bf4:	00000006 	andeq	r0, r0, r6
 8018bf8:	0800a9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, pc}
 8018bfc:	00000000 	andeq	r0, r0, r0
 8018c00:	08018a50 	stmdaeq	r1, {r4, r6, r9, fp, pc}
 8018c04:	00000007 	andeq	r0, r0, r7
 8018c08:	0800a965 	stmdaeq	r0, {r0, r2, r5, r6, r8, fp, sp, pc}
 8018c0c:	00000000 	andeq	r0, r0, r0
 8018c10:	08018a58 	stmdaeq	r1, {r3, r4, r6, r9, fp, pc}
 8018c14:	00000008 	andeq	r0, r0, r8
 8018c18:	0800a8c1 	stmdaeq	r0, {r0, r6, r7, fp, sp, pc}
 8018c1c:	00000000 	andeq	r0, r0, r0
 8018c20:	08018a1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, fp, pc}
 8018c24:	00000008 	andeq	r0, r0, r8
 8018c28:	0800ac79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, sp, pc}
 8018c2c:	00000000 	andeq	r0, r0, r0
 8018c30:	08018a61 	stmdaeq	r1, {r0, r5, r6, r9, fp, pc}
 8018c34:	00010004 	andeq	r0, r1, r4
 8018c38:	0800a915 	stmdaeq	r0, {r0, r2, r4, r8, fp, sp, pc}
 8018c3c:	00000000 	andeq	r0, r0, r0
 8018c40:	08018a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, pc}
 8018c44:	00000005 	andeq	r0, r0, r5
 8018c48:	0800b055 	stmdaeq	r0, {r0, r2, r4, r6, ip, sp, pc}
 8018c4c:	00000000 	andeq	r0, r0, r0
 8018c50:	08018a66 	stmdaeq	r1, {r1, r2, r5, r6, r9, fp, pc}
 8018c54:	00000009 	andeq	r0, r0, r9

08018c58 <RemoteConfig::s_SET>:
 8018c58:	0800aa51 	stmdaeq	r0, {r0, r4, r6, r9, fp, sp, pc}
 8018c5c:	00000000 	andeq	r0, r0, r0
 8018c60:	08018a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, pc}
 8018c64:	00010005 	andeq	r0, r1, r5
 8018c68:	0800aa29 	stmdaeq	r0, {r0, r3, r5, r9, fp, sp, pc}
 8018c6c:	00000000 	andeq	r0, r0, r0
 8018c70:	08018a1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, fp, pc}
 8018c74:	00010008 	andeq	r0, r1, r8
 8018c78:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018c7c:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8018c80:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8018c84:	0a64253d 	beq	9922180 <__exidx_end+0x19060c0>
 8018c88:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8018c8c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018c90:	002c2273 	eoreq	r2, ip, r3, ror r2
 8018c94:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8018c98:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018c9c:	6f626552 	svcvs	0x00626552
 8018ca0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8018ca4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8018ca8:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8018cac:	6f6f6265 	svcvs	0x006f6265
 8018cb0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8018cb4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8018cb8:	6f637200 	svcvs	0x00637200
 8018cbc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018cc0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018cc4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8018cc8:	6b726f77 	blvs	9cb4aac <__exidx_end+0x1c989ec>
 8018ccc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018cd0:	73696400 	cmnvc	r9, #0, 8
 8018cd4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018cd8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018cdc:	33316500 	teqcc	r1, #0, 10
 8018ce0:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8018ce4:	61700074 	cmnvs	r0, r4, ror r0
 8018ce8:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 8018cec:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018cf0:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 8018cf4:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8018cf8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018cfc:	00000000 	andeq	r0, r0, r0

08018d00 <RemoteConfig::s_TXT>:
 8018d00:	0800ac81 	stmdaeq	r0, {r0, r7, sl, fp, sp, pc}
 8018d04:	00000000 	andeq	r0, r0, r0
 8018d08:	0800af5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, sl, fp, sp, pc}
 8018d0c:	00000000 	andeq	r0, r0, r0
 8018d10:	08018cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, pc}
 8018d14:	0000000b 	andeq	r0, r0, fp
 8018d18:	0000000c 	andeq	r0, r0, ip
 8018d1c:	0800acb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, sp, pc}
 8018d20:	00000000 	andeq	r0, r0, r0
 8018d24:	0800af8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, sp, pc}
 8018d28:	00000000 	andeq	r0, r0, r0
 8018d2c:	08018cc5 	stmdaeq	r1, {r0, r2, r6, r7, sl, fp, pc}
 8018d30:	0000000b 	andeq	r0, r0, fp
 8018d34:	00000000 	andeq	r0, r0, r0
 8018d38:	0800ad6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, pc}
 8018d3c:	00000000 	andeq	r0, r0, r0
 8018d40:	0800b02d 	stmdaeq	r0, {r0, r2, r3, r5, ip, sp, pc}
 8018d44:	00000000 	andeq	r0, r0, r0
 8018d48:	08018cd1 	stmdaeq	r1, {r0, r4, r6, r7, sl, fp, pc}
 8018d4c:	0000000b 	andeq	r0, r0, fp
 8018d50:	0000000f 	andeq	r0, r0, pc
 8018d54:	0800ace1 	stmdaeq	r0, {r0, r5, r6, r7, sl, fp, sp, pc}
 8018d58:	00000000 	andeq	r0, r0, r0
 8018d5c:	0800afb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 8018d60:	00000000 	andeq	r0, r0, r0
 8018d64:	08018cdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, fp, pc}
 8018d68:	00000008 	andeq	r0, r0, r8
 8018d6c:	00000004 	andeq	r0, r0, r4
 8018d70:	0800ad11 	stmdaeq	r0, {r0, r4, r8, sl, fp, sp, pc}
 8018d74:	00000000 	andeq	r0, r0, r0
 8018d78:	0800afdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp, pc}
 8018d7c:	00000000 	andeq	r0, r0, r0
 8018d80:	08018ce6 	stmdaeq	r1, {r1, r2, r5, r6, r7, sl, fp, pc}
 8018d84:	0000000a 	andeq	r0, r0, sl
 8018d88:	00000002 	andeq	r0, r0, r2
 8018d8c:	0800ad3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, fp, sp, pc}
 8018d90:	00000000 	andeq	r0, r0, r0
 8018d94:	0800b005 	stmdaeq	r0, {r0, r2, ip, sp, pc}
 8018d98:	00000000 	andeq	r0, r0, r0
 8018d9c:	08018cf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, fp, pc}
 8018da0:	0000000b 	andeq	r0, r0, fp
 8018da4:	00000003 	andeq	r0, r0, r3
 8018da8:	00544547 	subseq	r4, r4, r7, asr #10
 8018dac:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8018db0:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8018db4:	0a200050 	beq	8818efc <__exidx_end+0x7fce3c>
 8018db8:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8018dbc:	43003a00 	movwmi	r3, #2560	; 0xa00
 8018dc0:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8018dc4:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8018dc8:	00657079 	rsbeq	r7, r5, r9, ror r0
 8018dcc:	61003b20 	tstvs	r0, r0, lsr #22
 8018dd0:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8018dd4:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8018dd8:	6a2f6e6f 	bvs	8bf479c <__exidx_end+0xbd86dc>
 8018ddc:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8018de0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8018de4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8018de8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8018dec:	2f006874 	svccs	0x00006874
 8018df0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8018df4:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8018df8:	2f006c6d 	svccs	0x00006c6d
 8018dfc:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8018e00:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8018e04:	2f007373 	svccs	0x00007373
 8018e08:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8018e0c:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8018e10:	736a2f00 	cmnvc	sl, #0, 30
 8018e14:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8018e18:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018e1c:	72657600 	rsbvc	r7, r5, #0, 12
 8018e20:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8018e24:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8018e28:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8018e2c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018e30:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8018e34:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018e38:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8018e3c:	6a2f0079 	bvs	8bd9028 <__exidx_end+0xbbcf68>
 8018e40:	2f6e6f73 	svccs	0x006e6f73
 8018e44:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8018e48:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8018e4c:	6f6f6265 	svcvs	0x006f6265
 8018e50:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8018e54:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8018e58:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8018e5c:	434f4421 	movtmi	r4, #62497	; 0xf421
 8018e60:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8018e64:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8018e68:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8018e6c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018e70:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8018e74:	3e646165 	powccsz	f6, f4, f5
 8018e78:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018e7c:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8018e80:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8018e84:	742f3c74 	strtvc	r3, [pc], #-3188	; 8018e8c <RemoteConfig::s_TXT+0x18c>
 8018e88:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8018e8c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018e90:	3e646165 	powccsz	f6, f4, f5
 8018e94:	6f623c0a 	svcvs	0x00623c0a
 8018e98:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8018e9c:	4f3e3168 	svcmi	0x003e3168
 8018ea0:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018ea4:	2f3c3e31 	svccs	0x003c3e31
 8018ea8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018eac:	2f3c0a3e 	svccs	0x003c0a3e
 8018eb0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018eb4:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8018eb8:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8018ebc:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8018ec0:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8018ec4:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8018ec8:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8018ecc:	71655200 	cmnvc	r5, r0, lsl #4
 8018ed0:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8018ed4:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8018ed8:	20797469 	rsbscs	r7, r9, r9, ror #8
 8018edc:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8018ee0:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8018ee4:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8018ee8:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8018eec:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8018ef0:	6f542049 	svcvs	0x00542049
 8018ef4:	6f4c206f 	svcvs	0x004c206f
 8018ef8:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8018efc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8018f00:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8018f04:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8018f08:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8018f0c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8018f10:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8018f14:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8018f18:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018f1c:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8018f20:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8018f24:	00646574 	rsbeq	r6, r4, r4, ror r5
 8018f28:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8018f2c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8018f30:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018f34:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8018f38:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8018f3c:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8018f40:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8018f44:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8018f48:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8018f4c:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8018f50:	434f4421 	movtmi	r4, #62497	; 0xf421
 8018f54:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8018f58:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8018f5c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8018f60:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018f64:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8018f68:	3e646165 	powccsz	f6, f4, f5
 8018f6c:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018f70:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8018f74:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018f78:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018f7c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018f80:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8018f84:	0a3e6461 	beq	8fb2110 <__exidx_end+0xf96050>
 8018f88:	646f623c 	strbtvs	r6, [pc], #-572	; 8018f90 <RemoteConfig::s_TXT+0x290>
 8018f8c:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8018f90:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8018f94:	31682f3c 	cmncc	r8, ip, lsr pc
 8018f98:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8018f9c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018fa0:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018fa4:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018fa8:	5448000a 	strbpl	r0, [r8], #-10
 8018fac:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8018fb0:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8018fb4:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018fb8:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8018fbc:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8018fc0:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8018fc4:	6f430a0d 	svcvs	0x00430a0d
 8018fc8:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8018fcc:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8018fd0:	203a6570 	eorscs	r6, sl, r0, ror r5
 8018fd4:	0a0d7325 	beq	8375c70 <__exidx_end+0x359bb0>
 8018fd8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8018fdc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8018fe0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8018fe4:	203a6874 	eorscs	r6, sl, r4, ror r8
 8018fe8:	0a0d7525 	beq	8376484 <__exidx_end+0x35a3c4>
 8018fec:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8018ff0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8018ff4:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8018ff8:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8018ffc:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8019000:	4447000a 	strbmi	r0, [r7], #-10
 8019004:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
 8019008:	49563035 	ldmdbmi	r6, {r0, r2, r4, r5, ip, sp}^
	...

0801900d <contentType>:
 801900d:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8019011:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8019015:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801902d:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8019031:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 801904d:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8019051:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8019055:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8019059:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 801906d:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8019071:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8019075:	2f6e6f69 	svccs	0x006e6f69
 8019079:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

0801908d <RemoteConfigConst::PARAMS_DISABLE>:
 801908d:	61736964 	cmnvs	r3, r4, ror #18
 8019091:	00656c62 	rsbeq	r6, r5, r2, ror #24

08019095 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8019095:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8019099:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801909d:	00747874 	rsbseq	r7, r4, r4, ror r8

080190a1 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80190a1:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80190a5:	5f79616c 	svcpl	0x0079616c
 80190a9:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080190ae <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80190ae:	61736964 	cmnvs	r3, r4, ror #18
 80190b2:	5f656c62 	svcpl	0x00656c62
 80190b6:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80190ba:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080190bc <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80190bc:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80190c0:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80190c4:	6f6f6265 	svcvs	0x006f6265
 80190c8:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080190ca <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80190ca:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80190ce:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8018b6a <s_Output+0x34>
 80190d2:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80190d6:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080190d8 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80190d8:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80190dc:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80190e0:	6f746361 	svcvs	0x00746361
 80190e4:	7b007972 	blvc	80376b4 <__exidx_end+0x1b5f4>
 80190e8:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80190ec:	7b3a2274 	blvc	8ea1ac4 <__exidx_end+0xe85a04>
 80190f0:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80190f4:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80190f8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80190fc:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019100:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8019104:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8019108:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801910c:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8019110:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8019114:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8019118:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801911c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8019120:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8019124:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8019128:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801912c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8019130:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8019134:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8019138:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801913c:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8019140:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8019144:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8019148:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801914c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8019150:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8019154:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8019158:	616f6222 	cmnvs	pc, r2, lsr #4
 801915c:	3a226472 	bcc	88b232c <__exidx_end+0x89626c>
 8019160:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8019164:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8019168:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 801916c:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8019170:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8019174:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8019178:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801917c:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8019180:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8019184:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8019188:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801918c:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8019190:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8019194:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8019198:	7b000a7d 	blvc	801bb94 <vtable for Ssd1306+0x64>
 801919c:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80191a0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80191a4:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80191a8:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80191ac:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80191b0:	7b3a2273 	blvc	8ea1b84 <__exidx_end+0xe85ac4>
 80191b4:	33316522 	teqcc	r1, #142606336	; 0x8800000
 80191b8:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80191bc:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80191c0:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80191c4:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80191c8:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80191cc:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80191d0:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80191d4:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80191d8:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 80191dc:	72542058 	subsvc	r2, r4, #88	; 0x58
 80191e0:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80191e4:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80191e8:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80191ec:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80191f0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80191f4:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80191f8:	5020584d 	eorpl	r5, r0, sp, asr #16
 80191fc:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8019200:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8019204:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8019208:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 801920c:	3a227478 	bcc	88b63f4 <__exidx_end+0x89a334>
 8019210:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8019214:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019218:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 801921c:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8019220:	6f777465 	svcvs	0x00777465
 8019224:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8019228:	3a227478 	bcc	88b6410 <__exidx_end+0x89a350>
 801922c:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8019230:	6b726f77 	blvs	9cb5014 <__exidx_end+0x1c98f54>
 8019234:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8019238:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801923c:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8019240:	3a227478 	bcc	88b6428 <__exidx_end+0x89a368>
 8019244:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8019248:	2065746f 	rsbcs	r7, r5, pc, ror #8
 801924c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8019250:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019254:	6f697461 	svcvs	0x00697461
 8019258:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

0801925d <index_html>:
 801925d:	4f44213c 	svcmi	0x0044213c
 8019261:	50595443 	subspl	r5, r9, r3, asr #8
 8019265:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8019269:	0a3e6c6d 	beq	8fb4425 <__exidx_end+0xf98365>
 801926d:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8019271:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8019275:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8019279:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801927d:	6b6e696c 	blvs	9bb3835 <__exidx_end+0x1b97775>
 8019281:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8019285:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8019289:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801928d:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8019291:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8019295:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8019299:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801929d:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80192a1:	20227373 	eorcs	r7, r2, r3, ror r3
 80192a5:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80192a9:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80192ad:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80192b1:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80192b5:	0a3e656c 	beq	8fb286d <__exidx_end+0xf967ad>
 80192b9:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80192bd:	0a3e6461 	beq	8fb2449 <__exidx_end+0xf96389>
 80192c1:	646f623c 	strbtvs	r6, [pc], #-572	; 80192c9 <index_html+0x6c>
 80192c5:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80192c9:	6165683c 	cmnvs	r5, ip, lsr r8
 80192cd:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80192d1:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80192d5:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80192d9:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80192dd:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80192e1:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80192e5:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80192e9:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80192ed:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80192f1:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80192f5:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80192f9:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80192fd:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8019301:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8019305:	6f746365 	svcvs	0x00746365
 8019309:	20227972 	eorcs	r7, r2, r2, ror r9
 801930d:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8019311:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8019315:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8019319:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801931d:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8019321:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8019325:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8019329:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801932d:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8019331:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8019335:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8019339:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801933d:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8019341:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8019345:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8019349:	20227478 	eorcs	r7, r2, r8, ror r4
 801934d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8019351:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8019355:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8019359:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801935d:	0a3e656c 	beq	8fb2915 <__exidx_end+0xf96855>
 8019361:	6f663c09 	svcvs	0x00663c09
 8019365:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8019369:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801936d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8019371:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8019375:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019379:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801937d:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8019381:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8019385:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8019389:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801938d:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8019391:	20747069 	rsbscs	r7, r4, r9, rrx
 8019395:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8019399:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801939d:	6a2e7865 	bvs	8bb7539 <__exidx_end+0xb9b479>
 80193a1:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80193a5:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80193a9:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80193ad:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80193b1:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80193b5:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80193b9:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80193bd:	 	svcvs	0x0062000a

080193bf <styles_css>:
 80193bf:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80193c3:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80193c7:	63616220 	cmnvs	r1, #32, 4
 80193cb:	6f72676b 	svcvs	0x0072676b
 80193cf:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80193d3:	6f6c6f63 	svcvs	0x006c6f63
 80193d7:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80193db:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80193df:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80193e3:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80193e7:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80193eb:	6f6c6f63 	svcvs	0x006c6f63
 80193ef:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80193f3:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80193f7:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80193fb:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80193ff:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8019403:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8019407:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801940b:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801940f:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8019413:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019417:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801941b:	0a3b7865 	beq	8ef75b7 <__exidx_end+0xedb4f7>
 801941f:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8019423:	0a7b2069 	beq	9ee15cf <__exidx_end+0x1ec550f>
 8019427:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801942b:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801942f:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8019433:	6f6e203a 	svcvs	0x006e203a
 8019437:	0a3b656e 	beq	8ef29f7 <__exidx_end+0xed6937>
 801943b:	616d2020 	cmnvs	sp, r0, lsr #32
 801943f:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8019443:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8019447:	70352078 	eorsvc	r2, r5, r8, ror r0
 801944b:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 801944f:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8019453:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8019457:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801945b:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801945f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019463:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8019467:	0a3b7865 	beq	8ef7603 <__exidx_end+0xedb543>
 801946b:	6f622020 	svcvs	0x00622020
 801946f:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8019473:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8019477:	3a737569 	bcc	9cf6a23 <__exidx_end+0x1cda963>
 801947b:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801947f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8019483:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8019487:	203a7265 	eorscs	r7, sl, r5, ror #4
 801948b:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801948f:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8019493:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8019497:	0a3b7870 	beq	8ef765f <__exidx_end+0xedb59f>
 801949b:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801949f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80194a3:	0a7b2072 	beq	9ee1673 <__exidx_end+0x1ec55b3>
 80194a7:	69642020 	stmdbvs	r4!, {r5, sp}^
 80194ab:	616c7073 	smcvs	50947	; 0xc703
 80194af:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80194b3:	3b78656c 	blcc	9e32a6b <__exidx_end+0x1e169ab>
 80194b7:	6a20200a 	bvs	88214e7 <__exidx_end+0x805427>
 80194bb:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80194bf:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80194c3:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80194c7:	203a746e 	eorscs	r7, sl, lr, ror #8
 80194cb:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80194cf:	0a3b7265 	beq	8ef5e6b <__exidx_end+0xed9dab>
 80194d3:	6f622020 	svcvs	0x00622020
 80194d7:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80194db:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80194df:	3a737569 	bcc	9cf6a8b <__exidx_end+0x1cda9cb>
 80194e3:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80194e7:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80194eb:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80194ef:	203a7265 	eorscs	r7, sl, r5, ror #4
 80194f3:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80194f7:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80194fb:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80194ff:	0a3b7870 	beq	8ef76c7 <__exidx_end+0xedb607>
 8019503:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08019508 <HttpContent>:
 8019508:	08018dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}
 801950c:	080193bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, ip, pc}
 8019510:	08018e08 	stmdaeq	r1, {r3, r9, sl, fp, pc}
 8019514:	08019520 	stmdaeq	r1, {r5, r8, sl, ip, pc}
 8019518:	08018df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, pc}
 801951c:	0801925d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, ip, pc}

08019520 <index_js>:
 8019520:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8019524:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8019528:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801952c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8019530:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019534:	6a284e4f 	bvs	8a2ce78 <__exidx_end+0xa10db8>
 8019538:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801953c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8019540:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8019544:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8019548:	6a2f273d 	bvs	8be3244 <__exidx_end+0xbc7184>
 801954c:	2f6e6f73 	svccs	0x006e6f73
 8019550:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8019554:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8019558:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 801955c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8019560:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8019564:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8019568:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 801956c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8019570:	20746961 	rsbscs	r6, r4, r1, ror #18
 8019574:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8019578:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 801957c:	0a3b296c 	beq	8ee3b34 <__exidx_end+0xec7a74>
 8019580:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8019584:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8019588:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 801958c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8019590:	73657220 	cmnvc	r5, #32, 4
 8019594:	6f736a2e 	svcvs	0x00736a2e
 8019598:	3b29286e 	blcc	8a63758 <__exidx_end+0xa47698>
 801959c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80195a0:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 80195a4:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 80195a8:	6f727265 	svcvs	0x00727265
 80195ac:	7b202972 	blvc	8823b7c <__exidx_end+0x807abc>
 80195b0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80195b4:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 80195b8:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 80195bc:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80195c0:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 80195c4:	3b29726f 	blcc	8a75f88 <__exidx_end+0xa59ec8>
 80195c8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80195cc:	0a0a7d0a 	beq	82b89fc <__exidx_end+0x29c93c>
 80195d0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80195d4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80195d8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80195dc:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80195e0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80195e4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80195e8:	20292874 	eorcs	r2, r9, r4, ror r8
 80195ec:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80195f0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80195f4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80195f8:	6177613d 	cmnvs	r7, sp, lsr r1
 80195fc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019600:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019604:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019608:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801960c:	0a3b2927 	beq	8ee3ab0 <__exidx_end+0xec79f0>
 8019610:	6f640909 	svcvs	0x00640909
 8019614:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8019618:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801961c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8019620:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8019624:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8019628:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801962c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8019630:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8019634:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8019638:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801963c:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8019640:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8019644:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8019648:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801964c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8019650:	2b656d61 	blcs	9974bdc <__exidx_end+0x1958b1c>
 8019654:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80195d4 <index_js+0xb4>
 8019658:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801965c:	2b223e69 	blcs	88a9008 <__exidx_end+0x88cf48>
 8019660:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8019664:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8019668:	6f6e2e74 	svcvs	0x006e2e74
 801966c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8019670:	2b657079 	blcs	997585c <__exidx_end+0x195979c>
 8019674:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80195f4 <index_js+0xd4>
 8019678:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801967c:	2b223e69 	blcs	88a9028 <__exidx_end+0x88cf68>
 8019680:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8019684:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8019688:	6f6e2e74 	svcvs	0x006e2e74
 801968c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8019690:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8019694:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8019698:	2f3c222b 	svccs	0x003c222b
 801969c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80196a0:	0a7d0a3b 	beq	9f5bf94 <__exidx_end+0x1f3fed4>
 80196a4:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80196a8:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80196ac:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80196b0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80196b4:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80196b8:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80196bc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80196c0:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80196c4:	0a7b2029 	beq	9ee1770 <__exidx_end+0x1ec56b0>
 80196c8:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80196cc:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80196d0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80196d4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80196d8:	6177613d 	cmnvs	r7, sp, lsr r1
 80196dc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80196e0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80196e4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80196e8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80196ec:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80196f0:	3b292779 	blcc	8a634dc <__exidx_end+0xa4741c>
 80196f4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80196f8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80196fc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019700:	0a22223d 	beq	88a1ffc <__exidx_end+0x885f3c>
 8019704:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8019708:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801970c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8019710:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8019714:	6a624f3d 	bvs	98ad410 <__exidx_end+0x1891350>
 8019718:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 801971c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8019720:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8019724:	6f746365 	svcvs	0x00746365
 8019728:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 801972c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8019730:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8019734:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8019738:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 801973c:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8019740:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8019744:	6145726f 	cmpvs	r5, pc, ror #4
 8019748:	66286863 	strtvs	r6, [r8], -r3, ror #16
 801974c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8019750:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019754:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8019758:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801975c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8019760:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019764:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8019768:	203d2065 	eorscs	r2, sp, r5, rrx
 801976c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8019770:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8019774:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8019778:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801977c:	6b5b5d22 	blvs	96f0c0c <__exidx_end+0x16d4b4c>
 8019780:	3b5d7965 	blcc	9777d1c <__exidx_end+0x175bc5c>
 8019784:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019788:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801978c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8019790:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8019794:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019798:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801979c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 80197a0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80197a4:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 80197a8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80197ac:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80197b0:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 80197b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80197b8:	0a3b223e 	beq	8ee20b8 <__exidx_end+0xec5ff8>
 80197bc:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80197c0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80197c4:	6f640909 	svcvs	0x00640909
 80197c8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80197cc:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80197d0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80197d4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80197d8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80197dc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80197e0:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80197e4:	6f746365 	svcvs	0x00746365
 80197e8:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80197ec:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80197f0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80197f4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80197f8:	3b6c6d74 	blcc	9b34dd0 <__exidx_end+0x1b18d10>
 80197fc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019800:	5f746567 	svcpl	0x00746567
 8019804:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8019808:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801980c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8019810:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8019814:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8019818:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 801981c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8019820:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8019824:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019828:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 801982c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8019830:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019834:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8019838:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801983c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8019840:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8019844:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8019848:	6177613d 	cmnvs	r7, sp, lsr r1
 801984c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019850:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019854:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019858:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801985c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8019860:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8019864:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8019868:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801986c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8019870:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8019874:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8019878:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801987c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8019880:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8019884:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8019888:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801988c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8019890:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8019894:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8019898:	2b22563e 	blcs	88af198 <__exidx_end+0x8930d8>
 801989c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80198a0:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80198a4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80198a8:	2b6e6f69 	blcs	9bb5654 <__exidx_end+0x1b99594>
 80198ac:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801982c <index_js+0x30c>
 80198b0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80198b4:	2b223e69 	blcs	88a9260 <__exidx_end+0x88d1a0>
 80198b8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80198bc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80198c0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80198c4:	61642e64 	cmnvs	r4, r4, ror #28
 80198c8:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80198cc:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80198d0:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80198d4:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80198d8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80198dc:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80198e0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80198e4:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80198e8:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80198ec:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80198f0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80198f4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80198f8:	6f697372 	svcvs	0x00697372
 80198fc:	6f622e6e 	svcvs	0x00622e6e
 8019900:	2b647261 	blcs	993628c <__exidx_end+0x191a1cc>
 8019904:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8019884 <index_js+0x364>
 8019908:	3b223e69 	blcc	88a92b4 <__exidx_end+0x88d1f4>
 801990c:	0a0a7d0a 	beq	82b8d3c <__exidx_end+0x29cc7c>
 8019910:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8019914:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8019918:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801991c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8019920:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8019928 <index_js+0x408>
 8019924:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8019928:	20296c65 	eorcs	r6, r9, r5, ror #24
 801992c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8019930:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8019934:	613d7478 	teqvs	sp, r8, ror r4
 8019938:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801993c:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8019940:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8019944:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8019948:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801994c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8019950:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019954:	3b22223d 	blcc	88a2250 <__exidx_end+0x886190>
 8019958:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 801995c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8019960:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8019964:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8019968:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801996c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8019970:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8019974:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8019978:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801997c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019980:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8019984:	0a7b2029 	beq	9ee1a30 <__exidx_end+0x1ec5970>
 8019988:	61760909 	cmnvs	r6, r9, lsl #18
 801998c:	61762072 	cmnvs	r6, r2, ror r0
 8019990:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8019994:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8019998:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801999c:	6b5b5d6c 	blvs	96f0f54 <__exidx_end+0x16d4e94>
 80199a0:	3b5d7965 	blcc	9777f3c <__exidx_end+0x175be7c>
 80199a4:	2009090a 	andcs	r0, r9, sl, lsl #18
 80199a8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80199ac:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 80199b0:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 80199b4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80199b8:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80199bc:	2f3c222b 	svccs	0x003c222b
 80199c0:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80199c4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80199c8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80199cc:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80199d0:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80199d4:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80199dc <index_js+0x4bc>
 80199d8:	3b223e72 	blcc	88a93a8 <__exidx_end+0x88d2e8>
 80199dc:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80199e0:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80199e4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80199e8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80199ec:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 80199f0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 80199f4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80199f8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 80199fc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8019a00:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8019a04:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8019a08:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8019a0c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8019a10:	0a3b6c6d 	beq	8ef4bcc <__exidx_end+0xed8b0c>
 8019a14:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8019a18:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8019a1c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8019a20:	3b292874 	blcc	8a63bf8 <__exidx_end+0xa47b38>
 8019a24:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8019a28:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8019a2c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8019a30:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019a34:	0a3b2928 	beq	8ee3edc <__exidx_end+0xec7e1c>
 8019a38:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8019a3c:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8019a40:	6f697372 	svcvs	0x00697372
 8019a44:	3b29286e 	blcc	8a63c04 <__exidx_end+0xa47b44>
 8019a48:	3332000a 	teqcc	r2, #10
 8019a4c:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019a50:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8019a54:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8019a58:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8019a5c:	30007325 	andcc	r7, r0, r5, lsr #6
 8019a60:	6f4e202e 	svcvs	0x004e202e
 8019a64:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8019a68:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8019a6c:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8019a70:	202c6465 	eorcs	r6, ip, r5, ror #8
 8019a74:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8019a78:	6f687320 	svcvs	0x00687320
 8019a7c:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8019a80:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8019a84:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8019a88:	000a216e 	andeq	r2, sl, lr, ror #2
 8019a8c:	00505448 	subseq	r5, r0, r8, asr #8
 8019a90:	0050544c 	subseq	r5, r0, ip, asr #8
 8019a94:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8019a98:	000a6567 	andeq	r6, sl, r7, ror #10
 8019a9c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8019aa0:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8019aa4:	203a2065 	eorscs	r2, sl, r5, rrx
 8019aa8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019aac:	20000a64 	andcs	r0, r0, r4, ror #20
 8019ab0:	20444943 	subcs	r4, r4, r3, asr #18
 8019ab4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019ab8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019abc:	20000a73 	andcs	r0, r0, r3, ror sl
 8019ac0:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8019ac4:	000a7475 	andeq	r7, sl, r5, ror r4
 8019ac8:	6f502020 	svcvs	0x00502020
 8019acc:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8019ad0:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8019ad4:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8019ad8:	20657372 	rsbcs	r7, r5, r2, ror r3
 8019adc:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8019ae0:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8019ae4:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019ae8:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8019aec:	20000a74 	andcs	r0, r0, r4, ror sl
 8019af0:	726f5020 	rsbvc	r5, pc, #32
 8019af4:	32252074 	eorcc	r2, r5, #116	; 0x74
 8019af8:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8019afc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8019b00:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8019b04:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8019b08:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8019b0c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8019b10:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8019b14:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019b18:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8019b1c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8019b20:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8019b24:	000a6465 	andeq	r6, sl, r5, ror #8

08019b28 <E131MsgConst::START>:
 8019b28:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8019b2c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8019b30:	43417320 	movtmi	r7, #4896	; 0x1320
 8019b34:	3145204e 	cmpcc	r5, lr, asr #32
 8019b38:	0031332e 	eorseq	r3, r1, lr, lsr #6

08019b3c <E131MsgConst::PARAMS>:
 8019b3c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019b40:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019b44:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019b48:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019b4c:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019b50:	 	movwvc	r3, #307	; 0x133

08019b53 <E131MsgConst::STARTED>:
 8019b53:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019b57:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019b5b:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8019b5f:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8019b63:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8019b67:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8019b6b:	0066666f 	rsbeq	r6, r6, pc, ror #12
 8019b6f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019b73:	6b636162 	blvs	98f2103 <__exidx_end+0x18d6043>
 8019b77:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8019b7b:	6f007475 	svcvs	0x00007475
 8019b7f:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8019b83:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 8019b87:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8019b8b:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 8019b8f:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8019b93:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8019b97:	754f2058 	strbvc	r2, [pc, #-88]	; 8019b47 <E131MsgConst::PARAMS+0xb>
 8019b9b:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 8019b9f:	584d4400 	stmdapl	sp, {sl, lr}^
 8019ba3:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8019ba7:	00007475 	andeq	r7, r0, r5, ror r4
	...

08019bac <CSWTCH.56>:
 8019bac:	08019b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, ip, pc}
 8019bb0:	08019b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, pc}
 8019bb4:	0801bba1 	stmdaeq	r1, {r0, r5, r7, r8, r9, fp, ip, sp, pc}
 8019bb8:	08019b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, pc}

08019bbc <E131ParamsConst::PRIORITY>:
 8019bbc:	6f697270 	svcvs	0x00697270
 8019bc0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8019bc4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019bc8:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8019bcc:	72700000 	rsbsvc	r0, r0, #0
 8019bd0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019bd4:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8019bd8:	5f74726f 	svcpl	0x0074726f
 8019bdc:	00000062 	andeq	r0, r0, r2, rrx
 8019be0:	6f697270 	svcvs	0x00697270
 8019be4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8019be8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019bec:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8019bf0:	72700000 	rsbsvc	r0, r0, #0
 8019bf4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019bf8:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8019bfc:	5f74726f 	svcpl	0x0074726f
 8019c00:	00000064 	andeq	r0, r0, r4, rrx

08019c04 <E131ParamsConst::FILE_NAME>:
 8019c04:	31333165 	teqcc	r3, r5, ror #2
 8019c08:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08019c0d <E117Const::ACN_PACKET_IDENTIFIER>:
 8019c0d:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8019c11:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8019c15:	00000037 	andeq	r0, r0, r7, lsr r0

08019c19 <E131BridgeConst::VERSION>:
 8019c19:	33321901 	teqcc	r2, #16384	; 0x4000
 8019c1d:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019c21:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8019c25:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8019c29:	33320033 	teqcc	r2, #51	; 0x33
 8019c2d:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019c31:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8019c35:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8019c39:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 8019c3d:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8019c41:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8019c45:	6f632065 	svcvs	0x00632065
 8019c49:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8019c4d:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8019c51:	0a6e6f69 	beq	9bb59fd <__exidx_end+0x1b9993d>
 8019c55:	6f502000 	svcvs	0x00502000
 8019c59:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8019c5d:	20205044 	eorcs	r5, r0, r4, asr #32
 8019c61:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019c65:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019c69:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019c6d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019c71:	20000a64 	andcs	r0, r0, r4, ror #20
 8019c75:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8019c79:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8019c7d:	6f6a2074 	svcvs	0x006a2074
 8019c81:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 8019c85:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8019c89:	3a207473 	bcc	8836e5d <__exidx_end+0x81ad9d>
 8019c8d:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8019c91:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019c95:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019c99:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8019c9d:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8019ca1:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 8019ca5:	73655220 	cmnvc	r5, #32, 4
 8019ca9:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8019cad:	20202065 	eorcs	r2, r0, r5, rrx
 8019cb1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019cb5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019cb9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019cbd:	0a64252e 	beq	992317d <__exidx_end+0x19070bd>
 8019cc1:	 	andeq	r0, r0, r0

08019cc4 <vtable for LLRPDevice>:
	...
 8019ccc:	0800d3d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, r9, ip, lr, pc}
 8019cd0:	0800d3e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, lr, pc}
 8019cd4:	0800d3d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, ip, lr, pc}
 8019cd8:	0800d3db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip, lr, pc}
 8019cdc:	0800d3dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}

08019ce0 <RDMNetConst::MSG_CONFIG>:
 8019ce0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019ce4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019ce8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019cec:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8019cf0:	 	andpl	r7, r0, #1694498816	; 0x65000000

08019cf3 <RDMNetConst::MSG_STARTED>:
 8019cf3:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8019cf7:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8019cfb:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8019cff:	 	movwpl	r6, #1125	; 0x465

08019d02 <RDMNetConst::MSG_START>:
 8019d02:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8019d06:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8019d0a:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8019d0e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8019d12:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8019d16:	000a7465 	andeq	r7, sl, r5, ror #8
 8019d1a:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8019d1e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019d22:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8019d26:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8019d2a:	6f707365 	svcvs	0x00707365
 8019d2e:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8019d32:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8019d36:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8019d3a:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8019d3e:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8019d42:	6f725020 	svcvs	0x00725020
 8019d46:	6f636f74 	svcvs	0x00636f74
 8019d4a:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8019d4e:	6f697372 	svcvs	0x00697372
 8019d52:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8019d56:	0a64252e 	beq	9923216 <__exidx_end+0x1907156>
 8019d5a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8019d5e:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8019d62:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8019d66:	20202073 	eorcs	r2, r0, r3, ror r0
 8019d6a:	3a202020 	bcc	8821df2 <__exidx_end+0x805d32>
 8019d6e:	0a642520 	beq	99231f6 <__exidx_end+0x1907136>
 8019d72:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8019d76:	6f462058 	svcvs	0x00462058
 8019d7a:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8019d7e:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8019d82:	3a202020 	bcc	8821e0a <__exidx_end+0x805d4a>
 8019d86:	0a642520 	beq	992320e <__exidx_end+0x190714e>
 8019d8a:	65502000 	ldrbvs	r2, [r0, #-0]
 8019d8e:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8019d92:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8019d96:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8019d9a:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8019d9e:	5b206425 	blpl	8832e3a <__exidx_end+0x816d7a>
 8019da2:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8019da6:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019daa:	20627553 	rsbcs	r7, r2, r3, asr r5
 8019dae:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8019db2:	20736563 	rsbscs	r6, r3, r3, ror #10
 8019db6:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019dba:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019dbe:	20000a64 	andcs	r0, r0, r4, ror #20
 8019dc2:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8019dc6:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8019dca:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019dce:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019dd2:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019dd6:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08019ddc <vtable for RDMDeviceResponder>:
	...
 8019de4:	0800d8d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, fp, ip, lr, pc}
 8019de8:	0800d8f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, fp, ip, lr, pc}
 8019dec:	0800d8cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, fp, ip, lr, pc}
 8019df0:	0800d8d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, ip, lr, pc}

08019df4 <UID_ALL>:
 8019df4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8019df8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08019dfc <RDMHandler::PID_DEFINITIONS>:
 8019dfc:	00000060 	andeq	r0, r0, r0, rrx
 8019e00:	0800ddb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, fp, ip, lr, pc}
	...
 8019e10:	01010000 	mrseq	r0, (UNDEF: 1)
 8019e14:	00000080 	andeq	r0, r0, r0, lsl #1
 8019e18:	0800de99 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, fp, ip, lr, pc}
	...
 8019e28:	01010100 	mrseq	r0, (UNDEF: 17)
 8019e2c:	00000081 	andeq	r0, r0, r1, lsl #1
 8019e30:	0800deb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, fp, ip, lr, pc}
	...
 8019e40:	01010100 	mrseq	r0, (UNDEF: 17)
 8019e44:	00000082 	andeq	r0, r0, r2, lsl #1
 8019e48:	0800ded5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp, ip, lr, pc}
 8019e4c:	00000000 	andeq	r0, r0, r0
 8019e50:	0800e025 	stmdaeq	r0, {r0, r2, r5, sp, lr, pc}
 8019e54:	00000000 	andeq	r0, r0, r0
 8019e58:	01010100 	mrseq	r0, (UNDEF: 17)
 8019e5c:	00000090 	muleq	r0, r0, r0
 8019e60:	0800de19 	stmdaeq	r0, {r0, r3, r4, r9, sl, fp, ip, lr, pc}
 8019e64:	00000000 	andeq	r0, r0, r0
 8019e68:	0800dff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8019e6c:	00000000 	andeq	r0, r0, r0
 8019e70:	01010100 	mrseq	r0, (UNDEF: 17)
 8019e74:	00001000 	andeq	r1, r0, r0
 8019e78:	0800df11 	stmdaeq	r0, {r0, r4, r8, r9, sl, fp, ip, lr, pc}
 8019e7c:	00000000 	andeq	r0, r0, r0
 8019e80:	0800df75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 8019e84:	00000000 	andeq	r0, r0, r0
 8019e88:	01010000 	mrseq	r0, (UNDEF: 1)
 8019e8c:	00001001 	andeq	r1, r0, r1
	...
 8019e98:	0800df2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, fp, ip, lr, pc}
 8019e9c:	00000000 	andeq	r0, r0, r0
 8019ea0:	01010100 	mrseq	r0, (UNDEF: 17)
 8019ea4:	00000700 	andeq	r0, r0, r0, lsl #14
 8019ea8:	0800e31d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sp, lr, pc}
	...
 8019eb8:	01000000 	mrseq	r0, (UNDEF: 0)
 8019ebc:	00000701 	andeq	r0, r0, r1, lsl #14
 8019ec0:	0800e345 	stmdaeq	r0, {r0, r2, r6, r8, r9, sp, lr, pc}
	...
 8019ed0:	01000004 	tsteq	r0, r4
 8019ed4:	00000702 	andeq	r0, r0, r2, lsl #14
 8019ed8:	0800e391 	stmdaeq	r0, {r0, r4, r7, r8, r9, sp, lr, pc}
	...
 8019ee8:	01000004 	tsteq	r0, r4
 8019eec:	00000703 	andeq	r0, r0, r3, lsl #14
 8019ef0:	0800e3c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sp, lr, pc}
 8019ef4:	00000000 	andeq	r0, r0, r0
 8019ef8:	0800e3ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sp, lr, pc}
 8019efc:	00000000 	andeq	r0, r0, r0
 8019f00:	01000004 	tsteq	r0, r4
 8019f04:	00000704 	andeq	r0, r0, r4, lsl #14
 8019f08:	0800e459 	stmdaeq	r0, {r0, r3, r4, r6, sl, sp, lr, pc}
 8019f0c:	00000000 	andeq	r0, r0, r0
 8019f10:	0800e489 	stmdaeq	r0, {r0, r3, r7, sl, sp, lr, pc}
 8019f14:	00000000 	andeq	r0, r0, r0
 8019f18:	01000004 	tsteq	r0, r4
 8019f1c:	00000705 	andeq	r0, r0, r5, lsl #14
 8019f20:	0800e4fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, sp, lr, pc}
	...
 8019f30:	01000004 	tsteq	r0, r4
 8019f34:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8019f40:	0800e4d1 	stmdaeq	r0, {r0, r4, r6, r7, sl, sp, lr, pc}
 8019f44:	00000000 	andeq	r0, r0, r0
 8019f48:	01000004 	tsteq	r0, r4
 8019f4c:	00000706 	andeq	r0, r0, r6, lsl #14
 8019f50:	0800e545 	stmdaeq	r0, {r0, r2, r6, r8, sl, sp, lr, pc}
 8019f54:	00000000 	andeq	r0, r0, r0
 8019f58:	0800e589 	stmdaeq	r0, {r0, r3, r7, r8, sl, sp, lr, pc}
 8019f5c:	00000000 	andeq	r0, r0, r0
 8019f60:	01000004 	tsteq	r0, r4
 8019f64:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8019f70:	0800e5d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, sp, lr, pc}
 8019f74:	00000000 	andeq	r0, r0, r0
 8019f78:	01000004 	tsteq	r0, r4
 8019f7c:	0000070b 	andeq	r0, r0, fp, lsl #14
 8019f80:	0800e435 	stmdaeq	r0, {r0, r2, r4, r5, sl, sp, lr, pc}
	...
 8019f90:	01000001 	tsteq	r0, r1
 8019f94:	0000070a 	andeq	r0, r0, sl, lsl #14
 8019f98:	0800e5fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, sp, lr, pc}
 8019f9c:	00000000 	andeq	r0, r0, r0
 8019fa0:	0800e635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, sp, lr, pc}
 8019fa4:	00000000 	andeq	r0, r0, r0
 8019fa8:	01000004 	tsteq	r0, r4
 8019fac:	0000070c 	andeq	r0, r0, ip, lsl #14
 8019fb0:	0800e63d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, sp, lr, pc}
 8019fb4:	00000000 	andeq	r0, r0, r0
 8019fb8:	0800e66d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, sp, lr, pc}
 8019fbc:	00000000 	andeq	r0, r0, r0
 8019fc0:	01000000 	mrseq	r0, (UNDEF: 0)
 8019fc4:	0000070d 	andeq	r0, r0, sp, lsl #14
 8019fc8:	0800e6a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, sp, lr, pc}
 8019fcc:	00000000 	andeq	r0, r0, r0
 8019fd0:	0800e6d1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, sp, lr, pc}
 8019fd4:	00000000 	andeq	r0, r0, r0
 8019fd8:	01000000 	mrseq	r0, (UNDEF: 0)
 8019fdc:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019fe0:	2f2f3a73 	svccs	0x002f3a73
 8019fe4:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8019fe8:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8019fec:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 8019ff0:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8019ff4:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 8019ff8:	20656369 	rsbcs	r6, r5, r9, ror #6
 8019ffc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801a000:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a004:	6f697461 	svcvs	0x00697461
 801a008:	20000a6e 	andcs	r0, r0, lr, ror #20
 801a00c:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 801a010:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 801a014:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 801a018:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 801a01c:	203a2065 	eorscs	r2, sl, r5, rrx
 801a020:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801a024:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801a028:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 801a02c:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 801a030:	20726572 	rsbscs	r6, r2, r2, ror r5
 801a034:	20204449 	eorcs	r4, r0, r9, asr #8
 801a038:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a03c:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 801a040:	0a58322e 	beq	9626900 <__exidx_end+0x160a840>
 801a044:	65532000 	ldrbvs	r2, [r3, #-0]
 801a048:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 801a04c:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 801a050:	20726562 	rsbscs	r6, r2, r2, ror #10
 801a054:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a058:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801a05c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a060:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a064:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a068:	000a5832 	andeq	r5, sl, r2, lsr r8
 801a06c:	6f6f5220 	svcvs	0x006f5220
 801a070:	616c2074 	smcvs	49668	; 0xc204
 801a074:	206c6562 	rsbcs	r6, ip, r2, ror #10
 801a078:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a07c:	3a202020 	bcc	8822104 <__exidx_end+0x806044>
 801a080:	2a2e2520 	bcs	8ba3508 <__exidx_end+0xb87448>
 801a084:	20000a73 	andcs	r0, r0, r3, ror sl
 801a088:	646f7250 	strbtvs	r7, [pc], #-592	; 801a090 <RDMHandler::PID_DEFINITIONS+0x294>
 801a08c:	20746375 	rsbscs	r6, r4, r5, ror r3
 801a090:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 801a094:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 801a098:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a09c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a0a0:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a0a4:	5020000a 	eorpl	r0, r0, sl
 801a0a8:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 801a0ac:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 801a0b0:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 801a0b4:	2020206c 	eorcs	r2, r0, ip, rrx
 801a0b8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a0bc:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 801a0c0:	0a58322e 	beq	9626980 <__exidx_end+0x160a8c0>
	...

0801a0c5 <DEVICE_LABEL>:
 801a0c5:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801a0c9:	30353446 	eorscc	r3, r5, r6, asr #8
 801a0cd:	52204956 	eorpl	r4, r0, #1409024	; 0x158000
 801a0d1:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 801a0d5:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801a0d9:	 	subseq	r0, r0, r5, rrx

0801a0db <RDMConst::MANUFACTURER_ID>:
 801a0db:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0801a0dd <RDMConst::MANUFACTURER_NAME>:
 801a0dd:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801a0e1:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 801a0e5:	6f2e7777 	svcvs	0x002e7777
 801a0e9:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 801a0ed:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 801a0f1:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801a0f5:	0067726f 	rsbeq	r7, r7, pc, ror #4
 801a0f9:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 801a0fd:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 801a101:	30252d78 	eorcc	r2, r5, r8, ror sp
 801a105:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 801a109:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 801a10d:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 801a111:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a115:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a119:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a11d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a121:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a125:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a129:	584d4400 	stmdapl	sp, {sl, lr}^
 801a12d:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 801a131:	20000a64 	andcs	r0, r0, r4, ror #20
 801a135:	61657242 	cmnvs	r5, r2, asr #4
 801a139:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 801a13d:	2020656d 	eorcs	r6, r0, sp, ror #10
 801a141:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a145:	20000a75 	andcs	r0, r0, r5, ror sl
 801a149:	2042414d 	subcs	r4, r2, sp, asr #2
 801a14d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801a151:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a155:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a159:	20000a75 	andcs	r0, r0, r5, ror sl
 801a15d:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 801a161:	20687365 	rsbcs	r7, r8, r5, ror #6
 801a165:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 801a169:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a16d:	20000a75 	andcs	r0, r0, r5, ror sl
 801a171:	746f6c53 	strbtvc	r6, [pc], #-3155	; 801a179 <RDMConst::MANUFACTURER_NAME+0x9c>
 801a175:	20202073 	eorcs	r2, r0, r3, ror r0
 801a179:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a17d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a181:	 	andeq	r0, r0, r5, ror sl

0801a184 <vtable for DmxSend>:
	...
 801a18c:	0800e8d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, sp, lr, pc}
 801a190:	0800e9c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, sp, lr, pc}
 801a194:	0800e8dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, sp, lr, pc}
 801a198:	0800e90d 	stmdaeq	r0, {r0, r2, r3, r8, fp, sp, lr, pc}
 801a19c:	0800e945 	stmdaeq	r0, {r0, r2, r6, r8, fp, sp, lr, pc}
 801a1a0:	0800e955 	stmdaeq	r0, {r0, r2, r4, r6, r8, fp, sp, lr, pc}
 801a1a4:	0800e961 	stmdaeq	r0, {r0, r5, r6, r8, fp, sp, lr, pc}
 801a1a8:	0800e96d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, fp, sp, lr, pc}
 801a1ac:	080150ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, ip, lr}
 801a1b0:	080150e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, ip, lr}
 801a1b4:	080150e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, ip, lr}
 801a1b8:	080150f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, ip, lr}

0801a1bc <DmxParamsConst::BREAK_TIME>:
 801a1bc:	61657262 	cmnvs	r5, r2, ror #4
 801a1c0:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a1c4:	 	movwvc	r6, #1389	; 0x56d

0801a1c7 <DmxParamsConst::SLOTS_COUNT>:
 801a1c7:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801a1cf <DmxParamsConst::SLOTS_COUNT+0x8>
 801a1cb:	6f635f73 	svcvs	0x00635f73
 801a1cf:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a1d3 <DmxParamsConst::REFRESH_RATE>:
 801a1d3:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 801a1d7:	5f687365 	svcpl	0x00687365
 801a1db:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

0801a1e0 <DmxParamsConst::MAB_TIME>:
 801a1e0:	5f62616d 	svcpl	0x0062616d
 801a1e4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

0801a1e9 <DmxParamsConst::FILE_NAME>:
 801a1e9:	61726170 	cmnvs	r2, r0, ror r1
 801a1ed:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 801a1f1:	 	andeq	r7, r0, r8, ror r4

0801a1f4 <s_DirGpio>:
 801a1f4:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a1f8:	00000001 	andeq	r0, r0, r1
 801a1fc:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a200:	00000002 	andeq	r0, r0, r2
 801a204:	2f637273 	svccs	0x00637273
 801a208:	2f786d64 	svccs	0x00786d64
 801a20c:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
 801a210:	6d647878 	stclvs	8, cr7, [r4, #-480]!	; 0xfffffe20
 801a214:	6c756d78 	ldclvs	13, cr6, [r5], #-480	; 0xfffffe20
 801a218:	632e6974 			; <UNDEFINED> instruction: 0x632e6974
 801a21c:	25007070 	strcs	r7, [r0, #-112]	; 0xffffff90
 801a220:	20292873 	eorcs	r2, r9, r3, ror r8
 801a224:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801a228:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801a22c:	3a692520 	bcc	9a636b4 <__exidx_end+0x1a475f4>
 801a230:	0a752520 	beq	9d636b8 <__exidx_end+0x1d475f8>
 801a234:	61447000 	mrsvs	r7, (UNDEF: 68)
 801a238:	21206174 			; <UNDEFINED> instruction: 0x21206174
 801a23c:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801a240:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801a244:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
 801a248:	74614474 	strbtvc	r4, [r1], #-1140	; 0xfffffb8c
 801a24c:	4c6e0061 	stclmi	0, cr0, [lr], #-388	; 0xfffffe7c
 801a250:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
 801a254:	3d3c2068 	ldccc	0, cr2, [ip, #-416]!	; 0xfffffe60
 801a258:	786d6420 	stmdavc	sp!, {r5, sl, sp, lr}^
 801a25c:	4e553a3a 			; <UNDEFINED> instruction: 0x4e553a3a
 801a260:	52455649 	subpl	r5, r5, #76546048	; 0x4900000
 801a264:	535f4553 	cmppl	pc, #348127232	; 0x14c00000
 801a268:	00455a49 	subeq	r5, r5, r9, asr #20
 801a26c:	436e5f6d 	cmnmi	lr, #436	; 0x1b4
 801a270:	6e6e6168 	powvsez	f6, f6, #0.0
 801a274:	50736c65 	rsbspl	r6, r3, r5, ror #24
 801a278:	69507265 	ldmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801a27c:	206c6578 	rsbcs	r6, ip, r8, ror r5
 801a280:	34203d3d 	strtcc	r3, [r0], #-3389	; 0xfffff2c3
 801a284:	6f745300 	svcvs	0x00745300
 801a288:	53570070 	cmppl	r7, #112	; 0x70
 801a28c:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 801a290:	4d786d44 	ldclmi	13, cr6, [r8, #-272]!	; 0xfffffef0
 801a294:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 801a298:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801a29c:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801a2a0:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801a2a4:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801a2a8:	6d203a69 	vstmdbvs	r0!, {s6-s110}
 801a2ac:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
 801a2b0:	666e4974 			; <UNDEFINED> instruction: 0x666e4974
 801a2b4:	506e2e6f 	rsbpl	r2, lr, pc, ror #28
 801a2b8:	6f746f72 	svcvs	0x00746f72
 801a2bc:	506c6f63 	rsbpl	r6, ip, r3, ror #30
 801a2c0:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801a2c4:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801a2c8:	7473614c 	ldrbtvc	r6, [r3], #-332	; 0xfffffeb4
 801a2cc:	0a75253d 	beq	9d637c8 <__exidx_end+0x1d47708>
 801a2d0:	00000000 	andeq	r0, r0, r0

0801a2d4 <vtable for WS28xxDmxMulti>:
	...
 801a2dc:	0800f481 	stmdaeq	r0, {r0, r7, sl, ip, sp, lr, pc}
 801a2e0:	0800f4a1 	stmdaeq	r0, {r0, r5, r7, sl, ip, sp, lr, pc}
 801a2e4:	0800f445 	stmdaeq	r0, {r0, r2, r6, sl, ip, sp, lr, pc}
 801a2e8:	0800f675 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr, pc}
 801a2ec:	0800f4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, ip, sp, lr, pc}
 801a2f0:	0800f4b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, sl, ip, sp, lr, pc}
 801a2f4:	0800f655 	stmdaeq	r0, {r0, r2, r4, r6, r9, sl, ip, sp, lr, pc}
 801a2f8:	0800f66d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr, pc}
 801a2fc:	0800f435 	stmdaeq	r0, {r0, r2, r4, r5, sl, ip, sp, lr, pc}
 801a300:	0800f439 	stmdaeq	r0, {r0, r3, r4, r5, sl, ip, sp, lr, pc}
 801a304:	0800f43f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, sl, ip, sp, lr, pc}
 801a308:	080150f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, ip, lr}
 801a30c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801a310:	2a2e253a 	bcs	8ba3800 <__exidx_end+0xb87740>
 801a314:	23002c66 	movwcs	r2, #3174	; 0xc66
 801a318:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 801a31c:	0a662a2e 	beq	99a4bdc <__exidx_end+0x1988b1c>
 801a320:	75427000 	strbvc	r7, [r2, #-0]
 801a324:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 801a328:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801a32c:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 801a330:	00727470 	rsbseq	r7, r2, r0, ror r4
 801a334:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
 801a338:	63727300 	cmnvs	r2, #0, 6
 801a33c:	7261702f 	rsbvc	r7, r1, #47	; 0x2f
 801a340:	2f736d61 	svccs	0x00736d61
 801a344:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 801a348:	786d646c 	stmdavc	sp!, {r2, r3, r5, r6, sl, sp, lr}^
 801a34c:	61726170 	cmnvs	r2, r0, ror r1
 801a350:	632e736d 			; <UNDEFINED> instruction: 0x632e736d
 801a354:	6e007070 	mcrvs	0, 0, r7, cr0, cr0, {3}
 801a358:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801a35c:	21206874 			; <UNDEFINED> instruction: 0x21206874
 801a360:	0030203d 	eorseq	r2, r0, sp, lsr r0
 801a364:	50705f6d 	rsbspl	r5, r0, sp, ror #30
 801a368:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a36c:	50786d44 	rsbspl	r6, r8, r4, asr #26
 801a370:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 801a374:	6f745373 	svcvs	0x00745373
 801a378:	21206572 			; <UNDEFINED> instruction: 0x21206572
 801a37c:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801a380:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801a384:	4c700072 	ldclmi	0, cr0, [r0], #-456	; 0xfffffe38
 801a388:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801a38c:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 801a390:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 801a394:	63007274 	movwvs	r7, #628	; 0x274
 801a398:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
 801a39c:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
 801a3a0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801a3a4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801a3a8:	3d212070 	stccc	0, cr2, [r1, #-448]!	; 0xfffffe40
 801a3ac:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a3b0:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a3b4:	61747300 	cmnvs	r4, r0, lsl #6
 801a3b8:	43636974 	cmnmi	r3, #116, 18	; 0x1d0000
 801a3bc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
 801a3c0:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
 801a3c4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801a3c8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801a3cc:	3d212073 	stccc	0, cr2, [r1, #-460]!	; 0xfffffe34
 801a3d0:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a3d4:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a3d8:	69754200 	ldmdbvs	r5!, {r9, lr}^
 801a3dc:	7265646c 	rsbvc	r6, r5, #108, 8	; 0x6c000000
 801a3e0:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 801a3e4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801a3e8:	4f003e74 	svcmi	0x00003e74
 801a3ec:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801a3f0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801a3f4:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801a3f8:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 801a3fc:	4f007465 	svcmi	0x00007465
 801a400:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801a404:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801a408:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 801a40c:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801a410:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 801a414:	6f724700 	svcvs	0x00724700
 801a418:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 801a41c:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 801a420:	206b636f 	rsbcs	r6, fp, pc, ror #6
 801a424:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 801a428:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 801a42c:	00737069 	rsbseq	r7, r3, r9, rrx
 801a430:	31415041 	cmpcc	r1, r1, asr #32
 801a434:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 801a438:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 801a43c:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 801a440:	70207473 	eorvc	r7, r0, r3, ror r4
 801a444:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 801a448:	25006e72 	strcs	r6, [r0, #-3698]	; 0xfffff18e
 801a44c:	20292873 	eorcs	r2, r9, r3, ror r8
 801a450:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801a454:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801a458:	3a692520 	bcc	9a638e0 <__exidx_end+0x1a47820>
 801a45c:	69536e20 	ldmdbvs	r3, {r5, r9, sl, fp, sp, lr}^
 801a460:	253d657a 	ldrcs	r6, [sp, #-1402]!	; 0xfffffa86
 801a464:	70000a64 	andvc	r0, r0, r4, ror #20
 801a468:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801a46c:	786d446c 	stmdavc	sp!, {r2, r3, r5, r6, sl, lr}^
 801a470:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801a474:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a478:	6f697461 	svcvs	0x00697461
 801a47c:	3d21206e 	stccc	0, cr2, [r1, #-440]!	; 0xfffffe48
 801a480:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a484:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a488:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
 801a48c:	6d754400 	cfldrdvs	mvd4, [r5, #-0]
 801a490:	72730070 	rsbsvc	r0, r3, #112	; 0x70
 801a494:	61702f63 	cmnvs	r0, r3, ror #30
 801a498:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 801a49c:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 801a4a0:	6d646c65 	stclvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
 801a4a4:	72617078 	rsbvc	r7, r1, #120	; 0x78
 801a4a8:	64736d61 	ldrbtvs	r6, [r3], #-3425	; 0xfffff29f
 801a4ac:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
 801a4b0:	00707063 	rsbseq	r7, r0, r3, rrx
 801a4b4:	3a3a7325 	bcc	8eb7150 <__exidx_end+0xe9b090>
 801a4b8:	27207325 	strcs	r7, [r0, -r5, lsr #6]!
 801a4bc:	3a277325 	bcc	89f7158 <__exidx_end+0x9db098>
 801a4c0:	2520000a 	strcs	r0, [r0, #-10]!
 801a4c4:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 801a4c8:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801a4cc:	20000a5d 	andcs	r0, r0, sp, asr sl
 801a4d0:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 801a4d4:	255b2064 	ldrbcs	r2, [fp, #-100]	; 0xffffff9c
 801a4d8:	000a5d73 	andeq	r5, sl, r3, ror sp
 801a4dc:	3d732520 	cfldr64cc	mvdx2, [r3, #-128]!	; 0xffffff80
 801a4e0:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 801a4e4:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 801a4e8:	0a5d5825 	beq	9770584 <__exidx_end+0x17544c4>
 801a4ec:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801a4f0:	0a64253d 	beq	99239ec <__exidx_end+0x190792c>
 801a4f4:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801a4f8:	5b20313d 	blpl	88269f4 <__exidx_end+0x80a934>
 801a4fc:	5d736559 	cfldr64pl	mvdx6, [r3, #-356]!	; 0xfffffe9c
 801a500:	2520000a 	strcs	r0, [r0, #-10]!
 801a504:	31253d73 			; <UNDEFINED> instruction: 0x31253d73
 801a508:	2066312e 	rsbcs	r3, r6, lr, lsr #2
 801a50c:	5d75255b 	cfldr64pl	mvdx2, [r5, #-364]!	; 0xfffffe94
 801a510:	6156000a 	cmpvs	r6, sl
 801a514:	6164696c 	cmnvs	r4, ip, ror #18
 801a518:	73006574 	movwvc	r6, #1396	; 0x574
 801a51c:	702f6372 	eorvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
 801a520:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a524:	63786d64 	cmnvs	r8, #100, 26	; 0x1900
 801a528:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801a52c:	61727567 	cmnvs	r2, r7, ror #10
 801a530:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801a534:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801a538:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801a53c:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801a540:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801a544:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801a548:	70203a69 	eorvc	r3, r0, r9, ror #20
 801a54c:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801a550:	2e6f666e 	cdpcs	6, 6, cr6, cr15, cr14, {3}
 801a554:	6f72506e 	svcvs	0x0072506e
 801a558:	6f636f74 	svcvs	0x00636f74
 801a55c:	726f506c 	rsbvc	r5, pc, #108	; 0x6c
 801a560:	646e4974 	strbtvs	r4, [lr], #-2420	; 0xfffff68c
 801a564:	614c7865 	cmpvs	ip, r5, ror #16
 801a568:	253d7473 	ldrcs	r7, [sp, #-1139]!	; 0xfffffb8d
 801a56c:	50000a75 	andpl	r0, r0, r5, ror sl
 801a570:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a574:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 801a578:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801a57c:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 801a580:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801a584:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801a588:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 801a58c:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 801a590:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a594:	20000a64 	andcs	r0, r0, r4, ror #20
 801a598:	756f7247 	strbvc	r7, [pc, #-583]!	; 801a359 <vtable for WS28xxDmxMulti+0x85>
 801a59c:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 801a5a0:	756f6320 	strbvc	r6, [pc, #-800]!	; 801a288 <s_DirGpio+0x94>
 801a5a4:	3a20746e 	bcc	8837764 <__exidx_end+0x81b6a4>
 801a5a8:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801a5ac:	6f72475b 	svcvs	0x0072475b
 801a5b0:	20737075 	rsbscs	r7, r3, r5, ror r0
 801a5b4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a5b8:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 801a5bc:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 801a5c0:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 801a5c4:	206c6578 	rsbcs	r6, ip, r8, ror r5
 801a5c8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801a5cc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a5d0:	6f697461 	svcvs	0x00697461
 801a5d4:	20000a6e 	andcs	r0, r0, lr, ror #20
 801a5d8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801a5dc:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a5e0:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801a5e4:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801a5e8:	20000a5d 	andcs	r0, r0, sp, asr sl
 801a5ec:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 801a5f0:	20202074 	eorcs	r2, r0, r4, ror r0
 801a5f4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a5f8:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801a5fc:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 801a600:	3a20676e 	bcc	88343c0 <__exidx_end+0x818300>
 801a604:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801a608:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801a60c:	5420000a 	strtpl	r0, [r0], #-10
 801a610:	20204830 	eorcs	r4, r0, r0, lsr r8
 801a614:	3a202020 	bcc	882269c <__exidx_end+0x8065dc>
 801a618:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801a61c:	305b2066 	subscc	r2, fp, r6, rrx
 801a620:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 801a624:	5420000a 	strtpl	r0, [r0], #-10
 801a628:	20204831 	eorcs	r4, r0, r1, lsr r8
 801a62c:	3a202020 	bcc	88226b4 <__exidx_end+0x8065f4>
 801a630:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801a634:	305b2066 	subscc	r2, fp, r6, rrx
 801a638:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 801a63c:	4720000a 	strmi	r0, [r0, -sl]!
 801a640:	61626f6c 	cmnvs	r2, ip, ror #30
 801a644:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 801a648:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 801a64c:	3a737365 	bcc	9cf73e8 <__exidx_end+0x1cdb328>
 801a650:	0a752520 	beq	9d63ad8 <__exidx_end+0x1d47a18>
 801a654:	61472000 	mrsvs	r2, (UNDEF: 71)
 801a658:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 801a65c:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 801a660:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801a664:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801a668:	20000a73 	andcs	r0, r0, r3, ror sl
 801a66c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 801a670:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 801a674:	7a482075 	bvc	9222850 <__exidx_end+0x1206790>
 801a678:	0000000a 	andeq	r0, r0, sl

0801a67c <CSWTCH.9>:
 801a67c:	0801a890 	stmdaeq	r1, {r4, r7, fp, sp, pc}
 801a680:	0801a990 	stmdaeq	r1, {r4, r7, r8, fp, sp, pc}
 801a684:	0801aa90 	stmdaeq	r1, {r4, r7, r9, fp, sp, pc}
 801a688:	0801ab90 	stmdaeq	r1, {r4, r7, r8, r9, fp, sp, pc}
 801a68c:	0801ac90 	stmdaeq	r1, {r4, r7, sl, fp, sp, pc}

0801a690 <gamma10_0>:
 801a690:	03020100 	movweq	r0, #8448	; 0x2100
 801a694:	07060504 	streq	r0, [r6, -r4, lsl #10]
 801a698:	0b0a0908 	bleq	829cac0 <__exidx_end+0x280a00>
 801a69c:	0f0e0d0c 	svceq	0x000e0d0c
 801a6a0:	13121110 	tstne	r2, #16, 2
 801a6a4:	17161514 			; <UNDEFINED> instruction: 0x17161514
 801a6a8:	1b1a1918 	blne	86a0b10 <__exidx_end+0x684a50>
 801a6ac:	1f1e1d1c 	svcne	0x001e1d1c
 801a6b0:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801a6b4:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 801a6b8:	2b2a2928 	blcs	8aa4b60 <__exidx_end+0xa88aa0>
 801a6bc:	2f2e2d2c 	svccs	0x002e2d2c
 801a6c0:	33323130 	teqcc	r2, #48, 2
 801a6c4:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801a6c8:	3b3a3938 	blcc	8ea8bb0 <__exidx_end+0xe8caf0>
 801a6cc:	3f3e3d3c 	svccc	0x003e3d3c
 801a6d0:	43424140 	movtmi	r4, #8512	; 0x2140
 801a6d4:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801a6d8:	4b4a4948 	blmi	92acc00 <__exidx_end+0x1290b40>
 801a6dc:	4f4e4d4c 	svcmi	0x004e4d4c
 801a6e0:	53525150 	cmppl	r2, #80, 2
 801a6e4:	57565554 			; <UNDEFINED> instruction: 0x57565554
 801a6e8:	5b5a5958 	blpl	96b0c50 <__exidx_end+0x1694b90>
 801a6ec:	5f5e5d5c 	svcpl	0x005e5d5c
 801a6f0:	63626160 	cmnvs	r2, #96, 2
 801a6f4:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 801a6f8:	6b6a6968 	blvs	9ab4ca0 <__exidx_end+0x1a98be0>
 801a6fc:	6f6e6d6c 	svcvs	0x006e6d6c
 801a700:	73727170 	cmnvc	r2, #112, 2
 801a704:	77767574 			; <UNDEFINED> instruction: 0x77767574
 801a708:	7b7a7978 	blvc	9eb8cf0 <__exidx_end+0x1e9cc30>
 801a70c:	7f7e7d7c 	svcvc	0x007e7d7c
 801a710:	83828180 	orrhi	r8, r2, #128, 2
 801a714:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801a718:	8b8a8988 	blhi	62bcd40 <__stack_size+0x62b8d40>
 801a71c:	8f8e8d8c 	svchi	0x008e8d8c
 801a720:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 801a724:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801a728:	9b9a9998 	blls	66c0d90 <__stack_size+0x66bcd90>
 801a72c:	9f9e9d9c 	svcls	0x009e9d9c
 801a730:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 801a734:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801a738:	abaaa9a8 	blge	6ac4de0 <__stack_size+0x6ac0de0>
 801a73c:	afaeadac 	svcge	0x00aeadac
 801a740:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 801a744:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 801a748:	bbbab9b8 	bllt	6ec8e30 <__stack_size+0x6ec4e30>
 801a74c:	bfbebdbc 	svclt	0x00bebdbc
 801a750:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 801a754:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801a758:	cbcac9c8 	blgt	72cce80 <__stack_size+0x72c8e80>
 801a75c:	cfcecdcc 	svcgt	0x00cecdcc
 801a760:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 801a764:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 801a768:	dbdad9d8 	blle	76d0ed0 <__stack_size+0x76cced0>
 801a76c:	dfdedddc 	svcle	0x00dedddc
 801a770:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 801a774:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 801a778:	ebeae9e8 	bl	7ad4f20 <__stack_size+0x7ad0f20>
 801a77c:	efeeedec 	svc	0x00eeedec
 801a780:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 801a784:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 801a788:	fbfaf9f8 	blx	7ed8f72 <__stack_size+0x7ed4f72>
 801a78c:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

0801a790 <gamma20_0>:
	...
 801a79c:	01010101 	tsteq	r1, r1, lsl #2
 801a7a0:	01010101 	tsteq	r1, r1, lsl #2
 801a7a4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801a7a8:	03030202 	movweq	r0, #12802	; 0x3202
 801a7ac:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801a7b0:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 801a7b4:	06060505 	streq	r0, [r6], -r5, lsl #10
 801a7b8:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801a7bc:	09080808 	stmdbeq	r8, {r3, fp}
 801a7c0:	0a0a0909 	beq	829cbec <__exidx_end+0x280b2c>
 801a7c4:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801a7c8:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801a7cc:	100f0f0e 	andne	r0, pc, lr, lsl #30
 801a7d0:	12111110 	andsne	r1, r1, #16, 2
 801a7d4:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 801a7d8:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801a7dc:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 801a7e0:	1b1a1a19 	blne	86a104c <__exidx_end+0x684f8c>
 801a7e4:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 801a7e8:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801a7ec:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801a7f0:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801a7f4:	2a292827 	bcs	8a64898 <__exidx_end+0xa487d8>
 801a7f8:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801a7fc:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 801a800:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801a804:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801a808:	3b3a3938 	blcc	8ea8cf0 <__exidx_end+0xe8cc30>
 801a80c:	3f3e3d3c 	svccc	0x003e3d3c
 801a810:	43424140 	movtmi	r4, #8512	; 0x2140
 801a814:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801a818:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801a81c:	504f4e4d 	subpl	r4, pc, sp, asr #28
 801a820:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 801a824:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 801a828:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 801a82c:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801a830:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 801a834:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 801a838:	7371706f 	cmnvc	r1, #111	; 0x6f
 801a83c:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 801a840:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 801a844:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 801a848:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 801a84c:	8f8e8c8b 	svchi	0x008e8c8b
 801a850:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 801a854:	9b9a9897 	blls	66c0ab8 <__stack_size+0x66bcab8>
 801a858:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 801a85c:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 801a860:	afadabaa 	svcge	0x00adabaa
 801a864:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 801a868:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 801a86c:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 801a870:	cac8c7c5 	bgt	724c78c <__stack_size+0x724878c>
 801a874:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 801a878:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801a87c:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 801a880:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 801a884:	efedebe9 	svc	0x00edebe9
 801a888:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 801a88c:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

0801a890 <gamma21_0>:
	...
 801a89c:	01010000 	mrseq	r0, (UNDEF: 1)
 801a8a0:	01010101 	tsteq	r1, r1, lsl #2
 801a8a4:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801a8a8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801a8ac:	03030302 	movweq	r0, #13058	; 0x3302
 801a8b0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801a8b4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 801a8b8:	06060505 	streq	r0, [r6], -r5, lsl #10
 801a8bc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801a8c0:	09080808 	stmdbeq	r8, {r3, fp}
 801a8c4:	0a0a0909 	beq	829ccf0 <__exidx_end+0x280c30>
 801a8c8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801a8cc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801a8d0:	0f0f0e0e 	svceq	0x000f0e0e
 801a8d4:	11111010 	tstne	r1, r0, lsl r0
 801a8d8:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 801a8dc:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801a8e0:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 801a8e4:	1b1a1919 	blne	86a0d50 <__exidx_end+0x684c90>
 801a8e8:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 801a8ec:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 801a8f0:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801a8f4:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801a8f8:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 801a8fc:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 801a900:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801a904:	33333231 	teqcc	r3, #268435459	; 0x10000003
 801a908:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801a90c:	3b3a3938 	blcc	8ea8df4 <__exidx_end+0xe8cd34>
 801a910:	3f3e3d3c 	svccc	0x003e3d3c
 801a914:	43424140 	movtmi	r4, #8512	; 0x2140
 801a918:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801a91c:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 801a920:	504f4e4d 	subpl	r4, pc, sp, asr #28
 801a924:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 801a928:	5a585756 	bpl	9630688 <__exidx_end+0x16145c8>
 801a92c:	5f5d5c5b 	svcpl	0x005d5c5b
 801a930:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 801a934:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 801a938:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 801a93c:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 801a940:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 801a944:	7f7e7c7b 	svcvc	0x007e7c7b
 801a948:	85838281 	strhi	r8, [r3, #641]	; 0x281
 801a94c:	8b898886 	blhi	627cb6c <__stack_size+0x6278b6c>
 801a950:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 801a954:	97969493 			; <UNDEFINED> instruction: 0x97969493
 801a958:	9e9c9b99 	vmovls.32	r9, d28[0]
 801a95c:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 801a960:	abaaa8a6 	blge	6ac4c00 <__stack_size+0x6ac0c00>
 801a964:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 801a968:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 801a96c:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 801a970:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 801a974:	cfcdcbca 	svcgt	0x00cdcbca
 801a978:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 801a97c:	dfdddbd9 	svcle	0x00dddbd9
 801a980:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 801a984:	eeeceae8 	vfms.f32	s29, s25, s17
 801a988:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 801a98c:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

0801a990 <gamma22_0>:
	...
 801a99c:	01000000 	mrseq	r0, (UNDEF: 0)
 801a9a0:	01010101 	tsteq	r1, r1, lsl #2
 801a9a4:	01010101 	tsteq	r1, r1, lsl #2
 801a9a8:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 801a9ac:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801a9b0:	03030303 	movweq	r0, #13059	; 0x3303
 801a9b4:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 801a9b8:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801a9bc:	06060605 	streq	r0, [r6], -r5, lsl #12
 801a9c0:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801a9c4:	09080808 	stmdbeq	r8, {r3, fp}
 801a9c8:	0a0a0909 	beq	829cdf4 <__exidx_end+0x280d34>
 801a9cc:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801a9d0:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 801a9d4:	0f0f0e0e 	svceq	0x000f0e0e
 801a9d8:	11111010 	tstne	r1, r0, lsl r0
 801a9dc:	13131212 	tstne	r3, #536870913	; 0x20000001
 801a9e0:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801a9e4:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801a9e8:	1a1a1919 	bne	86a0e54 <__exidx_end+0x684d94>
 801a9ec:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801a9f0:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801a9f4:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801a9f8:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801a9fc:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801aa00:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 801aa04:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801aa08:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801aa0c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801aa10:	3b3a3938 	blcc	8ea8ef8 <__exidx_end+0xe8ce38>
 801aa14:	3f3e3d3c 	svccc	0x003e3d3c
 801aa18:	43424140 	movtmi	r4, #8512	; 0x2140
 801aa1c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801aa20:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801aa24:	514f4e4d 	cmppl	pc, sp, asr #28
 801aa28:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 801aa2c:	5a595857 	bpl	9670b90 <__exidx_end+0x1654ad0>
 801aa30:	5f5e5d5b 	svcpl	0x005e5d5b
 801aa34:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 801aa38:	6a696766 	bvs	9a747d8 <__exidx_end+0x1a58718>
 801aa3c:	6f6e6d6b 	svcvs	0x006e6d6b
 801aa40:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 801aa44:	7b797877 	blvc	9e78c28 <__exidx_end+0x1e5cb68>
 801aa48:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 801aa4c:	87858482 	strhi	r8, [r5, r2, lsl #9]
 801aa50:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 801aa54:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 801aa58:	9a999795 	bls	66808b4 <__stack_size+0x667c8b4>
 801aa5c:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 801aa60:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 801aa64:	afadacaa 	svcge	0x00adacaa
 801aa68:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 801aa6c:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 801aa70:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 801aa74:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 801aa78:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 801aa7c:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 801aa80:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 801aa84:	eeeceae7 	vfms.f32	s29, s25, s15
 801aa88:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 801aa8c:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

0801aa90 <gamma23_0>:
	...
 801aaa0:	01010100 	mrseq	r0, (UNDEF: 17)
 801aaa4:	01010101 	tsteq	r1, r1, lsl #2
 801aaa8:	01010101 	tsteq	r1, r1, lsl #2
 801aaac:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801aab0:	03020202 	movweq	r0, #8706	; 0x2202
 801aab4:	03030303 	movweq	r0, #13059	; 0x3303
 801aab8:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801aabc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801aac0:	06060605 	streq	r0, [r6], -r5, lsl #12
 801aac4:	07070707 	streq	r0, [r7, -r7, lsl #14]
 801aac8:	09080808 	stmdbeq	r8, {r3, fp}
 801aacc:	0a0a0a09 	beq	829d2f8 <__exidx_end+0x281238>
 801aad0:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801aad4:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 801aad8:	0f0f0e0e 	svceq	0x000f0e0e
 801aadc:	11111010 	tstne	r1, r0, lsl r0
 801aae0:	13131212 	tstne	r3, #536870913	; 0x20000001
 801aae4:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 801aae8:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801aaec:	1a1a1918 	bne	86a0f54 <__exidx_end+0x684e94>
 801aaf0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801aaf4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801aaf8:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801aafc:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801ab00:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 801ab04:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 801ab08:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801ab0c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801ab10:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801ab14:	3b3a3938 	blcc	8ea8ffc <__exidx_end+0xe8cf3c>
 801ab18:	3f3e3d3c 	svccc	0x003e3d3c
 801ab1c:	43424140 	movtmi	r4, #8512	; 0x2140
 801ab20:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 801ab24:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801ab28:	51504f4e 	cmppl	r0, lr, asr #30
 801ab2c:	56555452 			; <UNDEFINED> instruction: 0x56555452
 801ab30:	5b5a5957 	blpl	96b1094 <__exidx_end+0x1694fd4>
 801ab34:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 801ab38:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 801ab3c:	6b6a6867 	blvs	9ab4ce0 <__exidx_end+0x1a98c20>
 801ab40:	71706e6d 	cmnvc	r0, sp, ror #28
 801ab44:	77757472 			; <UNDEFINED> instruction: 0x77757472
 801ab48:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 801ab4c:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 801ab50:	8a888685 	bhi	623c56c <__stack_size+0x623856c>
 801ab54:	908f8d8b 	addls	r8, pc, fp, lsl #27
 801ab58:	97959492 			; <UNDEFINED> instruction: 0x97959492
 801ab5c:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 801ab60:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 801ab64:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 801ab68:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 801ab6c:	bbb9b7b6 	bllt	6e88a4c <__stack_size+0x6e84a4c>
 801ab70:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 801ab74:	cbc9c7c5 	blgt	728ca90 <__stack_size+0x7288a90>
 801ab78:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 801ab7c:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 801ab80:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 801ab84:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 801ab88:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 801ab8c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801ab90 <gamma24_0>:
	...
 801aba0:	01000000 	mrseq	r0, (UNDEF: 0)
 801aba4:	01010101 	tsteq	r1, r1, lsl #2
 801aba8:	01010101 	tsteq	r1, r1, lsl #2
 801abac:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801abb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801abb4:	03030202 	movweq	r0, #12802	; 0x3202
 801abb8:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 801abbc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801abc0:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 801abc4:	06060606 	streq	r0, [r6], -r6, lsl #12
 801abc8:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801abcc:	09090808 	stmdbeq	r9, {r3, fp}
 801abd0:	0a0a0a09 	beq	829d3fc <__exidx_end+0x28133c>
 801abd4:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801abd8:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801abdc:	0f0f0e0e 	svceq	0x000f0e0e
 801abe0:	11111010 	tstne	r1, r0, lsl r0
 801abe4:	13131212 	tstne	r3, #536870913	; 0x20000001
 801abe8:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801abec:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801abf0:	1a1a1918 	bne	86a1058 <__exidx_end+0x684f98>
 801abf4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801abf8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801abfc:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801ac00:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801ac04:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801ac08:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 801ac0c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801ac10:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801ac14:	37363535 			; <UNDEFINED> instruction: 0x37363535
 801ac18:	3b3a3938 	blcc	8ea9100 <__exidx_end+0xe8d040>
 801ac1c:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 801ac20:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 801ac24:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 801ac28:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 801ac2c:	5251504e 	subspl	r5, r1, #78	; 0x4e
 801ac30:	57565553 			; <UNDEFINED> instruction: 0x57565553
 801ac34:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 801ac38:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 801ac3c:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 801ac40:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 801ac44:	7372706f 	cmnvc	r2, #111	; 0x6f
 801ac48:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 801ac4c:	7f7e7c7b 	svcvc	0x007e7c7b
 801ac50:	86848381 	strhi	r8, [r4], r1, lsl #7
 801ac54:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 801ac58:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 801ac5c:	9b999795 	blls	6680ab8 <__stack_size+0x667cab8>
 801ac60:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 801ac64:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 801ac68:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 801ac6c:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 801ac70:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 801ac74:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 801ac78:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 801ac7c:	dad8d6d4 	ble	76507d4 <__stack_size+0x764c7d4>
 801ac80:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 801ac84:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 801ac88:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 801ac8c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801ac90 <gamma25_0>:
	...
 801aca4:	01010000 	mrseq	r0, (UNDEF: 1)
 801aca8:	01010101 	tsteq	r1, r1, lsl #2
 801acac:	01010101 	tsteq	r1, r1, lsl #2
 801acb0:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 801acb4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801acb8:	03030302 	movweq	r0, #13058	; 0x3302
 801acbc:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801acc0:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 801acc4:	06050505 	streq	r0, [r5], -r5, lsl #10
 801acc8:	07060606 	streq	r0, [r6, -r6, lsl #12]
 801accc:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801acd0:	09090808 	stmdbeq	r9, {r3, fp}
 801acd4:	0a0a0a09 	beq	829d500 <__exidx_end+0x281440>
 801acd8:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 801acdc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801ace0:	0f0f0f0e 	svceq	0x000f0f0e
 801ace4:	11111010 	tstne	r1, r0, lsl r0
 801ace8:	13131212 	tstne	r3, #536870913	; 0x20000001
 801acec:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801acf0:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801acf4:	1a1a1919 	bne	86a1160 <__exidx_end+0x6850a0>
 801acf8:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801acfc:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801ad00:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801ad04:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801ad08:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 801ad0c:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801ad10:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 801ad14:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801ad18:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801ad1c:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 801ad20:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 801ad24:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 801ad28:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 801ad2c:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 801ad30:	53525150 	cmppl	r2, #80, 2
 801ad34:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801ad38:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 801ad3c:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801ad40:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 801ad44:	6f6e6c6b 	svcvs	0x006e6c6b
 801ad48:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 801ad4c:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 801ad50:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 801ad54:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 801ad58:	908e8d8b 	addls	r8, lr, fp, lsl #27
 801ad5c:	97969492 			; <UNDEFINED> instruction: 0x97969492
 801ad60:	9f9d9b99 	svcls	0x009d9b99
 801ad64:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 801ad68:	aeacaaa8 	vfmage.f32	s20, s25, s17
 801ad6c:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 801ad70:	bfbdbab8 	svclt	0x00bdbab8
 801ad74:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 801ad78:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 801ad7c:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 801ad80:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 801ad84:	ebe9e7e4 	bl	7a94d1c <__stack_size+0x7a90d1c>
 801ad88:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 801ad8c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801ad90 <gamma25_5>:
 801ad90:	01010100 	mrseq	r0, (UNDEF: 17)
 801ad94:	01010101 	tsteq	r1, r1, lsl #2
 801ad98:	01010101 	tsteq	r1, r1, lsl #2
 801ad9c:	01010101 	tsteq	r1, r1, lsl #2
 801ada0:	01010101 	tsteq	r1, r1, lsl #2
 801ada4:	01010101 	tsteq	r1, r1, lsl #2
 801ada8:	01010101 	tsteq	r1, r1, lsl #2
 801adac:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801adb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801adb4:	03030302 	movweq	r0, #13058	; 0x3302
 801adb8:	03030303 	movweq	r0, #13059	; 0x3303
 801adbc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801adc0:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801adc4:	06060605 	streq	r0, [r6], -r5, lsl #12
 801adc8:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801adcc:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 801add0:	0a090909 	beq	825d1fc <__exidx_end+0x24113c>
 801add4:	0b0b0a0a 	bleq	82dd604 <__exidx_end+0x2c1544>
 801add8:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 801addc:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 801ade0:	100f0f0f 	andne	r0, pc, pc, lsl #30
 801ade4:	12111110 	andsne	r1, r1, #16, 2
 801ade8:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 801adec:	16161514 			; <UNDEFINED> instruction: 0x16161514
 801adf0:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 801adf4:	1b1a1a19 	blne	86a1660 <__exidx_end+0x6855a0>
 801adf8:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 801adfc:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801ae00:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801ae04:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801ae08:	2a292827 	bcs	8a64eac <__exidx_end+0xa48dec>
 801ae0c:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 801ae10:	31302f2e 	teqcc	r0, lr, lsr #30
 801ae14:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801ae18:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801ae1c:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 801ae20:	41403f3e 	cmpmi	r0, lr, lsr pc
 801ae24:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801ae28:	4a494846 	bmi	926cf48 <__exidx_end+0x1250e88>
 801ae2c:	4f4e4c4b 	svcmi	0x004e4c4b
 801ae30:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 801ae34:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801ae38:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 801ae3c:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 801ae40:	6a686765 	bvs	9a34bdc <__exidx_end+0x1a18b1c>
 801ae44:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801ae48:	76747371 			; <UNDEFINED> instruction: 0x76747371
 801ae4c:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 801ae50:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 801ae54:	8a888685 	bhi	623c870 <__stack_size+0x6238870>
 801ae58:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 801ae5c:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 801ae60:	9f9d9c9a 	svcls	0x009d9c9a
 801ae64:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 801ae68:	afadaba9 	svcge	0x00adaba9
 801ae6c:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 801ae70:	bfbdbbb9 	svclt	0x00bdbbb9
 801ae74:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 801ae78:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 801ae7c:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801ae80:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 801ae84:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 801ae88:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 801ae8c:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 801ae90:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801ae94:	006e776f 	rsbeq	r7, lr, pc, ror #14
 801ae98:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 801ae9c:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 801aea0:	 	andeq	r0, r0, #100	; 0x64

0801aea2 <CSWTCH.18>:
 801aea2:	02020200 	andeq	r0, r2, #0, 4
 801aea6:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 801aeaa:	 	ldrbmi	r0, [r2, -r0, lsl #10]

0801aeac <PixelType::MAPS>:
 801aeac:	00424752 	subeq	r4, r2, r2, asr r7
 801aeb0:	00474252 	subeq	r4, r7, r2, asr r2
 801aeb4:	00425247 	subeq	r5, r2, r7, asr #4
 801aeb8:	00524247 	subseq	r4, r2, r7, asr #4
 801aebc:	00475242 	subeq	r5, r7, r2, asr #4
 801aec0:	00524742 	subseq	r4, r2, r2, asr #14

0801aec4 <PixelType::TYPES>:
 801aec4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aec8:	00003130 	andeq	r3, r0, r0, lsr r1
 801aecc:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aed0:	00003131 	andeq	r3, r0, r1, lsr r1
 801aed4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aed8:	00003231 	andeq	r3, r0, r1, lsr r2
 801aedc:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aee0:	00423231 	subeq	r3, r2, r1, lsr r2
 801aee4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aee8:	00003331 	andeq	r3, r0, r1, lsr r3
 801aeec:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801aef0:	00003531 	andeq	r3, r0, r1, lsr r5
 801aef4:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801aef8:	00003231 	andeq	r3, r0, r1, lsr r2
 801aefc:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801af00:	00573231 	subseq	r3, r7, r1, lsr r2
 801af04:	31534355 	cmpcc	r3, r5, asr r3
 801af08:	00333039 	eorseq	r3, r3, r9, lsr r0
 801af0c:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801af10:	00333039 	eorseq	r3, r3, r9, lsr r0
 801af14:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801af18:	00003231 	andeq	r3, r0, r1, lsr r2
 801af1c:	31415041 	cmpcc	r1, r1, asr #32
 801af20:	00003230 	andeq	r3, r0, r0, lsr r2
 801af24:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801af28:	00003232 	andeq	r3, r0, r2, lsr r2
 801af2c:	31383950 	teqcc	r8, r0, asr r9
 801af30:	00000033 	andeq	r0, r0, r3, lsr r0

0801af34 <s_patternName>:
 801af34:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 801af40:	61520000 	cmpvs	r2, r0
 801af44:	6f626e69 	svcvs	0x00626e69
 801af48:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801af4c:	00656c63 	rsbeq	r6, r5, r3, ror #24
 801af50:	61656854 	cmnvs	r5, r4, asr r8
 801af54:	20726574 	rsbscs	r6, r2, r4, ror r5
 801af58:	73616863 	cmnvc	r1, #6488064	; 0x630000
 801af5c:	6f430065 	svcvs	0x00430065
 801af60:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 801af64:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801af68:	00000065 	andeq	r0, r0, r5, rrx
 801af6c:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801af70:	0072656e 	rsbseq	r6, r2, lr, ror #10
 801af74:	00000000 	andeq	r0, r0, r0
 801af78:	61460000 	mrsvs	r0, (UNDEF: 70)
 801af7c:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801af88 <pixel::s_GPIO_PINs>:
 801af88:	6374ffff 	cmnvs	r4, #1020	; 0x3fc	; <UNPREDICTABLE>
 801af8c:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 801af90:	3a6e6967 	bcc	9bb5534 <__exidx_end+0x1b99474>
 801af94:	6f6f7420 	svcvs	0x006f7420
 801af98:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801af9c:	6f632079 	svcvs	0x00632079
 801afa0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801afa4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801afa8:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801afac:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 801afb0:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 801afb4:	41000a64 	tstmi	r0, r4, ror #20
 801afb8:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801afbc:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 801afc0:	61662070 	smcvs	25088	; 0x6200
 801afc4:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 801afc8:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801afcc:	61666564 	cmnvs	r6, r4, ror #10
 801afd0:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801afd4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801afd8:	0a796177 	beq	9e735bc <__exidx_end+0x1e574fc>
 801afdc:	50524100 	subspl	r4, r2, r0, lsl #2
 801afe0:	6f6f6c20 	svcvs	0x006f6c20
 801afe4:	2070756b 	rsbscs	r7, r0, fp, ror #10
 801afe8:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801afec:	000a6465 	andeq	r6, sl, r5, ror #8

0801aff0 <NetworkConst::MSG_MDNS_CONFIG>:
 801aff0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801aff4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801aff8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801affc:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801b001 <NetworkConst::MSG_NETWORK_INIT>:
 801b001:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801b005:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801b009:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801b00d:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801b011:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801b015:	3135322e 	teqcc	r5, lr, lsr #4
 801b019:	63745f00 	cmnvs	r4, #0, 30
 801b01d:	6f6c2e70 	svcvs	0x006c2e70
 801b021:	006c6163 	rsbeq	r6, ip, r3, ror #2
 801b025:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801b029:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801b02d:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 801b035 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801b031:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 801b035:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801a1d9 <DmxParamsConst::REFRESH_RATE+0x6>
 801b039:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801b03d:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801b041:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801b045:	20000a53 	andcs	r0, r0, r3, asr sl
 801b049:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801b04d:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801b051:	0a676e69 	beq	99f69fd <__exidx_end+0x19da93d>
 801b055:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801b059:	3a20656d 	bcc	8834615 <__exidx_end+0x818555>
 801b05d:	0a732520 	beq	9ce44e5 <__exidx_end+0x1cc8425>
 801b061:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801b065:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801b069:	000a7325 	andeq	r7, sl, r5, lsr #6
 801b06d:	30687465 	rsbcc	r7, r8, r5, ror #8
 801b071:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801b075:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801b079:	5f656369 	svcpl	0x00656369
 801b07d:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801b081:	6b726f77 	blvs	9cb6e65 <__exidx_end+0x1c9ada5>
 801b085:	4820000a 	stmdami	r0!, {r1, r3}
 801b089:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801b08d:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801b091:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801b095:	20000a73 	andcs	r0, r0, r3, ror sl
 801b099:	614e6649 	cmpvs	lr, r9, asr #12
 801b09d:	2020656d 	eorcs	r6, r0, sp, ror #10
 801b0a1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b0a5:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801b0a9:	000a7325 	andeq	r7, sl, r5, lsr #6
 801b0ad:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801b0b1:	20202074 	eorcs	r2, r0, r4, ror r0
 801b0b5:	3a202020 	bcc	882313d <__exidx_end+0x80707d>
 801b0b9:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801b0bd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b0c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b0c5:	0a64252f 	beq	9924589 <__exidx_end+0x19084c9>
 801b0c9:	654e2000 	strbvs	r2, [lr, #-0]
 801b0cd:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801b0d1:	2020206b 	eorcs	r2, r0, fp, rrx
 801b0d5:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b0d9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b0dd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b0e1:	20000a64 	andcs	r0, r0, r4, ror #20
 801b0e5:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801b0e9:	20796177 	rsbscs	r6, r9, r7, ror r1
 801b0ed:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b0f1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b0f5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b0f9:	0a64252e 	beq	99245b9 <__exidx_end+0x19084f9>
 801b0fd:	72422000 	subvc	r2, r2, #0
 801b101:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 801b105:	20747361 	rsbscs	r7, r4, r1, ror #6
 801b109:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b10d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b111:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b115:	20000a64 	andcs	r0, r0, r4, ror #20
 801b119:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801b11d:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b121:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b125:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b129:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801b12d:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801b131:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801b135:	3a78322e 	bcc	9e279f5 <__exidx_end+0x1e0b935>
 801b139:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b13d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801b141:	20000a78 	andcs	r0, r0, r8, ror sl
 801b145:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801b149:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b14d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b151:	000a6325 	andeq	r6, sl, r5, lsr #6
 801b155:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801b159:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801b15d:	 	rsbvc	r0, r9, r0, asr r0

0801b15f <NetworkParamsConst::IP_ADDRESS>:
 801b15f:	615f7069 	cmpvs	pc, r9, rrx
 801b163:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801b167:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801b16a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801b16a:	61666564 	cmnvs	r6, r4, ror #10
 801b16e:	5f746c75 	svcpl	0x00746c75
 801b172:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801b176:	00796177 	rsbseq	r6, r9, r7, ror r1

0801b17a <NetworkParamsConst::DHCP_RETRY_TIME>:
 801b17a:	70636864 	rsbvc	r6, r3, r4, ror #16
 801b17e:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801b182:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801b18a <NetworkParamsConst::HOSTNAME>
 801b186:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801b18a <NetworkParamsConst::HOSTNAME>:
 801b18a:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801b18e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801b193 <NetworkParamsConst::NET_MASK>:
 801b193:	5f74656e 	svcpl	0x0074656e
 801b197:	6b73616d 	blvs	9cf3753 <__exidx_end+0x1cd7693>
	...

0801b19c <NetworkParamsConst::USE_DHCP>:
 801b19c:	5f657375 	svcpl	0x00657375
 801b1a0:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801b1a5 <NetworkParamsConst::FILE_NAME>:
 801b1a5:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801b1a9:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801b1ad:	00747874 	rsbseq	r7, r4, r4, ror r8
 801b1b1:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 801b1b5:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 801b1b9:	61747320 	cmnvs	r4, r0, lsr #6
 801b1bd:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801b1c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b1c5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b1c9:	252f6425 	strcs	r6, [pc, #-1061]!	; 801adac <gamma25_5+0x1c>
 801b1cd:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801b1d1:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 801b1d5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b1d9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b1dd:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801b1e1:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 801b1e5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b1e9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b1ed:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801b1f1:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 801b1f5:	20657261 	rsbcs	r7, r5, r1, ror #4
 801b1f9:	2a2e2556 	bcs	8ba4759 <__exidx_end+0xb88699>
 801b1fd:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801b201:	72205043 	eorvc	r5, r0, #67	; 0x43
 801b205:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801b209:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801b20d:	50434844 	subpl	r4, r3, r4, asr #16
 801b211:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 801b215:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801b219:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801b21d:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801b221:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 801b225:	6f647475 	svcvs	0x00647475
 801b229:	 	andgt	r6, r0, r7, ror lr

0801b22c <pArray>:
 801b22c:	0801b2c0 	stmdaeq	r1, {r6, r7, r9, ip, sp, pc}
 801b230:	0801b27c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, ip, sp, pc}
 801b234:	0801b15f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, ip, sp, pc}
 801b238:	0801b2c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, ip, sp, pc}
 801b23c:	0801b7db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, sp, pc}
 801b240:	0801b287 	stmdaeq	r1, {r0, r1, r2, r7, r9, ip, sp, pc}
 801b244:	08019001 	stmdaeq	r1, {r0, ip, pc}
 801b248:	0801b18a 	stmdaeq	r1, {r1, r3, r7, r8, ip, sp, pc}
 801b24c:	0801b5e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, sp, pc}
 801b250:	0801b5f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, ip, sp, pc}
 801b254:	0801b602 	stmdaeq	r1, {r1, r9, sl, ip, sp, pc}
 801b258:	0801b612 	stmdaeq	r1, {r1, r4, r9, sl, ip, sp, pc}
 801b25c:	0801b193 	stmdaeq	r1, {r0, r1, r4, r7, r8, ip, sp, pc}
 801b260:	0801b7aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp, pc}
 801b264:	08019001 	stmdaeq	r1, {r0, ip, pc}
 801b268:	08019001 	stmdaeq	r1, {r0, ip, pc}
 801b26c:	08019001 	stmdaeq	r1, {r0, ip, pc}
 801b270:	08019001 	stmdaeq	r1, {r0, ip, pc}
 801b274:	0801b16a 	stmdaeq	r1, {r1, r3, r5, r6, r8, ip, sp, pc}
 801b278:	0801b294 	stmdaeq	r1, {r2, r4, r7, r9, ip, sp, pc}

0801b27c <DisplayUdfParamsConst::BOARD_NAME>:
 801b27c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801b280:	616e5f64 	cmnvs	lr, r4, ror #30
 801b284:	 	tstvs	r0, sp, ror #10

0801b287 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801b287:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b28b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801b28f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

0801b294 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801b294:	5f786d64 	svcpl	0x00786d64
 801b298:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801b29c:	6f697463 	svcvs	0x00697463
 801b2a0:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801b2a2 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801b2a2:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 801b2a6:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801b2aa:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801ad45 <gamma25_0+0xb5>
 801b2ae:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801b2b0 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801b2b0:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801b2b4:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 801b2b8:	61636974 	smcvs	13972	; 0x3694
 801b2bc:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801b2c0 <DisplayUdfParamsConst::TITLE>:
 801b2c0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 801b2c4:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801b2c6 <DisplayUdfParamsConst::VERSION>:
 801b2c6:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801b2ca:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801b2ce <DisplayUdfParamsConst::FILE_NAME>:
 801b2ce:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801b2d2:	2e79616c 	rpwcsez	f6, f1, #4.0
 801b2d6:	00747874 	rsbseq	r7, r4, r4, ror r8

0801b2da <DisplayUdfParamsConst::INTENSITY>:
 801b2da:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801b2de:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801b2e2:	50410079 	subpl	r0, r1, r9, ror r0
 801b2e6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b2ea:	726f5000 	rsbvc	r5, pc, #0
 801b2ee:	63252074 			; <UNDEFINED> instruction: 0x63252074
 801b2f2:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b2f6:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801b2fa:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801b2fe:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801b302:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801b306:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

0801b30c <s_aStorSize>:
 801b30c:	00000060 	andeq	r0, r0, r0, rrx
 801b310:	00000090 	muleq	r0, r0, r0
 801b314:	00000020 	andeq	r0, r0, r0, lsr #32
 801b318:	00000040 	andeq	r0, r0, r0, asr #32
 801b31c:	00000060 	andeq	r0, r0, r0, rrx
 801b320:	00000040 	andeq	r0, r0, r0, asr #32
 801b324:	00000020 	andeq	r0, r0, r0, lsr #32
 801b328:	00000020 	andeq	r0, r0, r0, lsr #32
 801b32c:	000001e0 	andeq	r0, r0, r0, ror #3
 801b330:	00000040 	andeq	r0, r0, r0, asr #32
 801b334:	00000020 	andeq	r0, r0, r0, lsr #32
 801b338:	00000060 	andeq	r0, r0, r0, rrx
 801b33c:	00000030 	andeq	r0, r0, r0, lsr r0
 801b340:	00000020 	andeq	r0, r0, r0, lsr #32
 801b344:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 801b348:	00000030 	andeq	r0, r0, r0, lsr r0
 801b34c:	00000040 	andeq	r0, r0, r0, asr #32
 801b350:	00000020 	andeq	r0, r0, r0, lsr #32
 801b354:	00000060 	andeq	r0, r0, r0, rrx
 801b358:	00000020 	andeq	r0, r0, r0, lsr #32
 801b35c:	00000400 	andeq	r0, r0, r0, lsl #8
 801b360:	00000020 	andeq	r0, r0, r0, lsr #32
 801b364:	00000020 	andeq	r0, r0, r0, lsr #32
 801b368:	00000040 	andeq	r0, r0, r0, asr #32
 801b36c:	00000060 	andeq	r0, r0, r0, rrx
 801b370:	00000020 	andeq	r0, r0, r0, lsr #32
 801b374:	00000020 	andeq	r0, r0, r0, lsr #32
 801b378:	000000c0 	andeq	r0, r0, r0, asr #1

0801b37c <vtable for StoreDisplayUdf>:
	...
 801b384:	08014495 	stmdaeq	r1, {r0, r2, r4, r7, sl, lr}
 801b388:	080144e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, lr}
 801b38c:	080144bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, sl, lr}
 801b390:	08014499 	stmdaeq	r1, {r0, r3, r4, r7, sl, lr}

0801b394 <vtable for StoreDmxSend>:
	...
 801b39c:	08014501 	stmdaeq	r1, {r0, r8, sl, lr}
 801b3a0:	0801454d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, lr}
 801b3a4:	08014529 	stmdaeq	r1, {r0, r3, r5, r8, sl, lr}
 801b3a8:	08014505 	stmdaeq	r1, {r0, r2, r8, sl, lr}

0801b3ac <vtable for StoreNetwork>:
	...
 801b3b4:	0801456d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sl, lr}
 801b3b8:	08014655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, lr}
 801b3bc:	08014575 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sl, lr}
 801b3c0:	08014669 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, lr}
 801b3c4:	080145f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, lr}
 801b3c8:	080145c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, lr}
 801b3cc:	08014599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, lr}
 801b3d0:	08014621 	stmdaeq	r1, {r0, r5, r9, sl, lr}
 801b3d4:	08009dfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, pc}
 801b3d8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b3dc:	00000000 	andeq	r0, r0, r0
 801b3e0:	0801456f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, lr}
 801b3e4:	08014661 	stmdaeq	r1, {r0, r5, r6, r9, sl, lr}
 801b3e8:	08014619 	stmdaeq	r1, {r0, r3, r4, r9, sl, lr}
 801b3ec:	080145ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, lr}
 801b3f0:	080145c1 	stmdaeq	r1, {r0, r6, r7, r8, sl, lr}
 801b3f4:	0801464d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, lr}
 801b3f8:	08009e25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, ip, pc}

0801b3fc <vtable for StoreRemoteConfig>:
	...
 801b404:	080146a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, lr}
 801b408:	080146ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, lr}
 801b40c:	080146c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sl, lr}
 801b410:	080146a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, lr}
 801b414:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
 801b418:	76654465 	strbtvc	r4, [r5], -r5, ror #8
 801b41c:	3a656369 	bcc	99741c8 <__exidx_end+0x1958108>
 801b420:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
 801b424:	34325441 	ldrtcc	r5, [r2], #-1089	; 0xfffffbbf
 801b428:	20323343 	eorscs	r3, r2, r3, asr #6
 801b42c:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801b430:	53007832 	movwpl	r7, #2098	; 0x832
 801b434:	65726f74 	ldrbvs	r6, [r2, #-3956]!	; 0xfffff08c
 801b438:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801b43c:	203a6563 	eorscs	r6, sl, r3, ror #10
 801b440:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 801b444:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 801b448:	32544120 	subscc	r4, r4, #32, 2
 801b44c:	32334334 	eorscc	r4, r3, #52, 6	; 0xd0000000
 801b450:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801b454:	6f742068 	svcvs	0x00742068
 801b458:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801b45c:	62207525 	eorvs	r7, r0, #155189248	; 0x9400000
 801b460:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801b464:	75255b20 	strvc	r5, [r5, #-2848]!	; 0xfffff4e0
 801b468:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 801b46c:	0000000a 	andeq	r0, r0, sl

0801b470 <vtable for StoreE131>:
	...
 801b478:	0801488b 	stmdaeq	r1, {r0, r1, r3, r7, fp, lr}
 801b47c:	080148d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, fp, lr}
 801b480:	080148b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, lr}
 801b484:	0801488d 	stmdaeq	r1, {r0, r2, r3, r7, fp, lr}

0801b488 <vtable for StorePixelDmx>:
	...
 801b490:	080148f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, fp, lr}
 801b494:	08014a61 	stmdaeq	r1, {r0, r5, r6, r9, fp, lr}
 801b498:	080148fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, fp, lr}
 801b49c:	08014a75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, fp, lr}
 801b4a0:	08014a2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, fp, lr}
 801b4a4:	080149f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, fp, lr}
 801b4a8:	080149c1 	stmdaeq	r1, {r0, r6, r7, r8, fp, lr}
 801b4ac:	08014989 	stmdaeq	r1, {r0, r3, r7, r8, fp, lr}
 801b4b0:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 801b4b4:	08014921 	stmdaeq	r1, {r0, r5, r8, fp, lr}
 801b4b8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b4bc:	00000000 	andeq	r0, r0, r0
 801b4c0:	080148f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, fp, lr}
 801b4c4:	08014a6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, fp, lr}
 801b4c8:	08014a59 	stmdaeq	r1, {r0, r3, r4, r6, r9, fp, lr}
 801b4cc:	08014a25 	stmdaeq	r1, {r0, r2, r5, r9, fp, lr}
 801b4d0:	080149f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, fp, lr}
 801b4d4:	080149b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, fp, lr}
 801b4d8:	08014981 	stmdaeq	r1, {r0, r7, r8, fp, lr}
 801b4dc:	0801494d 	stmdaeq	r1, {r0, r2, r3, r6, r8, fp, lr}

0801b4e0 <vtable for StoreRDMDevice>:
	...
 801b4e8:	08014ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, lr}
 801b4ec:	08014b21 	stmdaeq	r1, {r0, r5, r8, r9, fp, lr}
 801b4f0:	08014ab9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, fp, lr}
 801b4f4:	08014b35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, fp, lr}
 801b4f8:	08014add 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, fp, lr}
 801b4fc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b500:	00000000 	andeq	r0, r0, r0
 801b504:	08014ab3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, fp, lr}
 801b508:	08014b2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, fp, lr}
 801b50c:	08014b19 	stmdaeq	r1, {r0, r3, r4, r8, r9, fp, lr}

0801b510 <DevicesParamsConst::ACTIVE_OUT>:
 801b510:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b514:	6f5f6576 	svcvs	0x005f6576
 801b518:	 	smlsdxvs	r0, r5, r4, r7

0801b51b <DevicesParamsConst::GAMMA_VALUE>:
 801b51b:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801b51f:	61765f61 	cmnvs	r6, r1, ror #30
 801b523:	0065756c 	rsbeq	r7, r5, ip, ror #10

0801b527 <DevicesParamsConst::SPI_SPEED_HZ>:
 801b527:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801b52b:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801b52f:	5f646565 	svcpl	0x00646565
 801b533:	 	strvc	r7, [r0], #-2664	; 0xfffff598

0801b536 <DevicesParamsConst::TEST_PATTERN>:
 801b536:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801b53a:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801b53e:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801b543 <DevicesParamsConst::GROUPING_COUNT>:
 801b543:	5f64656c 	svcpl	0x0064656c
 801b547:	756f7267 	strbvc	r7, [pc, #-615]!	; 801b2e8 <DisplayUdfParamsConst::INTENSITY+0xe>
 801b54b:	6f635f70 	svcvs	0x00635f70
 801b54f:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801b553 <DevicesParamsConst::GAMMA_CORRECTION>:
 801b553:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801b557:	6f635f61 	svcvs	0x00635f61
 801b55b:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 801b55f:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

0801b564 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801b564:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 801b568:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801b56c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801b570:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801b574:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

0801b576 <DevicesParamsConst::MAP>:
 801b576:	5f64656c 	svcpl	0x0064656c
 801b57a:	5f626772 	svcpl	0x00626772
 801b57e:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801b582:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801b586 <DevicesParamsConst::TYPE>:
 801b586:	5f64656c 	svcpl	0x0064656c
 801b58a:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801b58f <DevicesParamsConst::COUNT>:
 801b58f:	5f64656c 	svcpl	0x0064656c
 801b593:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801b597:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801b599 <DevicesParamsConst::LED_T0H>:
 801b599:	5f64656c 	svcpl	0x0064656c
 801b59d:	00683074 	rsbeq	r3, r8, r4, ror r0

0801b5a1 <DevicesParamsConst::LED_T1H>:
 801b5a1:	5f64656c 	svcpl	0x0064656c
 801b5a5:	00683174 	rsbeq	r3, r8, r4, ror r1

0801b5a9 <DevicesParamsConst::FILE_NAME>:
 801b5a9:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801b5ad:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801b5b1:	00747874 	rsbseq	r7, r4, r4, ror r8
 801b5b5:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801b5b9:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801b5bd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b5c1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b5c5:	002c2264 	eoreq	r2, ip, r4, ror #4
 801b5c9:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801b5cd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b5d1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b5d5:	0a64252e 	beq	9924a95 <__exidx_end+0x19089d5>
 801b5d9:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801b5dd:	0a232073 	beq	88e37b1 <__exidx_end+0x8c76f1>
	...

0801b5e2 <LightSetParamsConst::UNIVERSE_PORT>:
 801b5e2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b5e6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b5ea:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b5ee:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801b5f2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b5f6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b5fa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b5fe:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801b602:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b606:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b60a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b60e:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801b612:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b616:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b61a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b61e:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801b622 <LightSetParamsConst::START_UNI_PORT>:
 801b622:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b626:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b62a:	6f705f69 	svcvs	0x00705f69
 801b62e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b632:	00000000 	andeq	r0, r0, r0
 801b636:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b63a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b63e:	6f705f69 	svcvs	0x00705f69
 801b642:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 801b646:	00000000 	andeq	r0, r0, r0
 801b64a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b64e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b652:	6f705f69 	svcvs	0x00705f69
 801b656:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801b65a:	00000000 	andeq	r0, r0, r0
 801b65e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b662:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b666:	6f705f69 	svcvs	0x00705f69
 801b66a:	345f7472 	ldrbcc	r7, [pc], #-1138	; 801b672 <LightSetParamsConst::START_UNI_PORT+0x50>
 801b66e:	00000000 	andeq	r0, r0, r0
 801b672:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b676:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b67a:	6f705f69 	svcvs	0x00705f69
 801b67e:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 801b214 <NetworkParamsConst::FILE_NAME+0x6f>
 801b682:	00000000 	andeq	r0, r0, r0
 801b686:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b68a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b68e:	6f705f69 	svcvs	0x00705f69
 801b692:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 801b696:	00000000 	andeq	r0, r0, r0
 801b69a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b69e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b6a2:	6f705f69 	svcvs	0x00705f69
 801b6a6:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 801b6aa:	00000000 	andeq	r0, r0, r0
 801b6ae:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b6b2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b6b6:	6f705f69 	svcvs	0x00705f69
 801b6ba:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801b6be:	00000000 	andeq	r0, r0, r0
 801b6c2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b6c6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b6ca:	6f705f69 	svcvs	0x00705f69
 801b6ce:	395f7472 	ldmdbcc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801b6d2:	00000000 	andeq	r0, r0, r0
 801b6d6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b6da:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b6de:	6f705f69 	svcvs	0x00705f69
 801b6e2:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b6e6:	00000030 	andeq	r0, r0, r0, lsr r0
 801b6ea:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b6ee:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b6f2:	6f705f69 	svcvs	0x00705f69
 801b6f6:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b6fa:	00000031 	andeq	r0, r0, r1, lsr r0
 801b6fe:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b702:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b706:	6f705f69 	svcvs	0x00705f69
 801b70a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b70e:	00000032 	andeq	r0, r0, r2, lsr r0
 801b712:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b716:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b71a:	6f705f69 	svcvs	0x00705f69
 801b71e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b722:	00000033 	andeq	r0, r0, r3, lsr r0
 801b726:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b72a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b72e:	6f705f69 	svcvs	0x00705f69
 801b732:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b736:	00000034 	andeq	r0, r0, r4, lsr r0
 801b73a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b73e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b742:	6f705f69 	svcvs	0x00705f69
 801b746:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b74a:	00000035 	andeq	r0, r0, r5, lsr r0
 801b74e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b752:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b756:	6f705f69 	svcvs	0x00705f69
 801b75a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b75e:	00000036 	andeq	r0, r0, r6, lsr r0

0801b762 <LightSetParamsConst::MERGE_MODE_PORT>:
 801b762:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801b766:	6f6d5f65 	svcvs	0x006d5f65
 801b76a:	705f6564 	subsvc	r6, pc, r4, ror #10
 801b76e:	5f74726f 	svcpl	0x0074726f
 801b772:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801b776:	5f656772 	svcpl	0x00656772
 801b77a:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801b77e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b782:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801b786:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801b78a:	6f6d5f65 	svcvs	0x006d5f65
 801b78e:	705f6564 	subsvc	r6, pc, r4, ror #10
 801b792:	5f74726f 	svcpl	0x0074726f
 801b796:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 801b79a:	5f656772 	svcpl	0x00656772
 801b79e:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801b7a2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b7a6:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801b7aa <LightSetParamsConst::DMX_START_ADDRESS>:
 801b7aa:	5f786d64 	svcpl	0x00786d64
 801b7ae:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b7b2:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801b7b6:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801b7ba:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

0801b7bc <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 801b7bc:	61736964 	cmnvs	r3, r4, ror #18
 801b7c0:	5f656c62 	svcpl	0x00656c62
 801b7c4:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801b7c8:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801b7cc:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801b267 <pArray+0x3b>
 801b7d0:	 	smcvs	24580	; 0x6004

0801b7d2 <LightSetParamsConst::FAILSAFE>:
 801b7d2:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801b7d6:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

0801b7db <LightSetParamsConst::UNIVERSE>:
 801b7db:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b7df:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801b7e4 <LightSetParamsConst::DIRECTION>:
 801b7e4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801b7e8:	6f697463 	svcvs	0x00697463
 801b7ec:	6f705f6e 	svcvs	0x00705f6e
 801b7f0:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801b7f4:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801b7f8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801b7fc:	5f6e6f69 	svcpl	0x006e6f69
 801b800:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801b804:	0000625f 	andeq	r6, r0, pc, asr r2
 801b808:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801b80c:	6f697463 	svcvs	0x00697463
 801b810:	6f705f6e 	svcvs	0x00705f6e
 801b814:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801b818:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801b81c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801b820:	5f6e6f69 	svcpl	0x006e6f69
 801b824:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801b828:	0000645f 	andeq	r6, r0, pc, asr r4
 801b82c:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801b830:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801b834:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801b838:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801b83c:	31485300 	mrscc	r5, (UNDEF: 120)
 801b840:	00363031 	eorseq	r3, r6, r1, lsr r0
 801b844:	31445353 	cmpcc	r4, r3, asr r3
 801b848:	00363033 	eorseq	r3, r6, r3, lsr r0
 801b84c:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801b850:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801b854:	000a2964 	andeq	r2, sl, r4, ror #18
 801b858:	aaeeaa40 	bge	7bc6160 <__stack_size+0x7bc2160>
 801b85c:	000000ee 	andeq	r0, r0, lr, ror #1

0801b860 <_OledFont8x6>:
 801b860:	00000040 	andeq	r0, r0, r0, asr #32
 801b864:	40000000 	andmi	r0, r0, r0
 801b868:	005f0000 	subseq	r0, pc, r0
 801b86c:	00400000 	subeq	r0, r0, r0
 801b870:	00070007 	andeq	r0, r7, r7
 801b874:	7f144000 	svcvc	0x00144000
 801b878:	00147f14 	andseq	r7, r4, r4, lsl pc
 801b87c:	7f2a2440 	svcvc	0x002a2440
 801b880:	4000122a 	andmi	r1, r0, sl, lsr #4
 801b884:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801b888:	36400062 	strbcc	r0, [r0], -r2, rrx
 801b88c:	50205649 	eorpl	r5, r0, r9, asr #12
 801b890:	08004000 	stmdaeq	r0, {lr}
 801b894:	00000307 	andeq	r0, r0, r7, lsl #6
 801b898:	221c0040 	andscs	r0, ip, #64	; 0x40
 801b89c:	40000041 	andmi	r0, r0, r1, asr #32
 801b8a0:	1c224100 	stfnes	f4, [r2], #-0
 801b8a4:	2a400000 	bcs	901b8ac <__exidx_end+0xfff7ec>
 801b8a8:	2a1c7f1c 	bcs	873b520 <__exidx_end+0x71f460>
 801b8ac:	08084000 	stmdaeq	r8, {lr}
 801b8b0:	0008083e 	andeq	r0, r8, lr, lsr r8
 801b8b4:	70800040 	addvc	r0, r0, r0, asr #32
 801b8b8:	40000030 	andmi	r0, r0, r0, lsr r0
 801b8bc:	08080808 	stmdaeq	r8, {r3, fp}
 801b8c0:	00400008 	subeq	r0, r0, r8
 801b8c4:	00606000 	rsbeq	r6, r0, r0
 801b8c8:	10204000 	eorne	r4, r0, r0
 801b8cc:	00020408 	andeq	r0, r2, r8, lsl #8
 801b8d0:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801b8d4:	40003e45 	andmi	r3, r0, r5, asr #28
 801b8d8:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801b8dc:	72400000 	subvc	r0, r0, #0
 801b8e0:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801b8e4:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801b8e8:	00334d49 	eorseq	r4, r3, r9, asr #26
 801b8ec:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801b8f0:	4000107f 	andmi	r1, r0, pc, ror r0
 801b8f4:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801b8f8:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801b8fc:	3149494a 	cmpcc	r9, sl, asr #18
 801b900:	21414000 	mrscs	r4, (UNDEF: 65)
 801b904:	00070911 	andeq	r0, r7, r1, lsl r9
 801b908:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801b90c:	40003649 	andmi	r3, r0, r9, asr #12
 801b910:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801b914:	0040001e 	subeq	r0, r0, lr, lsl r0
 801b918:	00001400 	andeq	r1, r0, r0, lsl #8
 801b91c:	40004000 	andmi	r4, r0, r0
 801b920:	00000034 	andeq	r0, r0, r4, lsr r0
 801b924:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801b928:	40004122 	andmi	r4, r0, r2, lsr #2
 801b92c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801b930:	00400014 	subeq	r0, r0, r4, lsl r0
 801b934:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801b938:	01024000 	mrseq	r4, (UNDEF: 2)
 801b93c:	00060959 	andeq	r0, r6, r9, asr r9
 801b940:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801b944:	40004e59 	andmi	r4, r0, r9, asr lr
 801b948:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801b94c:	7f40007c 	svcvc	0x0040007c
 801b950:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801b954:	413e4000 	teqmi	lr, r0
 801b958:	00224141 	eoreq	r4, r2, r1, asr #2
 801b95c:	41417f40 	cmpmi	r1, r0, asr #30
 801b960:	40003e41 	andmi	r3, r0, r1, asr #28
 801b964:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801b968:	7f400041 	svcvc	0x00400041
 801b96c:	01090909 	tsteq	r9, r9, lsl #18
 801b970:	413e4000 	teqmi	lr, r0
 801b974:	00735141 	rsbseq	r5, r3, r1, asr #2
 801b978:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801b97c:	40007f08 	andmi	r7, r0, r8, lsl #30
 801b980:	417f4100 	cmnmi	pc, r0, lsl #2
 801b984:	20400000 	subcs	r0, r0, r0
 801b988:	013f4140 	teqeq	pc, r0, asr #2
 801b98c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 801b990:	00412214 	subeq	r2, r1, r4, lsl r2
 801b994:	40407f40 	submi	r7, r0, r0, asr #30
 801b998:	40004040 	andmi	r4, r0, r0, asr #32
 801b99c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 801b9a0:	7f40007f 	svcvc	0x0040007f
 801b9a4:	7f100804 	svcvc	0x00100804
 801b9a8:	413e4000 	teqmi	lr, r0
 801b9ac:	003e4141 	eorseq	r4, lr, r1, asr #2
 801b9b0:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801b9b4:	40000609 	andmi	r0, r0, r9, lsl #12
 801b9b8:	2151413e 	cmpcs	r1, lr, lsr r1
 801b9bc:	7f40005e 	svcvc	0x0040005e
 801b9c0:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801b9c4:	49264000 	stmdbmi	r6!, {lr}
 801b9c8:	00324949 	eorseq	r4, r2, r9, asr #18
 801b9cc:	7f010340 	svcvc	0x00010340
 801b9d0:	40000301 	andmi	r0, r0, r1, lsl #6
 801b9d4:	4040403f 	submi	r4, r0, pc, lsr r0
 801b9d8:	1f40003f 	svcne	0x0040003f
 801b9dc:	1f204020 	svcne	0x00204020
 801b9e0:	403f4000 	eorsmi	r4, pc, r0
 801b9e4:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801b9e8:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801b9ec:	40006314 	andmi	r6, r0, r4, lsl r3
 801b9f0:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 801b9f4:	61400003 	cmpvs	r0, r3
 801b9f8:	434d4959 	movtmi	r4, #55641	; 0xd959
 801b9fc:	7f004000 	svcvc	0x00004000
 801ba00:	00414141 	subeq	r4, r1, r1, asr #2
 801ba04:	08040240 	stmdaeq	r4, {r6, r9}
 801ba08:	40002010 	andmi	r2, r0, r0, lsl r0
 801ba0c:	41414100 	mrsmi	r4, (UNDEF: 81)
 801ba10:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801ba14:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801ba18:	40404000 	submi	r4, r0, r0
 801ba1c:	00404040 	subeq	r4, r0, r0, asr #32
 801ba20:	07030040 	streq	r0, [r3, -r0, asr #32]
 801ba24:	40000008 	andmi	r0, r0, r8
 801ba28:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801ba2c:	7f400040 	svcvc	0x00400040
 801ba30:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801ba34:	44384000 	ldrtmi	r4, [r8], #-0
 801ba38:	00284444 	eoreq	r4, r8, r4, asr #8
 801ba3c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801ba40:	40007f28 	andmi	r7, r0, r8, lsr #30
 801ba44:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801ba48:	00400018 	subeq	r0, r0, r8, lsl r0
 801ba4c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801ba50:	a4184000 	ldrge	r4, [r8], #-0
 801ba54:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801ba58:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 801ba5c:	40007804 	andmi	r7, r0, r4, lsl #16
 801ba60:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801ba64:	20400000 	subcs	r0, r0, r0
 801ba68:	003d4040 	eorseq	r4, sp, r0, asr #32
 801ba6c:	107f4000 	rsbsne	r4, pc, r0
 801ba70:	00004428 	andeq	r4, r0, r8, lsr #8
 801ba74:	7f410040 	svcvc	0x00410040
 801ba78:	40000040 	andmi	r0, r0, r0, asr #32
 801ba7c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 801ba80:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801ba84:	78040408 	stmdavc	r4, {r3, sl}
 801ba88:	44384000 	ldrtmi	r4, [r8], #-0
 801ba8c:	00384444 	eorseq	r4, r8, r4, asr #8
 801ba90:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801ba94:	40001824 	andmi	r1, r0, r4, lsr #16
 801ba98:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801ba9c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801baa0:	08040408 	stmdaeq	r4, {r3, sl}
 801baa4:	54484000 	strbpl	r4, [r8], #-0
 801baa8:	00245454 	eoreq	r5, r4, r4, asr r4
 801baac:	3f040440 	svccc	0x00040440
 801bab0:	40002444 	andmi	r2, r0, r4, asr #8
 801bab4:	2040403c 	subcs	r4, r0, ip, lsr r0
 801bab8:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801babc:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 801bac0:	403c4000 	eorsmi	r4, ip, r0
 801bac4:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801bac8:	10284440 	eorne	r4, r8, r0, asr #8
 801bacc:	40004428 	andmi	r4, r0, r8, lsr #8
 801bad0:	9090904c 	addsls	r9, r0, ip, asr #32
 801bad4:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801bad8:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801badc:	08004000 	stmdaeq	r0, {lr}
 801bae0:	00004136 	andeq	r4, r0, r6, lsr r1
 801bae4:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801bae8:	40000000 	andmi	r0, r0, r0
 801baec:	08364100 	ldmdaeq	r6!, {r8, lr}
 801baf0:	02400000 	subeq	r0, r0, #0
 801baf4:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801baf8:	263c4000 	ldrtcs	r4, [ip], -r0
 801bafc:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801bb00 <oled_128x32_init>:
 801bb00:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801bb04:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801bb08:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801bb0c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801bb10:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801bb14:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801bb18 <oled_128x64_init>:
 801bb18:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801bb1c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801bb20:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801bb24:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801bb28:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801bb2c:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801bb30 <vtable for Ssd1306>:
	...
 801bb38:	08015255 	stmdaeq	r1, {r0, r2, r4, r6, r9, ip, lr}
 801bb3c:	08015281 	stmdaeq	r1, {r0, r7, r9, ip, lr}
 801bb40:	08015585 	stmdaeq	r1, {r0, r2, r7, r8, sl, ip, lr}
 801bb44:	0801550d 	stmdaeq	r1, {r0, r2, r3, r8, sl, ip, lr}
 801bb48:	080153d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, ip, lr}
 801bb4c:	0801528d 	stmdaeq	r1, {r0, r2, r3, r7, r9, ip, lr}
 801bb50:	080152b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, lr}
 801bb54:	080153ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, lr}
 801bb58:	08015365 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, ip, lr}
 801bb5c:	08015257 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, ip, lr}
 801bb60:	08015415 	stmdaeq	r1, {r0, r2, r4, sl, ip, lr}
 801bb64:	08015421 	stmdaeq	r1, {r0, r5, sl, ip, lr}
 801bb68:	0801543b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, ip, lr}
 801bb6c:	08015259 	stmdaeq	r1, {r0, r3, r4, r6, r9, ip, lr}
 801bb70:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801bb74:	5b1b006d 	blpl	86dbd30 <__exidx_end+0x6bfc70>
 801bb78:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 801bb7c:	31335b1b 	teqcc	r3, fp, lsl fp
 801bb80:	5b1b006d 	blpl	86dbd3c <__exidx_end+0x6bfc7c>
 801bb84:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801bb88:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 801bb8c:	5b1b006d 	blpl	86dbd48 <__exidx_end+0x6bfc88>
 801bb90:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801bb94:	6d726946 			; <UNDEFINED> instruction: 0x6d726946
 801bb98:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801bb9c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801bba0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801bba4:	2f637273 	svccs	0x00637273
 801bba8:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
 801bbac:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801bbb0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801bbb4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801bbb8:	00707063 	rsbseq	r7, r0, r3, rrx
 801bbbc:	72655670 	rsbvc	r5, r5, #112, 12	; 0x7000000
 801bbc0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801bbc4:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801bbc8:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 801bbcc:	00727470 	rsbseq	r7, r2, r0, ror r4
 801bbd0:	74614470 	strbtvc	r4, [r1], #-1136	; 0xfffffb90
 801bbd4:	3d212065 	stccc	0, cr2, [r1, #-404]!	; 0xfffffe6c
 801bbd8:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801bbdc:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801bbe0:	69547000 	ldmdbvs	r4, {ip, sp, lr}^
 801bbe4:	2120656d 			; <UNDEFINED> instruction: 0x2120656d
 801bbe8:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801bbec:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801bbf0:	5f730072 	svcpl	0x00730072
 801bbf4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
 801bbf8:	3d3d2073 	ldccc	0, cr2, [sp, #-460]!	; 0xfffffe34
 801bbfc:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801bc00:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801bc04:	25565b00 	ldrbcs	r5, [r6, #-2816]	; 0xfffff500
 801bc08:	5d732a2e 	vldmdbpl	r3!, {s5-s50}
 801bc0c:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801bc10:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 801bc14:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 801bc18:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 801bc1c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801bc20:	20746120 	rsbscs	r6, r4, r0, lsr #2
 801bc24:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801bc28:	64654c00 	strbtvs	r4, [r5], #-3072	; 0xfffff400
 801bc2c:	6e696c42 	cdpvs	12, 6, cr6, cr9, cr2, {2}
 801bc30:	7273006b 	rsbsvc	r0, r3, #107	; 0x6b
 801bc34:	656c2f63 	strbvs	r2, [ip, #-3939]!	; 0xfffff09d
 801bc38:	696c6264 	stmdbvs	ip!, {r2, r5, r6, r9, sp, lr}^
 801bc3c:	632e6b6e 			; <UNDEFINED> instruction: 0x632e6b6e
 801bc40:	53007070 	movwpl	r7, #112	; 0x70
 801bc44:	6f4d7465 	svcvs	0x004d7465
 801bc48:	25006564 	strcs	r6, [r0, #-1380]	; 0xfffffa9c
 801bc4c:	20292873 	eorcs	r2, r9, r3, ror r8
 801bc50:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801bc54:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801bc58:	3a692520 	bcc	9a650e0 <__exidx_end+0x1a49020>
 801bc5c:	646f4d20 	strbtvs	r4, [pc], #-3360	; 801bc64 <vtable for Ssd1306+0x134>
 801bc60:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 801bc64:	6148000a 	cmpvs	r8, sl
 801bc68:	61776472 	cmnvs	r7, r2, ror r4
 801bc6c:	73006572 	movwvc	r6, #1394	; 0x572
 801bc70:	672f6372 			; <UNDEFINED> instruction: 0x672f6372
 801bc74:	2f323364 	svccs	0x00323364
 801bc78:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
 801bc7c:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801bc80:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801bc84:	5f4b4300 	svcpl	0x004b4300
 801bc88:	3d535953 	vldrcc.16	s11, [r3, #-166]	; 0xffffff5a	; <UNPREDICTABLE>
 801bc8c:	430a7525 	movwmi	r7, #42277	; 0xa525
 801bc90:	48415f4b 	stmdami	r1, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
 801bc94:	75253d42 	strvc	r3, [r5, #-3394]!	; 0xfffff2be
 801bc98:	5f4b430a 	svcpl	0x004b430a
 801bc9c:	31425041 	cmpcc	r2, r1, asr #32
 801bca0:	0a75253d 	beq	9d6519c <__exidx_end+0x1d490dc>
 801bca4:	415f4b43 	cmpmi	pc, r3, asr #22
 801bca8:	3d324250 	lfmcc	f4, 4, [r2, #-320]!	; 0xfffffec0
 801bcac:	000a7525 	andeq	r7, sl, r5, lsr #10
 801bcb0:	5359536e 	cmppl	r9, #-1207959551	; 0xb8000001
 801bcb4:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801bcb8:	5f55434d 	svcpl	0x0055434d
 801bcbc:	434f4c43 	movtmi	r4, #64579	; 0xfc43
 801bcc0:	52465f4b 	subpl	r5, r6, #300	; 0x12c
 801bcc4:	6e005145 	adfvssm	f5, f0, f5
 801bcc8:	31425041 	cmpcc	r2, r1, asr #32
 801bccc:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801bcd0:	31425041 	cmpcc	r2, r1, asr #32
 801bcd4:	4f4c435f 	svcmi	0x004c435f
 801bcd8:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
 801bcdc:	00514552 	subseq	r4, r1, r2, asr r5
 801bce0:	4250416e 	subsmi	r4, r0, #-2147483621	; 0x8000001b
 801bce4:	3d3d2032 	ldccc	0, cr2, [sp, #-200]!	; 0xffffff38
 801bce8:	42504120 	subsmi	r4, r0, #32, 2
 801bcec:	4c435f32 	mcrrmi	15, 3, r5, r3, cr2
 801bcf0:	5f4b434f 	svcpl	0x004b434f
 801bcf4:	51455246 	cmppl	r5, r6, asr #4
 801bcf8:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801bcfc:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801bd00:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801bd04:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801bd08:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 801bd0c:	75253a70 	strvc	r3, [r5, #-2672]!	; 0xfffff590
 801bd10:	200a000a 	andcs	r0, sl, sl
 801bd14:	20202020 	eorcs	r2, r0, r0, lsr #32
 801bd18:	31202030 			; <UNDEFINED> instruction: 0x31202030
 801bd1c:	20322020 	eorscs	r2, r2, r0, lsr #32
 801bd20:	20203320 	eorcs	r3, r0, r0, lsr #6
 801bd24:	35202034 	strcc	r2, [r0, #-52]!	; 0xffffffcc
 801bd28:	20362020 	eorscs	r2, r6, r0, lsr #32
 801bd2c:	20203720 	eorcs	r3, r0, r0, lsr #14
 801bd30:	39202038 	stmdbcc	r0!, {r3, r4, r5, sp}
 801bd34:	20612020 	rsbcs	r2, r1, r0, lsr #32
 801bd38:	20206220 	eorcs	r6, r0, r0, lsr #4
 801bd3c:	64202063 	strtvs	r2, [r0], #-99	; 0xffffff9d
 801bd40:	20652020 	rsbcs	r2, r5, r0, lsr #32
 801bd44:	25006620 	strcs	r6, [r0, #-1568]	; 0xfffff9e0
 801bd48:	3a783230 	bcc	9e28610 <__exidx_end+0x1e0c550>
 801bd4c:	20200020 	eorcs	r0, r0, r0, lsr #32
 801bd50:	30250020 	eorcc	r0, r5, r0, lsr #32
 801bd54:	00207832 	eoreq	r7, r0, r2, lsr r8
 801bd58:	00202d2d 	eoreq	r2, r0, sp, lsr #26
 801bd5c:	6f6c4270 	svcvs	0x006c4270
 801bd60:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801bd64:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801bd68:	616d3e2d 	cmnvs	sp, sp, lsr #28
 801bd6c:	20636967 	rsbcs	r6, r3, r7, ror #18
 801bd70:	42203d3d 	eormi	r3, r0, #3904	; 0xf40
 801bd74:	4b434f4c 	blmi	90efaac <__exidx_end+0x10d39ec>
 801bd78:	47414d5f 	smlsldmi	r4, r1, pc, sp	; <UNPREDICTABLE>
 801bd7c:	73004349 	movwvc	r4, #841	; 0x349
 801bd80:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 801bbc0 <vtable for Ssd1306+0x90>
 801bd84:	6f6c6c61 	svcvs	0x006c6c61
 801bd88:	00632e63 	rsbeq	r2, r3, r3, ror #28
 801bd8c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801bd90:	203a636f 	eorscs	r6, sl, pc, ror #6
 801bd94:	000a7525 	andeq	r7, sl, r5, lsr #10
 801bd98:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801bd9c:	3e2d7265 	cdpcc	2, 2, cr7, cr13, cr5, {3}
 801bda0:	6967616d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 801bda4:	3d3d2063 	ldccc	0, cr2, [sp, #-396]!	; 0xfffffe74
 801bda8:	4f4c4220 	svcmi	0x004c4220
 801bdac:	4d5f4b43 	vldrmi	d20, [pc, #-268]	; 801bca8 <vtable for Ssd1306+0x178>
 801bdb0:	43494741 	movtmi	r4, #38721	; 0x9741
 801bdb4:	75282800 	strvc	r2, [r8, #-2048]!	; 0xfffff800
 801bdb8:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 801bdbc:	2964656e 	stmdbcs	r4!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 801bdc0:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801bdc4:	26207265 	strtcs	r7, [r0], -r5, ror #4
 801bdc8:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 801bdcc:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 801bdd0:	33296465 			; <UNDEFINED> instruction: 0x33296465
 801bdd4:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 801bdd8:	28003020 	stmdacs	r0, {r5, ip, sp}
 801bddc:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 801bde0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 801bde4:	656e2964 	strbvs	r2, [lr, #-2404]!	; 0xfffff69c
 801bde8:	26207478 			; <UNDEFINED> instruction: 0x26207478
 801bdec:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 801bdf0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 801bdf4:	33296465 			; <UNDEFINED> instruction: 0x33296465
 801bdf8:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 801bdfc:	6d003020 	stcvs	0, cr3, [r0, #-128]	; 0xffffff80
 801be00:	6f6c6c61 	svcvs	0x006c6c61
 801be04:	6e203a63 	vnmulvs.f32	s6, s0, s7
 801be08:	20747865 	rsbscs	r7, r4, r5, ror #16
 801be0c:	6c62203e 	stclvs	0, cr2, [r2], #-248	; 0xffffff08
 801be10:	5f6b636f 	svcpl	0x006b636f
 801be14:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 801be18:	6d000a74 	vstrvs	s0, [r0, #-464]	; 0xfffffe30
 801be1c:	6f6c6c61 	svcvs	0x006c6c61
 801be20:	70203a63 	eorvc	r3, r0, r3, ror #20
 801be24:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 801be28:	6165486b 	cmnvs	r5, fp, ror #16
 801be2c:	3d726564 	cfldr64cc	mvdx6, [r2, #-400]!	; 0xfffffe70
 801be30:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801be34:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 801be38:	2c64253d 	cfstr64cs	mvdx2, [r4], #-244	; 0xffffff0c
 801be3c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801be40:	70253d61 	eorvc	r3, r5, r1, ror #26
 801be44:	2828000a 	stmdacs	r8!, {r1, r3}
 801be48:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 801be4c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 801be50:	61656829 	cmnvs	r5, r9, lsr #16
 801be54:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	; 0xfffffe70
 801be58:	7461643e 	strbtvc	r6, [r1], #-1086	; 0xfffffbc2
 801be5c:	20262061 	eorcs	r2, r6, r1, rrx
 801be60:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 801be64:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 801be68:	29332964 	ldmdbcs	r3!, {r2, r5, r6, r8, fp, sp}
 801be6c:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801be70:	72660030 	rsbvc	r0, r6, #48	; 0x30
 801be74:	203a6565 	eorscs	r6, sl, r5, ror #10
 801be78:	6f6c4270 	svcvs	0x006c4270
 801be7c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801be80:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801be84:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
 801be88:	70202c70 	eorvc	r2, r0, r0, ror ip
 801be8c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 801be90:	203d206b 	eorscs	r2, sp, fp, rrx
 801be94:	000a7025 	andeq	r7, sl, r5, lsr #32

0801be98 <__func__.2>:
 801be98:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
	...

0801be9d <__func__.3>:
 801be9d:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801bea1:	 	svcne	0x0000636f

0801bea4 <days_of_month>:
 801bea4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801bea8:	0000001c 	andeq	r0, r0, ip, lsl r0
 801beac:	0000001f 	andeq	r0, r0, pc, lsl r0
 801beb0:	0000001e 	andeq	r0, r0, lr, lsl r0
 801beb4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801beb8:	0000001e 	andeq	r0, r0, lr, lsl r0
 801bebc:	0000001f 	andeq	r0, r0, pc, lsl r0
 801bec0:	0000001f 	andeq	r0, r0, pc, lsl r0
 801bec4:	0000001e 	andeq	r0, r0, lr, lsl r0
 801bec8:	0000001f 	andeq	r0, r0, pc, lsl r0
 801becc:	0000001e 	andeq	r0, r0, lr, lsl r0
 801bed0:	0000001f 	andeq	r0, r0, pc, lsl r0
 801bed4:	21207674 			; <UNDEFINED> instruction: 0x21207674
 801bed8:	0030203d 	eorseq	r2, r0, sp, lsr r0
 801bedc:	2f637273 	svccs	0x00637273
 801bee0:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 801bee4:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
 801bee8:	00632e65 	rsbeq	r2, r3, r5, ror #28

0801beec <__func__.0>:
 801beec:	74746573 	ldrbtvc	r6, [r4], #-1395	; 0xfffffa8d
 801bef0:	6f656d69 	svcvs	0x00656d69
 801bef4:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
	...

0801bef9 <__func__.1>:
 801bef9:	74746567 	ldrbtvc	r6, [r4], #-1383	; 0xfffffa99
 801befd:	6f656d69 	svcvs	0x00656d69
 801bf01:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
 801bf05:	70675f00 	rsbvc	r5, r7, r0, lsl #30
 801bf09:	695f6f69 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 801bf0d:	0074696e 	rsbseq	r6, r4, lr, ror #18
 801bf11:	2f637273 	svccs	0x00637273
 801bf15:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 801bf19:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
 801bf1d:	70632e74 	rsbvc	r2, r3, r4, ror lr
 801bf21:	725f0070 	subsvc	r0, pc, #112	; 0x70
 801bf25:	705f7563 	subsvc	r7, pc, r3, ror #10
 801bf29:	70697265 	rsbvc	r7, r9, r5, ror #4
 801bf2d:	6c635f68 	stclvs	15, cr5, [r3], #-416	; 0xfffffe60
 801bf31:	5f6b636f 	svcpl	0x006b636f
 801bf35:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801bf39:	4d00656c 	cfstr32mi	mvfx6, [r0, #-432]	; 0xfffffe50
 801bf3d:	435f5543 	cmpmi	pc, #281018368	; 0x10c00000
 801bf41:	4b434f4c 	blmi	90efc79 <__exidx_end+0x10d3bb9>
 801bf45:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
 801bf49:	3d3d2051 	ldccc	0, cr2, [sp, #-324]!	; 0xfffffebc
 801bf4d:	73795320 	cmnvc	r9, #32, 6	; 0x80000000
 801bf51:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 801bf55:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 801bf59:	6b636f6c 	blvs	98f7d11 <__exidx_end+0x18dbc51>
 801bf5d:	65647500 	strbvs	r7, [r4, #-1280]!	; 0xfffffb00
 801bf61:	5f79616c 	svcpl	0x0079616c
 801bf65:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801bf69:	63727300 	cmnvs	r2, #0, 6
 801bf6d:	6564752f 	strbvs	r7, [r4, #-1327]!	; 0xfffffad1
 801bf71:	2e79616c 	rpwcsez	f6, f1, #4.0
 801bf75:	00707063 	rsbseq	r7, r0, r3, rrx
 801bf79:	43435553 	movtmi	r5, #13651	; 0x3553
 801bf7d:	45005345 	strmi	r5, [r0, #-837]	; 0xfffffcbb
 801bf81:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801bf85:	616d6500 	cmnvs	sp, r0, lsl #10
 801bf89:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 801bf8d:	00747261 	rsbseq	r7, r4, r1, ror #4
 801bf91:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801bf95:	652f6563 	strvs	r6, [pc, #-1379]!	; 801ba3a <_OledFont8x6+0x1da>
 801bf99:	2f63616d 	svccs	0x0063616d
 801bf9d:	63616d65 	cmnvs	r1, #6464	; 0x1940
 801bfa1:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801bfa5:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801bfa9:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801bfad:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801bfb1:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801bfb5:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 801bfb9:	44000a73 	strmi	r0, [r0], #-2675	; 0xfffff58d
 801bfbd:	38333850 	ldmdacc	r3!, {r4, r6, fp, ip, sp}
 801bfc1:	25003834 	strcs	r3, [r0, #-2100]	; 0xfffff7cc
 801bfc5:	20292873 	eorcs	r2, r9, r3, ror r8
 801bfc9:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801bfcd:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801bfd1:	3a692520 	bcc	9a65459 <__exidx_end+0x1a49399>
 801bfd5:	454e4520 	strbmi	r4, [lr, #-1312]	; 0xfffffae0
 801bfd9:	58525f54 	ldmdapl	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
 801bfdd:	5f465542 	svcpl	0x00465542
 801bfe1:	3d4d554e 	cfstr64cc	mvdx5, [sp, #-312]	; 0xfffffec8
 801bfe5:	202c7525 	eorcs	r7, ip, r5, lsr #10
 801bfe9:	54454e45 	strbpl	r4, [r5], #-3653	; 0xfffff1bb
 801bfed:	4258545f 	subsmi	r5, r8, #1593835520	; 0x5f000000
 801bff1:	4e5f4655 	mrcmi	6, 2, r4, cr15, cr5, {2}
 801bff5:	253d4d55 	ldrcs	r4, [sp, #-3413]!	; 0xfffff2ab
 801bff9:	65000a75 	strvs	r0, [r0, #-2677]	; 0xfffff58b
 801bffd:	5f74656e 	svcpl	0x0074656e
 801c001:	6f697067 	svcvs	0x00697067
 801c005:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 801c009:	00676966 	rsbeq	r6, r7, r6, ror #18
 801c00d:	74656e65 	strbtvc	r6, [r5], #-3685	; 0xfffff19b
 801c011:	63616d5f 	cmnvs	r1, #6080	; 0x17c0
 801c015:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 801c019:	00676966 	rsbeq	r6, r7, r6, ror #18
 801c01d:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801c021:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 801c025:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 801c029:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 801c02d:	6e65203a 	mcrvs	0, 3, r2, cr5, cr10, {1}
 801c031:	695f7465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801c035:	5f74696e 	svcpl	0x0074696e
 801c039:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 801c03d:	253d7375 	ldrcs	r7, [sp, #-885]!	; 0xfffffc8b
 801c041:	42000a75 	andmi	r0, r0, #479232	; 0x75000
 801c045:	203a5243 	eorscs	r5, sl, r3, asr #4
 801c049:	78342e25 	ldmdavc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 801c04d:	0a732520 	beq	9ce54d5 <__exidx_end+0x1cc9415>
 801c051:	52534200 	subspl	r4, r3, #0, 4
 801c055:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801c059:	25207834 	strcs	r7, [r0, #-2100]!	; 0xfffff7cc
 801c05d:	73000a73 	movwvc	r0, #2675	; 0xa73
 801c061:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 801bea0 <__func__.3+0x3>
 801c065:	615f6361 	cmpvs	pc, r1, ror #6
 801c069:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801c06d:	632e7373 			; <UNDEFINED> instruction: 0x632e7373
 801c071:	6d007070 	stcvs	0, cr7, [r0, #-448]	; 0xfffffe40
 801c075:	615f6361 	cmpvs	pc, r1, ror #6
 801c079:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801c07d:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
 801c081:	25007465 	strcs	r7, [r0, #-1125]	; 0xfffffb9b
 801c085:	20292873 	eorcs	r2, r9, r3, ror r8
 801c089:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801c08d:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801c091:	3a692520 	bcc	9a65519 <__exidx_end+0x1a49459>
 801c095:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
 801c099:	30253a78 	eorcc	r3, r5, r8, ror sl
 801c09d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801c0a1:	3a783230 	bcc	9e28969 <__exidx_end+0x1e0c8a9>
 801c0a5:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801c0a9:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
 801c0ad:	30253a78 	eorcc	r3, r5, r8, ror sl
 801c0b1:	000a7832 	andeq	r7, sl, r2, lsr r8
 801c0b5:	Address 0x000000000801c0b5 is out of bounds.


Disassembly of section .ARM:

0801c0b8 <__exidx_start>:
 801c0b8:	7ffee470 	svcvc	0x00fee470
 801c0bc:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801c0c0 <.ARM.attributes>:
 801c0c0:	00003441 	andeq	r3, r0, r1, asr #8
 801c0c4:	61656100 	cmnvs	r5, r0, lsl #2
 801c0c8:	01006962 	tsteq	r0, r2, ror #18
 801c0cc:	0000002a 	andeq	r0, r0, sl, lsr #32
 801c0d0:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 801c0d4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801c0d8:	0600344d 	streq	r3, [r0], -sp, asr #8
 801c0dc:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 801c0e0:	12060a02 	andne	r0, r6, #8192	; 0x2000
 801c0e4:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 801c0e8:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 801c0ec:	1b011a01 	blne	80628f8 <__exidx_end+0x46838>
 801c0f0:	22011c01 	andcs	r1, r1, #256	; 0x100
 801c0f4:	Address 0x000000000801c0f4 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	1000a000 	andne	sl, r0, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	0bebc200 	bleq	1faf08fc <_sp+0xfae08fc>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <E131Bridge::s_pThis>:
200006cc:	00000000 	andeq	r0, r0, r0

200006d0 <s_ReceivingMask>:
200006d0:	00000000 	andeq	r0, r0, r0

200006d4 <s_nPortsMax>:
200006d4:	00000000 	andeq	r0, r0, r0

200006d8 <LLRPDevice::s_nIpAddressFrom>:
200006d8:	00000000 	andeq	r0, r0, r0

200006dc <LLRPDevice::m_nIpAddresLLRPRequest>:
200006dc:	00000000 	andeq	r0, r0, r0

200006e0 <LLRPDevice::m_nIpAddressLLRPResponse>:
200006e0:	00000000 	andeq	r0, r0, r0

200006e4 <LLRPDevice::m_pLLRP>:
200006e4:	00000000 	andeq	r0, r0, r0

200006e8 <RDMNetDevice::s_RdmCommand>:
	...

200007e9 <RDMNetDevice::s_Cid>:
	...

200007fc <RDMSensors::s_pThis>:
200007fc:	00000000 	andeq	r0, r0, r0

20000800 <RDMSubDevices::s_pThis>:
20000800:	00000000 	andeq	r0, r0, r0

20000804 <RDMDeviceResponder::s_pThis>:
20000804:	00000000 	andeq	r0, r0, r0

20000808 <RDMIdentify::m_bIsEnabled>:
	...

20000809 <RDMIdentify::m_nMode>:
20000809:	 	andeq	r0, r0, r0

2000080c <RDMIdentify::s_pThis>:
2000080c:	00000000 	andeq	r0, r0, r0

20000810 <DmxSend::s_nStarted>:
20000810:	00000000 	andeq	r0, r0, r0

20000814 <s_RxBuffer>:
	...

20000c34 <s_TxBuffer>:
	...

2000103c <sv_PortState>:
	...

20001044 <sv_nUartsSending>:
20001044:	00000000 	andeq	r0, r0, r0

20001048 <Dmx::s_pThis>:
20001048:	00000000 	andeq	r0, r0, r0

2000104c <DmxConfigUdp::s_pUdpBuffer>:
2000104c:	00000000 	andeq	r0, r0, r0

20001050 <PixelPatterns::m_PortConfig>:
	...

20001250 <PixelPatterns::m_nActivePorts>:
20001250:	00000000 	andeq	r0, r0, r0

20001254 <PixelPatterns::m_pScannerColours>:
20001254:	00000000 	andeq	r0, r0, r0

20001258 <PixelPatterns::m_nCount>:
20001258:	00000000 	andeq	r0, r0, r0

2000125c <PixelPatterns::m_pOutput>:
2000125c:	00000000 	andeq	r0, r0, r0

20001260 <PixelTestPattern::s_Pattern>:
20001260:	00000000 	andeq	r0, r0, r0

20001264 <sv_isRunning>:
20001264:	00000000 	andeq	r0, r0, r0

20001268 <WS28xxMulti::s_pThis>:
20001268:	00000000 	andeq	r0, r0, r0

2000126c <pixel::s_DmaBuffer>:
	...

2000926c <g_ip_info>:
	...

20009278 <g_mac_address>:
20009278:	00000000 	andeq	r0, r0, r0
	...

2000927e <s_is_dhcp>:
	...

20009280 <s_p>:
20009280:	00000000 	andeq	r0, r0, r0

20009284 <s_ticker>:
20009284:	00000000 	andeq	r0, r0, r0

20009288 <s_mac_address>:
	...

20009290 <s_mac_address_arp_reply>:
	...

20009298 <broadcast_mask>:
20009298:	00000000 	andeq	r0, r0, r0

2000929c <gw_ip>:
2000929c:	00000000 	andeq	r0, r0, r0

200092a0 <on_network_mask>:
200092a0:	00000000 	andeq	r0, r0, r0

200092a4 <s_id>:
200092a4:	00000000 	andeq	r0, r0, r0

200092a8 <s_ports_allowed>:
	...

200092c8 <s_recv_queue>:
	...

2000ef68 <s_send_packet>:
	...

2000f554 <MDNS::s_nRemoteIp>:
2000f554:	00000000 	andeq	r0, r0, r0

2000f558 <MDNS::s_nRemotePort>:
2000f558:	00000000 	andeq	r0, r0, r0

2000f55c <MDNS::s_nMulticastIp>:
2000f55c:	00000000 	andeq	r0, r0, r0

2000f560 <MDNS::s_AnswerLocalIp>:
	...

2000f764 <MDNS::s_ServiceRecords>:
	...

2000f784 <MDNS::s_nBytesReceived>:
2000f784:	00000000 	andeq	r0, r0, r0

2000f788 <MDNS::s_ServiceRecordsData>:
	...

2000f98c <MDNS::s_pName>:
2000f98c:	00000000 	andeq	r0, r0, r0

2000f990 <MDNS::s_pBuffer>:
2000f990:	00000000 	andeq	r0, r0, r0

2000f994 <Network::s_pThis>:
2000f994:	00000000 	andeq	r0, r0, r0

2000f998 <s_arp_announce>:
	...

2000f9c4 <s_arp_reply>:
	...

2000f9f0 <s_arp_request>:
	...

2000fa1c <s_dhcp_allocated_gw>:
2000fa1c:	00000000 	andeq	r0, r0, r0

2000fa20 <s_dhcp_allocated_ip>:
2000fa20:	00000000 	andeq	r0, r0, r0

2000fa24 <s_dhcp_allocated_netmask>:
2000fa24:	00000000 	andeq	r0, r0, r0

2000fa28 <s_dhcp_message>:
	...

2000fc4c <s_dhcp_server_ip>:
2000fc4c:	00000000 	andeq	r0, r0, r0

2000fc50 <DisplayUdf::s_pThis>:
2000fc50:	00000000 	andeq	r0, r0, r0

2000fc54 <ConfigStore::s_nWaitMillis>:
2000fc54:	00000000 	andeq	r0, r0, r0

2000fc58 <ConfigStore::s_nStartAddress>:
2000fc58:	00000000 	andeq	r0, r0, r0

2000fc5c <ConfigStore::s_bHaveFlashChip>:
2000fc5c:	00000000 	andeq	r0, r0, r0

2000fc60 <ConfigStore::s_nSpiFlashStoreSize>:
2000fc60:	00000000 	andeq	r0, r0, r0

2000fc64 <ConfigStore::s_State>:
2000fc64:	00000000 	andeq	r0, r0, r0

2000fc68 <ConfigStore::s_pThis>:
2000fc68:	00000000 	andeq	r0, r0, r0

2000fc6c <ConfigStore::s_bIsNew>:
2000fc6c:	00000000 	andeq	r0, r0, r0

2000fc70 <StoreDisplayUdf::s_pThis>:
2000fc70:	00000000 	andeq	r0, r0, r0

2000fc74 <StoreDmxSend::s_pThis>:
2000fc74:	00000000 	andeq	r0, r0, r0

2000fc78 <StoreNetwork::s_pThis>:
2000fc78:	00000000 	andeq	r0, r0, r0

2000fc7c <StoreRemoteConfig::s_pThis>:
2000fc7c:	00000000 	andeq	r0, r0, r0

2000fc80 <StoreE131::s_pThis>:
2000fc80:	00000000 	andeq	r0, r0, r0

2000fc84 <StorePixelDmx::s_pThis>:
2000fc84:	00000000 	andeq	r0, r0, r0

2000fc88 <StoreRDMDevice::s_pThis>:
2000fc88:	00000000 	andeq	r0, r0, r0

2000fc8c <PropertiesConfig::s_Config>:
2000fc8c:	00000000 	andeq	r0, r0, r0

2000fc90 <Display::s_pThis>:
2000fc90:	00000000 	andeq	r0, r0, r0

2000fc94 <_ClearBuffer>:
	...

2000fd1c <Ssd1306::s_pThis>:
2000fd1c:	00000000 	andeq	r0, r0, r0

2000fd20 <FirmwareVersion::s_FirmwareVersion>:
	...

2000fd36 <FirmwareVersion::s_Print>:
	...

2000fd78 <FirmwareVersion::s_pThis>:
2000fd78:	00000000 	andeq	r0, r0, r0

2000fd7c <LedBlink::s_pThis>:
2000fd7c:	00000000 	andeq	r0, r0, r0

2000fd80 <Hardware::s_pThis>:
2000fd80:	00000000 	andeq	r0, r0, r0

2000fd84 <last.0>:
2000fd84:	00000000 	andeq	r0, r0, r0

2000fd88 <s_micros>:
	...

2000fd90 <set_timer>:
2000fd90:	00000000 	andeq	r0, r0, r0

2000fd94 <s_nSysTickMillis>:
2000fd94:	00000000 	andeq	r0, r0, r0

2000fd98 <dma_current_ptp_rxdesc>:
2000fd98:	00000000 	andeq	r0, r0, r0

2000fd9c <dma_current_ptp_txdesc>:
2000fd9c:	00000000 	andeq	r0, r0, r0

2000fda0 <dma_current_rxdesc>:
2000fda0:	00000000 	andeq	r0, r0, r0

2000fda4 <dma_current_txdesc>:
2000fda4:	00000000 	andeq	r0, r0, r0

2000fda8 <enet_initpara>:
	...

2000fde4 <rx_buff>:
	...

20029e9c <rxdesc_tab>:
	...

2002a2fc <tx_buff>:
	...

2002d29c <txdesc_tab>:
	...

2002d31c <s_nAddress>:
2002d31c:	00000000 	andeq	r0, r0, r0

Disassembly of section .tcmsram:

10000000 <s_tcp>:
	...

100005ec <s_id>:
100005ec:	00000000 	andeq	r0, r0, r0

100005f0 <s_tcb>:
	...

10000634 <s_recv_queue>:
	...

100011a4 <s_entry_current>:
100011a4:	00000000 	andeq	r0, r0, r0

100011a8 <s_arp_records>:
	...

10001328 <s_multicast_mac>:
	...

10001330 <s_report>:
	...

10001360 <s_id>:
10001360:	00000000 	andeq	r0, r0, r0

10001364 <s_leave>:
	...

10001394 <s_groups>:
	...

100015c4 <s_joins_allowed_index>:
100015c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

1000a000 <heap_low>:
	...

Disassembly of section .stack:

1000c000 <_sp-0x4000>:
	...

Disassembly of section .ramadd:

20030000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
