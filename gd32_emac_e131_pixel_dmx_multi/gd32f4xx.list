
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10010000 	andne	r0, r1, r0
 8008004:	08008bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, pc}
 8008008:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800800c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008010:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008014:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008018:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
	...
 800802c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008030:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800803c:	08015969 	stmdaeq	r1, {r0, r3, r5, r6, r8, fp, ip, lr}
 8008040:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008044:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008048:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800804c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008050:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008054:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008058:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800805c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008060:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008064:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008068:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800806c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008070:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008074:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008078:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800807c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008080:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008084:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008088:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800808c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008090:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008094:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008098:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800809c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ac:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b0:	0800ec2d 	stmdaeq	r0, {r0, r2, r3, r5, sl, fp, sp, lr, pc}
 80080b4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b8:	08010889 	stmdaeq	r1, {r0, r3, r7, fp}
 80080bc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080cc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080dc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ec:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080fc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008100:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008104:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008108:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800810c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008110:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008114:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008118:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800811c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008120:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008124:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008128:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800812c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008130:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008134:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008138:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800813c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008140:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008144:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008148:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800814c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008150:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008154:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008158:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800815c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008160:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008164:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008168:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800816c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008170:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008174:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008178:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008184:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008188:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800818c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008190:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008194:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008198:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

Disassembly of section .text:

080081ac <net_init>:
 80081ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081ae:	9e08      	ldr	r6, [sp, #32]
 80081b0:	460c      	mov	r4, r1
 80081b2:	4921      	ldr	r1, [pc, #132]	; (8008238 <net_init+0x8c>)
 80081b4:	461d      	mov	r5, r3
 80081b6:	1e43      	subs	r3, r0, #1
 80081b8:	3005      	adds	r0, #5
 80081ba:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80081be:	f801 7b01 	strb.w	r7, [r1], #1
 80081c2:	4283      	cmp	r3, r0
 80081c4:	d1f9      	bne.n	80081ba <net_init+0xe>
 80081c6:	491d      	ldr	r1, [pc, #116]	; (800823c <net_init+0x90>)
 80081c8:	f104 000c 	add.w	r0, r4, #12
 80081cc:	4623      	mov	r3, r4
 80081ce:	f813 7b01 	ldrb.w	r7, [r3], #1
 80081d2:	f801 7b01 	strb.w	r7, [r1], #1
 80081d6:	4283      	cmp	r3, r0
 80081d8:	d1f9      	bne.n	80081ce <net_init+0x22>
 80081da:	4918      	ldr	r1, [pc, #96]	; (800823c <net_init+0x90>)
 80081dc:	4816      	ldr	r0, [pc, #88]	; (8008238 <net_init+0x8c>)
 80081de:	9201      	str	r2, [sp, #4]
 80081e0:	2700      	movs	r7, #0
 80081e2:	f000 f99d 	bl	8008520 <ip_init>
 80081e6:	4814      	ldr	r0, [pc, #80]	; (8008238 <net_init+0x8c>)
 80081e8:	f000 f83a 	bl	8008260 <rfc3927_init>
 80081ec:	7037      	strb	r7, [r6, #0]
 80081ee:	782b      	ldrb	r3, [r5, #0]
 80081f0:	9a01      	ldr	r2, [sp, #4]
 80081f2:	b153      	cbz	r3, 800820a <net_init+0x5e>
 80081f4:	4911      	ldr	r1, [pc, #68]	; (800823c <net_init+0x90>)
 80081f6:	4810      	ldr	r0, [pc, #64]	; (8008238 <net_init+0x8c>)
 80081f8:	f00a ff20 	bl	801303c <dhcp_client>
 80081fc:	42b8      	cmp	r0, r7
 80081fe:	da04      	bge.n	800820a <net_init+0x5e>
 8008200:	480e      	ldr	r0, [pc, #56]	; (800823c <net_init+0x90>)
 8008202:	702f      	strb	r7, [r5, #0]
 8008204:	f009 f918 	bl	8011438 <rfc3927>
 8008208:	7030      	strb	r0, [r6, #0]
 800820a:	490c      	ldr	r1, [pc, #48]	; (800823c <net_init+0x90>)
 800820c:	480a      	ldr	r0, [pc, #40]	; (8008238 <net_init+0x8c>)
 800820e:	f000 f883 	bl	8008318 <arp_init>
 8008212:	480a      	ldr	r0, [pc, #40]	; (800823c <net_init+0x90>)
 8008214:	f00b f92c 	bl	8013470 <ip_set_ip>
 8008218:	f000 f82e 	bl	8008278 <tcp_init>
 800821c:	4a07      	ldr	r2, [pc, #28]	; (800823c <net_init+0x90>)
 800821e:	1e63      	subs	r3, r4, #1
 8008220:	340b      	adds	r4, #11
 8008222:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008226:	f803 1f01 	strb.w	r1, [r3, #1]!
 800822a:	429c      	cmp	r4, r3
 800822c:	d1f9      	bne.n	8008222 <net_init+0x76>
 800822e:	782a      	ldrb	r2, [r5, #0]
 8008230:	4b03      	ldr	r3, [pc, #12]	; (8008240 <net_init+0x94>)
 8008232:	701a      	strb	r2, [r3, #0]
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008238:	20009278 	andcs	r9, r0, r8, ror r2
 800823c:	2000926c 	andcs	r9, r0, ip, ror #4
 8008240:	2000927e 	andcs	r9, r0, lr, ror r2

08008244 <net_shutdown>:
 8008244:	b508      	push	{r3, lr}
 8008246:	f000 f976 	bl	8008536 <ip_shutdown>
 800824a:	4b04      	ldr	r3, [pc, #16]	; (800825c <net_shutdown+0x18>)
 800824c:	781b      	ldrb	r3, [r3, #0]
 800824e:	b11b      	cbz	r3, 8008258 <net_shutdown+0x14>
 8008250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008254:	f00a bffa 	b.w	801324c <dhcp_client_release>
 8008258:	bd08      	pop	{r3, pc}
 800825a:	bf00      	nop
 800825c:	2000927e 	andcs	r9, r0, lr, ror r2

08008260 <rfc3927_init>:
 8008260:	4b04      	ldr	r3, [pc, #16]	; (8008274 <rfc3927_init+0x14>)
 8008262:	1d82      	adds	r2, r0, #6
 8008264:	4290      	cmp	r0, r2
 8008266:	d100      	bne.n	800826a <rfc3927_init+0xa>
 8008268:	4770      	bx	lr
 800826a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800826e:	f803 1b01 	strb.w	r1, [r3], #1
 8008272:	e7f7      	b.n	8008264 <rfc3927_init+0x4>
 8008274:	20009288 	andcs	r9, r0, r8, lsl #5

08008278 <tcp_init>:
 8008278:	b513      	push	{r0, r1, r4, lr}
 800827a:	4c0c      	ldr	r4, [pc, #48]	; (80082ac <tcp_init+0x34>)
 800827c:	490c      	ldr	r1, [pc, #48]	; (80082b0 <tcp_init+0x38>)
 800827e:	2206      	movs	r2, #6
 8008280:	18a0      	adds	r0, r4, r2
 8008282:	f009 f933 	bl	80114ec <memcpy.isra.0>
 8008286:	2308      	movs	r3, #8
 8008288:	81a3      	strh	r3, [r4, #12]
 800828a:	4b0a      	ldr	r3, [pc, #40]	; (80082b4 <tcp_init+0x3c>)
 800828c:	2204      	movs	r2, #4
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	eb0d 0102 	add.w	r1, sp, r2
 8008296:	f104 001a 	add.w	r0, r4, #26
 800829a:	f009 f927 	bl	80114ec <memcpy.isra.0>
 800829e:	2345      	movs	r3, #69	; 0x45
 80082a0:	81e3      	strh	r3, [r4, #14]
 80082a2:	4b05      	ldr	r3, [pc, #20]	; (80082b8 <tcp_init+0x40>)
 80082a4:	6163      	str	r3, [r4, #20]
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	10000000 	andne	r0, r0, r0
 80082b0:	20009278 	andcs	r9, r0, r8, ror r2
 80082b4:	2000926c 	andcs	r9, r0, ip, ror #4
 80082b8:	06400040 	strbeq	r0, [r0], -r0, asr #32

080082bc <udp_init>:
 80082bc:	b570      	push	{r4, r5, r6, lr}
 80082be:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <udp_init+0x40>)
 80082c0:	460e      	mov	r6, r1
 80082c2:	490f      	ldr	r1, [pc, #60]	; (8008300 <udp_init+0x44>)
 80082c4:	2408      	movs	r4, #8
 80082c6:	2200      	movs	r2, #0
 80082c8:	3c01      	subs	r4, #1
 80082ca:	801a      	strh	r2, [r3, #0]
 80082cc:	805a      	strh	r2, [r3, #2]
 80082ce:	f841 2b04 	str.w	r2, [r1], #4
 80082d2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80082d6:	d1f7      	bne.n	80082c8 <udp_init+0xc>
 80082d8:	4d0a      	ldr	r5, [pc, #40]	; (8008304 <udp_init+0x48>)
 80082da:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <udp_init+0x4c>)
 80082dc:	2206      	movs	r2, #6
 80082de:	4601      	mov	r1, r0
 80082e0:	18a8      	adds	r0, r5, r2
 80082e2:	801c      	strh	r4, [r3, #0]
 80082e4:	f009 fa9c 	bl	8011820 <memcpy.isra.0>
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <udp_init+0x50>)
 80082ea:	60eb      	str	r3, [r5, #12]
 80082ec:	4630      	mov	r0, r6
 80082ee:	4b08      	ldr	r3, [pc, #32]	; (8008310 <udp_init+0x54>)
 80082f0:	616b      	str	r3, [r5, #20]
 80082f2:	f009 fabd 	bl	8011870 <udp_set_ip>
 80082f6:	852c      	strh	r4, [r5, #40]	; 0x28
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	200092c8 	andcs	r9, r0, r8, asr #5
 8008300:	200092a8 	andcs	r9, r0, r8, lsr #5
 8008304:	2000ef68 	andcs	lr, r0, r8, ror #30
 8008308:	200092a4 	andcs	r9, r0, r4, lsr #5
 800830c:	00450008 	subeq	r0, r5, r8
 8008310:	11400040 	cmpne	r0, r0, asr #32

08008314 <udp_shutdown>:
 8008314:	4770      	bx	lr
	...

08008318 <arp_init>:
 8008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800831c:	460d      	mov	r5, r1
 800831e:	4604      	mov	r4, r0
 8008320:	f000 f876 	bl	8008410 <arp_cache_init>
 8008324:	2206      	movs	r2, #6
 8008326:	482f      	ldr	r0, [pc, #188]	; (80083e4 <arp_init+0xcc>)
 8008328:	682f      	ldr	r7, [r5, #0]
 800832a:	4621      	mov	r1, r4
 800832c:	f00a fd08 	bl	8012d40 <memcpy.isra.0>
 8008330:	4b2d      	ldr	r3, [pc, #180]	; (80083e8 <arp_init+0xd0>)
 8008332:	2507      	movs	r5, #7
 8008334:	461e      	mov	r6, r3
 8008336:	22ff      	movs	r2, #255	; 0xff
 8008338:	3d01      	subs	r5, #1
 800833a:	d146      	bne.n	80083ca <arp_init+0xb2>
 800833c:	4b2b      	ldr	r3, [pc, #172]	; (80083ec <arp_init+0xd4>)
 800833e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800840c <arp_init+0xf4>
 8008342:	482b      	ldr	r0, [pc, #172]	; (80083f0 <arp_init+0xd8>)
 8008344:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8008348:	2206      	movs	r2, #6
 800834a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800834e:	4621      	mov	r1, r4
 8008350:	82b3      	strh	r3, [r6, #20]
 8008352:	f00a fcf5 	bl	8012d40 <memcpy.isra.0>
 8008356:	4a27      	ldr	r2, [pc, #156]	; (80083f4 <arp_init+0xdc>)
 8008358:	61f7      	str	r7, [r6, #28]
 800835a:	2307      	movs	r3, #7
 800835c:	3b01      	subs	r3, #1
 800835e:	d137      	bne.n	80083d0 <arp_init+0xb8>
 8008360:	2206      	movs	r2, #6
 8008362:	4621      	mov	r1, r4
 8008364:	4824      	ldr	r0, [pc, #144]	; (80083f8 <arp_init+0xe0>)
 8008366:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800836a:	f00a fce9 	bl	8012d40 <memcpy.isra.0>
 800836e:	4a23      	ldr	r2, [pc, #140]	; (80083fc <arp_init+0xe4>)
 8008370:	2306      	movs	r3, #6
 8008372:	4615      	mov	r5, r2
 8008374:	21ff      	movs	r1, #255	; 0xff
 8008376:	3b01      	subs	r3, #1
 8008378:	d22d      	bcs.n	80083d6 <arp_init+0xbe>
 800837a:	4b1c      	ldr	r3, [pc, #112]	; (80083ec <arp_init+0xd4>)
 800837c:	4820      	ldr	r0, [pc, #128]	; (8008400 <arp_init+0xe8>)
 800837e:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8008382:	2206      	movs	r2, #6
 8008384:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008388:	4621      	mov	r1, r4
 800838a:	82ab      	strh	r3, [r5, #20]
 800838c:	f00a fcd8 	bl	8012d40 <memcpy.isra.0>
 8008390:	4a1c      	ldr	r2, [pc, #112]	; (8008404 <arp_init+0xec>)
 8008392:	61ef      	str	r7, [r5, #28]
 8008394:	2307      	movs	r3, #7
 8008396:	2100      	movs	r1, #0
 8008398:	3b01      	subs	r3, #1
 800839a:	d11f      	bne.n	80083dc <arp_init+0xc4>
 800839c:	4d1a      	ldr	r5, [pc, #104]	; (8008408 <arp_init+0xf0>)
 800839e:	2206      	movs	r2, #6
 80083a0:	18a8      	adds	r0, r5, r2
 80083a2:	4621      	mov	r1, r4
 80083a4:	f00a fccc 	bl	8012d40 <memcpy.isra.0>
 80083a8:	4b10      	ldr	r3, [pc, #64]	; (80083ec <arp_init+0xd4>)
 80083aa:	4621      	mov	r1, r4
 80083ac:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80083b0:	f105 0016 	add.w	r0, r5, #22
 80083b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80083b8:	2206      	movs	r2, #6
 80083ba:	82ab      	strh	r3, [r5, #20]
 80083bc:	f00a fcc0 	bl	8012d40 <memcpy.isra.0>
 80083c0:	61ef      	str	r7, [r5, #28]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f00a bcc5 	b.w	8012d54 <arp_announce>
 80083ca:	f803 2b01 	strb.w	r2, [r3], #1
 80083ce:	e7b3      	b.n	8008338 <arp_init+0x20>
 80083d0:	f802 5b01 	strb.w	r5, [r2], #1
 80083d4:	e7c2      	b.n	800835c <arp_init+0x44>
 80083d6:	f802 1b01 	strb.w	r1, [r2], #1
 80083da:	e7cc      	b.n	8008376 <arp_init+0x5e>
 80083dc:	f802 1b01 	strb.w	r1, [r2], #1
 80083e0:	e7da      	b.n	8008398 <arp_init+0x80>
 80083e2:	bf00      	nop
 80083e4:	2000f99e 	mulcs	r0, lr, r9
 80083e8:	2000f998 	mulcs	r0, r8, r9
 80083ec:	01000608 	tsteq	r0, r8, lsl #12
 80083f0:	2000f9ae 	andcs	pc, r0, lr, lsr #19
 80083f4:	2000f9b8 			; <UNDEFINED> instruction: 0x2000f9b8
 80083f8:	2000f9f6 	strdcs	pc, [r0], -r6
 80083fc:	2000f9f0 	strdcs	pc, [r0], -r0
 8008400:	2000fa06 	andcs	pc, r0, r6, lsl #20
 8008404:	2000fa10 	andcs	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
 8008408:	2000f9c4 	andcs	pc, r0, r4, asr #19
 800840c:	04060008 	streq	r0, [r6], #-8

08008410 <arp_cache_init>:
 8008410:	4a0a      	ldr	r2, [pc, #40]	; (800843c <arp_cache_init+0x2c>)
 8008412:	2300      	movs	r3, #0
 8008414:	b510      	push	{r4, lr}
 8008416:	f822 3b08 	strh.w	r3, [r2], #8
 800841a:	4618      	mov	r0, r3
 800841c:	4611      	mov	r1, r2
 800841e:	f842 0c04 	str.w	r0, [r2, #-4]
 8008422:	1d94      	adds	r4, r2, #6
 8008424:	42a1      	cmp	r1, r4
 8008426:	d105      	bne.n	8008434 <arp_cache_init+0x24>
 8008428:	3303      	adds	r3, #3
 800842a:	2b60      	cmp	r3, #96	; 0x60
 800842c:	f102 020c 	add.w	r2, r2, #12
 8008430:	d1f4      	bne.n	800841c <arp_cache_init+0xc>
 8008432:	bd10      	pop	{r4, pc}
 8008434:	f801 0b01 	strb.w	r0, [r1], #1
 8008438:	e7f4      	b.n	8008424 <arp_cache_init+0x14>
 800843a:	bf00      	nop
 800843c:	100011a4 	andne	r1, r0, r4, lsr #3

08008440 <igmp_init>:
 8008440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008444:	2200      	movs	r2, #0
 8008446:	4b26      	ldr	r3, [pc, #152]	; (80084e0 <igmp_init+0xa0>)
 8008448:	4605      	mov	r5, r0
 800844a:	4608      	mov	r0, r1
 800844c:	4611      	mov	r1, r2
 800844e:	f103 0408 	add.w	r4, r3, #8
 8008452:	42a3      	cmp	r3, r4
 8008454:	d140      	bne.n	80084d8 <igmp_init+0x98>
 8008456:	3201      	adds	r2, #1
 8008458:	2a46      	cmp	r2, #70	; 0x46
 800845a:	d1f8      	bne.n	800844e <igmp_init+0xe>
 800845c:	4c21      	ldr	r4, [pc, #132]	; (80084e4 <igmp_init+0xa4>)
 800845e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80084f0 <igmp_init+0xb0>
 8008462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80084f4 <igmp_init+0xb4>
 8008466:	2600      	movs	r6, #0
 8008468:	f8c4 629c 	str.w	r6, [r4, #668]	; 0x29c
 800846c:	8726      	strh	r6, [r4, #56]	; 0x38
 800846e:	f00a ff63 	bl	8013338 <igmp_set_ip>
 8008472:	2301      	movs	r3, #1
 8008474:	8023      	strh	r3, [r4, #0]
 8008476:	235e      	movs	r3, #94	; 0x5e
 8008478:	70a3      	strb	r3, [r4, #2]
 800847a:	2206      	movs	r2, #6
 800847c:	4629      	mov	r1, r5
 800847e:	f104 000e 	add.w	r0, r4, #14
 8008482:	f00a ff11 	bl	80132a8 <memcpy.isra.0>
 8008486:	f240 4394 	movw	r3, #1172	; 0x494
 800848a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848c:	2316      	movs	r3, #22
 800848e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008490:	4b15      	ldr	r3, [pc, #84]	; (80084e8 <igmp_init+0xa8>)
 8008492:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008498:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800849c:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80084a0:	2206      	movs	r2, #6
 80084a2:	f8c4 901c 	str.w	r9, [r4, #28]
 80084a6:	f8c4 8014 	str.w	r8, [r4, #20]
 80084aa:	4629      	mov	r1, r5
 80084ac:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80084b0:	8327      	strh	r7, [r4, #24]
 80084b2:	85a6      	strh	r6, [r4, #44]	; 0x2c
 80084b4:	f00a fef8 	bl	80132a8 <memcpy.isra.0>
 80084b8:	23e0      	movs	r3, #224	; 0xe0
 80084ba:	4a0c      	ldr	r2, [pc, #48]	; (80084ec <igmp_init+0xac>)
 80084bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80084c0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80084c4:	e9c4 2317 	strd	r2, r3, [r4, #92]	; 0x5c
 80084c8:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
 80084cc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
 80084d0:	f8a4 704c 	strh.w	r7, [r4, #76]	; 0x4c
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80084d8:	f803 1b01 	strb.w	r1, [r3], #1
 80084dc:	e7b9      	b.n	8008452 <igmp_init+0x12>
 80084de:	bf00      	nop
 80084e0:	10001394 	mulne	r0, r4, r3
 80084e4:	10001328 	andne	r1, r0, r8, lsr #6
 80084e8:	005e0001 	subseq	r0, lr, r1
 80084ec:	04940200 	ldreq	r0, [r4], #512	; 0x200
 80084f0:	02010040 	andeq	r0, r1, #64	; 0x40
 80084f4:	00460008 	subeq	r0, r6, r8

080084f8 <igmp_shutdown>:
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	2500      	movs	r5, #0
 80084fc:	4c07      	ldr	r4, [pc, #28]	; (800851c <igmp_shutdown+0x24>)
 80084fe:	462e      	mov	r6, r5
 8008500:	6820      	ldr	r0, [r4, #0]
 8008502:	b120      	cbz	r0, 800850e <igmp_shutdown+0x16>
 8008504:	f00a ff74 	bl	80133f0 <igmp_leave>
 8008508:	6026      	str	r6, [r4, #0]
 800850a:	7166      	strb	r6, [r4, #5]
 800850c:	7126      	strb	r6, [r4, #4]
 800850e:	3501      	adds	r5, #1
 8008510:	2d46      	cmp	r5, #70	; 0x46
 8008512:	f104 0408 	add.w	r4, r4, #8
 8008516:	d1f3      	bne.n	8008500 <igmp_shutdown+0x8>
 8008518:	bd70      	pop	{r4, r5, r6, pc}
 800851a:	bf00      	nop
 800851c:	10001394 	mulne	r0, r4, r3

08008520 <ip_init>:
 8008520:	b538      	push	{r3, r4, r5, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	460d      	mov	r5, r1
 8008526:	f7ff fec9 	bl	80082bc <udp_init>
 800852a:	4629      	mov	r1, r5
 800852c:	4620      	mov	r0, r4
 800852e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008532:	f7ff bf85 	b.w	8008440 <igmp_init>

08008536 <ip_shutdown>:
 8008536:	b508      	push	{r3, lr}
 8008538:	f7ff ffde 	bl	80084f8 <igmp_shutdown>
 800853c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008540:	f7ff bee8 	b.w	8008314 <udp_shutdown>

08008544 <console_init>:
 8008544:	b508      	push	{r3, lr}
 8008546:	f00d f9b7 	bl	80158b8 <uart0_init>
 800854a:	4804      	ldr	r0, [pc, #16]	; (800855c <console_init+0x18>)
 800854c:	f00d f9de 	bl	801590c <uart0_puts>
 8008550:	4803      	ldr	r0, [pc, #12]	; (8008560 <console_init+0x1c>)
 8008552:	f00d f9db 	bl	801590c <uart0_puts>
 8008556:	2000      	movs	r0, #0
 8008558:	bd08      	pop	{r3, pc}
 800855a:	bf00      	nop
 800855c:	08017be3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 8008560:	0801ad74 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, fp, sp, pc}

08008564 <net_handle>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4c0c      	ldr	r4, [pc, #48]	; (8008598 <net_handle+0x34>)
 8008568:	4620      	mov	r0, r4
 800856a:	f00e fc2b 	bl	8016dc4 <emac_eth_recv>
 800856e:	2800      	cmp	r0, #0
 8008570:	dd07      	ble.n	8008582 <net_handle+0x1e>
 8008572:	6820      	ldr	r0, [r4, #0]
 8008574:	8983      	ldrh	r3, [r0, #12]
 8008576:	2b08      	cmp	r3, #8
 8008578:	d107      	bne.n	800858a <net_handle+0x26>
 800857a:	f000 faab 	bl	8008ad4 <ip_handle>
 800857e:	f00e fc35 	bl	8016dec <emac_free_pkt>
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008586:	f008 bf47 	b.w	8011418 <net_timers_run>
 800858a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800858e:	d1f6      	bne.n	800857e <net_handle+0x1a>
 8008590:	f000 fa44 	bl	8008a1c <arp_handle>
 8008594:	e7f3      	b.n	800857e <net_handle+0x1a>
 8008596:	bf00      	nop
 8008598:	20009280 	andcs	r9, r0, r0, lsl #5

0800859c <tcp_handle>:
 800859c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085a0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80085a2:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80085a6:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80085aa:	4cbd      	ldr	r4, [pc, #756]	; (80088a0 <tcp_handle+0x304>)
 80085ac:	ba5b      	rev16	r3, r3
 80085ae:	8443      	strh	r3, [r0, #34]	; 0x22
 80085b0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80085b2:	4605      	mov	r5, r0
 80085b4:	ba5b      	rev16	r3, r3
 80085b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80085b8:	f008 ffa2 	bl	8011500 <_bswap32>
 80085bc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80085be:	f8b4 25f0 	ldrh.w	r2, [r4, #1520]	; 0x5f0
 80085c2:	ba5b      	rev16	r3, r3
 80085c4:	862b      	strh	r3, [r5, #48]	; 0x30
 80085c6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80085c8:	ba5b      	rev16	r3, r3
 80085ca:	86ab      	strh	r3, [r5, #52]	; 0x34
 80085cc:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d152      	bne.n	8008678 <tcp_handle+0xdc>
 80085d2:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80085d6:	2b01      	cmp	r3, #1
 80085d8:	d00f      	beq.n	80085fa <tcp_handle+0x5e>
 80085da:	2204      	movs	r2, #4
 80085dc:	f105 011a 	add.w	r1, r5, #26
 80085e0:	4668      	mov	r0, sp
 80085e2:	f008 ff83 	bl	80114ec <memcpy.isra.0>
 80085e6:	f8b4 25f2 	ldrh.w	r2, [r4, #1522]	; 0x5f2
 80085ea:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d143      	bne.n	8008678 <tcp_handle+0xdc>
 80085f0:	f8d4 25f4 	ldr.w	r2, [r4, #1524]	; 0x5f4
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d13e      	bne.n	8008678 <tcp_handle+0xdc>
 80085fa:	2204      	movs	r2, #4
 80085fc:	eb0d 0002 	add.w	r0, sp, r2
 8008600:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8008604:	f008 ff72 	bl	80114ec <memcpy.isra.0>
 8008608:	2204      	movs	r2, #4
 800860a:	eb0d 0002 	add.w	r0, sp, r2
 800860e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8008612:	9e01      	ldr	r6, [sp, #4]
 8008614:	f008 ff6a 	bl	80114ec <memcpy.isra.0>
 8008618:	f894 2630 	ldrb.w	r2, [r4, #1584]	; 0x630
 800861c:	9f01      	ldr	r7, [sp, #4]
 800861e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8008622:	2a01      	cmp	r2, #1
 8008624:	d01e      	beq.n	8008664 <tcp_handle+0xc8>
 8008626:	1ed3      	subs	r3, r2, #3
 8008628:	2b07      	cmp	r3, #7
 800862a:	d825      	bhi.n	8008678 <tcp_handle+0xdc>
 800862c:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8008630:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8008634:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8008638:	fa98 f898 	rev16.w	r8, r8
 800863c:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 8008640:	f8b4 1628 	ldrh.w	r1, [r4, #1576]	; 0x628
 8008644:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8008648:	fa13 f888 	uxtah	r8, r3, r8
 800864c:	fa1f f888 	uxth.w	r8, r8
 8008650:	2900      	cmp	r1, #0
 8008652:	d14d      	bne.n	80086f0 <tcp_handle+0x154>
 8008654:	f1b8 0f00 	cmp.w	r8, #0
 8008658:	d178      	bne.n	800874c <tcp_handle+0x1b0>
 800865a:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800865e:	42bb      	cmp	r3, r7
 8008660:	d174      	bne.n	800874c <tcp_handle+0x1b0>
 8008662:	e053      	b.n	800870c <tcp_handle+0x170>
 8008664:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008668:	075a      	lsls	r2, r3, #29
 800866a:	d405      	bmi.n	8008678 <tcp_handle+0xdc>
 800866c:	06d8      	lsls	r0, r3, #27
 800866e:	d506      	bpl.n	800867e <tcp_handle+0xe2>
 8008670:	498c      	ldr	r1, [pc, #560]	; (80088a4 <tcp_handle+0x308>)
 8008672:	4628      	mov	r0, r5
 8008674:	f009 f80e 	bl	8011694 <_send_reset>
 8008678:	b004      	add	sp, #16
 800867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800867e:	0799      	lsls	r1, r3, #30
 8008680:	d5fa      	bpl.n	8008678 <tcp_handle+0xdc>
 8008682:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8008686:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800868a:	f105 011a 	add.w	r1, r5, #26
 800868e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008692:	4668      	mov	r0, sp
 8008694:	2204      	movs	r2, #4
 8008696:	f8a4 35f2 	strh.w	r3, [r4, #1522]	; 0x5f2
 800869a:	f008 ff27 	bl	80114ec <memcpy.isra.0>
 800869e:	2206      	movs	r2, #6
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4881      	ldr	r0, [pc, #516]	; (80088a8 <tcp_handle+0x30c>)
 80086a4:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80086a8:	18a9      	adds	r1, r5, r2
 80086aa:	f008 ff1f 	bl	80114ec <memcpy.isra.0>
 80086ae:	f8d4 2618 	ldr.w	r2, [r4, #1560]	; 0x618
 80086b2:	487c      	ldr	r0, [pc, #496]	; (80088a4 <tcp_handle+0x308>)
 80086b4:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 80086b8:	1c7b      	adds	r3, r7, #1
 80086ba:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086be:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 80086c2:	a901      	add	r1, sp, #4
 80086c4:	2312      	movs	r3, #18
 80086c6:	f88d 300c 	strb.w	r3, [sp, #12]
 80086ca:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80086ce:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80086d2:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80086d6:	f008 ff39 	bl	801154c <_tcp_send_package>
 80086da:	f8d4 3618 	ldr.w	r3, [r4, #1560]	; 0x618
 80086de:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80086e2:	1c5a      	adds	r2, r3, #1
 80086e4:	f8c4 2604 	str.w	r2, [r4, #1540]	; 0x604
 80086e8:	2303      	movs	r3, #3
 80086ea:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80086ee:	e7c3      	b.n	8008678 <tcp_handle+0xdc>
 80086f0:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80086f4:	eba3 0c07 	sub.w	ip, r3, r7
 80086f8:	f1b8 0f00 	cmp.w	r8, #0
 80086fc:	d10e      	bne.n	800871c <tcp_handle+0x180>
 80086fe:	f1bc 0f00 	cmp.w	ip, #0
 8008702:	dc23      	bgt.n	800874c <tcp_handle+0x1b0>
 8008704:	1afb      	subs	r3, r7, r3
 8008706:	1a5b      	subs	r3, r3, r1
 8008708:	2b00      	cmp	r3, #0
 800870a:	da1f      	bge.n	800874c <tcp_handle+0x1b0>
 800870c:	0743      	lsls	r3, r0, #29
 800870e:	d534      	bpl.n	800877a <tcp_handle+0x1de>
 8008710:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008714:	4863      	ldr	r0, [pc, #396]	; (80088a4 <tcp_handle+0x308>)
 8008716:	f008 fecf 	bl	80114b8 <_init_tcb>
 800871a:	e7ad      	b.n	8008678 <tcp_handle+0xdc>
 800871c:	f1bc 0f00 	cmp.w	ip, #0
 8008720:	dc06      	bgt.n	8008730 <tcp_handle+0x194>
 8008722:	eba7 0c03 	sub.w	ip, r7, r3
 8008726:	ebac 0c01 	sub.w	ip, ip, r1
 800872a:	f1bc 0f00 	cmp.w	ip, #0
 800872e:	dbed      	blt.n	800870c <tcp_handle+0x170>
 8008730:	eb08 0c07 	add.w	ip, r8, r7
 8008734:	f103 0e01 	add.w	lr, r3, #1
 8008738:	ebae 0e0c 	sub.w	lr, lr, ip
 800873c:	f1be 0f00 	cmp.w	lr, #0
 8008740:	dc04      	bgt.n	800874c <tcp_handle+0x1b0>
 8008742:	43db      	mvns	r3, r3
 8008744:	1a5b      	subs	r3, r3, r1
 8008746:	eb13 0f0c 	cmn.w	r3, ip
 800874a:	d4df      	bmi.n	800870c <tcp_handle+0x170>
 800874c:	0742      	lsls	r2, r0, #29
 800874e:	d506      	bpl.n	800875e <tcp_handle+0x1c2>
 8008750:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008754:	4853      	ldr	r0, [pc, #332]	; (80088a4 <tcp_handle+0x308>)
 8008756:	f008 feaf 	bl	80114b8 <_init_tcb>
 800875a:	2301      	movs	r3, #1
 800875c:	e7c5      	b.n	80086ea <tcp_handle+0x14e>
 800875e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008762:	9301      	str	r3, [sp, #4]
 8008764:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 8008768:	9302      	str	r3, [sp, #8]
 800876a:	484e      	ldr	r0, [pc, #312]	; (80088a4 <tcp_handle+0x308>)
 800876c:	2310      	movs	r3, #16
 800876e:	a901      	add	r1, sp, #4
 8008770:	f88d 300c 	strb.w	r3, [sp, #12]
 8008774:	f008 feea 	bl	801154c <_tcp_send_package>
 8008778:	e77e      	b.n	8008678 <tcp_handle+0xdc>
 800877a:	0781      	lsls	r1, r0, #30
 800877c:	d505      	bpl.n	800878a <tcp_handle+0x1ee>
 800877e:	2a03      	cmp	r2, #3
 8008780:	d0eb      	beq.n	800875a <tcp_handle+0x1be>
 8008782:	4948      	ldr	r1, [pc, #288]	; (80088a4 <tcp_handle+0x308>)
 8008784:	4628      	mov	r0, r5
 8008786:	f008 ff85 	bl	8011694 <_send_reset>
 800878a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800878e:	06da      	lsls	r2, r3, #27
 8008790:	f57f af72 	bpl.w	8008678 <tcp_handle+0xdc>
 8008794:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008798:	3b03      	subs	r3, #3
 800879a:	2b07      	cmp	r3, #7
 800879c:	d81d      	bhi.n	80087da <tcp_handle+0x23e>
 800879e:	e8df f003 	tbb	[pc, r3]
 80087a2:	87878704 	strhi	r8, [r7, r4, lsl #14]
 80087a6:	c5ba8787 	ldrgt	r8, [sl, #1927]!	; 0x787
 80087aa:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80087ae:	1b9b      	subs	r3, r3, r6
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	dc0e      	bgt.n	80087d2 <tcp_handle+0x236>
 80087b4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80087b8:	1af3      	subs	r3, r6, r3
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	dc09      	bgt.n	80087d2 <tcp_handle+0x236>
 80087be:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80087c2:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80087c6:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80087ca:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80087ce:	2304      	movs	r3, #4
 80087d0:	e78b      	b.n	80086ea <tcp_handle+0x14e>
 80087d2:	4934      	ldr	r1, [pc, #208]	; (80088a4 <tcp_handle+0x308>)
 80087d4:	4628      	mov	r0, r5
 80087d6:	f008 ff5d 	bl	8011694 <_send_reset>
 80087da:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80087de:	3b04      	subs	r3, #4
 80087e0:	2b02      	cmp	r3, #2
 80087e2:	d837      	bhi.n	8008854 <tcp_handle+0x2b8>
 80087e4:	f1b8 0f00 	cmp.w	r8, #0
 80087e8:	d034      	beq.n	8008854 <tcp_handle+0x2b8>
 80087ea:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80087ee:	42bb      	cmp	r3, r7
 80087f0:	f040 80ad 	bne.w	800894e <tcp_handle+0x3b2>
 80087f4:	f8b4 7634 	ldrh.w	r7, [r4, #1588]	; 0x634
 80087f8:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80088ac <tcp_handle+0x310>
 80087fc:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8008800:	435f      	muls	r7, r3
 8008802:	1d38      	adds	r0, r7, #4
 8008804:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8008808:	4642      	mov	r2, r8
 800880a:	4449      	add	r1, r9
 800880c:	4450      	add	r0, sl
 800880e:	f008 fe6d 	bl	80114ec <memcpy.isra.0>
 8008812:	f8b4 2628 	ldrh.w	r2, [r4, #1576]	; 0x628
 8008816:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800881a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800881e:	f8a4 2628 	strh.w	r2, [r4, #1576]	; 0x628
 8008822:	4427      	add	r7, r4
 8008824:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008828:	f8a7 8bec 	strh.w	r8, [r7, #3052]	; 0xbec
 800882c:	4443      	add	r3, r8
 800882e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008832:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 8008836:	a901      	add	r1, sp, #4
 8008838:	2310      	movs	r3, #16
 800883a:	f1aa 0044 	sub.w	r0, sl, #68	; 0x44
 800883e:	f88d 300c 	strb.w	r3, [sp, #12]
 8008842:	f008 fe83 	bl	801154c <_tcp_send_package>
 8008846:	f8b4 3634 	ldrh.w	r3, [r4, #1588]	; 0x634
 800884a:	3301      	adds	r3, #1
 800884c:	f003 0301 	and.w	r3, r3, #1
 8008850:	f8a4 3634 	strh.w	r3, [r4, #1588]	; 0x634
 8008854:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008858:	2b02      	cmp	r3, #2
 800885a:	f67f af0d 	bls.w	8008678 <tcp_handle+0xdc>
 800885e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008862:	07db      	lsls	r3, r3, #31
 8008864:	f57f af08 	bpl.w	8008678 <tcp_handle+0xdc>
 8008868:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800886c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008870:	480c      	ldr	r0, [pc, #48]	; (80088a4 <tcp_handle+0x308>)
 8008872:	3301      	adds	r3, #1
 8008874:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008878:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 800887c:	a901      	add	r1, sp, #4
 800887e:	2310      	movs	r3, #16
 8008880:	f88d 300c 	strb.w	r3, [sp, #12]
 8008884:	f008 fe62 	bl	801154c <_tcp_send_package>
 8008888:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 800888c:	2b05      	cmp	r3, #5
 800888e:	d067      	beq.n	8008960 <tcp_handle+0x3c4>
 8008890:	d861      	bhi.n	8008956 <tcp_handle+0x3ba>
 8008892:	3b03      	subs	r3, #3
 8008894:	2b01      	cmp	r3, #1
 8008896:	f63f aeef 	bhi.w	8008678 <tcp_handle+0xdc>
 800889a:	2307      	movs	r3, #7
 800889c:	e725      	b.n	80086ea <tcp_handle+0x14e>
 800889e:	bf00      	nop
 80088a0:	10000000 	andne	r0, r0, r0
 80088a4:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 80088a8:	100005f8 	strdne	r0, [r0], -r8
 80088ac:	10000634 	andne	r0, r0, r4, lsr r6
 80088b0:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80088b4:	1b99      	subs	r1, r3, r6
 80088b6:	d51a      	bpl.n	80088ee <tcp_handle+0x352>
 80088b8:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80088bc:	1ab2      	subs	r2, r6, r2
 80088be:	2a00      	cmp	r2, #0
 80088c0:	dc15      	bgt.n	80088ee <tcp_handle+0x352>
 80088c2:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80088c6:	f8d4 3610 	ldr.w	r3, [r4, #1552]	; 0x610
 80088ca:	1bda      	subs	r2, r3, r7
 80088cc:	2a00      	cmp	r2, #0
 80088ce:	db07      	blt.n	80088e0 <tcp_handle+0x344>
 80088d0:	42bb      	cmp	r3, r7
 80088d2:	d182      	bne.n	80087da <tcp_handle+0x23e>
 80088d4:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 80088d8:	1b9b      	subs	r3, r3, r6
 80088da:	2b00      	cmp	r3, #0
 80088dc:	f73f af7d 	bgt.w	80087da <tcp_handle+0x23e>
 80088e0:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80088e4:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80088e8:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80088ec:	e775      	b.n	80087da <tcp_handle+0x23e>
 80088ee:	1af3      	subs	r3, r6, r3
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	dc09      	bgt.n	8008908 <tcp_handle+0x36c>
 80088f4:	2900      	cmp	r1, #0
 80088f6:	f73f af70 	bgt.w	80087da <tcp_handle+0x23e>
 80088fa:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80088fe:	1af3      	subs	r3, r6, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f73f af6a 	bgt.w	80087da <tcp_handle+0x23e>
 8008906:	e7de      	b.n	80088c6 <tcp_handle+0x32a>
 8008908:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800890c:	1b9a      	subs	r2, r3, r6
 800890e:	2a00      	cmp	r2, #0
 8008910:	f6bf af63 	bge.w	80087da <tcp_handle+0x23e>
 8008914:	e725      	b.n	8008762 <tcp_handle+0x1c6>
 8008916:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800891a:	42b3      	cmp	r3, r6
 800891c:	f47f af5d 	bne.w	80087da <tcp_handle+0x23e>
 8008920:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008924:	4811      	ldr	r0, [pc, #68]	; (800896c <tcp_handle+0x3d0>)
 8008926:	f008 fdc7 	bl	80114b8 <_init_tcb>
 800892a:	e756      	b.n	80087da <tcp_handle+0x23e>
 800892c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008930:	42b3      	cmp	r3, r6
 8008932:	f47f af52 	bne.w	80087da <tcp_handle+0x23e>
 8008936:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800893a:	9302      	str	r3, [sp, #8]
 800893c:	480b      	ldr	r0, [pc, #44]	; (800896c <tcp_handle+0x3d0>)
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	2310      	movs	r3, #16
 8008942:	a901      	add	r1, sp, #4
 8008944:	f88d 300c 	strb.w	r3, [sp, #12]
 8008948:	f008 fe00 	bl	801154c <_tcp_send_package>
 800894c:	e745      	b.n	80087da <tcp_handle+0x23e>
 800894e:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008952:	9201      	str	r2, [sp, #4]
 8008954:	e708      	b.n	8008768 <tcp_handle+0x1cc>
 8008956:	2b06      	cmp	r3, #6
 8008958:	f47f ae8e 	bne.w	8008678 <tcp_handle+0xdc>
 800895c:	230a      	movs	r3, #10
 800895e:	e6c4      	b.n	80086ea <tcp_handle+0x14e>
 8008960:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008964:	42b3      	cmp	r3, r6
 8008966:	d0f9      	beq.n	800895c <tcp_handle+0x3c0>
 8008968:	2308      	movs	r3, #8
 800896a:	e6be      	b.n	80086ea <tcp_handle+0x14e>
 800896c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08008970 <udp_handle>:
 8008970:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008974:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8008976:	ba5b      	rev16	r3, r3
 8008978:	b29b      	uxth	r3, r3
 800897a:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800897e:	2a01      	cmp	r2, #1
 8008980:	4607      	mov	r7, r0
 8008982:	d904      	bls.n	800898e <udp_handle+0x1e>
 8008984:	2b7b      	cmp	r3, #123	; 0x7b
 8008986:	d002      	beq.n	800898e <udp_handle+0x1e>
 8008988:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800898c:	d308      	bcc.n	80089a0 <udp_handle+0x30>
 800898e:	4a21      	ldr	r2, [pc, #132]	; (8008a14 <udp_handle+0xa4>)
 8008990:	2400      	movs	r4, #0
 8008992:	f852 1b04 	ldr.w	r1, [r2], #4
 8008996:	4299      	cmp	r1, r3
 8008998:	d005      	beq.n	80089a6 <udp_handle+0x36>
 800899a:	3401      	adds	r4, #1
 800899c:	2c08      	cmp	r4, #8
 800899e:	d1f8      	bne.n	8008992 <udp_handle+0x22>
 80089a0:	b002      	add	sp, #8
 80089a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a6:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80089a8:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8008a18 <udp_handle+0xa8>
 80089ac:	f640 3394 	movw	r3, #2964	; 0xb94
 80089b0:	435c      	muls	r4, r3
 80089b2:	ba76      	rev16	r6, r6
 80089b4:	f838 5004 	ldrh.w	r5, [r8, r4]
 80089b8:	3e08      	subs	r6, #8
 80089ba:	b2b6      	uxth	r6, r6
 80089bc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80089c0:	435d      	muls	r5, r3
 80089c2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80089c6:	f104 0004 	add.w	r0, r4, #4
 80089ca:	bf28      	it	cs
 80089cc:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 80089d0:	4428      	add	r0, r5
 80089d2:	4632      	mov	r2, r6
 80089d4:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 80089d8:	4440      	add	r0, r8
 80089da:	f008 ff21 	bl	8011820 <memcpy.isra.0>
 80089de:	2204      	movs	r2, #4
 80089e0:	eb0d 0002 	add.w	r0, sp, r2
 80089e4:	f107 011a 	add.w	r1, r7, #26
 80089e8:	f008 ff1a 	bl	8011820 <memcpy.isra.0>
 80089ec:	192b      	adds	r3, r5, r4
 80089ee:	4443      	add	r3, r8
 80089f0:	9a01      	ldr	r2, [sp, #4]
 80089f2:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80089f6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80089f8:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80089fc:	ba52      	rev16	r2, r2
 80089fe:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8008a02:	f838 3004 	ldrh.w	r3, [r8, r4]
 8008a06:	3301      	adds	r3, #1
 8008a08:	f003 0301 	and.w	r3, r3, #1
 8008a0c:	f828 3004 	strh.w	r3, [r8, r4]
 8008a10:	e7c6      	b.n	80089a0 <udp_handle+0x30>
 8008a12:	bf00      	nop
 8008a14:	200092a8 	andcs	r9, r0, r8, lsr #5
 8008a18:	200092c8 	andcs	r9, r0, r8, asr #5

08008a1c <arp_handle>:
 8008a1c:	8a83      	ldrh	r3, [r0, #20]
 8008a1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a22:	d003      	beq.n	8008a2c <arp_handle+0x10>
 8008a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a28:	d002      	beq.n	8008a30 <arp_handle+0x14>
 8008a2a:	4770      	bx	lr
 8008a2c:	f00a b99c 	b.w	8012d68 <arp_handle_request>
 8008a30:	f00a b9c2 	b.w	8012db8 <arp_handle_reply>

08008a34 <igmp_handle>:
 8008a34:	7b83      	ldrb	r3, [r0, #14]
 8008a36:	2b45      	cmp	r3, #69	; 0x45
 8008a38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a3c:	d117      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a3e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008a42:	2b11      	cmp	r3, #17
 8008a44:	d113      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a46:	4b21      	ldr	r3, [pc, #132]	; (8008acc <igmp_handle+0x98>)
 8008a48:	9300      	str	r3, [sp, #0]
 8008a4a:	f100 051d 	add.w	r5, r0, #29
 8008a4e:	466a      	mov	r2, sp
 8008a50:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8008a54:	462b      	mov	r3, r5
 8008a56:	42b3      	cmp	r3, r6
 8008a58:	d10c      	bne.n	8008a74 <igmp_handle+0x40>
 8008a5a:	2401      	movs	r4, #1
 8008a5c:	4b1c      	ldr	r3, [pc, #112]	; (8008ad0 <igmp_handle+0x9c>)
 8008a5e:	2100      	movs	r1, #0
 8008a60:	f8d3 729c 	ldr.w	r7, [r3, #668]	; 0x29c
 8008a64:	f04f 0c01 	mov.w	ip, #1
 8008a68:	336c      	adds	r3, #108	; 0x6c
 8008a6a:	428f      	cmp	r7, r1
 8008a6c:	d10a      	bne.n	8008a84 <igmp_handle+0x50>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a74:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008a78:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8008a7c:	428c      	cmp	r4, r1
 8008a7e:	d0ea      	beq.n	8008a56 <igmp_handle+0x22>
 8008a80:	2400      	movs	r4, #0
 8008a82:	e7eb      	b.n	8008a5c <igmp_handle+0x28>
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	9201      	str	r2, [sp, #4]
 8008a88:	b924      	cbnz	r4, 8008a94 <igmp_handle+0x60>
 8008a8a:	f10d 0e04 	add.w	lr, sp, #4
 8008a8e:	462a      	mov	r2, r5
 8008a90:	42b2      	cmp	r2, r6
 8008a92:	d10e      	bne.n	8008ab2 <igmp_handle+0x7e>
 8008a94:	f893 e005 	ldrb.w	lr, [r3, #5]
 8008a98:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 8008a9c:	f1be 0f01 	cmp.w	lr, #1
 8008aa0:	d110      	bne.n	8008ac4 <igmp_handle+0x90>
 8008aa2:	f893 e004 	ldrb.w	lr, [r3, #4]
 8008aa6:	4596      	cmp	lr, r2
 8008aa8:	d909      	bls.n	8008abe <igmp_handle+0x8a>
 8008aaa:	0852      	lsrs	r2, r2, #1
 8008aac:	3201      	adds	r2, #1
 8008aae:	711a      	strb	r2, [r3, #4]
 8008ab0:	e005      	b.n	8008abe <igmp_handle+0x8a>
 8008ab2:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8008ab6:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 8008aba:	45c1      	cmp	r9, r8
 8008abc:	d0e8      	beq.n	8008a90 <igmp_handle+0x5c>
 8008abe:	3101      	adds	r1, #1
 8008ac0:	3308      	adds	r3, #8
 8008ac2:	e7d2      	b.n	8008a6a <igmp_handle+0x36>
 8008ac4:	f883 c005 	strb.w	ip, [r3, #5]
 8008ac8:	e7ef      	b.n	8008aaa <igmp_handle+0x76>
 8008aca:	bf00      	nop
 8008acc:	010000e0 	smlatteq	r0, r0, r0, r0
 8008ad0:	10001328 	andne	r1, r0, r8, lsr #6

08008ad4 <ip_handle>:
 8008ad4:	7b82      	ldrb	r2, [r0, #14]
 8008ad6:	7dc3      	ldrb	r3, [r0, #23]
 8008ad8:	2a45      	cmp	r2, #69	; 0x45
 8008ada:	d003      	beq.n	8008ae4 <ip_handle+0x10>
 8008adc:	2b02      	cmp	r3, #2
 8008ade:	d111      	bne.n	8008b04 <ip_handle+0x30>
 8008ae0:	f7ff bfa8 	b.w	8008a34 <igmp_handle>
 8008ae4:	2b06      	cmp	r3, #6
 8008ae6:	d00b      	beq.n	8008b00 <ip_handle+0x2c>
 8008ae8:	d804      	bhi.n	8008af4 <ip_handle+0x20>
 8008aea:	2b01      	cmp	r3, #1
 8008aec:	d006      	beq.n	8008afc <ip_handle+0x28>
 8008aee:	2b02      	cmp	r3, #2
 8008af0:	d0f6      	beq.n	8008ae0 <ip_handle+0xc>
 8008af2:	4770      	bx	lr
 8008af4:	2b11      	cmp	r3, #17
 8008af6:	d105      	bne.n	8008b04 <ip_handle+0x30>
 8008af8:	f7ff bf3a 	b.w	8008970 <udp_handle>
 8008afc:	f000 b804 	b.w	8008b08 <icmp_handle>
 8008b00:	f7ff bd4c 	b.w	800859c <tcp_handle>
 8008b04:	4770      	bx	lr
	...

08008b08 <icmp_handle>:
 8008b08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b0a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008b0e:	2b08      	cmp	r3, #8
 8008b10:	4604      	mov	r4, r0
 8008b12:	d13e      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b14:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8008b18:	2d00      	cmp	r5, #0
 8008b1a:	d13a      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b1c:	1d86      	adds	r6, r0, #6
 8008b1e:	4631      	mov	r1, r6
 8008b20:	2206      	movs	r2, #6
 8008b22:	f00a fcd9 	bl	80134d8 <memcpy.isra.0>
 8008b26:	4630      	mov	r0, r6
 8008b28:	491b      	ldr	r1, [pc, #108]	; (8008b98 <icmp_handle+0x90>)
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	f00a fcd4 	bl	80134d8 <memcpy.isra.0>
 8008b30:	8a63      	ldrh	r3, [r4, #18]
 8008b32:	f104 061a 	add.w	r6, r4, #26
 8008b36:	43db      	mvns	r3, r3
 8008b38:	4631      	mov	r1, r6
 8008b3a:	8263      	strh	r3, [r4, #18]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	f104 001e 	add.w	r0, r4, #30
 8008b42:	f00a fcc9 	bl	80134d8 <memcpy.isra.0>
 8008b46:	4b15      	ldr	r3, [pc, #84]	; (8008b9c <icmp_handle+0x94>)
 8008b48:	2204      	movs	r2, #4
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	9301      	str	r3, [sp, #4]
 8008b4e:	eb0d 0102 	add.w	r1, sp, r2
 8008b52:	4630      	mov	r0, r6
 8008b54:	f104 060e 	add.w	r6, r4, #14
 8008b58:	f00a fcbe 	bl	80134d8 <memcpy.isra.0>
 8008b5c:	2114      	movs	r1, #20
 8008b5e:	7625      	strb	r5, [r4, #24]
 8008b60:	7665      	strb	r5, [r4, #25]
 8008b62:	4630      	mov	r0, r6
 8008b64:	f00a fc8d 	bl	8013482 <net_chksum>
 8008b68:	8a21      	ldrh	r1, [r4, #16]
 8008b6a:	8320      	strh	r0, [r4, #24]
 8008b6c:	ba49      	rev16	r1, r1
 8008b6e:	b289      	uxth	r1, r1
 8008b70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8008b74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8008b78:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8008b7c:	4630      	mov	r0, r6
 8008b7e:	f00a fc80 	bl	8013482 <net_chksum>
 8008b82:	8a21      	ldrh	r1, [r4, #16]
 8008b84:	84a0      	strh	r0, [r4, #36]	; 0x24
 8008b86:	ba49      	rev16	r1, r1
 8008b88:	b289      	uxth	r1, r1
 8008b8a:	310e      	adds	r1, #14
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f00e f931 	bl	8016df4 <emac_eth_send>
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop
 8008b98:	20009278 	andcs	r9, r0, r8, ror r2
 8008b9c:	2000926c 	andcs	r9, r0, ip, ror #4
 8008ba0:	0801ae70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, sp, pc}
 8008ba4:	20000000 	andcs	r0, r0, r0
 8008ba8:	200000f8 	strdcs	r0, [r0], -r8
 8008bac:	200000f8 	strdcs	r0, [r0], -r8
 8008bb0:	2002d320 	andcs	sp, r2, r0, lsr #6

08008bb4 <Reset_Handler>:
 8008bb4:	2100      	movs	r1, #0
 8008bb6:	e003      	b.n	8008bc0 <DataInit>

08008bb8 <CopyData>:
 8008bb8:	4b0a      	ldr	r3, [pc, #40]	; (8008be4 <Zerobss+0x10>)
 8008bba:	585b      	ldr	r3, [r3, r1]
 8008bbc:	5043      	str	r3, [r0, r1]
 8008bbe:	3104      	adds	r1, #4

08008bc0 <DataInit>:
 8008bc0:	4809      	ldr	r0, [pc, #36]	; (8008be8 <Zerobss+0x14>)
 8008bc2:	4b0a      	ldr	r3, [pc, #40]	; (8008bec <Zerobss+0x18>)
 8008bc4:	1842      	adds	r2, r0, r1
 8008bc6:	429a      	cmp	r2, r3
 8008bc8:	d3f6      	bcc.n	8008bb8 <CopyData>
 8008bca:	4a09      	ldr	r2, [pc, #36]	; (8008bf0 <Zerobss+0x1c>)
 8008bcc:	e002      	b.n	8008bd4 <Zerobss>

08008bce <FillZerobss>:
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f842 3b04 	str.w	r3, [r2], #4

08008bd4 <Zerobss>:
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <Zerobss+0x20>)
 8008bd6:	429a      	cmp	r2, r3
 8008bd8:	d3f9      	bcc.n	8008bce <FillZerobss>
 8008bda:	f00c fecd 	bl	8015978 <SystemInit>
 8008bde:	f000 fc15 	bl	800940c <main>
 8008be2:	4770      	bx	lr
 8008be4:	0801ae70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, sp, pc}
 8008be8:	20000000 	andcs	r0, r0, r0
 8008bec:	200000f8 	strdcs	r0, [r0], -r8
 8008bf0:	200000f8 	strdcs	r0, [r0], -r8
 8008bf4:	2002d320 	andcs	sp, r2, r0, lsr #6

08008bf8 <__aeabi_d2f>:
 8008bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8008c00:	bf24      	itt	cs
 8008c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8008c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8008c0a:	d90d      	bls.n	8008c28 <__aeabi_d2f+0x30>
 8008c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8008c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008c20:	bf08      	it	eq
 8008c22:	f020 0001 	biceq.w	r0, r0, #1
 8008c26:	4770      	bx	lr
 8008c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8008c2c:	d121      	bne.n	8008c72 <__aeabi_d2f+0x7a>
 8008c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8008c32:	bfbc      	itt	lt
 8008c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8008c38:	4770      	bxlt	lr
 8008c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008c42:	f1c2 0218 	rsb	r2, r2, #24
 8008c46:	f1c2 0c20 	rsb	ip, r2, #32
 8008c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8008c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8008c52:	bf18      	it	ne
 8008c54:	f040 0001 	orrne.w	r0, r0, #1
 8008c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008c64:	ea40 000c 	orr.w	r0, r0, ip
 8008c68:	fa23 f302 	lsr.w	r3, r3, r2
 8008c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008c70:	e7cc      	b.n	8008c0c <__aeabi_d2f+0x14>
 8008c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008c76:	d107      	bne.n	8008c88 <__aeabi_d2f+0x90>
 8008c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008c7c:	bf1e      	ittt	ne
 8008c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8008c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8008c86:	4770      	bxne	lr
 8008c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8008c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop

08008c98 <__aeabi_uldivmod>:
 8008c98:	b953      	cbnz	r3, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9a:	b94a      	cbnz	r2, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9c:	2900      	cmp	r1, #0
 8008c9e:	bf08      	it	eq
 8008ca0:	2800      	cmpeq	r0, #0
 8008ca2:	bf1c      	itt	ne
 8008ca4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008ca8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008cac:	f000 b80c 	b.w	8008cc8 <__aeabi_idiv0>
 8008cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8008cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008cb8:	f001 fbc0 	bl	800a43c <__udivmoddi4>
 8008cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr

08008cc8 <__aeabi_idiv0>:
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop

08008ccc <__aeabi_drsub>:
 8008ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008cd0:	e002      	b.n	8008cd8 <__adddf3>
 8008cd2:	bf00      	nop

08008cd4 <__aeabi_dsub>:
 8008cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008cd8 <__adddf3>:
 8008cd8:	b530      	push	{r4, r5, lr}
 8008cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008ce2:	ea94 0f05 	teq	r4, r5
 8008ce6:	bf08      	it	eq
 8008ce8:	ea90 0f02 	teqeq	r0, r2
 8008cec:	bf1f      	itttt	ne
 8008cee:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008cfe:	f000 80e2 	beq.w	8008ec6 <__adddf3+0x1ee>
 8008d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008d0a:	bfb8      	it	lt
 8008d0c:	426d      	neglt	r5, r5
 8008d0e:	dd0c      	ble.n	8008d2a <__adddf3+0x52>
 8008d10:	442c      	add	r4, r5
 8008d12:	ea80 0202 	eor.w	r2, r0, r2
 8008d16:	ea81 0303 	eor.w	r3, r1, r3
 8008d1a:	ea82 0000 	eor.w	r0, r2, r0
 8008d1e:	ea83 0101 	eor.w	r1, r3, r1
 8008d22:	ea80 0202 	eor.w	r2, r0, r2
 8008d26:	ea81 0303 	eor.w	r3, r1, r3
 8008d2a:	2d36      	cmp	r5, #54	; 0x36
 8008d2c:	bf88      	it	hi
 8008d2e:	bd30      	pophi	{r4, r5, pc}
 8008d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008d40:	d002      	beq.n	8008d48 <__adddf3+0x70>
 8008d42:	4240      	negs	r0, r0
 8008d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008d54:	d002      	beq.n	8008d5c <__adddf3+0x84>
 8008d56:	4252      	negs	r2, r2
 8008d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5c:	ea94 0f05 	teq	r4, r5
 8008d60:	f000 80a7 	beq.w	8008eb2 <__adddf3+0x1da>
 8008d64:	f1a4 0401 	sub.w	r4, r4, #1
 8008d68:	f1d5 0e20 	rsbs	lr, r5, #32
 8008d6c:	db0d      	blt.n	8008d8a <__adddf3+0xb2>
 8008d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008d72:	fa22 f205 	lsr.w	r2, r2, r5
 8008d76:	1880      	adds	r0, r0, r2
 8008d78:	f141 0100 	adc.w	r1, r1, #0
 8008d7c:	fa03 f20e 	lsl.w	r2, r3, lr
 8008d80:	1880      	adds	r0, r0, r2
 8008d82:	fa43 f305 	asr.w	r3, r3, r5
 8008d86:	4159      	adcs	r1, r3
 8008d88:	e00e      	b.n	8008da8 <__adddf3+0xd0>
 8008d8a:	f1a5 0520 	sub.w	r5, r5, #32
 8008d8e:	f10e 0e20 	add.w	lr, lr, #32
 8008d92:	2a01      	cmp	r2, #1
 8008d94:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008d98:	bf28      	it	cs
 8008d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008d9e:	fa43 f305 	asr.w	r3, r3, r5
 8008da2:	18c0      	adds	r0, r0, r3
 8008da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008dac:	d507      	bpl.n	8008dbe <__adddf3+0xe6>
 8008dae:	f04f 0e00 	mov.w	lr, #0
 8008db2:	f1dc 0c00 	rsbs	ip, ip, #0
 8008db6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008dba:	eb6e 0101 	sbc.w	r1, lr, r1
 8008dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008dc2:	d31b      	bcc.n	8008dfc <__adddf3+0x124>
 8008dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008dc8:	d30c      	bcc.n	8008de4 <__adddf3+0x10c>
 8008dca:	0849      	lsrs	r1, r1, #1
 8008dcc:	ea5f 0030 	movs.w	r0, r0, rrx
 8008dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008dd4:	f104 0401 	add.w	r4, r4, #1
 8008dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008de0:	f080 809a 	bcs.w	8008f18 <__adddf3+0x240>
 8008de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008de8:	bf08      	it	eq
 8008dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008dee:	f150 0000 	adcs.w	r0, r0, #0
 8008df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008df6:	ea41 0105 	orr.w	r1, r1, r5
 8008dfa:	bd30      	pop	{r4, r5, pc}
 8008dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008e00:	4140      	adcs	r0, r0
 8008e02:	eb41 0101 	adc.w	r1, r1, r1
 8008e06:	3c01      	subs	r4, #1
 8008e08:	bf28      	it	cs
 8008e0a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8008e0e:	d2e9      	bcs.n	8008de4 <__adddf3+0x10c>
 8008e10:	f091 0f00 	teq	r1, #0
 8008e14:	bf04      	itt	eq
 8008e16:	4601      	moveq	r1, r0
 8008e18:	2000      	moveq	r0, #0
 8008e1a:	fab1 f381 	clz	r3, r1
 8008e1e:	bf08      	it	eq
 8008e20:	3320      	addeq	r3, #32
 8008e22:	f1a3 030b 	sub.w	r3, r3, #11
 8008e26:	f1b3 0220 	subs.w	r2, r3, #32
 8008e2a:	da0c      	bge.n	8008e46 <__adddf3+0x16e>
 8008e2c:	320c      	adds	r2, #12
 8008e2e:	dd08      	ble.n	8008e42 <__adddf3+0x16a>
 8008e30:	f102 0c14 	add.w	ip, r2, #20
 8008e34:	f1c2 020c 	rsb	r2, r2, #12
 8008e38:	fa01 f00c 	lsl.w	r0, r1, ip
 8008e3c:	fa21 f102 	lsr.w	r1, r1, r2
 8008e40:	e00c      	b.n	8008e5c <__adddf3+0x184>
 8008e42:	f102 0214 	add.w	r2, r2, #20
 8008e46:	bfd8      	it	le
 8008e48:	f1c2 0c20 	rsble	ip, r2, #32
 8008e4c:	fa01 f102 	lsl.w	r1, r1, r2
 8008e50:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008e54:	bfdc      	itt	le
 8008e56:	ea41 010c 	orrle.w	r1, r1, ip
 8008e5a:	4090      	lslle	r0, r2
 8008e5c:	1ae4      	subs	r4, r4, r3
 8008e5e:	bfa2      	ittt	ge
 8008e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008e64:	4329      	orrge	r1, r5
 8008e66:	bd30      	popge	{r4, r5, pc}
 8008e68:	ea6f 0404 	mvn.w	r4, r4
 8008e6c:	3c1f      	subs	r4, #31
 8008e6e:	da1c      	bge.n	8008eaa <__adddf3+0x1d2>
 8008e70:	340c      	adds	r4, #12
 8008e72:	dc0e      	bgt.n	8008e92 <__adddf3+0x1ba>
 8008e74:	f104 0414 	add.w	r4, r4, #20
 8008e78:	f1c4 0220 	rsb	r2, r4, #32
 8008e7c:	fa20 f004 	lsr.w	r0, r0, r4
 8008e80:	fa01 f302 	lsl.w	r3, r1, r2
 8008e84:	ea40 0003 	orr.w	r0, r0, r3
 8008e88:	fa21 f304 	lsr.w	r3, r1, r4
 8008e8c:	ea45 0103 	orr.w	r1, r5, r3
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	f1c4 040c 	rsb	r4, r4, #12
 8008e96:	f1c4 0220 	rsb	r2, r4, #32
 8008e9a:	fa20 f002 	lsr.w	r0, r0, r2
 8008e9e:	fa01 f304 	lsl.w	r3, r1, r4
 8008ea2:	ea40 0003 	orr.w	r0, r0, r3
 8008ea6:	4629      	mov	r1, r5
 8008ea8:	bd30      	pop	{r4, r5, pc}
 8008eaa:	fa21 f004 	lsr.w	r0, r1, r4
 8008eae:	4629      	mov	r1, r5
 8008eb0:	bd30      	pop	{r4, r5, pc}
 8008eb2:	f094 0f00 	teq	r4, #0
 8008eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008eba:	bf06      	itte	eq
 8008ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008ec0:	3401      	addeq	r4, #1
 8008ec2:	3d01      	subne	r5, #1
 8008ec4:	e74e      	b.n	8008d64 <__adddf3+0x8c>
 8008ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008eca:	bf18      	it	ne
 8008ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008ed0:	d029      	beq.n	8008f26 <__adddf3+0x24e>
 8008ed2:	ea94 0f05 	teq	r4, r5
 8008ed6:	bf08      	it	eq
 8008ed8:	ea90 0f02 	teqeq	r0, r2
 8008edc:	d005      	beq.n	8008eea <__adddf3+0x212>
 8008ede:	ea54 0c00 	orrs.w	ip, r4, r0
 8008ee2:	bf04      	itt	eq
 8008ee4:	4619      	moveq	r1, r3
 8008ee6:	4610      	moveq	r0, r2
 8008ee8:	bd30      	pop	{r4, r5, pc}
 8008eea:	ea91 0f03 	teq	r1, r3
 8008eee:	bf1e      	ittt	ne
 8008ef0:	2100      	movne	r1, #0
 8008ef2:	2000      	movne	r0, #0
 8008ef4:	bd30      	popne	{r4, r5, pc}
 8008ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008efa:	d105      	bne.n	8008f08 <__adddf3+0x230>
 8008efc:	0040      	lsls	r0, r0, #1
 8008efe:	4149      	adcs	r1, r1
 8008f00:	bf28      	it	cs
 8008f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008f06:	bd30      	pop	{r4, r5, pc}
 8008f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008f0c:	bf3c      	itt	cc
 8008f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008f12:	bd30      	popcc	{r4, r5, pc}
 8008f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008f20:	f04f 0000 	mov.w	r0, #0
 8008f24:	bd30      	pop	{r4, r5, pc}
 8008f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008f2a:	bf1a      	itte	ne
 8008f2c:	4619      	movne	r1, r3
 8008f2e:	4610      	movne	r0, r2
 8008f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008f34:	bf1c      	itt	ne
 8008f36:	460b      	movne	r3, r1
 8008f38:	4602      	movne	r2, r0
 8008f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008f3e:	bf06      	itte	eq
 8008f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008f44:	ea91 0f03 	teqeq	r1, r3
 8008f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008f4c:	bd30      	pop	{r4, r5, pc}
 8008f4e:	bf00      	nop

08008f50 <__aeabi_ui2d>:
 8008f50:	f090 0f00 	teq	r0, #0
 8008f54:	bf04      	itt	eq
 8008f56:	2100      	moveq	r1, #0
 8008f58:	4770      	bxeq	lr
 8008f5a:	b530      	push	{r4, r5, lr}
 8008f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f64:	f04f 0500 	mov.w	r5, #0
 8008f68:	f04f 0100 	mov.w	r1, #0
 8008f6c:	e750      	b.n	8008e10 <__adddf3+0x138>
 8008f6e:	bf00      	nop

08008f70 <__aeabi_i2d>:
 8008f70:	f090 0f00 	teq	r0, #0
 8008f74:	bf04      	itt	eq
 8008f76:	2100      	moveq	r1, #0
 8008f78:	4770      	bxeq	lr
 8008f7a:	b530      	push	{r4, r5, lr}
 8008f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008f88:	bf48      	it	mi
 8008f8a:	4240      	negmi	r0, r0
 8008f8c:	f04f 0100 	mov.w	r1, #0
 8008f90:	e73e      	b.n	8008e10 <__adddf3+0x138>
 8008f92:	bf00      	nop

08008f94 <__aeabi_f2d>:
 8008f94:	0042      	lsls	r2, r0, #1
 8008f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008f9a:	ea4f 0131 	mov.w	r1, r1, rrx
 8008f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8008fa2:	bf1f      	itttt	ne
 8008fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008fb0:	4770      	bxne	lr
 8008fb2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008fb6:	bf08      	it	eq
 8008fb8:	4770      	bxeq	lr
 8008fba:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008fbe:	bf04      	itt	eq
 8008fc0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008fc4:	4770      	bxeq	lr
 8008fc6:	b530      	push	{r4, r5, lr}
 8008fc8:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008fd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008fd4:	e71c      	b.n	8008e10 <__adddf3+0x138>
 8008fd6:	bf00      	nop

08008fd8 <__aeabi_ul2d>:
 8008fd8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fdc:	bf08      	it	eq
 8008fde:	4770      	bxeq	lr
 8008fe0:	b530      	push	{r4, r5, lr}
 8008fe2:	f04f 0500 	mov.w	r5, #0
 8008fe6:	e00a      	b.n	8008ffe <__aeabi_l2d+0x16>

08008fe8 <__aeabi_l2d>:
 8008fe8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fec:	bf08      	it	eq
 8008fee:	4770      	bxeq	lr
 8008ff0:	b530      	push	{r4, r5, lr}
 8008ff2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008ff6:	d502      	bpl.n	8008ffe <__aeabi_l2d+0x16>
 8008ff8:	4240      	negs	r0, r0
 8008ffa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ffe:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009002:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009006:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800900a:	f43f aed8 	beq.w	8008dbe <__adddf3+0xe6>
 800900e:	f04f 0203 	mov.w	r2, #3
 8009012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009016:	bf18      	it	ne
 8009018:	3203      	addne	r2, #3
 800901a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800901e:	bf18      	it	ne
 8009020:	3203      	addne	r2, #3
 8009022:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009026:	f1c2 0320 	rsb	r3, r2, #32
 800902a:	fa00 fc03 	lsl.w	ip, r0, r3
 800902e:	fa20 f002 	lsr.w	r0, r0, r2
 8009032:	fa01 fe03 	lsl.w	lr, r1, r3
 8009036:	ea40 000e 	orr.w	r0, r0, lr
 800903a:	fa21 f102 	lsr.w	r1, r1, r2
 800903e:	4414      	add	r4, r2
 8009040:	e6bd      	b.n	8008dbe <__adddf3+0xe6>
 8009042:	bf00      	nop

08009044 <ADC_IRQHandler>:
 8009044:	e7fe      	b.n	8009044 <ADC_IRQHandler>

08009046 <memcmp>:
 8009046:	b510      	push	{r4, lr}
 8009048:	3901      	subs	r1, #1
 800904a:	4402      	add	r2, r0
 800904c:	4290      	cmp	r0, r2
 800904e:	d101      	bne.n	8009054 <memcmp+0xe>
 8009050:	2000      	movs	r0, #0
 8009052:	e005      	b.n	8009060 <memcmp+0x1a>
 8009054:	7803      	ldrb	r3, [r0, #0]
 8009056:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800905a:	42a3      	cmp	r3, r4
 800905c:	d001      	beq.n	8009062 <memcmp+0x1c>
 800905e:	1b18      	subs	r0, r3, r4
 8009060:	bd10      	pop	{r4, pc}
 8009062:	3001      	adds	r0, #1
 8009064:	e7f2      	b.n	800904c <memcmp+0x6>

08009066 <memcpy>:
 8009066:	b510      	push	{r4, lr}
 8009068:	1e43      	subs	r3, r0, #1
 800906a:	440a      	add	r2, r1
 800906c:	4291      	cmp	r1, r2
 800906e:	d100      	bne.n	8009072 <memcpy+0xc>
 8009070:	bd10      	pop	{r4, pc}
 8009072:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009076:	f803 4f01 	strb.w	r4, [r3, #1]!
 800907a:	e7f7      	b.n	800906c <memcpy+0x6>

0800907c <LightSet::FullOn()>:
 800907c:	4770      	bx	lr

0800907e <DisplayHandler::~DisplayHandler()>:
 800907e:	4770      	bx	lr

08009080 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8009080:	4770      	bx	lr
	...

08009084 <PixelDmxStartStop::Start()>:
 8009084:	4b02      	ldr	r3, [pc, #8]	; (8009090 <PixelDmxStartStop::Start()+0xc>)
 8009086:	2204      	movs	r2, #4
 8009088:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	40020000 	andmi	r0, r2, r0

08009094 <PixelDmxStartStop::Stop()>:
 8009094:	4b02      	ldr	r3, [pc, #8]	; (80090a0 <PixelDmxStartStop::Stop()+0xc>)
 8009096:	2204      	movs	r2, #4
 8009098:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800909c:	4770      	bx	lr
 800909e:	bf00      	nop
 80090a0:	40020000 	andmi	r0, r2, r0

080090a4 <dmxconfigudp::atoi(char const*, unsigned int)>:
 80090a4:	b530      	push	{r4, r5, lr}
 80090a6:	4401      	add	r1, r0
 80090a8:	2300      	movs	r3, #0
 80090aa:	250a      	movs	r5, #10
 80090ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80090b0:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80090b4:	2c09      	cmp	r4, #9
 80090b6:	d805      	bhi.n	80090c4 <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
 80090b8:	fb05 2303 	mla	r3, r5, r3, r2
 80090bc:	4281      	cmp	r1, r0
 80090be:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 80090c2:	d1f3      	bne.n	80090ac <dmxconfigudp::atoi(char const*, unsigned int)+0x8>
 80090c4:	4618      	mov	r0, r3
 80090c6:	bd30      	pop	{r4, r5, pc}

080090c8 <LightSet64with4::~LightSet64with4()>:
 80090c8:	4770      	bx	lr

080090ca <LightSet64with4::Start(unsigned int)>:
 80090ca:	291f      	cmp	r1, #31
 80090cc:	460b      	mov	r3, r1
 80090ce:	d805      	bhi.n	80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d0:	6842      	ldr	r2, [r0, #4]
 80090d2:	b11a      	cbz	r2, 80090dc <LightSet64with4::Start(unsigned int)+0x12>
 80090d4:	6813      	ldr	r3, [r2, #0]
 80090d6:	4610      	mov	r0, r2
 80090d8:	689b      	ldr	r3, [r3, #8]
 80090da:	4718      	bx	r3
 80090dc:	6880      	ldr	r0, [r0, #8]
 80090de:	b120      	cbz	r0, 80090ea <LightSet64with4::Start(unsigned int)+0x20>
 80090e0:	6802      	ldr	r2, [r0, #0]
 80090e2:	f003 0103 	and.w	r1, r3, #3
 80090e6:	6892      	ldr	r2, [r2, #8]
 80090e8:	4710      	bx	r2
 80090ea:	4770      	bx	lr

080090ec <LightSet64with4::Stop(unsigned int)>:
 80090ec:	293f      	cmp	r1, #63	; 0x3f
 80090ee:	460b      	mov	r3, r1
 80090f0:	d805      	bhi.n	80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f2:	6842      	ldr	r2, [r0, #4]
 80090f4:	b11a      	cbz	r2, 80090fe <LightSet64with4::Stop(unsigned int)+0x12>
 80090f6:	6813      	ldr	r3, [r2, #0]
 80090f8:	4610      	mov	r0, r2
 80090fa:	68db      	ldr	r3, [r3, #12]
 80090fc:	4718      	bx	r3
 80090fe:	6880      	ldr	r0, [r0, #8]
 8009100:	b120      	cbz	r0, 800910c <LightSet64with4::Stop(unsigned int)+0x20>
 8009102:	6802      	ldr	r2, [r0, #0]
 8009104:	f003 0103 	and.w	r1, r3, #3
 8009108:	68d2      	ldr	r2, [r2, #12]
 800910a:	4710      	bx	r2
 800910c:	4770      	bx	lr

0800910e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800910e:	293f      	cmp	r1, #63	; 0x3f
 8009110:	b4f0      	push	{r4, r5, r6, r7}
 8009112:	460c      	mov	r4, r1
 8009114:	4615      	mov	r5, r2
 8009116:	461e      	mov	r6, r3
 8009118:	d807      	bhi.n	800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911a:	6847      	ldr	r7, [r0, #4]
 800911c:	b12f      	cbz	r7, 800912a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 800911e:	6838      	ldr	r0, [r7, #0]
 8009120:	6904      	ldr	r4, [r0, #16]
 8009122:	4638      	mov	r0, r7
 8009124:	46a4      	mov	ip, r4
 8009126:	bcf0      	pop	{r4, r5, r6, r7}
 8009128:	4760      	bx	ip
 800912a:	6880      	ldr	r0, [r0, #8]
 800912c:	b138      	cbz	r0, 800913e <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x30>
 800912e:	6803      	ldr	r3, [r0, #0]
 8009130:	691f      	ldr	r7, [r3, #16]
 8009132:	462a      	mov	r2, r5
 8009134:	4633      	mov	r3, r6
 8009136:	f004 0103 	and.w	r1, r4, #3
 800913a:	46bc      	mov	ip, r7
 800913c:	e7f3      	b.n	8009126 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x18>
 800913e:	bcf0      	pop	{r4, r5, r6, r7}
 8009140:	4770      	bx	lr

08009142 <LightSet64with4::Blackout(bool)>:
 8009142:	b570      	push	{r4, r5, r6, lr}
 8009144:	4604      	mov	r4, r0
 8009146:	6840      	ldr	r0, [r0, #4]
 8009148:	460d      	mov	r5, r1
 800914a:	b110      	cbz	r0, 8009152 <LightSet64with4::Blackout(bool)+0x10>
 800914c:	6803      	ldr	r3, [r0, #0]
 800914e:	695b      	ldr	r3, [r3, #20]
 8009150:	4798      	blx	r3
 8009152:	68a0      	ldr	r0, [r4, #8]
 8009154:	b128      	cbz	r0, 8009162 <LightSet64with4::Blackout(bool)+0x20>
 8009156:	6803      	ldr	r3, [r0, #0]
 8009158:	4629      	mov	r1, r5
 800915a:	695b      	ldr	r3, [r3, #20]
 800915c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009160:	4718      	bx	r3
 8009162:	bd70      	pop	{r4, r5, r6, pc}

08009164 <LightSet64with4::Print()>:
 8009164:	b510      	push	{r4, lr}
 8009166:	4604      	mov	r4, r0
 8009168:	6840      	ldr	r0, [r0, #4]
 800916a:	b110      	cbz	r0, 8009172 <LightSet64with4::Print()+0xe>
 800916c:	6803      	ldr	r3, [r0, #0]
 800916e:	69db      	ldr	r3, [r3, #28]
 8009170:	4798      	blx	r3
 8009172:	68a0      	ldr	r0, [r4, #8]
 8009174:	b120      	cbz	r0, 8009180 <LightSet64with4::Print()+0x1c>
 8009176:	6803      	ldr	r3, [r0, #0]
 8009178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800917c:	69db      	ldr	r3, [r3, #28]
 800917e:	4718      	bx	r3
 8009180:	bd10      	pop	{r4, pc}

08009182 <LightSet64with4::SetDmxStartAddress(unsigned short)>:
 8009182:	2000      	movs	r0, #0
 8009184:	4770      	bx	lr

08009186 <LightSet64with4::GetDmxStartAddress()>:
 8009186:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800918a:	4770      	bx	lr

0800918c <LightSet64with4::GetDmxFootprint()>:
 800918c:	2000      	movs	r0, #0
 800918e:	4770      	bx	lr

08009190 <LightSet64with4::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8009190:	2000      	movs	r0, #0
 8009192:	4770      	bx	lr

08009194 <RDMNetDevice::CopyUID(unsigned char*)>:
 8009194:	460b      	mov	r3, r1
 8009196:	2206      	movs	r2, #6
 8009198:	1d41      	adds	r1, r0, #5
 800919a:	4618      	mov	r0, r3
 800919c:	f7ff bf63 	b.w	8009066 <memcpy>

080091a0 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 80091a0:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091a4:	e7f6      	b.n	8009194 <RDMNetDevice::CopyUID(unsigned char*)>
	...

080091a8 <RDMNetDevice::CopyCID(unsigned char*)>:
 80091a8:	4608      	mov	r0, r1
 80091aa:	2210      	movs	r2, #16
 80091ac:	4901      	ldr	r1, [pc, #4]	; (80091b4 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 80091ae:	f7ff bf5a 	b.w	8009066 <memcpy>
 80091b2:	bf00      	nop
 80091b4:	200007e9 	andcs	r0, r0, r9, ror #15

080091b8 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 80091b8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091bc:	e7f4      	b.n	80091a8 <RDMNetDevice::CopyCID(unsigned char*)>
 80091be:	bf00      	nop

080091c0 <DisplayHandler::~DisplayHandler()>:
 80091c0:	b510      	push	{r4, lr}
 80091c2:	4604      	mov	r4, r0
 80091c4:	f00c f98a 	bl	80154dc <operator delete(void*)>
 80091c8:	4620      	mov	r0, r4
 80091ca:	bd10      	pop	{r4, pc}

080091cc <LightSet64with4::~LightSet64with4()>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	4604      	mov	r4, r0
 80091d0:	f00c f984 	bl	80154dc <operator delete(void*)>
 80091d4:	4620      	mov	r0, r4
 80091d6:	bd10      	pop	{r4, pc}

080091d8 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80091d8:	b510      	push	{r4, lr}
 80091da:	4604      	mov	r4, r0
 80091dc:	f00c f97e 	bl	80154dc <operator delete(void*)>
 80091e0:	4620      	mov	r0, r4
 80091e2:	bd10      	pop	{r4, pc}

080091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091e4:	b510      	push	{r4, lr}
 80091e6:	4c03      	ldr	r4, [pc, #12]	; (80091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80091e8:	30d0      	adds	r0, #208	; 0xd0
 80091ea:	4622      	mov	r2, r4
 80091ec:	f004 ff40 	bl	800e070 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 80091f0:	4620      	mov	r0, r4
 80091f2:	bd10      	pop	{r4, pc}
 80091f4:	200006e8 	andcs	r0, r0, r8, ror #13

080091f8 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091f8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80091fc:	e7f2      	b.n	80091e4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80091fe:	bf00      	nop

08009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8009200:	b110      	cbz	r0, 8009208 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8009202:	6803      	ldr	r3, [r0, #0]
 8009204:	6a1b      	ldr	r3, [r3, #32]
 8009206:	4718      	bx	r3
 8009208:	4770      	bx	lr

0800920a <Display::PutChar(int) [clone .isra.0]>:
 800920a:	b110      	cbz	r0, 8009212 <Display::PutChar(int) [clone .isra.0]+0x8>
 800920c:	6803      	ldr	r3, [r0, #0]
 800920e:	695b      	ldr	r3, [r3, #20]
 8009210:	4718      	bx	r3
 8009212:	4770      	bx	lr

08009214 <DisplayHandler::Print(unsigned int)>:
 8009214:	b538      	push	{r3, r4, r5, lr}
 8009216:	7903      	ldrb	r3, [r0, #4]
 8009218:	b1f3      	cbz	r3, 8009258 <DisplayHandler::Print(unsigned int)+0x44>
 800921a:	2904      	cmp	r1, #4
 800921c:	bf98      	it	ls
 800921e:	4b0f      	ldrls	r3, [pc, #60]	; (800925c <DisplayHandler::Print(unsigned int)+0x48>)
 8009220:	4d0f      	ldr	r5, [pc, #60]	; (8009260 <DisplayHandler::Print(unsigned int)+0x4c>)
 8009222:	bf98      	it	ls
 8009224:	5c5c      	ldrbls	r4, [r3, r1]
 8009226:	682b      	ldr	r3, [r5, #0]
 8009228:	6998      	ldr	r0, [r3, #24]
 800922a:	bf88      	it	hi
 800922c:	2455      	movhi	r4, #85	; 0x55
 800922e:	b178      	cbz	r0, 8009250 <DisplayHandler::Print(unsigned int)+0x3c>
 8009230:	7901      	ldrb	r1, [r0, #4]
 8009232:	3901      	subs	r1, #1
 8009234:	b2c9      	uxtb	r1, r1
 8009236:	b168      	cbz	r0, 8009254 <DisplayHandler::Print(unsigned int)+0x40>
 8009238:	7942      	ldrb	r2, [r0, #5]
 800923a:	3a01      	subs	r2, #1
 800923c:	b2d2      	uxtb	r2, r2
 800923e:	f7ff ffdf 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009242:	682b      	ldr	r3, [r5, #0]
 8009244:	4621      	mov	r1, r4
 8009246:	6998      	ldr	r0, [r3, #24]
 8009248:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800924c:	f7ff bfdd 	b.w	800920a <Display::PutChar(int) [clone .isra.0]>
 8009250:	4601      	mov	r1, r0
 8009252:	e7ee      	b.n	8009232 <DisplayHandler::Print(unsigned int)+0x1e>
 8009254:	4602      	mov	r2, r0
 8009256:	e7f0      	b.n	800923a <DisplayHandler::Print(unsigned int)+0x26>
 8009258:	bd38      	pop	{r3, r4, r5, pc}
 800925a:	bf00      	nop
 800925c:	08017d30 	stmdaeq	r1, {r4, r5, r8, sl, fp, ip, sp, lr}
 8009260:	2000fc90 	mulcs	r0, r0, ip

08009264 <RDMNetDevice::~RDMNetDevice()>:
 8009264:	b510      	push	{r4, lr}
 8009266:	4b06      	ldr	r3, [pc, #24]	; (8009280 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8009268:	4604      	mov	r4, r0
 800926a:	f840 3b8c 	str.w	r3, [r0], #140
 800926e:	f004 f9b1 	bl	800d5d4 <RDMSubDevices::~RDMSubDevices()>
 8009272:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8009276:	f004 f98d 	bl	800d594 <RDMSensors::~RDMSensors()>
 800927a:	4620      	mov	r0, r4
 800927c:	bd10      	pop	{r4, pc}
 800927e:	bf00      	nop
 8009280:	0801929c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, pc}

08009284 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8009284:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009288:	e7ec      	b.n	8009264 <RDMNetDevice::~RDMNetDevice()>
 800928a:	bf00      	nop

0800928c <RDMNetDevice::~RDMNetDevice()>:
 800928c:	b510      	push	{r4, lr}
 800928e:	4604      	mov	r4, r0
 8009290:	f7ff ffe8 	bl	8009264 <RDMNetDevice::~RDMNetDevice()>
 8009294:	4620      	mov	r0, r4
 8009296:	f00c f921 	bl	80154dc <operator delete(void*)>
 800929a:	4620      	mov	r0, r4
 800929c:	bd10      	pop	{r4, pc}

0800929e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800929e:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80092a2:	e7f3      	b.n	800928c <RDMNetDevice::~RDMNetDevice()>

080092a4 <Display::Printf(unsigned char, char const*, ...)>:
 80092a4:	b40c      	push	{r2, r3}
 80092a6:	b570      	push	{r4, r5, r6, lr}
 80092a8:	6984      	ldr	r4, [r0, #24]
 80092aa:	b08a      	sub	sp, #40	; 0x28
 80092ac:	4605      	mov	r5, r0
 80092ae:	460e      	mov	r6, r1
 80092b0:	b174      	cbz	r4, 80092d0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80092b2:	ab0f      	add	r3, sp, #60	; 0x3c
 80092b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80092b6:	9301      	str	r3, [sp, #4]
 80092b8:	2120      	movs	r1, #32
 80092ba:	a802      	add	r0, sp, #8
 80092bc:	f001 f8ae 	bl	800a41c <vsnprintf>
 80092c0:	4604      	mov	r4, r0
 80092c2:	69a8      	ldr	r0, [r5, #24]
 80092c4:	6803      	ldr	r3, [r0, #0]
 80092c6:	aa02      	add	r2, sp, #8
 80092c8:	69dd      	ldr	r5, [r3, #28]
 80092ca:	4631      	mov	r1, r6
 80092cc:	b2a3      	uxth	r3, r4
 80092ce:	47a8      	blx	r5
 80092d0:	4620      	mov	r0, r4
 80092d2:	b00a      	add	sp, #40	; 0x28
 80092d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092d8:	b002      	add	sp, #8
 80092da:	4770      	bx	lr

080092dc <Display::TextStatus(char const*)>:
 80092dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092e0:	4604      	mov	r4, r0
 80092e2:	6980      	ldr	r0, [r0, #24]
 80092e4:	460d      	mov	r5, r1
 80092e6:	b360      	cbz	r0, 8009342 <Display::TextStatus(char const*)+0x66>
 80092e8:	7946      	ldrb	r6, [r0, #5]
 80092ea:	f890 8004 	ldrb.w	r8, [r0, #4]
 80092ee:	1e72      	subs	r2, r6, #1
 80092f0:	b2d2      	uxtb	r2, r2
 80092f2:	2100      	movs	r1, #0
 80092f4:	9201      	str	r2, [sp, #4]
 80092f6:	f7ff ff83 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80092fa:	2700      	movs	r7, #0
 80092fc:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8009300:	45b8      	cmp	r8, r7
 8009302:	9a01      	ldr	r2, [sp, #4]
 8009304:	69a0      	ldr	r0, [r4, #24]
 8009306:	d816      	bhi.n	8009336 <Display::TextStatus(char const*)+0x5a>
 8009308:	2100      	movs	r1, #0
 800930a:	f7ff ff79 	bl	8009200 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800930e:	69a0      	ldr	r0, [r4, #24]
 8009310:	b1b8      	cbz	r0, 8009342 <Display::TextStatus(char const*)+0x66>
 8009312:	7901      	ldrb	r1, [r0, #4]
 8009314:	2300      	movs	r3, #0
 8009316:	5cea      	ldrb	r2, [r5, r3]
 8009318:	b11a      	cbz	r2, 8009322 <Display::TextStatus(char const*)+0x46>
 800931a:	1c5a      	adds	r2, r3, #1
 800931c:	4299      	cmp	r1, r3
 800931e:	4613      	mov	r3, r2
 8009320:	dcf9      	bgt.n	8009316 <Display::TextStatus(char const*)+0x3a>
 8009322:	6802      	ldr	r2, [r0, #0]
 8009324:	69d4      	ldr	r4, [r2, #28]
 8009326:	b2db      	uxtb	r3, r3
 8009328:	462a      	mov	r2, r5
 800932a:	4631      	mov	r1, r6
 800932c:	46a4      	mov	ip, r4
 800932e:	b002      	add	sp, #8
 8009330:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009334:	4760      	bx	ip
 8009336:	2120      	movs	r1, #32
 8009338:	9201      	str	r2, [sp, #4]
 800933a:	3701      	adds	r7, #1
 800933c:	f7ff ff65 	bl	800920a <Display::PutChar(int) [clone .isra.0]>
 8009340:	e7de      	b.n	8009300 <Display::TextStatus(char const*)+0x24>
 8009342:	b002      	add	sp, #8
 8009344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8009348:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800934a:	4605      	mov	r5, r0
 800934c:	461e      	mov	r6, r3
 800934e:	460f      	mov	r7, r1
 8009350:	4614      	mov	r4, r2
 8009352:	f7ff ffc3 	bl	80092dc <Display::TextStatus(char const*)>
 8009356:	7c6b      	ldrb	r3, [r5, #17]
 8009358:	b19b      	cbz	r3, 8009382 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 800935a:	43e2      	mvns	r2, r4
 800935c:	2312      	movs	r3, #18
 800935e:	7a28      	ldrb	r0, [r5, #8]
 8009360:	f88d 3004 	strb.w	r3, [sp, #4]
 8009364:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8009368:	f88d 3005 	strb.w	r3, [sp, #5]
 800936c:	f88d 2006 	strb.w	r2, [sp, #6]
 8009370:	f00d fe06 	bl	8016f80 <gd32_i2c_set_address>
 8009374:	68e8      	ldr	r0, [r5, #12]
 8009376:	f00d fdfb 	bl	8016f70 <gd32_i2c_set_baudrate>
 800937a:	2103      	movs	r1, #3
 800937c:	a801      	add	r0, sp, #4
 800937e:	f00d fe05 	bl	8016f8c <gd32_i2c_write>
 8009382:	1c73      	adds	r3, r6, #1
 8009384:	d006      	beq.n	8009394 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8009386:	4639      	mov	r1, r7
 8009388:	4630      	mov	r0, r6
 800938a:	b003      	add	sp, #12
 800938c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8009390:	f00b bf20 	b.w	80151d4 <console_status>
 8009394:	b003      	add	sp, #12
 8009396:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009398 <Display::SetSleep(bool)>:
 8009398:	b538      	push	{r3, r4, r5, lr}
 800939a:	4604      	mov	r4, r0
 800939c:	6980      	ldr	r0, [r0, #24]
 800939e:	460d      	mov	r5, r1
 80093a0:	b138      	cbz	r0, 80093b2 <Display::SetSleep(bool)+0x1a>
 80093a2:	6803      	ldr	r3, [r0, #0]
 80093a4:	7421      	strb	r1, [r4, #16]
 80093a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093a8:	4798      	blx	r3
 80093aa:	b915      	cbnz	r5, 80093b2 <Display::SetSleep(bool)+0x1a>
 80093ac:	4b01      	ldr	r3, [pc, #4]	; (80093b4 <Display::SetSleep(bool)+0x1c>)
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	6063      	str	r3, [r4, #4]
 80093b2:	bd38      	pop	{r3, r4, r5, pc}
 80093b4:	2000fd94 	mulcs	r0, r4, sp

080093b8 <display::timeout::gpio_init()>:
 80093b8:	b510      	push	{r4, lr}
 80093ba:	f640 4002 	movw	r0, #3074	; 0xc02
 80093be:	f00d f8dd 	bl	801657c <rcu_periph_clock_enable>
 80093c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093c6:	4803      	ldr	r0, [pc, #12]	; (80093d4 <display::timeout::gpio_init()+0x1c>)
 80093c8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80093cc:	2201      	movs	r2, #1
 80093ce:	2100      	movs	r1, #0
 80093d0:	f00d b858 	b.w	8016484 <gpio_mode_set>
 80093d4:	40020800 	andmi	r0, r2, r0, lsl #16

080093d8 <display::timeout::gpio_renew()>:
 80093d8:	4b03      	ldr	r3, [pc, #12]	; (80093e8 <display::timeout::gpio_renew()+0x10>)
 80093da:	f8d3 0810 	ldr.w	r0, [r3, #2064]	; 0x810
 80093de:	f480 5000 	eor.w	r0, r0, #8192	; 0x2000
 80093e2:	f3c0 3040 	ubfx	r0, r0, #13, #1
 80093e6:	4770      	bx	lr
 80093e8:	40020000 	andmi	r0, r2, r0

080093ec <Hardware::RebootHandler()>:
 80093ec:	b508      	push	{r3, lr}
 80093ee:	4b05      	ldr	r3, [pc, #20]	; (8009404 <Hardware::RebootHandler()+0x18>)
 80093f0:	6818      	ldr	r0, [r3, #0]
 80093f2:	f007 fda1 	bl	8010f38 <WS28xxMulti::Blackout()>
 80093f6:	4b04      	ldr	r3, [pc, #16]	; (8009408 <Hardware::RebootHandler()+0x1c>)
 80093f8:	6818      	ldr	r0, [r3, #0]
 80093fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80093fe:	f002 bd25 	b.w	800be4c <E131Bridge::Stop()>
 8009402:	bf00      	nop
 8009404:	20001268 	andcs	r1, r0, r8, ror #4
 8009408:	200006cc 	andcs	r0, r0, ip, asr #13

0800940c <main>:
 800940c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009410:	f5ad 5df3 	sub.w	sp, sp, #7776	; 0x1e60
 8009414:	b083      	sub	sp, #12
 8009416:	a806      	add	r0, sp, #24
 8009418:	f00b ff96 	bl	8015348 <Hardware::Hardware()>
 800941c:	a8c4      	add	r0, sp, #784	; 0x310
 800941e:	f008 ff7b 	bl	8012318 <Network::Network()>
 8009422:	a821      	add	r0, sp, #132	; 0x84
 8009424:	f00b ff34 	bl	8015290 <LedBlink::LedBlink()>
 8009428:	a898      	add	r0, sp, #608	; 0x260
 800942a:	f00a f877 	bl	801351c <DisplayUdf::DisplayUdf()>
 800942e:	4bb8      	ldr	r3, [pc, #736]	; (8009710 <main+0x304>)
 8009430:	4ab8      	ldr	r2, [pc, #736]	; (8009714 <main+0x308>)
 8009432:	49b9      	ldr	r1, [pc, #740]	; (8009718 <main+0x30c>)
 8009434:	a807      	add	r0, sp, #28
 8009436:	f00b fee5 	bl	8015204 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800943a:	a817      	add	r0, sp, #92	; 0x5c
 800943c:	f00a fcc2 	bl	8013dc4 <ConfigStore::ConfigStore()>
 8009440:	49b6      	ldr	r1, [pc, #728]	; (800971c <main+0x310>)
 8009442:	a807      	add	r0, sp, #28
 8009444:	f00b ff16 	bl	8015274 <FirmwareVersion::Print(char const*)>
 8009448:	4bb5      	ldr	r3, [pc, #724]	; (8009720 <main+0x314>)
 800944a:	2201      	movs	r2, #1
 800944c:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 8009450:	2008      	movs	r0, #8
 8009452:	f00c f847 	bl	80154e4 <operator new(unsigned int)>
 8009456:	4bb3      	ldr	r3, [pc, #716]	; (8009724 <main+0x318>)
 8009458:	6003      	str	r3, [r0, #0]
 800945a:	4bb3      	ldr	r3, [pc, #716]	; (8009728 <main+0x31c>)
 800945c:	681b      	ldr	r3, [r3, #0]
 800945e:	2b00      	cmp	r3, #0
 8009460:	bf14      	ite	ne
 8009462:	2201      	movne	r2, #1
 8009464:	2200      	moveq	r2, #0
 8009466:	ac1a      	add	r4, sp, #104	; 0x68
 8009468:	7102      	strb	r2, [r0, #4]
 800946a:	d004      	beq.n	8009476 <main+0x6a>
 800946c:	699b      	ldr	r3, [r3, #24]
 800946e:	3b00      	subs	r3, #0
 8009470:	bf18      	it	ne
 8009472:	2301      	movne	r3, #1
 8009474:	7103      	strb	r3, [r0, #4]
 8009476:	49ad      	ldr	r1, [pc, #692]	; (800972c <main+0x320>)
 8009478:	9023      	str	r0, [sp, #140]	; 0x8c
 800947a:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800947e:	ab21      	add	r3, sp, #132	; 0x84
 8009480:	a898      	add	r0, sp, #608	; 0x260
 8009482:	2303      	movs	r3, #3
 8009484:	f7ff ff60 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009488:	a811      	add	r0, sp, #68	; 0x44
 800948a:	f00a fe93 	bl	80141b4 <StoreNetwork::StoreNetwork()>
 800948e:	abc4      	add	r3, sp, #784	; 0x310
 8009490:	aa12      	add	r2, sp, #72	; 0x48
 8009492:	4618      	mov	r0, r3
 8009494:	a911      	add	r1, sp, #68	; 0x44
 8009496:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800949a:	f008 ff95 	bl	80123c8 <Network::Init(NetworkParamsStore*)>
 800949e:	a8c4      	add	r0, sp, #784	; 0x310
 80094a0:	f009 f9de 	bl	8012860 <Network::Print()>
 80094a4:	49a2      	ldr	r1, [pc, #648]	; (8009730 <main+0x324>)
 80094a6:	2303      	movs	r3, #3
 80094a8:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80094ac:	a898      	add	r0, sp, #608	; 0x260
 80094ae:	f7ff ff4b 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80094b2:	a808      	add	r0, sp, #32
 80094b4:	f008 fb6c 	bl	8011b90 <MDNS::MDNS()>
 80094b8:	2500      	movs	r5, #0
 80094ba:	a808      	add	r0, sp, #32
 80094bc:	f008 fc28 	bl	8011d10 <MDNS::Start()>
 80094c0:	4a9c      	ldr	r2, [pc, #624]	; (8009734 <main+0x328>)
 80094c2:	f642 1305 	movw	r3, #10501	; 0x2905
 80094c6:	4629      	mov	r1, r5
 80094c8:	e9cd 5500 	strd	r5, r5, [sp]
 80094cc:	a808      	add	r0, sp, #32
 80094ce:	f008 fd8d 	bl	8011fec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80094d2:	4b99      	ldr	r3, [pc, #612]	; (8009738 <main+0x32c>)
 80094d4:	9301      	str	r3, [sp, #4]
 80094d6:	2301      	movs	r3, #1
 80094d8:	4a98      	ldr	r2, [pc, #608]	; (800973c <main+0x330>)
 80094da:	9300      	str	r3, [sp, #0]
 80094dc:	4629      	mov	r1, r5
 80094de:	2350      	movs	r3, #80	; 0x50
 80094e0:	a808      	add	r0, sp, #32
 80094e2:	f008 fd83 	bl	8011fec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80094e6:	a808      	add	r0, sp, #32
 80094e8:	f008 fec8 	bl	801227c <MDNS::Print()>
 80094ec:	a85d      	add	r0, sp, #372	; 0x174
 80094ee:	f001 ff87 	bl	800b400 <HttpDaemon::HttpDaemon()>
 80094f2:	a85d      	add	r0, sp, #372	; 0x174
 80094f4:	f001 ff98 	bl	800b428 <HttpDaemon::Start()>
 80094f8:	2303      	movs	r3, #3
 80094fa:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80094fe:	4990      	ldr	r1, [pc, #576]	; (8009740 <main+0x334>)
 8009500:	a898      	add	r0, sp, #608	; 0x260
 8009502:	f7ff ff21 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009506:	a80a      	add	r0, sp, #40	; 0x28
 8009508:	f00a ff80 	bl	801440c <StoreE131::StoreE131()>
 800950c:	a90a      	add	r1, sp, #40	; 0x28
 800950e:	a839      	add	r0, sp, #228	; 0xe4
 8009510:	f003 fb8e 	bl	800cc30 <E131Params::E131Params(E131ParamsStore*)>
 8009514:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009518:	f002 fbf0 	bl	800bcfc <E131Bridge::E131Bridge()>
 800951c:	a839      	add	r0, sp, #228	; 0xe4
 800951e:	f003 fbab 	bl	800cc78 <E131Params::Load()>
 8009522:	b130      	cbz	r0, 8009532 <main+0x126>
 8009524:	a839      	add	r0, sp, #228	; 0xe4
 8009526:	f003 fedf 	bl	800d2e8 <E131Params::Dump()>
 800952a:	2140      	movs	r1, #64	; 0x40
 800952c:	a839      	add	r0, sp, #228	; 0xe4
 800952e:	f003 fe83 	bl	800d238 <E131Params::Set(unsigned int)>
 8009532:	ab71      	add	r3, sp, #452	; 0x1c4
 8009534:	21aa      	movs	r1, #170	; 0xaa
 8009536:	2203      	movs	r2, #3
 8009538:	e9c3 2100 	strd	r2, r1, [r3]
 800953c:	2006      	movs	r0, #6
 800953e:	2200      	movs	r2, #0
 8009540:	e9c3 0202 	strd	r0, r2, [r3, #8]
 8009544:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8009548:	611a      	str	r2, [r3, #16]
 800954a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800954e:	829a      	strh	r2, [r3, #20]
 8009550:	4a7c      	ldr	r2, [pc, #496]	; (8009744 <main+0x338>)
 8009552:	619a      	str	r2, [r3, #24]
 8009554:	2201      	movs	r2, #1
 8009556:	6259      	str	r1, [r3, #36]	; 0x24
 8009558:	e9c3 2207 	strd	r2, r2, [r3, #28]
 800955c:	859a      	strh	r2, [r3, #44]	; 0x2c
 800955e:	a813      	add	r0, sp, #76	; 0x4c
 8009560:	f00b f830 	bl	80145c4 <StorePixelDmx::StorePixelDmx()>
 8009564:	a913      	add	r1, sp, #76	; 0x4c
 8009566:	a889      	add	r0, sp, #548	; 0x224
 8009568:	f006 f8c8 	bl	800f6fc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800956c:	a889      	add	r0, sp, #548	; 0x224
 800956e:	f006 f8e5 	bl	800f73c <PixelDmxParams::Load()>
 8009572:	b130      	cbz	r0, 8009582 <main+0x176>
 8009574:	a889      	add	r0, sp, #548	; 0x224
 8009576:	f006 fc35 	bl	800fde4 <PixelDmxParams::Dump()>
 800957a:	a971      	add	r1, sp, #452	; 0x1c4
 800957c:	a889      	add	r0, sp, #548	; 0x224
 800957e:	f006 fbec 	bl	800fd5a <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8009582:	a971      	add	r1, sp, #452	; 0x1c4
 8009584:	a8ae      	add	r0, sp, #696	; 0x2b8
 8009586:	f005 ffd1 	bl	800f52c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 800958a:	2004      	movs	r0, #4
 800958c:	f00b ffaa 	bl	80154e4 <operator new(unsigned int)>
 8009590:	4b6d      	ldr	r3, [pc, #436]	; (8009748 <main+0x33c>)
 8009592:	6003      	str	r3, [r0, #0]
 8009594:	4605      	mov	r5, r0
 8009596:	2304      	movs	r3, #4
 8009598:	486c      	ldr	r0, [pc, #432]	; (800974c <main+0x340>)
 800959a:	2200      	movs	r2, #0
 800959c:	2101      	movs	r1, #1
 800959e:	f00c ff71 	bl	8016484 <gpio_mode_set>
 80095a2:	2304      	movs	r3, #4
 80095a4:	2202      	movs	r2, #2
 80095a6:	2100      	movs	r1, #0
 80095a8:	4868      	ldr	r0, [pc, #416]	; (800974c <main+0x340>)
 80095aa:	f00c ff8b 	bl	80164c4 <gpio_output_options_set>
 80095ae:	4b5c      	ldr	r3, [pc, #368]	; (8009720 <main+0x314>)
 80095b0:	2204      	movs	r2, #4
 80095b2:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 80095b6:	f20d 42b4 	addw	r2, sp, #1204	; 0x4b4
 80095ba:	abae      	add	r3, sp, #696	; 0x2b8
 80095bc:	64dd      	str	r5, [r3, #76]	; 0x4c
 80095be:	6a1e      	ldr	r6, [r3, #32]
 80095c0:	f8d3 902c 	ldr.w	r9, [r3, #44]	; 0x2c
 80095c4:	6053      	str	r3, [r2, #4]
 80095c6:	2500      	movs	r5, #0
 80095c8:	4629      	mov	r1, r5
 80095ca:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 80095ce:	42b5      	cmp	r5, r6
 80095d0:	f040 829c 	bne.w	8009b0c <main+0x700>
 80095d4:	f89d 7238 	ldrb.w	r7, [sp, #568]	; 0x238
 80095d8:	4631      	mov	r1, r6
 80095da:	a809      	add	r0, sp, #36	; 0x24
 80095dc:	ab89      	add	r3, sp, #548	; 0x224
 80095de:	f006 fe97 	bl	8010310 <PixelPatterns::PixelPatterns(unsigned int)>
 80095e2:	4b5b      	ldr	r3, [pc, #364]	; (8009750 <main+0x344>)
 80095e4:	2f05      	cmp	r7, #5
 80095e6:	601f      	str	r7, [r3, #0]
 80095e8:	f340 82ba 	ble.w	8009b60 <main+0x754>
 80095ec:	9d3a      	ldr	r5, [sp, #232]	; 0xe8
 80095ee:	f015 0510 	ands.w	r5, r5, #16
 80095f2:	ab39      	add	r3, sp, #228	; 0xe4
 80095f4:	d008      	beq.n	8009608 <main+0x1fc>
 80095f6:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 80095fa:	2201      	movs	r2, #1
 80095fc:	2140      	movs	r1, #64	; 0x40
 80095fe:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009602:	f002 fca9 	bl	800bf58 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009606:	2501      	movs	r5, #1
 8009608:	9a3a      	ldr	r2, [sp, #232]	; 0xe8
 800960a:	0692      	lsls	r2, r2, #26
 800960c:	ab39      	add	r3, sp, #228	; 0xe4
 800960e:	d508      	bpl.n	8009622 <main+0x216>
 8009610:	f8b3 300d 	ldrh.w	r3, [r3, #13]
 8009614:	2201      	movs	r2, #1
 8009616:	2141      	movs	r1, #65	; 0x41
 8009618:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 800961c:	f002 fc9c 	bl	800bf58 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009620:	3501      	adds	r5, #1
 8009622:	a80b      	add	r0, sp, #44	; 0x2c
 8009624:	f00a fd2e 	bl	8014084 <StoreDmxSend::StoreDmxSend()>
 8009628:	ab1d      	add	r3, sp, #116	; 0x74
 800962a:	a90b      	add	r1, sp, #44	; 0x2c
 800962c:	4618      	mov	r0, r3
 800962e:	9305      	str	r3, [sp, #20]
 8009630:	f005 f980 	bl	800e934 <DmxParams::DmxParams(DmxParamsStore*)>
 8009634:	a842      	add	r0, sp, #264	; 0x108
 8009636:	f005 fcd3 	bl	800efe0 <Dmx::Dmx()>
 800963a:	9805      	ldr	r0, [sp, #20]
 800963c:	f005 f986 	bl	800e94c <DmxParams::Load()>
 8009640:	b130      	cbz	r0, 8009650 <main+0x244>
 8009642:	9805      	ldr	r0, [sp, #20]
 8009644:	f005 fad4 	bl	800ebf0 <DmxParams::Dump()>
 8009648:	9805      	ldr	r0, [sp, #20]
 800964a:	a942      	add	r1, sp, #264	; 0x108
 800964c:	f005 faa2 	bl	800eb94 <DmxParams::Set(Dmx*)>
 8009650:	ab0c      	add	r3, sp, #48	; 0x30
 8009652:	4a40      	ldr	r2, [pc, #256]	; (8009754 <main+0x348>)
 8009654:	601a      	str	r2, [r3, #0]
 8009656:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800965a:	4648      	mov	r0, r9
 800965c:	f005 f910 	bl	800e880 <DmxSend::Print()>
 8009660:	2d00      	cmp	r5, #0
 8009662:	f000 82ea 	beq.w	8009c3a <main+0x82e>
 8009666:	2001      	movs	r0, #1
 8009668:	f00b ff3c 	bl	80154e4 <operator new(unsigned int)>
 800966c:	4b3a      	ldr	r3, [pc, #232]	; (8009758 <main+0x34c>)
 800966e:	4680      	mov	r8, r0
 8009670:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8009674:	6818      	ldr	r0, [r3, #0]
 8009676:	f008 fe7e 	bl	8012376 <Network::Begin(unsigned short)>
 800967a:	4b38      	ldr	r3, [pc, #224]	; (800975c <main+0x350>)
 800967c:	6018      	str	r0, [r3, #0]
 800967e:	2201      	movs	r2, #1
 8009680:	ab98      	add	r3, sp, #608	; 0x260
 8009682:	e9c3 2514 	strd	r2, r5, [r3, #80]	; 0x50
 8009686:	4b32      	ldr	r3, [pc, #200]	; (8009750 <main+0x344>)
 8009688:	4935      	ldr	r1, [pc, #212]	; (8009760 <main+0x354>)
 800968a:	681b      	ldr	r3, [r3, #0]
 800968c:	2b00      	cmp	r3, #0
 800968e:	abae      	add	r3, sp, #696	; 0x2b8
 8009690:	bf18      	it	ne
 8009692:	2300      	movne	r3, #0
 8009694:	2d00      	cmp	r5, #0
 8009696:	bf14      	ite	ne
 8009698:	464a      	movne	r2, r9
 800969a:	2200      	moveq	r2, #0
 800969c:	e9c4 1300 	strd	r1, r3, [r4]
 80096a0:	60a2      	str	r2, [r4, #8]
 80096a2:	4620      	mov	r0, r4
 80096a4:	f7ff fd5e 	bl	8009164 <LightSet64with4::Print()>
 80096a8:	f20d 43b4 	addw	r3, sp, #1204	; 0x4b4
 80096ac:	4618      	mov	r0, r3
 80096ae:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 8009770 <main+0x364>
 80096b2:	605c      	str	r4, [r3, #4]
 80096b4:	f003 fa06 	bl	800cac4 <E131Bridge::Print()>
 80096b8:	492a      	ldr	r1, [pc, #168]	; (8009764 <main+0x358>)
 80096ba:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 80096be:	2303      	movs	r3, #3
 80096c0:	a898      	add	r0, sp, #608	; 0x260
 80096c2:	f7ff fe41 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80096c6:	f8d9 3000 	ldr.w	r3, [r9]
 80096ca:	6818      	ldr	r0, [r3, #0]
 80096cc:	f006 fcf2 	bl	80100b4 <PixelType::GetType(pixel::Type)>
 80096d0:	9502      	str	r5, [sp, #8]
 80096d2:	f8d9 3000 	ldr.w	r3, [r9]
 80096d6:	4a24      	ldr	r2, [pc, #144]	; (8009768 <main+0x35c>)
 80096d8:	685b      	ldr	r3, [r3, #4]
 80096da:	2120      	movs	r1, #32
 80096dc:	e9cd 0300 	strd	r0, r3, [sp]
 80096e0:	4633      	mov	r3, r6
 80096e2:	a827      	add	r0, sp, #156	; 0x9c
 80096e4:	f000 fe82 	bl	800a3ec <snprintf>
 80096e8:	4a20      	ldr	r2, [pc, #128]	; (800976c <main+0x360>)
 80096ea:	2120      	movs	r1, #32
 80096ec:	a830      	add	r0, sp, #192	; 0xc0
 80096ee:	f000 fe7d 	bl	800a3ec <snprintf>
 80096f2:	4605      	mov	r5, r0
 80096f4:	202c      	movs	r0, #44	; 0x2c
 80096f6:	f00b fef5 	bl	80154e4 <operator new(unsigned int)>
 80096fa:	4603      	mov	r3, r0
 80096fc:	2200      	movs	r2, #0
 80096fe:	6042      	str	r2, [r0, #4]
 8009700:	6282      	str	r2, [r0, #40]	; 0x28
 8009702:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8009706:	f823 2b08 	strh.w	r2, [r3], #8
 800970a:	aa27      	add	r2, sp, #156	; 0x9c
 800970c:	e032      	b.n	8009774 <main+0x368>
 800970e:	bf00      	nop
 8009710:	08017b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, sp, lr}
 8009714:	08017b9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, fp, ip, sp, lr}
 8009718:	08017d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp, ip, sp, lr}
 800971c:	08017ba9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, fp, ip, sp, lr}
 8009720:	40020000 	andmi	r0, r2, r0
 8009724:	08017c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp, lr}
 8009728:	2000fc90 	mulcs	r0, r0, ip
 800972c:	0801a205 	stmdaeq	r1, {r0, r2, r9, sp, pc}
 8009730:	0801a1f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sp, pc}
 8009734:	08017be9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 8009738:	08017bf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800973c:	08017bf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 8009740:	08018ff4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009744:	08017d39 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, fp, ip, sp, lr}
 8009748:	08017ca8 	stmdaeq	r1, {r3, r5, r7, sl, fp, ip, sp, lr}
 800974c:	40020800 	andmi	r0, r2, r0, lsl #16
 8009750:	20001260 	andcs	r1, r0, r0, ror #4
 8009754:	08019644 	stmdaeq	r1, {r2, r6, r9, sl, ip, pc}
 8009758:	2000f994 	mulcs	r0, r4, r9
 800975c:	20000010 	andcs	r0, r0, r0, lsl r0
 8009760:	08017cc0 	stmdaeq	r1, {r6, r7, sl, fp, ip, sp, lr}
 8009764:	08019198 	stmdaeq	r1, {r3, r4, r7, r8, ip, pc}
 8009768:	08017c13 	stmdaeq	r1, {r0, r1, r4, sl, fp, ip, sp, lr}
 800976c:	08017c2e 	stmdaeq	r1, {r1, r2, r3, r5, sl, fp, ip, sp, lr}
 8009770:	20001268 	andcs	r1, r0, r8, ror #4
 8009774:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009778:	b111      	cbz	r1, 8009780 <main+0x374>
 800977a:	4563      	cmp	r3, ip
 800977c:	f040 825f 	bne.w	8009c3e <main+0x832>
 8009780:	2201      	movs	r2, #1
 8009782:	900d      	str	r0, [sp, #52]	; 0x34
 8009784:	a90d      	add	r1, sp, #52	; 0x34
 8009786:	a8f6      	add	r0, sp, #984	; 0x3d8
 8009788:	ab0d      	add	r3, sp, #52	; 0x34
 800978a:	f004 f847 	bl	800d81c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 800978e:	f20d 40a4 	addw	r0, sp, #1188	; 0x4a4
 8009792:	f003 fdbf 	bl	800d314 <LLRPDevice::LLRPDevice()>
 8009796:	f50d 7a76 	add.w	sl, sp, #984	; 0x3d8
 800979a:	4bae      	ldr	r3, [pc, #696]	; (8009a54 <main+0x648>)
 800979c:	f8ca 3000 	str.w	r3, [sl]
 80097a0:	3324      	adds	r3, #36	; 0x24
 80097a2:	f8ca 30cc 	str.w	r3, [sl, #204]	; 0xcc
 80097a6:	2100      	movs	r1, #0
 80097a8:	f50d 6095 	add.w	r0, sp, #1192	; 0x4a8
 80097ac:	f004 fa22 	bl	800dbf4 <RDMHandler::RDMHandler(bool)>
 80097b0:	4ba9      	ldr	r3, [pc, #676]	; (8009a58 <main+0x64c>)
 80097b2:	49aa      	ldr	r1, [pc, #680]	; (8009a5c <main+0x650>)
 80097b4:	6818      	ldr	r0, [r3, #0]
 80097b6:	f00b fe37 	bl	8015428 <Hardware::GetUuid(unsigned char*)>
 80097ba:	b2ed      	uxtb	r5, r5
 80097bc:	f89a 3004 	ldrb.w	r3, [sl, #4]
 80097c0:	2d20      	cmp	r5, #32
 80097c2:	bf28      	it	cs
 80097c4:	2520      	movcs	r5, #32
 80097c6:	2b00      	cmp	r3, #0
 80097c8:	f000 823f 	beq.w	8009c4a <main+0x83e>
 80097cc:	f20d 3be7 	addw	fp, sp, #999	; 0x3e7
 80097d0:	462a      	mov	r2, r5
 80097d2:	a930      	add	r1, sp, #192	; 0xc0
 80097d4:	4658      	mov	r0, fp
 80097d6:	f7ff fc46 	bl	8009066 <memcpy>
 80097da:	f8da 007c 	ldr.w	r0, [sl, #124]	; 0x7c
 80097de:	f88a 502f 	strb.w	r5, [sl, #47]	; 0x2f
 80097e2:	b120      	cbz	r0, 80097ee <main+0x3e2>
 80097e4:	6803      	ldr	r3, [r0, #0]
 80097e6:	462a      	mov	r2, r5
 80097e8:	689b      	ldr	r3, [r3, #8]
 80097ea:	4659      	mov	r1, fp
 80097ec:	4798      	blx	r3
 80097ee:	abf6      	add	r3, sp, #984	; 0x3d8
 80097f0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80097f4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80097f8:	f240 6201 	movw	r2, #1537	; 0x601
 80097fc:	4618      	mov	r0, r3
 80097fe:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 8009802:	f004 f859 	bl	800d8b8 <RDMDeviceResponder::Init()>
 8009806:	a815      	add	r0, sp, #84	; 0x54
 8009808:	f00a ff3c 	bl	8014684 <StoreRDMDevice::StoreRDMDevice()>
 800980c:	a915      	add	r1, sp, #84	; 0x54
 800980e:	a87d      	add	r0, sp, #500	; 0x1f4
 8009810:	f003 ff92 	bl	800d738 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8009814:	a87d      	add	r0, sp, #500	; 0x1f4
 8009816:	f003 ffa1 	bl	800d75c <RDMDeviceParams::Load()>
 800981a:	b130      	cbz	r0, 800982a <main+0x41e>
 800981c:	a87d      	add	r0, sp, #500	; 0x1f4
 800981e:	f003 ffdf 	bl	800d7e0 <RDMDeviceParams::Dump()>
 8009822:	a9f7      	add	r1, sp, #988	; 0x3dc
 8009824:	a87d      	add	r0, sp, #500	; 0x1f4
 8009826:	f003 ffa4 	bl	800d772 <RDMDeviceParams::Set(RDMDevice*)>
 800982a:	abf6      	add	r3, sp, #984	; 0x3d8
 800982c:	3c10      	subs	r4, #16
 800982e:	67dc      	str	r4, [r3, #124]	; 0x7c
 8009830:	4618      	mov	r0, r3
 8009832:	f003 fe87 	bl	800d544 <RDMNetDevice::Print()>
 8009836:	f8d9 3000 	ldr.w	r3, [r9]
 800983a:	4989      	ldr	r1, [pc, #548]	; (8009a60 <main+0x654>)
 800983c:	685b      	ldr	r3, [r3, #4]
 800983e:	4632      	mov	r2, r6
 8009840:	a898      	add	r0, sp, #608	; 0x260
 8009842:	f009 fe81 	bl	8013548 <DisplayUdf::SetTitle(char const*, ...)>
 8009846:	2203      	movs	r2, #3
 8009848:	2102      	movs	r1, #2
 800984a:	a898      	add	r0, sp, #608	; 0x260
 800984c:	f009 fe8f 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009850:	2207      	movs	r2, #7
 8009852:	2103      	movs	r1, #3
 8009854:	a898      	add	r0, sp, #608	; 0x260
 8009856:	f009 fe8a 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800985a:	2202      	movs	r2, #2
 800985c:	2104      	movs	r1, #4
 800985e:	a898      	add	r0, sp, #608	; 0x260
 8009860:	f009 fe85 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009864:	ac71      	add	r4, sp, #452	; 0x1c4
 8009866:	2212      	movs	r2, #18
 8009868:	2105      	movs	r1, #5
 800986a:	a898      	add	r0, sp, #608	; 0x260
 800986c:	f009 fe7f 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009870:	2213      	movs	r2, #19
 8009872:	2106      	movs	r1, #6
 8009874:	a898      	add	r0, sp, #608	; 0x260
 8009876:	f009 fe7a 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800987a:	6820      	ldr	r0, [r4, #0]
 800987c:	f006 fc1a 	bl	80100b4 <PixelType::GetType(pixel::Type)>
 8009880:	9005      	str	r0, [sp, #20]
 8009882:	68a0      	ldr	r0, [r4, #8]
 8009884:	6865      	ldr	r5, [r4, #4]
 8009886:	6a26      	ldr	r6, [r4, #32]
 8009888:	f006 fc6c 	bl	8010164 <PixelType::GetMap(pixel::Map)>
 800988c:	9b05      	ldr	r3, [sp, #20]
 800988e:	4a75      	ldr	r2, [pc, #468]	; (8009a64 <main+0x658>)
 8009890:	9500      	str	r5, [sp, #0]
 8009892:	2107      	movs	r1, #7
 8009894:	e9cd 6001 	strd	r6, r0, [sp, #4]
 8009898:	a898      	add	r0, sp, #608	; 0x260
 800989a:	f7ff fd03 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 800989e:	a80e      	add	r0, sp, #56	; 0x38
 80098a0:	f00a fbba 	bl	8014018 <StoreDisplayUdf::StoreDisplayUdf()>
 80098a4:	a90e      	add	r1, sp, #56	; 0x38
 80098a6:	a867      	add	r0, sp, #412	; 0x19c
 80098a8:	f009 ffe2 	bl	8013870 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80098ac:	a867      	add	r0, sp, #412	; 0x19c
 80098ae:	f009 ffec 	bl	801388a <DisplayUdfParams::Load()>
 80098b2:	b130      	cbz	r0, 80098c2 <main+0x4b6>
 80098b4:	a867      	add	r0, sp, #412	; 0x19c
 80098b6:	a998      	add	r1, sp, #608	; 0x260
 80098b8:	f00a f921 	bl	8013afe <DisplayUdfParams::Set(DisplayUdf*)>
 80098bc:	a867      	add	r0, sp, #412	; 0x19c
 80098be:	f00a f951 	bl	8013b64 <DisplayUdfParams::Dump()>
 80098c2:	f20d 41b4 	addw	r1, sp, #1204	; 0x4b4
 80098c6:	a898      	add	r0, sp, #608	; 0x260
 80098c8:	f00a f94e 	bl	8013b68 <DisplayUdf::Show(E131Bridge*)>
 80098cc:	b187      	cbz	r7, 80098f0 <main+0x4e4>
 80098ce:	989e      	ldr	r0, [sp, #632]	; 0x278
 80098d0:	ab98      	add	r3, sp, #608	; 0x260
 80098d2:	b118      	cbz	r0, 80098dc <main+0x4d0>
 80098d4:	6803      	ldr	r3, [r0, #0]
 80098d6:	2106      	movs	r1, #6
 80098d8:	691b      	ldr	r3, [r3, #16]
 80098da:	4798      	blx	r3
 80098dc:	4638      	mov	r0, r7
 80098de:	f006 fd3d 	bl	801035c <PixelPatterns::GetName(pixelpatterns::Pattern)>
 80098e2:	4a61      	ldr	r2, [pc, #388]	; (8009a68 <main+0x65c>)
 80098e4:	9700      	str	r7, [sp, #0]
 80098e6:	4603      	mov	r3, r0
 80098e8:	2106      	movs	r1, #6
 80098ea:	a898      	add	r0, sp, #608	; 0x260
 80098ec:	f7ff fcda 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80098f0:	f20d 43b4 	addw	r3, sp, #1204	; 0x4b4
 80098f4:	2203      	movs	r2, #3
 80098f6:	f893 350b 	ldrb.w	r3, [r3, #1291]	; 0x50b
 80098fa:	2101      	movs	r1, #1
 80098fc:	a84b      	add	r0, sp, #300	; 0x12c
 80098fe:	f001 f865 	bl	800a9cc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8009902:	a80f      	add	r0, sp, #60	; 0x3c
 8009904:	f00a fc8e 	bl	8014224 <StoreRemoteConfig::StoreRemoteConfig()>
 8009908:	a90f      	add	r1, sp, #60	; 0x3c
 800990a:	a854      	add	r0, sp, #336	; 0x150
 800990c:	f001 fb62 	bl	800afd4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009910:	a854      	add	r0, sp, #336	; 0x150
 8009912:	f001 fb69 	bl	800afe8 <RemoteConfigParams::Load()>
 8009916:	b130      	cbz	r0, 8009926 <main+0x51a>
 8009918:	a854      	add	r0, sp, #336	; 0x150
 800991a:	f001 fcac 	bl	800b276 <RemoteConfigParams::Dump()>
 800991e:	a94b      	add	r1, sp, #300	; 0x12c
 8009920:	a854      	add	r0, sp, #336	; 0x150
 8009922:	f001 fc88 	bl	800b236 <RemoteConfigParams::Set(RemoteConfig*)>
 8009926:	a817      	add	r0, sp, #92	; 0x5c
 8009928:	f00a faf4 	bl	8013f14 <ConfigStore::Flash()>
 800992c:	2800      	cmp	r0, #0
 800992e:	d1fa      	bne.n	8009926 <main+0x51a>
 8009930:	4c4e      	ldr	r4, [pc, #312]	; (8009a6c <main+0x660>)
 8009932:	494f      	ldr	r1, [pc, #316]	; (8009a70 <main+0x664>)
 8009934:	2303      	movs	r3, #3
 8009936:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800993a:	a898      	add	r0, sp, #608	; 0x260
 800993c:	f7ff fd04 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009940:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8009944:	6820      	ldr	r0, [r4, #0]
 8009946:	f008 fd16 	bl	8012376 <Network::Begin(unsigned short)>
 800994a:	4b4a      	ldr	r3, [pc, #296]	; (8009a74 <main+0x668>)
 800994c:	6018      	str	r0, [r3, #0]
 800994e:	4b4a      	ldr	r3, [pc, #296]	; (8009a78 <main+0x66c>)
 8009950:	4601      	mov	r1, r0
 8009952:	681a      	ldr	r2, [r3, #0]
 8009954:	6820      	ldr	r0, [r4, #0]
 8009956:	f008 fd1f 	bl	8012398 <Network::JoinGroup(int, unsigned int)>
 800995a:	4948      	ldr	r1, [pc, #288]	; (8009a7c <main+0x670>)
 800995c:	2302      	movs	r3, #2
 800995e:	f248 0280 	movw	r2, #32896	; 0x8080
 8009962:	a898      	add	r0, sp, #608	; 0x260
 8009964:	f7ff fcf0 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009968:	4945      	ldr	r1, [pc, #276]	; (8009a80 <main+0x674>)
 800996a:	2303      	movs	r3, #3
 800996c:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009970:	a898      	add	r0, sp, #608	; 0x260
 8009972:	f7ff fce9 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009976:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 800997a:	f002 fa29 	bl	800bdd0 <E131Bridge::Start()>
 800997e:	f248 0280 	movw	r2, #32896	; 0x8080
 8009982:	2302      	movs	r3, #2
 8009984:	493f      	ldr	r1, [pc, #252]	; (8009a84 <main+0x678>)
 8009986:	a898      	add	r0, sp, #608	; 0x260
 8009988:	f7ff fcde 	bl	8009348 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800998c:	2102      	movs	r1, #2
 800998e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009992:	f00c fd4d 	bl	8016430 <fwdgt_config>
 8009996:	ab06      	add	r3, sp, #24
 8009998:	2801      	cmp	r0, #1
 800999a:	bf0c      	ite	eq
 800999c:	2201      	moveq	r2, #1
 800999e:	2200      	movne	r2, #0
 80099a0:	701a      	strb	r2, [r3, #0]
 80099a2:	d101      	bne.n	80099a8 <main+0x59c>
 80099a4:	f00c fd34 	bl	8016410 <fwdgt_enable>
 80099a8:	4e37      	ldr	r6, [pc, #220]	; (8009a88 <main+0x67c>)
 80099aa:	4f38      	ldr	r7, [pc, #224]	; (8009a8c <main+0x680>)
 80099ac:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 8009a9c <main+0x690>
 80099b0:	f00c fd36 	bl	8016420 <fwdgt_counter_reload>
 80099b4:	f7fe fdd6 	bl	8008564 <net_handle>
 80099b8:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 80099bc:	f002 fe32 	bl	800c624 <E131Bridge::Run()>
 80099c0:	a84b      	add	r0, sp, #300	; 0x12c
 80099c2:	f001 f9b7 	bl	800ad34 <RemoteConfig::Run()>
 80099c6:	a817      	add	r0, sp, #92	; 0x5c
 80099c8:	f00a faa4 	bl	8013f14 <ConfigStore::Flash()>
 80099cc:	4b30      	ldr	r3, [pc, #192]	; (8009a90 <main+0x684>)
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	b113      	cbz	r3, 80099d8 <main+0x5cc>
 80099d2:	a809      	add	r0, sp, #36	; 0x24
 80099d4:	f006 fee6 	bl	80107a4 <PixelPatterns::Run()>
 80099d8:	f1b8 0f00 	cmp.w	r8, #0
 80099dc:	d060      	beq.n	8009aa0 <main+0x694>
 80099de:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 80099e2:	4929      	ldr	r1, [pc, #164]	; (8009a88 <main+0x67c>)
 80099e4:	7838      	ldrb	r0, [r7, #0]
 80099e6:	aa10      	add	r2, sp, #64	; 0x40
 80099e8:	f007 ffd2 	bl	8011990 <udp_recv2>
 80099ec:	f1a0 030b 	sub.w	r3, r0, #11
 80099f0:	b29b      	uxth	r3, r3
 80099f2:	2b05      	cmp	r3, #5
 80099f4:	4604      	mov	r4, r0
 80099f6:	d853      	bhi.n	8009aa0 <main+0x694>
 80099f8:	6835      	ldr	r5, [r6, #0]
 80099fa:	2204      	movs	r2, #4
 80099fc:	4629      	mov	r1, r5
 80099fe:	4648      	mov	r0, r9
 8009a00:	f7ff fb21 	bl	8009046 <memcmp>
 8009a04:	2800      	cmp	r0, #0
 8009a06:	d14b      	bne.n	8009aa0 <main+0x694>
 8009a08:	192b      	adds	r3, r5, r4
 8009a0a:	1d29      	adds	r1, r5, #4
 8009a0c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8009a10:	2b0a      	cmp	r3, #10
 8009a12:	bf04      	itt	eq
 8009a14:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009a18:	b2a4      	uxtheq	r4, r4
 8009a1a:	2c0a      	cmp	r4, #10
 8009a1c:	f000 811e 	beq.w	8009c5c <main+0x850>
 8009a20:	2c0e      	cmp	r4, #14
 8009a22:	f200 811b 	bhi.w	8009c5c <main+0x850>
 8009a26:	481b      	ldr	r0, [pc, #108]	; (8009a94 <main+0x688>)
 8009a28:	9105      	str	r1, [sp, #20]
 8009a2a:	2206      	movs	r2, #6
 8009a2c:	f7ff fb0b 	bl	8009046 <memcmp>
 8009a30:	9905      	ldr	r1, [sp, #20]
 8009a32:	2800      	cmp	r0, #0
 8009a34:	f040 8112 	bne.w	8009c5c <main+0x850>
 8009a38:	2104      	movs	r1, #4
 8009a3a:	f105 000a 	add.w	r0, r5, #10
 8009a3e:	f7ff fb31 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009a42:	285b      	cmp	r0, #91	; 0x5b
 8009a44:	4601      	mov	r1, r0
 8009a46:	d92b      	bls.n	8009aa0 <main+0x694>
 8009a48:	4b13      	ldr	r3, [pc, #76]	; (8009a98 <main+0x68c>)
 8009a4a:	6818      	ldr	r0, [r3, #0]
 8009a4c:	f005 fba4 	bl	800f198 <Dmx::SetDmxBreakTime(unsigned int)>
 8009a50:	e026      	b.n	8009aa0 <main+0x694>
 8009a52:	bf00      	nop
 8009a54:	08017cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, ip, sp, lr}
 8009a58:	2000fd80 	andcs	pc, r0, r0, lsl #27
 8009a5c:	200007e9 	andcs	r0, r0, r9, ror #15
 8009a60:	08017c43 	stmdaeq	r1, {r0, r1, r6, sl, fp, ip, sp, lr}
 8009a64:	08017c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, sp, lr}
 8009a68:	08017c63 	stmdaeq	r1, {r0, r1, r5, r6, sl, fp, ip, sp, lr}
 8009a6c:	2000f994 	mulcs	r0, r4, r9
 8009a70:	080191ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, ip, pc}
 8009a74:	20000000 	andcs	r0, r0, r0
 8009a78:	200006dc 	ldrdcs	r0, [r0], -ip
 8009a7c:	080191ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, ip, pc}
 8009a80:	08018fe0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, fp, pc}
 8009a84:	0801900b 	stmdaeq	r1, {r0, r1, r3, ip, pc}
 8009a88:	2000104c 	andcs	r1, r0, ip, asr #32
 8009a8c:	20000010 	andcs	r0, r0, r0, lsl r0
 8009a90:	20001260 	andcs	r1, r0, r0, ror #4
 8009a94:	08017c6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sl, fp, ip, sp, lr}
 8009a98:	20001048 	andcs	r1, r0, r8, asr #32
 8009a9c:	08017c69 	stmdaeq	r1, {r0, r3, r5, r6, sl, fp, ip, sp, lr}
 8009aa0:	a808      	add	r0, sp, #32
 8009aa2:	f008 fbc7 	bl	8012234 <MDNS::Run()>
 8009aa6:	f20d 40a4 	addw	r0, sp, #1188	; 0x4a4
 8009aaa:	f003 fcf5 	bl	800d498 <LLRPDevice::Run()>
 8009aae:	a85d      	add	r0, sp, #372	; 0x174
 8009ab0:	f001 ff28 	bl	800b904 <HttpDaemon::Run()>
 8009ab4:	999d      	ldr	r1, [sp, #628]	; 0x274
 8009ab6:	aa98      	add	r2, sp, #608	; 0x260
 8009ab8:	b169      	cbz	r1, 8009ad6 <main+0x6ca>
 8009aba:	7c13      	ldrb	r3, [r2, #16]
 8009abc:	2b00      	cmp	r3, #0
 8009abe:	f040 811d 	bne.w	8009cfc <main+0x8f0>
 8009ac2:	4b92      	ldr	r3, [pc, #584]	; (8009d0c <main+0x900>)
 8009ac4:	6852      	ldr	r2, [r2, #4]
 8009ac6:	681b      	ldr	r3, [r3, #0]
 8009ac8:	1a9b      	subs	r3, r3, r2
 8009aca:	4299      	cmp	r1, r3
 8009acc:	d203      	bcs.n	8009ad6 <main+0x6ca>
 8009ace:	2101      	movs	r1, #1
 8009ad0:	a898      	add	r0, sp, #608	; 0x260
 8009ad2:	f7ff fc61 	bl	8009398 <Display::SetSleep(bool)>
 8009ad6:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8009ad8:	ab21      	add	r3, sp, #132	; 0x84
 8009ada:	2c00      	cmp	r4, #0
 8009adc:	f43f af68 	beq.w	80099b0 <main+0x5a4>
 8009ae0:	498a      	ldr	r1, [pc, #552]	; (8009d0c <main+0x900>)
 8009ae2:	6958      	ldr	r0, [r3, #20]
 8009ae4:	680a      	ldr	r2, [r1, #0]
 8009ae6:	1a12      	subs	r2, r2, r0
 8009ae8:	4294      	cmp	r4, r2
 8009aea:	f63f af61 	bhi.w	80099b0 <main+0x5a4>
 8009aee:	680a      	ldr	r2, [r1, #0]
 8009af0:	615a      	str	r2, [r3, #20]
 8009af2:	691a      	ldr	r2, [r3, #16]
 8009af4:	f082 0101 	eor.w	r1, r2, #1
 8009af8:	2a01      	cmp	r2, #1
 8009afa:	6119      	str	r1, [r3, #16]
 8009afc:	4b84      	ldr	r3, [pc, #528]	; (8009d10 <main+0x904>)
 8009afe:	bf1a      	itte	ne
 8009b00:	2201      	movne	r2, #1
 8009b02:	f8c3 2818 	strne.w	r2, [r3, #2072]	; 0x818
 8009b06:	f8c3 2828 	streq.w	r2, [r3, #2088]	; 0x828
 8009b0a:	e751      	b.n	80099b0 <main+0x5a4>
 8009b0c:	2d0f      	cmp	r5, #15
 8009b0e:	d815      	bhi.n	8009b3c <main+0x730>
 8009b10:	aa89      	add	r2, sp, #548	; 0x224
 8009b12:	fa0a f305 	lsl.w	r3, sl, r5
 8009b16:	6852      	ldr	r2, [r2, #4]
 8009b18:	4393      	bics	r3, r2
 8009b1a:	ab89      	add	r3, sp, #548	; 0x224
 8009b1c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8009b20:	bf08      	it	eq
 8009b22:	f04f 0801 	moveq.w	r8, #1
 8009b26:	8b5f      	ldrh	r7, [r3, #26]
 8009b28:	bf18      	it	ne
 8009b2a:	f04f 0800 	movne.w	r8, #0
 8009b2e:	eb01 0b09 	add.w	fp, r1, r9
 8009b32:	1a7f      	subs	r7, r7, r1
 8009b34:	4559      	cmp	r1, fp
 8009b36:	d105      	bne.n	8009b44 <main+0x738>
 8009b38:	3501      	adds	r5, #1
 8009b3a:	e548      	b.n	80095ce <main+0x1c2>
 8009b3c:	f04f 0800 	mov.w	r8, #0
 8009b40:	4647      	mov	r7, r8
 8009b42:	e7f4      	b.n	8009b2e <main+0x722>
 8009b44:	f1b8 0f00 	cmp.w	r8, #0
 8009b48:	d008      	beq.n	8009b5c <main+0x750>
 8009b4a:	187b      	adds	r3, r7, r1
 8009b4c:	b29b      	uxth	r3, r3
 8009b4e:	2201      	movs	r2, #1
 8009b50:	f20d 40b4 	addw	r0, sp, #1204	; 0x4b4
 8009b54:	9105      	str	r1, [sp, #20]
 8009b56:	f002 f9ff 	bl	800bf58 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009b5a:	9905      	ldr	r1, [sp, #20]
 8009b5c:	3101      	adds	r1, #1
 8009b5e:	e7e9      	b.n	8009b34 <main+0x728>
 8009b60:	4d6c      	ldr	r5, [pc, #432]	; (8009d14 <main+0x908>)
 8009b62:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8009d34 <main+0x928>
 8009b66:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8009d38 <main+0x92c>
 8009b6a:	f04f 0a00 	mov.w	sl, #0
 8009b6e:	2f05      	cmp	r7, #5
 8009b70:	d80a      	bhi.n	8009b88 <main+0x77c>
 8009b72:	e8df f007 	tbb	[pc, r7]
 8009b76:	1b110338 	blne	844a85e <__exidx_end+0x42f9ee>
 8009b7a:	23002c24 	movwcs	r2, #3108	; 0xc24
 8009b7e:	2264      	movs	r2, #100	; 0x64
 8009b80:	4651      	mov	r1, sl
 8009b82:	a809      	add	r0, sp, #36	; 0x24
 8009b84:	f006 fbf6 	bl	8010374 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8009b88:	f10a 0a01 	add.w	sl, sl, #1
 8009b8c:	f1ba 0f10 	cmp.w	sl, #16
 8009b90:	f105 0520 	add.w	r5, r5, #32
 8009b94:	d1eb      	bne.n	8009b6e <main+0x762>
 8009b96:	e529      	b.n	80095ec <main+0x1e0>
 8009b98:	2364      	movs	r3, #100	; 0x64
 8009b9a:	2200      	movs	r2, #0
 8009b9c:	e9cd 3200 	strd	r3, r2, [sp]
 8009ba0:	4651      	mov	r1, sl
 8009ba2:	4b5d      	ldr	r3, [pc, #372]	; (8009d18 <main+0x90c>)
 8009ba4:	a809      	add	r0, sp, #36	; 0x24
 8009ba6:	f006 fbfb 	bl	80103a0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009baa:	e7ed      	b.n	8009b88 <main+0x77c>
 8009bac:	2300      	movs	r3, #0
 8009bae:	9300      	str	r3, [sp, #0]
 8009bb0:	4a59      	ldr	r2, [pc, #356]	; (8009d18 <main+0x90c>)
 8009bb2:	2364      	movs	r3, #100	; 0x64
 8009bb4:	4651      	mov	r1, sl
 8009bb6:	a809      	add	r0, sp, #36	; 0x24
 8009bb8:	f006 fc0e 	bl	80103d8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009bbc:	e7e4      	b.n	8009b88 <main+0x77c>
 8009bbe:	2364      	movs	r3, #100	; 0x64
 8009bc0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8009bc4:	4651      	mov	r1, sl
 8009bc6:	a809      	add	r0, sp, #36	; 0x24
 8009bc8:	f006 fc20 	bl	801040c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8009bcc:	e7dc      	b.n	8009b88 <main+0x77c>
 8009bce:	2364      	movs	r3, #100	; 0x64
 8009bd0:	2200      	movs	r2, #0
 8009bd2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009bd6:	230a      	movs	r3, #10
 8009bd8:	9300      	str	r3, [sp, #0]
 8009bda:	4651      	mov	r1, sl
 8009bdc:	4b4e      	ldr	r3, [pc, #312]	; (8009d18 <main+0x90c>)
 8009bde:	a809      	add	r0, sp, #36	; 0x24
 8009be0:	f006 fc48 	bl	8010474 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009be4:	e7d0      	b.n	8009b88 <main+0x77c>
 8009be6:	2300      	movs	r3, #0
 8009be8:	61eb      	str	r3, [r5, #28]
 8009bea:	469b      	mov	fp, r3
 8009bec:	f8d9 3000 	ldr.w	r3, [r9]
 8009bf0:	f8d8 0000 	ldr.w	r0, [r8]
 8009bf4:	459b      	cmp	fp, r3
 8009bf6:	d30a      	bcc.n	8009c0e <main+0x802>
 8009bf8:	f8d8 0000 	ldr.w	r0, [r8]
 8009bfc:	f007 fa5e 	bl	80110bc <WS28xxMulti::IsUpdating()>
 8009c00:	2800      	cmp	r0, #0
 8009c02:	d1f9      	bne.n	8009bf8 <main+0x7ec>
 8009c04:	f8d8 0000 	ldr.w	r0, [r8]
 8009c08:	f007 f8f2 	bl	8010df0 <WS28xxMulti::Update()>
 8009c0c:	e7bc      	b.n	8009b88 <main+0x77c>
 8009c0e:	6803      	ldr	r3, [r0, #0]
 8009c10:	2b07      	cmp	r3, #7
 8009c12:	f04f 0300 	mov.w	r3, #0
 8009c16:	d008      	beq.n	8009c2a <main+0x81e>
 8009c18:	e9cd 3300 	strd	r3, r3, [sp]
 8009c1c:	465a      	mov	r2, fp
 8009c1e:	4651      	mov	r1, sl
 8009c20:	f007 facc 	bl	80111bc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8009c24:	f10b 0b01 	add.w	fp, fp, #1
 8009c28:	e7e0      	b.n	8009bec <main+0x7e0>
 8009c2a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009c2e:	9300      	str	r3, [sp, #0]
 8009c30:	465a      	mov	r2, fp
 8009c32:	4651      	mov	r1, sl
 8009c34:	f007 fb44 	bl	80112c0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009c38:	e7f4      	b.n	8009c24 <main+0x818>
 8009c3a:	46a8      	mov	r8, r5
 8009c3c:	e51f      	b.n	800967e <main+0x272>
 8009c3e:	f803 1b01 	strb.w	r1, [r3], #1
 8009c42:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009c44:	3101      	adds	r1, #1
 8009c46:	6281      	str	r1, [r0, #40]	; 0x28
 8009c48:	e594      	b.n	8009774 <main+0x368>
 8009c4a:	462a      	mov	r2, r5
 8009c4c:	a930      	add	r1, sp, #192	; 0xc0
 8009c4e:	f20d 402e 	addw	r0, sp, #1070	; 0x42e
 8009c52:	f7ff fa08 	bl	8009066 <memcpy>
 8009c56:	f88a 5076 	strb.w	r5, [sl, #118]	; 0x76
 8009c5a:	e5c8      	b.n	80097ee <main+0x3e2>
 8009c5c:	482f      	ldr	r0, [pc, #188]	; (8009d1c <main+0x910>)
 8009c5e:	9105      	str	r1, [sp, #20]
 8009c60:	2204      	movs	r2, #4
 8009c62:	f7ff f9f0 	bl	8009046 <memcmp>
 8009c66:	9905      	ldr	r1, [sp, #20]
 8009c68:	b980      	cbnz	r0, 8009c8c <main+0x880>
 8009c6a:	2107      	movs	r1, #7
 8009c6c:	f105 0008 	add.w	r0, r5, #8
 8009c70:	f7ff fa18 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009c74:	4b2a      	ldr	r3, [pc, #168]	; (8009d20 <main+0x914>)
 8009c76:	f1a0 020c 	sub.w	r2, r0, #12
 8009c7a:	429a      	cmp	r2, r3
 8009c7c:	4601      	mov	r1, r0
 8009c7e:	f63f af0f 	bhi.w	8009aa0 <main+0x694>
 8009c82:	4b28      	ldr	r3, [pc, #160]	; (8009d24 <main+0x918>)
 8009c84:	6818      	ldr	r0, [r3, #0]
 8009c86:	f005 fa91 	bl	800f1ac <Dmx::SetDmxMabTime(unsigned int)>
 8009c8a:	e709      	b.n	8009aa0 <main+0x694>
 8009c8c:	2c0c      	cmp	r4, #12
 8009c8e:	d917      	bls.n	8009cc0 <main+0x8b4>
 8009c90:	2c0e      	cmp	r4, #14
 8009c92:	d82f      	bhi.n	8009cf4 <main+0x8e8>
 8009c94:	4824      	ldr	r0, [pc, #144]	; (8009d28 <main+0x91c>)
 8009c96:	9105      	str	r1, [sp, #20]
 8009c98:	2208      	movs	r2, #8
 8009c9a:	f7ff f9d4 	bl	8009046 <memcmp>
 8009c9e:	9905      	ldr	r1, [sp, #20]
 8009ca0:	bb40      	cbnz	r0, 8009cf4 <main+0x8e8>
 8009ca2:	2102      	movs	r1, #2
 8009ca4:	f105 000c 	add.w	r0, r5, #12
 8009ca8:	f7ff f9fc 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009cac:	4601      	mov	r1, r0
 8009cae:	b110      	cbz	r0, 8009cb6 <main+0x8aa>
 8009cb0:	4b1e      	ldr	r3, [pc, #120]	; (8009d2c <main+0x920>)
 8009cb2:	fbb3 f1f0 	udiv	r1, r3, r0
 8009cb6:	4b1b      	ldr	r3, [pc, #108]	; (8009d24 <main+0x918>)
 8009cb8:	6818      	ldr	r0, [r3, #0]
 8009cba:	f005 fa45 	bl	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009cbe:	e6ef      	b.n	8009aa0 <main+0x694>
 8009cc0:	2c0a      	cmp	r4, #10
 8009cc2:	f43f aeed 	beq.w	8009aa0 <main+0x694>
 8009cc6:	481a      	ldr	r0, [pc, #104]	; (8009d30 <main+0x924>)
 8009cc8:	2206      	movs	r2, #6
 8009cca:	f7ff f9bc 	bl	8009046 <memcmp>
 8009cce:	2800      	cmp	r0, #0
 8009cd0:	f47f aee6 	bne.w	8009aa0 <main+0x694>
 8009cd4:	2103      	movs	r1, #3
 8009cd6:	f105 000a 	add.w	r0, r5, #10
 8009cda:	f7ff f9e3 	bl	80090a4 <dmxconfigudp::atoi(char const*, unsigned int)>
 8009cde:	1e83      	subs	r3, r0, #2
 8009ce0:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009ce4:	f63f aedc 	bhi.w	8009aa0 <main+0x694>
 8009ce8:	4b0e      	ldr	r3, [pc, #56]	; (8009d24 <main+0x918>)
 8009cea:	b281      	uxth	r1, r0
 8009cec:	6818      	ldr	r0, [r3, #0]
 8009cee:	f005 fa67 	bl	800f1c0 <Dmx::SetDmxSlots(unsigned short)>
 8009cf2:	e6d5      	b.n	8009aa0 <main+0x694>
 8009cf4:	2c0d      	cmp	r4, #13
 8009cf6:	f47f aed3 	bne.w	8009aa0 <main+0x694>
 8009cfa:	e7e4      	b.n	8009cc6 <main+0x8ba>
 8009cfc:	f7ff fb6c 	bl	80093d8 <display::timeout::gpio_renew()>
 8009d00:	2800      	cmp	r0, #0
 8009d02:	f43f aee8 	beq.w	8009ad6 <main+0x6ca>
 8009d06:	2100      	movs	r1, #0
 8009d08:	e6e2      	b.n	8009ad0 <main+0x6c4>
 8009d0a:	bf00      	nop
 8009d0c:	2000fd94 	mulcs	r0, r4, sp
 8009d10:	40020000 	andmi	r0, r2, r0
 8009d14:	20001050 	andcs	r1, r0, r0, asr r0
 8009d18:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009d1c:	08017c75 	stmdaeq	r1, {r0, r2, r4, r5, r6, sl, fp, ip, sp, lr}
 8009d20:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8009d24:	20001048 	andcs	r1, r0, r8, asr #32
 8009d28:	08017c7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, fp, ip, sp, lr}
 8009d2c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009d30:	08017c83 	stmdaeq	r1, {r0, r1, r7, sl, fp, ip, sp, lr}
 8009d34:	2000125c 	andcs	r1, r0, ip, asr r2
 8009d38:	20001258 	andcs	r1, r0, r8, asr r2

08009d3c <StoreNetwork::SaveDhcp(bool)>:
 8009d3c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d3e:	2301      	movs	r3, #1
 8009d40:	f88d 1017 	strb.w	r1, [sp, #23]
 8009d44:	2100      	movs	r1, #0
 8009d46:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009d4a:	4805      	ldr	r0, [pc, #20]	; (8009d60 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8009d4c:	9300      	str	r3, [sp, #0]
 8009d4e:	6800      	ldr	r0, [r0, #0]
 8009d50:	f10d 0317 	add.w	r3, sp, #23
 8009d54:	2214      	movs	r2, #20
 8009d56:	f00a f86b 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8009d5a:	b007      	add	sp, #28
 8009d5c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d60:	2000fc68 	andcs	pc, r0, r8, ror #24

08009d64 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8009d64:	f1a0 0004 	sub.w	r0, r0, #4
 8009d68:	e7e8      	b.n	8009d3c <StoreNetwork::SaveDhcp(bool)>
 8009d6a:	bf00      	nop

08009d6c <rdm::device::responder::factorydefaults()>:
 8009d6c:	b508      	push	{r3, lr}
 8009d6e:	4b08      	ldr	r3, [pc, #32]	; (8009d90 <rdm::device::responder::factorydefaults()+0x24>)
 8009d70:	2100      	movs	r1, #0
 8009d72:	6818      	ldr	r0, [r3, #0]
 8009d74:	f000 fe76 	bl	800aa64 <RemoteConfig::SetDisable(bool)>
 8009d78:	4b06      	ldr	r3, [pc, #24]	; (8009d94 <rdm::device::responder::factorydefaults()+0x28>)
 8009d7a:	210b      	movs	r1, #11
 8009d7c:	6818      	ldr	r0, [r3, #0]
 8009d7e:	f00a f845 	bl	8013e0c <ConfigStore::ResetSetList(configstore::Store)>
 8009d82:	4b05      	ldr	r3, [pc, #20]	; (8009d98 <rdm::device::responder::factorydefaults()+0x2c>)
 8009d84:	2101      	movs	r1, #1
 8009d86:	6818      	ldr	r0, [r3, #0]
 8009d88:	f7ff ffd8 	bl	8009d3c <StoreNetwork::SaveDhcp(bool)>
 8009d8c:	bd08      	pop	{r3, pc}
 8009d8e:	bf00      	nop
 8009d90:	20000124 	andcs	r0, r0, r4, lsr #2
 8009d94:	2000fc68 	andcs	pc, r0, r8, ror #24
 8009d98:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>

08009d9c <RDMSoftwareVersion::GetVersion()>:
 8009d9c:	4800      	ldr	r0, [pc, #0]	; (8009da0 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009d9e:	4770      	bx	lr
 8009da0:	08017e39 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, fp, ip, sp, lr}

08009da4 <RDMSoftwareVersion::GetVersionLength()>:
 8009da4:	2003      	movs	r0, #3
 8009da6:	4770      	bx	lr

08009da8 <RDMSoftwareVersion::GetVersionId()>:
 8009da8:	4800      	ldr	r0, [pc, #0]	; (8009dac <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009daa:	4770      	bx	lr
 8009dac:	6391ff00 	orrsvs	pc, r1, #0, 30

08009db0 <_itostr>:
 8009db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009db2:	0fc7      	lsrs	r7, r0, #31
 8009db4:	b091      	sub	sp, #68	; 0x44
 8009db6:	bf18      	it	ne
 8009db8:	4240      	negne	r0, r0
 8009dba:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009dbe:	b9c8      	cbnz	r0, 8009df4 <_itostr+0x44>
 8009dc0:	2330      	movs	r3, #48	; 0x30
 8009dc2:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009dc6:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009dca:	b132      	cbz	r2, 8009dda <_itostr+0x2a>
 8009dcc:	4668      	mov	r0, sp
 8009dce:	2530      	movs	r5, #48	; 0x30
 8009dd0:	1ae6      	subs	r6, r4, r3
 8009dd2:	4296      	cmp	r6, r2
 8009dd4:	da01      	bge.n	8009dda <_itostr+0x2a>
 8009dd6:	4283      	cmp	r3, r0
 8009dd8:	d81c      	bhi.n	8009e14 <_itostr+0x64>
 8009dda:	b117      	cbz	r7, 8009de2 <_itostr+0x32>
 8009ddc:	222d      	movs	r2, #45	; 0x2d
 8009dde:	f803 2901 	strb.w	r2, [r3], #-1
 8009de2:	3301      	adds	r3, #1
 8009de4:	1ae0      	subs	r0, r4, r3
 8009de6:	3901      	subs	r1, #1
 8009de8:	aa10      	add	r2, sp, #64	; 0x40
 8009dea:	4293      	cmp	r3, r2
 8009dec:	d315      	bcc.n	8009e1a <_itostr+0x6a>
 8009dee:	3001      	adds	r0, #1
 8009df0:	b011      	add	sp, #68	; 0x44
 8009df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009df4:	4623      	mov	r3, r4
 8009df6:	250a      	movs	r5, #10
 8009df8:	46ec      	mov	ip, sp
 8009dfa:	fb90 f6f5 	sdiv	r6, r0, r5
 8009dfe:	fb05 0016 	mls	r0, r5, r6, r0
 8009e02:	3030      	adds	r0, #48	; 0x30
 8009e04:	f803 0901 	strb.w	r0, [r3], #-1
 8009e08:	4630      	mov	r0, r6
 8009e0a:	2e00      	cmp	r6, #0
 8009e0c:	d0dd      	beq.n	8009dca <_itostr+0x1a>
 8009e0e:	4563      	cmp	r3, ip
 8009e10:	d1f3      	bne.n	8009dfa <_itostr+0x4a>
 8009e12:	e7da      	b.n	8009dca <_itostr+0x1a>
 8009e14:	f803 5901 	strb.w	r5, [r3], #-1
 8009e18:	e7da      	b.n	8009dd0 <_itostr+0x20>
 8009e1a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009e1e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009e22:	e7e1      	b.n	8009de8 <_itostr+0x38>

08009e24 <_xputch>:
 8009e24:	4603      	mov	r3, r0
 8009e26:	b410      	push	{r4}
 8009e28:	4c09      	ldr	r4, [pc, #36]	; (8009e50 <_xputch+0x2c>)
 8009e2a:	68da      	ldr	r2, [r3, #12]
 8009e2c:	4608      	mov	r0, r1
 8009e2e:	6821      	ldr	r1, [r4, #0]
 8009e30:	3201      	adds	r2, #1
 8009e32:	60da      	str	r2, [r3, #12]
 8009e34:	b141      	cbz	r1, 8009e48 <_xputch+0x24>
 8009e36:	691b      	ldr	r3, [r3, #16]
 8009e38:	429a      	cmp	r2, r3
 8009e3a:	da02      	bge.n	8009e42 <_xputch+0x1e>
 8009e3c:	1c4b      	adds	r3, r1, #1
 8009e3e:	6023      	str	r3, [r4, #0]
 8009e40:	7008      	strb	r0, [r1, #0]
 8009e42:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009e46:	4770      	bx	lr
 8009e48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009e4c:	f00b b98a 	b.w	8015164 <console_putc>
 8009e50:	200000f8 	strdcs	r0, [r0], -r8

08009e54 <_format_int>:
 8009e54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e58:	4698      	mov	r8, r3
 8009e5a:	b091      	sub	sp, #68	; 0x44
 8009e5c:	ea52 0308 	orrs.w	r3, r2, r8
 8009e60:	4606      	mov	r6, r0
 8009e62:	4617      	mov	r7, r2
 8009e64:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009e68:	d133      	bne.n	8009ed2 <_format_int+0x7e>
 8009e6a:	2330      	movs	r3, #48	; 0x30
 8009e6c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009e70:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009e74:	6833      	ldr	r3, [r6, #0]
 8009e76:	07d8      	lsls	r0, r3, #31
 8009e78:	d507      	bpl.n	8009e8a <_format_int+0x36>
 8009e7a:	6871      	ldr	r1, [r6, #4]
 8009e7c:	466a      	mov	r2, sp
 8009e7e:	2030      	movs	r0, #48	; 0x30
 8009e80:	1b2f      	subs	r7, r5, r4
 8009e82:	428f      	cmp	r7, r1
 8009e84:	da01      	bge.n	8009e8a <_format_int+0x36>
 8009e86:	4294      	cmp	r4, r2
 8009e88:	d839      	bhi.n	8009efe <_format_int+0xaa>
 8009e8a:	0699      	lsls	r1, r3, #26
 8009e8c:	d507      	bpl.n	8009e9e <_format_int+0x4a>
 8009e8e:	68b1      	ldr	r1, [r6, #8]
 8009e90:	466a      	mov	r2, sp
 8009e92:	2030      	movs	r0, #48	; 0x30
 8009e94:	1b2f      	subs	r7, r5, r4
 8009e96:	428f      	cmp	r7, r1
 8009e98:	da01      	bge.n	8009e9e <_format_int+0x4a>
 8009e9a:	4294      	cmp	r4, r2
 8009e9c:	d832      	bhi.n	8009f04 <_format_int+0xb0>
 8009e9e:	071a      	lsls	r2, r3, #28
 8009ea0:	bf44      	itt	mi
 8009ea2:	222d      	movmi	r2, #45	; 0x2d
 8009ea4:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009ea8:	065b      	lsls	r3, r3, #25
 8009eaa:	d407      	bmi.n	8009ebc <_format_int+0x68>
 8009eac:	68b2      	ldr	r2, [r6, #8]
 8009eae:	466b      	mov	r3, sp
 8009eb0:	2120      	movs	r1, #32
 8009eb2:	1b28      	subs	r0, r5, r4
 8009eb4:	4290      	cmp	r0, r2
 8009eb6:	da01      	bge.n	8009ebc <_format_int+0x68>
 8009eb8:	429c      	cmp	r4, r3
 8009eba:	d826      	bhi.n	8009f0a <_format_int+0xb6>
 8009ebc:	1b2d      	subs	r5, r5, r4
 8009ebe:	3401      	adds	r4, #1
 8009ec0:	ab10      	add	r3, sp, #64	; 0x40
 8009ec2:	429c      	cmp	r4, r3
 8009ec4:	d324      	bcc.n	8009f10 <_format_int+0xbc>
 8009ec6:	68b3      	ldr	r3, [r6, #8]
 8009ec8:	42ab      	cmp	r3, r5
 8009eca:	dc27      	bgt.n	8009f1c <_format_int+0xc8>
 8009ecc:	b011      	add	sp, #68	; 0x44
 8009ece:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ed2:	462c      	mov	r4, r5
 8009ed4:	46e9      	mov	r9, sp
 8009ed6:	4638      	mov	r0, r7
 8009ed8:	4641      	mov	r1, r8
 8009eda:	220a      	movs	r2, #10
 8009edc:	2300      	movs	r3, #0
 8009ede:	f7fe fedb 	bl	8008c98 <__aeabi_uldivmod>
 8009ee2:	3230      	adds	r2, #48	; 0x30
 8009ee4:	f804 2901 	strb.w	r2, [r4], #-1
 8009ee8:	463a      	mov	r2, r7
 8009eea:	4643      	mov	r3, r8
 8009eec:	2a0a      	cmp	r2, #10
 8009eee:	f173 0300 	sbcs.w	r3, r3, #0
 8009ef2:	4607      	mov	r7, r0
 8009ef4:	4688      	mov	r8, r1
 8009ef6:	d3bd      	bcc.n	8009e74 <_format_int+0x20>
 8009ef8:	454c      	cmp	r4, r9
 8009efa:	d1ec      	bne.n	8009ed6 <_format_int+0x82>
 8009efc:	e7ba      	b.n	8009e74 <_format_int+0x20>
 8009efe:	f804 0901 	strb.w	r0, [r4], #-1
 8009f02:	e7bd      	b.n	8009e80 <_format_int+0x2c>
 8009f04:	f804 0901 	strb.w	r0, [r4], #-1
 8009f08:	e7c4      	b.n	8009e94 <_format_int+0x40>
 8009f0a:	f804 1901 	strb.w	r1, [r4], #-1
 8009f0e:	e7d0      	b.n	8009eb2 <_format_int+0x5e>
 8009f10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009f14:	4630      	mov	r0, r6
 8009f16:	f7ff ff85 	bl	8009e24 <_xputch>
 8009f1a:	e7d1      	b.n	8009ec0 <_format_int+0x6c>
 8009f1c:	2120      	movs	r1, #32
 8009f1e:	4630      	mov	r0, r6
 8009f20:	f7ff ff80 	bl	8009e24 <_xputch>
 8009f24:	3501      	adds	r5, #1
 8009f26:	e7ce      	b.n	8009ec6 <_format_int+0x72>

08009f28 <_format_hex>:
 8009f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f2a:	b091      	sub	sp, #68	; 0x44
 8009f2c:	6804      	ldr	r4, [r0, #0]
 8009f2e:	4606      	mov	r6, r0
 8009f30:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009f34:	bb61      	cbnz	r1, 8009f90 <_format_hex+0x68>
 8009f36:	2330      	movs	r3, #48	; 0x30
 8009f38:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009f3c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009f40:	07e5      	lsls	r5, r4, #31
 8009f42:	d507      	bpl.n	8009f54 <_format_hex+0x2c>
 8009f44:	6870      	ldr	r0, [r6, #4]
 8009f46:	4669      	mov	r1, sp
 8009f48:	2530      	movs	r5, #48	; 0x30
 8009f4a:	1ad7      	subs	r7, r2, r3
 8009f4c:	4287      	cmp	r7, r0
 8009f4e:	da01      	bge.n	8009f54 <_format_hex+0x2c>
 8009f50:	428b      	cmp	r3, r1
 8009f52:	d831      	bhi.n	8009fb8 <_format_hex+0x90>
 8009f54:	06a0      	lsls	r0, r4, #26
 8009f56:	d507      	bpl.n	8009f68 <_format_hex+0x40>
 8009f58:	68b0      	ldr	r0, [r6, #8]
 8009f5a:	4669      	mov	r1, sp
 8009f5c:	2530      	movs	r5, #48	; 0x30
 8009f5e:	1ad7      	subs	r7, r2, r3
 8009f60:	4287      	cmp	r7, r0
 8009f62:	da01      	bge.n	8009f68 <_format_hex+0x40>
 8009f64:	428b      	cmp	r3, r1
 8009f66:	d82a      	bhi.n	8009fbe <_format_hex+0x96>
 8009f68:	0661      	lsls	r1, r4, #25
 8009f6a:	d407      	bmi.n	8009f7c <_format_hex+0x54>
 8009f6c:	68b0      	ldr	r0, [r6, #8]
 8009f6e:	4669      	mov	r1, sp
 8009f70:	2420      	movs	r4, #32
 8009f72:	1ad5      	subs	r5, r2, r3
 8009f74:	4285      	cmp	r5, r0
 8009f76:	da01      	bge.n	8009f7c <_format_hex+0x54>
 8009f78:	428b      	cmp	r3, r1
 8009f7a:	d823      	bhi.n	8009fc4 <_format_hex+0x9c>
 8009f7c:	1ad5      	subs	r5, r2, r3
 8009f7e:	1c5c      	adds	r4, r3, #1
 8009f80:	ab10      	add	r3, sp, #64	; 0x40
 8009f82:	429c      	cmp	r4, r3
 8009f84:	d321      	bcc.n	8009fca <_format_hex+0xa2>
 8009f86:	68b3      	ldr	r3, [r6, #8]
 8009f88:	429d      	cmp	r5, r3
 8009f8a:	db24      	blt.n	8009fd6 <_format_hex+0xae>
 8009f8c:	b011      	add	sp, #68	; 0x44
 8009f8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f90:	f014 0f02 	tst.w	r4, #2
 8009f94:	bf0c      	ite	eq
 8009f96:	2757      	moveq	r7, #87	; 0x57
 8009f98:	2737      	movne	r7, #55	; 0x37
 8009f9a:	4613      	mov	r3, r2
 8009f9c:	466d      	mov	r5, sp
 8009f9e:	f001 000f 	and.w	r0, r1, #15
 8009fa2:	2809      	cmp	r0, #9
 8009fa4:	bf94      	ite	ls
 8009fa6:	3030      	addls	r0, #48	; 0x30
 8009fa8:	19c0      	addhi	r0, r0, r7
 8009faa:	0909      	lsrs	r1, r1, #4
 8009fac:	f803 0901 	strb.w	r0, [r3], #-1
 8009fb0:	d0c6      	beq.n	8009f40 <_format_hex+0x18>
 8009fb2:	42ab      	cmp	r3, r5
 8009fb4:	d1f3      	bne.n	8009f9e <_format_hex+0x76>
 8009fb6:	e7c3      	b.n	8009f40 <_format_hex+0x18>
 8009fb8:	f803 5901 	strb.w	r5, [r3], #-1
 8009fbc:	e7c5      	b.n	8009f4a <_format_hex+0x22>
 8009fbe:	f803 5901 	strb.w	r5, [r3], #-1
 8009fc2:	e7cc      	b.n	8009f5e <_format_hex+0x36>
 8009fc4:	f803 4901 	strb.w	r4, [r3], #-1
 8009fc8:	e7d3      	b.n	8009f72 <_format_hex+0x4a>
 8009fca:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009fce:	4630      	mov	r0, r6
 8009fd0:	f7ff ff28 	bl	8009e24 <_xputch>
 8009fd4:	e7d4      	b.n	8009f80 <_format_hex+0x58>
 8009fd6:	2120      	movs	r1, #32
 8009fd8:	4630      	mov	r0, r6
 8009fda:	f7ff ff23 	bl	8009e24 <_xputch>
 8009fde:	3501      	adds	r5, #1
 8009fe0:	e7d1      	b.n	8009f86 <_format_hex+0x5e>
	...

08009fe4 <_vprintf>:
 8009fe4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009fe8:	f04f 0800 	mov.w	r8, #0
 8009fec:	b096      	sub	sp, #88	; 0x58
 8009fee:	e9cd 8004 	strd	r8, r0, [sp, #16]
 8009ff2:	4614      	mov	r4, r2
 8009ff4:	af06      	add	r7, sp, #24
 8009ff6:	780b      	ldrb	r3, [r1, #0]
 8009ff8:	b91b      	cbnz	r3, 800a002 <_vprintf+0x1e>
 8009ffa:	9804      	ldr	r0, [sp, #16]
 8009ffc:	b016      	add	sp, #88	; 0x58
 8009ffe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a002:	2b25      	cmp	r3, #37	; 0x25
 800a004:	f101 0601 	add.w	r6, r1, #1
 800a008:	d005      	beq.n	800a016 <_vprintf+0x32>
 800a00a:	4619      	mov	r1, r3
 800a00c:	a801      	add	r0, sp, #4
 800a00e:	f7ff ff09 	bl	8009e24 <_xputch>
 800a012:	4631      	mov	r1, r6
 800a014:	e7ef      	b.n	8009ff6 <_vprintf+0x12>
 800a016:	784b      	ldrb	r3, [r1, #1]
 800a018:	f8cd 800c 	str.w	r8, [sp, #12]
 800a01c:	2b30      	cmp	r3, #48	; 0x30
 800a01e:	e9cd 8801 	strd	r8, r8, [sp, #4]
 800a022:	d129      	bne.n	800a078 <_vprintf+0x94>
 800a024:	2320      	movs	r3, #32
 800a026:	9301      	str	r3, [sp, #4]
 800a028:	1c8e      	adds	r6, r1, #2
 800a02a:	2200      	movs	r2, #0
 800a02c:	4635      	mov	r5, r6
 800a02e:	4613      	mov	r3, r2
 800a030:	f04f 0c0a 	mov.w	ip, #10
 800a034:	7829      	ldrb	r1, [r5, #0]
 800a036:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800a03a:	2809      	cmp	r0, #9
 800a03c:	462e      	mov	r6, r5
 800a03e:	f105 0501 	add.w	r5, r5, #1
 800a042:	d91d      	bls.n	800a080 <_vprintf+0x9c>
 800a044:	b12a      	cbz	r2, 800a052 <_vprintf+0x6e>
 800a046:	9303      	str	r3, [sp, #12]
 800a048:	b11b      	cbz	r3, 800a052 <_vprintf+0x6e>
 800a04a:	9b01      	ldr	r3, [sp, #4]
 800a04c:	f043 0310 	orr.w	r3, r3, #16
 800a050:	9301      	str	r3, [sp, #4]
 800a052:	292e      	cmp	r1, #46	; 0x2e
 800a054:	d123      	bne.n	800a09e <_vprintf+0xba>
 800a056:	7873      	ldrb	r3, [r6, #1]
 800a058:	2b2a      	cmp	r3, #42	; 0x2a
 800a05a:	d015      	beq.n	800a088 <_vprintf+0xa4>
 800a05c:	2100      	movs	r1, #0
 800a05e:	1c70      	adds	r0, r6, #1
 800a060:	460a      	mov	r2, r1
 800a062:	250a      	movs	r5, #10
 800a064:	7803      	ldrb	r3, [r0, #0]
 800a066:	3b30      	subs	r3, #48	; 0x30
 800a068:	2b09      	cmp	r3, #9
 800a06a:	4606      	mov	r6, r0
 800a06c:	f100 0001 	add.w	r0, r0, #1
 800a070:	d958      	bls.n	800a124 <_vprintf+0x140>
 800a072:	b181      	cbz	r1, 800a096 <_vprintf+0xb2>
 800a074:	9202      	str	r2, [sp, #8]
 800a076:	e00e      	b.n	800a096 <_vprintf+0xb2>
 800a078:	2b2d      	cmp	r3, #45	; 0x2d
 800a07a:	d1d6      	bne.n	800a02a <_vprintf+0x46>
 800a07c:	2340      	movs	r3, #64	; 0x40
 800a07e:	e7d2      	b.n	800a026 <_vprintf+0x42>
 800a080:	fb0c 0303 	mla	r3, ip, r3, r0
 800a084:	2201      	movs	r2, #1
 800a086:	e7d5      	b.n	800a034 <_vprintf+0x50>
 800a088:	f854 3b04 	ldr.w	r3, [r4], #4
 800a08c:	2b00      	cmp	r3, #0
 800a08e:	bfb8      	it	lt
 800a090:	425b      	neglt	r3, r3
 800a092:	3602      	adds	r6, #2
 800a094:	9302      	str	r3, [sp, #8]
 800a096:	9b01      	ldr	r3, [sp, #4]
 800a098:	f043 0301 	orr.w	r3, r3, #1
 800a09c:	9301      	str	r3, [sp, #4]
 800a09e:	7833      	ldrb	r3, [r6, #0]
 800a0a0:	2b6c      	cmp	r3, #108	; 0x6c
 800a0a2:	bf04      	itt	eq
 800a0a4:	3601      	addeq	r6, #1
 800a0a6:	9b01      	ldreq	r3, [sp, #4]
 800a0a8:	7831      	ldrb	r1, [r6, #0]
 800a0aa:	bf04      	itt	eq
 800a0ac:	f043 0304 	orreq.w	r3, r3, #4
 800a0b0:	9301      	streq	r3, [sp, #4]
 800a0b2:	2958      	cmp	r1, #88	; 0x58
 800a0b4:	f000 8169 	beq.w	800a38a <_vprintf+0x3a6>
 800a0b8:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800a0bc:	b2da      	uxtb	r2, r3
 800a0be:	2a15      	cmp	r2, #21
 800a0c0:	d8a4      	bhi.n	800a00c <_vprintf+0x28>
 800a0c2:	2b15      	cmp	r3, #21
 800a0c4:	d8a2      	bhi.n	800a00c <_vprintf+0x28>
 800a0c6:	a201      	add	r2, pc, #4	; (adr r2, 800a0cc <_vprintf+0xe8>)
 800a0c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a0cc:	0800a12d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sp, pc}
 800a0d0:	0800a13f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, sp, pc}
 800a0d4:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0d8:	0800a175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sp, pc}
 800a0dc:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0e0:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0e4:	0800a13f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, sp, pc}
 800a0e8:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0ec:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0f0:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0f4:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0f8:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a0fc:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a100:	0800a2cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sp, pc}
 800a104:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a108:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a10c:	0800a2f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sp, pc}
 800a110:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a114:	0800a36b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r8, r9, sp, pc}
 800a118:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a11c:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 800a120:	0800a393 	stmdaeq	r0, {r0, r1, r4, r7, r8, r9, sp, pc}
 800a124:	fb05 3202 	mla	r2, r5, r2, r3
 800a128:	2101      	movs	r1, #1
 800a12a:	e79b      	b.n	800a064 <_vprintf+0x80>
 800a12c:	4625      	mov	r5, r4
 800a12e:	a801      	add	r0, sp, #4
 800a130:	f855 1b04 	ldr.w	r1, [r5], #4
 800a134:	f7ff fe76 	bl	8009e24 <_xputch>
 800a138:	3601      	adds	r6, #1
 800a13a:	462c      	mov	r4, r5
 800a13c:	e769      	b.n	800a012 <_vprintf+0x2e>
 800a13e:	9901      	ldr	r1, [sp, #4]
 800a140:	074d      	lsls	r5, r1, #29
 800a142:	bf4b      	itete	mi
 800a144:	3407      	addmi	r4, #7
 800a146:	4625      	movpl	r5, r4
 800a148:	f024 0407 	bicmi.w	r4, r4, #7
 800a14c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800a150:	bf45      	ittet	mi
 800a152:	6863      	ldrmi	r3, [r4, #4]
 800a154:	4625      	movmi	r5, r4
 800a156:	17d3      	asrpl	r3, r2, #31
 800a158:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	da05      	bge.n	800a16c <_vprintf+0x188>
 800a160:	f041 0108 	orr.w	r1, r1, #8
 800a164:	4252      	negs	r2, r2
 800a166:	9101      	str	r1, [sp, #4]
 800a168:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a16c:	a801      	add	r0, sp, #4
 800a16e:	f7ff fe71 	bl	8009e54 <_format_int>
 800a172:	e7e1      	b.n	800a138 <_vprintf+0x154>
 800a174:	3407      	adds	r4, #7
 800a176:	f024 0507 	bic.w	r5, r4, #7
 800a17a:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800a17e:	f7fe fd3b 	bl	8008bf8 <__aeabi_d2f>
 800a182:	9b01      	ldr	r3, [sp, #4]
 800a184:	ee07 0a90 	vmov	s15, r0
 800a188:	07dc      	lsls	r4, r3, #31
 800a18a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a18e:	bf4c      	ite	mi
 800a190:	9c02      	ldrmi	r4, [sp, #8]
 800a192:	2406      	movpl	r4, #6
 800a194:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a198:	bf48      	it	mi
 800a19a:	eef1 7a67 	vnegmi.f32	s15, s15
 800a19e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1a2:	bf4a      	itet	mi
 800a1a4:	f10d 0a19 	addmi.w	sl, sp, #25
 800a1a8:	46ba      	movpl	sl, r7
 800a1aa:	232d      	movmi	r3, #45	; 0x2d
 800a1ac:	ee17 0a10 	vmov	r0, s14
 800a1b0:	f04f 0200 	mov.w	r2, #0
 800a1b4:	4651      	mov	r1, sl
 800a1b6:	bf48      	it	mi
 800a1b8:	f88d 3018 	strbmi.w	r3, [sp, #24]
 800a1bc:	f7ff fdf8 	bl	8009db0 <_itostr>
 800a1c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a1c4:	232e      	movs	r3, #46	; 0x2e
 800a1c6:	f80a 3000 	strb.w	r3, [sl, r0]
 800a1ca:	eb0a 0900 	add.w	r9, sl, r0
 800a1ce:	230a      	movs	r3, #10
 800a1d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800a1d4:	1c62      	adds	r2, r4, #1
 800a1d6:	f109 0901 	add.w	r9, r9, #1
 800a1da:	4619      	mov	r1, r3
 800a1dc:	2c00      	cmp	r4, #0
 800a1de:	dc3d      	bgt.n	800a25c <_vprintf+0x278>
 800a1e0:	ee07 3a10 	vmov	s14, r3
 800a1e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a1e8:	4649      	mov	r1, r9
 800a1ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a1ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1f2:	ee17 0a90 	vmov	r0, s15
 800a1f6:	f7ff fddb 	bl	8009db0 <_itostr>
 800a1fa:	4448      	add	r0, r9
 800a1fc:	1bc0      	subs	r0, r0, r7
 800a1fe:	1e44      	subs	r4, r0, #1
 800a200:	193a      	adds	r2, r7, r4
 800a202:	5d3b      	ldrb	r3, [r7, r4]
 800a204:	2b34      	cmp	r3, #52	; 0x34
 800a206:	d911      	bls.n	800a22c <_vprintf+0x248>
 800a208:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800a20c:	292e      	cmp	r1, #46	; 0x2e
 800a20e:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800a212:	d029      	beq.n	800a268 <_vprintf+0x284>
 800a214:	469c      	mov	ip, r3
 800a216:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800a21a:	4663      	mov	r3, ip
 800a21c:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800a220:	2939      	cmp	r1, #57	; 0x39
 800a222:	d01e      	beq.n	800a262 <_vprintf+0x27e>
 800a224:	292e      	cmp	r1, #46	; 0x2e
 800a226:	d01f      	beq.n	800a268 <_vprintf+0x284>
 800a228:	3101      	adds	r1, #1
 800a22a:	7019      	strb	r1, [r3, #0]
 800a22c:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800a230:	446b      	add	r3, sp
 800a232:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800a236:	2b2e      	cmp	r3, #46	; 0x2e
 800a238:	bf08      	it	eq
 800a23a:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800a23e:	46a1      	mov	r9, r4
 800a240:	9b03      	ldr	r3, [sp, #12]
 800a242:	4599      	cmp	r9, r3
 800a244:	db3b      	blt.n	800a2be <_vprintf+0x2da>
 800a246:	46b9      	mov	r9, r7
 800a248:	2c00      	cmp	r4, #0
 800a24a:	f77f af75 	ble.w	800a138 <_vprintf+0x154>
 800a24e:	f819 1b01 	ldrb.w	r1, [r9], #1
 800a252:	a801      	add	r0, sp, #4
 800a254:	f7ff fde6 	bl	8009e24 <_xputch>
 800a258:	3c01      	subs	r4, #1
 800a25a:	e7f5      	b.n	800a248 <_vprintf+0x264>
 800a25c:	434b      	muls	r3, r1
 800a25e:	3c01      	subs	r4, #1
 800a260:	e7bc      	b.n	800a1dc <_vprintf+0x1f8>
 800a262:	f88c e001 	strb.w	lr, [ip, #1]
 800a266:	e7d8      	b.n	800a21a <_vprintf+0x236>
 800a268:	3b01      	subs	r3, #1
 800a26a:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800a26e:	7819      	ldrb	r1, [r3, #0]
 800a270:	2939      	cmp	r1, #57	; 0x39
 800a272:	d112      	bne.n	800a29a <_vprintf+0x2b6>
 800a274:	42bb      	cmp	r3, r7
 800a276:	d20d      	bcs.n	800a294 <_vprintf+0x2b0>
 800a278:	1c5c      	adds	r4, r3, #1
 800a27a:	1c99      	adds	r1, r3, #2
 800a27c:	428c      	cmp	r4, r1
 800a27e:	eba2 0203 	sub.w	r2, r2, r3
 800a282:	d913      	bls.n	800a2ac <_vprintf+0x2c8>
 800a284:	4619      	mov	r1, r3
 800a286:	441a      	add	r2, r3
 800a288:	428a      	cmp	r2, r1
 800a28a:	d10b      	bne.n	800a2a4 <_vprintf+0x2c0>
 800a28c:	2231      	movs	r2, #49	; 0x31
 800a28e:	705a      	strb	r2, [r3, #1]
 800a290:	4604      	mov	r4, r0
 800a292:	e7cb      	b.n	800a22c <_vprintf+0x248>
 800a294:	f803 c901 	strb.w	ip, [r3], #-1
 800a298:	e7e9      	b.n	800a26e <_vprintf+0x28a>
 800a29a:	42bb      	cmp	r3, r7
 800a29c:	d3ec      	bcc.n	800a278 <_vprintf+0x294>
 800a29e:	292d      	cmp	r1, #45	; 0x2d
 800a2a0:	d0ea      	beq.n	800a278 <_vprintf+0x294>
 800a2a2:	e7c1      	b.n	800a228 <_vprintf+0x244>
 800a2a4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a2a8:	704c      	strb	r4, [r1, #1]
 800a2aa:	e7ed      	b.n	800a288 <_vprintf+0x2a4>
 800a2ac:	4414      	add	r4, r2
 800a2ae:	440a      	add	r2, r1
 800a2b0:	428a      	cmp	r2, r1
 800a2b2:	d0eb      	beq.n	800a28c <_vprintf+0x2a8>
 800a2b4:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800a2b8:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800a2bc:	e7f8      	b.n	800a2b0 <_vprintf+0x2cc>
 800a2be:	2120      	movs	r1, #32
 800a2c0:	a801      	add	r0, sp, #4
 800a2c2:	f7ff fdaf 	bl	8009e24 <_xputch>
 800a2c6:	f109 0901 	add.w	r9, r9, #1
 800a2ca:	e7b9      	b.n	800a240 <_vprintf+0x25c>
 800a2cc:	4625      	mov	r5, r4
 800a2ce:	2308      	movs	r3, #8
 800a2d0:	f855 4b04 	ldr.w	r4, [r5], #4
 800a2d4:	9303      	str	r3, [sp, #12]
 800a2d6:	2130      	movs	r1, #48	; 0x30
 800a2d8:	2320      	movs	r3, #32
 800a2da:	a801      	add	r0, sp, #4
 800a2dc:	9301      	str	r3, [sp, #4]
 800a2de:	f7ff fda1 	bl	8009e24 <_xputch>
 800a2e2:	2178      	movs	r1, #120	; 0x78
 800a2e4:	a801      	add	r0, sp, #4
 800a2e6:	f7ff fd9d 	bl	8009e24 <_xputch>
 800a2ea:	4621      	mov	r1, r4
 800a2ec:	a801      	add	r0, sp, #4
 800a2ee:	f7ff fe1b 	bl	8009f28 <_format_hex>
 800a2f2:	e721      	b.n	800a138 <_vprintf+0x154>
 800a2f4:	4625      	mov	r5, r4
 800a2f6:	2400      	movs	r4, #0
 800a2f8:	f855 9b04 	ldr.w	r9, [r5], #4
 800a2fc:	f819 3004 	ldrb.w	r3, [r9, r4]
 800a300:	b993      	cbnz	r3, 800a328 <_vprintf+0x344>
 800a302:	9b01      	ldr	r3, [sp, #4]
 800a304:	07d9      	lsls	r1, r3, #31
 800a306:	d503      	bpl.n	800a310 <_vprintf+0x32c>
 800a308:	9b02      	ldr	r3, [sp, #8]
 800a30a:	429c      	cmp	r4, r3
 800a30c:	bfa8      	it	ge
 800a30e:	461c      	movge	r4, r3
 800a310:	9b01      	ldr	r3, [sp, #4]
 800a312:	065a      	lsls	r2, r3, #25
 800a314:	f104 0a01 	add.w	sl, r4, #1
 800a318:	d403      	bmi.n	800a322 <_vprintf+0x33e>
 800a31a:	9b03      	ldr	r3, [sp, #12]
 800a31c:	429c      	cmp	r4, r3
 800a31e:	db05      	blt.n	800a32c <_vprintf+0x348>
 800a320:	4654      	mov	r4, sl
 800a322:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a326:	e00d      	b.n	800a344 <_vprintf+0x360>
 800a328:	3401      	adds	r4, #1
 800a32a:	e7e7      	b.n	800a2fc <_vprintf+0x318>
 800a32c:	2120      	movs	r1, #32
 800a32e:	a801      	add	r0, sp, #4
 800a330:	f7ff fd78 	bl	8009e24 <_xputch>
 800a334:	4654      	mov	r4, sl
 800a336:	e7eb      	b.n	800a310 <_vprintf+0x32c>
 800a338:	a801      	add	r0, sp, #4
 800a33a:	f7ff fd73 	bl	8009e24 <_xputch>
 800a33e:	9b02      	ldr	r3, [sp, #8]
 800a340:	3b01      	subs	r3, #1
 800a342:	9302      	str	r3, [sp, #8]
 800a344:	9b01      	ldr	r3, [sp, #4]
 800a346:	07db      	lsls	r3, r3, #31
 800a348:	d501      	bpl.n	800a34e <_vprintf+0x36a>
 800a34a:	9b02      	ldr	r3, [sp, #8]
 800a34c:	b11b      	cbz	r3, 800a356 <_vprintf+0x372>
 800a34e:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800a352:	2900      	cmp	r1, #0
 800a354:	d1f0      	bne.n	800a338 <_vprintf+0x354>
 800a356:	9b03      	ldr	r3, [sp, #12]
 800a358:	429c      	cmp	r4, r3
 800a35a:	f6bf aeed 	bge.w	800a138 <_vprintf+0x154>
 800a35e:	2120      	movs	r1, #32
 800a360:	a801      	add	r0, sp, #4
 800a362:	f7ff fd5f 	bl	8009e24 <_xputch>
 800a366:	3401      	adds	r4, #1
 800a368:	e7f5      	b.n	800a356 <_vprintf+0x372>
 800a36a:	9b01      	ldr	r3, [sp, #4]
 800a36c:	f013 0304 	ands.w	r3, r3, #4
 800a370:	bf1d      	ittte	ne
 800a372:	3407      	addne	r4, #7
 800a374:	f024 0407 	bicne.w	r4, r4, #7
 800a378:	4625      	movne	r5, r4
 800a37a:	4625      	moveq	r5, r4
 800a37c:	bf1a      	itte	ne
 800a37e:	f855 2b08 	ldrne.w	r2, [r5], #8
 800a382:	6863      	ldrne	r3, [r4, #4]
 800a384:	f855 2b04 	ldreq.w	r2, [r5], #4
 800a388:	e6f0      	b.n	800a16c <_vprintf+0x188>
 800a38a:	9b01      	ldr	r3, [sp, #4]
 800a38c:	f043 0302 	orr.w	r3, r3, #2
 800a390:	9301      	str	r3, [sp, #4]
 800a392:	4625      	mov	r5, r4
 800a394:	f855 1b04 	ldr.w	r1, [r5], #4
 800a398:	e7a8      	b.n	800a2ec <_vprintf+0x308>
 800a39a:	bf00      	nop

0800a39c <printf>:
 800a39c:	b40f      	push	{r0, r1, r2, r3}
 800a39e:	b507      	push	{r0, r1, r2, lr}
 800a3a0:	aa04      	add	r2, sp, #16
 800a3a2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a3a6:	f852 1b04 	ldr.w	r1, [r2], #4
 800a3aa:	9201      	str	r2, [sp, #4]
 800a3ac:	f7ff fe1a 	bl	8009fe4 <_vprintf>
 800a3b0:	b003      	add	sp, #12
 800a3b2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a3b6:	b004      	add	sp, #16
 800a3b8:	4770      	bx	lr
	...

0800a3bc <sprintf>:
 800a3bc:	b40e      	push	{r1, r2, r3}
 800a3be:	b517      	push	{r0, r1, r2, r4, lr}
 800a3c0:	4c09      	ldr	r4, [pc, #36]	; (800a3e8 <sprintf+0x2c>)
 800a3c2:	aa05      	add	r2, sp, #20
 800a3c4:	6020      	str	r0, [r4, #0]
 800a3c6:	f852 1b04 	ldr.w	r1, [r2], #4
 800a3ca:	9201      	str	r2, [sp, #4]
 800a3cc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a3d0:	f7ff fe08 	bl	8009fe4 <_vprintf>
 800a3d4:	6822      	ldr	r2, [r4, #0]
 800a3d6:	2300      	movs	r3, #0
 800a3d8:	7013      	strb	r3, [r2, #0]
 800a3da:	6023      	str	r3, [r4, #0]
 800a3dc:	b003      	add	sp, #12
 800a3de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a3e2:	b003      	add	sp, #12
 800a3e4:	4770      	bx	lr
 800a3e6:	bf00      	nop
 800a3e8:	200000f8 	strdcs	r0, [r0], -r8

0800a3ec <snprintf>:
 800a3ec:	b40c      	push	{r2, r3}
 800a3ee:	b513      	push	{r0, r1, r4, lr}
 800a3f0:	4c09      	ldr	r4, [pc, #36]	; (800a418 <snprintf+0x2c>)
 800a3f2:	aa04      	add	r2, sp, #16
 800a3f4:	460b      	mov	r3, r1
 800a3f6:	6020      	str	r0, [r4, #0]
 800a3f8:	f852 1b04 	ldr.w	r1, [r2], #4
 800a3fc:	9201      	str	r2, [sp, #4]
 800a3fe:	4618      	mov	r0, r3
 800a400:	f7ff fdf0 	bl	8009fe4 <_vprintf>
 800a404:	6822      	ldr	r2, [r4, #0]
 800a406:	2300      	movs	r3, #0
 800a408:	7013      	strb	r3, [r2, #0]
 800a40a:	6023      	str	r3, [r4, #0]
 800a40c:	b002      	add	sp, #8
 800a40e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a412:	b002      	add	sp, #8
 800a414:	4770      	bx	lr
 800a416:	bf00      	nop
 800a418:	200000f8 	strdcs	r0, [r0], -r8

0800a41c <vsnprintf>:
 800a41c:	b538      	push	{r3, r4, r5, lr}
 800a41e:	4c06      	ldr	r4, [pc, #24]	; (800a438 <vsnprintf+0x1c>)
 800a420:	4605      	mov	r5, r0
 800a422:	4608      	mov	r0, r1
 800a424:	4611      	mov	r1, r2
 800a426:	461a      	mov	r2, r3
 800a428:	6025      	str	r5, [r4, #0]
 800a42a:	f7ff fddb 	bl	8009fe4 <_vprintf>
 800a42e:	6822      	ldr	r2, [r4, #0]
 800a430:	2300      	movs	r3, #0
 800a432:	7013      	strb	r3, [r2, #0]
 800a434:	6023      	str	r3, [r4, #0]
 800a436:	bd38      	pop	{r3, r4, r5, pc}
 800a438:	200000f8 	strdcs	r0, [r0], -r8

0800a43c <__udivmoddi4>:
 800a43c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a440:	9e08      	ldr	r6, [sp, #32]
 800a442:	460d      	mov	r5, r1
 800a444:	4604      	mov	r4, r0
 800a446:	460f      	mov	r7, r1
 800a448:	2b00      	cmp	r3, #0
 800a44a:	d14a      	bne.n	800a4e2 <__udivmoddi4+0xa6>
 800a44c:	428a      	cmp	r2, r1
 800a44e:	4694      	mov	ip, r2
 800a450:	d965      	bls.n	800a51e <__udivmoddi4+0xe2>
 800a452:	fab2 f382 	clz	r3, r2
 800a456:	b143      	cbz	r3, 800a46a <__udivmoddi4+0x2e>
 800a458:	fa02 fc03 	lsl.w	ip, r2, r3
 800a45c:	f1c3 0220 	rsb	r2, r3, #32
 800a460:	409f      	lsls	r7, r3
 800a462:	fa20 f202 	lsr.w	r2, r0, r2
 800a466:	4317      	orrs	r7, r2
 800a468:	409c      	lsls	r4, r3
 800a46a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800a46e:	fa1f f58c 	uxth.w	r5, ip
 800a472:	fbb7 f1fe 	udiv	r1, r7, lr
 800a476:	0c22      	lsrs	r2, r4, #16
 800a478:	fb0e 7711 	mls	r7, lr, r1, r7
 800a47c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800a480:	fb01 f005 	mul.w	r0, r1, r5
 800a484:	4290      	cmp	r0, r2
 800a486:	d90a      	bls.n	800a49e <__udivmoddi4+0x62>
 800a488:	eb1c 0202 	adds.w	r2, ip, r2
 800a48c:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 800a490:	f080 811c 	bcs.w	800a6cc <__udivmoddi4+0x290>
 800a494:	4290      	cmp	r0, r2
 800a496:	f240 8119 	bls.w	800a6cc <__udivmoddi4+0x290>
 800a49a:	3902      	subs	r1, #2
 800a49c:	4462      	add	r2, ip
 800a49e:	1a12      	subs	r2, r2, r0
 800a4a0:	b2a4      	uxth	r4, r4
 800a4a2:	fbb2 f0fe 	udiv	r0, r2, lr
 800a4a6:	fb0e 2210 	mls	r2, lr, r0, r2
 800a4aa:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a4ae:	fb00 f505 	mul.w	r5, r0, r5
 800a4b2:	42a5      	cmp	r5, r4
 800a4b4:	d90a      	bls.n	800a4cc <__udivmoddi4+0x90>
 800a4b6:	eb1c 0404 	adds.w	r4, ip, r4
 800a4ba:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a4be:	f080 8107 	bcs.w	800a6d0 <__udivmoddi4+0x294>
 800a4c2:	42a5      	cmp	r5, r4
 800a4c4:	f240 8104 	bls.w	800a6d0 <__udivmoddi4+0x294>
 800a4c8:	4464      	add	r4, ip
 800a4ca:	3802      	subs	r0, #2
 800a4cc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800a4d0:	1b64      	subs	r4, r4, r5
 800a4d2:	2100      	movs	r1, #0
 800a4d4:	b11e      	cbz	r6, 800a4de <__udivmoddi4+0xa2>
 800a4d6:	40dc      	lsrs	r4, r3
 800a4d8:	2300      	movs	r3, #0
 800a4da:	e9c6 4300 	strd	r4, r3, [r6]
 800a4de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a4e2:	428b      	cmp	r3, r1
 800a4e4:	d908      	bls.n	800a4f8 <__udivmoddi4+0xbc>
 800a4e6:	2e00      	cmp	r6, #0
 800a4e8:	f000 80ed 	beq.w	800a6c6 <__udivmoddi4+0x28a>
 800a4ec:	2100      	movs	r1, #0
 800a4ee:	e9c6 0500 	strd	r0, r5, [r6]
 800a4f2:	4608      	mov	r0, r1
 800a4f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a4f8:	fab3 f183 	clz	r1, r3
 800a4fc:	2900      	cmp	r1, #0
 800a4fe:	d149      	bne.n	800a594 <__udivmoddi4+0x158>
 800a500:	42ab      	cmp	r3, r5
 800a502:	d302      	bcc.n	800a50a <__udivmoddi4+0xce>
 800a504:	4282      	cmp	r2, r0
 800a506:	f200 80f8 	bhi.w	800a6fa <__udivmoddi4+0x2be>
 800a50a:	1a84      	subs	r4, r0, r2
 800a50c:	eb65 0203 	sbc.w	r2, r5, r3
 800a510:	2001      	movs	r0, #1
 800a512:	4617      	mov	r7, r2
 800a514:	2e00      	cmp	r6, #0
 800a516:	d0e2      	beq.n	800a4de <__udivmoddi4+0xa2>
 800a518:	e9c6 4700 	strd	r4, r7, [r6]
 800a51c:	e7df      	b.n	800a4de <__udivmoddi4+0xa2>
 800a51e:	b902      	cbnz	r2, 800a522 <__udivmoddi4+0xe6>
 800a520:	deff      	udf	#255	; 0xff
 800a522:	fab2 f382 	clz	r3, r2
 800a526:	2b00      	cmp	r3, #0
 800a528:	f040 8090 	bne.w	800a64c <__udivmoddi4+0x210>
 800a52c:	1a8a      	subs	r2, r1, r2
 800a52e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a532:	fa1f fe8c 	uxth.w	lr, ip
 800a536:	2101      	movs	r1, #1
 800a538:	fbb2 f5f7 	udiv	r5, r2, r7
 800a53c:	fb07 2015 	mls	r0, r7, r5, r2
 800a540:	0c22      	lsrs	r2, r4, #16
 800a542:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a546:	fb0e f005 	mul.w	r0, lr, r5
 800a54a:	4290      	cmp	r0, r2
 800a54c:	d908      	bls.n	800a560 <__udivmoddi4+0x124>
 800a54e:	eb1c 0202 	adds.w	r2, ip, r2
 800a552:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a556:	d202      	bcs.n	800a55e <__udivmoddi4+0x122>
 800a558:	4290      	cmp	r0, r2
 800a55a:	f200 80cb 	bhi.w	800a6f4 <__udivmoddi4+0x2b8>
 800a55e:	4645      	mov	r5, r8
 800a560:	1a12      	subs	r2, r2, r0
 800a562:	b2a4      	uxth	r4, r4
 800a564:	fbb2 f0f7 	udiv	r0, r2, r7
 800a568:	fb07 2210 	mls	r2, r7, r0, r2
 800a56c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a570:	fb0e fe00 	mul.w	lr, lr, r0
 800a574:	45a6      	cmp	lr, r4
 800a576:	d908      	bls.n	800a58a <__udivmoddi4+0x14e>
 800a578:	eb1c 0404 	adds.w	r4, ip, r4
 800a57c:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a580:	d202      	bcs.n	800a588 <__udivmoddi4+0x14c>
 800a582:	45a6      	cmp	lr, r4
 800a584:	f200 80bb 	bhi.w	800a6fe <__udivmoddi4+0x2c2>
 800a588:	4610      	mov	r0, r2
 800a58a:	eba4 040e 	sub.w	r4, r4, lr
 800a58e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800a592:	e79f      	b.n	800a4d4 <__udivmoddi4+0x98>
 800a594:	f1c1 0720 	rsb	r7, r1, #32
 800a598:	408b      	lsls	r3, r1
 800a59a:	fa22 fc07 	lsr.w	ip, r2, r7
 800a59e:	ea4c 0c03 	orr.w	ip, ip, r3
 800a5a2:	fa05 f401 	lsl.w	r4, r5, r1
 800a5a6:	fa20 f307 	lsr.w	r3, r0, r7
 800a5aa:	40fd      	lsrs	r5, r7
 800a5ac:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800a5b0:	4323      	orrs	r3, r4
 800a5b2:	fbb5 f8f9 	udiv	r8, r5, r9
 800a5b6:	fa1f fe8c 	uxth.w	lr, ip
 800a5ba:	fb09 5518 	mls	r5, r9, r8, r5
 800a5be:	0c1c      	lsrs	r4, r3, #16
 800a5c0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a5c4:	fb08 f50e 	mul.w	r5, r8, lr
 800a5c8:	42a5      	cmp	r5, r4
 800a5ca:	fa02 f201 	lsl.w	r2, r2, r1
 800a5ce:	fa00 f001 	lsl.w	r0, r0, r1
 800a5d2:	d90b      	bls.n	800a5ec <__udivmoddi4+0x1b0>
 800a5d4:	eb1c 0404 	adds.w	r4, ip, r4
 800a5d8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800a5dc:	f080 8088 	bcs.w	800a6f0 <__udivmoddi4+0x2b4>
 800a5e0:	42a5      	cmp	r5, r4
 800a5e2:	f240 8085 	bls.w	800a6f0 <__udivmoddi4+0x2b4>
 800a5e6:	f1a8 0802 	sub.w	r8, r8, #2
 800a5ea:	4464      	add	r4, ip
 800a5ec:	1b64      	subs	r4, r4, r5
 800a5ee:	b29d      	uxth	r5, r3
 800a5f0:	fbb4 f3f9 	udiv	r3, r4, r9
 800a5f4:	fb09 4413 	mls	r4, r9, r3, r4
 800a5f8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800a5fc:	fb03 fe0e 	mul.w	lr, r3, lr
 800a600:	45a6      	cmp	lr, r4
 800a602:	d908      	bls.n	800a616 <__udivmoddi4+0x1da>
 800a604:	eb1c 0404 	adds.w	r4, ip, r4
 800a608:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 800a60c:	d26c      	bcs.n	800a6e8 <__udivmoddi4+0x2ac>
 800a60e:	45a6      	cmp	lr, r4
 800a610:	d96a      	bls.n	800a6e8 <__udivmoddi4+0x2ac>
 800a612:	3b02      	subs	r3, #2
 800a614:	4464      	add	r4, ip
 800a616:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800a61a:	fba3 9502 	umull	r9, r5, r3, r2
 800a61e:	eba4 040e 	sub.w	r4, r4, lr
 800a622:	42ac      	cmp	r4, r5
 800a624:	46c8      	mov	r8, r9
 800a626:	46ae      	mov	lr, r5
 800a628:	d356      	bcc.n	800a6d8 <__udivmoddi4+0x29c>
 800a62a:	d053      	beq.n	800a6d4 <__udivmoddi4+0x298>
 800a62c:	b156      	cbz	r6, 800a644 <__udivmoddi4+0x208>
 800a62e:	ebb0 0208 	subs.w	r2, r0, r8
 800a632:	eb64 040e 	sbc.w	r4, r4, lr
 800a636:	fa04 f707 	lsl.w	r7, r4, r7
 800a63a:	40ca      	lsrs	r2, r1
 800a63c:	40cc      	lsrs	r4, r1
 800a63e:	4317      	orrs	r7, r2
 800a640:	e9c6 7400 	strd	r7, r4, [r6]
 800a644:	4618      	mov	r0, r3
 800a646:	2100      	movs	r1, #0
 800a648:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a64c:	f1c3 0120 	rsb	r1, r3, #32
 800a650:	fa02 fc03 	lsl.w	ip, r2, r3
 800a654:	fa20 f201 	lsr.w	r2, r0, r1
 800a658:	fa25 f101 	lsr.w	r1, r5, r1
 800a65c:	409d      	lsls	r5, r3
 800a65e:	432a      	orrs	r2, r5
 800a660:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a664:	fa1f fe8c 	uxth.w	lr, ip
 800a668:	fbb1 f0f7 	udiv	r0, r1, r7
 800a66c:	fb07 1510 	mls	r5, r7, r0, r1
 800a670:	0c11      	lsrs	r1, r2, #16
 800a672:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800a676:	fb00 f50e 	mul.w	r5, r0, lr
 800a67a:	428d      	cmp	r5, r1
 800a67c:	fa04 f403 	lsl.w	r4, r4, r3
 800a680:	d908      	bls.n	800a694 <__udivmoddi4+0x258>
 800a682:	eb1c 0101 	adds.w	r1, ip, r1
 800a686:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800a68a:	d22f      	bcs.n	800a6ec <__udivmoddi4+0x2b0>
 800a68c:	428d      	cmp	r5, r1
 800a68e:	d92d      	bls.n	800a6ec <__udivmoddi4+0x2b0>
 800a690:	3802      	subs	r0, #2
 800a692:	4461      	add	r1, ip
 800a694:	1b49      	subs	r1, r1, r5
 800a696:	b292      	uxth	r2, r2
 800a698:	fbb1 f5f7 	udiv	r5, r1, r7
 800a69c:	fb07 1115 	mls	r1, r7, r5, r1
 800a6a0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a6a4:	fb05 f10e 	mul.w	r1, r5, lr
 800a6a8:	4291      	cmp	r1, r2
 800a6aa:	d908      	bls.n	800a6be <__udivmoddi4+0x282>
 800a6ac:	eb1c 0202 	adds.w	r2, ip, r2
 800a6b0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a6b4:	d216      	bcs.n	800a6e4 <__udivmoddi4+0x2a8>
 800a6b6:	4291      	cmp	r1, r2
 800a6b8:	d914      	bls.n	800a6e4 <__udivmoddi4+0x2a8>
 800a6ba:	3d02      	subs	r5, #2
 800a6bc:	4462      	add	r2, ip
 800a6be:	1a52      	subs	r2, r2, r1
 800a6c0:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800a6c4:	e738      	b.n	800a538 <__udivmoddi4+0xfc>
 800a6c6:	4631      	mov	r1, r6
 800a6c8:	4630      	mov	r0, r6
 800a6ca:	e708      	b.n	800a4de <__udivmoddi4+0xa2>
 800a6cc:	4639      	mov	r1, r7
 800a6ce:	e6e6      	b.n	800a49e <__udivmoddi4+0x62>
 800a6d0:	4610      	mov	r0, r2
 800a6d2:	e6fb      	b.n	800a4cc <__udivmoddi4+0x90>
 800a6d4:	4548      	cmp	r0, r9
 800a6d6:	d2a9      	bcs.n	800a62c <__udivmoddi4+0x1f0>
 800a6d8:	ebb9 0802 	subs.w	r8, r9, r2
 800a6dc:	eb65 0e0c 	sbc.w	lr, r5, ip
 800a6e0:	3b01      	subs	r3, #1
 800a6e2:	e7a3      	b.n	800a62c <__udivmoddi4+0x1f0>
 800a6e4:	4645      	mov	r5, r8
 800a6e6:	e7ea      	b.n	800a6be <__udivmoddi4+0x282>
 800a6e8:	462b      	mov	r3, r5
 800a6ea:	e794      	b.n	800a616 <__udivmoddi4+0x1da>
 800a6ec:	4640      	mov	r0, r8
 800a6ee:	e7d1      	b.n	800a694 <__udivmoddi4+0x258>
 800a6f0:	46d0      	mov	r8, sl
 800a6f2:	e77b      	b.n	800a5ec <__udivmoddi4+0x1b0>
 800a6f4:	3d02      	subs	r5, #2
 800a6f6:	4462      	add	r2, ip
 800a6f8:	e732      	b.n	800a560 <__udivmoddi4+0x124>
 800a6fa:	4608      	mov	r0, r1
 800a6fc:	e70a      	b.n	800a514 <__udivmoddi4+0xd8>
 800a6fe:	4464      	add	r4, ip
 800a700:	3802      	subs	r0, #2
 800a702:	e742      	b.n	800a58a <__udivmoddi4+0x14e>

0800a704 <RemoteConfig::HandleList()>:
 800a704:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a708:	6801      	ldr	r1, [r0, #0]
 800a70a:	4a2b      	ldr	r2, [pc, #172]	; (800a7b8 <RemoteConfig::HandleList()+0xb4>)
 800a70c:	4b2b      	ldr	r3, [pc, #172]	; (800a7bc <RemoteConfig::HandleList()+0xb8>)
 800a70e:	4e2c      	ldr	r6, [pc, #176]	; (800a7c0 <RemoteConfig::HandleList()+0xbc>)
 800a710:	681b      	ldr	r3, [r3, #0]
 800a712:	6835      	ldr	r5, [r6, #0]
 800a714:	695f      	ldr	r7, [r3, #20]
 800a716:	4604      	mov	r4, r0
 800a718:	2012      	movs	r0, #18
 800a71a:	fb00 2201 	mla	r2, r0, r1, r2
 800a71e:	6860      	ldr	r0, [r4, #4]
 800a720:	4928      	ldr	r1, [pc, #160]	; (800a7c4 <RemoteConfig::HandleList()+0xc0>)
 800a722:	f04f 080c 	mov.w	r8, #12
 800a726:	fb08 1100 	mla	r1, r8, r0, r1
 800a72a:	4827      	ldr	r0, [pc, #156]	; (800a7c8 <RemoteConfig::HandleList()+0xc4>)
 800a72c:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a730:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a734:	b2fb      	uxtb	r3, r7
 800a736:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a73a:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a73e:	b089      	sub	sp, #36	; 0x24
 800a740:	3507      	adds	r5, #7
 800a742:	0e3f      	lsrs	r7, r7, #24
 800a744:	f1b9 0f00 	cmp.w	r9, #0
 800a748:	d01d      	beq.n	800a786 <RemoteConfig::HandleList()+0x82>
 800a74a:	3009      	adds	r0, #9
 800a74c:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a750:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a754:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a758:	4a1c      	ldr	r2, [pc, #112]	; (800a7cc <RemoteConfig::HandleList()+0xc8>)
 800a75a:	f8cd c000 	str.w	ip, [sp]
 800a75e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a762:	4628      	mov	r0, r5
 800a764:	f7ff fe42 	bl	800a3ec <snprintf>
 800a768:	69e3      	ldr	r3, [r4, #28]
 800a76a:	2b05      	cmp	r3, #5
 800a76c:	d118      	bne.n	800a7a0 <RemoteConfig::HandleList()+0x9c>
 800a76e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a772:	9300      	str	r3, [sp, #0]
 800a774:	69a3      	ldr	r3, [r4, #24]
 800a776:	b282      	uxth	r2, r0
 800a778:	4629      	mov	r1, r5
 800a77a:	7d20      	ldrb	r0, [r4, #20]
 800a77c:	f007 f92e 	bl	80119dc <udp_send>
 800a780:	b009      	add	sp, #36	; 0x24
 800a782:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a786:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a78a:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a78e:	e9cd ce00 	strd	ip, lr, [sp]
 800a792:	4a0f      	ldr	r2, [pc, #60]	; (800a7d0 <RemoteConfig::HandleList()+0xcc>)
 800a794:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a798:	4628      	mov	r0, r5
 800a79a:	f7ff fe27 	bl	800a3ec <snprintf>
 800a79e:	e7e3      	b.n	800a768 <RemoteConfig::HandleList()+0x64>
 800a7a0:	2b06      	cmp	r3, #6
 800a7a2:	d1ed      	bne.n	800a780 <RemoteConfig::HandleList()+0x7c>
 800a7a4:	6833      	ldr	r3, [r6, #0]
 800a7a6:	799b      	ldrb	r3, [r3, #6]
 800a7a8:	2b2a      	cmp	r3, #42	; 0x2a
 800a7aa:	d1e9      	bne.n	800a780 <RemoteConfig::HandleList()+0x7c>
 800a7ac:	f642 1305 	movw	r3, #10501	; 0x2905
 800a7b0:	9300      	str	r3, [sp, #0]
 800a7b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a7b6:	e7de      	b.n	800a776 <RemoteConfig::HandleList()+0x72>
 800a7b8:	08017f28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800a7bc:	2000f994 	mulcs	r0, r4, r9
 800a7c0:	200000fc 	strdcs	r0, [r0], -ip
 800a7c4:	08017fee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 800a7c8:	20000100 	andcs	r0, r0, r0, lsl #2
 800a7cc:	08017e3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}
 800a7d0:	08017e56 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, fp, ip, sp, lr}

0800a7d4 <RemoteConfig::HandleDisplayGet()>:
 800a7d4:	69c3      	ldr	r3, [r0, #28]
 800a7d6:	2b08      	cmp	r3, #8
 800a7d8:	d11b      	bne.n	800a812 <RemoteConfig::HandleDisplayGet()+0x3e>
 800a7da:	4b0e      	ldr	r3, [pc, #56]	; (800a814 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a7dc:	681b      	ldr	r3, [r3, #0]
 800a7de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7e0:	7c19      	ldrb	r1, [r3, #16]
 800a7e2:	4d0d      	ldr	r5, [pc, #52]	; (800a818 <RemoteConfig::HandleDisplayGet()+0x44>)
 800a7e4:	4a0d      	ldr	r2, [pc, #52]	; (800a81c <RemoteConfig::HandleDisplayGet()+0x48>)
 800a7e6:	4b0e      	ldr	r3, [pc, #56]	; (800a820 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a7e8:	4604      	mov	r4, r0
 800a7ea:	2900      	cmp	r1, #0
 800a7ec:	bf18      	it	ne
 800a7ee:	4613      	movne	r3, r2
 800a7f0:	6828      	ldr	r0, [r5, #0]
 800a7f2:	4a0c      	ldr	r2, [pc, #48]	; (800a824 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a7f4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a7f8:	f7ff fdf8 	bl	800a3ec <snprintf>
 800a7fc:	f642 1305 	movw	r3, #10501	; 0x2905
 800a800:	9300      	str	r3, [sp, #0]
 800a802:	b282      	uxth	r2, r0
 800a804:	69a3      	ldr	r3, [r4, #24]
 800a806:	6829      	ldr	r1, [r5, #0]
 800a808:	7d20      	ldrb	r0, [r4, #20]
 800a80a:	f007 f8e7 	bl	80119dc <udp_send>
 800a80e:	b003      	add	sp, #12
 800a810:	bd30      	pop	{r4, r5, pc}
 800a812:	4770      	bx	lr
 800a814:	2000fc90 	mulcs	r0, r0, ip
 800a818:	200000fc 	strdcs	r0, [r0], -ip
 800a81c:	08017e6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800a820:	08017e6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800a824:	08017e73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, fp, ip, sp, lr}

0800a828 <RemoteConfig::HandleTftpGet()>:
 800a828:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a82a:	4604      	mov	r4, r0
 800a82c:	f000 fda8 	bl	800b380 <RemoteConfig::PlatformHandleTftpGet()>
 800a830:	69e3      	ldr	r3, [r4, #28]
 800a832:	2b05      	cmp	r3, #5
 800a834:	d116      	bne.n	800a864 <RemoteConfig::HandleTftpGet()+0x3c>
 800a836:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a83a:	4d0b      	ldr	r5, [pc, #44]	; (800a868 <RemoteConfig::HandleTftpGet()+0x40>)
 800a83c:	4a0b      	ldr	r2, [pc, #44]	; (800a86c <RemoteConfig::HandleTftpGet()+0x44>)
 800a83e:	4b0c      	ldr	r3, [pc, #48]	; (800a870 <RemoteConfig::HandleTftpGet()+0x48>)
 800a840:	6828      	ldr	r0, [r5, #0]
 800a842:	2900      	cmp	r1, #0
 800a844:	bf08      	it	eq
 800a846:	4613      	moveq	r3, r2
 800a848:	4a0a      	ldr	r2, [pc, #40]	; (800a874 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a84a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a84e:	f7ff fdcd 	bl	800a3ec <snprintf>
 800a852:	f642 1305 	movw	r3, #10501	; 0x2905
 800a856:	9300      	str	r3, [sp, #0]
 800a858:	b282      	uxth	r2, r0
 800a85a:	69a3      	ldr	r3, [r4, #24]
 800a85c:	6829      	ldr	r1, [r5, #0]
 800a85e:	7d20      	ldrb	r0, [r4, #20]
 800a860:	f007 f8bc 	bl	80119dc <udp_send>
 800a864:	b003      	add	sp, #12
 800a866:	bd30      	pop	{r4, r5, pc}
 800a868:	200000fc 	strdcs	r0, [r0], -ip
 800a86c:	08017e6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800a870:	08017e6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800a874:	08017e7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}

0800a878 <RemoteConfig::HandleVersion()>:
 800a878:	69c3      	ldr	r3, [r0, #28]
 800a87a:	2b08      	cmp	r3, #8
 800a87c:	d114      	bne.n	800a8a8 <RemoteConfig::HandleVersion()+0x30>
 800a87e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a880:	4d0a      	ldr	r5, [pc, #40]	; (800a8ac <RemoteConfig::HandleVersion()+0x34>)
 800a882:	4b0b      	ldr	r3, [pc, #44]	; (800a8b0 <RemoteConfig::HandleVersion()+0x38>)
 800a884:	4a0b      	ldr	r2, [pc, #44]	; (800a8b4 <RemoteConfig::HandleVersion()+0x3c>)
 800a886:	4604      	mov	r4, r0
 800a888:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a88c:	6828      	ldr	r0, [r5, #0]
 800a88e:	f7ff fdad 	bl	800a3ec <snprintf>
 800a892:	f642 1305 	movw	r3, #10501	; 0x2905
 800a896:	9300      	str	r3, [sp, #0]
 800a898:	b282      	uxth	r2, r0
 800a89a:	69a3      	ldr	r3, [r4, #24]
 800a89c:	6829      	ldr	r1, [r5, #0]
 800a89e:	7d20      	ldrb	r0, [r4, #20]
 800a8a0:	f007 f89c 	bl	80119dc <udp_send>
 800a8a4:	b003      	add	sp, #12
 800a8a6:	bd30      	pop	{r4, r5, pc}
 800a8a8:	4770      	bx	lr
 800a8aa:	bf00      	nop
 800a8ac:	200000fc 	strdcs	r0, [r0], -ip
 800a8b0:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>
 800a8b4:	08017e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, ip, sp, lr}

0800a8b8 <RemoteConfig::HandleUptime()>:
 800a8b8:	7bc3      	ldrb	r3, [r0, #15]
 800a8ba:	b1e3      	cbz	r3, 800a8f6 <RemoteConfig::HandleUptime()+0x3e>
 800a8bc:	4b0e      	ldr	r3, [pc, #56]	; (800a8f8 <RemoteConfig::HandleUptime()+0x40>)
 800a8be:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a8c0:	681a      	ldr	r2, [r3, #0]
 800a8c2:	69c3      	ldr	r3, [r0, #28]
 800a8c4:	2b07      	cmp	r3, #7
 800a8c6:	4604      	mov	r4, r0
 800a8c8:	d113      	bne.n	800a8f2 <RemoteConfig::HandleUptime()+0x3a>
 800a8ca:	4d0c      	ldr	r5, [pc, #48]	; (800a8fc <RemoteConfig::HandleUptime()+0x44>)
 800a8cc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a8d0:	6828      	ldr	r0, [r5, #0]
 800a8d2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a8d6:	fbb2 f3f3 	udiv	r3, r2, r3
 800a8da:	4a09      	ldr	r2, [pc, #36]	; (800a900 <RemoteConfig::HandleUptime()+0x48>)
 800a8dc:	f7ff fd86 	bl	800a3ec <snprintf>
 800a8e0:	f642 1305 	movw	r3, #10501	; 0x2905
 800a8e4:	9300      	str	r3, [sp, #0]
 800a8e6:	b282      	uxth	r2, r0
 800a8e8:	69a3      	ldr	r3, [r4, #24]
 800a8ea:	6829      	ldr	r1, [r5, #0]
 800a8ec:	7d20      	ldrb	r0, [r4, #20]
 800a8ee:	f007 f875 	bl	80119dc <udp_send>
 800a8f2:	b003      	add	sp, #12
 800a8f4:	bd30      	pop	{r4, r5, pc}
 800a8f6:	4770      	bx	lr
 800a8f8:	2000fd94 	mulcs	r0, r4, sp
 800a8fc:	200000fc 	strdcs	r0, [r0], -ip
 800a900:	08017e93 	stmdaeq	r1, {r0, r1, r4, r7, r9, sl, fp, ip, sp, lr}

0800a904 <Display::Status(Display7SegmentMessage)>:
 800a904:	7c43      	ldrb	r3, [r0, #17]
 800a906:	b1bb      	cbz	r3, 800a938 <Display::Status(Display7SegmentMessage)+0x34>
 800a908:	b513      	push	{r0, r1, r4, lr}
 800a90a:	2312      	movs	r3, #18
 800a90c:	43c9      	mvns	r1, r1
 800a90e:	4604      	mov	r4, r0
 800a910:	f88d 3004 	strb.w	r3, [sp, #4]
 800a914:	7a00      	ldrb	r0, [r0, #8]
 800a916:	f88d 1006 	strb.w	r1, [sp, #6]
 800a91a:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800a91e:	f88d 3005 	strb.w	r3, [sp, #5]
 800a922:	f00c fb2d 	bl	8016f80 <gd32_i2c_set_address>
 800a926:	68e0      	ldr	r0, [r4, #12]
 800a928:	f00c fb22 	bl	8016f70 <gd32_i2c_set_baudrate>
 800a92c:	2103      	movs	r1, #3
 800a92e:	a801      	add	r0, sp, #4
 800a930:	f00c fb2c 	bl	8016f8c <gd32_i2c_write>
 800a934:	b002      	add	sp, #8
 800a936:	bd10      	pop	{r4, pc}
 800a938:	4770      	bx	lr
	...

0800a93c <RemoteConfig::HandleDisplaySet()>:
 800a93c:	b508      	push	{r3, lr}
 800a93e:	69c3      	ldr	r3, [r0, #28]
 800a940:	2b09      	cmp	r3, #9
 800a942:	d10a      	bne.n	800a95a <RemoteConfig::HandleDisplaySet()+0x1e>
 800a944:	4b05      	ldr	r3, [pc, #20]	; (800a95c <RemoteConfig::HandleDisplaySet()+0x20>)
 800a946:	681b      	ldr	r3, [r3, #0]
 800a948:	7a59      	ldrb	r1, [r3, #9]
 800a94a:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800a94e:	4259      	negs	r1, r3
 800a950:	4159      	adcs	r1, r3
 800a952:	4b03      	ldr	r3, [pc, #12]	; (800a960 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a954:	6818      	ldr	r0, [r3, #0]
 800a956:	f7fe fd1f 	bl	8009398 <Display::SetSleep(bool)>
 800a95a:	bd08      	pop	{r3, pc}
 800a95c:	200000fc 	strdcs	r0, [r0], -ip
 800a960:	2000fc90 	mulcs	r0, r0, ip

0800a964 <RemoteConfig::HandleTftpSet()>:
 800a964:	69c3      	ldr	r3, [r0, #28]
 800a966:	2b06      	cmp	r3, #6
 800a968:	d127      	bne.n	800a9ba <RemoteConfig::HandleTftpSet()+0x56>
 800a96a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a96c:	4b13      	ldr	r3, [pc, #76]	; (800a9bc <RemoteConfig::HandleTftpSet()+0x58>)
 800a96e:	4d14      	ldr	r5, [pc, #80]	; (800a9c0 <RemoteConfig::HandleTftpSet()+0x5c>)
 800a970:	681b      	ldr	r3, [r3, #0]
 800a972:	799b      	ldrb	r3, [r3, #6]
 800a974:	2b30      	cmp	r3, #48	; 0x30
 800a976:	bf14      	ite	ne
 800a978:	2301      	movne	r3, #1
 800a97a:	2300      	moveq	r3, #0
 800a97c:	4604      	mov	r4, r0
 800a97e:	f880 3020 	strb.w	r3, [r0, #32]
 800a982:	6828      	ldr	r0, [r5, #0]
 800a984:	d012      	beq.n	800a9ac <RemoteConfig::HandleTftpSet()+0x48>
 800a986:	2100      	movs	r1, #0
 800a988:	f7fe fd06 	bl	8009398 <Display::SetSleep(bool)>
 800a98c:	6828      	ldr	r0, [r5, #0]
 800a98e:	490d      	ldr	r1, [pc, #52]	; (800a9c4 <RemoteConfig::HandleTftpSet()+0x60>)
 800a990:	9001      	str	r0, [sp, #4]
 800a992:	f7fe fca3 	bl	80092dc <Display::TextStatus(char const*)>
 800a996:	f244 0171 	movw	r1, #16497	; 0x4071
 800a99a:	9801      	ldr	r0, [sp, #4]
 800a99c:	f7ff ffb2 	bl	800a904 <Display::Status(Display7SegmentMessage)>
 800a9a0:	4620      	mov	r0, r4
 800a9a2:	b003      	add	sp, #12
 800a9a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a9a8:	f000 bce2 	b.w	800b370 <RemoteConfig::PlatformHandleTftpSet()>
 800a9ac:	4906      	ldr	r1, [pc, #24]	; (800a9c8 <RemoteConfig::HandleTftpSet()+0x64>)
 800a9ae:	9001      	str	r0, [sp, #4]
 800a9b0:	f7fe fc94 	bl	80092dc <Display::TextStatus(char const*)>
 800a9b4:	f248 0171 	movw	r1, #32881	; 0x8071
 800a9b8:	e7ef      	b.n	800a99a <RemoteConfig::HandleTftpSet()+0x36>
 800a9ba:	4770      	bx	lr
 800a9bc:	200000fc 	strdcs	r0, [r0], -ip
 800a9c0:	2000fc90 	mulcs	r0, r0, ip
 800a9c4:	08017ea0 	stmdaeq	r1, {r5, r7, r9, sl, fp, ip, sp, lr}
 800a9c8:	08017eb2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, fp, ip, sp, lr}

0800a9cc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a9cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a9d0:	2500      	movs	r5, #0
 800a9d2:	461f      	mov	r7, r3
 800a9d4:	6083      	str	r3, [r0, #8]
 800a9d6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a9da:	4e13      	ldr	r6, [pc, #76]	; (800aa28 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 800a9dc:	f8df a050 	ldr.w	sl, [pc, #80]	; 800aa30 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 800a9e0:	60c5      	str	r5, [r0, #12]
 800a9e2:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800a9e6:	4b11      	ldr	r3, [pc, #68]	; (800aa2c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 800a9e8:	8205      	strh	r5, [r0, #16]
 800a9ea:	e9c0 1200 	strd	r1, r2, [r0]
 800a9ee:	4604      	mov	r4, r0
 800a9f0:	6018      	str	r0, [r3, #0]
 800a9f2:	4689      	mov	r9, r1
 800a9f4:	61c5      	str	r5, [r0, #28]
 800a9f6:	f880 5020 	strb.w	r5, [r0, #32]
 800a9fa:	4631      	mov	r1, r6
 800a9fc:	f8da 0000 	ldr.w	r0, [sl]
 800aa00:	4690      	mov	r8, r2
 800aa02:	f007 fcbe 	bl	8012382 <Network::MacAddressCopyTo(unsigned char*)>
 800aa06:	f8da 0000 	ldr.w	r0, [sl]
 800aa0a:	f886 9006 	strb.w	r9, [r6, #6]
 800aa0e:	f642 1105 	movw	r1, #10501	; 0x2905
 800aa12:	f886 8007 	strb.w	r8, [r6, #7]
 800aa16:	7237      	strb	r7, [r6, #8]
 800aa18:	7275      	strb	r5, [r6, #9]
 800aa1a:	f007 fcac 	bl	8012376 <Network::Begin(unsigned short)>
 800aa1e:	6160      	str	r0, [r4, #20]
 800aa20:	4620      	mov	r0, r4
 800aa22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aa26:	bf00      	nop
 800aa28:	20000100 	andcs	r0, r0, r0, lsl #2
 800aa2c:	20000124 	andcs	r0, r0, r4, lsr #2
 800aa30:	2000f994 	mulcs	r0, r4, r9

0800aa34 <RemoteConfig::GetStringNode() const>:
 800aa34:	4b03      	ldr	r3, [pc, #12]	; (800aa44 <RemoteConfig::GetStringNode() const+0x10>)
 800aa36:	7998      	ldrb	r0, [r3, #6]
 800aa38:	4b03      	ldr	r3, [pc, #12]	; (800aa48 <RemoteConfig::GetStringNode() const+0x14>)
 800aa3a:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800aa3e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800aa42:	4770      	bx	lr
 800aa44:	20000100 	andcs	r0, r0, r0, lsl #2
 800aa48:	08017f28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, ip, sp, lr}

0800aa4c <RemoteConfig::GetStringOutput() const>:
 800aa4c:	4b03      	ldr	r3, [pc, #12]	; (800aa5c <RemoteConfig::GetStringOutput() const+0x10>)
 800aa4e:	79d8      	ldrb	r0, [r3, #7]
 800aa50:	4b03      	ldr	r3, [pc, #12]	; (800aa60 <RemoteConfig::GetStringOutput() const+0x14>)
 800aa52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800aa56:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800aa5a:	4770      	bx	lr
 800aa5c:	20000100 	andcs	r0, r0, r0, lsl #2
 800aa60:	08017fee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0800aa64 <RemoteConfig::SetDisable(bool)>:
 800aa64:	b538      	push	{r3, r4, r5, lr}
 800aa66:	7b03      	ldrb	r3, [r0, #12]
 800aa68:	4604      	mov	r4, r0
 800aa6a:	b161      	cbz	r1, 800aa86 <RemoteConfig::SetDisable(bool)+0x22>
 800aa6c:	b953      	cbnz	r3, 800aa84 <RemoteConfig::SetDisable(bool)+0x20>
 800aa6e:	4b0c      	ldr	r3, [pc, #48]	; (800aaa0 <RemoteConfig::SetDisable(bool)+0x3c>)
 800aa70:	f642 1105 	movw	r1, #10501	; 0x2905
 800aa74:	6818      	ldr	r0, [r3, #0]
 800aa76:	f007 fc81 	bl	801237c <Network::End(unsigned short)>
 800aa7a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aa7e:	6163      	str	r3, [r4, #20]
 800aa80:	2301      	movs	r3, #1
 800aa82:	7323      	strb	r3, [r4, #12]
 800aa84:	bd38      	pop	{r3, r4, r5, pc}
 800aa86:	2b00      	cmp	r3, #0
 800aa88:	d0fc      	beq.n	800aa84 <RemoteConfig::SetDisable(bool)+0x20>
 800aa8a:	4b05      	ldr	r3, [pc, #20]	; (800aaa0 <RemoteConfig::SetDisable(bool)+0x3c>)
 800aa8c:	460d      	mov	r5, r1
 800aa8e:	6818      	ldr	r0, [r3, #0]
 800aa90:	f642 1105 	movw	r1, #10501	; 0x2905
 800aa94:	f007 fc6f 	bl	8012376 <Network::Begin(unsigned short)>
 800aa98:	7325      	strb	r5, [r4, #12]
 800aa9a:	6160      	str	r0, [r4, #20]
 800aa9c:	e7f2      	b.n	800aa84 <RemoteConfig::SetDisable(bool)+0x20>
 800aa9e:	bf00      	nop
 800aaa0:	2000f994 	mulcs	r0, r4, r9

0800aaa4 <RemoteConfig::SetDisplayName(char const*)>:
 800aaa4:	4809      	ldr	r0, [pc, #36]	; (800aacc <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800aaa6:	b508      	push	{r3, lr}
 800aaa8:	2217      	movs	r2, #23
 800aaaa:	1e4b      	subs	r3, r1, #1
 800aaac:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800aab0:	b911      	cbnz	r1, 800aab8 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800aab2:	f00a fded 	bl	8015690 <memset>
 800aab6:	e003      	b.n	800aac0 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800aab8:	3a01      	subs	r2, #1
 800aaba:	f800 1b01 	strb.w	r1, [r0], #1
 800aabe:	d1f5      	bne.n	800aaac <RemoteConfig::SetDisplayName(char const*)+0x8>
 800aac0:	4b03      	ldr	r3, [pc, #12]	; (800aad0 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800aac2:	2200      	movs	r2, #0
 800aac4:	f883 2020 	strb.w	r2, [r3, #32]
 800aac8:	bd08      	pop	{r3, pc}
 800aaca:	bf00      	nop
 800aacc:	20000109 	andcs	r0, r0, r9, lsl #2
 800aad0:	20000100 	andcs	r0, r0, r0, lsl #2

0800aad4 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800aad4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aad6:	4f2a      	ldr	r7, [pc, #168]	; (800ab80 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800aad8:	b085      	sub	sp, #20
 800aada:	4604      	mov	r4, r0
 800aadc:	4616      	mov	r6, r2
 800aade:	460d      	mov	r5, r1
 800aae0:	b9a9      	cbnz	r1, 800ab0e <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800aae2:	6839      	ldr	r1, [r7, #0]
 800aae4:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800aae8:	aa03      	add	r2, sp, #12
 800aaea:	3105      	adds	r1, #5
 800aaec:	9303      	str	r3, [sp, #12]
 800aaee:	f000 fc15 	bl	800b31c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aaf2:	1e03      	subs	r3, r0, #0
 800aaf4:	da1b      	bge.n	800ab2e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800aaf6:	f642 1305 	movw	r3, #10501	; 0x2905
 800aafa:	9300      	str	r3, [sp, #0]
 800aafc:	4921      	ldr	r1, [pc, #132]	; (800ab84 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800aafe:	69a3      	ldr	r3, [r4, #24]
 800ab00:	7d20      	ldrb	r0, [r4, #20]
 800ab02:	220b      	movs	r2, #11
 800ab04:	f006 ff6a 	bl	80119dc <udp_send>
 800ab08:	200c      	movs	r0, #12
 800ab0a:	b005      	add	sp, #20
 800ab0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab0e:	9203      	str	r2, [sp, #12]
 800ab10:	aa03      	add	r2, sp, #12
 800ab12:	6039      	str	r1, [r7, #0]
 800ab14:	f000 fc02 	bl	800b31c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800ab18:	1e03      	subs	r3, r0, #0
 800ab1a:	da08      	bge.n	800ab2e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800ab1c:	2e0b      	cmp	r6, #11
 800ab1e:	4632      	mov	r2, r6
 800ab20:	4918      	ldr	r1, [pc, #96]	; (800ab84 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800ab22:	bf28      	it	cs
 800ab24:	220b      	movcs	r2, #11
 800ab26:	4628      	mov	r0, r5
 800ab28:	f00a fd90 	bl	801564c <memcpy>
 800ab2c:	e7ec      	b.n	800ab08 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800ab2e:	4916      	ldr	r1, [pc, #88]	; (800ab88 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800ab30:	221c      	movs	r2, #28
 800ab32:	4353      	muls	r3, r2
 800ab34:	18ca      	adds	r2, r1, r3
 800ab36:	58cb      	ldr	r3, [r1, r3]
 800ab38:	6852      	ldr	r2, [r2, #4]
 800ab3a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800ab3e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ab42:	07d2      	lsls	r2, r2, #31
 800ab44:	bf48      	it	mi
 800ab46:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800ab4a:	a903      	add	r1, sp, #12
 800ab4c:	bf48      	it	mi
 800ab4e:	58d3      	ldrmi	r3, [r2, r3]
 800ab50:	4798      	blx	r3
 800ab52:	b95d      	cbnz	r5, 800ab6c <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800ab54:	f642 1305 	movw	r3, #10501	; 0x2905
 800ab58:	9300      	str	r3, [sp, #0]
 800ab5a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ab5e:	69a3      	ldr	r3, [r4, #24]
 800ab60:	6839      	ldr	r1, [r7, #0]
 800ab62:	7d20      	ldrb	r0, [r4, #20]
 800ab64:	f006 ff3a 	bl	80119dc <udp_send>
 800ab68:	9803      	ldr	r0, [sp, #12]
 800ab6a:	e7ce      	b.n	800ab0a <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800ab6c:	9a03      	ldr	r2, [sp, #12]
 800ab6e:	6839      	ldr	r1, [r7, #0]
 800ab70:	42b2      	cmp	r2, r6
 800ab72:	bf28      	it	cs
 800ab74:	4632      	movcs	r2, r6
 800ab76:	4628      	mov	r0, r5
 800ab78:	f00a fd73 	bl	8015662 <memmove>
 800ab7c:	e7f4      	b.n	800ab68 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800ab7e:	bf00      	nop
 800ab80:	200000fc 	strdcs	r0, [r0], -ip
 800ab84:	08017ec5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, fp, ip, sp, lr}
 800ab88:	080181b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, pc}

0800ab8c <RemoteConfig::HandleGetNoParams()>:
 800ab8c:	2200      	movs	r2, #0
 800ab8e:	4611      	mov	r1, r2
 800ab90:	f7ff bfa0 	b.w	800aad4 <RemoteConfig::HandleGet(void*, unsigned int)>

0800ab94 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800ab94:	b500      	push	{lr}
 800ab96:	4a09      	ldr	r2, [pc, #36]	; (800abbc <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800ab98:	b08d      	sub	sp, #52	; 0x34
 800ab9a:	a803      	add	r0, sp, #12
 800ab9c:	9101      	str	r1, [sp, #4]
 800ab9e:	6811      	ldr	r1, [r2, #0]
 800aba0:	f000 fa18 	bl	800afd4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800aba4:	4906      	ldr	r1, [pc, #24]	; (800abc0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x2c>)
 800aba6:	9b01      	ldr	r3, [sp, #4]
 800aba8:	6809      	ldr	r1, [r1, #0]
 800abaa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800abae:	a803      	add	r0, sp, #12
 800abb0:	f000 fb34 	bl	800b21c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800abb4:	b00d      	add	sp, #52	; 0x34
 800abb6:	f85d fb04 	ldr.w	pc, [sp], #4
 800abba:	bf00      	nop
 800abbc:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>
 800abc0:	200000fc 	strdcs	r0, [r0], -ip

0800abc4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800abc4:	b500      	push	{lr}
 800abc6:	4a09      	ldr	r2, [pc, #36]	; (800abec <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800abc8:	b09d      	sub	sp, #116	; 0x74
 800abca:	a803      	add	r0, sp, #12
 800abcc:	9101      	str	r1, [sp, #4]
 800abce:	6811      	ldr	r1, [r2, #0]
 800abd0:	f007 fece 	bl	8012970 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800abd4:	4906      	ldr	r1, [pc, #24]	; (800abf0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x2c>)
 800abd6:	9b01      	ldr	r3, [sp, #4]
 800abd8:	6809      	ldr	r1, [r1, #0]
 800abda:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800abde:	a803      	add	r0, sp, #12
 800abe0:	f008 f8a0 	bl	8012d24 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800abe4:	b01d      	add	sp, #116	; 0x74
 800abe6:	f85d fb04 	ldr.w	pc, [sp], #4
 800abea:	bf00      	nop
 800abec:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>
 800abf0:	200000fc 	strdcs	r0, [r0], -ip

0800abf4 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800abf4:	b500      	push	{lr}
 800abf6:	4a09      	ldr	r2, [pc, #36]	; (800ac1c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800abf8:	b08d      	sub	sp, #52	; 0x34
 800abfa:	a803      	add	r0, sp, #12
 800abfc:	9101      	str	r1, [sp, #4]
 800abfe:	6811      	ldr	r1, [r2, #0]
 800ac00:	f002 f816 	bl	800cc30 <E131Params::E131Params(E131ParamsStore*)>
 800ac04:	4906      	ldr	r1, [pc, #24]	; (800ac20 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x2c>)
 800ac06:	9b01      	ldr	r3, [sp, #4]
 800ac08:	6809      	ldr	r1, [r1, #0]
 800ac0a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ac0e:	a803      	add	r0, sp, #12
 800ac10:	f002 fb04 	bl	800d21c <E131Params::Save(char*, unsigned int, unsigned int&)>
 800ac14:	b00d      	add	sp, #52	; 0x34
 800ac16:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac1a:	bf00      	nop
 800ac1c:	2000fc80 	andcs	pc, r0, r0, lsl #25
 800ac20:	200000fc 	strdcs	r0, [r0], -ip

0800ac24 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800ac24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ac26:	4a08      	ldr	r2, [pc, #32]	; (800ac48 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800ac28:	9101      	str	r1, [sp, #4]
 800ac2a:	a802      	add	r0, sp, #8
 800ac2c:	6811      	ldr	r1, [r2, #0]
 800ac2e:	f003 fe81 	bl	800e934 <DmxParams::DmxParams(DmxParamsStore*)>
 800ac32:	4906      	ldr	r1, [pc, #24]	; (800ac4c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800ac34:	9b01      	ldr	r3, [sp, #4]
 800ac36:	6809      	ldr	r1, [r1, #0]
 800ac38:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ac3c:	a802      	add	r0, sp, #8
 800ac3e:	f003 ff9b 	bl	800eb78 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800ac42:	b007      	add	sp, #28
 800ac44:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac48:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>
 800ac4c:	200000fc 	strdcs	r0, [r0], -ip

0800ac50 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800ac50:	b500      	push	{lr}
 800ac52:	4a09      	ldr	r2, [pc, #36]	; (800ac78 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800ac54:	b093      	sub	sp, #76	; 0x4c
 800ac56:	a803      	add	r0, sp, #12
 800ac58:	9101      	str	r1, [sp, #4]
 800ac5a:	6811      	ldr	r1, [r2, #0]
 800ac5c:	f004 fd4e 	bl	800f6fc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ac60:	4906      	ldr	r1, [pc, #24]	; (800ac7c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x2c>)
 800ac62:	9b01      	ldr	r3, [sp, #4]
 800ac64:	6809      	ldr	r1, [r1, #0]
 800ac66:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ac6a:	a803      	add	r0, sp, #12
 800ac6c:	f005 f868 	bl	800fd40 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 800ac70:	b013      	add	sp, #76	; 0x4c
 800ac72:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac76:	bf00      	nop
 800ac78:	2000fc84 	andcs	pc, r0, r4, lsl #25
 800ac7c:	200000fc 	strdcs	r0, [r0], -ip

0800ac80 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800ac80:	b500      	push	{lr}
 800ac82:	4a09      	ldr	r2, [pc, #36]	; (800aca8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800ac84:	b08d      	sub	sp, #52	; 0x34
 800ac86:	a802      	add	r0, sp, #8
 800ac88:	9101      	str	r1, [sp, #4]
 800ac8a:	6811      	ldr	r1, [r2, #0]
 800ac8c:	f008 fdf0 	bl	8013870 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ac90:	4906      	ldr	r1, [pc, #24]	; (800acac <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x2c>)
 800ac92:	9b01      	ldr	r3, [sp, #4]
 800ac94:	6809      	ldr	r1, [r1, #0]
 800ac96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ac9a:	a802      	add	r0, sp, #8
 800ac9c:	f008 ff22 	bl	8013ae4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800aca0:	b00d      	add	sp, #52	; 0x34
 800aca2:	f85d fb04 	ldr.w	pc, [sp], #4
 800aca6:	bf00      	nop
 800aca8:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>
 800acac:	200000fc 	strdcs	r0, [r0], -ip

0800acb0 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800acb0:	b530      	push	{r4, r5, lr}
 800acb2:	b085      	sub	sp, #20
 800acb4:	4604      	mov	r4, r0
 800acb6:	9201      	str	r2, [sp, #4]
 800acb8:	b9d1      	cbnz	r1, 800acf0 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800acba:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800acbe:	9303      	str	r3, [sp, #12]
 800acc0:	4b19      	ldr	r3, [pc, #100]	; (800ad28 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800acc2:	6819      	ldr	r1, [r3, #0]
 800acc4:	aa03      	add	r2, sp, #12
 800acc6:	3101      	adds	r1, #1
 800acc8:	f000 fb28 	bl	800b31c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800accc:	2800      	cmp	r0, #0
 800acce:	db0d      	blt.n	800acec <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800acd0:	4b16      	ldr	r3, [pc, #88]	; (800ad2c <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 800acd2:	221c      	movs	r2, #28
 800acd4:	fb02 3300 	mla	r3, r2, r0, r3
 800acd8:	68da      	ldr	r2, [r3, #12]
 800acda:	689b      	ldr	r3, [r3, #8]
 800acdc:	1051      	asrs	r1, r2, #1
 800acde:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ace2:	07d2      	lsls	r2, r2, #31
 800ace4:	bf44      	itt	mi
 800ace6:	5862      	ldrmi	r2, [r4, r1]
 800ace8:	58d3      	ldrmi	r3, [r2, r3]
 800acea:	4798      	blx	r3
 800acec:	b005      	add	sp, #20
 800acee:	bd30      	pop	{r4, r5, pc}
 800acf0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800acf4:	d8fa      	bhi.n	800acec <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800acf6:	4b0e      	ldr	r3, [pc, #56]	; (800ad30 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800acf8:	781b      	ldrb	r3, [r3, #0]
 800acfa:	460d      	mov	r5, r1
 800acfc:	07d9      	lsls	r1, r3, #31
 800acfe:	d50b      	bpl.n	800ad18 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ad00:	782b      	ldrb	r3, [r5, #0]
 800ad02:	2b7b      	cmp	r3, #123	; 0x7b
 800ad04:	d108      	bne.n	800ad18 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ad06:	1e51      	subs	r1, r2, #1
 800ad08:	b289      	uxth	r1, r1
 800ad0a:	2200      	movs	r2, #0
 800ad0c:	4628      	mov	r0, r5
 800ad0e:	f009 fcc5 	bl	801469c <properties::convert_json_file(char*, unsigned short, bool)>
 800ad12:	1e02      	subs	r2, r0, #0
 800ad14:	ddea      	ble.n	800acec <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ad16:	b292      	uxth	r2, r2
 800ad18:	4b03      	ldr	r3, [pc, #12]	; (800ad28 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800ad1a:	61e2      	str	r2, [r4, #28]
 800ad1c:	601d      	str	r5, [r3, #0]
 800ad1e:	aa01      	add	r2, sp, #4
 800ad20:	1c69      	adds	r1, r5, #1
 800ad22:	4620      	mov	r0, r4
 800ad24:	e7d0      	b.n	800acc8 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ad26:	bf00      	nop
 800ad28:	200000fc 	strdcs	r0, [r0], -ip
 800ad2c:	080181b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, pc}
 800ad30:	2000fc8c 	andcs	pc, r0, ip, lsl #25

0800ad34 <RemoteConfig::Run()>:
 800ad34:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ad38:	7b05      	ldrb	r5, [r0, #12]
 800ad3a:	2d00      	cmp	r5, #0
 800ad3c:	d156      	bne.n	800adec <RemoteConfig::Run()+0xb8>
 800ad3e:	4e45      	ldr	r6, [pc, #276]	; (800ae54 <RemoteConfig::Run()+0x120>)
 800ad40:	4604      	mov	r4, r0
 800ad42:	f100 0218 	add.w	r2, r0, #24
 800ad46:	f10d 030e 	add.w	r3, sp, #14
 800ad4a:	7d00      	ldrb	r0, [r0, #20]
 800ad4c:	4631      	mov	r1, r6
 800ad4e:	f006 fe1f 	bl	8011990 <udp_recv2>
 800ad52:	2803      	cmp	r0, #3
 800ad54:	61e0      	str	r0, [r4, #28]
 800ad56:	d949      	bls.n	800adec <RemoteConfig::Run()+0xb8>
 800ad58:	1e43      	subs	r3, r0, #1
 800ad5a:	6831      	ldr	r1, [r6, #0]
 800ad5c:	5cca      	ldrb	r2, [r1, r3]
 800ad5e:	2a0a      	cmp	r2, #10
 800ad60:	bf18      	it	ne
 800ad62:	4603      	movne	r3, r0
 800ad64:	61e3      	str	r3, [r4, #28]
 800ad66:	7808      	ldrb	r0, [r1, #0]
 800ad68:	283f      	cmp	r0, #63	; 0x3f
 800ad6a:	d137      	bne.n	800addc <RemoteConfig::Run()+0xa8>
 800ad6c:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 800ae6c <RemoteConfig::Run()+0x138>
 800ad70:	3b01      	subs	r3, #1
 800ad72:	61e3      	str	r3, [r4, #28]
 800ad74:	462a      	mov	r2, r5
 800ad76:	4667      	mov	r7, ip
 800ad78:	f89c 500e 	ldrb.w	r5, [ip, #14]
 800ad7c:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800ad80:	b16d      	cbz	r5, 800ad9e <RemoteConfig::Run()+0x6a>
 800ad82:	4283      	cmp	r3, r0
 800ad84:	d80d      	bhi.n	800ada2 <RemoteConfig::Run()+0x6e>
 800ad86:	3201      	adds	r2, #1
 800ad88:	2a09      	cmp	r2, #9
 800ad8a:	f10c 0c10 	add.w	ip, ip, #16
 800ad8e:	d1f3      	bne.n	800ad78 <RemoteConfig::Run()+0x44>
 800ad90:	f642 1305 	movw	r3, #10501	; 0x2905
 800ad94:	9300      	str	r3, [sp, #0]
 800ad96:	69a3      	ldr	r3, [r4, #24]
 800ad98:	492f      	ldr	r1, [pc, #188]	; (800ae58 <RemoteConfig::Run()+0x124>)
 800ad9a:	2208      	movs	r2, #8
 800ad9c:	e04e      	b.n	800ae3c <RemoteConfig::Run()+0x108>
 800ad9e:	4283      	cmp	r3, r0
 800ada0:	d1f1      	bne.n	800ad86 <RemoteConfig::Run()+0x52>
 800ada2:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800ada6:	460e      	mov	r6, r1
 800ada8:	3d01      	subs	r5, #1
 800adaa:	4408      	add	r0, r1
 800adac:	4286      	cmp	r6, r0
 800adae:	d10b      	bne.n	800adc8 <RemoteConfig::Run()+0x94>
 800adb0:	0113      	lsls	r3, r2, #4
 800adb2:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800adb6:	58fb      	ldr	r3, [r7, r3]
 800adb8:	6852      	ldr	r2, [r2, #4]
 800adba:	1051      	asrs	r1, r2, #1
 800adbc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800adc0:	07d2      	lsls	r2, r2, #31
 800adc2:	d408      	bmi.n	800add6 <RemoteConfig::Run()+0xa2>
 800adc4:	4798      	blx	r3
 800adc6:	e011      	b.n	800adec <RemoteConfig::Run()+0xb8>
 800adc8:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800adcc:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800add0:	45f0      	cmp	r8, lr
 800add2:	d0eb      	beq.n	800adac <RemoteConfig::Run()+0x78>
 800add4:	e7d7      	b.n	800ad86 <RemoteConfig::Run()+0x52>
 800add6:	5862      	ldr	r2, [r4, r1]
 800add8:	58d3      	ldr	r3, [r2, r3]
 800adda:	e7f3      	b.n	800adc4 <RemoteConfig::Run()+0x90>
 800addc:	7b62      	ldrb	r2, [r4, #13]
 800adde:	b92a      	cbnz	r2, 800adec <RemoteConfig::Run()+0xb8>
 800ade0:	2823      	cmp	r0, #35	; 0x23
 800ade2:	d106      	bne.n	800adf2 <RemoteConfig::Run()+0xbe>
 800ade4:	4611      	mov	r1, r2
 800ade6:	4620      	mov	r0, r4
 800ade8:	f7ff ff62 	bl	800acb0 <RemoteConfig::HandleSet(void*, unsigned int)>
 800adec:	b004      	add	sp, #16
 800adee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adf2:	2821      	cmp	r0, #33	; 0x21
 800adf4:	d1fa      	bne.n	800adec <RemoteConfig::Run()+0xb8>
 800adf6:	3b01      	subs	r3, #1
 800adf8:	2b05      	cmp	r3, #5
 800adfa:	61e3      	str	r3, [r4, #28]
 800adfc:	d918      	bls.n	800ae30 <RemoteConfig::Run()+0xfc>
 800adfe:	4d17      	ldr	r5, [pc, #92]	; (800ae5c <RemoteConfig::Run()+0x128>)
 800ae00:	460a      	mov	r2, r1
 800ae02:	f101 0c05 	add.w	ip, r1, #5
 800ae06:	4608      	mov	r0, r1
 800ae08:	4560      	cmp	r0, ip
 800ae0a:	d01b      	beq.n	800ae44 <RemoteConfig::Run()+0x110>
 800ae0c:	f815 6b01 	ldrb.w	r6, [r5], #1
 800ae10:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800ae14:	42b7      	cmp	r7, r6
 800ae16:	d0f7      	beq.n	800ae08 <RemoteConfig::Run()+0xd4>
 800ae18:	2b08      	cmp	r3, #8
 800ae1a:	d909      	bls.n	800ae30 <RemoteConfig::Run()+0xfc>
 800ae1c:	4b10      	ldr	r3, [pc, #64]	; (800ae60 <RemoteConfig::Run()+0x12c>)
 800ae1e:	3108      	adds	r1, #8
 800ae20:	428a      	cmp	r2, r1
 800ae22:	d015      	beq.n	800ae50 <RemoteConfig::Run()+0x11c>
 800ae24:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ae28:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800ae2c:	4285      	cmp	r5, r0
 800ae2e:	d0f7      	beq.n	800ae20 <RemoteConfig::Run()+0xec>
 800ae30:	f642 1305 	movw	r3, #10501	; 0x2905
 800ae34:	9300      	str	r3, [sp, #0]
 800ae36:	69a3      	ldr	r3, [r4, #24]
 800ae38:	490a      	ldr	r1, [pc, #40]	; (800ae64 <RemoteConfig::Run()+0x130>)
 800ae3a:	2208      	movs	r2, #8
 800ae3c:	7d20      	ldrb	r0, [r4, #20]
 800ae3e:	f006 fdcd 	bl	80119dc <udp_send>
 800ae42:	e7d3      	b.n	800adec <RemoteConfig::Run()+0xb8>
 800ae44:	2300      	movs	r3, #0
 800ae46:	4a08      	ldr	r2, [pc, #32]	; (800ae68 <RemoteConfig::Run()+0x134>)
 800ae48:	011b      	lsls	r3, r3, #4
 800ae4a:	4620      	mov	r0, r4
 800ae4c:	58d3      	ldr	r3, [r2, r3]
 800ae4e:	e7b9      	b.n	800adc4 <RemoteConfig::Run()+0x90>
 800ae50:	2301      	movs	r3, #1
 800ae52:	e7f8      	b.n	800ae46 <RemoteConfig::Run()+0x112>
 800ae54:	200000fc 	strdcs	r0, [r0], -ip
 800ae58:	08017ee9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 800ae5c:	08017ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 800ae60:	08017ed7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 800ae64:	08017ee0 	stmdaeq	r1, {r5, r6, r7, r9, sl, fp, ip, sp, lr}
 800ae68:	08018110 	stmdaeq	r1, {r4, r8, pc}
 800ae6c:	08018080 	stmdaeq	r1, {r7, pc}

0800ae70 <RemoteConfig::HandleSetRconfig()>:
 800ae70:	b510      	push	{r4, lr}
 800ae72:	4b09      	ldr	r3, [pc, #36]	; (800ae98 <RemoteConfig::HandleSetRconfig()+0x28>)
 800ae74:	b08a      	sub	sp, #40	; 0x28
 800ae76:	4604      	mov	r4, r0
 800ae78:	6819      	ldr	r1, [r3, #0]
 800ae7a:	a801      	add	r0, sp, #4
 800ae7c:	f000 f8aa 	bl	800afd4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ae80:	4b06      	ldr	r3, [pc, #24]	; (800ae9c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800ae82:	69e2      	ldr	r2, [r4, #28]
 800ae84:	6819      	ldr	r1, [r3, #0]
 800ae86:	a801      	add	r0, sp, #4
 800ae88:	f000 f8ba 	bl	800b000 <RemoteConfigParams::Load(char const*, unsigned int)>
 800ae8c:	4621      	mov	r1, r4
 800ae8e:	a801      	add	r0, sp, #4
 800ae90:	f000 f9d1 	bl	800b236 <RemoteConfigParams::Set(RemoteConfig*)>
 800ae94:	b00a      	add	sp, #40	; 0x28
 800ae96:	bd10      	pop	{r4, pc}
 800ae98:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>
 800ae9c:	200000fc 	strdcs	r0, [r0], -ip

0800aea0 <RemoteConfig::HandleSetNetworkTxt()>:
 800aea0:	b510      	push	{r4, lr}
 800aea2:	4b07      	ldr	r3, [pc, #28]	; (800aec0 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800aea4:	b09a      	sub	sp, #104	; 0x68
 800aea6:	6819      	ldr	r1, [r3, #0]
 800aea8:	4604      	mov	r4, r0
 800aeaa:	a801      	add	r0, sp, #4
 800aeac:	f007 fd60 	bl	8012970 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800aeb0:	4b04      	ldr	r3, [pc, #16]	; (800aec4 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800aeb2:	69e2      	ldr	r2, [r4, #28]
 800aeb4:	6819      	ldr	r1, [r3, #0]
 800aeb6:	a801      	add	r0, sp, #4
 800aeb8:	f007 fd72 	bl	80129a0 <NetworkParams::Load(char const*, unsigned int)>
 800aebc:	b01a      	add	sp, #104	; 0x68
 800aebe:	bd10      	pop	{r4, pc}
 800aec0:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>
 800aec4:	200000fc 	strdcs	r0, [r0], -ip

0800aec8 <RemoteConfig::HandleSetE131Txt()>:
 800aec8:	b510      	push	{r4, lr}
 800aeca:	4b07      	ldr	r3, [pc, #28]	; (800aee8 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800aecc:	b08a      	sub	sp, #40	; 0x28
 800aece:	6819      	ldr	r1, [r3, #0]
 800aed0:	4604      	mov	r4, r0
 800aed2:	a801      	add	r0, sp, #4
 800aed4:	f001 feac 	bl	800cc30 <E131Params::E131Params(E131ParamsStore*)>
 800aed8:	4b04      	ldr	r3, [pc, #16]	; (800aeec <RemoteConfig::HandleSetE131Txt()+0x24>)
 800aeda:	69e2      	ldr	r2, [r4, #28]
 800aedc:	6819      	ldr	r1, [r3, #0]
 800aede:	a801      	add	r0, sp, #4
 800aee0:	f001 fed6 	bl	800cc90 <E131Params::Load(char const*, unsigned int)>
 800aee4:	b00a      	add	sp, #40	; 0x28
 800aee6:	bd10      	pop	{r4, pc}
 800aee8:	2000fc80 	andcs	pc, r0, r0, lsl #25
 800aeec:	200000fc 	strdcs	r0, [r0], -ip

0800aef0 <RemoteConfig::HandleSetParamsTxt()>:
 800aef0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800aef2:	4b07      	ldr	r3, [pc, #28]	; (800af10 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800aef4:	4604      	mov	r4, r0
 800aef6:	6819      	ldr	r1, [r3, #0]
 800aef8:	4668      	mov	r0, sp
 800aefa:	f003 fd1b 	bl	800e934 <DmxParams::DmxParams(DmxParamsStore*)>
 800aefe:	4b05      	ldr	r3, [pc, #20]	; (800af14 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800af00:	69e2      	ldr	r2, [r4, #28]
 800af02:	6819      	ldr	r1, [r3, #0]
 800af04:	4668      	mov	r0, sp
 800af06:	f003 fd2d 	bl	800e964 <DmxParams::Load(char const*, unsigned int)>
 800af0a:	b004      	add	sp, #16
 800af0c:	bd10      	pop	{r4, pc}
 800af0e:	bf00      	nop
 800af10:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>
 800af14:	200000fc 	strdcs	r0, [r0], -ip

0800af18 <RemoteConfig::HandleSetDevicesTxt()>:
 800af18:	b510      	push	{r4, lr}
 800af1a:	4b07      	ldr	r3, [pc, #28]	; (800af38 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800af1c:	b090      	sub	sp, #64	; 0x40
 800af1e:	6819      	ldr	r1, [r3, #0]
 800af20:	4604      	mov	r4, r0
 800af22:	a801      	add	r0, sp, #4
 800af24:	f004 fbea 	bl	800f6fc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800af28:	4b04      	ldr	r3, [pc, #16]	; (800af3c <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800af2a:	69e2      	ldr	r2, [r4, #28]
 800af2c:	6819      	ldr	r1, [r3, #0]
 800af2e:	a801      	add	r0, sp, #4
 800af30:	f004 fc10 	bl	800f754 <PixelDmxParams::Load(char const*, unsigned int)>
 800af34:	b010      	add	sp, #64	; 0x40
 800af36:	bd10      	pop	{r4, pc}
 800af38:	2000fc84 	andcs	pc, r0, r4, lsl #25
 800af3c:	200000fc 	strdcs	r0, [r0], -ip

0800af40 <RemoteConfig::HandleSetDisplayTxt()>:
 800af40:	b510      	push	{r4, lr}
 800af42:	4b07      	ldr	r3, [pc, #28]	; (800af60 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800af44:	b08a      	sub	sp, #40	; 0x28
 800af46:	6819      	ldr	r1, [r3, #0]
 800af48:	4604      	mov	r4, r0
 800af4a:	4668      	mov	r0, sp
 800af4c:	f008 fc90 	bl	8013870 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800af50:	4b04      	ldr	r3, [pc, #16]	; (800af64 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800af52:	69e2      	ldr	r2, [r4, #28]
 800af54:	6819      	ldr	r1, [r3, #0]
 800af56:	4668      	mov	r0, sp
 800af58:	f008 fca4 	bl	80138a4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800af5c:	b00a      	add	sp, #40	; 0x28
 800af5e:	bd10      	pop	{r4, pc}
 800af60:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>
 800af64:	200000fc 	strdcs	r0, [r0], -ip

0800af68 <RemoteConfig::HandleFactory()>:
 800af68:	b538      	push	{r3, r4, r5, lr}
 800af6a:	4d05      	ldr	r5, [pc, #20]	; (800af80 <RemoteConfig::HandleFactory()+0x18>)
 800af6c:	2400      	movs	r4, #0
 800af6e:	4621      	mov	r1, r4
 800af70:	6828      	ldr	r0, [r5, #0]
 800af72:	3401      	adds	r4, #1
 800af74:	f008 ff4a 	bl	8013e0c <ConfigStore::ResetSetList(configstore::Store)>
 800af78:	2c1c      	cmp	r4, #28
 800af7a:	d1f8      	bne.n	800af6e <RemoteConfig::HandleFactory()+0x6>
 800af7c:	bd38      	pop	{r3, r4, r5, pc}
 800af7e:	bf00      	nop
 800af80:	2000fc68 	andcs	pc, r0, r8, ror #24

0800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800af84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af86:	460b      	mov	r3, r1
 800af88:	8885      	ldrh	r5, [r0, #4]
 800af8a:	88c1      	ldrh	r1, [r0, #6]
 800af8c:	42a9      	cmp	r1, r5
 800af8e:	d214      	bcs.n	800afba <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800af90:	4604      	mov	r4, r0
 800af92:	6800      	ldr	r0, [r0, #0]
 800af94:	1a6d      	subs	r5, r5, r1
 800af96:	4408      	add	r0, r1
 800af98:	7a21      	ldrb	r1, [r4, #8]
 800af9a:	b91a      	cbnz	r2, 800afa4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800af9c:	b919      	cbnz	r1, 800afa6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800af9e:	4a0a      	ldr	r2, [pc, #40]	; (800afc8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800afa0:	9100      	str	r1, [sp, #0]
 800afa2:	e002      	b.n	800afaa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800afa4:	b159      	cbz	r1, 800afbe <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800afa6:	9200      	str	r2, [sp, #0]
 800afa8:	4a08      	ldr	r2, [pc, #32]	; (800afcc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800afaa:	4629      	mov	r1, r5
 800afac:	f7ff fa1e 	bl	800a3ec <snprintf>
 800afb0:	4285      	cmp	r5, r0
 800afb2:	bfa2      	ittt	ge
 800afb4:	88e3      	ldrhge	r3, [r4, #6]
 800afb6:	181b      	addge	r3, r3, r0
 800afb8:	80e3      	strhge	r3, [r4, #6]
 800afba:	b003      	add	sp, #12
 800afbc:	bd30      	pop	{r4, r5, pc}
 800afbe:	2201      	movs	r2, #1
 800afc0:	9200      	str	r2, [sp, #0]
 800afc2:	4a03      	ldr	r2, [pc, #12]	; (800afd0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800afc4:	e7f1      	b.n	800afaa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800afc6:	bf00      	nop
 800afc8:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800afcc:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800afd0:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

0800afd4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800afd4:	b510      	push	{r4, lr}
 800afd6:	2220      	movs	r2, #32
 800afd8:	4604      	mov	r4, r0
 800afda:	f840 1b04 	str.w	r1, [r0], #4
 800afde:	2100      	movs	r1, #0
 800afe0:	f00a fb56 	bl	8015690 <memset>
 800afe4:	4620      	mov	r0, r4
 800afe6:	bd10      	pop	{r4, pc}

0800afe8 <RemoteConfigParams::Load()>:
 800afe8:	b508      	push	{r3, lr}
 800afea:	2300      	movs	r3, #0
 800afec:	4601      	mov	r1, r0
 800afee:	6043      	str	r3, [r0, #4]
 800aff0:	6800      	ldr	r0, [r0, #0]
 800aff2:	b120      	cbz	r0, 800affe <RemoteConfigParams::Load()+0x16>
 800aff4:	6803      	ldr	r3, [r0, #0]
 800aff6:	3104      	adds	r1, #4
 800aff8:	68db      	ldr	r3, [r3, #12]
 800affa:	4798      	blx	r3
 800affc:	2001      	movs	r0, #1
 800affe:	bd08      	pop	{r3, pc}

0800b000 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800b000:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b002:	2300      	movs	r3, #0
 800b004:	6043      	str	r3, [r0, #4]
 800b006:	4604      	mov	r4, r0
 800b008:	460d      	mov	r5, r1
 800b00a:	4616      	mov	r6, r2
 800b00c:	490a      	ldr	r1, [pc, #40]	; (800b038 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800b00e:	4602      	mov	r2, r0
 800b010:	4668      	mov	r0, sp
 800b012:	f009 fc95 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b016:	4632      	mov	r2, r6
 800b018:	4629      	mov	r1, r5
 800b01a:	4668      	mov	r0, sp
 800b01c:	f009 fc94 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 800b020:	4621      	mov	r1, r4
 800b022:	f851 0b04 	ldr.w	r0, [r1], #4
 800b026:	6803      	ldr	r3, [r0, #0]
 800b028:	689b      	ldr	r3, [r3, #8]
 800b02a:	4798      	blx	r3
 800b02c:	4668      	mov	r0, sp
 800b02e:	f009 fc8a 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 800b032:	b002      	add	sp, #8
 800b034:	bd70      	pop	{r4, r5, r6, pc}
 800b036:	bf00      	nop
 800b038:	0800b0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, ip, sp, pc}

0800b03c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800b03c:	6843      	ldr	r3, [r0, #4]
 800b03e:	b111      	cbz	r1, 800b046 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800b040:	431a      	orrs	r2, r3
 800b042:	6042      	str	r2, [r0, #4]
 800b044:	4770      	bx	lr
 800b046:	ea23 0202 	bic.w	r2, r3, r2
 800b04a:	e7fa      	b.n	800b042 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800b04c <RemoteConfigParams::callbackFunction(char const*)>:
 800b04c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b04e:	460d      	mov	r5, r1
 800b050:	4604      	mov	r4, r0
 800b052:	4923      	ldr	r1, [pc, #140]	; (800b0e0 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800b054:	f10d 0203 	add.w	r2, sp, #3
 800b058:	4628      	mov	r0, r5
 800b05a:	f009 fda6 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b05e:	b940      	cbnz	r0, 800b072 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800b060:	2201      	movs	r2, #1
 800b062:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800b066:	4620      	mov	r0, r4
 800b068:	b003      	add	sp, #12
 800b06a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b06e:	f7ff bfe5 	b.w	800b03c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800b072:	491c      	ldr	r1, [pc, #112]	; (800b0e4 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800b074:	f10d 0203 	add.w	r2, sp, #3
 800b078:	4628      	mov	r0, r5
 800b07a:	f009 fd96 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b07e:	b908      	cbnz	r0, 800b084 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800b080:	2202      	movs	r2, #2
 800b082:	e7ee      	b.n	800b062 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b084:	4918      	ldr	r1, [pc, #96]	; (800b0e8 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800b086:	f10d 0203 	add.w	r2, sp, #3
 800b08a:	4628      	mov	r0, r5
 800b08c:	f009 fd8d 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b090:	b908      	cbnz	r0, 800b096 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800b092:	2204      	movs	r2, #4
 800b094:	e7e5      	b.n	800b062 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b096:	4915      	ldr	r1, [pc, #84]	; (800b0ec <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800b098:	f10d 0203 	add.w	r2, sp, #3
 800b09c:	4628      	mov	r0, r5
 800b09e:	f009 fd84 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b0a2:	b908      	cbnz	r0, 800b0a8 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800b0a4:	2208      	movs	r2, #8
 800b0a6:	e7dc      	b.n	800b062 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b0a8:	4911      	ldr	r1, [pc, #68]	; (800b0f0 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800b0aa:	f10d 0203 	add.w	r2, sp, #3
 800b0ae:	4628      	mov	r0, r5
 800b0b0:	f009 fd7b 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b0b4:	b908      	cbnz	r0, 800b0ba <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800b0b6:	2220      	movs	r2, #32
 800b0b8:	e7d3      	b.n	800b062 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b0ba:	2317      	movs	r3, #23
 800b0bc:	9301      	str	r3, [sp, #4]
 800b0be:	490d      	ldr	r1, [pc, #52]	; (800b0f4 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800b0c0:	ab01      	add	r3, sp, #4
 800b0c2:	f104 020c 	add.w	r2, r4, #12
 800b0c6:	4628      	mov	r0, r5
 800b0c8:	f009 fc72 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b0cc:	b930      	cbnz	r0, 800b0dc <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800b0ce:	9b01      	ldr	r3, [sp, #4]
 800b0d0:	4423      	add	r3, r4
 800b0d2:	7318      	strb	r0, [r3, #12]
 800b0d4:	6863      	ldr	r3, [r4, #4]
 800b0d6:	f043 0310 	orr.w	r3, r3, #16
 800b0da:	6063      	str	r3, [r4, #4]
 800b0dc:	b003      	add	sp, #12
 800b0de:	bd30      	pop	{r4, r5, pc}
 800b0e0:	08018545 	stmdaeq	r1, {r0, r2, r6, r8, sl, pc}
 800b0e4:	08018566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, pc}
 800b0e8:	08018574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, pc}
 800b0ec:	08018582 	stmdaeq	r1, {r1, r7, r8, sl, pc}
 800b0f0:	08018590 	stmdaeq	r1, {r4, r7, r8, sl, pc}
 800b0f4:	08018559 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, pc}

0800b0f8 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800b0f8:	f7ff bfa8 	b.w	800b04c <RemoteConfigParams::callbackFunction(char const*)>

0800b0fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800b0fc:	b570      	push	{r4, r5, r6, lr}
 800b0fe:	4604      	mov	r4, r0
 800b100:	b086      	sub	sp, #24
 800b102:	4615      	mov	r5, r2
 800b104:	461e      	mov	r6, r3
 800b106:	3004      	adds	r0, #4
 800b108:	2900      	cmp	r1, #0
 800b10a:	d041      	beq.n	800b190 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800b10c:	2220      	movs	r2, #32
 800b10e:	f00a faa8 	bl	8015662 <memmove>
 800b112:	4633      	mov	r3, r6
 800b114:	462a      	mov	r2, r5
 800b116:	4937      	ldr	r1, [pc, #220]	; (800b1f4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800b118:	a803      	add	r0, sp, #12
 800b11a:	f009 fb71 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b11e:	6862      	ldr	r2, [r4, #4]
 800b120:	4935      	ldr	r1, [pc, #212]	; (800b1f8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800b122:	f002 0201 	and.w	r2, r2, #1
 800b126:	a803      	add	r0, sp, #12
 800b128:	f7ff ff2c 	bl	800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b12c:	6862      	ldr	r2, [r4, #4]
 800b12e:	4933      	ldr	r1, [pc, #204]	; (800b1fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b130:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800b134:	a803      	add	r0, sp, #12
 800b136:	f7ff ff25 	bl	800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b13a:	6862      	ldr	r2, [r4, #4]
 800b13c:	4930      	ldr	r1, [pc, #192]	; (800b200 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800b13e:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800b142:	a803      	add	r0, sp, #12
 800b144:	f7ff ff1e 	bl	800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b148:	6862      	ldr	r2, [r4, #4]
 800b14a:	492e      	ldr	r1, [pc, #184]	; (800b204 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800b14c:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800b150:	a803      	add	r0, sp, #12
 800b152:	f7ff ff17 	bl	800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b156:	6862      	ldr	r2, [r4, #4]
 800b158:	492b      	ldr	r1, [pc, #172]	; (800b208 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800b15a:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800b15e:	a803      	add	r0, sp, #12
 800b160:	f7ff ff10 	bl	800af84 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b164:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b168:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b16c:	6862      	ldr	r2, [r4, #4]
 800b16e:	42ab      	cmp	r3, r5
 800b170:	d223      	bcs.n	800b1ba <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800b172:	9803      	ldr	r0, [sp, #12]
 800b174:	06d2      	lsls	r2, r2, #27
 800b176:	4418      	add	r0, r3
 800b178:	eba5 0503 	sub.w	r5, r5, r3
 800b17c:	f104 040c 	add.w	r4, r4, #12
 800b180:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b184:	d40b      	bmi.n	800b19e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800b186:	b95b      	cbnz	r3, 800b1a0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800b188:	4b20      	ldr	r3, [pc, #128]	; (800b20c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b18a:	4a21      	ldr	r2, [pc, #132]	; (800b210 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b18c:	9400      	str	r4, [sp, #0]
 800b18e:	e00a      	b.n	800b1a6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b190:	6823      	ldr	r3, [r4, #0]
 800b192:	681a      	ldr	r2, [r3, #0]
 800b194:	4601      	mov	r1, r0
 800b196:	68d2      	ldr	r2, [r2, #12]
 800b198:	4618      	mov	r0, r3
 800b19a:	4790      	blx	r2
 800b19c:	e7b9      	b.n	800b112 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800b19e:	b32b      	cbz	r3, 800b1ec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800b1a0:	4b1a      	ldr	r3, [pc, #104]	; (800b20c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b1a2:	4a1c      	ldr	r2, [pc, #112]	; (800b214 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800b1a4:	9400      	str	r4, [sp, #0]
 800b1a6:	4629      	mov	r1, r5
 800b1a8:	f7ff f920 	bl	800a3ec <snprintf>
 800b1ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b1b0:	4285      	cmp	r5, r0
 800b1b2:	bfa4      	itt	ge
 800b1b4:	181b      	addge	r3, r3, r0
 800b1b6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b1ba:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b1be:	b17b      	cbz	r3, 800b1e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800b1c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b1c4:	9b03      	ldr	r3, [sp, #12]
 800b1c6:	4413      	add	r3, r2
 800b1c8:	227d      	movs	r2, #125	; 0x7d
 800b1ca:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b1ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b1d2:	9903      	ldr	r1, [sp, #12]
 800b1d4:	54ca      	strb	r2, [r1, r3]
 800b1d6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b1da:	3301      	adds	r3, #1
 800b1dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b1e0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b1e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b1e6:	601a      	str	r2, [r3, #0]
 800b1e8:	b006      	add	sp, #24
 800b1ea:	bd70      	pop	{r4, r5, r6, pc}
 800b1ec:	4b07      	ldr	r3, [pc, #28]	; (800b20c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b1ee:	4a0a      	ldr	r2, [pc, #40]	; (800b218 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b1f0:	9400      	str	r4, [sp, #0]
 800b1f2:	e7d8      	b.n	800b1a6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b1f4:	0801854d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, pc}
 800b1f8:	08018545 	stmdaeq	r1, {r0, r2, r6, r8, sl, pc}
 800b1fc:	08018566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, pc}
 800b200:	08018574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, pc}
 800b204:	08018582 	stmdaeq	r1, {r1, r7, r8, sl, pc}
 800b208:	08018590 	stmdaeq	r1, {r4, r7, r8, sl, pc}
 800b20c:	08018559 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, pc}
 800b210:	0801814c 	stmdaeq	r1, {r2, r3, r6, r8, pc}
 800b214:	08018141 	stmdaeq	r1, {r0, r6, r8, pc}
 800b218:	0801814d 	stmdaeq	r1, {r0, r2, r3, r6, r8, pc}

0800b21c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b21c:	b513      	push	{r0, r1, r4, lr}
 800b21e:	6804      	ldr	r4, [r0, #0]
 800b220:	b914      	cbnz	r4, 800b228 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b222:	601c      	str	r4, [r3, #0]
 800b224:	b002      	add	sp, #8
 800b226:	bd10      	pop	{r4, pc}
 800b228:	9300      	str	r3, [sp, #0]
 800b22a:	4613      	mov	r3, r2
 800b22c:	460a      	mov	r2, r1
 800b22e:	2100      	movs	r1, #0
 800b230:	f7ff ff64 	bl	800b0fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b234:	e7f6      	b.n	800b224 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b236 <RemoteConfigParams::Set(RemoteConfig*)>:
 800b236:	b538      	push	{r3, r4, r5, lr}
 800b238:	460c      	mov	r4, r1
 800b23a:	6841      	ldr	r1, [r0, #4]
 800b23c:	4605      	mov	r5, r0
 800b23e:	f001 0101 	and.w	r1, r1, #1
 800b242:	4620      	mov	r0, r4
 800b244:	f7ff fc0e 	bl	800aa64 <RemoteConfig::SetDisable(bool)>
 800b248:	686b      	ldr	r3, [r5, #4]
 800b24a:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b24e:	7362      	strb	r2, [r4, #13]
 800b250:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b254:	73a2      	strb	r2, [r4, #14]
 800b256:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b25a:	73e2      	strb	r2, [r4, #15]
 800b25c:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b260:	06db      	lsls	r3, r3, #27
 800b262:	7422      	strb	r2, [r4, #16]
 800b264:	d506      	bpl.n	800b274 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800b266:	f105 010c 	add.w	r1, r5, #12
 800b26a:	4620      	mov	r0, r4
 800b26c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b270:	f7ff bc18 	b.w	800aaa4 <RemoteConfig::SetDisplayName(char const*)>
 800b274:	bd38      	pop	{r3, r4, r5, pc}

0800b276 <RemoteConfigParams::Dump()>:
 800b276:	4770      	bx	lr

0800b278 <RemoteConfig::HandleReboot()>:
 800b278:	7b83      	ldrb	r3, [r0, #14]
 800b27a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b27c:	2b00      	cmp	r3, #0
 800b27e:	d03c      	beq.n	800b2fa <RemoteConfig::HandleReboot()+0x82>
 800b280:	4c1f      	ldr	r4, [pc, #124]	; (800b300 <RemoteConfig::HandleReboot()+0x88>)
 800b282:	6825      	ldr	r5, [r4, #0]
 800b284:	2301      	movs	r3, #1
 800b286:	7443      	strb	r3, [r0, #17]
 800b288:	69a8      	ldr	r0, [r5, #24]
 800b28a:	b138      	cbz	r0, 800b29c <RemoteConfig::HandleReboot()+0x24>
 800b28c:	6803      	ldr	r3, [r0, #0]
 800b28e:	2100      	movs	r1, #0
 800b290:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b292:	7429      	strb	r1, [r5, #16]
 800b294:	4798      	blx	r3
 800b296:	4b1b      	ldr	r3, [pc, #108]	; (800b304 <RemoteConfig::HandleReboot()+0x8c>)
 800b298:	681b      	ldr	r3, [r3, #0]
 800b29a:	606b      	str	r3, [r5, #4]
 800b29c:	4d1a      	ldr	r5, [pc, #104]	; (800b308 <RemoteConfig::HandleReboot()+0x90>)
 800b29e:	6828      	ldr	r0, [r5, #0]
 800b2a0:	f008 fe38 	bl	8013f14 <ConfigStore::Flash()>
 800b2a4:	2800      	cmp	r0, #0
 800b2a6:	d1fa      	bne.n	800b29e <RemoteConfig::HandleReboot()+0x26>
 800b2a8:	4b18      	ldr	r3, [pc, #96]	; (800b30c <RemoteConfig::HandleReboot()+0x94>)
 800b2aa:	6818      	ldr	r0, [r3, #0]
 800b2ac:	f007 f85c 	bl	8012368 <Network::Shutdown()>
 800b2b0:	4817      	ldr	r0, [pc, #92]	; (800b310 <RemoteConfig::HandleReboot()+0x98>)
 800b2b2:	f7ff f873 	bl	800a39c <printf>
 800b2b6:	6823      	ldr	r3, [r4, #0]
 800b2b8:	6998      	ldr	r0, [r3, #24]
 800b2ba:	b110      	cbz	r0, 800b2c2 <RemoteConfig::HandleReboot()+0x4a>
 800b2bc:	6803      	ldr	r3, [r0, #0]
 800b2be:	68db      	ldr	r3, [r3, #12]
 800b2c0:	4798      	blx	r3
 800b2c2:	6824      	ldr	r4, [r4, #0]
 800b2c4:	4913      	ldr	r1, [pc, #76]	; (800b314 <RemoteConfig::HandleReboot()+0x9c>)
 800b2c6:	4620      	mov	r0, r4
 800b2c8:	f7fe f808 	bl	80092dc <Display::TextStatus(char const*)>
 800b2cc:	7c63      	ldrb	r3, [r4, #17]
 800b2ce:	b183      	cbz	r3, 800b2f2 <RemoteConfig::HandleReboot()+0x7a>
 800b2d0:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b2d4:	7a20      	ldrb	r0, [r4, #8]
 800b2d6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b2da:	23bf      	movs	r3, #191	; 0xbf
 800b2dc:	f88d 3006 	strb.w	r3, [sp, #6]
 800b2e0:	f00b fe4e 	bl	8016f80 <gd32_i2c_set_address>
 800b2e4:	68e0      	ldr	r0, [r4, #12]
 800b2e6:	f00b fe43 	bl	8016f70 <gd32_i2c_set_baudrate>
 800b2ea:	2103      	movs	r1, #3
 800b2ec:	a801      	add	r0, sp, #4
 800b2ee:	f00b fe4d 	bl	8016f8c <gd32_i2c_write>
 800b2f2:	4b09      	ldr	r3, [pc, #36]	; (800b318 <RemoteConfig::HandleReboot()+0xa0>)
 800b2f4:	6818      	ldr	r0, [r3, #0]
 800b2f6:	f00a f8b3 	bl	8015460 <Hardware::Reboot()>
 800b2fa:	b003      	add	sp, #12
 800b2fc:	bd30      	pop	{r4, r5, pc}
 800b2fe:	bf00      	nop
 800b300:	2000fc90 	mulcs	r0, r0, ip
 800b304:	2000fd94 	mulcs	r0, r4, sp
 800b308:	2000fc68 	andcs	pc, r0, r8, ror #24
 800b30c:	2000f994 	mulcs	r0, r4, r9
 800b310:	08018154 	stmdaeq	r1, {r2, r4, r6, r8, pc}
 800b314:	08018163 	stmdaeq	r1, {r0, r1, r5, r6, r8, pc}
 800b318:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800b31c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b31c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b320:	4d12      	ldr	r5, [pc, #72]	; (800b36c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b322:	2000      	movs	r0, #0
 800b324:	f10d 0c04 	add.w	ip, sp, #4
 800b328:	6814      	ldr	r4, [r2, #0]
 800b32a:	7d2b      	ldrb	r3, [r5, #20]
 800b32c:	9301      	str	r3, [sp, #4]
 800b32e:	42a3      	cmp	r3, r4
 800b330:	bf34      	ite	cc
 800b332:	4664      	movcc	r4, ip
 800b334:	4614      	movcs	r4, r2
 800b336:	692e      	ldr	r6, [r5, #16]
 800b338:	6827      	ldr	r7, [r4, #0]
 800b33a:	3e01      	subs	r6, #1
 800b33c:	440f      	add	r7, r1
 800b33e:	460c      	mov	r4, r1
 800b340:	42bc      	cmp	r4, r7
 800b342:	d101      	bne.n	800b348 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b344:	6013      	str	r3, [r2, #0]
 800b346:	e00c      	b.n	800b362 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b348:	f894 8000 	ldrb.w	r8, [r4]
 800b34c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b350:	45f0      	cmp	r8, lr
 800b352:	d009      	beq.n	800b368 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b354:	3001      	adds	r0, #1
 800b356:	2806      	cmp	r0, #6
 800b358:	f105 051c 	add.w	r5, r5, #28
 800b35c:	d1e4      	bne.n	800b328 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b35e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b362:	b002      	add	sp, #8
 800b364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b368:	3401      	adds	r4, #1
 800b36a:	e7e9      	b.n	800b340 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b36c:	080181b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, pc}

0800b370 <RemoteConfig::PlatformHandleTftpSet()>:
 800b370:	f890 1020 	ldrb.w	r1, [r0, #32]
 800b374:	b109      	cbz	r1, 800b37a <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b376:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b37a:	2001      	movs	r0, #1
 800b37c:	f00b bd3c 	b.w	8016df8 <bkp_data_write(bkp_data_register_enum, unsigned short)>

0800b380 <RemoteConfig::PlatformHandleTftpGet()>:
 800b380:	b510      	push	{r4, lr}
 800b382:	4604      	mov	r4, r0
 800b384:	2001      	movs	r0, #1
 800b386:	f00b fd3f 	bl	8016e08 <bkp_data_read(bkp_data_register_enum)>
 800b38a:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b38e:	1ac3      	subs	r3, r0, r3
 800b390:	4258      	negs	r0, r3
 800b392:	4158      	adcs	r0, r3
 800b394:	f884 0020 	strb.w	r0, [r4, #32]
 800b398:	bd10      	pop	{r4, pc}

0800b39a <strcmp>:
 800b39a:	1e43      	subs	r3, r0, #1
 800b39c:	3901      	subs	r1, #1
 800b39e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b3a2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b3a6:	4290      	cmp	r0, r2
 800b3a8:	d001      	beq.n	800b3ae <strcmp+0x14>
 800b3aa:	1a80      	subs	r0, r0, r2
 800b3ac:	e001      	b.n	800b3b2 <strcmp+0x18>
 800b3ae:	2800      	cmp	r0, #0
 800b3b0:	d1f5      	bne.n	800b39e <strcmp+0x4>
 800b3b2:	4770      	bx	lr

0800b3b4 <strcasecmp>:
 800b3b4:	b530      	push	{r4, r5, lr}
 800b3b6:	1e42      	subs	r2, r0, #1
 800b3b8:	3901      	subs	r1, #1
 800b3ba:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b3be:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b3c2:	2b19      	cmp	r3, #25
 800b3c4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b3c8:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b3cc:	4604      	mov	r4, r0
 800b3ce:	bf98      	it	ls
 800b3d0:	f100 0420 	addls.w	r4, r0, #32
 800b3d4:	2d19      	cmp	r5, #25
 800b3d6:	bf98      	it	ls
 800b3d8:	3320      	addls	r3, #32
 800b3da:	42a3      	cmp	r3, r4
 800b3dc:	d001      	beq.n	800b3e2 <strcasecmp+0x2e>
 800b3de:	1ae0      	subs	r0, r4, r3
 800b3e0:	e001      	b.n	800b3e6 <strcasecmp+0x32>
 800b3e2:	2800      	cmp	r0, #0
 800b3e4:	d1e9      	bne.n	800b3ba <strcasecmp+0x6>
 800b3e6:	bd30      	pop	{r4, r5, pc}

0800b3e8 <PropertiesConfig::EnableJSON(bool)>:
 800b3e8:	4a04      	ldr	r2, [pc, #16]	; (800b3fc <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b3ea:	7813      	ldrb	r3, [r2, #0]
 800b3ec:	b118      	cbz	r0, 800b3f6 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b3ee:	f043 0301 	orr.w	r3, r3, #1
 800b3f2:	7013      	strb	r3, [r2, #0]
 800b3f4:	4770      	bx	lr
 800b3f6:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b3fa:	e7fa      	b.n	800b3f2 <PropertiesConfig::EnableJSON(bool)+0xa>
 800b3fc:	2000fc8c 	andcs	pc, r0, ip, lsl #25

0800b400 <HttpDaemon::HttpDaemon()>:
 800b400:	4a08      	ldr	r2, [pc, #32]	; (800b424 <HttpDaemon::HttpDaemon()+0x24>)
 800b402:	6002      	str	r2, [r0, #0]
 800b404:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b408:	2200      	movs	r2, #0
 800b40a:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b40e:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b412:	2102      	movs	r1, #2
 800b414:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b418:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b41c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800b420:	60c2      	str	r2, [r0, #12]
 800b422:	4770      	bx	lr
 800b424:	080184c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, pc}

0800b428 <HttpDaemon::Start()>:
 800b428:	4b04      	ldr	r3, [pc, #16]	; (800b43c <HttpDaemon::Start()+0x14>)
 800b42a:	b510      	push	{r4, lr}
 800b42c:	2150      	movs	r1, #80	; 0x50
 800b42e:	4604      	mov	r4, r0
 800b430:	6818      	ldr	r0, [r3, #0]
 800b432:	f007 fa91 	bl	8012958 <Network::TcpBegin(unsigned short)>
 800b436:	6120      	str	r0, [r4, #16]
 800b438:	bd10      	pop	{r4, pc}
 800b43a:	bf00      	nop
 800b43c:	2000f994 	mulcs	r0, r4, r9

0800b440 <HttpDaemon::ParseMethod(char*)>:
 800b440:	b538      	push	{r3, r4, r5, lr}
 800b442:	4604      	mov	r4, r0
 800b444:	4608      	mov	r0, r1
 800b446:	491a      	ldr	r1, [pc, #104]	; (800b4b0 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b448:	f00a f94c 	bl	80156e4 <strtok>
 800b44c:	4605      	mov	r5, r0
 800b44e:	b360      	cbz	r0, 800b4aa <HttpDaemon::ParseMethod(char*)+0x6a>
 800b450:	4918      	ldr	r1, [pc, #96]	; (800b4b4 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b452:	f7ff ffa2 	bl	800b39a <strcmp>
 800b456:	b128      	cbz	r0, 800b464 <HttpDaemon::ParseMethod(char*)+0x24>
 800b458:	4917      	ldr	r1, [pc, #92]	; (800b4b8 <HttpDaemon::ParseMethod(char*)+0x78>)
 800b45a:	4628      	mov	r0, r5
 800b45c:	f7ff ff9d 	bl	800b39a <strcmp>
 800b460:	bb18      	cbnz	r0, 800b4aa <HttpDaemon::ParseMethod(char*)+0x6a>
 800b462:	2001      	movs	r0, #1
 800b464:	61e0      	str	r0, [r4, #28]
 800b466:	4912      	ldr	r1, [pc, #72]	; (800b4b0 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b468:	2000      	movs	r0, #0
 800b46a:	f00a f93b 	bl	80156e4 <strtok>
 800b46e:	b910      	cbnz	r0, 800b476 <HttpDaemon::ParseMethod(char*)+0x36>
 800b470:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b474:	bd38      	pop	{r3, r4, r5, pc}
 800b476:	6060      	str	r0, [r4, #4]
 800b478:	4910      	ldr	r1, [pc, #64]	; (800b4bc <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b47a:	2000      	movs	r0, #0
 800b47c:	f00a f932 	bl	80156e4 <strtok>
 800b480:	2800      	cmp	r0, #0
 800b482:	d0f5      	beq.n	800b470 <HttpDaemon::ParseMethod(char*)+0x30>
 800b484:	490e      	ldr	r1, [pc, #56]	; (800b4c0 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b486:	f7ff ff88 	bl	800b39a <strcmp>
 800b48a:	2800      	cmp	r0, #0
 800b48c:	d1f0      	bne.n	800b470 <HttpDaemon::ParseMethod(char*)+0x30>
 800b48e:	490d      	ldr	r1, [pc, #52]	; (800b4c4 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b490:	f00a f928 	bl	80156e4 <strtok>
 800b494:	2800      	cmp	r0, #0
 800b496:	d0eb      	beq.n	800b470 <HttpDaemon::ParseMethod(char*)+0x30>
 800b498:	490b      	ldr	r1, [pc, #44]	; (800b4c8 <HttpDaemon::ParseMethod(char*)+0x88>)
 800b49a:	f7ff ff7e 	bl	800b39a <strcmp>
 800b49e:	2800      	cmp	r0, #0
 800b4a0:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b4a4:	bf08      	it	eq
 800b4a6:	20c8      	moveq	r0, #200	; 0xc8
 800b4a8:	e7e4      	b.n	800b474 <HttpDaemon::ParseMethod(char*)+0x34>
 800b4aa:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b4ae:	e7e1      	b.n	800b474 <HttpDaemon::ParseMethod(char*)+0x34>
 800b4b0:	08017ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, ip, sp, lr}
 800b4b4:	08018260 	stmdaeq	r1, {r5, r6, r9, pc}
 800b4b8:	08018264 	stmdaeq	r1, {r2, r5, r6, r9, pc}
 800b4bc:	080182ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, pc}
 800b4c0:	08018269 	stmdaeq	r1, {r0, r3, r5, r6, r9, pc}
 800b4c4:	0801826e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, pc}
 800b4c8:	08018271 	stmdaeq	r1, {r0, r4, r5, r6, r9, pc}

0800b4cc <HttpDaemon::ParseHeaderField(char*)>:
 800b4cc:	b538      	push	{r3, r4, r5, lr}
 800b4ce:	4605      	mov	r5, r0
 800b4d0:	4608      	mov	r0, r1
 800b4d2:	491d      	ldr	r1, [pc, #116]	; (800b548 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b4d4:	f00a f906 	bl	80156e4 <strtok>
 800b4d8:	4604      	mov	r4, r0
 800b4da:	b910      	cbnz	r0, 800b4e2 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b4dc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b4e0:	bd38      	pop	{r3, r4, r5, pc}
 800b4e2:	491a      	ldr	r1, [pc, #104]	; (800b54c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b4e4:	f7ff ff66 	bl	800b3b4 <strcasecmp>
 800b4e8:	b970      	cbnz	r0, 800b508 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b4ea:	4919      	ldr	r1, [pc, #100]	; (800b550 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b4ec:	f00a f8fa 	bl	80156e4 <strtok>
 800b4f0:	2800      	cmp	r0, #0
 800b4f2:	d0f3      	beq.n	800b4dc <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b4f4:	4917      	ldr	r1, [pc, #92]	; (800b554 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b4f6:	f7ff ff50 	bl	800b39a <strcmp>
 800b4fa:	b108      	cbz	r0, 800b500 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b4fc:	20c8      	movs	r0, #200	; 0xc8
 800b4fe:	e7ef      	b.n	800b4e0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b500:	2301      	movs	r3, #1
 800b502:	f885 3020 	strb.w	r3, [r5, #32]
 800b506:	e7f9      	b.n	800b4fc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b508:	4620      	mov	r0, r4
 800b50a:	4913      	ldr	r1, [pc, #76]	; (800b558 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b50c:	f7ff ff52 	bl	800b3b4 <strcasecmp>
 800b510:	4604      	mov	r4, r0
 800b512:	2800      	cmp	r0, #0
 800b514:	d1f2      	bne.n	800b4fc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b516:	4911      	ldr	r1, [pc, #68]	; (800b55c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b518:	f00a f8e4 	bl	80156e4 <strtok>
 800b51c:	2800      	cmp	r0, #0
 800b51e:	d0dd      	beq.n	800b4dc <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b520:	1e42      	subs	r2, r0, #1
 800b522:	4623      	mov	r3, r4
 800b524:	200a      	movs	r0, #10
 800b526:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b52a:	b909      	cbnz	r1, 800b530 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800b52c:	84eb      	strh	r3, [r5, #38]	; 0x26
 800b52e:	e7e5      	b.n	800b4fc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b530:	3930      	subs	r1, #48	; 0x30
 800b532:	2909      	cmp	r1, #9
 800b534:	d8d2      	bhi.n	800b4dc <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b536:	fb00 1303 	mla	r3, r0, r3, r1
 800b53a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b53e:	d9f2      	bls.n	800b526 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b540:	f240 109d 	movw	r0, #413	; 0x19d
 800b544:	e7cc      	b.n	800b4e0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b546:	bf00      	nop
 800b548:	08018275 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, pc}
 800b54c:	08018277 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r9, pc}
 800b550:	08018284 	stmdaeq	r1, {r2, r7, r9, pc}
 800b554:	08018287 	stmdaeq	r1, {r0, r1, r2, r7, r9, pc}
 800b558:	08018298 	stmdaeq	r1, {r3, r4, r7, r9, pc}
 800b55c:	08017ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, ip, sp, lr}

0800b560 <HttpDaemon::ParseRequest()>:
 800b560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b562:	68c1      	ldr	r1, [r0, #12]
 800b564:	2400      	movs	r4, #0
 800b566:	4605      	mov	r5, r0
 800b568:	f880 4020 	strb.w	r4, [r0, #32]
 800b56c:	6244      	str	r4, [r0, #36]	; 0x24
 800b56e:	4622      	mov	r2, r4
 800b570:	4626      	mov	r6, r4
 800b572:	8aab      	ldrh	r3, [r5, #20]
 800b574:	42a3      	cmp	r3, r4
 800b576:	d91e      	bls.n	800b5b6 <HttpDaemon::ParseRequest()+0x56>
 800b578:	68eb      	ldr	r3, [r5, #12]
 800b57a:	5d18      	ldrb	r0, [r3, r4]
 800b57c:	280a      	cmp	r0, #10
 800b57e:	d10f      	bne.n	800b5a0 <HttpDaemon::ParseRequest()+0x40>
 800b580:	4423      	add	r3, r4
 800b582:	1c57      	adds	r7, r2, #1
 800b584:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b588:	b96a      	cbnz	r2, 800b5a6 <HttpDaemon::ParseRequest()+0x46>
 800b58a:	4628      	mov	r0, r5
 800b58c:	f7ff ff58 	bl	800b440 <HttpDaemon::ParseMethod(char*)>
 800b590:	28c8      	cmp	r0, #200	; 0xc8
 800b592:	d111      	bne.n	800b5b8 <HttpDaemon::ParseRequest()+0x58>
 800b594:	68eb      	ldr	r3, [r5, #12]
 800b596:	1c61      	adds	r1, r4, #1
 800b598:	b28c      	uxth	r4, r1
 800b59a:	463a      	mov	r2, r7
 800b59c:	fa13 f181 	uxtah	r1, r3, r1
 800b5a0:	3401      	adds	r4, #1
 800b5a2:	b2a4      	uxth	r4, r4
 800b5a4:	e7e5      	b.n	800b572 <HttpDaemon::ParseRequest()+0x12>
 800b5a6:	7808      	ldrb	r0, [r1, #0]
 800b5a8:	b968      	cbnz	r0, 800b5c6 <HttpDaemon::ParseRequest()+0x66>
 800b5aa:	696b      	ldr	r3, [r5, #20]
 800b5ac:	3b01      	subs	r3, #1
 800b5ae:	1b1b      	subs	r3, r3, r4
 800b5b0:	b29b      	uxth	r3, r3
 800b5b2:	84ab      	strh	r3, [r5, #36]	; 0x24
 800b5b4:	b90b      	cbnz	r3, 800b5ba <HttpDaemon::ParseRequest()+0x5a>
 800b5b6:	20c8      	movs	r0, #200	; 0xc8
 800b5b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b5ba:	68ea      	ldr	r2, [r5, #12]
 800b5bc:	3401      	adds	r4, #1
 800b5be:	4414      	add	r4, r2
 800b5c0:	60ac      	str	r4, [r5, #8]
 800b5c2:	54e0      	strb	r0, [r4, r3]
 800b5c4:	e7f7      	b.n	800b5b6 <HttpDaemon::ParseRequest()+0x56>
 800b5c6:	4628      	mov	r0, r5
 800b5c8:	f7ff ff80 	bl	800b4cc <HttpDaemon::ParseHeaderField(char*)>
 800b5cc:	e7e0      	b.n	800b590 <HttpDaemon::ParseRequest()+0x30>
	...

0800b5d0 <HttpDaemon::HandleGetTxt()>:
 800b5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5d4:	6846      	ldr	r6, [r0, #4]
 800b5d6:	1db4      	adds	r4, r6, #6
 800b5d8:	4607      	mov	r7, r0
 800b5da:	4622      	mov	r2, r4
 800b5dc:	4613      	mov	r3, r2
 800b5de:	3201      	adds	r2, #1
 800b5e0:	7819      	ldrb	r1, [r3, #0]
 800b5e2:	2900      	cmp	r1, #0
 800b5e4:	d1fa      	bne.n	800b5dc <HttpDaemon::HandleGetTxt()+0xc>
 800b5e6:	1b1b      	subs	r3, r3, r4
 800b5e8:	2b04      	cmp	r3, #4
 800b5ea:	d803      	bhi.n	800b5f4 <HttpDaemon::HandleGetTxt()+0x24>
 800b5ec:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b5f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5f4:	3b04      	subs	r3, #4
 800b5f6:	4914      	ldr	r1, [pc, #80]	; (800b648 <HttpDaemon::HandleGetTxt()+0x78>)
 800b5f8:	18e0      	adds	r0, r4, r3
 800b5fa:	f7ff fece 	bl	800b39a <strcmp>
 800b5fe:	2800      	cmp	r0, #0
 800b600:	d1f4      	bne.n	800b5ec <HttpDaemon::HandleGetTxt()+0x1c>
 800b602:	4b12      	ldr	r3, [pc, #72]	; (800b64c <HttpDaemon::HandleGetTxt()+0x7c>)
 800b604:	2001      	movs	r0, #1
 800b606:	f893 8000 	ldrb.w	r8, [r3]
 800b60a:	f7ff feed 	bl	800b3e8 <PropertiesConfig::EnableJSON(bool)>
 800b60e:	4b10      	ldr	r3, [pc, #64]	; (800b650 <HttpDaemon::HandleGetTxt()+0x80>)
 800b610:	f240 529b 	movw	r2, #1435	; 0x59b
 800b614:	6818      	ldr	r0, [r3, #0]
 800b616:	4621      	mov	r1, r4
 800b618:	f7ff fa5c 	bl	800aad4 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b61c:	f008 0801 	and.w	r8, r8, #1
 800b620:	4605      	mov	r5, r0
 800b622:	4640      	mov	r0, r8
 800b624:	f7ff fee0 	bl	800b3e8 <PropertiesConfig::EnableJSON(bool)>
 800b628:	2d00      	cmp	r5, #0
 800b62a:	d0df      	beq.n	800b5ec <HttpDaemon::HandleGetTxt()+0x1c>
 800b62c:	847d      	strh	r5, [r7, #34]	; 0x22
 800b62e:	4b09      	ldr	r3, [pc, #36]	; (800b654 <HttpDaemon::HandleGetTxt()+0x84>)
 800b630:	3506      	adds	r5, #6
 800b632:	442e      	add	r6, r5
 800b634:	42b4      	cmp	r4, r6
 800b636:	d101      	bne.n	800b63c <HttpDaemon::HandleGetTxt()+0x6c>
 800b638:	20c8      	movs	r0, #200	; 0xc8
 800b63a:	e7d9      	b.n	800b5f0 <HttpDaemon::HandleGetTxt()+0x20>
 800b63c:	f814 2b01 	ldrb.w	r2, [r4], #1
 800b640:	f803 2b01 	strb.w	r2, [r3], #1
 800b644:	e7f6      	b.n	800b634 <HttpDaemon::HandleGetTxt()+0x64>
 800b646:	bf00      	nop
 800b648:	08018199 	stmdaeq	r1, {r0, r3, r4, r7, r8, pc}
 800b64c:	2000fc8c 	andcs	pc, r0, ip, lsl #25
 800b650:	20000124 	andcs	r0, r0, r4, lsr #2
 800b654:	20000128 	andcs	r0, r0, r8, lsr #2

0800b658 <HttpDaemon::HandleGet()>:
 800b658:	b570      	push	{r4, r5, r6, lr}
 800b65a:	6845      	ldr	r5, [r0, #4]
 800b65c:	493e      	ldr	r1, [pc, #248]	; (800b758 <HttpDaemon::HandleGet()+0x100>)
 800b65e:	4604      	mov	r4, r0
 800b660:	4628      	mov	r0, r5
 800b662:	f7ff fe9a 	bl	800b39a <strcmp>
 800b666:	b120      	cbz	r0, 800b672 <HttpDaemon::HandleGet()+0x1a>
 800b668:	493c      	ldr	r1, [pc, #240]	; (800b75c <HttpDaemon::HandleGet()+0x104>)
 800b66a:	4628      	mov	r0, r5
 800b66c:	f7ff fe95 	bl	800b39a <strcmp>
 800b670:	b950      	cbnz	r0, 800b688 <HttpDaemon::HandleGet()+0x30>
 800b672:	4b3b      	ldr	r3, [pc, #236]	; (800b760 <HttpDaemon::HandleGet()+0x108>)
 800b674:	493b      	ldr	r1, [pc, #236]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b676:	483c      	ldr	r0, [pc, #240]	; (800b768 <HttpDaemon::HandleGet()+0x110>)
 800b678:	6023      	str	r3, [r4, #0]
 800b67a:	f000 fa63 	bl	800bb44 <get_file_content(char const*, char*)>
 800b67e:	2800      	cmp	r0, #0
 800b680:	dd2f      	ble.n	800b6e2 <HttpDaemon::HandleGet()+0x8a>
 800b682:	8460      	strh	r0, [r4, #34]	; 0x22
 800b684:	20c8      	movs	r0, #200	; 0xc8
 800b686:	bd70      	pop	{r4, r5, r6, pc}
 800b688:	4938      	ldr	r1, [pc, #224]	; (800b76c <HttpDaemon::HandleGet()+0x114>)
 800b68a:	4628      	mov	r0, r5
 800b68c:	f7ff fe85 	bl	800b39a <strcmp>
 800b690:	b920      	cbnz	r0, 800b69c <HttpDaemon::HandleGet()+0x44>
 800b692:	4b37      	ldr	r3, [pc, #220]	; (800b770 <HttpDaemon::HandleGet()+0x118>)
 800b694:	4933      	ldr	r1, [pc, #204]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b696:	4837      	ldr	r0, [pc, #220]	; (800b774 <HttpDaemon::HandleGet()+0x11c>)
 800b698:	6023      	str	r3, [r4, #0]
 800b69a:	e7ee      	b.n	800b67a <HttpDaemon::HandleGet()+0x22>
 800b69c:	4936      	ldr	r1, [pc, #216]	; (800b778 <HttpDaemon::HandleGet()+0x120>)
 800b69e:	4628      	mov	r0, r5
 800b6a0:	f7ff fe7b 	bl	800b39a <strcmp>
 800b6a4:	b190      	cbz	r0, 800b6cc <HttpDaemon::HandleGet()+0x74>
 800b6a6:	4a35      	ldr	r2, [pc, #212]	; (800b77c <HttpDaemon::HandleGet()+0x124>)
 800b6a8:	1e6b      	subs	r3, r5, #1
 800b6aa:	1d69      	adds	r1, r5, #5
 800b6ac:	428b      	cmp	r3, r1
 800b6ae:	d112      	bne.n	800b6d6 <HttpDaemon::HandleGet()+0x7e>
 800b6b0:	4b33      	ldr	r3, [pc, #204]	; (800b780 <HttpDaemon::HandleGet()+0x128>)
 800b6b2:	4934      	ldr	r1, [pc, #208]	; (800b784 <HttpDaemon::HandleGet()+0x12c>)
 800b6b4:	6023      	str	r3, [r4, #0]
 800b6b6:	3506      	adds	r5, #6
 800b6b8:	4628      	mov	r0, r5
 800b6ba:	f7ff fe6e 	bl	800b39a <strcmp>
 800b6be:	b998      	cbnz	r0, 800b6e8 <HttpDaemon::HandleGet()+0x90>
 800b6c0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b6c4:	4827      	ldr	r0, [pc, #156]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b6c6:	f000 f9c9 	bl	800ba5c <remoteconfig::json_get_list(char*, unsigned short)>
 800b6ca:	e7d8      	b.n	800b67e <HttpDaemon::HandleGet()+0x26>
 800b6cc:	4b2e      	ldr	r3, [pc, #184]	; (800b788 <HttpDaemon::HandleGet()+0x130>)
 800b6ce:	4925      	ldr	r1, [pc, #148]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b6d0:	482e      	ldr	r0, [pc, #184]	; (800b78c <HttpDaemon::HandleGet()+0x134>)
 800b6d2:	6023      	str	r3, [r4, #0]
 800b6d4:	e7d1      	b.n	800b67a <HttpDaemon::HandleGet()+0x22>
 800b6d6:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b6da:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b6de:	4286      	cmp	r6, r0
 800b6e0:	d0e4      	beq.n	800b6ac <HttpDaemon::HandleGet()+0x54>
 800b6e2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b6e6:	e7ce      	b.n	800b686 <HttpDaemon::HandleGet()+0x2e>
 800b6e8:	4929      	ldr	r1, [pc, #164]	; (800b790 <HttpDaemon::HandleGet()+0x138>)
 800b6ea:	4628      	mov	r0, r5
 800b6ec:	f7ff fe55 	bl	800b39a <strcmp>
 800b6f0:	b928      	cbnz	r0, 800b6fe <HttpDaemon::HandleGet()+0xa6>
 800b6f2:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b6f6:	481b      	ldr	r0, [pc, #108]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b6f8:	f000 f9e0 	bl	800babc <remoteconfig::json_get_version(char*, unsigned short)>
 800b6fc:	e7bf      	b.n	800b67e <HttpDaemon::HandleGet()+0x26>
 800b6fe:	4925      	ldr	r1, [pc, #148]	; (800b794 <HttpDaemon::HandleGet()+0x13c>)
 800b700:	4628      	mov	r0, r5
 800b702:	f7ff fe4a 	bl	800b39a <strcmp>
 800b706:	b948      	cbnz	r0, 800b71c <HttpDaemon::HandleGet()+0xc4>
 800b708:	4b23      	ldr	r3, [pc, #140]	; (800b798 <HttpDaemon::HandleGet()+0x140>)
 800b70a:	681b      	ldr	r3, [r3, #0]
 800b70c:	7bdb      	ldrb	r3, [r3, #15]
 800b70e:	b303      	cbz	r3, 800b752 <HttpDaemon::HandleGet()+0xfa>
 800b710:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b714:	4813      	ldr	r0, [pc, #76]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b716:	f000 f9ed 	bl	800baf4 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b71a:	e7b0      	b.n	800b67e <HttpDaemon::HandleGet()+0x26>
 800b71c:	491f      	ldr	r1, [pc, #124]	; (800b79c <HttpDaemon::HandleGet()+0x144>)
 800b71e:	4628      	mov	r0, r5
 800b720:	f7ff fe3b 	bl	800b39a <strcmp>
 800b724:	b928      	cbnz	r0, 800b732 <HttpDaemon::HandleGet()+0xda>
 800b726:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b72a:	480e      	ldr	r0, [pc, #56]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b72c:	f000 f9f2 	bl	800bb14 <remoteconfig::json_get_display(char*, unsigned short)>
 800b730:	e7a5      	b.n	800b67e <HttpDaemon::HandleGet()+0x26>
 800b732:	491b      	ldr	r1, [pc, #108]	; (800b7a0 <HttpDaemon::HandleGet()+0x148>)
 800b734:	4628      	mov	r0, r5
 800b736:	f7ff fe30 	bl	800b39a <strcmp>
 800b73a:	b928      	cbnz	r0, 800b748 <HttpDaemon::HandleGet()+0xf0>
 800b73c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b740:	4808      	ldr	r0, [pc, #32]	; (800b764 <HttpDaemon::HandleGet()+0x10c>)
 800b742:	f000 f9f7 	bl	800bb34 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b746:	e79a      	b.n	800b67e <HttpDaemon::HandleGet()+0x26>
 800b748:	4620      	mov	r0, r4
 800b74a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b74e:	f7ff bf3f 	b.w	800b5d0 <HttpDaemon::HandleGetTxt()>
 800b752:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b756:	e796      	b.n	800b686 <HttpDaemon::HandleGet()+0x2e>
 800b758:	080182ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, pc}
 800b75c:	080182a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, pc}
 800b760:	080184c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, pc}
 800b764:	20000128 	andcs	r0, r0, r8, lsr #2
 800b768:	080182a8 	stmdaeq	r1, {r3, r5, r7, r9, pc}
 800b76c:	080182b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, pc}
 800b770:	080184e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, pc}
 800b774:	080182b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, pc}
 800b778:	080182bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, pc}
 800b77c:	080182c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, pc}
 800b780:	08018525 	stmdaeq	r1, {r0, r2, r5, r8, sl, pc}
 800b784:	080182d0 	stmdaeq	r1, {r4, r6, r7, r9, pc}
 800b788:	08018505 	stmdaeq	r1, {r0, r2, r8, sl, pc}
 800b78c:	080182c0 	stmdaeq	r1, {r6, r7, r9, pc}
 800b790:	080182d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, pc}
 800b794:	080182dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, pc}
 800b798:	20000124 	andcs	r0, r0, r4, lsr #2
 800b79c:	080182e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, pc}
 800b7a0:	080182ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, pc}

0800b7a4 <HttpDaemon::HandlePost(bool)>:
 800b7a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b7a6:	4604      	mov	r4, r0
 800b7a8:	2900      	cmp	r1, #0
 800b7aa:	f040 808a 	bne.w	800b8c2 <HttpDaemon::HandlePost(bool)+0x11e>
 800b7ae:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	d05a      	beq.n	800b86c <HttpDaemon::HandlePost(bool)+0xc8>
 800b7b6:	6845      	ldr	r5, [r0, #4]
 800b7b8:	4944      	ldr	r1, [pc, #272]	; (800b8cc <HttpDaemon::HandlePost(bool)+0x128>)
 800b7ba:	4628      	mov	r0, r5
 800b7bc:	f7ff fded 	bl	800b39a <strcmp>
 800b7c0:	2800      	cmp	r0, #0
 800b7c2:	bf0c      	ite	eq
 800b7c4:	2301      	moveq	r3, #1
 800b7c6:	2300      	movne	r3, #0
 800b7c8:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b7cc:	d052      	beq.n	800b874 <HttpDaemon::HandlePost(bool)+0xd0>
 800b7ce:	4940      	ldr	r1, [pc, #256]	; (800b8d0 <HttpDaemon::HandlePost(bool)+0x12c>)
 800b7d0:	4628      	mov	r0, r5
 800b7d2:	f7ff fde2 	bl	800b39a <strcmp>
 800b7d6:	2800      	cmp	r0, #0
 800b7d8:	d04c      	beq.n	800b874 <HttpDaemon::HandlePost(bool)+0xd0>
 800b7da:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b7de:	e047      	b.n	800b870 <HttpDaemon::HandlePost(bool)+0xcc>
 800b7e0:	493c      	ldr	r1, [pc, #240]	; (800b8d4 <HttpDaemon::HandlePost(bool)+0x130>)
 800b7e2:	68a0      	ldr	r0, [r4, #8]
 800b7e4:	f10d 0207 	add.w	r2, sp, #7
 800b7e8:	f009 f9df 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b7ec:	b9d8      	cbnz	r0, 800b826 <HttpDaemon::HandlePost(bool)+0x82>
 800b7ee:	4b3a      	ldr	r3, [pc, #232]	; (800b8d8 <HttpDaemon::HandlePost(bool)+0x134>)
 800b7f0:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b7f4:	681d      	ldr	r5, [r3, #0]
 800b7f6:	69a8      	ldr	r0, [r5, #24]
 800b7f8:	fab6 f186 	clz	r1, r6
 800b7fc:	0949      	lsrs	r1, r1, #5
 800b7fe:	b138      	cbz	r0, 800b810 <HttpDaemon::HandlePost(bool)+0x6c>
 800b800:	6803      	ldr	r3, [r0, #0]
 800b802:	7429      	strb	r1, [r5, #16]
 800b804:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b806:	4798      	blx	r3
 800b808:	b116      	cbz	r6, 800b810 <HttpDaemon::HandlePost(bool)+0x6c>
 800b80a:	4b34      	ldr	r3, [pc, #208]	; (800b8dc <HttpDaemon::HandlePost(bool)+0x138>)
 800b80c:	681b      	ldr	r3, [r3, #0]
 800b80e:	606b      	str	r3, [r5, #4]
 800b810:	4b33      	ldr	r3, [pc, #204]	; (800b8e0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800b812:	4a34      	ldr	r2, [pc, #208]	; (800b8e4 <HttpDaemon::HandlePost(bool)+0x140>)
 800b814:	4834      	ldr	r0, [pc, #208]	; (800b8e8 <HttpDaemon::HandlePost(bool)+0x144>)
 800b816:	6023      	str	r3, [r4, #0]
 800b818:	f240 519f 	movw	r1, #1439	; 0x59f
 800b81c:	f7fe fde6 	bl	800a3ec <snprintf>
 800b820:	8460      	strh	r0, [r4, #34]	; 0x22
 800b822:	20c8      	movs	r0, #200	; 0xc8
 800b824:	e024      	b.n	800b870 <HttpDaemon::HandlePost(bool)+0xcc>
 800b826:	4931      	ldr	r1, [pc, #196]	; (800b8ec <HttpDaemon::HandlePost(bool)+0x148>)
 800b828:	68a0      	ldr	r0, [r4, #8]
 800b82a:	f10d 0207 	add.w	r2, sp, #7
 800b82e:	f009 f9bc 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b832:	b9d8      	cbnz	r0, 800b86c <HttpDaemon::HandlePost(bool)+0xc8>
 800b834:	4b2e      	ldr	r3, [pc, #184]	; (800b8f0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800b836:	6818      	ldr	r0, [r3, #0]
 800b838:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b83c:	b11b      	cbz	r3, 800b846 <HttpDaemon::HandlePost(bool)+0xa2>
 800b83e:	2104      	movs	r1, #4
 800b840:	f009 fd50 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800b844:	e7e4      	b.n	800b810 <HttpDaemon::HandlePost(bool)+0x6c>
 800b846:	2102      	movs	r1, #2
 800b848:	e7fa      	b.n	800b840 <HttpDaemon::HandlePost(bool)+0x9c>
 800b84a:	4b2a      	ldr	r3, [pc, #168]	; (800b8f4 <HttpDaemon::HandlePost(bool)+0x150>)
 800b84c:	2001      	movs	r0, #1
 800b84e:	781d      	ldrb	r5, [r3, #0]
 800b850:	f7ff fdca 	bl	800b3e8 <PropertiesConfig::EnableJSON(bool)>
 800b854:	4b28      	ldr	r3, [pc, #160]	; (800b8f8 <HttpDaemon::HandlePost(bool)+0x154>)
 800b856:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800b858:	6818      	ldr	r0, [r3, #0]
 800b85a:	68a1      	ldr	r1, [r4, #8]
 800b85c:	f005 0501 	and.w	r5, r5, #1
 800b860:	f7ff fa26 	bl	800acb0 <RemoteConfig::HandleSet(void*, unsigned int)>
 800b864:	4628      	mov	r0, r5
 800b866:	f7ff fdbf 	bl	800b3e8 <PropertiesConfig::EnableJSON(bool)>
 800b86a:	e7d1      	b.n	800b810 <HttpDaemon::HandlePost(bool)+0x6c>
 800b86c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b870:	b002      	add	sp, #8
 800b872:	bd70      	pop	{r4, r5, r6, pc}
 800b874:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b876:	6962      	ldr	r2, [r4, #20]
 800b878:	429a      	cmp	r2, r3
 800b87a:	dbd2      	blt.n	800b822 <HttpDaemon::HandlePost(bool)+0x7e>
 800b87c:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b87e:	2b00      	cmp	r3, #0
 800b880:	d0cf      	beq.n	800b822 <HttpDaemon::HandlePost(bool)+0x7e>
 800b882:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b886:	2b00      	cmp	r3, #0
 800b888:	d0df      	beq.n	800b84a <HttpDaemon::HandlePost(bool)+0xa6>
 800b88a:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800b88c:	68a0      	ldr	r0, [r4, #8]
 800b88e:	2201      	movs	r2, #1
 800b890:	f008 ff04 	bl	801469c <properties::convert_json_file(char*, unsigned short, bool)>
 800b894:	2800      	cmp	r0, #0
 800b896:	dde9      	ble.n	800b86c <HttpDaemon::HandlePost(bool)+0xc8>
 800b898:	4918      	ldr	r1, [pc, #96]	; (800b8fc <HttpDaemon::HandlePost(bool)+0x158>)
 800b89a:	68a0      	ldr	r0, [r4, #8]
 800b89c:	f10d 0207 	add.w	r2, sp, #7
 800b8a0:	f009 f983 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b8a4:	2800      	cmp	r0, #0
 800b8a6:	d19b      	bne.n	800b7e0 <HttpDaemon::HandlePost(bool)+0x3c>
 800b8a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b8ac:	2b00      	cmp	r3, #0
 800b8ae:	d0af      	beq.n	800b810 <HttpDaemon::HandlePost(bool)+0x6c>
 800b8b0:	4b11      	ldr	r3, [pc, #68]	; (800b8f8 <HttpDaemon::HandlePost(bool)+0x154>)
 800b8b2:	681b      	ldr	r3, [r3, #0]
 800b8b4:	7b9b      	ldrb	r3, [r3, #14]
 800b8b6:	2b00      	cmp	r3, #0
 800b8b8:	d0d8      	beq.n	800b86c <HttpDaemon::HandlePost(bool)+0xc8>
 800b8ba:	4b11      	ldr	r3, [pc, #68]	; (800b900 <HttpDaemon::HandlePost(bool)+0x15c>)
 800b8bc:	6818      	ldr	r0, [r3, #0]
 800b8be:	f009 fdcf 	bl	8015460 <Hardware::Reboot()>
 800b8c2:	68c3      	ldr	r3, [r0, #12]
 800b8c4:	6083      	str	r3, [r0, #8]
 800b8c6:	6943      	ldr	r3, [r0, #20]
 800b8c8:	8483      	strh	r3, [r0, #36]	; 0x24
 800b8ca:	e7da      	b.n	800b882 <HttpDaemon::HandlePost(bool)+0xde>
 800b8cc:	080182f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, pc}
 800b8d0:	08018292 	stmdaeq	r1, {r1, r4, r7, r9, pc}
 800b8d4:	080182e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, pc}
 800b8d8:	2000fc90 	mulcs	r0, r0, ip
 800b8dc:	2000fd94 	mulcs	r0, r4, sp
 800b8e0:	080184c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, pc}
 800b8e4:	08018313 	stmdaeq	r1, {r0, r1, r4, r8, r9, pc}
 800b8e8:	20000128 	andcs	r0, r0, r8, lsr #2
 800b8ec:	0801830a 	stmdaeq	r1, {r1, r3, r8, r9, pc}
 800b8f0:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800b8f4:	2000fc8c 	andcs	pc, r0, ip, lsl #25
 800b8f8:	20000124 	andcs	r0, r0, r4, lsr #2
 800b8fc:	08018303 	stmdaeq	r1, {r0, r1, r8, r9, pc}
 800b900:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800b904 <HttpDaemon::Run()>:
 800b904:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b906:	4e46      	ldr	r6, [pc, #280]	; (800ba20 <HttpDaemon::Run()+0x11c>)
 800b908:	6901      	ldr	r1, [r0, #16]
 800b90a:	4604      	mov	r4, r0
 800b90c:	f100 020c 	add.w	r2, r0, #12
 800b910:	6830      	ldr	r0, [r6, #0]
 800b912:	f007 f824 	bl	801295e <Network::TcpRead(int, unsigned char const**)>
 800b916:	6160      	str	r0, [r4, #20]
 800b918:	2800      	cmp	r0, #0
 800b91a:	d05b      	beq.n	800b9d4 <HttpDaemon::Run()+0xd0>
 800b91c:	69a3      	ldr	r3, [r4, #24]
 800b91e:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b922:	d159      	bne.n	800b9d8 <HttpDaemon::Run()+0xd4>
 800b924:	4620      	mov	r0, r4
 800b926:	f7ff fe1b 	bl	800b560 <HttpDaemon::ParseRequest()>
 800b92a:	28c8      	cmp	r0, #200	; 0xc8
 800b92c:	61a0      	str	r0, [r4, #24]
 800b92e:	d106      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b930:	69e3      	ldr	r3, [r4, #28]
 800b932:	2b00      	cmp	r3, #0
 800b934:	d142      	bne.n	800b9bc <HttpDaemon::Run()+0xb8>
 800b936:	4620      	mov	r0, r4
 800b938:	f7ff fe8e 	bl	800b658 <HttpDaemon::HandleGet()>
 800b93c:	61a0      	str	r0, [r4, #24]
 800b93e:	69a3      	ldr	r3, [r4, #24]
 800b940:	2bc8      	cmp	r3, #200	; 0xc8
 800b942:	d06b      	beq.n	800ba1c <HttpDaemon::Run()+0x118>
 800b944:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b948:	d05e      	beq.n	800ba08 <HttpDaemon::Run()+0x104>
 800b94a:	dc4e      	bgt.n	800b9ea <HttpDaemon::Run()+0xe6>
 800b94c:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b950:	d05c      	beq.n	800ba0c <HttpDaemon::Run()+0x108>
 800b952:	f240 129d 	movw	r2, #413	; 0x19d
 800b956:	4293      	cmp	r3, r2
 800b958:	d05a      	beq.n	800ba10 <HttpDaemon::Run()+0x10c>
 800b95a:	4d32      	ldr	r5, [pc, #200]	; (800ba24 <HttpDaemon::Run()+0x120>)
 800b95c:	4a32      	ldr	r2, [pc, #200]	; (800ba28 <HttpDaemon::Run()+0x124>)
 800b95e:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b962:	bf18      	it	ne
 800b964:	4615      	movne	r5, r2
 800b966:	4a31      	ldr	r2, [pc, #196]	; (800ba2c <HttpDaemon::Run()+0x128>)
 800b968:	6022      	str	r2, [r4, #0]
 800b96a:	e9cd 5500 	strd	r5, r5, [sp]
 800b96e:	4a30      	ldr	r2, [pc, #192]	; (800ba30 <HttpDaemon::Run()+0x12c>)
 800b970:	4830      	ldr	r0, [pc, #192]	; (800ba34 <HttpDaemon::Run()+0x130>)
 800b972:	f240 519f 	movw	r1, #1439	; 0x59f
 800b976:	f7fe fd39 	bl	800a3ec <snprintf>
 800b97a:	8460      	strh	r0, [r4, #34]	; 0x22
 800b97c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b97e:	9303      	str	r3, [sp, #12]
 800b980:	6823      	ldr	r3, [r4, #0]
 800b982:	9302      	str	r3, [sp, #8]
 800b984:	4b2c      	ldr	r3, [pc, #176]	; (800ba38 <HttpDaemon::Run()+0x134>)
 800b986:	4a2d      	ldr	r2, [pc, #180]	; (800ba3c <HttpDaemon::Run()+0x138>)
 800b988:	68e0      	ldr	r0, [r4, #12]
 800b98a:	e9cd 5300 	strd	r5, r3, [sp]
 800b98e:	f240 519f 	movw	r1, #1439	; 0x59f
 800b992:	69a3      	ldr	r3, [r4, #24]
 800b994:	f7fe fd2a 	bl	800a3ec <snprintf>
 800b998:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b99c:	b283      	uxth	r3, r0
 800b99e:	6830      	ldr	r0, [r6, #0]
 800b9a0:	f006 ffe1 	bl	8012966 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b9a4:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800b9a6:	4a23      	ldr	r2, [pc, #140]	; (800ba34 <HttpDaemon::Run()+0x130>)
 800b9a8:	6921      	ldr	r1, [r4, #16]
 800b9aa:	6830      	ldr	r0, [r6, #0]
 800b9ac:	f006 ffdb 	bl	8012966 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b9b0:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b9b4:	2302      	movs	r3, #2
 800b9b6:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b9ba:	e00b      	b.n	800b9d4 <HttpDaemon::Run()+0xd0>
 800b9bc:	2b01      	cmp	r3, #1
 800b9be:	d1be      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b9c0:	2100      	movs	r1, #0
 800b9c2:	4620      	mov	r0, r4
 800b9c4:	f7ff feee 	bl	800b7a4 <HttpDaemon::HandlePost(bool)>
 800b9c8:	28c8      	cmp	r0, #200	; 0xc8
 800b9ca:	61a0      	str	r0, [r4, #24]
 800b9cc:	d1b7      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b9ce:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b9d0:	2b00      	cmp	r3, #0
 800b9d2:	d1b4      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b9d4:	b004      	add	sp, #16
 800b9d6:	bd70      	pop	{r4, r5, r6, pc}
 800b9d8:	2bc8      	cmp	r3, #200	; 0xc8
 800b9da:	d1b0      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b9dc:	69e1      	ldr	r1, [r4, #28]
 800b9de:	2901      	cmp	r1, #1
 800b9e0:	d1ad      	bne.n	800b93e <HttpDaemon::Run()+0x3a>
 800b9e2:	4620      	mov	r0, r4
 800b9e4:	f7ff fede 	bl	800b7a4 <HttpDaemon::HandlePost(bool)>
 800b9e8:	e7a8      	b.n	800b93c <HttpDaemon::Run()+0x38>
 800b9ea:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b9ee:	4293      	cmp	r3, r2
 800b9f0:	d010      	beq.n	800ba14 <HttpDaemon::Run()+0x110>
 800b9f2:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b9f6:	4293      	cmp	r3, r2
 800b9f8:	d00e      	beq.n	800ba18 <HttpDaemon::Run()+0x114>
 800b9fa:	4d11      	ldr	r5, [pc, #68]	; (800ba40 <HttpDaemon::Run()+0x13c>)
 800b9fc:	4a0a      	ldr	r2, [pc, #40]	; (800ba28 <HttpDaemon::Run()+0x124>)
 800b9fe:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ba02:	bf18      	it	ne
 800ba04:	4615      	movne	r5, r2
 800ba06:	e7ae      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba08:	4d0e      	ldr	r5, [pc, #56]	; (800ba44 <HttpDaemon::Run()+0x140>)
 800ba0a:	e7ac      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba0c:	4d0e      	ldr	r5, [pc, #56]	; (800ba48 <HttpDaemon::Run()+0x144>)
 800ba0e:	e7aa      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba10:	4d0e      	ldr	r5, [pc, #56]	; (800ba4c <HttpDaemon::Run()+0x148>)
 800ba12:	e7a8      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba14:	4d0e      	ldr	r5, [pc, #56]	; (800ba50 <HttpDaemon::Run()+0x14c>)
 800ba16:	e7a6      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba18:	4d0e      	ldr	r5, [pc, #56]	; (800ba54 <HttpDaemon::Run()+0x150>)
 800ba1a:	e7a4      	b.n	800b966 <HttpDaemon::Run()+0x62>
 800ba1c:	4d0e      	ldr	r5, [pc, #56]	; (800ba58 <HttpDaemon::Run()+0x154>)
 800ba1e:	e7ad      	b.n	800b97c <HttpDaemon::Run()+0x78>
 800ba20:	2000f994 	mulcs	r0, r4, r9
 800ba24:	0801836f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, pc}
 800ba28:	080183f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, pc}
 800ba2c:	080184c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, pc}
 800ba30:	08018407 	stmdaeq	r1, {r0, r1, r2, sl, pc}
 800ba34:	20000128 	andcs	r0, r0, r8, lsr #2
 800ba38:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}
 800ba3c:	08018462 	stmdaeq	r1, {r1, r5, r6, sl, pc}
 800ba40:	080183b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, pc}
 800ba44:	0801839e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, r9, pc}
 800ba48:	0801837b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, pc}
 800ba4c:	08018385 	stmdaeq	r1, {r0, r2, r7, r8, r9, pc}
 800ba50:	080183c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, pc}
 800ba54:	080183e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, pc}
 800ba58:	08018404 	stmdaeq	r1, {r2, sl, pc}

0800ba5c <remoteconfig::json_get_list(char*, unsigned short)>:
 800ba5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba5e:	4b13      	ldr	r3, [pc, #76]	; (800baac <remoteconfig::json_get_list(char*, unsigned short)+0x50>)
 800ba60:	4f13      	ldr	r7, [pc, #76]	; (800bab0 <remoteconfig::json_get_list(char*, unsigned short)+0x54>)
 800ba62:	681b      	ldr	r3, [r3, #0]
 800ba64:	b08b      	sub	sp, #44	; 0x2c
 800ba66:	4605      	mov	r5, r0
 800ba68:	6838      	ldr	r0, [r7, #0]
 800ba6a:	695c      	ldr	r4, [r3, #20]
 800ba6c:	9109      	str	r1, [sp, #36]	; 0x24
 800ba6e:	f7fe ffe1 	bl	800aa34 <RemoteConfig::GetStringNode() const>
 800ba72:	4606      	mov	r6, r0
 800ba74:	6838      	ldr	r0, [r7, #0]
 800ba76:	f7fe ffe9 	bl	800aa4c <RemoteConfig::GetStringOutput() const>
 800ba7a:	4b0e      	ldr	r3, [pc, #56]	; (800bab4 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ba7c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ba7e:	7a1a      	ldrb	r2, [r3, #8]
 800ba80:	9604      	str	r6, [sp, #16]
 800ba82:	3309      	adds	r3, #9
 800ba84:	9303      	str	r3, [sp, #12]
 800ba86:	0e23      	lsrs	r3, r4, #24
 800ba88:	9302      	str	r3, [sp, #8]
 800ba8a:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ba8e:	9301      	str	r3, [sp, #4]
 800ba90:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800ba94:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800ba98:	9300      	str	r3, [sp, #0]
 800ba9a:	4a07      	ldr	r2, [pc, #28]	; (800bab8 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>)
 800ba9c:	b2e3      	uxtb	r3, r4
 800ba9e:	4628      	mov	r0, r5
 800baa0:	f7fe fca4 	bl	800a3ec <snprintf>
 800baa4:	b280      	uxth	r0, r0
 800baa6:	b00b      	add	sp, #44	; 0x2c
 800baa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800baaa:	bf00      	nop
 800baac:	2000f994 	mulcs	r0, r4, r9
 800bab0:	20000124 	andcs	r0, r0, r4, lsr #2
 800bab4:	20000100 	andcs	r0, r0, r0, lsl #2
 800bab8:	0801859f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, pc}

0800babc <remoteconfig::json_get_version(char*, unsigned short)>:
 800babc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800babe:	4b0a      	ldr	r3, [pc, #40]	; (800bae8 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800bac0:	9305      	str	r3, [sp, #20]
 800bac2:	2208      	movs	r2, #8
 800bac4:	9204      	str	r2, [sp, #16]
 800bac6:	f1a3 020b 	sub.w	r2, r3, #11
 800baca:	9203      	str	r2, [sp, #12]
 800bacc:	220b      	movs	r2, #11
 800bace:	9202      	str	r2, [sp, #8]
 800bad0:	3b0e      	subs	r3, #14
 800bad2:	4a06      	ldr	r2, [pc, #24]	; (800baec <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800bad4:	9201      	str	r2, [sp, #4]
 800bad6:	9300      	str	r3, [sp, #0]
 800bad8:	4a05      	ldr	r2, [pc, #20]	; (800baf0 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800bada:	2303      	movs	r3, #3
 800badc:	f7fe fc86 	bl	800a3ec <snprintf>
 800bae0:	b280      	uxth	r0, r0
 800bae2:	b007      	add	sp, #28
 800bae4:	f85d fb04 	ldr.w	pc, [sp], #4
 800bae8:	2000fd2e 	andcs	pc, r0, lr, lsr #26
 800baec:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}
 800baf0:	080185fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}

0800baf4 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800baf4:	b508      	push	{r3, lr}
 800baf6:	4b05      	ldr	r3, [pc, #20]	; (800bb0c <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800baf8:	681a      	ldr	r2, [r3, #0]
 800bafa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800bafe:	fbb2 f3f3 	udiv	r3, r2, r3
 800bb02:	4a03      	ldr	r2, [pc, #12]	; (800bb10 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800bb04:	f7fe fc72 	bl	800a3ec <snprintf>
 800bb08:	b280      	uxth	r0, r0
 800bb0a:	bd08      	pop	{r3, pc}
 800bb0c:	2000fd94 	mulcs	r0, r4, sp
 800bb10:	08018644 	stmdaeq	r1, {r2, r6, r9, sl, pc}

0800bb14 <remoteconfig::json_get_display(char*, unsigned short)>:
 800bb14:	b508      	push	{r3, lr}
 800bb16:	4b05      	ldr	r3, [pc, #20]	; (800bb2c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800bb18:	4a05      	ldr	r2, [pc, #20]	; (800bb30 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800bb1a:	681b      	ldr	r3, [r3, #0]
 800bb1c:	7c1b      	ldrb	r3, [r3, #16]
 800bb1e:	f083 0301 	eor.w	r3, r3, #1
 800bb22:	f7fe fc63 	bl	800a3ec <snprintf>
 800bb26:	b280      	uxth	r0, r0
 800bb28:	bd08      	pop	{r3, pc}
 800bb2a:	bf00      	nop
 800bb2c:	2000fc90 	mulcs	r0, r0, ip
 800bb30:	08018653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, pc}

0800bb34 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800bb34:	b508      	push	{r3, lr}
 800bb36:	4a02      	ldr	r2, [pc, #8]	; (800bb40 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800bb38:	f7fe fc58 	bl	800a3ec <snprintf>
 800bb3c:	b280      	uxth	r0, r0
 800bb3e:	bd08      	pop	{r3, pc}
 800bb40:	08018662 	stmdaeq	r1, {r1, r5, r6, r9, sl, pc}

0800bb44 <get_file_content(char const*, char*)>:
 800bb44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb46:	4a11      	ldr	r2, [pc, #68]	; (800bb8c <get_file_content(char const*, char*)+0x48>)
 800bb48:	2300      	movs	r3, #0
 800bb4a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800bb4e:	1e46      	subs	r6, r0, #1
 800bb50:	3c01      	subs	r4, #1
 800bb52:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800bb56:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800bb5a:	42bd      	cmp	r5, r7
 800bb5c:	d005      	beq.n	800bb6a <get_file_content(char const*, char*)+0x26>
 800bb5e:	3301      	adds	r3, #1
 800bb60:	2b03      	cmp	r3, #3
 800bb62:	d1f2      	bne.n	800bb4a <get_file_content(char const*, char*)+0x6>
 800bb64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bb68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb6a:	2d00      	cmp	r5, #0
 800bb6c:	d1f1      	bne.n	800bb52 <get_file_content(char const*, char*)+0xe>
 800bb6e:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800bb72:	4608      	mov	r0, r1
 800bb74:	6853      	ldr	r3, [r2, #4]
 800bb76:	3b01      	subs	r3, #1
 800bb78:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800bb7c:	f800 2b01 	strb.w	r2, [r0], #1
 800bb80:	2a00      	cmp	r2, #0
 800bb82:	d1f9      	bne.n	800bb78 <get_file_content(char const*, char*)+0x34>
 800bb84:	1a41      	subs	r1, r0, r1
 800bb86:	1e48      	subs	r0, r1, #1
 800bb88:	e7ee      	b.n	800bb68 <get_file_content(char const*, char*)+0x24>
 800bb8a:	bf00      	nop
 800bb8c:	080189c0 	stmdaeq	r1, {r6, r7, r8, fp, pc}

0800bb90 <e131::universe_to_multicast_ip(unsigned short)>:
 800bb90:	b513      	push	{r0, r1, r4, lr}
 800bb92:	4604      	mov	r4, r0
 800bb94:	a901      	add	r1, sp, #4
 800bb96:	4806      	ldr	r0, [pc, #24]	; (800bbb0 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800bb98:	f009 fca8 	bl	80154ec <inet_aton>
 800bb9c:	9801      	ldr	r0, [sp, #4]
 800bb9e:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800bba2:	0224      	lsls	r4, r4, #8
 800bba4:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800bba8:	4320      	orrs	r0, r4
 800bbaa:	b002      	add	sp, #8
 800bbac:	bd10      	pop	{r4, pc}
 800bbae:	bf00      	nop
 800bbb0:	08018f02 	stmdaeq	r1, {r1, r8, r9, sl, fp, pc}

0800bbb4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800bbb4:	b510      	push	{r4, lr}
 800bbb6:	f240 6304 	movw	r3, #1540	; 0x604
 800bbba:	fb03 0001 	mla	r0, r3, r1, r0
 800bbbe:	2300      	movs	r3, #0
 800bbc0:	4293      	cmp	r3, r2
 800bbc2:	d100      	bne.n	800bbc6 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800bbc4:	bd10      	pop	{r4, pc}
 800bbc6:	f810 4b01 	ldrb.w	r4, [r0], #1
 800bbca:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800bbce:	42a1      	cmp	r1, r4
 800bbd0:	bf38      	it	cc
 800bbd2:	4621      	movcc	r1, r4
 800bbd4:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800bbd8:	3301      	adds	r3, #1
 800bbda:	e7f1      	b.n	800bbc0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800bbdc <memset.constprop.0.isra.0>:
 800bbdc:	4401      	add	r1, r0
 800bbde:	2300      	movs	r3, #0
 800bbe0:	4288      	cmp	r0, r1
 800bbe2:	d100      	bne.n	800bbe6 <memset.constprop.0.isra.0+0xa>
 800bbe4:	4770      	bx	lr
 800bbe6:	f800 3b01 	strb.w	r3, [r0], #1
 800bbea:	e7f9      	b.n	800bbe0 <memset.constprop.0.isra.0+0x4>

0800bbec <memcpy.isra.0>:
 800bbec:	3801      	subs	r0, #1
 800bbee:	440a      	add	r2, r1
 800bbf0:	4291      	cmp	r1, r2
 800bbf2:	d100      	bne.n	800bbf6 <memcpy.isra.0+0xa>
 800bbf4:	4770      	bx	lr
 800bbf6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bbfa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bbfe:	e7f7      	b.n	800bbf0 <memcpy.isra.0+0x4>

0800bc00 <lightset::Data::Get()>:
 800bc00:	4b03      	ldr	r3, [pc, #12]	; (800bc10 <lightset::Data::Get()+0x10>)
 800bc02:	4804      	ldr	r0, [pc, #16]	; (800bc14 <lightset::Data::Get()+0x14>)
 800bc04:	681a      	ldr	r2, [r3, #0]
 800bc06:	07d2      	lsls	r2, r2, #31
 800bc08:	bf5c      	itt	pl
 800bc0a:	2201      	movpl	r2, #1
 800bc0c:	601a      	strpl	r2, [r3, #0]
 800bc0e:	4770      	bx	lr
 800bc10:	200006c8 	andcs	r0, r0, r8, asr #13
 800bc14:	20030000 	andcs	r0, r3, r0

0800bc18 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800bc18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	9103      	str	r1, [sp, #12]
 800bc1e:	9201      	str	r2, [sp, #4]
 800bc20:	f7ff ffee 	bl	800bc00 <lightset::Data::Get()>
 800bc24:	f240 6304 	movw	r3, #1540	; 0x604
 800bc28:	435c      	muls	r4, r3
 800bc2a:	1906      	adds	r6, r0, r4
 800bc2c:	9a01      	ldr	r2, [sp, #4]
 800bc2e:	9903      	ldr	r1, [sp, #12]
 800bc30:	9202      	str	r2, [sp, #8]
 800bc32:	4605      	mov	r5, r0
 800bc34:	4630      	mov	r0, r6
 800bc36:	9101      	str	r1, [sp, #4]
 800bc38:	f7ff ffd8 	bl	800bbec <memcpy.isra.0>
 800bc3c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bc40:	9a02      	ldr	r2, [sp, #8]
 800bc42:	9901      	ldr	r1, [sp, #4]
 800bc44:	f8c6 2600 	str.w	r2, [r6, #1536]	; 0x600
 800bc48:	1928      	adds	r0, r5, r4
 800bc4a:	b004      	add	sp, #16
 800bc4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc50:	f7ff bfcc 	b.w	800bbec <memcpy.isra.0>

0800bc54 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bc54:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bc58:	4606      	mov	r6, r0
 800bc5a:	9103      	str	r1, [sp, #12]
 800bc5c:	9201      	str	r2, [sp, #4]
 800bc5e:	461f      	mov	r7, r3
 800bc60:	f7ff ffce 	bl	800bc00 <lightset::Data::Get()>
 800bc64:	f240 6404 	movw	r4, #1540	; 0x604
 800bc68:	4374      	muls	r4, r6
 800bc6a:	eb00 0804 	add.w	r8, r0, r4
 800bc6e:	9a01      	ldr	r2, [sp, #4]
 800bc70:	9903      	ldr	r1, [sp, #12]
 800bc72:	9202      	str	r2, [sp, #8]
 800bc74:	4605      	mov	r5, r0
 800bc76:	4640      	mov	r0, r8
 800bc78:	9101      	str	r1, [sp, #4]
 800bc7a:	f7ff ffb7 	bl	800bbec <memcpy.isra.0>
 800bc7e:	9a02      	ldr	r2, [sp, #8]
 800bc80:	9901      	ldr	r1, [sp, #4]
 800bc82:	f8c8 2600 	str.w	r2, [r8, #1536]	; 0x600
 800bc86:	b937      	cbnz	r7, 800bc96 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800bc88:	4631      	mov	r1, r6
 800bc8a:	4628      	mov	r0, r5
 800bc8c:	b004      	add	sp, #16
 800bc8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bc92:	f7ff bf8f 	b.w	800bbb4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800bc96:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bc9a:	1928      	adds	r0, r5, r4
 800bc9c:	b004      	add	sp, #16
 800bc9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bca2:	f7ff bfa3 	b.w	800bbec <memcpy.isra.0>

0800bca6 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bca6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bca8:	b085      	sub	sp, #20
 800bcaa:	461f      	mov	r7, r3
 800bcac:	4606      	mov	r6, r0
 800bcae:	9103      	str	r1, [sp, #12]
 800bcb0:	9201      	str	r2, [sp, #4]
 800bcb2:	f7ff ffa5 	bl	800bc00 <lightset::Data::Get()>
 800bcb6:	f240 6404 	movw	r4, #1540	; 0x604
 800bcba:	4374      	muls	r4, r6
 800bcbc:	4605      	mov	r5, r0
 800bcbe:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800bcc2:	9a01      	ldr	r2, [sp, #4]
 800bcc4:	9903      	ldr	r1, [sp, #12]
 800bcc6:	9202      	str	r2, [sp, #8]
 800bcc8:	4428      	add	r0, r5
 800bcca:	9101      	str	r1, [sp, #4]
 800bccc:	f7ff ff8e 	bl	800bbec <memcpy.isra.0>
 800bcd0:	192b      	adds	r3, r5, r4
 800bcd2:	9a02      	ldr	r2, [sp, #8]
 800bcd4:	9901      	ldr	r1, [sp, #4]
 800bcd6:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
 800bcda:	b937      	cbnz	r7, 800bcea <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x44>
 800bcdc:	4631      	mov	r1, r6
 800bcde:	4628      	mov	r0, r5
 800bce0:	b005      	add	sp, #20
 800bce2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bce6:	f7ff bf65 	b.w	800bbb4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800bcea:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bcee:	1928      	adds	r0, r5, r4
 800bcf0:	b005      	add	sp, #20
 800bcf2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bcf6:	f7ff bf79 	b.w	800bbec <memcpy.isra.0>
	...

0800bcfc <E131Bridge::E131Bridge()>:
 800bcfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bcfe:	2300      	movs	r3, #0
 800bd00:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800bd04:	e9c0 2300 	strd	r2, r3, [r0]
 800bd08:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800bd0c:	2201      	movs	r2, #1
 800bd0e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800bd12:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800bd16:	6743      	str	r3, [r0, #116]	; 0x74
 800bd18:	4b28      	ldr	r3, [pc, #160]	; (800bdbc <E131Bridge::E131Bridge()+0xc0>)
 800bd1a:	7202      	strb	r2, [r0, #8]
 800bd1c:	f500 55cd 	add.w	r5, r0, #6560	; 0x19a0
 800bd20:	f500 52b4 	add.w	r2, r0, #5760	; 0x1680
 800bd24:	b093      	sub	sp, #76	; 0x4c
 800bd26:	4604      	mov	r4, r0
 800bd28:	6018      	str	r0, [r3, #0]
 800bd2a:	f200 5614 	addw	r6, r0, #1300	; 0x514
 800bd2e:	321c      	adds	r2, #28
 800bd30:	3514      	adds	r5, #20
 800bd32:	2764      	movs	r7, #100	; 0x64
 800bd34:	4630      	mov	r0, r6
 800bd36:	2144      	movs	r1, #68	; 0x44
 800bd38:	f7ff ff50 	bl	800bbdc <memset.constprop.0.isra.0>
 800bd3c:	4610      	mov	r0, r2
 800bd3e:	210c      	movs	r1, #12
 800bd40:	f7ff ff4c 	bl	800bbdc <memset.constprop.0.isra.0>
 800bd44:	320c      	adds	r2, #12
 800bd46:	f802 7c03 	strb.w	r7, [r2, #-3]
 800bd4a:	4295      	cmp	r5, r2
 800bd4c:	f106 0644 	add.w	r6, r6, #68	; 0x44
 800bd50:	d1f0      	bne.n	800bd34 <E131Bridge::E131Bridge()+0x38>
 800bd52:	2120      	movs	r1, #32
 800bd54:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800bd58:	4d19      	ldr	r5, [pc, #100]	; (800bdc0 <E131Bridge::E131Bridge()+0xc4>)
 800bd5a:	4a1a      	ldr	r2, [pc, #104]	; (800bdc4 <E131Bridge::E131Bridge()+0xc8>)
 800bd5c:	f7ff ff3e 	bl	800bbdc <memset.constprop.0.isra.0>
 800bd60:	2301      	movs	r3, #1
 800bd62:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800bd66:	682b      	ldr	r3, [r5, #0]
 800bd68:	9200      	str	r2, [sp, #0]
 800bd6a:	3320      	adds	r3, #32
 800bd6c:	4a16      	ldr	r2, [pc, #88]	; (800bdc8 <E131Bridge::E131Bridge()+0xcc>)
 800bd6e:	2140      	movs	r1, #64	; 0x40
 800bd70:	a802      	add	r0, sp, #8
 800bd72:	f7fe fb3b 	bl	800a3ec <snprintf>
 800bd76:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800bd7a:	a902      	add	r1, sp, #8
 800bd7c:	233f      	movs	r3, #63	; 0x3f
 800bd7e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800bd82:	b928      	cbnz	r0, 800bd90 <E131Bridge::E131Bridge()+0x94>
 800bd84:	4413      	add	r3, r2
 800bd86:	429a      	cmp	r2, r3
 800bd88:	d006      	beq.n	800bd98 <E131Bridge::E131Bridge()+0x9c>
 800bd8a:	f802 0b01 	strb.w	r0, [r2], #1
 800bd8e:	e7fa      	b.n	800bd86 <E131Bridge::E131Bridge()+0x8a>
 800bd90:	3b01      	subs	r3, #1
 800bd92:	f802 0b01 	strb.w	r0, [r2], #1
 800bd96:	d1f2      	bne.n	800bd7e <E131Bridge::E131Bridge()+0x82>
 800bd98:	2300      	movs	r3, #0
 800bd9a:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800bd9e:	6828      	ldr	r0, [r5, #0]
 800bda0:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800bda4:	f006 fae7 	bl	8012376 <Network::Begin(unsigned short)>
 800bda8:	4b08      	ldr	r3, [pc, #32]	; (800bdcc <E131Bridge::E131Bridge()+0xd0>)
 800bdaa:	4621      	mov	r1, r4
 800bdac:	f841 0b24 	str.w	r0, [r1], #36
 800bdb0:	6818      	ldr	r0, [r3, #0]
 800bdb2:	f009 fb39 	bl	8015428 <Hardware::GetUuid(unsigned char*)>
 800bdb6:	4620      	mov	r0, r4
 800bdb8:	b013      	add	sp, #76	; 0x4c
 800bdba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bdbc:	200006cc 	andcs	r0, r0, ip, asr #13
 800bdc0:	2000f994 	mulcs	r0, r4, r9
 800bdc4:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}
 800bdc8:	08018f0e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, fp, pc}
 800bdcc:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800bdd0 <E131Bridge::Start()>:
 800bdd0:	6943      	ldr	r3, [r0, #20]
 800bdd2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bdd4:	4604      	mov	r4, r0
 800bdd6:	b363      	cbz	r3, 800be32 <E131Bridge::Start()+0x62>
 800bdd8:	6983      	ldr	r3, [r0, #24]
 800bdda:	b9cb      	cbnz	r3, 800be10 <E131Bridge::Start()+0x40>
 800bddc:	a901      	add	r1, sp, #4
 800bdde:	4819      	ldr	r0, [pc, #100]	; (800be44 <E131Bridge::Start()+0x74>)
 800bde0:	f009 fb84 	bl	80154ec <inet_aton>
 800bde4:	9b01      	ldr	r3, [sp, #4]
 800bde6:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800bdea:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800bdee:	6223      	str	r3, [r4, #32]
 800bdf0:	f240 207e 	movw	r0, #638	; 0x27e
 800bdf4:	f009 fb76 	bl	80154e4 <operator new(unsigned int)>
 800bdf8:	61a0      	str	r0, [r4, #24]
 800bdfa:	4620      	mov	r0, r4
 800bdfc:	f000 fd42 	bl	800c884 <E131Bridge::FillDataPacket()>
 800be00:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800be04:	f009 fb6e 	bl	80154e4 <operator new(unsigned int)>
 800be08:	61e0      	str	r0, [r4, #28]
 800be0a:	4620      	mov	r0, r4
 800be0c:	f000 fc92 	bl	800c734 <E131Bridge::FillDiscoveryPacket()>
 800be10:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800be14:	2500      	movs	r5, #0
 800be16:	361e      	adds	r6, #30
 800be18:	270c      	movs	r7, #12
 800be1a:	fb07 f305 	mul.w	r3, r7, r5
 800be1e:	5cf3      	ldrb	r3, [r6, r3]
 800be20:	b123      	cbz	r3, 800be2c <E131Bridge::Start()+0x5c>
 800be22:	6960      	ldr	r0, [r4, #20]
 800be24:	6803      	ldr	r3, [r0, #0]
 800be26:	4629      	mov	r1, r5
 800be28:	689b      	ldr	r3, [r3, #8]
 800be2a:	4798      	blx	r3
 800be2c:	3501      	adds	r5, #1
 800be2e:	2d42      	cmp	r5, #66	; 0x42
 800be30:	d1f3      	bne.n	800be1a <E131Bridge::Start()+0x4a>
 800be32:	4b05      	ldr	r3, [pc, #20]	; (800be48 <E131Bridge::Start()+0x78>)
 800be34:	6818      	ldr	r0, [r3, #0]
 800be36:	2102      	movs	r1, #2
 800be38:	b003      	add	sp, #12
 800be3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800be3e:	f009 ba51 	b.w	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800be42:	bf00      	nop
 800be44:	08018f02 	stmdaeq	r1, {r1, r8, r9, sl, fp, pc}
 800be48:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800be4c <E131Bridge::Stop()>:
 800be4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be50:	2301      	movs	r3, #1
 800be52:	2500      	movs	r5, #0
 800be54:	4604      	mov	r4, r0
 800be56:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800be5a:	f240 6804 	movw	r8, #1540	; 0x604
 800be5e:	462e      	mov	r6, r5
 800be60:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800be64:	6860      	ldr	r0, [r4, #4]
 800be66:	b118      	cbz	r0, 800be70 <E131Bridge::Stop()+0x24>
 800be68:	6803      	ldr	r3, [r0, #0]
 800be6a:	4629      	mov	r1, r5
 800be6c:	68db      	ldr	r3, [r3, #12]
 800be6e:	4798      	blx	r3
 800be70:	f7ff fec6 	bl	800bc00 <lightset::Data::Get()>
 800be74:	2344      	movs	r3, #68	; 0x44
 800be76:	fb08 0005 	mla	r0, r8, r5, r0
 800be7a:	436b      	muls	r3, r5
 800be7c:	3501      	adds	r5, #1
 800be7e:	2d42      	cmp	r5, #66	; 0x42
 800be80:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800be84:	54fe      	strb	r6, [r7, r3]
 800be86:	d1ed      	bne.n	800be64 <E131Bridge::Stop()+0x18>
 800be88:	6963      	ldr	r3, [r4, #20]
 800be8a:	b183      	cbz	r3, 800beae <E131Bridge::Stop()+0x62>
 800be8c:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800be90:	2500      	movs	r5, #0
 800be92:	361e      	adds	r6, #30
 800be94:	270c      	movs	r7, #12
 800be96:	fb07 f305 	mul.w	r3, r7, r5
 800be9a:	5cf3      	ldrb	r3, [r6, r3]
 800be9c:	b123      	cbz	r3, 800bea8 <E131Bridge::Stop()+0x5c>
 800be9e:	6960      	ldr	r0, [r4, #20]
 800bea0:	6803      	ldr	r3, [r0, #0]
 800bea2:	4629      	mov	r1, r5
 800bea4:	68db      	ldr	r3, [r3, #12]
 800bea6:	4798      	blx	r3
 800bea8:	3501      	adds	r5, #1
 800beaa:	2d42      	cmp	r5, #66	; 0x42
 800beac:	d1f3      	bne.n	800be96 <E131Bridge::Stop()+0x4a>
 800beae:	4b03      	ldr	r3, [pc, #12]	; (800bebc <E131Bridge::Stop()+0x70>)
 800beb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800beb4:	6818      	ldr	r0, [r3, #0]
 800beb6:	2100      	movs	r1, #0
 800beb8:	f009 ba14 	b.w	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800bebc:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800bec0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800bec0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bec2:	2300      	movs	r3, #0
 800bec4:	f200 5414 	addw	r4, r0, #1300	; 0x514
 800bec8:	2544      	movs	r5, #68	; 0x44
 800beca:	4299      	cmp	r1, r3
 800becc:	d004      	beq.n	800bed8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x18>
 800bece:	fb05 f603 	mul.w	r6, r5, r3
 800bed2:	5ba6      	ldrh	r6, [r4, r6]
 800bed4:	4296      	cmp	r6, r2
 800bed6:	d011      	beq.n	800befc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>
 800bed8:	3301      	adds	r3, #1
 800beda:	2b42      	cmp	r3, #66	; 0x42
 800bedc:	d1f5      	bne.n	800beca <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xa>
 800bede:	4b08      	ldr	r3, [pc, #32]	; (800bf00 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x40>)
 800bee0:	6801      	ldr	r1, [r0, #0]
 800bee2:	681c      	ldr	r4, [r3, #0]
 800bee4:	9101      	str	r1, [sp, #4]
 800bee6:	4610      	mov	r0, r2
 800bee8:	f7ff fe52 	bl	800bb90 <e131::universe_to_multicast_ip(unsigned short)>
 800beec:	9901      	ldr	r1, [sp, #4]
 800beee:	4602      	mov	r2, r0
 800bef0:	4620      	mov	r0, r4
 800bef2:	b002      	add	sp, #8
 800bef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bef8:	f006 ba51 	b.w	801239e <Network::LeaveGroup(int, unsigned int)>
 800befc:	b002      	add	sp, #8
 800befe:	bd70      	pop	{r4, r5, r6, pc}
 800bf00:	2000f994 	mulcs	r0, r4, r9

0800bf04 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800bf04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bf06:	4604      	mov	r4, r0
 800bf08:	461d      	mov	r5, r3
 800bf0a:	b1d1      	cbz	r1, 800bf42 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3e>
 800bf0c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800bf10:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800bf14:	b12a      	cbz	r2, 800bf22 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800bf16:	42aa      	cmp	r2, r5
 800bf18:	d019      	beq.n	800bf4e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800bf1a:	2142      	movs	r1, #66	; 0x42
 800bf1c:	4620      	mov	r0, r4
 800bf1e:	f7ff ffcf 	bl	800bec0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800bf22:	4b0c      	ldr	r3, [pc, #48]	; (800bf54 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x50>)
 800bf24:	6821      	ldr	r1, [r4, #0]
 800bf26:	8035      	strh	r5, [r6, #0]
 800bf28:	4628      	mov	r0, r5
 800bf2a:	681c      	ldr	r4, [r3, #0]
 800bf2c:	9101      	str	r1, [sp, #4]
 800bf2e:	f7ff fe2f 	bl	800bb90 <e131::universe_to_multicast_ip(unsigned short)>
 800bf32:	9901      	ldr	r1, [sp, #4]
 800bf34:	4602      	mov	r2, r0
 800bf36:	4620      	mov	r0, r4
 800bf38:	b002      	add	sp, #8
 800bf3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf3e:	f006 ba2b 	b.w	8012398 <Network::JoinGroup(int, unsigned int)>
 800bf42:	b122      	cbz	r2, 800bf4e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800bf44:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800bf48:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800bf4c:	e7e2      	b.n	800bf14 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800bf4e:	b002      	add	sp, #8
 800bf50:	bd70      	pop	{r4, r5, r6, pc}
 800bf52:	bf00      	nop
 800bf54:	2000f994 	mulcs	r0, r4, r9

0800bf58 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800bf58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bf5a:	4604      	mov	r4, r0
 800bf5c:	460d      	mov	r5, r1
 800bf5e:	461e      	mov	r6, r3
 800bf60:	bb1a      	cbnz	r2, 800bfaa <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x52>
 800bf62:	2941      	cmp	r1, #65	; 0x41
 800bf64:	d846      	bhi.n	800bff4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800bf66:	230c      	movs	r3, #12
 800bf68:	fb03 0301 	mla	r3, r3, r1, r0
 800bf6c:	f241 619e 	movw	r1, #5790	; 0x169e
 800bf70:	5c5a      	ldrb	r2, [r3, r1]
 800bf72:	b132      	cbz	r2, 800bf82 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x2a>
 800bf74:	f241 629c 	movw	r2, #5788	; 0x169c
 800bf78:	5a9b      	ldrh	r3, [r3, r2]
 800bf7a:	42b3      	cmp	r3, r6
 800bf7c:	d108      	bne.n	800bf90 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800bf7e:	b003      	add	sp, #12
 800bf80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf82:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800bf86:	3201      	adds	r2, #1
 800bf88:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800bf8c:	2201      	movs	r2, #1
 800bf8e:	545a      	strb	r2, [r3, r1]
 800bf90:	230c      	movs	r3, #12
 800bf92:	fb03 4405 	mla	r4, r3, r5, r4
 800bf96:	f241 639c 	movw	r3, #5788	; 0x169c
 800bf9a:	4630      	mov	r0, r6
 800bf9c:	52e6      	strh	r6, [r4, r3]
 800bf9e:	f7ff fdf7 	bl	800bb90 <e131::universe_to_multicast_ip(unsigned short)>
 800bfa2:	f504 54b5 	add.w	r4, r4, #5792	; 0x16a0
 800bfa6:	6020      	str	r0, [r4, #0]
 800bfa8:	e7e9      	b.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800bfaa:	2a02      	cmp	r2, #2
 800bfac:	d122      	bne.n	800bff4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800bfae:	2941      	cmp	r1, #65	; 0x41
 800bfb0:	d8e5      	bhi.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800bfb2:	2344      	movs	r3, #68	; 0x44
 800bfb4:	fb03 0301 	mla	r3, r3, r1, r0
 800bfb8:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800bfbc:	b152      	cbz	r2, 800bfd4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 800bfbe:	2200      	movs	r2, #0
 800bfc0:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800bfc4:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800bfc8:	3b01      	subs	r3, #1
 800bfca:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800bfce:	4632      	mov	r2, r6
 800bfd0:	f7ff ff76 	bl	800bec0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800bfd4:	230c      	movs	r3, #12
 800bfd6:	fb03 4505 	mla	r5, r3, r5, r4
 800bfda:	f241 639e 	movw	r3, #5790	; 0x169e
 800bfde:	5cea      	ldrb	r2, [r5, r3]
 800bfe0:	2a00      	cmp	r2, #0
 800bfe2:	d0cc      	beq.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800bfe4:	2200      	movs	r2, #0
 800bfe6:	54ea      	strb	r2, [r5, r3]
 800bfe8:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800bfec:	3b01      	subs	r3, #1
 800bfee:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800bff2:	e7c4      	b.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800bff4:	2344      	movs	r3, #68	; 0x44
 800bff6:	fb03 4305 	mla	r3, r3, r5, r4
 800bffa:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800bffe:	b1d2      	cbz	r2, 800c036 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xde>
 800c000:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800c004:	42b3      	cmp	r3, r6
 800c006:	d0ba      	beq.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c008:	4632      	mov	r2, r6
 800c00a:	4629      	mov	r1, r5
 800c00c:	4620      	mov	r0, r4
 800c00e:	f7ff ff57 	bl	800bec0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c012:	4b0d      	ldr	r3, [pc, #52]	; (800c048 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xf0>)
 800c014:	6821      	ldr	r1, [r4, #0]
 800c016:	681f      	ldr	r7, [r3, #0]
 800c018:	9101      	str	r1, [sp, #4]
 800c01a:	4630      	mov	r0, r6
 800c01c:	f7ff fdb8 	bl	800bb90 <e131::universe_to_multicast_ip(unsigned short)>
 800c020:	9901      	ldr	r1, [sp, #4]
 800c022:	4602      	mov	r2, r0
 800c024:	4638      	mov	r0, r7
 800c026:	f006 f9b7 	bl	8012398 <Network::JoinGroup(int, unsigned int)>
 800c02a:	2344      	movs	r3, #68	; 0x44
 800c02c:	fb03 4305 	mla	r3, r3, r5, r4
 800c030:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800c034:	e7a3      	b.n	800bf7e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c036:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800c03a:	3201      	adds	r2, #1
 800c03c:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800c040:	2201      	movs	r2, #1
 800c042:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800c046:	e7e4      	b.n	800c012 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xba>
 800c048:	2000f994 	mulcs	r0, r4, r9

0800c04c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800c04c:	b963      	cbnz	r3, 800c068 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x1c>
 800c04e:	2941      	cmp	r1, #65	; 0x41
 800c050:	d813      	bhi.n	800c07a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2e>
 800c052:	230c      	movs	r3, #12
 800c054:	fb03 0101 	mla	r1, r3, r1, r0
 800c058:	f241 639c 	movw	r3, #5788	; 0x169c
 800c05c:	5acb      	ldrh	r3, [r1, r3]
 800c05e:	8013      	strh	r3, [r2, #0]
 800c060:	f241 639e 	movw	r3, #5790	; 0x169e
 800c064:	5cc8      	ldrb	r0, [r1, r3]
 800c066:	4770      	bx	lr
 800c068:	2344      	movs	r3, #68	; 0x44
 800c06a:	fb03 0101 	mla	r1, r3, r1, r0
 800c06e:	f8b1 3514 	ldrh.w	r3, [r1, #1300]	; 0x514
 800c072:	f891 0516 	ldrb.w	r0, [r1, #1302]	; 0x516
 800c076:	8013      	strh	r3, [r2, #0]
 800c078:	4770      	bx	lr
 800c07a:	4618      	mov	r0, r3
 800c07c:	4770      	bx	lr

0800c07e <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800c07e:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800c082:	b923      	cbnz	r3, 800c08e <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800c084:	2301      	movs	r3, #1
 800c086:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800c08a:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c08e:	2344      	movs	r3, #68	; 0x44
 800c090:	fb03 0101 	mla	r1, r3, r1, r0
 800c094:	2301      	movs	r3, #1
 800c096:	f881 3555 	strb.w	r3, [r1, #1365]	; 0x555
 800c09a:	4770      	bx	lr

0800c09c <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800c09c:	4602      	mov	r2, r0
 800c09e:	2044      	movs	r0, #68	; 0x44
 800c0a0:	4348      	muls	r0, r1
 800c0a2:	b570      	push	{r4, r5, r6, lr}
 800c0a4:	1815      	adds	r5, r2, r0
 800c0a6:	68d3      	ldr	r3, [r2, #12]
 800c0a8:	460c      	mov	r4, r1
 800c0aa:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800c0ae:	1a5b      	subs	r3, r3, r1
 800c0b0:	f242 7110 	movw	r1, #10000	; 0x2710
 800c0b4:	428b      	cmp	r3, r1
 800c0b6:	d90a      	bls.n	800c0ce <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800c0b8:	2600      	movs	r6, #0
 800c0ba:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800c0be:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800c0c2:	2110      	movs	r1, #16
 800c0c4:	4410      	add	r0, r2
 800c0c6:	f7ff fd89 	bl	800bbdc <memset.constprop.0.isra.0>
 800c0ca:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c0ce:	2344      	movs	r3, #68	; 0x44
 800c0d0:	435c      	muls	r4, r3
 800c0d2:	1915      	adds	r5, r2, r4
 800c0d4:	68d3      	ldr	r3, [r2, #12]
 800c0d6:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800c0da:	1a5b      	subs	r3, r3, r1
 800c0dc:	f242 7110 	movw	r1, #10000	; 0x2710
 800c0e0:	428b      	cmp	r3, r1
 800c0e2:	d90a      	bls.n	800c0fa <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800c0e4:	2600      	movs	r6, #0
 800c0e6:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800c0ea:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800c0ee:	2110      	movs	r1, #16
 800c0f0:	1910      	adds	r0, r2, r4
 800c0f2:	f7ff fd73 	bl	800bbdc <memset.constprop.0.isra.0>
 800c0f6:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c0fa:	f502 508c 	add.w	r0, r2, #4480	; 0x1180
 800c0fe:	4611      	mov	r1, r2
 800c100:	3008      	adds	r0, #8
 800c102:	2300      	movs	r3, #0
 800c104:	f891 4555 	ldrb.w	r4, [r1, #1365]	; 0x555
 800c108:	3144      	adds	r1, #68	; 0x44
 800c10a:	4281      	cmp	r1, r0
 800c10c:	ea43 0304 	orr.w	r3, r3, r4
 800c110:	d1f8      	bne.n	800c104 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x68>
 800c112:	b923      	cbnz	r3, 800c11e <E131Bridge::CheckMergeTimeouts(unsigned int)+0x82>
 800c114:	2101      	movs	r1, #1
 800c116:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800c11a:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800c11e:	bd70      	pop	{r4, r5, r6, pc}

0800c120 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800c120:	2244      	movs	r2, #68	; 0x44
 800c122:	fb02 0101 	mla	r1, r2, r1, r0
 800c126:	68c3      	ldr	r3, [r0, #12]
 800c128:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800c12c:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800c130:	b510      	push	{r4, lr}
 800c132:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800c136:	1a9a      	subs	r2, r3, r2
 800c138:	b184      	cbz	r4, 800c15c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800c13a:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800c13e:	1a5b      	subs	r3, r3, r1
 800c140:	b128      	cbz	r0, 800c14e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800c142:	f242 700f 	movw	r0, #9999	; 0x270f
 800c146:	4283      	cmp	r3, r0
 800c148:	d90d      	bls.n	800c166 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800c14a:	4282      	cmp	r2, r0
 800c14c:	e002      	b.n	800c154 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800c14e:	f242 7010 	movw	r0, #10000	; 0x2710
 800c152:	4283      	cmp	r3, r0
 800c154:	bf94      	ite	ls
 800c156:	2000      	movls	r0, #0
 800c158:	2001      	movhi	r0, #1
 800c15a:	bd10      	pop	{r4, pc}
 800c15c:	2800      	cmp	r0, #0
 800c15e:	d0fc      	beq.n	800c15a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800c160:	f242 7010 	movw	r0, #10000	; 0x2710
 800c164:	e7f1      	b.n	800c14a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800c166:	2000      	movs	r0, #0
 800c168:	e7f7      	b.n	800c15a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800c16a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800c16a:	684a      	ldr	r2, [r1, #4]
 800c16c:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800c16e:	429a      	cmp	r2, r3
 800c170:	b510      	push	{r4, lr}
 800c172:	d10d      	bne.n	800c190 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800c174:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800c178:	3107      	adds	r1, #7
 800c17a:	30a1      	adds	r0, #161	; 0xa1
 800c17c:	4283      	cmp	r3, r0
 800c17e:	d101      	bne.n	800c184 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800c180:	2001      	movs	r0, #1
 800c182:	bd10      	pop	{r4, pc}
 800c184:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c188:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c18c:	4294      	cmp	r4, r2
 800c18e:	d0f5      	beq.n	800c17c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800c190:	2000      	movs	r0, #0
 800c192:	e7f6      	b.n	800c182 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>

0800c194 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800c194:	2301      	movs	r3, #1
 800c196:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c19a:	4604      	mov	r4, r0
 800c19c:	4690      	mov	r8, r2
 800c19e:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c1a2:	460f      	mov	r7, r1
 800c1a4:	2900      	cmp	r1, #0
 800c1a6:	d044      	beq.n	800c232 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c1a8:	2a00      	cmp	r2, #0
 800c1aa:	d042      	beq.n	800c232 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c1ac:	2600      	movs	r6, #0
 800c1ae:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800c1b2:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800c1b6:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c1ba:	4632      	mov	r2, r6
 800c1bc:	4637      	mov	r7, r6
 800c1be:	f240 6904 	movw	r9, #1540	; 0x604
 800c1c2:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800c1c6:	f1b8 0f00 	cmp.w	r8, #0
 800c1ca:	d018      	beq.n	800c1fe <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800c1cc:	2110      	movs	r1, #16
 800c1ce:	4628      	mov	r0, r5
 800c1d0:	f845 7c04 	str.w	r7, [r5, #-4]
 800c1d4:	f7ff fd02 	bl	800bbdc <memset.constprop.0.isra.0>
 800c1d8:	2110      	movs	r1, #16
 800c1da:	f105 001c 	add.w	r0, r5, #28
 800c1de:	61af      	str	r7, [r5, #24]
 800c1e0:	f7ff fcfc 	bl	800bbdc <memset.constprop.0.isra.0>
 800c1e4:	f7ff fd0c 	bl	800bc00 <lightset::Data::Get()>
 800c1e8:	fb09 0006 	mla	r0, r9, r6, r0
 800c1ec:	4642      	mov	r2, r8
 800c1ee:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800c1f2:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800c1f6:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800c1fa:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800c1fe:	3601      	adds	r6, #1
 800c200:	2e42      	cmp	r6, #66	; 0x42
 800c202:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c206:	d1dc      	bne.n	800c1c2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800c208:	b12a      	cbz	r2, 800c216 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c20a:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800c20e:	2901      	cmp	r1, #1
 800c210:	d04a      	beq.n	800c2a8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800c212:	2902      	cmp	r1, #2
 800c214:	d04d      	beq.n	800c2b2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800c216:	4b29      	ldr	r3, [pc, #164]	; (800c2bc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800c218:	2102      	movs	r1, #2
 800c21a:	6818      	ldr	r0, [r3, #0]
 800c21c:	f009 f862 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800c220:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c224:	f023 0302 	bic.w	r3, r3, #2
 800c228:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c22c:	b003      	add	sp, #12
 800c22e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c232:	2600      	movs	r6, #0
 800c234:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800c238:	4632      	mov	r2, r6
 800c23a:	f240 6b04 	movw	fp, #1540	; 0x604
 800c23e:	46b1      	mov	r9, r6
 800c240:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800c244:	f1ba 0f00 	cmp.w	sl, #0
 800c248:	d028      	beq.n	800c29c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c24a:	b15f      	cbz	r7, 800c264 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c24c:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800c250:	b143      	cbz	r3, 800c264 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c252:	f845 9c20 	str.w	r9, [r5, #-32]
 800c256:	2110      	movs	r1, #16
 800c258:	f1a5 001c 	sub.w	r0, r5, #28
 800c25c:	f7ff fcbe 	bl	800bbdc <memset.constprop.0.isra.0>
 800c260:	f885 9019 	strb.w	r9, [r5, #25]
 800c264:	f1b8 0f00 	cmp.w	r8, #0
 800c268:	d00a      	beq.n	800c280 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c26a:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c26e:	b13b      	cbz	r3, 800c280 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c270:	f845 9c04 	str.w	r9, [r5, #-4]
 800c274:	2110      	movs	r1, #16
 800c276:	4628      	mov	r0, r5
 800c278:	f7ff fcb0 	bl	800bbdc <memset.constprop.0.isra.0>
 800c27c:	f885 9019 	strb.w	r9, [r5, #25]
 800c280:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c284:	b953      	cbnz	r3, 800c29c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c286:	9301      	str	r3, [sp, #4]
 800c288:	f7ff fcba 	bl	800bc00 <lightset::Data::Get()>
 800c28c:	fb0b 0006 	mla	r0, fp, r6, r0
 800c290:	9b01      	ldr	r3, [sp, #4]
 800c292:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800c296:	4652      	mov	r2, sl
 800c298:	762b      	strb	r3, [r5, #24]
 800c29a:	76ab      	strb	r3, [r5, #26]
 800c29c:	3601      	adds	r6, #1
 800c29e:	2e42      	cmp	r6, #66	; 0x42
 800c2a0:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c2a4:	d1cc      	bne.n	800c240 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800c2a6:	e7af      	b.n	800c208 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800c2a8:	6860      	ldr	r0, [r4, #4]
 800c2aa:	6803      	ldr	r3, [r0, #0]
 800c2ac:	695b      	ldr	r3, [r3, #20]
 800c2ae:	4798      	blx	r3
 800c2b0:	e7b1      	b.n	800c216 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c2b2:	6860      	ldr	r0, [r4, #4]
 800c2b4:	6803      	ldr	r3, [r0, #0]
 800c2b6:	699b      	ldr	r3, [r3, #24]
 800c2b8:	4798      	blx	r3
 800c2ba:	e7ac      	b.n	800c216 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c2bc:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800c2c0 <E131Bridge::HandleDmx()>:
 800c2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2c4:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800c2c8:	b085      	sub	sp, #20
 800c2ca:	ba7f      	rev16	r7, r7
 800c2cc:	b2bf      	uxth	r7, r7
 800c2ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c2d2:	4604      	mov	r4, r0
 800c2d4:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800c2d8:	3f01      	subs	r7, #1
 800c2da:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c2de:	9301      	str	r3, [sp, #4]
 800c2e0:	2600      	movs	r6, #0
 800c2e2:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800c2e6:	b353      	cbz	r3, 800c33e <E131Bridge::HandleDmx()+0x7e>
 800c2e8:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800c2ec:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800c2f0:	ba5b      	rev16	r3, r3
 800c2f2:	b29b      	uxth	r3, r3
 800c2f4:	429a      	cmp	r2, r3
 800c2f6:	d122      	bne.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c2f8:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c2fc:	9302      	str	r3, [sp, #8]
 800c2fe:	f1a5 0108 	sub.w	r1, r5, #8
 800c302:	4620      	mov	r0, r4
 800c304:	f7ff ff31 	bl	800c16a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c308:	f105 0114 	add.w	r1, r5, #20
 800c30c:	4682      	mov	sl, r0
 800c30e:	4620      	mov	r0, r4
 800c310:	f7ff ff2b 	bl	800c16a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c314:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800c318:	4680      	mov	r8, r0
 800c31a:	f1ba 0f00 	cmp.w	sl, #0
 800c31e:	d01a      	beq.n	800c356 <E131Bridge::HandleDmx()+0x96>
 800c320:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c324:	7c2a      	ldrb	r2, [r5, #16]
 800c326:	742b      	strb	r3, [r5, #16]
 800c328:	3313      	adds	r3, #19
 800c32a:	1a9b      	subs	r3, r3, r2
 800c32c:	b2db      	uxtb	r3, r3
 800c32e:	2b13      	cmp	r3, #19
 800c330:	d905      	bls.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c332:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800c336:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c33a:	2a00      	cmp	r2, #0
 800c33c:	da14      	bge.n	800c368 <E131Bridge::HandleDmx()+0xa8>
 800c33e:	9b01      	ldr	r3, [sp, #4]
 800c340:	3601      	adds	r6, #1
 800c342:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800c346:	2e42      	cmp	r6, #66	; 0x42
 800c348:	9301      	str	r3, [sp, #4]
 800c34a:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c34e:	d1c8      	bne.n	800c2e2 <E131Bridge::HandleDmx()+0x22>
 800c350:	b005      	add	sp, #20
 800c352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c356:	2800      	cmp	r0, #0
 800c358:	d0eb      	beq.n	800c332 <E131Bridge::HandleDmx()+0x72>
 800c35a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c35e:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800c362:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c366:	e7df      	b.n	800c328 <E131Bridge::HandleDmx()+0x68>
 800c368:	065a      	lsls	r2, r3, #25
 800c36a:	d50b      	bpl.n	800c384 <E131Bridge::HandleDmx()+0xc4>
 800c36c:	f1ba 0f00 	cmp.w	sl, #0
 800c370:	d102      	bne.n	800c378 <E131Bridge::HandleDmx()+0xb8>
 800c372:	f1b8 0f00 	cmp.w	r8, #0
 800c376:	d0e2      	beq.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c378:	4642      	mov	r2, r8
 800c37a:	4651      	mov	r1, sl
 800c37c:	4620      	mov	r0, r4
 800c37e:	f7ff ff09 	bl	800c194 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c382:	e7dc      	b.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c384:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c388:	b133      	cbz	r3, 800c398 <E131Bridge::HandleDmx()+0xd8>
 800c38a:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800c38e:	b91b      	cbnz	r3, 800c398 <E131Bridge::HandleDmx()+0xd8>
 800c390:	4631      	mov	r1, r6
 800c392:	4620      	mov	r0, r4
 800c394:	f7ff fe82 	bl	800c09c <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800c398:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800c39c:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800c3a0:	4293      	cmp	r3, r2
 800c3a2:	d259      	bcs.n	800c458 <E131Bridge::HandleDmx()+0x198>
 800c3a4:	4631      	mov	r1, r6
 800c3a6:	4620      	mov	r0, r4
 800c3a8:	9303      	str	r3, [sp, #12]
 800c3aa:	f7ff feb9 	bl	800c120 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800c3ae:	2800      	cmp	r0, #0
 800c3b0:	d0c5      	beq.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c3b2:	9b03      	ldr	r3, [sp, #12]
 800c3b4:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800c3b8:	9b02      	ldr	r3, [sp, #8]
 800c3ba:	2b00      	cmp	r3, #0
 800c3bc:	d154      	bne.n	800c468 <E131Bridge::HandleDmx()+0x1a8>
 800c3be:	f1bb 0f00 	cmp.w	fp, #0
 800c3c2:	d15c      	bne.n	800c47e <E131Bridge::HandleDmx()+0x1be>
 800c3c4:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c3c6:	f845 3c04 	str.w	r3, [r5, #-4]
 800c3ca:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c3ce:	742b      	strb	r3, [r5, #16]
 800c3d0:	2210      	movs	r2, #16
 800c3d2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c3d6:	4628      	mov	r0, r5
 800c3d8:	f7ff fc08 	bl	800bbec <memcpy.isra.0>
 800c3dc:	68e3      	ldr	r3, [r4, #12]
 800c3de:	f845 3c08 	str.w	r3, [r5, #-8]
 800c3e2:	463a      	mov	r2, r7
 800c3e4:	4649      	mov	r1, r9
 800c3e6:	4630      	mov	r0, r6
 800c3e8:	f7ff fc16 	bl	800bc18 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800c3ec:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c3f0:	069b      	lsls	r3, r3, #26
 800c3f2:	f100 80aa 	bmi.w	800c54a <E131Bridge::HandleDmx()+0x28a>
 800c3f6:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800c3fa:	b29a      	uxth	r2, r3
 800c3fc:	2a00      	cmp	r2, #0
 800c3fe:	f000 80a8 	beq.w	800c552 <E131Bridge::HandleDmx()+0x292>
 800c402:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800c406:	2a00      	cmp	r2, #0
 800c408:	f040 80a3 	bne.w	800c552 <E131Bridge::HandleDmx()+0x292>
 800c40c:	ba5b      	rev16	r3, r3
 800c40e:	b29b      	uxth	r3, r3
 800c410:	f1ba 0f00 	cmp.w	sl, #0
 800c414:	f040 8096 	bne.w	800c544 <E131Bridge::HandleDmx()+0x284>
 800c418:	f1b8 0f00 	cmp.w	r8, #0
 800c41c:	f040 8092 	bne.w	800c544 <E131Bridge::HandleDmx()+0x284>
 800c420:	69aa      	ldr	r2, [r5, #24]
 800c422:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800c426:	3a00      	subs	r2, #0
 800c428:	bf18      	it	ne
 800c42a:	2201      	movne	r2, #1
 800c42c:	3900      	subs	r1, #0
 800c42e:	bf18      	it	ne
 800c430:	2101      	movne	r1, #1
 800c432:	4620      	mov	r0, r4
 800c434:	f7ff fd66 	bl	800bf04 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800c438:	f240 1301 	movw	r3, #257	; 0x101
 800c43c:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800c440:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800c444:	2b00      	cmp	r3, #0
 800c446:	f040 8089 	bne.w	800c55c <E131Bridge::HandleDmx()+0x29c>
 800c44a:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c44e:	f043 0302 	orr.w	r3, r3, #2
 800c452:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c456:	e772      	b.n	800c33e <E131Bridge::HandleDmx()+0x7e>
 800c458:	d9ae      	bls.n	800c3b8 <E131Bridge::HandleDmx()+0xf8>
 800c45a:	2200      	movs	r2, #0
 800c45c:	f845 2c04 	str.w	r2, [r5, #-4]
 800c460:	61aa      	str	r2, [r5, #24]
 800c462:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800c466:	e7a5      	b.n	800c3b4 <E131Bridge::HandleDmx()+0xf4>
 800c468:	f1ba 0f00 	cmp.w	sl, #0
 800c46c:	f000 809a 	beq.w	800c5a4 <E131Bridge::HandleDmx()+0x2e4>
 800c470:	f1bb 0f00 	cmp.w	fp, #0
 800c474:	d159      	bne.n	800c52a <E131Bridge::HandleDmx()+0x26a>
 800c476:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c47a:	742b      	strb	r3, [r5, #16]
 800c47c:	e7ae      	b.n	800c3dc <E131Bridge::HandleDmx()+0x11c>
 800c47e:	f1b8 0f00 	cmp.w	r8, #0
 800c482:	d038      	beq.n	800c4f6 <E131Bridge::HandleDmx()+0x236>
 800c484:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c488:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c48c:	68e3      	ldr	r3, [r4, #12]
 800c48e:	616b      	str	r3, [r5, #20]
 800c490:	f7ff fbb6 	bl	800bc00 <lightset::Data::Get()>
 800c494:	9b01      	ldr	r3, [sp, #4]
 800c496:	4683      	mov	fp, r0
 800c498:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800c49c:	463a      	mov	r2, r7
 800c49e:	4649      	mov	r1, r9
 800c4a0:	4458      	add	r0, fp
 800c4a2:	f7ff fba3 	bl	800bbec <memcpy.isra.0>
 800c4a6:	f240 6304 	movw	r3, #1540	; 0x604
 800c4aa:	fb03 b306 	mla	r3, r3, r6, fp
 800c4ae:	463a      	mov	r2, r7
 800c4b0:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800c4b4:	9b01      	ldr	r3, [sp, #4]
 800c4b6:	4649      	mov	r1, r9
 800c4b8:	eb0b 0003 	add.w	r0, fp, r3
 800c4bc:	f7ff fb96 	bl	800bbec <memcpy.isra.0>
 800c4c0:	e794      	b.n	800c3ec <E131Bridge::HandleDmx()+0x12c>
 800c4c2:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c4c4:	61ab      	str	r3, [r5, #24]
 800c4c6:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c4ca:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c4ce:	2210      	movs	r2, #16
 800c4d0:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c4d4:	f105 001c 	add.w	r0, r5, #28
 800c4d8:	f7ff fb88 	bl	800bbec <memcpy.isra.0>
 800c4dc:	68e3      	ldr	r3, [r4, #12]
 800c4de:	616b      	str	r3, [r5, #20]
 800c4e0:	4631      	mov	r1, r6
 800c4e2:	4620      	mov	r0, r4
 800c4e4:	f7ff fdcb 	bl	800c07e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c4e8:	463a      	mov	r2, r7
 800c4ea:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c4ec:	4649      	mov	r1, r9
 800c4ee:	4630      	mov	r0, r6
 800c4f0:	f7ff fbd9 	bl	800bca6 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c4f4:	e77a      	b.n	800c3ec <E131Bridge::HandleDmx()+0x12c>
 800c4f6:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c4f8:	f845 3c04 	str.w	r3, [r5, #-4]
 800c4fc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c500:	742b      	strb	r3, [r5, #16]
 800c502:	2210      	movs	r2, #16
 800c504:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c508:	4628      	mov	r0, r5
 800c50a:	f7ff fb6f 	bl	800bbec <memcpy.isra.0>
 800c50e:	68e3      	ldr	r3, [r4, #12]
 800c510:	f845 3c08 	str.w	r3, [r5, #-8]
 800c514:	4631      	mov	r1, r6
 800c516:	4620      	mov	r0, r4
 800c518:	f7ff fdb1 	bl	800c07e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c51c:	463a      	mov	r2, r7
 800c51e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c520:	4649      	mov	r1, r9
 800c522:	4630      	mov	r0, r6
 800c524:	f7ff fb96 	bl	800bc54 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c528:	e760      	b.n	800c3ec <E131Bridge::HandleDmx()+0x12c>
 800c52a:	f1b8 0f00 	cmp.w	r8, #0
 800c52e:	d103      	bne.n	800c538 <E131Bridge::HandleDmx()+0x278>
 800c530:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c534:	742b      	strb	r3, [r5, #16]
 800c536:	e7ea      	b.n	800c50e <E131Bridge::HandleDmx()+0x24e>
 800c538:	4820      	ldr	r0, [pc, #128]	; (800c5bc <E131Bridge::HandleDmx()+0x2fc>)
 800c53a:	b005      	add	sp, #20
 800c53c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c540:	f7fd bf2c 	b.w	800a39c <printf>
 800c544:	4642      	mov	r2, r8
 800c546:	4651      	mov	r1, sl
 800c548:	e773      	b.n	800c432 <E131Bridge::HandleDmx()+0x172>
 800c54a:	f04f 0300 	mov.w	r3, #0
 800c54e:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800c552:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c556:	2b00      	cmp	r3, #0
 800c558:	f47f af72 	bne.w	800c440 <E131Bridge::HandleDmx()+0x180>
 800c55c:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800c560:	f7ff fb4e 	bl	800bc00 <lightset::Data::Get()>
 800c564:	f8d8 2000 	ldr.w	r2, [r8]
 800c568:	f240 6304 	movw	r3, #1540	; 0x604
 800c56c:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800c570:	9a01      	ldr	r2, [sp, #4]
 800c572:	fb03 0306 	mla	r3, r3, r6, r0
 800c576:	1882      	adds	r2, r0, r2
 800c578:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800c57c:	4631      	mov	r1, r6
 800c57e:	4640      	mov	r0, r8
 800c580:	47d0      	blx	sl
 800c582:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800c586:	2b00      	cmp	r3, #0
 800c588:	f47f af5f 	bne.w	800c44a <E131Bridge::HandleDmx()+0x18a>
 800c58c:	6860      	ldr	r0, [r4, #4]
 800c58e:	6803      	ldr	r3, [r0, #0]
 800c590:	4631      	mov	r1, r6
 800c592:	689b      	ldr	r3, [r3, #8]
 800c594:	4798      	blx	r3
 800c596:	f04f 0301 	mov.w	r3, #1
 800c59a:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800c59e:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800c5a2:	e752      	b.n	800c44a <E131Bridge::HandleDmx()+0x18a>
 800c5a4:	f1bb 0f00 	cmp.w	fp, #0
 800c5a8:	d08b      	beq.n	800c4c2 <E131Bridge::HandleDmx()+0x202>
 800c5aa:	f1b8 0f00 	cmp.w	r8, #0
 800c5ae:	d0c3      	beq.n	800c538 <E131Bridge::HandleDmx()+0x278>
 800c5b0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c5b4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c5b8:	e790      	b.n	800c4dc <E131Bridge::HandleDmx()+0x21c>
 800c5ba:	bf00      	nop
 800c5bc:	08018f17 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, sl, fp, pc}

0800c5c0 <E131Bridge::IsValidRoot()>:
 800c5c0:	b530      	push	{r4, r5, lr}
 800c5c2:	4a0d      	ldr	r2, [pc, #52]	; (800c5f8 <E131Bridge::IsValidRoot()+0x38>)
 800c5c4:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800c5c8:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800c5cc:	4299      	cmp	r1, r3
 800c5ce:	d109      	bne.n	800c5e4 <E131Bridge::IsValidRoot()+0x24>
 800c5d0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800c5d4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800c5d8:	d00c      	beq.n	800c5f4 <E131Bridge::IsValidRoot()+0x34>
 800c5da:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800c5de:	4258      	negs	r0, r3
 800c5e0:	4158      	adcs	r0, r3
 800c5e2:	bd30      	pop	{r4, r5, pc}
 800c5e4:	f812 4b01 	ldrb.w	r4, [r2], #1
 800c5e8:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800c5ec:	42a5      	cmp	r5, r4
 800c5ee:	d0ed      	beq.n	800c5cc <E131Bridge::IsValidRoot()+0xc>
 800c5f0:	2000      	movs	r0, #0
 800c5f2:	e7f6      	b.n	800c5e2 <E131Bridge::IsValidRoot()+0x22>
 800c5f4:	2001      	movs	r0, #1
 800c5f6:	e7f4      	b.n	800c5e2 <E131Bridge::IsValidRoot()+0x22>
 800c5f8:	080190c5 	stmdaeq	r1, {r0, r2, r6, r7, ip, pc}

0800c5fc <E131Bridge::IsValidDataPacket()>:
 800c5fc:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800c600:	2b02      	cmp	r3, #2
 800c602:	d10d      	bne.n	800c620 <E131Bridge::IsValidDataPacket()+0x24>
 800c604:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800c608:	2ba1      	cmp	r3, #161	; 0xa1
 800c60a:	d109      	bne.n	800c620 <E131Bridge::IsValidDataPacket()+0x24>
 800c60c:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800c610:	b933      	cbnz	r3, 800c620 <E131Bridge::IsValidDataPacket()+0x24>
 800c612:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800c616:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800c61a:	4258      	negs	r0, r3
 800c61c:	4158      	adcs	r0, r3
 800c61e:	4770      	bx	lr
 800c620:	2000      	movs	r0, #0
 800c622:	4770      	bx	lr

0800c624 <E131Bridge::Run()>:
 800c624:	b530      	push	{r4, r5, lr}
 800c626:	4601      	mov	r1, r0
 800c628:	b085      	sub	sp, #20
 800c62a:	4604      	mov	r4, r0
 800c62c:	f10d 030e 	add.w	r3, sp, #14
 800c630:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800c634:	9300      	str	r3, [sp, #0]
 800c636:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800c63a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800c63e:	f005 f971 	bl	8011924 <udp_recv>
 800c642:	4b3a      	ldr	r3, [pc, #232]	; (800c72c <E131Bridge::Run()+0x108>)
 800c644:	681d      	ldr	r5, [r3, #0]
 800c646:	60e5      	str	r5, [r4, #12]
 800c648:	2800      	cmp	r0, #0
 800c64a:	d138      	bne.n	800c6be <E131Bridge::Run()+0x9a>
 800c64c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800c650:	b16b      	cbz	r3, 800c66e <E131Bridge::Run()+0x4a>
 800c652:	6923      	ldr	r3, [r4, #16]
 800c654:	1aed      	subs	r5, r5, r3
 800c656:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800c65a:	429d      	cmp	r5, r3
 800c65c:	d928      	bls.n	800c6b0 <E131Bridge::Run()+0x8c>
 800c65e:	6863      	ldr	r3, [r4, #4]
 800c660:	b9eb      	cbnz	r3, 800c69e <E131Bridge::Run()+0x7a>
 800c662:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c666:	f023 0302 	bic.w	r3, r3, #2
 800c66a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c66e:	6963      	ldr	r3, [r4, #20]
 800c670:	b12b      	cbz	r3, 800c67e <E131Bridge::Run()+0x5a>
 800c672:	4620      	mov	r0, r4
 800c674:	f000 f94c 	bl	800c910 <E131Bridge::HandleDmxIn()>
 800c678:	4620      	mov	r0, r4
 800c67a:	f000 f8c7 	bl	800c80c <E131Bridge::SendDiscoveryPacket()>
 800c67e:	7a23      	ldrb	r3, [r4, #8]
 800c680:	b15b      	cbz	r3, 800c69a <E131Bridge::Run()+0x76>
 800c682:	4b2b      	ldr	r3, [pc, #172]	; (800c730 <E131Bridge::Run()+0x10c>)
 800c684:	6818      	ldr	r0, [r3, #0]
 800c686:	6843      	ldr	r3, [r0, #4]
 800c688:	2b04      	cmp	r3, #4
 800c68a:	d006      	beq.n	800c69a <E131Bridge::Run()+0x76>
 800c68c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c690:	2b00      	cmp	r3, #0
 800c692:	d049      	beq.n	800c728 <E131Bridge::Run()+0x104>
 800c694:	2103      	movs	r1, #3
 800c696:	f008 fe25 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800c69a:	b005      	add	sp, #20
 800c69c:	bd30      	pop	{r4, r5, pc}
 800c69e:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800c6a2:	2b00      	cmp	r3, #0
 800c6a4:	d1dd      	bne.n	800c662 <E131Bridge::Run()+0x3e>
 800c6a6:	2201      	movs	r2, #1
 800c6a8:	4611      	mov	r1, r2
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	f7ff fd72 	bl	800c194 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c6b0:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800c6b4:	1a9b      	subs	r3, r3, r2
 800c6b6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c6ba:	d3d8      	bcc.n	800c66e <E131Bridge::Run()+0x4a>
 800c6bc:	e7d1      	b.n	800c662 <E131Bridge::Run()+0x3e>
 800c6be:	4620      	mov	r0, r4
 800c6c0:	f7ff ff7e 	bl	800c5c0 <E131Bridge::IsValidRoot()>
 800c6c4:	2800      	cmp	r0, #0
 800c6c6:	d0e8      	beq.n	800c69a <E131Bridge::Run()+0x76>
 800c6c8:	2300      	movs	r3, #0
 800c6ca:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800c6ce:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c6d2:	6125      	str	r5, [r4, #16]
 800c6d4:	b15b      	cbz	r3, 800c6ee <E131Bridge::Run()+0xca>
 800c6d6:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800c6da:	b943      	cbnz	r3, 800c6ee <E131Bridge::Run()+0xca>
 800c6dc:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800c6e0:	1aad      	subs	r5, r5, r2
 800c6e2:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800c6e6:	4295      	cmp	r5, r2
 800c6e8:	bf88      	it	hi
 800c6ea:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800c6ee:	6863      	ldr	r3, [r4, #4]
 800c6f0:	2b00      	cmp	r3, #0
 800c6f2:	d0bc      	beq.n	800c66e <E131Bridge::Run()+0x4a>
 800c6f4:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800c6f8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800c6fc:	ba1a      	rev	r2, r3
 800c6fe:	d108      	bne.n	800c712 <E131Bridge::Run()+0xee>
 800c700:	4620      	mov	r0, r4
 800c702:	f7ff ff7b 	bl	800c5fc <E131Bridge::IsValidDataPacket()>
 800c706:	2800      	cmp	r0, #0
 800c708:	d0b1      	beq.n	800c66e <E131Bridge::Run()+0x4a>
 800c70a:	4620      	mov	r0, r4
 800c70c:	f7ff fdd8 	bl	800c2c0 <E131Bridge::HandleDmx()>
 800c710:	e7ad      	b.n	800c66e <E131Bridge::Run()+0x4a>
 800c712:	2a08      	cmp	r2, #8
 800c714:	d1ab      	bne.n	800c66e <E131Bridge::Run()+0x4a>
 800c716:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800c71a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c71e:	d1a6      	bne.n	800c66e <E131Bridge::Run()+0x4a>
 800c720:	4620      	mov	r0, r4
 800c722:	f000 f971 	bl	800ca08 <E131Bridge::HandleSynchronization()>
 800c726:	e7a2      	b.n	800c66e <E131Bridge::Run()+0x4a>
 800c728:	2102      	movs	r1, #2
 800c72a:	e7b4      	b.n	800c696 <E131Bridge::Run()+0x72>
 800c72c:	2000fd94 	mulcs	r0, r4, sp
 800c730:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>

0800c734 <E131Bridge::FillDiscoveryPacket()>:
 800c734:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c738:	b510      	push	{r4, lr}
 800c73a:	333c      	adds	r3, #60	; 0x3c
 800c73c:	005b      	lsls	r3, r3, #1
 800c73e:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800c742:	69c3      	ldr	r3, [r0, #28]
 800c744:	2200      	movs	r2, #0
 800c746:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800c74a:	428b      	cmp	r3, r1
 800c74c:	d14a      	bne.n	800c7e4 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800c74e:	69c3      	ldr	r3, [r0, #28]
 800c750:	492d      	ldr	r1, [pc, #180]	; (800c808 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800c752:	701a      	strb	r2, [r3, #0]
 800c754:	2210      	movs	r2, #16
 800c756:	705a      	strb	r2, [r3, #1]
 800c758:	1cda      	adds	r2, r3, #3
 800c75a:	330f      	adds	r3, #15
 800c75c:	4293      	cmp	r3, r2
 800c75e:	d144      	bne.n	800c7ea <E131Bridge::FillDiscoveryPacket()+0xb6>
 800c760:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c764:	69c3      	ldr	r3, [r0, #28]
 800c766:	3234      	adds	r2, #52	; 0x34
 800c768:	0052      	lsls	r2, r2, #1
 800c76a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c76e:	ba52      	rev16	r2, r2
 800c770:	821a      	strh	r2, [r3, #16]
 800c772:	2200      	movs	r2, #0
 800c774:	749a      	strb	r2, [r3, #18]
 800c776:	74da      	strb	r2, [r3, #19]
 800c778:	751a      	strb	r2, [r3, #20]
 800c77a:	2208      	movs	r2, #8
 800c77c:	f803 2f15 	strb.w	r2, [r3, #21]!
 800c780:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800c784:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800c788:	4291      	cmp	r1, r2
 800c78a:	d133      	bne.n	800c7f4 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800c78c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c790:	69c3      	ldr	r3, [r0, #28]
 800c792:	3229      	adds	r2, #41	; 0x29
 800c794:	0052      	lsls	r2, r2, #1
 800c796:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c79a:	ba52      	rev16	r2, r2
 800c79c:	84da      	strh	r2, [r3, #38]	; 0x26
 800c79e:	2200      	movs	r2, #0
 800c7a0:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800c7a4:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800c7a8:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800c7ac:	2202      	movs	r2, #2
 800c7ae:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800c7b2:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800c7b6:	4291      	cmp	r1, r2
 800c7b8:	d121      	bne.n	800c7fe <E131Bridge::FillDiscoveryPacket()+0xca>
 800c7ba:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c7be:	69c2      	ldr	r2, [r0, #28]
 800c7c0:	3304      	adds	r3, #4
 800c7c2:	005b      	lsls	r3, r3, #1
 800c7c4:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800c7c8:	ba5b      	rev16	r3, r3
 800c7ca:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800c7ce:	2300      	movs	r3, #0
 800c7d0:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800c7d4:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800c7d8:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800c7dc:	2301      	movs	r3, #1
 800c7de:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800c7e2:	bd10      	pop	{r4, pc}
 800c7e4:	f803 2b01 	strb.w	r2, [r3], #1
 800c7e8:	e7af      	b.n	800c74a <E131Bridge::FillDiscoveryPacket()+0x16>
 800c7ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c7ee:	f802 4f01 	strb.w	r4, [r2, #1]!
 800c7f2:	e7b3      	b.n	800c75c <E131Bridge::FillDiscoveryPacket()+0x28>
 800c7f4:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c7f8:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c7fc:	e7c4      	b.n	800c788 <E131Bridge::FillDiscoveryPacket()+0x54>
 800c7fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c802:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c806:	e7d6      	b.n	800c7b6 <E131Bridge::FillDiscoveryPacket()+0x82>
 800c808:	080190c5 	stmdaeq	r1, {r0, r2, r6, r7, ip, pc}

0800c80c <E131Bridge::SendDiscoveryPacket()>:
 800c80c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c80e:	68c2      	ldr	r2, [r0, #12]
 800c810:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800c814:	f242 710f 	movw	r1, #9999	; 0x270f
 800c818:	1ad3      	subs	r3, r2, r3
 800c81a:	428b      	cmp	r3, r1
 800c81c:	4604      	mov	r4, r0
 800c81e:	d924      	bls.n	800c86a <E131Bridge::SendDiscoveryPacket()+0x5e>
 800c820:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c824:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800c828:	b1ab      	cbz	r3, 800c856 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800c82a:	2500      	movs	r5, #0
 800c82c:	462e      	mov	r6, r5
 800c82e:	2300      	movs	r3, #0
 800c830:	f10d 020e 	add.w	r2, sp, #14
 800c834:	4629      	mov	r1, r5
 800c836:	4620      	mov	r0, r4
 800c838:	f7ff fc08 	bl	800c04c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800c83c:	b140      	cbz	r0, 800c850 <E131Bridge::SendDiscoveryPacket()+0x44>
 800c83e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c842:	69e2      	ldr	r2, [r4, #28]
 800c844:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800c848:	ba5b      	rev16	r3, r3
 800c84a:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800c84e:	3601      	adds	r6, #1
 800c850:	3501      	adds	r5, #1
 800c852:	2d42      	cmp	r5, #66	; 0x42
 800c854:	d1eb      	bne.n	800c82e <E131Bridge::SendDiscoveryPacket()+0x22>
 800c856:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800c85a:	9300      	str	r3, [sp, #0]
 800c85c:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800c860:	6a23      	ldr	r3, [r4, #32]
 800c862:	69e1      	ldr	r1, [r4, #28]
 800c864:	7820      	ldrb	r0, [r4, #0]
 800c866:	f005 f8b9 	bl	80119dc <udp_send>
 800c86a:	b004      	add	sp, #16
 800c86c:	bd70      	pop	{r4, r5, r6, pc}

0800c86e <memcpy.isra.0>:
 800c86e:	3801      	subs	r0, #1
 800c870:	440a      	add	r2, r1
 800c872:	4291      	cmp	r1, r2
 800c874:	d100      	bne.n	800c878 <memcpy.isra.0+0xa>
 800c876:	4770      	bx	lr
 800c878:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c87c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c880:	e7f7      	b.n	800c872 <memcpy.isra.0+0x4>
	...

0800c884 <E131Bridge::FillDataPacket()>:
 800c884:	b570      	push	{r4, r5, r6, lr}
 800c886:	4605      	mov	r5, r0
 800c888:	6980      	ldr	r0, [r0, #24]
 800c88a:	4920      	ldr	r1, [pc, #128]	; (800c90c <E131Bridge::FillDataPacket()+0x88>)
 800c88c:	2400      	movs	r4, #0
 800c88e:	2610      	movs	r6, #16
 800c890:	7046      	strb	r6, [r0, #1]
 800c892:	7004      	strb	r4, [r0, #0]
 800c894:	7084      	strb	r4, [r0, #2]
 800c896:	70c4      	strb	r4, [r0, #3]
 800c898:	220c      	movs	r2, #12
 800c89a:	3004      	adds	r0, #4
 800c89c:	f7ff ffe7 	bl	800c86e <memcpy.isra.0>
 800c8a0:	69a8      	ldr	r0, [r5, #24]
 800c8a2:	2304      	movs	r3, #4
 800c8a4:	7543      	strb	r3, [r0, #21]
 800c8a6:	7484      	strb	r4, [r0, #18]
 800c8a8:	74c4      	strb	r4, [r0, #19]
 800c8aa:	7504      	strb	r4, [r0, #20]
 800c8ac:	4632      	mov	r2, r6
 800c8ae:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800c8b2:	3016      	adds	r0, #22
 800c8b4:	f7ff ffdb 	bl	800c86e <memcpy.isra.0>
 800c8b8:	69a8      	ldr	r0, [r5, #24]
 800c8ba:	2602      	movs	r6, #2
 800c8bc:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800c8c0:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800c8c4:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800c8c8:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800c8cc:	2240      	movs	r2, #64	; 0x40
 800c8ce:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800c8d2:	302c      	adds	r0, #44	; 0x2c
 800c8d4:	f7ff ffcb 	bl	800c86e <memcpy.isra.0>
 800c8d8:	69ab      	ldr	r3, [r5, #24]
 800c8da:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800c8de:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800c8e2:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800c8e6:	69ab      	ldr	r3, [r5, #24]
 800c8e8:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800c8ec:	69ab      	ldr	r3, [r5, #24]
 800c8ee:	22a1      	movs	r2, #161	; 0xa1
 800c8f0:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800c8f4:	69ab      	ldr	r3, [r5, #24]
 800c8f6:	2201      	movs	r2, #1
 800c8f8:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800c8fc:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800c900:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800c904:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800c908:	bd70      	pop	{r4, r5, r6, pc}
 800c90a:	bf00      	nop
 800c90c:	080190c5 	stmdaeq	r1, {r0, r2, r6, r7, ip, pc}

0800c910 <E131Bridge::HandleDmxIn()>:
 800c910:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c914:	f500 55b4 	add.w	r5, r0, #5760	; 0x1680
 800c918:	4f3a      	ldr	r7, [pc, #232]	; (800ca04 <E131Bridge::HandleDmxIn()+0xf4>)
 800c91a:	4604      	mov	r4, r0
 800c91c:	351c      	adds	r5, #28
 800c91e:	2600      	movs	r6, #0
 800c920:	78ab      	ldrb	r3, [r5, #2]
 800c922:	2b00      	cmp	r3, #0
 800c924:	d056      	beq.n	800c9d4 <E131Bridge::HandleDmxIn()+0xc4>
 800c926:	6960      	ldr	r0, [r4, #20]
 800c928:	6803      	ldr	r3, [r0, #0]
 800c92a:	4631      	mov	r1, r6
 800c92c:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800c930:	aa02      	add	r2, sp, #8
 800c932:	ab03      	add	r3, sp, #12
 800c934:	47c0      	blx	r8
 800c936:	4601      	mov	r1, r0
 800c938:	2800      	cmp	r0, #0
 800c93a:	d053      	beq.n	800c9e4 <E131Bridge::HandleDmxIn()+0xd4>
 800c93c:	9a02      	ldr	r2, [sp, #8]
 800c93e:	69a0      	ldr	r0, [r4, #24]
 800c940:	b293      	uxth	r3, r2
 800c942:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800c946:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800c94a:	fa9c fc9c 	rev16.w	ip, ip
 800c94e:	f8a0 c010 	strh.w	ip, [r0, #16]
 800c952:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800c956:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800c95a:	fa9c fc9c 	rev16.w	ip, ip
 800c95e:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800c962:	f895 c009 	ldrb.w	ip, [r5, #9]
 800c966:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800c96a:	f895 c008 	ldrb.w	ip, [r5, #8]
 800c96e:	f10c 0001 	add.w	r0, ip, #1
 800c972:	7228      	strb	r0, [r5, #8]
 800c974:	69a0      	ldr	r0, [r4, #24]
 800c976:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800c97a:	f8b5 c000 	ldrh.w	ip, [r5]
 800c97e:	69a0      	ldr	r0, [r4, #24]
 800c980:	330a      	adds	r3, #10
 800c982:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800c986:	fa9c fc9c 	rev16.w	ip, ip
 800c98a:	ba5b      	rev16	r3, r3
 800c98c:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800c990:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800c994:	307d      	adds	r0, #125	; 0x7d
 800c996:	f7ff ff6a 	bl	800c86e <memcpy.isra.0>
 800c99a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c99e:	69a1      	ldr	r1, [r4, #24]
 800c9a0:	7820      	ldrb	r0, [r4, #0]
 800c9a2:	ba53      	rev16	r3, r2
 800c9a4:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800c9a8:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800c9ac:	9300      	str	r3, [sp, #0]
 800c9ae:	327d      	adds	r2, #125	; 0x7d
 800c9b0:	686b      	ldr	r3, [r5, #4]
 800c9b2:	b292      	uxth	r2, r2
 800c9b4:	f005 f812 	bl	80119dc <udp_send>
 800c9b8:	683a      	ldr	r2, [r7, #0]
 800c9ba:	2301      	movs	r3, #1
 800c9bc:	40b3      	lsls	r3, r6
 800c9be:	ea33 0102 	bics.w	r1, r3, r2
 800c9c2:	d007      	beq.n	800c9d4 <E131Bridge::HandleDmxIn()+0xc4>
 800c9c4:	4313      	orrs	r3, r2
 800c9c6:	603b      	str	r3, [r7, #0]
 800c9c8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c9cc:	f043 0301 	orr.w	r3, r3, #1
 800c9d0:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c9d4:	3601      	adds	r6, #1
 800c9d6:	2e42      	cmp	r6, #66	; 0x42
 800c9d8:	f105 050c 	add.w	r5, r5, #12
 800c9dc:	d1a0      	bne.n	800c920 <E131Bridge::HandleDmxIn()+0x10>
 800c9de:	b004      	add	sp, #16
 800c9e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9e4:	9b03      	ldr	r3, [sp, #12]
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	d1f4      	bne.n	800c9d4 <E131Bridge::HandleDmxIn()+0xc4>
 800c9ea:	683b      	ldr	r3, [r7, #0]
 800c9ec:	2201      	movs	r2, #1
 800c9ee:	40b2      	lsls	r2, r6
 800c9f0:	ea23 0302 	bic.w	r3, r3, r2
 800c9f4:	603b      	str	r3, [r7, #0]
 800c9f6:	2b00      	cmp	r3, #0
 800c9f8:	d1ec      	bne.n	800c9d4 <E131Bridge::HandleDmxIn()+0xc4>
 800c9fa:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c9fe:	f023 0301 	bic.w	r3, r3, #1
 800ca02:	e7e5      	b.n	800c9d0 <E131Bridge::HandleDmxIn()+0xc0>
 800ca04:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800ca08 <E131Bridge::HandleSynchronization()>:
 800ca08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca0c:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800ca10:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800ca14:	ba5b      	rev16	r3, r3
 800ca16:	b29b      	uxth	r3, r3
 800ca18:	429a      	cmp	r2, r3
 800ca1a:	4604      	mov	r4, r0
 800ca1c:	d00a      	beq.n	800ca34 <E131Bridge::HandleSynchronization()+0x2c>
 800ca1e:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800ca22:	429a      	cmp	r2, r3
 800ca24:	d006      	beq.n	800ca34 <E131Bridge::HandleSynchronization()+0x2c>
 800ca26:	4b24      	ldr	r3, [pc, #144]	; (800cab8 <E131Bridge::HandleSynchronization()+0xb0>)
 800ca28:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca2c:	6818      	ldr	r0, [r3, #0]
 800ca2e:	2102      	movs	r1, #2
 800ca30:	f008 bc58 	b.w	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800ca34:	68e3      	ldr	r3, [r4, #12]
 800ca36:	4e21      	ldr	r6, [pc, #132]	; (800cabc <E131Bridge::HandleSynchronization()+0xb4>)
 800ca38:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800cac0 <E131Bridge::HandleSynchronization()+0xb8>
 800ca3c:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800ca40:	2500      	movs	r5, #0
 800ca42:	4627      	mov	r7, r4
 800ca44:	46a9      	mov	r9, r5
 800ca46:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800ca4a:	b323      	cbz	r3, 800ca96 <E131Bridge::HandleSynchronization()+0x8e>
 800ca4c:	f8d8 3000 	ldr.w	r3, [r8]
 800ca50:	6860      	ldr	r0, [r4, #4]
 800ca52:	07da      	lsls	r2, r3, #31
 800ca54:	bf5c      	itt	pl
 800ca56:	2301      	movpl	r3, #1
 800ca58:	f8c8 3000 	strpl.w	r3, [r8]
 800ca5c:	6803      	ldr	r3, [r0, #0]
 800ca5e:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800ca62:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800ca66:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800ca6a:	4629      	mov	r1, r5
 800ca6c:	47d0      	blx	sl
 800ca6e:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800ca72:	b93b      	cbnz	r3, 800ca84 <E131Bridge::HandleSynchronization()+0x7c>
 800ca74:	6860      	ldr	r0, [r4, #4]
 800ca76:	6803      	ldr	r3, [r0, #0]
 800ca78:	4629      	mov	r1, r5
 800ca7a:	689b      	ldr	r3, [r3, #8]
 800ca7c:	4798      	blx	r3
 800ca7e:	2301      	movs	r3, #1
 800ca80:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800ca84:	f8d8 3000 	ldr.w	r3, [r8]
 800ca88:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800ca8c:	07db      	lsls	r3, r3, #31
 800ca8e:	bf5c      	itt	pl
 800ca90:	2301      	movpl	r3, #1
 800ca92:	f8c8 3000 	strpl.w	r3, [r8]
 800ca96:	3501      	adds	r5, #1
 800ca98:	2d42      	cmp	r5, #66	; 0x42
 800ca9a:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800ca9e:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800caa2:	d1d0      	bne.n	800ca46 <E131Bridge::HandleSynchronization()+0x3e>
 800caa4:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800caa6:	b120      	cbz	r0, 800cab2 <E131Bridge::HandleSynchronization()+0xaa>
 800caa8:	6803      	ldr	r3, [r0, #0]
 800caaa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800caae:	689b      	ldr	r3, [r3, #8]
 800cab0:	4718      	bx	r3
 800cab2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cab6:	bf00      	nop
 800cab8:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800cabc:	20030000 	andcs	r0, r3, r0
 800cac0:	200006c8 	andcs	r0, r0, r8, asr #13

0800cac4 <E131Bridge::Print()>:
 800cac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cac8:	b08c      	sub	sp, #48	; 0x30
 800caca:	a902      	add	r1, sp, #8
 800cacc:	4604      	mov	r4, r0
 800cace:	2500      	movs	r5, #0
 800cad0:	3024      	adds	r0, #36	; 0x24
 800cad2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cad6:	f001 fe83 	bl	800e7e0 <uuid_unparse>
 800cada:	482c      	ldr	r0, [pc, #176]	; (800cb8c <E131Bridge::Print()+0xc8>)
 800cadc:	f7fd fc5e 	bl	800a39c <printf>
 800cae0:	4b2b      	ldr	r3, [pc, #172]	; (800cb90 <E131Bridge::Print()+0xcc>)
 800cae2:	482c      	ldr	r0, [pc, #176]	; (800cb94 <E131Bridge::Print()+0xd0>)
 800cae4:	7819      	ldrb	r1, [r3, #0]
 800cae6:	785a      	ldrb	r2, [r3, #1]
 800cae8:	f7fd fc58 	bl	800a39c <printf>
 800caec:	482a      	ldr	r0, [pc, #168]	; (800cb98 <E131Bridge::Print()+0xd4>)
 800caee:	a902      	add	r1, sp, #8
 800caf0:	f7fd fc54 	bl	800a39c <printf>
 800caf4:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800caf8:	b303      	cbz	r3, 800cb3c <E131Bridge::Print()+0x78>
 800cafa:	4828      	ldr	r0, [pc, #160]	; (800cb9c <E131Bridge::Print()+0xd8>)
 800cafc:	4e28      	ldr	r6, [pc, #160]	; (800cba0 <E131Bridge::Print()+0xdc>)
 800cafe:	4f29      	ldr	r7, [pc, #164]	; (800cba4 <E131Bridge::Print()+0xe0>)
 800cb00:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800cbb4 <E131Bridge::Print()+0xf0>
 800cb04:	f7fd fc4a 	bl	800a39c <printf>
 800cb08:	2301      	movs	r3, #1
 800cb0a:	f10d 0206 	add.w	r2, sp, #6
 800cb0e:	4629      	mov	r1, r5
 800cb10:	4620      	mov	r0, r4
 800cb12:	f7ff fa9b 	bl	800c04c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cb16:	b170      	cbz	r0, 800cb36 <E131Bridge::Print()+0x72>
 800cb18:	2344      	movs	r3, #68	; 0x44
 800cb1a:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800cb1e:	436b      	muls	r3, r5
 800cb20:	4629      	mov	r1, r5
 800cb22:	58d3      	ldr	r3, [r2, r3]
 800cb24:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cb28:	2b00      	cmp	r3, #0
 800cb2a:	bf0c      	ite	eq
 800cb2c:	4633      	moveq	r3, r6
 800cb2e:	463b      	movne	r3, r7
 800cb30:	4640      	mov	r0, r8
 800cb32:	f7fd fc33 	bl	800a39c <printf>
 800cb36:	3501      	adds	r5, #1
 800cb38:	2d42      	cmp	r5, #66	; 0x42
 800cb3a:	d1e5      	bne.n	800cb08 <E131Bridge::Print()+0x44>
 800cb3c:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800cb40:	b1db      	cbz	r3, 800cb7a <E131Bridge::Print()+0xb6>
 800cb42:	4819      	ldr	r0, [pc, #100]	; (800cba8 <E131Bridge::Print()+0xe4>)
 800cb44:	4f19      	ldr	r7, [pc, #100]	; (800cbac <E131Bridge::Print()+0xe8>)
 800cb46:	f7fd fc29 	bl	800a39c <printf>
 800cb4a:	f504 56b5 	add.w	r6, r4, #5792	; 0x16a0
 800cb4e:	2500      	movs	r5, #0
 800cb50:	3605      	adds	r6, #5
 800cb52:	2300      	movs	r3, #0
 800cb54:	f10d 0206 	add.w	r2, sp, #6
 800cb58:	4629      	mov	r1, r5
 800cb5a:	4620      	mov	r0, r4
 800cb5c:	f7ff fa76 	bl	800c04c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cb60:	b140      	cbz	r0, 800cb74 <E131Bridge::Print()+0xb0>
 800cb62:	230c      	movs	r3, #12
 800cb64:	436b      	muls	r3, r5
 800cb66:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cb6a:	5cf3      	ldrb	r3, [r6, r3]
 800cb6c:	4629      	mov	r1, r5
 800cb6e:	4638      	mov	r0, r7
 800cb70:	f7fd fc14 	bl	800a39c <printf>
 800cb74:	3501      	adds	r5, #1
 800cb76:	2d42      	cmp	r5, #66	; 0x42
 800cb78:	d1eb      	bne.n	800cb52 <E131Bridge::Print()+0x8e>
 800cb7a:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800cb7e:	b113      	cbz	r3, 800cb86 <E131Bridge::Print()+0xc2>
 800cb80:	480b      	ldr	r0, [pc, #44]	; (800cbb0 <E131Bridge::Print()+0xec>)
 800cb82:	f7fd fc0b 	bl	800a39c <printf>
 800cb86:	b00c      	add	sp, #48	; 0x30
 800cb88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb8c:	08018f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp, pc}
 800cb90:	080190d1 	stmdaeq	r1, {r0, r4, r6, r7, ip, pc}
 800cb94:	08018f54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp, pc}
 800cb98:	08018f67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, fp, pc}
 800cb9c:	08018f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, pc}
 800cba0:	08018f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, pc}
 800cba4:	08018f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, pc}
 800cba8:	08018f9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, fp, pc}
 800cbac:	08018fa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, sl, fp, pc}
 800cbb0:	08018fc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, fp, pc}
 800cbb4:	08018f80 	stmdaeq	r1, {r7, r8, r9, sl, fp, pc}

0800cbb8 <memcmp>:
 800cbb8:	4402      	add	r2, r0
 800cbba:	4290      	cmp	r0, r2
 800cbbc:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800cbc0:	d106      	bne.n	800cbd0 <memcmp+0x18>
 800cbc2:	2000      	movs	r0, #0
 800cbc4:	4770      	bx	lr
 800cbc6:	3001      	adds	r0, #1
 800cbc8:	4290      	cmp	r0, r2
 800cbca:	d102      	bne.n	800cbd2 <memcmp+0x1a>
 800cbcc:	2000      	movs	r0, #0
 800cbce:	e006      	b.n	800cbde <memcmp+0x26>
 800cbd0:	b510      	push	{r4, lr}
 800cbd2:	7803      	ldrb	r3, [r0, #0]
 800cbd4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800cbd8:	42a3      	cmp	r3, r4
 800cbda:	d0f4      	beq.n	800cbc6 <memcmp+0xe>
 800cbdc:	1b18      	subs	r0, r3, r4
 800cbde:	bd10      	pop	{r4, pc}

0800cbe0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800cbe0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cbe2:	88c6      	ldrh	r6, [r0, #6]
 800cbe4:	8885      	ldrh	r5, [r0, #4]
 800cbe6:	42ae      	cmp	r6, r5
 800cbe8:	d216      	bcs.n	800cc18 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800cbea:	4604      	mov	r4, r0
 800cbec:	6800      	ldr	r0, [r0, #0]
 800cbee:	1bad      	subs	r5, r5, r6
 800cbf0:	4430      	add	r0, r6
 800cbf2:	7a26      	ldrb	r6, [r4, #8]
 800cbf4:	b923      	cbnz	r3, 800cc00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800cbf6:	b926      	cbnz	r6, 800cc02 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800cbf8:	9200      	str	r2, [sp, #0]
 800cbfa:	460b      	mov	r3, r1
 800cbfc:	4a09      	ldr	r2, [pc, #36]	; (800cc24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800cbfe:	e003      	b.n	800cc08 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800cc00:	b166      	cbz	r6, 800cc1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800cc02:	9200      	str	r2, [sp, #0]
 800cc04:	4a08      	ldr	r2, [pc, #32]	; (800cc28 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800cc06:	460b      	mov	r3, r1
 800cc08:	4629      	mov	r1, r5
 800cc0a:	f7fd fbef 	bl	800a3ec <snprintf>
 800cc0e:	4285      	cmp	r5, r0
 800cc10:	bfa2      	ittt	ge
 800cc12:	88e3      	ldrhge	r3, [r4, #6]
 800cc14:	181b      	addge	r3, r3, r0
 800cc16:	80e3      	strhge	r3, [r4, #6]
 800cc18:	b002      	add	sp, #8
 800cc1a:	bd70      	pop	{r4, r5, r6, pc}
 800cc1c:	9200      	str	r2, [sp, #0]
 800cc1e:	460b      	mov	r3, r1
 800cc20:	4a02      	ldr	r2, [pc, #8]	; (800cc2c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800cc22:	e7f1      	b.n	800cc08 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800cc24:	0801814c 	stmdaeq	r1, {r2, r3, r6, r8, pc}
 800cc28:	08018141 	stmdaeq	r1, {r0, r6, r8, pc}
 800cc2c:	0801814d 	stmdaeq	r1, {r0, r2, r3, r6, r8, pc}

0800cc30 <E131Params::E131Params(E131ParamsStore*)>:
 800cc30:	b510      	push	{r4, lr}
 800cc32:	2219      	movs	r2, #25
 800cc34:	4604      	mov	r4, r0
 800cc36:	f840 1b04 	str.w	r1, [r0], #4
 800cc3a:	2100      	movs	r1, #0
 800cc3c:	f008 fd28 	bl	8015690 <memset>
 800cc40:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800cc44:	f8c4 301f 	str.w	r3, [r4, #31]
 800cc48:	2300      	movs	r3, #0
 800cc4a:	2201      	movs	r2, #1
 800cc4c:	7323      	strb	r3, [r4, #12]
 800cc4e:	77a3      	strb	r3, [r4, #30]
 800cc50:	4b08      	ldr	r3, [pc, #32]	; (800cc74 <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800cc52:	72e2      	strb	r2, [r4, #11]
 800cc54:	2155      	movs	r1, #85	; 0x55
 800cc56:	2202      	movs	r2, #2
 800cc58:	f8a4 200d 	strh.w	r2, [r4, #13]
 800cc5c:	7761      	strb	r1, [r4, #29]
 800cc5e:	2203      	movs	r2, #3
 800cc60:	6819      	ldr	r1, [r3, #0]
 800cc62:	f8a4 200f 	strh.w	r2, [r4, #15]
 800cc66:	2204      	movs	r2, #4
 800cc68:	f8a4 2011 	strh.w	r2, [r4, #17]
 800cc6c:	b901      	cbnz	r1, 800cc70 <E131Params::E131Params(E131ParamsStore*)+0x40>
 800cc6e:	601a      	str	r2, [r3, #0]
 800cc70:	4620      	mov	r0, r4
 800cc72:	bd10      	pop	{r4, pc}
 800cc74:	200006d4 	ldrdcs	r0, [r0], -r4

0800cc78 <E131Params::Load()>:
 800cc78:	b508      	push	{r3, lr}
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	4601      	mov	r1, r0
 800cc7e:	6043      	str	r3, [r0, #4]
 800cc80:	6800      	ldr	r0, [r0, #0]
 800cc82:	b120      	cbz	r0, 800cc8e <E131Params::Load()+0x16>
 800cc84:	6803      	ldr	r3, [r0, #0]
 800cc86:	3104      	adds	r1, #4
 800cc88:	68db      	ldr	r3, [r3, #12]
 800cc8a:	4798      	blx	r3
 800cc8c:	2001      	movs	r0, #1
 800cc8e:	bd08      	pop	{r3, pc}

0800cc90 <E131Params::Load(char const*, unsigned int)>:
 800cc90:	6803      	ldr	r3, [r0, #0]
 800cc92:	b1d3      	cbz	r3, 800ccca <E131Params::Load(char const*, unsigned int)+0x3a>
 800cc94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc96:	2300      	movs	r3, #0
 800cc98:	6043      	str	r3, [r0, #4]
 800cc9a:	4604      	mov	r4, r0
 800cc9c:	460d      	mov	r5, r1
 800cc9e:	4616      	mov	r6, r2
 800cca0:	490a      	ldr	r1, [pc, #40]	; (800cccc <E131Params::Load(char const*, unsigned int)+0x3c>)
 800cca2:	4602      	mov	r2, r0
 800cca4:	4668      	mov	r0, sp
 800cca6:	f007 fe4b 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ccaa:	4632      	mov	r2, r6
 800ccac:	4629      	mov	r1, r5
 800ccae:	4668      	mov	r0, sp
 800ccb0:	f007 fe4a 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 800ccb4:	4621      	mov	r1, r4
 800ccb6:	f851 0b04 	ldr.w	r0, [r1], #4
 800ccba:	6803      	ldr	r3, [r0, #0]
 800ccbc:	689b      	ldr	r3, [r3, #8]
 800ccbe:	4798      	blx	r3
 800ccc0:	4668      	mov	r0, sp
 800ccc2:	f007 fe40 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 800ccc6:	b002      	add	sp, #8
 800ccc8:	bd70      	pop	{r4, r5, r6, pc}
 800ccca:	4770      	bx	lr
 800cccc:	0800cf69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, lr, pc}

0800ccd0 <E131Params::callbackFunction(char const*)>:
 800ccd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccd4:	460e      	mov	r6, r1
 800ccd6:	b087      	sub	sp, #28
 800ccd8:	2708      	movs	r7, #8
 800ccda:	4604      	mov	r4, r0
 800ccdc:	4998      	ldr	r1, [pc, #608]	; (800cf40 <E131Params::callbackFunction(char const*)+0x270>)
 800ccde:	9701      	str	r7, [sp, #4]
 800cce0:	ab01      	add	r3, sp, #4
 800cce2:	eb0d 0207 	add.w	r2, sp, r7
 800cce6:	4630      	mov	r0, r6
 800cce8:	f007 fe62 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ccec:	bb68      	cbnz	r0, 800cd4a <E131Params::callbackFunction(char const*)+0x7a>
 800ccee:	4995      	ldr	r1, [pc, #596]	; (800cf44 <E131Params::callbackFunction(char const*)+0x274>)
 800ccf0:	2204      	movs	r2, #4
 800ccf2:	eb0d 0007 	add.w	r0, sp, r7
 800ccf6:	f7ff ff5f 	bl	800cbb8 <memcmp>
 800ccfa:	6865      	ldr	r5, [r4, #4]
 800ccfc:	b1a0      	cbz	r0, 800cd28 <E131Params::callbackFunction(char const*)+0x58>
 800ccfe:	4992      	ldr	r1, [pc, #584]	; (800cf48 <E131Params::callbackFunction(char const*)+0x278>)
 800cd00:	2203      	movs	r2, #3
 800cd02:	eb0d 0007 	add.w	r0, sp, r7
 800cd06:	f7ff ff57 	bl	800cbb8 <memcmp>
 800cd0a:	b1b0      	cbz	r0, 800cd3a <E131Params::callbackFunction(char const*)+0x6a>
 800cd0c:	498f      	ldr	r1, [pc, #572]	; (800cf4c <E131Params::callbackFunction(char const*)+0x27c>)
 800cd0e:	2202      	movs	r2, #2
 800cd10:	eb0d 0007 	add.w	r0, sp, r7
 800cd14:	f7ff ff50 	bl	800cbb8 <memcmp>
 800cd18:	b198      	cbz	r0, 800cd42 <E131Params::callbackFunction(char const*)+0x72>
 800cd1a:	498d      	ldr	r1, [pc, #564]	; (800cf50 <E131Params::callbackFunction(char const*)+0x280>)
 800cd1c:	463a      	mov	r2, r7
 800cd1e:	eb0d 0007 	add.w	r0, sp, r7
 800cd22:	f7ff ff49 	bl	800cbb8 <memcmp>
 800cd26:	b170      	cbz	r0, 800cd46 <E131Params::callbackFunction(char const*)+0x76>
 800cd28:	f025 0501 	bic.w	r5, r5, #1
 800cd2c:	2300      	movs	r3, #0
 800cd2e:	6065      	str	r5, [r4, #4]
 800cd30:	f8a4 3009 	strh.w	r3, [r4, #9]
 800cd34:	b007      	add	sp, #28
 800cd36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd3a:	2301      	movs	r3, #1
 800cd3c:	f045 0501 	orr.w	r5, r5, #1
 800cd40:	e7f5      	b.n	800cd2e <E131Params::callbackFunction(char const*)+0x5e>
 800cd42:	2302      	movs	r3, #2
 800cd44:	e7fa      	b.n	800cd3c <E131Params::callbackFunction(char const*)+0x6c>
 800cd46:	2303      	movs	r3, #3
 800cd48:	e7f8      	b.n	800cd3c <E131Params::callbackFunction(char const*)+0x6c>
 800cd4a:	f8df 920c 	ldr.w	r9, [pc, #524]	; 800cf58 <E131Params::callbackFunction(char const*)+0x288>
 800cd4e:	f8df 820c 	ldr.w	r8, [pc, #524]	; 800cf5c <E131Params::callbackFunction(char const*)+0x28c>
 800cd52:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800cf60 <E131Params::callbackFunction(char const*)+0x290>
 800cd56:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800cf64 <E131Params::callbackFunction(char const*)+0x294>
 800cd5a:	2500      	movs	r5, #0
 800cd5c:	f10d 0202 	add.w	r2, sp, #2
 800cd60:	4649      	mov	r1, r9
 800cd62:	4630      	mov	r0, r6
 800cd64:	f007 fed9 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cd68:	b9d8      	cbnz	r0, 800cda2 <E131Params::callbackFunction(char const*)+0xd2>
 800cd6a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800cd6e:	6861      	ldr	r1, [r4, #4]
 800cd70:	1e42      	subs	r2, r0, #1
 800cd72:	b292      	uxth	r2, r2
 800cd74:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800cd78:	2310      	movs	r3, #16
 800cd7a:	42b2      	cmp	r2, r6
 800cd7c:	fa03 f305 	lsl.w	r3, r3, r5
 800cd80:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800cd84:	d907      	bls.n	800cd96 <E131Params::callbackFunction(char const*)+0xc6>
 800cd86:	4422      	add	r2, r4
 800cd88:	3501      	adds	r5, #1
 800cd8a:	ea21 0103 	bic.w	r1, r1, r3
 800cd8e:	f8a2 500b 	strh.w	r5, [r2, #11]
 800cd92:	6061      	str	r1, [r4, #4]
 800cd94:	e7ce      	b.n	800cd34 <E131Params::callbackFunction(char const*)+0x64>
 800cd96:	4422      	add	r2, r4
 800cd98:	430b      	orrs	r3, r1
 800cd9a:	f8a2 000b 	strh.w	r0, [r2, #11]
 800cd9e:	6063      	str	r3, [r4, #4]
 800cda0:	e7c8      	b.n	800cd34 <E131Params::callbackFunction(char const*)+0x64>
 800cda2:	2712      	movs	r7, #18
 800cda4:	2303      	movs	r3, #3
 800cda6:	436f      	muls	r7, r5
 800cda8:	9301      	str	r3, [sp, #4]
 800cdaa:	aa02      	add	r2, sp, #8
 800cdac:	ab01      	add	r3, sp, #4
 800cdae:	eb0a 0107 	add.w	r1, sl, r7
 800cdb2:	4630      	mov	r0, r6
 800cdb4:	f007 fdfc 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cdb8:	bb08      	cbnz	r0, 800cdfe <E131Params::callbackFunction(char const*)+0x12e>
 800cdba:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800cdbe:	6862      	ldr	r2, [r4, #4]
 800cdc0:	f041 0120 	orr.w	r1, r1, #32
 800cdc4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cdc8:	296c      	cmp	r1, #108	; 0x6c
 800cdca:	fa03 f305 	lsl.w	r3, r3, r5
 800cdce:	4425      	add	r5, r4
 800cdd0:	d10f      	bne.n	800cdf2 <E131Params::callbackFunction(char const*)+0x122>
 800cdd2:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800cdd6:	f041 0120 	orr.w	r1, r1, #32
 800cdda:	2974      	cmp	r1, #116	; 0x74
 800cddc:	d109      	bne.n	800cdf2 <E131Params::callbackFunction(char const*)+0x122>
 800cdde:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800cde2:	f041 0120 	orr.w	r1, r1, #32
 800cde6:	2970      	cmp	r1, #112	; 0x70
 800cde8:	d103      	bne.n	800cdf2 <E131Params::callbackFunction(char const*)+0x122>
 800cdea:	2101      	movs	r1, #1
 800cdec:	7529      	strb	r1, [r5, #20]
 800cdee:	4313      	orrs	r3, r2
 800cdf0:	e7d5      	b.n	800cd9e <E131Params::callbackFunction(char const*)+0xce>
 800cdf2:	2100      	movs	r1, #0
 800cdf4:	ea22 0203 	bic.w	r2, r2, r3
 800cdf8:	7529      	strb	r1, [r5, #20]
 800cdfa:	6062      	str	r2, [r4, #4]
 800cdfc:	e79a      	b.n	800cd34 <E131Params::callbackFunction(char const*)+0x64>
 800cdfe:	2307      	movs	r3, #7
 800ce00:	9301      	str	r3, [sp, #4]
 800ce02:	aa02      	add	r2, sp, #8
 800ce04:	ab01      	add	r3, sp, #4
 800ce06:	eb0b 0107 	add.w	r1, fp, r7
 800ce0a:	4630      	mov	r0, r6
 800ce0c:	f007 fdd0 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ce10:	2800      	cmp	r0, #0
 800ce12:	d15e      	bne.n	800ced2 <E131Params::callbackFunction(char const*)+0x202>
 800ce14:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800ce18:	f043 0320 	orr.w	r3, r3, #32
 800ce1c:	2b69      	cmp	r3, #105	; 0x69
 800ce1e:	d123      	bne.n	800ce68 <E131Params::callbackFunction(char const*)+0x198>
 800ce20:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800ce24:	f043 0320 	orr.w	r3, r3, #32
 800ce28:	2b6e      	cmp	r3, #110	; 0x6e
 800ce2a:	d146      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce2c:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800ce30:	f043 0320 	orr.w	r3, r3, #32
 800ce34:	2b70      	cmp	r3, #112	; 0x70
 800ce36:	d140      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce38:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800ce3c:	f043 0320 	orr.w	r3, r3, #32
 800ce40:	2b75      	cmp	r3, #117	; 0x75
 800ce42:	d13a      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce44:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ce48:	f043 0320 	orr.w	r3, r3, #32
 800ce4c:	3b74      	subs	r3, #116	; 0x74
 800ce4e:	bf18      	it	ne
 800ce50:	2301      	movne	r3, #1
 800ce52:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800ce56:	006d      	lsls	r5, r5, #1
 800ce58:	2103      	movs	r1, #3
 800ce5a:	40a9      	lsls	r1, r5
 800ce5c:	ea22 0201 	bic.w	r2, r2, r1
 800ce60:	bb6b      	cbnz	r3, 800cebe <E131Params::callbackFunction(char const*)+0x1ee>
 800ce62:	f8a4 201d 	strh.w	r2, [r4, #29]
 800ce66:	e765      	b.n	800cd34 <E131Params::callbackFunction(char const*)+0x64>
 800ce68:	2b64      	cmp	r3, #100	; 0x64
 800ce6a:	d126      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce6c:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800ce70:	f043 0320 	orr.w	r3, r3, #32
 800ce74:	2b69      	cmp	r3, #105	; 0x69
 800ce76:	d120      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce78:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800ce7c:	f043 0320 	orr.w	r3, r3, #32
 800ce80:	2b73      	cmp	r3, #115	; 0x73
 800ce82:	d11a      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce84:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800ce88:	f043 0320 	orr.w	r3, r3, #32
 800ce8c:	2b61      	cmp	r3, #97	; 0x61
 800ce8e:	d114      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce90:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ce94:	f043 0320 	orr.w	r3, r3, #32
 800ce98:	2b62      	cmp	r3, #98	; 0x62
 800ce9a:	d10e      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800ce9c:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800cea0:	f043 0320 	orr.w	r3, r3, #32
 800cea4:	2b6c      	cmp	r3, #108	; 0x6c
 800cea6:	d108      	bne.n	800ceba <E131Params::callbackFunction(char const*)+0x1ea>
 800cea8:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800ceac:	f043 0320 	orr.w	r3, r3, #32
 800ceb0:	2b65      	cmp	r3, #101	; 0x65
 800ceb2:	bf14      	ite	ne
 800ceb4:	2301      	movne	r3, #1
 800ceb6:	2302      	moveq	r3, #2
 800ceb8:	e7cb      	b.n	800ce52 <E131Params::callbackFunction(char const*)+0x182>
 800ceba:	2301      	movs	r3, #1
 800cebc:	e7c9      	b.n	800ce52 <E131Params::callbackFunction(char const*)+0x182>
 800cebe:	2b02      	cmp	r3, #2
 800cec0:	bf15      	itete	ne
 800cec2:	2301      	movne	r3, #1
 800cec4:	40ab      	lsleq	r3, r5
 800cec6:	fa03 f505 	lslne.w	r5, r3, r5
 800ceca:	431a      	orreq	r2, r3
 800cecc:	bf18      	it	ne
 800cece:	432a      	orrne	r2, r5
 800ced0:	e7c7      	b.n	800ce62 <E131Params::callbackFunction(char const*)+0x192>
 800ced2:	f10d 0201 	add.w	r2, sp, #1
 800ced6:	4641      	mov	r1, r8
 800ced8:	4630      	mov	r0, r6
 800ceda:	f007 fe66 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cede:	b9a0      	cbnz	r0, 800cf0a <E131Params::callbackFunction(char const*)+0x23a>
 800cee0:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cee4:	6863      	ldr	r3, [r4, #4]
 800cee6:	1e48      	subs	r0, r1, #1
 800cee8:	b2c0      	uxtb	r0, r0
 800ceea:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ceee:	28c7      	cmp	r0, #199	; 0xc7
 800cef0:	fa02 f205 	lsl.w	r2, r2, r5
 800cef4:	4425      	add	r5, r4
 800cef6:	d803      	bhi.n	800cf00 <E131Params::callbackFunction(char const*)+0x230>
 800cef8:	2964      	cmp	r1, #100	; 0x64
 800cefa:	d001      	beq.n	800cf00 <E131Params::callbackFunction(char const*)+0x230>
 800cefc:	77e9      	strb	r1, [r5, #31]
 800cefe:	e776      	b.n	800cdee <E131Params::callbackFunction(char const*)+0x11e>
 800cf00:	2164      	movs	r1, #100	; 0x64
 800cf02:	77e9      	strb	r1, [r5, #31]
 800cf04:	ea23 0302 	bic.w	r3, r3, r2
 800cf08:	e749      	b.n	800cd9e <E131Params::callbackFunction(char const*)+0xce>
 800cf0a:	3501      	adds	r5, #1
 800cf0c:	2d04      	cmp	r5, #4
 800cf0e:	f109 0910 	add.w	r9, r9, #16
 800cf12:	f108 0812 	add.w	r8, r8, #18
 800cf16:	f47f af21 	bne.w	800cd5c <E131Params::callbackFunction(char const*)+0x8c>
 800cf1a:	490e      	ldr	r1, [pc, #56]	; (800cf54 <E131Params::callbackFunction(char const*)+0x284>)
 800cf1c:	f10d 0201 	add.w	r2, sp, #1
 800cf20:	4630      	mov	r0, r6
 800cf22:	f007 fe42 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cf26:	2800      	cmp	r0, #0
 800cf28:	f47f af04 	bne.w	800cd34 <E131Params::callbackFunction(char const*)+0x64>
 800cf2c:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cf30:	6863      	ldr	r3, [r4, #4]
 800cf32:	b112      	cbz	r2, 800cf3a <E131Params::callbackFunction(char const*)+0x26a>
 800cf34:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800cf38:	e731      	b.n	800cd9e <E131Params::callbackFunction(char const*)+0xce>
 800cf3a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800cf3e:	e72e      	b.n	800cd9e <E131Params::callbackFunction(char const*)+0xce>
 800cf40:	0801a9d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, pc}
 800cf44:	0801901e 	stmdaeq	r1, {r1, r2, r3, r4, ip, pc}
 800cf48:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
 800cf4c:	080182da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, pc}
 800cf50:	08019027 	stmdaeq	r1, {r0, r1, r2, r5, ip, pc}
 800cf54:	0801a9c0 	stmdaeq	r1, {r6, r7, r8, fp, sp, pc}
 800cf58:	0801a7e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, sp, pc}
 800cf5c:	08019074 	stmdaeq	r1, {r2, r4, r5, r6, ip, pc}
 800cf60:	0801a966 	stmdaeq	r1, {r1, r2, r5, r6, r8, fp, sp, pc}
 800cf64:	0801a9e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, sp, pc}

0800cf68 <E131Params::staticCallbackFunction(void*, char const*)>:
 800cf68:	f7ff beb2 	b.w	800ccd0 <E131Params::callbackFunction(char const*)>

0800cf6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800cf6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf70:	4604      	mov	r4, r0
 800cf72:	b087      	sub	sp, #28
 800cf74:	4615      	mov	r5, r2
 800cf76:	461e      	mov	r6, r3
 800cf78:	3004      	adds	r0, #4
 800cf7a:	2900      	cmp	r1, #0
 800cf7c:	d05f      	beq.n	800d03e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800cf7e:	221f      	movs	r2, #31
 800cf80:	f008 fb6f 	bl	8015662 <memmove>
 800cf84:	4633      	mov	r3, r6
 800cf86:	462a      	mov	r2, r5
 800cf88:	4990      	ldr	r1, [pc, #576]	; (800d1cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800cf8a:	4f91      	ldr	r7, [pc, #580]	; (800d1d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800cf8c:	4e91      	ldr	r6, [pc, #580]	; (800d1d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800cf8e:	f8df 8280 	ldr.w	r8, [pc, #640]	; 800d210 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>
 800cf92:	f8df 9278 	ldr.w	r9, [pc, #632]	; 800d20c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>
 800cf96:	a803      	add	r0, sp, #12
 800cf98:	f007 fc32 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cf9c:	2500      	movs	r5, #0
 800cf9e:	f8d8 2000 	ldr.w	r2, [r8]
 800cfa2:	6863      	ldr	r3, [r4, #4]
 800cfa4:	42aa      	cmp	r2, r5
 800cfa6:	d851      	bhi.n	800d04c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800cfa8:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800cfac:	4a8a      	ldr	r2, [pc, #552]	; (800d1d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800cfae:	4e8b      	ldr	r6, [pc, #556]	; (800d1dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800cfb0:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800cfb4:	498a      	ldr	r1, [pc, #552]	; (800d1e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800cfb6:	f8df 925c 	ldr.w	r9, [pc, #604]	; 800d214 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>
 800cfba:	f8df a25c 	ldr.w	sl, [pc, #604]	; 800d218 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>
 800cfbe:	f003 0301 	and.w	r3, r3, #1
 800cfc2:	a803      	add	r0, sp, #12
 800cfc4:	f7ff fe0c 	bl	800cbe0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cfc8:	4986      	ldr	r1, [pc, #536]	; (800d1e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800cfca:	a803      	add	r0, sp, #12
 800cfcc:	f007 fc9e 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800cfd0:	f104 0713 	add.w	r7, r4, #19
 800cfd4:	2500      	movs	r5, #0
 800cfd6:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800cfda:	f8d8 3000 	ldr.w	r3, [r8]
 800cfde:	42ab      	cmp	r3, r5
 800cfe0:	d87f      	bhi.n	800d0e2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800cfe2:	4981      	ldr	r1, [pc, #516]	; (800d1e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800cfe4:	4e81      	ldr	r6, [pc, #516]	; (800d1ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800cfe6:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800d204 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800cfea:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800d1f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>
 800cfee:	a803      	add	r0, sp, #12
 800cff0:	f007 fc8c 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800cff4:	f104 091e 	add.w	r9, r4, #30
 800cff8:	2700      	movs	r7, #0
 800cffa:	f8d8 3000 	ldr.w	r3, [r8]
 800cffe:	42bb      	cmp	r3, r7
 800d000:	f200 8083 	bhi.w	800d10a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800d004:	497a      	ldr	r1, [pc, #488]	; (800d1f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800d006:	a803      	add	r0, sp, #12
 800d008:	f007 fc80 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800d00c:	6863      	ldr	r3, [r4, #4]
 800d00e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d012:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d016:	42a2      	cmp	r2, r4
 800d018:	f080 80b8 	bcs.w	800d18c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800d01c:	9803      	ldr	r0, [sp, #12]
 800d01e:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800d022:	4410      	add	r0, r2
 800d024:	eba4 0402 	sub.w	r4, r4, r2
 800d028:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d02c:	f040 809d 	bne.w	800d16a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800d030:	2a00      	cmp	r2, #0
 800d032:	f040 809b 	bne.w	800d16c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800d036:	9200      	str	r2, [sp, #0]
 800d038:	4b6e      	ldr	r3, [pc, #440]	; (800d1f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d03a:	4a6f      	ldr	r2, [pc, #444]	; (800d1f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d03c:	e09c      	b.n	800d178 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d03e:	6823      	ldr	r3, [r4, #0]
 800d040:	681a      	ldr	r2, [r3, #0]
 800d042:	4601      	mov	r1, r0
 800d044:	68d2      	ldr	r2, [r2, #12]
 800d046:	4618      	mov	r0, r3
 800d048:	4790      	blx	r2
 800d04a:	e79b      	b.n	800cf84 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800d04c:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800d050:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800d054:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800d058:	45dc      	cmp	ip, fp
 800d05a:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800d05e:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800d062:	d221      	bcs.n	800d0a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800d064:	2110      	movs	r1, #16
 800d066:	9803      	ldr	r0, [sp, #12]
 800d068:	40a9      	lsls	r1, r5
 800d06a:	ea31 0303 	bics.w	r3, r1, r3
 800d06e:	4460      	add	r0, ip
 800d070:	ebab 0b0c 	sub.w	fp, fp, ip
 800d074:	f89d c014 	ldrb.w	ip, [sp, #20]
 800d078:	d006      	beq.n	800d088 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800d07a:	f1bc 0f00 	cmp.w	ip, #0
 800d07e:	d106      	bne.n	800d08e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800d080:	9200      	str	r2, [sp, #0]
 800d082:	4633      	mov	r3, r6
 800d084:	4a5c      	ldr	r2, [pc, #368]	; (800d1f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d086:	e005      	b.n	800d094 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d088:	f1bc 0f00 	cmp.w	ip, #0
 800d08c:	d023      	beq.n	800d0d6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800d08e:	9200      	str	r2, [sp, #0]
 800d090:	4633      	mov	r3, r6
 800d092:	464a      	mov	r2, r9
 800d094:	4659      	mov	r1, fp
 800d096:	f7fd f9a9 	bl	800a3ec <snprintf>
 800d09a:	4583      	cmp	fp, r0
 800d09c:	bfa2      	ittt	ge
 800d09e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d0a2:	18c0      	addge	r0, r0, r3
 800d0a4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d0a8:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800d0ac:	fa23 f30a 	lsr.w	r3, r3, sl
 800d0b0:	f013 0303 	ands.w	r3, r3, #3
 800d0b4:	d013      	beq.n	800d0de <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800d0b6:	4a51      	ldr	r2, [pc, #324]	; (800d1fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800d0b8:	4951      	ldr	r1, [pc, #324]	; (800d200 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800d0ba:	2b02      	cmp	r3, #2
 800d0bc:	bf08      	it	eq
 800d0be:	460a      	moveq	r2, r1
 800d0c0:	3b01      	subs	r3, #1
 800d0c2:	4639      	mov	r1, r7
 800d0c4:	bf18      	it	ne
 800d0c6:	2301      	movne	r3, #1
 800d0c8:	a803      	add	r0, sp, #12
 800d0ca:	f7ff fd89 	bl	800cbe0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d0ce:	3501      	adds	r5, #1
 800d0d0:	3712      	adds	r7, #18
 800d0d2:	3610      	adds	r6, #16
 800d0d4:	e763      	b.n	800cf9e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800d0d6:	9200      	str	r2, [sp, #0]
 800d0d8:	4633      	mov	r3, r6
 800d0da:	4a4a      	ldr	r2, [pc, #296]	; (800d204 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d0dc:	e7da      	b.n	800d094 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d0de:	4a4a      	ldr	r2, [pc, #296]	; (800d208 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800d0e0:	e7ee      	b.n	800d0c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800d0e2:	6861      	ldr	r1, [r4, #4]
 800d0e4:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d0e8:	fa0b f305 	lsl.w	r3, fp, r5
 800d0ec:	438b      	bics	r3, r1
 800d0ee:	bf0c      	ite	eq
 800d0f0:	2301      	moveq	r3, #1
 800d0f2:	2300      	movne	r3, #0
 800d0f4:	4631      	mov	r1, r6
 800d0f6:	2a00      	cmp	r2, #0
 800d0f8:	bf0c      	ite	eq
 800d0fa:	464a      	moveq	r2, r9
 800d0fc:	4652      	movne	r2, sl
 800d0fe:	a803      	add	r0, sp, #12
 800d100:	f7ff fd6e 	bl	800cbe0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d104:	3501      	adds	r5, #1
 800d106:	3612      	adds	r6, #18
 800d108:	e767      	b.n	800cfda <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800d10a:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d10e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d112:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800d116:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800d11a:	42a9      	cmp	r1, r5
 800d11c:	d21e      	bcs.n	800d15c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800d11e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800d122:	9803      	ldr	r0, [sp, #12]
 800d124:	40ba      	lsls	r2, r7
 800d126:	ea32 0c0c 	bics.w	ip, r2, ip
 800d12a:	4408      	add	r0, r1
 800d12c:	eba5 0501 	sub.w	r5, r5, r1
 800d130:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d134:	d004      	beq.n	800d140 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800d136:	b921      	cbnz	r1, 800d142 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800d138:	9300      	str	r3, [sp, #0]
 800d13a:	465a      	mov	r2, fp
 800d13c:	4633      	mov	r3, r6
 800d13e:	e003      	b.n	800d148 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d140:	b179      	cbz	r1, 800d162 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800d142:	4a32      	ldr	r2, [pc, #200]	; (800d20c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d144:	9300      	str	r3, [sp, #0]
 800d146:	4633      	mov	r3, r6
 800d148:	4629      	mov	r1, r5
 800d14a:	f7fd f94f 	bl	800a3ec <snprintf>
 800d14e:	4285      	cmp	r5, r0
 800d150:	bfa2      	ittt	ge
 800d152:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d156:	18c0      	addge	r0, r0, r3
 800d158:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d15c:	3701      	adds	r7, #1
 800d15e:	3612      	adds	r6, #18
 800d160:	e74b      	b.n	800cffa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800d162:	9300      	str	r3, [sp, #0]
 800d164:	4652      	mov	r2, sl
 800d166:	4633      	mov	r3, r6
 800d168:	e7ee      	b.n	800d148 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d16a:	b34a      	cbz	r2, 800d1c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800d16c:	3b00      	subs	r3, #0
 800d16e:	bf18      	it	ne
 800d170:	2301      	movne	r3, #1
 800d172:	9300      	str	r3, [sp, #0]
 800d174:	4a25      	ldr	r2, [pc, #148]	; (800d20c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d176:	4b1f      	ldr	r3, [pc, #124]	; (800d1f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d178:	4621      	mov	r1, r4
 800d17a:	f7fd f937 	bl	800a3ec <snprintf>
 800d17e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d182:	4284      	cmp	r4, r0
 800d184:	bfa4      	itt	ge
 800d186:	181b      	addge	r3, r3, r0
 800d188:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d18c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d190:	b17b      	cbz	r3, 800d1b2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800d192:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d196:	9b03      	ldr	r3, [sp, #12]
 800d198:	4413      	add	r3, r2
 800d19a:	227d      	movs	r2, #125	; 0x7d
 800d19c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d1a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d1a4:	9903      	ldr	r1, [sp, #12]
 800d1a6:	54ca      	strb	r2, [r1, r3]
 800d1a8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d1ac:	3301      	adds	r3, #1
 800d1ae:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d1b2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d1b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d1b8:	601a      	str	r2, [r3, #0]
 800d1ba:	b007      	add	sp, #28
 800d1bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1c0:	2301      	movs	r3, #1
 800d1c2:	9300      	str	r3, [sp, #0]
 800d1c4:	4a0f      	ldr	r2, [pc, #60]	; (800d204 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d1c6:	4b0b      	ldr	r3, [pc, #44]	; (800d1f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d1c8:	e7d6      	b.n	800d178 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d1ca:	bf00      	nop
 800d1cc:	080190bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, ip, pc}
 800d1d0:	0801a9e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, sp, pc}
 800d1d4:	0801a7e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, sp, pc}
 800d1d8:	08019064 	stmdaeq	r1, {r2, r5, r6, ip, pc}
 800d1dc:	0801a966 	stmdaeq	r1, {r1, r2, r5, r6, r8, fp, sp, pc}
 800d1e0:	0801a9d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, pc}
 800d1e4:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800d1e8:	08019058 	stmdaeq	r1, {r3, r4, r6, ip, pc}
 800d1ec:	08019074 	stmdaeq	r1, {r2, r4, r5, r6, ip, pc}
 800d1f0:	08017ef9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 800d1f4:	0801a9c0 	stmdaeq	r1, {r6, r7, r8, fp, sp, pc}
 800d1f8:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800d1fc:	08019036 	stmdaeq	r1, {r1, r2, r4, r5, ip, pc}
 800d200:	0801903d 	stmdaeq	r1, {r0, r2, r3, r4, r5, ip, pc}
 800d204:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}
 800d208:	08019030 	stmdaeq	r1, {r4, r5, ip, pc}
 800d20c:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800d210:	200006d4 	ldrdcs	r0, [r0], -r4
 800d214:	08019049 	stmdaeq	r1, {r0, r3, r6, ip, pc}
 800d218:	08019045 	stmdaeq	r1, {r0, r2, r6, ip, pc}

0800d21c <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800d21c:	b513      	push	{r0, r1, r4, lr}
 800d21e:	6804      	ldr	r4, [r0, #0]
 800d220:	b914      	cbnz	r4, 800d228 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800d222:	601c      	str	r4, [r3, #0]
 800d224:	b002      	add	sp, #8
 800d226:	bd10      	pop	{r4, pc}
 800d228:	9300      	str	r3, [sp, #0]
 800d22a:	4613      	mov	r3, r2
 800d22c:	460a      	mov	r2, r1
 800d22e:	2100      	movs	r1, #0
 800d230:	f7ff fe9c 	bl	800cf6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800d234:	e7f6      	b.n	800d224 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800d238 <E131Params::Set(unsigned int)>:
 800d238:	1e4b      	subs	r3, r1, #1
 800d23a:	2b40      	cmp	r3, #64	; 0x40
 800d23c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d240:	d807      	bhi.n	800d252 <E131Params::Set(unsigned int)+0x1a>
 800d242:	4a27      	ldr	r2, [pc, #156]	; (800d2e0 <E131Params::Set(unsigned int)+0xa8>)
 800d244:	f1c1 0342 	rsb	r3, r1, #66	; 0x42
 800d248:	6814      	ldr	r4, [r2, #0]
 800d24a:	42a3      	cmp	r3, r4
 800d24c:	bf94      	ite	ls
 800d24e:	6013      	strls	r3, [r2, #0]
 800d250:	6014      	strhi	r4, [r2, #0]
 800d252:	6843      	ldr	r3, [r0, #4]
 800d254:	b1fb      	cbz	r3, 800d296 <E131Params::Set(unsigned int)+0x5e>
 800d256:	4b23      	ldr	r3, [pc, #140]	; (800d2e4 <E131Params::Set(unsigned int)+0xac>)
 800d258:	681c      	ldr	r4, [r3, #0]
 800d25a:	4b21      	ldr	r3, [pc, #132]	; (800d2e0 <E131Params::Set(unsigned int)+0xa8>)
 800d25c:	2244      	movs	r2, #68	; 0x44
 800d25e:	f504 57b5 	add.w	r7, r4, #5792	; 0x16a0
 800d262:	f8d3 c000 	ldr.w	ip, [r3]
 800d266:	f100 0514 	add.w	r5, r0, #20
 800d26a:	fb02 4201 	mla	r2, r2, r1, r4
 800d26e:	2300      	movs	r3, #0
 800d270:	f44f 7e80 	mov.w	lr, #256	; 0x100
 800d274:	f44f 3880 	mov.w	r8, #65536	; 0x10000
 800d278:	3705      	adds	r7, #5
 800d27a:	f04f 090c 	mov.w	r9, #12
 800d27e:	459c      	cmp	ip, r3
 800d280:	6846      	ldr	r6, [r0, #4]
 800d282:	d10a      	bne.n	800d29a <E131Params::Set(unsigned int)+0x62>
 800d284:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800d288:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800d28c:	04b3      	lsls	r3, r6, #18
 800d28e:	bf44      	itt	mi
 800d290:	2301      	movmi	r3, #1
 800d292:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800d296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d29a:	eb03 0a01 	add.w	sl, r3, r1
 800d29e:	f1ba 0f41 	cmp.w	sl, #65	; 0x41
 800d2a2:	d8ef      	bhi.n	800d284 <E131Params::Set(unsigned int)+0x4c>
 800d2a4:	fa0e fa03 	lsl.w	sl, lr, r3
 800d2a8:	ea3a 0a06 	bics.w	sl, sl, r6
 800d2ac:	bf04      	itt	eq
 800d2ae:	f895 a000 	ldrbeq.w	sl, [r5]
 800d2b2:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800d2b6:	fa08 fa03 	lsl.w	sl, r8, r3
 800d2ba:	ea3a 0a06 	bics.w	sl, sl, r6
 800d2be:	d10a      	bne.n	800d2d6 <E131Params::Set(unsigned int)+0x9e>
 800d2c0:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800d2c4:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800d2c8:	b2f6      	uxtb	r6, r6
 800d2ca:	2ec7      	cmp	r6, #199	; 0xc7
 800d2cc:	bf9c      	itt	ls
 800d2ce:	fb09 f603 	mulls.w	r6, r9, r3
 800d2d2:	f807 a006 	strbls.w	sl, [r7, r6]
 800d2d6:	3301      	adds	r3, #1
 800d2d8:	3501      	adds	r5, #1
 800d2da:	3244      	adds	r2, #68	; 0x44
 800d2dc:	e7cf      	b.n	800d27e <E131Params::Set(unsigned int)+0x46>
 800d2de:	bf00      	nop
 800d2e0:	200006d4 	ldrdcs	r0, [r0], -r4
 800d2e4:	200006cc 	andcs	r0, r0, ip, asr #13

0800d2e8 <E131Params::Dump()>:
 800d2e8:	4770      	bx	lr

0800d2ea <LLRPDevice::~LLRPDevice()>:
 800d2ea:	4770      	bx	lr

0800d2ec <LLRPDevice::CopyUID(unsigned char*)>:
 800d2ec:	4770      	bx	lr

0800d2ee <LLRPDevice::CopyCID(unsigned char*)>:
 800d2ee:	4770      	bx	lr

0800d2f0 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800d2f0:	2000      	movs	r0, #0
 800d2f2:	4770      	bx	lr

0800d2f4 <LLRPDevice::~LLRPDevice()>:
 800d2f4:	b510      	push	{r4, lr}
 800d2f6:	4604      	mov	r4, r0
 800d2f8:	f008 f8f0 	bl	80154dc <operator delete(void*)>
 800d2fc:	4620      	mov	r0, r4
 800d2fe:	bd10      	pop	{r4, pc}

0800d300 <memcpy.isra.0>:
 800d300:	3801      	subs	r0, #1
 800d302:	440a      	add	r2, r1
 800d304:	4291      	cmp	r1, r2
 800d306:	d100      	bne.n	800d30a <memcpy.isra.0+0xa>
 800d308:	4770      	bx	lr
 800d30a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d30e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d312:	e7f7      	b.n	800d304 <memcpy.isra.0+0x4>

0800d314 <LLRPDevice::LLRPDevice()>:
 800d314:	b513      	push	{r0, r1, r4, lr}
 800d316:	4b0a      	ldr	r3, [pc, #40]	; (800d340 <LLRPDevice::LLRPDevice()+0x2c>)
 800d318:	6003      	str	r3, [r0, #0]
 800d31a:	4604      	mov	r4, r0
 800d31c:	a901      	add	r1, sp, #4
 800d31e:	4809      	ldr	r0, [pc, #36]	; (800d344 <LLRPDevice::LLRPDevice()+0x30>)
 800d320:	f008 f8e4 	bl	80154ec <inet_aton>
 800d324:	4b08      	ldr	r3, [pc, #32]	; (800d348 <LLRPDevice::LLRPDevice()+0x34>)
 800d326:	9a01      	ldr	r2, [sp, #4]
 800d328:	4808      	ldr	r0, [pc, #32]	; (800d34c <LLRPDevice::LLRPDevice()+0x38>)
 800d32a:	601a      	str	r2, [r3, #0]
 800d32c:	a901      	add	r1, sp, #4
 800d32e:	f008 f8dd 	bl	80154ec <inet_aton>
 800d332:	4b07      	ldr	r3, [pc, #28]	; (800d350 <LLRPDevice::LLRPDevice()+0x3c>)
 800d334:	9a01      	ldr	r2, [sp, #4]
 800d336:	601a      	str	r2, [r3, #0]
 800d338:	4620      	mov	r0, r4
 800d33a:	b002      	add	sp, #8
 800d33c:	bd10      	pop	{r4, pc}
 800d33e:	bf00      	nop
 800d340:	08019184 	stmdaeq	r1, {r2, r7, r8, ip, pc}
 800d344:	080190d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, ip, pc}
 800d348:	200006dc 	ldrdcs	r0, [r0], -ip
 800d34c:	080190e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, ip, pc}
 800d350:	200006e0 	andcs	r0, r0, r0, ror #13

0800d354 <LLRPDevice::HandleRequestMessage()>:
 800d354:	b530      	push	{r4, r5, lr}
 800d356:	4b24      	ldr	r3, [pc, #144]	; (800d3e8 <LLRPDevice::HandleRequestMessage()+0x94>)
 800d358:	681c      	ldr	r4, [r3, #0]
 800d35a:	b089      	sub	sp, #36	; 0x24
 800d35c:	2210      	movs	r2, #16
 800d35e:	4605      	mov	r5, r0
 800d360:	f104 0117 	add.w	r1, r4, #23
 800d364:	eb0d 0002 	add.w	r0, sp, r2
 800d368:	9103      	str	r1, [sp, #12]
 800d36a:	f7ff ffc9 	bl	800d300 <memcpy.isra.0>
 800d36e:	2343      	movs	r3, #67	; 0x43
 800d370:	74a3      	strb	r3, [r4, #18]
 800d372:	682b      	ldr	r3, [r5, #0]
 800d374:	9903      	ldr	r1, [sp, #12]
 800d376:	68db      	ldr	r3, [r3, #12]
 800d378:	4628      	mov	r0, r5
 800d37a:	4798      	blx	r3
 800d37c:	232c      	movs	r3, #44	; 0x2c
 800d37e:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d382:	2300      	movs	r3, #0
 800d384:	2210      	movs	r2, #16
 800d386:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800d38a:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800d38e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d392:	2302      	movs	r3, #2
 800d394:	eb0d 0102 	add.w	r1, sp, r2
 800d398:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800d39c:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d3a0:	f7ff ffae 	bl	800d300 <memcpy.isra.0>
 800d3a4:	2311      	movs	r3, #17
 800d3a6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d3aa:	2301      	movs	r3, #1
 800d3ac:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d3b0:	682b      	ldr	r3, [r5, #0]
 800d3b2:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800d3b6:	4628      	mov	r0, r5
 800d3b8:	689b      	ldr	r3, [r3, #8]
 800d3ba:	4798      	blx	r3
 800d3bc:	4b0b      	ldr	r3, [pc, #44]	; (800d3ec <LLRPDevice::HandleRequestMessage()+0x98>)
 800d3be:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800d3c2:	6818      	ldr	r0, [r3, #0]
 800d3c4:	f004 ffdd 	bl	8012382 <Network::MacAddressCopyTo(unsigned char*)>
 800d3c8:	23ff      	movs	r3, #255	; 0xff
 800d3ca:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800d3ce:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d3d2:	9300      	str	r3, [sp, #0]
 800d3d4:	4806      	ldr	r0, [pc, #24]	; (800d3f0 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800d3d6:	4b07      	ldr	r3, [pc, #28]	; (800d3f4 <LLRPDevice::HandleRequestMessage()+0xa0>)
 800d3d8:	7800      	ldrb	r0, [r0, #0]
 800d3da:	681b      	ldr	r3, [r3, #0]
 800d3dc:	2253      	movs	r2, #83	; 0x53
 800d3de:	4621      	mov	r1, r4
 800d3e0:	f004 fafc 	bl	80119dc <udp_send>
 800d3e4:	b009      	add	sp, #36	; 0x24
 800d3e6:	bd30      	pop	{r4, r5, pc}
 800d3e8:	200006e4 	andcs	r0, r0, r4, ror #13
 800d3ec:	2000f994 	mulcs	r0, r4, r9
 800d3f0:	20000000 	andcs	r0, r0, r0
 800d3f4:	200006e0 	andcs	r0, r0, r0, ror #13

0800d3f8 <LLRPDevice::HandleRdmCommand()>:
 800d3f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d3fc:	4b23      	ldr	r3, [pc, #140]	; (800d48c <LLRPDevice::HandleRdmCommand()+0x94>)
 800d3fe:	681c      	ldr	r4, [r3, #0]
 800d400:	6803      	ldr	r3, [r0, #0]
 800d402:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800d406:	691b      	ldr	r3, [r3, #16]
 800d408:	b089      	sub	sp, #36	; 0x24
 800d40a:	4649      	mov	r1, r9
 800d40c:	4607      	mov	r7, r0
 800d40e:	4798      	blx	r3
 800d410:	4605      	mov	r5, r0
 800d412:	2800      	cmp	r0, #0
 800d414:	d036      	beq.n	800d484 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d416:	7803      	ldrb	r3, [r0, #0]
 800d418:	2bcc      	cmp	r3, #204	; 0xcc
 800d41a:	d133      	bne.n	800d484 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d41c:	2210      	movs	r2, #16
 800d41e:	eb0d 0002 	add.w	r0, sp, r2
 800d422:	f104 0117 	add.w	r1, r4, #23
 800d426:	9103      	str	r1, [sp, #12]
 800d428:	f7ff ff6a 	bl	800d300 <memcpy.isra.0>
 800d42c:	78ae      	ldrb	r6, [r5, #2]
 800d42e:	9903      	ldr	r1, [sp, #12]
 800d430:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800d434:	fa5f f888 	uxtb.w	r8, r8
 800d438:	f884 8012 	strb.w	r8, [r4, #18]
 800d43c:	683b      	ldr	r3, [r7, #0]
 800d43e:	4638      	mov	r0, r7
 800d440:	68db      	ldr	r3, [r3, #12]
 800d442:	4798      	blx	r3
 800d444:	f106 0320 	add.w	r3, r6, #32
 800d448:	2210      	movs	r2, #16
 800d44a:	eb0d 0102 	add.w	r1, sp, r2
 800d44e:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d452:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d456:	f7ff ff53 	bl	800d300 <memcpy.isra.0>
 800d45a:	1d73      	adds	r3, r6, #5
 800d45c:	1c72      	adds	r2, r6, #1
 800d45e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d462:	b2d2      	uxtb	r2, r2
 800d464:	1c69      	adds	r1, r5, #1
 800d466:	4648      	mov	r0, r9
 800d468:	f7ff ff4a 	bl	800d300 <memcpy.isra.0>
 800d46c:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d470:	9300      	str	r3, [sp, #0]
 800d472:	4807      	ldr	r0, [pc, #28]	; (800d490 <LLRPDevice::HandleRdmCommand()+0x98>)
 800d474:	4b07      	ldr	r3, [pc, #28]	; (800d494 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800d476:	7800      	ldrb	r0, [r0, #0]
 800d478:	681b      	ldr	r3, [r3, #0]
 800d47a:	f108 0210 	add.w	r2, r8, #16
 800d47e:	4621      	mov	r1, r4
 800d480:	f004 faac 	bl	80119dc <udp_send>
 800d484:	b009      	add	sp, #36	; 0x24
 800d486:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d48a:	bf00      	nop
 800d48c:	200006e4 	andcs	r0, r0, r4, ror #13
 800d490:	20000000 	andcs	r0, r0, r0
 800d494:	200006e0 	andcs	r0, r0, r0, ror #13

0800d498 <LLRPDevice::Run()>:
 800d498:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d49a:	4d0f      	ldr	r5, [pc, #60]	; (800d4d8 <LLRPDevice::Run()+0x40>)
 800d49c:	4a0f      	ldr	r2, [pc, #60]	; (800d4dc <LLRPDevice::Run()+0x44>)
 800d49e:	4604      	mov	r4, r0
 800d4a0:	480f      	ldr	r0, [pc, #60]	; (800d4e0 <LLRPDevice::Run()+0x48>)
 800d4a2:	f10d 0306 	add.w	r3, sp, #6
 800d4a6:	7800      	ldrb	r0, [r0, #0]
 800d4a8:	4629      	mov	r1, r5
 800d4aa:	f004 fa71 	bl	8011990 <udp_recv2>
 800d4ae:	2841      	cmp	r0, #65	; 0x41
 800d4b0:	d908      	bls.n	800d4c4 <LLRPDevice::Run()+0x2c>
 800d4b2:	682b      	ldr	r3, [r5, #0]
 800d4b4:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800d4b8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d4bc:	ba1a      	rev	r2, r3
 800d4be:	d003      	beq.n	800d4c8 <LLRPDevice::Run()+0x30>
 800d4c0:	2a03      	cmp	r2, #3
 800d4c2:	d005      	beq.n	800d4d0 <LLRPDevice::Run()+0x38>
 800d4c4:	b003      	add	sp, #12
 800d4c6:	bd30      	pop	{r4, r5, pc}
 800d4c8:	4620      	mov	r0, r4
 800d4ca:	f7ff ff43 	bl	800d354 <LLRPDevice::HandleRequestMessage()>
 800d4ce:	e7f9      	b.n	800d4c4 <LLRPDevice::Run()+0x2c>
 800d4d0:	4620      	mov	r0, r4
 800d4d2:	f7ff ff91 	bl	800d3f8 <LLRPDevice::HandleRdmCommand()>
 800d4d6:	e7f5      	b.n	800d4c4 <LLRPDevice::Run()+0x2c>
 800d4d8:	200006e4 	andcs	r0, r0, r4, ror #13
 800d4dc:	200006d8 	ldrdcs	r0, [r0], -r8
 800d4e0:	20000000 	andcs	r0, r0, r0

0800d4e4 <LLRPDevice::Print()>:
 800d4e4:	b507      	push	{r0, r1, r2, lr}
 800d4e6:	4811      	ldr	r0, [pc, #68]	; (800d52c <LLRPDevice::Print()+0x48>)
 800d4e8:	f7fc ff58 	bl	800a39c <printf>
 800d4ec:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800d4f0:	480f      	ldr	r0, [pc, #60]	; (800d530 <LLRPDevice::Print()+0x4c>)
 800d4f2:	f7fc ff53 	bl	800a39c <printf>
 800d4f6:	4b0f      	ldr	r3, [pc, #60]	; (800d534 <LLRPDevice::Print()+0x50>)
 800d4f8:	480f      	ldr	r0, [pc, #60]	; (800d538 <LLRPDevice::Print()+0x54>)
 800d4fa:	6819      	ldr	r1, [r3, #0]
 800d4fc:	0e0b      	lsrs	r3, r1, #24
 800d4fe:	9300      	str	r3, [sp, #0]
 800d500:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d504:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d508:	b2c9      	uxtb	r1, r1
 800d50a:	f7fc ff47 	bl	800a39c <printf>
 800d50e:	4b0b      	ldr	r3, [pc, #44]	; (800d53c <LLRPDevice::Print()+0x58>)
 800d510:	480b      	ldr	r0, [pc, #44]	; (800d540 <LLRPDevice::Print()+0x5c>)
 800d512:	6819      	ldr	r1, [r3, #0]
 800d514:	0e0b      	lsrs	r3, r1, #24
 800d516:	9300      	str	r3, [sp, #0]
 800d518:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d51c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d520:	b2c9      	uxtb	r1, r1
 800d522:	f7fc ff3b 	bl	800a39c <printf>
 800d526:	b003      	add	sp, #12
 800d528:	f85d fb04 	ldr.w	pc, [sp], #4
 800d52c:	080190f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, ip, pc}
 800d530:	0801910e 	stmdaeq	r1, {r1, r2, r3, r8, ip, pc}
 800d534:	200006dc 	ldrdcs	r0, [r0], -ip
 800d538:	0801912c 	stmdaeq	r1, {r2, r3, r5, r8, ip, pc}
 800d53c:	200006e0 	andcs	r0, r0, r0, ror #13
 800d540:	08019153 	stmdaeq	r1, {r0, r1, r4, r6, r8, ip, pc}

0800d544 <RDMNetDevice::Print()>:
 800d544:	b510      	push	{r4, lr}
 800d546:	b08a      	sub	sp, #40	; 0x28
 800d548:	2300      	movs	r3, #0
 800d54a:	4604      	mov	r4, r0
 800d54c:	4669      	mov	r1, sp
 800d54e:	480a      	ldr	r0, [pc, #40]	; (800d578 <RDMNetDevice::Print()+0x34>)
 800d550:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d554:	f001 f944 	bl	800e7e0 <uuid_unparse>
 800d558:	4808      	ldr	r0, [pc, #32]	; (800d57c <RDMNetDevice::Print()+0x38>)
 800d55a:	f7fc ff1f 	bl	800a39c <printf>
 800d55e:	4669      	mov	r1, sp
 800d560:	4807      	ldr	r0, [pc, #28]	; (800d580 <RDMNetDevice::Print()+0x3c>)
 800d562:	f7fc ff1b 	bl	800a39c <printf>
 800d566:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800d56a:	f7ff ffbb 	bl	800d4e4 <LLRPDevice::Print()>
 800d56e:	4620      	mov	r0, r4
 800d570:	f000 fa36 	bl	800d9e0 <RDMDeviceResponder::Print()>
 800d574:	b00a      	add	sp, #40	; 0x28
 800d576:	bd10      	pop	{r4, pc}
 800d578:	200007e9 	andcs	r0, r0, r9, ror #15
 800d57c:	080191ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, ip, pc}
 800d580:	080191d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, ip, pc}

0800d584 <RDMSensors::RDMSensors()>:
 800d584:	2200      	movs	r2, #0
 800d586:	6002      	str	r2, [r0, #0]
 800d588:	7102      	strb	r2, [r0, #4]
 800d58a:	4a01      	ldr	r2, [pc, #4]	; (800d590 <RDMSensors::RDMSensors()+0xc>)
 800d58c:	6010      	str	r0, [r2, #0]
 800d58e:	4770      	bx	lr
 800d590:	200007fc 	strdcs	r0, [r0], -ip

0800d594 <RDMSensors::~RDMSensors()>:
 800d594:	b570      	push	{r4, r5, r6, lr}
 800d596:	2500      	movs	r5, #0
 800d598:	4604      	mov	r4, r0
 800d59a:	462e      	mov	r6, r5
 800d59c:	7923      	ldrb	r3, [r4, #4]
 800d59e:	6820      	ldr	r0, [r4, #0]
 800d5a0:	42ab      	cmp	r3, r5
 800d5a2:	d804      	bhi.n	800d5ae <RDMSensors::~RDMSensors()+0x1a>
 800d5a4:	b108      	cbz	r0, 800d5aa <RDMSensors::~RDMSensors()+0x16>
 800d5a6:	f007 ff9b 	bl	80154e0 <operator delete[](void*)>
 800d5aa:	4620      	mov	r0, r4
 800d5ac:	bd70      	pop	{r4, r5, r6, pc}
 800d5ae:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d5b2:	b128      	cbz	r0, 800d5c0 <RDMSensors::~RDMSensors()+0x2c>
 800d5b4:	6803      	ldr	r3, [r0, #0]
 800d5b6:	685b      	ldr	r3, [r3, #4]
 800d5b8:	4798      	blx	r3
 800d5ba:	6823      	ldr	r3, [r4, #0]
 800d5bc:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800d5c0:	3501      	adds	r5, #1
 800d5c2:	e7eb      	b.n	800d59c <RDMSensors::~RDMSensors()+0x8>

0800d5c4 <RDMSubDevices::RDMSubDevices()>:
 800d5c4:	2200      	movs	r2, #0
 800d5c6:	6002      	str	r2, [r0, #0]
 800d5c8:	8082      	strh	r2, [r0, #4]
 800d5ca:	4a01      	ldr	r2, [pc, #4]	; (800d5d0 <RDMSubDevices::RDMSubDevices()+0xc>)
 800d5cc:	6010      	str	r0, [r2, #0]
 800d5ce:	4770      	bx	lr
 800d5d0:	20000800 	andcs	r0, r0, r0, lsl #16

0800d5d4 <RDMSubDevices::~RDMSubDevices()>:
 800d5d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d5d6:	2500      	movs	r5, #0
 800d5d8:	4604      	mov	r4, r0
 800d5da:	462e      	mov	r6, r5
 800d5dc:	88a3      	ldrh	r3, [r4, #4]
 800d5de:	6820      	ldr	r0, [r4, #0]
 800d5e0:	42ab      	cmp	r3, r5
 800d5e2:	d804      	bhi.n	800d5ee <RDMSubDevices::~RDMSubDevices()+0x1a>
 800d5e4:	b108      	cbz	r0, 800d5ea <RDMSubDevices::~RDMSubDevices()+0x16>
 800d5e6:	f007 ff7b 	bl	80154e0 <operator delete[](void*)>
 800d5ea:	4620      	mov	r0, r4
 800d5ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d5ee:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d5f2:	00af      	lsls	r7, r5, #2
 800d5f4:	b110      	cbz	r0, 800d5fc <RDMSubDevices::~RDMSubDevices()+0x28>
 800d5f6:	6803      	ldr	r3, [r0, #0]
 800d5f8:	685b      	ldr	r3, [r3, #4]
 800d5fa:	4798      	blx	r3
 800d5fc:	6823      	ldr	r3, [r4, #0]
 800d5fe:	3501      	adds	r5, #1
 800d600:	51de      	str	r6, [r3, r7]
 800d602:	e7eb      	b.n	800d5dc <RDMSubDevices::~RDMSubDevices()+0x8>

0800d604 <RDMSubDevices::GetInfo(unsigned short)>:
 800d604:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800d608:	6803      	ldr	r3, [r0, #0]
 800d60a:	3901      	subs	r1, #1
 800d60c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d610:	3010      	adds	r0, #16
 800d612:	4770      	bx	lr

0800d614 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800d614:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800d618:	6800      	ldr	r0, [r0, #0]
 800d61a:	3b01      	subs	r3, #1
 800d61c:	4611      	mov	r1, r2
 800d61e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800d622:	f000 b830 	b.w	800d686 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800d626 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800d626:	b410      	push	{r4}
 800d628:	460c      	mov	r4, r1
 800d62a:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800d62e:	3c01      	subs	r4, #1
 800d630:	6800      	ldr	r0, [r0, #0]
 800d632:	4611      	mov	r1, r2
 800d634:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800d638:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d63c:	461a      	mov	r2, r3
 800d63e:	f000 b837 	b.w	800d6b0 <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800d642 <RDMSubDevices::GetFactoryDefaults()>:
 800d642:	b538      	push	{r3, r4, r5, lr}
 800d644:	4605      	mov	r5, r0
 800d646:	2400      	movs	r4, #0
 800d648:	88ab      	ldrh	r3, [r5, #4]
 800d64a:	42a3      	cmp	r3, r4
 800d64c:	d801      	bhi.n	800d652 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800d64e:	2001      	movs	r0, #1
 800d650:	e009      	b.n	800d666 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800d652:	682b      	ldr	r3, [r5, #0]
 800d654:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d658:	b908      	cbnz	r0, 800d65e <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800d65a:	3401      	adds	r4, #1
 800d65c:	e7f4      	b.n	800d648 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800d65e:	f000 f85c 	bl	800d71a <RDMSubDevice::GetFactoryDefaults()>
 800d662:	2800      	cmp	r0, #0
 800d664:	d1f9      	bne.n	800d65a <RDMSubDevices::GetFactoryDefaults()+0x18>
 800d666:	bd38      	pop	{r3, r4, r5, pc}

0800d668 <RDMSubDevices::SetFactoryDefaults()>:
 800d668:	b538      	push	{r3, r4, r5, lr}
 800d66a:	4605      	mov	r5, r0
 800d66c:	2400      	movs	r4, #0
 800d66e:	88ab      	ldrh	r3, [r5, #4]
 800d670:	42a3      	cmp	r3, r4
 800d672:	d800      	bhi.n	800d676 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800d674:	bd38      	pop	{r3, r4, r5, pc}
 800d676:	682b      	ldr	r3, [r5, #0]
 800d678:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d67c:	b108      	cbz	r0, 800d682 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800d67e:	f000 f826 	bl	800d6ce <RDMSubDevice::SetFactoryDefaults()>
 800d682:	3401      	adds	r4, #1
 800d684:	e7f3      	b.n	800d66e <RDMSubDevices::SetFactoryDefaults()+0x6>

0800d686 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800d686:	f100 0316 	add.w	r3, r0, #22
 800d68a:	600b      	str	r3, [r1, #0]
 800d68c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d690:	710b      	strb	r3, [r1, #4]
 800d692:	4770      	bx	lr

0800d694 <RDMSubDevice::SetLabel(char const*)>:
 800d694:	b510      	push	{r4, lr}
 800d696:	2300      	movs	r3, #0
 800d698:	f100 0415 	add.w	r4, r0, #21
 800d69c:	5cca      	ldrb	r2, [r1, r3]
 800d69e:	b122      	cbz	r2, 800d6aa <RDMSubDevice::SetLabel(char const*)+0x16>
 800d6a0:	3301      	adds	r3, #1
 800d6a2:	2b20      	cmp	r3, #32
 800d6a4:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d6a8:	d1f8      	bne.n	800d69c <RDMSubDevice::SetLabel(char const*)+0x8>
 800d6aa:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d6ae:	bd10      	pop	{r4, pc}

0800d6b0 <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800d6b0:	b530      	push	{r4, r5, lr}
 800d6b2:	2300      	movs	r3, #0
 800d6b4:	f100 0415 	add.w	r4, r0, #21
 800d6b8:	429a      	cmp	r2, r3
 800d6ba:	d905      	bls.n	800d6c8 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800d6bc:	5ccd      	ldrb	r5, [r1, r3]
 800d6be:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d6c2:	3301      	adds	r3, #1
 800d6c4:	2b20      	cmp	r3, #32
 800d6c6:	d1f7      	bne.n	800d6b8 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800d6c8:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d6cc:	bd30      	pop	{r4, r5, pc}

0800d6ce <RDMSubDevice::SetFactoryDefaults()>:
 800d6ce:	7a03      	ldrb	r3, [r0, #8]
 800d6d0:	b510      	push	{r4, lr}
 800d6d2:	b94b      	cbnz	r3, 800d6e8 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800d6d4:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800d6d8:	f7ff ffdc 	bl	800d694 <RDMSubDevice::SetLabel(char const*)>
 800d6dc:	8983      	ldrh	r3, [r0, #12]
 800d6de:	8243      	strh	r3, [r0, #18]
 800d6e0:	7b83      	ldrb	r3, [r0, #14]
 800d6e2:	7503      	strb	r3, [r0, #20]
 800d6e4:	2301      	movs	r3, #1
 800d6e6:	7203      	strb	r3, [r0, #8]
 800d6e8:	bd10      	pop	{r4, pc}

0800d6ea <RDMSubDevice::CalculateChecksum()>:
 800d6ea:	b510      	push	{r4, lr}
 800d6ec:	8a43      	ldrh	r3, [r0, #18]
 800d6ee:	7d02      	ldrb	r2, [r0, #20]
 800d6f0:	f890 4036 	ldrb.w	r4, [r0, #54]	; 0x36
 800d6f4:	4413      	add	r3, r2
 800d6f6:	f100 0215 	add.w	r2, r0, #21
 800d6fa:	f1c0 20ff 	rsb	r0, r0, #4278255360	; 0xff00ff00
 800d6fe:	f500 007f 	add.w	r0, r0, #16711680	; 0xff0000
 800d702:	b29b      	uxth	r3, r3
 800d704:	30eb      	adds	r0, #235	; 0xeb
 800d706:	1881      	adds	r1, r0, r2
 800d708:	428c      	cmp	r4, r1
 800d70a:	d801      	bhi.n	800d710 <RDMSubDevice::CalculateChecksum()+0x26>
 800d70c:	4618      	mov	r0, r3
 800d70e:	bd10      	pop	{r4, pc}
 800d710:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d714:	440b      	add	r3, r1
 800d716:	b29b      	uxth	r3, r3
 800d718:	e7f5      	b.n	800d706 <RDMSubDevice::CalculateChecksum()+0x1c>

0800d71a <RDMSubDevice::GetFactoryDefaults()>:
 800d71a:	7a03      	ldrb	r3, [r0, #8]
 800d71c:	b510      	push	{r4, lr}
 800d71e:	4604      	mov	r4, r0
 800d720:	b133      	cbz	r3, 800d730 <RDMSubDevice::GetFactoryDefaults()+0x16>
 800d722:	f7ff ffe2 	bl	800d6ea <RDMSubDevice::CalculateChecksum()>
 800d726:	8963      	ldrh	r3, [r4, #10]
 800d728:	4283      	cmp	r3, r0
 800d72a:	bf1c      	itt	ne
 800d72c:	2300      	movne	r3, #0
 800d72e:	7223      	strbne	r3, [r4, #8]
 800d730:	7a20      	ldrb	r0, [r4, #8]
 800d732:	bd10      	pop	{r4, pc}

0800d734 <memcpy.isra.0>:
 800d734:	f007 bf8a 	b.w	801564c <memcpy>

0800d738 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800d738:	b510      	push	{r4, lr}
 800d73a:	6001      	str	r1, [r0, #0]
 800d73c:	2100      	movs	r1, #0
 800d73e:	4604      	mov	r4, r0
 800d740:	6041      	str	r1, [r0, #4]
 800d742:	2220      	movs	r2, #32
 800d744:	3008      	adds	r0, #8
 800d746:	f007 ffa3 	bl	8015690 <memset>
 800d74a:	4b03      	ldr	r3, [pc, #12]	; (800d758 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800d74c:	62a3      	str	r3, [r4, #40]	; 0x28
 800d74e:	237f      	movs	r3, #127	; 0x7f
 800d750:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d754:	4620      	mov	r0, r4
 800d756:	bd10      	pop	{r4, pc}
 800d758:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800d75c <RDMDeviceParams::Load()>:
 800d75c:	4601      	mov	r1, r0
 800d75e:	6800      	ldr	r0, [r0, #0]
 800d760:	b130      	cbz	r0, 800d770 <RDMDeviceParams::Load()+0x14>
 800d762:	b508      	push	{r3, lr}
 800d764:	6803      	ldr	r3, [r0, #0]
 800d766:	3104      	adds	r1, #4
 800d768:	68db      	ldr	r3, [r3, #12]
 800d76a:	4798      	blx	r3
 800d76c:	2001      	movs	r0, #1
 800d76e:	bd08      	pop	{r3, pc}
 800d770:	4770      	bx	lr

0800d772 <RDMDeviceParams::Set(RDMDevice*)>:
 800d772:	6843      	ldr	r3, [r0, #4]
 800d774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d778:	460c      	mov	r4, r1
 800d77a:	07d9      	lsls	r1, r3, #31
 800d77c:	4605      	mov	r5, r0
 800d77e:	d518      	bpl.n	800d7b2 <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800d780:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800d784:	7823      	ldrb	r3, [r4, #0]
 800d786:	2e20      	cmp	r6, #32
 800d788:	f100 0108 	add.w	r1, r0, #8
 800d78c:	bf28      	it	cs
 800d78e:	2620      	movcs	r6, #32
 800d790:	b1f3      	cbz	r3, 800d7d0 <RDMDeviceParams::Set(RDMDevice*)+0x5e>
 800d792:	f104 070b 	add.w	r7, r4, #11
 800d796:	4638      	mov	r0, r7
 800d798:	4632      	mov	r2, r6
 800d79a:	f7ff ffcb 	bl	800d734 <memcpy.isra.0>
 800d79e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800d7a0:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
 800d7a4:	b128      	cbz	r0, 800d7b2 <RDMDeviceParams::Set(RDMDevice*)+0x40>
 800d7a6:	6802      	ldr	r2, [r0, #0]
 800d7a8:	4639      	mov	r1, r7
 800d7aa:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800d7ae:	4632      	mov	r2, r6
 800d7b0:	47c0      	blx	r8
 800d7b2:	686b      	ldr	r3, [r5, #4]
 800d7b4:	079a      	lsls	r2, r3, #30
 800d7b6:	bf44      	itt	mi
 800d7b8:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800d7bc:	f8a4 204e 	strhmi.w	r2, [r4, #78]	; 0x4e
 800d7c0:	075b      	lsls	r3, r3, #29
 800d7c2:	bf44      	itt	mi
 800d7c4:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800d7c8:	f8a4 3050 	strhmi.w	r3, [r4, #80]	; 0x50
 800d7cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7d0:	4632      	mov	r2, r6
 800d7d2:	f104 0052 	add.w	r0, r4, #82	; 0x52
 800d7d6:	f7ff ffad 	bl	800d734 <memcpy.isra.0>
 800d7da:	f884 6072 	strb.w	r6, [r4, #114]	; 0x72
 800d7de:	e7e8      	b.n	800d7b2 <RDMDeviceParams::Set(RDMDevice*)+0x40>

0800d7e0 <RDMDeviceParams::Dump()>:
 800d7e0:	4770      	bx	lr

0800d7e2 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800d7e2:	4770      	bx	lr

0800d7e4 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800d7e4:	4770      	bx	lr
	...

0800d7e8 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d7e8:	b510      	push	{r4, lr}
 800d7ea:	4b06      	ldr	r3, [pc, #24]	; (800d804 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800d7ec:	4604      	mov	r4, r0
 800d7ee:	f840 3b8c 	str.w	r3, [r0], #140
 800d7f2:	f7ff feef 	bl	800d5d4 <RDMSubDevices::~RDMSubDevices()>
 800d7f6:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800d7fa:	f7ff fecb 	bl	800d594 <RDMSensors::~RDMSensors()>
 800d7fe:	4620      	mov	r0, r4
 800d800:	bd10      	pop	{r4, pc}
 800d802:	bf00      	nop
 800d804:	0801929c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, pc}

0800d808 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d808:	b510      	push	{r4, lr}
 800d80a:	4604      	mov	r4, r0
 800d80c:	f7ff ffec 	bl	800d7e8 <RDMDeviceResponder::~RDMDeviceResponder()>
 800d810:	4620      	mov	r0, r4
 800d812:	f007 fe63 	bl	80154dc <operator delete(void*)>
 800d816:	4620      	mov	r0, r4
 800d818:	bd10      	pop	{r4, pc}
	...

0800d81c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800d81c:	b570      	push	{r4, r5, r6, lr}
 800d81e:	4604      	mov	r4, r0
 800d820:	3004      	adds	r0, #4
 800d822:	460e      	mov	r6, r1
 800d824:	4615      	mov	r5, r2
 800d826:	f000 fee1 	bl	800e5ec <RDMDevice::RDMDevice()>
 800d82a:	4620      	mov	r0, r4
 800d82c:	4b20      	ldr	r3, [pc, #128]	; (800d8b0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x94>)
 800d82e:	f840 3b80 	str.w	r3, [r0], #128
 800d832:	f000 fceb 	bl	800e20c <RDMIdentify::RDMIdentify()>
 800d836:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800d83a:	f7ff fea3 	bl	800d584 <RDMSensors::RDMSensors()>
 800d83e:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800d842:	f7ff febf 	bl	800d5c4 <RDMSubDevices::RDMSubDevices()>
 800d846:	4b1b      	ldr	r3, [pc, #108]	; (800d8b4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800d848:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800d84c:	601c      	str	r4, [r3, #0]
 800d84e:	2365      	movs	r3, #101	; 0x65
 800d850:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800d854:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800d858:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800d85c:	2301      	movs	r3, #1
 800d85e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800d862:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800d866:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800d86a:	2100      	movs	r1, #0
 800d86c:	4293      	cmp	r3, r2
 800d86e:	d119      	bne.n	800d8a4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800d870:	f104 02c3 	add.w	r2, r4, #195	; 0xc3
 800d874:	2100      	movs	r1, #0
 800d876:	4293      	cmp	r3, r2
 800d878:	d117      	bne.n	800d8aa <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8e>
 800d87a:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800d87e:	f7fc fa8d 	bl	8009d9c <RDMSoftwareVersion::GetVersion()>
 800d882:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800d886:	f7fc fa8d 	bl	8009da4 <RDMSoftwareVersion::GetVersionLength()>
 800d88a:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800d88e:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800d892:	681b      	ldr	r3, [r3, #0]
 800d894:	685b      	ldr	r3, [r3, #4]
 800d896:	b91b      	cbnz	r3, 800d8a0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x84>
 800d898:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d89c:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800d8a0:	4620      	mov	r0, r4
 800d8a2:	bd70      	pop	{r4, r5, r6, pc}
 800d8a4:	f803 1b01 	strb.w	r1, [r3], #1
 800d8a8:	e7e0      	b.n	800d86c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x50>
 800d8aa:	f803 1b01 	strb.w	r1, [r3], #1
 800d8ae:	e7e2      	b.n	800d876 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5a>
 800d8b0:	0801929c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, pc}
 800d8b4:	20000804 	andcs	r0, r0, r4, lsl #16

0800d8b8 <RDMDeviceResponder::Init()>:
 800d8b8:	b570      	push	{r4, r5, r6, lr}
 800d8ba:	2301      	movs	r3, #1
 800d8bc:	4604      	mov	r4, r0
 800d8be:	7103      	strb	r3, [r0, #4]
 800d8c0:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800d8c4:	2a20      	cmp	r2, #32
 800d8c6:	bf28      	it	cs
 800d8c8:	2220      	movcs	r2, #32
 800d8ca:	3056      	adds	r0, #86	; 0x56
 800d8cc:	f104 010f 	add.w	r1, r4, #15
 800d8d0:	4613      	mov	r3, r2
 800d8d2:	3b01      	subs	r3, #1
 800d8d4:	d25d      	bcs.n	800d992 <RDMDeviceResponder::Init()+0xda>
 800d8d6:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 800d8d8:	f884 202f 	strb.w	r2, [r4, #47]	; 0x2f
 800d8dc:	b110      	cbz	r0, 800d8e4 <RDMDeviceResponder::Init()+0x2c>
 800d8de:	6803      	ldr	r3, [r0, #0]
 800d8e0:	689b      	ldr	r3, [r3, #8]
 800d8e2:	4798      	blx	r3
 800d8e4:	f06f 050d 	mvn.w	r5, #13
 800d8e8:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800d8ec:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800d8f0:	f104 020e 	add.w	r2, r4, #14
 800d8f4:	1b2d      	subs	r5, r5, r4
 800d8f6:	18a9      	adds	r1, r5, r2
 800d8f8:	4288      	cmp	r0, r1
 800d8fa:	d84f      	bhi.n	800d99c <RDMDeviceResponder::Init()+0xe4>
 800d8fc:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800d900:	f7fc fa52 	bl	8009da8 <RDMSoftwareVersion::GetVersionId()>
 800d904:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800d908:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800d90c:	2201      	movs	r2, #1
 800d90e:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800d912:	2200      	movs	r2, #0
 800d914:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800d918:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800d91c:	0a1a      	lsrs	r2, r3, #8
 800d91e:	0e03      	lsrs	r3, r0, #24
 800d920:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800d924:	0c03      	lsrs	r3, r0, #16
 800d926:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800d92a:	0a03      	lsrs	r3, r0, #8
 800d92c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800d930:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800d934:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800d938:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800d93c:	681b      	ldr	r3, [r3, #0]
 800d93e:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800d942:	685d      	ldr	r5, [r3, #4]
 800d944:	bb7d      	cbnz	r5, 800d9a6 <RDMDeviceResponder::Init()+0xee>
 800d946:	f8b4 00c8 	ldrh.w	r0, [r4, #200]	; 0xc8
 800d94a:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800d94e:	0a03      	lsrs	r3, r0, #8
 800d950:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800d954:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800d958:	2301      	movs	r3, #1
 800d95a:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800d95e:	0a33      	lsrs	r3, r6, #8
 800d960:	b2c0      	uxtb	r0, r0
 800d962:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800d966:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800d96a:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800d96e:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800d972:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800d976:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800d97a:	f104 02b0 	add.w	r2, r4, #176	; 0xb0
 800d97e:	4293      	cmp	r3, r2
 800d980:	d12a      	bne.n	800d9d8 <RDMDeviceResponder::Init()+0x120>
 800d982:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800d986:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800d98a:	4413      	add	r3, r2
 800d98c:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800d990:	bd70      	pop	{r4, r5, r6, pc}
 800d992:	f810 5b01 	ldrb.w	r5, [r0], #1
 800d996:	f800 5c48 	strb.w	r5, [r0, #-72]
 800d99a:	e79a      	b.n	800d8d2 <RDMDeviceResponder::Init()+0x1a>
 800d99c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d9a0:	440b      	add	r3, r1
 800d9a2:	b29b      	uxth	r3, r3
 800d9a4:	e7a7      	b.n	800d8f6 <RDMDeviceResponder::Init()+0x3e>
 800d9a6:	682b      	ldr	r3, [r5, #0]
 800d9a8:	4628      	mov	r0, r5
 800d9aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d9ac:	4798      	blx	r3
 800d9ae:	0a00      	lsrs	r0, r0, #8
 800d9b0:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800d9b4:	682b      	ldr	r3, [r5, #0]
 800d9b6:	4628      	mov	r0, r5
 800d9b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d9ba:	4798      	blx	r3
 800d9bc:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800d9c0:	682b      	ldr	r3, [r5, #0]
 800d9c2:	4628      	mov	r0, r5
 800d9c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9c6:	4798      	blx	r3
 800d9c8:	0a00      	lsrs	r0, r0, #8
 800d9ca:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800d9ce:	682b      	ldr	r3, [r5, #0]
 800d9d0:	4628      	mov	r0, r5
 800d9d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9d4:	4798      	blx	r3
 800d9d6:	e7bf      	b.n	800d958 <RDMDeviceResponder::Init()+0xa0>
 800d9d8:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d9dc:	7499      	strb	r1, [r3, #18]
 800d9de:	e7ce      	b.n	800d97e <RDMDeviceResponder::Init()+0xc6>

0800d9e0 <RDMDeviceResponder::Print()>:
 800d9e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d9e2:	4604      	mov	r4, r0
 800d9e4:	3004      	adds	r0, #4
 800d9e6:	f000 fe75 	bl	800e6d4 <RDMDevice::Print()>
 800d9ea:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800d9ee:	481c      	ldr	r0, [pc, #112]	; (800da60 <RDMDeviceResponder::Print()+0x80>)
 800d9f0:	681d      	ldr	r5, [r3, #0]
 800d9f2:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800d9f4:	f7fc fcd2 	bl	800a39c <printf>
 800d9f8:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800d9fc:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800da00:	4818      	ldr	r0, [pc, #96]	; (800da64 <RDMDeviceResponder::Print()+0x84>)
 800da02:	f7fc fccb 	bl	800a39c <printf>
 800da06:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800da0a:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800da0e:	4816      	ldr	r0, [pc, #88]	; (800da68 <RDMDeviceResponder::Print()+0x88>)
 800da10:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800da14:	f7fc fcc2 	bl	800a39c <printf>
 800da18:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800da1c:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800da20:	4812      	ldr	r0, [pc, #72]	; (800da6c <RDMDeviceResponder::Print()+0x8c>)
 800da22:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800da26:	3508      	adds	r5, #8
 800da28:	f7fc fcb8 	bl	800a39c <printf>
 800da2c:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800da30:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800da34:	9500      	str	r5, [sp, #0]
 800da36:	b2f3      	uxtb	r3, r6
 800da38:	480d      	ldr	r0, [pc, #52]	; (800da70 <RDMDeviceResponder::Print()+0x90>)
 800da3a:	f7fc fcaf 	bl	800a39c <printf>
 800da3e:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800da42:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800da46:	480b      	ldr	r0, [pc, #44]	; (800da74 <RDMDeviceResponder::Print()+0x94>)
 800da48:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800da4c:	f7fc fca6 	bl	800a39c <printf>
 800da50:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800da54:	4808      	ldr	r0, [pc, #32]	; (800da78 <RDMDeviceResponder::Print()+0x98>)
 800da56:	b002      	add	sp, #8
 800da58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da5c:	f7fc bc9e 	b.w	800a39c <printf>
 800da60:	080191dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, ip, pc}
 800da64:	080191fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, pc}
 800da68:	08019213 	stmdaeq	r1, {r0, r1, r4, r9, ip, pc}
 800da6c:	0801922b 	stmdaeq	r1, {r0, r1, r3, r5, r9, ip, pc}
 800da70:	08019243 	stmdaeq	r1, {r0, r1, r6, r9, ip, pc}
 800da74:	08019261 	stmdaeq	r1, {r0, r5, r6, r9, ip, pc}
 800da78:	08019279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, ip, pc}

0800da7c <memcmp>:
 800da7c:	b510      	push	{r4, lr}
 800da7e:	3901      	subs	r1, #1
 800da80:	4402      	add	r2, r0
 800da82:	4290      	cmp	r0, r2
 800da84:	d101      	bne.n	800da8a <memcmp+0xe>
 800da86:	2000      	movs	r0, #0
 800da88:	e005      	b.n	800da96 <memcmp+0x1a>
 800da8a:	7803      	ldrb	r3, [r0, #0]
 800da8c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800da90:	42a3      	cmp	r3, r4
 800da92:	d001      	beq.n	800da98 <memcmp+0x1c>
 800da94:	1b18      	subs	r0, r3, r4
 800da96:	bd10      	pop	{r4, pc}
 800da98:	3001      	adds	r0, #1
 800da9a:	e7f2      	b.n	800da82 <memcmp+0x6>

0800da9c <memcpy.isra.0>:
 800da9c:	3801      	subs	r0, #1
 800da9e:	440a      	add	r2, r1
 800daa0:	4291      	cmp	r1, r2
 800daa2:	d100      	bne.n	800daa6 <memcpy.isra.0+0xa>
 800daa4:	4770      	bx	lr
 800daa6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800daaa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800daae:	e7f7      	b.n	800daa0 <memcpy.isra.0+0x4>

0800dab0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800dab0:	b570      	push	{r4, r5, r6, lr}
 800dab2:	790d      	ldrb	r5, [r1, #4]
 800dab4:	7803      	ldrb	r3, [r0, #0]
 800dab6:	6809      	ldr	r1, [r1, #0]
 800dab8:	2d20      	cmp	r5, #32
 800daba:	4604      	mov	r4, r0
 800dabc:	bf28      	it	cs
 800dabe:	2520      	movcs	r5, #32
 800dac0:	b18b      	cbz	r3, 800dae6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800dac2:	f100 060b 	add.w	r6, r0, #11
 800dac6:	4630      	mov	r0, r6
 800dac8:	462a      	mov	r2, r5
 800daca:	f7ff ffe7 	bl	800da9c <memcpy.isra.0>
 800dace:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800dad0:	f884 502b 	strb.w	r5, [r4, #43]	; 0x2b
 800dad4:	b168      	cbz	r0, 800daf2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800dad6:	6802      	ldr	r2, [r0, #0]
 800dad8:	6894      	ldr	r4, [r2, #8]
 800dada:	4631      	mov	r1, r6
 800dadc:	462a      	mov	r2, r5
 800dade:	4623      	mov	r3, r4
 800dae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dae4:	4718      	bx	r3
 800dae6:	462a      	mov	r2, r5
 800dae8:	3052      	adds	r0, #82	; 0x52
 800daea:	f7ff ffd7 	bl	800da9c <memcpy.isra.0>
 800daee:	f884 5072 	strb.w	r5, [r4, #114]	; 0x72
 800daf2:	bd70      	pop	{r4, r5, r6, pc}

0800daf4 <RDMDeviceResponder::SetFactoryDefaults()>:
 800daf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800daf6:	f100 0356 	add.w	r3, r0, #86	; 0x56
 800dafa:	4604      	mov	r4, r0
 800dafc:	9300      	str	r3, [sp, #0]
 800dafe:	4669      	mov	r1, sp
 800db00:	f890 3076 	ldrb.w	r3, [r0, #118]	; 0x76
 800db04:	f88d 3004 	strb.w	r3, [sp, #4]
 800db08:	3004      	adds	r0, #4
 800db0a:	f7ff ffd1 	bl	800dab0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800db0e:	f06f 050d 	mvn.w	r5, #13
 800db12:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800db16:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800db1a:	f104 020e 	add.w	r2, r4, #14
 800db1e:	1b2d      	subs	r5, r5, r4
 800db20:	18a8      	adds	r0, r5, r2
 800db22:	4288      	cmp	r0, r1
 800db24:	d361      	bcc.n	800dbea <RDMDeviceResponder::SetFactoryDefaults()+0xf6>
 800db26:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800db2a:	2301      	movs	r3, #1
 800db2c:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800db30:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800db34:	681b      	ldr	r3, [r3, #0]
 800db36:	685d      	ldr	r5, [r3, #4]
 800db38:	b1f5      	cbz	r5, 800db78 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800db3a:	682b      	ldr	r3, [r5, #0]
 800db3c:	4628      	mov	r0, r5
 800db3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db40:	4798      	blx	r3
 800db42:	0a00      	lsrs	r0, r0, #8
 800db44:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800db48:	682b      	ldr	r3, [r5, #0]
 800db4a:	4628      	mov	r0, r5
 800db4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db4e:	4798      	blx	r3
 800db50:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800db54:	682b      	ldr	r3, [r5, #0]
 800db56:	4628      	mov	r0, r5
 800db58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800db5a:	4798      	blx	r3
 800db5c:	0a00      	lsrs	r0, r0, #8
 800db5e:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800db62:	682b      	ldr	r3, [r5, #0]
 800db64:	4628      	mov	r0, r5
 800db66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800db68:	4798      	blx	r3
 800db6a:	6823      	ldr	r3, [r4, #0]
 800db6c:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800db70:	689b      	ldr	r3, [r3, #8]
 800db72:	4629      	mov	r1, r5
 800db74:	4620      	mov	r0, r4
 800db76:	4798      	blx	r3
 800db78:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800db7c:	1e6b      	subs	r3, r5, #1
 800db7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800db82:	d218      	bcs.n	800dbb6 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800db84:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800db88:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800db8c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800db90:	3b01      	subs	r3, #1
 800db92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800db96:	6858      	ldr	r0, [r3, #4]
 800db98:	b168      	cbz	r0, 800dbb6 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800db9a:	6803      	ldr	r3, [r0, #0]
 800db9c:	4629      	mov	r1, r5
 800db9e:	6a1b      	ldr	r3, [r3, #32]
 800dba0:	4798      	blx	r3
 800dba2:	b120      	cbz	r0, 800dbae <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800dba4:	0a2b      	lsrs	r3, r5, #8
 800dba6:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800dbaa:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800dbae:	6823      	ldr	r3, [r4, #0]
 800dbb0:	4620      	mov	r0, r4
 800dbb2:	68db      	ldr	r3, [r3, #12]
 800dbb4:	4798      	blx	r3
 800dbb6:	2213      	movs	r2, #19
 800dbb8:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800dbbc:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800dbc0:	f7ff ff6c 	bl	800da9c <memcpy.isra.0>
 800dbc4:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800dbc8:	f7ff fd4e 	bl	800d668 <RDMSubDevices::SetFactoryDefaults()>
 800dbcc:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800dbd0:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800dbd4:	4413      	add	r3, r2
 800dbd6:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800dbda:	2301      	movs	r3, #1
 800dbdc:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800dbe0:	b003      	add	sp, #12
 800dbe2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dbe6:	f7fc b8c1 	b.w	8009d6c <rdm::device::responder::factorydefaults()>
 800dbea:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800dbee:	4403      	add	r3, r0
 800dbf0:	b29b      	uxth	r3, r3
 800dbf2:	e795      	b.n	800db20 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>

0800dbf4 <RDMHandler::RDMHandler(bool)>:
 800dbf4:	2200      	movs	r2, #0
 800dbf6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800dbfa:	7001      	strb	r1, [r0, #0]
 800dbfc:	7042      	strb	r2, [r0, #1]
 800dbfe:	4770      	bx	lr

0800dc00 <RDMHandler::HandleString(char const*, unsigned int)>:
 800dc00:	6883      	ldr	r3, [r0, #8]
 800dc02:	f803 2f17 	strb.w	r2, [r3, #23]!
 800dc06:	440a      	add	r2, r1
 800dc08:	4291      	cmp	r1, r2
 800dc0a:	d100      	bne.n	800dc0e <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800dc0c:	4770      	bx	lr
 800dc0e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800dc12:	f803 0f01 	strb.w	r0, [r3, #1]!
 800dc16:	e7f7      	b.n	800dc08 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800dc18 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800dc18:	b570      	push	{r4, r5, r6, lr}
 800dc1a:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800dc1e:	25cc      	movs	r5, #204	; 0xcc
 800dc20:	701d      	strb	r5, [r3, #0]
 800dc22:	7825      	ldrb	r5, [r4, #0]
 800dc24:	705d      	strb	r5, [r3, #1]
 800dc26:	7ba5      	ldrb	r5, [r4, #14]
 800dc28:	73dd      	strb	r5, [r3, #15]
 800dc2a:	2500      	movs	r5, #0
 800dc2c:	745d      	strb	r5, [r3, #17]
 800dc2e:	7c65      	ldrb	r5, [r4, #17]
 800dc30:	749d      	strb	r5, [r3, #18]
 800dc32:	7ca5      	ldrb	r5, [r4, #18]
 800dc34:	74dd      	strb	r5, [r3, #19]
 800dc36:	7ce5      	ldrb	r5, [r4, #19]
 800dc38:	3501      	adds	r5, #1
 800dc3a:	751d      	strb	r5, [r3, #20]
 800dc3c:	7d25      	ldrb	r5, [r4, #20]
 800dc3e:	755d      	strb	r5, [r3, #21]
 800dc40:	7d65      	ldrb	r5, [r4, #21]
 800dc42:	759d      	strb	r5, [r3, #22]
 800dc44:	b119      	cbz	r1, 800dc4e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800dc46:	1e4d      	subs	r5, r1, #1
 800dc48:	2d01      	cmp	r5, #1
 800dc4a:	d921      	bls.n	800dc90 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800dc4c:	bd70      	pop	{r4, r5, r6, pc}
 800dc4e:	7dda      	ldrb	r2, [r3, #23]
 800dc50:	7419      	strb	r1, [r3, #16]
 800dc52:	3218      	adds	r2, #24
 800dc54:	709a      	strb	r2, [r3, #2]
 800dc56:	4a15      	ldr	r2, [pc, #84]	; (800dcac <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800dc58:	6812      	ldr	r2, [r2, #0]
 800dc5a:	1de1      	adds	r1, r4, #7
 800dc5c:	1c9d      	adds	r5, r3, #2
 800dc5e:	3204      	adds	r2, #4
 800dc60:	340d      	adds	r4, #13
 800dc62:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800dc66:	f805 6f01 	strb.w	r6, [r5, #1]!
 800dc6a:	42a1      	cmp	r1, r4
 800dc6c:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800dc70:	71ae      	strb	r6, [r5, #6]
 800dc72:	d1f6      	bne.n	800dc62 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800dc74:	2200      	movs	r2, #0
 800dc76:	6884      	ldr	r4, [r0, #8]
 800dc78:	7899      	ldrb	r1, [r3, #2]
 800dc7a:	4613      	mov	r3, r2
 800dc7c:	428a      	cmp	r2, r1
 800dc7e:	eb04 0502 	add.w	r5, r4, r2
 800dc82:	d30e      	bcc.n	800dca2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800dc84:	0a1a      	lsrs	r2, r3, #8
 800dc86:	702a      	strb	r2, [r5, #0]
 800dc88:	6882      	ldr	r2, [r0, #8]
 800dc8a:	440a      	add	r2, r1
 800dc8c:	7053      	strb	r3, [r2, #1]
 800dc8e:	e7dd      	b.n	800dc4c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800dc90:	7419      	strb	r1, [r3, #16]
 800dc92:	2102      	movs	r1, #2
 800dc94:	251a      	movs	r5, #26
 800dc96:	75d9      	strb	r1, [r3, #23]
 800dc98:	0a11      	lsrs	r1, r2, #8
 800dc9a:	709d      	strb	r5, [r3, #2]
 800dc9c:	7619      	strb	r1, [r3, #24]
 800dc9e:	765a      	strb	r2, [r3, #25]
 800dca0:	e7d9      	b.n	800dc56 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800dca2:	5ca5      	ldrb	r5, [r4, r2]
 800dca4:	442b      	add	r3, r5
 800dca6:	b29b      	uxth	r3, r3
 800dca8:	3201      	adds	r2, #1
 800dcaa:	e7e7      	b.n	800dc7c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800dcac:	20000804 	andcs	r0, r0, r4, lsl #16

0800dcb0 <RDMHandler::RespondMessageAck()>:
 800dcb0:	6843      	ldr	r3, [r0, #4]
 800dcb2:	7d9a      	ldrb	r2, [r3, #22]
 800dcb4:	b90a      	cbnz	r2, 800dcba <RDMHandler::RespondMessageAck()+0xa>
 800dcb6:	2218      	movs	r2, #24
 800dcb8:	705a      	strb	r2, [r3, #1]
 800dcba:	2200      	movs	r2, #0
 800dcbc:	4611      	mov	r1, r2
 800dcbe:	f7ff bfab 	b.w	800dc18 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800dcc4 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800dcc4:	b538      	push	{r3, r4, r5, lr}
 800dcc6:	4b18      	ldr	r3, [pc, #96]	; (800dd28 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800dcc8:	4605      	mov	r5, r0
 800dcca:	681c      	ldr	r4, [r3, #0]
 800dccc:	b349      	cbz	r1, 800dd22 <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800dcce:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800dcd2:	f7ff fc97 	bl	800d604 <RDMSubDevices::GetInfo(unsigned short)>
 800dcd6:	b1b8      	cbz	r0, 800dd08 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800dcd8:	8803      	ldrh	r3, [r0, #0]
 800dcda:	0a1b      	lsrs	r3, r3, #8
 800dcdc:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800dce0:	8803      	ldrh	r3, [r0, #0]
 800dce2:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800dce6:	7903      	ldrb	r3, [r0, #4]
 800dce8:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800dcec:	7943      	ldrb	r3, [r0, #5]
 800dcee:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800dcf2:	8843      	ldrh	r3, [r0, #2]
 800dcf4:	0a1b      	lsrs	r3, r3, #8
 800dcf6:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800dcfa:	8843      	ldrh	r3, [r0, #2]
 800dcfc:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800dd00:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800dd04:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800dd08:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800dd0c:	68a8      	ldr	r0, [r5, #8]
 800dd0e:	2213      	movs	r2, #19
 800dd10:	75c2      	strb	r2, [r0, #23]
 800dd12:	3018      	adds	r0, #24
 800dd14:	f7ff fec2 	bl	800da9c <memcpy.isra.0>
 800dd18:	4628      	mov	r0, r5
 800dd1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dd1e:	f7ff bfc7 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800dd22:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800dd26:	e7f1      	b.n	800dd0c <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800dd28:	20000804 	andcs	r0, r0, r4, lsl #16

0800dd2c <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800dd2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd2e:	6886      	ldr	r6, [r0, #8]
 800dd30:	2301      	movs	r3, #1
 800dd32:	75f3      	strb	r3, [r6, #23]
 800dd34:	4b1c      	ldr	r3, [pc, #112]	; (800dda8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800dd36:	681c      	ldr	r4, [r3, #0]
 800dd38:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800dd3c:	4605      	mov	r5, r0
 800dd3e:	b37b      	cbz	r3, 800dda0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800dd40:	f06f 0c0d 	mvn.w	ip, #13
 800dd44:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800dd48:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800dd4c:	f894 002f 	ldrb.w	r0, [r4, #47]	; 0x2f
 800dd50:	f104 020e 	add.w	r2, r4, #14
 800dd54:	ebac 0c04 	sub.w	ip, ip, r4
 800dd58:	eb0c 0702 	add.w	r7, ip, r2
 800dd5c:	4287      	cmp	r7, r0
 800dd5e:	d30a      	bcc.n	800dd76 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800dd60:	4299      	cmp	r1, r3
 800dd62:	d00d      	beq.n	800dd80 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800dd64:	2300      	movs	r3, #0
 800dd66:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800dd6a:	7633      	strb	r3, [r6, #24]
 800dd6c:	4628      	mov	r0, r5
 800dd6e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dd72:	f7ff bf9d 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800dd76:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800dd7a:	443b      	add	r3, r7
 800dd7c:	b29b      	uxth	r3, r3
 800dd7e:	e7eb      	b.n	800dd58 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800dd80:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800dd84:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800dd88:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800dd8c:	440b      	add	r3, r1
 800dd8e:	429a      	cmp	r2, r3
 800dd90:	d1e8      	bne.n	800dd64 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800dd92:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800dd96:	f7ff fc54 	bl	800d642 <RDMSubDevices::GetFactoryDefaults()>
 800dd9a:	4603      	mov	r3, r0
 800dd9c:	2800      	cmp	r0, #0
 800dd9e:	d0e2      	beq.n	800dd66 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800dda0:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800dda4:	e7e1      	b.n	800dd6a <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800dda6:	bf00      	nop
 800dda8:	20000804 	andcs	r0, r0, r4, lsl #16

0800ddac <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800ddac:	b510      	push	{r4, lr}
 800ddae:	4905      	ldr	r1, [pc, #20]	; (800ddc4 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800ddb0:	4604      	mov	r4, r0
 800ddb2:	220a      	movs	r2, #10
 800ddb4:	f7ff ff24 	bl	800dc00 <RDMHandler::HandleString(char const*, unsigned int)>
 800ddb8:	4620      	mov	r0, r4
 800ddba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ddbe:	f7ff bf77 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800ddc2:	bf00      	nop
 800ddc4:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}

0800ddc8 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800ddc8:	b510      	push	{r4, lr}
 800ddca:	4b06      	ldr	r3, [pc, #24]	; (800dde4 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800ddcc:	6819      	ldr	r1, [r3, #0]
 800ddce:	4604      	mov	r4, r0
 800ddd0:	f891 2050 	ldrb.w	r2, [r1, #80]	; 0x50
 800ddd4:	3130      	adds	r1, #48	; 0x30
 800ddd6:	f7ff ff13 	bl	800dc00 <RDMHandler::HandleString(char const*, unsigned int)>
 800ddda:	4620      	mov	r0, r4
 800dddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dde0:	f7ff bf66 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800dde4:	20000804 	andcs	r0, r0, r4, lsl #16

0800dde8 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800dde8:	4b0d      	ldr	r3, [pc, #52]	; (800de20 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800ddea:	b513      	push	{r0, r1, r4, lr}
 800ddec:	4604      	mov	r4, r0
 800ddee:	6818      	ldr	r0, [r3, #0]
 800ddf0:	b171      	cbz	r1, 800de10 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800ddf2:	466a      	mov	r2, sp
 800ddf4:	308c      	adds	r0, #140	; 0x8c
 800ddf6:	f7ff fc0d 	bl	800d614 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800ddfa:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800ddfe:	9900      	ldr	r1, [sp, #0]
 800de00:	4620      	mov	r0, r4
 800de02:	f7ff fefd 	bl	800dc00 <RDMHandler::HandleString(char const*, unsigned int)>
 800de06:	4620      	mov	r0, r4
 800de08:	f7ff ff52 	bl	800dcb0 <RDMHandler::RespondMessageAck()>
 800de0c:	b002      	add	sp, #8
 800de0e:	bd10      	pop	{r4, pc}
 800de10:	f100 030f 	add.w	r3, r0, #15
 800de14:	9300      	str	r3, [sp, #0]
 800de16:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800de1a:	f88d 3004 	strb.w	r3, [sp, #4]
 800de1e:	e7ec      	b.n	800ddfa <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800de20:	20000804 	andcs	r0, r0, r4, lsl #16

0800de24 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800de24:	6883      	ldr	r3, [r0, #8]
 800de26:	2201      	movs	r2, #1
 800de28:	75da      	strb	r2, [r3, #23]
 800de2a:	4a02      	ldr	r2, [pc, #8]	; (800de34 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800de2c:	7812      	ldrb	r2, [r2, #0]
 800de2e:	761a      	strb	r2, [r3, #24]
 800de30:	f7ff bf3e 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800de34:	20000808 	andcs	r0, r0, r8, lsl #16

0800de38 <RDMHandler::RespondMessageNack(unsigned short)>:
 800de38:	460a      	mov	r2, r1
 800de3a:	2102      	movs	r1, #2
 800de3c:	f7ff beec 	b.w	800dc18 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800de40 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800de40:	b510      	push	{r4, lr}
 800de42:	6843      	ldr	r3, [r0, #4]
 800de44:	7d9a      	ldrb	r2, [r3, #22]
 800de46:	2a01      	cmp	r2, #1
 800de48:	4604      	mov	r4, r0
 800de4a:	d004      	beq.n	800de56 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800de4c:	2101      	movs	r1, #1
 800de4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de52:	f7ff bff1 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800de56:	7ddb      	ldrb	r3, [r3, #23]
 800de58:	2b01      	cmp	r3, #1
 800de5a:	d003      	beq.n	800de64 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800de5c:	2bff      	cmp	r3, #255	; 0xff
 800de5e:	d001      	beq.n	800de64 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800de60:	2106      	movs	r1, #6
 800de62:	e7f4      	b.n	800de4e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800de64:	68a2      	ldr	r2, [r4, #8]
 800de66:	2100      	movs	r1, #0
 800de68:	2bff      	cmp	r3, #255	; 0xff
 800de6a:	75d1      	strb	r1, [r2, #23]
 800de6c:	d102      	bne.n	800de74 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800de6e:	2104      	movs	r1, #4
 800de70:	4620      	mov	r0, r4
 800de72:	e7ec      	b.n	800de4e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800de74:	4b03      	ldr	r3, [pc, #12]	; (800de84 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800de76:	6818      	ldr	r0, [r3, #0]
 800de78:	f007 faf2 	bl	8015460 <Hardware::Reboot()>
 800de7c:	2800      	cmp	r0, #0
 800de7e:	d0f6      	beq.n	800de6e <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800de80:	bd10      	pop	{r4, pc}
 800de82:	bf00      	nop
 800de84:	2000fd80 	andcs	pc, r0, r0, lsl #27

0800de88 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800de88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de8a:	6843      	ldr	r3, [r0, #4]
 800de8c:	460d      	mov	r5, r1
 800de8e:	7d99      	ldrb	r1, [r3, #22]
 800de90:	2901      	cmp	r1, #1
 800de92:	4604      	mov	r4, r0
 800de94:	d004      	beq.n	800dea0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800de96:	2101      	movs	r1, #1
 800de98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800de9c:	f7ff bfcc 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800dea0:	7ddb      	ldrb	r3, [r3, #23]
 800dea2:	2b01      	cmp	r3, #1
 800dea4:	d901      	bls.n	800deaa <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800dea6:	2106      	movs	r1, #6
 800dea8:	e7f6      	b.n	800de98 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800deaa:	4a12      	ldr	r2, [pc, #72]	; (800def4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800deac:	4f12      	ldr	r7, [pc, #72]	; (800def8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800deae:	6816      	ldr	r6, [r2, #0]
 800deb0:	4a12      	ldr	r2, [pc, #72]	; (800defc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800deb2:	6810      	ldr	r0, [r2, #0]
 800deb4:	4a12      	ldr	r2, [pc, #72]	; (800df00 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800deb6:	b983      	cbnz	r3, 800deda <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800deb8:	2102      	movs	r1, #2
 800deba:	7013      	strb	r3, [r2, #0]
 800debc:	f007 fa12 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800dec0:	7839      	ldrb	r1, [r7, #0]
 800dec2:	b111      	cbz	r1, 800deca <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dec4:	4630      	mov	r0, r6
 800dec6:	f000 f9a8 	bl	800e21a <RDMIdentify::Off(rdm::identify::Mode)>
 800deca:	b98d      	cbnz	r5, 800def0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800decc:	68a3      	ldr	r3, [r4, #8]
 800dece:	75dd      	strb	r5, [r3, #23]
 800ded0:	4620      	mov	r0, r4
 800ded2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ded6:	f7ff beeb 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800deda:	7011      	strb	r1, [r2, #0]
 800dedc:	2104      	movs	r1, #4
 800dede:	f007 fa01 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 800dee2:	7839      	ldrb	r1, [r7, #0]
 800dee4:	2900      	cmp	r1, #0
 800dee6:	d0f0      	beq.n	800deca <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dee8:	4630      	mov	r0, r6
 800deea:	f000 f995 	bl	800e218 <RDMIdentify::On(rdm::identify::Mode)>
 800deee:	e7ec      	b.n	800deca <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800def0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800def2:	bf00      	nop
 800def4:	2000080c 	andcs	r0, r0, ip, lsl #16
 800def8:	20000809 	andcs	r0, r0, r9, lsl #16
 800defc:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 800df00:	20000808 	andcs	r0, r0, r8, lsl #16

0800df04 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800df04:	b538      	push	{r3, r4, r5, lr}
 800df06:	6843      	ldr	r3, [r0, #4]
 800df08:	7d9b      	ldrb	r3, [r3, #22]
 800df0a:	4604      	mov	r4, r0
 800df0c:	460d      	mov	r5, r1
 800df0e:	b123      	cbz	r3, 800df1a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800df10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800df14:	2101      	movs	r1, #1
 800df16:	f7ff bf8f 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800df1a:	4b06      	ldr	r3, [pc, #24]	; (800df34 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800df1c:	6818      	ldr	r0, [r3, #0]
 800df1e:	f7ff fde9 	bl	800daf4 <RDMDeviceResponder::SetFactoryDefaults()>
 800df22:	b935      	cbnz	r5, 800df32 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800df24:	68a3      	ldr	r3, [r4, #8]
 800df26:	75dd      	strb	r5, [r3, #23]
 800df28:	4620      	mov	r0, r4
 800df2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800df2e:	f7ff bebf 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800df32:	bd38      	pop	{r3, r4, r5, pc}
 800df34:	20000804 	andcs	r0, r0, r4, lsl #16

0800df38 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800df38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800df3a:	6845      	ldr	r5, [r0, #4]
 800df3c:	7dab      	ldrb	r3, [r5, #22]
 800df3e:	2b20      	cmp	r3, #32
 800df40:	460e      	mov	r6, r1
 800df42:	4604      	mov	r4, r0
 800df44:	4611      	mov	r1, r2
 800df46:	d905      	bls.n	800df54 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800df48:	2101      	movs	r1, #1
 800df4a:	b002      	add	sp, #8
 800df4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df50:	f7ff bf72 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800df54:	4a0d      	ldr	r2, [pc, #52]	; (800df8c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800df56:	6810      	ldr	r0, [r2, #0]
 800df58:	f105 0217 	add.w	r2, r5, #23
 800df5c:	b159      	cbz	r1, 800df76 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800df5e:	308c      	adds	r0, #140	; 0x8c
 800df60:	f7ff fb61 	bl	800d626 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800df64:	b97e      	cbnz	r6, 800df86 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800df66:	68a3      	ldr	r3, [r4, #8]
 800df68:	4620      	mov	r0, r4
 800df6a:	75de      	strb	r6, [r3, #23]
 800df6c:	b002      	add	sp, #8
 800df6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df72:	f7ff be9d 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800df76:	4669      	mov	r1, sp
 800df78:	3004      	adds	r0, #4
 800df7a:	9200      	str	r2, [sp, #0]
 800df7c:	f88d 3004 	strb.w	r3, [sp, #4]
 800df80:	f7ff fd96 	bl	800dab0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800df84:	e7ee      	b.n	800df64 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800df86:	b002      	add	sp, #8
 800df88:	bd70      	pop	{r4, r5, r6, pc}
 800df8a:	bf00      	nop
 800df8c:	20000804 	andcs	r0, r0, r4, lsl #16

0800df90 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800df90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df94:	4616      	mov	r6, r2
 800df96:	4604      	mov	r4, r0
 800df98:	f006 00ef 	and.w	r0, r6, #239	; 0xef
 800df9c:	2700      	movs	r7, #0
 800df9e:	2820      	cmp	r0, #32
 800dfa0:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800dfa4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800dfa8:	46be      	mov	lr, r7
 800dfaa:	d005      	beq.n	800dfb8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
 800dfac:	2105      	movs	r1, #5
 800dfae:	4620      	mov	r0, r4
 800dfb0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dfb4:	f7ff bf40 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800dfb8:	482b      	ldr	r0, [pc, #172]	; (800e068 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd8>)
 800dfba:	6800      	ldr	r0, [r0, #0]
 800dfbc:	8880      	ldrh	r0, [r0, #4]
 800dfbe:	4290      	cmp	r0, r2
 800dfc0:	d205      	bcs.n	800dfce <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800dfc2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800dfc6:	4282      	cmp	r2, r0
 800dfc8:	d001      	beq.n	800dfce <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800dfca:	2109      	movs	r1, #9
 800dfcc:	e7ef      	b.n	800dfae <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800dfce:	4d27      	ldr	r5, [pc, #156]	; (800e06c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800dfd0:	f04f 0c14 	mov.w	ip, #20
 800dfd4:	2000      	movs	r0, #0
 800dfd6:	f8b5 9000 	ldrh.w	r9, [r5]
 800dfda:	4599      	cmp	r9, r3
 800dfdc:	bf02      	ittt	eq
 800dfde:	7daf      	ldrbeq	r7, [r5, #22]
 800dfe0:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800dfe4:	4628      	moveq	r0, r5
 800dfe6:	f1bc 0c01 	subs.w	ip, ip, #1
 800dfea:	f105 0518 	add.w	r5, r5, #24
 800dfee:	d1f2      	bne.n	800dfd6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x46>
 800dff0:	b908      	cbnz	r0, 800dff6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x66>
 800dff2:	2100      	movs	r1, #0
 800dff4:	e7db      	b.n	800dfae <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800dff6:	7823      	ldrb	r3, [r4, #0]
 800dff8:	b193      	cbz	r3, 800e020 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
 800dffa:	2f00      	cmp	r7, #0
 800dffc:	d0f9      	beq.n	800dff2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800dffe:	2e20      	cmp	r6, #32
 800e000:	d11f      	bne.n	800e042 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800e002:	bb71      	cbnz	r1, 800e062 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd2>
 800e004:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e008:	429a      	cmp	r2, r3
 800e00a:	d0de      	beq.n	800dfca <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800e00c:	6843      	ldr	r3, [r0, #4]
 800e00e:	b913      	cbnz	r3, 800e016 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x86>
 800e010:	6881      	ldr	r1, [r0, #8]
 800e012:	07cd      	lsls	r5, r1, #31
 800e014:	d5ca      	bpl.n	800dfac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e016:	7d01      	ldrb	r1, [r0, #20]
 800e018:	4541      	cmp	r1, r8
 800e01a:	d005      	beq.n	800e028 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x98>
 800e01c:	2101      	movs	r1, #1
 800e01e:	e7c6      	b.n	800dfae <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e020:	f1be 0f00 	cmp.w	lr, #0
 800e024:	d1eb      	bne.n	800dffe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6e>
 800e026:	e7e4      	b.n	800dff2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e028:	6881      	ldr	r1, [r0, #8]
 800e02a:	104d      	asrs	r5, r1, #1
 800e02c:	eb04 0061 	add.w	r0, r4, r1, asr #1
 800e030:	07c9      	lsls	r1, r1, #31
 800e032:	bf48      	it	mi
 800e034:	5961      	ldrmi	r1, [r4, r5]
 800e036:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e03a:	bf48      	it	mi
 800e03c:	58cb      	ldrmi	r3, [r1, r3]
 800e03e:	4611      	mov	r1, r2
 800e040:	4718      	bx	r3
 800e042:	e9d0 3003 	ldrd	r3, r0, [r0, #12]
 800e046:	f000 0501 	and.w	r5, r0, #1
 800e04a:	b90b      	cbnz	r3, 800e050 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800e04c:	2d00      	cmp	r5, #0
 800e04e:	d0ad      	beq.n	800dfac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e050:	1046      	asrs	r6, r0, #1
 800e052:	eb04 0060 	add.w	r0, r4, r0, asr #1
 800e056:	b10d      	cbz	r5, 800e05c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800e058:	59a4      	ldr	r4, [r4, r6]
 800e05a:	58e3      	ldr	r3, [r4, r3]
 800e05c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e060:	4718      	bx	r3
 800e062:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e066:	bf00      	nop
 800e068:	20000800 	andcs	r0, r0, r0, lsl #16
 800e06c:	080192b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, pc}

0800e070 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800e070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e074:	23ff      	movs	r3, #255	; 0xff
 800e076:	7013      	strb	r3, [r2, #0]
 800e078:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e07c:	b085      	sub	sp, #20
 800e07e:	7ccb      	ldrb	r3, [r1, #19]
 800e080:	7d4f      	ldrb	r7, [r1, #21]
 800e082:	9303      	str	r3, [sp, #12]
 800e084:	7d0b      	ldrb	r3, [r1, #20]
 800e086:	f101 0a02 	add.w	sl, r1, #2
 800e08a:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800e08e:	4b5c      	ldr	r3, [pc, #368]	; (800e200 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800e090:	4606      	mov	r6, r0
 800e092:	460d      	mov	r5, r1
 800e094:	4614      	mov	r4, r2
 800e096:	495b      	ldr	r1, [pc, #364]	; (800e204 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e098:	f8d3 8000 	ldr.w	r8, [r3]
 800e09c:	2206      	movs	r2, #6
 800e09e:	4650      	mov	r0, sl
 800e0a0:	f7ff fcec 	bl	800da7c <memcmp>
 800e0a4:	f108 0905 	add.w	r9, r8, #5
 800e0a8:	4683      	mov	fp, r0
 800e0aa:	2202      	movs	r2, #2
 800e0ac:	4649      	mov	r1, r9
 800e0ae:	4650      	mov	r0, sl
 800e0b0:	b2bf      	uxth	r7, r7
 800e0b2:	f7ff fce3 	bl	800da7c <memcmp>
 800e0b6:	b928      	cbnz	r0, 800e0c4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800e0b8:	2204      	movs	r2, #4
 800e0ba:	4952      	ldr	r1, [pc, #328]	; (800e204 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e0bc:	18a8      	adds	r0, r5, r2
 800e0be:	f7ff fcdd 	bl	800da7c <memcmp>
 800e0c2:	b158      	cbz	r0, 800e0dc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800e0c4:	2206      	movs	r2, #6
 800e0c6:	4649      	mov	r1, r9
 800e0c8:	4650      	mov	r0, sl
 800e0ca:	f7ff fcd7 	bl	800da7c <memcmp>
 800e0ce:	b130      	cbz	r0, 800e0de <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800e0d0:	f1bb 0f00 	cmp.w	fp, #0
 800e0d4:	d04b      	beq.n	800e16e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800e0d6:	b005      	add	sp, #20
 800e0d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0dc:	2001      	movs	r0, #1
 800e0de:	2301      	movs	r3, #1
 800e0e0:	9a03      	ldr	r2, [sp, #12]
 800e0e2:	2a10      	cmp	r2, #16
 800e0e4:	d177      	bne.n	800e1d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800e0e6:	2f01      	cmp	r7, #1
 800e0e8:	d144      	bne.n	800e174 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800e0ea:	7873      	ldrb	r3, [r6, #1]
 800e0ec:	2b00      	cmp	r3, #0
 800e0ee:	d1f2      	bne.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e0f0:	2206      	movs	r2, #6
 800e0f2:	4649      	mov	r1, r9
 800e0f4:	f105 0017 	add.w	r0, r5, #23
 800e0f8:	f7ff fcc0 	bl	800da7c <memcmp>
 800e0fc:	2800      	cmp	r0, #0
 800e0fe:	dcea      	bgt.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e100:	2206      	movs	r2, #6
 800e102:	f105 011d 	add.w	r1, r5, #29
 800e106:	4648      	mov	r0, r9
 800e108:	f7ff fcb8 	bl	800da7c <memcmp>
 800e10c:	2800      	cmp	r0, #0
 800e10e:	dce2      	bgt.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e110:	23fe      	movs	r3, #254	; 0xfe
 800e112:	7023      	strb	r3, [r4, #0]
 800e114:	7063      	strb	r3, [r4, #1]
 800e116:	70a3      	strb	r3, [r4, #2]
 800e118:	70e3      	strb	r3, [r4, #3]
 800e11a:	7123      	strb	r3, [r4, #4]
 800e11c:	7163      	strb	r3, [r4, #5]
 800e11e:	71a3      	strb	r3, [r4, #6]
 800e120:	23aa      	movs	r3, #170	; 0xaa
 800e122:	71e3      	strb	r3, [r4, #7]
 800e124:	f108 0204 	add.w	r2, r8, #4
 800e128:	4621      	mov	r1, r4
 800e12a:	f108 080a 	add.w	r8, r8, #10
 800e12e:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800e132:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e136:	f060 0055 	orn	r0, r0, #85	; 0x55
 800e13a:	7208      	strb	r0, [r1, #8]
 800e13c:	7810      	ldrb	r0, [r2, #0]
 800e13e:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800e142:	7248      	strb	r0, [r1, #9]
 800e144:	7810      	ldrb	r0, [r2, #0]
 800e146:	4542      	cmp	r2, r8
 800e148:	4403      	add	r3, r0
 800e14a:	b29b      	uxth	r3, r3
 800e14c:	f101 0102 	add.w	r1, r1, #2
 800e150:	d1ef      	bne.n	800e132 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc2>
 800e152:	0a1a      	lsrs	r2, r3, #8
 800e154:	f062 0155 	orn	r1, r2, #85	; 0x55
 800e158:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800e15c:	7562      	strb	r2, [r4, #21]
 800e15e:	f063 0255 	orn	r2, r3, #85	; 0x55
 800e162:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800e166:	7521      	strb	r1, [r4, #20]
 800e168:	75a2      	strb	r2, [r4, #22]
 800e16a:	75e3      	strb	r3, [r4, #23]
 800e16c:	e7b3      	b.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e16e:	4658      	mov	r0, fp
 800e170:	465b      	mov	r3, fp
 800e172:	e7b5      	b.n	800e0e0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800e174:	2f03      	cmp	r7, #3
 800e176:	d11a      	bne.n	800e1ae <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800e178:	7daa      	ldrb	r2, [r5, #22]
 800e17a:	2a00      	cmp	r2, #0
 800e17c:	d1ab      	bne.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e17e:	7072      	strb	r2, [r6, #1]
 800e180:	f1bb 0f00 	cmp.w	fp, #0
 800e184:	d0a7      	beq.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e186:	2b00      	cmp	r3, #0
 800e188:	d0a5      	beq.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e18a:	2302      	movs	r3, #2
 800e18c:	75e3      	strb	r3, [r4, #23]
 800e18e:	4b1e      	ldr	r3, [pc, #120]	; (800e208 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e190:	7622      	strb	r2, [r4, #24]
 800e192:	681b      	ldr	r3, [r3, #0]
 800e194:	7662      	strb	r2, [r4, #25]
 800e196:	889b      	ldrh	r3, [r3, #4]
 800e198:	3b00      	subs	r3, #0
 800e19a:	bf18      	it	ne
 800e19c:	2301      	movne	r3, #1
 800e19e:	005b      	lsls	r3, r3, #1
 800e1a0:	4630      	mov	r0, r6
 800e1a2:	7663      	strb	r3, [r4, #25]
 800e1a4:	b005      	add	sp, #20
 800e1a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1aa:	f7ff bd81 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e1ae:	2f02      	cmp	r7, #2
 800e1b0:	d191      	bne.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1b2:	7daa      	ldrb	r2, [r5, #22]
 800e1b4:	2a00      	cmp	r2, #0
 800e1b6:	d18e      	bne.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1b8:	2101      	movs	r1, #1
 800e1ba:	7071      	strb	r1, [r6, #1]
 800e1bc:	2b00      	cmp	r3, #0
 800e1be:	d08a      	beq.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1c0:	4b11      	ldr	r3, [pc, #68]	; (800e208 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e1c2:	75e7      	strb	r7, [r4, #23]
 800e1c4:	681b      	ldr	r3, [r3, #0]
 800e1c6:	7622      	strb	r2, [r4, #24]
 800e1c8:	7662      	strb	r2, [r4, #25]
 800e1ca:	889b      	ldrh	r3, [r3, #4]
 800e1cc:	3b00      	subs	r3, #0
 800e1ce:	bf18      	it	ne
 800e1d0:	2301      	movne	r3, #1
 800e1d2:	408b      	lsls	r3, r1
 800e1d4:	e7e4      	b.n	800e1a0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800e1d6:	7c6a      	ldrb	r2, [r5, #17]
 800e1d8:	7cab      	ldrb	r3, [r5, #18]
 800e1da:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800e1de:	b29b      	uxth	r3, r3
 800e1e0:	f1bb 0f00 	cmp.w	fp, #0
 800e1e4:	9301      	str	r3, [sp, #4]
 800e1e6:	7dab      	ldrb	r3, [r5, #22]
 800e1e8:	9300      	str	r3, [sp, #0]
 800e1ea:	bf18      	it	ne
 800e1ec:	4601      	movne	r1, r0
 800e1ee:	9a03      	ldr	r2, [sp, #12]
 800e1f0:	463b      	mov	r3, r7
 800e1f2:	bf08      	it	eq
 800e1f4:	2101      	moveq	r1, #1
 800e1f6:	4630      	mov	r0, r6
 800e1f8:	f7ff feca 	bl	800df90 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800e1fc:	e76b      	b.n	800e0d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e1fe:	bf00      	nop
 800e200:	20000804 	andcs	r0, r0, r4, lsl #16
 800e204:	080192ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, pc}
 800e208:	20000800 	andcs	r0, r0, r0, lsl #16

0800e20c <RDMIdentify::RDMIdentify()>:
 800e20c:	4b01      	ldr	r3, [pc, #4]	; (800e214 <RDMIdentify::RDMIdentify()+0x8>)
 800e20e:	6018      	str	r0, [r3, #0]
 800e210:	4770      	bx	lr
 800e212:	bf00      	nop
 800e214:	2000080c 	andcs	r0, r0, ip, lsl #16

0800e218 <RDMIdentify::On(rdm::identify::Mode)>:
 800e218:	4770      	bx	lr

0800e21a <RDMIdentify::Off(rdm::identify::Mode)>:
 800e21a:	4770      	bx	lr

0800e21c <memcpy.constprop.0.isra.0>:
 800e21c:	3801      	subs	r0, #1
 800e21e:	1d0b      	adds	r3, r1, #4
 800e220:	4299      	cmp	r1, r3
 800e222:	d100      	bne.n	800e226 <memcpy.constprop.0.isra.0+0xa>
 800e224:	4770      	bx	lr
 800e226:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e22a:	f800 2f01 	strb.w	r2, [r0, #1]!
 800e22e:	e7f7      	b.n	800e220 <memcpy.constprop.0.isra.0+0x4>

0800e230 <RDMHandler::GetInterfaceList(unsigned short)>:
 800e230:	4a08      	ldr	r2, [pc, #32]	; (800e254 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800e232:	6883      	ldr	r3, [r0, #8]
 800e234:	6812      	ldr	r2, [r2, #0]
 800e236:	6892      	ldr	r2, [r2, #8]
 800e238:	76da      	strb	r2, [r3, #27]
 800e23a:	0e11      	lsrs	r1, r2, #24
 800e23c:	7619      	strb	r1, [r3, #24]
 800e23e:	0c11      	lsrs	r1, r2, #16
 800e240:	7659      	strb	r1, [r3, #25]
 800e242:	0a11      	lsrs	r1, r2, #8
 800e244:	2200      	movs	r2, #0
 800e246:	771a      	strb	r2, [r3, #28]
 800e248:	2206      	movs	r2, #6
 800e24a:	7699      	strb	r1, [r3, #26]
 800e24c:	775a      	strb	r2, [r3, #29]
 800e24e:	75da      	strb	r2, [r3, #23]
 800e250:	f7ff bd2e 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e254:	2000f994 	mulcs	r0, r4, r9

0800e258 <RDMHandler::GetInterfaceName(unsigned short)>:
 800e258:	b538      	push	{r3, r4, r5, lr}
 800e25a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e25e:	4604      	mov	r4, r0
 800e260:	3117      	adds	r1, #23
 800e262:	f105 0018 	add.w	r0, r5, #24
 800e266:	f7ff ffd9 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e26a:	4a0d      	ldr	r2, [pc, #52]	; (800e2a0 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800e26c:	6813      	ldr	r3, [r2, #0]
 800e26e:	f105 001b 	add.w	r0, r5, #27
 800e272:	33a6      	adds	r3, #166	; 0xa6
 800e274:	f813 1b01 	ldrb.w	r1, [r3], #1
 800e278:	f800 1f01 	strb.w	r1, [r0, #1]!
 800e27c:	2900      	cmp	r1, #0
 800e27e:	d1f9      	bne.n	800e274 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800e280:	6812      	ldr	r2, [r2, #0]
 800e282:	32a6      	adds	r2, #166	; 0xa6
 800e284:	4611      	mov	r1, r2
 800e286:	460b      	mov	r3, r1
 800e288:	3101      	adds	r1, #1
 800e28a:	7818      	ldrb	r0, [r3, #0]
 800e28c:	2800      	cmp	r0, #0
 800e28e:	d1fa      	bne.n	800e286 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800e290:	1a9b      	subs	r3, r3, r2
 800e292:	3304      	adds	r3, #4
 800e294:	75eb      	strb	r3, [r5, #23]
 800e296:	4620      	mov	r0, r4
 800e298:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e29c:	f7ff bd08 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e2a0:	2000f994 	mulcs	r0, r4, r9

0800e2a4 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800e2a4:	b538      	push	{r3, r4, r5, lr}
 800e2a6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e2aa:	4604      	mov	r4, r0
 800e2ac:	3117      	adds	r1, #23
 800e2ae:	f105 0018 	add.w	r0, r5, #24
 800e2b2:	f7ff ffb3 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e2b6:	4b06      	ldr	r3, [pc, #24]	; (800e2d0 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800e2b8:	f105 011c 	add.w	r1, r5, #28
 800e2bc:	6818      	ldr	r0, [r3, #0]
 800e2be:	f004 f860 	bl	8012382 <Network::MacAddressCopyTo(unsigned char*)>
 800e2c2:	230a      	movs	r3, #10
 800e2c4:	75eb      	strb	r3, [r5, #23]
 800e2c6:	4620      	mov	r0, r4
 800e2c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e2cc:	f7ff bcf0 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e2d0:	2000f994 	mulcs	r0, r4, r9

0800e2d4 <RDMHandler::GetDHCPMode(unsigned short)>:
 800e2d4:	b538      	push	{r3, r4, r5, lr}
 800e2d6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e2da:	4604      	mov	r4, r0
 800e2dc:	3117      	adds	r1, #23
 800e2de:	f105 0018 	add.w	r0, r5, #24
 800e2e2:	f7ff ff9b 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e2e6:	4b05      	ldr	r3, [pc, #20]	; (800e2fc <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800e2e8:	681b      	ldr	r3, [r3, #0]
 800e2ea:	795b      	ldrb	r3, [r3, #5]
 800e2ec:	772b      	strb	r3, [r5, #28]
 800e2ee:	2305      	movs	r3, #5
 800e2f0:	75eb      	strb	r3, [r5, #23]
 800e2f2:	4620      	mov	r0, r4
 800e2f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e2f8:	f7ff bcda 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e2fc:	2000f994 	mulcs	r0, r4, r9

0800e300 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800e300:	4b10      	ldr	r3, [pc, #64]	; (800e344 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800e302:	6842      	ldr	r2, [r0, #4]
 800e304:	681b      	ldr	r3, [r3, #0]
 800e306:	7919      	ldrb	r1, [r3, #4]
 800e308:	b510      	push	{r4, lr}
 800e30a:	4604      	mov	r4, r0
 800e30c:	b921      	cbnz	r1, 800e318 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800e30e:	210b      	movs	r1, #11
 800e310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e314:	f7ff bd90 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e318:	7ed2      	ldrb	r2, [r2, #27]
 800e31a:	2a01      	cmp	r2, #1
 800e31c:	d109      	bne.n	800e332 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800e31e:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800e322:	f042 0204 	orr.w	r2, r2, #4
 800e326:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800e32a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e32e:	f7ff bcbf 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e332:	b92a      	cbnz	r2, 800e340 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800e334:	4618      	mov	r0, r3
 800e336:	4611      	mov	r1, r2
 800e338:	f004 fa44 	bl	80127c4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e33c:	4620      	mov	r0, r4
 800e33e:	e7f4      	b.n	800e32a <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800e340:	2106      	movs	r1, #6
 800e342:	e7e5      	b.n	800e310 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800e344:	2000f994 	mulcs	r0, r4, r9

0800e348 <RDMHandler::GetNameServers(unsigned short)>:
 800e348:	6842      	ldr	r2, [r0, #4]
 800e34a:	7dd2      	ldrb	r2, [r2, #23]
 800e34c:	2a02      	cmp	r2, #2
 800e34e:	d902      	bls.n	800e356 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800e350:	2106      	movs	r1, #6
 800e352:	f7ff bd71 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e356:	6883      	ldr	r3, [r0, #8]
 800e358:	2200      	movs	r2, #0
 800e35a:	765a      	strb	r2, [r3, #25]
 800e35c:	769a      	strb	r2, [r3, #26]
 800e35e:	76da      	strb	r2, [r3, #27]
 800e360:	771a      	strb	r2, [r3, #28]
 800e362:	2205      	movs	r2, #5
 800e364:	75da      	strb	r2, [r3, #23]
 800e366:	f7ff bca3 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
	...

0800e36c <RDMHandler::GetZeroconf(unsigned short)>:
 800e36c:	b538      	push	{r3, r4, r5, lr}
 800e36e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e372:	4604      	mov	r4, r0
 800e374:	3117      	adds	r1, #23
 800e376:	f105 0018 	add.w	r0, r5, #24
 800e37a:	f7ff ff4f 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e37e:	4b06      	ldr	r3, [pc, #24]	; (800e398 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800e380:	681a      	ldr	r2, [r3, #0]
 800e382:	7993      	ldrb	r3, [r2, #6]
 800e384:	b103      	cbz	r3, 800e388 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800e386:	79d3      	ldrb	r3, [r2, #7]
 800e388:	772b      	strb	r3, [r5, #28]
 800e38a:	2305      	movs	r3, #5
 800e38c:	75eb      	strb	r3, [r5, #23]
 800e38e:	4620      	mov	r0, r4
 800e390:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e394:	f7ff bc8c 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e398:	2000f994 	mulcs	r0, r4, r9

0800e39c <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800e39c:	4b10      	ldr	r3, [pc, #64]	; (800e3e0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800e39e:	6842      	ldr	r2, [r0, #4]
 800e3a0:	681b      	ldr	r3, [r3, #0]
 800e3a2:	7999      	ldrb	r1, [r3, #6]
 800e3a4:	b510      	push	{r4, lr}
 800e3a6:	4604      	mov	r4, r0
 800e3a8:	b921      	cbnz	r1, 800e3b4 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800e3aa:	210b      	movs	r1, #11
 800e3ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3b0:	f7ff bd42 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e3b4:	7ed2      	ldrb	r2, [r2, #27]
 800e3b6:	2a01      	cmp	r2, #1
 800e3b8:	d109      	bne.n	800e3ce <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800e3ba:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800e3be:	f042 0208 	orr.w	r2, r2, #8
 800e3c2:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800e3c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3ca:	f7ff bc71 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e3ce:	b92a      	cbnz	r2, 800e3dc <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800e3d0:	4618      	mov	r0, r3
 800e3d2:	4611      	mov	r1, r2
 800e3d4:	f004 f9f6 	bl	80127c4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e3d8:	4620      	mov	r0, r4
 800e3da:	e7f4      	b.n	800e3c6 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800e3dc:	2106      	movs	r1, #6
 800e3de:	e7e5      	b.n	800e3ac <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800e3e0:	2000f994 	mulcs	r0, r4, r9

0800e3e4 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800e3e4:	4b09      	ldr	r3, [pc, #36]	; (800e40c <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800e3e6:	681b      	ldr	r3, [r3, #0]
 800e3e8:	795a      	ldrb	r2, [r3, #5]
 800e3ea:	b510      	push	{r4, lr}
 800e3ec:	4604      	mov	r4, r0
 800e3ee:	b922      	cbnz	r2, 800e3fa <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800e3f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3f4:	210b      	movs	r1, #11
 800e3f6:	f7ff bd1f 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e3fa:	4618      	mov	r0, r3
 800e3fc:	f004 f99c 	bl	8012738 <Network::EnableDhcp()>
 800e400:	4620      	mov	r0, r4
 800e402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e406:	f7ff bc53 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e40a:	bf00      	nop
 800e40c:	2000f994 	mulcs	r0, r4, r9

0800e410 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800e410:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e412:	4e10      	ldr	r6, [pc, #64]	; (800e454 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800e414:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e418:	6833      	ldr	r3, [r6, #0]
 800e41a:	4604      	mov	r4, r0
 800e41c:	695b      	ldr	r3, [r3, #20]
 800e41e:	9301      	str	r3, [sp, #4]
 800e420:	f105 0018 	add.w	r0, r5, #24
 800e424:	3117      	adds	r1, #23
 800e426:	f7ff fef9 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e42a:	a901      	add	r1, sp, #4
 800e42c:	f105 001c 	add.w	r0, r5, #28
 800e430:	f7ff fef4 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e434:	6836      	ldr	r6, [r6, #0]
 800e436:	69f0      	ldr	r0, [r6, #28]
 800e438:	f009 fb8c 	bl	8017b54 <__popcountsi2>
 800e43c:	f885 0020 	strb.w	r0, [r5, #32]
 800e440:	7973      	ldrb	r3, [r6, #5]
 800e442:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800e446:	230a      	movs	r3, #10
 800e448:	75eb      	strb	r3, [r5, #23]
 800e44a:	4620      	mov	r0, r4
 800e44c:	f7ff fc30 	bl	800dcb0 <RDMHandler::RespondMessageAck()>
 800e450:	b002      	add	sp, #8
 800e452:	bd70      	pop	{r4, r5, r6, pc}
 800e454:	2000f994 	mulcs	r0, r4, r9

0800e458 <RDMHandler::GetStaticAddress(unsigned short)>:
 800e458:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e45a:	4e0f      	ldr	r6, [pc, #60]	; (800e498 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800e45c:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e460:	6833      	ldr	r3, [r6, #0]
 800e462:	4604      	mov	r4, r0
 800e464:	695b      	ldr	r3, [r3, #20]
 800e466:	9301      	str	r3, [sp, #4]
 800e468:	f105 0018 	add.w	r0, r5, #24
 800e46c:	3117      	adds	r1, #23
 800e46e:	f7ff fed5 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e472:	a901      	add	r1, sp, #4
 800e474:	f105 001c 	add.w	r0, r5, #28
 800e478:	f7ff fed0 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e47c:	6833      	ldr	r3, [r6, #0]
 800e47e:	69d8      	ldr	r0, [r3, #28]
 800e480:	f009 fb68 	bl	8017b54 <__popcountsi2>
 800e484:	2309      	movs	r3, #9
 800e486:	f885 0020 	strb.w	r0, [r5, #32]
 800e48a:	75eb      	strb	r3, [r5, #23]
 800e48c:	4620      	mov	r0, r4
 800e48e:	f7ff fc0f 	bl	800dcb0 <RDMHandler::RespondMessageAck()>
 800e492:	b002      	add	sp, #8
 800e494:	bd70      	pop	{r4, r5, r6, pc}
 800e496:	bf00      	nop
 800e498:	2000f994 	mulcs	r0, r4, r9

0800e49c <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800e49c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e49e:	6845      	ldr	r5, [r0, #4]
 800e4a0:	7dab      	ldrb	r3, [r5, #22]
 800e4a2:	2b09      	cmp	r3, #9
 800e4a4:	4604      	mov	r4, r0
 800e4a6:	d005      	beq.n	800e4b4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800e4a8:	2101      	movs	r1, #1
 800e4aa:	b003      	add	sp, #12
 800e4ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e4b0:	f7ff bcc2 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e4b4:	f105 011b 	add.w	r1, r5, #27
 800e4b8:	a801      	add	r0, sp, #4
 800e4ba:	f7ff feaf 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e4be:	4b09      	ldr	r3, [pc, #36]	; (800e4e4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800e4c0:	7fea      	ldrb	r2, [r5, #31]
 800e4c2:	6818      	ldr	r0, [r3, #0]
 800e4c4:	9901      	ldr	r1, [sp, #4]
 800e4c6:	b12a      	cbz	r2, 800e4d4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800e4c8:	f1c2 0220 	rsb	r2, r2, #32
 800e4cc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e4d0:	4093      	lsls	r3, r2
 800e4d2:	ba1a      	rev	r2, r3
 800e4d4:	f004 f976 	bl	80127c4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e4d8:	4620      	mov	r0, r4
 800e4da:	f7ff fbe9 	bl	800dcb0 <RDMHandler::RespondMessageAck()>
 800e4de:	b003      	add	sp, #12
 800e4e0:	bd30      	pop	{r4, r5, pc}
 800e4e2:	bf00      	nop
 800e4e4:	2000f994 	mulcs	r0, r4, r9

0800e4e8 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800e4e8:	4b08      	ldr	r3, [pc, #32]	; (800e50c <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800e4ea:	b510      	push	{r4, lr}
 800e4ec:	4604      	mov	r4, r0
 800e4ee:	6818      	ldr	r0, [r3, #0]
 800e4f0:	f004 f975 	bl	80127de <Network::ApplyQueuedConfig()>
 800e4f4:	b120      	cbz	r0, 800e500 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4fc:	f7ff bbd8 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e500:	4620      	mov	r0, r4
 800e502:	2101      	movs	r1, #1
 800e504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e508:	f7ff bc96 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e50c:	2000f994 	mulcs	r0, r4, r9

0800e510 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800e510:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e512:	4b0c      	ldr	r3, [pc, #48]	; (800e544 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800e514:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e518:	681b      	ldr	r3, [r3, #0]
 800e51a:	4604      	mov	r4, r0
 800e51c:	699b      	ldr	r3, [r3, #24]
 800e51e:	9301      	str	r3, [sp, #4]
 800e520:	f105 0018 	add.w	r0, r5, #24
 800e524:	3117      	adds	r1, #23
 800e526:	f7ff fe79 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e52a:	a901      	add	r1, sp, #4
 800e52c:	f105 001c 	add.w	r0, r5, #28
 800e530:	f7ff fe74 	bl	800e21c <memcpy.constprop.0.isra.0>
 800e534:	2308      	movs	r3, #8
 800e536:	75eb      	strb	r3, [r5, #23]
 800e538:	4620      	mov	r0, r4
 800e53a:	f7ff fbb9 	bl	800dcb0 <RDMHandler::RespondMessageAck()>
 800e53e:	b003      	add	sp, #12
 800e540:	bd30      	pop	{r4, r5, pc}
 800e542:	bf00      	nop
 800e544:	2000f994 	mulcs	r0, r4, r9

0800e548 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800e548:	210b      	movs	r1, #11
 800e54a:	f7ff bc75 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e550 <RDMHandler::GetHostName(unsigned short)>:
 800e550:	4b0a      	ldr	r3, [pc, #40]	; (800e57c <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800e552:	b513      	push	{r0, r1, r4, lr}
 800e554:	6819      	ldr	r1, [r3, #0]
 800e556:	3120      	adds	r1, #32
 800e558:	460b      	mov	r3, r1
 800e55a:	461a      	mov	r2, r3
 800e55c:	3301      	adds	r3, #1
 800e55e:	7814      	ldrb	r4, [r2, #0]
 800e560:	2c00      	cmp	r4, #0
 800e562:	d1fa      	bne.n	800e55a <RDMHandler::GetHostName(unsigned short)+0xa>
 800e564:	1a52      	subs	r2, r2, r1
 800e566:	b292      	uxth	r2, r2
 800e568:	9001      	str	r0, [sp, #4]
 800e56a:	f7ff fb49 	bl	800dc00 <RDMHandler::HandleString(char const*, unsigned int)>
 800e56e:	9801      	ldr	r0, [sp, #4]
 800e570:	b002      	add	sp, #8
 800e572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e576:	f7ff bb9b 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e57a:	bf00      	nop
 800e57c:	2000f994 	mulcs	r0, r4, r9

0800e580 <RDMHandler::SetHostName(bool, unsigned short)>:
 800e580:	b510      	push	{r4, lr}
 800e582:	6841      	ldr	r1, [r0, #4]
 800e584:	7d8b      	ldrb	r3, [r1, #22]
 800e586:	2b3f      	cmp	r3, #63	; 0x3f
 800e588:	4604      	mov	r4, r0
 800e58a:	d904      	bls.n	800e596 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800e58c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e590:	2102      	movs	r1, #2
 800e592:	f7ff bc51 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
 800e596:	440b      	add	r3, r1
 800e598:	2200      	movs	r2, #0
 800e59a:	75da      	strb	r2, [r3, #23]
 800e59c:	4b04      	ldr	r3, [pc, #16]	; (800e5b0 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800e59e:	3117      	adds	r1, #23
 800e5a0:	6818      	ldr	r0, [r3, #0]
 800e5a2:	f004 f88e 	bl	80126c2 <Network::SetHostName(char const*)>
 800e5a6:	4620      	mov	r0, r4
 800e5a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5ac:	f7ff bb80 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e5b0:	2000f994 	mulcs	r0, r4, r9

0800e5b4 <RDMHandler::GetDomainName(unsigned short)>:
 800e5b4:	4b0a      	ldr	r3, [pc, #40]	; (800e5e0 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800e5b6:	b513      	push	{r0, r1, r4, lr}
 800e5b8:	6819      	ldr	r1, [r3, #0]
 800e5ba:	3160      	adds	r1, #96	; 0x60
 800e5bc:	460b      	mov	r3, r1
 800e5be:	461a      	mov	r2, r3
 800e5c0:	3301      	adds	r3, #1
 800e5c2:	7814      	ldrb	r4, [r2, #0]
 800e5c4:	2c00      	cmp	r4, #0
 800e5c6:	d1fa      	bne.n	800e5be <RDMHandler::GetDomainName(unsigned short)+0xa>
 800e5c8:	1a52      	subs	r2, r2, r1
 800e5ca:	b292      	uxth	r2, r2
 800e5cc:	9001      	str	r0, [sp, #4]
 800e5ce:	f7ff fb17 	bl	800dc00 <RDMHandler::HandleString(char const*, unsigned int)>
 800e5d2:	9801      	ldr	r0, [sp, #4]
 800e5d4:	b002      	add	sp, #8
 800e5d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5da:	f7ff bb69 	b.w	800dcb0 <RDMHandler::RespondMessageAck()>
 800e5de:	bf00      	nop
 800e5e0:	2000f994 	mulcs	r0, r4, r9

0800e5e4 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800e5e4:	210b      	movs	r1, #11
 800e5e6:	f7ff bc27 	b.w	800de38 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e5ec <RDMDevice::RDMDevice()>:
 800e5ec:	4a34      	ldr	r2, [pc, #208]	; (800e6c0 <RDMDevice::RDMDevice()+0xd4>)
 800e5ee:	2300      	movs	r3, #0
 800e5f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e5f2:	4604      	mov	r4, r0
 800e5f4:	7003      	strb	r3, [r0, #0]
 800e5f6:	f880 3072 	strb.w	r3, [r0, #114]	; 0x72
 800e5fa:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
 800e5fe:	6783      	str	r3, [r0, #120]	; 0x78
 800e600:	4611      	mov	r1, r2
 800e602:	4613      	mov	r3, r2
 800e604:	3201      	adds	r2, #1
 800e606:	7818      	ldrb	r0, [r3, #0]
 800e608:	2800      	cmp	r0, #0
 800e60a:	d1fa      	bne.n	800e602 <RDMDevice::RDMDevice()+0x16>
 800e60c:	1a5b      	subs	r3, r3, r1
 800e60e:	2b20      	cmp	r3, #32
 800e610:	bf28      	it	cs
 800e612:	2320      	movcs	r3, #32
 800e614:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800e618:	4829      	ldr	r0, [pc, #164]	; (800e6c0 <RDMDevice::RDMDevice()+0xd4>)
 800e61a:	4629      	mov	r1, r5
 800e61c:	461a      	mov	r2, r3
 800e61e:	3a01      	subs	r2, #1
 800e620:	d23e      	bcs.n	800e6a0 <RDMDevice::RDMDevice()+0xb4>
 800e622:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e626:	4b27      	ldr	r3, [pc, #156]	; (800e6c4 <RDMDevice::RDMDevice()+0xd8>)
 800e628:	4e27      	ldr	r6, [pc, #156]	; (800e6c8 <RDMDevice::RDMDevice()+0xdc>)
 800e62a:	781a      	ldrb	r2, [r3, #0]
 800e62c:	7062      	strb	r2, [r4, #1]
 800e62e:	785b      	ldrb	r3, [r3, #1]
 800e630:	6830      	ldr	r0, [r6, #0]
 800e632:	70a3      	strb	r3, [r4, #2]
 800e634:	4669      	mov	r1, sp
 800e636:	f003 fea4 	bl	8012382 <Network::MacAddressCopyTo(unsigned char*)>
 800e63a:	6833      	ldr	r3, [r6, #0]
 800e63c:	695b      	ldr	r3, [r3, #20]
 800e63e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e642:	0e18      	lsrs	r0, r3, #24
 800e644:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800e648:	b2db      	uxtb	r3, r3
 800e64a:	70e3      	strb	r3, [r4, #3]
 800e64c:	72a3      	strb	r3, [r4, #10]
 800e64e:	4b1f      	ldr	r3, [pc, #124]	; (800e6cc <RDMDevice::RDMDevice()+0xe0>)
 800e650:	7122      	strb	r2, [r4, #4]
 800e652:	7262      	strb	r2, [r4, #9]
 800e654:	71a0      	strb	r0, [r4, #6]
 800e656:	7161      	strb	r1, [r4, #5]
 800e658:	71e0      	strb	r0, [r4, #7]
 800e65a:	7221      	strb	r1, [r4, #8]
 800e65c:	461a      	mov	r2, r3
 800e65e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e662:	2900      	cmp	r1, #0
 800e664:	d1fb      	bne.n	800e65e <RDMDevice::RDMDevice()+0x72>
 800e666:	1a9b      	subs	r3, r3, r2
 800e668:	2b20      	cmp	r3, #32
 800e66a:	bf28      	it	cs
 800e66c:	2320      	movcs	r3, #32
 800e66e:	4917      	ldr	r1, [pc, #92]	; (800e6cc <RDMDevice::RDMDevice()+0xe0>)
 800e670:	461a      	mov	r2, r3
 800e672:	3a01      	subs	r2, #1
 800e674:	d219      	bcs.n	800e6aa <RDMDevice::RDMDevice()+0xbe>
 800e676:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e67a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e67e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e682:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800e686:	4a12      	ldr	r2, [pc, #72]	; (800e6d0 <RDMDevice::RDMDevice()+0xe4>)
 800e688:	2315      	movs	r3, #21
 800e68a:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
 800e68e:	f104 0166 	add.w	r1, r4, #102	; 0x66
 800e692:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800e696:	4299      	cmp	r1, r3
 800e698:	d10c      	bne.n	800e6b4 <RDMDevice::RDMDevice()+0xc8>
 800e69a:	4620      	mov	r0, r4
 800e69c:	b002      	add	sp, #8
 800e69e:	bd70      	pop	{r4, r5, r6, pc}
 800e6a0:	f810 6b01 	ldrb.w	r6, [r0], #1
 800e6a4:	f801 6f01 	strb.w	r6, [r1, #1]!
 800e6a8:	e7b9      	b.n	800e61e <RDMDevice::RDMDevice()+0x32>
 800e6aa:	f811 0b01 	ldrb.w	r0, [r1], #1
 800e6ae:	f805 0f01 	strb.w	r0, [r5, #1]!
 800e6b2:	e7de      	b.n	800e672 <RDMDevice::RDMDevice()+0x86>
 800e6b4:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e6b8:	f803 0f01 	strb.w	r0, [r3, #1]!
 800e6bc:	e7eb      	b.n	800e696 <RDMDevice::RDMDevice()+0xaa>
 800e6be:	bf00      	nop
 800e6c0:	08019595 	stmdaeq	r1, {r0, r2, r4, r7, r8, sl, ip, pc}
 800e6c4:	08019593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, ip, pc}
 800e6c8:	2000f994 	mulcs	r0, r4, r9
 800e6cc:	08019494 	stmdaeq	r1, {r2, r4, r7, sl, ip, pc}
 800e6d0:	0801957d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, ip, pc}

0800e6d4 <RDMDevice::Print()>:
 800e6d4:	b513      	push	{r0, r1, r4, lr}
 800e6d6:	4604      	mov	r4, r0
 800e6d8:	4818      	ldr	r0, [pc, #96]	; (800e73c <RDMDevice::Print()+0x68>)
 800e6da:	f7fb fe5f 	bl	800a39c <printf>
 800e6de:	f894 104c 	ldrb.w	r1, [r4, #76]	; 0x4c
 800e6e2:	4817      	ldr	r0, [pc, #92]	; (800e740 <RDMDevice::Print()+0x6c>)
 800e6e4:	f104 022c 	add.w	r2, r4, #44	; 0x2c
 800e6e8:	f7fb fe58 	bl	800a39c <printf>
 800e6ec:	78a2      	ldrb	r2, [r4, #2]
 800e6ee:	7861      	ldrb	r1, [r4, #1]
 800e6f0:	4814      	ldr	r0, [pc, #80]	; (800e744 <RDMDevice::Print()+0x70>)
 800e6f2:	f7fb fe53 	bl	800a39c <printf>
 800e6f6:	79e3      	ldrb	r3, [r4, #7]
 800e6f8:	7a62      	ldrb	r2, [r4, #9]
 800e6fa:	7aa1      	ldrb	r1, [r4, #10]
 800e6fc:	9300      	str	r3, [sp, #0]
 800e6fe:	4812      	ldr	r0, [pc, #72]	; (800e748 <RDMDevice::Print()+0x74>)
 800e700:	7a23      	ldrb	r3, [r4, #8]
 800e702:	f7fb fe4b 	bl	800a39c <printf>
 800e706:	f894 102b 	ldrb.w	r1, [r4, #43]	; 0x2b
 800e70a:	4810      	ldr	r0, [pc, #64]	; (800e74c <RDMDevice::Print()+0x78>)
 800e70c:	f104 020b 	add.w	r2, r4, #11
 800e710:	f7fb fe44 	bl	800a39c <printf>
 800e714:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e718:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800e71c:	480c      	ldr	r0, [pc, #48]	; (800e750 <RDMDevice::Print()+0x7c>)
 800e71e:	0a09      	lsrs	r1, r1, #8
 800e720:	f7fb fe3c 	bl	800a39c <printf>
 800e724:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e728:	f894 2050 	ldrb.w	r2, [r4, #80]	; 0x50
 800e72c:	4809      	ldr	r0, [pc, #36]	; (800e754 <RDMDevice::Print()+0x80>)
 800e72e:	0a09      	lsrs	r1, r1, #8
 800e730:	b002      	add	sp, #8
 800e732:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e736:	f7fb be31 	b.w	800a39c <printf>
 800e73a:	bf00      	nop
 800e73c:	080194a9 	stmdaeq	r1, {r0, r3, r5, r7, sl, ip, pc}
 800e740:	080194c3 	stmdaeq	r1, {r0, r1, r6, r7, sl, ip, pc}
 800e744:	080194de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, ip, pc}
 800e748:	080194fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, ip, pc}
 800e74c:	08019524 	stmdaeq	r1, {r2, r5, r8, sl, ip, pc}
 800e750:	0801953f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, ip, pc}
 800e754:	0801955e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sl, ip, pc}

0800e758 <uuid_unparse_x>:
 800e758:	b530      	push	{r4, r5, lr}
 800e75a:	4603      	mov	r3, r0
 800e75c:	4608      	mov	r0, r1
 800e75e:	4611      	mov	r1, r2
 800e760:	681a      	ldr	r2, [r3, #0]
 800e762:	891c      	ldrh	r4, [r3, #8]
 800e764:	b08f      	sub	sp, #60	; 0x3c
 800e766:	ba12      	rev	r2, r2
 800e768:	920a      	str	r2, [sp, #40]	; 0x28
 800e76a:	889a      	ldrh	r2, [r3, #4]
 800e76c:	ba52      	rev16	r2, r2
 800e76e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e772:	88da      	ldrh	r2, [r3, #6]
 800e774:	ba64      	rev16	r4, r4
 800e776:	ba52      	rev16	r2, r2
 800e778:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e77c:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800e780:	f103 020a 	add.w	r2, r3, #10
 800e784:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800e788:	3310      	adds	r3, #16
 800e78a:	4293      	cmp	r3, r2
 800e78c:	d122      	bne.n	800e7d4 <uuid_unparse_x+0x7c>
 800e78e:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800e792:	9208      	str	r2, [sp, #32]
 800e794:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800e798:	9207      	str	r2, [sp, #28]
 800e79a:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800e79e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e7a2:	9206      	str	r2, [sp, #24]
 800e7a4:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800e7a8:	9205      	str	r2, [sp, #20]
 800e7aa:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800e7ae:	9204      	str	r2, [sp, #16]
 800e7b0:	0a1b      	lsrs	r3, r3, #8
 800e7b2:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800e7b6:	9203      	str	r2, [sp, #12]
 800e7b8:	9301      	str	r3, [sp, #4]
 800e7ba:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800e7be:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e7c2:	9202      	str	r2, [sp, #8]
 800e7c4:	9300      	str	r3, [sp, #0]
 800e7c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e7c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e7cc:	f7fb fdf6 	bl	800a3bc <sprintf>
 800e7d0:	b00f      	add	sp, #60	; 0x3c
 800e7d2:	bd30      	pop	{r4, r5, pc}
 800e7d4:	f812 5b01 	ldrb.w	r5, [r2], #1
 800e7d8:	f804 5f01 	strb.w	r5, [r4, #1]!
 800e7dc:	e7d5      	b.n	800e78a <uuid_unparse_x+0x32>
	...

0800e7e0 <uuid_unparse>:
 800e7e0:	4a01      	ldr	r2, [pc, #4]	; (800e7e8 <uuid_unparse+0x8>)
 800e7e2:	f7ff bfb9 	b.w	800e758 <uuid_unparse_x>
 800e7e6:	bf00      	nop
 800e7e8:	080195b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, ip, pc}

0800e7ec <DmxSend::~DmxSend()>:
 800e7ec:	4770      	bx	lr
	...

0800e7f0 <DmxSend::Start(unsigned int)>:
 800e7f0:	b430      	push	{r4, r5}
 800e7f2:	4c09      	ldr	r4, [pc, #36]	; (800e818 <DmxSend::Start(unsigned int)+0x28>)
 800e7f4:	2301      	movs	r3, #1
 800e7f6:	7822      	ldrb	r2, [r4, #0]
 800e7f8:	fa03 f001 	lsl.w	r0, r3, r1
 800e7fc:	ea30 0502 	bics.w	r5, r0, r2
 800e800:	d007      	beq.n	800e812 <DmxSend::Start(unsigned int)+0x22>
 800e802:	4302      	orrs	r2, r0
 800e804:	4805      	ldr	r0, [pc, #20]	; (800e81c <DmxSend::Start(unsigned int)+0x2c>)
 800e806:	7022      	strb	r2, [r4, #0]
 800e808:	6800      	ldr	r0, [r0, #0]
 800e80a:	bc30      	pop	{r4, r5}
 800e80c:	2200      	movs	r2, #0
 800e80e:	f000 bbab 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e812:	bc30      	pop	{r4, r5}
 800e814:	4770      	bx	lr
 800e816:	bf00      	nop
 800e818:	20000810 	andcs	r0, r0, r0, lsl r8
 800e81c:	20001048 	andcs	r1, r0, r8, asr #32

0800e820 <DmxSend::Stop(unsigned int)>:
 800e820:	b410      	push	{r4}
 800e822:	480b      	ldr	r0, [pc, #44]	; (800e850 <DmxSend::Stop(unsigned int)+0x30>)
 800e824:	2201      	movs	r2, #1
 800e826:	7803      	ldrb	r3, [r0, #0]
 800e828:	408a      	lsls	r2, r1
 800e82a:	ea03 0402 	and.w	r4, r3, r2
 800e82e:	439a      	bics	r2, r3
 800e830:	d10a      	bne.n	800e848 <DmxSend::Stop(unsigned int)+0x28>
 800e832:	ea23 0304 	bic.w	r3, r3, r4
 800e836:	7003      	strb	r3, [r0, #0]
 800e838:	4806      	ldr	r0, [pc, #24]	; (800e854 <DmxSend::Stop(unsigned int)+0x34>)
 800e83a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e83e:	6800      	ldr	r0, [r0, #0]
 800e840:	2300      	movs	r3, #0
 800e842:	461a      	mov	r2, r3
 800e844:	f000 bb90 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e848:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e84c:	4770      	bx	lr
 800e84e:	bf00      	nop
 800e850:	20000810 	andcs	r0, r0, r0, lsl r8
 800e854:	20001048 	andcs	r1, r0, r8, asr #32

0800e858 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e858:	b11b      	cbz	r3, 800e862 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800e85a:	4802      	ldr	r0, [pc, #8]	; (800e864 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800e85c:	6800      	ldr	r0, [r0, #0]
 800e85e:	f000 bcc5 	b.w	800f1ec <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800e862:	4770      	bx	lr
 800e864:	20001048 	andcs	r1, r0, r8, asr #32

0800e868 <DmxSend::Blackout(bool)>:
 800e868:	4b01      	ldr	r3, [pc, #4]	; (800e870 <DmxSend::Blackout(bool)+0x8>)
 800e86a:	6818      	ldr	r0, [r3, #0]
 800e86c:	f000 bce4 	b.w	800f238 <Dmx::Blackout()>
 800e870:	20001048 	andcs	r1, r0, r8, asr #32

0800e874 <DmxSend::FullOn()>:
 800e874:	4b01      	ldr	r3, [pc, #4]	; (800e87c <DmxSend::FullOn()+0x8>)
 800e876:	6818      	ldr	r0, [r3, #0]
 800e878:	f000 bd22 	b.w	800f2c0 <Dmx::FullOn()>
 800e87c:	20001048 	andcs	r1, r0, r8, asr #32

0800e880 <DmxSend::Print()>:
 800e880:	b510      	push	{r4, lr}
 800e882:	4c0e      	ldr	r4, [pc, #56]	; (800e8bc <DmxSend::Print()+0x3c>)
 800e884:	480e      	ldr	r0, [pc, #56]	; (800e8c0 <DmxSend::Print()+0x40>)
 800e886:	f7fb fd89 	bl	800a39c <printf>
 800e88a:	6823      	ldr	r3, [r4, #0]
 800e88c:	480d      	ldr	r0, [pc, #52]	; (800e8c4 <DmxSend::Print()+0x44>)
 800e88e:	6819      	ldr	r1, [r3, #0]
 800e890:	f7fb fd84 	bl	800a39c <printf>
 800e894:	6823      	ldr	r3, [r4, #0]
 800e896:	480c      	ldr	r0, [pc, #48]	; (800e8c8 <DmxSend::Print()+0x48>)
 800e898:	6859      	ldr	r1, [r3, #4]
 800e89a:	f7fb fd7f 	bl	800a39c <printf>
 800e89e:	6823      	ldr	r3, [r4, #0]
 800e8a0:	490a      	ldr	r1, [pc, #40]	; (800e8cc <DmxSend::Print()+0x4c>)
 800e8a2:	689b      	ldr	r3, [r3, #8]
 800e8a4:	480a      	ldr	r0, [pc, #40]	; (800e8d0 <DmxSend::Print()+0x50>)
 800e8a6:	fbb1 f1f3 	udiv	r1, r1, r3
 800e8aa:	f7fb fd77 	bl	800a39c <printf>
 800e8ae:	6823      	ldr	r3, [r4, #0]
 800e8b0:	4808      	ldr	r0, [pc, #32]	; (800e8d4 <DmxSend::Print()+0x54>)
 800e8b2:	8a19      	ldrh	r1, [r3, #16]
 800e8b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e8b8:	f7fb bd70 	b.w	800a39c <printf>
 800e8bc:	20001048 	andcs	r1, r0, r8, asr #32
 800e8c0:	080195e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, pc}
 800e8c4:	080195ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, ip, pc}
 800e8c8:	08019600 	stmdaeq	r1, {r9, sl, ip, pc}
 800e8cc:	000f4240 	andeq	r4, pc, r0, asr #4
 800e8d0:	08019614 	stmdaeq	r1, {r2, r4, r9, sl, ip, pc}
 800e8d4:	08019628 	stmdaeq	r1, {r3, r5, r9, sl, ip, pc}

0800e8d8 <DmxSend::~DmxSend()>:
 800e8d8:	b510      	push	{r4, lr}
 800e8da:	4604      	mov	r4, r0
 800e8dc:	f006 fdfe 	bl	80154dc <operator delete(void*)>
 800e8e0:	4620      	mov	r0, r4
 800e8e2:	bd10      	pop	{r4, pc}

0800e8e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800e8e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e8e6:	88c6      	ldrh	r6, [r0, #6]
 800e8e8:	8885      	ldrh	r5, [r0, #4]
 800e8ea:	42ae      	cmp	r6, r5
 800e8ec:	d216      	bcs.n	800e91c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800e8ee:	4604      	mov	r4, r0
 800e8f0:	6800      	ldr	r0, [r0, #0]
 800e8f2:	1bad      	subs	r5, r5, r6
 800e8f4:	4430      	add	r0, r6
 800e8f6:	7a26      	ldrb	r6, [r4, #8]
 800e8f8:	b923      	cbnz	r3, 800e904 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800e8fa:	b926      	cbnz	r6, 800e906 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800e8fc:	9200      	str	r2, [sp, #0]
 800e8fe:	460b      	mov	r3, r1
 800e900:	4a09      	ldr	r2, [pc, #36]	; (800e928 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800e902:	e003      	b.n	800e90c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e904:	b166      	cbz	r6, 800e920 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800e906:	9200      	str	r2, [sp, #0]
 800e908:	4a08      	ldr	r2, [pc, #32]	; (800e92c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800e90a:	460b      	mov	r3, r1
 800e90c:	4629      	mov	r1, r5
 800e90e:	f7fb fd6d 	bl	800a3ec <snprintf>
 800e912:	4285      	cmp	r5, r0
 800e914:	bfa2      	ittt	ge
 800e916:	88e3      	ldrhge	r3, [r4, #6]
 800e918:	181b      	addge	r3, r3, r0
 800e91a:	80e3      	strhge	r3, [r4, #6]
 800e91c:	b002      	add	sp, #8
 800e91e:	bd70      	pop	{r4, r5, r6, pc}
 800e920:	9200      	str	r2, [sp, #0]
 800e922:	460b      	mov	r3, r1
 800e924:	4a02      	ldr	r2, [pc, #8]	; (800e930 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e926:	e7f1      	b.n	800e90c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e928:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800e92c:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800e930:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

0800e934 <DmxParams::DmxParams(DmxParamsStore*)>:
 800e934:	4a04      	ldr	r2, [pc, #16]	; (800e948 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800e936:	6001      	str	r1, [r0, #0]
 800e938:	2100      	movs	r1, #0
 800e93a:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e93e:	f64f 7228 	movw	r2, #65320	; 0xff28
 800e942:	8182      	strh	r2, [r0, #12]
 800e944:	4770      	bx	lr
 800e946:	bf00      	nop
 800e948:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800e94c <DmxParams::Load()>:
 800e94c:	b508      	push	{r3, lr}
 800e94e:	2300      	movs	r3, #0
 800e950:	4601      	mov	r1, r0
 800e952:	6043      	str	r3, [r0, #4]
 800e954:	6800      	ldr	r0, [r0, #0]
 800e956:	b120      	cbz	r0, 800e962 <DmxParams::Load()+0x16>
 800e958:	6803      	ldr	r3, [r0, #0]
 800e95a:	3104      	adds	r1, #4
 800e95c:	68db      	ldr	r3, [r3, #12]
 800e95e:	4798      	blx	r3
 800e960:	2001      	movs	r0, #1
 800e962:	bd08      	pop	{r3, pc}

0800e964 <DmxParams::Load(char const*, unsigned int)>:
 800e964:	6803      	ldr	r3, [r0, #0]
 800e966:	b1d3      	cbz	r3, 800e99e <DmxParams::Load(char const*, unsigned int)+0x3a>
 800e968:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e96a:	2300      	movs	r3, #0
 800e96c:	6043      	str	r3, [r0, #4]
 800e96e:	4604      	mov	r4, r0
 800e970:	460d      	mov	r5, r1
 800e972:	4616      	mov	r6, r2
 800e974:	490a      	ldr	r1, [pc, #40]	; (800e9a0 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800e976:	4602      	mov	r2, r0
 800e978:	4668      	mov	r0, sp
 800e97a:	f005 ffe1 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e97e:	4632      	mov	r2, r6
 800e980:	4629      	mov	r1, r5
 800e982:	4668      	mov	r0, sp
 800e984:	f005 ffe0 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 800e988:	4621      	mov	r1, r4
 800e98a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e98e:	6803      	ldr	r3, [r0, #0]
 800e990:	689b      	ldr	r3, [r3, #8]
 800e992:	4798      	blx	r3
 800e994:	4668      	mov	r0, sp
 800e996:	f005 ffd6 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 800e99a:	b002      	add	sp, #8
 800e99c:	bd70      	pop	{r4, r5, r6, pc}
 800e99e:	4770      	bx	lr
 800e9a0:	0800ea71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, sp, lr, pc}

0800e9a4 <DmxParams::callbackFunction(char const*)>:
 800e9a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e9a6:	460d      	mov	r5, r1
 800e9a8:	4604      	mov	r4, r0
 800e9aa:	492d      	ldr	r1, [pc, #180]	; (800ea60 <DmxParams::callbackFunction(char const*)+0xbc>)
 800e9ac:	f10d 0206 	add.w	r2, sp, #6
 800e9b0:	4628      	mov	r0, r5
 800e9b2:	f006 f8b2 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e9b6:	b988      	cbnz	r0, 800e9dc <DmxParams::callbackFunction(char const*)+0x38>
 800e9b8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e9bc:	6863      	ldr	r3, [r4, #4]
 800e9be:	2a5b      	cmp	r2, #91	; 0x5b
 800e9c0:	d907      	bls.n	800e9d2 <DmxParams::callbackFunction(char const*)+0x2e>
 800e9c2:	2ab0      	cmp	r2, #176	; 0xb0
 800e9c4:	d005      	beq.n	800e9d2 <DmxParams::callbackFunction(char const*)+0x2e>
 800e9c6:	8122      	strh	r2, [r4, #8]
 800e9c8:	f043 0301 	orr.w	r3, r3, #1
 800e9cc:	6063      	str	r3, [r4, #4]
 800e9ce:	b003      	add	sp, #12
 800e9d0:	bd30      	pop	{r4, r5, pc}
 800e9d2:	22b0      	movs	r2, #176	; 0xb0
 800e9d4:	8122      	strh	r2, [r4, #8]
 800e9d6:	f023 0301 	bic.w	r3, r3, #1
 800e9da:	e7f7      	b.n	800e9cc <DmxParams::callbackFunction(char const*)+0x28>
 800e9dc:	4921      	ldr	r1, [pc, #132]	; (800ea64 <DmxParams::callbackFunction(char const*)+0xc0>)
 800e9de:	f10d 0206 	add.w	r2, sp, #6
 800e9e2:	4628      	mov	r0, r5
 800e9e4:	f006 f899 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e9e8:	b968      	cbnz	r0, 800ea06 <DmxParams::callbackFunction(char const*)+0x62>
 800e9ea:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e9ee:	6863      	ldr	r3, [r4, #4]
 800e9f0:	2a0c      	cmp	r2, #12
 800e9f2:	bf93      	iteet	ls
 800e9f4:	220c      	movls	r2, #12
 800e9f6:	8162      	strhhi	r2, [r4, #10]
 800e9f8:	f043 0302 	orrhi.w	r3, r3, #2
 800e9fc:	8162      	strhls	r2, [r4, #10]
 800e9fe:	bf98      	it	ls
 800ea00:	f023 0302 	bicls.w	r3, r3, #2
 800ea04:	e7e2      	b.n	800e9cc <DmxParams::callbackFunction(char const*)+0x28>
 800ea06:	4918      	ldr	r1, [pc, #96]	; (800ea68 <DmxParams::callbackFunction(char const*)+0xc4>)
 800ea08:	f10d 0205 	add.w	r2, sp, #5
 800ea0c:	4628      	mov	r0, r5
 800ea0e:	f006 f8cc 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ea12:	b950      	cbnz	r0, 800ea2a <DmxParams::callbackFunction(char const*)+0x86>
 800ea14:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800ea18:	6863      	ldr	r3, [r4, #4]
 800ea1a:	7322      	strb	r2, [r4, #12]
 800ea1c:	2a28      	cmp	r2, #40	; 0x28
 800ea1e:	bf14      	ite	ne
 800ea20:	f043 0304 	orrne.w	r3, r3, #4
 800ea24:	f023 0304 	biceq.w	r3, r3, #4
 800ea28:	e7d0      	b.n	800e9cc <DmxParams::callbackFunction(char const*)+0x28>
 800ea2a:	4910      	ldr	r1, [pc, #64]	; (800ea6c <DmxParams::callbackFunction(char const*)+0xc8>)
 800ea2c:	f10d 0206 	add.w	r2, sp, #6
 800ea30:	4628      	mov	r0, r5
 800ea32:	f006 f872 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ea36:	2800      	cmp	r0, #0
 800ea38:	d1c9      	bne.n	800e9ce <DmxParams::callbackFunction(char const*)+0x2a>
 800ea3a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ea3e:	6863      	ldr	r3, [r4, #4]
 800ea40:	1e91      	subs	r1, r2, #2
 800ea42:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800ea46:	bf3b      	ittet	cc
 800ea48:	0852      	lsrcc	r2, r2, #1
 800ea4a:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800ea4e:	22ff      	movcs	r2, #255	; 0xff
 800ea50:	7362      	strbcc	r2, [r4, #13]
 800ea52:	bf32      	itee	cc
 800ea54:	f043 0308 	orrcc.w	r3, r3, #8
 800ea58:	7362      	strbcs	r2, [r4, #13]
 800ea5a:	f023 0308 	biccs.w	r3, r3, #8
 800ea5e:	e7b5      	b.n	800e9cc <DmxParams::callbackFunction(char const*)+0x28>
 800ea60:	08019674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, ip, pc}
 800ea64:	08019698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, pc}
 800ea68:	0801968b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, ip, pc}
 800ea6c:	0801967f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, pc}

0800ea70 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800ea70:	f7ff bf98 	b.w	800e9a4 <DmxParams::callbackFunction(char const*)>

0800ea74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800ea74:	b570      	push	{r4, r5, r6, lr}
 800ea76:	4604      	mov	r4, r0
 800ea78:	b086      	sub	sp, #24
 800ea7a:	4615      	mov	r5, r2
 800ea7c:	461e      	mov	r6, r3
 800ea7e:	3004      	adds	r0, #4
 800ea80:	b369      	cbz	r1, 800eade <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800ea82:	220a      	movs	r2, #10
 800ea84:	f006 fded 	bl	8015662 <memmove>
 800ea88:	462a      	mov	r2, r5
 800ea8a:	4933      	ldr	r1, [pc, #204]	; (800eb58 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800ea8c:	4633      	mov	r3, r6
 800ea8e:	a803      	add	r0, sp, #12
 800ea90:	f005 feb6 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ea94:	6863      	ldr	r3, [r4, #4]
 800ea96:	8922      	ldrh	r2, [r4, #8]
 800ea98:	4930      	ldr	r1, [pc, #192]	; (800eb5c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800ea9a:	f003 0301 	and.w	r3, r3, #1
 800ea9e:	a803      	add	r0, sp, #12
 800eaa0:	f7ff ff20 	bl	800e8e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800eaa4:	6863      	ldr	r3, [r4, #4]
 800eaa6:	8962      	ldrh	r2, [r4, #10]
 800eaa8:	492d      	ldr	r1, [pc, #180]	; (800eb60 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800eaaa:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800eaae:	a803      	add	r0, sp, #12
 800eab0:	f7ff ff18 	bl	800e8e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800eab4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eab8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800eabc:	7b23      	ldrb	r3, [r4, #12]
 800eabe:	6861      	ldr	r1, [r4, #4]
 800eac0:	42aa      	cmp	r2, r5
 800eac2:	d221      	bcs.n	800eb08 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800eac4:	9803      	ldr	r0, [sp, #12]
 800eac6:	0749      	lsls	r1, r1, #29
 800eac8:	4410      	add	r0, r2
 800eaca:	eba5 0502 	sub.w	r5, r5, r2
 800eace:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ead2:	d40b      	bmi.n	800eaec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800ead4:	b95a      	cbnz	r2, 800eaee <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800ead6:	9300      	str	r3, [sp, #0]
 800ead8:	4a22      	ldr	r2, [pc, #136]	; (800eb64 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800eada:	4b23      	ldr	r3, [pc, #140]	; (800eb68 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800eadc:	e00a      	b.n	800eaf4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800eade:	6823      	ldr	r3, [r4, #0]
 800eae0:	681a      	ldr	r2, [r3, #0]
 800eae2:	4601      	mov	r1, r0
 800eae4:	68d2      	ldr	r2, [r2, #12]
 800eae6:	4618      	mov	r0, r3
 800eae8:	4790      	blx	r2
 800eaea:	e7cd      	b.n	800ea88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800eaec:	b37a      	cbz	r2, 800eb4e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800eaee:	9300      	str	r3, [sp, #0]
 800eaf0:	4a1e      	ldr	r2, [pc, #120]	; (800eb6c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800eaf2:	4b1d      	ldr	r3, [pc, #116]	; (800eb68 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800eaf4:	4629      	mov	r1, r5
 800eaf6:	f7fb fc79 	bl	800a3ec <snprintf>
 800eafa:	4285      	cmp	r5, r0
 800eafc:	bfa2      	ittt	ge
 800eafe:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800eb02:	18c0      	addge	r0, r0, r3
 800eb04:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800eb08:	7b62      	ldrb	r2, [r4, #13]
 800eb0a:	6863      	ldr	r3, [r4, #4]
 800eb0c:	4918      	ldr	r1, [pc, #96]	; (800eb70 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800eb0e:	3201      	adds	r2, #1
 800eb10:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800eb14:	0052      	lsls	r2, r2, #1
 800eb16:	a803      	add	r0, sp, #12
 800eb18:	f7ff fee4 	bl	800e8e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800eb1c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800eb20:	b17b      	cbz	r3, 800eb42 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800eb22:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eb26:	9b03      	ldr	r3, [sp, #12]
 800eb28:	4413      	add	r3, r2
 800eb2a:	227d      	movs	r2, #125	; 0x7d
 800eb2c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800eb30:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eb34:	9903      	ldr	r1, [sp, #12]
 800eb36:	54ca      	strb	r2, [r1, r3]
 800eb38:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eb3c:	3301      	adds	r3, #1
 800eb3e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800eb42:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800eb46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eb48:	601a      	str	r2, [r3, #0]
 800eb4a:	b006      	add	sp, #24
 800eb4c:	bd70      	pop	{r4, r5, r6, pc}
 800eb4e:	9300      	str	r3, [sp, #0]
 800eb50:	4a08      	ldr	r2, [pc, #32]	; (800eb74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800eb52:	4b05      	ldr	r3, [pc, #20]	; (800eb68 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800eb54:	e7ce      	b.n	800eaf4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800eb56:	bf00      	nop
 800eb58:	080196a1 	stmdaeq	r1, {r0, r5, r7, r9, sl, ip, pc}
 800eb5c:	08019674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, ip, pc}
 800eb60:	08019698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, pc}
 800eb64:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800eb68:	0801968b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, ip, pc}
 800eb6c:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800eb70:	0801967f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, pc}
 800eb74:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

0800eb78 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800eb78:	b513      	push	{r0, r1, r4, lr}
 800eb7a:	6804      	ldr	r4, [r0, #0]
 800eb7c:	b914      	cbnz	r4, 800eb84 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800eb7e:	601c      	str	r4, [r3, #0]
 800eb80:	b002      	add	sp, #8
 800eb82:	bd10      	pop	{r4, pc}
 800eb84:	9300      	str	r3, [sp, #0]
 800eb86:	4613      	mov	r3, r2
 800eb88:	460a      	mov	r2, r1
 800eb8a:	2100      	movs	r1, #0
 800eb8c:	f7ff ff72 	bl	800ea74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800eb90:	e7f6      	b.n	800eb80 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800eb94 <DmxParams::Set(Dmx*)>:
 800eb94:	b513      	push	{r0, r1, r4, lr}
 800eb96:	4604      	mov	r4, r0
 800eb98:	4608      	mov	r0, r1
 800eb9a:	6863      	ldr	r3, [r4, #4]
 800eb9c:	07db      	lsls	r3, r3, #31
 800eb9e:	d504      	bpl.n	800ebaa <DmxParams::Set(Dmx*)+0x16>
 800eba0:	8921      	ldrh	r1, [r4, #8]
 800eba2:	9001      	str	r0, [sp, #4]
 800eba4:	f000 faf8 	bl	800f198 <Dmx::SetDmxBreakTime(unsigned int)>
 800eba8:	9801      	ldr	r0, [sp, #4]
 800ebaa:	6863      	ldr	r3, [r4, #4]
 800ebac:	0799      	lsls	r1, r3, #30
 800ebae:	d504      	bpl.n	800ebba <DmxParams::Set(Dmx*)+0x26>
 800ebb0:	8961      	ldrh	r1, [r4, #10]
 800ebb2:	9001      	str	r0, [sp, #4]
 800ebb4:	f000 fafa 	bl	800f1ac <Dmx::SetDmxMabTime(unsigned int)>
 800ebb8:	9801      	ldr	r0, [sp, #4]
 800ebba:	6863      	ldr	r3, [r4, #4]
 800ebbc:	075a      	lsls	r2, r3, #29
 800ebbe:	d508      	bpl.n	800ebd2 <DmxParams::Set(Dmx*)+0x3e>
 800ebc0:	7b21      	ldrb	r1, [r4, #12]
 800ebc2:	b111      	cbz	r1, 800ebca <DmxParams::Set(Dmx*)+0x36>
 800ebc4:	4b09      	ldr	r3, [pc, #36]	; (800ebec <DmxParams::Set(Dmx*)+0x58>)
 800ebc6:	fbb3 f1f1 	udiv	r1, r3, r1
 800ebca:	9001      	str	r0, [sp, #4]
 800ebcc:	f000 fabc 	bl	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 800ebd0:	9801      	ldr	r0, [sp, #4]
 800ebd2:	6863      	ldr	r3, [r4, #4]
 800ebd4:	071b      	lsls	r3, r3, #28
 800ebd6:	d507      	bpl.n	800ebe8 <DmxParams::Set(Dmx*)+0x54>
 800ebd8:	7b61      	ldrb	r1, [r4, #13]
 800ebda:	3101      	adds	r1, #1
 800ebdc:	0049      	lsls	r1, r1, #1
 800ebde:	b002      	add	sp, #8
 800ebe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebe4:	f000 baec 	b.w	800f1c0 <Dmx::SetDmxSlots(unsigned short)>
 800ebe8:	b002      	add	sp, #8
 800ebea:	bd10      	pop	{r4, pc}
 800ebec:	000f4240 	andeq	r4, pc, r0, asr #4

0800ebf0 <DmxParams::Dump()>:
 800ebf0:	4770      	bx	lr

0800ebf2 <_gpio_mode_output(unsigned int, unsigned int)>:
 800ebf2:	b513      	push	{r0, r1, r4, lr}
 800ebf4:	460a      	mov	r2, r1
 800ebf6:	9101      	str	r1, [sp, #4]
 800ebf8:	2100      	movs	r1, #0
 800ebfa:	4604      	mov	r4, r0
 800ebfc:	f007 fc7d 	bl	80164fa <gpio_af_set>
 800ec00:	9b01      	ldr	r3, [sp, #4]
 800ec02:	2200      	movs	r2, #0
 800ec04:	2101      	movs	r1, #1
 800ec06:	4620      	mov	r0, r4
 800ec08:	b002      	add	sp, #8
 800ec0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec0e:	f007 bc39 	b.w	8016484 <gpio_mode_set>
	...

0800ec14 <_port_to_uart(unsigned int)>:
 800ec14:	4a03      	ldr	r2, [pc, #12]	; (800ec24 <_port_to_uart(unsigned int)+0x10>)
 800ec16:	4b04      	ldr	r3, [pc, #16]	; (800ec28 <_port_to_uart(unsigned int)+0x14>)
 800ec18:	2800      	cmp	r0, #0
 800ec1a:	bf14      	ite	ne
 800ec1c:	4610      	movne	r0, r2
 800ec1e:	4618      	moveq	r0, r3
 800ec20:	4770      	bx	lr
 800ec22:	bf00      	nop
 800ec24:	40011400 	andmi	r1, r1, r0, lsl #8
 800ec28:	40004800 	andmi	r4, r0, r0, lsl #16

0800ec2c <TIMER1_IRQHandler>:
 800ec2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ec2e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ec32:	4d47      	ldr	r5, [pc, #284]	; (800ed50 <TIMER1_IRQHandler+0x124>)
 800ec34:	691e      	ldr	r6, [r3, #16]
 800ec36:	4f47      	ldr	r7, [pc, #284]	; (800ed54 <TIMER1_IRQHandler+0x128>)
 800ec38:	882c      	ldrh	r4, [r5, #0]
 800ec3a:	2308      	movs	r3, #8
 800ec3c:	07b1      	lsls	r1, r6, #30
 800ec3e:	b2a4      	uxth	r4, r4
 800ec40:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
 800ec44:	d528      	bpl.n	800ec98 <TIMER1_IRQHandler+0x6c>
 800ec46:	07e2      	lsls	r2, r4, #31
 800ec48:	d50d      	bpl.n	800ec66 <TIMER1_IRQHandler+0x3a>
 800ec4a:	882b      	ldrh	r3, [r5, #0]
 800ec4c:	4842      	ldr	r0, [pc, #264]	; (800ed58 <TIMER1_IRQHandler+0x12c>)
 800ec4e:	b29b      	uxth	r3, r3
 800ec50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ec54:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ec58:	802b      	strh	r3, [r5, #0]
 800ec5a:	f7ff ffca 	bl	800ebf2 <_gpio_mode_output(unsigned int, unsigned int)>
 800ec5e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ec62:	f8c7 3c28 	str.w	r3, [r7, #3112]	; 0xc28
 800ec66:	07a3      	lsls	r3, r4, #30
 800ec68:	d50c      	bpl.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ec6a:	882b      	ldrh	r3, [r5, #0]
 800ec6c:	483b      	ldr	r0, [pc, #236]	; (800ed5c <TIMER1_IRQHandler+0x130>)
 800ec6e:	b29b      	uxth	r3, r3
 800ec70:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ec74:	2140      	movs	r1, #64	; 0x40
 800ec76:	802b      	strh	r3, [r5, #0]
 800ec78:	f7ff ffbb 	bl	800ebf2 <_gpio_mode_output(unsigned int, unsigned int)>
 800ec7c:	4b35      	ldr	r3, [pc, #212]	; (800ed54 <TIMER1_IRQHandler+0x128>)
 800ec7e:	2240      	movs	r2, #64	; 0x40
 800ec80:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800ec84:	4631      	mov	r1, r6
 800ec86:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ec8a:	f007 fe20 	bl	80168ce <timer_interrupt_flag_clear>
 800ec8e:	4b31      	ldr	r3, [pc, #196]	; (800ed54 <TIMER1_IRQHandler+0x128>)
 800ec90:	2208      	movs	r2, #8
 800ec92:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800ec96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec98:	0777      	lsls	r7, r6, #29
 800ec9a:	d51c      	bpl.n	800ecd6 <TIMER1_IRQHandler+0xaa>
 800ec9c:	05e5      	lsls	r5, r4, #23
 800ec9e:	d50c      	bpl.n	800ecba <TIMER1_IRQHandler+0x8e>
 800eca0:	482d      	ldr	r0, [pc, #180]	; (800ed58 <TIMER1_IRQHandler+0x12c>)
 800eca2:	2201      	movs	r2, #1
 800eca4:	2102      	movs	r1, #2
 800eca6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ecaa:	f007 fbeb 	bl	8016484 <gpio_mode_set>
 800ecae:	482a      	ldr	r0, [pc, #168]	; (800ed58 <TIMER1_IRQHandler+0x12c>)
 800ecb0:	f44f 7280 	mov.w	r2, #256	; 0x100
 800ecb4:	2107      	movs	r1, #7
 800ecb6:	f007 fc20 	bl	80164fa <gpio_af_set>
 800ecba:	05a0      	lsls	r0, r4, #22
 800ecbc:	d5e2      	bpl.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ecbe:	4827      	ldr	r0, [pc, #156]	; (800ed5c <TIMER1_IRQHandler+0x130>)
 800ecc0:	2340      	movs	r3, #64	; 0x40
 800ecc2:	2201      	movs	r2, #1
 800ecc4:	2102      	movs	r1, #2
 800ecc6:	f007 fbdd 	bl	8016484 <gpio_mode_set>
 800ecca:	4824      	ldr	r0, [pc, #144]	; (800ed5c <TIMER1_IRQHandler+0x130>)
 800eccc:	2240      	movs	r2, #64	; 0x40
 800ecce:	2108      	movs	r1, #8
 800ecd0:	f007 fc13 	bl	80164fa <gpio_af_set>
 800ecd4:	e7d6      	b.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ecd6:	0731      	lsls	r1, r6, #28
 800ecd8:	d5d4      	bpl.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ecda:	05e2      	lsls	r2, r4, #23
 800ecdc:	d516      	bpl.n	800ed0c <TIMER1_IRQHandler+0xe0>
 800ecde:	4d20      	ldr	r5, [pc, #128]	; (800ed60 <TIMER1_IRQHandler+0x134>)
 800ece0:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800ece2:	f023 0301 	bic.w	r3, r3, #1
 800ece6:	65ab      	str	r3, [r5, #88]	; 0x58
 800ece8:	2103      	movs	r1, #3
 800ecea:	4628      	mov	r0, r5
 800ecec:	2220      	movs	r2, #32
 800ecee:	f006 ff9d 	bl	8015c2c <dma_interrupt_flag_clear>
 800ecf2:	4b1c      	ldr	r3, [pc, #112]	; (800ed64 <TIMER1_IRQHandler+0x138>)
 800ecf4:	666b      	str	r3, [r5, #100]	; 0x64
 800ecf6:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800ecfa:	65eb      	str	r3, [r5, #92]	; 0x5c
 800ecfc:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800ecfe:	481a      	ldr	r0, [pc, #104]	; (800ed68 <TIMER1_IRQHandler+0x13c>)
 800ed00:	f043 0301 	orr.w	r3, r3, #1
 800ed04:	65ab      	str	r3, [r5, #88]	; 0x58
 800ed06:	2180      	movs	r1, #128	; 0x80
 800ed08:	f008 f828 	bl	8016d5c <usart_dma_transmit_config>
 800ed0c:	05a3      	lsls	r3, r4, #22
 800ed0e:	d5b9      	bpl.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ed10:	4c13      	ldr	r4, [pc, #76]	; (800ed60 <TIMER1_IRQHandler+0x134>)
 800ed12:	4816      	ldr	r0, [pc, #88]	; (800ed6c <TIMER1_IRQHandler+0x140>)
 800ed14:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800ed18:	f023 0301 	bic.w	r3, r3, #1
 800ed1c:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800ed20:	2220      	movs	r2, #32
 800ed22:	2106      	movs	r1, #6
 800ed24:	f006 ff82 	bl	8015c2c <dma_interrupt_flag_clear>
 800ed28:	4b0e      	ldr	r3, [pc, #56]	; (800ed64 <TIMER1_IRQHandler+0x138>)
 800ed2a:	4811      	ldr	r0, [pc, #68]	; (800ed70 <TIMER1_IRQHandler+0x144>)
 800ed2c:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800ed30:	f8b3 3406 	ldrh.w	r3, [r3, #1030]	; 0x406
 800ed34:	f8c4 24ac 	str.w	r2, [r4, #1196]	; 0x4ac
 800ed38:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 800ed3c:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800ed40:	f043 0301 	orr.w	r3, r3, #1
 800ed44:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800ed48:	2180      	movs	r1, #128	; 0x80
 800ed4a:	f008 f807 	bl	8016d5c <usart_dma_transmit_config>
 800ed4e:	e799      	b.n	800ec84 <TIMER1_IRQHandler+0x58>
 800ed50:	20001044 	andcs	r1, r0, r4, asr #32
 800ed54:	40020000 	andmi	r0, r2, r0
 800ed58:	40020c00 	andmi	r0, r2, r0, lsl #24
 800ed5c:	40020800 	andmi	r0, r2, r0, lsl #16
 800ed60:	40026000 	andmi	r6, r2, r0
 800ed64:	20000c34 	andcs	r0, r0, r4, lsr ip
 800ed68:	40004800 	andmi	r4, r0, r0, lsl #16
 800ed6c:	40026400 	andmi	r6, r2, r0, lsl #8
 800ed70:	40011400 	andmi	r1, r1, r0, lsl #8

0800ed74 <Dmx::ClearData(unsigned int)>:
 800ed74:	4a0a      	ldr	r2, [pc, #40]	; (800eda0 <Dmx::ClearData(unsigned int)+0x2c>)
 800ed76:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ed7a:	fb03 2301 	mla	r3, r3, r1, r2
 800ed7e:	b510      	push	{r4, lr}
 800ed80:	f203 2002 	addw	r0, r3, #514	; 0x202
 800ed84:	2400      	movs	r4, #0
 800ed86:	f823 4b02 	strh.w	r4, [r3], #2
 800ed8a:	4283      	cmp	r3, r0
 800ed8c:	d1fb      	bne.n	800ed86 <Dmx::ClearData(unsigned int)+0x12>
 800ed8e:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ed92:	fb03 2101 	mla	r1, r3, r1, r2
 800ed96:	f240 2301 	movw	r3, #513	; 0x201
 800ed9a:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 800ed9e:	bd10      	pop	{r4, pc}
 800eda0:	20000c34 	andcs	r0, r0, r4, lsr ip

0800eda4 <Dmx::StartData(unsigned int, unsigned int)>:
 800eda4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eda6:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800edaa:	b085      	sub	sp, #20
 800edac:	6943      	ldr	r3, [r0, #20]
 800edae:	460c      	mov	r4, r1
 800edb0:	4615      	mov	r5, r2
 800edb2:	2b00      	cmp	r3, #0
 800edb4:	d168      	bne.n	800ee88 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800edb6:	4e41      	ldr	r6, [pc, #260]	; (800eebc <Dmx::StartData(unsigned int, unsigned int)+0x118>)
 800edb8:	8834      	ldrh	r4, [r6, #0]
 800edba:	b2a4      	uxth	r4, r4
 800edbc:	2c00      	cmp	r4, #0
 800edbe:	d157      	bne.n	800ee70 <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 800edc0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800edc4:	f007 fbda 	bl	801657c <rcu_periph_clock_enable>
 800edc8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edcc:	f007 fc92 	bl	80166f4 <timer_deinit>
 800edd0:	4b3b      	ldr	r3, [pc, #236]	; (800eec0 <Dmx::StartData(unsigned int, unsigned int)+0x11c>)
 800edd2:	f88d 400c 	strb.w	r4, [sp, #12]
 800edd6:	681b      	ldr	r3, [r3, #0]
 800edd8:	9302      	str	r3, [sp, #8]
 800edda:	4669      	mov	r1, sp
 800eddc:	23c7      	movs	r3, #199	; 0xc7
 800edde:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ede2:	e9cd 3400 	strd	r3, r4, [sp]
 800ede6:	f007 fd2b 	bl	8016840 <timer_init>
 800edea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800edee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edf2:	f007 fd6f 	bl	80168d4 <timer_flag_clear>
 800edf6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800edfa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edfe:	f007 fd66 	bl	80168ce <timer_interrupt_flag_clear>
 800ee02:	2210      	movs	r2, #16
 800ee04:	4621      	mov	r1, r4
 800ee06:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee0a:	f007 fe53 	bl	8016ab4 <timer_channel_output_mode_config>
 800ee0e:	2210      	movs	r2, #16
 800ee10:	2101      	movs	r1, #1
 800ee12:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee16:	f007 fe4d 	bl	8016ab4 <timer_channel_output_mode_config>
 800ee1a:	4f2a      	ldr	r7, [pc, #168]	; (800eec4 <Dmx::StartData(unsigned int, unsigned int)+0x120>)
 800ee1c:	2210      	movs	r2, #16
 800ee1e:	2102      	movs	r1, #2
 800ee20:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee24:	f007 fe46 	bl	8016ab4 <timer_channel_output_mode_config>
 800ee28:	4622      	mov	r2, r4
 800ee2a:	4621      	mov	r1, r4
 800ee2c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee30:	f007 fe66 	bl	8016b00 <timer_channel_output_pulse_value_config>
 800ee34:	683a      	ldr	r2, [r7, #0]
 800ee36:	2101      	movs	r1, #1
 800ee38:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee3c:	f007 fe60 	bl	8016b00 <timer_channel_output_pulse_value_config>
 800ee40:	4b21      	ldr	r3, [pc, #132]	; (800eec8 <Dmx::StartData(unsigned int, unsigned int)+0x124>)
 800ee42:	683a      	ldr	r2, [r7, #0]
 800ee44:	681b      	ldr	r3, [r3, #0]
 800ee46:	2102      	movs	r1, #2
 800ee48:	441a      	add	r2, r3
 800ee4a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee4e:	f007 fe57 	bl	8016b00 <timer_channel_output_pulse_value_config>
 800ee52:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee56:	210e      	movs	r1, #14
 800ee58:	f007 fd35 	bl	80168c6 <timer_interrupt_enable>
 800ee5c:	4b1b      	ldr	r3, [pc, #108]	; (800eecc <Dmx::StartData(unsigned int, unsigned int)+0x128>)
 800ee5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee62:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800ee66:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee6a:	601a      	str	r2, [r3, #0]
 800ee6c:	f007 fd26 	bl	80168bc <timer_enable>
 800ee70:	8831      	ldrh	r1, [r6, #0]
 800ee72:	2201      	movs	r2, #1
 800ee74:	fa02 f305 	lsl.w	r3, r2, r5
 800ee78:	430b      	orrs	r3, r1
 800ee7a:	b29b      	uxth	r3, r3
 800ee7c:	8033      	strh	r3, [r6, #0]
 800ee7e:	4b14      	ldr	r3, [pc, #80]	; (800eed0 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800ee80:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800ee84:	b005      	add	sp, #20
 800ee86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee88:	4b12      	ldr	r3, [pc, #72]	; (800eed4 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800ee8a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ee8e:	fb02 3305 	mla	r3, r2, r5, r3
 800ee92:	2200      	movs	r2, #0
 800ee94:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ee98:	2107      	movs	r1, #7
 800ee9a:	4620      	mov	r0, r4
 800ee9c:	f007 ff64 	bl	8016d68 <usart_flag_get>
 800eea0:	2800      	cmp	r0, #0
 800eea2:	d0f9      	beq.n	800ee98 <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 800eea4:	490c      	ldr	r1, [pc, #48]	; (800eed8 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800eea6:	4620      	mov	r0, r4
 800eea8:	f007 ff80 	bl	8016dac <usart_interrupt_flag_clear>
 800eeac:	f240 3105 	movw	r1, #773	; 0x305
 800eeb0:	4620      	mov	r0, r4
 800eeb2:	f007 ff6f 	bl	8016d94 <usart_interrupt_enable>
 800eeb6:	4b06      	ldr	r3, [pc, #24]	; (800eed0 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800eeb8:	2202      	movs	r2, #2
 800eeba:	e7e1      	b.n	800ee80 <Dmx::StartData(unsigned int, unsigned int)+0xdc>
 800eebc:	20001044 	andcs	r1, r0, r4, asr #32
 800eec0:	20000004 	andcs	r0, r0, r4
 800eec4:	2000000c 	andcs	r0, r0, ip
 800eec8:	20000008 	andcs	r0, r0, r8
 800eecc:	e000e100 	and	lr, r0, r0, lsl #2
 800eed0:	2000103c 	andcs	r1, r0, ip, lsr r0
 800eed4:	20000814 	andcs	r0, r0, r4, lsl r8
 800eed8:	00050305 	andeq	r0, r5, r5, lsl #6

0800eedc <Dmx::StopData(unsigned int, unsigned int)>:
 800eedc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eee0:	4f1e      	ldr	r7, [pc, #120]	; (800ef5c <Dmx::StopData(unsigned int, unsigned int)+0x80>)
 800eee2:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800eee6:	4688      	mov	r8, r1
 800eee8:	4614      	mov	r4, r2
 800eeea:	b333      	cbz	r3, 800ef3a <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800eeec:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800eef0:	6943      	ldr	r3, [r0, #20]
 800eef2:	bb23      	cbnz	r3, 800ef3e <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800eef4:	4d1a      	ldr	r5, [pc, #104]	; (800ef60 <Dmx::StopData(unsigned int, unsigned int)+0x84>)
 800eef6:	882b      	ldrh	r3, [r5, #0]
 800eef8:	2601      	movs	r6, #1
 800eefa:	fa06 f202 	lsl.w	r2, r6, r2
 800eefe:	b29b      	uxth	r3, r3
 800ef00:	ea23 0302 	bic.w	r3, r3, r2
 800ef04:	802b      	strh	r3, [r5, #0]
 800ef06:	f3bf 8f5f 	dmb	sy
 800ef0a:	882b      	ldrh	r3, [r5, #0]
 800ef0c:	f104 0208 	add.w	r2, r4, #8
 800ef10:	b29b      	uxth	r3, r3
 800ef12:	4096      	lsls	r6, r2
 800ef14:	ea36 0303 	bics.w	r3, r6, r3
 800ef18:	d105      	bne.n	800ef26 <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800ef1a:	2107      	movs	r1, #7
 800ef1c:	4640      	mov	r0, r8
 800ef1e:	f007 ff23 	bl	8016d68 <usart_flag_get>
 800ef22:	2801      	cmp	r0, #1
 800ef24:	d1f9      	bne.n	800ef1a <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800ef26:	882b      	ldrh	r3, [r5, #0]
 800ef28:	b29b      	uxth	r3, r3
 800ef2a:	ea23 0306 	bic.w	r3, r3, r6
 800ef2e:	802b      	strh	r3, [r5, #0]
 800ef30:	f3bf 8f4f 	dsb	sy
 800ef34:	2300      	movs	r3, #0
 800ef36:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800ef3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef3e:	f240 3105 	movw	r1, #773	; 0x305
 800ef42:	4640      	mov	r0, r8
 800ef44:	f007 ff30 	bl	8016da8 <usart_interrupt_disable>
 800ef48:	4b06      	ldr	r3, [pc, #24]	; (800ef64 <Dmx::StopData(unsigned int, unsigned int)+0x88>)
 800ef4a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ef4e:	fb02 3304 	mla	r3, r2, r4, r3
 800ef52:	2200      	movs	r2, #0
 800ef54:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ef58:	e7ec      	b.n	800ef34 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800ef5a:	bf00      	nop
 800ef5c:	2000103c 	andcs	r1, r0, ip, lsr r0
 800ef60:	20001044 	andcs	r1, r0, r4, asr #32
 800ef64:	20000814 	andcs	r0, r0, r4, lsl r8

0800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800ef68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ef6a:	4605      	mov	r5, r0
 800ef6c:	460c      	mov	r4, r1
 800ef6e:	4608      	mov	r0, r1
 800ef70:	4616      	mov	r6, r2
 800ef72:	461f      	mov	r7, r3
 800ef74:	f7ff fe4e 	bl	800ec14 <_port_to_uart(unsigned int)>
 800ef78:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ef7c:	4601      	mov	r1, r0
 800ef7e:	695a      	ldr	r2, [r3, #20]
 800ef80:	42b2      	cmp	r2, r6
 800ef82:	d01b      	beq.n	800efbc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800ef84:	9001      	str	r0, [sp, #4]
 800ef86:	615e      	str	r6, [r3, #20]
 800ef88:	4622      	mov	r2, r4
 800ef8a:	4628      	mov	r0, r5
 800ef8c:	f7ff ffa6 	bl	800eedc <Dmx::StopData(unsigned int, unsigned int)>
 800ef90:	9901      	ldr	r1, [sp, #4]
 800ef92:	b94e      	cbnz	r6, 800efa8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800ef94:	4b11      	ldr	r3, [pc, #68]	; (800efdc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800ef96:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800ef9a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800ef9e:	685b      	ldr	r3, [r3, #4]
 800efa0:	6193      	str	r3, [r2, #24]
 800efa2:	b967      	cbnz	r7, 800efbe <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800efa4:	b003      	add	sp, #12
 800efa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efa8:	2e01      	cmp	r6, #1
 800efaa:	d1fa      	bne.n	800efa2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800efac:	4b0b      	ldr	r3, [pc, #44]	; (800efdc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800efae:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800efb2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800efb6:	685b      	ldr	r3, [r3, #4]
 800efb8:	6293      	str	r3, [r2, #40]	; 0x28
 800efba:	e7f2      	b.n	800efa2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800efbc:	b137      	cbz	r7, 800efcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800efbe:	4622      	mov	r2, r4
 800efc0:	4628      	mov	r0, r5
 800efc2:	b003      	add	sp, #12
 800efc4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800efc8:	f7ff beec 	b.w	800eda4 <Dmx::StartData(unsigned int, unsigned int)>
 800efcc:	4622      	mov	r2, r4
 800efce:	4628      	mov	r0, r5
 800efd0:	b003      	add	sp, #12
 800efd2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800efd6:	f7ff bf81 	b.w	800eedc <Dmx::StopData(unsigned int, unsigned int)>
 800efda:	bf00      	nop
 800efdc:	080196ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, pc}

0800efe0 <Dmx::Dmx()>:
 800efe0:	230c      	movs	r3, #12
 800efe2:	225c      	movs	r2, #92	; 0x5c
 800efe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efe8:	e9c0 2300 	strd	r2, r3, [r0]
 800efec:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800eff0:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800eff4:	f44f 7300 	mov.w	r3, #512	; 0x200
 800eff8:	8203      	strh	r3, [r0, #16]
 800effa:	4b46      	ldr	r3, [pc, #280]	; (800f114 <Dmx::Dmx()+0x134>)
 800effc:	4f46      	ldr	r7, [pc, #280]	; (800f118 <Dmx::Dmx()+0x138>)
 800effe:	6018      	str	r0, [r3, #0]
 800f000:	4b46      	ldr	r3, [pc, #280]	; (800f11c <Dmx::Dmx()+0x13c>)
 800f002:	2400      	movs	r4, #0
 800f004:	b08e      	sub	sp, #56	; 0x38
 800f006:	4605      	mov	r5, r0
 800f008:	801c      	strh	r4, [r3, #0]
 800f00a:	4626      	mov	r6, r4
 800f00c:	e9d7 0800 	ldrd	r0, r8, [r7]
 800f010:	2202      	movs	r2, #2
 800f012:	4643      	mov	r3, r8
 800f014:	2101      	movs	r1, #1
 800f016:	9003      	str	r0, [sp, #12]
 800f018:	f007 fa34 	bl	8016484 <gpio_mode_set>
 800f01c:	4643      	mov	r3, r8
 800f01e:	9803      	ldr	r0, [sp, #12]
 800f020:	2202      	movs	r2, #2
 800f022:	2100      	movs	r1, #0
 800f024:	f007 fa4e 	bl	80164c4 <gpio_output_options_set>
 800f028:	4642      	mov	r2, r8
 800f02a:	9803      	ldr	r0, [sp, #12]
 800f02c:	2100      	movs	r1, #0
 800f02e:	f007 fa64 	bl	80164fa <gpio_af_set>
 800f032:	4621      	mov	r1, r4
 800f034:	4628      	mov	r0, r5
 800f036:	f7ff fe9d 	bl	800ed74 <Dmx::ClearData(unsigned int)>
 800f03a:	4b39      	ldr	r3, [pc, #228]	; (800f120 <Dmx::Dmx()+0x140>)
 800f03c:	2201      	movs	r2, #1
 800f03e:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800f042:	4621      	mov	r1, r4
 800f044:	2300      	movs	r3, #0
 800f046:	4628      	mov	r0, r5
 800f048:	f7ff ff8e 	bl	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800f04c:	4b35      	ldr	r3, [pc, #212]	; (800f124 <Dmx::Dmx()+0x144>)
 800f04e:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f052:	fb02 3304 	mla	r3, r2, r4, r3
 800f056:	3708      	adds	r7, #8
 800f058:	f8c3 620c 	str.w	r6, [r3, #524]	; 0x20c
 800f05c:	2c00      	cmp	r4, #0
 800f05e:	d056      	beq.n	800f10e <Dmx::Dmx()+0x12e>
 800f060:	f640 4015 	movw	r0, #3093	; 0xc15
 800f064:	f007 fa8a 	bl	801657c <rcu_periph_clock_enable>
 800f068:	f640 4016 	movw	r0, #3094	; 0xc16
 800f06c:	f007 fa86 	bl	801657c <rcu_periph_clock_enable>
 800f070:	482d      	ldr	r0, [pc, #180]	; (800f128 <Dmx::Dmx()+0x148>)
 800f072:	2103      	movs	r1, #3
 800f074:	f006 fd38 	bl	8015ae8 <dma_deinit>
 800f078:	4b2c      	ldr	r3, [pc, #176]	; (800f12c <Dmx::Dmx()+0x14c>)
 800f07a:	482b      	ldr	r0, [pc, #172]	; (800f128 <Dmx::Dmx()+0x148>)
 800f07c:	9608      	str	r6, [sp, #32]
 800f07e:	aa05      	add	r2, sp, #20
 800f080:	f04f 0840 	mov.w	r8, #64	; 0x40
 800f084:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800f088:	2103      	movs	r1, #3
 800f08a:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f08e:	9609      	str	r6, [sp, #36]	; 0x24
 800f090:	970d      	str	r7, [sp, #52]	; 0x34
 800f092:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f096:	f006 fd5e 	bl	8015b56 <dma_single_data_mode_init>
 800f09a:	4823      	ldr	r0, [pc, #140]	; (800f128 <Dmx::Dmx()+0x148>)
 800f09c:	2103      	movs	r1, #3
 800f09e:	f006 fd99 	bl	8015bd4 <dma_circulation_disable>
 800f0a2:	2204      	movs	r2, #4
 800f0a4:	4820      	ldr	r0, [pc, #128]	; (800f128 <Dmx::Dmx()+0x148>)
 800f0a6:	2103      	movs	r1, #3
 800f0a8:	f006 fd9c 	bl	8015be4 <dma_channel_subperipheral_select>
 800f0ac:	4820      	ldr	r0, [pc, #128]	; (800f130 <Dmx::Dmx()+0x150>)
 800f0ae:	2106      	movs	r1, #6
 800f0b0:	f006 fd1a 	bl	8015ae8 <dma_deinit>
 800f0b4:	4b1f      	ldr	r3, [pc, #124]	; (800f134 <Dmx::Dmx()+0x154>)
 800f0b6:	481e      	ldr	r0, [pc, #120]	; (800f130 <Dmx::Dmx()+0x150>)
 800f0b8:	9608      	str	r6, [sp, #32]
 800f0ba:	aa05      	add	r2, sp, #20
 800f0bc:	2106      	movs	r1, #6
 800f0be:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f0c2:	9609      	str	r6, [sp, #36]	; 0x24
 800f0c4:	970d      	str	r7, [sp, #52]	; 0x34
 800f0c6:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f0ca:	f006 fd44 	bl	8015b56 <dma_single_data_mode_init>
 800f0ce:	4818      	ldr	r0, [pc, #96]	; (800f130 <Dmx::Dmx()+0x150>)
 800f0d0:	4c19      	ldr	r4, [pc, #100]	; (800f138 <Dmx::Dmx()+0x158>)
 800f0d2:	2106      	movs	r1, #6
 800f0d4:	f006 fd7e 	bl	8015bd4 <dma_circulation_disable>
 800f0d8:	2702      	movs	r7, #2
 800f0da:	4815      	ldr	r0, [pc, #84]	; (800f130 <Dmx::Dmx()+0x150>)
 800f0dc:	2205      	movs	r2, #5
 800f0de:	2106      	movs	r1, #6
 800f0e0:	f006 fd80 	bl	8015be4 <dma_channel_subperipheral_select>
 800f0e4:	2680      	movs	r6, #128	; 0x80
 800f0e6:	4915      	ldr	r1, [pc, #84]	; (800f13c <Dmx::Dmx()+0x15c>)
 800f0e8:	4815      	ldr	r0, [pc, #84]	; (800f140 <Dmx::Dmx()+0x160>)
 800f0ea:	9700      	str	r7, [sp, #0]
 800f0ec:	2300      	movs	r3, #0
 800f0ee:	2208      	movs	r2, #8
 800f0f0:	f008 f992 	bl	8017418 <gd32_uart_begin>
 800f0f4:	6066      	str	r6, [r4, #4]
 800f0f6:	4911      	ldr	r1, [pc, #68]	; (800f13c <Dmx::Dmx()+0x15c>)
 800f0f8:	4812      	ldr	r0, [pc, #72]	; (800f144 <Dmx::Dmx()+0x164>)
 800f0fa:	9700      	str	r7, [sp, #0]
 800f0fc:	2300      	movs	r3, #0
 800f0fe:	2208      	movs	r2, #8
 800f100:	f008 f98a 	bl	8017418 <gd32_uart_begin>
 800f104:	4628      	mov	r0, r5
 800f106:	60a6      	str	r6, [r4, #8]
 800f108:	b00e      	add	sp, #56	; 0x38
 800f10a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f10e:	2401      	movs	r4, #1
 800f110:	e77c      	b.n	800f00c <Dmx::Dmx()+0x2c>
 800f112:	bf00      	nop
 800f114:	20001048 	andcs	r1, r0, r8, asr #32
 800f118:	080196ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, pc}
 800f11c:	20001044 	andcs	r1, r0, r4, asr #32
 800f120:	2000103c 	andcs	r1, r0, ip, lsr r0
 800f124:	20000814 	andcs	r0, r0, r4, lsl r8
 800f128:	40026000 	andmi	r6, r2, r0
 800f12c:	40004804 	andmi	r4, r0, r4, lsl #16
 800f130:	40026400 	andmi	r6, r2, r0, lsl #8
 800f134:	40011404 	andmi	r1, r1, r4, lsl #8
 800f138:	e000e100 	and	lr, r0, r0, lsl #2
 800f13c:	0003d090 	muleq	r3, r0, r0
 800f140:	40004800 	andmi	r4, r0, r0, lsl #16
 800f144:	40011400 	andmi	r1, r1, r0, lsl #8

0800f148 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800f148:	4b0f      	ldr	r3, [pc, #60]	; (800f188 <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 800f14a:	60c1      	str	r1, [r0, #12]
 800f14c:	f8b3 2406 	ldrh.w	r2, [r3, #1030]	; 0x406
 800f150:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800f154:	480d      	ldr	r0, [pc, #52]	; (800f18c <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 800f156:	429a      	cmp	r2, r3
 800f158:	bf38      	it	cc
 800f15a:	461a      	movcc	r2, r3
 800f15c:	4b0c      	ldr	r3, [pc, #48]	; (800f190 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>)
 800f15e:	6800      	ldr	r0, [r0, #0]
 800f160:	681b      	ldr	r3, [r3, #0]
 800f162:	4403      	add	r3, r0
 800f164:	202c      	movs	r0, #44	; 0x2c
 800f166:	fb00 3302 	mla	r3, r0, r2, r3
 800f16a:	b151      	cbz	r1, 800f182 <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800f16c:	4299      	cmp	r1, r3
 800f16e:	d205      	bcs.n	800f17c <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800f170:	1819      	adds	r1, r3, r0
 800f172:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800f176:	4299      	cmp	r1, r3
 800f178:	bf38      	it	cc
 800f17a:	4619      	movcc	r1, r3
 800f17c:	4b05      	ldr	r3, [pc, #20]	; (800f194 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>)
 800f17e:	6019      	str	r1, [r3, #0]
 800f180:	4770      	bx	lr
 800f182:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800f186:	e7f4      	b.n	800f172 <Dmx::SetDmxPeriodTime(unsigned int)+0x2a>
 800f188:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f18c:	20000008 	andcs	r0, r0, r8
 800f190:	2000000c 	andcs	r0, r0, ip
 800f194:	20000004 	andcs	r0, r0, r4

0800f198 <Dmx::SetDmxBreakTime(unsigned int)>:
 800f198:	295c      	cmp	r1, #92	; 0x5c
 800f19a:	4b03      	ldr	r3, [pc, #12]	; (800f1a8 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800f19c:	bf38      	it	cc
 800f19e:	215c      	movcc	r1, #92	; 0x5c
 800f1a0:	6019      	str	r1, [r3, #0]
 800f1a2:	68c1      	ldr	r1, [r0, #12]
 800f1a4:	f7ff bfd0 	b.w	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f1a8:	2000000c 	andcs	r0, r0, ip

0800f1ac <Dmx::SetDmxMabTime(unsigned int)>:
 800f1ac:	290c      	cmp	r1, #12
 800f1ae:	4b03      	ldr	r3, [pc, #12]	; (800f1bc <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800f1b0:	bf38      	it	cc
 800f1b2:	210c      	movcc	r1, #12
 800f1b4:	6019      	str	r1, [r3, #0]
 800f1b6:	68c1      	ldr	r1, [r0, #12]
 800f1b8:	f7ff bfc6 	b.w	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f1bc:	20000008 	andcs	r0, r0, r8

0800f1c0 <Dmx::SetDmxSlots(unsigned short)>:
 800f1c0:	1e8b      	subs	r3, r1, #2
 800f1c2:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800f1c6:	d80f      	bhi.n	800f1e8 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800f1c8:	69c3      	ldr	r3, [r0, #28]
 800f1ca:	8201      	strh	r1, [r0, #16]
 800f1cc:	b11b      	cbz	r3, 800f1d6 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800f1ce:	4299      	cmp	r1, r3
 800f1d0:	bf94      	ite	ls
 800f1d2:	61c1      	strls	r1, [r0, #28]
 800f1d4:	61c3      	strhi	r3, [r0, #28]
 800f1d6:	6a03      	ldr	r3, [r0, #32]
 800f1d8:	b11b      	cbz	r3, 800f1e2 <Dmx::SetDmxSlots(unsigned short)+0x22>
 800f1da:	4299      	cmp	r1, r3
 800f1dc:	bf94      	ite	ls
 800f1de:	6201      	strls	r1, [r0, #32]
 800f1e0:	6203      	strhi	r3, [r0, #32]
 800f1e2:	68c1      	ldr	r1, [r0, #12]
 800f1e4:	f7ff bfb0 	b.w	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f1e8:	4770      	bx	lr
	...

0800f1ec <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800f1ec:	b470      	push	{r4, r5, r6}
 800f1ee:	8a04      	ldrh	r4, [r0, #16]
 800f1f0:	f892 f000 	pld	[r2]
 800f1f4:	42a3      	cmp	r3, r4
 800f1f6:	bf28      	it	cs
 800f1f8:	4623      	movcs	r3, r4
 800f1fa:	4c0e      	ldr	r4, [pc, #56]	; (800f234 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800f1fc:	f44f 7501 	mov.w	r5, #516	; 0x204
 800f200:	fb05 4401 	mla	r4, r5, r1, r4
 800f204:	1c5d      	adds	r5, r3, #1
 800f206:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800f20a:	18d5      	adds	r5, r2, r3
 800f20c:	4295      	cmp	r5, r2
 800f20e:	d109      	bne.n	800f224 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800f210:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800f214:	69ca      	ldr	r2, [r1, #28]
 800f216:	429a      	cmp	r2, r3
 800f218:	d009      	beq.n	800f22e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800f21a:	61cb      	str	r3, [r1, #28]
 800f21c:	bc70      	pop	{r4, r5, r6}
 800f21e:	68c1      	ldr	r1, [r0, #12]
 800f220:	f7ff bf92 	b.w	800f148 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f224:	f812 6b01 	ldrb.w	r6, [r2], #1
 800f228:	f804 6f01 	strb.w	r6, [r4, #1]!
 800f22c:	e7ee      	b.n	800f20c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800f22e:	bc70      	pop	{r4, r5, r6}
 800f230:	4770      	bx	lr
 800f232:	bf00      	nop
 800f234:	20000c34 	andcs	r0, r0, r4, lsr ip

0800f238 <Dmx::Blackout()>:
 800f238:	b538      	push	{r3, r4, r5, lr}
 800f23a:	4c1e      	ldr	r4, [pc, #120]	; (800f2b4 <Dmx::Blackout()+0x7c>)
 800f23c:	8823      	ldrh	r3, [r4, #0]
 800f23e:	b29b      	uxth	r3, r3
 800f240:	b3bb      	cbz	r3, 800f2b2 <Dmx::Blackout()+0x7a>
 800f242:	f3bf 8f5f 	dmb	sy
 800f246:	8823      	ldrh	r3, [r4, #0]
 800f248:	05da      	lsls	r2, r3, #23
 800f24a:	d515      	bpl.n	800f278 <Dmx::Blackout()+0x40>
 800f24c:	2000      	movs	r0, #0
 800f24e:	f7ff fce1 	bl	800ec14 <_port_to_uart(unsigned int)>
 800f252:	4605      	mov	r5, r0
 800f254:	2107      	movs	r1, #7
 800f256:	4628      	mov	r0, r5
 800f258:	f007 fd86 	bl	8016d68 <usart_flag_get>
 800f25c:	2801      	cmp	r0, #1
 800f25e:	d1f9      	bne.n	800f254 <Dmx::Blackout()+0x1c>
 800f260:	4b15      	ldr	r3, [pc, #84]	; (800f2b8 <Dmx::Blackout()+0x80>)
 800f262:	2000      	movs	r0, #0
 800f264:	461a      	mov	r2, r3
 800f266:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f26a:	f823 0b02 	strh.w	r0, [r3], #2
 800f26e:	428b      	cmp	r3, r1
 800f270:	d1fb      	bne.n	800f26a <Dmx::Blackout()+0x32>
 800f272:	f04f 0300 	mov.w	r3, #0
 800f276:	7013      	strb	r3, [r2, #0]
 800f278:	f3bf 8f5f 	dmb	sy
 800f27c:	8823      	ldrh	r3, [r4, #0]
 800f27e:	059b      	lsls	r3, r3, #22
 800f280:	d517      	bpl.n	800f2b2 <Dmx::Blackout()+0x7a>
 800f282:	2001      	movs	r0, #1
 800f284:	f7ff fcc6 	bl	800ec14 <_port_to_uart(unsigned int)>
 800f288:	4604      	mov	r4, r0
 800f28a:	2107      	movs	r1, #7
 800f28c:	4620      	mov	r0, r4
 800f28e:	f007 fd6b 	bl	8016d68 <usart_flag_get>
 800f292:	2801      	cmp	r0, #1
 800f294:	d1f9      	bne.n	800f28a <Dmx::Blackout()+0x52>
 800f296:	4b09      	ldr	r3, [pc, #36]	; (800f2bc <Dmx::Blackout()+0x84>)
 800f298:	2000      	movs	r0, #0
 800f29a:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f29e:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f2a2:	f823 0b02 	strh.w	r0, [r3], #2
 800f2a6:	428b      	cmp	r3, r1
 800f2a8:	d1fb      	bne.n	800f2a2 <Dmx::Blackout()+0x6a>
 800f2aa:	f04f 0300 	mov.w	r3, #0
 800f2ae:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f2b2:	bd38      	pop	{r3, r4, r5, pc}
 800f2b4:	20001044 	andcs	r1, r0, r4, asr #32
 800f2b8:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f2bc:	20000e38 	andcs	r0, r0, r8, lsr lr

0800f2c0 <Dmx::FullOn()>:
 800f2c0:	b538      	push	{r3, r4, r5, lr}
 800f2c2:	4c1e      	ldr	r4, [pc, #120]	; (800f33c <Dmx::FullOn()+0x7c>)
 800f2c4:	8823      	ldrh	r3, [r4, #0]
 800f2c6:	b29b      	uxth	r3, r3
 800f2c8:	b3bb      	cbz	r3, 800f33a <Dmx::FullOn()+0x7a>
 800f2ca:	f3bf 8f5f 	dmb	sy
 800f2ce:	8823      	ldrh	r3, [r4, #0]
 800f2d0:	05da      	lsls	r2, r3, #23
 800f2d2:	d515      	bpl.n	800f300 <Dmx::FullOn()+0x40>
 800f2d4:	2000      	movs	r0, #0
 800f2d6:	f7ff fc9d 	bl	800ec14 <_port_to_uart(unsigned int)>
 800f2da:	4605      	mov	r5, r0
 800f2dc:	2107      	movs	r1, #7
 800f2de:	4628      	mov	r0, r5
 800f2e0:	f007 fd42 	bl	8016d68 <usart_flag_get>
 800f2e4:	2801      	cmp	r0, #1
 800f2e6:	d1f9      	bne.n	800f2dc <Dmx::FullOn()+0x1c>
 800f2e8:	4b15      	ldr	r3, [pc, #84]	; (800f340 <Dmx::FullOn()+0x80>)
 800f2ea:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f2ee:	461a      	mov	r2, r3
 800f2f0:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f2f4:	f823 0b02 	strh.w	r0, [r3], #2
 800f2f8:	428b      	cmp	r3, r1
 800f2fa:	d1fb      	bne.n	800f2f4 <Dmx::FullOn()+0x34>
 800f2fc:	2300      	movs	r3, #0
 800f2fe:	7013      	strb	r3, [r2, #0]
 800f300:	f3bf 8f5f 	dmb	sy
 800f304:	8823      	ldrh	r3, [r4, #0]
 800f306:	059b      	lsls	r3, r3, #22
 800f308:	d517      	bpl.n	800f33a <Dmx::FullOn()+0x7a>
 800f30a:	2001      	movs	r0, #1
 800f30c:	f7ff fc82 	bl	800ec14 <_port_to_uart(unsigned int)>
 800f310:	4604      	mov	r4, r0
 800f312:	2107      	movs	r1, #7
 800f314:	4620      	mov	r0, r4
 800f316:	f007 fd27 	bl	8016d68 <usart_flag_get>
 800f31a:	2801      	cmp	r0, #1
 800f31c:	d1f9      	bne.n	800f312 <Dmx::FullOn()+0x52>
 800f31e:	4b09      	ldr	r3, [pc, #36]	; (800f344 <Dmx::FullOn()+0x84>)
 800f320:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f324:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f328:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f32c:	f823 0b02 	strh.w	r0, [r3], #2
 800f330:	428b      	cmp	r3, r1
 800f332:	d1fb      	bne.n	800f32c <Dmx::FullOn()+0x6c>
 800f334:	2300      	movs	r3, #0
 800f336:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f33a:	bd38      	pop	{r3, r4, r5, pc}
 800f33c:	20001044 	andcs	r1, r0, r4, asr #32
 800f340:	20000c34 	andcs	r0, r0, r4, lsr ip
 800f344:	20000e38 	andcs	r0, r0, r8, lsr lr

0800f348 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800f348:	2000      	movs	r0, #0
 800f34a:	4770      	bx	lr

0800f34c <WS28xxDmxMulti::GetDmxStartAddress()>:
 800f34c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f350:	4770      	bx	lr

0800f352 <WS28xxDmxMulti::GetDmxFootprint()>:
 800f352:	2000      	movs	r0, #0
 800f354:	4770      	bx	lr

0800f356 <WS28xxDmxMulti::Start(unsigned int)>:
 800f356:	b538      	push	{r3, r4, r5, lr}
 800f358:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800f35a:	4604      	mov	r4, r0
 800f35c:	460d      	mov	r5, r1
 800f35e:	b923      	cbnz	r3, 800f36a <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800f360:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f362:	b110      	cbz	r0, 800f36a <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800f364:	6803      	ldr	r3, [r0, #0]
 800f366:	689b      	ldr	r3, [r3, #8]
 800f368:	4798      	blx	r3
 800f36a:	2301      	movs	r3, #1
 800f36c:	fa03 f105 	lsl.w	r1, r3, r5
 800f370:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f372:	430b      	orrs	r3, r1
 800f374:	6523      	str	r3, [r4, #80]	; 0x50
 800f376:	bd38      	pop	{r3, r4, r5, pc}

0800f378 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f378:	b538      	push	{r3, r4, r5, lr}
 800f37a:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800f37c:	4b05      	ldr	r3, [pc, #20]	; (800f394 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800f37e:	6003      	str	r3, [r0, #0]
 800f380:	4604      	mov	r4, r0
 800f382:	b12d      	cbz	r5, 800f390 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800f384:	4628      	mov	r0, r5
 800f386:	f001 fab3 	bl	80108f0 <WS28xxMulti::~WS28xxMulti()>
 800f38a:	4628      	mov	r0, r5
 800f38c:	f006 f8a6 	bl	80154dc <operator delete(void*)>
 800f390:	4620      	mov	r0, r4
 800f392:	bd38      	pop	{r3, r4, r5, pc}
 800f394:	080196c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, pc}

0800f398 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f398:	b510      	push	{r4, lr}
 800f39a:	4604      	mov	r4, r0
 800f39c:	f7ff ffec 	bl	800f378 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800f3a0:	4620      	mov	r0, r4
 800f3a2:	f006 f89b 	bl	80154dc <operator delete(void*)>
 800f3a6:	4620      	mov	r0, r4
 800f3a8:	bd10      	pop	{r4, pc}

0800f3aa <WS28xxDmxMulti::Blackout(bool)>:
 800f3aa:	b538      	push	{r3, r4, r5, lr}
 800f3ac:	4604      	mov	r4, r0
 800f3ae:	460d      	mov	r5, r1
 800f3b0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f3b4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f3b6:	f001 fe81 	bl	80110bc <WS28xxMulti::IsUpdating()>
 800f3ba:	2800      	cmp	r0, #0
 800f3bc:	d1fa      	bne.n	800f3b4 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800f3be:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f3c0:	b11d      	cbz	r5, 800f3ca <WS28xxDmxMulti::Blackout(bool)+0x20>
 800f3c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f3c6:	f001 bdb7 	b.w	8010f38 <WS28xxMulti::Blackout()>
 800f3ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f3ce:	f001 bd0f 	b.w	8010df0 <WS28xxMulti::Update()>

0800f3d2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800f3d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3d6:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800f3d8:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800f3da:	b089      	sub	sp, #36	; 0x24
 800f3dc:	4698      	mov	r8, r3
 800f3de:	460b      	mov	r3, r1
 800f3e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f3e4:	fbb1 f1f4 	udiv	r1, r1, r4
 800f3e8:	fb04 3411 	mls	r4, r4, r1, r3
 800f3ec:	4605      	mov	r5, r0
 800f3ee:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800f3f0:	2c03      	cmp	r4, #3
 800f3f2:	d835      	bhi.n	800f460 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800f3f4:	e8df f004 	tbb	[pc, r4]
 800f3f8:	34322d02 	ldrtcc	r2, [r2], #-3330	; 0xfffff2fe
 800f3fc:	fbb8 f3f3 	udiv	r3, r8, r3
 800f400:	429e      	cmp	r6, r3
 800f402:	bf28      	it	cs
 800f404:	461e      	movcs	r6, r3
 800f406:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f408:	9107      	str	r1, [sp, #28]
 800f40a:	f001 fe57 	bl	80110bc <WS28xxMulti::IsUpdating()>
 800f40e:	9907      	ldr	r1, [sp, #28]
 800f410:	2800      	cmp	r0, #0
 800f412:	d1f8      	bne.n	800f406 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x34>
 800f414:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800f416:	f8d5 a024 	ldr.w	sl, [r5, #36]	; 0x24
 800f41a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800f41e:	2b03      	cmp	r3, #3
 800f420:	fb0a f704 	mul.w	r7, sl, r4
 800f424:	d040      	beq.n	800f4a8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd6>
 800f426:	42b4      	cmp	r4, r6
 800f428:	d240      	bcs.n	800f4ac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800f42a:	9b05      	ldr	r3, [sp, #20]
 800f42c:	eba9 0303 	sub.w	r3, r9, r3
 800f430:	4598      	cmp	r8, r3
 800f432:	d93b      	bls.n	800f4ac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800f434:	f899 f000 	pld	[r9]
 800f438:	f04f 0b00 	mov.w	fp, #0
 800f43c:	fa1f f28b 	uxth.w	r2, fp
 800f440:	4552      	cmp	r2, sl
 800f442:	f10b 0b01 	add.w	fp, fp, #1
 800f446:	d33b      	bcc.n	800f4c0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xee>
 800f448:	3401      	adds	r4, #1
 800f44a:	f109 0904 	add.w	r9, r9, #4
 800f44e:	4457      	add	r7, sl
 800f450:	e7e9      	b.n	800f426 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x54>
 800f452:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800f454:	fbb8 f3f3 	udiv	r3, r8, r3
 800f458:	4423      	add	r3, r4
 800f45a:	e7d1      	b.n	800f400 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2e>
 800f45c:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800f45e:	e7f9      	b.n	800f454 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f460:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800f462:	e7f7      	b.n	800f454 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f464:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f468:	9301      	str	r3, [sp, #4]
 800f46a:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f46e:	9300      	str	r3, [sp, #0]
 800f470:	f899 3000 	ldrb.w	r3, [r9]
 800f474:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f476:	9107      	str	r1, [sp, #28]
 800f478:	443a      	add	r2, r7
 800f47a:	f001 fe9f 	bl	80111bc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f47e:	9907      	ldr	r1, [sp, #28]
 800f480:	e008      	b.n	800f494 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800f482:	9b05      	ldr	r3, [sp, #20]
 800f484:	eba9 0303 	sub.w	r3, r9, r3
 800f488:	4598      	cmp	r8, r3
 800f48a:	d90f      	bls.n	800f4ac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800f48c:	f899 f000 	pld	[r9]
 800f490:	f04f 0b00 	mov.w	fp, #0
 800f494:	fa1f f28b 	uxth.w	r2, fp
 800f498:	4552      	cmp	r2, sl
 800f49a:	f10b 0b01 	add.w	fp, fp, #1
 800f49e:	d3e1      	bcc.n	800f464 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800f4a0:	3401      	adds	r4, #1
 800f4a2:	f109 0903 	add.w	r9, r9, #3
 800f4a6:	4457      	add	r7, sl
 800f4a8:	42b4      	cmp	r4, r6
 800f4aa:	d3ea      	bcc.n	800f482 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xb0>
 800f4ac:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800f4ae:	9a06      	ldr	r2, [sp, #24]
 800f4b0:	4293      	cmp	r3, r2
 800f4b2:	d117      	bne.n	800f4e4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x112>
 800f4b4:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f4b6:	b009      	add	sp, #36	; 0x24
 800f4b8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4bc:	f001 bc98 	b.w	8010df0 <WS28xxMulti::Update()>
 800f4c0:	f899 3003 	ldrb.w	r3, [r9, #3]
 800f4c4:	9302      	str	r3, [sp, #8]
 800f4c6:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f4ca:	9301      	str	r3, [sp, #4]
 800f4cc:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f4d0:	9300      	str	r3, [sp, #0]
 800f4d2:	f899 3000 	ldrb.w	r3, [r9]
 800f4d6:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f4d8:	9107      	str	r1, [sp, #28]
 800f4da:	443a      	add	r2, r7
 800f4dc:	f001 fef0 	bl	80112c0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f4e0:	9907      	ldr	r1, [sp, #28]
 800f4e2:	e7ab      	b.n	800f43c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800f4e4:	b009      	add	sp, #36	; 0x24
 800f4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f4ea <WS28xxDmxMulti::FullOn()>:
 800f4ea:	b510      	push	{r4, lr}
 800f4ec:	4604      	mov	r4, r0
 800f4ee:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f4f0:	f001 fde4 	bl	80110bc <WS28xxMulti::IsUpdating()>
 800f4f4:	2800      	cmp	r0, #0
 800f4f6:	d1fa      	bne.n	800f4ee <WS28xxDmxMulti::FullOn()+0x4>
 800f4f8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f4fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f4fe:	f001 bd7d 	b.w	8010ffc <WS28xxMulti::FullOn()>

0800f502 <WS28xxDmxMulti::Print()>:
 800f502:	3004      	adds	r0, #4
 800f504:	f000 bcb2 	b.w	800fe6c <PixelDmxConfiguration::Print()>

0800f508 <WS28xxDmxMulti::Stop(unsigned int)>:
 800f508:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800f50a:	fa23 f201 	lsr.w	r2, r3, r1
 800f50e:	07d2      	lsls	r2, r2, #31
 800f510:	bf41      	itttt	mi
 800f512:	2201      	movmi	r2, #1
 800f514:	408a      	lslmi	r2, r1
 800f516:	4393      	bicmi	r3, r2
 800f518:	6503      	strmi	r3, [r0, #80]	; 0x50
 800f51a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800f51c:	b923      	cbnz	r3, 800f528 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800f51e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f520:	b110      	cbz	r0, 800f528 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800f522:	6803      	ldr	r3, [r0, #0]
 800f524:	68db      	ldr	r3, [r3, #12]
 800f526:	4718      	bx	r3
 800f528:	4770      	bx	lr
	...

0800f52c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800f52c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f52e:	4604      	mov	r4, r0
 800f530:	4b14      	ldr	r3, [pc, #80]	; (800f584 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800f532:	f844 3b04 	str.w	r3, [r4], #4
 800f536:	460d      	mov	r5, r1
 800f538:	4606      	mov	r6, r0
 800f53a:	460f      	mov	r7, r1
 800f53c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f53e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f540:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f542:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f544:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800f548:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f54c:	2300      	movs	r3, #0
 800f54e:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800f552:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800f556:	6533      	str	r3, [r6, #80]	; 0x50
 800f558:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800f55c:	2110      	movs	r1, #16
 800f55e:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800f562:	1d30      	adds	r0, r6, #4
 800f564:	f000 fc3f 	bl	800fde6 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800f568:	2020      	movs	r0, #32
 800f56a:	f005 ffbb 	bl	80154e4 <operator new(unsigned int)>
 800f56e:	4639      	mov	r1, r7
 800f570:	4604      	mov	r4, r0
 800f572:	f001 fbdf 	bl	8010d34 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800f576:	4620      	mov	r0, r4
 800f578:	64b4      	str	r4, [r6, #72]	; 0x48
 800f57a:	f001 fcdd 	bl	8010f38 <WS28xxMulti::Blackout()>
 800f57e:	4630      	mov	r0, r6
 800f580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f582:	bf00      	nop
 800f584:	080196c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, pc}

0800f588 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800f588:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f58a:	88c6      	ldrh	r6, [r0, #6]
 800f58c:	8885      	ldrh	r5, [r0, #4]
 800f58e:	42ae      	cmp	r6, r5
 800f590:	d216      	bcs.n	800f5c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800f592:	4604      	mov	r4, r0
 800f594:	6800      	ldr	r0, [r0, #0]
 800f596:	1bad      	subs	r5, r5, r6
 800f598:	4430      	add	r0, r6
 800f59a:	7a26      	ldrb	r6, [r4, #8]
 800f59c:	b923      	cbnz	r3, 800f5a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800f59e:	b926      	cbnz	r6, 800f5aa <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800f5a0:	9200      	str	r2, [sp, #0]
 800f5a2:	460b      	mov	r3, r1
 800f5a4:	4a09      	ldr	r2, [pc, #36]	; (800f5cc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800f5a6:	e003      	b.n	800f5b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f5a8:	b166      	cbz	r6, 800f5c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800f5aa:	9200      	str	r2, [sp, #0]
 800f5ac:	4a08      	ldr	r2, [pc, #32]	; (800f5d0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800f5ae:	460b      	mov	r3, r1
 800f5b0:	4629      	mov	r1, r5
 800f5b2:	f7fa ff1b 	bl	800a3ec <snprintf>
 800f5b6:	4285      	cmp	r5, r0
 800f5b8:	bfa2      	ittt	ge
 800f5ba:	88e3      	ldrhge	r3, [r4, #6]
 800f5bc:	181b      	addge	r3, r3, r0
 800f5be:	80e3      	strhge	r3, [r4, #6]
 800f5c0:	b002      	add	sp, #8
 800f5c2:	bd70      	pop	{r4, r5, r6, pc}
 800f5c4:	9200      	str	r2, [sp, #0]
 800f5c6:	460b      	mov	r3, r1
 800f5c8:	4a02      	ldr	r2, [pc, #8]	; (800f5d4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f5ca:	e7f1      	b.n	800f5b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f5cc:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800f5d0:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800f5d4:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

0800f5d8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800f5d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f5da:	88c6      	ldrh	r6, [r0, #6]
 800f5dc:	8885      	ldrh	r5, [r0, #4]
 800f5de:	42ae      	cmp	r6, r5
 800f5e0:	d216      	bcs.n	800f610 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800f5e2:	4604      	mov	r4, r0
 800f5e4:	6800      	ldr	r0, [r0, #0]
 800f5e6:	1bad      	subs	r5, r5, r6
 800f5e8:	4430      	add	r0, r6
 800f5ea:	7a26      	ldrb	r6, [r4, #8]
 800f5ec:	b923      	cbnz	r3, 800f5f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800f5ee:	b926      	cbnz	r6, 800f5fa <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800f5f0:	9200      	str	r2, [sp, #0]
 800f5f2:	460b      	mov	r3, r1
 800f5f4:	4a09      	ldr	r2, [pc, #36]	; (800f61c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800f5f6:	e003      	b.n	800f600 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f5f8:	b166      	cbz	r6, 800f614 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800f5fa:	9200      	str	r2, [sp, #0]
 800f5fc:	4a08      	ldr	r2, [pc, #32]	; (800f620 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800f5fe:	460b      	mov	r3, r1
 800f600:	4629      	mov	r1, r5
 800f602:	f7fa fef3 	bl	800a3ec <snprintf>
 800f606:	4285      	cmp	r5, r0
 800f608:	bfa2      	ittt	ge
 800f60a:	88e3      	ldrhge	r3, [r4, #6]
 800f60c:	181b      	addge	r3, r3, r0
 800f60e:	80e3      	strhge	r3, [r4, #6]
 800f610:	b002      	add	sp, #8
 800f612:	bd70      	pop	{r4, r5, r6, pc}
 800f614:	9200      	str	r2, [sp, #0]
 800f616:	460b      	mov	r3, r1
 800f618:	4a02      	ldr	r2, [pc, #8]	; (800f624 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f61a:	e7f1      	b.n	800f600 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f61c:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800f620:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800f624:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

0800f628 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800f628:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f62a:	88c6      	ldrh	r6, [r0, #6]
 800f62c:	8885      	ldrh	r5, [r0, #4]
 800f62e:	42ae      	cmp	r6, r5
 800f630:	d216      	bcs.n	800f660 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800f632:	4604      	mov	r4, r0
 800f634:	6800      	ldr	r0, [r0, #0]
 800f636:	1bad      	subs	r5, r5, r6
 800f638:	4430      	add	r0, r6
 800f63a:	7a26      	ldrb	r6, [r4, #8]
 800f63c:	b923      	cbnz	r3, 800f648 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800f63e:	b926      	cbnz	r6, 800f64a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800f640:	9200      	str	r2, [sp, #0]
 800f642:	460b      	mov	r3, r1
 800f644:	4a09      	ldr	r2, [pc, #36]	; (800f66c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800f646:	e003      	b.n	800f650 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f648:	b166      	cbz	r6, 800f664 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800f64a:	9200      	str	r2, [sp, #0]
 800f64c:	4a08      	ldr	r2, [pc, #32]	; (800f670 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800f64e:	460b      	mov	r3, r1
 800f650:	4629      	mov	r1, r5
 800f652:	f7fa fecb 	bl	800a3ec <snprintf>
 800f656:	4285      	cmp	r5, r0
 800f658:	bfa2      	ittt	ge
 800f65a:	88e3      	ldrhge	r3, [r4, #6]
 800f65c:	181b      	addge	r3, r3, r0
 800f65e:	80e3      	strhge	r3, [r4, #6]
 800f660:	b002      	add	sp, #8
 800f662:	bd70      	pop	{r4, r5, r6, pc}
 800f664:	9200      	str	r2, [sp, #0]
 800f666:	460b      	mov	r3, r1
 800f668:	4a02      	ldr	r2, [pc, #8]	; (800f674 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f66a:	e7f1      	b.n	800f650 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f66c:	0801814c 	stmdaeq	r1, {r2, r3, r6, r8, pc}
 800f670:	08018141 	stmdaeq	r1, {r0, r6, r8, pc}
 800f674:	0801814d 	stmdaeq	r1, {r0, r2, r3, r6, r8, pc}

0800f678 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800f678:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f67c:	8885      	ldrh	r5, [r0, #4]
 800f67e:	4698      	mov	r8, r3
 800f680:	88c3      	ldrh	r3, [r0, #6]
 800f682:	42ab      	cmp	r3, r5
 800f684:	4604      	mov	r4, r0
 800f686:	d229      	bcs.n	800f6dc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800f688:	6826      	ldr	r6, [r4, #0]
 800f68a:	f894 9008 	ldrb.w	r9, [r4, #8]
 800f68e:	4692      	mov	sl, r2
 800f690:	ee10 0a10 	vmov	r0, s0
 800f694:	460f      	mov	r7, r1
 800f696:	441e      	add	r6, r3
 800f698:	1aed      	subs	r5, r5, r3
 800f69a:	f7f9 fc7b 	bl	8008f94 <__aeabi_f2d>
 800f69e:	f1ba 0f00 	cmp.w	sl, #0
 800f6a2:	d109      	bne.n	800f6b8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800f6a4:	f1b9 0f00 	cmp.w	r9, #0
 800f6a8:	d109      	bne.n	800f6be <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800f6aa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f6ae:	4a10      	ldr	r2, [pc, #64]	; (800f6f0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800f6b0:	f8cd 8000 	str.w	r8, [sp]
 800f6b4:	463b      	mov	r3, r7
 800f6b6:	e008      	b.n	800f6ca <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f6b8:	f1b9 0f00 	cmp.w	r9, #0
 800f6bc:	d011      	beq.n	800f6e2 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800f6be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f6c2:	4a0c      	ldr	r2, [pc, #48]	; (800f6f4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800f6c4:	f8cd 8000 	str.w	r8, [sp]
 800f6c8:	463b      	mov	r3, r7
 800f6ca:	4629      	mov	r1, r5
 800f6cc:	4630      	mov	r0, r6
 800f6ce:	f7fa fe8d 	bl	800a3ec <snprintf>
 800f6d2:	4285      	cmp	r5, r0
 800f6d4:	bfa2      	ittt	ge
 800f6d6:	88e3      	ldrhge	r3, [r4, #6]
 800f6d8:	18c0      	addge	r0, r0, r3
 800f6da:	80e0      	strhge	r0, [r4, #6]
 800f6dc:	b004      	add	sp, #16
 800f6de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f6e2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f6e6:	4a04      	ldr	r2, [pc, #16]	; (800f6f8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800f6e8:	f8cd 8000 	str.w	r8, [sp]
 800f6ec:	463b      	mov	r3, r7
 800f6ee:	e7ec      	b.n	800f6ca <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f6f0:	080196ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, ip, pc}
 800f6f4:	080196f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, ip, pc}
 800f6f8:	08019700 	stmdaeq	r1, {r8, r9, sl, ip, pc}

0800f6fc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800f6fc:	6001      	str	r1, [r0, #0]
 800f6fe:	2106      	movs	r1, #6
 800f700:	2200      	movs	r2, #0
 800f702:	75c1      	strb	r1, [r0, #23]
 800f704:	490b      	ldr	r1, [pc, #44]	; (800f734 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800f706:	7582      	strb	r2, [r0, #22]
 800f708:	8302      	strh	r2, [r0, #24]
 800f70a:	6042      	str	r2, [r0, #4]
 800f70c:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 800f710:	e9c0 1202 	strd	r1, r2, [r0, #8]
 800f714:	2301      	movs	r3, #1
 800f716:	4a08      	ldr	r2, [pc, #32]	; (800f738 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800f718:	6102      	str	r2, [r0, #16]
 800f71a:	7543      	strb	r3, [r0, #21]
 800f71c:	f100 0218 	add.w	r2, r0, #24
 800f720:	f822 3f02 	strh.w	r3, [r2, #2]!
 800f724:	3304      	adds	r3, #4
 800f726:	b29b      	uxth	r3, r3
 800f728:	2b41      	cmp	r3, #65	; 0x41
 800f72a:	d1f9      	bne.n	800f720 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>
 800f72c:	2300      	movs	r3, #0
 800f72e:	7503      	strb	r3, [r0, #20]
 800f730:	4770      	bx	lr
 800f732:	bf00      	nop
 800f734:	0100aa03 	tsteq	r0, r3, lsl #20
 800f738:	01ff003d 	mvnseq	r0, sp, lsr r0

0800f73c <PixelDmxParams::Load()>:
 800f73c:	b508      	push	{r3, lr}
 800f73e:	2300      	movs	r3, #0
 800f740:	4601      	mov	r1, r0
 800f742:	6043      	str	r3, [r0, #4]
 800f744:	6800      	ldr	r0, [r0, #0]
 800f746:	b120      	cbz	r0, 800f752 <PixelDmxParams::Load()+0x16>
 800f748:	6803      	ldr	r3, [r0, #0]
 800f74a:	3104      	adds	r1, #4
 800f74c:	68db      	ldr	r3, [r3, #12]
 800f74e:	4798      	blx	r3
 800f750:	2001      	movs	r0, #1
 800f752:	bd08      	pop	{r3, pc}

0800f754 <PixelDmxParams::Load(char const*, unsigned int)>:
 800f754:	6803      	ldr	r3, [r0, #0]
 800f756:	b1d3      	cbz	r3, 800f78e <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800f758:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f75a:	2300      	movs	r3, #0
 800f75c:	6043      	str	r3, [r0, #4]
 800f75e:	4604      	mov	r4, r0
 800f760:	460d      	mov	r5, r1
 800f762:	4616      	mov	r6, r2
 800f764:	490a      	ldr	r1, [pc, #40]	; (800f790 <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800f766:	4602      	mov	r2, r0
 800f768:	4668      	mov	r0, sp
 800f76a:	f005 f8e9 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f76e:	4632      	mov	r2, r6
 800f770:	4629      	mov	r1, r5
 800f772:	4668      	mov	r0, sp
 800f774:	f005 f8e8 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 800f778:	4621      	mov	r1, r4
 800f77a:	f851 0b04 	ldr.w	r0, [r1], #4
 800f77e:	6803      	ldr	r3, [r0, #0]
 800f780:	689b      	ldr	r3, [r3, #8]
 800f782:	4798      	blx	r3
 800f784:	4668      	mov	r0, sp
 800f786:	f005 f8de 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 800f78a:	b002      	add	sp, #8
 800f78c:	bd70      	pop	{r4, r5, r6, pc}
 800f78e:	4770      	bx	lr
 800f790:	0800fa55 	stmdaeq	r0, {r0, r2, r4, r6, r9, fp, ip, sp, lr, pc}

0800f794 <PixelDmxParams::callbackFunction(char const*)>:
 800f794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f798:	b08a      	sub	sp, #40	; 0x28
 800f79a:	460d      	mov	r5, r1
 800f79c:	2308      	movs	r3, #8
 800f79e:	4604      	mov	r4, r0
 800f7a0:	9304      	str	r3, [sp, #16]
 800f7a2:	499e      	ldr	r1, [pc, #632]	; (800fa1c <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800f7a4:	ab04      	add	r3, sp, #16
 800f7a6:	aa06      	add	r2, sp, #24
 800f7a8:	4628      	mov	r0, r5
 800f7aa:	f005 f901 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f7ae:	b9a0      	cbnz	r0, 800f7da <PixelDmxParams::callbackFunction(char const*)+0x46>
 800f7b0:	9b04      	ldr	r3, [sp, #16]
 800f7b2:	3328      	adds	r3, #40	; 0x28
 800f7b4:	446b      	add	r3, sp
 800f7b6:	f803 0c10 	strb.w	r0, [r3, #-16]
 800f7ba:	a806      	add	r0, sp, #24
 800f7bc:	f000 fc86 	bl	80100cc <PixelType::GetType(char const*)>
 800f7c0:	6863      	ldr	r3, [r4, #4]
 800f7c2:	280e      	cmp	r0, #14
 800f7c4:	bf0d      	iteet	eq
 800f7c6:	2203      	moveq	r2, #3
 800f7c8:	7220      	strbne	r0, [r4, #8]
 800f7ca:	f043 0301 	orrne.w	r3, r3, #1
 800f7ce:	7222      	strbeq	r2, [r4, #8]
 800f7d0:	bf08      	it	eq
 800f7d2:	f023 0301 	biceq.w	r3, r3, #1
 800f7d6:	6063      	str	r3, [r4, #4]
 800f7d8:	e033      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f7da:	4991      	ldr	r1, [pc, #580]	; (800fa20 <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800f7dc:	f10d 020a 	add.w	r2, sp, #10
 800f7e0:	4628      	mov	r0, r5
 800f7e2:	f005 f99a 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f7e6:	b990      	cbnz	r0, 800f80e <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800f7e8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f7ec:	6863      	ldr	r3, [r4, #4]
 800f7ee:	1e51      	subs	r1, r2, #1
 800f7f0:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800f7f4:	bf2d      	iteet	cs
 800f7f6:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800f7fa:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800f7fe:	f043 0302 	orrcc.w	r3, r3, #2
 800f802:	7262      	strbcs	r2, [r4, #9]
 800f804:	bf24      	itt	cs
 800f806:	72a0      	strbcs	r0, [r4, #10]
 800f808:	f023 0302 	biccs.w	r3, r3, #2
 800f80c:	e7e3      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f80e:	2303      	movs	r3, #3
 800f810:	9304      	str	r3, [sp, #16]
 800f812:	4984      	ldr	r1, [pc, #528]	; (800fa24 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800f814:	ab04      	add	r3, sp, #16
 800f816:	aa06      	add	r2, sp, #24
 800f818:	4628      	mov	r0, r5
 800f81a:	f005 f8c9 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f81e:	b998      	cbnz	r0, 800f848 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800f820:	9b04      	ldr	r3, [sp, #16]
 800f822:	3328      	adds	r3, #40	; 0x28
 800f824:	446b      	add	r3, sp
 800f826:	f803 0c10 	strb.w	r0, [r3, #-16]
 800f82a:	a806      	add	r0, sp, #24
 800f82c:	f000 fc72 	bl	8010114 <PixelType::GetMap(char const*)>
 800f830:	6863      	ldr	r3, [r4, #4]
 800f832:	75e0      	strb	r0, [r4, #23]
 800f834:	2806      	cmp	r0, #6
 800f836:	bf14      	ite	ne
 800f838:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800f83c:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800f840:	6063      	str	r3, [r4, #4]
 800f842:	b00a      	add	sp, #40	; 0x28
 800f844:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f848:	4977      	ldr	r1, [pc, #476]	; (800fa28 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800f84a:	aa03      	add	r2, sp, #12
 800f84c:	4628      	mov	r0, r5
 800f84e:	f005 f8c8 	bl	80149e2 <Sscan::Float(char const*, char const*, float&)>
 800f852:	b968      	cbnz	r0, 800f870 <PixelDmxParams::callbackFunction(char const*)+0xdc>
 800f854:	ed9d 0a03 	vldr	s0, [sp, #12]
 800f858:	f000 fcc8 	bl	80101ec <PixelType::ConvertTxH(float)>
 800f85c:	6863      	ldr	r3, [r4, #4]
 800f85e:	b120      	cbz	r0, 800f86a <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800f860:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800f864:	6063      	str	r3, [r4, #4]
 800f866:	7620      	strb	r0, [r4, #24]
 800f868:	e7eb      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f86a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800f86e:	e7f9      	b.n	800f864 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800f870:	496e      	ldr	r1, [pc, #440]	; (800fa2c <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800f872:	aa03      	add	r2, sp, #12
 800f874:	4628      	mov	r0, r5
 800f876:	f005 f8b4 	bl	80149e2 <Sscan::Float(char const*, char const*, float&)>
 800f87a:	b968      	cbnz	r0, 800f898 <PixelDmxParams::callbackFunction(char const*)+0x104>
 800f87c:	ed9d 0a03 	vldr	s0, [sp, #12]
 800f880:	f000 fcb4 	bl	80101ec <PixelType::ConvertTxH(float)>
 800f884:	6863      	ldr	r3, [r4, #4]
 800f886:	b120      	cbz	r0, 800f892 <PixelDmxParams::callbackFunction(char const*)+0xfe>
 800f888:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800f88c:	6063      	str	r3, [r4, #4]
 800f88e:	7660      	strb	r0, [r4, #25]
 800f890:	e7d7      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f892:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800f896:	e7f9      	b.n	800f88c <PixelDmxParams::callbackFunction(char const*)+0xf8>
 800f898:	4965      	ldr	r1, [pc, #404]	; (800fa30 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800f89a:	f10d 020a 	add.w	r2, sp, #10
 800f89e:	4628      	mov	r0, r5
 800f8a0:	f005 f93b 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f8a4:	b998      	cbnz	r0, 800f8ce <PixelDmxParams::callbackFunction(char const*)+0x13a>
 800f8a6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f8aa:	6863      	ldr	r3, [r4, #4]
 800f8ac:	1e8a      	subs	r2, r1, #2
 800f8ae:	b292      	uxth	r2, r2
 800f8b0:	f240 25a6 	movw	r5, #678	; 0x2a6
 800f8b4:	42aa      	cmp	r2, r5
 800f8b6:	bf81      	itttt	hi
 800f8b8:	2201      	movhi	r2, #1
 800f8ba:	7562      	strbhi	r2, [r4, #21]
 800f8bc:	75a0      	strbhi	r0, [r4, #22]
 800f8be:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f8c2:	bf9c      	itt	ls
 800f8c4:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800f8c8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f8cc:	e783      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f8ce:	4959      	ldr	r1, [pc, #356]	; (800fa34 <PixelDmxParams::callbackFunction(char const*)+0x2a0>)
 800f8d0:	aa05      	add	r2, sp, #20
 800f8d2:	4628      	mov	r0, r5
 800f8d4:	f005 f940 	bl	8014b58 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800f8d8:	b960      	cbnz	r0, 800f8f4 <PixelDmxParams::callbackFunction(char const*)+0x160>
 800f8da:	9a05      	ldr	r2, [sp, #20]
 800f8dc:	4956      	ldr	r1, [pc, #344]	; (800fa38 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800f8de:	6863      	ldr	r3, [r4, #4]
 800f8e0:	f8c4 200e 	str.w	r2, [r4, #14]
 800f8e4:	428a      	cmp	r2, r1
 800f8e6:	bf14      	ite	ne
 800f8e8:	f043 0310 	orrne.w	r3, r3, #16
 800f8ec:	f023 0310 	biceq.w	r3, r3, #16
 800f8f0:	6063      	str	r3, [r4, #4]
 800f8f2:	e7a6      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f8f4:	4951      	ldr	r1, [pc, #324]	; (800fa3c <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800f8f6:	f10d 0209 	add.w	r2, sp, #9
 800f8fa:	4628      	mov	r0, r5
 800f8fc:	f005 f955 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f900:	b988      	cbnz	r0, 800f926 <PixelDmxParams::callbackFunction(char const*)+0x192>
 800f902:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800f906:	6863      	ldr	r3, [r4, #4]
 800f908:	1e4a      	subs	r2, r1, #1
 800f90a:	b2d2      	uxtb	r2, r2
 800f90c:	2afd      	cmp	r2, #253	; 0xfd
 800f90e:	bf89      	itett	hi
 800f910:	f023 0320 	bichi.w	r3, r3, #32
 800f914:	f043 0320 	orrls.w	r3, r3, #32
 800f918:	6063      	strhi	r3, [r4, #4]
 800f91a:	23ff      	movhi	r3, #255	; 0xff
 800f91c:	bf9a      	itte	ls
 800f91e:	6063      	strls	r3, [r4, #4]
 800f920:	74a1      	strbls	r1, [r4, #18]
 800f922:	74a3      	strbhi	r3, [r4, #18]
 800f924:	e78d      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f926:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800fa50 <PixelDmxParams::callbackFunction(char const*)+0x2bc>
 800f92a:	f104 071a 	add.w	r7, r4, #26
 800f92e:	2600      	movs	r6, #0
 800f930:	f04f 0814 	mov.w	r8, #20
 800f934:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800f938:	f10d 020a 	add.w	r2, sp, #10
 800f93c:	fb08 9106 	mla	r1, r8, r6, r9
 800f940:	4628      	mov	r0, r5
 800f942:	f005 f8ea 	bl	8014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f946:	b940      	cbnz	r0, 800f95a <PixelDmxParams::callbackFunction(char const*)+0x1c6>
 800f948:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f94c:	6863      	ldr	r3, [r4, #4]
 800f94e:	fa0a f106 	lsl.w	r1, sl, r6
 800f952:	b1ea      	cbz	r2, 800f990 <PixelDmxParams::callbackFunction(char const*)+0x1fc>
 800f954:	803a      	strh	r2, [r7, #0]
 800f956:	430b      	orrs	r3, r1
 800f958:	6063      	str	r3, [r4, #4]
 800f95a:	3601      	adds	r6, #1
 800f95c:	2e10      	cmp	r6, #16
 800f95e:	f107 0702 	add.w	r7, r7, #2
 800f962:	d1e9      	bne.n	800f938 <PixelDmxParams::callbackFunction(char const*)+0x1a4>
 800f964:	4936      	ldr	r1, [pc, #216]	; (800fa40 <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800f966:	f10d 0209 	add.w	r2, sp, #9
 800f96a:	4628      	mov	r0, r5
 800f96c:	f005 f91d 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f970:	b9a0      	cbnz	r0, 800f99c <PixelDmxParams::callbackFunction(char const*)+0x208>
 800f972:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800f976:	6863      	ldr	r3, [r4, #4]
 800f978:	1e91      	subs	r1, r2, #2
 800f97a:	290e      	cmp	r1, #14
 800f97c:	bf8d      	iteet	hi
 800f97e:	2201      	movhi	r2, #1
 800f980:	74e2      	strbls	r2, [r4, #19]
 800f982:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800f986:	74e2      	strbhi	r2, [r4, #19]
 800f988:	bf88      	it	hi
 800f98a:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800f98e:	e722      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f990:	00b2      	lsls	r2, r6, #2
 800f992:	3201      	adds	r2, #1
 800f994:	803a      	strh	r2, [r7, #0]
 800f996:	ea23 0301 	bic.w	r3, r3, r1
 800f99a:	e7dd      	b.n	800f958 <PixelDmxParams::callbackFunction(char const*)+0x1c4>
 800f99c:	4929      	ldr	r1, [pc, #164]	; (800fa44 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800f99e:	f10d 0209 	add.w	r2, sp, #9
 800f9a2:	4628      	mov	r0, r5
 800f9a4:	f005 f901 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f9a8:	b960      	cbnz	r0, 800f9c4 <PixelDmxParams::callbackFunction(char const*)+0x230>
 800f9aa:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800f9ae:	6863      	ldr	r3, [r4, #4]
 800f9b0:	1e51      	subs	r1, r2, #1
 800f9b2:	2904      	cmp	r1, #4
 800f9b4:	bf99      	ittee	ls
 800f9b6:	7522      	strbls	r2, [r4, #20]
 800f9b8:	f043 0308 	orrls.w	r3, r3, #8
 800f9bc:	7520      	strbhi	r0, [r4, #20]
 800f9be:	f023 0308 	bichi.w	r3, r3, #8
 800f9c2:	e708      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f9c4:	4920      	ldr	r1, [pc, #128]	; (800fa48 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800f9c6:	f10d 0209 	add.w	r2, sp, #9
 800f9ca:	4628      	mov	r0, r5
 800f9cc:	f005 f8ed 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f9d0:	b948      	cbnz	r0, 800f9e6 <PixelDmxParams::callbackFunction(char const*)+0x252>
 800f9d2:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800f9d6:	6863      	ldr	r3, [r4, #4]
 800f9d8:	b112      	cbz	r2, 800f9e0 <PixelDmxParams::callbackFunction(char const*)+0x24c>
 800f9da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f9de:	e6fa      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f9e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800f9e4:	e6f7      	b.n	800f7d6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800f9e6:	4919      	ldr	r1, [pc, #100]	; (800fa4c <PixelDmxParams::callbackFunction(char const*)+0x2b8>)
 800f9e8:	aa03      	add	r2, sp, #12
 800f9ea:	4628      	mov	r0, r5
 800f9ec:	f004 fff9 	bl	80149e2 <Sscan::Float(char const*, char const*, float&)>
 800f9f0:	2800      	cmp	r0, #0
 800f9f2:	f47f af26 	bne.w	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800f9f6:	eddd 7a03 	vldr	s15, [sp, #12]
 800f9fa:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800f9fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 800fa02:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800fa06:	edcd 7a01 	vstr	s15, [sp, #4]
 800fa0a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800fa0e:	f1a3 0214 	sub.w	r2, r3, #20
 800fa12:	2a05      	cmp	r2, #5
 800fa14:	bf8c      	ite	hi
 800fa16:	7360      	strbhi	r0, [r4, #13]
 800fa18:	7363      	strbls	r3, [r4, #13]
 800fa1a:	e712      	b.n	800f842 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800fa1c:	0801a78a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, sp, pc}
 800fa20:	0801a793 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, sp, pc}
 800fa24:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 800fa28:	0801a79d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sl, sp, pc}
 800fa2c:	0801a7a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, sp, pc}
 800fa30:	0801a747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, sp, pc}
 800fa34:	0801a72b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, sp, pc}
 800fa38:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800fa3c:	0801a768 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, sp, pc}
 800fa40:	0801a714 	stmdaeq	r1, {r2, r4, r8, r9, sl, sp, pc}
 800fa44:	0801a73a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, sp, pc}
 800fa48:	0801a757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, sp, pc}
 800fa4c:	0801a71f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, sp, pc}
 800fa50:	0801a826 	stmdaeq	r1, {r1, r2, r5, fp, sp, pc}

0800fa54 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800fa54:	f7ff be9e 	b.w	800f794 <PixelDmxParams::callbackFunction(char const*)>

0800fa58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800fa58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa5c:	4604      	mov	r4, r0
 800fa5e:	b086      	sub	sp, #24
 800fa60:	4615      	mov	r5, r2
 800fa62:	461e      	mov	r6, r3
 800fa64:	3004      	adds	r0, #4
 800fa66:	b389      	cbz	r1, 800facc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800fa68:	2236      	movs	r2, #54	; 0x36
 800fa6a:	f005 fdfa 	bl	8015662 <memmove>
 800fa6e:	462a      	mov	r2, r5
 800fa70:	499b      	ldr	r1, [pc, #620]	; (800fce0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800fa72:	4633      	mov	r3, r6
 800fa74:	a803      	add	r0, sp, #12
 800fa76:	f004 fec3 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800fa7a:	7a20      	ldrb	r0, [r4, #8]
 800fa7c:	f000 fb1a 	bl	80100b4 <PixelType::GetType(pixel::Type)>
 800fa80:	6863      	ldr	r3, [r4, #4]
 800fa82:	4998      	ldr	r1, [pc, #608]	; (800fce4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800fa84:	4602      	mov	r2, r0
 800fa86:	f003 0301 	and.w	r3, r3, #1
 800fa8a:	a803      	add	r0, sp, #12
 800fa8c:	f7ff fdcc 	bl	800f628 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fa90:	6863      	ldr	r3, [r4, #4]
 800fa92:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800fa96:	4994      	ldr	r1, [pc, #592]	; (800fce8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800fa98:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800fa9c:	a803      	add	r0, sp, #12
 800fa9e:	f7ff fd9b 	bl	800f5d8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800faa2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800faa6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800faaa:	6863      	ldr	r3, [r4, #4]
 800faac:	42aa      	cmp	r2, r5
 800faae:	d227      	bcs.n	800fb00 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800fab0:	9803      	ldr	r0, [sp, #12]
 800fab2:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800fab6:	4410      	add	r0, r2
 800fab8:	eba5 0502 	sub.w	r5, r5, r2
 800fabc:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800fac0:	d10b      	bne.n	800fada <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800fac2:	b96a      	cbnz	r2, 800fae0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800fac4:	9200      	str	r2, [sp, #0]
 800fac6:	4b89      	ldr	r3, [pc, #548]	; (800fcec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800fac8:	4a89      	ldr	r2, [pc, #548]	; (800fcf0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800faca:	e00f      	b.n	800faec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800facc:	6823      	ldr	r3, [r4, #0]
 800face:	681a      	ldr	r2, [r3, #0]
 800fad0:	4601      	mov	r1, r0
 800fad2:	68d2      	ldr	r2, [r2, #12]
 800fad4:	4618      	mov	r0, r3
 800fad6:	4790      	blx	r2
 800fad8:	e7c9      	b.n	800fa6e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800fada:	2a00      	cmp	r2, #0
 800fadc:	f000 8087 	beq.w	800fbee <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800fae0:	3b00      	subs	r3, #0
 800fae2:	bf18      	it	ne
 800fae4:	2301      	movne	r3, #1
 800fae6:	9300      	str	r3, [sp, #0]
 800fae8:	4a82      	ldr	r2, [pc, #520]	; (800fcf4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800faea:	4b80      	ldr	r3, [pc, #512]	; (800fcec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800faec:	4629      	mov	r1, r5
 800faee:	f7fa fc7d 	bl	800a3ec <snprintf>
 800faf2:	4285      	cmp	r5, r0
 800faf4:	bfa2      	ittt	ge
 800faf6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800fafa:	18c0      	addge	r0, r0, r3
 800fafc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800fb00:	7b63      	ldrb	r3, [r4, #13]
 800fb02:	2b00      	cmp	r3, #0
 800fb04:	d178      	bne.n	800fbf8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800fb06:	4a7c      	ldr	r2, [pc, #496]	; (800fcf8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800fb08:	497c      	ldr	r1, [pc, #496]	; (800fcfc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800fb0a:	a803      	add	r0, sp, #12
 800fb0c:	f7ff fd8c 	bl	800f628 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fb10:	497b      	ldr	r1, [pc, #492]	; (800fd00 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800fb12:	a803      	add	r0, sp, #12
 800fb14:	f004 fefa 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fb18:	6863      	ldr	r3, [r4, #4]
 800fb1a:	059e      	lsls	r6, r3, #22
 800fb1c:	d403      	bmi.n	800fb26 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800fb1e:	7a20      	ldrb	r0, [r4, #8]
 800fb20:	f000 fb2c 	bl	801017c <PixelType::GetMap(pixel::Type)>
 800fb24:	75e0      	strb	r0, [r4, #23]
 800fb26:	7de0      	ldrb	r0, [r4, #23]
 800fb28:	f000 fb1c 	bl	8010164 <PixelType::GetMap(pixel::Map)>
 800fb2c:	6863      	ldr	r3, [r4, #4]
 800fb2e:	4975      	ldr	r1, [pc, #468]	; (800fd04 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800fb30:	4602      	mov	r2, r0
 800fb32:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800fb36:	a803      	add	r0, sp, #12
 800fb38:	f7ff fd76 	bl	800f628 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800fb3c:	6863      	ldr	r3, [r4, #4]
 800fb3e:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800fb42:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800fb46:	d011      	beq.n	800fb6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800fb48:	f10d 020b 	add.w	r2, sp, #11
 800fb4c:	7a20      	ldrb	r0, [r4, #8]
 800fb4e:	f10d 010a 	add.w	r1, sp, #10
 800fb52:	f000 f9a3 	bl	800fe9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800fb56:	6863      	ldr	r3, [r4, #4]
 800fb58:	055d      	lsls	r5, r3, #21
 800fb5a:	bf5c      	itt	pl
 800fb5c:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800fb60:	7622      	strbpl	r2, [r4, #24]
 800fb62:	0518      	lsls	r0, r3, #20
 800fb64:	bf5c      	itt	pl
 800fb66:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800fb6a:	7663      	strbpl	r3, [r4, #25]
 800fb6c:	4966      	ldr	r1, [pc, #408]	; (800fd08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800fb6e:	a803      	add	r0, sp, #12
 800fb70:	f004 fecc 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fb74:	7e20      	ldrb	r0, [r4, #24]
 800fb76:	f000 fb0b 	bl	8010190 <PixelType::ConvertTxH(unsigned char)>
 800fb7a:	6862      	ldr	r2, [r4, #4]
 800fb7c:	4963      	ldr	r1, [pc, #396]	; (800fd0c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800fb7e:	2302      	movs	r3, #2
 800fb80:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800fb84:	a803      	add	r0, sp, #12
 800fb86:	f7ff fd77 	bl	800f678 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fb8a:	7e60      	ldrb	r0, [r4, #25]
 800fb8c:	f000 fb00 	bl	8010190 <PixelType::ConvertTxH(unsigned char)>
 800fb90:	6862      	ldr	r2, [r4, #4]
 800fb92:	495f      	ldr	r1, [pc, #380]	; (800fd10 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800fb94:	2302      	movs	r3, #2
 800fb96:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800fb9a:	a803      	add	r0, sp, #12
 800fb9c:	f7ff fd6c 	bl	800f678 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fba0:	495c      	ldr	r1, [pc, #368]	; (800fd14 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800fba2:	a803      	add	r0, sp, #12
 800fba4:	f004 feb2 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fba8:	6863      	ldr	r3, [r4, #4]
 800fbaa:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800fbae:	495a      	ldr	r1, [pc, #360]	; (800fd18 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800fbb0:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800fbb4:	a803      	add	r0, sp, #12
 800fbb6:	f7ff fd0f 	bl	800f5d8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800fbba:	4958      	ldr	r1, [pc, #352]	; (800fd1c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800fbbc:	a803      	add	r0, sp, #12
 800fbbe:	f004 fea5 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fbc2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fbc6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800fbca:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800fbce:	6861      	ldr	r1, [r4, #4]
 800fbd0:	42aa      	cmp	r2, r5
 800fbd2:	d22f      	bcs.n	800fc34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800fbd4:	9803      	ldr	r0, [sp, #12]
 800fbd6:	06c9      	lsls	r1, r1, #27
 800fbd8:	4410      	add	r0, r2
 800fbda:	eba5 0502 	sub.w	r5, r5, r2
 800fbde:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800fbe2:	d418      	bmi.n	800fc16 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1be>
 800fbe4:	b9ca      	cbnz	r2, 800fc1a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800fbe6:	9300      	str	r3, [sp, #0]
 800fbe8:	4a41      	ldr	r2, [pc, #260]	; (800fcf0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800fbea:	4b4d      	ldr	r3, [pc, #308]	; (800fd20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fbec:	e018      	b.n	800fc20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800fbee:	2301      	movs	r3, #1
 800fbf0:	9300      	str	r3, [sp, #0]
 800fbf2:	4a4c      	ldr	r2, [pc, #304]	; (800fd24 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800fbf4:	4b3d      	ldr	r3, [pc, #244]	; (800fcec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800fbf6:	e779      	b.n	800faec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800fbf8:	ee07 3a90 	vmov	s15, r3
 800fbfc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800fc00:	2301      	movs	r3, #1
 800fc02:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 800fc06:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800fc0a:	493c      	ldr	r1, [pc, #240]	; (800fcfc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800fc0c:	461a      	mov	r2, r3
 800fc0e:	a803      	add	r0, sp, #12
 800fc10:	f7ff fd32 	bl	800f678 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800fc14:	e77c      	b.n	800fb10 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800fc16:	2a00      	cmp	r2, #0
 800fc18:	d05e      	beq.n	800fcd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>
 800fc1a:	9300      	str	r3, [sp, #0]
 800fc1c:	4a35      	ldr	r2, [pc, #212]	; (800fcf4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800fc1e:	4b40      	ldr	r3, [pc, #256]	; (800fd20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fc20:	4629      	mov	r1, r5
 800fc22:	f7fa fbe3 	bl	800a3ec <snprintf>
 800fc26:	4285      	cmp	r5, r0
 800fc28:	bfa2      	ittt	ge
 800fc2a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800fc2e:	18c0      	addge	r0, r0, r3
 800fc30:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800fc34:	493c      	ldr	r1, [pc, #240]	; (800fd28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800fc36:	4e3d      	ldr	r6, [pc, #244]	; (800fd2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800fc38:	a803      	add	r0, sp, #12
 800fc3a:	f004 fe67 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fc3e:	6863      	ldr	r3, [r4, #4]
 800fc40:	7ca2      	ldrb	r2, [r4, #18]
 800fc42:	493b      	ldr	r1, [pc, #236]	; (800fd30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800fc44:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800fc48:	a803      	add	r0, sp, #12
 800fc4a:	f7ff fc9d 	bl	800f588 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fc4e:	f104 0718 	add.w	r7, r4, #24
 800fc52:	2500      	movs	r5, #0
 800fc54:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800fc58:	6862      	ldr	r2, [r4, #4]
 800fc5a:	fa08 f305 	lsl.w	r3, r8, r5
 800fc5e:	4393      	bics	r3, r2
 800fc60:	bf0c      	ite	eq
 800fc62:	2301      	moveq	r3, #1
 800fc64:	2300      	movne	r3, #0
 800fc66:	4631      	mov	r1, r6
 800fc68:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800fc6c:	a803      	add	r0, sp, #12
 800fc6e:	3501      	adds	r5, #1
 800fc70:	f7ff fcb2 	bl	800f5d8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800fc74:	2d10      	cmp	r5, #16
 800fc76:	f106 0614 	add.w	r6, r6, #20
 800fc7a:	d1ed      	bne.n	800fc58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800fc7c:	6863      	ldr	r3, [r4, #4]
 800fc7e:	7ce2      	ldrb	r2, [r4, #19]
 800fc80:	492c      	ldr	r1, [pc, #176]	; (800fd34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800fc82:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800fc86:	a803      	add	r0, sp, #12
 800fc88:	f7ff fc7e 	bl	800f588 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fc8c:	492a      	ldr	r1, [pc, #168]	; (800fd38 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800fc8e:	a803      	add	r0, sp, #12
 800fc90:	f004 fe3c 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 800fc94:	6863      	ldr	r3, [r4, #4]
 800fc96:	7d22      	ldrb	r2, [r4, #20]
 800fc98:	4928      	ldr	r1, [pc, #160]	; (800fd3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800fc9a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fc9e:	a803      	add	r0, sp, #12
 800fca0:	f7ff fc72 	bl	800f588 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fca4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800fca8:	b17b      	cbz	r3, 800fcca <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x272>
 800fcaa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fcae:	9b03      	ldr	r3, [sp, #12]
 800fcb0:	4413      	add	r3, r2
 800fcb2:	227d      	movs	r2, #125	; 0x7d
 800fcb4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fcb8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800fcbc:	9903      	ldr	r1, [sp, #12]
 800fcbe:	54ca      	strb	r2, [r1, r3]
 800fcc0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800fcc4:	3301      	adds	r3, #1
 800fcc6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fcca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fcce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fcd0:	601a      	str	r2, [r3, #0]
 800fcd2:	b006      	add	sp, #24
 800fcd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fcd8:	9300      	str	r3, [sp, #0]
 800fcda:	4a12      	ldr	r2, [pc, #72]	; (800fd24 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800fcdc:	4b10      	ldr	r3, [pc, #64]	; (800fd20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800fcde:	e79f      	b.n	800fc20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c8>
 800fce0:	0801a7ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, sp, pc}
 800fce4:	0801a78a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, sp, pc}
 800fce8:	0801a793 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, sp, pc}
 800fcec:	0801a757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, sp, pc}
 800fcf0:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 800fcf4:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 800fcf8:	08019709 	stmdaeq	r1, {r0, r3, r8, r9, sl, ip, pc}
 800fcfc:	0801a71f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, sp, pc}
 800fd00:	08019713 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, ip, pc}
 800fd04:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 800fd08:	08019727 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, ip, pc}
 800fd0c:	0801a79d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sl, sp, pc}
 800fd10:	0801a7a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, sp, pc}
 800fd14:	0801973d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sl, ip, pc}
 800fd18:	0801a747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, sp, pc}
 800fd1c:	08019746 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, ip, pc}
 800fd20:	0801a72b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, sp, pc}
 800fd24:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}
 800fd28:	08019758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, ip, pc}
 800fd2c:	0801a826 	stmdaeq	r1, {r1, r2, r5, fp, sp, pc}
 800fd30:	0801a768 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, sp, pc}
 800fd34:	0801a714 	stmdaeq	r1, {r2, r4, r8, r9, sl, sp, pc}
 800fd38:	08019766 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sl, ip, pc}
 800fd3c:	0801a73a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, sp, pc}

0800fd40 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800fd40:	b513      	push	{r0, r1, r4, lr}
 800fd42:	6804      	ldr	r4, [r0, #0]
 800fd44:	b914      	cbnz	r4, 800fd4c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800fd46:	601c      	str	r4, [r3, #0]
 800fd48:	b002      	add	sp, #8
 800fd4a:	bd10      	pop	{r4, pc}
 800fd4c:	9300      	str	r3, [sp, #0]
 800fd4e:	4613      	mov	r3, r2
 800fd50:	460a      	mov	r2, r1
 800fd52:	2100      	movs	r1, #0
 800fd54:	f7ff fe80 	bl	800fa58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800fd58:	e7f6      	b.n	800fd48 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800fd5a <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800fd5a:	6843      	ldr	r3, [r0, #4]
 800fd5c:	07da      	lsls	r2, r3, #31
 800fd5e:	bf44      	itt	mi
 800fd60:	7a02      	ldrbmi	r2, [r0, #8]
 800fd62:	600a      	strmi	r2, [r1, #0]
 800fd64:	079a      	lsls	r2, r3, #30
 800fd66:	d505      	bpl.n	800fd74 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800fd68:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800fd6c:	2a00      	cmp	r2, #0
 800fd6e:	bf08      	it	eq
 800fd70:	22aa      	moveq	r2, #170	; 0xaa
 800fd72:	604a      	str	r2, [r1, #4]
 800fd74:	059a      	lsls	r2, r3, #22
 800fd76:	bf44      	itt	mi
 800fd78:	7dc2      	ldrbmi	r2, [r0, #23]
 800fd7a:	608a      	strmi	r2, [r1, #8]
 800fd7c:	055a      	lsls	r2, r3, #21
 800fd7e:	bf44      	itt	mi
 800fd80:	7e02      	ldrbmi	r2, [r0, #24]
 800fd82:	740a      	strbmi	r2, [r1, #16]
 800fd84:	051a      	lsls	r2, r3, #20
 800fd86:	bf44      	itt	mi
 800fd88:	7e42      	ldrbmi	r2, [r0, #25]
 800fd8a:	744a      	strbmi	r2, [r1, #17]
 800fd8c:	06da      	lsls	r2, r3, #27
 800fd8e:	bf44      	itt	mi
 800fd90:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800fd94:	60ca      	strmi	r2, [r1, #12]
 800fd96:	069a      	lsls	r2, r3, #26
 800fd98:	bf44      	itt	mi
 800fd9a:	7c82      	ldrbmi	r2, [r0, #18]
 800fd9c:	748a      	strbmi	r2, [r1, #18]
 800fd9e:	061a      	lsls	r2, r3, #24
 800fda0:	d504      	bpl.n	800fdac <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800fda2:	2201      	movs	r2, #1
 800fda4:	750a      	strb	r2, [r1, #20]
 800fda6:	7b42      	ldrb	r2, [r0, #13]
 800fda8:	b102      	cbz	r2, 800fdac <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800fdaa:	74ca      	strb	r2, [r1, #19]
 800fdac:	075a      	lsls	r2, r3, #29
 800fdae:	d50f      	bpl.n	800fdd0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800fdb0:	7ac2      	ldrb	r2, [r0, #11]
 800fdb2:	b510      	push	{r4, lr}
 800fdb4:	7b04      	ldrb	r4, [r0, #12]
 800fdb6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800fdba:	858a      	strh	r2, [r1, #44]	; 0x2c
 800fdbc:	05da      	lsls	r2, r3, #23
 800fdbe:	bf44      	itt	mi
 800fdc0:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800fdc4:	620a      	strmi	r2, [r1, #32]
 800fdc6:	065c      	lsls	r4, r3, #25
 800fdc8:	bf44      	itt	mi
 800fdca:	7cc3      	ldrbmi	r3, [r0, #19]
 800fdcc:	61cb      	strmi	r3, [r1, #28]
 800fdce:	bd10      	pop	{r4, pc}
 800fdd0:	05da      	lsls	r2, r3, #23
 800fdd2:	bf44      	itt	mi
 800fdd4:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800fdd8:	620a      	strmi	r2, [r1, #32]
 800fdda:	065b      	lsls	r3, r3, #25
 800fddc:	bf44      	itt	mi
 800fdde:	7cc3      	ldrbmi	r3, [r0, #19]
 800fde0:	61cb      	strmi	r3, [r1, #28]
 800fde2:	4770      	bx	lr

0800fde4 <PixelDmxParams::Dump()>:
 800fde4:	4770      	bx	lr

0800fde6 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800fde6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fde8:	4604      	mov	r4, r0
 800fdea:	460e      	mov	r6, r1
 800fdec:	4611      	mov	r1, r2
 800fdee:	9201      	str	r2, [sp, #4]
 800fdf0:	461d      	mov	r5, r3
 800fdf2:	f000 f861 	bl	800feb8 <PixelConfiguration::Validate(unsigned int&)>
 800fdf6:	7d62      	ldrb	r2, [r4, #21]
 800fdf8:	b94a      	cbnz	r2, 800fe0e <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800fdfa:	6823      	ldr	r3, [r4, #0]
 800fdfc:	9901      	ldr	r1, [sp, #4]
 800fdfe:	b11b      	cbz	r3, 800fe08 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x22>
 800fe00:	3b0b      	subs	r3, #11
 800fe02:	2b01      	cmp	r3, #1
 800fe04:	bf88      	it	hi
 800fe06:	6022      	strhi	r2, [r4, #0]
 800fe08:	4620      	mov	r0, r4
 800fe0a:	f000 f855 	bl	800feb8 <PixelConfiguration::Validate(unsigned int&)>
 800fe0e:	6823      	ldr	r3, [r4, #0]
 800fe10:	2b07      	cmp	r3, #7
 800fe12:	bf15      	itete	ne
 800fe14:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800fe18:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800fe1c:	23aa      	movne	r3, #170	; 0xaa
 800fe1e:	2380      	moveq	r3, #128	; 0x80
 800fe20:	e9c5 3100 	strd	r3, r1, [r5]
 800fe24:	6a21      	ldr	r1, [r4, #32]
 800fe26:	bf14      	ite	ne
 800fe28:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800fe2c:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800fe30:	60aa      	str	r2, [r5, #8]
 800fe32:	6862      	ldr	r2, [r4, #4]
 800fe34:	b109      	cbz	r1, 800fe3a <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800fe36:	4291      	cmp	r1, r2
 800fe38:	d900      	bls.n	800fe3c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800fe3a:	6222      	str	r2, [r4, #32]
 800fe3c:	69e0      	ldr	r0, [r4, #28]
 800fe3e:	6a21      	ldr	r1, [r4, #32]
 800fe40:	fbb2 f2f1 	udiv	r2, r2, r1
 800fe44:	42b0      	cmp	r0, r6
 800fe46:	bf28      	it	cs
 800fe48:	4630      	movcs	r0, r6
 800fe4a:	6262      	str	r2, [r4, #36]	; 0x24
 800fe4c:	2e01      	cmp	r6, #1
 800fe4e:	f103 0301 	add.w	r3, r3, #1
 800fe52:	fbb2 f2f3 	udiv	r2, r2, r3
 800fe56:	f102 0301 	add.w	r3, r2, #1
 800fe5a:	62a3      	str	r3, [r4, #40]	; 0x28
 800fe5c:	bf1c      	itt	ne
 800fe5e:	4343      	mulne	r3, r0
 800fe60:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800fe64:	61e0      	str	r0, [r4, #28]
 800fe66:	60ea      	str	r2, [r5, #12]
 800fe68:	b002      	add	sp, #8
 800fe6a:	bd70      	pop	{r4, r5, r6, pc}

0800fe6c <PixelDmxConfiguration::Print()>:
 800fe6c:	b510      	push	{r4, lr}
 800fe6e:	4604      	mov	r4, r0
 800fe70:	f000 f8b8 	bl	800ffe4 <PixelConfiguration::Print()>
 800fe74:	4806      	ldr	r0, [pc, #24]	; (800fe90 <PixelDmxConfiguration::Print()+0x24>)
 800fe76:	f7fa fa91 	bl	800a39c <printf>
 800fe7a:	69e1      	ldr	r1, [r4, #28]
 800fe7c:	4805      	ldr	r0, [pc, #20]	; (800fe94 <PixelDmxConfiguration::Print()+0x28>)
 800fe7e:	f7fa fa8d 	bl	800a39c <printf>
 800fe82:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800fe86:	4804      	ldr	r0, [pc, #16]	; (800fe98 <PixelDmxConfiguration::Print()+0x2c>)
 800fe88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe8c:	f7fa ba86 	b.w	800a39c <printf>
 800fe90:	08019773 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, ip, pc}
 800fe94:	0801978c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, ip, pc}
 800fe98:	0801979b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, ip, pc}

0800fe9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800fe9c:	23c0      	movs	r3, #192	; 0xc0
 800fe9e:	2803      	cmp	r0, #3
 800fea0:	700b      	strb	r3, [r1, #0]
 800fea2:	d006      	beq.n	800feb2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800fea4:	3808      	subs	r0, #8
 800fea6:	2803      	cmp	r0, #3
 800fea8:	bf34      	ite	cc
 800feaa:	23fc      	movcc	r3, #252	; 0xfc
 800feac:	23f0      	movcs	r3, #240	; 0xf0
 800feae:	7013      	strb	r3, [r2, #0]
 800feb0:	4770      	bx	lr
 800feb2:	23f8      	movs	r3, #248	; 0xf8
 800feb4:	e7fb      	b.n	800feae <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800feb8 <PixelConfiguration::Validate(unsigned int&)>:
 800feb8:	b513      	push	{r0, r1, r4, lr}
 800feba:	4604      	mov	r4, r0
 800febc:	6800      	ldr	r0, [r0, #0]
 800febe:	6863      	ldr	r3, [r4, #4]
 800fec0:	68a2      	ldr	r2, [r4, #8]
 800fec2:	2807      	cmp	r0, #7
 800fec4:	d127      	bne.n	800ff16 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800fec6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800feca:	bf28      	it	cs
 800fecc:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800fed0:	6063      	str	r3, [r4, #4]
 800fed2:	2304      	movs	r3, #4
 800fed4:	600b      	str	r3, [r1, #0]
 800fed6:	2301      	movs	r3, #1
 800fed8:	2a06      	cmp	r2, #6
 800feda:	7563      	strb	r3, [r4, #21]
 800fedc:	d102      	bne.n	800fee4 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800fede:	f000 f94d 	bl	801017c <PixelType::GetMap(pixel::Type)>
 800fee2:	60a0      	str	r0, [r4, #8]
 800fee4:	7c63      	ldrb	r3, [r4, #17]
 800fee6:	7c22      	ldrb	r2, [r4, #16]
 800fee8:	6820      	ldr	r0, [r4, #0]
 800feea:	429a      	cmp	r2, r3
 800feec:	bf24      	itt	cs
 800feee:	2300      	movcs	r3, #0
 800fef0:	8223      	strhcs	r3, [r4, #16]
 800fef2:	f10d 0207 	add.w	r2, sp, #7
 800fef6:	f10d 0106 	add.w	r1, sp, #6
 800fefa:	f7ff ffcf 	bl	800fe9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800fefe:	7c23      	ldrb	r3, [r4, #16]
 800ff00:	b913      	cbnz	r3, 800ff08 <PixelConfiguration::Validate(unsigned int&)+0x50>
 800ff02:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800ff06:	7423      	strb	r3, [r4, #16]
 800ff08:	7c63      	ldrb	r3, [r4, #17]
 800ff0a:	b913      	cbnz	r3, 800ff12 <PixelConfiguration::Validate(unsigned int&)+0x5a>
 800ff0c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ff10:	7463      	strb	r3, [r4, #17]
 800ff12:	4b2a      	ldr	r3, [pc, #168]	; (800ffbc <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800ff14:	e01e      	b.n	800ff54 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800ff16:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800ff1a:	bf28      	it	cs
 800ff1c:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800ff20:	6063      	str	r3, [r4, #4]
 800ff22:	2303      	movs	r3, #3
 800ff24:	600b      	str	r3, [r1, #0]
 800ff26:	f1a0 030b 	sub.w	r3, r0, #11
 800ff2a:	2b01      	cmp	r3, #1
 800ff2c:	d806      	bhi.n	800ff3c <PixelConfiguration::Validate(unsigned int&)+0x84>
 800ff2e:	7ca3      	ldrb	r3, [r4, #18]
 800ff30:	2b1f      	cmp	r3, #31
 800ff32:	d83d      	bhi.n	800ffb0 <PixelConfiguration::Validate(unsigned int&)+0xf8>
 800ff34:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800ff38:	74a3      	strb	r3, [r4, #18]
 800ff3a:	e001      	b.n	800ff40 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800ff3c:	2800      	cmp	r0, #0
 800ff3e:	d139      	bne.n	800ffb4 <PixelConfiguration::Validate(unsigned int&)+0xfc>
 800ff40:	2300      	movs	r3, #0
 800ff42:	2a06      	cmp	r2, #6
 800ff44:	bf08      	it	eq
 800ff46:	60a3      	streq	r3, [r4, #8]
 800ff48:	280d      	cmp	r0, #13
 800ff4a:	7563      	strb	r3, [r4, #21]
 800ff4c:	68e3      	ldr	r3, [r4, #12]
 800ff4e:	d119      	bne.n	800ff84 <PixelConfiguration::Validate(unsigned int&)+0xcc>
 800ff50:	b913      	cbnz	r3, 800ff58 <PixelConfiguration::Validate(unsigned int&)+0xa0>
 800ff52:	4b1b      	ldr	r3, [pc, #108]	; (800ffc0 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800ff54:	60e3      	str	r3, [r4, #12]
 800ff56:	e003      	b.n	800ff60 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800ff58:	4a1a      	ldr	r2, [pc, #104]	; (800ffc4 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800ff5a:	4293      	cmp	r3, r2
 800ff5c:	d900      	bls.n	800ff60 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800ff5e:	60e2      	str	r2, [r4, #12]
 800ff60:	7d23      	ldrb	r3, [r4, #20]
 800ff62:	b31b      	cbz	r3, 800ffac <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800ff64:	7ce3      	ldrb	r3, [r4, #19]
 800ff66:	b9ab      	cbnz	r3, 800ff94 <PixelConfiguration::Validate(unsigned int&)+0xdc>
 800ff68:	6822      	ldr	r2, [r4, #0]
 800ff6a:	b17a      	cbz	r2, 800ff8c <PixelConfiguration::Validate(unsigned int&)+0xd4>
 800ff6c:	f1a2 030b 	sub.w	r3, r2, #11
 800ff70:	2b01      	cmp	r3, #1
 800ff72:	d90d      	bls.n	800ff90 <PixelConfiguration::Validate(unsigned int&)+0xd8>
 800ff74:	4b14      	ldr	r3, [pc, #80]	; (800ffc8 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800ff76:	4915      	ldr	r1, [pc, #84]	; (800ffcc <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ff78:	2a0d      	cmp	r2, #13
 800ff7a:	bf08      	it	eq
 800ff7c:	460b      	moveq	r3, r1
 800ff7e:	61a3      	str	r3, [r4, #24]
 800ff80:	b002      	add	sp, #8
 800ff82:	bd10      	pop	{r4, pc}
 800ff84:	2b00      	cmp	r3, #0
 800ff86:	d0e4      	beq.n	800ff52 <PixelConfiguration::Validate(unsigned int&)+0x9a>
 800ff88:	4a11      	ldr	r2, [pc, #68]	; (800ffd0 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800ff8a:	e7e6      	b.n	800ff5a <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800ff8c:	4b11      	ldr	r3, [pc, #68]	; (800ffd4 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800ff8e:	e7f6      	b.n	800ff7e <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ff90:	4b11      	ldr	r3, [pc, #68]	; (800ffd8 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800ff92:	e7f4      	b.n	800ff7e <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ff94:	f1a3 0214 	sub.w	r2, r3, #20
 800ff98:	2a05      	cmp	r2, #5
 800ff9a:	d807      	bhi.n	800ffac <PixelConfiguration::Validate(unsigned int&)+0xf4>
 800ff9c:	3b15      	subs	r3, #21
 800ff9e:	2b04      	cmp	r3, #4
 800ffa0:	bf96      	itet	ls
 800ffa2:	4a0e      	ldrls	r2, [pc, #56]	; (800ffdc <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800ffa4:	4b0e      	ldrhi	r3, [pc, #56]	; (800ffe0 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800ffa6:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800ffaa:	e7e8      	b.n	800ff7e <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ffac:	4b07      	ldr	r3, [pc, #28]	; (800ffcc <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ffae:	e7e6      	b.n	800ff7e <PixelConfiguration::Validate(unsigned int&)+0xc6>
 800ffb0:	23ff      	movs	r3, #255	; 0xff
 800ffb2:	e7c1      	b.n	800ff38 <PixelConfiguration::Validate(unsigned int&)+0x80>
 800ffb4:	280d      	cmp	r0, #13
 800ffb6:	d18e      	bne.n	800fed6 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800ffb8:	e7c2      	b.n	800ff40 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800ffba:	bf00      	nop
 800ffbc:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800ffc0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ffc4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800ffc8:	08019b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, pc}
 800ffcc:	08019894 	stmdaeq	r1, {r2, r4, r7, fp, ip, pc}
 800ffd0:	017d7840 	cmneq	sp, r0, asr #16
 800ffd4:	08019e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, pc}
 800ffd8:	08019f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, ip, pc}
 800ffdc:	08019880 	stmdaeq	r1, {r7, fp, ip, pc}
 800ffe0:	08019994 	stmdaeq	r1, {r2, r4, r7, r8, fp, ip, pc}

0800ffe4 <PixelConfiguration::Print()>:
 800ffe4:	b513      	push	{r0, r1, r4, lr}
 800ffe6:	4604      	mov	r4, r0
 800ffe8:	4827      	ldr	r0, [pc, #156]	; (8010088 <PixelConfiguration::Print()+0xa4>)
 800ffea:	f7fa f9d7 	bl	800a39c <printf>
 800ffee:	6820      	ldr	r0, [r4, #0]
 800fff0:	f000 f860 	bl	80100b4 <PixelType::GetType(pixel::Type)>
 800fff4:	6822      	ldr	r2, [r4, #0]
 800fff6:	4601      	mov	r1, r0
 800fff8:	4824      	ldr	r0, [pc, #144]	; (801008c <PixelConfiguration::Print()+0xa8>)
 800fffa:	f7fa f9cf 	bl	800a39c <printf>
 800fffe:	6861      	ldr	r1, [r4, #4]
 8010000:	4823      	ldr	r0, [pc, #140]	; (8010090 <PixelConfiguration::Print()+0xac>)
 8010002:	f7fa f9cb 	bl	800a39c <printf>
 8010006:	7d63      	ldrb	r3, [r4, #21]
 8010008:	2b00      	cmp	r3, #0
 801000a:	d034      	beq.n	8010076 <PixelConfiguration::Print()+0x92>
 801000c:	68a0      	ldr	r0, [r4, #8]
 801000e:	f000 f8a9 	bl	8010164 <PixelType::GetMap(pixel::Map)>
 8010012:	68a2      	ldr	r2, [r4, #8]
 8010014:	4601      	mov	r1, r0
 8010016:	481f      	ldr	r0, [pc, #124]	; (8010094 <PixelConfiguration::Print()+0xb0>)
 8010018:	f7fa f9c0 	bl	800a39c <printf>
 801001c:	7c20      	ldrb	r0, [r4, #16]
 801001e:	f000 f8b7 	bl	8010190 <PixelType::ConvertTxH(unsigned char)>
 8010022:	ee10 0a10 	vmov	r0, s0
 8010026:	f7f8 ffb5 	bl	8008f94 <__aeabi_f2d>
 801002a:	460b      	mov	r3, r1
 801002c:	7c21      	ldrb	r1, [r4, #16]
 801002e:	9100      	str	r1, [sp, #0]
 8010030:	4602      	mov	r2, r0
 8010032:	4819      	ldr	r0, [pc, #100]	; (8010098 <PixelConfiguration::Print()+0xb4>)
 8010034:	f7fa f9b2 	bl	800a39c <printf>
 8010038:	7c60      	ldrb	r0, [r4, #17]
 801003a:	f000 f8a9 	bl	8010190 <PixelType::ConvertTxH(unsigned char)>
 801003e:	ee10 0a10 	vmov	r0, s0
 8010042:	f7f8 ffa7 	bl	8008f94 <__aeabi_f2d>
 8010046:	460b      	mov	r3, r1
 8010048:	7c61      	ldrb	r1, [r4, #17]
 801004a:	9100      	str	r1, [sp, #0]
 801004c:	4602      	mov	r2, r0
 801004e:	4813      	ldr	r0, [pc, #76]	; (801009c <PixelConfiguration::Print()+0xb8>)
 8010050:	f7fa f9a4 	bl	800a39c <printf>
 8010054:	7d21      	ldrb	r1, [r4, #20]
 8010056:	4a12      	ldr	r2, [pc, #72]	; (80100a0 <PixelConfiguration::Print()+0xbc>)
 8010058:	4b12      	ldr	r3, [pc, #72]	; (80100a4 <PixelConfiguration::Print()+0xc0>)
 801005a:	4813      	ldr	r0, [pc, #76]	; (80100a8 <PixelConfiguration::Print()+0xc4>)
 801005c:	2900      	cmp	r1, #0
 801005e:	bf14      	ite	ne
 8010060:	4611      	movne	r1, r2
 8010062:	4619      	moveq	r1, r3
 8010064:	f7fa f99a 	bl	800a39c <printf>
 8010068:	68e1      	ldr	r1, [r4, #12]
 801006a:	4810      	ldr	r0, [pc, #64]	; (80100ac <PixelConfiguration::Print()+0xc8>)
 801006c:	b002      	add	sp, #8
 801006e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010072:	f7fa b993 	b.w	800a39c <printf>
 8010076:	6823      	ldr	r3, [r4, #0]
 8010078:	3b0b      	subs	r3, #11
 801007a:	2b01      	cmp	r3, #1
 801007c:	d8ea      	bhi.n	8010054 <PixelConfiguration::Print()+0x70>
 801007e:	7ca1      	ldrb	r1, [r4, #18]
 8010080:	480b      	ldr	r0, [pc, #44]	; (80100b0 <PixelConfiguration::Print()+0xcc>)
 8010082:	f7fa f98b 	bl	800a39c <printf>
 8010086:	e7e5      	b.n	8010054 <PixelConfiguration::Print()+0x70>
 8010088:	080197c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, ip, pc}
 801008c:	080197db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 8010090:	080197ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, sl, ip, pc}
 8010094:	080197fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, pc}
 8010098:	08019812 	stmdaeq	r1, {r1, r4, fp, ip, pc}
 801009c:	0801982a 	stmdaeq	r1, {r1, r3, r5, fp, ip, pc}
 80100a0:	080197bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, pc}
 80100a4:	080197c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, ip, pc}
 80100a8:	08019859 	stmdaeq	r1, {r0, r3, r4, r6, fp, ip, pc}
 80100ac:	0801986f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, fp, ip, pc}
 80100b0:	08019842 	stmdaeq	r1, {r1, r6, fp, ip, pc}

080100b4 <PixelType::GetType(pixel::Type)>:
 80100b4:	280d      	cmp	r0, #13
 80100b6:	bfda      	itte	le
 80100b8:	4b02      	ldrle	r3, [pc, #8]	; (80100c4 <PixelType::GetType(pixel::Type)+0x10>)
 80100ba:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 80100be:	4802      	ldrgt	r0, [pc, #8]	; (80100c8 <PixelType::GetType(pixel::Type)+0x14>)
 80100c0:	4770      	bx	lr
 80100c2:	bf00      	nop
 80100c4:	0801a0c8 	stmdaeq	r1, {r3, r6, r7, sp, pc}
 80100c8:	0801a094 	stmdaeq	r1, {r2, r4, r7, sp, pc}

080100cc <PixelType::GetType(char const*)>:
 80100cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80100ce:	4c10      	ldr	r4, [pc, #64]	; (8010110 <PixelType::GetType(char const*)+0x44>)
 80100d0:	2300      	movs	r3, #0
 80100d2:	1e47      	subs	r7, r0, #1
 80100d4:	1e66      	subs	r6, r4, #1
 80100d6:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 80100da:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
 80100de:	2a19      	cmp	r2, #25
 80100e0:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 80100e4:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 80100e8:	460d      	mov	r5, r1
 80100ea:	bf98      	it	ls
 80100ec:	f101 0520 	addls.w	r5, r1, #32
 80100f0:	f1bc 0f19 	cmp.w	ip, #25
 80100f4:	bf98      	it	ls
 80100f6:	3220      	addls	r2, #32
 80100f8:	42aa      	cmp	r2, r5
 80100fa:	d005      	beq.n	8010108 <PixelType::GetType(char const*)+0x3c>
 80100fc:	3301      	adds	r3, #1
 80100fe:	2b0e      	cmp	r3, #14
 8010100:	f104 0408 	add.w	r4, r4, #8
 8010104:	d1e5      	bne.n	80100d2 <PixelType::GetType(char const*)+0x6>
 8010106:	e001      	b.n	801010c <PixelType::GetType(char const*)+0x40>
 8010108:	2900      	cmp	r1, #0
 801010a:	d1e4      	bne.n	80100d6 <PixelType::GetType(char const*)+0xa>
 801010c:	4618      	mov	r0, r3
 801010e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010110:	0801a0c8 	stmdaeq	r1, {r3, r6, r7, sp, pc}

08010114 <PixelType::GetMap(char const*)>:
 8010114:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010116:	4a12      	ldr	r2, [pc, #72]	; (8010160 <PixelType::GetMap(char const*)+0x4c>)
 8010118:	2300      	movs	r3, #0
 801011a:	1e55      	subs	r5, r2, #1
 801011c:	1e46      	subs	r6, r0, #1
 801011e:	f102 0c02 	add.w	ip, r2, #2
 8010122:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8010126:	f1a1 0441 	sub.w	r4, r1, #65	; 0x41
 801012a:	2c19      	cmp	r4, #25
 801012c:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 8010130:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8010134:	460f      	mov	r7, r1
 8010136:	bf98      	it	ls
 8010138:	f101 0720 	addls.w	r7, r1, #32
 801013c:	f1be 0f19 	cmp.w	lr, #25
 8010140:	bf98      	it	ls
 8010142:	3420      	addls	r4, #32
 8010144:	42bc      	cmp	r4, r7
 8010146:	d006      	beq.n	8010156 <PixelType::GetMap(char const*)+0x42>
 8010148:	3301      	adds	r3, #1
 801014a:	2b06      	cmp	r3, #6
 801014c:	f102 0204 	add.w	r2, r2, #4
 8010150:	d1e3      	bne.n	801011a <PixelType::GetMap(char const*)+0x6>
 8010152:	4618      	mov	r0, r3
 8010154:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010156:	2900      	cmp	r1, #0
 8010158:	d0fb      	beq.n	8010152 <PixelType::GetMap(char const*)+0x3e>
 801015a:	4565      	cmp	r5, ip
 801015c:	d1e1      	bne.n	8010122 <PixelType::GetMap(char const*)+0xe>
 801015e:	e7f8      	b.n	8010152 <PixelType::GetMap(char const*)+0x3e>
 8010160:	0801a0b0 	stmdaeq	r1, {r4, r5, r7, sp, pc}

08010164 <PixelType::GetMap(pixel::Map)>:
 8010164:	2805      	cmp	r0, #5
 8010166:	bfda      	itte	le
 8010168:	4b02      	ldrle	r3, [pc, #8]	; (8010174 <PixelType::GetMap(pixel::Map)+0x10>)
 801016a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 801016e:	4802      	ldrgt	r0, [pc, #8]	; (8010178 <PixelType::GetMap(pixel::Map)+0x14>)
 8010170:	4770      	bx	lr
 8010172:	bf00      	nop
 8010174:	0801a0b0 	stmdaeq	r1, {r4, r5, r7, sp, pc}
 8010178:	0801a09c 	stmdaeq	r1, {r2, r3, r4, r7, sp, pc}

0801017c <PixelType::GetMap(pixel::Type)>:
 801017c:	3801      	subs	r0, #1
 801017e:	2809      	cmp	r0, #9
 8010180:	bf9a      	itte	ls
 8010182:	4b02      	ldrls	r3, [pc, #8]	; (801018c <PixelType::GetMap(pixel::Type)+0x10>)
 8010184:	5618      	ldrsbls	r0, [r3, r0]
 8010186:	2002      	movhi	r0, #2
 8010188:	4770      	bx	lr
 801018a:	bf00      	nop
 801018c:	0801a0a6 	stmdaeq	r1, {r1, r2, r5, r7, sp, pc}

08010190 <PixelType::ConvertTxH(unsigned char)>:
 8010190:	28f0      	cmp	r0, #240	; 0xf0
 8010192:	d017      	beq.n	80101c4 <PixelType::ConvertTxH(unsigned char)+0x34>
 8010194:	d80c      	bhi.n	80101b0 <PixelType::ConvertTxH(unsigned char)+0x20>
 8010196:	28c0      	cmp	r0, #192	; 0xc0
 8010198:	d017      	beq.n	80101ca <PixelType::ConvertTxH(unsigned char)+0x3a>
 801019a:	28e0      	cmp	r0, #224	; 0xe0
 801019c:	d018      	beq.n	80101d0 <PixelType::ConvertTxH(unsigned char)+0x40>
 801019e:	ed9f 0a11 	vldr	s0, [pc, #68]	; 80101e4 <PixelType::ConvertTxH(unsigned char)+0x54>
 80101a2:	2880      	cmp	r0, #128	; 0x80
 80101a4:	eef4 7a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
 80101a8:	bf08      	it	eq
 80101aa:	eeb0 0a67 	vmoveq.f32	s0, s15
 80101ae:	4770      	bx	lr
 80101b0:	28fc      	cmp	r0, #252	; 0xfc
 80101b2:	d010      	beq.n	80101d6 <PixelType::ConvertTxH(unsigned char)+0x46>
 80101b4:	28fe      	cmp	r0, #254	; 0xfe
 80101b6:	d011      	beq.n	80101dc <PixelType::ConvertTxH(unsigned char)+0x4c>
 80101b8:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 80101e4 <PixelType::ConvertTxH(unsigned char)+0x54>
 80101bc:	28f8      	cmp	r0, #248	; 0xf8
 80101be:	eef6 7a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
 80101c2:	e7f1      	b.n	80101a8 <PixelType::ConvertTxH(unsigned char)+0x18>
 80101c4:	eeb6 0a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
 80101c8:	4770      	bx	lr
 80101ca:	eeb5 0a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
 80101ce:	4770      	bx	lr
 80101d0:	eeb5 0a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
 80101d4:	4770      	bx	lr
 80101d6:	eeb6 0a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
 80101da:	4770      	bx	lr
 80101dc:	ed9f 0a02 	vldr	s0, [pc, #8]	; 80101e8 <PixelType::ConvertTxH(unsigned char)+0x58>
 80101e0:	4770      	bx	lr
 80101e2:	bf00      	nop
 80101e4:	00000000 	andeq	r0, r0, r0
 80101e8:	3f8c0000 	svccc	0x008c0000

080101ec <PixelType::ConvertTxH(float)>:
 80101ec:	eddf 7a24 	vldr	s15, [pc, #144]	; 8010280 <PixelType::ConvertTxH(float)+0x94>
 80101f0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80101f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80101f8:	d433      	bmi.n	8010262 <PixelType::ConvertTxH(float)+0x76>
 80101fa:	eef4 7a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
 80101fe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010206:	d42e      	bmi.n	8010266 <PixelType::ConvertTxH(float)+0x7a>
 8010208:	eef5 7a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
 801020c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010214:	d429      	bmi.n	801026a <PixelType::ConvertTxH(float)+0x7e>
 8010216:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8010284 <PixelType::ConvertTxH(float)+0x98>
 801021a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801021e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010222:	d424      	bmi.n	801026e <PixelType::ConvertTxH(float)+0x82>
 8010224:	eddf 7a18 	vldr	s15, [pc, #96]	; 8010288 <PixelType::ConvertTxH(float)+0x9c>
 8010228:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801022c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010230:	d41f      	bmi.n	8010272 <PixelType::ConvertTxH(float)+0x86>
 8010232:	eddf 7a16 	vldr	s15, [pc, #88]	; 801028c <PixelType::ConvertTxH(float)+0xa0>
 8010236:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801023a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801023e:	d41a      	bmi.n	8010276 <PixelType::ConvertTxH(float)+0x8a>
 8010240:	eddf 7a13 	vldr	s15, [pc, #76]	; 8010290 <PixelType::ConvertTxH(float)+0xa4>
 8010244:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801024c:	d415      	bmi.n	801027a <PixelType::ConvertTxH(float)+0x8e>
 801024e:	eddf 7a11 	vldr	s15, [pc, #68]	; 8010294 <PixelType::ConvertTxH(float)+0xa8>
 8010252:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801025a:	bf4c      	ite	mi
 801025c:	20fe      	movmi	r0, #254	; 0xfe
 801025e:	2000      	movpl	r0, #0
 8010260:	4770      	bx	lr
 8010262:	2000      	movs	r0, #0
 8010264:	4770      	bx	lr
 8010266:	2080      	movs	r0, #128	; 0x80
 8010268:	4770      	bx	lr
 801026a:	20c0      	movs	r0, #192	; 0xc0
 801026c:	4770      	bx	lr
 801026e:	20e0      	movs	r0, #224	; 0xe0
 8010270:	4770      	bx	lr
 8010272:	20f0      	movs	r0, #240	; 0xf0
 8010274:	4770      	bx	lr
 8010276:	20f8      	movs	r0, #248	; 0xf8
 8010278:	4770      	bx	lr
 801027a:	20fc      	movs	r0, #252	; 0xfc
 801027c:	4770      	bx	lr
 801027e:	bf00      	nop
 8010280:	3da00000 	stccc	0, cr0, [r0]
 8010284:	3f0c0000 	svccc	0x000c0000
 8010288:	3f340000 	svccc	0x00340000
 801028c:	3f5c0000 	svccc	0x005c0000
 8010290:	3f820000 	svccc	0x00820000
 8010294:	3f960000 	svccc	0x00960000

08010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 8010298:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801029a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801029e:	f3c2 2607 	ubfx	r6, r2, #8, #8
 80102a2:	b2d4      	uxtb	r4, r2
 80102a4:	4a10      	ldr	r2, [pc, #64]	; (80102e8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 80102a6:	4605      	mov	r5, r0
 80102a8:	6810      	ldr	r0, [r2, #0]
 80102aa:	6802      	ldr	r2, [r0, #0]
 80102ac:	2a07      	cmp	r2, #7
 80102ae:	d007      	beq.n	80102c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 80102b0:	460a      	mov	r2, r1
 80102b2:	e9cd 6400 	strd	r6, r4, [sp]
 80102b6:	4629      	mov	r1, r5
 80102b8:	f000 ff80 	bl	80111bc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80102bc:	b004      	add	sp, #16
 80102be:	bd70      	pop	{r4, r5, r6, pc}
 80102c0:	42b3      	cmp	r3, r6
 80102c2:	f04f 0200 	mov.w	r2, #0
 80102c6:	d10a      	bne.n	80102de <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 80102c8:	42a3      	cmp	r3, r4
 80102ca:	d108      	bne.n	80102de <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 80102cc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80102d0:	9200      	str	r2, [sp, #0]
 80102d2:	4613      	mov	r3, r2
 80102d4:	460a      	mov	r2, r1
 80102d6:	4629      	mov	r1, r5
 80102d8:	f000 fff2 	bl	80112c0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 80102dc:	e7ee      	b.n	80102bc <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 80102de:	e9cd 4201 	strd	r4, r2, [sp, #4]
 80102e2:	9600      	str	r6, [sp, #0]
 80102e4:	e7f6      	b.n	80102d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 80102e6:	bf00      	nop
 80102e8:	2000125c 	andcs	r1, r0, ip, asr r2

080102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 80102ec:	b570      	push	{r4, r5, r6, lr}
 80102ee:	4d07      	ldr	r5, [pc, #28]	; (801030c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 80102f0:	4606      	mov	r6, r0
 80102f2:	2400      	movs	r4, #0
 80102f4:	682b      	ldr	r3, [r5, #0]
 80102f6:	429c      	cmp	r4, r3
 80102f8:	d300      	bcc.n	80102fc <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 80102fa:	bd70      	pop	{r4, r5, r6, pc}
 80102fc:	4621      	mov	r1, r4
 80102fe:	2200      	movs	r2, #0
 8010300:	4630      	mov	r0, r6
 8010302:	f7ff ffc9 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010306:	3401      	adds	r4, #1
 8010308:	e7f4      	b.n	80102f4 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 801030a:	bf00      	nop
 801030c:	20001258 	andcs	r1, r0, r8, asr r2

08010310 <PixelPatterns::PixelPatterns(unsigned int)>:
 8010310:	4b0c      	ldr	r3, [pc, #48]	; (8010344 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 8010312:	4a0d      	ldr	r2, [pc, #52]	; (8010348 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 8010314:	681b      	ldr	r3, [r3, #0]
 8010316:	b510      	push	{r4, lr}
 8010318:	2910      	cmp	r1, #16
 801031a:	6013      	str	r3, [r2, #0]
 801031c:	4a0b      	ldr	r2, [pc, #44]	; (801034c <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 801031e:	bf28      	it	cs
 8010320:	2110      	movcs	r1, #16
 8010322:	6011      	str	r1, [r2, #0]
 8010324:	685a      	ldr	r2, [r3, #4]
 8010326:	4b0a      	ldr	r3, [pc, #40]	; (8010350 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 8010328:	601a      	str	r2, [r3, #0]
 801032a:	4b0a      	ldr	r3, [pc, #40]	; (8010354 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 801032c:	681c      	ldr	r4, [r3, #0]
 801032e:	4b0a      	ldr	r3, [pc, #40]	; (8010358 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 8010330:	2210      	movs	r2, #16
 8010332:	2100      	movs	r1, #0
 8010334:	3a01      	subs	r2, #1
 8010336:	61d9      	str	r1, [r3, #28]
 8010338:	601c      	str	r4, [r3, #0]
 801033a:	6199      	str	r1, [r3, #24]
 801033c:	f103 0320 	add.w	r3, r3, #32
 8010340:	d1f8      	bne.n	8010334 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 8010342:	bd10      	pop	{r4, pc}
 8010344:	20001268 	andcs	r1, r0, r8, ror #4
 8010348:	2000125c 	andcs	r1, r0, ip, asr r2
 801034c:	20001250 	andcs	r1, r0, r0, asr r2
 8010350:	20001258 	andcs	r1, r0, r8, asr r2
 8010354:	2000fd94 	mulcs	r0, r4, sp
 8010358:	20001050 	andcs	r1, r0, r0, asr r0

0801035c <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 801035c:	2805      	cmp	r0, #5
 801035e:	bfdd      	ittte	le
 8010360:	4b02      	ldrle	r3, [pc, #8]	; (801036c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 8010362:	220e      	movle	r2, #14
 8010364:	fb02 3000 	mlale	r0, r2, r0, r3
 8010368:	4801      	ldrgt	r0, [pc, #4]	; (8010370 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 801036a:	4770      	bx	lr
 801036c:	0801a138 	stmdaeq	r1, {r3, r4, r5, r8, sp, pc}
 8010370:	0801a094 	stmdaeq	r1, {r2, r4, r7, sp, pc}

08010374 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010374:	b5e0      	push	{r5, r6, r7, lr}
 8010376:	4608      	mov	r0, r1
 8010378:	460d      	mov	r5, r1
 801037a:	4617      	mov	r7, r2
 801037c:	461e      	mov	r6, r3
 801037e:	f7ff ffb5 	bl	80102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010382:	4906      	ldr	r1, [pc, #24]	; (801039c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 8010384:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010388:	2301      	movs	r3, #1
 801038a:	61cb      	str	r3, [r1, #28]
 801038c:	22ff      	movs	r2, #255	; 0xff
 801038e:	2300      	movs	r3, #0
 8010390:	e9c1 2304 	strd	r2, r3, [r1, #16]
 8010394:	604f      	str	r7, [r1, #4]
 8010396:	618e      	str	r6, [r1, #24]
 8010398:	bde0      	pop	{r5, r6, r7, pc}
 801039a:	bf00      	nop
 801039c:	20001050 	andcs	r1, r0, r0, asr r0

080103a0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 80103a0:	b5e0      	push	{r5, r6, r7, lr}
 80103a2:	4608      	mov	r0, r1
 80103a4:	460d      	mov	r5, r1
 80103a6:	461e      	mov	r6, r3
 80103a8:	4617      	mov	r7, r2
 80103aa:	f7ff ff9f 	bl	80102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 80103ae:	4908      	ldr	r1, [pc, #32]	; (80103d0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 80103b0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 80103b4:	2302      	movs	r3, #2
 80103b6:	61cb      	str	r3, [r1, #28]
 80103b8:	9b04      	ldr	r3, [sp, #16]
 80103ba:	604b      	str	r3, [r1, #4]
 80103bc:	4b05      	ldr	r3, [pc, #20]	; (80103d4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 80103be:	681b      	ldr	r3, [r3, #0]
 80103c0:	610b      	str	r3, [r1, #16]
 80103c2:	2300      	movs	r3, #0
 80103c4:	614b      	str	r3, [r1, #20]
 80103c6:	9b05      	ldr	r3, [sp, #20]
 80103c8:	618b      	str	r3, [r1, #24]
 80103ca:	e9c1 7602 	strd	r7, r6, [r1, #8]
 80103ce:	bde0      	pop	{r5, r6, r7, pc}
 80103d0:	20001050 	andcs	r1, r0, r0, asr r0
 80103d4:	20001258 	andcs	r1, r0, r8, asr r2

080103d8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 80103d8:	b5e0      	push	{r5, r6, r7, lr}
 80103da:	4608      	mov	r0, r1
 80103dc:	460d      	mov	r5, r1
 80103de:	461f      	mov	r7, r3
 80103e0:	4616      	mov	r6, r2
 80103e2:	f7ff ff83 	bl	80102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 80103e6:	4907      	ldr	r1, [pc, #28]	; (8010404 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 80103e8:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 80103ec:	2303      	movs	r3, #3
 80103ee:	61cb      	str	r3, [r1, #28]
 80103f0:	4b05      	ldr	r3, [pc, #20]	; (8010408 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 80103f2:	604f      	str	r7, [r1, #4]
 80103f4:	681b      	ldr	r3, [r3, #0]
 80103f6:	610b      	str	r3, [r1, #16]
 80103f8:	2300      	movs	r3, #0
 80103fa:	614b      	str	r3, [r1, #20]
 80103fc:	9b04      	ldr	r3, [sp, #16]
 80103fe:	608e      	str	r6, [r1, #8]
 8010400:	618b      	str	r3, [r1, #24]
 8010402:	bde0      	pop	{r5, r6, r7, pc}
 8010404:	20001050 	andcs	r1, r0, r0, asr r0
 8010408:	20001258 	andcs	r1, r0, r8, asr r2

0801040c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 801040c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801040e:	4608      	mov	r0, r1
 8010410:	460d      	mov	r5, r1
 8010412:	461f      	mov	r7, r3
 8010414:	4616      	mov	r6, r2
 8010416:	4c14      	ldr	r4, [pc, #80]	; (8010468 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 8010418:	f7ff ff68 	bl	80102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 801041c:	4913      	ldr	r1, [pc, #76]	; (801046c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 801041e:	6820      	ldr	r0, [r4, #0]
 8010420:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010424:	2304      	movs	r3, #4
 8010426:	61cb      	str	r3, [r1, #28]
 8010428:	1e43      	subs	r3, r0, #1
 801042a:	005b      	lsls	r3, r3, #1
 801042c:	b29b      	uxth	r3, r3
 801042e:	4d10      	ldr	r5, [pc, #64]	; (8010470 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 8010430:	610b      	str	r3, [r1, #16]
 8010432:	2300      	movs	r3, #0
 8010434:	614b      	str	r3, [r1, #20]
 8010436:	682b      	ldr	r3, [r5, #0]
 8010438:	604f      	str	r7, [r1, #4]
 801043a:	608e      	str	r6, [r1, #8]
 801043c:	b97b      	cbnz	r3, 801045e <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 801043e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8010442:	4298      	cmp	r0, r3
 8010444:	bf34      	ite	cc
 8010446:	0080      	lslcc	r0, r0, #2
 8010448:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801044c:	f005 f84c 	bl	80154e8 <operator new[](unsigned int)>
 8010450:	6823      	ldr	r3, [r4, #0]
 8010452:	6028      	str	r0, [r5, #0]
 8010454:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8010458:	2200      	movs	r2, #0
 801045a:	4298      	cmp	r0, r3
 801045c:	d100      	bne.n	8010460 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 801045e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010460:	f840 2b04 	str.w	r2, [r0], #4
 8010464:	e7f9      	b.n	801045a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 8010466:	bf00      	nop
 8010468:	20001258 	andcs	r1, r0, r8, asr r2
 801046c:	20001050 	andcs	r1, r0, r0, asr r0
 8010470:	20001254 	andcs	r1, r0, r4, asr r2

08010474 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010474:	b5e0      	push	{r5, r6, r7, lr}
 8010476:	4608      	mov	r0, r1
 8010478:	460d      	mov	r5, r1
 801047a:	461e      	mov	r6, r3
 801047c:	4617      	mov	r7, r2
 801047e:	f7ff ff35 	bl	80102ec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010482:	4908      	ldr	r1, [pc, #32]	; (80104a4 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010484:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010488:	2305      	movs	r3, #5
 801048a:	61cb      	str	r3, [r1, #28]
 801048c:	9b05      	ldr	r3, [sp, #20]
 801048e:	604b      	str	r3, [r1, #4]
 8010490:	9b04      	ldr	r3, [sp, #16]
 8010492:	610b      	str	r3, [r1, #16]
 8010494:	2300      	movs	r3, #0
 8010496:	614b      	str	r3, [r1, #20]
 8010498:	9b06      	ldr	r3, [sp, #24]
 801049a:	618b      	str	r3, [r1, #24]
 801049c:	e9c1 7602 	strd	r7, r6, [r1, #8]
 80104a0:	bde0      	pop	{r5, r6, r7, pc}
 80104a2:	bf00      	nop
 80104a4:	20001050 	andcs	r1, r0, r0, asr r0

080104a8 <PixelPatterns::Wheel(unsigned char)>:
 80104a8:	43cb      	mvns	r3, r1
 80104aa:	b2db      	uxtb	r3, r3
 80104ac:	2b54      	cmp	r3, #84	; 0x54
 80104ae:	d809      	bhi.n	80104c4 <PixelPatterns::Wheel(unsigned char)+0x1c>
 80104b0:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 80104b4:	b2db      	uxtb	r3, r3
 80104b6:	1e5a      	subs	r2, r3, #1
 80104b8:	4258      	negs	r0, r3
 80104ba:	b2d2      	uxtb	r2, r2
 80104bc:	b2c0      	uxtb	r0, r0
 80104be:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80104c2:	4770      	bx	lr
 80104c4:	2ba9      	cmp	r3, #169	; 0xa9
 80104c6:	d809      	bhi.n	80104dc <PixelPatterns::Wheel(unsigned char)+0x34>
 80104c8:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 80104cc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80104d0:	b2c9      	uxtb	r1, r1
 80104d2:	43c8      	mvns	r0, r1
 80104d4:	b2c0      	uxtb	r0, r0
 80104d6:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80104da:	4770      	bx	lr
 80104dc:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 80104e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80104e4:	b2c9      	uxtb	r1, r1
 80104e6:	0208      	lsls	r0, r1, #8
 80104e8:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 80104ec:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80104f0:	4770      	bx	lr
	...

080104f4 <PixelPatterns::Increment(unsigned int)>:
 80104f4:	4a0d      	ldr	r2, [pc, #52]	; (801052c <PixelPatterns::Increment(unsigned int)+0x38>)
 80104f6:	b510      	push	{r4, lr}
 80104f8:	014c      	lsls	r4, r1, #5
 80104fa:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 80104fe:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 8010502:	b930      	cbnz	r0, 8010512 <PixelPatterns::Increment(unsigned int)+0x1e>
 8010504:	690a      	ldr	r2, [r1, #16]
 8010506:	3301      	adds	r3, #1
 8010508:	4293      	cmp	r3, r2
 801050a:	bf18      	it	ne
 801050c:	4618      	movne	r0, r3
 801050e:	6148      	str	r0, [r1, #20]
 8010510:	bd10      	pop	{r4, pc}
 8010512:	b92b      	cbnz	r3, 8010520 <PixelPatterns::Increment(unsigned int)+0x2c>
 8010514:	4422      	add	r2, r4
 8010516:	6913      	ldr	r3, [r2, #16]
 8010518:	3b01      	subs	r3, #1
 801051a:	b29b      	uxth	r3, r3
 801051c:	6153      	str	r3, [r2, #20]
 801051e:	e7f7      	b.n	8010510 <PixelPatterns::Increment(unsigned int)+0x1c>
 8010520:	3b01      	subs	r3, #1
 8010522:	614b      	str	r3, [r1, #20]
 8010524:	2b00      	cmp	r3, #0
 8010526:	d1f3      	bne.n	8010510 <PixelPatterns::Increment(unsigned int)+0x1c>
 8010528:	e7f4      	b.n	8010514 <PixelPatterns::Increment(unsigned int)+0x20>
 801052a:	bf00      	nop
 801052c:	20001050 	andcs	r1, r0, r0, asr r0

08010530 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 8010530:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010534:	4b12      	ldr	r3, [pc, #72]	; (8010580 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 8010536:	f8df 804c 	ldr.w	r8, [pc, #76]	; 8010584 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 801053a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 801053e:	4605      	mov	r5, r0
 8010540:	f8d3 9014 	ldr.w	r9, [r3, #20]
 8010544:	460c      	mov	r4, r1
 8010546:	2700      	movs	r7, #0
 8010548:	f8d8 3000 	ldr.w	r3, [r8]
 801054c:	b2be      	uxth	r6, r7
 801054e:	42b3      	cmp	r3, r6
 8010550:	f107 0701 	add.w	r7, r7, #1
 8010554:	d805      	bhi.n	8010562 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 8010556:	4621      	mov	r1, r4
 8010558:	4628      	mov	r0, r5
 801055a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801055e:	f7ff bfc9 	b.w	80104f4 <PixelPatterns::Increment(unsigned int)>
 8010562:	0231      	lsls	r1, r6, #8
 8010564:	fbb1 f1f3 	udiv	r1, r1, r3
 8010568:	4449      	add	r1, r9
 801056a:	b2c9      	uxtb	r1, r1
 801056c:	4628      	mov	r0, r5
 801056e:	f7ff ff9b 	bl	80104a8 <PixelPatterns::Wheel(unsigned char)>
 8010572:	4631      	mov	r1, r6
 8010574:	4602      	mov	r2, r0
 8010576:	4620      	mov	r0, r4
 8010578:	f7ff fe8e 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 801057c:	e7e4      	b.n	8010548 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 801057e:	bf00      	nop
 8010580:	20001050 	andcs	r1, r0, r0, asr r0
 8010584:	20001258 	andcs	r1, r0, r8, asr r2

08010588 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 8010588:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801058c:	4b13      	ldr	r3, [pc, #76]	; (80105dc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 801058e:	4e14      	ldr	r6, [pc, #80]	; (80105e0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 8010590:	f8df a050 	ldr.w	sl, [pc, #80]	; 80105e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 8010594:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010598:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 801059c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 80105a0:	4605      	mov	r5, r0
 80105a2:	460c      	mov	r4, r1
 80105a4:	f04f 0b00 	mov.w	fp, #0
 80105a8:	6833      	ldr	r3, [r6, #0]
 80105aa:	fa1f f18b 	uxth.w	r1, fp
 80105ae:	428b      	cmp	r3, r1
 80105b0:	d805      	bhi.n	80105be <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 80105b2:	4621      	mov	r1, r4
 80105b4:	4628      	mov	r0, r5
 80105b6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105ba:	f7ff bf9b 	b.w	80104f4 <PixelPatterns::Increment(unsigned int)>
 80105be:	eb09 0301 	add.w	r3, r9, r1
 80105c2:	fb0a f303 	mul.w	r3, sl, r3
 80105c6:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 80105ca:	bf94      	ite	ls
 80105cc:	463a      	movls	r2, r7
 80105ce:	4642      	movhi	r2, r8
 80105d0:	4620      	mov	r0, r4
 80105d2:	f7ff fe61 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 80105d6:	f10b 0b01 	add.w	fp, fp, #1
 80105da:	e7e5      	b.n	80105a8 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 80105dc:	20001050 	andcs	r1, r0, r0, asr r0
 80105e0:	20001258 	andcs	r1, r0, r8, asr r2
 80105e4:	aaaaaaab 	bge	6abb098 <__stack_size+0x6ab7098>

080105e8 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 80105e8:	b538      	push	{r3, r4, r5, lr}
 80105ea:	4b08      	ldr	r3, [pc, #32]	; (801060c <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 80105ec:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80105f0:	460c      	mov	r4, r1
 80105f2:	4605      	mov	r5, r0
 80105f4:	6959      	ldr	r1, [r3, #20]
 80105f6:	689a      	ldr	r2, [r3, #8]
 80105f8:	4620      	mov	r0, r4
 80105fa:	f7ff fe4d 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 80105fe:	4621      	mov	r1, r4
 8010600:	4628      	mov	r0, r5
 8010602:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010606:	f7ff bf75 	b.w	80104f4 <PixelPatterns::Increment(unsigned int)>
 801060a:	bf00      	nop
 801060c:	20001050 	andcs	r1, r0, r0, asr r0

08010610 <PixelPatterns::ScannerUpdate(unsigned int)>:
 8010610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010614:	4b29      	ldr	r3, [pc, #164]	; (80106bc <PixelPatterns::ScannerUpdate(unsigned int)+0xac>)
 8010616:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 80106c0 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 801061a:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 80106c4 <PixelPatterns::ScannerUpdate(unsigned int)+0xb4>
 801061e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010622:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 8010626:	b085      	sub	sp, #20
 8010628:	689d      	ldr	r5, [r3, #8]
 801062a:	00b3      	lsls	r3, r6, #2
 801062c:	4680      	mov	r8, r0
 801062e:	9301      	str	r3, [sp, #4]
 8010630:	4608      	mov	r0, r1
 8010632:	f04f 0900 	mov.w	r9, #0
 8010636:	1bbf      	subs	r7, r7, r6
 8010638:	f8da 2000 	ldr.w	r2, [sl]
 801063c:	fa1f f489 	uxth.w	r4, r9
 8010640:	42a2      	cmp	r2, r4
 8010642:	d806      	bhi.n	8010652 <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 8010644:	4601      	mov	r1, r0
 8010646:	4640      	mov	r0, r8
 8010648:	b005      	add	sp, #20
 801064a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801064e:	f7ff bf51 	b.w	80104f4 <PixelPatterns::Increment(unsigned int)>
 8010652:	42a6      	cmp	r6, r4
 8010654:	d10c      	bne.n	8010670 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 8010656:	462a      	mov	r2, r5
 8010658:	4631      	mov	r1, r6
 801065a:	9002      	str	r0, [sp, #8]
 801065c:	f7ff fe1c 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010660:	f8db 2000 	ldr.w	r2, [fp]
 8010664:	9b01      	ldr	r3, [sp, #4]
 8010666:	50d5      	str	r5, [r2, r3]
 8010668:	9802      	ldr	r0, [sp, #8]
 801066a:	f109 0901 	add.w	r9, r9, #1
 801066e:	e7e3      	b.n	8010638 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 8010670:	42a7      	cmp	r7, r4
 8010672:	d109      	bne.n	8010688 <PixelPatterns::ScannerUpdate(unsigned int)+0x78>
 8010674:	462a      	mov	r2, r5
 8010676:	4639      	mov	r1, r7
 8010678:	9002      	str	r0, [sp, #8]
 801067a:	f7ff fe0d 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 801067e:	f8db 2000 	ldr.w	r2, [fp]
 8010682:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 8010686:	e7ef      	b.n	8010668 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 8010688:	f8db 2000 	ldr.w	r2, [fp]
 801068c:	9002      	str	r0, [sp, #8]
 801068e:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 8010692:	f3c1 2246 	ubfx	r2, r1, #9, #7
 8010696:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 801069a:	0212      	lsls	r2, r2, #8
 801069c:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 80106a0:	f3c1 0146 	ubfx	r1, r1, #1, #7
 80106a4:	430a      	orrs	r2, r1
 80106a6:	4621      	mov	r1, r4
 80106a8:	9203      	str	r2, [sp, #12]
 80106aa:	f7ff fdf5 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 80106ae:	f8db 1000 	ldr.w	r1, [fp]
 80106b2:	9a03      	ldr	r2, [sp, #12]
 80106b4:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 80106b8:	e7d6      	b.n	8010668 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 80106ba:	bf00      	nop
 80106bc:	20001050 	andcs	r1, r0, r0, asr r0
 80106c0:	20001258 	andcs	r1, r0, r8, asr r2
 80106c4:	20001254 	andcs	r1, r0, r4, asr r2

080106c8 <PixelPatterns::FadeUpdate(unsigned int)>:
 80106c8:	4a20      	ldr	r2, [pc, #128]	; (801074c <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 80106ca:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 80106ce:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 80106d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106d6:	460e      	mov	r6, r1
 80106d8:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 80106dc:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80106e0:	f3cc 2407 	ubfx	r4, ip, #8, #8
 80106e4:	437a      	muls	r2, r7
 80106e6:	4605      	mov	r5, r0
 80106e8:	1bc8      	subs	r0, r1, r7
 80106ea:	fb00 2204 	mla	r2, r0, r4, r2
 80106ee:	f3c3 4407 	ubfx	r4, r3, #16, #8
 80106f2:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 80106f6:	437c      	muls	r4, r7
 80106f8:	fb00 440e 	mla	r4, r0, lr, r4
 80106fc:	b2db      	uxtb	r3, r3
 80106fe:	fbb2 f2f1 	udiv	r2, r2, r1
 8010702:	fbb4 f4f1 	udiv	r4, r4, r1
 8010706:	0212      	lsls	r2, r2, #8
 8010708:	0424      	lsls	r4, r4, #16
 801070a:	437b      	muls	r3, r7
 801070c:	b292      	uxth	r2, r2
 801070e:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8010712:	fa5f fc8c 	uxtb.w	ip, ip
 8010716:	4314      	orrs	r4, r2
 8010718:	fb00 330c 	mla	r3, r0, ip, r3
 801071c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8010750 <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 8010720:	fbb3 f3f1 	udiv	r3, r3, r1
 8010724:	b2db      	uxtb	r3, r3
 8010726:	431c      	orrs	r4, r3
 8010728:	2700      	movs	r7, #0
 801072a:	f8d8 3000 	ldr.w	r3, [r8]
 801072e:	429f      	cmp	r7, r3
 8010730:	d305      	bcc.n	801073e <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 8010732:	4631      	mov	r1, r6
 8010734:	4628      	mov	r0, r5
 8010736:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801073a:	f7ff bedb 	b.w	80104f4 <PixelPatterns::Increment(unsigned int)>
 801073e:	4639      	mov	r1, r7
 8010740:	4622      	mov	r2, r4
 8010742:	4630      	mov	r0, r6
 8010744:	f7ff fda8 	bl	8010298 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010748:	3701      	adds	r7, #1
 801074a:	e7ee      	b.n	801072a <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 801074c:	20001050 	andcs	r1, r0, r0, asr r0
 8010750:	20001258 	andcs	r1, r0, r8, asr r2

08010754 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 8010754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010756:	4b12      	ldr	r3, [pc, #72]	; (80107a0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 8010758:	014e      	lsls	r6, r1, #5
 801075a:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 801075e:	599c      	ldr	r4, [r3, r6]
 8010760:	686f      	ldr	r7, [r5, #4]
 8010762:	1b14      	subs	r4, r2, r4
 8010764:	42bc      	cmp	r4, r7
 8010766:	d319      	bcc.n	801079c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010768:	519a      	str	r2, [r3, r6]
 801076a:	69eb      	ldr	r3, [r5, #28]
 801076c:	3b01      	subs	r3, #1
 801076e:	2b04      	cmp	r3, #4
 8010770:	d814      	bhi.n	801079c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010772:	e8df f003 	tbb	[pc, r3]
 8010776:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 801077a:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 801077e:	fed8 2001 	cdp2	0, 13, cr2, cr8, cr1, {0}
 8010782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010784:	f7ff ff00 	bl	8010588 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 8010788:	e7fa      	b.n	8010780 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 801078a:	f7ff ff2d 	bl	80105e8 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 801078e:	e7f7      	b.n	8010780 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010790:	f7ff ff3e 	bl	8010610 <PixelPatterns::ScannerUpdate(unsigned int)>
 8010794:	e7f4      	b.n	8010780 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010796:	f7ff ff97 	bl	80106c8 <PixelPatterns::FadeUpdate(unsigned int)>
 801079a:	e7f1      	b.n	8010780 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 801079c:	2000      	movs	r0, #0
 801079e:	e7f0      	b.n	8010782 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 80107a0:	20001050 	andcs	r1, r0, r0, asr r0

080107a4 <PixelPatterns::Run()>:
 80107a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80107a8:	4f11      	ldr	r7, [pc, #68]	; (80107f0 <PixelPatterns::Run()+0x4c>)
 80107aa:	4606      	mov	r6, r0
 80107ac:	6838      	ldr	r0, [r7, #0]
 80107ae:	f000 fc85 	bl	80110bc <WS28xxMulti::IsUpdating()>
 80107b2:	4604      	mov	r4, r0
 80107b4:	b9c8      	cbnz	r0, 80107ea <PixelPatterns::Run()+0x46>
 80107b6:	4b0f      	ldr	r3, [pc, #60]	; (80107f4 <PixelPatterns::Run()+0x50>)
 80107b8:	f8df 803c 	ldr.w	r8, [pc, #60]	; 80107f8 <PixelPatterns::Run()+0x54>
 80107bc:	f8d3 9000 	ldr.w	r9, [r3]
 80107c0:	4605      	mov	r5, r0
 80107c2:	f8d8 3000 	ldr.w	r3, [r8]
 80107c6:	b2e9      	uxtb	r1, r5
 80107c8:	428b      	cmp	r3, r1
 80107ca:	f105 0501 	add.w	r5, r5, #1
 80107ce:	d805      	bhi.n	80107dc <PixelPatterns::Run()+0x38>
 80107d0:	b15c      	cbz	r4, 80107ea <PixelPatterns::Run()+0x46>
 80107d2:	6838      	ldr	r0, [r7, #0]
 80107d4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80107d8:	f000 bb0a 	b.w	8010df0 <WS28xxMulti::Update()>
 80107dc:	464a      	mov	r2, r9
 80107de:	4630      	mov	r0, r6
 80107e0:	f7ff ffb8 	bl	8010754 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 80107e4:	4320      	orrs	r0, r4
 80107e6:	b2c4      	uxtb	r4, r0
 80107e8:	e7eb      	b.n	80107c2 <PixelPatterns::Run()+0x1e>
 80107ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80107ee:	bf00      	nop
 80107f0:	2000125c 	andcs	r1, r0, ip, asr r2
 80107f4:	2000fd94 	mulcs	r0, r4, sp
 80107f8:	20001250 	andcs	r1, r0, r0, asr r2

080107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 80107fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107fe:	4c20      	ldr	r4, [pc, #128]	; (8010880 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 8010800:	f89d e014 	ldrb.w	lr, [sp, #20]
 8010804:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010808:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 801080c:	4c1d      	ldr	r4, [pc, #116]	; (8010884 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x88>)
 801080e:	b2c0      	uxtb	r0, r0
 8010810:	440c      	add	r4, r1
 8010812:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 8010816:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 801081a:	f500 7000 	add.w	r0, r0, #512	; 0x200
 801081e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8010822:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8010826:	0089      	lsls	r1, r1, #2
 8010828:	2080      	movs	r0, #128	; 0x80
 801082a:	2601      	movs	r6, #1
 801082c:	ea12 0400 	ands.w	r4, r2, r0
 8010830:	bf0b      	itete	eq
 8010832:	f5ac 67c0 	subeq.w	r7, ip, #1536	; 0x600
 8010836:	f5ac 64c0 	subne.w	r4, ip, #1536	; 0x600
 801083a:	603c      	streq	r4, [r7, #0]
 801083c:	6026      	strne	r6, [r4, #0]
 801083e:	ea13 0400 	ands.w	r4, r3, r0
 8010842:	bf0b      	itete	eq
 8010844:	f5ac 6780 	subeq.w	r7, ip, #1024	; 0x400
 8010848:	f5ac 6480 	subne.w	r4, ip, #1024	; 0x400
 801084c:	603c      	streq	r4, [r7, #0]
 801084e:	6026      	strne	r6, [r4, #0]
 8010850:	ea1e 0400 	ands.w	r4, lr, r0
 8010854:	bf15      	itete	ne
 8010856:	f5ac 7400 	subne.w	r4, ip, #512	; 0x200
 801085a:	f5ac 7700 	subeq.w	r7, ip, #512	; 0x200
 801085e:	6026      	strne	r6, [r4, #0]
 8010860:	603c      	streq	r4, [r7, #0]
 8010862:	ea15 0400 	ands.w	r4, r5, r0
 8010866:	bf14      	ite	ne
 8010868:	f8cc 6000 	strne.w	r6, [ip]
 801086c:	f8cc 4000 	streq.w	r4, [ip]
 8010870:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 8010874:	4561      	cmp	r1, ip
 8010876:	ea4f 0050 	mov.w	r0, r0, lsr #1
 801087a:	d1d7      	bne.n	801082c <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x30>
 801087c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801087e:	bf00      	nop
 8010880:	2000126c 	andcs	r1, r0, ip, ror #4
 8010884:	e1100030 	tst	r0, r0, lsr r0

08010888 <TIMER3_IRQHandler>:
 8010888:	f3bf 8f5f 	dmb	sy
 801088c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010890:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 8010894:	0791      	lsls	r1, r2, #30
 8010896:	d51e      	bpl.n	80108d6 <TIMER3_IRQHandler+0x4e>
 8010898:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 801089c:	f021 0101 	bic.w	r1, r1, #1
 80108a0:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 80108a4:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80108a8:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 80108ac:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80108b0:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80108b4:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 80108b8:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80108bc:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80108c0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 80108c4:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80108c8:	4b07      	ldr	r3, [pc, #28]	; (80108e8 <TIMER3_IRQHandler+0x60>)
 80108ca:	2100      	movs	r1, #0
 80108cc:	7019      	strb	r1, [r3, #0]
 80108ce:	4b07      	ldr	r3, [pc, #28]	; (80108ec <TIMER3_IRQHandler+0x64>)
 80108d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80108d4:	6299      	str	r1, [r3, #40]	; 0x28
 80108d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80108da:	43d2      	mvns	r2, r2
 80108dc:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 80108e0:	f3bf 8f5f 	dmb	sy
 80108e4:	4770      	bx	lr
 80108e6:	bf00      	nop
 80108e8:	20001264 	andcs	r1, r0, r4, ror #4
 80108ec:	40021000 	andmi	r1, r2, r0

080108f0 <WS28xxMulti::~WS28xxMulti()>:
 80108f0:	4b01      	ldr	r3, [pc, #4]	; (80108f8 <WS28xxMulti::~WS28xxMulti()+0x8>)
 80108f2:	2200      	movs	r2, #0
 80108f4:	601a      	str	r2, [r3, #0]
 80108f6:	4770      	bx	lr
 80108f8:	20001268 	andcs	r1, r0, r8, ror #4

080108fc <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 80108fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010900:	4680      	mov	r8, r0
 8010902:	b08e      	sub	sp, #56	; 0x38
 8010904:	4608      	mov	r0, r1
 8010906:	4614      	mov	r4, r2
 8010908:	f007 f924 	bl	8017b54 <__popcountsi2>
 801090c:	4607      	mov	r7, r0
 801090e:	4620      	mov	r0, r4
 8010910:	f007 f920 	bl	8017b54 <__popcountsi2>
 8010914:	4c70      	ldr	r4, [pc, #448]	; (8010ad8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 8010916:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8010aec <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 801091a:	4606      	mov	r6, r0
 801091c:	f241 0001 	movw	r0, #4097	; 0x1001
 8010920:	f005 fe2c 	bl	801657c <rcu_periph_clock_enable>
 8010924:	4620      	mov	r0, r4
 8010926:	f005 fee5 	bl	80166f4 <timer_deinit>
 801092a:	2500      	movs	r5, #0
 801092c:	23f9      	movs	r3, #249	; 0xf9
 801092e:	a901      	add	r1, sp, #4
 8010930:	4620      	mov	r0, r4
 8010932:	9303      	str	r3, [sp, #12]
 8010934:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8010938:	f005 ff82 	bl	8016840 <timer_init>
 801093c:	4620      	mov	r0, r4
 801093e:	2101      	movs	r1, #1
 8010940:	f006 f92a 	bl	8016b98 <timer_master_slave_mode_config>
 8010944:	4620      	mov	r0, r4
 8010946:	2130      	movs	r1, #48	; 0x30
 8010948:	f006 f916 	bl	8016b78 <timer_master_output_trigger_source_select>
 801094c:	4629      	mov	r1, r5
 801094e:	4620      	mov	r0, r4
 8010950:	2210      	movs	r2, #16
 8010952:	f006 f8af 	bl	8016ab4 <timer_channel_output_mode_config>
 8010956:	4620      	mov	r0, r4
 8010958:	2210      	movs	r2, #16
 801095a:	2102      	movs	r1, #2
 801095c:	f006 f8aa 	bl	8016ab4 <timer_channel_output_mode_config>
 8010960:	4620      	mov	r0, r4
 8010962:	2210      	movs	r2, #16
 8010964:	2103      	movs	r1, #3
 8010966:	f006 f8a5 	bl	8016ab4 <timer_channel_output_mode_config>
 801096a:	f04f 09fa 	mov.w	r9, #250	; 0xfa
 801096e:	4629      	mov	r1, r5
 8010970:	4620      	mov	r0, r4
 8010972:	2201      	movs	r2, #1
 8010974:	f006 f8c4 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010978:	fb09 f207 	mul.w	r2, r9, r7
 801097c:	4620      	mov	r0, r4
 801097e:	08d2      	lsrs	r2, r2, #3
 8010980:	2102      	movs	r1, #2
 8010982:	f006 f8bd 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010986:	fb09 f206 	mul.w	r2, r9, r6
 801098a:	08d2      	lsrs	r2, r2, #3
 801098c:	2103      	movs	r1, #3
 801098e:	4620      	mov	r0, r4
 8010990:	f006 f8b6 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010994:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8010998:	f241 0002 	movw	r0, #4098	; 0x1002
 801099c:	f005 fdee 	bl	801657c <rcu_periph_clock_enable>
 80109a0:	4620      	mov	r0, r4
 80109a2:	f005 fea7 	bl	80166f4 <timer_deinit>
 80109a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80109aa:	a901      	add	r1, sp, #4
 80109ac:	4620      	mov	r0, r4
 80109ae:	9303      	str	r3, [sp, #12]
 80109b0:	e9cd 5501 	strd	r5, r5, [sp, #4]
 80109b4:	f005 ff44 	bl	8016840 <timer_init>
 80109b8:	4620      	mov	r0, r4
 80109ba:	2101      	movs	r1, #1
 80109bc:	f006 f8ec 	bl	8016b98 <timer_master_slave_mode_config>
 80109c0:	4620      	mov	r0, r4
 80109c2:	2107      	movs	r1, #7
 80109c4:	f006 f8e0 	bl	8016b88 <timer_slave_mode_select>
 80109c8:	4620      	mov	r0, r4
 80109ca:	2120      	movs	r1, #32
 80109cc:	f006 f8cc 	bl	8016b68 <timer_input_trigger_source_select>
 80109d0:	4629      	mov	r1, r5
 80109d2:	4620      	mov	r0, r4
 80109d4:	2210      	movs	r2, #16
 80109d6:	f006 f86d 	bl	8016ab4 <timer_channel_output_mode_config>
 80109da:	f8d8 201c 	ldr.w	r2, [r8, #28]
 80109de:	4629      	mov	r1, r5
 80109e0:	3201      	adds	r2, #1
 80109e2:	4620      	mov	r0, r4
 80109e4:	f006 f88c 	bl	8016b00 <timer_channel_output_pulse_value_config>
 80109e8:	2102      	movs	r1, #2
 80109ea:	4620      	mov	r0, r4
 80109ec:	f005 ff6b 	bl	80168c6 <timer_interrupt_enable>
 80109f0:	4b3a      	ldr	r3, [pc, #232]	; (8010adc <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 80109f2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80109f6:	f504 3416 	add.w	r4, r4, #153600	; 0x25800
 80109fa:	f883 531e 	strb.w	r5, [r3, #798]	; 0x31e
 80109fe:	f640 4015 	movw	r0, #3093	; 0xc15
 8010a02:	601a      	str	r2, [r3, #0]
 8010a04:	f005 fdba 	bl	801657c <rcu_periph_clock_enable>
 8010a08:	2104      	movs	r1, #4
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	f005 f86c 	bl	8015ae8 <dma_deinit>
 8010a10:	a805      	add	r0, sp, #20
 8010a12:	f005 f894 	bl	8015b3e <dma_single_data_para_struct_init>
 8010a16:	4b32      	ldr	r3, [pc, #200]	; (8010ae0 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 8010a18:	f8cd a01c 	str.w	sl, [sp, #28]
 8010a1c:	2601      	movs	r6, #1
 8010a1e:	f04f 0940 	mov.w	r9, #64	; 0x40
 8010a22:	f44f 6800 	mov.w	r8, #2048	; 0x800
 8010a26:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 8010a2a:	aa05      	add	r2, sp, #20
 8010a2c:	4620      	mov	r0, r4
 8010a2e:	2104      	movs	r1, #4
 8010a30:	e9cd 3605 	strd	r3, r6, [sp, #20]
 8010a34:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010a38:	9608      	str	r6, [sp, #32]
 8010a3a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010a3e:	970d      	str	r7, [sp, #52]	; 0x34
 8010a40:	f005 f889 	bl	8015b56 <dma_single_data_mode_init>
 8010a44:	4620      	mov	r0, r4
 8010a46:	2104      	movs	r1, #4
 8010a48:	f005 f8c4 	bl	8015bd4 <dma_circulation_disable>
 8010a4c:	2205      	movs	r2, #5
 8010a4e:	4620      	mov	r0, r4
 8010a50:	2104      	movs	r1, #4
 8010a52:	f005 f8c7 	bl	8015be4 <dma_channel_subperipheral_select>
 8010a56:	2107      	movs	r1, #7
 8010a58:	4620      	mov	r0, r4
 8010a5a:	f005 f845 	bl	8015ae8 <dma_deinit>
 8010a5e:	a805      	add	r0, sp, #20
 8010a60:	f005 f86d 	bl	8015b3e <dma_single_data_para_struct_init>
 8010a64:	4b1f      	ldr	r3, [pc, #124]	; (8010ae4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 8010a66:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010a6a:	e9cd 3507 	strd	r3, r5, [sp, #28]
 8010a6e:	4d1e      	ldr	r5, [pc, #120]	; (8010ae8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>)
 8010a70:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010a74:	aa05      	add	r2, sp, #20
 8010a76:	4620      	mov	r0, r4
 8010a78:	2107      	movs	r1, #7
 8010a7a:	e9cd 5605 	strd	r5, r6, [sp, #20]
 8010a7e:	970d      	str	r7, [sp, #52]	; 0x34
 8010a80:	f005 f869 	bl	8015b56 <dma_single_data_mode_init>
 8010a84:	4620      	mov	r0, r4
 8010a86:	2107      	movs	r1, #7
 8010a88:	f005 f8a4 	bl	8015bd4 <dma_circulation_disable>
 8010a8c:	2205      	movs	r2, #5
 8010a8e:	4620      	mov	r0, r4
 8010a90:	2107      	movs	r1, #7
 8010a92:	f005 f8a7 	bl	8015be4 <dma_channel_subperipheral_select>
 8010a96:	2102      	movs	r1, #2
 8010a98:	4620      	mov	r0, r4
 8010a9a:	f005 f825 	bl	8015ae8 <dma_deinit>
 8010a9e:	a805      	add	r0, sp, #20
 8010aa0:	f005 f84d 	bl	8015b3e <dma_single_data_para_struct_init>
 8010aa4:	aa05      	add	r2, sp, #20
 8010aa6:	4620      	mov	r0, r4
 8010aa8:	2102      	movs	r1, #2
 8010aaa:	e9cd a607 	strd	sl, r6, [sp, #28]
 8010aae:	e9cd 5605 	strd	r5, r6, [sp, #20]
 8010ab2:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8010ab6:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010aba:	970d      	str	r7, [sp, #52]	; 0x34
 8010abc:	f005 f84b 	bl	8015b56 <dma_single_data_mode_init>
 8010ac0:	4620      	mov	r0, r4
 8010ac2:	2102      	movs	r1, #2
 8010ac4:	f005 f886 	bl	8015bd4 <dma_circulation_disable>
 8010ac8:	2205      	movs	r2, #5
 8010aca:	2102      	movs	r1, #2
 8010acc:	4620      	mov	r0, r4
 8010ace:	f005 f889 	bl	8015be4 <dma_channel_subperipheral_select>
 8010ad2:	b00e      	add	sp, #56	; 0x38
 8010ad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ad8:	40000400 	andmi	r0, r0, r0, lsl #8
 8010adc:	e000e100 	and	lr, r0, r0, lsl #2
 8010ae0:	40021018 	andmi	r1, r2, r8, lsl r0
 8010ae4:	2000126c 	andcs	r1, r0, ip, ror #4
 8010ae8:	40021028 	andmi	r1, r2, r8, lsr #32
 8010aec:	0801a18c 	stmdaeq	r1, {r2, r3, r7, r8, sp, pc}

08010af0 <WS28xxMulti::Setup(unsigned int)>:
 8010af0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010af4:	4680      	mov	r8, r0
 8010af6:	b092      	sub	sp, #72	; 0x48
 8010af8:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8010afc:	460c      	mov	r4, r1
 8010afe:	f005 fd3d 	bl	801657c <rcu_periph_clock_enable>
 8010b02:	4882      	ldr	r0, [pc, #520]	; (8010d0c <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010b04:	4d82      	ldr	r5, [pc, #520]	; (8010d10 <WS28xxMulti::Setup(unsigned int)+0x220>)
 8010b06:	2340      	movs	r3, #64	; 0x40
 8010b08:	2200      	movs	r2, #0
 8010b0a:	2102      	movs	r1, #2
 8010b0c:	f005 fcba 	bl	8016484 <gpio_mode_set>
 8010b10:	2340      	movs	r3, #64	; 0x40
 8010b12:	487e      	ldr	r0, [pc, #504]	; (8010d0c <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010b14:	2202      	movs	r2, #2
 8010b16:	2100      	movs	r1, #0
 8010b18:	f005 fcd4 	bl	80164c4 <gpio_output_options_set>
 8010b1c:	2240      	movs	r2, #64	; 0x40
 8010b1e:	2102      	movs	r1, #2
 8010b20:	487a      	ldr	r0, [pc, #488]	; (8010d0c <WS28xxMulti::Setup(unsigned int)+0x21c>)
 8010b22:	f005 fcea 	bl	80164fa <gpio_af_set>
 8010b26:	fbb5 f5f4 	udiv	r5, r5, r4
 8010b2a:	f241 0001 	movw	r0, #4097	; 0x1001
 8010b2e:	2d0c      	cmp	r5, #12
 8010b30:	bf38      	it	cc
 8010b32:	250c      	movcc	r5, #12
 8010b34:	f005 fd22 	bl	801657c <rcu_periph_clock_enable>
 8010b38:	4876      	ldr	r0, [pc, #472]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b3a:	2400      	movs	r4, #0
 8010b3c:	f005 fdda 	bl	80166f4 <timer_deinit>
 8010b40:	1e6b      	subs	r3, r5, #1
 8010b42:	4874      	ldr	r0, [pc, #464]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b44:	9307      	str	r3, [sp, #28]
 8010b46:	a905      	add	r1, sp, #20
 8010b48:	2602      	movs	r6, #2
 8010b4a:	2701      	movs	r7, #1
 8010b4c:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010b50:	f88d 4020 	strb.w	r4, [sp, #32]
 8010b54:	f005 fe74 	bl	8016840 <timer_init>
 8010b58:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010b5c:	486d      	ldr	r0, [pc, #436]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b5e:	9304      	str	r3, [sp, #16]
 8010b60:	aa02      	add	r2, sp, #8
 8010b62:	4621      	mov	r1, r4
 8010b64:	e9cd 7602 	strd	r7, r6, [sp, #8]
 8010b68:	f005 febc 	bl	80168e4 <timer_channel_output_config>
 8010b6c:	fa25 f207 	lsr.w	r2, r5, r7
 8010b70:	4868      	ldr	r0, [pc, #416]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b72:	3a01      	subs	r2, #1
 8010b74:	4621      	mov	r1, r4
 8010b76:	f005 ffc3 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010b7a:	4866      	ldr	r0, [pc, #408]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b7c:	2260      	movs	r2, #96	; 0x60
 8010b7e:	4621      	mov	r1, r4
 8010b80:	f005 ff98 	bl	8016ab4 <timer_channel_output_mode_config>
 8010b84:	4863      	ldr	r0, [pc, #396]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b86:	4622      	mov	r2, r4
 8010b88:	4621      	mov	r1, r4
 8010b8a:	f005 ffc7 	bl	8016b1c <timer_channel_output_shadow_config>
 8010b8e:	4861      	ldr	r0, [pc, #388]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b90:	2210      	movs	r2, #16
 8010b92:	4631      	mov	r1, r6
 8010b94:	f005 ff8e 	bl	8016ab4 <timer_channel_output_mode_config>
 8010b98:	485e      	ldr	r0, [pc, #376]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010b9a:	2210      	movs	r2, #16
 8010b9c:	2103      	movs	r1, #3
 8010b9e:	f005 ff89 	bl	8016ab4 <timer_channel_output_mode_config>
 8010ba2:	485c      	ldr	r0, [pc, #368]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010ba4:	463a      	mov	r2, r7
 8010ba6:	4631      	mov	r1, r6
 8010ba8:	f005 ffaa 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010bac:	fa25 f206 	lsr.w	r2, r5, r6
 8010bb0:	3a01      	subs	r2, #1
 8010bb2:	4858      	ldr	r0, [pc, #352]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010bb4:	2103      	movs	r1, #3
 8010bb6:	f005 ffa3 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010bba:	4856      	ldr	r0, [pc, #344]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010bbc:	4639      	mov	r1, r7
 8010bbe:	f005 ffeb 	bl	8016b98 <timer_master_slave_mode_config>
 8010bc2:	2130      	movs	r1, #48	; 0x30
 8010bc4:	4853      	ldr	r0, [pc, #332]	; (8010d14 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8010bc6:	f005 ffd7 	bl	8016b78 <timer_master_output_trigger_source_select>
 8010bca:	f241 0002 	movw	r0, #4098	; 0x1002
 8010bce:	f005 fcd5 	bl	801657c <rcu_periph_clock_enable>
 8010bd2:	4851      	ldr	r0, [pc, #324]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010bd4:	f005 fd8e 	bl	80166f4 <timer_deinit>
 8010bd8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010bdc:	484e      	ldr	r0, [pc, #312]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010bde:	9307      	str	r3, [sp, #28]
 8010be0:	a905      	add	r1, sp, #20
 8010be2:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010be6:	f005 fe2b 	bl	8016840 <timer_init>
 8010bea:	484b      	ldr	r0, [pc, #300]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010bec:	4639      	mov	r1, r7
 8010bee:	f005 ffd3 	bl	8016b98 <timer_master_slave_mode_config>
 8010bf2:	4849      	ldr	r0, [pc, #292]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010bf4:	2107      	movs	r1, #7
 8010bf6:	f005 ffc7 	bl	8016b88 <timer_slave_mode_select>
 8010bfa:	4847      	ldr	r0, [pc, #284]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010bfc:	2120      	movs	r1, #32
 8010bfe:	f005 ffb3 	bl	8016b68 <timer_input_trigger_source_select>
 8010c02:	4845      	ldr	r0, [pc, #276]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010c04:	2210      	movs	r2, #16
 8010c06:	4621      	mov	r1, r4
 8010c08:	f005 ff54 	bl	8016ab4 <timer_channel_output_mode_config>
 8010c0c:	f8d8 201c 	ldr.w	r2, [r8, #28]
 8010c10:	4841      	ldr	r0, [pc, #260]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010c12:	4621      	mov	r1, r4
 8010c14:	f005 ff74 	bl	8016b00 <timer_channel_output_pulse_value_config>
 8010c18:	4631      	mov	r1, r6
 8010c1a:	483f      	ldr	r0, [pc, #252]	; (8010d18 <WS28xxMulti::Setup(unsigned int)+0x228>)
 8010c1c:	f005 fe53 	bl	80168c6 <timer_interrupt_enable>
 8010c20:	4b3e      	ldr	r3, [pc, #248]	; (8010d1c <WS28xxMulti::Setup(unsigned int)+0x22c>)
 8010c22:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8010c26:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 8010c2a:	f640 4015 	movw	r0, #3093	; 0xc15
 8010c2e:	601a      	str	r2, [r3, #0]
 8010c30:	f005 fca4 	bl	801657c <rcu_periph_clock_enable>
 8010c34:	2107      	movs	r1, #7
 8010c36:	483a      	ldr	r0, [pc, #232]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c38:	f004 ff56 	bl	8015ae8 <dma_deinit>
 8010c3c:	a809      	add	r0, sp, #36	; 0x24
 8010c3e:	f004 ff7e 	bl	8015b3e <dma_single_data_para_struct_init>
 8010c42:	4b38      	ldr	r3, [pc, #224]	; (8010d24 <WS28xxMulti::Setup(unsigned int)+0x234>)
 8010c44:	4836      	ldr	r0, [pc, #216]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c46:	e9cd 370b 	strd	r3, r7, [sp, #44]	; 0x2c
 8010c4a:	4b37      	ldr	r3, [pc, #220]	; (8010d28 <WS28xxMulti::Setup(unsigned int)+0x238>)
 8010c4c:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 8010c50:	aa09      	add	r2, sp, #36	; 0x24
 8010c52:	f04f 0a40 	mov.w	sl, #64	; 0x40
 8010c56:	f44f 6900 	mov.w	r9, #2048	; 0x800
 8010c5a:	2107      	movs	r1, #7
 8010c5c:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 8010c60:	9511      	str	r5, [sp, #68]	; 0x44
 8010c62:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8010c66:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010c6a:	f004 ff74 	bl	8015b56 <dma_single_data_mode_init>
 8010c6e:	482c      	ldr	r0, [pc, #176]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c70:	2107      	movs	r1, #7
 8010c72:	f004 ffaf 	bl	8015bd4 <dma_circulation_disable>
 8010c76:	2205      	movs	r2, #5
 8010c78:	4829      	ldr	r0, [pc, #164]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c7a:	2107      	movs	r1, #7
 8010c7c:	f004 ffb2 	bl	8015be4 <dma_channel_subperipheral_select>
 8010c80:	4631      	mov	r1, r6
 8010c82:	4827      	ldr	r0, [pc, #156]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c84:	f004 ff30 	bl	8015ae8 <dma_deinit>
 8010c88:	a809      	add	r0, sp, #36	; 0x24
 8010c8a:	f004 ff58 	bl	8015b3e <dma_single_data_para_struct_init>
 8010c8e:	4b27      	ldr	r3, [pc, #156]	; (8010d2c <WS28xxMulti::Setup(unsigned int)+0x23c>)
 8010c90:	4823      	ldr	r0, [pc, #140]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010c92:	9511      	str	r5, [sp, #68]	; 0x44
 8010c94:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
 8010c98:	4b25      	ldr	r3, [pc, #148]	; (8010d30 <WS28xxMulti::Setup(unsigned int)+0x240>)
 8010c9a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8010c9e:	aa09      	add	r2, sp, #36	; 0x24
 8010ca0:	4631      	mov	r1, r6
 8010ca2:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 8010ca6:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010caa:	f004 ff54 	bl	8015b56 <dma_single_data_mode_init>
 8010cae:	481c      	ldr	r0, [pc, #112]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010cb0:	4631      	mov	r1, r6
 8010cb2:	f004 ff8f 	bl	8015bd4 <dma_circulation_disable>
 8010cb6:	481a      	ldr	r0, [pc, #104]	; (8010d20 <WS28xxMulti::Setup(unsigned int)+0x230>)
 8010cb8:	2205      	movs	r2, #5
 8010cba:	4631      	mov	r1, r6
 8010cbc:	f004 ff92 	bl	8015be4 <dma_channel_subperipheral_select>
 8010cc0:	f8d8 5000 	ldr.w	r5, [r8]
 8010cc4:	3d0b      	subs	r5, #11
 8010cc6:	42b5      	cmp	r5, r6
 8010cc8:	d81c      	bhi.n	8010d04 <WS28xxMulti::Setup(unsigned int)+0x214>
 8010cca:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8010cce:	4627      	mov	r7, r4
 8010cd0:	3601      	adds	r6, #1
 8010cd2:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8010cd6:	2300      	movs	r3, #0
 8010cd8:	461a      	mov	r2, r3
 8010cda:	4619      	mov	r1, r3
 8010cdc:	4620      	mov	r0, r4
 8010cde:	e9cd 7700 	strd	r7, r7, [sp]
 8010ce2:	f7ff fd8b 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010ce6:	2d02      	cmp	r5, #2
 8010ce8:	bf1b      	ittet	ne
 8010cea:	23ff      	movne	r3, #255	; 0xff
 8010cec:	e9cd 8800 	strdne	r8, r8, [sp]
 8010cf0:	e9cd 7700 	strdeq	r7, r7, [sp]
 8010cf4:	461a      	movne	r2, r3
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	4631      	mov	r1, r6
 8010cfa:	3401      	adds	r4, #1
 8010cfc:	f7ff fd7e 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010d00:	2c10      	cmp	r4, #16
 8010d02:	d1e8      	bne.n	8010cd6 <WS28xxMulti::Setup(unsigned int)+0x1e6>
 8010d04:	b012      	add	sp, #72	; 0x48
 8010d06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010d0a:	bf00      	nop
 8010d0c:	40020000 	andmi	r0, r2, r0
 8010d10:	0bebc200 	bleq	7b01518 <__stack_size+0x7afd518>
 8010d14:	40000400 	andmi	r0, r0, r0, lsl #8
 8010d18:	40000800 	andmi	r0, r0, r0, lsl #16
 8010d1c:	e000e100 	and	lr, r0, r0, lsl #2
 8010d20:	40026000 	andmi	r6, r2, r0
 8010d24:	0801a18c 	stmdaeq	r1, {r2, r3, r7, r8, sp, pc}
 8010d28:	40021028 	andmi	r1, r2, r8, lsr #32
 8010d2c:	2000126c 	andcs	r1, r0, ip, ror #4
 8010d30:	40021018 	andmi	r1, r2, r8, lsl r0

08010d34 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 8010d34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010d36:	460f      	mov	r7, r1
 8010d38:	4604      	mov	r4, r0
 8010d3a:	460d      	mov	r5, r1
 8010d3c:	4606      	mov	r6, r0
 8010d3e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010d40:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8010d42:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8010d46:	2300      	movs	r3, #0
 8010d48:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8010d4c:	61e3      	str	r3, [r4, #28]
 8010d4e:	4b26      	ldr	r3, [pc, #152]	; (8010de8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb4>)
 8010d50:	a901      	add	r1, sp, #4
 8010d52:	4628      	mov	r0, r5
 8010d54:	601c      	str	r4, [r3, #0]
 8010d56:	f7ff f8af 	bl	800feb8 <PixelConfiguration::Validate(unsigned int&)>
 8010d5a:	6826      	ldr	r6, [r4, #0]
 8010d5c:	3e0b      	subs	r6, #11
 8010d5e:	2e02      	cmp	r6, #2
 8010d60:	d80a      	bhi.n	8010d78 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 8010d62:	686b      	ldr	r3, [r5, #4]
 8010d64:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8010d68:	d906      	bls.n	8010d78 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 8010d6a:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 8010d6e:	606b      	str	r3, [r5, #4]
 8010d70:	a901      	add	r1, sp, #4
 8010d72:	4628      	mov	r0, r5
 8010d74:	f7ff f8a0 	bl	800feb8 <PixelConfiguration::Validate(unsigned int&)>
 8010d78:	6863      	ldr	r3, [r4, #4]
 8010d7a:	9a01      	ldr	r2, [sp, #4]
 8010d7c:	2e02      	cmp	r6, #2
 8010d7e:	fb03 f202 	mul.w	r2, r3, r2
 8010d82:	bf9b      	ittet	ls
 8010d84:	3308      	addls	r3, #8
 8010d86:	189b      	addls	r3, r3, r2
 8010d88:	61e2      	strhi	r2, [r4, #28]
 8010d8a:	61e3      	strls	r3, [r4, #28]
 8010d8c:	69e3      	ldr	r3, [r4, #28]
 8010d8e:	4e17      	ldr	r6, [pc, #92]	; (8010dec <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb8>)
 8010d90:	00db      	lsls	r3, r3, #3
 8010d92:	61e3      	str	r3, [r4, #28]
 8010d94:	f640 4004 	movw	r0, #3076	; 0xc04
 8010d98:	f005 fbf0 	bl	801657c <rcu_periph_clock_enable>
 8010d9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010da0:	2100      	movs	r1, #0
 8010da2:	4630      	mov	r0, r6
 8010da4:	f005 fba9 	bl	80164fa <gpio_af_set>
 8010da8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010dac:	2202      	movs	r2, #2
 8010dae:	2101      	movs	r1, #1
 8010db0:	4630      	mov	r0, r6
 8010db2:	f005 fb67 	bl	8016484 <gpio_mode_set>
 8010db6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010dba:	2202      	movs	r2, #2
 8010dbc:	2100      	movs	r1, #0
 8010dbe:	4630      	mov	r0, r6
 8010dc0:	f005 fb80 	bl	80164c4 <gpio_output_options_set>
 8010dc4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010dc8:	62b3      	str	r3, [r6, #40]	; 0x28
 8010dca:	7d6b      	ldrb	r3, [r5, #21]
 8010dcc:	b13b      	cbz	r3, 8010dde <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xaa>
 8010dce:	7c6a      	ldrb	r2, [r5, #17]
 8010dd0:	7c29      	ldrb	r1, [r5, #16]
 8010dd2:	4620      	mov	r0, r4
 8010dd4:	f7ff fd92 	bl	80108fc <WS28xxMulti::Setup(unsigned char, unsigned char)>
 8010dd8:	4620      	mov	r0, r4
 8010dda:	b003      	add	sp, #12
 8010ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dde:	68e9      	ldr	r1, [r5, #12]
 8010de0:	4620      	mov	r0, r4
 8010de2:	f7ff fe85 	bl	8010af0 <WS28xxMulti::Setup(unsigned int)>
 8010de6:	e7f7      	b.n	8010dd8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa4>
 8010de8:	20001268 	andcs	r1, r0, r8, ror #4
 8010dec:	40021000 	andmi	r1, r2, r0

08010df0 <WS28xxMulti::Update()>:
 8010df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010df2:	4b4c      	ldr	r3, [pc, #304]	; (8010f24 <WS28xxMulti::Update()+0x134>)
 8010df4:	4e4c      	ldr	r6, [pc, #304]	; (8010f28 <WS28xxMulti::Update()+0x138>)
 8010df6:	4c4d      	ldr	r4, [pc, #308]	; (8010f2c <WS28xxMulti::Update()+0x13c>)
 8010df8:	4f4d      	ldr	r7, [pc, #308]	; (8010f30 <WS28xxMulti::Update()+0x140>)
 8010dfa:	2201      	movs	r2, #1
 8010dfc:	701a      	strb	r2, [r3, #0]
 8010dfe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010e02:	2100      	movs	r1, #0
 8010e04:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8010e08:	f022 0201 	bic.w	r2, r2, #1
 8010e0c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8010e10:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 8010e14:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8010e18:	f022 0201 	bic.w	r2, r2, #1
 8010e1c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 8010e20:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 8010e24:	7d43      	ldrb	r3, [r0, #21]
 8010e26:	4605      	mov	r5, r0
 8010e28:	2b00      	cmp	r3, #0
 8010e2a:	d053      	beq.n	8010ed4 <WS28xxMulti::Update()+0xe4>
 8010e2c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010e2e:	f023 0301 	bic.w	r3, r3, #1
 8010e32:	6723      	str	r3, [r4, #112]	; 0x70
 8010e34:	2220      	movs	r2, #32
 8010e36:	2104      	movs	r1, #4
 8010e38:	4620      	mov	r0, r4
 8010e3a:	f004 fef7 	bl	8015c2c <dma_interrupt_flag_clear>
 8010e3e:	67e6      	str	r6, [r4, #124]	; 0x7c
 8010e40:	8bab      	ldrh	r3, [r5, #28]
 8010e42:	6763      	str	r3, [r4, #116]	; 0x74
 8010e44:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010e46:	f043 0301 	orr.w	r3, r3, #1
 8010e4a:	6723      	str	r3, [r4, #112]	; 0x70
 8010e4c:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010e50:	f023 0301 	bic.w	r3, r3, #1
 8010e54:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8010e58:	2220      	movs	r2, #32
 8010e5a:	2107      	movs	r1, #7
 8010e5c:	4620      	mov	r0, r4
 8010e5e:	f004 fee5 	bl	8015c2c <dma_interrupt_flag_clear>
 8010e62:	f8c4 70c4 	str.w	r7, [r4, #196]	; 0xc4
 8010e66:	8bab      	ldrh	r3, [r5, #28]
 8010e68:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010e6c:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010e70:	f043 0301 	orr.w	r3, r3, #1
 8010e74:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8010e78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8010e7a:	f023 0301 	bic.w	r3, r3, #1
 8010e7e:	6423      	str	r3, [r4, #64]	; 0x40
 8010e80:	2102      	movs	r1, #2
 8010e82:	4620      	mov	r0, r4
 8010e84:	2220      	movs	r2, #32
 8010e86:	f004 fed1 	bl	8015c2c <dma_interrupt_flag_clear>
 8010e8a:	64e6      	str	r6, [r4, #76]	; 0x4c
 8010e8c:	8bab      	ldrh	r3, [r5, #28]
 8010e8e:	6463      	str	r3, [r4, #68]	; 0x44
 8010e90:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8010e92:	4828      	ldr	r0, [pc, #160]	; (8010f34 <WS28xxMulti::Update()+0x144>)
 8010e94:	f043 0301 	orr.w	r3, r3, #1
 8010e98:	6423      	str	r3, [r4, #64]	; 0x40
 8010e9a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8010e9e:	f005 fd1c 	bl	80168da <timer_dma_enable>
 8010ea2:	4824      	ldr	r0, [pc, #144]	; (8010f34 <WS28xxMulti::Update()+0x144>)
 8010ea4:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8010ea8:	f005 fd17 	bl	80168da <timer_dma_enable>
 8010eac:	4821      	ldr	r0, [pc, #132]	; (8010f34 <WS28xxMulti::Update()+0x144>)
 8010eae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8010eb2:	f005 fd12 	bl	80168da <timer_dma_enable>
 8010eb6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010eba:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8010ebe:	f042 0201 	orr.w	r2, r2, #1
 8010ec2:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8010ec6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8010eca:	f042 0201 	orr.w	r2, r2, #1
 8010ece:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 8010ed2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010ed4:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010ed8:	f023 0301 	bic.w	r3, r3, #1
 8010edc:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8010ee0:	2220      	movs	r2, #32
 8010ee2:	2107      	movs	r1, #7
 8010ee4:	4620      	mov	r0, r4
 8010ee6:	f004 fea1 	bl	8015c2c <dma_interrupt_flag_clear>
 8010eea:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8010eee:	8bab      	ldrh	r3, [r5, #28]
 8010ef0:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010ef4:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8010ef8:	f043 0301 	orr.w	r3, r3, #1
 8010efc:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8010f00:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8010f02:	f023 0301 	bic.w	r3, r3, #1
 8010f06:	6423      	str	r3, [r4, #64]	; 0x40
 8010f08:	2220      	movs	r2, #32
 8010f0a:	2102      	movs	r1, #2
 8010f0c:	4620      	mov	r0, r4
 8010f0e:	f004 fe8d 	bl	8015c2c <dma_interrupt_flag_clear>
 8010f12:	64e7      	str	r7, [r4, #76]	; 0x4c
 8010f14:	8bab      	ldrh	r3, [r5, #28]
 8010f16:	6463      	str	r3, [r4, #68]	; 0x44
 8010f18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8010f1a:	f043 0301 	orr.w	r3, r3, #1
 8010f1e:	6423      	str	r3, [r4, #64]	; 0x40
 8010f20:	e7bf      	b.n	8010ea2 <WS28xxMulti::Update()+0xb2>
 8010f22:	bf00      	nop
 8010f24:	20001264 	andcs	r1, r0, r4, ror #4
 8010f28:	0801a18c 	stmdaeq	r1, {r2, r3, r7, r8, sp, pc}
 8010f2c:	40026000 	andmi	r6, r2, r0
 8010f30:	2000126c 	andcs	r1, r0, ip, ror #4
 8010f34:	40000400 	andmi	r0, r0, r0, lsl #8

08010f38 <WS28xxMulti::Blackout()>:
 8010f38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f3c:	4f2d      	ldr	r7, [pc, #180]	; (8010ff4 <WS28xxMulti::Blackout()+0xbc>)
 8010f3e:	4605      	mov	r5, r0
 8010f40:	f3bf 8f5f 	dmb	sy
 8010f44:	783a      	ldrb	r2, [r7, #0]
 8010f46:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8010f4a:	2a00      	cmp	r2, #0
 8010f4c:	d1f8      	bne.n	8010f40 <WS28xxMulti::Blackout()+0x8>
 8010f4e:	7d6c      	ldrb	r4, [r5, #21]
 8010f50:	b19c      	cbz	r4, 8010f7a <WS28xxMulti::Blackout()+0x42>
 8010f52:	4a29      	ldr	r2, [pc, #164]	; (8010ff8 <WS28xxMulti::Blackout()+0xc0>)
 8010f54:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010f58:	3301      	adds	r3, #1
 8010f5a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8010f5e:	f842 1b04 	str.w	r1, [r2], #4
 8010f62:	d1f9      	bne.n	8010f58 <WS28xxMulti::Blackout()+0x20>
 8010f64:	4628      	mov	r0, r5
 8010f66:	f7ff ff43 	bl	8010df0 <WS28xxMulti::Update()>
 8010f6a:	f3bf 8f5f 	dmb	sy
 8010f6e:	783b      	ldrb	r3, [r7, #0]
 8010f70:	2b00      	cmp	r3, #0
 8010f72:	d1fa      	bne.n	8010f6a <WS28xxMulti::Blackout()+0x32>
 8010f74:	b003      	add	sp, #12
 8010f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f7a:	682b      	ldr	r3, [r5, #0]
 8010f7c:	f1a3 080b 	sub.w	r8, r3, #11
 8010f80:	f1b8 0f02 	cmp.w	r8, #2
 8010f84:	d908      	bls.n	8010f98 <WS28xxMulti::Blackout()+0x60>
 8010f86:	4b1c      	ldr	r3, [pc, #112]	; (8010ff8 <WS28xxMulti::Blackout()+0xc0>)
 8010f88:	4622      	mov	r2, r4
 8010f8a:	3401      	adds	r4, #1
 8010f8c:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 8010f90:	f843 2b04 	str.w	r2, [r3], #4
 8010f94:	d1f9      	bne.n	8010f8a <WS28xxMulti::Blackout()+0x52>
 8010f96:	e7e5      	b.n	8010f64 <WS28xxMulti::Blackout()+0x2c>
 8010f98:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8010f9c:	4626      	mov	r6, r4
 8010f9e:	f10a 0b01 	add.w	fp, sl, #1
 8010fa2:	2300      	movs	r3, #0
 8010fa4:	e9cd 6600 	strd	r6, r6, [sp]
 8010fa8:	461a      	mov	r2, r3
 8010faa:	4619      	mov	r1, r3
 8010fac:	4620      	mov	r0, r4
 8010fae:	f7ff fc25 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010fb2:	f04f 0901 	mov.w	r9, #1
 8010fb6:	45ca      	cmp	sl, r9
 8010fb8:	d211      	bcs.n	8010fde <WS28xxMulti::Blackout()+0xa6>
 8010fba:	f1b8 0f02 	cmp.w	r8, #2
 8010fbe:	bf15      	itete	ne
 8010fc0:	23ff      	movne	r3, #255	; 0xff
 8010fc2:	2300      	moveq	r3, #0
 8010fc4:	e9cd 3300 	strdne	r3, r3, [sp]
 8010fc8:	e9cd 6600 	strdeq	r6, r6, [sp]
 8010fcc:	4620      	mov	r0, r4
 8010fce:	461a      	mov	r2, r3
 8010fd0:	4659      	mov	r1, fp
 8010fd2:	3401      	adds	r4, #1
 8010fd4:	f7ff fc12 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010fd8:	2c10      	cmp	r4, #16
 8010fda:	d1e2      	bne.n	8010fa2 <WS28xxMulti::Blackout()+0x6a>
 8010fdc:	e7c2      	b.n	8010f64 <WS28xxMulti::Blackout()+0x2c>
 8010fde:	4649      	mov	r1, r9
 8010fe0:	e9cd 6600 	strd	r6, r6, [sp]
 8010fe4:	2300      	movs	r3, #0
 8010fe6:	22e0      	movs	r2, #224	; 0xe0
 8010fe8:	4620      	mov	r0, r4
 8010fea:	f7ff fc07 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8010fee:	f109 0901 	add.w	r9, r9, #1
 8010ff2:	e7e0      	b.n	8010fb6 <WS28xxMulti::Blackout()+0x7e>
 8010ff4:	20001264 	andcs	r1, r0, r4, ror #4
 8010ff8:	2000126c 	andcs	r1, r0, ip, ror #4

08010ffc <WS28xxMulti::FullOn()>:
 8010ffc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011000:	4f2c      	ldr	r7, [pc, #176]	; (80110b4 <WS28xxMulti::FullOn()+0xb8>)
 8011002:	4605      	mov	r5, r0
 8011004:	f3bf 8f5f 	dmb	sy
 8011008:	783a      	ldrb	r2, [r7, #0]
 801100a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 801100e:	2a00      	cmp	r2, #0
 8011010:	d1f8      	bne.n	8011004 <WS28xxMulti::FullOn()+0x8>
 8011012:	7d6c      	ldrb	r4, [r5, #21]
 8011014:	b194      	cbz	r4, 801103c <WS28xxMulti::FullOn()+0x40>
 8011016:	4a28      	ldr	r2, [pc, #160]	; (80110b8 <WS28xxMulti::FullOn()+0xbc>)
 8011018:	4619      	mov	r1, r3
 801101a:	3301      	adds	r3, #1
 801101c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8011020:	f842 1b04 	str.w	r1, [r2], #4
 8011024:	d1f9      	bne.n	801101a <WS28xxMulti::FullOn()+0x1e>
 8011026:	4628      	mov	r0, r5
 8011028:	f7ff fee2 	bl	8010df0 <WS28xxMulti::Update()>
 801102c:	f3bf 8f5f 	dmb	sy
 8011030:	783b      	ldrb	r3, [r7, #0]
 8011032:	2b00      	cmp	r3, #0
 8011034:	d1fa      	bne.n	801102c <WS28xxMulti::FullOn()+0x30>
 8011036:	b003      	add	sp, #12
 8011038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801103c:	682e      	ldr	r6, [r5, #0]
 801103e:	3e0b      	subs	r6, #11
 8011040:	2e02      	cmp	r6, #2
 8011042:	d908      	bls.n	8011056 <WS28xxMulti::FullOn()+0x5a>
 8011044:	4b1c      	ldr	r3, [pc, #112]	; (80110b8 <WS28xxMulti::FullOn()+0xbc>)
 8011046:	22ff      	movs	r2, #255	; 0xff
 8011048:	3401      	adds	r4, #1
 801104a:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 801104e:	f843 2b04 	str.w	r2, [r3], #4
 8011052:	d1f9      	bne.n	8011048 <WS28xxMulti::FullOn()+0x4c>
 8011054:	e7e7      	b.n	8011026 <WS28xxMulti::FullOn()+0x2a>
 8011056:	f8d5 a004 	ldr.w	sl, [r5, #4]
 801105a:	46a0      	mov	r8, r4
 801105c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8011060:	2300      	movs	r3, #0
 8011062:	e9cd 8800 	strd	r8, r8, [sp]
 8011066:	461a      	mov	r2, r3
 8011068:	4619      	mov	r1, r3
 801106a:	4620      	mov	r0, r4
 801106c:	f7ff fbc6 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011070:	f04f 0b01 	mov.w	fp, #1
 8011074:	45da      	cmp	sl, fp
 8011076:	d211      	bcs.n	801109c <WS28xxMulti::FullOn()+0xa0>
 8011078:	2e02      	cmp	r6, #2
 801107a:	bf15      	itete	ne
 801107c:	23ff      	movne	r3, #255	; 0xff
 801107e:	2300      	moveq	r3, #0
 8011080:	e9cd 9900 	strdne	r9, r9, [sp]
 8011084:	e9cd 8800 	strdeq	r8, r8, [sp]
 8011088:	4620      	mov	r0, r4
 801108a:	f10a 0101 	add.w	r1, sl, #1
 801108e:	461a      	mov	r2, r3
 8011090:	3401      	adds	r4, #1
 8011092:	f7ff fbb3 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011096:	2c10      	cmp	r4, #16
 8011098:	d1e2      	bne.n	8011060 <WS28xxMulti::FullOn()+0x64>
 801109a:	e7c4      	b.n	8011026 <WS28xxMulti::FullOn()+0x2a>
 801109c:	4659      	mov	r1, fp
 801109e:	e9cd 9900 	strd	r9, r9, [sp]
 80110a2:	23ff      	movs	r3, #255	; 0xff
 80110a4:	22e0      	movs	r2, #224	; 0xe0
 80110a6:	4620      	mov	r0, r4
 80110a8:	f7ff fba8 	bl	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80110ac:	f10b 0b01 	add.w	fp, fp, #1
 80110b0:	e7e0      	b.n	8011074 <WS28xxMulti::FullOn()+0x78>
 80110b2:	bf00      	nop
 80110b4:	20001264 	andcs	r1, r0, r4, ror #4
 80110b8:	2000126c 	andcs	r1, r0, ip, ror #4

080110bc <WS28xxMulti::IsUpdating()>:
 80110bc:	f3bf 8f5f 	dmb	sy
 80110c0:	4b01      	ldr	r3, [pc, #4]	; (80110c8 <WS28xxMulti::IsUpdating()+0xc>)
 80110c2:	7818      	ldrb	r0, [r3, #0]
 80110c4:	4770      	bx	lr
 80110c6:	bf00      	nop
 80110c8:	20001264 	andcs	r1, r0, r4, ror #4

080110cc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 80110cc:	b2c8      	uxtb	r0, r1
 80110ce:	491c      	ldr	r1, [pc, #112]	; (8011140 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 80110d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80110d4:	b570      	push	{r4, r5, r6, lr}
 80110d6:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 80110da:	4a1a      	ldr	r2, [pc, #104]	; (8011144 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 80110dc:	f89d e010 	ldrb.w	lr, [sp, #16]
 80110e0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80110e4:	440a      	add	r2, r1
 80110e6:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80110ea:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 80110ee:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 80110f2:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80110f6:	0092      	lsls	r2, r2, #2
 80110f8:	0080      	lsls	r0, r0, #2
 80110fa:	2180      	movs	r1, #128	; 0x80
 80110fc:	2400      	movs	r4, #0
 80110fe:	2501      	movs	r5, #1
 8011100:	420b      	tst	r3, r1
 8011102:	f5a2 6c80 	sub.w	ip, r2, #1024	; 0x400
 8011106:	bf16      	itet	ne
 8011108:	f5a2 6c80 	subne.w	ip, r2, #1024	; 0x400
 801110c:	f8cc 5000 	streq.w	r5, [ip]
 8011110:	f8cc 4000 	strne.w	r4, [ip]
 8011114:	ea1e 0f01 	tst.w	lr, r1
 8011118:	f5a2 7c00 	sub.w	ip, r2, #512	; 0x200
 801111c:	bf16      	itet	ne
 801111e:	f5a2 7c00 	subne.w	ip, r2, #512	; 0x200
 8011122:	f8cc 5000 	streq.w	r5, [ip]
 8011126:	f8cc 4000 	strne.w	r4, [ip]
 801112a:	420e      	tst	r6, r1
 801112c:	bf0c      	ite	eq
 801112e:	6015      	streq	r5, [r2, #0]
 8011130:	6014      	strne	r4, [r2, #0]
 8011132:	3240      	adds	r2, #64	; 0x40
 8011134:	4290      	cmp	r0, r2
 8011136:	ea4f 0151 	mov.w	r1, r1, lsr #1
 801113a:	d1e1      	bne.n	8011100 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 801113c:	bd70      	pop	{r4, r5, r6, pc}
 801113e:	bf00      	nop
 8011140:	2000126c 	andcs	r1, r0, ip, ror #4
 8011144:	e1100020 	tst	r0, r0, lsr #32

08011148 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8011148:	b2c8      	uxtb	r0, r1
 801114a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801114e:	4a19      	ldr	r2, [pc, #100]	; (80111b4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>)
 8011150:	b570      	push	{r4, r5, r6, lr}
 8011152:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8011156:	4918      	ldr	r1, [pc, #96]	; (80111b8 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 8011158:	f89d c010 	ldrb.w	ip, [sp, #16]
 801115c:	f89d e014 	ldrb.w	lr, [sp, #20]
 8011160:	4411      	add	r1, r2
 8011162:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8011166:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 801116a:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 801116e:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 8011172:	0089      	lsls	r1, r1, #2
 8011174:	0080      	lsls	r0, r0, #2
 8011176:	2280      	movs	r2, #128	; 0x80
 8011178:	2401      	movs	r4, #1
 801117a:	ea13 0502 	ands.w	r5, r3, r2
 801117e:	f5a1 6680 	sub.w	r6, r1, #1024	; 0x400
 8011182:	bf0a      	itet	eq
 8011184:	f5a1 6680 	subeq.w	r6, r1, #1024	; 0x400
 8011188:	6034      	strne	r4, [r6, #0]
 801118a:	6035      	streq	r5, [r6, #0]
 801118c:	ea1c 0502 	ands.w	r5, ip, r2
 8011190:	f5a1 7600 	sub.w	r6, r1, #512	; 0x200
 8011194:	bf0a      	itet	eq
 8011196:	f5a1 7600 	subeq.w	r6, r1, #512	; 0x200
 801119a:	6034      	strne	r4, [r6, #0]
 801119c:	6035      	streq	r5, [r6, #0]
 801119e:	ea1e 0502 	ands.w	r5, lr, r2
 80111a2:	bf14      	ite	ne
 80111a4:	600c      	strne	r4, [r1, #0]
 80111a6:	600d      	streq	r5, [r1, #0]
 80111a8:	3140      	adds	r1, #64	; 0x40
 80111aa:	4288      	cmp	r0, r1
 80111ac:	ea4f 0252 	mov.w	r2, r2, lsr #1
 80111b0:	d1e3      	bne.n	801117a <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x32>
 80111b2:	bd70      	pop	{r4, r5, r6, pc}
 80111b4:	2000126c 	andcs	r1, r0, ip, ror #4
 80111b8:	e1100020 	tst	r0, r0, lsr #32

080111bc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 80111bc:	b530      	push	{r4, r5, lr}
 80111be:	6984      	ldr	r4, [r0, #24]
 80111c0:	f89d 500c 	ldrb.w	r5, [sp, #12]
 80111c4:	468c      	mov	ip, r1
 80111c6:	4611      	mov	r1, r2
 80111c8:	5ce2      	ldrb	r2, [r4, r3]
 80111ca:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80111ce:	5d65      	ldrb	r5, [r4, r5]
 80111d0:	5ce3      	ldrb	r3, [r4, r3]
 80111d2:	7d44      	ldrb	r4, [r0, #21]
 80111d4:	bb1c      	cbnz	r4, 801121e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x62>
 80111d6:	6804      	ldr	r4, [r0, #0]
 80111d8:	b1cc      	cbz	r4, 801120e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x52>
 80111da:	3c0b      	subs	r4, #11
 80111dc:	2c01      	cmp	r4, #1
 80111de:	9204      	str	r2, [sp, #16]
 80111e0:	d94a      	bls.n	8011278 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 80111e2:	ea6f 0493 	mvn.w	r4, r3, lsr #2
 80111e6:	9503      	str	r5, [sp, #12]
 80111e8:	f004 0430 	and.w	r4, r4, #48	; 0x30
 80111ec:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80111f0:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 80111f4:	f005 050c 	and.w	r5, r5, #12
 80111f8:	ea44 1292 	orr.w	r2, r4, r2, lsr #6
 80111fc:	432a      	orrs	r2, r5
 80111fe:	3101      	adds	r1, #1
 8011200:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011204:	4660      	mov	r0, ip
 8011206:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 801120a:	f7ff baf7 	b.w	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801120e:	6884      	ldr	r4, [r0, #8]
 8011210:	2c05      	cmp	r4, #5
 8011212:	d854      	bhi.n	80112be <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x102>
 8011214:	e8df f004 	tbb	[pc, r4]
 8011218:	4c484440 	cfstrdmi	mvd4, [r8], {64}	; 0x40
 801121c:	68843850 	stmvs	r4, {r4, r6, fp, ip, sp}
 8011220:	2c05      	cmp	r4, #5
 8011222:	d826      	bhi.n	8011272 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 8011224:	e8df f004 	tbb	[pc, r4]
 8011228:	0b141821 	bleq	85172b4 <__exidx_end+0x4fc444>
 801122c:	e9cd2503 	stmib	sp, {r0, r1, r8, sl, sp}^
 8011230:	2503      	movs	r5, #3
 8011232:	460a      	mov	r2, r1
 8011234:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011238:	4661      	mov	r1, ip
 801123a:	f7ff bf47 	b.w	80110cc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801123e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8011242:	462b      	mov	r3, r5
 8011244:	460a      	mov	r2, r1
 8011246:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801124a:	4661      	mov	r1, ip
 801124c:	f7ff bf3e 	b.w	80110cc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011250:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011254:	462b      	mov	r3, r5
 8011256:	e7f5      	b.n	8011244 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x88>
 8011258:	e9cd 3503 	strd	r3, r5, [sp, #12]
 801125c:	4613      	mov	r3, r2
 801125e:	460a      	mov	r2, r1
 8011260:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011264:	4661      	mov	r1, ip
 8011266:	f7ff bf31 	b.w	80110cc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 801126a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801126e:	4613      	mov	r3, r2
 8011270:	e7f5      	b.n	801125e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa2>
 8011272:	e9cd 5203 	strd	r5, r2, [sp, #12]
 8011276:	e7dc      	b.n	8011232 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x76>
 8011278:	7c82      	ldrb	r2, [r0, #18]
 801127a:	9503      	str	r5, [sp, #12]
 801127c:	3101      	adds	r1, #1
 801127e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011282:	4660      	mov	r0, ip
 8011284:	f7ff baba 	b.w	80107fc <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011288:	e9cd 5203 	strd	r5, r2, [sp, #12]
 801128c:	460a      	mov	r2, r1
 801128e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011292:	4661      	mov	r1, ip
 8011294:	f7ff bf58 	b.w	8011148 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011298:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801129c:	4613      	mov	r3, r2
 801129e:	e7f5      	b.n	801128c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80112a0:	e9cd 3503 	strd	r3, r5, [sp, #12]
 80112a4:	4613      	mov	r3, r2
 80112a6:	e7f1      	b.n	801128c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80112a8:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80112ac:	462b      	mov	r3, r5
 80112ae:	e7ed      	b.n	801128c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80112b0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80112b4:	462b      	mov	r3, r5
 80112b6:	e7e9      	b.n	801128c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80112b8:	e9cd 2503 	strd	r2, r5, [sp, #12]
 80112bc:	e7e6      	b.n	801128c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 80112be:	bf00      	nop

080112c0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 80112c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112c2:	6980      	ldr	r0, [r0, #24]
 80112c4:	f89d 4014 	ldrb.w	r4, [sp, #20]
 80112c8:	f810 c003 	ldrb.w	ip, [r0, r3]
 80112cc:	4b1c      	ldr	r3, [pc, #112]	; (8011340 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>)
 80112ce:	f810 e004 	ldrb.w	lr, [r0, r4]
 80112d2:	eb03 1282 	add.w	r2, r3, r2, lsl #6
 80112d6:	4b1b      	ldr	r3, [pc, #108]	; (8011344 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x84>)
 80112d8:	b2c9      	uxtb	r1, r1
 80112da:	4413      	add	r3, r2
 80112dc:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80112e0:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 80112e4:	f501 7100 	add.w	r1, r1, #512	; 0x200
 80112e8:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80112ec:	f89d 1018 	ldrb.w	r1, [sp, #24]
 80112f0:	5c45      	ldrb	r5, [r0, r1]
 80112f2:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80112f6:	009b      	lsls	r3, r3, #2
 80112f8:	5c46      	ldrb	r6, [r0, r1]
 80112fa:	0092      	lsls	r2, r2, #2
 80112fc:	2180      	movs	r1, #128	; 0x80
 80112fe:	2000      	movs	r0, #0
 8011300:	2401      	movs	r4, #1
 8011302:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 8011306:	ea1e 0f01 	tst.w	lr, r1
 801130a:	bf0c      	ite	eq
 801130c:	603c      	streq	r4, [r7, #0]
 801130e:	6038      	strne	r0, [r7, #0]
 8011310:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 8011314:	ea1c 0f01 	tst.w	ip, r1
 8011318:	bf0c      	ite	eq
 801131a:	603c      	streq	r4, [r7, #0]
 801131c:	6038      	strne	r0, [r7, #0]
 801131e:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 8011322:	420d      	tst	r5, r1
 8011324:	bf0c      	ite	eq
 8011326:	603c      	streq	r4, [r7, #0]
 8011328:	6038      	strne	r0, [r7, #0]
 801132a:	420e      	tst	r6, r1
 801132c:	bf0c      	ite	eq
 801132e:	601c      	streq	r4, [r3, #0]
 8011330:	6018      	strne	r0, [r3, #0]
 8011332:	3340      	adds	r3, #64	; 0x40
 8011334:	429a      	cmp	r2, r3
 8011336:	ea4f 0151 	mov.w	r1, r1, lsr #1
 801133a:	d1e2      	bne.n	8011302 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x42>
 801133c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801133e:	bf00      	nop
 8011340:	2000126c 	andcs	r1, r0, ip, ror #4
 8011344:	e1100030 	tst	r0, r0, lsr r0

08011348 <net_set_ip>:
 8011348:	b510      	push	{r4, lr}
 801134a:	4c05      	ldr	r4, [pc, #20]	; (8011360 <net_set_ip+0x18>)
 801134c:	6020      	str	r0, [r4, #0]
 801134e:	4621      	mov	r1, r4
 8011350:	4804      	ldr	r0, [pc, #16]	; (8011364 <net_set_ip+0x1c>)
 8011352:	f7f6 ffe1 	bl	8008318 <arp_init>
 8011356:	4620      	mov	r0, r4
 8011358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801135c:	f002 b888 	b.w	8013470 <ip_set_ip>
 8011360:	2000926c 	andcs	r9, r0, ip, ror #4
 8011364:	20009278 	andcs	r9, r0, r8, ror r2

08011368 <net_set_dhcp>:
 8011368:	b570      	push	{r4, r5, r6, lr}
 801136a:	2400      	movs	r4, #0
 801136c:	7014      	strb	r4, [r2, #0]
 801136e:	4605      	mov	r5, r0
 8011370:	4616      	mov	r6, r2
 8011372:	4810      	ldr	r0, [pc, #64]	; (80113b4 <net_set_dhcp+0x4c>)
 8011374:	460a      	mov	r2, r1
 8011376:	4910      	ldr	r1, [pc, #64]	; (80113b8 <net_set_dhcp+0x50>)
 8011378:	f001 fe60 	bl	801303c <dhcp_client>
 801137c:	42a0      	cmp	r0, r4
 801137e:	da17      	bge.n	80113b0 <net_set_dhcp+0x48>
 8011380:	480d      	ldr	r0, [pc, #52]	; (80113b8 <net_set_dhcp+0x50>)
 8011382:	f000 f859 	bl	8011438 <rfc3927>
 8011386:	7030      	strb	r0, [r6, #0]
 8011388:	490b      	ldr	r1, [pc, #44]	; (80113b8 <net_set_dhcp+0x50>)
 801138a:	480a      	ldr	r0, [pc, #40]	; (80113b4 <net_set_dhcp+0x4c>)
 801138c:	f7f6 ffc4 	bl	8008318 <arp_init>
 8011390:	4809      	ldr	r0, [pc, #36]	; (80113b8 <net_set_dhcp+0x50>)
 8011392:	f002 f86d 	bl	8013470 <ip_set_ip>
 8011396:	4a08      	ldr	r2, [pc, #32]	; (80113b8 <net_set_dhcp+0x50>)
 8011398:	1e6b      	subs	r3, r5, #1
 801139a:	350b      	adds	r5, #11
 801139c:	f812 1b01 	ldrb.w	r1, [r2], #1
 80113a0:	f803 1f01 	strb.w	r1, [r3, #1]!
 80113a4:	42ab      	cmp	r3, r5
 80113a6:	d1f9      	bne.n	801139c <net_set_dhcp+0x34>
 80113a8:	4b04      	ldr	r3, [pc, #16]	; (80113bc <net_set_dhcp+0x54>)
 80113aa:	4620      	mov	r0, r4
 80113ac:	701c      	strb	r4, [r3, #0]
 80113ae:	bd70      	pop	{r4, r5, r6, pc}
 80113b0:	2401      	movs	r4, #1
 80113b2:	e7e9      	b.n	8011388 <net_set_dhcp+0x20>
 80113b4:	20009278 	andcs	r9, r0, r8, ror r2
 80113b8:	2000926c 	andcs	r9, r0, ip, ror #4
 80113bc:	2000927e 	andcs	r9, r0, lr, ror r2

080113c0 <net_dhcp_release>:
 80113c0:	b508      	push	{r3, lr}
 80113c2:	f001 ff43 	bl	801324c <dhcp_client_release>
 80113c6:	4b02      	ldr	r3, [pc, #8]	; (80113d0 <net_dhcp_release+0x10>)
 80113c8:	2200      	movs	r2, #0
 80113ca:	701a      	strb	r2, [r3, #0]
 80113cc:	bd08      	pop	{r3, pc}
 80113ce:	bf00      	nop
 80113d0:	2000927e 	andcs	r9, r0, lr, ror r2

080113d4 <net_set_zeroconf>:
 80113d4:	b538      	push	{r3, r4, r5, lr}
 80113d6:	4604      	mov	r4, r0
 80113d8:	480c      	ldr	r0, [pc, #48]	; (801140c <net_set_zeroconf+0x38>)
 80113da:	f000 f82d 	bl	8011438 <rfc3927>
 80113de:	4605      	mov	r5, r0
 80113e0:	b190      	cbz	r0, 8011408 <net_set_zeroconf+0x34>
 80113e2:	490a      	ldr	r1, [pc, #40]	; (801140c <net_set_zeroconf+0x38>)
 80113e4:	480a      	ldr	r0, [pc, #40]	; (8011410 <net_set_zeroconf+0x3c>)
 80113e6:	f7f6 ff97 	bl	8008318 <arp_init>
 80113ea:	4808      	ldr	r0, [pc, #32]	; (801140c <net_set_zeroconf+0x38>)
 80113ec:	f002 f840 	bl	8013470 <ip_set_ip>
 80113f0:	4a06      	ldr	r2, [pc, #24]	; (801140c <net_set_zeroconf+0x38>)
 80113f2:	1e63      	subs	r3, r4, #1
 80113f4:	340b      	adds	r4, #11
 80113f6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80113fa:	f803 1f01 	strb.w	r1, [r3, #1]!
 80113fe:	42a3      	cmp	r3, r4
 8011400:	d1f9      	bne.n	80113f6 <net_set_zeroconf+0x22>
 8011402:	4b04      	ldr	r3, [pc, #16]	; (8011414 <net_set_zeroconf+0x40>)
 8011404:	2200      	movs	r2, #0
 8011406:	701a      	strb	r2, [r3, #0]
 8011408:	4628      	mov	r0, r5
 801140a:	bd38      	pop	{r3, r4, r5, pc}
 801140c:	2000926c 	andcs	r9, r0, ip, ror #4
 8011410:	20009278 	andcs	r9, r0, r8, ror r2
 8011414:	2000927e 	andcs	r9, r0, lr, ror r2

08011418 <net_timers_run>:
 8011418:	4b05      	ldr	r3, [pc, #20]	; (8011430 <net_timers_run+0x18>)
 801141a:	4a06      	ldr	r2, [pc, #24]	; (8011434 <net_timers_run+0x1c>)
 801141c:	681b      	ldr	r3, [r3, #0]
 801141e:	6811      	ldr	r1, [r2, #0]
 8011420:	4299      	cmp	r1, r3
 8011422:	d803      	bhi.n	801142c <net_timers_run+0x14>
 8011424:	3364      	adds	r3, #100	; 0x64
 8011426:	6013      	str	r3, [r2, #0]
 8011428:	f001 bf9c 	b.w	8013364 <igmp_timer>
 801142c:	4770      	bx	lr
 801142e:	bf00      	nop
 8011430:	2000fd94 	mulcs	r0, r4, sp
 8011434:	20009284 	andcs	r9, r0, r4, lsl #5

08011438 <rfc3927>:
 8011438:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801143c:	4b19      	ldr	r3, [pc, #100]	; (80114a4 <rfc3927+0x6c>)
 801143e:	4f1a      	ldr	r7, [pc, #104]	; (80114a8 <rfc3927+0x70>)
 8011440:	791a      	ldrb	r2, [r3, #4]
 8011442:	78dc      	ldrb	r4, [r3, #3]
 8011444:	f8df 8064 	ldr.w	r8, [pc, #100]	; 80114ac <rfc3927+0x74>
 8011448:	f8d7 9000 	ldr.w	r9, [r7]
 801144c:	f8df b060 	ldr.w	fp, [pc, #96]	; 80114b0 <rfc3927+0x78>
 8011450:	f8df a060 	ldr.w	sl, [pc, #96]	; 80114b4 <rfc3927+0x7c>
 8011454:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 8011458:	4606      	mov	r6, r0
 801145a:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 801145e:	25ff      	movs	r5, #255	; 0xff
 8011460:	4659      	mov	r1, fp
 8011462:	4620      	mov	r0, r4
 8011464:	f001 fcde 	bl	8012e24 <arp_cache_lookup>
 8011468:	b190      	cbz	r0, 8011490 <rfc3927+0x58>
 801146a:	ba24      	rev	r4, r4
 801146c:	3401      	adds	r4, #1
 801146e:	3d01      	subs	r5, #1
 8011470:	ba24      	rev	r4, r4
 8011472:	b2ad      	uxth	r5, r5
 8011474:	4554      	cmp	r4, sl
 8011476:	bf08      	it	eq
 8011478:	4644      	moveq	r4, r8
 801147a:	b18d      	cbz	r5, 80114a0 <rfc3927+0x68>
 801147c:	683b      	ldr	r3, [r7, #0]
 801147e:	eba3 0309 	sub.w	r3, r3, r9
 8011482:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011486:	d3eb      	bcc.n	8011460 <rfc3927+0x28>
 8011488:	2400      	movs	r4, #0
 801148a:	4623      	mov	r3, r4
 801148c:	4620      	mov	r0, r4
 801148e:	e002      	b.n	8011496 <rfc3927+0x5e>
 8011490:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011494:	2001      	movs	r0, #1
 8011496:	e9c6 3401 	strd	r3, r4, [r6, #4]
 801149a:	6034      	str	r4, [r6, #0]
 801149c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114a0:	462c      	mov	r4, r5
 80114a2:	e7f2      	b.n	801148a <rfc3927+0x52>
 80114a4:	20009288 	andcs	r9, r0, r8, lsl #5
 80114a8:	2000fd94 	mulcs	r0, r4, sp
 80114ac:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 80114b0:	20009290 	mulcs	r0, r0, r2
 80114b4:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

080114b8 <_init_tcb>:
 80114b8:	b510      	push	{r4, lr}
 80114ba:	f100 0244 	add.w	r2, r0, #68	; 0x44
 80114be:	4603      	mov	r3, r0
 80114c0:	2400      	movs	r4, #0
 80114c2:	4293      	cmp	r3, r2
 80114c4:	d10d      	bne.n	80114e2 <_init_tcb+0x2a>
 80114c6:	4b08      	ldr	r3, [pc, #32]	; (80114e8 <_init_tcb+0x30>)
 80114c8:	681b      	ldr	r3, [r3, #0]
 80114ca:	6283      	str	r3, [r0, #40]	; 0x28
 80114cc:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80114d0:	f640 3268 	movw	r2, #2920	; 0xb68
 80114d4:	6243      	str	r3, [r0, #36]	; 0x24
 80114d6:	2301      	movs	r3, #1
 80114d8:	8001      	strh	r1, [r0, #0]
 80114da:	8702      	strh	r2, [r0, #56]	; 0x38
 80114dc:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 80114e0:	bd10      	pop	{r4, pc}
 80114e2:	f803 4b01 	strb.w	r4, [r3], #1
 80114e6:	e7ec      	b.n	80114c2 <_init_tcb+0xa>
 80114e8:	2000fd94 	mulcs	r0, r4, sp

080114ec <memcpy.isra.0>:
 80114ec:	3801      	subs	r0, #1
 80114ee:	440a      	add	r2, r1
 80114f0:	4291      	cmp	r1, r2
 80114f2:	d100      	bne.n	80114f6 <memcpy.isra.0+0xa>
 80114f4:	4770      	bx	lr
 80114f6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80114fa:	f800 3f01 	strb.w	r3, [r0, #1]!
 80114fe:	e7f7      	b.n	80114f0 <memcpy.isra.0+0x4>

08011500 <_bswap32>:
 8011500:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011502:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 8011506:	2204      	movs	r2, #4
 8011508:	4629      	mov	r1, r5
 801150a:	4604      	mov	r4, r0
 801150c:	eb0d 0002 	add.w	r0, sp, r2
 8011510:	f7ff ffec 	bl	80114ec <memcpy.isra.0>
 8011514:	9b01      	ldr	r3, [sp, #4]
 8011516:	2204      	movs	r2, #4
 8011518:	ba1b      	rev	r3, r3
 801151a:	eb0d 0102 	add.w	r1, sp, r2
 801151e:	4628      	mov	r0, r5
 8011520:	9301      	str	r3, [sp, #4]
 8011522:	3426      	adds	r4, #38	; 0x26
 8011524:	f7ff ffe2 	bl	80114ec <memcpy.isra.0>
 8011528:	2204      	movs	r2, #4
 801152a:	eb0d 0002 	add.w	r0, sp, r2
 801152e:	4621      	mov	r1, r4
 8011530:	f7ff ffdc 	bl	80114ec <memcpy.isra.0>
 8011534:	9b01      	ldr	r3, [sp, #4]
 8011536:	2204      	movs	r2, #4
 8011538:	ba1b      	rev	r3, r3
 801153a:	eb0d 0102 	add.w	r1, sp, r2
 801153e:	4620      	mov	r0, r4
 8011540:	9301      	str	r3, [sp, #4]
 8011542:	f7ff ffd3 	bl	80114ec <memcpy.isra.0>
 8011546:	b003      	add	sp, #12
 8011548:	bd30      	pop	{r4, r5, pc}
	...

0801154c <_tcp_send_package>:
 801154c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011550:	7a0b      	ldrb	r3, [r1, #8]
 8011552:	4c4c      	ldr	r4, [pc, #304]	; (8011684 <_tcp_send_package+0x138>)
 8011554:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8011556:	f013 0f02 	tst.w	r3, #2
 801155a:	4605      	mov	r5, r0
 801155c:	bf0c      	ite	eq
 801155e:	f04f 0805 	moveq.w	r8, #5
 8011562:	f04f 0806 	movne.w	r8, #6
 8011566:	460f      	mov	r7, r1
 8011568:	2206      	movs	r2, #6
 801156a:	f100 0108 	add.w	r1, r0, #8
 801156e:	4620      	mov	r0, r4
 8011570:	f7ff ffbc 	bl	80114ec <memcpy.isra.0>
 8011574:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 8011578:	f8b4 35ec 	ldrh.w	r3, [r4, #1516]	; 0x5ec
 801157c:	8263      	strh	r3, [r4, #18]
 801157e:	b2b6      	uxth	r6, r6
 8011580:	1c5a      	adds	r2, r3, #1
 8011582:	f105 0904 	add.w	r9, r5, #4
 8011586:	f106 0314 	add.w	r3, r6, #20
 801158a:	ba5b      	rev16	r3, r3
 801158c:	f8a4 25ec 	strh.w	r2, [r4, #1516]	; 0x5ec
 8011590:	4649      	mov	r1, r9
 8011592:	2204      	movs	r2, #4
 8011594:	f104 001e 	add.w	r0, r4, #30
 8011598:	8223      	strh	r3, [r4, #16]
 801159a:	f04f 0a00 	mov.w	sl, #0
 801159e:	f7ff ffa5 	bl	80114ec <memcpy.isra.0>
 80115a2:	2114      	movs	r1, #20
 80115a4:	f104 000e 	add.w	r0, r4, #14
 80115a8:	f8a4 a018 	strh.w	sl, [r4, #24]
 80115ac:	f001 ff69 	bl	8013482 <net_chksum>
 80115b0:	882b      	ldrh	r3, [r5, #0]
 80115b2:	8463      	strh	r3, [r4, #34]	; 0x22
 80115b4:	886b      	ldrh	r3, [r5, #2]
 80115b6:	84a3      	strh	r3, [r4, #36]	; 0x24
 80115b8:	683b      	ldr	r3, [r7, #0]
 80115ba:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 80115be:	ea4f 1808 	mov.w	r8, r8, lsl #4
 80115c2:	687b      	ldr	r3, [r7, #4]
 80115c4:	8320      	strh	r0, [r4, #24]
 80115c6:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 80115ca:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 80115ce:	7a3b      	ldrb	r3, [r7, #8]
 80115d0:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 80115d4:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 80115d6:	8622      	strh	r2, [r4, #48]	; 0x30
 80115d8:	079b      	lsls	r3, r3, #30
 80115da:	8baa      	ldrh	r2, [r5, #28]
 80115dc:	86a2      	strh	r2, [r4, #52]	; 0x34
 80115de:	bf41      	itttt	mi
 80115e0:	f240 4302 	movwmi	r3, #1026	; 0x402
 80115e4:	4622      	movmi	r2, r4
 80115e6:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 80115e8:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 80115ec:	bf48      	it	mi
 80115ee:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 80115f2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80115f4:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 80115f8:	bf58      	it	pl
 80115fa:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 80115fe:	2b00      	cmp	r3, #0
 8011600:	d13e      	bne.n	8011680 <_tcp_send_package+0x134>
 8011602:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8011604:	481f      	ldr	r0, [pc, #124]	; (8011684 <_tcp_send_package+0x138>)
 8011606:	ba5b      	rev16	r3, r3
 8011608:	8463      	strh	r3, [r4, #34]	; 0x22
 801160a:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 801160c:	ba5b      	rev16	r3, r3
 801160e:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011610:	f7ff ff76 	bl	8011500 <_bswap32>
 8011614:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011616:	491c      	ldr	r1, [pc, #112]	; (8011688 <_tcp_send_package+0x13c>)
 8011618:	ba5b      	rev16	r3, r3
 801161a:	8623      	strh	r3, [r4, #48]	; 0x30
 801161c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801161e:	a801      	add	r0, sp, #4
 8011620:	ba5b      	rev16	r3, r3
 8011622:	220c      	movs	r2, #12
 8011624:	86a3      	strh	r3, [r4, #52]	; 0x34
 8011626:	f7ff ff61 	bl	80114ec <memcpy.isra.0>
 801162a:	4918      	ldr	r1, [pc, #96]	; (801168c <_tcp_send_package+0x140>)
 801162c:	4816      	ldr	r0, [pc, #88]	; (8011688 <_tcp_send_package+0x13c>)
 801162e:	2204      	movs	r2, #4
 8011630:	f7ff ff5c 	bl	80114ec <memcpy.isra.0>
 8011634:	2204      	movs	r2, #4
 8011636:	4649      	mov	r1, r9
 8011638:	4815      	ldr	r0, [pc, #84]	; (8011690 <_tcp_send_package+0x144>)
 801163a:	f7ff ff57 	bl	80114ec <memcpy.isra.0>
 801163e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8011642:	83e3      	strh	r3, [r4, #30]
 8011644:	f106 010c 	add.w	r1, r6, #12
 8011648:	ba73      	rev16	r3, r6
 801164a:	480f      	ldr	r0, [pc, #60]	; (8011688 <_tcp_send_package+0x13c>)
 801164c:	8423      	strh	r3, [r4, #32]
 801164e:	f001 ff18 	bl	8013482 <net_chksum>
 8011652:	a901      	add	r1, sp, #4
 8011654:	4605      	mov	r5, r0
 8011656:	220c      	movs	r2, #12
 8011658:	480b      	ldr	r0, [pc, #44]	; (8011688 <_tcp_send_package+0x13c>)
 801165a:	f7ff ff47 	bl	80114ec <memcpy.isra.0>
 801165e:	4809      	ldr	r0, [pc, #36]	; (8011684 <_tcp_send_package+0x138>)
 8011660:	8665      	strh	r5, [r4, #50]	; 0x32
 8011662:	f106 0122 	add.w	r1, r6, #34	; 0x22
 8011666:	b004      	add	sp, #16
 8011668:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801166c:	f005 bbc2 	b.w	8016df4 <emac_eth_send>
 8011670:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8011672:	5cc9      	ldrb	r1, [r1, r3]
 8011674:	54d1      	strb	r1, [r2, r3]
 8011676:	3301      	adds	r3, #1
 8011678:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 801167a:	4299      	cmp	r1, r3
 801167c:	d8f8      	bhi.n	8011670 <_tcp_send_package+0x124>
 801167e:	e7c0      	b.n	8011602 <_tcp_send_package+0xb6>
 8011680:	2300      	movs	r3, #0
 8011682:	e7f9      	b.n	8011678 <_tcp_send_package+0x12c>
 8011684:	10000000 	andne	r0, r0, r0
 8011688:	10000016 	andne	r0, r0, r6, lsl r0
 801168c:	2000926c 	andcs	r9, r0, ip, ror #4
 8011690:	1000001a 	andne	r0, r0, sl, lsl r0

08011694 <_send_reset>:
 8011694:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011696:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 801169a:	075a      	lsls	r2, r3, #29
 801169c:	4604      	mov	r4, r0
 801169e:	460e      	mov	r6, r1
 80116a0:	d421      	bmi.n	80116e6 <_send_reset+0x52>
 80116a2:	2204      	movs	r2, #4
 80116a4:	f013 0310 	ands.w	r3, r3, #16
 80116a8:	f88d 200c 	strb.w	r2, [sp, #12]
 80116ac:	d01d      	beq.n	80116ea <_send_reset+0x56>
 80116ae:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 80116b2:	4668      	mov	r0, sp
 80116b4:	f7ff ff1a 	bl	80114ec <memcpy.isra.0>
 80116b8:	9b00      	ldr	r3, [sp, #0]
 80116ba:	9301      	str	r3, [sp, #4]
 80116bc:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80116c0:	f104 0126 	add.w	r1, r4, #38	; 0x26
 80116c4:	f3c3 0540 	ubfx	r5, r3, #1, #1
 80116c8:	4668      	mov	r0, sp
 80116ca:	07db      	lsls	r3, r3, #31
 80116cc:	f04f 0204 	mov.w	r2, #4
 80116d0:	bf48      	it	mi
 80116d2:	3501      	addmi	r5, #1
 80116d4:	f7ff ff0a 	bl	80114ec <memcpy.isra.0>
 80116d8:	9b00      	ldr	r3, [sp, #0]
 80116da:	a901      	add	r1, sp, #4
 80116dc:	441d      	add	r5, r3
 80116de:	4630      	mov	r0, r6
 80116e0:	9502      	str	r5, [sp, #8]
 80116e2:	f7ff ff33 	bl	801154c <_tcp_send_package>
 80116e6:	b004      	add	sp, #16
 80116e8:	bd70      	pop	{r4, r5, r6, pc}
 80116ea:	9301      	str	r3, [sp, #4]
 80116ec:	2314      	movs	r3, #20
 80116ee:	f88d 300c 	strb.w	r3, [sp, #12]
 80116f2:	e7e3      	b.n	80116bc <_send_reset+0x28>

080116f4 <tcp_begin>:
 80116f4:	b508      	push	{r3, lr}
 80116f6:	4b0b      	ldr	r3, [pc, #44]	; (8011724 <tcp_begin+0x30>)
 80116f8:	f8b3 25f0 	ldrh.w	r2, [r3, #1520]	; 0x5f0
 80116fc:	4282      	cmp	r2, r0
 80116fe:	4601      	mov	r1, r0
 8011700:	d102      	bne.n	8011708 <tcp_begin+0x14>
 8011702:	f893 0630 	ldrb.w	r0, [r3, #1584]	; 0x630
 8011706:	b130      	cbz	r0, 8011716 <tcp_begin+0x22>
 8011708:	b12a      	cbz	r2, 8011716 <tcp_begin+0x22>
 801170a:	4807      	ldr	r0, [pc, #28]	; (8011728 <tcp_begin+0x34>)
 801170c:	f003 fd50 	bl	80151b0 <console_error>
 8011710:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011714:	bd08      	pop	{r3, pc}
 8011716:	4805      	ldr	r0, [pc, #20]	; (801172c <tcp_begin+0x38>)
 8011718:	f8a3 15f0 	strh.w	r1, [r3, #1520]	; 0x5f0
 801171c:	f7ff fecc 	bl	80114b8 <_init_tcb>
 8011720:	2000      	movs	r0, #0
 8011722:	e7f7      	b.n	8011714 <tcp_begin+0x20>
 8011724:	10000000 	andne	r0, r0, r0
 8011728:	0801a18e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sp, pc}
 801172c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08011730 <tcp_write>:
 8011730:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8011734:	b530      	push	{r4, r5, lr}
 8011736:	429a      	cmp	r2, r3
 8011738:	bf28      	it	cs
 801173a:	461a      	movcs	r2, r3
 801173c:	4615      	mov	r5, r2
 801173e:	4b12      	ldr	r3, [pc, #72]	; (8011788 <tcp_write+0x58>)
 8011740:	2244      	movs	r2, #68	; 0x44
 8011742:	4350      	muls	r0, r2
 8011744:	181c      	adds	r4, r3, r0
 8011746:	b085      	sub	sp, #20
 8011748:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 801174c:	9201      	str	r2, [sp, #4]
 801174e:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 8011752:	f8d4 2624 	ldr.w	r2, [r4, #1572]	; 0x624
 8011756:	f8c4 161c 	str.w	r1, [r4, #1564]	; 0x61c
 801175a:	9202      	str	r2, [sp, #8]
 801175c:	4418      	add	r0, r3
 801175e:	2218      	movs	r2, #24
 8011760:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
 8011764:	a901      	add	r1, sp, #4
 8011766:	f88d 200c 	strb.w	r2, [sp, #12]
 801176a:	f7ff feef 	bl	801154c <_tcp_send_package>
 801176e:	2300      	movs	r3, #0
 8011770:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 8011774:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 8011778:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 801177c:	442b      	add	r3, r5
 801177e:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 8011782:	b005      	add	sp, #20
 8011784:	bd30      	pop	{r4, r5, pc}
 8011786:	bf00      	nop
 8011788:	10000000 	andne	r0, r0, r0

0801178c <tcp_read>:
 801178c:	4b23      	ldr	r3, [pc, #140]	; (801181c <tcp_read+0x90>)
 801178e:	2244      	movs	r2, #68	; 0x44
 8011790:	4342      	muls	r2, r0
 8011792:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011794:	189c      	adds	r4, r3, r2
 8011796:	b085      	sub	sp, #20
 8011798:	f894 5630 	ldrb.w	r5, [r4, #1584]	; 0x630
 801179c:	2d07      	cmp	r5, #7
 801179e:	d118      	bne.n	80117d2 <tcp_read+0x46>
 80117a0:	f8d4 1604 	ldr.w	r1, [r4, #1540]	; 0x604
 80117a4:	9101      	str	r1, [sp, #4]
 80117a6:	f8d4 1624 	ldr.w	r1, [r4, #1572]	; 0x624
 80117aa:	9102      	str	r1, [sp, #8]
 80117ac:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 80117b0:	2111      	movs	r1, #17
 80117b2:	f88d 100c 	strb.w	r1, [sp, #12]
 80117b6:	1898      	adds	r0, r3, r2
 80117b8:	a901      	add	r1, sp, #4
 80117ba:	f7ff fec7 	bl	801154c <_tcp_send_package>
 80117be:	2309      	movs	r3, #9
 80117c0:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80117c4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80117c8:	3301      	adds	r3, #1
 80117ca:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 80117ce:	2000      	movs	r0, #0
 80117d0:	e022      	b.n	8011818 <tcp_read+0x8c>
 80117d2:	f44f 6237 	mov.w	r2, #2928	; 0xb70
 80117d6:	4350      	muls	r0, r2
 80117d8:	181e      	adds	r6, r3, r0
 80117da:	f8b6 5636 	ldrh.w	r5, [r6, #1590]	; 0x636
 80117de:	f8b6 2634 	ldrh.w	r2, [r6, #1588]	; 0x634
 80117e2:	42aa      	cmp	r2, r5
 80117e4:	d0f3      	beq.n	80117ce <tcp_read+0x42>
 80117e6:	f240 52b6 	movw	r2, #1462	; 0x5b6
 80117ea:	f100 0c04 	add.w	ip, r0, #4
 80117ee:	436a      	muls	r2, r5
 80117f0:	f203 6734 	addw	r7, r3, #1588	; 0x634
 80117f4:	4494      	add	ip, r2
 80117f6:	4467      	add	r7, ip
 80117f8:	600f      	str	r7, [r1, #0]
 80117fa:	4402      	add	r2, r0
 80117fc:	441a      	add	r2, r3
 80117fe:	f8b4 3628 	ldrh.w	r3, [r4, #1576]	; 0x628
 8011802:	f8b2 0bec 	ldrh.w	r0, [r2, #3052]	; 0xbec
 8011806:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
 801180a:	f8a4 3628 	strh.w	r3, [r4, #1576]	; 0x628
 801180e:	1c6b      	adds	r3, r5, #1
 8011810:	f003 0301 	and.w	r3, r3, #1
 8011814:	f8a6 3636 	strh.w	r3, [r6, #1590]	; 0x636
 8011818:	b005      	add	sp, #20
 801181a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801181c:	10000000 	andne	r0, r0, r0

08011820 <memcpy.isra.0>:
 8011820:	3801      	subs	r0, #1
 8011822:	440a      	add	r2, r1
 8011824:	4291      	cmp	r1, r2
 8011826:	d100      	bne.n	801182a <memcpy.isra.0+0xa>
 8011828:	4770      	bx	lr
 801182a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801182e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011832:	e7f7      	b.n	8011824 <memcpy.isra.0+0x4>

08011834 <net_memcpy>:
 8011834:	ea40 0301 	orr.w	r3, r0, r1
 8011838:	079b      	lsls	r3, r3, #30
 801183a:	b570      	push	{r4, r5, r6, lr}
 801183c:	d108      	bne.n	8011850 <net_memcpy+0x1c>
 801183e:	f022 0303 	bic.w	r3, r2, #3
 8011842:	1f04      	subs	r4, r0, #4
 8011844:	18cd      	adds	r5, r1, r3
 8011846:	42a9      	cmp	r1, r5
 8011848:	d108      	bne.n	801185c <net_memcpy+0x28>
 801184a:	1ad2      	subs	r2, r2, r3
 801184c:	4403      	add	r3, r0
 801184e:	e000      	b.n	8011852 <net_memcpy+0x1e>
 8011850:	4603      	mov	r3, r0
 8011852:	3b01      	subs	r3, #1
 8011854:	440a      	add	r2, r1
 8011856:	4291      	cmp	r1, r2
 8011858:	d105      	bne.n	8011866 <net_memcpy+0x32>
 801185a:	bd70      	pop	{r4, r5, r6, pc}
 801185c:	f851 6b04 	ldr.w	r6, [r1], #4
 8011860:	f844 6f04 	str.w	r6, [r4, #4]!
 8011864:	e7ef      	b.n	8011846 <net_memcpy+0x12>
 8011866:	f811 4b01 	ldrb.w	r4, [r1], #1
 801186a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801186e:	e7f2      	b.n	8011856 <net_memcpy+0x22>

08011870 <udp_set_ip>:
 8011870:	b513      	push	{r0, r1, r4, lr}
 8011872:	2204      	movs	r2, #4
 8011874:	4604      	mov	r4, r0
 8011876:	6803      	ldr	r3, [r0, #0]
 8011878:	4809      	ldr	r0, [pc, #36]	; (80118a0 <udp_set_ip+0x30>)
 801187a:	9301      	str	r3, [sp, #4]
 801187c:	eb0d 0102 	add.w	r1, sp, r2
 8011880:	f7ff ffce 	bl	8011820 <memcpy.isra.0>
 8011884:	6862      	ldr	r2, [r4, #4]
 8011886:	4b07      	ldr	r3, [pc, #28]	; (80118a4 <udp_set_ip+0x34>)
 8011888:	43d1      	mvns	r1, r2
 801188a:	6019      	str	r1, [r3, #0]
 801188c:	6823      	ldr	r3, [r4, #0]
 801188e:	4013      	ands	r3, r2
 8011890:	4a05      	ldr	r2, [pc, #20]	; (80118a8 <udp_set_ip+0x38>)
 8011892:	6013      	str	r3, [r2, #0]
 8011894:	68a2      	ldr	r2, [r4, #8]
 8011896:	4b05      	ldr	r3, [pc, #20]	; (80118ac <udp_set_ip+0x3c>)
 8011898:	601a      	str	r2, [r3, #0]
 801189a:	b002      	add	sp, #8
 801189c:	bd10      	pop	{r4, pc}
 801189e:	bf00      	nop
 80118a0:	2000ef82 	andcs	lr, r0, r2, lsl #31
 80118a4:	20009298 	mulcs	r0, r8, r2
 80118a8:	200092a0 	andcs	r9, r0, r0, lsr #5
 80118ac:	2000929c 	mulcs	r0, ip, r2

080118b0 <udp_bind>:
 80118b0:	4a0a      	ldr	r2, [pc, #40]	; (80118dc <udp_bind+0x2c>)
 80118b2:	b510      	push	{r4, lr}
 80118b4:	2300      	movs	r3, #0
 80118b6:	4614      	mov	r4, r2
 80118b8:	f852 1b04 	ldr.w	r1, [r2], #4
 80118bc:	4281      	cmp	r1, r0
 80118be:	d008      	beq.n	80118d2 <udp_bind+0x22>
 80118c0:	b149      	cbz	r1, 80118d6 <udp_bind+0x26>
 80118c2:	3301      	adds	r3, #1
 80118c4:	2b08      	cmp	r3, #8
 80118c6:	d1f7      	bne.n	80118b8 <udp_bind+0x8>
 80118c8:	4805      	ldr	r0, [pc, #20]	; (80118e0 <udp_bind+0x30>)
 80118ca:	f003 fc71 	bl	80151b0 <console_error>
 80118ce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80118d2:	4618      	mov	r0, r3
 80118d4:	bd10      	pop	{r4, pc}
 80118d6:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 80118da:	e7fa      	b.n	80118d2 <udp_bind+0x22>
 80118dc:	200092a8 	andcs	r9, r0, r8, lsr #5
 80118e0:	0801a1ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sp, pc}

080118e4 <udp_unbind>:
 80118e4:	b510      	push	{r4, lr}
 80118e6:	4a0c      	ldr	r2, [pc, #48]	; (8011918 <udp_unbind+0x34>)
 80118e8:	2300      	movs	r3, #0
 80118ea:	4611      	mov	r1, r2
 80118ec:	f852 4b04 	ldr.w	r4, [r2], #4
 80118f0:	4284      	cmp	r4, r0
 80118f2:	d108      	bne.n	8011906 <udp_unbind+0x22>
 80118f4:	2000      	movs	r0, #0
 80118f6:	f640 3294 	movw	r2, #2964	; 0xb94
 80118fa:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80118fe:	4353      	muls	r3, r2
 8011900:	4a06      	ldr	r2, [pc, #24]	; (801191c <udp_unbind+0x38>)
 8011902:	50d0      	str	r0, [r2, r3]
 8011904:	bd10      	pop	{r4, pc}
 8011906:	3301      	adds	r3, #1
 8011908:	2b08      	cmp	r3, #8
 801190a:	d1ef      	bne.n	80118ec <udp_unbind+0x8>
 801190c:	4804      	ldr	r0, [pc, #16]	; (8011920 <udp_unbind+0x3c>)
 801190e:	f003 fc4f 	bl	80151b0 <console_error>
 8011912:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011916:	e7f5      	b.n	8011904 <udp_unbind+0x20>
 8011918:	200092a8 	andcs	r9, r0, r8, lsr #5
 801191c:	200092c8 	andcs	r9, r0, r8, asr #5
 8011920:	0801a1b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sp, pc}

08011924 <udp_recv>:
 8011924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011928:	4604      	mov	r4, r0
 801192a:	4698      	mov	r8, r3
 801192c:	4608      	mov	r0, r1
 801192e:	f640 3394 	movw	r3, #2964	; 0xb94
 8011932:	4916      	ldr	r1, [pc, #88]	; (801198c <udp_recv+0x68>)
 8011934:	435c      	muls	r4, r3
 8011936:	190f      	adds	r7, r1, r4
 8011938:	5b0b      	ldrh	r3, [r1, r4]
 801193a:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 801193e:	4563      	cmp	r3, ip
 8011940:	d021      	beq.n	8011986 <udp_recv+0x62>
 8011942:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8011946:	fb03 fc0c 	mul.w	ip, r3, ip
 801194a:	eb0c 0604 	add.w	r6, ip, r4
 801194e:	440e      	add	r6, r1
 8011950:	3404      	adds	r4, #4
 8011952:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8011956:	4295      	cmp	r5, r2
 8011958:	bf28      	it	cs
 801195a:	4615      	movcs	r5, r2
 801195c:	4464      	add	r4, ip
 801195e:	462a      	mov	r2, r5
 8011960:	4421      	add	r1, r4
 8011962:	f7ff ff67 	bl	8011834 <net_memcpy>
 8011966:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 801196a:	f8c8 3000 	str.w	r3, [r8]
 801196e:	9b06      	ldr	r3, [sp, #24]
 8011970:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8011974:	801a      	strh	r2, [r3, #0]
 8011976:	887b      	ldrh	r3, [r7, #2]
 8011978:	3301      	adds	r3, #1
 801197a:	f003 0301 	and.w	r3, r3, #1
 801197e:	807b      	strh	r3, [r7, #2]
 8011980:	4628      	mov	r0, r5
 8011982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011986:	2500      	movs	r5, #0
 8011988:	e7fa      	b.n	8011980 <udp_recv+0x5c>
 801198a:	bf00      	nop
 801198c:	200092c8 	andcs	r9, r0, r8, asr #5

08011990 <udp_recv2>:
 8011990:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011992:	4c11      	ldr	r4, [pc, #68]	; (80119d8 <udp_recv2+0x48>)
 8011994:	f640 3594 	movw	r5, #2964	; 0xb94
 8011998:	4368      	muls	r0, r5
 801199a:	1827      	adds	r7, r4, r0
 801199c:	5a26      	ldrh	r6, [r4, r0]
 801199e:	887d      	ldrh	r5, [r7, #2]
 80119a0:	42ae      	cmp	r6, r5
 80119a2:	d017      	beq.n	80119d4 <udp_recv2+0x44>
 80119a4:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 80119a8:	1d06      	adds	r6, r0, #4
 80119aa:	fb0c f505 	mul.w	r5, ip, r5
 80119ae:	442e      	add	r6, r5
 80119b0:	4405      	add	r5, r0
 80119b2:	4426      	add	r6, r4
 80119b4:	442c      	add	r4, r5
 80119b6:	600e      	str	r6, [r1, #0]
 80119b8:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 80119bc:	6011      	str	r1, [r2, #0]
 80119be:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 80119c2:	801a      	strh	r2, [r3, #0]
 80119c4:	887b      	ldrh	r3, [r7, #2]
 80119c6:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 80119ca:	3301      	adds	r3, #1
 80119cc:	f003 0301 	and.w	r3, r3, #1
 80119d0:	807b      	strh	r3, [r7, #2]
 80119d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119d4:	2000      	movs	r0, #0
 80119d6:	e7fc      	b.n	80119d2 <udp_recv2+0x42>
 80119d8:	200092c8 	andcs	r9, r0, r8, asr #5

080119dc <udp_send>:
 80119dc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80119e0:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8011b34 <udp_send+0x158>
 80119e4:	461c      	mov	r4, r3
 80119e6:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 80119ea:	4607      	mov	r7, r0
 80119ec:	4688      	mov	r8, r1
 80119ee:	4616      	mov	r6, r2
 80119f0:	2b00      	cmp	r3, #0
 80119f2:	f000 808b 	beq.w	8011b0c <udp_send+0x130>
 80119f6:	1c63      	adds	r3, r4, #1
 80119f8:	d141      	bne.n	8011a7e <udp_send+0xa2>
 80119fa:	4a46      	ldr	r2, [pc, #280]	; (8011b14 <udp_send+0x138>)
 80119fc:	2307      	movs	r3, #7
 80119fe:	4611      	mov	r1, r2
 8011a00:	20ff      	movs	r0, #255	; 0xff
 8011a02:	e001      	b.n	8011a08 <udp_send+0x2c>
 8011a04:	f802 0b01 	strb.w	r0, [r2], #1
 8011a08:	3b01      	subs	r3, #1
 8011a0a:	d1fb      	bne.n	8011a04 <udp_send+0x28>
 8011a0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011a10:	83cb      	strh	r3, [r1, #30]
 8011a12:	840b      	strh	r3, [r1, #32]
 8011a14:	f8df a120 	ldr.w	sl, [pc, #288]	; 8011b38 <udp_send+0x15c>
 8011a18:	4c3e      	ldr	r4, [pc, #248]	; (8011b14 <udp_send+0x138>)
 8011a1a:	f8ba 3000 	ldrh.w	r3, [sl]
 8011a1e:	8263      	strh	r3, [r4, #18]
 8011a20:	f106 031c 	add.w	r3, r6, #28
 8011a24:	ba5b      	rev16	r3, r3
 8011a26:	2500      	movs	r5, #0
 8011a28:	2114      	movs	r1, #20
 8011a2a:	f104 000e 	add.w	r0, r4, #14
 8011a2e:	8223      	strh	r3, [r4, #16]
 8011a30:	8325      	strh	r5, [r4, #24]
 8011a32:	f001 fd26 	bl	8013482 <net_chksum>
 8011a36:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8011a3a:	8320      	strh	r0, [r4, #24]
 8011a3c:	ba5b      	rev16	r3, r3
 8011a3e:	8463      	strh	r3, [r4, #34]	; 0x22
 8011a40:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8011a44:	ba5b      	rev16	r3, r3
 8011a46:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8011a4a:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011a4c:	f106 0308 	add.w	r3, r6, #8
 8011a50:	ba5b      	rev16	r3, r3
 8011a52:	4632      	mov	r2, r6
 8011a54:	4641      	mov	r1, r8
 8011a56:	bf28      	it	cs
 8011a58:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8011a5c:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8011a60:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011a62:	f7ff fee7 	bl	8011834 <net_memcpy>
 8011a66:	4620      	mov	r0, r4
 8011a68:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8011a6c:	f005 f9c2 	bl	8016df4 <emac_eth_send>
 8011a70:	f8ba 3000 	ldrh.w	r3, [sl]
 8011a74:	3301      	adds	r3, #1
 8011a76:	f8aa 3000 	strh.w	r3, [sl]
 8011a7a:	4628      	mov	r0, r5
 8011a7c:	e037      	b.n	8011aee <udp_send+0x112>
 8011a7e:	4b26      	ldr	r3, [pc, #152]	; (8011b18 <udp_send+0x13c>)
 8011a80:	681b      	ldr	r3, [r3, #0]
 8011a82:	43a3      	bics	r3, r4
 8011a84:	d10f      	bne.n	8011aa6 <udp_send+0xca>
 8011a86:	4a23      	ldr	r2, [pc, #140]	; (8011b14 <udp_send+0x138>)
 8011a88:	2307      	movs	r3, #7
 8011a8a:	21ff      	movs	r1, #255	; 0xff
 8011a8c:	e001      	b.n	8011a92 <udp_send+0xb6>
 8011a8e:	f802 1b01 	strb.w	r1, [r2], #1
 8011a92:	3b01      	subs	r3, #1
 8011a94:	d1fb      	bne.n	8011a8e <udp_send+0xb2>
 8011a96:	2204      	movs	r2, #4
 8011a98:	4820      	ldr	r0, [pc, #128]	; (8011b1c <udp_send+0x140>)
 8011a9a:	9401      	str	r4, [sp, #4]
 8011a9c:	eb0d 0102 	add.w	r1, sp, r2
 8011aa0:	f7ff febe 	bl	8011820 <memcpy.isra.0>
 8011aa4:	e7b6      	b.n	8011a14 <udp_send+0x38>
 8011aa6:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8011aaa:	2be0      	cmp	r3, #224	; 0xe0
 8011aac:	d10e      	bne.n	8011acc <udp_send+0xf0>
 8011aae:	491c      	ldr	r1, [pc, #112]	; (8011b20 <udp_send+0x144>)
 8011ab0:	4818      	ldr	r0, [pc, #96]	; (8011b14 <udp_send+0x138>)
 8011ab2:	f3c4 2206 	ubfx	r2, r4, #8, #7
 8011ab6:	70ca      	strb	r2, [r1, #3]
 8011ab8:	f3c4 4207 	ubfx	r2, r4, #16, #8
 8011abc:	710a      	strb	r2, [r1, #4]
 8011abe:	f3c4 6207 	ubfx	r2, r4, #24, #8
 8011ac2:	714a      	strb	r2, [r1, #5]
 8011ac4:	2206      	movs	r2, #6
 8011ac6:	f7ff feab 	bl	8011820 <memcpy.isra.0>
 8011aca:	e7e4      	b.n	8011a96 <udp_send+0xba>
 8011acc:	4b15      	ldr	r3, [pc, #84]	; (8011b24 <udp_send+0x148>)
 8011ace:	681b      	ldr	r3, [r3, #0]
 8011ad0:	43a3      	bics	r3, r4
 8011ad2:	d00f      	beq.n	8011af4 <udp_send+0x118>
 8011ad4:	4d14      	ldr	r5, [pc, #80]	; (8011b28 <udp_send+0x14c>)
 8011ad6:	490f      	ldr	r1, [pc, #60]	; (8011b14 <udp_send+0x138>)
 8011ad8:	6828      	ldr	r0, [r5, #0]
 8011ada:	f001 f9a3 	bl	8012e24 <arp_cache_lookup>
 8011ade:	682b      	ldr	r3, [r5, #0]
 8011ae0:	4298      	cmp	r0, r3
 8011ae2:	d0d8      	beq.n	8011a96 <udp_send+0xba>
 8011ae4:	4811      	ldr	r0, [pc, #68]	; (8011b2c <udp_send+0x150>)
 8011ae6:	f003 fb63 	bl	80151b0 <console_error>
 8011aea:	f06f 0002 	mvn.w	r0, #2
 8011aee:	b002      	add	sp, #8
 8011af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011af4:	4907      	ldr	r1, [pc, #28]	; (8011b14 <udp_send+0x138>)
 8011af6:	4620      	mov	r0, r4
 8011af8:	f001 f994 	bl	8012e24 <arp_cache_lookup>
 8011afc:	42a0      	cmp	r0, r4
 8011afe:	d0ca      	beq.n	8011a96 <udp_send+0xba>
 8011b00:	480b      	ldr	r0, [pc, #44]	; (8011b30 <udp_send+0x154>)
 8011b02:	f003 fb55 	bl	80151b0 <console_error>
 8011b06:	f06f 0001 	mvn.w	r0, #1
 8011b0a:	e7f0      	b.n	8011aee <udp_send+0x112>
 8011b0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011b10:	e7ed      	b.n	8011aee <udp_send+0x112>
 8011b12:	bf00      	nop
 8011b14:	2000ef68 	andcs	lr, r0, r8, ror #30
 8011b18:	20009298 	mulcs	r0, r8, r2
 8011b1c:	2000ef86 	andcs	lr, r0, r6, lsl #31
 8011b20:	20000014 	andcs	r0, r0, r4, lsl r0
 8011b24:	200092a0 	andcs	r9, r0, r0, lsr #5
 8011b28:	2000929c 	mulcs	r0, ip, r2
 8011b2c:	0801a1bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp, pc}
 8011b30:	0801a1e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sp, pc}
 8011b34:	200092a8 	andcs	r9, r0, r8, lsr #5
 8011b38:	200092a4 	andcs	r9, r0, r4, lsr #5

08011b3c <strlen>:
 8011b3c:	4603      	mov	r3, r0
 8011b3e:	461a      	mov	r2, r3
 8011b40:	3301      	adds	r3, #1
 8011b42:	7811      	ldrb	r1, [r2, #0]
 8011b44:	2900      	cmp	r1, #0
 8011b46:	d1fa      	bne.n	8011b3e <strlen+0x2>
 8011b48:	1a10      	subs	r0, r2, r0
 8011b4a:	4770      	bx	lr

08011b4c <strcmp>:
 8011b4c:	1e43      	subs	r3, r0, #1
 8011b4e:	3901      	subs	r1, #1
 8011b50:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8011b54:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8011b58:	4290      	cmp	r0, r2
 8011b5a:	d001      	beq.n	8011b60 <strcmp+0x14>
 8011b5c:	1a80      	subs	r0, r0, r2
 8011b5e:	e001      	b.n	8011b64 <strcmp+0x18>
 8011b60:	2800      	cmp	r0, #0
 8011b62:	d1f5      	bne.n	8011b50 <strcmp+0x4>
 8011b64:	4770      	bx	lr

08011b66 <strcpy.isra.0>:
 8011b66:	3801      	subs	r0, #1
 8011b68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011b6c:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011b70:	2b00      	cmp	r3, #0
 8011b72:	d1f9      	bne.n	8011b68 <strcpy.isra.0+0x2>
 8011b74:	4770      	bx	lr

08011b76 <strcat.isra.0>:
 8011b76:	b513      	push	{r0, r1, r4, lr}
 8011b78:	4604      	mov	r4, r0
 8011b7a:	9101      	str	r1, [sp, #4]
 8011b7c:	f7ff ffde 	bl	8011b3c <strlen>
 8011b80:	9901      	ldr	r1, [sp, #4]
 8011b82:	4420      	add	r0, r4
 8011b84:	b002      	add	sp, #8
 8011b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b8a:	f7ff bfec 	b.w	8011b66 <strcpy.isra.0>
	...

08011b90 <MDNS::MDNS()>:
 8011b90:	b513      	push	{r0, r1, r4, lr}
 8011b92:	4604      	mov	r4, r0
 8011b94:	a901      	add	r1, sp, #4
 8011b96:	4804      	ldr	r0, [pc, #16]	; (8011ba8 <MDNS::MDNS()+0x18>)
 8011b98:	f003 fca8 	bl	80154ec <inet_aton>
 8011b9c:	4b03      	ldr	r3, [pc, #12]	; (8011bac <MDNS::MDNS()+0x1c>)
 8011b9e:	9a01      	ldr	r2, [sp, #4]
 8011ba0:	601a      	str	r2, [r3, #0]
 8011ba2:	4620      	mov	r0, r4
 8011ba4:	b002      	add	sp, #8
 8011ba6:	bd10      	pop	{r4, pc}
 8011ba8:	0801a212 	stmdaeq	r1, {r1, r4, r9, sp, pc}
 8011bac:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>

08011bb0 <MDNS::SetName(char const*)>:
 8011bb0:	b538      	push	{r3, r4, r5, lr}
 8011bb2:	4d0b      	ldr	r5, [pc, #44]	; (8011be0 <MDNS::SetName(char const*)+0x30>)
 8011bb4:	6828      	ldr	r0, [r5, #0]
 8011bb6:	460c      	mov	r4, r1
 8011bb8:	b108      	cbz	r0, 8011bbe <MDNS::SetName(char const*)+0xe>
 8011bba:	f003 fc91 	bl	80154e0 <operator delete[](void*)>
 8011bbe:	4620      	mov	r0, r4
 8011bc0:	f7ff ffbc 	bl	8011b3c <strlen>
 8011bc4:	3007      	adds	r0, #7
 8011bc6:	f003 fc8f 	bl	80154e8 <operator new[](unsigned int)>
 8011bca:	4621      	mov	r1, r4
 8011bcc:	6028      	str	r0, [r5, #0]
 8011bce:	f7ff ffca 	bl	8011b66 <strcpy.isra.0>
 8011bd2:	6828      	ldr	r0, [r5, #0]
 8011bd4:	4903      	ldr	r1, [pc, #12]	; (8011be4 <MDNS::SetName(char const*)+0x34>)
 8011bd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011bda:	f7ff bfcc 	b.w	8011b76 <strcat.isra.0>
 8011bde:	bf00      	nop
 8011be0:	2000f98c 	andcs	pc, r0, ip, lsl #19
 8011be4:	0801a222 	stmdaeq	r1, {r1, r5, r9, sp, pc}

08011be8 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8011be8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011bec:	f04f 0e00 	mov.w	lr, #0
 8011bf0:	4e1c      	ldr	r6, [pc, #112]	; (8011c64 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 8011bf2:	4f1d      	ldr	r7, [pc, #116]	; (8011c68 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 8011bf4:	4675      	mov	r5, lr
 8011bf6:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8011bfa:	780b      	ldrb	r3, [r1, #0]
 8011bfc:	1c68      	adds	r0, r5, #1
 8011bfe:	b913      	cbnz	r3, 8011c06 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 8011c00:	7013      	strb	r3, [r2, #0]
 8011c02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c06:	2b3f      	cmp	r3, #63	; 0x3f
 8011c08:	d91c      	bls.n	8011c44 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 8011c0a:	7849      	ldrb	r1, [r1, #1]
 8011c0c:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8011c10:	430b      	orrs	r3, r1
 8011c12:	6839      	ldr	r1, [r7, #0]
 8011c14:	5ccc      	ldrb	r4, [r1, r3]
 8011c16:	3301      	adds	r3, #1
 8011c18:	4419      	add	r1, r3
 8011c1a:	f1be 0f00 	cmp.w	lr, #0
 8011c1e:	bf08      	it	eq
 8011c20:	4605      	moveq	r5, r0
 8011c22:	2300      	movs	r3, #0
 8011c24:	42a3      	cmp	r3, r4
 8011c26:	5cc8      	ldrb	r0, [r1, r3]
 8011c28:	d309      	bcc.n	8011c3e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 8011c2a:	4421      	add	r1, r4
 8011c2c:	f04f 0e01 	mov.w	lr, #1
 8011c30:	4414      	add	r4, r2
 8011c32:	780b      	ldrb	r3, [r1, #0]
 8011c34:	b10b      	cbz	r3, 8011c3a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 8011c36:	f804 cb01 	strb.w	ip, [r4], #1
 8011c3a:	4622      	mov	r2, r4
 8011c3c:	e7dd      	b.n	8011bfa <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8011c3e:	54d0      	strb	r0, [r2, r3]
 8011c40:	3301      	adds	r3, #1
 8011c42:	e7ef      	b.n	8011c24 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8011c44:	4688      	mov	r8, r1
 8011c46:	18d4      	adds	r4, r2, r3
 8011c48:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8011c4c:	f802 9b01 	strb.w	r9, [r2], #1
 8011c50:	4294      	cmp	r4, r2
 8011c52:	d1f9      	bne.n	8011c48 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8011c54:	1c5a      	adds	r2, r3, #1
 8011c56:	4411      	add	r1, r2
 8011c58:	f1be 0f00 	cmp.w	lr, #0
 8011c5c:	d1e9      	bne.n	8011c32 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8011c5e:	181d      	adds	r5, r3, r0
 8011c60:	e7e7      	b.n	8011c32 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8011c62:	bf00      	nop
 8011c64:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8011c68:	2000f990 	mulcs	r0, r0, r9

08011c6c <MDNS::FindFirstDotFromRight(char const*) const>:
 8011c6c:	b510      	push	{r4, lr}
 8011c6e:	4608      	mov	r0, r1
 8011c70:	460c      	mov	r4, r1
 8011c72:	f7ff ff63 	bl	8011b3c <strlen>
 8011c76:	4420      	add	r0, r4
 8011c78:	42a0      	cmp	r0, r4
 8011c7a:	d903      	bls.n	8011c84 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8011c7c:	f810 3901 	ldrb.w	r3, [r0], #-1
 8011c80:	2b2e      	cmp	r3, #46	; 0x2e
 8011c82:	d1f9      	bne.n	8011c78 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8011c84:	3001      	adds	r0, #1
 8011c86:	bd10      	pop	{r4, pc}

08011c88 <MDNS::WriteDnsName(char const*, char*, bool)>:
 8011c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c8a:	4610      	mov	r0, r2
 8011c8c:	1c44      	adds	r4, r0, #1
 8011c8e:	460f      	mov	r7, r1
 8011c90:	463d      	mov	r5, r7
 8011c92:	f817 6b01 	ldrb.w	r6, [r7], #1
 8011c96:	b946      	cbnz	r6, 8011caa <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 8011c98:	1a69      	subs	r1, r5, r1
 8011c9a:	7001      	strb	r1, [r0, #0]
 8011c9c:	7829      	ldrb	r1, [r5, #0]
 8011c9e:	b949      	cbnz	r1, 8011cb4 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8011ca0:	b10b      	cbz	r3, 8011ca6 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8011ca2:	f804 1b01 	strb.w	r1, [r4], #1
 8011ca6:	1aa0      	subs	r0, r4, r2
 8011ca8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011caa:	2e2e      	cmp	r6, #46	; 0x2e
 8011cac:	d0f4      	beq.n	8011c98 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8011cae:	f804 6b01 	strb.w	r6, [r4], #1
 8011cb2:	e7ed      	b.n	8011c90 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8011cb4:	1c69      	adds	r1, r5, #1
 8011cb6:	4620      	mov	r0, r4
 8011cb8:	e7e8      	b.n	8011c8c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08011cbc <MDNS::CreateAnswerLocalIpAddress()>:
 8011cbc:	b510      	push	{r4, lr}
 8011cbe:	4c10      	ldr	r4, [pc, #64]	; (8011d00 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8011cc0:	4910      	ldr	r1, [pc, #64]	; (8011d04 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8011cc2:	2384      	movs	r3, #132	; 0x84
 8011cc4:	80e3      	strh	r3, [r4, #6]
 8011cc6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8011cca:	2300      	movs	r3, #0
 8011ccc:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8011cd0:	6809      	ldr	r1, [r1, #0]
 8011cd2:	f104 0210 	add.w	r2, r4, #16
 8011cd6:	2301      	movs	r3, #1
 8011cd8:	f7ff ffd6 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011cdc:	490a      	ldr	r1, [pc, #40]	; (8011d08 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8011cde:	5011      	str	r1, [r2, r0]
 8011ce0:	1813      	adds	r3, r2, r0
 8011ce2:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8011ce6:	605a      	str	r2, [r3, #4]
 8011ce8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011cec:	811a      	strh	r2, [r3, #8]
 8011cee:	4a07      	ldr	r2, [pc, #28]	; (8011d0c <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8011cf0:	6812      	ldr	r2, [r2, #0]
 8011cf2:	6952      	ldr	r2, [r2, #20]
 8011cf4:	f8c3 200a 	str.w	r2, [r3, #10]
 8011cf8:	1b1b      	subs	r3, r3, r4
 8011cfa:	330a      	adds	r3, #10
 8011cfc:	6023      	str	r3, [r4, #0]
 8011cfe:	bd10      	pop	{r4, pc}
 8011d00:	2000f560 	andcs	pc, r0, r0, ror #10
 8011d04:	2000f98c 	andcs	pc, r0, ip, lsl #19
 8011d08:	01800100 	orreq	r0, r0, r0, lsl #2
 8011d0c:	2000f994 	mulcs	r0, r4, r9

08011d10 <MDNS::Start()>:
 8011d10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011d12:	4c1d      	ldr	r4, [pc, #116]	; (8011d88 <MDNS::Start()+0x78>)
 8011d14:	4e1d      	ldr	r6, [pc, #116]	; (8011d8c <MDNS::Start()+0x7c>)
 8011d16:	4f1e      	ldr	r7, [pc, #120]	; (8011d90 <MDNS::Start()+0x80>)
 8011d18:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8011d1c:	4605      	mov	r5, r0
 8011d1e:	6820      	ldr	r0, [r4, #0]
 8011d20:	f000 fb29 	bl	8012376 <Network::Begin(unsigned short)>
 8011d24:	683a      	ldr	r2, [r7, #0]
 8011d26:	6030      	str	r0, [r6, #0]
 8011d28:	4601      	mov	r1, r0
 8011d2a:	6820      	ldr	r0, [r4, #0]
 8011d2c:	f000 fb34 	bl	8012398 <Network::JoinGroup(int, unsigned int)>
 8011d30:	4b18      	ldr	r3, [pc, #96]	; (8011d94 <MDNS::Start()+0x84>)
 8011d32:	681b      	ldr	r3, [r3, #0]
 8011d34:	b923      	cbnz	r3, 8011d40 <MDNS::Start()+0x30>
 8011d36:	6821      	ldr	r1, [r4, #0]
 8011d38:	4628      	mov	r0, r5
 8011d3a:	3120      	adds	r1, #32
 8011d3c:	f7ff ff38 	bl	8011bb0 <MDNS::SetName(char const*)>
 8011d40:	4628      	mov	r0, r5
 8011d42:	f7ff ffbb 	bl	8011cbc <MDNS::CreateAnswerLocalIpAddress()>
 8011d46:	4914      	ldr	r1, [pc, #80]	; (8011d98 <MDNS::Start()+0x88>)
 8011d48:	7830      	ldrb	r0, [r6, #0]
 8011d4a:	f831 2b04 	ldrh.w	r2, [r1], #4
 8011d4e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8011d52:	9300      	str	r3, [sp, #0]
 8011d54:	683b      	ldr	r3, [r7, #0]
 8011d56:	f7ff fe41 	bl	80119dc <udp_send>
 8011d5a:	6820      	ldr	r0, [r4, #0]
 8011d5c:	4c0f      	ldr	r4, [pc, #60]	; (8011d9c <MDNS::Start()+0x8c>)
 8011d5e:	f100 0260 	add.w	r2, r0, #96	; 0x60
 8011d62:	233f      	movs	r3, #63	; 0x3f
 8011d64:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011d68:	b929      	cbnz	r1, 8011d76 <MDNS::Start()+0x66>
 8011d6a:	4413      	add	r3, r2
 8011d6c:	429a      	cmp	r2, r3
 8011d6e:	d006      	beq.n	8011d7e <MDNS::Start()+0x6e>
 8011d70:	f802 1b01 	strb.w	r1, [r2], #1
 8011d74:	e7fa      	b.n	8011d6c <MDNS::Start()+0x5c>
 8011d76:	3b01      	subs	r3, #1
 8011d78:	f802 1b01 	strb.w	r1, [r2], #1
 8011d7c:	d1f2      	bne.n	8011d64 <MDNS::Start()+0x54>
 8011d7e:	2300      	movs	r3, #0
 8011d80:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 8011d84:	b003      	add	sp, #12
 8011d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d88:	2000f994 	mulcs	r0, r4, r9
 8011d8c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8011d90:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>
 8011d94:	2000f98c 	andcs	pc, r0, ip, lsl #19
 8011d98:	2000f560 	andcs	pc, r0, r0, ror #10
 8011d9c:	0801a222 	stmdaeq	r1, {r1, r5, r9, sp, pc}

08011da0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8011da0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011da2:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8011da6:	4c1b      	ldr	r4, [pc, #108]	; (8011e14 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 8011da8:	2300      	movs	r3, #0
 8011daa:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8011dae:	f854 100c 	ldr.w	r1, [r4, ip]
 8011db2:	4607      	mov	r7, r0
 8011db4:	f7ff ff68 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011db8:	4616      	mov	r6, r2
 8011dba:	7bac      	ldrb	r4, [r5, #14]
 8011dbc:	4916      	ldr	r1, [pc, #88]	; (8011e18 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8011dbe:	4402      	add	r2, r0
 8011dc0:	4816      	ldr	r0, [pc, #88]	; (8011e1c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8011dc2:	2301      	movs	r3, #1
 8011dc4:	429c      	cmp	r4, r3
 8011dc6:	bf18      	it	ne
 8011dc8:	4601      	movne	r1, r0
 8011dca:	4638      	mov	r0, r7
 8011dcc:	f7ff ff5c 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011dd0:	4b13      	ldr	r3, [pc, #76]	; (8011e20 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8011dd2:	5013      	str	r3, [r2, r0]
 8011dd4:	1814      	adds	r4, r2, r0
 8011dd6:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011dda:	6063      	str	r3, [r4, #4]
 8011ddc:	4b11      	ldr	r3, [pc, #68]	; (8011e24 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8011dde:	6819      	ldr	r1, [r3, #0]
 8011de0:	9101      	str	r1, [sp, #4]
 8011de2:	4608      	mov	r0, r1
 8011de4:	f7ff feaa 	bl	8011b3c <strlen>
 8011de8:	f100 0308 	add.w	r3, r0, #8
 8011dec:	ba5b      	rev16	r3, r3
 8011dee:	8123      	strh	r3, [r4, #8]
 8011df0:	2300      	movs	r3, #0
 8011df2:	f8c4 300a 	str.w	r3, [r4, #10]
 8011df6:	89ab      	ldrh	r3, [r5, #12]
 8011df8:	9901      	ldr	r1, [sp, #4]
 8011dfa:	ba5b      	rev16	r3, r3
 8011dfc:	81e3      	strh	r3, [r4, #14]
 8011dfe:	f104 0210 	add.w	r2, r4, #16
 8011e02:	2301      	movs	r3, #1
 8011e04:	4638      	mov	r0, r7
 8011e06:	f7ff ff3f 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011e0a:	4410      	add	r0, r2
 8011e0c:	1b80      	subs	r0, r0, r6
 8011e0e:	b003      	add	sp, #12
 8011e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e12:	bf00      	nop
 8011e14:	2000f764 	andcs	pc, r0, r4, ror #14
 8011e18:	0801a21e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, pc}
 8011e1c:	0801a23b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sp, pc}
 8011e20:	01802100 	orreq	r2, r0, r0, lsl #2
 8011e24:	2000f98c 	andcs	pc, r0, ip, lsl #19

08011e28 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8011e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e2c:	4e19      	ldr	r6, [pc, #100]	; (8011e94 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8011e2e:	010f      	lsls	r7, r1, #4
 8011e30:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8011e34:	2300      	movs	r3, #0
 8011e36:	59f1      	ldr	r1, [r6, r7]
 8011e38:	4604      	mov	r4, r0
 8011e3a:	f7ff ff25 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011e3e:	4690      	mov	r8, r2
 8011e40:	7bae      	ldrb	r6, [r5, #14]
 8011e42:	4915      	ldr	r1, [pc, #84]	; (8011e98 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8011e44:	4402      	add	r2, r0
 8011e46:	4815      	ldr	r0, [pc, #84]	; (8011e9c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8011e48:	2301      	movs	r3, #1
 8011e4a:	429e      	cmp	r6, r3
 8011e4c:	bf18      	it	ne
 8011e4e:	4601      	movne	r1, r0
 8011e50:	4620      	mov	r0, r4
 8011e52:	f7ff ff19 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011e56:	4b12      	ldr	r3, [pc, #72]	; (8011ea0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8011e58:	5013      	str	r3, [r2, r0]
 8011e5a:	1816      	adds	r6, r2, r0
 8011e5c:	68a8      	ldr	r0, [r5, #8]
 8011e5e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011e62:	6073      	str	r3, [r6, #4]
 8011e64:	f106 040b 	add.w	r4, r6, #11
 8011e68:	b938      	cbnz	r0, 8011e7a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8011e6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011e6e:	8133      	strh	r3, [r6, #8]
 8011e70:	72b0      	strb	r0, [r6, #10]
 8011e72:	eba4 0008 	sub.w	r0, r4, r8
 8011e76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e7a:	f7ff fe5f 	bl	8011b3c <strlen>
 8011e7e:	1c43      	adds	r3, r0, #1
 8011e80:	72b0      	strb	r0, [r6, #10]
 8011e82:	ba5b      	rev16	r3, r3
 8011e84:	4607      	mov	r7, r0
 8011e86:	68a9      	ldr	r1, [r5, #8]
 8011e88:	8133      	strh	r3, [r6, #8]
 8011e8a:	4620      	mov	r0, r4
 8011e8c:	f7ff fe6b 	bl	8011b66 <strcpy.isra.0>
 8011e90:	443c      	add	r4, r7
 8011e92:	e7ee      	b.n	8011e72 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8011e94:	2000f764 	andcs	pc, r0, r4, ror #14
 8011e98:	0801a21e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, pc}
 8011e9c:	0801a23b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sp, pc}
 8011ea0:	01801000 	orreq	r1, r0, r0

08011ea4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8011ea4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011ea8:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8011f1c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x78>
 8011eac:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8011eb0:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8011eb4:	2301      	movs	r3, #1
 8011eb6:	6869      	ldr	r1, [r5, #4]
 8011eb8:	4607      	mov	r7, r0
 8011eba:	f7ff fee5 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011ebe:	f858 1009 	ldr.w	r1, [r8, r9]
 8011ec2:	4b13      	ldr	r3, [pc, #76]	; (8011f10 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8011ec4:	5013      	str	r3, [r2, r0]
 8011ec6:	1816      	adds	r6, r2, r0
 8011ec8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011ecc:	6073      	str	r3, [r6, #4]
 8011ece:	4608      	mov	r0, r1
 8011ed0:	4614      	mov	r4, r2
 8011ed2:	9101      	str	r1, [sp, #4]
 8011ed4:	f7ff fe32 	bl	8011b3c <strlen>
 8011ed8:	f100 030d 	add.w	r3, r0, #13
 8011edc:	ba5b      	rev16	r3, r3
 8011ede:	9901      	ldr	r1, [sp, #4]
 8011ee0:	8133      	strh	r3, [r6, #8]
 8011ee2:	f106 020a 	add.w	r2, r6, #10
 8011ee6:	2300      	movs	r3, #0
 8011ee8:	4638      	mov	r0, r7
 8011eea:	f7ff fecd 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011eee:	7bad      	ldrb	r5, [r5, #14]
 8011ef0:	4908      	ldr	r1, [pc, #32]	; (8011f14 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8011ef2:	4402      	add	r2, r0
 8011ef4:	4808      	ldr	r0, [pc, #32]	; (8011f18 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 8011ef6:	2301      	movs	r3, #1
 8011ef8:	429d      	cmp	r5, r3
 8011efa:	bf18      	it	ne
 8011efc:	4601      	movne	r1, r0
 8011efe:	4638      	mov	r0, r7
 8011f00:	f7ff fec2 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011f04:	4410      	add	r0, r2
 8011f06:	1b00      	subs	r0, r0, r4
 8011f08:	b003      	add	sp, #12
 8011f0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011f0e:	bf00      	nop
 8011f10:	01000c00 	tsteq	r0, r0, lsl #24
 8011f14:	0801a21e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, pc}
 8011f18:	0801a23b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sp, pc}
 8011f1c:	2000f764 	andcs	pc, r0, r4, ror #14

08011f20 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8011f20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011f22:	2301      	movs	r3, #1
 8011f24:	460f      	mov	r7, r1
 8011f26:	4910      	ldr	r1, [pc, #64]	; (8011f68 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8011f28:	4606      	mov	r6, r0
 8011f2a:	f7ff fead 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011f2e:	490f      	ldr	r1, [pc, #60]	; (8011f6c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8011f30:	4b0f      	ldr	r3, [pc, #60]	; (8011f70 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x50>)
 8011f32:	5013      	str	r3, [r2, r0]
 8011f34:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 8011f38:	1815      	adds	r5, r2, r0
 8011f3a:	6849      	ldr	r1, [r1, #4]
 8011f3c:	9101      	str	r1, [sp, #4]
 8011f3e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011f42:	606b      	str	r3, [r5, #4]
 8011f44:	4608      	mov	r0, r1
 8011f46:	4614      	mov	r4, r2
 8011f48:	f7ff fdf8 	bl	8011b3c <strlen>
 8011f4c:	1c83      	adds	r3, r0, #2
 8011f4e:	ba5b      	rev16	r3, r3
 8011f50:	812b      	strh	r3, [r5, #8]
 8011f52:	f105 020a 	add.w	r2, r5, #10
 8011f56:	9901      	ldr	r1, [sp, #4]
 8011f58:	2301      	movs	r3, #1
 8011f5a:	4630      	mov	r0, r6
 8011f5c:	f7ff fe94 	bl	8011c88 <MDNS::WriteDnsName(char const*, char*, bool)>
 8011f60:	4410      	add	r0, r2
 8011f62:	1b00      	subs	r0, r0, r4
 8011f64:	b003      	add	sp, #12
 8011f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f68:	0801a229 	stmdaeq	r1, {r0, r3, r5, r9, sp, pc}
 8011f6c:	2000f764 	andcs	pc, r0, r4, ror #14
 8011f70:	01000c00 	tsteq	r0, r0, lsl #24

08011f74 <MDNS::CreateMDNSMessage(unsigned int)>:
 8011f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f76:	4d1a      	ldr	r5, [pc, #104]	; (8011fe0 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 8011f78:	2384      	movs	r3, #132	; 0x84
 8011f7a:	80eb      	strh	r3, [r5, #6]
 8011f7c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8011f80:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011f84:	f105 0410 	add.w	r4, r5, #16
 8011f88:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8011f8c:	4622      	mov	r2, r4
 8011f8e:	4606      	mov	r6, r0
 8011f90:	460f      	mov	r7, r1
 8011f92:	f7ff ff05 	bl	8011da0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8011f96:	4404      	add	r4, r0
 8011f98:	4622      	mov	r2, r4
 8011f9a:	4639      	mov	r1, r7
 8011f9c:	4630      	mov	r0, r6
 8011f9e:	f7ff ff43 	bl	8011e28 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8011fa2:	4404      	add	r4, r0
 8011fa4:	4622      	mov	r2, r4
 8011fa6:	4639      	mov	r1, r7
 8011fa8:	4630      	mov	r0, r6
 8011faa:	f7ff ffb9 	bl	8011f20 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 8011fae:	4404      	add	r4, r0
 8011fb0:	4622      	mov	r2, r4
 8011fb2:	4639      	mov	r1, r7
 8011fb4:	4630      	mov	r0, r6
 8011fb6:	f7ff ff75 	bl	8011ea4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8011fba:	4a0a      	ldr	r2, [pc, #40]	; (8011fe4 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8011fbc:	f852 3b10 	ldr.w	r3, [r2], #16
 8011fc0:	4420      	add	r0, r4
 8011fc2:	3b0c      	subs	r3, #12
 8011fc4:	1e44      	subs	r4, r0, #1
 8011fc6:	4619      	mov	r1, r3
 8011fc8:	3901      	subs	r1, #1
 8011fca:	d204      	bcs.n	8011fd6 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8011fcc:	18c4      	adds	r4, r0, r3
 8011fce:	4b06      	ldr	r3, [pc, #24]	; (8011fe8 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 8011fd0:	1ae4      	subs	r4, r4, r3
 8011fd2:	602c      	str	r4, [r5, #0]
 8011fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011fd6:	f812 6b01 	ldrb.w	r6, [r2], #1
 8011fda:	f804 6f01 	strb.w	r6, [r4, #1]!
 8011fde:	e7f3      	b.n	8011fc8 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8011fe0:	2000f788 	andcs	pc, r0, r8, lsl #15
 8011fe4:	2000f560 	andcs	pc, r0, r0, ror #10
 8011fe8:	2000f78c 	andcs	pc, r0, ip, lsl #15

08011fec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8011fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ff0:	4d41      	ldr	r5, [pc, #260]	; (80120f8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8011ff2:	b085      	sub	sp, #20
 8011ff4:	682c      	ldr	r4, [r5, #0]
 8011ff6:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
 8011ffa:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8011ffe:	4607      	mov	r7, r0
 8012000:	4616      	mov	r6, r2
 8012002:	b11c      	cbz	r4, 801200c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x20>
 8012004:	692a      	ldr	r2, [r5, #16]
 8012006:	2a00      	cmp	r2, #0
 8012008:	d172      	bne.n	80120f0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>
 801200a:	2401      	movs	r4, #1
 801200c:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 8012010:	ea4f 1804 	mov.w	r8, r4, lsl #4
 8012014:	8193      	strh	r3, [r2, #12]
 8012016:	f882 a00e 	strb.w	sl, [r2, #14]
 801201a:	2900      	cmp	r1, #0
 801201c:	d158      	bne.n	80120d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe4>
 801201e:	4b37      	ldr	r3, [pc, #220]	; (80120fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8012020:	6818      	ldr	r0, [r3, #0]
 8012022:	3020      	adds	r0, #32
 8012024:	f7ff fd8a 	bl	8011b3c <strlen>
 8012028:	4683      	mov	fp, r0
 801202a:	4630      	mov	r0, r6
 801202c:	f7ff fd86 	bl	8011b3c <strlen>
 8012030:	4458      	add	r0, fp
 8012032:	3001      	adds	r0, #1
 8012034:	f003 fa58 	bl	80154e8 <operator new[](unsigned int)>
 8012038:	4b30      	ldr	r3, [pc, #192]	; (80120fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 801203a:	f845 0008 	str.w	r0, [r5, r8]
 801203e:	6819      	ldr	r1, [r3, #0]
 8012040:	3120      	adds	r1, #32
 8012042:	f7ff fd90 	bl	8011b66 <strcpy.isra.0>
 8012046:	f855 0008 	ldr.w	r0, [r5, r8]
 801204a:	4631      	mov	r1, r6
 801204c:	f7ff fd93 	bl	8011b76 <strcat.isra.0>
 8012050:	4631      	mov	r1, r6
 8012052:	4638      	mov	r0, r7
 8012054:	f7ff fe0a 	bl	8011c6c <MDNS::FindFirstDotFromRight(char const*) const>
 8012058:	9003      	str	r0, [sp, #12]
 801205a:	f7ff fd6f 	bl	8011b3c <strlen>
 801205e:	300d      	adds	r0, #13
 8012060:	f003 fa42 	bl	80154e8 <operator new[](unsigned int)>
 8012064:	eb05 0b08 	add.w	fp, r5, r8
 8012068:	9903      	ldr	r1, [sp, #12]
 801206a:	f8cb 0004 	str.w	r0, [fp, #4]
 801206e:	f7ff fd7a 	bl	8011b66 <strcpy.isra.0>
 8012072:	4923      	ldr	r1, [pc, #140]	; (8012100 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8012074:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012078:	f7ff fd7d 	bl	8011b76 <strcat.isra.0>
 801207c:	4921      	ldr	r1, [pc, #132]	; (8012104 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 801207e:	4b22      	ldr	r3, [pc, #136]	; (8012108 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8012080:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012084:	f1ba 0f01 	cmp.w	sl, #1
 8012088:	bf18      	it	ne
 801208a:	4619      	movne	r1, r3
 801208c:	f7ff fd73 	bl	8011b76 <strcat.isra.0>
 8012090:	f1b9 0f00 	cmp.w	r9, #0
 8012094:	d00a      	beq.n	80120ac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xc0>
 8012096:	4648      	mov	r0, r9
 8012098:	f7ff fd50 	bl	8011b3c <strlen>
 801209c:	3001      	adds	r0, #1
 801209e:	f003 fa23 	bl	80154e8 <operator new[](unsigned int)>
 80120a2:	4649      	mov	r1, r9
 80120a4:	f8cb 0008 	str.w	r0, [fp, #8]
 80120a8:	f7ff fd5d 	bl	8011b66 <strcpy.isra.0>
 80120ac:	4621      	mov	r1, r4
 80120ae:	4638      	mov	r0, r7
 80120b0:	f7ff ff60 	bl	8011f74 <MDNS::CreateMDNSMessage(unsigned int)>
 80120b4:	4915      	ldr	r1, [pc, #84]	; (801210c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 80120b6:	4816      	ldr	r0, [pc, #88]	; (8012110 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 80120b8:	f831 2b04 	ldrh.w	r2, [r1], #4
 80120bc:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80120c0:	9300      	str	r3, [sp, #0]
 80120c2:	4b14      	ldr	r3, [pc, #80]	; (8012114 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x128>)
 80120c4:	7800      	ldrb	r0, [r0, #0]
 80120c6:	681b      	ldr	r3, [r3, #0]
 80120c8:	f7ff fc88 	bl	80119dc <udp_send>
 80120cc:	2001      	movs	r0, #1
 80120ce:	e010      	b.n	80120f2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x106>
 80120d0:	4608      	mov	r0, r1
 80120d2:	9103      	str	r1, [sp, #12]
 80120d4:	f7ff fd32 	bl	8011b3c <strlen>
 80120d8:	4683      	mov	fp, r0
 80120da:	4630      	mov	r0, r6
 80120dc:	f7ff fd2e 	bl	8011b3c <strlen>
 80120e0:	4458      	add	r0, fp
 80120e2:	3001      	adds	r0, #1
 80120e4:	f003 fa00 	bl	80154e8 <operator new[](unsigned int)>
 80120e8:	9903      	ldr	r1, [sp, #12]
 80120ea:	f845 0008 	str.w	r0, [r5, r8]
 80120ee:	e7a8      	b.n	8012042 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x56>
 80120f0:	2000      	movs	r0, #0
 80120f2:	b005      	add	sp, #20
 80120f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120f8:	2000f764 	andcs	pc, r0, r4, ror #14
 80120fc:	2000f994 	mulcs	r0, r4, r9
 8012100:	0801816f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, pc}
 8012104:	0801a21e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, pc}
 8012108:	0801a23b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sp, pc}
 801210c:	2000f788 	andcs	pc, r0, r8, lsl #15
 8012110:	2000001c 	andcs	r0, r0, ip, lsl r0
 8012114:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>

08012118 <MDNS::HandleRequest(unsigned short)>:
 8012118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801211c:	b0c5      	sub	sp, #276	; 0x114
 801211e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8012204 <MDNS::HandleRequest(unsigned short)+0xec>
 8012122:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 8012208 <MDNS::HandleRequest(unsigned short)+0xf0>
 8012126:	9103      	str	r1, [sp, #12]
 8012128:	4605      	mov	r5, r0
 801212a:	2700      	movs	r7, #0
 801212c:	f04f 080c 	mov.w	r8, #12
 8012130:	9b03      	ldr	r3, [sp, #12]
 8012132:	42bb      	cmp	r3, r7
 8012134:	d802      	bhi.n	801213c <MDNS::HandleRequest(unsigned short)+0x24>
 8012136:	b045      	add	sp, #276	; 0x114
 8012138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801213c:	f8da 1000 	ldr.w	r1, [sl]
 8012140:	aa04      	add	r2, sp, #16
 8012142:	4441      	add	r1, r8
 8012144:	4628      	mov	r0, r5
 8012146:	f7ff fd4f 	bl	8011be8 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 801214a:	f8da 2000 	ldr.w	r2, [sl]
 801214e:	4440      	add	r0, r8
 8012150:	1813      	adds	r3, r2, r0
 8012152:	f100 0804 	add.w	r8, r0, #4
 8012156:	885b      	ldrh	r3, [r3, #2]
 8012158:	ba5b      	rev16	r3, r3
 801215a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801215e:	2b01      	cmp	r3, #1
 8012160:	d13d      	bne.n	80121de <MDNS::HandleRequest(unsigned short)+0xc6>
 8012162:	5a14      	ldrh	r4, [r2, r0]
 8012164:	4b20      	ldr	r3, [pc, #128]	; (80121e8 <MDNS::HandleRequest(unsigned short)+0xd0>)
 8012166:	ba64      	rev16	r4, r4
 8012168:	6818      	ldr	r0, [r3, #0]
 801216a:	a904      	add	r1, sp, #16
 801216c:	b2a4      	uxth	r4, r4
 801216e:	f7ff fced 	bl	8011b4c <strcmp>
 8012172:	b968      	cbnz	r0, 8012190 <MDNS::HandleRequest(unsigned short)+0x78>
 8012174:	2c01      	cmp	r4, #1
 8012176:	d10b      	bne.n	8012190 <MDNS::HandleRequest(unsigned short)+0x78>
 8012178:	491c      	ldr	r1, [pc, #112]	; (80121ec <MDNS::HandleRequest(unsigned short)+0xd4>)
 801217a:	481d      	ldr	r0, [pc, #116]	; (80121f0 <MDNS::HandleRequest(unsigned short)+0xd8>)
 801217c:	f831 2b04 	ldrh.w	r2, [r1], #4
 8012180:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012184:	9300      	str	r3, [sp, #0]
 8012186:	4b1b      	ldr	r3, [pc, #108]	; (80121f4 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8012188:	7800      	ldrb	r0, [r0, #0]
 801218a:	681b      	ldr	r3, [r3, #0]
 801218c:	f7ff fc26 	bl	80119dc <udp_send>
 8012190:	4819      	ldr	r0, [pc, #100]	; (80121f8 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8012192:	4e1a      	ldr	r6, [pc, #104]	; (80121fc <MDNS::HandleRequest(unsigned short)+0xe4>)
 8012194:	a904      	add	r1, sp, #16
 8012196:	f7ff fcd9 	bl	8011b4c <strcmp>
 801219a:	f04f 0900 	mov.w	r9, #0
 801219e:	9002      	str	r0, [sp, #8]
 80121a0:	6833      	ldr	r3, [r6, #0]
 80121a2:	b1c3      	cbz	r3, 80121d6 <MDNS::HandleRequest(unsigned short)+0xbe>
 80121a4:	9b02      	ldr	r3, [sp, #8]
 80121a6:	b123      	cbz	r3, 80121b2 <MDNS::HandleRequest(unsigned short)+0x9a>
 80121a8:	6870      	ldr	r0, [r6, #4]
 80121aa:	a904      	add	r1, sp, #16
 80121ac:	f7ff fcce 	bl	8011b4c <strcmp>
 80121b0:	b988      	cbnz	r0, 80121d6 <MDNS::HandleRequest(unsigned short)+0xbe>
 80121b2:	2c0c      	cmp	r4, #12
 80121b4:	d10f      	bne.n	80121d6 <MDNS::HandleRequest(unsigned short)+0xbe>
 80121b6:	4649      	mov	r1, r9
 80121b8:	4628      	mov	r0, r5
 80121ba:	f7ff fedb 	bl	8011f74 <MDNS::CreateMDNSMessage(unsigned int)>
 80121be:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80121c2:	9300      	str	r3, [sp, #0]
 80121c4:	480a      	ldr	r0, [pc, #40]	; (80121f0 <MDNS::HandleRequest(unsigned short)+0xd8>)
 80121c6:	4b0b      	ldr	r3, [pc, #44]	; (80121f4 <MDNS::HandleRequest(unsigned short)+0xdc>)
 80121c8:	f8bb 2000 	ldrh.w	r2, [fp]
 80121cc:	681b      	ldr	r3, [r3, #0]
 80121ce:	490c      	ldr	r1, [pc, #48]	; (8012200 <MDNS::HandleRequest(unsigned short)+0xe8>)
 80121d0:	7800      	ldrb	r0, [r0, #0]
 80121d2:	f7ff fc03 	bl	80119dc <udp_send>
 80121d6:	3610      	adds	r6, #16
 80121d8:	f1b9 0f00 	cmp.w	r9, #0
 80121dc:	d001      	beq.n	80121e2 <MDNS::HandleRequest(unsigned short)+0xca>
 80121de:	3701      	adds	r7, #1
 80121e0:	e7a6      	b.n	8012130 <MDNS::HandleRequest(unsigned short)+0x18>
 80121e2:	f04f 0901 	mov.w	r9, #1
 80121e6:	e7db      	b.n	80121a0 <MDNS::HandleRequest(unsigned short)+0x88>
 80121e8:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80121ec:	2000f560 	andcs	pc, r0, r0, ror #10
 80121f0:	2000001c 	andcs	r0, r0, ip, lsl r0
 80121f4:	2000f55c 	andcs	pc, r0, ip, asr r5	; <UNPREDICTABLE>
 80121f8:	0801a229 	stmdaeq	r1, {r0, r3, r5, r9, sp, pc}
 80121fc:	2000f764 	andcs	pc, r0, r4, ror #14
 8012200:	2000f78c 	andcs	pc, r0, ip, lsl #15
 8012204:	2000f990 	mulcs	r0, r0, r9
 8012208:	2000f788 	andcs	pc, r0, r8, lsl #15

0801220c <MDNS::Parse()>:
 801220c:	4b08      	ldr	r3, [pc, #32]	; (8012230 <MDNS::Parse()+0x24>)
 801220e:	681a      	ldr	r2, [r3, #0]
 8012210:	8853      	ldrh	r3, [r2, #2]
 8012212:	ba5b      	rev16	r3, r3
 8012214:	b299      	uxth	r1, r3
 8012216:	041b      	lsls	r3, r3, #16
 8012218:	d408      	bmi.n	801222c <MDNS::Parse()+0x20>
 801221a:	0b89      	lsrs	r1, r1, #14
 801221c:	d106      	bne.n	801222c <MDNS::Parse()+0x20>
 801221e:	8891      	ldrh	r1, [r2, #4]
 8012220:	b28b      	uxth	r3, r1
 8012222:	b11b      	cbz	r3, 801222c <MDNS::Parse()+0x20>
 8012224:	ba49      	rev16	r1, r1
 8012226:	b289      	uxth	r1, r1
 8012228:	f7ff bf76 	b.w	8012118 <MDNS::HandleRequest(unsigned short)>
 801222c:	4770      	bx	lr
 801222e:	bf00      	nop
 8012230:	2000f990 	mulcs	r0, r0, r9

08012234 <MDNS::Run()>:
 8012234:	b538      	push	{r3, r4, r5, lr}
 8012236:	4d0c      	ldr	r5, [pc, #48]	; (8012268 <MDNS::Run()+0x34>)
 8012238:	490c      	ldr	r1, [pc, #48]	; (801226c <MDNS::Run()+0x38>)
 801223a:	4a0d      	ldr	r2, [pc, #52]	; (8012270 <MDNS::Run()+0x3c>)
 801223c:	4604      	mov	r4, r0
 801223e:	480d      	ldr	r0, [pc, #52]	; (8012274 <MDNS::Run()+0x40>)
 8012240:	462b      	mov	r3, r5
 8012242:	7800      	ldrb	r0, [r0, #0]
 8012244:	f7ff fba4 	bl	8011990 <udp_recv2>
 8012248:	4b0b      	ldr	r3, [pc, #44]	; (8012278 <MDNS::Run()+0x44>)
 801224a:	8829      	ldrh	r1, [r5, #0]
 801224c:	8018      	strh	r0, [r3, #0]
 801224e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012252:	4299      	cmp	r1, r3
 8012254:	d106      	bne.n	8012264 <MDNS::Run()+0x30>
 8012256:	280c      	cmp	r0, #12
 8012258:	d904      	bls.n	8012264 <MDNS::Run()+0x30>
 801225a:	4620      	mov	r0, r4
 801225c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012260:	f7ff bfd4 	b.w	801220c <MDNS::Parse()>
 8012264:	bd38      	pop	{r3, r4, r5, pc}
 8012266:	bf00      	nop
 8012268:	2000f558 	andcs	pc, r0, r8, asr r5	; <UNPREDICTABLE>
 801226c:	2000f990 	mulcs	r0, r0, r9
 8012270:	2000f554 	andcs	pc, r0, r4, asr r5	; <UNPREDICTABLE>
 8012274:	2000001c 	andcs	r0, r0, ip, lsl r0
 8012278:	2000f784 	andcs	pc, r0, r4, lsl #15

0801227c <MDNS::Print()>:
 801227c:	b510      	push	{r4, lr}
 801227e:	4816      	ldr	r0, [pc, #88]	; (80122d8 <MDNS::Print()+0x5c>)
 8012280:	f7f8 f88c 	bl	800a39c <printf>
 8012284:	4b15      	ldr	r3, [pc, #84]	; (80122dc <MDNS::Print()+0x60>)
 8012286:	681b      	ldr	r3, [r3, #0]
 8012288:	3301      	adds	r3, #1
 801228a:	d104      	bne.n	8012296 <MDNS::Print()+0x1a>
 801228c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012290:	4813      	ldr	r0, [pc, #76]	; (80122e0 <MDNS::Print()+0x64>)
 8012292:	f7f8 b883 	b.w	800a39c <printf>
 8012296:	4b13      	ldr	r3, [pc, #76]	; (80122e4 <MDNS::Print()+0x68>)
 8012298:	4c13      	ldr	r4, [pc, #76]	; (80122e8 <MDNS::Print()+0x6c>)
 801229a:	6819      	ldr	r1, [r3, #0]
 801229c:	4813      	ldr	r0, [pc, #76]	; (80122ec <MDNS::Print()+0x70>)
 801229e:	f7f8 f87d 	bl	800a39c <printf>
 80122a2:	6823      	ldr	r3, [r4, #0]
 80122a4:	b14b      	cbz	r3, 80122ba <MDNS::Print()+0x3e>
 80122a6:	4a12      	ldr	r2, [pc, #72]	; (80122f0 <MDNS::Print()+0x74>)
 80122a8:	68a3      	ldr	r3, [r4, #8]
 80122aa:	6861      	ldr	r1, [r4, #4]
 80122ac:	4811      	ldr	r0, [pc, #68]	; (80122f4 <MDNS::Print()+0x78>)
 80122ae:	2b00      	cmp	r3, #0
 80122b0:	bf08      	it	eq
 80122b2:	4613      	moveq	r3, r2
 80122b4:	89a2      	ldrh	r2, [r4, #12]
 80122b6:	f7f8 f871 	bl	800a39c <printf>
 80122ba:	6923      	ldr	r3, [r4, #16]
 80122bc:	b15b      	cbz	r3, 80122d6 <MDNS::Print()+0x5a>
 80122be:	69a3      	ldr	r3, [r4, #24]
 80122c0:	4a0b      	ldr	r2, [pc, #44]	; (80122f0 <MDNS::Print()+0x74>)
 80122c2:	6961      	ldr	r1, [r4, #20]
 80122c4:	480b      	ldr	r0, [pc, #44]	; (80122f4 <MDNS::Print()+0x78>)
 80122c6:	2b00      	cmp	r3, #0
 80122c8:	bf08      	it	eq
 80122ca:	4613      	moveq	r3, r2
 80122cc:	8ba2      	ldrh	r2, [r4, #28]
 80122ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122d2:	f7f8 b863 	b.w	800a39c <printf>
 80122d6:	bd10      	pop	{r4, pc}
 80122d8:	0801a246 	stmdaeq	r1, {r1, r2, r6, r9, sp, pc}
 80122dc:	2000001c 	andcs	r0, r0, ip, lsl r0
 80122e0:	0801a24c 	stmdaeq	r1, {r2, r3, r6, r9, sp, pc}
 80122e4:	2000f98c 	andcs	pc, r0, ip, lsl #19
 80122e8:	2000f764 	andcs	pc, r0, r4, ror #14
 80122ec:	0801a25a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sp, pc}
 80122f0:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 80122f4:	0801a266 	stmdaeq	r1, {r1, r2, r5, r6, r9, sp, pc}

080122f8 <strncpy.constprop.0.isra.0>:
 80122f8:	3901      	subs	r1, #1
 80122fa:	233f      	movs	r3, #63	; 0x3f
 80122fc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8012300:	b92a      	cbnz	r2, 801230e <strncpy.constprop.0.isra.0+0x16>
 8012302:	4403      	add	r3, r0
 8012304:	4298      	cmp	r0, r3
 8012306:	d006      	beq.n	8012316 <strncpy.constprop.0.isra.0+0x1e>
 8012308:	f800 2b01 	strb.w	r2, [r0], #1
 801230c:	e7fa      	b.n	8012304 <strncpy.constprop.0.isra.0+0xc>
 801230e:	3b01      	subs	r3, #1
 8012310:	f800 2b01 	strb.w	r2, [r0], #1
 8012314:	d1f2      	bne.n	80122fc <strncpy.constprop.0.isra.0+0x4>
 8012316:	4770      	bx	lr

08012318 <Network::Network()>:
 8012318:	4a11      	ldr	r2, [pc, #68]	; (8012360 <Network::Network()+0x48>)
 801231a:	2300      	movs	r3, #0
 801231c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8012320:	6010      	str	r0, [r2, #0]
 8012322:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 8012326:	2201      	movs	r2, #1
 8012328:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 801232c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012330:	e9c0 2100 	strd	r2, r1, [r0]
 8012334:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8012338:	490a      	ldr	r1, [pc, #40]	; (8012364 <Network::Network()+0x4c>)
 801233a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 801233e:	2200      	movs	r2, #0
 8012340:	6102      	str	r2, [r0, #16]
 8012342:	61c3      	str	r3, [r0, #28]
 8012344:	f880 3020 	strb.w	r3, [r0, #32]
 8012348:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 801234c:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 8012350:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012354:	f802 3f01 	strb.w	r3, [r2, #1]!
 8012358:	2b00      	cmp	r3, #0
 801235a:	d1f9      	bne.n	8012350 <Network::Network()+0x38>
 801235c:	4770      	bx	lr
 801235e:	bf00      	nop
 8012360:	2000f994 	mulcs	r0, r4, r9
 8012364:	0801a271 	stmdaeq	r1, {r0, r4, r5, r6, r9, sp, pc}

08012368 <Network::Shutdown()>:
 8012368:	b508      	push	{r3, lr}
 801236a:	f001 fc7d 	bl	8013c68 <network::display_emac_shutdown()>
 801236e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012372:	f7f5 bf67 	b.w	8008244 <net_shutdown>

08012376 <Network::Begin(unsigned short)>:
 8012376:	4608      	mov	r0, r1
 8012378:	f7ff ba9a 	b.w	80118b0 <udp_bind>

0801237c <Network::End(unsigned short)>:
 801237c:	4608      	mov	r0, r1
 801237e:	f7ff bab1 	b.w	80118e4 <udp_unbind>

08012382 <Network::MacAddressCopyTo(unsigned char*)>:
 8012382:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 8012386:	3901      	subs	r1, #1
 8012388:	30a5      	adds	r0, #165	; 0xa5
 801238a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 801238e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8012392:	4283      	cmp	r3, r0
 8012394:	d1f9      	bne.n	801238a <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8012396:	4770      	bx	lr

08012398 <Network::JoinGroup(int, unsigned int)>:
 8012398:	4610      	mov	r0, r2
 801239a:	f000 bffd 	b.w	8013398 <igmp_join>

0801239e <Network::LeaveGroup(int, unsigned int)>:
 801239e:	4610      	mov	r0, r2
 80123a0:	f001 b826 	b.w	80133f0 <igmp_leave>

080123a4 <Network::SetDefaultIp()>:
 80123a4:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80123a8:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 80123ac:	041b      	lsls	r3, r3, #16
 80123ae:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80123b2:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 80123b6:	3302      	adds	r3, #2
 80123b8:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 80123bc:	22ff      	movs	r2, #255	; 0xff
 80123be:	e9c0 3206 	strd	r3, r2, [r0, #24]
 80123c2:	6143      	str	r3, [r0, #20]
 80123c4:	4770      	bx	lr
	...

080123c8 <Network::Init(NetworkParamsStore*)>:
 80123c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123cc:	b0a5      	sub	sp, #148	; 0x94
 80123ce:	4604      	mov	r4, r0
 80123d0:	a80b      	add	r0, sp, #44	; 0x2c
 80123d2:	f000 facd 	bl	8012970 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80123d6:	a80b      	add	r0, sp, #44	; 0x2c
 80123d8:	f000 fad6 	bl	8012988 <NetworkParams::Load()>
 80123dc:	b110      	cbz	r0, 80123e4 <Network::Init(NetworkParamsStore*)+0x1c>
 80123de:	a80b      	add	r0, sp, #44	; 0x2c
 80123e0:	f000 fcad 	bl	8012d3e <NetworkParams::Dump()>
 80123e4:	f001 fc22 	bl	8013c2c <network::display_emac_start()>
 80123e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80123ea:	9308      	str	r3, [sp, #32]
 80123ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123ee:	9309      	str	r3, [sp, #36]	; 0x24
 80123f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80123f2:	930a      	str	r3, [sp, #40]	; 0x28
 80123f4:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80123f8:	7163      	strb	r3, [r4, #5]
 80123fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80123fc:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8012400:	bf18      	it	ne
 8012402:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8012406:	60e2      	str	r2, [r4, #12]
 8012408:	061b      	lsls	r3, r3, #24
 801240a:	bf4c      	ite	mi
 801240c:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 8012410:	2300      	movpl	r3, #0
 8012412:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8012416:	6123      	str	r3, [r4, #16]
 8012418:	4630      	mov	r0, r6
 801241a:	f005 f8d9 	bl	80175d0 <emac_start(unsigned char*)>
 801241e:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 8012422:	f104 0720 	add.w	r7, r4, #32
 8012426:	2b00      	cmp	r3, #0
 8012428:	f040 80c5 	bne.w	80125b6 <Network::Init(NetworkParamsStore*)+0x1ee>
 801242c:	4982      	ldr	r1, [pc, #520]	; (8012638 <Network::Init(NetworkParamsStore*)+0x270>)
 801242e:	f104 001f 	add.w	r0, r4, #31
 8012432:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012436:	1c5d      	adds	r5, r3, #1
 8012438:	2a00      	cmp	r2, #0
 801243a:	f040 80b8 	bne.w	80125ae <Network::Init(NetworkParamsStore*)+0x1e6>
 801243e:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8012442:	0910      	lsrs	r0, r2, #4
 8012444:	2a9f      	cmp	r2, #159	; 0x9f
 8012446:	f002 020f 	and.w	r2, r2, #15
 801244a:	bf94      	ite	ls
 801244c:	3030      	addls	r0, #48	; 0x30
 801244e:	3037      	addhi	r0, #55	; 0x37
 8012450:	18e1      	adds	r1, r4, r3
 8012452:	2a09      	cmp	r2, #9
 8012454:	4425      	add	r5, r4
 8012456:	bf94      	ite	ls
 8012458:	3230      	addls	r2, #48	; 0x30
 801245a:	3237      	addhi	r2, #55	; 0x37
 801245c:	f881 0020 	strb.w	r0, [r1, #32]
 8012460:	f885 2020 	strb.w	r2, [r5, #32]
 8012464:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 8012468:	f103 0e02 	add.w	lr, r3, #2
 801246c:	0910      	lsrs	r0, r2, #4
 801246e:	2a9f      	cmp	r2, #159	; 0x9f
 8012470:	eb04 050e 	add.w	r5, r4, lr
 8012474:	f002 020f 	and.w	r2, r2, #15
 8012478:	bf94      	ite	ls
 801247a:	3030      	addls	r0, #48	; 0x30
 801247c:	3037      	addhi	r0, #55	; 0x37
 801247e:	f103 0c03 	add.w	ip, r3, #3
 8012482:	f885 0020 	strb.w	r0, [r5, #32]
 8012486:	2a09      	cmp	r2, #9
 8012488:	eb04 000c 	add.w	r0, r4, ip
 801248c:	bf94      	ite	ls
 801248e:	3230      	addls	r2, #48	; 0x30
 8012490:	3237      	addhi	r2, #55	; 0x37
 8012492:	f880 2020 	strb.w	r2, [r0, #32]
 8012496:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 801249a:	1d1d      	adds	r5, r3, #4
 801249c:	0910      	lsrs	r0, r2, #4
 801249e:	2a9f      	cmp	r2, #159	; 0x9f
 80124a0:	f103 0305 	add.w	r3, r3, #5
 80124a4:	f002 020f 	and.w	r2, r2, #15
 80124a8:	bf94      	ite	ls
 80124aa:	3030      	addls	r0, #48	; 0x30
 80124ac:	3037      	addhi	r0, #55	; 0x37
 80124ae:	4423      	add	r3, r4
 80124b0:	2a09      	cmp	r2, #9
 80124b2:	4425      	add	r5, r4
 80124b4:	bf94      	ite	ls
 80124b6:	3230      	addls	r2, #48	; 0x30
 80124b8:	3237      	addhi	r2, #55	; 0x37
 80124ba:	f885 0020 	strb.w	r0, [r5, #32]
 80124be:	f883 2020 	strb.w	r2, [r3, #32]
 80124c2:	2300      	movs	r3, #0
 80124c4:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 80124c8:	f000 fff5 	bl	80134b6 <net::link_register_read()>
 80124cc:	7963      	ldrb	r3, [r4, #5]
 80124ce:	6020      	str	r0, [r4, #0]
 80124d0:	2800      	cmp	r0, #0
 80124d2:	f040 809b 	bne.w	801260c <Network::Init(NetworkParamsStore*)+0x244>
 80124d6:	2b00      	cmp	r3, #0
 80124d8:	f040 80a9 	bne.w	801262e <Network::Init(NetworkParamsStore*)+0x266>
 80124dc:	9b08      	ldr	r3, [sp, #32]
 80124de:	2b00      	cmp	r3, #0
 80124e0:	d172      	bne.n	80125c8 <Network::Init(NetworkParamsStore*)+0x200>
 80124e2:	4620      	mov	r0, r4
 80124e4:	f7ff ff5e 	bl	80123a4 <Network::SetDefaultIp()>
 80124e8:	6963      	ldr	r3, [r4, #20]
 80124ea:	69e2      	ldr	r2, [r4, #28]
 80124ec:	9308      	str	r3, [sp, #32]
 80124ee:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 80124f2:	f104 0905 	add.w	r9, r4, #5
 80124f6:	f104 0a07 	add.w	sl, r4, #7
 80124fa:	464b      	mov	r3, r9
 80124fc:	f8cd a000 	str.w	sl, [sp]
 8012500:	463a      	mov	r2, r7
 8012502:	a908      	add	r1, sp, #32
 8012504:	4630      	mov	r0, r6
 8012506:	f7f5 fe51 	bl	80081ac <net_init>
 801250a:	79e3      	ldrb	r3, [r4, #7]
 801250c:	b113      	cbz	r3, 8012514 <Network::Init(NetworkParamsStore*)+0x14c>
 801250e:	2004      	movs	r0, #4
 8012510:	f001 fbb0 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012514:	f89d 508d 	ldrb.w	r5, [sp, #141]	; 0x8d
 8012518:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 801251c:	9302      	str	r3, [sp, #8]
 801251e:	ebc5 1505 	rsb	r5, r5, r5, lsl #4
 8012522:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012526:	9303      	str	r3, [sp, #12]
 8012528:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8012640 <Network::Init(NetworkParamsStore*)+0x278>
 801252c:	f8df b114 	ldr.w	fp, [pc, #276]	; 8012644 <Network::Init(NetworkParamsStore*)+0x27c>
 8012530:	00ab      	lsls	r3, r5, #2
 8012532:	9305      	str	r3, [sp, #20]
 8012534:	79e3      	ldrb	r3, [r4, #7]
 8012536:	b37b      	cbz	r3, 8012598 <Network::Init(NetworkParamsStore*)+0x1d0>
 8012538:	9b02      	ldr	r3, [sp, #8]
 801253a:	b36b      	cbz	r3, 8012598 <Network::Init(NetworkParamsStore*)+0x1d0>
 801253c:	9b03      	ldr	r3, [sp, #12]
 801253e:	b35b      	cbz	r3, 8012598 <Network::Init(NetworkParamsStore*)+0x1d0>
 8012540:	2104      	movs	r1, #4
 8012542:	f8d8 0000 	ldr.w	r0, [r8]
 8012546:	f002 fecd 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 801254a:	2003      	movs	r0, #3
 801254c:	f001 fb92 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012550:	2000      	movs	r0, #0
 8012552:	f003 f9a5 	bl	80158a0 <time>
 8012556:	9004      	str	r0, [sp, #16]
 8012558:	2000      	movs	r0, #0
 801255a:	f003 f9a1 	bl	80158a0 <time>
 801255e:	9b04      	ldr	r3, [sp, #16]
 8012560:	4936      	ldr	r1, [pc, #216]	; (801263c <Network::Init(NetworkParamsStore*)+0x274>)
 8012562:	1ac0      	subs	r0, r0, r3
 8012564:	9b05      	ldr	r3, [sp, #20]
 8012566:	4298      	cmp	r0, r3
 8012568:	db36      	blt.n	80125d8 <Network::Init(NetworkParamsStore*)+0x210>
 801256a:	2001      	movs	r0, #1
 801256c:	f001 fb82 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012570:	f8d8 0000 	ldr.w	r0, [r8]
 8012574:	2101      	movs	r1, #1
 8012576:	f002 feb5 	bl	80152e4 <LedBlink::SetMode(ledblink::Mode)>
 801257a:	2301      	movs	r3, #1
 801257c:	7163      	strb	r3, [r4, #5]
 801257e:	2300      	movs	r3, #0
 8012580:	71e3      	strb	r3, [r4, #7]
 8012582:	f8cd a000 	str.w	sl, [sp]
 8012586:	464b      	mov	r3, r9
 8012588:	463a      	mov	r2, r7
 801258a:	a908      	add	r1, sp, #32
 801258c:	4630      	mov	r0, r6
 801258e:	f7f5 fe0d 	bl	80081ac <net_init>
 8012592:	7963      	ldrb	r3, [r4, #5]
 8012594:	2b00      	cmp	r3, #0
 8012596:	d0cd      	beq.n	8012534 <Network::Init(NetworkParamsStore*)+0x16c>
 8012598:	9b08      	ldr	r3, [sp, #32]
 801259a:	6163      	str	r3, [r4, #20]
 801259c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801259e:	61e3      	str	r3, [r4, #28]
 80125a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80125a2:	61a3      	str	r3, [r4, #24]
 80125a4:	f001 fb48 	bl	8013c38 <network::display_ip()>
 80125a8:	b025      	add	sp, #148	; 0x94
 80125aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ae:	f800 2f01 	strb.w	r2, [r0, #1]!
 80125b2:	462b      	mov	r3, r5
 80125b4:	e73d      	b.n	8012432 <Network::Init(NetworkParamsStore*)+0x6a>
 80125b6:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80125ba:	4638      	mov	r0, r7
 80125bc:	f7ff fe9c 	bl	80122f8 <strncpy.constprop.0.isra.0>
 80125c0:	2300      	movs	r3, #0
 80125c2:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80125c6:	e77f      	b.n	80124c8 <Network::Init(NetworkParamsStore*)+0x100>
 80125c8:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80125cc:	69e1      	ldr	r1, [r4, #28]
 80125ce:	4053      	eors	r3, r2
 80125d0:	420b      	tst	r3, r1
 80125d2:	bf18      	it	ne
 80125d4:	920a      	strne	r2, [sp, #40]	; 0x28
 80125d6:	e78c      	b.n	80124f2 <Network::Init(NetworkParamsStore*)+0x12a>
 80125d8:	f8d8 3000 	ldr.w	r3, [r8]
 80125dc:	68da      	ldr	r2, [r3, #12]
 80125de:	2a00      	cmp	r2, #0
 80125e0:	d0ba      	beq.n	8012558 <Network::Init(NetworkParamsStore*)+0x190>
 80125e2:	f8db 0000 	ldr.w	r0, [fp]
 80125e6:	695d      	ldr	r5, [r3, #20]
 80125e8:	1b40      	subs	r0, r0, r5
 80125ea:	4282      	cmp	r2, r0
 80125ec:	d8b4      	bhi.n	8012558 <Network::Init(NetworkParamsStore*)+0x190>
 80125ee:	f8db 0000 	ldr.w	r0, [fp]
 80125f2:	6158      	str	r0, [r3, #20]
 80125f4:	6918      	ldr	r0, [r3, #16]
 80125f6:	2801      	cmp	r0, #1
 80125f8:	f080 0201 	eor.w	r2, r0, #1
 80125fc:	611a      	str	r2, [r3, #16]
 80125fe:	bf1a      	itte	ne
 8012600:	2301      	movne	r3, #1
 8012602:	f8c1 3818 	strne.w	r3, [r1, #2072]	; 0x818
 8012606:	f8c1 0828 	streq.w	r0, [r1, #2088]	; 0x828
 801260a:	e7a5      	b.n	8012558 <Network::Init(NetworkParamsStore*)+0x190>
 801260c:	b11b      	cbz	r3, 8012616 <Network::Init(NetworkParamsStore*)+0x24e>
 801260e:	2300      	movs	r3, #0
 8012610:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8012614:	9308      	str	r3, [sp, #32]
 8012616:	2300      	movs	r3, #0
 8012618:	f88d 301f 	strb.w	r3, [sp, #31]
 801261c:	f10d 031f 	add.w	r3, sp, #31
 8012620:	9300      	str	r3, [sp, #0]
 8012622:	463a      	mov	r2, r7
 8012624:	a908      	add	r1, sp, #32
 8012626:	4630      	mov	r0, r6
 8012628:	f7f5 fdc0 	bl	80081ac <net_init>
 801262c:	e7b4      	b.n	8012598 <Network::Init(NetworkParamsStore*)+0x1d0>
 801262e:	2001      	movs	r0, #1
 8012630:	f001 fb20 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012634:	e75d      	b.n	80124f2 <Network::Init(NetworkParamsStore*)+0x12a>
 8012636:	bf00      	nop
 8012638:	0801a276 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sp, pc}
 801263c:	40020000 	andmi	r0, r2, r0
 8012640:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 8012644:	2000fd94 	mulcs	r0, r4, sp

08012648 <Network::SetIp(unsigned int)>:
 8012648:	7943      	ldrb	r3, [r0, #5]
 801264a:	b570      	push	{r4, r5, r6, lr}
 801264c:	4604      	mov	r4, r0
 801264e:	460d      	mov	r5, r1
 8012650:	2600      	movs	r6, #0
 8012652:	b113      	cbz	r3, 801265a <Network::SetIp(unsigned int)+0x12>
 8012654:	7146      	strb	r6, [r0, #5]
 8012656:	f7fe feb3 	bl	80113c0 <net_dhcp_release>
 801265a:	71e6      	strb	r6, [r4, #7]
 801265c:	b95d      	cbnz	r5, 8012676 <Network::SetIp(unsigned int)+0x2e>
 801265e:	4620      	mov	r0, r4
 8012660:	f7ff fea0 	bl	80123a4 <Network::SetDefaultIp()>
 8012664:	6960      	ldr	r0, [r4, #20]
 8012666:	f7fe fe6f 	bl	8011348 <net_set_ip>
 801266a:	f001 fae5 	bl	8013c38 <network::display_ip()>
 801266e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012672:	f001 bae7 	b.w	8013c44 <network::display_netmask()>
 8012676:	4628      	mov	r0, r5
 8012678:	f7fe fe66 	bl	8011348 <net_set_ip>
 801267c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012680:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8012684:	2800      	cmp	r0, #0
 8012686:	d0f0      	beq.n	801266a <Network::SetIp(unsigned int)+0x22>
 8012688:	6803      	ldr	r3, [r0, #0]
 801268a:	4629      	mov	r1, r5
 801268c:	689b      	ldr	r3, [r3, #8]
 801268e:	4798      	blx	r3
 8012690:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012694:	6803      	ldr	r3, [r0, #0]
 8012696:	2100      	movs	r1, #0
 8012698:	699b      	ldr	r3, [r3, #24]
 801269a:	4798      	blx	r3
 801269c:	e7e5      	b.n	801266a <Network::SetIp(unsigned int)+0x22>

0801269e <Network::SetNetmask(unsigned int)>:
 801269e:	69c2      	ldr	r2, [r0, #28]
 80126a0:	428a      	cmp	r2, r1
 80126a2:	b508      	push	{r3, lr}
 80126a4:	d00c      	beq.n	80126c0 <Network::SetNetmask(unsigned int)+0x22>
 80126a6:	61c1      	str	r1, [r0, #28]
 80126a8:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80126ac:	b110      	cbz	r0, 80126b4 <Network::SetNetmask(unsigned int)+0x16>
 80126ae:	6803      	ldr	r3, [r0, #0]
 80126b0:	68db      	ldr	r3, [r3, #12]
 80126b2:	4798      	blx	r3
 80126b4:	f001 fac0 	bl	8013c38 <network::display_ip()>
 80126b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80126bc:	f001 bac2 	b.w	8013c44 <network::display_netmask()>
 80126c0:	bd08      	pop	{r3, pc}

080126c2 <Network::SetHostName(char const*)>:
 80126c2:	b538      	push	{r3, r4, r5, lr}
 80126c4:	4604      	mov	r4, r0
 80126c6:	f100 0520 	add.w	r5, r0, #32
 80126ca:	4628      	mov	r0, r5
 80126cc:	f7ff fe14 	bl	80122f8 <strncpy.constprop.0.isra.0>
 80126d0:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80126d4:	2300      	movs	r3, #0
 80126d6:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80126da:	b158      	cbz	r0, 80126f4 <Network::SetHostName(char const*)+0x32>
 80126dc:	6803      	ldr	r3, [r0, #0]
 80126de:	695c      	ldr	r4, [r3, #20]
 80126e0:	462b      	mov	r3, r5
 80126e2:	461a      	mov	r2, r3
 80126e4:	3301      	adds	r3, #1
 80126e6:	7811      	ldrb	r1, [r2, #0]
 80126e8:	2900      	cmp	r1, #0
 80126ea:	d1fa      	bne.n	80126e2 <Network::SetHostName(char const*)+0x20>
 80126ec:	1b52      	subs	r2, r2, r5
 80126ee:	b292      	uxth	r2, r2
 80126f0:	4629      	mov	r1, r5
 80126f2:	47a0      	blx	r4
 80126f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80126f8:	f001 bab0 	b.w	8013c5c <network::display_hostname()>

080126fc <Network::SetZeroconf()>:
 80126fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80126fe:	4604      	mov	r4, r0
 8012700:	a801      	add	r0, sp, #4
 8012702:	f7fe fe67 	bl	80113d4 <net_set_zeroconf>
 8012706:	71e0      	strb	r0, [r4, #7]
 8012708:	b170      	cbz	r0, 8012728 <Network::SetZeroconf()+0x2c>
 801270a:	9b01      	ldr	r3, [sp, #4]
 801270c:	6163      	str	r3, [r4, #20]
 801270e:	9b02      	ldr	r3, [sp, #8]
 8012710:	61e3      	str	r3, [r4, #28]
 8012712:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012716:	9b03      	ldr	r3, [sp, #12]
 8012718:	61a3      	str	r3, [r4, #24]
 801271a:	2300      	movs	r3, #0
 801271c:	7163      	strb	r3, [r4, #5]
 801271e:	b118      	cbz	r0, 8012728 <Network::SetZeroconf()+0x2c>
 8012720:	6803      	ldr	r3, [r0, #0]
 8012722:	2101      	movs	r1, #1
 8012724:	699b      	ldr	r3, [r3, #24]
 8012726:	4798      	blx	r3
 8012728:	f001 fa86 	bl	8013c38 <network::display_ip()>
 801272c:	f001 fa8a 	bl	8013c44 <network::display_netmask()>
 8012730:	79e0      	ldrb	r0, [r4, #7]
 8012732:	b004      	add	sp, #16
 8012734:	bd10      	pop	{r4, pc}
	...

08012738 <Network::EnableDhcp()>:
 8012738:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801273a:	4d21      	ldr	r5, [pc, #132]	; (80127c0 <Network::EnableDhcp()+0x88>)
 801273c:	682b      	ldr	r3, [r5, #0]
 801273e:	781e      	ldrb	r6, [r3, #0]
 8012740:	4604      	mov	r4, r0
 8012742:	b136      	cbz	r6, 8012752 <Network::EnableDhcp()+0x1a>
 8012744:	2200      	movs	r2, #0
 8012746:	701a      	strb	r2, [r3, #0]
 8012748:	2104      	movs	r1, #4
 801274a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801274e:	f003 fe6f 	bl	8016430 <fwdgt_config>
 8012752:	2001      	movs	r0, #1
 8012754:	f001 fa8e 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012758:	1de2      	adds	r2, r4, #7
 801275a:	f104 0120 	add.w	r1, r4, #32
 801275e:	a801      	add	r0, sp, #4
 8012760:	f7fe fe02 	bl	8011368 <net_set_dhcp>
 8012764:	79e3      	ldrb	r3, [r4, #7]
 8012766:	7160      	strb	r0, [r4, #5]
 8012768:	b33b      	cbz	r3, 80127ba <Network::EnableDhcp()+0x82>
 801276a:	2004      	movs	r0, #4
 801276c:	f001 fa82 	bl	8013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8012770:	b16e      	cbz	r6, 801278e <Network::EnableDhcp()+0x56>
 8012772:	2102      	movs	r1, #2
 8012774:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012778:	682d      	ldr	r5, [r5, #0]
 801277a:	f003 fe59 	bl	8016430 <fwdgt_config>
 801277e:	2801      	cmp	r0, #1
 8012780:	bf0c      	ite	eq
 8012782:	2301      	moveq	r3, #1
 8012784:	2300      	movne	r3, #0
 8012786:	702b      	strb	r3, [r5, #0]
 8012788:	d101      	bne.n	801278e <Network::EnableDhcp()+0x56>
 801278a:	f003 fe41 	bl	8016410 <fwdgt_enable>
 801278e:	9b01      	ldr	r3, [sp, #4]
 8012790:	6163      	str	r3, [r4, #20]
 8012792:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8012796:	9b02      	ldr	r3, [sp, #8]
 8012798:	61e3      	str	r3, [r4, #28]
 801279a:	9b03      	ldr	r3, [sp, #12]
 801279c:	61a3      	str	r3, [r4, #24]
 801279e:	b118      	cbz	r0, 80127a8 <Network::EnableDhcp()+0x70>
 80127a0:	6803      	ldr	r3, [r0, #0]
 80127a2:	7961      	ldrb	r1, [r4, #5]
 80127a4:	699b      	ldr	r3, [r3, #24]
 80127a6:	4798      	blx	r3
 80127a8:	f001 fa46 	bl	8013c38 <network::display_ip()>
 80127ac:	f001 fa4a 	bl	8013c44 <network::display_netmask()>
 80127b0:	f001 fa4e 	bl	8013c50 <network::display_gateway()>
 80127b4:	7960      	ldrb	r0, [r4, #5]
 80127b6:	b004      	add	sp, #16
 80127b8:	bd70      	pop	{r4, r5, r6, pc}
 80127ba:	2002      	movs	r0, #2
 80127bc:	e7d6      	b.n	801276c <Network::EnableDhcp()+0x34>
 80127be:	bf00      	nop
 80127c0:	2000fd80 	andcs	pc, r0, r0, lsl #27

080127c4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 80127c4:	b109      	cbz	r1, 80127ca <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 80127c6:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 80127ca:	b10a      	cbz	r2, 80127d0 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 80127cc:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 80127d0:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 80127d4:	f043 0303 	orr.w	r3, r3, #3
 80127d8:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 80127dc:	4770      	bx	lr

080127de <Network::ApplyQueuedConfig()>:
 80127de:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 80127e2:	b510      	push	{r4, lr}
 80127e4:	4604      	mov	r4, r0
 80127e6:	b3c3      	cbz	r3, 801285a <Network::ApplyQueuedConfig()+0x7c>
 80127e8:	079a      	lsls	r2, r3, #30
 80127ea:	d01a      	beq.n	8012822 <Network::ApplyQueuedConfig()+0x44>
 80127ec:	079b      	lsls	r3, r3, #30
 80127ee:	d509      	bpl.n	8012804 <Network::ApplyQueuedConfig()+0x26>
 80127f0:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 80127f4:	f7ff ff53 	bl	801269e <Network::SetNetmask(unsigned int)>
 80127f8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80127fc:	f023 0302 	bic.w	r3, r3, #2
 8012800:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012804:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012808:	07d9      	lsls	r1, r3, #31
 801280a:	d50a      	bpl.n	8012822 <Network::ApplyQueuedConfig()+0x44>
 801280c:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8012810:	4620      	mov	r0, r4
 8012812:	f7ff ff19 	bl	8012648 <Network::SetIp(unsigned int)>
 8012816:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801281a:	f023 0301 	bic.w	r3, r3, #1
 801281e:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012822:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012826:	075a      	lsls	r2, r3, #29
 8012828:	d508      	bpl.n	801283c <Network::ApplyQueuedConfig()+0x5e>
 801282a:	4620      	mov	r0, r4
 801282c:	f7ff ff84 	bl	8012738 <Network::EnableDhcp()>
 8012830:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012834:	f023 0304 	bic.w	r3, r3, #4
 8012838:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 801283c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8012840:	071b      	lsls	r3, r3, #28
 8012842:	d508      	bpl.n	8012856 <Network::ApplyQueuedConfig()+0x78>
 8012844:	4620      	mov	r0, r4
 8012846:	f7ff ff59 	bl	80126fc <Network::SetZeroconf()>
 801284a:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801284e:	f023 0308 	bic.w	r3, r3, #8
 8012852:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8012856:	2001      	movs	r0, #1
 8012858:	e000      	b.n	801285c <Network::ApplyQueuedConfig()+0x7e>
 801285a:	4618      	mov	r0, r3
 801285c:	bd10      	pop	{r4, pc}
	...

08012860 <Network::Print()>:
 8012860:	b530      	push	{r4, r5, lr}
 8012862:	4604      	mov	r4, r0
 8012864:	b085      	sub	sp, #20
 8012866:	4832      	ldr	r0, [pc, #200]	; (8012930 <Network::Print()+0xd0>)
 8012868:	f7f7 fd98 	bl	800a39c <printf>
 801286c:	f104 0120 	add.w	r1, r4, #32
 8012870:	4830      	ldr	r0, [pc, #192]	; (8012934 <Network::Print()+0xd4>)
 8012872:	f7f7 fd93 	bl	800a39c <printf>
 8012876:	68a1      	ldr	r1, [r4, #8]
 8012878:	482f      	ldr	r0, [pc, #188]	; (8012938 <Network::Print()+0xd8>)
 801287a:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 801287e:	f7f7 fd8d 	bl	800a39c <printf>
 8012882:	69e0      	ldr	r0, [r4, #28]
 8012884:	6965      	ldr	r5, [r4, #20]
 8012886:	f005 f965 	bl	8017b54 <__popcountsi2>
 801288a:	0e2b      	lsrs	r3, r5, #24
 801288c:	9001      	str	r0, [sp, #4]
 801288e:	9300      	str	r3, [sp, #0]
 8012890:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8012894:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8012898:	b2e9      	uxtb	r1, r5
 801289a:	4828      	ldr	r0, [pc, #160]	; (801293c <Network::Print()+0xdc>)
 801289c:	f7f7 fd7e 	bl	800a39c <printf>
 80128a0:	69e1      	ldr	r1, [r4, #28]
 80128a2:	4827      	ldr	r0, [pc, #156]	; (8012940 <Network::Print()+0xe0>)
 80128a4:	0e0b      	lsrs	r3, r1, #24
 80128a6:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80128aa:	9300      	str	r3, [sp, #0]
 80128ac:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80128b0:	b2c9      	uxtb	r1, r1
 80128b2:	f7f7 fd73 	bl	800a39c <printf>
 80128b6:	69a1      	ldr	r1, [r4, #24]
 80128b8:	4822      	ldr	r0, [pc, #136]	; (8012944 <Network::Print()+0xe4>)
 80128ba:	0e0b      	lsrs	r3, r1, #24
 80128bc:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80128c0:	9300      	str	r3, [sp, #0]
 80128c2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80128c6:	b2c9      	uxtb	r1, r1
 80128c8:	f7f7 fd68 	bl	800a39c <printf>
 80128cc:	69e3      	ldr	r3, [r4, #28]
 80128ce:	6961      	ldr	r1, [r4, #20]
 80128d0:	481d      	ldr	r0, [pc, #116]	; (8012948 <Network::Print()+0xe8>)
 80128d2:	ea61 0103 	orn	r1, r1, r3
 80128d6:	0e0b      	lsrs	r3, r1, #24
 80128d8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80128dc:	9300      	str	r3, [sp, #0]
 80128de:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80128e2:	b2c9      	uxtb	r1, r1
 80128e4:	f7f7 fd5a 	bl	800a39c <printf>
 80128e8:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 80128ec:	9302      	str	r3, [sp, #8]
 80128ee:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 80128f2:	9301      	str	r3, [sp, #4]
 80128f4:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 80128f8:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 80128fc:	9300      	str	r3, [sp, #0]
 80128fe:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8012902:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8012906:	4811      	ldr	r0, [pc, #68]	; (801294c <Network::Print()+0xec>)
 8012908:	f7f7 fd48 	bl	800a39c <printf>
 801290c:	4b10      	ldr	r3, [pc, #64]	; (8012950 <Network::Print()+0xf0>)
 801290e:	681b      	ldr	r3, [r3, #0]
 8012910:	79da      	ldrb	r2, [r3, #7]
 8012912:	b952      	cbnz	r2, 801292a <Network::Print()+0xca>
 8012914:	795b      	ldrb	r3, [r3, #5]
 8012916:	2b00      	cmp	r3, #0
 8012918:	bf14      	ite	ne
 801291a:	2144      	movne	r1, #68	; 0x44
 801291c:	2153      	moveq	r1, #83	; 0x53
 801291e:	480d      	ldr	r0, [pc, #52]	; (8012954 <Network::Print()+0xf4>)
 8012920:	b005      	add	sp, #20
 8012922:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012926:	f7f7 bd39 	b.w	800a39c <printf>
 801292a:	215a      	movs	r1, #90	; 0x5a
 801292c:	e7f7      	b.n	801291e <Network::Print()+0xbe>
 801292e:	bf00      	nop
 8012930:	0801a282 	stmdaeq	r1, {r1, r7, r9, sp, pc}
 8012934:	0801a28b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sp, pc}
 8012938:	0801a29c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sp, pc}
 801293c:	0801a2b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sp, pc}
 8012940:	0801a2ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sp, pc}
 8012944:	0801a2e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sp, pc}
 8012948:	0801a302 	stmdaeq	r1, {r1, r8, r9, sp, pc}
 801294c:	0801a31c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sp, pc}
 8012950:	2000f994 	mulcs	r0, r4, r9
 8012954:	0801a348 	stmdaeq	r1, {r3, r6, r8, r9, sp, pc}

08012958 <Network::TcpBegin(unsigned short)>:
 8012958:	4608      	mov	r0, r1
 801295a:	f7fe becb 	b.w	80116f4 <tcp_begin>

0801295e <Network::TcpRead(int, unsigned char const**)>:
 801295e:	4608      	mov	r0, r1
 8012960:	4611      	mov	r1, r2
 8012962:	f7fe bf13 	b.w	801178c <tcp_read>

08012966 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8012966:	4608      	mov	r0, r1
 8012968:	4611      	mov	r1, r2
 801296a:	461a      	mov	r2, r3
 801296c:	f7fe bee0 	b.w	8011730 <tcp_write>

08012970 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8012970:	b510      	push	{r4, lr}
 8012972:	225e      	movs	r2, #94	; 0x5e
 8012974:	4604      	mov	r4, r0
 8012976:	f840 1b04 	str.w	r1, [r0], #4
 801297a:	2100      	movs	r1, #0
 801297c:	f002 fe88 	bl	8015690 <memset>
 8012980:	2301      	movs	r3, #1
 8012982:	7623      	strb	r3, [r4, #24]
 8012984:	4620      	mov	r0, r4
 8012986:	bd10      	pop	{r4, pc}

08012988 <NetworkParams::Load()>:
 8012988:	b508      	push	{r3, lr}
 801298a:	2300      	movs	r3, #0
 801298c:	4601      	mov	r1, r0
 801298e:	6043      	str	r3, [r0, #4]
 8012990:	6800      	ldr	r0, [r0, #0]
 8012992:	b120      	cbz	r0, 801299e <NetworkParams::Load()+0x16>
 8012994:	6803      	ldr	r3, [r0, #0]
 8012996:	3104      	adds	r1, #4
 8012998:	68db      	ldr	r3, [r3, #12]
 801299a:	4798      	blx	r3
 801299c:	2001      	movs	r0, #1
 801299e:	bd08      	pop	{r3, pc}

080129a0 <NetworkParams::Load(char const*, unsigned int)>:
 80129a0:	6803      	ldr	r3, [r0, #0]
 80129a2:	b1d3      	cbz	r3, 80129da <NetworkParams::Load(char const*, unsigned int)+0x3a>
 80129a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80129a6:	2300      	movs	r3, #0
 80129a8:	6043      	str	r3, [r0, #4]
 80129aa:	4604      	mov	r4, r0
 80129ac:	460d      	mov	r5, r1
 80129ae:	4616      	mov	r6, r2
 80129b0:	490a      	ldr	r1, [pc, #40]	; (80129dc <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 80129b2:	4602      	mov	r2, r0
 80129b4:	4668      	mov	r0, sp
 80129b6:	f001 ffc3 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80129ba:	4632      	mov	r2, r6
 80129bc:	4629      	mov	r1, r5
 80129be:	4668      	mov	r0, sp
 80129c0:	f001 ffc2 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 80129c4:	4621      	mov	r1, r4
 80129c6:	f851 0b04 	ldr.w	r0, [r1], #4
 80129ca:	6803      	ldr	r3, [r0, #0]
 80129cc:	689b      	ldr	r3, [r3, #8]
 80129ce:	4798      	blx	r3
 80129d0:	4668      	mov	r0, sp
 80129d2:	f001 ffb8 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 80129d6:	b002      	add	sp, #8
 80129d8:	bd70      	pop	{r4, r5, r6, pc}
 80129da:	4770      	bx	lr
 80129dc:	08012b0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, fp, sp}

080129e0 <NetworkParams::callbackFunction(char const*)>:
 80129e0:	b530      	push	{r4, r5, lr}
 80129e2:	460d      	mov	r5, r1
 80129e4:	b085      	sub	sp, #20
 80129e6:	4604      	mov	r4, r0
 80129e8:	4942      	ldr	r1, [pc, #264]	; (8012af4 <NetworkParams::callbackFunction(char const*)+0x114>)
 80129ea:	f10d 0207 	add.w	r2, sp, #7
 80129ee:	4628      	mov	r0, r5
 80129f0:	f002 f8db 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80129f4:	b978      	cbnz	r0, 8012a16 <NetworkParams::callbackFunction(char const*)+0x36>
 80129f6:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80129fa:	6863      	ldr	r3, [r4, #4]
 80129fc:	b142      	cbz	r2, 8012a10 <NetworkParams::callbackFunction(char const*)+0x30>
 80129fe:	f023 0301 	bic.w	r3, r3, #1
 8012a02:	3a00      	subs	r2, #0
 8012a04:	bf18      	it	ne
 8012a06:	2201      	movne	r2, #1
 8012a08:	6063      	str	r3, [r4, #4]
 8012a0a:	7622      	strb	r2, [r4, #24]
 8012a0c:	b005      	add	sp, #20
 8012a0e:	bd30      	pop	{r4, r5, pc}
 8012a10:	f043 0301 	orr.w	r3, r3, #1
 8012a14:	e7f5      	b.n	8012a02 <NetworkParams::callbackFunction(char const*)+0x22>
 8012a16:	4938      	ldr	r1, [pc, #224]	; (8012af8 <NetworkParams::callbackFunction(char const*)+0x118>)
 8012a18:	f10d 0207 	add.w	r2, sp, #7
 8012a1c:	4628      	mov	r0, r5
 8012a1e:	f002 f8c4 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012a22:	b980      	cbnz	r0, 8012a46 <NetworkParams::callbackFunction(char const*)+0x66>
 8012a24:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012a28:	6863      	ldr	r3, [r4, #4]
 8012a2a:	1e51      	subs	r1, r2, #1
 8012a2c:	2904      	cmp	r1, #4
 8012a2e:	bf97      	itett	ls
 8012a30:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8012a34:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8012a38:	6063      	strls	r3, [r4, #4]
 8012a3a:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8012a3e:	bf84      	itt	hi
 8012a40:	6063      	strhi	r3, [r4, #4]
 8012a42:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 8012a46:	492d      	ldr	r1, [pc, #180]	; (8012afc <NetworkParams::callbackFunction(char const*)+0x11c>)
 8012a48:	aa02      	add	r2, sp, #8
 8012a4a:	4628      	mov	r0, r5
 8012a4c:	f002 f824 	bl	8014a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012a50:	b9e8      	cbnz	r0, 8012a8e <NetworkParams::callbackFunction(char const*)+0xae>
 8012a52:	9a02      	ldr	r2, [sp, #8]
 8012a54:	6863      	ldr	r3, [r4, #4]
 8012a56:	b2d1      	uxtb	r1, r2
 8012a58:	29ac      	cmp	r1, #172	; 0xac
 8012a5a:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8012a5e:	d007      	beq.n	8012a70 <NetworkParams::callbackFunction(char const*)+0x90>
 8012a60:	29c0      	cmp	r1, #192	; 0xc0
 8012a62:	d00c      	beq.n	8012a7e <NetworkParams::callbackFunction(char const*)+0x9e>
 8012a64:	290a      	cmp	r1, #10
 8012a66:	d10d      	bne.n	8012a84 <NetworkParams::callbackFunction(char const*)+0xa4>
 8012a68:	60a2      	str	r2, [r4, #8]
 8012a6a:	f043 0302 	orr.w	r3, r3, #2
 8012a6e:	e004      	b.n	8012a7a <NetworkParams::callbackFunction(char const*)+0x9a>
 8012a70:	3810      	subs	r0, #16
 8012a72:	280f      	cmp	r0, #15
 8012a74:	d9f8      	bls.n	8012a68 <NetworkParams::callbackFunction(char const*)+0x88>
 8012a76:	f023 0302 	bic.w	r3, r3, #2
 8012a7a:	6063      	str	r3, [r4, #4]
 8012a7c:	e7c6      	b.n	8012a0c <NetworkParams::callbackFunction(char const*)+0x2c>
 8012a7e:	28a8      	cmp	r0, #168	; 0xa8
 8012a80:	d1f9      	bne.n	8012a76 <NetworkParams::callbackFunction(char const*)+0x96>
 8012a82:	e7f1      	b.n	8012a68 <NetworkParams::callbackFunction(char const*)+0x88>
 8012a84:	2902      	cmp	r1, #2
 8012a86:	d0ef      	beq.n	8012a68 <NetworkParams::callbackFunction(char const*)+0x88>
 8012a88:	2a00      	cmp	r2, #0
 8012a8a:	d0ed      	beq.n	8012a68 <NetworkParams::callbackFunction(char const*)+0x88>
 8012a8c:	e7f3      	b.n	8012a76 <NetworkParams::callbackFunction(char const*)+0x96>
 8012a8e:	491c      	ldr	r1, [pc, #112]	; (8012b00 <NetworkParams::callbackFunction(char const*)+0x120>)
 8012a90:	aa02      	add	r2, sp, #8
 8012a92:	4628      	mov	r0, r5
 8012a94:	f002 f800 	bl	8014a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012a98:	b970      	cbnz	r0, 8012ab8 <NetworkParams::callbackFunction(char const*)+0xd8>
 8012a9a:	9a02      	ldr	r2, [sp, #8]
 8012a9c:	6863      	ldr	r3, [r4, #4]
 8012a9e:	b142      	cbz	r2, 8012ab2 <NetworkParams::callbackFunction(char const*)+0xd2>
 8012aa0:	ba11      	rev	r1, r2
 8012aa2:	43c8      	mvns	r0, r1
 8012aa4:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8012aa8:	d103      	bne.n	8012ab2 <NetworkParams::callbackFunction(char const*)+0xd2>
 8012aaa:	60e2      	str	r2, [r4, #12]
 8012aac:	f043 0304 	orr.w	r3, r3, #4
 8012ab0:	e7e3      	b.n	8012a7a <NetworkParams::callbackFunction(char const*)+0x9a>
 8012ab2:	f023 0304 	bic.w	r3, r3, #4
 8012ab6:	e7e0      	b.n	8012a7a <NetworkParams::callbackFunction(char const*)+0x9a>
 8012ab8:	4912      	ldr	r1, [pc, #72]	; (8012b04 <NetworkParams::callbackFunction(char const*)+0x124>)
 8012aba:	aa02      	add	r2, sp, #8
 8012abc:	4628      	mov	r0, r5
 8012abe:	f001 ffeb 	bl	8014a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8012ac2:	b928      	cbnz	r0, 8012ad0 <NetworkParams::callbackFunction(char const*)+0xf0>
 8012ac4:	9b02      	ldr	r3, [sp, #8]
 8012ac6:	6123      	str	r3, [r4, #16]
 8012ac8:	6863      	ldr	r3, [r4, #4]
 8012aca:	f043 0308 	orr.w	r3, r3, #8
 8012ace:	e7d4      	b.n	8012a7a <NetworkParams::callbackFunction(char const*)+0x9a>
 8012ad0:	233f      	movs	r3, #63	; 0x3f
 8012ad2:	9303      	str	r3, [sp, #12]
 8012ad4:	490c      	ldr	r1, [pc, #48]	; (8012b08 <NetworkParams::callbackFunction(char const*)+0x128>)
 8012ad6:	ab03      	add	r3, sp, #12
 8012ad8:	f104 0219 	add.w	r2, r4, #25
 8012adc:	4628      	mov	r0, r5
 8012ade:	f001 ff67 	bl	80149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8012ae2:	2800      	cmp	r0, #0
 8012ae4:	d192      	bne.n	8012a0c <NetworkParams::callbackFunction(char const*)+0x2c>
 8012ae6:	9b03      	ldr	r3, [sp, #12]
 8012ae8:	4423      	add	r3, r4
 8012aea:	7658      	strb	r0, [r3, #25]
 8012aec:	6863      	ldr	r3, [r4, #4]
 8012aee:	f043 0320 	orr.w	r3, r3, #32
 8012af2:	e7c2      	b.n	8012a7a <NetworkParams::callbackFunction(char const*)+0x9a>
 8012af4:	0801a3a0 	stmdaeq	r1, {r5, r7, r8, r9, sp, pc}
 8012af8:	0801a37e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sp, pc}
 8012afc:	0801a363 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sp, pc}
 8012b00:	0801a397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sp, pc}
 8012b04:	0801a36e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sp, pc}
 8012b08:	0801a38e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sp, pc}

08012b0c <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8012b0c:	f7ff bf68 	b.w	80129e0 <NetworkParams::callbackFunction(char const*)>

08012b10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8012b10:	b570      	push	{r4, r5, r6, lr}
 8012b12:	4604      	mov	r4, r0
 8012b14:	b086      	sub	sp, #24
 8012b16:	4615      	mov	r5, r2
 8012b18:	461e      	mov	r6, r3
 8012b1a:	3004      	adds	r0, #4
 8012b1c:	2900      	cmp	r1, #0
 8012b1e:	d02a      	beq.n	8012b76 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x66>
 8012b20:	225e      	movs	r2, #94	; 0x5e
 8012b22:	f002 fd9e 	bl	8015662 <memmove>
 8012b26:	462a      	mov	r2, r5
 8012b28:	4633      	mov	r3, r6
 8012b2a:	496f      	ldr	r1, [pc, #444]	; (8012ce8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>)
 8012b2c:	a803      	add	r0, sp, #12
 8012b2e:	f001 fe67 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8012b32:	6863      	ldr	r3, [r4, #4]
 8012b34:	079a      	lsls	r2, r3, #30
 8012b36:	bf5f      	itttt	pl
 8012b38:	4a6c      	ldrpl	r2, [pc, #432]	; (8012cec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8012b3a:	6812      	ldrpl	r2, [r2, #0]
 8012b3c:	6952      	ldrpl	r2, [r2, #20]
 8012b3e:	60a2      	strpl	r2, [r4, #8]
 8012b40:	075e      	lsls	r6, r3, #29
 8012b42:	bf5f      	itttt	pl
 8012b44:	4a69      	ldrpl	r2, [pc, #420]	; (8012cec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8012b46:	6812      	ldrpl	r2, [r2, #0]
 8012b48:	69d2      	ldrpl	r2, [r2, #28]
 8012b4a:	60e2      	strpl	r2, [r4, #12]
 8012b4c:	071d      	lsls	r5, r3, #28
 8012b4e:	bf5f      	itttt	pl
 8012b50:	4a66      	ldrpl	r2, [pc, #408]	; (8012cec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8012b52:	6812      	ldrpl	r2, [r2, #0]
 8012b54:	6992      	ldrpl	r2, [r2, #24]
 8012b56:	6122      	strpl	r2, [r4, #16]
 8012b58:	0698      	lsls	r0, r3, #26
 8012b5a:	f104 0519 	add.w	r5, r4, #25
 8012b5e:	d418      	bmi.n	8012b92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8012b60:	4b62      	ldr	r3, [pc, #392]	; (8012cec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8012b62:	681b      	ldr	r3, [r3, #0]
 8012b64:	4628      	mov	r0, r5
 8012b66:	331f      	adds	r3, #31
 8012b68:	223f      	movs	r2, #63	; 0x3f
 8012b6a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8012b6e:	b949      	cbnz	r1, 8012b84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 8012b70:	f002 fd8e 	bl	8015690 <memset>
 8012b74:	e00a      	b.n	8012b8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 8012b76:	6823      	ldr	r3, [r4, #0]
 8012b78:	681a      	ldr	r2, [r3, #0]
 8012b7a:	4601      	mov	r1, r0
 8012b7c:	68d2      	ldr	r2, [r2, #12]
 8012b7e:	4618      	mov	r0, r3
 8012b80:	4790      	blx	r2
 8012b82:	e7d0      	b.n	8012b26 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8012b84:	3a01      	subs	r2, #1
 8012b86:	f800 1b01 	strb.w	r1, [r0], #1
 8012b8a:	d1ee      	bne.n	8012b6a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 8012b8c:	2300      	movs	r3, #0
 8012b8e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8012b92:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012b96:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8012b9a:	7e23      	ldrb	r3, [r4, #24]
 8012b9c:	6861      	ldr	r1, [r4, #4]
 8012b9e:	42b2      	cmp	r2, r6
 8012ba0:	d21a      	bcs.n	8012bd8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 8012ba2:	9803      	ldr	r0, [sp, #12]
 8012ba4:	07c9      	lsls	r1, r1, #31
 8012ba6:	4410      	add	r0, r2
 8012ba8:	eba6 0602 	sub.w	r6, r6, r2
 8012bac:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012bb0:	d404      	bmi.n	8012bbc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8012bb2:	b922      	cbnz	r2, 8012bbe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8012bb4:	9300      	str	r3, [sp, #0]
 8012bb6:	4a4e      	ldr	r2, [pc, #312]	; (8012cf0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8012bb8:	4b4e      	ldr	r3, [pc, #312]	; (8012cf4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012bba:	e003      	b.n	8012bc4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8012bbc:	b312      	cbz	r2, 8012c04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf4>
 8012bbe:	9300      	str	r3, [sp, #0]
 8012bc0:	4a4d      	ldr	r2, [pc, #308]	; (8012cf8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8012bc2:	4b4c      	ldr	r3, [pc, #304]	; (8012cf4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012bc4:	4631      	mov	r1, r6
 8012bc6:	f7f7 fc11 	bl	800a3ec <snprintf>
 8012bca:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012bce:	4286      	cmp	r6, r0
 8012bd0:	bfa4      	itt	ge
 8012bd2:	181b      	addge	r3, r3, r0
 8012bd4:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012bd8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012bdc:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8012be0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012be4:	6861      	ldr	r1, [r4, #4]
 8012be6:	42b2      	cmp	r2, r6
 8012be8:	d21f      	bcs.n	8012c2a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11a>
 8012bea:	9803      	ldr	r0, [sp, #12]
 8012bec:	05c9      	lsls	r1, r1, #23
 8012bee:	4410      	add	r0, r2
 8012bf0:	eba6 0602 	sub.w	r6, r6, r2
 8012bf4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012bf8:	d408      	bmi.n	8012c0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8012bfa:	b94a      	cbnz	r2, 8012c10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x100>
 8012bfc:	9300      	str	r3, [sp, #0]
 8012bfe:	4a3c      	ldr	r2, [pc, #240]	; (8012cf0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8012c00:	4b3e      	ldr	r3, [pc, #248]	; (8012cfc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8012c02:	e008      	b.n	8012c16 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8012c04:	9300      	str	r3, [sp, #0]
 8012c06:	4a3e      	ldr	r2, [pc, #248]	; (8012d00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8012c08:	4b3a      	ldr	r3, [pc, #232]	; (8012cf4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8012c0a:	e7db      	b.n	8012bc4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8012c0c:	2a00      	cmp	r2, #0
 8012c0e:	d03c      	beq.n	8012c8a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17a>
 8012c10:	9300      	str	r3, [sp, #0]
 8012c12:	4a39      	ldr	r2, [pc, #228]	; (8012cf8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8012c14:	4b39      	ldr	r3, [pc, #228]	; (8012cfc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8012c16:	4631      	mov	r1, r6
 8012c18:	f7f7 fbe8 	bl	800a3ec <snprintf>
 8012c1c:	4286      	cmp	r6, r0
 8012c1e:	bfa2      	ittt	ge
 8012c20:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012c24:	18c0      	addge	r0, r0, r3
 8012c26:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012c2a:	4936      	ldr	r1, [pc, #216]	; (8012d04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8012c2c:	a803      	add	r0, sp, #12
 8012c2e:	f001 fe6d 	bl	801490c <PropertiesBuilder::AddComment(char const*)>
 8012c32:	6863      	ldr	r3, [r4, #4]
 8012c34:	68a2      	ldr	r2, [r4, #8]
 8012c36:	4934      	ldr	r1, [pc, #208]	; (8012d08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8012c38:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8012c3c:	a803      	add	r0, sp, #12
 8012c3e:	f001 fe21 	bl	8014884 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8012c42:	6863      	ldr	r3, [r4, #4]
 8012c44:	68e2      	ldr	r2, [r4, #12]
 8012c46:	4931      	ldr	r1, [pc, #196]	; (8012d0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8012c48:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8012c4c:	a803      	add	r0, sp, #12
 8012c4e:	f001 fe19 	bl	8014884 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8012c52:	6863      	ldr	r3, [r4, #4]
 8012c54:	6922      	ldr	r2, [r4, #16]
 8012c56:	492e      	ldr	r1, [pc, #184]	; (8012d10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8012c58:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8012c5c:	a803      	add	r0, sp, #12
 8012c5e:	f001 fe11 	bl	8014884 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8012c62:	6862      	ldr	r2, [r4, #4]
 8012c64:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012c68:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8012c6c:	42a3      	cmp	r3, r4
 8012c6e:	d21e      	bcs.n	8012cae <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 8012c70:	9803      	ldr	r0, [sp, #12]
 8012c72:	0692      	lsls	r2, r2, #26
 8012c74:	4418      	add	r0, r3
 8012c76:	eba4 0403 	sub.w	r4, r4, r3
 8012c7a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012c7e:	d408      	bmi.n	8012c92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x182>
 8012c80:	b943      	cbnz	r3, 8012c94 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 8012c82:	4b24      	ldr	r3, [pc, #144]	; (8012d14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8012c84:	4a24      	ldr	r2, [pc, #144]	; (8012d18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8012c86:	9500      	str	r5, [sp, #0]
 8012c88:	e007      	b.n	8012c9a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8012c8a:	9300      	str	r3, [sp, #0]
 8012c8c:	4a1c      	ldr	r2, [pc, #112]	; (8012d00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8012c8e:	4b1b      	ldr	r3, [pc, #108]	; (8012cfc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8012c90:	e7c1      	b.n	8012c16 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8012c92:	b32b      	cbz	r3, 8012ce0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d0>
 8012c94:	4b1f      	ldr	r3, [pc, #124]	; (8012d14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8012c96:	4a21      	ldr	r2, [pc, #132]	; (8012d1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 8012c98:	9500      	str	r5, [sp, #0]
 8012c9a:	4621      	mov	r1, r4
 8012c9c:	f7f7 fba6 	bl	800a3ec <snprintf>
 8012ca0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012ca4:	4284      	cmp	r4, r0
 8012ca6:	bfa4      	itt	ge
 8012ca8:	181b      	addge	r3, r3, r0
 8012caa:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012cae:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012cb2:	b17b      	cbz	r3, 8012cd4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 8012cb4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012cb8:	9b03      	ldr	r3, [sp, #12]
 8012cba:	4413      	add	r3, r2
 8012cbc:	227d      	movs	r2, #125	; 0x7d
 8012cbe:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012cc2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012cc6:	9903      	ldr	r1, [sp, #12]
 8012cc8:	54ca      	strb	r2, [r1, r3]
 8012cca:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012cce:	3301      	adds	r3, #1
 8012cd0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012cd4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012cda:	601a      	str	r2, [r3, #0]
 8012cdc:	b006      	add	sp, #24
 8012cde:	bd70      	pop	{r4, r5, r6, pc}
 8012ce0:	4b0c      	ldr	r3, [pc, #48]	; (8012d14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8012ce2:	4a0f      	ldr	r2, [pc, #60]	; (8012d20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8012ce4:	9500      	str	r5, [sp, #0]
 8012ce6:	e7d8      	b.n	8012c9a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8012ce8:	0801a3a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sp, pc}
 8012cec:	2000f994 	mulcs	r0, r4, r9
 8012cf0:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 8012cf4:	0801a3a0 	stmdaeq	r1, {r5, r7, r8, r9, sp, pc}
 8012cf8:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 8012cfc:	0801a37e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sp, pc}
 8012d00:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}
 8012d04:	0801a359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sp, pc}
 8012d08:	0801a363 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sp, pc}
 8012d0c:	0801a397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sp, pc}
 8012d10:	0801a36e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sp, pc}
 8012d14:	0801a38e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sp, pc}
 8012d18:	0801814c 	stmdaeq	r1, {r2, r3, r6, r8, pc}
 8012d1c:	08018141 	stmdaeq	r1, {r0, r6, r8, pc}
 8012d20:	0801814d 	stmdaeq	r1, {r0, r2, r3, r6, r8, pc}

08012d24 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8012d24:	b513      	push	{r0, r1, r4, lr}
 8012d26:	6804      	ldr	r4, [r0, #0]
 8012d28:	b914      	cbnz	r4, 8012d30 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8012d2a:	601c      	str	r4, [r3, #0]
 8012d2c:	b002      	add	sp, #8
 8012d2e:	bd10      	pop	{r4, pc}
 8012d30:	9300      	str	r3, [sp, #0]
 8012d32:	4613      	mov	r3, r2
 8012d34:	460a      	mov	r2, r1
 8012d36:	2100      	movs	r1, #0
 8012d38:	f7ff feea 	bl	8012b10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8012d3c:	e7f6      	b.n	8012d2c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08012d3e <NetworkParams::Dump()>:
 8012d3e:	4770      	bx	lr

08012d40 <memcpy.isra.0>:
 8012d40:	3801      	subs	r0, #1
 8012d42:	440a      	add	r2, r1
 8012d44:	4291      	cmp	r1, r2
 8012d46:	d100      	bne.n	8012d4a <memcpy.isra.0+0xa>
 8012d48:	4770      	bx	lr
 8012d4a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012d4e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012d52:	e7f7      	b.n	8012d44 <memcpy.isra.0+0x4>

08012d54 <arp_announce>:
 8012d54:	4803      	ldr	r0, [pc, #12]	; (8012d64 <arp_announce+0x10>)
 8012d56:	69c3      	ldr	r3, [r0, #28]
 8012d58:	b113      	cbz	r3, 8012d60 <arp_announce+0xc>
 8012d5a:	212a      	movs	r1, #42	; 0x2a
 8012d5c:	f004 b84a 	b.w	8016df4 <emac_eth_send>
 8012d60:	4770      	bx	lr
 8012d62:	bf00      	nop
 8012d64:	2000f998 	mulcs	r0, r8, r9

08012d68 <arp_handle_request>:
 8012d68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012d6a:	2204      	movs	r2, #4
 8012d6c:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8012d70:	4604      	mov	r4, r0
 8012d72:	eb0d 0002 	add.w	r0, sp, r2
 8012d76:	f7ff ffe3 	bl	8012d40 <memcpy.isra.0>
 8012d7a:	4b0d      	ldr	r3, [pc, #52]	; (8012db0 <arp_handle_request+0x48>)
 8012d7c:	9a01      	ldr	r2, [sp, #4]
 8012d7e:	69db      	ldr	r3, [r3, #28]
 8012d80:	429a      	cmp	r2, r3
 8012d82:	d113      	bne.n	8012dac <arp_handle_request+0x44>
 8012d84:	4d0b      	ldr	r5, [pc, #44]	; (8012db4 <arp_handle_request+0x4c>)
 8012d86:	2206      	movs	r2, #6
 8012d88:	18a1      	adds	r1, r4, r2
 8012d8a:	4628      	mov	r0, r5
 8012d8c:	f7ff ffd8 	bl	8012d40 <memcpy.isra.0>
 8012d90:	f104 0116 	add.w	r1, r4, #22
 8012d94:	f105 0020 	add.w	r0, r5, #32
 8012d98:	2206      	movs	r2, #6
 8012d9a:	f7ff ffd1 	bl	8012d40 <memcpy.isra.0>
 8012d9e:	69e3      	ldr	r3, [r4, #28]
 8012da0:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8012da4:	212a      	movs	r1, #42	; 0x2a
 8012da6:	4628      	mov	r0, r5
 8012da8:	f004 f824 	bl	8016df4 <emac_eth_send>
 8012dac:	b003      	add	sp, #12
 8012dae:	bd30      	pop	{r4, r5, pc}
 8012db0:	2000f998 	mulcs	r0, r8, r9
 8012db4:	2000f9c4 	andcs	pc, r0, r4, asr #19

08012db8 <arp_handle_reply>:
 8012db8:	69c1      	ldr	r1, [r0, #28]
 8012dba:	3016      	adds	r0, #22
 8012dbc:	f000 b80a 	b.w	8012dd4 <arp_cache_update>

08012dc0 <arp_send_request>:
 8012dc0:	4b03      	ldr	r3, [pc, #12]	; (8012dd0 <arp_send_request+0x10>)
 8012dc2:	212a      	movs	r1, #42	; 0x2a
 8012dc4:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8012dc8:	4618      	mov	r0, r3
 8012dca:	f004 b813 	b.w	8016df4 <emac_eth_send>
 8012dce:	bf00      	nop
 8012dd0:	2000f9f0 	strdcs	pc, [r0], -r0

08012dd4 <arp_cache_update>:
 8012dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012dd6:	4c12      	ldr	r4, [pc, #72]	; (8012e20 <arp_cache_update+0x4c>)
 8012dd8:	8823      	ldrh	r3, [r4, #0]
 8012dda:	2b20      	cmp	r3, #32
 8012ddc:	d019      	beq.n	8012e12 <arp_cache_update+0x3e>
 8012dde:	2500      	movs	r5, #0
 8012de0:	1d22      	adds	r2, r4, #4
 8012de2:	260c      	movs	r6, #12
 8012de4:	b2af      	uxth	r7, r5
 8012de6:	42bb      	cmp	r3, r7
 8012de8:	d80c      	bhi.n	8012e04 <arp_cache_update+0x30>
 8012dea:	fb06 2203 	mla	r2, r6, r3, r2
 8012dee:	3203      	adds	r2, #3
 8012df0:	1d85      	adds	r5, r0, #6
 8012df2:	42a8      	cmp	r0, r5
 8012df4:	d10e      	bne.n	8012e14 <arp_cache_update+0x40>
 8012df6:	220c      	movs	r2, #12
 8012df8:	fb02 4203 	mla	r2, r2, r3, r4
 8012dfc:	3301      	adds	r3, #1
 8012dfe:	6051      	str	r1, [r2, #4]
 8012e00:	8023      	strh	r3, [r4, #0]
 8012e02:	e006      	b.n	8012e12 <arp_cache_update+0x3e>
 8012e04:	3501      	adds	r5, #1
 8012e06:	fb06 2705 	mla	r7, r6, r5, r2
 8012e0a:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8012e0e:	428f      	cmp	r7, r1
 8012e10:	d1e8      	bne.n	8012de4 <arp_cache_update+0x10>
 8012e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e14:	f810 6b01 	ldrb.w	r6, [r0], #1
 8012e18:	f802 6f01 	strb.w	r6, [r2, #1]!
 8012e1c:	e7e9      	b.n	8012df2 <arp_cache_update+0x1e>
 8012e1e:	bf00      	nop
 8012e20:	100011a4 	andne	r1, r0, r4, lsr #3

08012e24 <arp_cache_lookup>:
 8012e24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e28:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8012eb8 <arp_cache_lookup+0x94>
 8012e2c:	4606      	mov	r6, r0
 8012e2e:	460c      	mov	r4, r1
 8012e30:	2200      	movs	r2, #0
 8012e32:	200c      	movs	r0, #12
 8012e34:	fb00 f302 	mul.w	r3, r0, r2
 8012e38:	f853 1008 	ldr.w	r1, [r3, r8]
 8012e3c:	42b1      	cmp	r1, r6
 8012e3e:	d10d      	bne.n	8012e5c <arp_cache_lookup+0x38>
 8012e40:	3304      	adds	r3, #4
 8012e42:	4443      	add	r3, r8
 8012e44:	3c01      	subs	r4, #1
 8012e46:	1d9a      	adds	r2, r3, #6
 8012e48:	4293      	cmp	r3, r2
 8012e4a:	d102      	bne.n	8012e52 <arp_cache_lookup+0x2e>
 8012e4c:	4630      	mov	r0, r6
 8012e4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012e52:	f813 1b01 	ldrb.w	r1, [r3], #1
 8012e56:	f804 1f01 	strb.w	r1, [r4, #1]!
 8012e5a:	e7f5      	b.n	8012e48 <arp_cache_lookup+0x24>
 8012e5c:	b111      	cbz	r1, 8012e64 <arp_cache_lookup+0x40>
 8012e5e:	3201      	adds	r2, #1
 8012e60:	2a20      	cmp	r2, #32
 8012e62:	d1e7      	bne.n	8012e34 <arp_cache_lookup+0x10>
 8012e64:	f8df a054 	ldr.w	sl, [pc, #84]	; 8012ebc <arp_cache_lookup+0x98>
 8012e68:	f8ba 5000 	ldrh.w	r5, [sl]
 8012e6c:	2704      	movs	r7, #4
 8012e6e:	3f01      	subs	r7, #1
 8012e70:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8012e74:	d101      	bne.n	8012e7a <arp_cache_lookup+0x56>
 8012e76:	463e      	mov	r6, r7
 8012e78:	e7e8      	b.n	8012e4c <arp_cache_lookup+0x28>
 8012e7a:	4630      	mov	r0, r6
 8012e7c:	f7ff ffa0 	bl	8012dc0 <arp_send_request>
 8012e80:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8012e84:	f1b9 0901 	subs.w	r9, r9, #1
 8012e88:	f8ba 3000 	ldrh.w	r3, [sl]
 8012e8c:	d011      	beq.n	8012eb2 <arp_cache_lookup+0x8e>
 8012e8e:	429d      	cmp	r5, r3
 8012e90:	d00c      	beq.n	8012eac <arp_cache_lookup+0x88>
 8012e92:	230c      	movs	r3, #12
 8012e94:	fb03 8505 	mla	r5, r3, r5, r8
 8012e98:	1d2b      	adds	r3, r5, #4
 8012e9a:	3c01      	subs	r4, #1
 8012e9c:	350a      	adds	r5, #10
 8012e9e:	42ab      	cmp	r3, r5
 8012ea0:	d0d4      	beq.n	8012e4c <arp_cache_lookup+0x28>
 8012ea2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012ea6:	f804 2f01 	strb.w	r2, [r4, #1]!
 8012eaa:	e7f8      	b.n	8012e9e <arp_cache_lookup+0x7a>
 8012eac:	f7f5 fb5a 	bl	8008564 <net_handle>
 8012eb0:	e7e8      	b.n	8012e84 <arp_cache_lookup+0x60>
 8012eb2:	429d      	cmp	r5, r3
 8012eb4:	d0db      	beq.n	8012e6e <arp_cache_lookup+0x4a>
 8012eb6:	e7ec      	b.n	8012e92 <arp_cache_lookup+0x6e>
 8012eb8:	100011a8 	andne	r1, r0, r8, lsr #3
 8012ebc:	100011a4 	andne	r1, r0, r4, lsr #3

08012ec0 <_parse_response>:
 8012ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ec4:	2400      	movs	r4, #0
 8012ec6:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8012eca:	4e52      	ldr	r6, [pc, #328]	; (8013014 <_parse_response+0x154>)
 8012ecc:	9009      	str	r0, [sp, #36]	; 0x24
 8012ece:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8012ed2:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8012ed6:	6833      	ldr	r3, [r6, #0]
 8012ed8:	9402      	str	r4, [sp, #8]
 8012eda:	460d      	mov	r5, r1
 8012edc:	46a3      	mov	fp, r4
 8012ede:	4627      	mov	r7, r4
 8012ee0:	46a2      	mov	sl, r4
 8012ee2:	46a1      	mov	r9, r4
 8012ee4:	9407      	str	r4, [sp, #28]
 8012ee6:	46a0      	mov	r8, r4
 8012ee8:	9308      	str	r3, [sp, #32]
 8012eea:	f7f5 fb3b 	bl	8008564 <net_handle>
 8012eee:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012ef2:	9300      	str	r3, [sp, #0]
 8012ef4:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8012ef8:	ab0c      	add	r3, sp, #48	; 0x30
 8012efa:	f44f 7209 	mov.w	r2, #548	; 0x224
 8012efe:	a90d      	add	r1, sp, #52	; 0x34
 8012f00:	f7fe fd10 	bl	8011924 <udp_recv>
 8012f04:	2800      	cmp	r0, #0
 8012f06:	d040      	beq.n	8012f8a <_parse_response+0xca>
 8012f08:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8012f0c:	2b43      	cmp	r3, #67	; 0x43
 8012f0e:	d13c      	bne.n	8012f8a <_parse_response+0xca>
 8012f10:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8012f14:	1e6b      	subs	r3, r5, #1
 8012f16:	1d69      	adds	r1, r5, #5
 8012f18:	4299      	cmp	r1, r3
 8012f1a:	d130      	bne.n	8012f7e <_parse_response+0xbe>
 8012f1c:	2500      	movs	r5, #0
 8012f1e:	ab0d      	add	r3, sp, #52	; 0x34
 8012f20:	4418      	add	r0, r3
 8012f22:	46ac      	mov	ip, r5
 8012f24:	462e      	mov	r6, r5
 8012f26:	ab49      	add	r3, sp, #292	; 0x124
 8012f28:	4629      	mov	r1, r5
 8012f2a:	4283      	cmp	r3, r0
 8012f2c:	d338      	bcc.n	8012fa0 <_parse_response+0xe0>
 8012f2e:	b145      	cbz	r5, 8012f42 <_parse_response+0x82>
 8012f30:	4b39      	ldr	r3, [pc, #228]	; (8013018 <_parse_response+0x158>)
 8012f32:	9a07      	ldr	r2, [sp, #28]
 8012f34:	709a      	strb	r2, [r3, #2]
 8012f36:	9a06      	ldr	r2, [sp, #24]
 8012f38:	705a      	strb	r2, [r3, #1]
 8012f3a:	9a05      	ldr	r2, [sp, #20]
 8012f3c:	f883 8003 	strb.w	r8, [r3, #3]
 8012f40:	701a      	strb	r2, [r3, #0]
 8012f42:	f1bc 0f00 	cmp.w	ip, #0
 8012f46:	d007      	beq.n	8012f58 <_parse_response+0x98>
 8012f48:	4b34      	ldr	r3, [pc, #208]	; (801301c <_parse_response+0x15c>)
 8012f4a:	9a04      	ldr	r2, [sp, #16]
 8012f4c:	70da      	strb	r2, [r3, #3]
 8012f4e:	9a03      	ldr	r2, [sp, #12]
 8012f50:	709a      	strb	r2, [r3, #2]
 8012f52:	9a02      	ldr	r2, [sp, #8]
 8012f54:	705c      	strb	r4, [r3, #1]
 8012f56:	701a      	strb	r2, [r3, #0]
 8012f58:	b13e      	cbz	r6, 8012f6a <_parse_response+0xaa>
 8012f5a:	4b31      	ldr	r3, [pc, #196]	; (8013020 <_parse_response+0x160>)
 8012f5c:	70df      	strb	r7, [r3, #3]
 8012f5e:	f883 a002 	strb.w	sl, [r3, #2]
 8012f62:	f883 9001 	strb.w	r9, [r3, #1]
 8012f66:	f883 b000 	strb.w	fp, [r3]
 8012f6a:	2902      	cmp	r1, #2
 8012f6c:	bf02      	ittt	eq
 8012f6e:	4b2d      	ldreq	r3, [pc, #180]	; (8013024 <_parse_response+0x164>)
 8012f70:	9a11      	ldreq	r2, [sp, #68]	; 0x44
 8012f72:	601a      	streq	r2, [r3, #0]
 8012f74:	4608      	mov	r0, r1
 8012f76:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8012f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f7e:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8012f82:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8012f86:	45e6      	cmp	lr, ip
 8012f88:	d0c6      	beq.n	8012f18 <_parse_response+0x58>
 8012f8a:	6833      	ldr	r3, [r6, #0]
 8012f8c:	9a08      	ldr	r2, [sp, #32]
 8012f8e:	1a9b      	subs	r3, r3, r2
 8012f90:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8012f94:	d3a9      	bcc.n	8012eea <_parse_response+0x2a>
 8012f96:	2800      	cmp	r0, #0
 8012f98:	d1c0      	bne.n	8012f1c <_parse_response+0x5c>
 8012f9a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f9e:	e7ea      	b.n	8012f76 <_parse_response+0xb6>
 8012fa0:	781a      	ldrb	r2, [r3, #0]
 8012fa2:	2a35      	cmp	r2, #53	; 0x35
 8012fa4:	d011      	beq.n	8012fca <_parse_response+0x10a>
 8012fa6:	d808      	bhi.n	8012fba <_parse_response+0xfa>
 8012fa8:	2a01      	cmp	r2, #1
 8012faa:	d011      	beq.n	8012fd0 <_parse_response+0x110>
 8012fac:	2a03      	cmp	r2, #3
 8012fae:	d019      	beq.n	8012fe4 <_parse_response+0x124>
 8012fb0:	b14a      	cbz	r2, 8012fc6 <_parse_response+0x106>
 8012fb2:	1c9a      	adds	r2, r3, #2
 8012fb4:	785b      	ldrb	r3, [r3, #1]
 8012fb6:	4413      	add	r3, r2
 8012fb8:	e7b7      	b.n	8012f2a <_parse_response+0x6a>
 8012fba:	2a36      	cmp	r2, #54	; 0x36
 8012fbc:	d01f      	beq.n	8012ffe <_parse_response+0x13e>
 8012fbe:	2aff      	cmp	r2, #255	; 0xff
 8012fc0:	d1f7      	bne.n	8012fb2 <_parse_response+0xf2>
 8012fc2:	4603      	mov	r3, r0
 8012fc4:	e7b1      	b.n	8012f2a <_parse_response+0x6a>
 8012fc6:	3301      	adds	r3, #1
 8012fc8:	e7af      	b.n	8012f2a <_parse_response+0x6a>
 8012fca:	7899      	ldrb	r1, [r3, #2]
 8012fcc:	3303      	adds	r3, #3
 8012fce:	e7ac      	b.n	8012f2a <_parse_response+0x6a>
 8012fd0:	f893 b002 	ldrb.w	fp, [r3, #2]
 8012fd4:	f893 9003 	ldrb.w	r9, [r3, #3]
 8012fd8:	f893 a004 	ldrb.w	sl, [r3, #4]
 8012fdc:	795f      	ldrb	r7, [r3, #5]
 8012fde:	4616      	mov	r6, r2
 8012fe0:	3306      	adds	r3, #6
 8012fe2:	e7a2      	b.n	8012f2a <_parse_response+0x6a>
 8012fe4:	789a      	ldrb	r2, [r3, #2]
 8012fe6:	9202      	str	r2, [sp, #8]
 8012fe8:	791a      	ldrb	r2, [r3, #4]
 8012fea:	9203      	str	r2, [sp, #12]
 8012fec:	795a      	ldrb	r2, [r3, #5]
 8012fee:	9204      	str	r2, [sp, #16]
 8012ff0:	785a      	ldrb	r2, [r3, #1]
 8012ff2:	78dc      	ldrb	r4, [r3, #3]
 8012ff4:	4413      	add	r3, r2
 8012ff6:	3302      	adds	r3, #2
 8012ff8:	f04f 0c01 	mov.w	ip, #1
 8012ffc:	e795      	b.n	8012f2a <_parse_response+0x6a>
 8012ffe:	789a      	ldrb	r2, [r3, #2]
 8013000:	9205      	str	r2, [sp, #20]
 8013002:	78da      	ldrb	r2, [r3, #3]
 8013004:	9206      	str	r2, [sp, #24]
 8013006:	791a      	ldrb	r2, [r3, #4]
 8013008:	f893 8005 	ldrb.w	r8, [r3, #5]
 801300c:	9207      	str	r2, [sp, #28]
 801300e:	3306      	adds	r3, #6
 8013010:	2501      	movs	r5, #1
 8013012:	e78a      	b.n	8012f2a <_parse_response+0x6a>
 8013014:	2000fd94 	mulcs	r0, r4, sp
 8013018:	2000fc4c 	andcs	pc, r0, ip, asr #24
 801301c:	2000fa1c 	andcs	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
 8013020:	2000fa24 	andcs	pc, r0, r4, lsr #20
 8013024:	2000fa20 	andcs	pc, r0, r0, lsr #20

08013028 <memcpy.isra.0>:
 8013028:	3801      	subs	r0, #1
 801302a:	440a      	add	r2, r1
 801302c:	4291      	cmp	r1, r2
 801302e:	d100      	bne.n	8013032 <memcpy.isra.0+0xa>
 8013030:	4770      	bx	lr
 8013032:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013036:	f800 3f01 	strb.w	r3, [r0, #1]!
 801303a:	e7f7      	b.n	801302c <memcpy.isra.0+0x4>

0801303c <dhcp_client>:
 801303c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013040:	b087      	sub	sp, #28
 8013042:	460f      	mov	r7, r1
 8013044:	9203      	str	r2, [sp, #12]
 8013046:	4a77      	ldr	r2, [pc, #476]	; (8013224 <dhcp_client+0x1e8>)
 8013048:	4605      	mov	r5, r0
 801304a:	f44f 7309 	mov.w	r3, #548	; 0x224
 801304e:	4614      	mov	r4, r2
 8013050:	2100      	movs	r1, #0
 8013052:	3b01      	subs	r3, #1
 8013054:	f802 1b01 	strb.w	r1, [r2], #1
 8013058:	d1fb      	bne.n	8013052 <dhcp_client+0x16>
 801305a:	f240 1301 	movw	r3, #257	; 0x101
 801305e:	2206      	movs	r2, #6
 8013060:	4871      	ldr	r0, [pc, #452]	; (8013228 <dhcp_client+0x1ec>)
 8013062:	8023      	strh	r3, [r4, #0]
 8013064:	4629      	mov	r1, r5
 8013066:	70a2      	strb	r2, [r4, #2]
 8013068:	f7ff ffde 	bl	8013028 <memcpy.isra.0>
 801306c:	4b6f      	ldr	r3, [pc, #444]	; (801322c <dhcp_client+0x1f0>)
 801306e:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8013072:	f240 1335 	movw	r3, #309	; 0x135
 8013076:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 801307a:	2044      	movs	r0, #68	; 0x44
 801307c:	f7fe fc18 	bl	80118b0 <udp_bind>
 8013080:	1e06      	subs	r6, r0, #0
 8013082:	f2c0 80c9 	blt.w	8013218 <dhcp_client+0x1dc>
 8013086:	f8df a19c 	ldr.w	sl, [pc, #412]	; 8013224 <dhcp_client+0x1e8>
 801308a:	f04f 0915 	mov.w	r9, #21
 801308e:	f1b9 0901 	subs.w	r9, r9, #1
 8013092:	d11f      	bne.n	80130d4 <dhcp_client+0x98>
 8013094:	464c      	mov	r4, r9
 8013096:	2044      	movs	r0, #68	; 0x44
 8013098:	f7fe fc24 	bl	80118e4 <udp_unbind>
 801309c:	2c00      	cmp	r4, #0
 801309e:	f000 80be 	beq.w	801321e <dhcp_client+0x1e2>
 80130a2:	4963      	ldr	r1, [pc, #396]	; (8013230 <dhcp_client+0x1f4>)
 80130a4:	2204      	movs	r2, #4
 80130a6:	a805      	add	r0, sp, #20
 80130a8:	f7ff ffbe 	bl	8013028 <memcpy.isra.0>
 80130ac:	9b05      	ldr	r3, [sp, #20]
 80130ae:	4961      	ldr	r1, [pc, #388]	; (8013234 <dhcp_client+0x1f8>)
 80130b0:	603b      	str	r3, [r7, #0]
 80130b2:	2204      	movs	r2, #4
 80130b4:	a805      	add	r0, sp, #20
 80130b6:	f7ff ffb7 	bl	8013028 <memcpy.isra.0>
 80130ba:	9b05      	ldr	r3, [sp, #20]
 80130bc:	60bb      	str	r3, [r7, #8]
 80130be:	a805      	add	r0, sp, #20
 80130c0:	495d      	ldr	r1, [pc, #372]	; (8013238 <dhcp_client+0x1fc>)
 80130c2:	2204      	movs	r2, #4
 80130c4:	f7ff ffb0 	bl	8013028 <memcpy.isra.0>
 80130c8:	9b05      	ldr	r3, [sp, #20]
 80130ca:	607b      	str	r3, [r7, #4]
 80130cc:	2000      	movs	r0, #0
 80130ce:	b007      	add	sp, #28
 80130d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130d4:	f643 5301 	movw	r3, #15617	; 0x3d01
 80130d8:	f240 1807 	movw	r8, #263	; 0x107
 80130dc:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80130e0:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80130e4:	782b      	ldrb	r3, [r5, #0]
 80130e6:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80130ea:	786b      	ldrb	r3, [r5, #1]
 80130ec:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80130f0:	78ab      	ldrb	r3, [r5, #2]
 80130f2:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80130f6:	78eb      	ldrb	r3, [r5, #3]
 80130f8:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80130fc:	792b      	ldrb	r3, [r5, #4]
 80130fe:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8013102:	796b      	ldrb	r3, [r5, #5]
 8013104:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8013108:	4a4c      	ldr	r2, [pc, #304]	; (801323c <dhcp_client+0x200>)
 801310a:	4b4d      	ldr	r3, [pc, #308]	; (8013240 <dhcp_client+0x204>)
 801310c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8013110:	23ff      	movs	r3, #255	; 0xff
 8013112:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8013116:	fa5f fb86 	uxtb.w	fp, r6
 801311a:	2343      	movs	r3, #67	; 0x43
 801311c:	9300      	str	r3, [sp, #0]
 801311e:	f240 1205 	movw	r2, #261	; 0x105
 8013122:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013126:	4651      	mov	r1, sl
 8013128:	4658      	mov	r0, fp
 801312a:	f7fe fc57 	bl	80119dc <udp_send>
 801312e:	4629      	mov	r1, r5
 8013130:	4630      	mov	r0, r6
 8013132:	f7ff fec5 	bl	8012ec0 <_parse_response>
 8013136:	2802      	cmp	r0, #2
 8013138:	d1a9      	bne.n	801308e <dhcp_client+0x52>
 801313a:	f643 5303 	movw	r3, #15619	; 0x3d03
 801313e:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8013142:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8013146:	782b      	ldrb	r3, [r5, #0]
 8013148:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 801314c:	786b      	ldrb	r3, [r5, #1]
 801314e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8013152:	78ab      	ldrb	r3, [r5, #2]
 8013154:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8013158:	78eb      	ldrb	r3, [r5, #3]
 801315a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 801315e:	792b      	ldrb	r3, [r5, #4]
 8013160:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8013164:	796b      	ldrb	r3, [r5, #5]
 8013166:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801316a:	f240 4332 	movw	r3, #1074	; 0x432
 801316e:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8013172:	4b2f      	ldr	r3, [pc, #188]	; (8013230 <dhcp_client+0x1f4>)
 8013174:	f8df c0d0 	ldr.w	ip, [pc, #208]	; 8013248 <dhcp_client+0x20c>
 8013178:	881a      	ldrh	r2, [r3, #0]
 801317a:	885b      	ldrh	r3, [r3, #2]
 801317c:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8013180:	f240 4336 	movw	r3, #1078	; 0x436
 8013184:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8013188:	4b2e      	ldr	r3, [pc, #184]	; (8013244 <dhcp_client+0x208>)
 801318a:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 801318e:	681b      	ldr	r3, [r3, #0]
 8013190:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8013194:	230c      	movs	r3, #12
 8013196:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 801319a:	9b03      	ldr	r3, [sp, #12]
 801319c:	221e      	movs	r2, #30
 801319e:	1e58      	subs	r0, r3, #1
 80131a0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80131a4:	f1a2 0e1e 	sub.w	lr, r2, #30
 80131a8:	1c51      	adds	r1, r2, #1
 80131aa:	bb8b      	cbnz	r3, 8013210 <dhcp_client+0x1d4>
 80131ac:	18a3      	adds	r3, r4, r2
 80131ae:	2037      	movs	r0, #55	; 0x37
 80131b0:	4421      	add	r1, r4
 80131b2:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 80131b6:	2006      	movs	r0, #6
 80131b8:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 80131bc:	2103      	movs	r1, #3
 80131be:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 80131c2:	210f      	movs	r1, #15
 80131c4:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 80131c8:	213a      	movs	r1, #58	; 0x3a
 80131ca:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80131ce:	213b      	movs	r1, #59	; 0x3b
 80131d0:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80131d4:	f04f 0801 	mov.w	r8, #1
 80131d8:	21ff      	movs	r1, #255	; 0xff
 80131da:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80131de:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 80131e2:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 80131e6:	32f5      	adds	r2, #245	; 0xf5
 80131e8:	2343      	movs	r3, #67	; 0x43
 80131ea:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 80131ee:	b292      	uxth	r2, r2
 80131f0:	9300      	str	r3, [sp, #0]
 80131f2:	4651      	mov	r1, sl
 80131f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80131f8:	4658      	mov	r0, fp
 80131fa:	f7fe fbef 	bl	80119dc <udp_send>
 80131fe:	4629      	mov	r1, r5
 8013200:	4630      	mov	r0, r6
 8013202:	f7ff fe5d 	bl	8012ec0 <_parse_response>
 8013206:	2805      	cmp	r0, #5
 8013208:	f47f af41 	bne.w	801308e <dhcp_client+0x52>
 801320c:	4644      	mov	r4, r8
 801320e:	e742      	b.n	8013096 <dhcp_client+0x5a>
 8013210:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8013214:	460a      	mov	r2, r1
 8013216:	e7c3      	b.n	80131a0 <dhcp_client+0x164>
 8013218:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801321c:	e757      	b.n	80130ce <dhcp_client+0x92>
 801321e:	f06f 0001 	mvn.w	r0, #1
 8013222:	e754      	b.n	80130ce <dhcp_client+0x92>
 8013224:	2000fa28 	andcs	pc, r0, r8, lsr #20
 8013228:	2000fa44 	andcs	pc, r0, r4, asr #20
 801322c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8013230:	2000fa20 	andcs	pc, r0, r0, lsr #20
 8013234:	2000fa1c 	andcs	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
 8013238:	2000fa24 	andcs	pc, r0, r4, lsr #20
 801323c:	03010637 	movweq	r0, #5687	; 0x1637
 8013240:	3b3a0f06 	blcc	8e96e60 <__exidx_end+0xe7bff0>
 8013244:	2000fc4c 	andcs	pc, r0, ip, asr #24
 8013248:	2000fb31 	andcs	pc, r0, r1, lsr fp	; <UNPREDICTABLE>

0801324c <dhcp_client_release>:
 801324c:	b507      	push	{r0, r1, r2, lr}
 801324e:	2044      	movs	r0, #68	; 0x44
 8013250:	f7fe fb2e 	bl	80118b0 <udp_bind>
 8013254:	4912      	ldr	r1, [pc, #72]	; (80132a0 <dhcp_client_release+0x54>)
 8013256:	f243 6307 	movw	r3, #13831	; 0x3607
 801325a:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 801325e:	2304      	movs	r3, #4
 8013260:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8013264:	4b0f      	ldr	r3, [pc, #60]	; (80132a4 <dhcp_client_release+0x58>)
 8013266:	781a      	ldrb	r2, [r3, #0]
 8013268:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 801326c:	785a      	ldrb	r2, [r3, #1]
 801326e:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8013272:	789a      	ldrb	r2, [r3, #2]
 8013274:	78db      	ldrb	r3, [r3, #3]
 8013276:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 801327a:	23ff      	movs	r3, #255	; 0xff
 801327c:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8013280:	2343      	movs	r3, #67	; 0x43
 8013282:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8013286:	b2c0      	uxtb	r0, r0
 8013288:	9300      	str	r3, [sp, #0]
 801328a:	22fa      	movs	r2, #250	; 0xfa
 801328c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013290:	f7fe fba4 	bl	80119dc <udp_send>
 8013294:	2044      	movs	r0, #68	; 0x44
 8013296:	b003      	add	sp, #12
 8013298:	f85d eb04 	ldr.w	lr, [sp], #4
 801329c:	f7fe bb22 	b.w	80118e4 <udp_unbind>
 80132a0:	2000fa28 	andcs	pc, r0, r8, lsr #20
 80132a4:	2000fc4c 	andcs	pc, r0, ip, asr #24

080132a8 <memcpy.isra.0>:
 80132a8:	3801      	subs	r0, #1
 80132aa:	440a      	add	r2, r1
 80132ac:	4291      	cmp	r1, r2
 80132ae:	d100      	bne.n	80132b2 <memcpy.isra.0+0xa>
 80132b0:	4770      	bx	lr
 80132b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80132b6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80132ba:	e7f7      	b.n	80132ac <memcpy.isra.0+0x4>

080132bc <_send_report>:
 80132bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80132be:	4c1d      	ldr	r4, [pc, #116]	; (8013334 <_send_report+0x78>)
 80132c0:	9001      	str	r0, [sp, #4]
 80132c2:	f3c0 2306 	ubfx	r3, r0, #8, #7
 80132c6:	70e3      	strb	r3, [r4, #3]
 80132c8:	f104 0508 	add.w	r5, r4, #8
 80132cc:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80132d0:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80132d4:	7160      	strb	r0, [r4, #5]
 80132d6:	4621      	mov	r1, r4
 80132d8:	4628      	mov	r0, r5
 80132da:	2206      	movs	r2, #6
 80132dc:	7123      	strb	r3, [r4, #4]
 80132de:	f7ff ffe3 	bl	80132a8 <memcpy.isra.0>
 80132e2:	2204      	movs	r2, #4
 80132e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80132e6:	8363      	strh	r3, [r4, #26]
 80132e8:	eb0d 0102 	add.w	r1, sp, r2
 80132ec:	f104 0026 	add.w	r0, r4, #38	; 0x26
 80132f0:	f104 0616 	add.w	r6, r4, #22
 80132f4:	f7ff ffd8 	bl	80132a8 <memcpy.isra.0>
 80132f8:	2700      	movs	r7, #0
 80132fa:	2118      	movs	r1, #24
 80132fc:	4630      	mov	r0, r6
 80132fe:	8427      	strh	r7, [r4, #32]
 8013300:	f000 f8bf 	bl	8013482 <net_chksum>
 8013304:	2204      	movs	r2, #4
 8013306:	eb0d 0102 	add.w	r1, sp, r2
 801330a:	8420      	strh	r0, [r4, #32]
 801330c:	f104 0032 	add.w	r0, r4, #50	; 0x32
 8013310:	f7ff ffca 	bl	80132a8 <memcpy.isra.0>
 8013314:	2120      	movs	r1, #32
 8013316:	4630      	mov	r0, r6
 8013318:	8627      	strh	r7, [r4, #48]	; 0x30
 801331a:	f000 f8b2 	bl	8013482 <net_chksum>
 801331e:	212e      	movs	r1, #46	; 0x2e
 8013320:	8620      	strh	r0, [r4, #48]	; 0x30
 8013322:	4628      	mov	r0, r5
 8013324:	f003 fd66 	bl	8016df4 <emac_eth_send>
 8013328:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801332a:	3301      	adds	r3, #1
 801332c:	8723      	strh	r3, [r4, #56]	; 0x38
 801332e:	b003      	add	sp, #12
 8013330:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013332:	bf00      	nop
 8013334:	10001328 	andne	r1, r0, r8, lsr #6

08013338 <igmp_set_ip>:
 8013338:	b513      	push	{r0, r1, r4, lr}
 801333a:	4c09      	ldr	r4, [pc, #36]	; (8013360 <igmp_set_ip+0x28>)
 801333c:	6803      	ldr	r3, [r0, #0]
 801333e:	9301      	str	r3, [sp, #4]
 8013340:	2204      	movs	r2, #4
 8013342:	eb0d 0102 	add.w	r1, sp, r2
 8013346:	f104 0022 	add.w	r0, r4, #34	; 0x22
 801334a:	f7ff ffad 	bl	80132a8 <memcpy.isra.0>
 801334e:	2204      	movs	r2, #4
 8013350:	eb0d 0102 	add.w	r1, sp, r2
 8013354:	f104 0056 	add.w	r0, r4, #86	; 0x56
 8013358:	f7ff ffa6 	bl	80132a8 <memcpy.isra.0>
 801335c:	b002      	add	sp, #8
 801335e:	bd10      	pop	{r4, pc}
 8013360:	10001328 	andne	r1, r0, r8, lsr #6

08013364 <igmp_timer>:
 8013364:	b570      	push	{r4, r5, r6, lr}
 8013366:	4c0b      	ldr	r4, [pc, #44]	; (8013394 <igmp_timer+0x30>)
 8013368:	2500      	movs	r5, #0
 801336a:	2602      	movs	r6, #2
 801336c:	7963      	ldrb	r3, [r4, #5]
 801336e:	2b01      	cmp	r3, #1
 8013370:	d109      	bne.n	8013386 <igmp_timer+0x22>
 8013372:	7923      	ldrb	r3, [r4, #4]
 8013374:	b13b      	cbz	r3, 8013386 <igmp_timer+0x22>
 8013376:	3b01      	subs	r3, #1
 8013378:	b2db      	uxtb	r3, r3
 801337a:	7123      	strb	r3, [r4, #4]
 801337c:	b91b      	cbnz	r3, 8013386 <igmp_timer+0x22>
 801337e:	6820      	ldr	r0, [r4, #0]
 8013380:	f7ff ff9c 	bl	80132bc <_send_report>
 8013384:	7166      	strb	r6, [r4, #5]
 8013386:	3501      	adds	r5, #1
 8013388:	2d46      	cmp	r5, #70	; 0x46
 801338a:	f104 0408 	add.w	r4, r4, #8
 801338e:	d1ed      	bne.n	801336c <igmp_timer+0x8>
 8013390:	bd70      	pop	{r4, r5, r6, pc}
 8013392:	bf00      	nop
 8013394:	10001394 	mulne	r0, r4, r3

08013398 <igmp_join>:
 8013398:	b538      	push	{r3, r4, r5, lr}
 801339a:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 801339e:	2be0      	cmp	r3, #224	; 0xe0
 80133a0:	d11e      	bne.n	80133e0 <igmp_join+0x48>
 80133a2:	4a12      	ldr	r2, [pc, #72]	; (80133ec <igmp_join+0x54>)
 80133a4:	f8d2 429c 	ldr.w	r4, [r2, #668]	; 0x29c
 80133a8:	2c46      	cmp	r4, #70	; 0x46
 80133aa:	d01c      	beq.n	80133e6 <igmp_join+0x4e>
 80133ac:	2300      	movs	r3, #0
 80133ae:	f102 016c 	add.w	r1, r2, #108	; 0x6c
 80133b2:	429c      	cmp	r4, r3
 80133b4:	dc0e      	bgt.n	80133d4 <igmp_join+0x3c>
 80133b6:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
 80133ba:	f44f 7181 	mov.w	r1, #258	; 0x102
 80133be:	66d8      	str	r0, [r3, #108]	; 0x6c
 80133c0:	f8a3 1070 	strh.w	r1, [r3, #112]	; 0x70
 80133c4:	1c63      	adds	r3, r4, #1
 80133c6:	f8c2 329c 	str.w	r3, [r2, #668]	; 0x29c
 80133ca:	f7ff ff77 	bl	80132bc <_send_report>
 80133ce:	4623      	mov	r3, r4
 80133d0:	4618      	mov	r0, r3
 80133d2:	bd38      	pop	{r3, r4, r5, pc}
 80133d4:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
 80133d8:	4285      	cmp	r5, r0
 80133da:	d0f9      	beq.n	80133d0 <igmp_join+0x38>
 80133dc:	3301      	adds	r3, #1
 80133de:	e7e8      	b.n	80133b2 <igmp_join+0x1a>
 80133e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80133e4:	e7f4      	b.n	80133d0 <igmp_join+0x38>
 80133e6:	f06f 0301 	mvn.w	r3, #1
 80133ea:	e7f1      	b.n	80133d0 <igmp_join+0x38>
 80133ec:	10001328 	andne	r1, r0, r8, lsr #6

080133f0 <igmp_leave>:
 80133f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80133f2:	4c1d      	ldr	r4, [pc, #116]	; (8013468 <igmp_leave+0x78>)
 80133f4:	2600      	movs	r6, #0
 80133f6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80133fa:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 80133fe:	4282      	cmp	r2, r0
 8013400:	d006      	beq.n	8013410 <igmp_leave+0x20>
 8013402:	3601      	adds	r6, #1
 8013404:	2e46      	cmp	r6, #70	; 0x46
 8013406:	d1f8      	bne.n	80133fa <igmp_leave+0xa>
 8013408:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801340c:	b002      	add	sp, #8
 801340e:	bd70      	pop	{r4, r5, r6, pc}
 8013410:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013412:	9001      	str	r0, [sp, #4]
 8013414:	2500      	movs	r5, #0
 8013416:	2118      	movs	r1, #24
 8013418:	f104 0016 	add.w	r0, r4, #22
 801341c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8013420:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8013424:	f000 f82d 	bl	8013482 <net_chksum>
 8013428:	2204      	movs	r2, #4
 801342a:	eb0d 0102 	add.w	r1, sp, r2
 801342e:	f8a4 0054 	strh.w	r0, [r4, #84]	; 0x54
 8013432:	f104 0066 	add.w	r0, r4, #102	; 0x66
 8013436:	f7ff ff37 	bl	80132a8 <memcpy.isra.0>
 801343a:	2120      	movs	r1, #32
 801343c:	f104 004a 	add.w	r0, r4, #74	; 0x4a
 8013440:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8013444:	f000 f81d 	bl	8013482 <net_chksum>
 8013448:	212e      	movs	r1, #46	; 0x2e
 801344a:	f8a4 0064 	strh.w	r0, [r4, #100]	; 0x64
 801344e:	4807      	ldr	r0, [pc, #28]	; (801346c <igmp_leave+0x7c>)
 8013450:	f003 fcd0 	bl	8016df4 <emac_eth_send>
 8013454:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013456:	3301      	adds	r3, #1
 8013458:	8723      	strh	r3, [r4, #56]	; 0x38
 801345a:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 801345e:	4628      	mov	r0, r5
 8013460:	66e5      	str	r5, [r4, #108]	; 0x6c
 8013462:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 8013466:	e7d1      	b.n	801340c <igmp_leave+0x1c>
 8013468:	10001328 	andne	r1, r0, r8, lsr #6
 801346c:	10001364 	andne	r1, r0, r4, ror #6

08013470 <ip_set_ip>:
 8013470:	b510      	push	{r4, lr}
 8013472:	4604      	mov	r4, r0
 8013474:	f7fe f9fc 	bl	8011870 <udp_set_ip>
 8013478:	4620      	mov	r0, r4
 801347a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801347e:	f7ff bf5b 	b.w	8013338 <igmp_set_ip>

08013482 <net_chksum>:
 8013482:	f021 0201 	bic.w	r2, r1, #1
 8013486:	b530      	push	{r4, r5, lr}
 8013488:	2300      	movs	r3, #0
 801348a:	1884      	adds	r4, r0, r2
 801348c:	42a0      	cmp	r0, r4
 801348e:	d10b      	bne.n	80134a8 <net_chksum+0x26>
 8013490:	4291      	cmp	r1, r2
 8013492:	d004      	beq.n	801349e <net_chksum+0x1c>
 8013494:	7802      	ldrb	r2, [r0, #0]
 8013496:	0212      	lsls	r2, r2, #8
 8013498:	ba52      	rev16	r2, r2
 801349a:	fa13 f382 	uxtah	r3, r3, r2
 801349e:	0c1a      	lsrs	r2, r3, #16
 80134a0:	d106      	bne.n	80134b0 <net_chksum+0x2e>
 80134a2:	43d8      	mvns	r0, r3
 80134a4:	b280      	uxth	r0, r0
 80134a6:	bd30      	pop	{r4, r5, pc}
 80134a8:	f830 5b02 	ldrh.w	r5, [r0], #2
 80134ac:	442b      	add	r3, r5
 80134ae:	e7ed      	b.n	801348c <net_chksum+0xa>
 80134b0:	fa12 f383 	uxtah	r3, r2, r3
 80134b4:	e7f3      	b.n	801349e <net_chksum+0x1c>

080134b6 <net::link_register_read()>:
 80134b6:	b507      	push	{r0, r1, r2, lr}
 80134b8:	2201      	movs	r2, #1
 80134ba:	f10d 0306 	add.w	r3, sp, #6
 80134be:	4611      	mov	r1, r2
 80134c0:	2000      	movs	r0, #0
 80134c2:	f002 fcc9 	bl	8015e58 <enet_phy_write_read>
 80134c6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80134ca:	f080 0004 	eor.w	r0, r0, #4
 80134ce:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80134d2:	b003      	add	sp, #12
 80134d4:	f85d fb04 	ldr.w	pc, [sp], #4

080134d8 <memcpy.isra.0>:
 80134d8:	3801      	subs	r0, #1
 80134da:	440a      	add	r2, r1
 80134dc:	4291      	cmp	r1, r2
 80134de:	d100      	bne.n	80134e2 <memcpy.isra.0+0xa>
 80134e0:	4770      	bx	lr
 80134e2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80134e6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80134ea:	e7f7      	b.n	80134dc <memcpy.isra.0+0x4>

080134ec <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 80134ec:	b430      	push	{r4, r5}
 80134ee:	b168      	cbz	r0, 801350c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 80134f0:	7905      	ldrb	r5, [r0, #4]
 80134f2:	2300      	movs	r3, #0
 80134f4:	5cd4      	ldrb	r4, [r2, r3]
 80134f6:	b11c      	cbz	r4, 8013500 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80134f8:	1c5c      	adds	r4, r3, #1
 80134fa:	429d      	cmp	r5, r3
 80134fc:	4623      	mov	r3, r4
 80134fe:	dcf9      	bgt.n	80134f4 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8013500:	6804      	ldr	r4, [r0, #0]
 8013502:	69e4      	ldr	r4, [r4, #28]
 8013504:	b2db      	uxtb	r3, r3
 8013506:	46a4      	mov	ip, r4
 8013508:	bc30      	pop	{r4, r5}
 801350a:	4760      	bx	ip
 801350c:	bc30      	pop	{r4, r5}
 801350e:	4770      	bx	lr

08013510 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8013510:	b110      	cbz	r0, 8013518 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8013512:	6803      	ldr	r3, [r0, #0]
 8013514:	691b      	ldr	r3, [r3, #16]
 8013516:	4718      	bx	r3
 8013518:	4770      	bx	lr
	...

0801351c <DisplayUdf::DisplayUdf()>:
 801351c:	b510      	push	{r4, lr}
 801351e:	4604      	mov	r4, r0
 8013520:	f001 fc04 	bl	8014d2c <Display::Display()>
 8013524:	2202      	movs	r2, #2
 8013526:	2300      	movs	r3, #0
 8013528:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 801352c:	4b05      	ldr	r3, [pc, #20]	; (8013544 <DisplayUdf::DisplayUdf()+0x28>)
 801352e:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8013532:	601c      	str	r4, [r3, #0]
 8013534:	2301      	movs	r3, #1
 8013536:	f802 3f01 	strb.w	r3, [r2, #1]!
 801353a:	3301      	adds	r3, #1
 801353c:	2b15      	cmp	r3, #21
 801353e:	d1fa      	bne.n	8013536 <DisplayUdf::DisplayUdf()+0x1a>
 8013540:	4620      	mov	r0, r4
 8013542:	bd10      	pop	{r4, pc}
 8013544:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013548 <DisplayUdf::SetTitle(char const*, ...)>:
 8013548:	b40e      	push	{r1, r2, r3}
 801354a:	b517      	push	{r0, r1, r2, r4, lr}
 801354c:	ab05      	add	r3, sp, #20
 801354e:	4604      	mov	r4, r0
 8013550:	f853 2b04 	ldr.w	r2, [r3], #4
 8013554:	9301      	str	r3, [sp, #4]
 8013556:	211f      	movs	r1, #31
 8013558:	301c      	adds	r0, #28
 801355a:	f7f6 ff5f 	bl	800a41c <vsnprintf>
 801355e:	4420      	add	r0, r4
 8013560:	2300      	movs	r3, #0
 8013562:	7703      	strb	r3, [r0, #28]
 8013564:	b003      	add	sp, #12
 8013566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801356a:	b003      	add	sp, #12
 801356c:	4770      	bx	lr

0801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801356e:	1e4b      	subs	r3, r1, #1
 8013570:	2b05      	cmp	r3, #5
 8013572:	b530      	push	{r4, r5, lr}
 8013574:	d80f      	bhi.n	8013596 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8013576:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 801357a:	2300      	movs	r3, #0
 801357c:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8013580:	428d      	cmp	r5, r1
 8013582:	d109      	bne.n	8013598 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8013584:	1884      	adds	r4, r0, r2
 8013586:	4403      	add	r3, r0
 8013588:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 801358c:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8013590:	4402      	add	r2, r0
 8013592:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
 8013596:	bd30      	pop	{r4, r5, pc}
 8013598:	3301      	adds	r3, #1
 801359a:	2b14      	cmp	r3, #20
 801359c:	d1ee      	bne.n	801357c <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 801359e:	e7f7      	b.n	8013590 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080135a0 <DisplayUdf::ShowEmacStart()>:
 80135a0:	b510      	push	{r4, lr}
 80135a2:	4604      	mov	r4, r0
 80135a4:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80135a8:	6980      	ldr	r0, [r0, #24]
 80135aa:	f7ff ffb1 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80135ae:	4a03      	ldr	r2, [pc, #12]	; (80135bc <DisplayUdf::ShowEmacStart()+0x1c>)
 80135b0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80135b4:	4620      	mov	r0, r4
 80135b6:	f7f5 fe75 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 80135ba:	bd10      	pop	{r4, pc}
 80135bc:	0801a3b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sp, pc}

080135c0 <DisplayUdf::ShowIpAddress()>:
 80135c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135c4:	4604      	mov	r4, r0
 80135c6:	b088      	sub	sp, #32
 80135c8:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80135cc:	6980      	ldr	r0, [r0, #24]
 80135ce:	f7ff ff9f 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80135d2:	4b13      	ldr	r3, [pc, #76]	; (8013620 <DisplayUdf::ShowIpAddress()+0x60>)
 80135d4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80135d8:	681d      	ldr	r5, [r3, #0]
 80135da:	9107      	str	r1, [sp, #28]
 80135dc:	696e      	ldr	r6, [r5, #20]
 80135de:	69e8      	ldr	r0, [r5, #28]
 80135e0:	b2f3      	uxtb	r3, r6
 80135e2:	9306      	str	r3, [sp, #24]
 80135e4:	f004 fab6 	bl	8017b54 <__popcountsi2>
 80135e8:	79ea      	ldrb	r2, [r5, #7]
 80135ea:	f3c6 2707 	ubfx	r7, r6, #8, #8
 80135ee:	f3c6 4807 	ubfx	r8, r6, #16, #8
 80135f2:	e9dd 3106 	ldrd	r3, r1, [sp, #24]
 80135f6:	0e36      	lsrs	r6, r6, #24
 80135f8:	b982      	cbnz	r2, 801361c <DisplayUdf::ShowIpAddress()+0x5c>
 80135fa:	796a      	ldrb	r2, [r5, #5]
 80135fc:	2a00      	cmp	r2, #0
 80135fe:	bf14      	ite	ne
 8013600:	2244      	movne	r2, #68	; 0x44
 8013602:	2253      	moveq	r2, #83	; 0x53
 8013604:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8013608:	e9cd 8601 	strd	r8, r6, [sp, #4]
 801360c:	4a05      	ldr	r2, [pc, #20]	; (8013624 <DisplayUdf::ShowIpAddress()+0x64>)
 801360e:	9700      	str	r7, [sp, #0]
 8013610:	4620      	mov	r0, r4
 8013612:	f7f5 fe47 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013616:	b008      	add	sp, #32
 8013618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801361c:	225a      	movs	r2, #90	; 0x5a
 801361e:	e7f1      	b.n	8013604 <DisplayUdf::ShowIpAddress()+0x44>
 8013620:	2000f994 	mulcs	r0, r4, r9
 8013624:	0801a3c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sp, pc}

08013628 <DisplayUdf::ShowNetmask()>:
 8013628:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801362a:	4b0c      	ldr	r3, [pc, #48]	; (801365c <DisplayUdf::ShowNetmask()+0x34>)
 801362c:	681b      	ldr	r3, [r3, #0]
 801362e:	69db      	ldr	r3, [r3, #28]
 8013630:	0e1a      	lsrs	r2, r3, #24
 8013632:	9202      	str	r2, [sp, #8]
 8013634:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013638:	9201      	str	r2, [sp, #4]
 801363a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801363e:	9200      	str	r2, [sp, #0]
 8013640:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8013644:	4a06      	ldr	r2, [pc, #24]	; (8013660 <DisplayUdf::ShowNetmask()+0x38>)
 8013646:	b2db      	uxtb	r3, r3
 8013648:	4604      	mov	r4, r0
 801364a:	f7f5 fe2b 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 801364e:	4620      	mov	r0, r4
 8013650:	b004      	add	sp, #16
 8013652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013656:	f7ff bfb3 	b.w	80135c0 <DisplayUdf::ShowIpAddress()>
 801365a:	bf00      	nop
 801365c:	2000f994 	mulcs	r0, r4, r9
 8013660:	0801a3d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sp, pc}

08013664 <DisplayUdf::ShowGatewayIp()>:
 8013664:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013666:	4604      	mov	r4, r0
 8013668:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 801366c:	6980      	ldr	r0, [r0, #24]
 801366e:	f7ff ff4f 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013672:	4b0a      	ldr	r3, [pc, #40]	; (801369c <DisplayUdf::ShowGatewayIp()+0x38>)
 8013674:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8013678:	681b      	ldr	r3, [r3, #0]
 801367a:	699b      	ldr	r3, [r3, #24]
 801367c:	0e1a      	lsrs	r2, r3, #24
 801367e:	9202      	str	r2, [sp, #8]
 8013680:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013684:	9201      	str	r2, [sp, #4]
 8013686:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801368a:	9200      	str	r2, [sp, #0]
 801368c:	b2db      	uxtb	r3, r3
 801368e:	4a04      	ldr	r2, [pc, #16]	; (80136a0 <DisplayUdf::ShowGatewayIp()+0x3c>)
 8013690:	4620      	mov	r0, r4
 8013692:	f7f5 fe07 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013696:	b004      	add	sp, #16
 8013698:	bd10      	pop	{r4, pc}
 801369a:	bf00      	nop
 801369c:	2000f994 	mulcs	r0, r4, r9
 80136a0:	0801a3e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sp, pc}

080136a4 <DisplayUdf::ShowHostName()>:
 80136a4:	b510      	push	{r4, lr}
 80136a6:	4604      	mov	r4, r0
 80136a8:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80136ac:	6980      	ldr	r0, [r0, #24]
 80136ae:	f7ff ff2f 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80136b2:	4b05      	ldr	r3, [pc, #20]	; (80136c8 <DisplayUdf::ShowHostName()+0x24>)
 80136b4:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 80136b8:	681a      	ldr	r2, [r3, #0]
 80136ba:	69a0      	ldr	r0, [r4, #24]
 80136bc:	3220      	adds	r2, #32
 80136be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136c2:	f7ff bf13 	b.w	80134ec <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80136c6:	bf00      	nop
 80136c8:	2000f994 	mulcs	r0, r4, r9

080136cc <DisplayUdf::Show()>:
 80136cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80136ce:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 80136d2:	4604      	mov	r4, r0
 80136d4:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 80136d8:	21ff      	movs	r1, #255	; 0xff
 80136da:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80136de:	2806      	cmp	r0, #6
 80136e0:	bf88      	it	hi
 80136e2:	7019      	strbhi	r1, [r3, #0]
 80136e4:	429a      	cmp	r2, r3
 80136e6:	d1f8      	bne.n	80136da <DisplayUdf::Show()+0xe>
 80136e8:	2501      	movs	r5, #1
 80136ea:	4629      	mov	r1, r5
 80136ec:	3501      	adds	r5, #1
 80136ee:	69a0      	ldr	r0, [r4, #24]
 80136f0:	b2ed      	uxtb	r5, r5
 80136f2:	f7ff ff0d 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80136f6:	2d06      	cmp	r5, #6
 80136f8:	d1f7      	bne.n	80136ea <DisplayUdf::Show()+0x1e>
 80136fa:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 80136fe:	69a0      	ldr	r0, [r4, #24]
 8013700:	f104 021c 	add.w	r2, r4, #28
 8013704:	f7ff fef2 	bl	80134ec <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013708:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 801370c:	69a0      	ldr	r0, [r4, #24]
 801370e:	4a0d      	ldr	r2, [pc, #52]	; (8013744 <DisplayUdf::Show()+0x78>)
 8013710:	f7ff feec 	bl	80134ec <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8013714:	4b0c      	ldr	r3, [pc, #48]	; (8013748 <DisplayUdf::Show()+0x7c>)
 8013716:	4a0d      	ldr	r2, [pc, #52]	; (801374c <DisplayUdf::Show()+0x80>)
 8013718:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 801371c:	9300      	str	r3, [sp, #0]
 801371e:	4620      	mov	r0, r4
 8013720:	2303      	movs	r3, #3
 8013722:	f7f5 fdbf 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013726:	4620      	mov	r0, r4
 8013728:	f7ff ff4a 	bl	80135c0 <DisplayUdf::ShowIpAddress()>
 801372c:	4620      	mov	r0, r4
 801372e:	f7ff ff99 	bl	8013664 <DisplayUdf::ShowGatewayIp()>
 8013732:	4620      	mov	r0, r4
 8013734:	f7ff ff78 	bl	8013628 <DisplayUdf::ShowNetmask()>
 8013738:	4620      	mov	r0, r4
 801373a:	b003      	add	sp, #12
 801373c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013740:	f7ff bfb0 	b.w	80136a4 <DisplayUdf::ShowHostName()>
 8013744:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}
 8013748:	2000fd20 	andcs	pc, r0, r0, lsr #26
 801374c:	0801a3f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sp, pc}

08013750 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8013750:	3901      	subs	r1, #1
 8013752:	b510      	push	{r4, lr}
 8013754:	4604      	mov	r4, r0
 8013756:	2903      	cmp	r1, #3
 8013758:	d814      	bhi.n	8013784 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801375a:	e8df f001 	tbb	[pc, r1]
 801375e:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8013762:	4b14      	ldr	r3, [pc, #80]	; (80137b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013764:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8013768:	6818      	ldr	r0, [r3, #0]
 801376a:	f7f7 f8cb 	bl	800a904 <Display::Status(Display7SegmentMessage)>
 801376e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8013772:	69a0      	ldr	r0, [r4, #24]
 8013774:	f7ff fecc 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8013778:	4a0f      	ldr	r2, [pc, #60]	; (80137b8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 801377a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801377e:	4620      	mov	r0, r4
 8013780:	f7f5 fd90 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013784:	bd10      	pop	{r4, pc}
 8013786:	f248 0180 	movw	r1, #32896	; 0x8080
 801378a:	4b0a      	ldr	r3, [pc, #40]	; (80137b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 801378c:	6818      	ldr	r0, [r3, #0]
 801378e:	f7f7 f8b9 	bl	800a904 <Display::Status(Display7SegmentMessage)>
 8013792:	e7f7      	b.n	8013784 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8013794:	4b07      	ldr	r3, [pc, #28]	; (80137b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8013796:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 801379a:	6818      	ldr	r0, [r3, #0]
 801379c:	f7f7 f8b2 	bl	800a904 <Display::Status(Display7SegmentMessage)>
 80137a0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80137a4:	69a0      	ldr	r0, [r4, #24]
 80137a6:	f7ff feb3 	bl	8013510 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80137aa:	4a04      	ldr	r2, [pc, #16]	; (80137bc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80137ac:	e7e5      	b.n	801377a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80137ae:	f645 3179 	movw	r1, #23417	; 0x5b79
 80137b2:	e7ea      	b.n	801378a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80137b4:	2000fc90 	mulcs	r0, r0, ip
 80137b8:	0801a403 	stmdaeq	r1, {r0, r1, sl, sp, pc}
 80137bc:	0801a411 	stmdaeq	r1, {r0, r4, sl, sp, pc}

080137c0 <DisplayUdf::ShowShutdown()>:
 80137c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80137c2:	4604      	mov	r4, r0
 80137c4:	6980      	ldr	r0, [r0, #24]
 80137c6:	b1c0      	cbz	r0, 80137fa <DisplayUdf::ShowShutdown()+0x3a>
 80137c8:	7947      	ldrb	r7, [r0, #5]
 80137ca:	6803      	ldr	r3, [r0, #0]
 80137cc:	7905      	ldrb	r5, [r0, #4]
 80137ce:	6a1b      	ldr	r3, [r3, #32]
 80137d0:	1e7a      	subs	r2, r7, #1
 80137d2:	b2d2      	uxtb	r2, r2
 80137d4:	9201      	str	r2, [sp, #4]
 80137d6:	2100      	movs	r1, #0
 80137d8:	4798      	blx	r3
 80137da:	9a01      	ldr	r2, [sp, #4]
 80137dc:	2600      	movs	r6, #0
 80137de:	3d01      	subs	r5, #1
 80137e0:	42ae      	cmp	r6, r5
 80137e2:	69a0      	ldr	r0, [r4, #24]
 80137e4:	d310      	bcc.n	8013808 <DisplayUdf::ShowShutdown()+0x48>
 80137e6:	b118      	cbz	r0, 80137f0 <DisplayUdf::ShowShutdown()+0x30>
 80137e8:	6803      	ldr	r3, [r0, #0]
 80137ea:	2100      	movs	r1, #0
 80137ec:	6a1b      	ldr	r3, [r3, #32]
 80137ee:	4798      	blx	r3
 80137f0:	4a0a      	ldr	r2, [pc, #40]	; (801381c <DisplayUdf::ShowShutdown()+0x5c>)
 80137f2:	69a0      	ldr	r0, [r4, #24]
 80137f4:	4639      	mov	r1, r7
 80137f6:	f7ff fe79 	bl	80134ec <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80137fa:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 80137fe:	4620      	mov	r0, r4
 8013800:	f7f7 f880 	bl	800a904 <Display::Status(Display7SegmentMessage)>
 8013804:	b003      	add	sp, #12
 8013806:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013808:	b128      	cbz	r0, 8013816 <DisplayUdf::ShowShutdown()+0x56>
 801380a:	6803      	ldr	r3, [r0, #0]
 801380c:	9201      	str	r2, [sp, #4]
 801380e:	695b      	ldr	r3, [r3, #20]
 8013810:	2120      	movs	r1, #32
 8013812:	4798      	blx	r3
 8013814:	9a01      	ldr	r2, [sp, #4]
 8013816:	3601      	adds	r6, #1
 8013818:	e7e2      	b.n	80137e0 <DisplayUdf::ShowShutdown()+0x20>
 801381a:	bf00      	nop
 801381c:	0801a41f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, sp, pc}

08013820 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8013820:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013822:	88c6      	ldrh	r6, [r0, #6]
 8013824:	8885      	ldrh	r5, [r0, #4]
 8013826:	42ae      	cmp	r6, r5
 8013828:	d216      	bcs.n	8013858 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 801382a:	4604      	mov	r4, r0
 801382c:	6800      	ldr	r0, [r0, #0]
 801382e:	1bad      	subs	r5, r5, r6
 8013830:	4430      	add	r0, r6
 8013832:	7a26      	ldrb	r6, [r4, #8]
 8013834:	b923      	cbnz	r3, 8013840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8013836:	b926      	cbnz	r6, 8013842 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8013838:	9200      	str	r2, [sp, #0]
 801383a:	460b      	mov	r3, r1
 801383c:	4a09      	ldr	r2, [pc, #36]	; (8013864 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 801383e:	e003      	b.n	8013848 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013840:	b166      	cbz	r6, 801385c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8013842:	9200      	str	r2, [sp, #0]
 8013844:	4a08      	ldr	r2, [pc, #32]	; (8013868 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8013846:	460b      	mov	r3, r1
 8013848:	4629      	mov	r1, r5
 801384a:	f7f6 fdcf 	bl	800a3ec <snprintf>
 801384e:	4285      	cmp	r5, r0
 8013850:	bfa2      	ittt	ge
 8013852:	88e3      	ldrhge	r3, [r4, #6]
 8013854:	181b      	addge	r3, r3, r0
 8013856:	80e3      	strhge	r3, [r4, #6]
 8013858:	b002      	add	sp, #8
 801385a:	bd70      	pop	{r4, r5, r6, pc}
 801385c:	9200      	str	r2, [sp, #0]
 801385e:	460b      	mov	r3, r1
 8013860:	4a02      	ldr	r2, [pc, #8]	; (801386c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8013862:	e7f1      	b.n	8013848 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8013864:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 8013868:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 801386c:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

08013870 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8013870:	b510      	push	{r4, lr}
 8013872:	2220      	movs	r2, #32
 8013874:	4604      	mov	r4, r0
 8013876:	f840 1b04 	str.w	r1, [r0], #4
 801387a:	2100      	movs	r1, #0
 801387c:	f001 ff08 	bl	8015690 <memset>
 8013880:	f647 7305 	movw	r3, #32517	; 0x7f05
 8013884:	84a3      	strh	r3, [r4, #36]	; 0x24
 8013886:	4620      	mov	r0, r4
 8013888:	bd10      	pop	{r4, pc}

0801388a <DisplayUdfParams::Load()>:
 801388a:	b508      	push	{r3, lr}
 801388c:	2300      	movs	r3, #0
 801388e:	4601      	mov	r1, r0
 8013890:	6043      	str	r3, [r0, #4]
 8013892:	6800      	ldr	r0, [r0, #0]
 8013894:	b120      	cbz	r0, 80138a0 <DisplayUdfParams::Load()+0x16>
 8013896:	6803      	ldr	r3, [r0, #0]
 8013898:	3104      	adds	r1, #4
 801389a:	68db      	ldr	r3, [r3, #12]
 801389c:	4798      	blx	r3
 801389e:	2001      	movs	r0, #1
 80138a0:	bd08      	pop	{r3, pc}
	...

080138a4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80138a4:	6803      	ldr	r3, [r0, #0]
 80138a6:	b1d3      	cbz	r3, 80138de <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80138a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80138aa:	2300      	movs	r3, #0
 80138ac:	6043      	str	r3, [r0, #4]
 80138ae:	4604      	mov	r4, r0
 80138b0:	460d      	mov	r5, r1
 80138b2:	4616      	mov	r6, r2
 80138b4:	490a      	ldr	r1, [pc, #40]	; (80138e0 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 80138b6:	4602      	mov	r2, r0
 80138b8:	4668      	mov	r0, sp
 80138ba:	f001 f841 	bl	8014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80138be:	4632      	mov	r2, r6
 80138c0:	4629      	mov	r1, r5
 80138c2:	4668      	mov	r0, sp
 80138c4:	f001 f840 	bl	8014948 <ReadConfigFile::Read(char const*, unsigned int)>
 80138c8:	4621      	mov	r1, r4
 80138ca:	f851 0b04 	ldr.w	r0, [r1], #4
 80138ce:	6803      	ldr	r3, [r0, #0]
 80138d0:	689b      	ldr	r3, [r3, #8]
 80138d2:	4798      	blx	r3
 80138d4:	4668      	mov	r0, sp
 80138d6:	f001 f836 	bl	8014946 <ReadConfigFile::~ReadConfigFile()>
 80138da:	b002      	add	sp, #8
 80138dc:	bd70      	pop	{r4, r5, r6, pc}
 80138de:	4770      	bx	lr
 80138e0:	080139ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, fp, ip, sp}

080138e4 <DisplayUdfParams::callbackFunction(char const*)>:
 80138e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80138e6:	460e      	mov	r6, r1
 80138e8:	4604      	mov	r4, r0
 80138ea:	492c      	ldr	r1, [pc, #176]	; (801399c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 80138ec:	f10d 0207 	add.w	r2, sp, #7
 80138f0:	4630      	mov	r0, r6
 80138f2:	f001 f95a 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80138f6:	b968      	cbnz	r0, 8013914 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 80138f8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80138fc:	6863      	ldr	r3, [r4, #4]
 80138fe:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8013902:	2a7f      	cmp	r2, #127	; 0x7f
 8013904:	bf14      	ite	ne
 8013906:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 801390a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 801390e:	6063      	str	r3, [r4, #4]
 8013910:	b003      	add	sp, #12
 8013912:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013914:	4922      	ldr	r1, [pc, #136]	; (80139a0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8013916:	f10d 0207 	add.w	r2, sp, #7
 801391a:	4630      	mov	r0, r6
 801391c:	f001 f945 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013920:	b958      	cbnz	r0, 801393a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8013922:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013926:	6863      	ldr	r3, [r4, #4]
 8013928:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 801392c:	2a05      	cmp	r2, #5
 801392e:	bf14      	ite	ne
 8013930:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8013934:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8013938:	e7e9      	b.n	801390e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801393a:	491a      	ldr	r1, [pc, #104]	; (80139a4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 801393c:	f10d 0207 	add.w	r2, sp, #7
 8013940:	4630      	mov	r0, r6
 8013942:	f001 f932 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013946:	b948      	cbnz	r0, 801395c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8013948:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801394c:	6863      	ldr	r3, [r4, #4]
 801394e:	b112      	cbz	r2, 8013956 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8013950:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8013954:	e7db      	b.n	801390e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013956:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801395a:	e7d8      	b.n	801390e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801395c:	4f12      	ldr	r7, [pc, #72]	; (80139a8 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 801395e:	2500      	movs	r5, #0
 8013960:	f857 1b04 	ldr.w	r1, [r7], #4
 8013964:	f10d 0207 	add.w	r2, sp, #7
 8013968:	4630      	mov	r0, r6
 801396a:	f001 f91e 	bl	8014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801396e:	b988      	cbnz	r0, 8013994 <DisplayUdfParams::callbackFunction(char const*)+0xb0>
 8013970:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013974:	6862      	ldr	r2, [r4, #4]
 8013976:	1e4e      	subs	r6, r1, #1
 8013978:	2301      	movs	r3, #1
 801397a:	2e05      	cmp	r6, #5
 801397c:	fa03 f305 	lsl.w	r3, r3, r5
 8013980:	4425      	add	r5, r4
 8013982:	d802      	bhi.n	801398a <DisplayUdfParams::callbackFunction(char const*)+0xa6>
 8013984:	7229      	strb	r1, [r5, #8]
 8013986:	4313      	orrs	r3, r2
 8013988:	e7c1      	b.n	801390e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801398a:	ea22 0203 	bic.w	r2, r2, r3
 801398e:	7228      	strb	r0, [r5, #8]
 8013990:	6062      	str	r2, [r4, #4]
 8013992:	e7bd      	b.n	8013910 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8013994:	3501      	adds	r5, #1
 8013996:	2d14      	cmp	r5, #20
 8013998:	d1e2      	bne.n	8013960 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 801399a:	e7b9      	b.n	8013910 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801399c:	0801a4de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, sp, pc}
 80139a0:	0801a4a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, sp, pc}
 80139a4:	0801a4b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp, pc}
 80139a8:	0801a430 	stmdaeq	r1, {r4, r5, sl, sp, pc}

080139ac <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80139ac:	f7ff bf9a 	b.w	80138e4 <DisplayUdfParams::callbackFunction(char const*)>

080139b0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80139b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80139b4:	4604      	mov	r4, r0
 80139b6:	b086      	sub	sp, #24
 80139b8:	4615      	mov	r5, r2
 80139ba:	461e      	mov	r6, r3
 80139bc:	3004      	adds	r0, #4
 80139be:	b379      	cbz	r1, 8013a20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 80139c0:	2222      	movs	r2, #34	; 0x22
 80139c2:	f001 fe4e 	bl	8015662 <memmove>
 80139c6:	462a      	mov	r2, r5
 80139c8:	493e      	ldr	r1, [pc, #248]	; (8013ac4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 80139ca:	4633      	mov	r3, r6
 80139cc:	a803      	add	r0, sp, #12
 80139ce:	f000 ff17 	bl	8014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80139d2:	6863      	ldr	r3, [r4, #4]
 80139d4:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 80139d8:	493b      	ldr	r1, [pc, #236]	; (8013ac8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 80139da:	f3c3 7340 	ubfx	r3, r3, #29, #1
 80139de:	a803      	add	r0, sp, #12
 80139e0:	f7ff ff1e 	bl	8013820 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80139e4:	6863      	ldr	r3, [r4, #4]
 80139e6:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 80139ea:	4938      	ldr	r1, [pc, #224]	; (8013acc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80139ec:	f3c3 7300 	ubfx	r3, r3, #28, #1
 80139f0:	a803      	add	r0, sp, #12
 80139f2:	f7ff ff15 	bl	8013820 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80139f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80139fa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80139fe:	6863      	ldr	r3, [r4, #4]
 8013a00:	42aa      	cmp	r2, r5
 8013a02:	d226      	bcs.n	8013a52 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8013a04:	9803      	ldr	r0, [sp, #12]
 8013a06:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8013a0a:	4410      	add	r0, r2
 8013a0c:	eba5 0502 	sub.w	r5, r5, r2
 8013a10:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013a14:	d10b      	bne.n	8013a2e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8013a16:	b962      	cbnz	r2, 8013a32 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8013a18:	9200      	str	r2, [sp, #0]
 8013a1a:	4b2d      	ldr	r3, [pc, #180]	; (8013ad0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013a1c:	4a2d      	ldr	r2, [pc, #180]	; (8013ad4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8013a1e:	e00e      	b.n	8013a3e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8013a20:	6823      	ldr	r3, [r4, #0]
 8013a22:	681a      	ldr	r2, [r3, #0]
 8013a24:	4601      	mov	r1, r0
 8013a26:	68d2      	ldr	r2, [r2, #12]
 8013a28:	4618      	mov	r0, r3
 8013a2a:	4790      	blx	r2
 8013a2c:	e7cb      	b.n	80139c6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8013a2e:	2a00      	cmp	r2, #0
 8013a30:	d042      	beq.n	8013ab8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8013a32:	3b00      	subs	r3, #0
 8013a34:	bf18      	it	ne
 8013a36:	2301      	movne	r3, #1
 8013a38:	9300      	str	r3, [sp, #0]
 8013a3a:	4a27      	ldr	r2, [pc, #156]	; (8013ad8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8013a3c:	4b24      	ldr	r3, [pc, #144]	; (8013ad0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013a3e:	4629      	mov	r1, r5
 8013a40:	f7f6 fcd4 	bl	800a3ec <snprintf>
 8013a44:	4285      	cmp	r5, r0
 8013a46:	bfa2      	ittt	ge
 8013a48:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8013a4c:	181b      	addge	r3, r3, r0
 8013a4e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013a52:	4e22      	ldr	r6, [pc, #136]	; (8013adc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8013a54:	2500      	movs	r5, #0
 8013a56:	2701      	movs	r7, #1
 8013a58:	f104 0808 	add.w	r8, r4, #8
 8013a5c:	f856 1b04 	ldr.w	r1, [r6], #4
 8013a60:	780b      	ldrb	r3, [r1, #0]
 8013a62:	b163      	cbz	r3, 8013a7e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 8013a64:	6862      	ldr	r2, [r4, #4]
 8013a66:	fa07 f305 	lsl.w	r3, r7, r5
 8013a6a:	4393      	bics	r3, r2
 8013a6c:	bf08      	it	eq
 8013a6e:	2301      	moveq	r3, #1
 8013a70:	f818 2005 	ldrb.w	r2, [r8, r5]
 8013a74:	bf18      	it	ne
 8013a76:	2300      	movne	r3, #0
 8013a78:	a803      	add	r0, sp, #12
 8013a7a:	f7ff fed1 	bl	8013820 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8013a7e:	3501      	adds	r5, #1
 8013a80:	2d14      	cmp	r5, #20
 8013a82:	d1eb      	bne.n	8013a5c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8013a84:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013a88:	b17b      	cbz	r3, 8013aaa <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xfa>
 8013a8a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013a8e:	9b03      	ldr	r3, [sp, #12]
 8013a90:	4413      	add	r3, r2
 8013a92:	227d      	movs	r2, #125	; 0x7d
 8013a94:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013a98:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013a9c:	9903      	ldr	r1, [sp, #12]
 8013a9e:	54ca      	strb	r2, [r1, r3]
 8013aa0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013aa4:	3301      	adds	r3, #1
 8013aa6:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013aaa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013aae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013ab0:	601a      	str	r2, [r3, #0]
 8013ab2:	b006      	add	sp, #24
 8013ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ab8:	2301      	movs	r3, #1
 8013aba:	9300      	str	r3, [sp, #0]
 8013abc:	4a08      	ldr	r2, [pc, #32]	; (8013ae0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x130>)
 8013abe:	4b04      	ldr	r3, [pc, #16]	; (8013ad0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8013ac0:	e7bd      	b.n	8013a3e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8013ac2:	bf00      	nop
 8013ac4:	0801a4d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, sp, pc}
 8013ac8:	0801a4de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, sp, pc}
 8013acc:	0801a4a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, sp, pc}
 8013ad0:	0801a4b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp, pc}
 8013ad4:	08018139 	stmdaeq	r1, {r0, r3, r4, r5, r8, pc}
 8013ad8:	08018130 	stmdaeq	r1, {r4, r5, r8, pc}
 8013adc:	0801a430 	stmdaeq	r1, {r4, r5, sl, sp, pc}
 8013ae0:	0801813a 	stmdaeq	r1, {r1, r3, r4, r5, r8, pc}

08013ae4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8013ae4:	b513      	push	{r0, r1, r4, lr}
 8013ae6:	6804      	ldr	r4, [r0, #0]
 8013ae8:	b914      	cbnz	r4, 8013af0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8013aea:	601c      	str	r4, [r3, #0]
 8013aec:	b002      	add	sp, #8
 8013aee:	bd10      	pop	{r4, pc}
 8013af0:	9300      	str	r3, [sp, #0]
 8013af2:	4613      	mov	r3, r2
 8013af4:	460a      	mov	r2, r1
 8013af6:	2100      	movs	r1, #0
 8013af8:	f7ff ff5a 	bl	80139b0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8013afc:	e7f6      	b.n	8013aec <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08013afe <DisplayUdfParams::Set(DisplayUdf*)>:
 8013afe:	6843      	ldr	r3, [r0, #4]
 8013b00:	009a      	lsls	r2, r3, #2
 8013b02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b06:	4604      	mov	r4, r0
 8013b08:	460e      	mov	r6, r1
 8013b0a:	d506      	bpl.n	8013b1a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8013b0c:	6988      	ldr	r0, [r1, #24]
 8013b0e:	b120      	cbz	r0, 8013b1a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8013b10:	6803      	ldr	r3, [r0, #0]
 8013b12:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8013b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b18:	4798      	blx	r3
 8013b1a:	6863      	ldr	r3, [r4, #4]
 8013b1c:	69b0      	ldr	r0, [r6, #24]
 8013b1e:	00db      	lsls	r3, r3, #3
 8013b20:	bf41      	itttt	mi
 8013b22:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8013b26:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8013b2a:	4353      	mulmi	r3, r2
 8013b2c:	6173      	strmi	r3, [r6, #20]
 8013b2e:	6861      	ldr	r1, [r4, #4]
 8013b30:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8013b34:	b110      	cbz	r0, 8013b3c <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8013b36:	6803      	ldr	r3, [r0, #0]
 8013b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013b3a:	4798      	blx	r3
 8013b3c:	2500      	movs	r5, #0
 8013b3e:	2701      	movs	r7, #1
 8013b40:	f104 0808 	add.w	r8, r4, #8
 8013b44:	6862      	ldr	r2, [r4, #4]
 8013b46:	fa07 f305 	lsl.w	r3, r7, r5
 8013b4a:	4393      	bics	r3, r2
 8013b4c:	d105      	bne.n	8013b5a <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8013b4e:	f818 1005 	ldrb.w	r1, [r8, r5]
 8013b52:	462a      	mov	r2, r5
 8013b54:	4630      	mov	r0, r6
 8013b56:	f7ff fd0a 	bl	801356e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8013b5a:	3501      	adds	r5, #1
 8013b5c:	2d14      	cmp	r5, #20
 8013b5e:	d1f1      	bne.n	8013b44 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8013b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013b64 <DisplayUdfParams::Dump()>:
 8013b64:	4770      	bx	lr
	...

08013b68 <DisplayUdf::Show(E131Bridge*)>:
 8013b68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b6c:	460e      	mov	r6, r1
 8013b6e:	b085      	sub	sp, #20
 8013b70:	4604      	mov	r4, r0
 8013b72:	f7ff fdab 	bl	80136cc <DisplayUdf::Show()>
 8013b76:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8013b7a:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8013b7e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8013b82:	4f22      	ldr	r7, [pc, #136]	; (8013c0c <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8013b84:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8013c24 <DisplayUdf::Show(E131Bridge*)+0xbc>
 8013b88:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8013c28 <DisplayUdf::Show(E131Bridge*)+0xc0>
 8013b8c:	4413      	add	r3, r2
 8013b8e:	4620      	mov	r0, r4
 8013b90:	4a1f      	ldr	r2, [pc, #124]	; (8013c10 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8013b92:	f7f5 fb87 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013b96:	2500      	movs	r5, #0
 8013b98:	2301      	movs	r3, #1
 8013b9a:	f10d 020e 	add.w	r2, sp, #14
 8013b9e:	4629      	mov	r1, r5
 8013ba0:	4630      	mov	r0, r6
 8013ba2:	f7f8 fa53 	bl	800c04c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8013ba6:	b1a8      	cbz	r0, 8013bd4 <DisplayUdf::Show(E131Bridge*)+0x6c>
 8013ba8:	2344      	movs	r3, #68	; 0x44
 8013baa:	436b      	muls	r3, r5
 8013bac:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8013bb0:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8013bb4:	58d2      	ldr	r2, [r2, r3]
 8013bb6:	2a00      	cmp	r2, #0
 8013bb8:	bf0c      	ite	eq
 8013bba:	463b      	moveq	r3, r7
 8013bbc:	4643      	movne	r3, r8
 8013bbe:	e9cd 0300 	strd	r0, r3, [sp]
 8013bc2:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8013bc6:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8013bca:	5d49      	ldrb	r1, [r1, r5]
 8013bcc:	464a      	mov	r2, r9
 8013bce:	4620      	mov	r0, r4
 8013bd0:	f7f5 fb68 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013bd4:	3501      	adds	r5, #1
 8013bd6:	2d04      	cmp	r5, #4
 8013bd8:	d1de      	bne.n	8013b98 <DisplayUdf::Show(E131Bridge*)+0x30>
 8013bda:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8013bdc:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8013be0:	2a02      	cmp	r2, #2
 8013be2:	d001      	beq.n	8013be8 <DisplayUdf::Show(E131Bridge*)+0x80>
 8013be4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8013be6:	b933      	cbnz	r3, 8013bf6 <DisplayUdf::Show(E131Bridge*)+0x8e>
 8013be8:	4a0a      	ldr	r2, [pc, #40]	; (8013c14 <DisplayUdf::Show(E131Bridge*)+0xac>)
 8013bea:	4620      	mov	r0, r4
 8013bec:	f7f5 fb5a 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013bf0:	b005      	add	sp, #20
 8013bf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013bf6:	4808      	ldr	r0, [pc, #32]	; (8013c18 <DisplayUdf::Show(E131Bridge*)+0xb0>)
 8013bf8:	9300      	str	r3, [sp, #0]
 8013bfa:	4b08      	ldr	r3, [pc, #32]	; (8013c1c <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8013bfc:	2a00      	cmp	r2, #0
 8013bfe:	bf08      	it	eq
 8013c00:	4603      	moveq	r3, r0
 8013c02:	4a07      	ldr	r2, [pc, #28]	; (8013c20 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8013c04:	4620      	mov	r0, r4
 8013c06:	f7f5 fb4d 	bl	80092a4 <Display::Printf(unsigned char, char const*, ...)>
 8013c0a:	e7f1      	b.n	8013bf0 <DisplayUdf::Show(E131Bridge*)+0x88>
 8013c0c:	08018f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, pc}
 8013c10:	0801a4e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, sp, pc}
 8013c14:	0801a4fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, sp, pc}
 8013c18:	0801905c 	stmdaeq	r1, {r2, r3, r4, r6, ip, pc}
 8013c1c:	08019051 	stmdaeq	r1, {r0, r4, r6, ip, pc}
 8013c20:	0801a505 	stmdaeq	r1, {r0, r2, r8, sl, sp, pc}
 8013c24:	08018f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, pc}
 8013c28:	0801a4ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sl, sp, pc}

08013c2c <network::display_emac_start()>:
 8013c2c:	4b01      	ldr	r3, [pc, #4]	; (8013c34 <network::display_emac_start()+0x8>)
 8013c2e:	6818      	ldr	r0, [r3, #0]
 8013c30:	f7ff bcb6 	b.w	80135a0 <DisplayUdf::ShowEmacStart()>
 8013c34:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c38 <network::display_ip()>:
 8013c38:	4b01      	ldr	r3, [pc, #4]	; (8013c40 <network::display_ip()+0x8>)
 8013c3a:	6818      	ldr	r0, [r3, #0]
 8013c3c:	f7ff bcc0 	b.w	80135c0 <DisplayUdf::ShowIpAddress()>
 8013c40:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c44 <network::display_netmask()>:
 8013c44:	4b01      	ldr	r3, [pc, #4]	; (8013c4c <network::display_netmask()+0x8>)
 8013c46:	6818      	ldr	r0, [r3, #0]
 8013c48:	f7ff bcee 	b.w	8013628 <DisplayUdf::ShowNetmask()>
 8013c4c:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c50 <network::display_gateway()>:
 8013c50:	4b01      	ldr	r3, [pc, #4]	; (8013c58 <network::display_gateway()+0x8>)
 8013c52:	6818      	ldr	r0, [r3, #0]
 8013c54:	f7ff bd06 	b.w	8013664 <DisplayUdf::ShowGatewayIp()>
 8013c58:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c5c <network::display_hostname()>:
 8013c5c:	4b01      	ldr	r3, [pc, #4]	; (8013c64 <network::display_hostname()+0x8>)
 8013c5e:	6818      	ldr	r0, [r3, #0]
 8013c60:	f7ff bd20 	b.w	80136a4 <DisplayUdf::ShowHostName()>
 8013c64:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c68 <network::display_emac_shutdown()>:
 8013c68:	4b01      	ldr	r3, [pc, #4]	; (8013c70 <network::display_emac_shutdown()+0x8>)
 8013c6a:	6818      	ldr	r0, [r3, #0]
 8013c6c:	f7ff bda8 	b.w	80137c0 <DisplayUdf::ShowShutdown()>
 8013c70:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c74 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 8013c74:	4b02      	ldr	r3, [pc, #8]	; (8013c80 <network::display_dhcp_status(network::dhcp::ClientStatus)+0xc>)
 8013c76:	4601      	mov	r1, r0
 8013c78:	6818      	ldr	r0, [r3, #0]
 8013c7a:	f7ff bd69 	b.w	8013750 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8013c7e:	bf00      	nop
 8013c80:	2000fc50 	andcs	pc, r0, r0, asr ip	; <UNPREDICTABLE>

08013c84 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8013c84:	b510      	push	{r4, lr}
 8013c86:	4a05      	ldr	r2, [pc, #20]	; (8013c9c <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8013c88:	2300      	movs	r3, #0
 8013c8a:	2020      	movs	r0, #32
 8013c8c:	428b      	cmp	r3, r1
 8013c8e:	d100      	bne.n	8013c92 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8013c90:	bd10      	pop	{r4, pc}
 8013c92:	f852 4b04 	ldr.w	r4, [r2], #4
 8013c96:	3301      	adds	r3, #1
 8013c98:	4420      	add	r0, r4
 8013c9a:	e7f7      	b.n	8013c8c <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8013c9c:	0801a510 	stmdaeq	r1, {r4, r8, sl, sp, pc}

08013ca0 <ConfigStore::Init()>:
 8013ca0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ca4:	b085      	sub	sp, #20
 8013ca6:	4607      	mov	r7, r0
 8013ca8:	f000 fb4f 	bl	801434a <StoreDevice::GetSectorSize() const>
 8013cac:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8013cb0:	4605      	mov	r5, r0
 8013cb2:	d004      	beq.n	8013cbe <ConfigStore::Init()+0x1e>
 8013cb4:	2500      	movs	r5, #0
 8013cb6:	4628      	mov	r0, r5
 8013cb8:	b005      	add	sp, #20
 8013cba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013cbe:	4638      	mov	r0, r7
 8013cc0:	f000 fb40 	bl	8014344 <StoreDevice::GetSize() const>
 8013cc4:	4b3a      	ldr	r3, [pc, #232]	; (8013db0 <ConfigStore::Init()+0x110>)
 8013cc6:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8013cca:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8013cce:	6019      	str	r1, [r3, #0]
 8013cd0:	2e00      	cmp	r6, #0
 8013cd2:	d1ef      	bne.n	8013cb4 <ConfigStore::Init()+0x14>
 8013cd4:	4c37      	ldr	r4, [pc, #220]	; (8013db4 <ConfigStore::Init()+0x114>)
 8013cd6:	ab03      	add	r3, sp, #12
 8013cd8:	462a      	mov	r2, r5
 8013cda:	9300      	str	r3, [sp, #0]
 8013cdc:	4638      	mov	r0, r7
 8013cde:	4623      	mov	r3, r4
 8013ce0:	f000 fb36 	bl	8014350 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 8013ce4:	7823      	ldrb	r3, [r4, #0]
 8013ce6:	2b41      	cmp	r3, #65	; 0x41
 8013ce8:	bf1c      	itt	ne
 8013cea:	2341      	movne	r3, #65	; 0x41
 8013cec:	7023      	strbne	r3, [r4, #0]
 8013cee:	7863      	ldrb	r3, [r4, #1]
 8013cf0:	bf14      	ite	ne
 8013cf2:	4635      	movne	r5, r6
 8013cf4:	2501      	moveq	r5, #1
 8013cf6:	2b76      	cmp	r3, #118	; 0x76
 8013cf8:	bf1c      	itt	ne
 8013cfa:	2376      	movne	r3, #118	; 0x76
 8013cfc:	7063      	strbne	r3, [r4, #1]
 8013cfe:	78a3      	ldrb	r3, [r4, #2]
 8013d00:	bf18      	it	ne
 8013d02:	2500      	movne	r5, #0
 8013d04:	2b56      	cmp	r3, #86	; 0x56
 8013d06:	bf1c      	itt	ne
 8013d08:	2356      	movne	r3, #86	; 0x56
 8013d0a:	70a3      	strbne	r3, [r4, #2]
 8013d0c:	78e3      	ldrb	r3, [r4, #3]
 8013d0e:	bf18      	it	ne
 8013d10:	2500      	movne	r5, #0
 8013d12:	2b10      	cmp	r3, #16
 8013d14:	d01f      	beq.n	8013d56 <ConfigStore::Init()+0xb6>
 8013d16:	2310      	movs	r3, #16
 8013d18:	70e3      	strb	r3, [r4, #3]
 8013d1a:	4b27      	ldr	r3, [pc, #156]	; (8013db8 <ConfigStore::Init()+0x118>)
 8013d1c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8013dc0 <ConfigStore::Init()+0x120>
 8013d20:	2201      	movs	r2, #1
 8013d22:	701a      	strb	r2, [r3, #0]
 8013d24:	2500      	movs	r5, #0
 8013d26:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8013d2a:	4631      	mov	r1, r6
 8013d2c:	4638      	mov	r0, r7
 8013d2e:	f7ff ffa9 	bl	8013c84 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013d32:	1823      	adds	r3, r4, r0
 8013d34:	5425      	strb	r5, [r4, r0]
 8013d36:	705d      	strb	r5, [r3, #1]
 8013d38:	709d      	strb	r5, [r3, #2]
 8013d3a:	70dd      	strb	r5, [r3, #3]
 8013d3c:	f858 3b04 	ldr.w	r3, [r8], #4
 8013d40:	1d02      	adds	r2, r0, #4
 8013d42:	4403      	add	r3, r0
 8013d44:	429a      	cmp	r2, r3
 8013d46:	d32f      	bcc.n	8013da8 <ConfigStore::Init()+0x108>
 8013d48:	3601      	adds	r6, #1
 8013d4a:	2e1c      	cmp	r6, #28
 8013d4c:	d1ed      	bne.n	8013d2a <ConfigStore::Init()+0x8a>
 8013d4e:	4b1b      	ldr	r3, [pc, #108]	; (8013dbc <ConfigStore::Init()+0x11c>)
 8013d50:	2501      	movs	r5, #1
 8013d52:	601d      	str	r5, [r3, #0]
 8013d54:	e7af      	b.n	8013cb6 <ConfigStore::Init()+0x16>
 8013d56:	2d00      	cmp	r5, #0
 8013d58:	d0df      	beq.n	8013d1a <ConfigStore::Init()+0x7a>
 8013d5a:	f04f 0900 	mov.w	r9, #0
 8013d5e:	46c8      	mov	r8, r9
 8013d60:	4631      	mov	r1, r6
 8013d62:	4638      	mov	r0, r7
 8013d64:	f7ff ff8e 	bl	8013c84 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013d68:	5c23      	ldrb	r3, [r4, r0]
 8013d6a:	2bff      	cmp	r3, #255	; 0xff
 8013d6c:	d112      	bne.n	8013d94 <ConfigStore::Init()+0xf4>
 8013d6e:	1823      	adds	r3, r4, r0
 8013d70:	785a      	ldrb	r2, [r3, #1]
 8013d72:	2aff      	cmp	r2, #255	; 0xff
 8013d74:	d10e      	bne.n	8013d94 <ConfigStore::Init()+0xf4>
 8013d76:	789a      	ldrb	r2, [r3, #2]
 8013d78:	2aff      	cmp	r2, #255	; 0xff
 8013d7a:	d10b      	bne.n	8013d94 <ConfigStore::Init()+0xf4>
 8013d7c:	78da      	ldrb	r2, [r3, #3]
 8013d7e:	2aff      	cmp	r2, #255	; 0xff
 8013d80:	d108      	bne.n	8013d94 <ConfigStore::Init()+0xf4>
 8013d82:	f804 8000 	strb.w	r8, [r4, r0]
 8013d86:	46a9      	mov	r9, r5
 8013d88:	f883 8001 	strb.w	r8, [r3, #1]
 8013d8c:	f883 8002 	strb.w	r8, [r3, #2]
 8013d90:	f883 8003 	strb.w	r8, [r3, #3]
 8013d94:	3601      	adds	r6, #1
 8013d96:	2e1c      	cmp	r6, #28
 8013d98:	d1e2      	bne.n	8013d60 <ConfigStore::Init()+0xc0>
 8013d9a:	f1b9 0f00 	cmp.w	r9, #0
 8013d9e:	d08a      	beq.n	8013cb6 <ConfigStore::Init()+0x16>
 8013da0:	4b06      	ldr	r3, [pc, #24]	; (8013dbc <ConfigStore::Init()+0x11c>)
 8013da2:	2201      	movs	r2, #1
 8013da4:	601a      	str	r2, [r3, #0]
 8013da6:	e786      	b.n	8013cb6 <ConfigStore::Init()+0x16>
 8013da8:	f804 9002 	strb.w	r9, [r4, r2]
 8013dac:	3201      	adds	r2, #1
 8013dae:	e7c9      	b.n	8013d44 <ConfigStore::Init()+0xa4>
 8013db0:	2000fc58 	andcs	pc, r0, r8, asr ip	; <UNPREDICTABLE>
 8013db4:	40024000 	andmi	r4, r2, r0
 8013db8:	2000fc6c 	andcs	pc, r0, ip, ror #24
 8013dbc:	2000fc64 	andcs	pc, r0, r4, ror #24
 8013dc0:	0801a510 	stmdaeq	r1, {r4, r8, sl, sp, pc}

08013dc4 <ConfigStore::ConfigStore()>:
 8013dc4:	b538      	push	{r3, r4, r5, lr}
 8013dc6:	4604      	mov	r4, r0
 8013dc8:	f000 fa8e 	bl	80142e8 <StoreDevice::StoreDevice()>
 8013dcc:	4b0b      	ldr	r3, [pc, #44]	; (8013dfc <ConfigStore::ConfigStore()+0x38>)
 8013dce:	4d0c      	ldr	r5, [pc, #48]	; (8013e00 <ConfigStore::ConfigStore()+0x3c>)
 8013dd0:	601c      	str	r4, [r3, #0]
 8013dd2:	7aa3      	ldrb	r3, [r4, #10]
 8013dd4:	b11b      	cbz	r3, 8013dde <ConfigStore::ConfigStore()+0x1a>
 8013dd6:	4620      	mov	r0, r4
 8013dd8:	f7ff ff62 	bl	8013ca0 <ConfigStore::Init()>
 8013ddc:	7028      	strb	r0, [r5, #0]
 8013dde:	782b      	ldrb	r3, [r5, #0]
 8013de0:	b153      	cbz	r3, 8013df8 <ConfigStore::ConfigStore()+0x34>
 8013de2:	4908      	ldr	r1, [pc, #32]	; (8013e04 <ConfigStore::ConfigStore()+0x40>)
 8013de4:	2320      	movs	r3, #32
 8013de6:	2200      	movs	r2, #0
 8013de8:	f851 0b04 	ldr.w	r0, [r1], #4
 8013dec:	3201      	adds	r2, #1
 8013dee:	2a1c      	cmp	r2, #28
 8013df0:	4403      	add	r3, r0
 8013df2:	d1f9      	bne.n	8013de8 <ConfigStore::ConfigStore()+0x24>
 8013df4:	4a04      	ldr	r2, [pc, #16]	; (8013e08 <ConfigStore::ConfigStore()+0x44>)
 8013df6:	6013      	str	r3, [r2, #0]
 8013df8:	4620      	mov	r0, r4
 8013dfa:	bd38      	pop	{r3, r4, r5, pc}
 8013dfc:	2000fc68 	andcs	pc, r0, r8, ror #24
 8013e00:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 8013e04:	0801a510 	stmdaeq	r1, {r4, r8, sl, sp, pc}
 8013e08:	2000fc60 	andcs	pc, r0, r0, ror #24

08013e0c <ConfigStore::ResetSetList(configstore::Store)>:
 8013e0c:	b508      	push	{r3, lr}
 8013e0e:	f7ff ff39 	bl	8013c84 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013e12:	4905      	ldr	r1, [pc, #20]	; (8013e28 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 8013e14:	1842      	adds	r2, r0, r1
 8013e16:	2300      	movs	r3, #0
 8013e18:	540b      	strb	r3, [r1, r0]
 8013e1a:	7053      	strb	r3, [r2, #1]
 8013e1c:	7093      	strb	r3, [r2, #2]
 8013e1e:	70d3      	strb	r3, [r2, #3]
 8013e20:	4b02      	ldr	r3, [pc, #8]	; (8013e2c <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 8013e22:	2201      	movs	r2, #1
 8013e24:	601a      	str	r2, [r3, #0]
 8013e26:	bd08      	pop	{r3, pc}
 8013e28:	40024000 	andmi	r4, r2, r0
 8013e2c:	2000fc64 	andcs	pc, r0, r4, ror #24

08013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8013e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e34:	461c      	mov	r4, r3
 8013e36:	4b19      	ldr	r3, [pc, #100]	; (8013e9c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8013e38:	9d07      	ldr	r5, [sp, #28]
 8013e3a:	781f      	ldrb	r7, [r3, #0]
 8013e3c:	4616      	mov	r6, r2
 8013e3e:	b307      	cbz	r7, 8013e82 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8013e40:	f7ff ff20 	bl	8013c84 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013e44:	4a16      	ldr	r2, [pc, #88]	; (8013ea0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8013e46:	1831      	adds	r1, r6, r0
 8013e48:	1e63      	subs	r3, r4, #1
 8013e4a:	9c06      	ldr	r4, [sp, #24]
 8013e4c:	4411      	add	r1, r2
 8013e4e:	440c      	add	r4, r1
 8013e50:	f04f 0c00 	mov.w	ip, #0
 8013e54:	42a1      	cmp	r1, r4
 8013e56:	d116      	bne.n	8013e86 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8013e58:	f1bc 0f00 	cmp.w	ip, #0
 8013e5c:	d011      	beq.n	8013e82 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8013e5e:	4b11      	ldr	r3, [pc, #68]	; (8013ea4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8013e60:	6819      	ldr	r1, [r3, #0]
 8013e62:	b109      	cbz	r1, 8013e68 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8013e64:	2906      	cmp	r1, #6
 8013e66:	d101      	bne.n	8013e6c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8013e68:	2101      	movs	r1, #1
 8013e6a:	6019      	str	r1, [r3, #0]
 8013e6c:	4b0e      	ldr	r3, [pc, #56]	; (8013ea8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8013e6e:	6819      	ldr	r1, [r3, #0]
 8013e70:	4b0e      	ldr	r3, [pc, #56]	; (8013eac <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8013e72:	6019      	str	r1, [r3, #0]
 8013e74:	b12e      	cbz	r6, 8013e82 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8013e76:	b125      	cbz	r5, 8013e82 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8013e78:	9b08      	ldr	r3, [sp, #32]
 8013e7a:	4418      	add	r0, r3
 8013e7c:	5813      	ldr	r3, [r2, r0]
 8013e7e:	432b      	orrs	r3, r5
 8013e80:	5013      	str	r3, [r2, r0]
 8013e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e86:	f891 8000 	ldrb.w	r8, [r1]
 8013e8a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8013e8e:	45f0      	cmp	r8, lr
 8013e90:	bf1c      	itt	ne
 8013e92:	f881 e000 	strbne.w	lr, [r1]
 8013e96:	46bc      	movne	ip, r7
 8013e98:	3101      	adds	r1, #1
 8013e9a:	e7db      	b.n	8013e54 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8013e9c:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 8013ea0:	40024000 	andmi	r4, r2, r0
 8013ea4:	2000fc64 	andcs	pc, r0, r4, ror #24
 8013ea8:	2000fd94 	mulcs	r0, r4, sp
 8013eac:	2000fc54 	andcs	pc, r0, r4, asr ip	; <UNPREDICTABLE>

08013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8013eb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013eb4:	461d      	mov	r5, r3
 8013eb6:	4b15      	ldr	r3, [pc, #84]	; (8013f0c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8013eb8:	b085      	sub	sp, #20
 8013eba:	781b      	ldrb	r3, [r3, #0]
 8013ebc:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8013ec0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8013ec4:	4607      	mov	r7, r0
 8013ec6:	4614      	mov	r4, r2
 8013ec8:	b193      	cbz	r3, 8013ef0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8013eca:	f7ff fedb 	bl	8013c84 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013ece:	4a10      	ldr	r2, [pc, #64]	; (8013f10 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8013ed0:	eb08 0600 	add.w	r6, r8, r0
 8013ed4:	18b3      	adds	r3, r6, r2
 8013ed6:	f1b9 0f00 	cmp.w	r9, #0
 8013eda:	d013      	beq.n	8013f04 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8013edc:	5990      	ldr	r0, [r2, r6]
 8013ede:	b988      	cbnz	r0, 8013f04 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8013ee0:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8013ee4:	9500      	str	r5, [sp, #0]
 8013ee6:	4623      	mov	r3, r4
 8013ee8:	4642      	mov	r2, r8
 8013eea:	4638      	mov	r0, r7
 8013eec:	f7ff ffa0 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8013ef0:	b005      	add	sp, #20
 8013ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ef6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013efa:	f804 2f01 	strb.w	r2, [r4, #1]!
 8013efe:	429d      	cmp	r5, r3
 8013f00:	d1f9      	bne.n	8013ef6 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8013f02:	e7f5      	b.n	8013ef0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8013f04:	3c01      	subs	r4, #1
 8013f06:	441d      	add	r5, r3
 8013f08:	e7f9      	b.n	8013efe <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8013f0a:	bf00      	nop
 8013f0c:	2000fc5c 	andcs	pc, r0, ip, asr ip	; <UNPREDICTABLE>
 8013f10:	40024000 	andmi	r4, r2, r0

08013f14 <ConfigStore::Flash()>:
 8013f14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013f16:	4c24      	ldr	r4, [pc, #144]	; (8013fa8 <ConfigStore::Flash()+0x94>)
 8013f18:	6823      	ldr	r3, [r4, #0]
 8013f1a:	2b00      	cmp	r3, #0
 8013f1c:	d041      	beq.n	8013fa2 <ConfigStore::Flash()+0x8e>
 8013f1e:	3b01      	subs	r3, #1
 8013f20:	2b05      	cmp	r3, #5
 8013f22:	d82f      	bhi.n	8013f84 <ConfigStore::Flash()+0x70>
 8013f24:	e8df f003 	tbb	[pc, r3]
 8013f28:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8013f2c:	4b1f2e23 	blmi	87df7c0 <__exidx_end+0x7c4950>
 8013f30:	681a      	ldr	r2, [r3, #0]
 8013f32:	4b1f      	ldr	r3, [pc, #124]	; (8013fb0 <ConfigStore::Flash()+0x9c>)
 8013f34:	601a      	str	r2, [r3, #0]
 8013f36:	2302      	movs	r3, #2
 8013f38:	6023      	str	r3, [r4, #0]
 8013f3a:	2001      	movs	r0, #1
 8013f3c:	e02f      	b.n	8013f9e <ConfigStore::Flash()+0x8a>
 8013f3e:	4b1b      	ldr	r3, [pc, #108]	; (8013fac <ConfigStore::Flash()+0x98>)
 8013f40:	4a1b      	ldr	r2, [pc, #108]	; (8013fb0 <ConfigStore::Flash()+0x9c>)
 8013f42:	681b      	ldr	r3, [r3, #0]
 8013f44:	6812      	ldr	r2, [r2, #0]
 8013f46:	1a9b      	subs	r3, r3, r2
 8013f48:	2b63      	cmp	r3, #99	; 0x63
 8013f4a:	d9f6      	bls.n	8013f3a <ConfigStore::Flash()+0x26>
 8013f4c:	2303      	movs	r3, #3
 8013f4e:	e7f3      	b.n	8013f38 <ConfigStore::Flash()+0x24>
 8013f50:	4918      	ldr	r1, [pc, #96]	; (8013fb4 <ConfigStore::Flash()+0xa0>)
 8013f52:	ab03      	add	r3, sp, #12
 8013f54:	6809      	ldr	r1, [r1, #0]
 8013f56:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8013f5a:	f000 fa1d 	bl	8014398 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8013f5e:	2800      	cmp	r0, #0
 8013f60:	d0eb      	beq.n	8013f3a <ConfigStore::Flash()+0x26>
 8013f62:	4b12      	ldr	r3, [pc, #72]	; (8013fac <ConfigStore::Flash()+0x98>)
 8013f64:	681a      	ldr	r2, [r3, #0]
 8013f66:	4b12      	ldr	r3, [pc, #72]	; (8013fb0 <ConfigStore::Flash()+0x9c>)
 8013f68:	601a      	str	r2, [r3, #0]
 8013f6a:	2305      	movs	r3, #5
 8013f6c:	e7e4      	b.n	8013f38 <ConfigStore::Flash()+0x24>
 8013f6e:	4b0f      	ldr	r3, [pc, #60]	; (8013fac <ConfigStore::Flash()+0x98>)
 8013f70:	4a0f      	ldr	r2, [pc, #60]	; (8013fb0 <ConfigStore::Flash()+0x9c>)
 8013f72:	681b      	ldr	r3, [r3, #0]
 8013f74:	6812      	ldr	r2, [r2, #0]
 8013f76:	1a9b      	subs	r3, r3, r2
 8013f78:	2b63      	cmp	r3, #99	; 0x63
 8013f7a:	d9de      	bls.n	8013f3a <ConfigStore::Flash()+0x26>
 8013f7c:	2304      	movs	r3, #4
 8013f7e:	e7db      	b.n	8013f38 <ConfigStore::Flash()+0x24>
 8013f80:	2306      	movs	r3, #6
 8013f82:	e7d9      	b.n	8013f38 <ConfigStore::Flash()+0x24>
 8013f84:	ab03      	add	r3, sp, #12
 8013f86:	4a0c      	ldr	r2, [pc, #48]	; (8013fb8 <ConfigStore::Flash()+0xa4>)
 8013f88:	490a      	ldr	r1, [pc, #40]	; (8013fb4 <ConfigStore::Flash()+0xa0>)
 8013f8a:	9300      	str	r3, [sp, #0]
 8013f8c:	6812      	ldr	r2, [r2, #0]
 8013f8e:	4b0b      	ldr	r3, [pc, #44]	; (8013fbc <ConfigStore::Flash()+0xa8>)
 8013f90:	6809      	ldr	r1, [r1, #0]
 8013f92:	f000 fa05 	bl	80143a0 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 8013f96:	2800      	cmp	r0, #0
 8013f98:	d0cf      	beq.n	8013f3a <ConfigStore::Flash()+0x26>
 8013f9a:	2000      	movs	r0, #0
 8013f9c:	6020      	str	r0, [r4, #0]
 8013f9e:	b004      	add	sp, #16
 8013fa0:	bd10      	pop	{r4, pc}
 8013fa2:	4618      	mov	r0, r3
 8013fa4:	e7fb      	b.n	8013f9e <ConfigStore::Flash()+0x8a>
 8013fa6:	bf00      	nop
 8013fa8:	2000fc64 	andcs	pc, r0, r4, ror #24
 8013fac:	2000fd94 	mulcs	r0, r4, sp
 8013fb0:	2000fc54 	andcs	pc, r0, r4, asr ip	; <UNPREDICTABLE>
 8013fb4:	2000fc58 	andcs	pc, r0, r8, asr ip	; <UNPREDICTABLE>
 8013fb8:	2000fc60 	andcs	pc, r0, r0, ror #24
 8013fbc:	40024000 	andmi	r4, r2, r0

08013fc0 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8013fc0:	4770      	bx	lr
	...

08013fc4 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8013fc4:	b507      	push	{r0, r1, r2, lr}
 8013fc6:	2300      	movs	r3, #0
 8013fc8:	460a      	mov	r2, r1
 8013fca:	2101      	movs	r1, #1
 8013fcc:	e9cd 3100 	strd	r3, r1, [sp]
 8013fd0:	4804      	ldr	r0, [pc, #16]	; (8013fe4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 8013fd2:	2322      	movs	r3, #34	; 0x22
 8013fd4:	6800      	ldr	r0, [r0, #0]
 8013fd6:	210f      	movs	r1, #15
 8013fd8:	f7ff ff6a 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8013fdc:	b003      	add	sp, #12
 8013fde:	f85d fb04 	ldr.w	pc, [sp], #4
 8013fe2:	bf00      	nop
 8013fe4:	2000fc68 	andcs	pc, r0, r8, ror #24

08013fe8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8013fe8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013fea:	2200      	movs	r2, #0
 8013fec:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8013ff0:	460b      	mov	r3, r1
 8013ff2:	4805      	ldr	r0, [pc, #20]	; (8014008 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8013ff4:	2122      	movs	r1, #34	; 0x22
 8013ff6:	9100      	str	r1, [sp, #0]
 8013ff8:	6800      	ldr	r0, [r0, #0]
 8013ffa:	210f      	movs	r1, #15
 8013ffc:	f7ff ff18 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014000:	b005      	add	sp, #20
 8014002:	f85d fb04 	ldr.w	pc, [sp], #4
 8014006:	bf00      	nop
 8014008:	2000fc68 	andcs	pc, r0, r8, ror #24

0801400c <StoreDisplayUdf::~StoreDisplayUdf()>:
 801400c:	b510      	push	{r4, lr}
 801400e:	4604      	mov	r4, r0
 8014010:	f001 fa64 	bl	80154dc <operator delete(void*)>
 8014014:	4620      	mov	r0, r4
 8014016:	bd10      	pop	{r4, pc}

08014018 <StoreDisplayUdf::StoreDisplayUdf()>:
 8014018:	4a02      	ldr	r2, [pc, #8]	; (8014024 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 801401a:	6002      	str	r2, [r0, #0]
 801401c:	4a02      	ldr	r2, [pc, #8]	; (8014028 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 801401e:	6010      	str	r0, [r2, #0]
 8014020:	4770      	bx	lr
 8014022:	bf00      	nop
 8014024:	0801a588 	stmdaeq	r1, {r3, r7, r8, sl, sp, pc}
 8014028:	2000fc70 	andcs	pc, r0, r0, ror ip	; <UNPREDICTABLE>

0801402c <StoreDmxSend::~StoreDmxSend()>:
 801402c:	4770      	bx	lr
	...

08014030 <StoreDmxSend::Copy(TDmxParams*)>:
 8014030:	b507      	push	{r0, r1, r2, lr}
 8014032:	2300      	movs	r3, #0
 8014034:	460a      	mov	r2, r1
 8014036:	2101      	movs	r1, #1
 8014038:	e9cd 3100 	strd	r3, r1, [sp]
 801403c:	4804      	ldr	r0, [pc, #16]	; (8014050 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 801403e:	230a      	movs	r3, #10
 8014040:	6800      	ldr	r0, [r0, #0]
 8014042:	2102      	movs	r1, #2
 8014044:	f7ff ff34 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8014048:	b003      	add	sp, #12
 801404a:	f85d fb04 	ldr.w	pc, [sp], #4
 801404e:	bf00      	nop
 8014050:	2000fc68 	andcs	pc, r0, r8, ror #24

08014054 <StoreDmxSend::Update(TDmxParams const*)>:
 8014054:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014056:	2200      	movs	r2, #0
 8014058:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801405c:	460b      	mov	r3, r1
 801405e:	4805      	ldr	r0, [pc, #20]	; (8014074 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 8014060:	210a      	movs	r1, #10
 8014062:	9100      	str	r1, [sp, #0]
 8014064:	6800      	ldr	r0, [r0, #0]
 8014066:	2102      	movs	r1, #2
 8014068:	f7ff fee2 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801406c:	b005      	add	sp, #20
 801406e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014072:	bf00      	nop
 8014074:	2000fc68 	andcs	pc, r0, r8, ror #24

08014078 <StoreDmxSend::~StoreDmxSend()>:
 8014078:	b510      	push	{r4, lr}
 801407a:	4604      	mov	r4, r0
 801407c:	f001 fa2e 	bl	80154dc <operator delete(void*)>
 8014080:	4620      	mov	r0, r4
 8014082:	bd10      	pop	{r4, pc}

08014084 <StoreDmxSend::StoreDmxSend()>:
 8014084:	4a02      	ldr	r2, [pc, #8]	; (8014090 <StoreDmxSend::StoreDmxSend()+0xc>)
 8014086:	6002      	str	r2, [r0, #0]
 8014088:	4a02      	ldr	r2, [pc, #8]	; (8014094 <StoreDmxSend::StoreDmxSend()+0x10>)
 801408a:	6010      	str	r0, [r2, #0]
 801408c:	4770      	bx	lr
 801408e:	bf00      	nop
 8014090:	0801a5a0 	stmdaeq	r1, {r5, r7, r8, sl, sp, pc}
 8014094:	2000fc74 	andcs	pc, r0, r4, ror ip	; <UNPREDICTABLE>

08014098 <StoreNetwork::~StoreNetwork()>:
 8014098:	4770      	bx	lr

0801409a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 801409a:	3804      	subs	r0, #4
 801409c:	4770      	bx	lr
	...

080140a0 <StoreNetwork::Update(networkparams::Params const*)>:
 80140a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80140a2:	2200      	movs	r2, #0
 80140a4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80140a8:	460b      	mov	r3, r1
 80140aa:	4805      	ldr	r0, [pc, #20]	; (80140c0 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 80140ac:	215e      	movs	r1, #94	; 0x5e
 80140ae:	9100      	str	r1, [sp, #0]
 80140b0:	6800      	ldr	r0, [r0, #0]
 80140b2:	4611      	mov	r1, r2
 80140b4:	f7ff febc 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80140b8:	b005      	add	sp, #20
 80140ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80140be:	bf00      	nop
 80140c0:	2000fc68 	andcs	pc, r0, r8, ror #24

080140c4 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 80140c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80140c6:	2308      	movs	r3, #8
 80140c8:	9105      	str	r1, [sp, #20]
 80140ca:	2100      	movs	r1, #0
 80140cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80140d0:	4805      	ldr	r0, [pc, #20]	; (80140e8 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 80140d2:	2304      	movs	r3, #4
 80140d4:	9300      	str	r3, [sp, #0]
 80140d6:	6800      	ldr	r0, [r0, #0]
 80140d8:	ab05      	add	r3, sp, #20
 80140da:	220c      	movs	r2, #12
 80140dc:	f7ff fea8 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80140e0:	b007      	add	sp, #28
 80140e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80140e6:	bf00      	nop
 80140e8:	2000fc68 	andcs	pc, r0, r8, ror #24

080140ec <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 80140ec:	f1a0 0004 	sub.w	r0, r0, #4
 80140f0:	e7e8      	b.n	80140c4 <StoreNetwork::SaveGatewayIp(unsigned int)>
 80140f2:	bf00      	nop

080140f4 <StoreNetwork::SaveNetMask(unsigned int)>:
 80140f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80140f6:	2304      	movs	r3, #4
 80140f8:	9105      	str	r1, [sp, #20]
 80140fa:	2100      	movs	r1, #0
 80140fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8014100:	4804      	ldr	r0, [pc, #16]	; (8014114 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8014102:	9300      	str	r3, [sp, #0]
 8014104:	6800      	ldr	r0, [r0, #0]
 8014106:	ab05      	add	r3, sp, #20
 8014108:	2208      	movs	r2, #8
 801410a:	f7ff fe91 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801410e:	b007      	add	sp, #28
 8014110:	f85d fb04 	ldr.w	pc, [sp], #4
 8014114:	2000fc68 	andcs	pc, r0, r8, ror #24

08014118 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8014118:	f1a0 0004 	sub.w	r0, r0, #4
 801411c:	e7ea      	b.n	80140f4 <StoreNetwork::SaveNetMask(unsigned int)>
 801411e:	bf00      	nop

08014120 <StoreNetwork::SaveIp(unsigned int)>:
 8014120:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014122:	2302      	movs	r3, #2
 8014124:	9105      	str	r1, [sp, #20]
 8014126:	2100      	movs	r1, #0
 8014128:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801412c:	2204      	movs	r2, #4
 801412e:	4804      	ldr	r0, [pc, #16]	; (8014140 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8014130:	9200      	str	r2, [sp, #0]
 8014132:	6800      	ldr	r0, [r0, #0]
 8014134:	ab05      	add	r3, sp, #20
 8014136:	f7ff fe7b 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801413a:	b007      	add	sp, #28
 801413c:	f85d fb04 	ldr.w	pc, [sp], #4
 8014140:	2000fc68 	andcs	pc, r0, r8, ror #24

08014144 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8014144:	f1a0 0004 	sub.w	r0, r0, #4
 8014148:	e7ea      	b.n	8014120 <StoreNetwork::SaveIp(unsigned int)>
 801414a:	bf00      	nop

0801414c <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 801414c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801414e:	460b      	mov	r3, r1
 8014150:	2000      	movs	r0, #0
 8014152:	2120      	movs	r1, #32
 8014154:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8014158:	2a40      	cmp	r2, #64	; 0x40
 801415a:	bf28      	it	cs
 801415c:	2240      	movcs	r2, #64	; 0x40
 801415e:	4601      	mov	r1, r0
 8014160:	4804      	ldr	r0, [pc, #16]	; (8014174 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x28>)
 8014162:	9200      	str	r2, [sp, #0]
 8014164:	6800      	ldr	r0, [r0, #0]
 8014166:	2215      	movs	r2, #21
 8014168:	f7ff fe62 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801416c:	b005      	add	sp, #20
 801416e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014172:	bf00      	nop
 8014174:	2000fc68 	andcs	pc, r0, r8, ror #24

08014178 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8014178:	f1a0 0004 	sub.w	r0, r0, #4
 801417c:	e7e6      	b.n	801414c <StoreNetwork::SaveHostName(char const*, unsigned int)>
 801417e:	bf00      	nop

08014180 <StoreNetwork::~StoreNetwork()>:
 8014180:	b510      	push	{r4, lr}
 8014182:	4604      	mov	r4, r0
 8014184:	f001 f9aa 	bl	80154dc <operator delete(void*)>
 8014188:	4620      	mov	r0, r4
 801418a:	bd10      	pop	{r4, pc}

0801418c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 801418c:	f1a0 0004 	sub.w	r0, r0, #4
 8014190:	e7f6      	b.n	8014180 <StoreNetwork::~StoreNetwork()>
	...

08014194 <StoreNetwork::Copy(networkparams::Params*)>:
 8014194:	b507      	push	{r0, r1, r2, lr}
 8014196:	2301      	movs	r3, #1
 8014198:	460a      	mov	r2, r1
 801419a:	2100      	movs	r1, #0
 801419c:	e9cd 1300 	strd	r1, r3, [sp]
 80141a0:	4803      	ldr	r0, [pc, #12]	; (80141b0 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 80141a2:	235e      	movs	r3, #94	; 0x5e
 80141a4:	6800      	ldr	r0, [r0, #0]
 80141a6:	f7ff fe83 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80141aa:	b003      	add	sp, #12
 80141ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80141b0:	2000fc68 	andcs	pc, r0, r8, ror #24

080141b4 <StoreNetwork::StoreNetwork()>:
 80141b4:	4a03      	ldr	r2, [pc, #12]	; (80141c4 <StoreNetwork::StoreNetwork()+0x10>)
 80141b6:	6002      	str	r2, [r0, #0]
 80141b8:	322c      	adds	r2, #44	; 0x2c
 80141ba:	6042      	str	r2, [r0, #4]
 80141bc:	4a02      	ldr	r2, [pc, #8]	; (80141c8 <StoreNetwork::StoreNetwork()+0x14>)
 80141be:	6010      	str	r0, [r2, #0]
 80141c0:	4770      	bx	lr
 80141c2:	bf00      	nop
 80141c4:	0801a5b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, sl, sp, pc}
 80141c8:	2000fc78 	andcs	pc, r0, r8, ror ip	; <UNPREDICTABLE>

080141cc <StoreRemoteConfig::~StoreRemoteConfig()>:
 80141cc:	4770      	bx	lr
	...

080141d0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 80141d0:	b507      	push	{r0, r1, r2, lr}
 80141d2:	2300      	movs	r3, #0
 80141d4:	460a      	mov	r2, r1
 80141d6:	2101      	movs	r1, #1
 80141d8:	e9cd 3100 	strd	r3, r1, [sp]
 80141dc:	4804      	ldr	r0, [pc, #16]	; (80141f0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 80141de:	2320      	movs	r3, #32
 80141e0:	6800      	ldr	r0, [r0, #0]
 80141e2:	210c      	movs	r1, #12
 80141e4:	f7ff fe64 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80141e8:	b003      	add	sp, #12
 80141ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80141ee:	bf00      	nop
 80141f0:	2000fc68 	andcs	pc, r0, r8, ror #24

080141f4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 80141f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80141f6:	2200      	movs	r2, #0
 80141f8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80141fc:	460b      	mov	r3, r1
 80141fe:	4805      	ldr	r0, [pc, #20]	; (8014214 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8014200:	2120      	movs	r1, #32
 8014202:	9100      	str	r1, [sp, #0]
 8014204:	6800      	ldr	r0, [r0, #0]
 8014206:	210c      	movs	r1, #12
 8014208:	f7ff fe12 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801420c:	b005      	add	sp, #20
 801420e:	f85d fb04 	ldr.w	pc, [sp], #4
 8014212:	bf00      	nop
 8014214:	2000fc68 	andcs	pc, r0, r8, ror #24

08014218 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8014218:	b510      	push	{r4, lr}
 801421a:	4604      	mov	r4, r0
 801421c:	f001 f95e 	bl	80154dc <operator delete(void*)>
 8014220:	4620      	mov	r0, r4
 8014222:	bd10      	pop	{r4, pc}

08014224 <StoreRemoteConfig::StoreRemoteConfig()>:
 8014224:	4a02      	ldr	r2, [pc, #8]	; (8014230 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 8014226:	6002      	str	r2, [r0, #0]
 8014228:	4a02      	ldr	r2, [pc, #8]	; (8014234 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 801422a:	6010      	str	r0, [r2, #0]
 801422c:	4770      	bx	lr
 801422e:	bf00      	nop
 8014230:	0801a608 	stmdaeq	r1, {r3, r9, sl, sp, pc}
 8014234:	2000fc7c 	andcs	pc, r0, ip, ror ip	; <UNPREDICTABLE>

08014238 <HAL_I2C::Setup()>:
 8014238:	b510      	push	{r4, lr}
 801423a:	4604      	mov	r4, r0
 801423c:	7800      	ldrb	r0, [r0, #0]
 801423e:	f002 fe9f 	bl	8016f80 <gd32_i2c_set_address>
 8014242:	6860      	ldr	r0, [r4, #4]
 8014244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014248:	f002 be92 	b.w	8016f70 <gd32_i2c_set_baudrate>

0801424c <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>:
 801424c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014250:	b08d      	sub	sp, #52	; 0x34
 8014252:	4606      	mov	r6, r0
 8014254:	9301      	str	r3, [sp, #4]
 8014256:	7a03      	ldrb	r3, [r0, #8]
 8014258:	460c      	mov	r4, r1
 801425a:	4617      	mov	r7, r2
 801425c:	2b00      	cmp	r3, #0
 801425e:	d13c      	bne.n	80142da <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8014260:	b00d      	add	sp, #52	; 0x34
 8014262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014266:	2101      	movs	r1, #1
 8014268:	4640      	mov	r0, r8
 801426a:	f002 fef5 	bl	8017058 <gd32_i2c_read>
 801426e:	2800      	cmp	r0, #0
 8014270:	d1f9      	bne.n	8014266 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8014272:	7a73      	ldrb	r3, [r6, #9]
 8014274:	f8cd 9008 	str.w	r9, [sp, #8]
 8014278:	2d1d      	cmp	r5, #29
 801427a:	bf8c      	ite	hi
 801427c:	a902      	addhi	r1, sp, #8
 801427e:	a901      	addls	r1, sp, #4
 8014280:	fbb4 f2f3 	udiv	r2, r4, r3
 8014284:	fb03 4212 	mls	r2, r3, r2, r4
 8014288:	1a9b      	subs	r3, r3, r2
 801428a:	680a      	ldr	r2, [r1, #0]
 801428c:	9303      	str	r3, [sp, #12]
 801428e:	4293      	cmp	r3, r2
 8014290:	bf98      	it	ls
 8014292:	4641      	movls	r1, r8
 8014294:	ba63      	rev16	r3, r4
 8014296:	f8d1 a000 	ldr.w	sl, [r1]
 801429a:	f8ad 3010 	strh.w	r3, [sp, #16]
 801429e:	eb07 030b 	add.w	r3, r7, fp
 80142a2:	f10d 0211 	add.w	r2, sp, #17
 80142a6:	eb03 010a 	add.w	r1, r3, sl
 80142aa:	428b      	cmp	r3, r1
 80142ac:	d110      	bne.n	80142d0 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x84>
 80142ae:	4630      	mov	r0, r6
 80142b0:	f7ff ffc2 	bl	8014238 <HAL_I2C::Setup()>
 80142b4:	eba5 050a 	sub.w	r5, r5, sl
 80142b8:	f10a 0102 	add.w	r1, sl, #2
 80142bc:	a804      	add	r0, sp, #16
 80142be:	f002 fe65 	bl	8016f8c <gd32_i2c_write>
 80142c2:	4454      	add	r4, sl
 80142c4:	9501      	str	r5, [sp, #4]
 80142c6:	44d3      	add	fp, sl
 80142c8:	9d01      	ldr	r5, [sp, #4]
 80142ca:	2d00      	cmp	r5, #0
 80142cc:	d1cb      	bne.n	8014266 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 80142ce:	e7c7      	b.n	8014260 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x14>
 80142d0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80142d4:	f802 0f01 	strb.w	r0, [r2, #1]!
 80142d8:	e7e7      	b.n	80142aa <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x5e>
 80142da:	f04f 0b00 	mov.w	fp, #0
 80142de:	f10d 080c 	add.w	r8, sp, #12
 80142e2:	f04f 091e 	mov.w	r9, #30
 80142e6:	e7ef      	b.n	80142c8 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x7c>

080142e8 <StoreDevice::StoreDevice()>:
 80142e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80142ea:	4604      	mov	r4, r0
 80142ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80142f0:	2050      	movs	r0, #80	; 0x50
 80142f2:	4d11      	ldr	r5, [pc, #68]	; (8014338 <StoreDevice::StoreDevice()+0x50>)
 80142f4:	8123      	strh	r3, [r4, #8]
 80142f6:	7020      	strb	r0, [r4, #0]
 80142f8:	6065      	str	r5, [r4, #4]
 80142fa:	f002 fe41 	bl	8016f80 <gd32_i2c_set_address>
 80142fe:	4628      	mov	r0, r5
 8014300:	f002 fe36 	bl	8016f70 <gd32_i2c_set_baudrate>
 8014304:	2101      	movs	r1, #1
 8014306:	f10d 0007 	add.w	r0, sp, #7
 801430a:	f002 fea5 	bl	8017058 <gd32_i2c_read>
 801430e:	2800      	cmp	r0, #0
 8014310:	bf0c      	ite	eq
 8014312:	2301      	moveq	r3, #1
 8014314:	2300      	movne	r3, #0
 8014316:	7223      	strb	r3, [r4, #8]
 8014318:	72a3      	strb	r3, [r4, #10]
 801431a:	d006      	beq.n	801432a <StoreDevice::StoreDevice()+0x42>
 801431c:	7821      	ldrb	r1, [r4, #0]
 801431e:	4807      	ldr	r0, [pc, #28]	; (801433c <StoreDevice::StoreDevice()+0x54>)
 8014320:	f7f6 f83c 	bl	800a39c <printf>
 8014324:	4620      	mov	r0, r4
 8014326:	b003      	add	sp, #12
 8014328:	bd30      	pop	{r4, r5, pc}
 801432a:	2204      	movs	r2, #4
 801432c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8014330:	4803      	ldr	r0, [pc, #12]	; (8014340 <StoreDevice::StoreDevice()+0x58>)
 8014332:	f7f6 f833 	bl	800a39c <printf>
 8014336:	e7f5      	b.n	8014324 <StoreDevice::StoreDevice()+0x3c>
 8014338:	00061a80 	andeq	r1, r6, r0, lsl #21
 801433c:	0801a618 	stmdaeq	r1, {r3, r4, r9, sl, sp, pc}
 8014340:	0801a637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp, pc}

08014344 <StoreDevice::GetSize() const>:
 8014344:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8014348:	4770      	bx	lr

0801434a <StoreDevice::GetSectorSize() const>:
 801434a:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 801434e:	4770      	bx	lr

08014350 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 8014350:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014352:	461e      	mov	r6, r3
 8014354:	7a03      	ldrb	r3, [r0, #8]
 8014356:	4604      	mov	r4, r0
 8014358:	460d      	mov	r5, r1
 801435a:	4617      	mov	r7, r2
 801435c:	b1b3      	cbz	r3, 801438c <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x3c>
 801435e:	2101      	movs	r1, #1
 8014360:	a801      	add	r0, sp, #4
 8014362:	f002 fe79 	bl	8017058 <gd32_i2c_read>
 8014366:	2800      	cmp	r0, #0
 8014368:	d1f9      	bne.n	801435e <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xe>
 801436a:	4620      	mov	r0, r4
 801436c:	ba6d      	rev16	r5, r5
 801436e:	f8ad 5004 	strh.w	r5, [sp, #4]
 8014372:	f7ff ff61 	bl	8014238 <HAL_I2C::Setup()>
 8014376:	2102      	movs	r1, #2
 8014378:	a801      	add	r0, sp, #4
 801437a:	f002 fe07 	bl	8016f8c <gd32_i2c_write>
 801437e:	4620      	mov	r0, r4
 8014380:	f7ff ff5a 	bl	8014238 <HAL_I2C::Setup()>
 8014384:	4639      	mov	r1, r7
 8014386:	4630      	mov	r0, r6
 8014388:	f002 fe66 	bl	8017058 <gd32_i2c_read>
 801438c:	9b08      	ldr	r3, [sp, #32]
 801438e:	2200      	movs	r2, #0
 8014390:	2001      	movs	r0, #1
 8014392:	601a      	str	r2, [r3, #0]
 8014394:	b003      	add	sp, #12
 8014396:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014398 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8014398:	2200      	movs	r2, #0
 801439a:	601a      	str	r2, [r3, #0]
 801439c:	2001      	movs	r0, #1
 801439e:	4770      	bx	lr

080143a0 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 80143a0:	b510      	push	{r4, lr}
 80143a2:	4614      	mov	r4, r2
 80143a4:	461a      	mov	r2, r3
 80143a6:	4623      	mov	r3, r4
 80143a8:	f7ff ff50 	bl	801424c <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>
 80143ac:	9b02      	ldr	r3, [sp, #8]
 80143ae:	2200      	movs	r2, #0
 80143b0:	601a      	str	r2, [r3, #0]
 80143b2:	2001      	movs	r0, #1
 80143b4:	bd10      	pop	{r4, pc}

080143b6 <StoreE131::~StoreE131()>:
 80143b6:	4770      	bx	lr

080143b8 <StoreE131::Copy(e131params::Params*)>:
 80143b8:	b507      	push	{r0, r1, r2, lr}
 80143ba:	2300      	movs	r3, #0
 80143bc:	460a      	mov	r2, r1
 80143be:	2101      	movs	r1, #1
 80143c0:	e9cd 3100 	strd	r3, r1, [sp]
 80143c4:	4804      	ldr	r0, [pc, #16]	; (80143d8 <StoreE131::Copy(e131params::Params*)+0x20>)
 80143c6:	231f      	movs	r3, #31
 80143c8:	6800      	ldr	r0, [r0, #0]
 80143ca:	2104      	movs	r1, #4
 80143cc:	f7ff fd70 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80143d0:	b003      	add	sp, #12
 80143d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80143d6:	bf00      	nop
 80143d8:	2000fc68 	andcs	pc, r0, r8, ror #24

080143dc <StoreE131::Update(e131params::Params const*)>:
 80143dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143de:	2200      	movs	r2, #0
 80143e0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80143e4:	460b      	mov	r3, r1
 80143e6:	4805      	ldr	r0, [pc, #20]	; (80143fc <StoreE131::Update(e131params::Params const*)+0x20>)
 80143e8:	211f      	movs	r1, #31
 80143ea:	9100      	str	r1, [sp, #0]
 80143ec:	6800      	ldr	r0, [r0, #0]
 80143ee:	2104      	movs	r1, #4
 80143f0:	f7ff fd1e 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80143f4:	b005      	add	sp, #20
 80143f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80143fa:	bf00      	nop
 80143fc:	2000fc68 	andcs	pc, r0, r8, ror #24

08014400 <StoreE131::~StoreE131()>:
 8014400:	b510      	push	{r4, lr}
 8014402:	4604      	mov	r4, r0
 8014404:	f001 f86a 	bl	80154dc <operator delete(void*)>
 8014408:	4620      	mov	r0, r4
 801440a:	bd10      	pop	{r4, pc}

0801440c <StoreE131::StoreE131()>:
 801440c:	4a02      	ldr	r2, [pc, #8]	; (8014418 <StoreE131::StoreE131()+0xc>)
 801440e:	6002      	str	r2, [r0, #0]
 8014410:	4a02      	ldr	r2, [pc, #8]	; (801441c <StoreE131::StoreE131()+0x10>)
 8014412:	6010      	str	r0, [r2, #0]
 8014414:	4770      	bx	lr
 8014416:	bf00      	nop
 8014418:	0801a67c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, sp, pc}
 801441c:	2000fc80 	andcs	pc, r0, r0, lsl #25

08014420 <StorePixelDmx::~StorePixelDmx()>:
 8014420:	4770      	bx	lr

08014422 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8014422:	3804      	subs	r0, #4
 8014424:	4770      	bx	lr
	...

08014428 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 8014428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801442a:	2200      	movs	r2, #0
 801442c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8014430:	460b      	mov	r3, r1
 8014432:	4805      	ldr	r0, [pc, #20]	; (8014448 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8014434:	2136      	movs	r1, #54	; 0x36
 8014436:	9100      	str	r1, [sp, #0]
 8014438:	6800      	ldr	r0, [r0, #0]
 801443a:	2103      	movs	r1, #3
 801443c:	f7ff fcf8 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014440:	b005      	add	sp, #20
 8014442:	f85d fb04 	ldr.w	pc, [sp], #4
 8014446:	bf00      	nop
 8014448:	2000fc68 	andcs	pc, r0, r8, ror #24

0801444c <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 801444c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801444e:	2304      	movs	r3, #4
 8014450:	2200      	movs	r2, #0
 8014452:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014456:	4807      	ldr	r0, [pc, #28]	; (8014474 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 8014458:	f8ad 1016 	strh.w	r1, [sp, #22]
 801445c:	2302      	movs	r3, #2
 801445e:	9300      	str	r3, [sp, #0]
 8014460:	6800      	ldr	r0, [r0, #0]
 8014462:	f10d 0316 	add.w	r3, sp, #22
 8014466:	2207      	movs	r2, #7
 8014468:	2103      	movs	r1, #3
 801446a:	f7ff fce1 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801446e:	b007      	add	sp, #28
 8014470:	f85d fb04 	ldr.w	pc, [sp], #4
 8014474:	2000fc68 	andcs	pc, r0, r8, ror #24

08014478 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8014478:	f1a0 0004 	sub.w	r0, r0, #4
 801447c:	e7e6      	b.n	801444c <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 801447e:	bf00      	nop

08014480 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8014480:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014482:	2308      	movs	r3, #8
 8014484:	2200      	movs	r2, #0
 8014486:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801448a:	4807      	ldr	r0, [pc, #28]	; (80144a8 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 801448c:	f88d 1017 	strb.w	r1, [sp, #23]
 8014490:	2301      	movs	r3, #1
 8014492:	9300      	str	r3, [sp, #0]
 8014494:	6800      	ldr	r0, [r0, #0]
 8014496:	f10d 0317 	add.w	r3, sp, #23
 801449a:	2210      	movs	r2, #16
 801449c:	2103      	movs	r1, #3
 801449e:	f7ff fcc7 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80144a2:	b007      	add	sp, #28
 80144a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80144a8:	2000fc68 	andcs	pc, r0, r8, ror #24

080144ac <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 80144ac:	f1a0 0004 	sub.w	r0, r0, #4
 80144b0:	e7e6      	b.n	8014480 <StorePixelDmx::SaveTestPattern(unsigned char)>
 80144b2:	bf00      	nop

080144b4 <StorePixelDmx::SaveMap(unsigned char)>:
 80144b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80144b6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80144ba:	2200      	movs	r2, #0
 80144bc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80144c0:	4807      	ldr	r0, [pc, #28]	; (80144e0 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 80144c2:	f88d 1017 	strb.w	r1, [sp, #23]
 80144c6:	2301      	movs	r3, #1
 80144c8:	9300      	str	r3, [sp, #0]
 80144ca:	6800      	ldr	r0, [r0, #0]
 80144cc:	f10d 0317 	add.w	r3, sp, #23
 80144d0:	2213      	movs	r2, #19
 80144d2:	2103      	movs	r1, #3
 80144d4:	f7ff fcac 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80144d8:	b007      	add	sp, #28
 80144da:	f85d fb04 	ldr.w	pc, [sp], #4
 80144de:	bf00      	nop
 80144e0:	2000fc68 	andcs	pc, r0, r8, ror #24

080144e4 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 80144e4:	f1a0 0004 	sub.w	r0, r0, #4
 80144e8:	e7e4      	b.n	80144b4 <StorePixelDmx::SaveMap(unsigned char)>
 80144ea:	bf00      	nop

080144ec <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 80144ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80144ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80144f2:	2200      	movs	r2, #0
 80144f4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80144f8:	4807      	ldr	r0, [pc, #28]	; (8014518 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 80144fa:	f8ad 1016 	strh.w	r1, [sp, #22]
 80144fe:	2302      	movs	r3, #2
 8014500:	9300      	str	r3, [sp, #0]
 8014502:	6800      	ldr	r0, [r0, #0]
 8014504:	f10d 0316 	add.w	r3, sp, #22
 8014508:	2211      	movs	r2, #17
 801450a:	2103      	movs	r1, #3
 801450c:	f7ff fc90 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014510:	b007      	add	sp, #28
 8014512:	f85d fb04 	ldr.w	pc, [sp], #4
 8014516:	bf00      	nop
 8014518:	2000fc68 	andcs	pc, r0, r8, ror #24

0801451c <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 801451c:	f1a0 0004 	sub.w	r0, r0, #4
 8014520:	e7e4      	b.n	80144ec <StorePixelDmx::SaveGroupingCount(unsigned short)>
 8014522:	bf00      	nop

08014524 <StorePixelDmx::SaveCount(unsigned short)>:
 8014524:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014526:	2302      	movs	r3, #2
 8014528:	2200      	movs	r2, #0
 801452a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801452e:	4807      	ldr	r0, [pc, #28]	; (801454c <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8014530:	9300      	str	r3, [sp, #0]
 8014532:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014536:	6800      	ldr	r0, [r0, #0]
 8014538:	f10d 0316 	add.w	r3, sp, #22
 801453c:	2205      	movs	r2, #5
 801453e:	2103      	movs	r1, #3
 8014540:	f7ff fc76 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014544:	b007      	add	sp, #28
 8014546:	f85d fb04 	ldr.w	pc, [sp], #4
 801454a:	bf00      	nop
 801454c:	2000fc68 	andcs	pc, r0, r8, ror #24

08014550 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8014550:	f1a0 0004 	sub.w	r0, r0, #4
 8014554:	e7e6      	b.n	8014524 <StorePixelDmx::SaveCount(unsigned short)>
 8014556:	bf00      	nop

08014558 <StorePixelDmx::SaveType(unsigned char)>:
 8014558:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801455a:	2301      	movs	r3, #1
 801455c:	2200      	movs	r2, #0
 801455e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014562:	4807      	ldr	r0, [pc, #28]	; (8014580 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8014564:	9300      	str	r3, [sp, #0]
 8014566:	f88d 1017 	strb.w	r1, [sp, #23]
 801456a:	6800      	ldr	r0, [r0, #0]
 801456c:	f10d 0317 	add.w	r3, sp, #23
 8014570:	2204      	movs	r2, #4
 8014572:	2103      	movs	r1, #3
 8014574:	f7ff fc5c 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014578:	b007      	add	sp, #28
 801457a:	f85d fb04 	ldr.w	pc, [sp], #4
 801457e:	bf00      	nop
 8014580:	2000fc68 	andcs	pc, r0, r8, ror #24

08014584 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8014584:	f1a0 0004 	sub.w	r0, r0, #4
 8014588:	e7e6      	b.n	8014558 <StorePixelDmx::SaveType(unsigned char)>
 801458a:	bf00      	nop

0801458c <StorePixelDmx::~StorePixelDmx()>:
 801458c:	b510      	push	{r4, lr}
 801458e:	4604      	mov	r4, r0
 8014590:	f000 ffa4 	bl	80154dc <operator delete(void*)>
 8014594:	4620      	mov	r0, r4
 8014596:	bd10      	pop	{r4, pc}

08014598 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8014598:	f1a0 0004 	sub.w	r0, r0, #4
 801459c:	e7f6      	b.n	801458c <StorePixelDmx::~StorePixelDmx()>
	...

080145a0 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 80145a0:	b507      	push	{r0, r1, r2, lr}
 80145a2:	2300      	movs	r3, #0
 80145a4:	460a      	mov	r2, r1
 80145a6:	2101      	movs	r1, #1
 80145a8:	e9cd 3100 	strd	r3, r1, [sp]
 80145ac:	4804      	ldr	r0, [pc, #16]	; (80145c0 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 80145ae:	2336      	movs	r3, #54	; 0x36
 80145b0:	6800      	ldr	r0, [r0, #0]
 80145b2:	2103      	movs	r1, #3
 80145b4:	f7ff fc7c 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80145b8:	b003      	add	sp, #12
 80145ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80145be:	bf00      	nop
 80145c0:	2000fc68 	andcs	pc, r0, r8, ror #24

080145c4 <StorePixelDmx::StorePixelDmx()>:
 80145c4:	4a03      	ldr	r2, [pc, #12]	; (80145d4 <StorePixelDmx::StorePixelDmx()+0x10>)
 80145c6:	6002      	str	r2, [r0, #0]
 80145c8:	3230      	adds	r2, #48	; 0x30
 80145ca:	6042      	str	r2, [r0, #4]
 80145cc:	4a02      	ldr	r2, [pc, #8]	; (80145d8 <StorePixelDmx::StorePixelDmx()+0x14>)
 80145ce:	6010      	str	r0, [r2, #0]
 80145d0:	4770      	bx	lr
 80145d2:	bf00      	nop
 80145d4:	0801a694 	stmdaeq	r1, {r2, r4, r7, r9, sl, sp, pc}
 80145d8:	2000fc84 	andcs	pc, r0, r4, lsl #25

080145dc <StoreRDMDevice::~StoreRDMDevice()>:
 80145dc:	4770      	bx	lr

080145de <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80145de:	3804      	subs	r0, #4
 80145e0:	4770      	bx	lr
	...

080145e4 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 80145e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80145e6:	2200      	movs	r2, #0
 80145e8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80145ec:	460b      	mov	r3, r1
 80145ee:	4805      	ldr	r0, [pc, #20]	; (8014604 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 80145f0:	2129      	movs	r1, #41	; 0x29
 80145f2:	9100      	str	r1, [sp, #0]
 80145f4:	6800      	ldr	r0, [r0, #0]
 80145f6:	210b      	movs	r1, #11
 80145f8:	f7ff fc1a 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80145fc:	b005      	add	sp, #20
 80145fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8014602:	bf00      	nop
 8014604:	2000fc68 	andcs	pc, r0, r8, ror #24

08014608 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8014608:	b570      	push	{r4, r5, r6, lr}
 801460a:	4d0d      	ldr	r5, [pc, #52]	; (8014640 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 801460c:	b086      	sub	sp, #24
 801460e:	2401      	movs	r4, #1
 8014610:	2600      	movs	r6, #0
 8014612:	6828      	ldr	r0, [r5, #0]
 8014614:	f88d 2017 	strb.w	r2, [sp, #23]
 8014618:	460b      	mov	r3, r1
 801461a:	9200      	str	r2, [sp, #0]
 801461c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8014620:	2204      	movs	r2, #4
 8014622:	210b      	movs	r1, #11
 8014624:	f7ff fc04 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8014628:	e9cd 4601 	strd	r4, r6, [sp, #4]
 801462c:	6828      	ldr	r0, [r5, #0]
 801462e:	9400      	str	r4, [sp, #0]
 8014630:	f10d 0317 	add.w	r3, sp, #23
 8014634:	2224      	movs	r2, #36	; 0x24
 8014636:	210b      	movs	r1, #11
 8014638:	f7ff fbfa 	bl	8013e30 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801463c:	b006      	add	sp, #24
 801463e:	bd70      	pop	{r4, r5, r6, pc}
 8014640:	2000fc68 	andcs	pc, r0, r8, ror #24

08014644 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8014644:	f1a0 0004 	sub.w	r0, r0, #4
 8014648:	e7de      	b.n	8014608 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 801464a:	bf00      	nop

0801464c <StoreRDMDevice::~StoreRDMDevice()>:
 801464c:	b510      	push	{r4, lr}
 801464e:	4604      	mov	r4, r0
 8014650:	f000 ff44 	bl	80154dc <operator delete(void*)>
 8014654:	4620      	mov	r0, r4
 8014656:	bd10      	pop	{r4, pc}

08014658 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8014658:	f1a0 0004 	sub.w	r0, r0, #4
 801465c:	e7f6      	b.n	801464c <StoreRDMDevice::~StoreRDMDevice()>
	...

08014660 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8014660:	b507      	push	{r0, r1, r2, lr}
 8014662:	2300      	movs	r3, #0
 8014664:	460a      	mov	r2, r1
 8014666:	2101      	movs	r1, #1
 8014668:	e9cd 3100 	strd	r3, r1, [sp]
 801466c:	4804      	ldr	r0, [pc, #16]	; (8014680 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 801466e:	2329      	movs	r3, #41	; 0x29
 8014670:	6800      	ldr	r0, [r0, #0]
 8014672:	210b      	movs	r1, #11
 8014674:	f7ff fc1c 	bl	8013eb0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8014678:	b003      	add	sp, #12
 801467a:	f85d fb04 	ldr.w	pc, [sp], #4
 801467e:	bf00      	nop
 8014680:	2000fc68 	andcs	pc, r0, r8, ror #24

08014684 <StoreRDMDevice::StoreRDMDevice()>:
 8014684:	4a03      	ldr	r2, [pc, #12]	; (8014694 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8014686:	6002      	str	r2, [r0, #0]
 8014688:	321c      	adds	r2, #28
 801468a:	6042      	str	r2, [r0, #4]
 801468c:	4a02      	ldr	r2, [pc, #8]	; (8014698 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 801468e:	6010      	str	r0, [r2, #0]
 8014690:	4770      	bx	lr
 8014692:	bf00      	nop
 8014694:	0801a6ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, sp, pc}
 8014698:	2000fc88 	andcs	pc, r0, r8, lsl #25

0801469c <properties::convert_json_file(char*, unsigned short, bool)>:
 801469c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80146a0:	7803      	ldrb	r3, [r0, #0]
 80146a2:	2b7b      	cmp	r3, #123	; 0x7b
 80146a4:	f040 80a4 	bne.w	80147f0 <properties::convert_json_file(char*, unsigned short, bool)+0x154>
 80146a8:	b182      	cbz	r2, 80146cc <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80146aa:	2401      	movs	r4, #1
 80146ac:	4606      	mov	r6, r0
 80146ae:	4623      	mov	r3, r4
 80146b0:	2a00      	cmp	r2, #0
 80146b2:	bf0c      	ite	eq
 80146b4:	f04f 0c0a 	moveq.w	ip, #10
 80146b8:	f04f 0c00 	movne.w	ip, #0
 80146bc:	273d      	movs	r7, #61	; 0x3d
 80146be:	42a1      	cmp	r1, r4
 80146c0:	d852      	bhi.n	8014768 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 80146c2:	4618      	mov	r0, r3
 80146c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80146c8:	463c      	mov	r4, r7
 80146ca:	e7f1      	b.n	80146b0 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 80146cc:	2323      	movs	r3, #35	; 0x23
 80146ce:	f800 3b01 	strb.w	r3, [r0], #1
 80146d2:	2701      	movs	r7, #1
 80146d4:	4604      	mov	r4, r0
 80146d6:	42b9      	cmp	r1, r7
 80146d8:	d811      	bhi.n	80146fe <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 80146da:	2301      	movs	r3, #1
 80146dc:	4606      	mov	r6, r0
 80146de:	200a      	movs	r0, #10
 80146e0:	f806 0b01 	strb.w	r0, [r6], #1
 80146e4:	3301      	adds	r3, #1
 80146e6:	4625      	mov	r5, r4
 80146e8:	4628      	mov	r0, r5
 80146ea:	3501      	adds	r5, #1
 80146ec:	7804      	ldrb	r4, [r0, #0]
 80146ee:	2c7b      	cmp	r4, #123	; 0x7b
 80146f0:	d0ea      	beq.n	80146c8 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 80146f2:	42b9      	cmp	r1, r7
 80146f4:	f107 0401 	add.w	r4, r7, #1
 80146f8:	d9da      	bls.n	80146b0 <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 80146fa:	4627      	mov	r7, r4
 80146fc:	e7f4      	b.n	80146e8 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 80146fe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014702:	2b22      	cmp	r3, #34	; 0x22
 8014704:	d119      	bne.n	801473a <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8014706:	46a4      	mov	ip, r4
 8014708:	4605      	mov	r5, r0
 801470a:	2601      	movs	r6, #1
 801470c:	f89c e000 	ldrb.w	lr, [ip]
 8014710:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014714:	4664      	mov	r4, ip
 8014716:	4628      	mov	r0, r5
 8014718:	4633      	mov	r3, r6
 801471a:	f10c 0c01 	add.w	ip, ip, #1
 801471e:	f105 0501 	add.w	r5, r5, #1
 8014722:	f106 0601 	add.w	r6, r6, #1
 8014726:	d0d9      	beq.n	80146dc <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8014728:	3701      	adds	r7, #1
 801472a:	42b9      	cmp	r1, r7
 801472c:	4664      	mov	r4, ip
 801472e:	f805 ec01 	strb.w	lr, [r5, #-1]
 8014732:	d8eb      	bhi.n	801470c <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8014734:	4633      	mov	r3, r6
 8014736:	4628      	mov	r0, r5
 8014738:	e7d0      	b.n	80146dc <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 801473a:	3701      	adds	r7, #1
 801473c:	e7cb      	b.n	80146d6 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801473e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014742:	d111      	bne.n	8014768 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8014744:	eba3 0800 	sub.w	r8, r3, r0
 8014748:	eb08 0300 	add.w	r3, r8, r0
 801474c:	4602      	mov	r2, r0
 801474e:	f810 eb01 	ldrb.w	lr, [r0], #1
 8014752:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014756:	f104 0501 	add.w	r5, r4, #1
 801475a:	d04c      	beq.n	80147f6 <properties::convert_json_file(char*, unsigned short, bool)+0x15a>
 801475c:	42a1      	cmp	r1, r4
 801475e:	d911      	bls.n	8014784 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8014760:	f806 eb01 	strb.w	lr, [r6], #1
 8014764:	462c      	mov	r4, r5
 8014766:	e7ef      	b.n	8014748 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8014768:	42a1      	cmp	r1, r4
 801476a:	f890 e000 	ldrb.w	lr, [r0]
 801476e:	4605      	mov	r5, r0
 8014770:	f104 0401 	add.w	r4, r4, #1
 8014774:	f100 0001 	add.w	r0, r0, #1
 8014778:	d8e1      	bhi.n	801473e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 801477a:	4628      	mov	r0, r5
 801477c:	e7e2      	b.n	8014744 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 801477e:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8014782:	d009      	beq.n	8014798 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 8014784:	42a9      	cmp	r1, r5
 8014786:	f892 e000 	ldrb.w	lr, [r2]
 801478a:	4614      	mov	r4, r2
 801478c:	f105 0501 	add.w	r5, r5, #1
 8014790:	f102 0201 	add.w	r2, r2, #1
 8014794:	d8f3      	bhi.n	801477e <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8014796:	4622      	mov	r2, r4
 8014798:	7814      	ldrb	r4, [r2, #0]
 801479a:	2c2f      	cmp	r4, #47	; 0x2f
 801479c:	4696      	mov	lr, r2
 801479e:	4628      	mov	r0, r5
 80147a0:	f102 0201 	add.w	r2, r2, #1
 80147a4:	f105 0501 	add.w	r5, r5, #1
 80147a8:	d81a      	bhi.n	80147e0 <properties::convert_json_file(char*, unsigned short, bool)+0x144>
 80147aa:	4281      	cmp	r1, r0
 80147ac:	d8f4      	bhi.n	8014798 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 80147ae:	2c22      	cmp	r4, #34	; 0x22
 80147b0:	bf08      	it	eq
 80147b2:	4696      	moveq	lr, r2
 80147b4:	4670      	mov	r0, lr
 80147b6:	1c6c      	adds	r4, r5, #1
 80147b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80147bc:	2a22      	cmp	r2, #34	; 0x22
 80147be:	d011      	beq.n	80147e4 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80147c0:	2a2c      	cmp	r2, #44	; 0x2c
 80147c2:	d00f      	beq.n	80147e4 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80147c4:	2a7d      	cmp	r2, #125	; 0x7d
 80147c6:	d00d      	beq.n	80147e4 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 80147c8:	42a9      	cmp	r1, r5
 80147ca:	d90f      	bls.n	80147ec <properties::convert_json_file(char*, unsigned short, bool)+0x150>
 80147cc:	f1a2 0520 	sub.w	r5, r2, #32
 80147d0:	2d5a      	cmp	r5, #90	; 0x5a
 80147d2:	d803      	bhi.n	80147dc <properties::convert_json_file(char*, unsigned short, bool)+0x140>
 80147d4:	f806 2b01 	strb.w	r2, [r6], #1
 80147d8:	3301      	adds	r3, #1
 80147da:	4686      	mov	lr, r0
 80147dc:	4625      	mov	r5, r4
 80147de:	e7e9      	b.n	80147b4 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 80147e0:	4605      	mov	r5, r0
 80147e2:	e7e7      	b.n	80147b4 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 80147e4:	f806 cb01 	strb.w	ip, [r6], #1
 80147e8:	3301      	adds	r3, #1
 80147ea:	462c      	mov	r4, r5
 80147ec:	3401      	adds	r4, #1
 80147ee:	e766      	b.n	80146be <properties::convert_json_file(char*, unsigned short, bool)+0x22>
 80147f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80147f4:	e766      	b.n	80146c4 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 80147f6:	f806 7b01 	strb.w	r7, [r6], #1
 80147fa:	3301      	adds	r3, #1
 80147fc:	4625      	mov	r5, r4
 80147fe:	e7c1      	b.n	8014784 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>

08014800 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8014800:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014804:	6002      	str	r2, [r0, #0]
 8014806:	4614      	mov	r4, r2
 8014808:	2200      	movs	r2, #0
 801480a:	80c2      	strh	r2, [r0, #6]
 801480c:	4a1c      	ldr	r2, [pc, #112]	; (8014880 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801480e:	8083      	strh	r3, [r0, #4]
 8014810:	7812      	ldrb	r2, [r2, #0]
 8014812:	f002 0201 	and.w	r2, r2, #1
 8014816:	4606      	mov	r6, r0
 8014818:	7202      	strb	r2, [r0, #8]
 801481a:	4608      	mov	r0, r1
 801481c:	4605      	mov	r5, r0
 801481e:	3001      	adds	r0, #1
 8014820:	782f      	ldrb	r7, [r5, #0]
 8014822:	2f00      	cmp	r7, #0
 8014824:	d1fa      	bne.n	801481c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8014826:	1a6d      	subs	r5, r5, r1
 8014828:	b29b      	uxth	r3, r3
 801482a:	b1d2      	cbz	r2, 8014862 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 801482c:	1d2f      	adds	r7, r5, #4
 801482e:	429f      	cmp	r7, r3
 8014830:	d814      	bhi.n	801485c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014832:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8014836:	f04f 0922 	mov.w	r9, #34	; 0x22
 801483a:	462a      	mov	r2, r5
 801483c:	f884 8000 	strb.w	r8, [r4]
 8014840:	f884 9001 	strb.w	r9, [r4, #1]
 8014844:	1ca0      	adds	r0, r4, #2
 8014846:	f000 ff0c 	bl	8015662 <memmove>
 801484a:	1963      	adds	r3, r4, r5
 801484c:	223a      	movs	r2, #58	; 0x3a
 801484e:	f883 9002 	strb.w	r9, [r3, #2]
 8014852:	70da      	strb	r2, [r3, #3]
 8014854:	3505      	adds	r5, #5
 8014856:	f804 8007 	strb.w	r8, [r4, r7]
 801485a:	80f5      	strh	r5, [r6, #6]
 801485c:	4630      	mov	r0, r6
 801485e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014862:	1caf      	adds	r7, r5, #2
 8014864:	429f      	cmp	r7, r3
 8014866:	d8f9      	bhi.n	801485c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014868:	4620      	mov	r0, r4
 801486a:	2323      	movs	r3, #35	; 0x23
 801486c:	f800 3b01 	strb.w	r3, [r0], #1
 8014870:	462a      	mov	r2, r5
 8014872:	442c      	add	r4, r5
 8014874:	f000 fef5 	bl	8015662 <memmove>
 8014878:	230a      	movs	r3, #10
 801487a:	7063      	strb	r3, [r4, #1]
 801487c:	80f7      	strh	r7, [r6, #6]
 801487e:	e7ed      	b.n	801485c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014880:	2000fc8c 	andcs	pc, r0, ip, lsl #25

08014884 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8014884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014886:	469c      	mov	ip, r3
 8014888:	8885      	ldrh	r5, [r0, #4]
 801488a:	88c3      	ldrh	r3, [r0, #6]
 801488c:	42ab      	cmp	r3, r5
 801488e:	b085      	sub	sp, #20
 8014890:	d302      	bcc.n	8014898 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8014892:	2000      	movs	r0, #0
 8014894:	b005      	add	sp, #20
 8014896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014898:	4604      	mov	r4, r0
 801489a:	6800      	ldr	r0, [r0, #0]
 801489c:	f894 e008 	ldrb.w	lr, [r4, #8]
 80148a0:	4418      	add	r0, r3
 80148a2:	1aed      	subs	r5, r5, r3
 80148a4:	b2d6      	uxtb	r6, r2
 80148a6:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80148aa:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80148ae:	0e12      	lsrs	r2, r2, #24
 80148b0:	f1bc 0f00 	cmp.w	ip, #0
 80148b4:	d109      	bne.n	80148ca <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80148b6:	f1be 0f00 	cmp.w	lr, #0
 80148ba:	d109      	bne.n	80148d0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80148bc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80148c0:	e9cd 6700 	strd	r6, r7, [sp]
 80148c4:	4a0e      	ldr	r2, [pc, #56]	; (8014900 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80148c6:	460b      	mov	r3, r1
 80148c8:	e008      	b.n	80148dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80148ca:	f1be 0f00 	cmp.w	lr, #0
 80148ce:	d00f      	beq.n	80148f0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80148d0:	e9cd 6700 	strd	r6, r7, [sp]
 80148d4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80148d8:	4a0a      	ldr	r2, [pc, #40]	; (8014904 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80148da:	460b      	mov	r3, r1
 80148dc:	4629      	mov	r1, r5
 80148de:	f7f5 fd85 	bl	800a3ec <snprintf>
 80148e2:	4285      	cmp	r5, r0
 80148e4:	dbd5      	blt.n	8014892 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80148e6:	88e3      	ldrh	r3, [r4, #6]
 80148e8:	4403      	add	r3, r0
 80148ea:	80e3      	strh	r3, [r4, #6]
 80148ec:	2001      	movs	r0, #1
 80148ee:	e7d1      	b.n	8014894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80148f0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80148f4:	e9cd 6700 	strd	r6, r7, [sp]
 80148f8:	4a03      	ldr	r2, [pc, #12]	; (8014908 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80148fa:	460b      	mov	r3, r1
 80148fc:	e7ee      	b.n	80148dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80148fe:	bf00      	nop
 8014900:	0801a7cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, sp, pc}
 8014904:	0801a7b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, sp, pc}
 8014908:	0801a7ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, sp, pc}

0801490c <PropertiesBuilder::AddComment(char const*)>:
 801490c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801490e:	7a06      	ldrb	r6, [r0, #8]
 8014910:	b996      	cbnz	r6, 8014938 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8014912:	4604      	mov	r4, r0
 8014914:	88c0      	ldrh	r0, [r0, #6]
 8014916:	88a5      	ldrh	r5, [r4, #4]
 8014918:	42a8      	cmp	r0, r5
 801491a:	d20d      	bcs.n	8014938 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801491c:	6827      	ldr	r7, [r4, #0]
 801491e:	4a07      	ldr	r2, [pc, #28]	; (801493c <PropertiesBuilder::AddComment(char const*)+0x30>)
 8014920:	1a2d      	subs	r5, r5, r0
 8014922:	460b      	mov	r3, r1
 8014924:	4438      	add	r0, r7
 8014926:	4629      	mov	r1, r5
 8014928:	f7f5 fd60 	bl	800a3ec <snprintf>
 801492c:	4285      	cmp	r5, r0
 801492e:	bfa1      	itttt	ge
 8014930:	88e3      	ldrhge	r3, [r4, #6]
 8014932:	18c0      	addge	r0, r0, r3
 8014934:	80e0      	strhge	r0, [r4, #6]
 8014936:	2601      	movge	r6, #1
 8014938:	4630      	mov	r0, r6
 801493a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801493c:	0801a7de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, sp, pc}

08014940 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8014940:	e9c0 1200 	strd	r1, r2, [r0]
 8014944:	4770      	bx	lr

08014946 <ReadConfigFile::~ReadConfigFile()>:
 8014946:	4770      	bx	lr

08014948 <ReadConfigFile::Read(char const*, unsigned int)>:
 8014948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801494c:	4606      	mov	r6, r0
 801494e:	b0a0      	sub	sp, #128	; 0x80
 8014950:	460d      	mov	r5, r1
 8014952:	4614      	mov	r4, r2
 8014954:	f04f 0800 	mov.w	r8, #0
 8014958:	b33c      	cbz	r4, 80149aa <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801495a:	466b      	mov	r3, sp
 801495c:	462a      	mov	r2, r5
 801495e:	4619      	mov	r1, r3
 8014960:	e007      	b.n	8014972 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8014962:	f803 7b01 	strb.w	r7, [r3], #1
 8014966:	1a58      	subs	r0, r3, r1
 8014968:	287f      	cmp	r0, #127	; 0x7f
 801496a:	4615      	mov	r5, r2
 801496c:	dc1d      	bgt.n	80149aa <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801496e:	3c01      	subs	r4, #1
 8014970:	d00f      	beq.n	8014992 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8014972:	7817      	ldrb	r7, [r2, #0]
 8014974:	2f0d      	cmp	r7, #13
 8014976:	4610      	mov	r0, r2
 8014978:	f102 0201 	add.w	r2, r2, #1
 801497c:	d001      	beq.n	8014982 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801497e:	2f0a      	cmp	r7, #10
 8014980:	d1ef      	bne.n	8014962 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8014982:	4605      	mov	r5, r0
 8014984:	b12c      	cbz	r4, 8014992 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8014986:	f810 2b01 	ldrb.w	r2, [r0], #1
 801498a:	2a0d      	cmp	r2, #13
 801498c:	d00b      	beq.n	80149a6 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 801498e:	2a0a      	cmp	r2, #10
 8014990:	d009      	beq.n	80149a6 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8014992:	f89d 2000 	ldrb.w	r2, [sp]
 8014996:	2a60      	cmp	r2, #96	; 0x60
 8014998:	d9de      	bls.n	8014958 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801499a:	f883 8000 	strb.w	r8, [r3]
 801499e:	e9d6 3000 	ldrd	r3, r0, [r6]
 80149a2:	4798      	blx	r3
 80149a4:	e7d8      	b.n	8014958 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80149a6:	3c01      	subs	r4, #1
 80149a8:	e7eb      	b.n	8014982 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80149aa:	b020      	add	sp, #128	; 0x80
 80149ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080149b0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80149b0:	b570      	push	{r4, r5, r6, lr}
 80149b2:	4615      	mov	r5, r2
 80149b4:	461c      	mov	r4, r3
 80149b6:	f000 f916 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 80149ba:	b180      	cbz	r0, 80149de <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80149bc:	2100      	movs	r1, #0
 80149be:	5c43      	ldrb	r3, [r0, r1]
 80149c0:	6826      	ldr	r6, [r4, #0]
 80149c2:	b28a      	uxth	r2, r1
 80149c4:	b143      	cbz	r3, 80149d8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80149c6:	42b2      	cmp	r2, r6
 80149c8:	d303      	bcc.n	80149d2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80149ca:	2b0a      	cmp	r3, #10
 80149cc:	d004      	beq.n	80149d8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80149ce:	2002      	movs	r0, #2
 80149d0:	e004      	b.n	80149dc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80149d2:	546b      	strb	r3, [r5, r1]
 80149d4:	3101      	adds	r1, #1
 80149d6:	e7f2      	b.n	80149be <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80149d8:	6022      	str	r2, [r4, #0]
 80149da:	2000      	movs	r0, #0
 80149dc:	bd70      	pop	{r4, r5, r6, pc}
 80149de:	2001      	movs	r0, #1
 80149e0:	e7fc      	b.n	80149dc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

080149e2 <Sscan::Float(char const*, char const*, float&)>:
 80149e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149e4:	4614      	mov	r4, r2
 80149e6:	f000 f8fe 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 80149ea:	2800      	cmp	r0, #0
 80149ec:	d052      	beq.n	8014a94 <Sscan::Float(char const*, char const*, float&)+0xb2>
 80149ee:	7803      	ldrb	r3, [r0, #0]
 80149f0:	2b2d      	cmp	r3, #45	; 0x2d
 80149f2:	bf04      	itt	eq
 80149f4:	3001      	addeq	r0, #1
 80149f6:	2601      	moveq	r6, #1
 80149f8:	7803      	ldrb	r3, [r0, #0]
 80149fa:	bf18      	it	ne
 80149fc:	2600      	movne	r6, #0
 80149fe:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8014a02:	d101      	bne.n	8014a08 <Sscan::Float(char const*, char const*, float&)+0x26>
 8014a04:	2002      	movs	r0, #2
 8014a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a08:	2300      	movs	r3, #0
 8014a0a:	210a      	movs	r1, #10
 8014a0c:	7802      	ldrb	r2, [r0, #0]
 8014a0e:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8014a12:	2d09      	cmp	r5, #9
 8014a14:	d8f6      	bhi.n	8014a04 <Sscan::Float(char const*, char const*, float&)+0x22>
 8014a16:	fb01 2303 	mla	r3, r1, r3, r2
 8014a1a:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8014a1e:	2a2e      	cmp	r2, #46	; 0x2e
 8014a20:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 8014a24:	d002      	beq.n	8014a2c <Sscan::Float(char const*, char const*, float&)+0x4a>
 8014a26:	f012 0fdf 	tst.w	r2, #223	; 0xdf
 8014a2a:	d1ef      	bne.n	8014a0c <Sscan::Float(char const*, char const*, float&)+0x2a>
 8014a2c:	ee07 3a90 	vmov	s15, r3
 8014a30:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8014a34:	edc4 7a00 	vstr	s15, [r4]
 8014a38:	7803      	ldrb	r3, [r0, #0]
 8014a3a:	2b2e      	cmp	r3, #46	; 0x2e
 8014a3c:	d007      	beq.n	8014a4e <Sscan::Float(char const*, char const*, float&)+0x6c>
 8014a3e:	b90e      	cbnz	r6, 8014a44 <Sscan::Float(char const*, char const*, float&)+0x62>
 8014a40:	2000      	movs	r0, #0
 8014a42:	e7e0      	b.n	8014a06 <Sscan::Float(char const*, char const*, float&)+0x24>
 8014a44:	eef1 7a67 	vneg.f32	s15, s15
 8014a48:	edc4 7a00 	vstr	s15, [r4]
 8014a4c:	e7f8      	b.n	8014a40 <Sscan::Float(char const*, char const*, float&)+0x5e>
 8014a4e:	4603      	mov	r3, r0
 8014a50:	2101      	movs	r1, #1
 8014a52:	2500      	movs	r5, #0
 8014a54:	270a      	movs	r7, #10
 8014a56:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8014a5a:	f012 00df 	ands.w	r0, r2, #223	; 0xdf
 8014a5e:	d112      	bne.n	8014a86 <Sscan::Float(char const*, char const*, float&)+0xa4>
 8014a60:	ee07 5a10 	vmov	s14, r5
 8014a64:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8014a68:	ee07 1a10 	vmov	s14, r1
 8014a6c:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8014a70:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8014a74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014a78:	2e00      	cmp	r6, #0
 8014a7a:	d0e5      	beq.n	8014a48 <Sscan::Float(char const*, char const*, float&)+0x66>
 8014a7c:	eef1 7a67 	vneg.f32	s15, s15
 8014a80:	edc4 7a00 	vstr	s15, [r4]
 8014a84:	e7bf      	b.n	8014a06 <Sscan::Float(char const*, char const*, float&)+0x24>
 8014a86:	3a30      	subs	r2, #48	; 0x30
 8014a88:	2a09      	cmp	r2, #9
 8014a8a:	d8bb      	bhi.n	8014a04 <Sscan::Float(char const*, char const*, float&)+0x22>
 8014a8c:	fb07 2505 	mla	r5, r7, r5, r2
 8014a90:	4379      	muls	r1, r7
 8014a92:	e7e0      	b.n	8014a56 <Sscan::Float(char const*, char const*, float&)+0x74>
 8014a94:	2001      	movs	r0, #1
 8014a96:	e7b6      	b.n	8014a06 <Sscan::Float(char const*, char const*, float&)+0x24>

08014a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8014a98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014a9a:	4615      	mov	r5, r2
 8014a9c:	f000 f8a3 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 8014aa0:	bb58      	cbnz	r0, 8014afa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8014aa2:	2001      	movs	r0, #1
 8014aa4:	e027      	b.n	8014af6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8014aa6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8014aaa:	2b09      	cmp	r3, #9
 8014aac:	d822      	bhi.n	8014af4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014aae:	fb0c 2101 	mla	r1, ip, r1, r2
 8014ab2:	3930      	subs	r1, #48	; 0x30
 8014ab4:	4603      	mov	r3, r0
 8014ab6:	4618      	mov	r0, r3
 8014ab8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014abc:	2a2e      	cmp	r2, #46	; 0x2e
 8014abe:	d115      	bne.n	8014aec <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8014ac0:	29ff      	cmp	r1, #255	; 0xff
 8014ac2:	d817      	bhi.n	8014af4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014ac4:	3401      	adds	r4, #1
 8014ac6:	2c03      	cmp	r4, #3
 8014ac8:	f806 1b01 	strb.w	r1, [r6], #1
 8014acc:	d119      	bne.n	8014b02 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8014ace:	1d1a      	adds	r2, r3, #4
 8014ad0:	2400      	movs	r4, #0
 8014ad2:	260a      	movs	r6, #10
 8014ad4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8014ad8:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8014adc:	d115      	bne.n	8014b0a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8014ade:	2cff      	cmp	r4, #255	; 0xff
 8014ae0:	d808      	bhi.n	8014af4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014ae2:	f88d 4007 	strb.w	r4, [sp, #7]
 8014ae6:	9b01      	ldr	r3, [sp, #4]
 8014ae8:	602b      	str	r3, [r5, #0]
 8014aea:	e004      	b.n	8014af6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8014aec:	2a00      	cmp	r2, #0
 8014aee:	d0e7      	beq.n	8014ac0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8014af0:	42b8      	cmp	r0, r7
 8014af2:	d1d8      	bne.n	8014aa6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8014af4:	2002      	movs	r0, #2
 8014af6:	b003      	add	sp, #12
 8014af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014afa:	ae01      	add	r6, sp, #4
 8014afc:	2400      	movs	r4, #0
 8014afe:	f04f 0c0a 	mov.w	ip, #10
 8014b02:	4603      	mov	r3, r0
 8014b04:	1d07      	adds	r7, r0, #4
 8014b06:	2100      	movs	r1, #0
 8014b08:	e7d5      	b.n	8014ab6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8014b0a:	4293      	cmp	r3, r2
 8014b0c:	d0f2      	beq.n	8014af4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014b0e:	3930      	subs	r1, #48	; 0x30
 8014b10:	2909      	cmp	r1, #9
 8014b12:	d8ef      	bhi.n	8014af4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8014b14:	fb06 1404 	mla	r4, r6, r4, r1
 8014b18:	e7dc      	b.n	8014ad4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08014b1a <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8014b1a:	b538      	push	{r3, r4, r5, lr}
 8014b1c:	4614      	mov	r4, r2
 8014b1e:	f000 f862 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 8014b22:	b1a8      	cbz	r0, 8014b50 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x36>
 8014b24:	2100      	movs	r1, #0
 8014b26:	220a      	movs	r2, #10
 8014b28:	7803      	ldrb	r3, [r0, #0]
 8014b2a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8014b2e:	2d09      	cmp	r5, #9
 8014b30:	d810      	bhi.n	8014b54 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8014b32:	fb02 3101 	mla	r1, r2, r1, r3
 8014b36:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8014b3a:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8014b3e:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8014b42:	d1f1      	bne.n	8014b28 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8014b44:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8014b48:	d204      	bcs.n	8014b54 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8014b4a:	8021      	strh	r1, [r4, #0]
 8014b4c:	4618      	mov	r0, r3
 8014b4e:	bd38      	pop	{r3, r4, r5, pc}
 8014b50:	2301      	movs	r3, #1
 8014b52:	e7fb      	b.n	8014b4c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8014b54:	2302      	movs	r3, #2
 8014b56:	e7f9      	b.n	8014b4c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08014b58 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8014b58:	b570      	push	{r4, r5, r6, lr}
 8014b5a:	4614      	mov	r4, r2
 8014b5c:	f000 f843 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 8014b60:	b1f8      	cbz	r0, 8014ba2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8014b62:	2300      	movs	r3, #0
 8014b64:	461a      	mov	r2, r3
 8014b66:	260a      	movs	r6, #10
 8014b68:	7805      	ldrb	r5, [r0, #0]
 8014b6a:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
 8014b6e:	2909      	cmp	r1, #9
 8014b70:	d819      	bhi.n	8014ba6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8014b72:	fba3 3106 	umull	r3, r1, r3, r6
 8014b76:	fb06 1102 	mla	r1, r6, r2, r1
 8014b7a:	3b30      	subs	r3, #48	; 0x30
 8014b7c:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8014b80:	18eb      	adds	r3, r5, r3
 8014b82:	f141 0200 	adc.w	r2, r1, #0
 8014b86:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 8014b8a:	f011 01df 	ands.w	r1, r1, #223	; 0xdf
 8014b8e:	d1eb      	bne.n	8014b68 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x10>
 8014b90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014b94:	4298      	cmp	r0, r3
 8014b96:	eb71 0202 	sbcs.w	r2, r1, r2
 8014b9a:	d304      	bcc.n	8014ba6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8014b9c:	6023      	str	r3, [r4, #0]
 8014b9e:	4608      	mov	r0, r1
 8014ba0:	bd70      	pop	{r4, r5, r6, pc}
 8014ba2:	2101      	movs	r1, #1
 8014ba4:	e7fb      	b.n	8014b9e <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>
 8014ba6:	2102      	movs	r1, #2
 8014ba8:	e7f9      	b.n	8014b9e <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>

08014baa <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8014baa:	b538      	push	{r3, r4, r5, lr}
 8014bac:	4614      	mov	r4, r2
 8014bae:	f000 f81a 	bl	8014be6 <Sscan::checkName(char const*, char const*)>
 8014bb2:	b1a0      	cbz	r0, 8014bde <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 8014bb4:	2100      	movs	r1, #0
 8014bb6:	220a      	movs	r2, #10
 8014bb8:	7803      	ldrb	r3, [r0, #0]
 8014bba:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8014bbe:	2d09      	cmp	r5, #9
 8014bc0:	d80f      	bhi.n	8014be2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8014bc2:	fb02 3101 	mla	r1, r2, r1, r3
 8014bc6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8014bca:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8014bce:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8014bd2:	d1f1      	bne.n	8014bb8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8014bd4:	29ff      	cmp	r1, #255	; 0xff
 8014bd6:	d804      	bhi.n	8014be2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8014bd8:	7021      	strb	r1, [r4, #0]
 8014bda:	4618      	mov	r0, r3
 8014bdc:	bd38      	pop	{r3, r4, r5, pc}
 8014bde:	2301      	movs	r3, #1
 8014be0:	e7fb      	b.n	8014bda <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8014be2:	2302      	movs	r3, #2
 8014be4:	e7f9      	b.n	8014bda <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08014be6 <Sscan::checkName(char const*, char const*)>:
 8014be6:	b510      	push	{r4, lr}
 8014be8:	3901      	subs	r1, #1
 8014bea:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8014bee:	4604      	mov	r4, r0
 8014bf0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014bf4:	b123      	cbz	r3, 8014c00 <Sscan::checkName(char const*, char const*)+0x1a>
 8014bf6:	b10a      	cbz	r2, 8014bfc <Sscan::checkName(char const*, char const*)+0x16>
 8014bf8:	4293      	cmp	r3, r2
 8014bfa:	d0f6      	beq.n	8014bea <Sscan::checkName(char const*, char const*)+0x4>
 8014bfc:	2000      	movs	r0, #0
 8014bfe:	e006      	b.n	8014c0e <Sscan::checkName(char const*, char const*)+0x28>
 8014c00:	2a3d      	cmp	r2, #61	; 0x3d
 8014c02:	d1fb      	bne.n	8014bfc <Sscan::checkName(char const*, char const*)+0x16>
 8014c04:	7860      	ldrb	r0, [r4, #1]
 8014c06:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8014c0a:	d000      	beq.n	8014c0e <Sscan::checkName(char const*, char const*)+0x28>
 8014c0c:	1c60      	adds	r0, r4, #1
 8014c0e:	bd10      	pop	{r4, pc}

08014c10 <LightSet::GetDmxStartAddress()>:
 8014c10:	2001      	movs	r0, #1
 8014c12:	4770      	bx	lr

08014c14 <LightSet::GetDmxFootprint()>:
 8014c14:	f44f 7000 	mov.w	r0, #512	; 0x200
 8014c18:	4770      	bx	lr

08014c1a <LightSet::SetDmxStartAddress(unsigned short)>:
 8014c1a:	2000      	movs	r0, #0
 8014c1c:	4770      	bx	lr

08014c1e <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8014c1e:	2300      	movs	r3, #0
 8014c20:	2001      	movs	r0, #1
 8014c22:	7093      	strb	r3, [r2, #2]
 8014c24:	8010      	strh	r0, [r2, #0]
 8014c26:	4770      	bx	lr

08014c28 <Display::PrintInfo() [clone .isra.0]>:
 8014c28:	b910      	cbnz	r0, 8014c30 <Display::PrintInfo() [clone .isra.0]+0x8>
 8014c2a:	4803      	ldr	r0, [pc, #12]	; (8014c38 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8014c2c:	f000 bd51 	b.w	80156d2 <puts>
 8014c30:	6803      	ldr	r3, [r0, #0]
 8014c32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014c34:	4718      	bx	r3
 8014c36:	bf00      	nop
 8014c38:	0801aa30 	stmdaeq	r1, {r4, r5, r9, fp, sp, pc}

08014c3c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8014c3c:	b513      	push	{r0, r1, r4, lr}
 8014c3e:	4604      	mov	r4, r0
 8014c40:	0a13      	lsrs	r3, r2, #8
 8014c42:	7800      	ldrb	r0, [r0, #0]
 8014c44:	f88d 1004 	strb.w	r1, [sp, #4]
 8014c48:	f88d 3005 	strb.w	r3, [sp, #5]
 8014c4c:	f88d 2006 	strb.w	r2, [sp, #6]
 8014c50:	f002 f996 	bl	8016f80 <gd32_i2c_set_address>
 8014c54:	6860      	ldr	r0, [r4, #4]
 8014c56:	f002 f98b 	bl	8016f70 <gd32_i2c_set_baudrate>
 8014c5a:	2103      	movs	r1, #3
 8014c5c:	a801      	add	r0, sp, #4
 8014c5e:	f002 f995 	bl	8016f8c <gd32_i2c_write>
 8014c62:	b002      	add	sp, #8
 8014c64:	bd10      	pop	{r4, pc}

08014c66 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8014c66:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014c68:	460d      	mov	r5, r1
 8014c6a:	4604      	mov	r4, r0
 8014c6c:	f002 f988 	bl	8016f80 <gd32_i2c_set_address>
 8014c70:	4628      	mov	r0, r5
 8014c72:	f002 f97d 	bl	8016f70 <gd32_i2c_set_baudrate>
 8014c76:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8014c7a:	2b07      	cmp	r3, #7
 8014c7c:	d902      	bls.n	8014c84 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8014c7e:	3c50      	subs	r4, #80	; 0x50
 8014c80:	2c0f      	cmp	r4, #15
 8014c82:	d809      	bhi.n	8014c98 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8014c84:	2101      	movs	r1, #1
 8014c86:	f10d 0007 	add.w	r0, sp, #7
 8014c8a:	f002 f9e5 	bl	8017058 <gd32_i2c_read>
 8014c8e:	fab0 f080 	clz	r0, r0
 8014c92:	0940      	lsrs	r0, r0, #5
 8014c94:	b003      	add	sp, #12
 8014c96:	bd30      	pop	{r4, r5, pc}
 8014c98:	2100      	movs	r1, #0
 8014c9a:	4608      	mov	r0, r1
 8014c9c:	f002 f976 	bl	8016f8c <gd32_i2c_write>
 8014ca0:	e7f5      	b.n	8014c8e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08014ca2 <Display::Detect7Segment()>:
 8014ca2:	b513      	push	{r0, r1, r4, lr}
 8014ca4:	68c1      	ldr	r1, [r0, #12]
 8014ca6:	4604      	mov	r4, r0
 8014ca8:	7a00      	ldrb	r0, [r0, #8]
 8014caa:	f7ff ffdc 	bl	8014c66 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8014cae:	7460      	strb	r0, [r4, #17]
 8014cb0:	b170      	cbz	r0, 8014cd0 <Display::Detect7Segment()+0x2e>
 8014cb2:	2200      	movs	r2, #0
 8014cb4:	f104 0008 	add.w	r0, r4, #8
 8014cb8:	4611      	mov	r1, r2
 8014cba:	9001      	str	r0, [sp, #4]
 8014cbc:	f7ff ffbe 	bl	8014c3c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8014cc0:	7c63      	ldrb	r3, [r4, #17]
 8014cc2:	9801      	ldr	r0, [sp, #4]
 8014cc4:	b123      	cbz	r3, 8014cd0 <Display::Detect7Segment()+0x2e>
 8014cc6:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8014cca:	2112      	movs	r1, #18
 8014ccc:	f7ff ffb6 	bl	8014c3c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8014cd0:	b002      	add	sp, #8
 8014cd2:	bd10      	pop	{r4, pc}

08014cd4 <Display::Detect(display::Type)>:
 8014cd4:	2902      	cmp	r1, #2
 8014cd6:	b538      	push	{r3, r4, r5, lr}
 8014cd8:	4604      	mov	r4, r0
 8014cda:	d014      	beq.n	8014d06 <Display::Detect(display::Type)+0x32>
 8014cdc:	2904      	cmp	r1, #4
 8014cde:	d01b      	beq.n	8014d18 <Display::Detect(display::Type)+0x44>
 8014ce0:	69a0      	ldr	r0, [r4, #24]
 8014ce2:	b168      	cbz	r0, 8014d00 <Display::Detect(display::Type)+0x2c>
 8014ce4:	6803      	ldr	r3, [r0, #0]
 8014ce6:	689b      	ldr	r3, [r3, #8]
 8014ce8:	4798      	blx	r3
 8014cea:	69a3      	ldr	r3, [r4, #24]
 8014cec:	b9b0      	cbnz	r0, 8014d1c <Display::Detect(display::Type)+0x48>
 8014cee:	b11b      	cbz	r3, 8014cf8 <Display::Detect(display::Type)+0x24>
 8014cf0:	681a      	ldr	r2, [r3, #0]
 8014cf2:	4618      	mov	r0, r3
 8014cf4:	6852      	ldr	r2, [r2, #4]
 8014cf6:	4790      	blx	r2
 8014cf8:	2300      	movs	r3, #0
 8014cfa:	61a3      	str	r3, [r4, #24]
 8014cfc:	2304      	movs	r3, #4
 8014cfe:	6023      	str	r3, [r4, #0]
 8014d00:	2300      	movs	r3, #0
 8014d02:	6163      	str	r3, [r4, #20]
 8014d04:	e011      	b.n	8014d2a <Display::Detect(display::Type)+0x56>
 8014d06:	2018      	movs	r0, #24
 8014d08:	f000 fbec 	bl	80154e4 <operator new(unsigned int)>
 8014d0c:	2100      	movs	r1, #0
 8014d0e:	4605      	mov	r5, r0
 8014d10:	f000 f896 	bl	8014e40 <Ssd1306::Ssd1306(TOledPanel)>
 8014d14:	61a5      	str	r5, [r4, #24]
 8014d16:	e7e3      	b.n	8014ce0 <Display::Detect(display::Type)+0xc>
 8014d18:	6001      	str	r1, [r0, #0]
 8014d1a:	e7e1      	b.n	8014ce0 <Display::Detect(display::Type)+0xc>
 8014d1c:	681a      	ldr	r2, [r3, #0]
 8014d1e:	4618      	mov	r0, r3
 8014d20:	68d2      	ldr	r2, [r2, #12]
 8014d22:	4790      	blx	r2
 8014d24:	69a3      	ldr	r3, [r4, #24]
 8014d26:	2b00      	cmp	r3, #0
 8014d28:	d0ea      	beq.n	8014d00 <Display::Detect(display::Type)+0x2c>
 8014d2a:	bd38      	pop	{r3, r4, r5, pc}

08014d2c <Display::Display()>:
 8014d2c:	2304      	movs	r3, #4
 8014d2e:	b510      	push	{r4, lr}
 8014d30:	6003      	str	r3, [r0, #0]
 8014d32:	4b0f      	ldr	r3, [pc, #60]	; (8014d70 <Display::Display()+0x44>)
 8014d34:	4a0f      	ldr	r2, [pc, #60]	; (8014d74 <Display::Display()+0x48>)
 8014d36:	681b      	ldr	r3, [r3, #0]
 8014d38:	6043      	str	r3, [r0, #4]
 8014d3a:	2321      	movs	r3, #33	; 0x21
 8014d3c:	7203      	strb	r3, [r0, #8]
 8014d3e:	4b0e      	ldr	r3, [pc, #56]	; (8014d78 <Display::Display()+0x4c>)
 8014d40:	60c3      	str	r3, [r0, #12]
 8014d42:	2300      	movs	r3, #0
 8014d44:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8014d48:	8203      	strh	r3, [r0, #16]
 8014d4a:	4b0c      	ldr	r3, [pc, #48]	; (8014d7c <Display::Display()+0x50>)
 8014d4c:	4604      	mov	r4, r0
 8014d4e:	2102      	movs	r1, #2
 8014d50:	6018      	str	r0, [r3, #0]
 8014d52:	f7ff ffbf 	bl	8014cd4 <Display::Detect(display::Type)>
 8014d56:	4620      	mov	r0, r4
 8014d58:	f7ff ffa3 	bl	8014ca2 <Display::Detect7Segment()>
 8014d5c:	69a3      	ldr	r3, [r4, #24]
 8014d5e:	b10b      	cbz	r3, 8014d64 <Display::Display()+0x38>
 8014d60:	f7f4 fb2a 	bl	80093b8 <display::timeout::gpio_init()>
 8014d64:	69a0      	ldr	r0, [r4, #24]
 8014d66:	f7ff ff5f 	bl	8014c28 <Display::PrintInfo() [clone .isra.0]>
 8014d6a:	4620      	mov	r0, r4
 8014d6c:	bd10      	pop	{r4, pc}
 8014d6e:	bf00      	nop
 8014d70:	2000fd94 	mulcs	r0, r4, sp
 8014d74:	000493e0 	andeq	r9, r4, r0, ror #7
 8014d78:	00061a80 	andeq	r1, r6, r0, lsl #21
 8014d7c:	2000fc90 	mulcs	r0, r0, ip

08014d80 <Ssd1306::~Ssd1306()>:
 8014d80:	4770      	bx	lr

08014d82 <Ssd1306::SetCursor(unsigned int)>:
 8014d82:	4770      	bx	lr

08014d84 <Ssd1306::PrintInfo()>:
 8014d84:	b410      	push	{r4}
 8014d86:	4906      	ldr	r1, [pc, #24]	; (8014da0 <Ssd1306::PrintInfo()+0x1c>)
 8014d88:	7c44      	ldrb	r4, [r0, #17]
 8014d8a:	7903      	ldrb	r3, [r0, #4]
 8014d8c:	7942      	ldrb	r2, [r0, #5]
 8014d8e:	4805      	ldr	r0, [pc, #20]	; (8014da4 <Ssd1306::PrintInfo()+0x20>)
 8014d90:	2c00      	cmp	r4, #0
 8014d92:	bf08      	it	eq
 8014d94:	4601      	moveq	r1, r0
 8014d96:	4804      	ldr	r0, [pc, #16]	; (8014da8 <Ssd1306::PrintInfo()+0x24>)
 8014d98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014d9c:	f7f5 bafe 	b.w	800a39c <printf>
 8014da0:	0801aa41 	stmdaeq	r1, {r0, r6, r9, fp, sp, pc}
 8014da4:	0801aa48 	stmdaeq	r1, {r3, r6, r9, fp, sp, pc}
 8014da8:	0801aa50 	stmdaeq	r1, {r4, r6, r9, fp, sp, pc}

08014dac <Ssd1306::~Ssd1306()>:
 8014dac:	b510      	push	{r4, lr}
 8014dae:	4604      	mov	r4, r0
 8014db0:	f000 fb94 	bl	80154dc <operator delete(void*)>
 8014db4:	4620      	mov	r0, r4
 8014db6:	bd10      	pop	{r4, pc}

08014db8 <Ssd1306::PutChar(int)>:
 8014db8:	b510      	push	{r4, lr}
 8014dba:	3920      	subs	r1, #32
 8014dbc:	295f      	cmp	r1, #95	; 0x5f
 8014dbe:	f100 0008 	add.w	r0, r0, #8
 8014dc2:	bf94      	ite	ls
 8014dc4:	460c      	movls	r4, r1
 8014dc6:	2400      	movhi	r4, #0
 8014dc8:	f7ff fa36 	bl	8014238 <HAL_I2C::Setup()>
 8014dcc:	4804      	ldr	r0, [pc, #16]	; (8014de0 <Ssd1306::PutChar(int)+0x28>)
 8014dce:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8014dd2:	4420      	add	r0, r4
 8014dd4:	2107      	movs	r1, #7
 8014dd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014dda:	f002 b8d7 	b.w	8016f8c <gd32_i2c_write>
 8014dde:	bf00      	nop
 8014de0:	0801aa64 	stmdaeq	r1, {r2, r5, r6, r9, fp, sp, pc}

08014de4 <Ssd1306::PutString(char const*)>:
 8014de4:	b538      	push	{r3, r4, r5, lr}
 8014de6:	4605      	mov	r5, r0
 8014de8:	1e4c      	subs	r4, r1, #1
 8014dea:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8014dee:	b901      	cbnz	r1, 8014df2 <Ssd1306::PutString(char const*)+0xe>
 8014df0:	bd38      	pop	{r3, r4, r5, pc}
 8014df2:	4628      	mov	r0, r5
 8014df4:	f7ff ffe0 	bl	8014db8 <Ssd1306::PutChar(int)>
 8014df8:	e7f7      	b.n	8014dea <Ssd1306::PutString(char const*)+0x6>

08014dfa <Ssd1306::Text(char const*, unsigned int)>:
 8014dfa:	b570      	push	{r4, r5, r6, lr}
 8014dfc:	7903      	ldrb	r3, [r0, #4]
 8014dfe:	4605      	mov	r5, r0
 8014e00:	460c      	mov	r4, r1
 8014e02:	4293      	cmp	r3, r2
 8014e04:	bf94      	ite	ls
 8014e06:	18ce      	addls	r6, r1, r3
 8014e08:	188e      	addhi	r6, r1, r2
 8014e0a:	42b4      	cmp	r4, r6
 8014e0c:	d100      	bne.n	8014e10 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8014e0e:	bd70      	pop	{r4, r5, r6, pc}
 8014e10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8014e14:	4628      	mov	r0, r5
 8014e16:	f7ff ffcf 	bl	8014db8 <Ssd1306::PutChar(int)>
 8014e1a:	e7f6      	b.n	8014e0a <Ssd1306::Text(char const*, unsigned int)+0x10>

08014e1c <Ssd1306::InitMembers()>:
 8014e1c:	7c03      	ldrb	r3, [r0, #16]
 8014e1e:	b14b      	cbz	r3, 8014e34 <Ssd1306::InitMembers()+0x18>
 8014e20:	3b01      	subs	r3, #1
 8014e22:	2b01      	cmp	r3, #1
 8014e24:	d909      	bls.n	8014e3a <Ssd1306::InitMembers()+0x1e>
 8014e26:	2308      	movs	r3, #8
 8014e28:	2204      	movs	r2, #4
 8014e2a:	2115      	movs	r1, #21
 8014e2c:	7101      	strb	r1, [r0, #4]
 8014e2e:	7143      	strb	r3, [r0, #5]
 8014e30:	6142      	str	r2, [r0, #20]
 8014e32:	4770      	bx	lr
 8014e34:	2308      	movs	r3, #8
 8014e36:	461a      	mov	r2, r3
 8014e38:	e7f7      	b.n	8014e2a <Ssd1306::InitMembers()+0xe>
 8014e3a:	2304      	movs	r3, #4
 8014e3c:	e7fb      	b.n	8014e36 <Ssd1306::InitMembers()+0x1a>
	...

08014e40 <Ssd1306::Ssd1306(TOledPanel)>:
 8014e40:	4a08      	ldr	r2, [pc, #32]	; (8014e64 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8014e42:	6002      	str	r2, [r0, #0]
 8014e44:	227f      	movs	r2, #127	; 0x7f
 8014e46:	b508      	push	{r3, lr}
 8014e48:	80c2      	strh	r2, [r0, #6]
 8014e4a:	223c      	movs	r2, #60	; 0x3c
 8014e4c:	7202      	strb	r2, [r0, #8]
 8014e4e:	4a06      	ldr	r2, [pc, #24]	; (8014e68 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8014e50:	60c2      	str	r2, [r0, #12]
 8014e52:	2200      	movs	r2, #0
 8014e54:	7442      	strb	r2, [r0, #17]
 8014e56:	4a05      	ldr	r2, [pc, #20]	; (8014e6c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8014e58:	7401      	strb	r1, [r0, #16]
 8014e5a:	6010      	str	r0, [r2, #0]
 8014e5c:	f7ff ffde 	bl	8014e1c <Ssd1306::InitMembers()>
 8014e60:	bd08      	pop	{r3, pc}
 8014e62:	bf00      	nop
 8014e64:	0801ad3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, sp, pc}
 8014e68:	00061a80 	andeq	r1, r6, r0, lsl #21
 8014e6c:	2000fd1c 	andcs	pc, r0, ip, lsl sp	; <UNPREDICTABLE>

08014e70 <Ssd1306::SendCommand(unsigned char)>:
 8014e70:	b507      	push	{r0, r1, r2, lr}
 8014e72:	2300      	movs	r3, #0
 8014e74:	3008      	adds	r0, #8
 8014e76:	f88d 3004 	strb.w	r3, [sp, #4]
 8014e7a:	f88d 1005 	strb.w	r1, [sp, #5]
 8014e7e:	f7ff f9db 	bl	8014238 <HAL_I2C::Setup()>
 8014e82:	2102      	movs	r1, #2
 8014e84:	a801      	add	r0, sp, #4
 8014e86:	f002 f881 	bl	8016f8c <gd32_i2c_write>
 8014e8a:	b003      	add	sp, #12
 8014e8c:	f85d fb04 	ldr.w	pc, [sp], #4

08014e90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8014e90:	2914      	cmp	r1, #20
 8014e92:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014e94:	4615      	mov	r5, r2
 8014e96:	d81d      	bhi.n	8014ed4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8014e98:	7943      	ldrb	r3, [r0, #5]
 8014e9a:	4293      	cmp	r3, r2
 8014e9c:	d91a      	bls.n	8014ed4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8014e9e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014ea2:	7c43      	ldrb	r3, [r0, #17]
 8014ea4:	004c      	lsls	r4, r1, #1
 8014ea6:	b2e4      	uxtb	r4, r4
 8014ea8:	b10b      	cbz	r3, 8014eae <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 8014eaa:	3404      	adds	r4, #4
 8014eac:	b2e4      	uxtb	r4, r4
 8014eae:	f004 010e 	and.w	r1, r4, #14
 8014eb2:	9001      	str	r0, [sp, #4]
 8014eb4:	f7ff ffdc 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014eb8:	0921      	lsrs	r1, r4, #4
 8014eba:	9801      	ldr	r0, [sp, #4]
 8014ebc:	f041 0110 	orr.w	r1, r1, #16
 8014ec0:	f7ff ffd6 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014ec4:	9801      	ldr	r0, [sp, #4]
 8014ec6:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 8014eca:	b003      	add	sp, #12
 8014ecc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8014ed0:	f7ff bfce 	b.w	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014ed4:	b003      	add	sp, #12
 8014ed6:	bd30      	pop	{r4, r5, pc}

08014ed8 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8014ed8:	b5e0      	push	{r5, r6, r7, lr}
 8014eda:	461f      	mov	r7, r3
 8014edc:	7943      	ldrb	r3, [r0, #5]
 8014ede:	428b      	cmp	r3, r1
 8014ee0:	4605      	mov	r5, r0
 8014ee2:	4616      	mov	r6, r2
 8014ee4:	d30b      	bcc.n	8014efe <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8014ee6:	1e4a      	subs	r2, r1, #1
 8014ee8:	b2d2      	uxtb	r2, r2
 8014eea:	2100      	movs	r1, #0
 8014eec:	f7ff ffd0 	bl	8014e90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8014ef0:	463a      	mov	r2, r7
 8014ef2:	4631      	mov	r1, r6
 8014ef4:	4628      	mov	r0, r5
 8014ef6:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8014efa:	f7ff bf7e 	b.w	8014dfa <Ssd1306::Text(char const*, unsigned int)>
 8014efe:	bde0      	pop	{r5, r6, r7, pc}

08014f00 <Ssd1306::ClearLine(unsigned char)>:
 8014f00:	b513      	push	{r0, r1, r4, lr}
 8014f02:	7943      	ldrb	r3, [r0, #5]
 8014f04:	428b      	cmp	r3, r1
 8014f06:	4604      	mov	r4, r0
 8014f08:	d315      	bcc.n	8014f36 <Ssd1306::ClearLine(unsigned char)+0x36>
 8014f0a:	1e4a      	subs	r2, r1, #1
 8014f0c:	b2d2      	uxtb	r2, r2
 8014f0e:	2100      	movs	r1, #0
 8014f10:	9201      	str	r2, [sp, #4]
 8014f12:	f7ff ffbd 	bl	8014e90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8014f16:	f104 0008 	add.w	r0, r4, #8
 8014f1a:	f7ff f98d 	bl	8014238 <HAL_I2C::Setup()>
 8014f1e:	2181      	movs	r1, #129	; 0x81
 8014f20:	4806      	ldr	r0, [pc, #24]	; (8014f3c <Ssd1306::ClearLine(unsigned char)+0x3c>)
 8014f22:	f002 f833 	bl	8016f8c <gd32_i2c_write>
 8014f26:	9a01      	ldr	r2, [sp, #4]
 8014f28:	2100      	movs	r1, #0
 8014f2a:	4620      	mov	r0, r4
 8014f2c:	b002      	add	sp, #8
 8014f2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f32:	f7ff bfad 	b.w	8014e90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8014f36:	b002      	add	sp, #8
 8014f38:	bd10      	pop	{r4, pc}
 8014f3a:	bf00      	nop
 8014f3c:	2000fc94 	mulcs	r0, r4, ip

08014f40 <Ssd1306::SetSleep(bool)>:
 8014f40:	b111      	cbz	r1, 8014f48 <Ssd1306::SetSleep(bool)+0x8>
 8014f42:	21ae      	movs	r1, #174	; 0xae
 8014f44:	f7ff bf94 	b.w	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f48:	21af      	movs	r1, #175	; 0xaf
 8014f4a:	e7fb      	b.n	8014f44 <Ssd1306::SetSleep(bool)+0x4>

08014f4c <Ssd1306::SetContrast(unsigned char)>:
 8014f4c:	b538      	push	{r3, r4, r5, lr}
 8014f4e:	4604      	mov	r4, r0
 8014f50:	460d      	mov	r5, r1
 8014f52:	7181      	strb	r1, [r0, #6]
 8014f54:	2181      	movs	r1, #129	; 0x81
 8014f56:	f7ff ff8b 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f5a:	4629      	mov	r1, r5
 8014f5c:	4620      	mov	r0, r4
 8014f5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014f62:	f7ff bf85 	b.w	8014e70 <Ssd1306::SendCommand(unsigned char)>

08014f66 <Ssd1306::SetFlipVertically(bool)>:
 8014f66:	b510      	push	{r4, lr}
 8014f68:	4604      	mov	r4, r0
 8014f6a:	71c1      	strb	r1, [r0, #7]
 8014f6c:	b141      	cbz	r1, 8014f80 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8014f6e:	21c0      	movs	r1, #192	; 0xc0
 8014f70:	f7ff ff7e 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f74:	21a0      	movs	r1, #160	; 0xa0
 8014f76:	4620      	mov	r0, r4
 8014f78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f7c:	f7ff bf78 	b.w	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f80:	21c8      	movs	r1, #200	; 0xc8
 8014f82:	f7ff ff75 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f86:	21a1      	movs	r1, #161	; 0xa1
 8014f88:	e7f5      	b.n	8014f76 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08014f8c <Ssd1306::CheckSH1106()>:
 8014f8c:	b530      	push	{r4, r5, lr}
 8014f8e:	2100      	movs	r1, #0
 8014f90:	b087      	sub	sp, #28
 8014f92:	4604      	mov	r4, r0
 8014f94:	f7ff ff6c 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014f98:	2190      	movs	r1, #144	; 0x90
 8014f9a:	4620      	mov	r0, r4
 8014f9c:	f7ff ff68 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014fa0:	21b0      	movs	r1, #176	; 0xb0
 8014fa2:	4620      	mov	r0, r4
 8014fa4:	f7ff ff64 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014fa8:	4b22      	ldr	r3, [pc, #136]	; (8015034 <Ssd1306::CheckSH1106()+0xa8>)
 8014faa:	f104 0508 	add.w	r5, r4, #8
 8014fae:	6818      	ldr	r0, [r3, #0]
 8014fb0:	9002      	str	r0, [sp, #8]
 8014fb2:	791b      	ldrb	r3, [r3, #4]
 8014fb4:	f88d 300c 	strb.w	r3, [sp, #12]
 8014fb8:	4628      	mov	r0, r5
 8014fba:	f7ff f93d 	bl	8014238 <HAL_I2C::Setup()>
 8014fbe:	2105      	movs	r1, #5
 8014fc0:	a802      	add	r0, sp, #8
 8014fc2:	f001 ffe3 	bl	8016f8c <gd32_i2c_write>
 8014fc6:	2100      	movs	r1, #0
 8014fc8:	4620      	mov	r0, r4
 8014fca:	f7ff ff51 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014fce:	2190      	movs	r1, #144	; 0x90
 8014fd0:	4620      	mov	r0, r4
 8014fd2:	f7ff ff4d 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014fd6:	21b0      	movs	r1, #176	; 0xb0
 8014fd8:	4620      	mov	r0, r4
 8014fda:	f7ff ff49 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8014fde:	2300      	movs	r3, #0
 8014fe0:	9304      	str	r3, [sp, #16]
 8014fe2:	f88d 3014 	strb.w	r3, [sp, #20]
 8014fe6:	4628      	mov	r0, r5
 8014fe8:	2340      	movs	r3, #64	; 0x40
 8014fea:	f88d 3007 	strb.w	r3, [sp, #7]
 8014fee:	f7ff f923 	bl	8014238 <HAL_I2C::Setup()>
 8014ff2:	2101      	movs	r1, #1
 8014ff4:	f10d 0007 	add.w	r0, sp, #7
 8014ff8:	f001 ffc8 	bl	8016f8c <gd32_i2c_write>
 8014ffc:	4628      	mov	r0, r5
 8014ffe:	f7ff f91b 	bl	8014238 <HAL_I2C::Setup()>
 8015002:	2105      	movs	r1, #5
 8015004:	a804      	add	r0, sp, #16
 8015006:	f002 f827 	bl	8017058 <gd32_i2c_read>
 801500a:	aa02      	add	r2, sp, #8
 801500c:	a904      	add	r1, sp, #16
 801500e:	2004      	movs	r0, #4
 8015010:	3801      	subs	r0, #1
 8015012:	d201      	bcs.n	8015018 <Ssd1306::CheckSH1106()+0x8c>
 8015014:	2300      	movs	r3, #0
 8015016:	e006      	b.n	8015026 <Ssd1306::CheckSH1106()+0x9a>
 8015018:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 801501c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8015020:	42ab      	cmp	r3, r5
 8015022:	d0f5      	beq.n	8015010 <Ssd1306::CheckSH1106()+0x84>
 8015024:	1b5b      	subs	r3, r3, r5
 8015026:	fab3 f383 	clz	r3, r3
 801502a:	095b      	lsrs	r3, r3, #5
 801502c:	7463      	strb	r3, [r4, #17]
 801502e:	b007      	add	sp, #28
 8015030:	bd30      	pop	{r4, r5, pc}
 8015032:	bf00      	nop
 8015034:	0801aa5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, sp, pc}

08015038 <Ssd1306::Cls()>:
 8015038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801503c:	7c45      	ldrb	r5, [r0, #17]
 801503e:	00ad      	lsls	r5, r5, #2
 8015040:	b2ed      	uxtb	r5, r5
 8015042:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8015046:	4604      	mov	r4, r0
 8015048:	2600      	movs	r6, #0
 801504a:	f045 0810 	orr.w	r8, r5, #16
 801504e:	b2ff      	uxtb	r7, r7
 8015050:	6963      	ldr	r3, [r4, #20]
 8015052:	42b3      	cmp	r3, r6
 8015054:	4629      	mov	r1, r5
 8015056:	4620      	mov	r0, r4
 8015058:	d80b      	bhi.n	8015072 <Ssd1306::Cls()+0x3a>
 801505a:	f7ff ff09 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 801505e:	4641      	mov	r1, r8
 8015060:	4620      	mov	r0, r4
 8015062:	f7ff ff05 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8015066:	4620      	mov	r0, r4
 8015068:	21b0      	movs	r1, #176	; 0xb0
 801506a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801506e:	f7ff beff 	b.w	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8015072:	f7ff fefd 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8015076:	4641      	mov	r1, r8
 8015078:	4620      	mov	r0, r4
 801507a:	f7ff fef9 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 801507e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8015082:	b2c9      	uxtb	r1, r1
 8015084:	4620      	mov	r0, r4
 8015086:	f7ff fef3 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 801508a:	7c23      	ldrb	r3, [r4, #16]
 801508c:	b123      	cbz	r3, 8015098 <Ssd1306::Cls()+0x60>
 801508e:	3b01      	subs	r3, #1
 8015090:	2b01      	cmp	r3, #1
 8015092:	d901      	bls.n	8015098 <Ssd1306::Cls()+0x60>
 8015094:	3601      	adds	r6, #1
 8015096:	e7db      	b.n	8015050 <Ssd1306::Cls()+0x18>
 8015098:	f104 0008 	add.w	r0, r4, #8
 801509c:	f7ff f8cc 	bl	8014238 <HAL_I2C::Setup()>
 80150a0:	4639      	mov	r1, r7
 80150a2:	4802      	ldr	r0, [pc, #8]	; (80150ac <Ssd1306::Cls()+0x74>)
 80150a4:	f001 ff72 	bl	8016f8c <gd32_i2c_write>
 80150a8:	e7f4      	b.n	8015094 <Ssd1306::Cls()+0x5c>
 80150aa:	bf00      	nop
 80150ac:	2000fc94 	mulcs	r0, r4, ip

080150b0 <Ssd1306::Start()>:
 80150b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80150b2:	7a04      	ldrb	r4, [r0, #8]
 80150b4:	68c6      	ldr	r6, [r0, #12]
 80150b6:	4605      	mov	r5, r0
 80150b8:	4620      	mov	r0, r4
 80150ba:	f001 ff61 	bl	8016f80 <gd32_i2c_set_address>
 80150be:	4630      	mov	r0, r6
 80150c0:	f001 ff56 	bl	8016f70 <gd32_i2c_set_baudrate>
 80150c4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80150c8:	2b07      	cmp	r3, #7
 80150ca:	d902      	bls.n	80150d2 <Ssd1306::Start()+0x22>
 80150cc:	3c50      	subs	r4, #80	; 0x50
 80150ce:	2c0f      	cmp	r4, #15
 80150d0:	d80f      	bhi.n	80150f2 <Ssd1306::Start()+0x42>
 80150d2:	2101      	movs	r1, #1
 80150d4:	f10d 0007 	add.w	r0, sp, #7
 80150d8:	f001 ffbe 	bl	8017058 <gd32_i2c_read>
 80150dc:	fab0 f480 	clz	r4, r0
 80150e0:	0964      	lsrs	r4, r4, #5
 80150e2:	b35c      	cbz	r4, 801513c <Ssd1306::Start()+0x8c>
 80150e4:	7c2e      	ldrb	r6, [r5, #16]
 80150e6:	b14e      	cbz	r6, 80150fc <Ssd1306::Start()+0x4c>
 80150e8:	3e01      	subs	r6, #1
 80150ea:	2e01      	cmp	r6, #1
 80150ec:	d929      	bls.n	8015142 <Ssd1306::Start()+0x92>
 80150ee:	2400      	movs	r4, #0
 80150f0:	e024      	b.n	801513c <Ssd1306::Start()+0x8c>
 80150f2:	2100      	movs	r1, #0
 80150f4:	4608      	mov	r0, r1
 80150f6:	f001 ff49 	bl	8016f8c <gd32_i2c_write>
 80150fa:	e7ef      	b.n	80150dc <Ssd1306::Start()+0x2c>
 80150fc:	4f16      	ldr	r7, [pc, #88]	; (8015158 <Ssd1306::Start()+0xa8>)
 80150fe:	f817 1b01 	ldrb.w	r1, [r7], #1
 8015102:	4628      	mov	r0, r5
 8015104:	3601      	adds	r6, #1
 8015106:	f7ff feb3 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 801510a:	2e18      	cmp	r6, #24
 801510c:	d1f7      	bne.n	80150fe <Ssd1306::Start()+0x4e>
 801510e:	4a13      	ldr	r2, [pc, #76]	; (801515c <Ssd1306::Start()+0xac>)
 8015110:	2300      	movs	r3, #0
 8015112:	4611      	mov	r1, r2
 8015114:	4618      	mov	r0, r3
 8015116:	3301      	adds	r3, #1
 8015118:	2b86      	cmp	r3, #134	; 0x86
 801511a:	f802 0b01 	strb.w	r0, [r2], #1
 801511e:	d1fa      	bne.n	8015116 <Ssd1306::Start()+0x66>
 8015120:	2340      	movs	r3, #64	; 0x40
 8015122:	700b      	strb	r3, [r1, #0]
 8015124:	4628      	mov	r0, r5
 8015126:	f7ff ff31 	bl	8014f8c <Ssd1306::CheckSH1106()>
 801512a:	4628      	mov	r0, r5
 801512c:	f7ff ff84 	bl	8015038 <Ssd1306::Cls()>
 8015130:	21af      	movs	r1, #175	; 0xaf
 8015132:	4628      	mov	r0, r5
 8015134:	f7ff fe9c 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8015138:	2301      	movs	r3, #1
 801513a:	71eb      	strb	r3, [r5, #7]
 801513c:	4620      	mov	r0, r4
 801513e:	b003      	add	sp, #12
 8015140:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015142:	4f07      	ldr	r7, [pc, #28]	; (8015160 <Ssd1306::Start()+0xb0>)
 8015144:	2600      	movs	r6, #0
 8015146:	f817 1b01 	ldrb.w	r1, [r7], #1
 801514a:	4628      	mov	r0, r5
 801514c:	3601      	adds	r6, #1
 801514e:	f7ff fe8f 	bl	8014e70 <Ssd1306::SendCommand(unsigned char)>
 8015152:	2e18      	cmp	r6, #24
 8015154:	d1f7      	bne.n	8015146 <Ssd1306::Start()+0x96>
 8015156:	e7da      	b.n	801510e <Ssd1306::Start()+0x5e>
 8015158:	0801ad1c 	stmdaeq	r1, {r2, r3, r4, r8, sl, fp, sp, pc}
 801515c:	2000fc94 	mulcs	r0, r4, ip
 8015160:	0801ad04 	stmdaeq	r1, {r2, r8, sl, fp, sp, pc}

08015164 <console_putc>:
 8015164:	f000 bbb8 	b.w	80158d8 <uart0_putc>

08015168 <console_puts>:
 8015168:	f000 bbd0 	b.w	801590c <uart0_puts>

0801516c <console_set_fg_color>:
 801516c:	2807      	cmp	r0, #7
 801516e:	d810      	bhi.n	8015192 <console_set_fg_color+0x26>
 8015170:	e8df f000 	tbb	[pc, r0]
 8015174:	0b090704 	bleq	8256d8c <__exidx_end+0x23bf1c>
 8015178:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8015144 <Ssd1306::Start()+0x94>
 801517c:	4806      	ldr	r0, [pc, #24]	; (8015198 <console_set_fg_color+0x2c>)
 801517e:	f000 bbc5 	b.w	801590c <uart0_puts>
 8015182:	4806      	ldr	r0, [pc, #24]	; (801519c <console_set_fg_color+0x30>)
 8015184:	e7fb      	b.n	801517e <console_set_fg_color+0x12>
 8015186:	4806      	ldr	r0, [pc, #24]	; (80151a0 <console_set_fg_color+0x34>)
 8015188:	e7f9      	b.n	801517e <console_set_fg_color+0x12>
 801518a:	4806      	ldr	r0, [pc, #24]	; (80151a4 <console_set_fg_color+0x38>)
 801518c:	e7f7      	b.n	801517e <console_set_fg_color+0x12>
 801518e:	4806      	ldr	r0, [pc, #24]	; (80151a8 <console_set_fg_color+0x3c>)
 8015190:	e7f5      	b.n	801517e <console_set_fg_color+0x12>
 8015192:	4806      	ldr	r0, [pc, #24]	; (80151ac <console_set_fg_color+0x40>)
 8015194:	e7f3      	b.n	801517e <console_set_fg_color+0x12>
 8015196:	bf00      	nop
 8015198:	0801ad7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sl, fp, sp, pc}
 801519c:	0801ad80 	stmdaeq	r1, {r7, r8, sl, fp, sp, pc}
 80151a0:	0801ad86 	stmdaeq	r1, {r1, r2, r7, r8, sl, fp, sp, pc}
 80151a4:	0801ad8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, sp, pc}
 80151a8:	08017be3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 80151ac:	0801ad92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp, sp, pc}

080151b0 <console_error>:
 80151b0:	b510      	push	{r4, lr}
 80151b2:	4604      	mov	r4, r0
 80151b4:	4805      	ldr	r0, [pc, #20]	; (80151cc <console_error+0x1c>)
 80151b6:	f000 fba9 	bl	801590c <uart0_puts>
 80151ba:	4620      	mov	r0, r4
 80151bc:	f000 fba6 	bl	801590c <uart0_puts>
 80151c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80151c4:	4802      	ldr	r0, [pc, #8]	; (80151d0 <console_error+0x20>)
 80151c6:	f000 bba1 	b.w	801590c <uart0_puts>
 80151ca:	bf00      	nop
 80151cc:	0801ad80 	stmdaeq	r1, {r7, r8, sl, fp, sp, pc}
 80151d0:	08017be3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, fp, ip, sp, lr}

080151d4 <console_status>:
 80151d4:	b510      	push	{r4, lr}
 80151d6:	b280      	uxth	r0, r0
 80151d8:	460c      	mov	r4, r1
 80151da:	f7ff ffc7 	bl	801516c <console_set_fg_color>
 80151de:	4807      	ldr	r0, [pc, #28]	; (80151fc <console_status+0x28>)
 80151e0:	f000 fb94 	bl	801590c <uart0_puts>
 80151e4:	4620      	mov	r0, r4
 80151e6:	f000 fb91 	bl	801590c <uart0_puts>
 80151ea:	200a      	movs	r0, #10
 80151ec:	f000 fb74 	bl	80158d8 <uart0_putc>
 80151f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80151f4:	4802      	ldr	r0, [pc, #8]	; (8015200 <console_status+0x2c>)
 80151f6:	f000 bb89 	b.w	801590c <uart0_puts>
 80151fa:	bf00      	nop
 80151fc:	0801ad74 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, fp, sp, pc}
 8015200:	08017be3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, fp, ip, sp, lr}

08015204 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8015204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015208:	4d15      	ldr	r5, [pc, #84]	; (8015260 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801520a:	461e      	mov	r6, r3
 801520c:	4b15      	ldr	r3, [pc, #84]	; (8015264 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801520e:	b086      	sub	sp, #24
 8015210:	6018      	str	r0, [r3, #0]
 8015212:	4604      	mov	r4, r0
 8015214:	4617      	mov	r7, r2
 8015216:	f105 0803 	add.w	r8, r5, #3
 801521a:	2203      	movs	r2, #3
 801521c:	4628      	mov	r0, r5
 801521e:	f000 fa20 	bl	8015662 <memmove>
 8015222:	4639      	mov	r1, r7
 8015224:	220b      	movs	r2, #11
 8015226:	4640      	mov	r0, r8
 8015228:	f000 fa1b 	bl	8015662 <memmove>
 801522c:	f105 030e 	add.w	r3, r5, #14
 8015230:	4631      	mov	r1, r6
 8015232:	2208      	movs	r2, #8
 8015234:	4618      	mov	r0, r3
 8015236:	f000 fa14 	bl	8015662 <memmove>
 801523a:	2308      	movs	r3, #8
 801523c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8015240:	230b      	movs	r3, #11
 8015242:	9302      	str	r3, [sp, #8]
 8015244:	4b08      	ldr	r3, [pc, #32]	; (8015268 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8015246:	9005      	str	r0, [sp, #20]
 8015248:	e9cd 5300 	strd	r5, r3, [sp]
 801524c:	4a07      	ldr	r2, [pc, #28]	; (801526c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801524e:	4808      	ldr	r0, [pc, #32]	; (8015270 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8015250:	2303      	movs	r3, #3
 8015252:	213f      	movs	r1, #63	; 0x3f
 8015254:	f7f5 f8ca 	bl	800a3ec <snprintf>
 8015258:	4620      	mov	r0, r4
 801525a:	b006      	add	sp, #24
 801525c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015260:	2000fd20 	andcs	pc, r0, r0, lsr #26
 8015264:	2000fd78 	andcs	pc, r0, r8, ror sp	; <UNPREDICTABLE>
 8015268:	080184ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, pc}
 801526c:	0801ad98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, sp, pc}
 8015270:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>

08015274 <FirmwareVersion::Print(char const*)>:
 8015274:	b510      	push	{r4, lr}
 8015276:	4805      	ldr	r0, [pc, #20]	; (801528c <FirmwareVersion::Print(char const*)+0x18>)
 8015278:	460c      	mov	r4, r1
 801527a:	f000 fa2a 	bl	80156d2 <puts>
 801527e:	b124      	cbz	r4, 801528a <FirmwareVersion::Print(char const*)+0x16>
 8015280:	4620      	mov	r0, r4
 8015282:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015286:	f000 ba24 	b.w	80156d2 <puts>
 801528a:	bd10      	pop	{r4, pc}
 801528c:	2000fd36 	andcs	pc, r0, r6, lsr sp	; <UNPREDICTABLE>

08015290 <LedBlink::LedBlink()>:
 8015290:	b538      	push	{r3, r4, r5, lr}
 8015292:	2500      	movs	r5, #0
 8015294:	2305      	movs	r3, #5
 8015296:	e9c0 5300 	strd	r5, r3, [r0]
 801529a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 801529e:	e9c0 3503 	strd	r3, r5, [r0, #12]
 80152a2:	4b0d      	ldr	r3, [pc, #52]	; (80152d8 <LedBlink::LedBlink()+0x48>)
 80152a4:	6085      	str	r5, [r0, #8]
 80152a6:	4604      	mov	r4, r0
 80152a8:	6145      	str	r5, [r0, #20]
 80152aa:	6018      	str	r0, [r3, #0]
 80152ac:	f640 4002 	movw	r0, #3074	; 0xc02
 80152b0:	f001 f964 	bl	801657c <rcu_periph_clock_enable>
 80152b4:	2301      	movs	r3, #1
 80152b6:	462a      	mov	r2, r5
 80152b8:	4619      	mov	r1, r3
 80152ba:	4808      	ldr	r0, [pc, #32]	; (80152dc <LedBlink::LedBlink()+0x4c>)
 80152bc:	f001 f8e2 	bl	8016484 <gpio_mode_set>
 80152c0:	4806      	ldr	r0, [pc, #24]	; (80152dc <LedBlink::LedBlink()+0x4c>)
 80152c2:	2301      	movs	r3, #1
 80152c4:	2202      	movs	r2, #2
 80152c6:	4629      	mov	r1, r5
 80152c8:	f001 f8fc 	bl	80164c4 <gpio_output_options_set>
 80152cc:	4b04      	ldr	r3, [pc, #16]	; (80152e0 <LedBlink::LedBlink()+0x50>)
 80152ce:	2201      	movs	r2, #1
 80152d0:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 80152d4:	4620      	mov	r0, r4
 80152d6:	bd38      	pop	{r3, r4, r5, pc}
 80152d8:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 80152dc:	40020800 	andmi	r0, r2, r0, lsl #16
 80152e0:	40020000 	andmi	r0, r2, r0

080152e4 <LedBlink::SetMode(ledblink::Mode)>:
 80152e4:	6843      	ldr	r3, [r0, #4]
 80152e6:	428b      	cmp	r3, r1
 80152e8:	d02b      	beq.n	8015342 <LedBlink::SetMode(ledblink::Mode)+0x5e>
 80152ea:	6041      	str	r1, [r0, #4]
 80152ec:	2904      	cmp	r1, #4
 80152ee:	d820      	bhi.n	8015332 <LedBlink::SetMode(ledblink::Mode)+0x4e>
 80152f0:	e8df f001 	tbb	[pc, r1]
 80152f4:	1610031f 			; <UNDEFINED> instruction: 0x1610031f
 80152f8:	23ff001b 	mvnscs	r0, #27
 80152fc:	6003      	str	r3, [r0, #0]
 80152fe:	2300      	movs	r3, #0
 8015300:	60c3      	str	r3, [r0, #12]
 8015302:	4b10      	ldr	r3, [pc, #64]	; (8015344 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 8015304:	2201      	movs	r2, #1
 8015306:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 801530a:	6880      	ldr	r0, [r0, #8]
 801530c:	b1c8      	cbz	r0, 8015342 <LedBlink::SetMode(ledblink::Mode)+0x5e>
 801530e:	6803      	ldr	r3, [r0, #0]
 8015310:	689b      	ldr	r3, [r3, #8]
 8015312:	4718      	bx	r3
 8015314:	2301      	movs	r3, #1
 8015316:	6003      	str	r3, [r0, #0]
 8015318:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801531c:	60c3      	str	r3, [r0, #12]
 801531e:	e7f4      	b.n	801530a <LedBlink::SetMode(ledblink::Mode)+0x26>
 8015320:	2303      	movs	r3, #3
 8015322:	6003      	str	r3, [r0, #0]
 8015324:	f240 134d 	movw	r3, #333	; 0x14d
 8015328:	e7f8      	b.n	801531c <LedBlink::SetMode(ledblink::Mode)+0x38>
 801532a:	2305      	movs	r3, #5
 801532c:	6003      	str	r3, [r0, #0]
 801532e:	23c8      	movs	r3, #200	; 0xc8
 8015330:	e7f4      	b.n	801531c <LedBlink::SetMode(ledblink::Mode)+0x38>
 8015332:	2300      	movs	r3, #0
 8015334:	6003      	str	r3, [r0, #0]
 8015336:	60c3      	str	r3, [r0, #12]
 8015338:	4b02      	ldr	r3, [pc, #8]	; (8015344 <LedBlink::SetMode(ledblink::Mode)+0x60>)
 801533a:	2201      	movs	r2, #1
 801533c:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8015340:	e7e3      	b.n	801530a <LedBlink::SetMode(ledblink::Mode)+0x26>
 8015342:	4770      	bx	lr
 8015344:	40020000 	andmi	r0, r2, r0

08015348 <Hardware::Hardware()>:
 8015348:	b530      	push	{r4, r5, lr}
 801534a:	4b31      	ldr	r3, [pc, #196]	; (8015410 <Hardware::Hardware()+0xc8>)
 801534c:	2400      	movs	r4, #0
 801534e:	b091      	sub	sp, #68	; 0x44
 8015350:	7004      	strb	r4, [r0, #0]
 8015352:	6018      	str	r0, [r3, #0]
 8015354:	4605      	mov	r5, r0
 8015356:	f7f3 f8f5 	bl	8008544 <console_init>
 801535a:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 801535e:	f001 f939 	bl	80165d4 <rcu_timer_clock_prescaler_config>
 8015362:	f000 fae3 	bl	801592c <systick_config>
 8015366:	f002 f907 	bl	8017578 <udelay_init()>
 801536a:	f002 f8e5 	bl	8017538 <micros_init()>
 801536e:	f241 001c 	movw	r0, #4124	; 0x101c
 8015372:	f001 f903 	bl	801657c <rcu_periph_clock_enable>
 8015376:	f44f 7000 	mov.w	r0, #512	; 0x200
 801537a:	f001 f8eb 	bl	8016554 <pmu_backup_ldo_config>
 801537e:	f640 4012 	movw	r0, #3090	; 0xc12
 8015382:	f001 f8fb 	bl	801657c <rcu_periph_clock_enable>
 8015386:	f001 f8f1 	bl	801656c <pmu_backup_write_enable>
 801538a:	4621      	mov	r1, r4
 801538c:	2001      	movs	r0, #1
 801538e:	f001 fd33 	bl	8016df8 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 8015392:	4a20      	ldr	r2, [pc, #128]	; (8015414 <Hardware::Hardware()+0xcc>)
 8015394:	4b20      	ldr	r3, [pc, #128]	; (8015418 <Hardware::Hardware()+0xd0>)
 8015396:	1a9b      	subs	r3, r3, r2
 8015398:	3b01      	subs	r3, #1
 801539a:	d232      	bcs.n	8015402 <Hardware::Hardware()+0xba>
 801539c:	4b1f      	ldr	r3, [pc, #124]	; (801541c <Hardware::Hardware()+0xd4>)
 801539e:	4c20      	ldr	r4, [pc, #128]	; (8015420 <Hardware::Hardware()+0xd8>)
 80153a0:	2200      	movs	r2, #0
 80153a2:	1ae4      	subs	r4, r4, r3
 80153a4:	3c01      	subs	r4, #1
 80153a6:	d22f      	bcs.n	8015408 <Hardware::Hardware()+0xc0>
 80153a8:	f241 0004 	movw	r0, #4100	; 0x1004
 80153ac:	f001 f8e6 	bl	801657c <rcu_periph_clock_enable>
 80153b0:	481c      	ldr	r0, [pc, #112]	; (8015424 <Hardware::Hardware()+0xdc>)
 80153b2:	f001 f99f 	bl	80166f4 <timer_deinit>
 80153b6:	a903      	add	r1, sp, #12
 80153b8:	23c7      	movs	r3, #199	; 0xc7
 80153ba:	481a      	ldr	r0, [pc, #104]	; (8015424 <Hardware::Hardware()+0xdc>)
 80153bc:	f8ad 300c 	strh.w	r3, [sp, #12]
 80153c0:	9405      	str	r4, [sp, #20]
 80153c2:	f001 fa3d 	bl	8016840 <timer_init>
 80153c6:	4817      	ldr	r0, [pc, #92]	; (8015424 <Hardware::Hardware()+0xdc>)
 80153c8:	f001 fa78 	bl	80168bc <timer_enable>
 80153cc:	f001 fd26 	bl	8016e1c <gd32_adc_init()>
 80153d0:	2208      	movs	r2, #8
 80153d2:	230b      	movs	r3, #11
 80153d4:	2400      	movs	r4, #0
 80153d6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80153da:	a807      	add	r0, sp, #28
 80153dc:	237a      	movs	r3, #122	; 0x7a
 80153de:	930c      	str	r3, [sp, #48]	; 0x30
 80153e0:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80153e4:	9407      	str	r4, [sp, #28]
 80153e6:	940f      	str	r4, [sp, #60]	; 0x3c
 80153e8:	f000 f9cc 	bl	8015784 <mktime>
 80153ec:	4621      	mov	r1, r4
 80153ee:	e9cd 0401 	strd	r0, r4, [sp, #4]
 80153f2:	a801      	add	r0, sp, #4
 80153f4:	f000 fa3c 	bl	8015870 <settimeofday>
 80153f8:	f001 fd70 	bl	8016edc <gd32_i2c_begin>
 80153fc:	4628      	mov	r0, r5
 80153fe:	b011      	add	sp, #68	; 0x44
 8015400:	bd30      	pop	{r4, r5, pc}
 8015402:	f802 4b01 	strb.w	r4, [r2], #1
 8015406:	e7c7      	b.n	8015398 <Hardware::Hardware()+0x50>
 8015408:	f803 2b01 	strb.w	r2, [r3], #1
 801540c:	e7ca      	b.n	80153a4 <Hardware::Hardware()+0x5c>
 801540e:	bf00      	nop
 8015410:	2000fd80 	andcs	pc, r0, r0, lsl #27
 8015414:	10000000 	andne	r0, r0, r0
 8015418:	100015c8 	andne	r1, r0, r8, asr #11
 801541c:	20030000 	andcs	r0, r3, r0
 8015420:	20048d08 	andcs	r8, r4, r8, lsl #26
 8015424:	40001000 	andmi	r1, r0, r0

08015428 <Hardware::GetUuid(unsigned char*)>:
 8015428:	4a0c      	ldr	r2, [pc, #48]	; (801545c <Hardware::GetUuid(unsigned char*)+0x34>)
 801542a:	b084      	sub	sp, #16
 801542c:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8015430:	9300      	str	r3, [sp, #0]
 8015432:	f8d2 0a14 	ldr.w	r0, [r2, #2580]	; 0xa14
 8015436:	9001      	str	r0, [sp, #4]
 8015438:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	; 0xa18
 801543c:	9202      	str	r2, [sp, #8]
 801543e:	4403      	add	r3, r0
 8015440:	4413      	add	r3, r2
 8015442:	9303      	str	r3, [sp, #12]
 8015444:	466a      	mov	r2, sp
 8015446:	1e4b      	subs	r3, r1, #1
 8015448:	310f      	adds	r1, #15
 801544a:	428b      	cmp	r3, r1
 801544c:	d101      	bne.n	8015452 <Hardware::GetUuid(unsigned char*)+0x2a>
 801544e:	b004      	add	sp, #16
 8015450:	4770      	bx	lr
 8015452:	f812 0b01 	ldrb.w	r0, [r2], #1
 8015456:	f803 0f01 	strb.w	r0, [r3, #1]!
 801545a:	e7f6      	b.n	801544a <Hardware::GetUuid(unsigned char*)+0x22>
 801545c:	1fff7000 	svcne	0x00ff7000

08015460 <Hardware::Reboot()>:
 8015460:	b508      	push	{r3, lr}
 8015462:	2300      	movs	r3, #0
 8015464:	7003      	strb	r3, [r0, #0]
 8015466:	4604      	mov	r4, r0
 8015468:	2104      	movs	r1, #4
 801546a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801546e:	f000 ffdf 	bl	8016430 <fwdgt_config>
 8015472:	4620      	mov	r0, r4
 8015474:	f7f3 ffba 	bl	80093ec <Hardware::RebootHandler()>
 8015478:	2102      	movs	r1, #2
 801547a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801547e:	f000 ffd7 	bl	8016430 <fwdgt_config>
 8015482:	2801      	cmp	r0, #1
 8015484:	bf0c      	ite	eq
 8015486:	2301      	moveq	r3, #1
 8015488:	2300      	movne	r3, #0
 801548a:	7023      	strb	r3, [r4, #0]
 801548c:	d101      	bne.n	8015492 <Hardware::Reboot()+0x32>
 801548e:	f000 ffbf 	bl	8016410 <fwdgt_enable>
 8015492:	4b0f      	ldr	r3, [pc, #60]	; (80154d0 <Hardware::Reboot()+0x70>)
 8015494:	480f      	ldr	r0, [pc, #60]	; (80154d4 <Hardware::Reboot()+0x74>)
 8015496:	681b      	ldr	r3, [r3, #0]
 8015498:	490f      	ldr	r1, [pc, #60]	; (80154d8 <Hardware::Reboot()+0x78>)
 801549a:	2208      	movs	r2, #8
 801549c:	601a      	str	r2, [r3, #0]
 801549e:	227d      	movs	r2, #125	; 0x7d
 80154a0:	60da      	str	r2, [r3, #12]
 80154a2:	2501      	movs	r5, #1
 80154a4:	68dc      	ldr	r4, [r3, #12]
 80154a6:	b904      	cbnz	r4, 80154aa <Hardware::Reboot()+0x4a>
 80154a8:	e7fe      	b.n	80154a8 <Hardware::Reboot()+0x48>
 80154aa:	6802      	ldr	r2, [r0, #0]
 80154ac:	695e      	ldr	r6, [r3, #20]
 80154ae:	1b92      	subs	r2, r2, r6
 80154b0:	4294      	cmp	r4, r2
 80154b2:	d8f8      	bhi.n	80154a6 <Hardware::Reboot()+0x46>
 80154b4:	6802      	ldr	r2, [r0, #0]
 80154b6:	615a      	str	r2, [r3, #20]
 80154b8:	691a      	ldr	r2, [r3, #16]
 80154ba:	2a01      	cmp	r2, #1
 80154bc:	f082 0401 	eor.w	r4, r2, #1
 80154c0:	611c      	str	r4, [r3, #16]
 80154c2:	bf14      	ite	ne
 80154c4:	f8c1 5818 	strne.w	r5, [r1, #2072]	; 0x818
 80154c8:	f8c1 2828 	streq.w	r2, [r1, #2088]	; 0x828
 80154cc:	e7ea      	b.n	80154a4 <Hardware::Reboot()+0x44>
 80154ce:	bf00      	nop
 80154d0:	2000fd7c 	andcs	pc, r0, ip, ror sp	; <UNPREDICTABLE>
 80154d4:	2000fd94 	mulcs	r0, r4, sp
 80154d8:	40020000 	andmi	r0, r2, r0

080154dc <operator delete(void*)>:
 80154dc:	f000 b890 	b.w	8015600 <free>

080154e0 <operator delete[](void*)>:
 80154e0:	f000 b88e 	b.w	8015600 <free>

080154e4 <operator new(unsigned int)>:
 80154e4:	f000 b842 	b.w	801556c <malloc>

080154e8 <operator new[](unsigned int)>:
 80154e8:	f000 b840 	b.w	801556c <malloc>

080154ec <inet_aton>:
 80154ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80154ee:	f04f 0c0a 	mov.w	ip, #10
 80154f2:	ae01      	add	r6, sp, #4
 80154f4:	2500      	movs	r5, #0
 80154f6:	4603      	mov	r3, r0
 80154f8:	1d07      	adds	r7, r0, #4
 80154fa:	2200      	movs	r2, #0
 80154fc:	e007      	b.n	801550e <inet_aton+0x22>
 80154fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8015502:	2b09      	cmp	r3, #9
 8015504:	d820      	bhi.n	8015548 <inet_aton+0x5c>
 8015506:	fb0c 4202 	mla	r2, ip, r2, r4
 801550a:	3a30      	subs	r2, #48	; 0x30
 801550c:	4603      	mov	r3, r0
 801550e:	4618      	mov	r0, r3
 8015510:	f810 4b01 	ldrb.w	r4, [r0], #1
 8015514:	2c2e      	cmp	r4, #46	; 0x2e
 8015516:	d111      	bne.n	801553c <inet_aton+0x50>
 8015518:	3501      	adds	r5, #1
 801551a:	2d03      	cmp	r5, #3
 801551c:	f806 2b01 	strb.w	r2, [r6], #1
 8015520:	d1e9      	bne.n	80154f6 <inet_aton+0xa>
 8015522:	1d1c      	adds	r4, r3, #4
 8015524:	2200      	movs	r2, #0
 8015526:	250a      	movs	r5, #10
 8015528:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801552c:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8015530:	d10d      	bne.n	801554e <inet_aton+0x62>
 8015532:	f88d 2007 	strb.w	r2, [sp, #7]
 8015536:	b9b1      	cbnz	r1, 8015566 <inet_aton+0x7a>
 8015538:	2001      	movs	r0, #1
 801553a:	e006      	b.n	801554a <inet_aton+0x5e>
 801553c:	2c00      	cmp	r4, #0
 801553e:	d0eb      	beq.n	8015518 <inet_aton+0x2c>
 8015540:	2c0a      	cmp	r4, #10
 8015542:	d0e9      	beq.n	8015518 <inet_aton+0x2c>
 8015544:	42b8      	cmp	r0, r7
 8015546:	d1da      	bne.n	80154fe <inet_aton+0x12>
 8015548:	2000      	movs	r0, #0
 801554a:	b003      	add	sp, #12
 801554c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801554e:	280a      	cmp	r0, #10
 8015550:	d0ef      	beq.n	8015532 <inet_aton+0x46>
 8015552:	42a3      	cmp	r3, r4
 8015554:	d0f8      	beq.n	8015548 <inet_aton+0x5c>
 8015556:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 801555a:	2e09      	cmp	r6, #9
 801555c:	d8f4      	bhi.n	8015548 <inet_aton+0x5c>
 801555e:	fb05 0202 	mla	r2, r5, r2, r0
 8015562:	3a30      	subs	r2, #48	; 0x30
 8015564:	e7e0      	b.n	8015528 <inet_aton+0x3c>
 8015566:	9b01      	ldr	r3, [sp, #4]
 8015568:	600b      	str	r3, [r1, #0]
 801556a:	e7e5      	b.n	8015538 <inet_aton+0x4c>

0801556c <malloc>:
 801556c:	b538      	push	{r3, r4, r5, lr}
 801556e:	4601      	mov	r1, r0
 8015570:	4604      	mov	r4, r0
 8015572:	481c      	ldr	r0, [pc, #112]	; (80155e4 <malloc+0x78>)
 8015574:	f7f4 ff12 	bl	800a39c <printf>
 8015578:	b17c      	cbz	r4, 801559a <malloc+0x2e>
 801557a:	4b1b      	ldr	r3, [pc, #108]	; (80155e8 <malloc+0x7c>)
 801557c:	6818      	ldr	r0, [r3, #0]
 801557e:	b978      	cbnz	r0, 80155a0 <malloc+0x34>
 8015580:	4a1a      	ldr	r2, [pc, #104]	; (80155ec <malloc+0x80>)
 8015582:	481b      	ldr	r0, [pc, #108]	; (80155f0 <malloc+0x84>)
 8015584:	6811      	ldr	r1, [r2, #0]
 8015586:	f104 031b 	add.w	r3, r4, #27
 801558a:	f023 030f 	bic.w	r3, r3, #15
 801558e:	440b      	add	r3, r1
 8015590:	4283      	cmp	r3, r0
 8015592:	d921      	bls.n	80155d8 <malloc+0x6c>
 8015594:	4817      	ldr	r0, [pc, #92]	; (80155f4 <malloc+0x88>)
 8015596:	f7f4 ff01 	bl	800a39c <printf>
 801559a:	2500      	movs	r5, #0
 801559c:	4628      	mov	r0, r5
 801559e:	bd38      	pop	{r3, r4, r5, pc}
 80155a0:	4284      	cmp	r4, r0
 80155a2:	d80a      	bhi.n	80155ba <malloc+0x4e>
 80155a4:	685a      	ldr	r2, [r3, #4]
 80155a6:	6899      	ldr	r1, [r3, #8]
 80155a8:	3201      	adds	r2, #1
 80155aa:	428a      	cmp	r2, r1
 80155ac:	605a      	str	r2, [r3, #4]
 80155ae:	d900      	bls.n	80155b2 <malloc+0x46>
 80155b0:	609a      	str	r2, [r3, #8]
 80155b2:	68d9      	ldr	r1, [r3, #12]
 80155b4:	b919      	cbnz	r1, 80155be <malloc+0x52>
 80155b6:	4604      	mov	r4, r0
 80155b8:	e7e2      	b.n	8015580 <malloc+0x14>
 80155ba:	3310      	adds	r3, #16
 80155bc:	e7de      	b.n	801557c <malloc+0x10>
 80155be:	688a      	ldr	r2, [r1, #8]
 80155c0:	60da      	str	r2, [r3, #12]
 80155c2:	4604      	mov	r4, r0
 80155c4:	2300      	movs	r3, #0
 80155c6:	f101 050c 	add.w	r5, r1, #12
 80155ca:	608b      	str	r3, [r1, #8]
 80155cc:	4622      	mov	r2, r4
 80155ce:	462b      	mov	r3, r5
 80155d0:	4809      	ldr	r0, [pc, #36]	; (80155f8 <malloc+0x8c>)
 80155d2:	f7f4 fee3 	bl	800a39c <printf>
 80155d6:	e7e1      	b.n	801559c <malloc+0x30>
 80155d8:	6013      	str	r3, [r2, #0]
 80155da:	4b08      	ldr	r3, [pc, #32]	; (80155fc <malloc+0x90>)
 80155dc:	e9c1 3400 	strd	r3, r4, [r1]
 80155e0:	e7f0      	b.n	80155c4 <malloc+0x58>
 80155e2:	bf00      	nop
 80155e4:	0801adbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, fp, sp, pc}
 80155e8:	20000024 	andcs	r0, r0, r4, lsr #32
 80155ec:	20000020 	andcs	r0, r0, r0, lsr #32
 80155f0:	1000c000 	andne	ip, r0, r0
 80155f4:	0801adc8 	stmdaeq	r1, {r3, r6, r7, r8, sl, fp, sp, pc}
 80155f8:	0801ade4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, sp, pc}
 80155fc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08015600 <free>:
 8015600:	b538      	push	{r3, r4, r5, lr}
 8015602:	4604      	mov	r4, r0
 8015604:	b1c8      	cbz	r0, 801563a <free+0x3a>
 8015606:	f1a0 050c 	sub.w	r5, r0, #12
 801560a:	4602      	mov	r2, r0
 801560c:	4629      	mov	r1, r5
 801560e:	480c      	ldr	r0, [pc, #48]	; (8015640 <free+0x40>)
 8015610:	f7f4 fec4 	bl	800a39c <printf>
 8015614:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8015618:	4b0a      	ldr	r3, [pc, #40]	; (8015644 <free+0x44>)
 801561a:	429a      	cmp	r2, r3
 801561c:	d10d      	bne.n	801563a <free+0x3a>
 801561e:	4b0a      	ldr	r3, [pc, #40]	; (8015648 <free+0x48>)
 8015620:	681a      	ldr	r2, [r3, #0]
 8015622:	b152      	cbz	r2, 801563a <free+0x3a>
 8015624:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8015628:	4291      	cmp	r1, r2
 801562a:	d107      	bne.n	801563c <free+0x3c>
 801562c:	68da      	ldr	r2, [r3, #12]
 801562e:	f844 2c04 	str.w	r2, [r4, #-4]
 8015632:	685a      	ldr	r2, [r3, #4]
 8015634:	60dd      	str	r5, [r3, #12]
 8015636:	3a01      	subs	r2, #1
 8015638:	605a      	str	r2, [r3, #4]
 801563a:	bd38      	pop	{r3, r4, r5, pc}
 801563c:	3310      	adds	r3, #16
 801563e:	e7ef      	b.n	8015620 <free+0x20>
 8015640:	0801ae0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, fp, sp, pc}
 8015644:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8015648:	20000024 	andcs	r0, r0, r4, lsr #32

0801564c <memcpy>:
 801564c:	b510      	push	{r4, lr}
 801564e:	1e43      	subs	r3, r0, #1
 8015650:	440a      	add	r2, r1
 8015652:	4291      	cmp	r1, r2
 8015654:	d100      	bne.n	8015658 <memcpy+0xc>
 8015656:	bd10      	pop	{r4, pc}
 8015658:	f811 4b01 	ldrb.w	r4, [r1], #1
 801565c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8015660:	e7f7      	b.n	8015652 <memcpy+0x6>

08015662 <memmove>:
 8015662:	4288      	cmp	r0, r1
 8015664:	b510      	push	{r4, lr}
 8015666:	eb01 0302 	add.w	r3, r1, r2
 801566a:	d208      	bcs.n	801567e <memmove+0x1c>
 801566c:	1e42      	subs	r2, r0, #1
 801566e:	4299      	cmp	r1, r3
 8015670:	d100      	bne.n	8015674 <memmove+0x12>
 8015672:	bd10      	pop	{r4, pc}
 8015674:	f811 4b01 	ldrb.w	r4, [r1], #1
 8015678:	f802 4f01 	strb.w	r4, [r2, #1]!
 801567c:	e7f7      	b.n	801566e <memmove+0xc>
 801567e:	4402      	add	r2, r0
 8015680:	4601      	mov	r1, r0
 8015682:	428a      	cmp	r2, r1
 8015684:	d0f5      	beq.n	8015672 <memmove+0x10>
 8015686:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801568a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801568e:	e7f8      	b.n	8015682 <memmove+0x20>

08015690 <memset>:
 8015690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015692:	b1c2      	cbz	r2, 80156c6 <memset+0x36>
 8015694:	b2c9      	uxtb	r1, r1
 8015696:	4603      	mov	r3, r0
 8015698:	075c      	lsls	r4, r3, #29
 801569a:	d110      	bne.n	80156be <memset+0x2e>
 801569c:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80156a0:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80156a4:	f022 0407 	bic.w	r4, r2, #7
 80156a8:	463d      	mov	r5, r7
 80156aa:	441c      	add	r4, r3
 80156ac:	461e      	mov	r6, r3
 80156ae:	42a6      	cmp	r6, r4
 80156b0:	d10a      	bne.n	80156c8 <memset+0x38>
 80156b2:	441a      	add	r2, r3
 80156b4:	4294      	cmp	r4, r2
 80156b6:	d006      	beq.n	80156c6 <memset+0x36>
 80156b8:	f804 1b01 	strb.w	r1, [r4], #1
 80156bc:	e7fa      	b.n	80156b4 <memset+0x24>
 80156be:	3a01      	subs	r2, #1
 80156c0:	f803 1b01 	strb.w	r1, [r3], #1
 80156c4:	d1e8      	bne.n	8015698 <memset+0x8>
 80156c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80156c8:	f846 7b08 	str.w	r7, [r6], #8
 80156cc:	f846 5c04 	str.w	r5, [r6, #-4]
 80156d0:	e7ed      	b.n	80156ae <memset+0x1e>

080156d2 <puts>:
 80156d2:	b508      	push	{r3, lr}
 80156d4:	f7ff fd48 	bl	8015168 <console_puts>
 80156d8:	200a      	movs	r0, #10
 80156da:	f7ff fd43 	bl	8015164 <console_putc>
 80156de:	2001      	movs	r0, #1
 80156e0:	bd08      	pop	{r3, pc}
	...

080156e4 <strtok>:
 80156e4:	b530      	push	{r4, r5, lr}
 80156e6:	b910      	cbnz	r0, 80156ee <strtok+0xa>
 80156e8:	4b12      	ldr	r3, [pc, #72]	; (8015734 <strtok+0x50>)
 80156ea:	6818      	ldr	r0, [r3, #0]
 80156ec:	b158      	cbz	r0, 8015706 <strtok+0x22>
 80156ee:	4603      	mov	r3, r0
 80156f0:	4618      	mov	r0, r3
 80156f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80156f6:	460d      	mov	r5, r1
 80156f8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80156fc:	b924      	cbnz	r4, 8015708 <strtok+0x24>
 80156fe:	b94a      	cbnz	r2, 8015714 <strtok+0x30>
 8015700:	4b0c      	ldr	r3, [pc, #48]	; (8015734 <strtok+0x50>)
 8015702:	4610      	mov	r0, r2
 8015704:	601a      	str	r2, [r3, #0]
 8015706:	bd30      	pop	{r4, r5, pc}
 8015708:	42a2      	cmp	r2, r4
 801570a:	d1f5      	bne.n	80156f8 <strtok+0x14>
 801570c:	e7f0      	b.n	80156f0 <strtok+0xc>
 801570e:	4613      	mov	r3, r2
 8015710:	e00c      	b.n	801572c <strtok+0x48>
 8015712:	b914      	cbnz	r4, 801571a <strtok+0x36>
 8015714:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015718:	460d      	mov	r5, r1
 801571a:	f815 4b01 	ldrb.w	r4, [r5], #1
 801571e:	42a2      	cmp	r2, r4
 8015720:	d1f7      	bne.n	8015712 <strtok+0x2e>
 8015722:	2a00      	cmp	r2, #0
 8015724:	d0f3      	beq.n	801570e <strtok+0x2a>
 8015726:	2200      	movs	r2, #0
 8015728:	f803 2c01 	strb.w	r2, [r3, #-1]
 801572c:	4a01      	ldr	r2, [pc, #4]	; (8015734 <strtok+0x50>)
 801572e:	6013      	str	r3, [r2, #0]
 8015730:	e7e9      	b.n	8015706 <strtok+0x22>
 8015732:	bf00      	nop
 8015734:	2000fd84 	andcs	pc, r0, r4, lsl #27

08015738 <isleapyear>:
 8015738:	2264      	movs	r2, #100	; 0x64
 801573a:	fb90 f3f2 	sdiv	r3, r0, r2
 801573e:	fb02 0313 	mls	r3, r2, r3, r0
 8015742:	b94b      	cbnz	r3, 8015758 <isleapyear+0x20>
 8015744:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8015748:	fb90 f2f3 	sdiv	r2, r0, r3
 801574c:	fb03 0012 	mls	r0, r3, r2, r0
 8015750:	fab0 f080 	clz	r0, r0
 8015754:	0940      	lsrs	r0, r0, #5
 8015756:	4770      	bx	lr
 8015758:	f010 0f03 	tst.w	r0, #3
 801575c:	bf0c      	ite	eq
 801575e:	2001      	moveq	r0, #1
 8015760:	2000      	movne	r0, #0
 8015762:	4770      	bx	lr

08015764 <getdaysofmonth>:
 8015764:	b510      	push	{r4, lr}
 8015766:	4604      	mov	r4, r0
 8015768:	2c01      	cmp	r4, #1
 801576a:	4608      	mov	r0, r1
 801576c:	d102      	bne.n	8015774 <getdaysofmonth+0x10>
 801576e:	f7ff ffe3 	bl	8015738 <isleapyear>
 8015772:	b918      	cbnz	r0, 801577c <getdaysofmonth+0x18>
 8015774:	4b02      	ldr	r3, [pc, #8]	; (8015780 <getdaysofmonth+0x1c>)
 8015776:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801577a:	bd10      	pop	{r4, pc}
 801577c:	201d      	movs	r0, #29
 801577e:	e7fc      	b.n	801577a <getdaysofmonth+0x16>
 8015780:	0801ae38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, sp, pc}

08015784 <mktime>:
 8015784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015788:	4604      	mov	r4, r0
 801578a:	2800      	cmp	r0, #0
 801578c:	d043      	beq.n	8015816 <mktime+0x92>
 801578e:	6941      	ldr	r1, [r0, #20]
 8015790:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8015794:	2b45      	cmp	r3, #69	; 0x45
 8015796:	d83e      	bhi.n	8015816 <mktime+0x92>
 8015798:	2600      	movs	r6, #0
 801579a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 801579e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80157a2:	f240 186d 	movw	r8, #365	; 0x16d
 80157a6:	42af      	cmp	r7, r5
 80157a8:	da24      	bge.n	80157f4 <mktime+0x70>
 80157aa:	6927      	ldr	r7, [r4, #16]
 80157ac:	2f0b      	cmp	r7, #11
 80157ae:	d832      	bhi.n	8015816 <mktime+0x92>
 80157b0:	2500      	movs	r5, #0
 80157b2:	42af      	cmp	r7, r5
 80157b4:	d129      	bne.n	801580a <mktime+0x86>
 80157b6:	68e5      	ldr	r5, [r4, #12]
 80157b8:	2d00      	cmp	r5, #0
 80157ba:	dd2c      	ble.n	8015816 <mktime+0x92>
 80157bc:	4638      	mov	r0, r7
 80157be:	f7ff ffd1 	bl	8015764 <getdaysofmonth>
 80157c2:	4285      	cmp	r5, r0
 80157c4:	dc27      	bgt.n	8015816 <mktime+0x92>
 80157c6:	3d01      	subs	r5, #1
 80157c8:	2318      	movs	r3, #24
 80157ca:	4435      	add	r5, r6
 80157cc:	435d      	muls	r5, r3
 80157ce:	68a3      	ldr	r3, [r4, #8]
 80157d0:	2b17      	cmp	r3, #23
 80157d2:	d820      	bhi.n	8015816 <mktime+0x92>
 80157d4:	442b      	add	r3, r5
 80157d6:	213c      	movs	r1, #60	; 0x3c
 80157d8:	fb01 f203 	mul.w	r2, r1, r3
 80157dc:	6863      	ldr	r3, [r4, #4]
 80157de:	2b3b      	cmp	r3, #59	; 0x3b
 80157e0:	d819      	bhi.n	8015816 <mktime+0x92>
 80157e2:	6820      	ldr	r0, [r4, #0]
 80157e4:	4413      	add	r3, r2
 80157e6:	283b      	cmp	r0, #59	; 0x3b
 80157e8:	fb01 f303 	mul.w	r3, r1, r3
 80157ec:	d813      	bhi.n	8015816 <mktime+0x92>
 80157ee:	4418      	add	r0, r3
 80157f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80157f4:	4628      	mov	r0, r5
 80157f6:	f7ff ff9f 	bl	8015738 <isleapyear>
 80157fa:	2800      	cmp	r0, #0
 80157fc:	bf14      	ite	ne
 80157fe:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8015802:	4643      	moveq	r3, r8
 8015804:	441e      	add	r6, r3
 8015806:	3501      	adds	r5, #1
 8015808:	e7cd      	b.n	80157a6 <mktime+0x22>
 801580a:	4628      	mov	r0, r5
 801580c:	f7ff ffaa 	bl	8015764 <getdaysofmonth>
 8015810:	3501      	adds	r5, #1
 8015812:	4406      	add	r6, r0
 8015814:	e7cd      	b.n	80157b2 <mktime+0x2e>
 8015816:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801581a:	e7e9      	b.n	80157f0 <mktime+0x6c>

0801581c <gettimeofday>:
 801581c:	b538      	push	{r3, r4, r5, lr}
 801581e:	4a10      	ldr	r2, [pc, #64]	; (8015860 <gettimeofday+0x44>)
 8015820:	4b10      	ldr	r3, [pc, #64]	; (8015864 <gettimeofday+0x48>)
 8015822:	6814      	ldr	r4, [r2, #0]
 8015824:	681b      	ldr	r3, [r3, #0]
 8015826:	6013      	str	r3, [r2, #0]
 8015828:	429c      	cmp	r4, r3
 801582a:	bf2c      	ite	cs
 801582c:	1ae4      	subcs	r4, r4, r3
 801582e:	1b1c      	subcc	r4, r3, r4
 8015830:	4b0d      	ldr	r3, [pc, #52]	; (8015868 <gettimeofday+0x4c>)
 8015832:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015836:	4354      	muls	r4, r2
 8015838:	e9d3 2100 	ldrd	r2, r1, [r3]
 801583c:	18a4      	adds	r4, r4, r2
 801583e:	f141 0100 	adc.w	r1, r1, #0
 8015842:	4605      	mov	r5, r0
 8015844:	e9c3 4100 	strd	r4, r1, [r3]
 8015848:	4a08      	ldr	r2, [pc, #32]	; (801586c <gettimeofday+0x50>)
 801584a:	2300      	movs	r3, #0
 801584c:	4620      	mov	r0, r4
 801584e:	f7f3 fa23 	bl	8008c98 <__aeabi_uldivmod>
 8015852:	4b06      	ldr	r3, [pc, #24]	; (801586c <gettimeofday+0x50>)
 8015854:	6028      	str	r0, [r5, #0]
 8015856:	fb03 4410 	mls	r4, r3, r0, r4
 801585a:	606c      	str	r4, [r5, #4]
 801585c:	2000      	movs	r0, #0
 801585e:	bd38      	pop	{r3, r4, r5, pc}
 8015860:	2000fd90 	mulcs	r0, r0, sp
 8015864:	2000fd94 	mulcs	r0, r4, sp
 8015868:	2000fd88 	andcs	pc, r0, r8, lsl #27
 801586c:	000f4240 	andeq	r4, pc, r0, asr #4

08015870 <settimeofday>:
 8015870:	4b07      	ldr	r3, [pc, #28]	; (8015890 <settimeofday+0x20>)
 8015872:	4908      	ldr	r1, [pc, #32]	; (8015894 <settimeofday+0x24>)
 8015874:	681a      	ldr	r2, [r3, #0]
 8015876:	4b08      	ldr	r3, [pc, #32]	; (8015898 <settimeofday+0x28>)
 8015878:	b510      	push	{r4, lr}
 801587a:	601a      	str	r2, [r3, #0]
 801587c:	6843      	ldr	r3, [r0, #4]
 801587e:	6804      	ldr	r4, [r0, #0]
 8015880:	4806      	ldr	r0, [pc, #24]	; (801589c <settimeofday+0x2c>)
 8015882:	17da      	asrs	r2, r3, #31
 8015884:	fbc4 3200 	smlal	r3, r2, r4, r0
 8015888:	e9c1 3200 	strd	r3, r2, [r1]
 801588c:	2000      	movs	r0, #0
 801588e:	bd10      	pop	{r4, pc}
 8015890:	2000fd94 	mulcs	r0, r4, sp
 8015894:	2000fd88 	andcs	pc, r0, r8, lsl #27
 8015898:	2000fd90 	mulcs	r0, r0, sp
 801589c:	000f4240 	andeq	r4, pc, r0, asr #4

080158a0 <time>:
 80158a0:	b513      	push	{r0, r1, r4, lr}
 80158a2:	4604      	mov	r4, r0
 80158a4:	2100      	movs	r1, #0
 80158a6:	4668      	mov	r0, sp
 80158a8:	f7ff ffb8 	bl	801581c <gettimeofday>
 80158ac:	9800      	ldr	r0, [sp, #0]
 80158ae:	b104      	cbz	r4, 80158b2 <time+0x12>
 80158b0:	6020      	str	r0, [r4, #0]
 80158b2:	b002      	add	sp, #8
 80158b4:	bd10      	pop	{r4, pc}
	...

080158b8 <uart0_init>:
 80158b8:	b507      	push	{r0, r1, r2, lr}
 80158ba:	2301      	movs	r3, #1
 80158bc:	9300      	str	r3, [sp, #0]
 80158be:	4805      	ldr	r0, [pc, #20]	; (80158d4 <uart0_init+0x1c>)
 80158c0:	2300      	movs	r3, #0
 80158c2:	2208      	movs	r2, #8
 80158c4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80158c8:	f001 fda6 	bl	8017418 <gd32_uart_begin>
 80158cc:	b003      	add	sp, #12
 80158ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80158d2:	bf00      	nop
 80158d4:	40011000 	andmi	r1, r1, r0

080158d8 <uart0_putc>:
 80158d8:	280a      	cmp	r0, #10
 80158da:	b570      	push	{r4, r5, r6, lr}
 80158dc:	4d0a      	ldr	r5, [pc, #40]	; (8015908 <uart0_putc+0x30>)
 80158de:	4604      	mov	r4, r0
 80158e0:	d107      	bne.n	80158f2 <uart0_putc+0x1a>
 80158e2:	2107      	movs	r1, #7
 80158e4:	4628      	mov	r0, r5
 80158e6:	f001 fa3f 	bl	8016d68 <usart_flag_get>
 80158ea:	2800      	cmp	r0, #0
 80158ec:	d0f9      	beq.n	80158e2 <uart0_putc+0xa>
 80158ee:	230d      	movs	r3, #13
 80158f0:	606b      	str	r3, [r5, #4]
 80158f2:	4e05      	ldr	r6, [pc, #20]	; (8015908 <uart0_putc+0x30>)
 80158f4:	2107      	movs	r1, #7
 80158f6:	4630      	mov	r0, r6
 80158f8:	f001 fa36 	bl	8016d68 <usart_flag_get>
 80158fc:	2800      	cmp	r0, #0
 80158fe:	d0f9      	beq.n	80158f4 <uart0_putc+0x1c>
 8015900:	b2e4      	uxtb	r4, r4
 8015902:	606c      	str	r4, [r5, #4]
 8015904:	bd70      	pop	{r4, r5, r6, pc}
 8015906:	bf00      	nop
 8015908:	40011000 	andmi	r1, r1, r0

0801590c <uart0_puts>:
 801590c:	b510      	push	{r4, lr}
 801590e:	1e44      	subs	r4, r0, #1
 8015910:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8015914:	b903      	cbnz	r3, 8015918 <uart0_puts+0xc>
 8015916:	bd10      	pop	{r4, pc}
 8015918:	2b0a      	cmp	r3, #10
 801591a:	d102      	bne.n	8015922 <uart0_puts+0x16>
 801591c:	200d      	movs	r0, #13
 801591e:	f7ff ffdb 	bl	80158d8 <uart0_putc>
 8015922:	7820      	ldrb	r0, [r4, #0]
 8015924:	f7ff ffd8 	bl	80158d8 <uart0_putc>
 8015928:	e7f2      	b.n	8015910 <uart0_puts+0x4>
	...

0801592c <systick_config>:
 801592c:	4b0c      	ldr	r3, [pc, #48]	; (8015960 <systick_config+0x34>)
 801592e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015932:	681b      	ldr	r3, [r3, #0]
 8015934:	fbb3 f3f2 	udiv	r3, r3, r2
 8015938:	3b01      	subs	r3, #1
 801593a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801593e:	d20d      	bcs.n	801595c <systick_config+0x30>
 8015940:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8015944:	21f0      	movs	r1, #240	; 0xf0
 8015946:	6153      	str	r3, [r2, #20]
 8015948:	4b06      	ldr	r3, [pc, #24]	; (8015964 <systick_config+0x38>)
 801594a:	2007      	movs	r0, #7
 801594c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8015950:	2100      	movs	r1, #0
 8015952:	6191      	str	r1, [r2, #24]
 8015954:	6110      	str	r0, [r2, #16]
 8015956:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801595a:	4770      	bx	lr
 801595c:	e7fe      	b.n	801595c <systick_config+0x30>
 801595e:	bf00      	nop
 8015960:	200000f4 	strdcs	r0, [r0], -r4
 8015964:	e000ed00 	and	lr, r0, r0, lsl #26

08015968 <SysTick_Handler>:
 8015968:	4a02      	ldr	r2, [pc, #8]	; (8015974 <SysTick_Handler+0xc>)
 801596a:	6813      	ldr	r3, [r2, #0]
 801596c:	3301      	adds	r3, #1
 801596e:	6013      	str	r3, [r2, #0]
 8015970:	4770      	bx	lr
 8015972:	bf00      	nop
 8015974:	2000fd94 	mulcs	r0, r4, sp

08015978 <SystemInit>:
 8015978:	4a56      	ldr	r2, [pc, #344]	; (8015ad4 <SystemInit+0x15c>)
 801597a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 801597e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8015982:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8015986:	4b54      	ldr	r3, [pc, #336]	; (8015ad8 <SystemInit+0x160>)
 8015988:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 801598c:	f042 0201 	orr.w	r2, r2, #1
 8015990:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8015994:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8015998:	b082      	sub	sp, #8
 801599a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801599e:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80159a2:	2200      	movs	r2, #0
 80159a4:	9201      	str	r2, [sp, #4]
 80159a6:	f24c 314f 	movw	r1, #49999	; 0xc34f
 80159aa:	9a01      	ldr	r2, [sp, #4]
 80159ac:	428a      	cmp	r2, r1
 80159ae:	d93e      	bls.n	8015a2e <SystemInit+0xb6>
 80159b0:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80159b4:	f042 0290 	orr.w	r2, r2, #144	; 0x90
 80159b8:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80159bc:	2300      	movs	r3, #0
 80159be:	9301      	str	r3, [sp, #4]
 80159c0:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80159c4:	9b01      	ldr	r3, [sp, #4]
 80159c6:	4293      	cmp	r3, r2
 80159c8:	d935      	bls.n	8015a36 <SystemInit+0xbe>
 80159ca:	4b43      	ldr	r3, [pc, #268]	; (8015ad8 <SystemInit+0x160>)
 80159cc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80159d0:	f022 0203 	bic.w	r2, r2, #3
 80159d4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80159d8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80159dc:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80159e0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80159e4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80159e8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80159ec:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80159f0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80159f4:	2200      	movs	r2, #0
 80159f6:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80159fa:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 80159fe:	4937      	ldr	r1, [pc, #220]	; (8015adc <SystemInit+0x164>)
 8015a00:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8015a04:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 8015a08:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8015a0c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8015a10:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8015a14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015a18:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8015a1c:	0389      	lsls	r1, r1, #14
 8015a1e:	d401      	bmi.n	8015a24 <SystemInit+0xac>
 8015a20:	3a01      	subs	r2, #1
 8015a22:	d1f9      	bne.n	8015a18 <SystemInit+0xa0>
 8015a24:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8015a28:	0392      	lsls	r2, r2, #14
 8015a2a:	d408      	bmi.n	8015a3e <SystemInit+0xc6>
 8015a2c:	e7fe      	b.n	8015a2c <SystemInit+0xb4>
 8015a2e:	9a01      	ldr	r2, [sp, #4]
 8015a30:	3201      	adds	r2, #1
 8015a32:	9201      	str	r2, [sp, #4]
 8015a34:	e7b9      	b.n	80159aa <SystemInit+0x32>
 8015a36:	9b01      	ldr	r3, [sp, #4]
 8015a38:	3301      	adds	r3, #1
 8015a3a:	9301      	str	r3, [sp, #4]
 8015a3c:	e7c2      	b.n	80159c4 <SystemInit+0x4c>
 8015a3e:	f8d3 2840 	ldr.w	r2, [r3, #2112]	; 0x840
 8015a42:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8015a46:	f8c3 2840 	str.w	r2, [r3, #2112]	; 0x840
 8015a4a:	4a25      	ldr	r2, [pc, #148]	; (8015ae0 <SystemInit+0x168>)
 8015a4c:	6811      	ldr	r1, [r2, #0]
 8015a4e:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8015a52:	6011      	str	r1, [r2, #0]
 8015a54:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8015a58:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8015a5c:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8015a60:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8015a64:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8015a68:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8015a6c:	f441 51a0 	orr.w	r1, r1, #5120	; 0x1400
 8015a70:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8015a74:	491b      	ldr	r1, [pc, #108]	; (8015ae4 <SystemInit+0x16c>)
 8015a76:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8015a7a:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8015a7e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8015a82:	f8c3 1800 	str.w	r1, [r3, #2048]	; 0x800
 8015a86:	4914      	ldr	r1, [pc, #80]	; (8015ad8 <SystemInit+0x160>)
 8015a88:	f8d1 3800 	ldr.w	r3, [r1, #2048]	; 0x800
 8015a8c:	019b      	lsls	r3, r3, #6
 8015a8e:	d5fb      	bpl.n	8015a88 <SystemInit+0x110>
 8015a90:	6813      	ldr	r3, [r2, #0]
 8015a92:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8015a96:	6013      	str	r3, [r2, #0]
 8015a98:	4b11      	ldr	r3, [pc, #68]	; (8015ae0 <SystemInit+0x168>)
 8015a9a:	685a      	ldr	r2, [r3, #4]
 8015a9c:	03d0      	lsls	r0, r2, #15
 8015a9e:	d5fc      	bpl.n	8015a9a <SystemInit+0x122>
 8015aa0:	681a      	ldr	r2, [r3, #0]
 8015aa2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8015aa6:	601a      	str	r2, [r3, #0]
 8015aa8:	685a      	ldr	r2, [r3, #4]
 8015aaa:	0391      	lsls	r1, r2, #14
 8015aac:	d5fc      	bpl.n	8015aa8 <SystemInit+0x130>
 8015aae:	4b0a      	ldr	r3, [pc, #40]	; (8015ad8 <SystemInit+0x160>)
 8015ab0:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8015ab4:	f022 0203 	bic.w	r2, r2, #3
 8015ab8:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8015abc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8015ac0:	f042 0202 	orr.w	r2, r2, #2
 8015ac4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8015ac8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 8015acc:	0712      	lsls	r2, r2, #28
 8015ace:	d5fb      	bpl.n	8015ac8 <SystemInit+0x150>
 8015ad0:	b002      	add	sp, #8
 8015ad2:	4770      	bx	lr
 8015ad4:	e000ed00 	and	lr, r0, r0, lsl #26
 8015ad8:	40023000 	andmi	r3, r2, r0
 8015adc:	24003010 	strcs	r3, [r0], #-16
 8015ae0:	40007000 	andmi	r7, r0, r0
 8015ae4:	09406419 	stmdbeq	r0, {r0, r3, r4, sl, sp, lr}^

08015ae8 <dma_deinit>:
 8015ae8:	2318      	movs	r3, #24
 8015aea:	fb03 0301 	mla	r3, r3, r1, r0
 8015aee:	b510      	push	{r4, lr}
 8015af0:	691a      	ldr	r2, [r3, #16]
 8015af2:	f022 0201 	bic.w	r2, r2, #1
 8015af6:	611a      	str	r2, [r3, #16]
 8015af8:	2903      	cmp	r1, #3
 8015afa:	f04f 0200 	mov.w	r2, #0
 8015afe:	611a      	str	r2, [r3, #16]
 8015b00:	615a      	str	r2, [r3, #20]
 8015b02:	619a      	str	r2, [r3, #24]
 8015b04:	61da      	str	r2, [r3, #28]
 8015b06:	621a      	str	r2, [r3, #32]
 8015b08:	625a      	str	r2, [r3, #36]	; 0x24
 8015b0a:	d80a      	bhi.n	8015b22 <dma_deinit+0x3a>
 8015b0c:	2406      	movs	r4, #6
 8015b0e:	084b      	lsrs	r3, r1, #1
 8015b10:	4361      	muls	r1, r4
 8015b12:	6882      	ldr	r2, [r0, #8]
 8015b14:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8015b18:	233d      	movs	r3, #61	; 0x3d
 8015b1a:	408b      	lsls	r3, r1
 8015b1c:	4313      	orrs	r3, r2
 8015b1e:	6083      	str	r3, [r0, #8]
 8015b20:	bd10      	pop	{r4, pc}
 8015b22:	3904      	subs	r1, #4
 8015b24:	b2ca      	uxtb	r2, r1
 8015b26:	2306      	movs	r3, #6
 8015b28:	435a      	muls	r2, r3
 8015b2a:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8015b2e:	68c4      	ldr	r4, [r0, #12]
 8015b30:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8015b34:	233d      	movs	r3, #61	; 0x3d
 8015b36:	4093      	lsls	r3, r2
 8015b38:	4323      	orrs	r3, r4
 8015b3a:	60c3      	str	r3, [r0, #12]
 8015b3c:	e7f0      	b.n	8015b20 <dma_deinit+0x38>

08015b3e <dma_single_data_para_struct_init>:
 8015b3e:	2300      	movs	r3, #0
 8015b40:	2201      	movs	r2, #1
 8015b42:	e9c0 3200 	strd	r3, r2, [r0]
 8015b46:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8015b4a:	e9c0 3204 	strd	r3, r2, [r0, #16]
 8015b4e:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015b52:	6203      	str	r3, [r0, #32]
 8015b54:	4770      	bx	lr

08015b56 <dma_single_data_mode_init>:
 8015b56:	2318      	movs	r3, #24
 8015b58:	fb03 0101 	mla	r1, r3, r1, r0
 8015b5c:	b530      	push	{r4, r5, lr}
 8015b5e:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8015b60:	f023 0304 	bic.w	r3, r3, #4
 8015b64:	624b      	str	r3, [r1, #36]	; 0x24
 8015b66:	6813      	ldr	r3, [r2, #0]
 8015b68:	618b      	str	r3, [r1, #24]
 8015b6a:	6893      	ldr	r3, [r2, #8]
 8015b6c:	61cb      	str	r3, [r1, #28]
 8015b6e:	69d3      	ldr	r3, [r2, #28]
 8015b70:	614b      	str	r3, [r1, #20]
 8015b72:	6914      	ldr	r4, [r2, #16]
 8015b74:	6a13      	ldr	r3, [r2, #32]
 8015b76:	6908      	ldr	r0, [r1, #16]
 8015b78:	6995      	ldr	r5, [r2, #24]
 8015b7a:	4323      	orrs	r3, r4
 8015b7c:	f420 305e 	bic.w	r0, r0, #227328	; 0x37800
 8015b80:	432b      	orrs	r3, r5
 8015b82:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8015b86:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 8015b8a:	4303      	orrs	r3, r0
 8015b8c:	610b      	str	r3, [r1, #16]
 8015b8e:	6853      	ldr	r3, [r2, #4]
 8015b90:	b983      	cbnz	r3, 8015bb4 <dma_single_data_mode_init+0x5e>
 8015b92:	690b      	ldr	r3, [r1, #16]
 8015b94:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8015b98:	610b      	str	r3, [r1, #16]
 8015b9a:	68d3      	ldr	r3, [r2, #12]
 8015b9c:	b993      	cbnz	r3, 8015bc4 <dma_single_data_mode_init+0x6e>
 8015b9e:	690b      	ldr	r3, [r1, #16]
 8015ba0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8015ba4:	610b      	str	r3, [r1, #16]
 8015ba6:	6953      	ldr	r3, [r2, #20]
 8015ba8:	b983      	cbnz	r3, 8015bcc <dma_single_data_mode_init+0x76>
 8015baa:	690b      	ldr	r3, [r1, #16]
 8015bac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015bb0:	610b      	str	r3, [r1, #16]
 8015bb2:	bd30      	pop	{r4, r5, pc}
 8015bb4:	2b01      	cmp	r3, #1
 8015bb6:	690b      	ldr	r3, [r1, #16]
 8015bb8:	bf0c      	ite	eq
 8015bba:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 8015bbe:	f443 4300 	orrne.w	r3, r3, #32768	; 0x8000
 8015bc2:	e7e9      	b.n	8015b98 <dma_single_data_mode_init+0x42>
 8015bc4:	690b      	ldr	r3, [r1, #16]
 8015bc6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8015bca:	e7eb      	b.n	8015ba4 <dma_single_data_mode_init+0x4e>
 8015bcc:	690b      	ldr	r3, [r1, #16]
 8015bce:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015bd2:	e7ed      	b.n	8015bb0 <dma_single_data_mode_init+0x5a>

08015bd4 <dma_circulation_disable>:
 8015bd4:	2318      	movs	r3, #24
 8015bd6:	4359      	muls	r1, r3
 8015bd8:	3010      	adds	r0, #16
 8015bda:	580b      	ldr	r3, [r1, r0]
 8015bdc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015be0:	500b      	str	r3, [r1, r0]
 8015be2:	4770      	bx	lr

08015be4 <dma_channel_subperipheral_select>:
 8015be4:	2318      	movs	r3, #24
 8015be6:	4359      	muls	r1, r3
 8015be8:	3010      	adds	r0, #16
 8015bea:	580b      	ldr	r3, [r1, r0]
 8015bec:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 8015bf0:	ea43 6242 	orr.w	r2, r3, r2, lsl #25
 8015bf4:	500a      	str	r2, [r1, r0]
 8015bf6:	4770      	bx	lr

08015bf8 <dma_flag_clear>:
 8015bf8:	2903      	cmp	r1, #3
 8015bfa:	b530      	push	{r4, r5, lr}
 8015bfc:	d809      	bhi.n	8015c12 <dma_flag_clear+0x1a>
 8015bfe:	2506      	movs	r5, #6
 8015c00:	084c      	lsrs	r4, r1, #1
 8015c02:	4369      	muls	r1, r5
 8015c04:	6883      	ldr	r3, [r0, #8]
 8015c06:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8015c0a:	408a      	lsls	r2, r1
 8015c0c:	4313      	orrs	r3, r2
 8015c0e:	6083      	str	r3, [r0, #8]
 8015c10:	bd30      	pop	{r4, r5, pc}
 8015c12:	3904      	subs	r1, #4
 8015c14:	b2cb      	uxtb	r3, r1
 8015c16:	2506      	movs	r5, #6
 8015c18:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8015c1c:	436b      	muls	r3, r5
 8015c1e:	68c4      	ldr	r4, [r0, #12]
 8015c20:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8015c24:	409a      	lsls	r2, r3
 8015c26:	4322      	orrs	r2, r4
 8015c28:	60c2      	str	r2, [r0, #12]
 8015c2a:	e7f1      	b.n	8015c10 <dma_flag_clear+0x18>

08015c2c <dma_interrupt_flag_clear>:
 8015c2c:	f7ff bfe4 	b.w	8015bf8 <dma_flag_clear>

08015c30 <enet_delay>:
 8015c30:	b082      	sub	sp, #8
 8015c32:	2300      	movs	r3, #0
 8015c34:	9301      	str	r3, [sp, #4]
 8015c36:	9001      	str	r0, [sp, #4]
 8015c38:	9b01      	ldr	r3, [sp, #4]
 8015c3a:	b90b      	cbnz	r3, 8015c40 <enet_delay+0x10>
 8015c3c:	b002      	add	sp, #8
 8015c3e:	4770      	bx	lr
 8015c40:	9b01      	ldr	r3, [sp, #4]
 8015c42:	3b01      	subs	r3, #1
 8015c44:	9301      	str	r3, [sp, #4]
 8015c46:	e7f7      	b.n	8015c38 <enet_delay+0x8>

08015c48 <enet_software_reset>:
 8015c48:	4b07      	ldr	r3, [pc, #28]	; (8015c68 <enet_software_reset+0x20>)
 8015c4a:	681a      	ldr	r2, [r3, #0]
 8015c4c:	f042 0201 	orr.w	r2, r2, #1
 8015c50:	601a      	str	r2, [r3, #0]
 8015c52:	4a06      	ldr	r2, [pc, #24]	; (8015c6c <enet_software_reset+0x24>)
 8015c54:	6819      	ldr	r1, [r3, #0]
 8015c56:	07c9      	lsls	r1, r1, #31
 8015c58:	d501      	bpl.n	8015c5e <enet_software_reset+0x16>
 8015c5a:	3a01      	subs	r2, #1
 8015c5c:	d1fa      	bne.n	8015c54 <enet_software_reset+0xc>
 8015c5e:	6818      	ldr	r0, [r3, #0]
 8015c60:	43c0      	mvns	r0, r0
 8015c62:	f000 0001 	and.w	r0, r0, #1
 8015c66:	4770      	bx	lr
 8015c68:	40029000 	andmi	r9, r2, r0
 8015c6c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015c70 <enet_descriptors_chain_init>:
 8015c70:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8015c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c76:	4a19      	ldr	r2, [pc, #100]	; (8015cdc <enet_descriptors_chain_init+0x6c>)
 8015c78:	d125      	bne.n	8015cc6 <enet_descriptors_chain_init+0x56>
 8015c7a:	4b19      	ldr	r3, [pc, #100]	; (8015ce0 <enet_descriptors_chain_init+0x70>)
 8015c7c:	6113      	str	r3, [r2, #16]
 8015c7e:	4a19      	ldr	r2, [pc, #100]	; (8015ce4 <enet_descriptors_chain_init+0x74>)
 8015c80:	4c19      	ldr	r4, [pc, #100]	; (8015ce8 <enet_descriptors_chain_init+0x78>)
 8015c82:	6013      	str	r3, [r2, #0]
 8015c84:	2500      	movs	r5, #0
 8015c86:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8015c8a:	2008      	movs	r0, #8
 8015c8c:	4917      	ldr	r1, [pc, #92]	; (8015cec <enet_descriptors_chain_init+0x7c>)
 8015c8e:	2200      	movs	r2, #0
 8015c90:	600a      	str	r2, [r1, #0]
 8015c92:	4917      	ldr	r1, [pc, #92]	; (8015cf0 <enet_descriptors_chain_init+0x80>)
 8015c94:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8015c98:	600a      	str	r2, [r1, #0]
 8015c9a:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8015c9e:	f103 0110 	add.w	r1, r3, #16
 8015ca2:	fb0e 4702 	mla	r7, lr, r2, r4
 8015ca6:	f841 7c08 	str.w	r7, [r1, #-8]
 8015caa:	4594      	cmp	ip, r2
 8015cac:	bf94      	ite	ls
 8015cae:	461f      	movls	r7, r3
 8015cb0:	460f      	movhi	r7, r1
 8015cb2:	3201      	adds	r2, #1
 8015cb4:	4290      	cmp	r0, r2
 8015cb6:	e941 6504 	strd	r6, r5, [r1, #-16]
 8015cba:	f841 7c04 	str.w	r7, [r1, #-4]
 8015cbe:	f101 0110 	add.w	r1, r1, #16
 8015cc2:	d1ee      	bne.n	8015ca2 <enet_descriptors_chain_init+0x32>
 8015cc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015cc6:	4b0b      	ldr	r3, [pc, #44]	; (8015cf4 <enet_descriptors_chain_init+0x84>)
 8015cc8:	60d3      	str	r3, [r2, #12]
 8015cca:	4a0b      	ldr	r2, [pc, #44]	; (8015cf8 <enet_descriptors_chain_init+0x88>)
 8015ccc:	4c0b      	ldr	r4, [pc, #44]	; (8015cfc <enet_descriptors_chain_init+0x8c>)
 8015cce:	6013      	str	r3, [r2, #0]
 8015cd0:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8015cd4:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8015cd8:	2046      	movs	r0, #70	; 0x46
 8015cda:	e7d7      	b.n	8015c8c <enet_descriptors_chain_init+0x1c>
 8015cdc:	40029000 	andmi	r9, r2, r0
 8015ce0:	2002d29c 	mulcs	r2, ip, r2
 8015ce4:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8015ce8:	2002a2fc 	strdcs	sl, [r2], -ip
 8015cec:	2000fd98 	mulcs	r0, r8, sp
 8015cf0:	2000fd9c 	mulcs	r0, ip, sp
 8015cf4:	20029e9c 	mulcs	r2, ip, lr
 8015cf8:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8015cfc:	2000fde4 	andcs	pc, r0, r4, ror #27

08015d00 <enet_frame_receive>:
 8015d00:	4b22      	ldr	r3, [pc, #136]	; (8015d8c <enet_frame_receive+0x8c>)
 8015d02:	681a      	ldr	r2, [r3, #0]
 8015d04:	6812      	ldr	r2, [r2, #0]
 8015d06:	2a00      	cmp	r2, #0
 8015d08:	b570      	push	{r4, r5, r6, lr}
 8015d0a:	db3c      	blt.n	8015d86 <enet_frame_receive+0x86>
 8015d0c:	b970      	cbnz	r0, 8015d2c <enet_frame_receive+0x2c>
 8015d0e:	681a      	ldr	r2, [r3, #0]
 8015d10:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8015d14:	6011      	str	r1, [r2, #0]
 8015d16:	491e      	ldr	r1, [pc, #120]	; (8015d90 <enet_frame_receive+0x90>)
 8015d18:	6948      	ldr	r0, [r1, #20]
 8015d1a:	0600      	lsls	r0, r0, #24
 8015d1c:	d422      	bmi.n	8015d64 <enet_frame_receive+0x64>
 8015d1e:	6851      	ldr	r1, [r2, #4]
 8015d20:	0448      	lsls	r0, r1, #17
 8015d22:	d524      	bpl.n	8015d6e <enet_frame_receive+0x6e>
 8015d24:	68d2      	ldr	r2, [r2, #12]
 8015d26:	601a      	str	r2, [r3, #0]
 8015d28:	2001      	movs	r0, #1
 8015d2a:	bd70      	pop	{r4, r5, r6, pc}
 8015d2c:	f402 4403 	and.w	r4, r2, #33536	; 0x8300
 8015d30:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8015d34:	d127      	bne.n	8015d86 <enet_frame_receive+0x86>
 8015d36:	4e17      	ldr	r6, [pc, #92]	; (8015d94 <enet_frame_receive+0x94>)
 8015d38:	6836      	ldr	r6, [r6, #0]
 8015d3a:	f3c2 450d 	ubfx	r5, r2, #16, #14
 8015d3e:	01b6      	lsls	r6, r6, #6
 8015d40:	f1a5 0404 	sub.w	r4, r5, #4
 8015d44:	d503      	bpl.n	8015d4e <enet_frame_receive+0x4e>
 8015d46:	f012 0f20 	tst.w	r2, #32
 8015d4a:	bf18      	it	ne
 8015d4c:	462c      	movne	r4, r5
 8015d4e:	428c      	cmp	r4, r1
 8015d50:	d819      	bhi.n	8015d86 <enet_frame_receive+0x86>
 8015d52:	2200      	movs	r2, #0
 8015d54:	42a2      	cmp	r2, r4
 8015d56:	6819      	ldr	r1, [r3, #0]
 8015d58:	d0d9      	beq.n	8015d0e <enet_frame_receive+0xe>
 8015d5a:	6889      	ldr	r1, [r1, #8]
 8015d5c:	5c51      	ldrb	r1, [r2, r1]
 8015d5e:	5481      	strb	r1, [r0, r2]
 8015d60:	3201      	adds	r2, #1
 8015d62:	e7f7      	b.n	8015d54 <enet_frame_receive+0x54>
 8015d64:	2080      	movs	r0, #128	; 0x80
 8015d66:	6148      	str	r0, [r1, #20]
 8015d68:	2000      	movs	r0, #0
 8015d6a:	6088      	str	r0, [r1, #8]
 8015d6c:	e7d7      	b.n	8015d1e <enet_frame_receive+0x1e>
 8015d6e:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8015d72:	4907      	ldr	r1, [pc, #28]	; (8015d90 <enet_frame_receive+0x90>)
 8015d74:	bf09      	itett	eq
 8015d76:	6809      	ldreq	r1, [r1, #0]
 8015d78:	68ca      	ldrne	r2, [r1, #12]
 8015d7a:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8015d7e:	3210      	addeq	r2, #16
 8015d80:	bf08      	it	eq
 8015d82:	1852      	addeq	r2, r2, r1
 8015d84:	e7cf      	b.n	8015d26 <enet_frame_receive+0x26>
 8015d86:	2000      	movs	r0, #0
 8015d88:	e7cf      	b.n	8015d2a <enet_frame_receive+0x2a>
 8015d8a:	bf00      	nop
 8015d8c:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8015d90:	40029000 	andmi	r9, r2, r0
 8015d94:	40028000 	andmi	r8, r2, r0

08015d98 <enet_frame_transmit>:
 8015d98:	4a1e      	ldr	r2, [pc, #120]	; (8015e14 <enet_frame_transmit+0x7c>)
 8015d9a:	6813      	ldr	r3, [r2, #0]
 8015d9c:	681b      	ldr	r3, [r3, #0]
 8015d9e:	2b00      	cmp	r3, #0
 8015da0:	b530      	push	{r4, r5, lr}
 8015da2:	db34      	blt.n	8015e0e <enet_frame_transmit+0x76>
 8015da4:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8015da8:	4299      	cmp	r1, r3
 8015daa:	d830      	bhi.n	8015e0e <enet_frame_transmit+0x76>
 8015dac:	b9e8      	cbnz	r0, 8015dea <enet_frame_transmit+0x52>
 8015dae:	6813      	ldr	r3, [r2, #0]
 8015db0:	4819      	ldr	r0, [pc, #100]	; (8015e18 <enet_frame_transmit+0x80>)
 8015db2:	6059      	str	r1, [r3, #4]
 8015db4:	6819      	ldr	r1, [r3, #0]
 8015db6:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8015dba:	6019      	str	r1, [r3, #0]
 8015dbc:	6941      	ldr	r1, [r0, #20]
 8015dbe:	6944      	ldr	r4, [r0, #20]
 8015dc0:	f001 0104 	and.w	r1, r1, #4
 8015dc4:	f004 0420 	and.w	r4, r4, #32
 8015dc8:	4321      	orrs	r1, r4
 8015dca:	d110      	bne.n	8015dee <enet_frame_transmit+0x56>
 8015dcc:	6819      	ldr	r1, [r3, #0]
 8015dce:	02c8      	lsls	r0, r1, #11
 8015dd0:	d511      	bpl.n	8015df6 <enet_frame_transmit+0x5e>
 8015dd2:	68db      	ldr	r3, [r3, #12]
 8015dd4:	6013      	str	r3, [r2, #0]
 8015dd6:	2001      	movs	r0, #1
 8015dd8:	bd30      	pop	{r4, r5, pc}
 8015dda:	68a4      	ldr	r4, [r4, #8]
 8015ddc:	5cc5      	ldrb	r5, [r0, r3]
 8015dde:	551d      	strb	r5, [r3, r4]
 8015de0:	3301      	adds	r3, #1
 8015de2:	428b      	cmp	r3, r1
 8015de4:	6814      	ldr	r4, [r2, #0]
 8015de6:	d1f8      	bne.n	8015dda <enet_frame_transmit+0x42>
 8015de8:	e7e1      	b.n	8015dae <enet_frame_transmit+0x16>
 8015dea:	2300      	movs	r3, #0
 8015dec:	e7f9      	b.n	8015de2 <enet_frame_transmit+0x4a>
 8015dee:	6141      	str	r1, [r0, #20]
 8015df0:	2100      	movs	r1, #0
 8015df2:	6041      	str	r1, [r0, #4]
 8015df4:	e7ea      	b.n	8015dcc <enet_frame_transmit+0x34>
 8015df6:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8015dfa:	4907      	ldr	r1, [pc, #28]	; (8015e18 <enet_frame_transmit+0x80>)
 8015dfc:	bf09      	itett	eq
 8015dfe:	6809      	ldreq	r1, [r1, #0]
 8015e00:	690b      	ldrne	r3, [r1, #16]
 8015e02:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8015e06:	3310      	addeq	r3, #16
 8015e08:	bf08      	it	eq
 8015e0a:	185b      	addeq	r3, r3, r1
 8015e0c:	e7e2      	b.n	8015dd4 <enet_frame_transmit+0x3c>
 8015e0e:	2000      	movs	r0, #0
 8015e10:	e7e2      	b.n	8015dd8 <enet_frame_transmit+0x40>
 8015e12:	bf00      	nop
 8015e14:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8015e18:	40029000 	andmi	r9, r2, r0

08015e1c <enet_transmit_checksum_config>:
 8015e1c:	6803      	ldr	r3, [r0, #0]
 8015e1e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8015e22:	430b      	orrs	r3, r1
 8015e24:	6003      	str	r3, [r0, #0]
 8015e26:	4770      	bx	lr

08015e28 <enet_mac_address_set>:
 8015e28:	4b03      	ldr	r3, [pc, #12]	; (8015e38 <enet_mac_address_set+0x10>)
 8015e2a:	888a      	ldrh	r2, [r1, #4]
 8015e2c:	50c2      	str	r2, [r0, r3]
 8015e2e:	3304      	adds	r3, #4
 8015e30:	680a      	ldr	r2, [r1, #0]
 8015e32:	50c2      	str	r2, [r0, r3]
 8015e34:	4770      	bx	lr
 8015e36:	bf00      	nop
 8015e38:	40028040 	andmi	r8, r2, r0, asr #32

08015e3c <enet_rx_enable>:
 8015e3c:	4a05      	ldr	r2, [pc, #20]	; (8015e54 <enet_rx_enable+0x18>)
 8015e3e:	6813      	ldr	r3, [r2, #0]
 8015e40:	f043 0304 	orr.w	r3, r3, #4
 8015e44:	6013      	str	r3, [r2, #0]
 8015e46:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8015e4a:	6993      	ldr	r3, [r2, #24]
 8015e4c:	f043 0302 	orr.w	r3, r3, #2
 8015e50:	6193      	str	r3, [r2, #24]
 8015e52:	4770      	bx	lr
 8015e54:	40028000 	andmi	r8, r2, r0

08015e58 <enet_phy_write_read>:
 8015e58:	b530      	push	{r4, r5, lr}
 8015e5a:	4d12      	ldr	r5, [pc, #72]	; (8015ea4 <enet_phy_write_read+0x4c>)
 8015e5c:	4604      	mov	r4, r0
 8015e5e:	6928      	ldr	r0, [r5, #16]
 8015e60:	0192      	lsls	r2, r2, #6
 8015e62:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8015e66:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8015e6a:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8015e6e:	4302      	orrs	r2, r0
 8015e70:	02c9      	lsls	r1, r1, #11
 8015e72:	b289      	uxth	r1, r1
 8015e74:	4322      	orrs	r2, r4
 8015e76:	430a      	orrs	r2, r1
 8015e78:	2c02      	cmp	r4, #2
 8015e7a:	bf04      	itt	eq
 8015e7c:	8819      	ldrheq	r1, [r3, #0]
 8015e7e:	6169      	streq	r1, [r5, #20]
 8015e80:	f042 0201 	orr.w	r2, r2, #1
 8015e84:	612a      	str	r2, [r5, #16]
 8015e86:	4907      	ldr	r1, [pc, #28]	; (8015ea4 <enet_phy_write_read+0x4c>)
 8015e88:	4a07      	ldr	r2, [pc, #28]	; (8015ea8 <enet_phy_write_read+0x50>)
 8015e8a:	6908      	ldr	r0, [r1, #16]
 8015e8c:	07c0      	lsls	r0, r0, #31
 8015e8e:	d501      	bpl.n	8015e94 <enet_phy_write_read+0x3c>
 8015e90:	3a01      	subs	r2, #1
 8015e92:	d1fa      	bne.n	8015e8a <enet_phy_write_read+0x32>
 8015e94:	690a      	ldr	r2, [r1, #16]
 8015e96:	43d2      	mvns	r2, r2
 8015e98:	f002 0001 	and.w	r0, r2, #1
 8015e9c:	b90c      	cbnz	r4, 8015ea2 <enet_phy_write_read+0x4a>
 8015e9e:	694a      	ldr	r2, [r1, #20]
 8015ea0:	801a      	strh	r2, [r3, #0]
 8015ea2:	bd30      	pop	{r4, r5, pc}
 8015ea4:	40028000 	andmi	r8, r2, r0
 8015ea8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015eac <enet_phy_config>:
 8015eac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015eae:	4d26      	ldr	r5, [pc, #152]	; (8015f48 <enet_phy_config+0x9c>)
 8015eb0:	2001      	movs	r0, #1
 8015eb2:	692c      	ldr	r4, [r5, #16]
 8015eb4:	f000 fb9e 	bl	80165f4 <rcu_clock_freq_get>
 8015eb8:	4b24      	ldr	r3, [pc, #144]	; (8015f4c <enet_phy_config+0xa0>)
 8015eba:	4a25      	ldr	r2, [pc, #148]	; (8015f50 <enet_phy_config+0xa4>)
 8015ebc:	4403      	add	r3, r0
 8015ebe:	4293      	cmp	r3, r2
 8015ec0:	f024 041c 	bic.w	r4, r4, #28
 8015ec4:	d21f      	bcs.n	8015f06 <enet_phy_config+0x5a>
 8015ec6:	f044 0408 	orr.w	r4, r4, #8
 8015eca:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015ece:	612c      	str	r4, [r5, #16]
 8015ed0:	2200      	movs	r2, #0
 8015ed2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ed6:	2101      	movs	r1, #1
 8015ed8:	f10d 0306 	add.w	r3, sp, #6
 8015edc:	2002      	movs	r0, #2
 8015ede:	f7ff ffbb 	bl	8015e58 <enet_phy_write_read>
 8015ee2:	b350      	cbz	r0, 8015f3a <enet_phy_config+0x8e>
 8015ee4:	481b      	ldr	r0, [pc, #108]	; (8015f54 <enet_phy_config+0xa8>)
 8015ee6:	2200      	movs	r2, #0
 8015ee8:	f7ff fea2 	bl	8015c30 <enet_delay>
 8015eec:	2101      	movs	r1, #1
 8015eee:	f10d 0306 	add.w	r3, sp, #6
 8015ef2:	4610      	mov	r0, r2
 8015ef4:	f7ff ffb0 	bl	8015e58 <enet_phy_write_read>
 8015ef8:	b1f8      	cbz	r0, 8015f3a <enet_phy_config+0x8e>
 8015efa:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015efe:	43c0      	mvns	r0, r0
 8015f00:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8015f04:	e01a      	b.n	8015f3c <enet_phy_config+0x90>
 8015f06:	4b14      	ldr	r3, [pc, #80]	; (8015f58 <enet_phy_config+0xac>)
 8015f08:	4a14      	ldr	r2, [pc, #80]	; (8015f5c <enet_phy_config+0xb0>)
 8015f0a:	4403      	add	r3, r0
 8015f0c:	4293      	cmp	r3, r2
 8015f0e:	d802      	bhi.n	8015f16 <enet_phy_config+0x6a>
 8015f10:	f044 040c 	orr.w	r4, r4, #12
 8015f14:	e7d9      	b.n	8015eca <enet_phy_config+0x1e>
 8015f16:	4b12      	ldr	r3, [pc, #72]	; (8015f60 <enet_phy_config+0xb4>)
 8015f18:	4a12      	ldr	r2, [pc, #72]	; (8015f64 <enet_phy_config+0xb8>)
 8015f1a:	4403      	add	r3, r0
 8015f1c:	4293      	cmp	r3, r2
 8015f1e:	d3d4      	bcc.n	8015eca <enet_phy_config+0x1e>
 8015f20:	4b11      	ldr	r3, [pc, #68]	; (8015f68 <enet_phy_config+0xbc>)
 8015f22:	4a12      	ldr	r2, [pc, #72]	; (8015f6c <enet_phy_config+0xc0>)
 8015f24:	4403      	add	r3, r0
 8015f26:	4293      	cmp	r3, r2
 8015f28:	d802      	bhi.n	8015f30 <enet_phy_config+0x84>
 8015f2a:	f044 0404 	orr.w	r4, r4, #4
 8015f2e:	e7cc      	b.n	8015eca <enet_phy_config+0x1e>
 8015f30:	4b0f      	ldr	r3, [pc, #60]	; (8015f70 <enet_phy_config+0xc4>)
 8015f32:	4a10      	ldr	r2, [pc, #64]	; (8015f74 <enet_phy_config+0xc8>)
 8015f34:	4403      	add	r3, r0
 8015f36:	4293      	cmp	r3, r2
 8015f38:	d902      	bls.n	8015f40 <enet_phy_config+0x94>
 8015f3a:	2000      	movs	r0, #0
 8015f3c:	b003      	add	sp, #12
 8015f3e:	bd30      	pop	{r4, r5, pc}
 8015f40:	f044 0410 	orr.w	r4, r4, #16
 8015f44:	e7c1      	b.n	8015eca <enet_phy_config+0x1e>
 8015f46:	bf00      	nop
 8015f48:	40028000 	andmi	r8, r2, r0
 8015f4c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8015f50:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8015f54:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015f58:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8015f5c:	017d783f 	cmneq	sp, pc, lsr r8
 8015f60:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8015f64:	02625a00 	rsbeq	r5, r2, #0, 20
 8015f68:	fa0a1f00 	blx	829db70 <__exidx_end+0x282d00>
 8015f6c:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8015f70:	f70f2e80 			; <UNDEFINED> instruction: 0xf70f2e80
 8015f74:	02faf080 	rscseq	pc, sl, #128	; 0x80

08015f78 <enet_init>:
 8015f78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015f7a:	2300      	movs	r3, #0
 8015f7c:	4604      	mov	r4, r0
 8015f7e:	460d      	mov	r5, r1
 8015f80:	4616      	mov	r6, r2
 8015f82:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015f86:	f7ff ff91 	bl	8015eac <enet_phy_config>
 8015f8a:	2800      	cmp	r0, #0
 8015f8c:	d032      	beq.n	8015ff4 <enet_init+0x7c>
 8015f8e:	4b39      	ldr	r3, [pc, #228]	; (8016074 <enet_init+0xfc>)
 8015f90:	4a39      	ldr	r2, [pc, #228]	; (8016078 <enet_init+0x100>)
 8015f92:	6819      	ldr	r1, [r3, #0]
 8015f94:	400a      	ands	r2, r1
 8015f96:	601a      	str	r2, [r3, #0]
 8015f98:	2200      	movs	r2, #0
 8015f9a:	605a      	str	r2, [r3, #4]
 8015f9c:	609a      	str	r2, [r3, #8]
 8015f9e:	60da      	str	r2, [r3, #12]
 8015fa0:	6999      	ldr	r1, [r3, #24]
 8015fa2:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8015fa6:	0409      	lsls	r1, r1, #16
 8015fa8:	0c09      	lsrs	r1, r1, #16
 8015faa:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8015fae:	6199      	str	r1, [r3, #24]
 8015fb0:	4932      	ldr	r1, [pc, #200]	; (801607c <enet_init+0x104>)
 8015fb2:	61da      	str	r2, [r3, #28]
 8015fb4:	6988      	ldr	r0, [r1, #24]
 8015fb6:	4b32      	ldr	r3, [pc, #200]	; (8016080 <enet_init+0x108>)
 8015fb8:	4003      	ands	r3, r0
 8015fba:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015fbe:	618b      	str	r3, [r1, #24]
 8015fc0:	680b      	ldr	r3, [r1, #0]
 8015fc2:	4b30      	ldr	r3, [pc, #192]	; (8016084 <enet_init+0x10c>)
 8015fc4:	600b      	str	r3, [r1, #0]
 8015fc6:	2c01      	cmp	r4, #1
 8015fc8:	d01e      	beq.n	8016008 <enet_init+0x90>
 8015fca:	08e3      	lsrs	r3, r4, #3
 8015fcc:	0861      	lsrs	r1, r4, #1
 8015fce:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015fd2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015fd6:	430b      	orrs	r3, r1
 8015fd8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015fdc:	2101      	movs	r1, #1
 8015fde:	f10d 0306 	add.w	r3, sp, #6
 8015fe2:	2002      	movs	r0, #2
 8015fe4:	f7ff ff38 	bl	8015e58 <enet_phy_write_read>
 8015fe8:	b158      	cbz	r0, 8016002 <enet_init+0x8a>
 8015fea:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8015fee:	f7ff fe1f 	bl	8015c30 <enet_delay>
 8015ff2:	e05e      	b.n	80160b2 <enet_init+0x13a>
 8015ff4:	4824      	ldr	r0, [pc, #144]	; (8016088 <enet_init+0x110>)
 8015ff6:	f7ff fe1b 	bl	8015c30 <enet_delay>
 8015ffa:	f7ff ff57 	bl	8015eac <enet_phy_config>
 8015ffe:	2800      	cmp	r0, #0
 8016000:	d1c5      	bne.n	8015f8e <enet_init+0x16>
 8016002:	2000      	movs	r0, #0
 8016004:	b003      	add	sp, #12
 8016006:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016008:	4f20      	ldr	r7, [pc, #128]	; (801608c <enet_init+0x114>)
 801600a:	4614      	mov	r4, r2
 801600c:	2201      	movs	r2, #1
 801600e:	4611      	mov	r1, r2
 8016010:	f10d 0306 	add.w	r3, sp, #6
 8016014:	2000      	movs	r0, #0
 8016016:	f7ff ff1f 	bl	8015e58 <enet_phy_write_read>
 801601a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801601e:	f002 0204 	and.w	r2, r2, #4
 8016022:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016026:	3401      	adds	r4, #1
 8016028:	b912      	cbnz	r2, 8016030 <enet_init+0xb8>
 801602a:	42bc      	cmp	r4, r7
 801602c:	d1ee      	bne.n	801600c <enet_init+0x94>
 801602e:	e7e8      	b.n	8016002 <enet_init+0x8a>
 8016030:	42bc      	cmp	r4, r7
 8016032:	d0e6      	beq.n	8016002 <enet_init+0x8a>
 8016034:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8016038:	f8ad 2006 	strh.w	r2, [sp, #6]
 801603c:	2101      	movs	r1, #1
 801603e:	2200      	movs	r2, #0
 8016040:	2002      	movs	r0, #2
 8016042:	f7ff ff09 	bl	8015e58 <enet_phy_write_read>
 8016046:	2800      	cmp	r0, #0
 8016048:	d0db      	beq.n	8016002 <enet_init+0x8a>
 801604a:	4f10      	ldr	r7, [pc, #64]	; (801608c <enet_init+0x114>)
 801604c:	2400      	movs	r4, #0
 801604e:	2201      	movs	r2, #1
 8016050:	4611      	mov	r1, r2
 8016052:	f10d 0306 	add.w	r3, sp, #6
 8016056:	2000      	movs	r0, #0
 8016058:	f7ff fefe 	bl	8015e58 <enet_phy_write_read>
 801605c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8016060:	f002 0220 	and.w	r2, r2, #32
 8016064:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016068:	3401      	adds	r4, #1
 801606a:	b98a      	cbnz	r2, 8016090 <enet_init+0x118>
 801606c:	42bc      	cmp	r4, r7
 801606e:	d1ee      	bne.n	801604e <enet_init+0xd6>
 8016070:	e7c7      	b.n	8016002 <enet_init+0x8a>
 8016072:	bf00      	nop
 8016074:	40028000 	andmi	r8, r2, r0
 8016078:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 801607c:	40029000 	andmi	r9, r2, r0
 8016080:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8016084:	02c16000 	sbceq	r6, r1, #0
 8016088:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 801608c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8016090:	42bc      	cmp	r4, r7
 8016092:	d0b6      	beq.n	8016002 <enet_init+0x8a>
 8016094:	2101      	movs	r1, #1
 8016096:	2210      	movs	r2, #16
 8016098:	2000      	movs	r0, #0
 801609a:	f7ff fedd 	bl	8015e58 <enet_phy_write_read>
 801609e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80160a2:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80160a6:	0799      	lsls	r1, r3, #30
 80160a8:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80160ac:	d401      	bmi.n	80160b2 <enet_init+0x13a>
 80160ae:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80160b2:	4b69      	ldr	r3, [pc, #420]	; (8016258 <enet_init+0x2e0>)
 80160b4:	681a      	ldr	r2, [r3, #0]
 80160b6:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80160ba:	4314      	orrs	r4, r2
 80160bc:	056a      	lsls	r2, r5, #21
 80160be:	601c      	str	r4, [r3, #0]
 80160c0:	d50b      	bpl.n	80160da <enet_init+0x162>
 80160c2:	681a      	ldr	r2, [r3, #0]
 80160c4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80160c8:	601a      	str	r2, [r3, #0]
 80160ca:	4a64      	ldr	r2, [pc, #400]	; (801625c <enet_init+0x2e4>)
 80160cc:	6993      	ldr	r3, [r2, #24]
 80160ce:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80160d2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80160d6:	431d      	orrs	r5, r3
 80160d8:	6195      	str	r5, [r2, #24]
 80160da:	485f      	ldr	r0, [pc, #380]	; (8016258 <enet_init+0x2e0>)
 80160dc:	6843      	ldr	r3, [r0, #4]
 80160de:	431e      	orrs	r6, r3
 80160e0:	4b5f      	ldr	r3, [pc, #380]	; (8016260 <enet_init+0x2e8>)
 80160e2:	6046      	str	r6, [r0, #4]
 80160e4:	681a      	ldr	r2, [r3, #0]
 80160e6:	07d7      	lsls	r7, r2, #31
 80160e8:	d513      	bpl.n	8016112 <enet_init+0x19a>
 80160ea:	6801      	ldr	r1, [r0, #0]
 80160ec:	685a      	ldr	r2, [r3, #4]
 80160ee:	4c5d      	ldr	r4, [pc, #372]	; (8016264 <enet_init+0x2ec>)
 80160f0:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
 80160f4:	4014      	ands	r4, r2
 80160f6:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80160fa:	4321      	orrs	r1, r4
 80160fc:	6001      	str	r1, [r0, #0]
 80160fe:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 8016102:	0892      	lsrs	r2, r2, #2
 8016104:	6981      	ldr	r1, [r0, #24]
 8016106:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 801610a:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 801610e:	430a      	orrs	r2, r1
 8016110:	6182      	str	r2, [r0, #24]
 8016112:	681a      	ldr	r2, [r3, #0]
 8016114:	0796      	lsls	r6, r2, #30
 8016116:	d508      	bpl.n	801612a <enet_init+0x1b2>
 8016118:	4950      	ldr	r1, [pc, #320]	; (801625c <enet_init+0x2e4>)
 801611a:	6898      	ldr	r0, [r3, #8]
 801611c:	680a      	ldr	r2, [r1, #0]
 801611e:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 8016122:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8016126:	4302      	orrs	r2, r0
 8016128:	600a      	str	r2, [r1, #0]
 801612a:	681a      	ldr	r2, [r3, #0]
 801612c:	0755      	lsls	r5, r2, #29
 801612e:	d508      	bpl.n	8016142 <enet_init+0x1ca>
 8016130:	494a      	ldr	r1, [pc, #296]	; (801625c <enet_init+0x2e4>)
 8016132:	68d8      	ldr	r0, [r3, #12]
 8016134:	680a      	ldr	r2, [r1, #0]
 8016136:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 801613a:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 801613e:	4302      	orrs	r2, r0
 8016140:	600a      	str	r2, [r1, #0]
 8016142:	681a      	ldr	r2, [r3, #0]
 8016144:	0714      	lsls	r4, r2, #28
 8016146:	d508      	bpl.n	801615a <enet_init+0x1e2>
 8016148:	4944      	ldr	r1, [pc, #272]	; (801625c <enet_init+0x2e4>)
 801614a:	6918      	ldr	r0, [r3, #16]
 801614c:	680a      	ldr	r2, [r1, #0]
 801614e:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8016152:	f022 0202 	bic.w	r2, r2, #2
 8016156:	4302      	orrs	r2, r0
 8016158:	600a      	str	r2, [r1, #0]
 801615a:	681a      	ldr	r2, [r3, #0]
 801615c:	06d0      	lsls	r0, r2, #27
 801615e:	d506      	bpl.n	801616e <enet_init+0x1f6>
 8016160:	493e      	ldr	r1, [pc, #248]	; (801625c <enet_init+0x2e4>)
 8016162:	4a41      	ldr	r2, [pc, #260]	; (8016268 <enet_init+0x2f0>)
 8016164:	6988      	ldr	r0, [r1, #24]
 8016166:	4002      	ands	r2, r0
 8016168:	6958      	ldr	r0, [r3, #20]
 801616a:	4302      	orrs	r2, r0
 801616c:	618a      	str	r2, [r1, #24]
 801616e:	681a      	ldr	r2, [r3, #0]
 8016170:	0691      	lsls	r1, r2, #26
 8016172:	d511      	bpl.n	8016198 <enet_init+0x220>
 8016174:	4839      	ldr	r0, [pc, #228]	; (801625c <enet_init+0x2e4>)
 8016176:	699a      	ldr	r2, [r3, #24]
 8016178:	6981      	ldr	r1, [r0, #24]
 801617a:	4c3c      	ldr	r4, [pc, #240]	; (801626c <enet_init+0x2f4>)
 801617c:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8016180:	4014      	ands	r4, r2
 8016182:	f021 0104 	bic.w	r1, r1, #4
 8016186:	4321      	orrs	r1, r4
 8016188:	6181      	str	r1, [r0, #24]
 801618a:	6801      	ldr	r1, [r0, #0]
 801618c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8016190:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8016194:	430a      	orrs	r2, r1
 8016196:	6002      	str	r2, [r0, #0]
 8016198:	681a      	ldr	r2, [r3, #0]
 801619a:	0652      	lsls	r2, r2, #25
 801619c:	d506      	bpl.n	80161ac <enet_init+0x234>
 801619e:	492e      	ldr	r1, [pc, #184]	; (8016258 <enet_init+0x2e0>)
 80161a0:	69d8      	ldr	r0, [r3, #28]
 80161a2:	69ca      	ldr	r2, [r1, #28]
 80161a4:	0c52      	lsrs	r2, r2, #17
 80161a6:	0452      	lsls	r2, r2, #17
 80161a8:	4302      	orrs	r2, r0
 80161aa:	61ca      	str	r2, [r1, #28]
 80161ac:	681a      	ldr	r2, [r3, #0]
 80161ae:	0617      	lsls	r7, r2, #24
 80161b0:	d517      	bpl.n	80161e2 <enet_init+0x26a>
 80161b2:	4c29      	ldr	r4, [pc, #164]	; (8016258 <enet_init+0x2e0>)
 80161b4:	6a1a      	ldr	r2, [r3, #32]
 80161b6:	69a0      	ldr	r0, [r4, #24]
 80161b8:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80161bc:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80161c0:	0400      	lsls	r0, r0, #16
 80161c2:	0c00      	lsrs	r0, r0, #16
 80161c4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80161c8:	4301      	orrs	r1, r0
 80161ca:	4824      	ldr	r0, [pc, #144]	; (801625c <enet_init+0x2e4>)
 80161cc:	61a1      	str	r1, [r4, #24]
 80161ce:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80161d2:	0a12      	lsrs	r2, r2, #8
 80161d4:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80161d8:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80161dc:	430a      	orrs	r2, r1
 80161de:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80161e2:	681a      	ldr	r2, [r3, #0]
 80161e4:	05d6      	lsls	r6, r2, #23
 80161e6:	bf42      	ittt	mi
 80161e8:	4a1b      	ldrmi	r2, [pc, #108]	; (8016258 <enet_init+0x2e0>)
 80161ea:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80161ec:	6091      	strmi	r1, [r2, #8]
 80161ee:	681a      	ldr	r2, [r3, #0]
 80161f0:	0595      	lsls	r5, r2, #22
 80161f2:	bf42      	ittt	mi
 80161f4:	4a18      	ldrmi	r2, [pc, #96]	; (8016258 <enet_init+0x2e0>)
 80161f6:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80161f8:	60d1      	strmi	r1, [r2, #12]
 80161fa:	681a      	ldr	r2, [r3, #0]
 80161fc:	0554      	lsls	r4, r2, #21
 80161fe:	d508      	bpl.n	8016212 <enet_init+0x29a>
 8016200:	4915      	ldr	r1, [pc, #84]	; (8016258 <enet_init+0x2e0>)
 8016202:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8016204:	684a      	ldr	r2, [r1, #4]
 8016206:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 801620a:	f022 0206 	bic.w	r2, r2, #6
 801620e:	4302      	orrs	r2, r0
 8016210:	604a      	str	r2, [r1, #4]
 8016212:	681a      	ldr	r2, [r3, #0]
 8016214:	0510      	lsls	r0, r2, #20
 8016216:	d508      	bpl.n	801622a <enet_init+0x2b2>
 8016218:	490f      	ldr	r1, [pc, #60]	; (8016258 <enet_init+0x2e0>)
 801621a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 801621c:	680a      	ldr	r2, [r1, #0]
 801621e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8016222:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8016226:	4302      	orrs	r2, r0
 8016228:	600a      	str	r2, [r1, #0]
 801622a:	681a      	ldr	r2, [r3, #0]
 801622c:	04d1      	lsls	r1, r2, #19
 801622e:	d506      	bpl.n	801623e <enet_init+0x2c6>
 8016230:	4909      	ldr	r1, [pc, #36]	; (8016258 <enet_init+0x2e0>)
 8016232:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8016234:	680a      	ldr	r2, [r1, #0]
 8016236:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801623a:	4302      	orrs	r2, r0
 801623c:	600a      	str	r2, [r1, #0]
 801623e:	681a      	ldr	r2, [r3, #0]
 8016240:	0492      	lsls	r2, r2, #18
 8016242:	d506      	bpl.n	8016252 <enet_init+0x2da>
 8016244:	4904      	ldr	r1, [pc, #16]	; (8016258 <enet_init+0x2e0>)
 8016246:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016248:	680a      	ldr	r2, [r1, #0]
 801624a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801624e:	4313      	orrs	r3, r2
 8016250:	600b      	str	r3, [r1, #0]
 8016252:	2001      	movs	r0, #1
 8016254:	e6d6      	b.n	8016004 <enet_init+0x8c>
 8016256:	bf00      	nop
 8016258:	40028000 	andmi	r8, r2, r0
 801625c:	40029000 	andmi	r9, r2, r0
 8016260:	2000fda8 	andcs	pc, r0, r8, lsr #27
 8016264:	02000080 	andeq	r0, r0, #128	; 0x80
 8016268:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c
 801626c:	01000004 	tsteq	r0, r4

08016270 <enet_txfifo_flush>:
 8016270:	4b06      	ldr	r3, [pc, #24]	; (801628c <enet_txfifo_flush+0x1c>)
 8016272:	4807      	ldr	r0, [pc, #28]	; (8016290 <enet_txfifo_flush+0x20>)
 8016274:	699a      	ldr	r2, [r3, #24]
 8016276:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 801627a:	619a      	str	r2, [r3, #24]
 801627c:	699a      	ldr	r2, [r3, #24]
 801627e:	02d2      	lsls	r2, r2, #11
 8016280:	d502      	bpl.n	8016288 <enet_txfifo_flush+0x18>
 8016282:	3801      	subs	r0, #1
 8016284:	d1fa      	bne.n	801627c <enet_txfifo_flush+0xc>
 8016286:	4770      	bx	lr
 8016288:	2001      	movs	r0, #1
 801628a:	4770      	bx	lr
 801628c:	40029000 	andmi	r9, r2, r0
 8016290:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08016294 <enet_tx_enable>:
 8016294:	4a06      	ldr	r2, [pc, #24]	; (80162b0 <enet_tx_enable+0x1c>)
 8016296:	b508      	push	{r3, lr}
 8016298:	6813      	ldr	r3, [r2, #0]
 801629a:	f043 0308 	orr.w	r3, r3, #8
 801629e:	6013      	str	r3, [r2, #0]
 80162a0:	f7ff ffe6 	bl	8016270 <enet_txfifo_flush>
 80162a4:	4a03      	ldr	r2, [pc, #12]	; (80162b4 <enet_tx_enable+0x20>)
 80162a6:	6993      	ldr	r3, [r2, #24]
 80162a8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80162ac:	6193      	str	r3, [r2, #24]
 80162ae:	bd08      	pop	{r3, pc}
 80162b0:	40028000 	andmi	r8, r2, r0
 80162b4:	40029000 	andmi	r9, r2, r0

080162b8 <enet_enable>:
 80162b8:	b508      	push	{r3, lr}
 80162ba:	f7ff ffeb 	bl	8016294 <enet_tx_enable>
 80162be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80162c2:	f7ff bdbb 	b.w	8015e3c <enet_rx_enable>
	...

080162c8 <enet_desc_information_get>:
 80162c8:	2905      	cmp	r1, #5
 80162ca:	d820      	bhi.n	801630e <enet_desc_information_get+0x46>
 80162cc:	e8df f001 	tbb	[pc, r1]
 80162d0:	0309191b 	movweq	r1, #39195	; 0x991b
 80162d4:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 80162d8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80162dc:	4770      	bx	lr
 80162de:	88c0      	ldrh	r0, [r0, #6]
 80162e0:	e7fa      	b.n	80162d8 <enet_desc_information_get+0x10>
 80162e2:	6802      	ldr	r2, [r0, #0]
 80162e4:	f3c2 430d 	ubfx	r3, r2, #16, #14
 80162e8:	2b04      	cmp	r3, #4
 80162ea:	d913      	bls.n	8016314 <enet_desc_information_get+0x4c>
 80162ec:	490a      	ldr	r1, [pc, #40]	; (8016318 <enet_desc_information_get+0x50>)
 80162ee:	6809      	ldr	r1, [r1, #0]
 80162f0:	0189      	lsls	r1, r1, #6
 80162f2:	f1a3 0004 	sub.w	r0, r3, #4
 80162f6:	d50e      	bpl.n	8016316 <enet_desc_information_get+0x4e>
 80162f8:	f012 0f20 	tst.w	r2, #32
 80162fc:	bf18      	it	ne
 80162fe:	4618      	movne	r0, r3
 8016300:	4770      	bx	lr
 8016302:	6880      	ldr	r0, [r0, #8]
 8016304:	4770      	bx	lr
 8016306:	6800      	ldr	r0, [r0, #0]
 8016308:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 801630c:	4770      	bx	lr
 801630e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016312:	4770      	bx	lr
 8016314:	2000      	movs	r0, #0
 8016316:	4770      	bx	lr
 8016318:	40028000 	andmi	r8, r2, r0

0801631c <enet_rxframe_drop>:
 801631c:	4815      	ldr	r0, [pc, #84]	; (8016374 <enet_rxframe_drop+0x58>)
 801631e:	4916      	ldr	r1, [pc, #88]	; (8016378 <enet_rxframe_drop+0x5c>)
 8016320:	6802      	ldr	r2, [r0, #0]
 8016322:	b510      	push	{r4, lr}
 8016324:	6854      	ldr	r4, [r2, #4]
 8016326:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801632a:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801632e:	6013      	str	r3, [r2, #0]
 8016330:	680b      	ldr	r3, [r1, #0]
 8016332:	d009      	beq.n	8016348 <enet_rxframe_drop+0x2c>
 8016334:	b12b      	cbz	r3, 8016342 <enet_rxframe_drop+0x26>
 8016336:	68da      	ldr	r2, [r3, #12]
 8016338:	6002      	str	r2, [r0, #0]
 801633a:	681a      	ldr	r2, [r3, #0]
 801633c:	b1ba      	cbz	r2, 801636e <enet_rxframe_drop+0x52>
 801633e:	600a      	str	r2, [r1, #0]
 8016340:	bd10      	pop	{r4, pc}
 8016342:	68d3      	ldr	r3, [r2, #12]
 8016344:	6003      	str	r3, [r0, #0]
 8016346:	e7fb      	b.n	8016340 <enet_rxframe_drop+0x24>
 8016348:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 801634c:	4c0b      	ldr	r4, [pc, #44]	; (801637c <enet_rxframe_drop+0x60>)
 801634e:	d006      	beq.n	801635e <enet_rxframe_drop+0x42>
 8016350:	68e2      	ldr	r2, [r4, #12]
 8016352:	6002      	str	r2, [r0, #0]
 8016354:	2b00      	cmp	r3, #0
 8016356:	d0f3      	beq.n	8016340 <enet_rxframe_drop+0x24>
 8016358:	681b      	ldr	r3, [r3, #0]
 801635a:	600b      	str	r3, [r1, #0]
 801635c:	e7f0      	b.n	8016340 <enet_rxframe_drop+0x24>
 801635e:	6824      	ldr	r4, [r4, #0]
 8016360:	3210      	adds	r2, #16
 8016362:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8016366:	4422      	add	r2, r4
 8016368:	6002      	str	r2, [r0, #0]
 801636a:	2b00      	cmp	r3, #0
 801636c:	d0e8      	beq.n	8016340 <enet_rxframe_drop+0x24>
 801636e:	3310      	adds	r3, #16
 8016370:	e7f3      	b.n	801635a <enet_rxframe_drop+0x3e>
 8016372:	bf00      	nop
 8016374:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8016378:	2000fd98 	mulcs	r0, r8, sp
 801637c:	40029000 	andmi	r9, r2, r0

08016380 <enet_rxframe_size_get>:
 8016380:	b508      	push	{r3, lr}
 8016382:	4b10      	ldr	r3, [pc, #64]	; (80163c4 <enet_rxframe_size_get+0x44>)
 8016384:	681b      	ldr	r3, [r3, #0]
 8016386:	681b      	ldr	r3, [r3, #0]
 8016388:	2b00      	cmp	r3, #0
 801638a:	db19      	blt.n	80163c0 <enet_rxframe_size_get+0x40>
 801638c:	f403 4203 	and.w	r2, r3, #33536	; 0x8300
 8016390:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8016394:	d003      	beq.n	801639e <enet_rxframe_size_get+0x1e>
 8016396:	f7ff ffc1 	bl	801631c <enet_rxframe_drop>
 801639a:	2001      	movs	r0, #1
 801639c:	bd08      	pop	{r3, pc}
 801639e:	f003 0221 	and.w	r2, r3, #33	; 0x21
 80163a2:	2a21      	cmp	r2, #33	; 0x21
 80163a4:	d0f7      	beq.n	8016396 <enet_rxframe_size_get+0x16>
 80163a6:	4908      	ldr	r1, [pc, #32]	; (80163c8 <enet_rxframe_size_get+0x48>)
 80163a8:	6809      	ldr	r1, [r1, #0]
 80163aa:	f3c3 420d 	ubfx	r2, r3, #16, #14
 80163ae:	0189      	lsls	r1, r1, #6
 80163b0:	f1a2 0004 	sub.w	r0, r2, #4
 80163b4:	d5f2      	bpl.n	801639c <enet_rxframe_size_get+0x1c>
 80163b6:	f013 0f20 	tst.w	r3, #32
 80163ba:	bf18      	it	ne
 80163bc:	4610      	movne	r0, r2
 80163be:	e7ed      	b.n	801639c <enet_rxframe_size_get+0x1c>
 80163c0:	2000      	movs	r0, #0
 80163c2:	e7eb      	b.n	801639c <enet_rxframe_size_get+0x1c>
 80163c4:	2000fda0 	andcs	pc, r0, r0, lsr #27
 80163c8:	40028000 	andmi	r8, r2, r0

080163cc <enet_initpara_reset>:
 80163cc:	4b08      	ldr	r3, [pc, #32]	; (80163f0 <enet_initpara_reset+0x24>)
 80163ce:	2200      	movs	r2, #0
 80163d0:	e9c3 2200 	strd	r2, r2, [r3]
 80163d4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80163d8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80163dc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80163e0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80163e4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80163e8:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80163ec:	639a      	str	r2, [r3, #56]	; 0x38
 80163ee:	4770      	bx	lr
 80163f0:	2000fda8 	andcs	pc, r0, r8, lsr #27

080163f4 <enet_deinit>:
 80163f4:	b508      	push	{r3, lr}
 80163f6:	f240 4019 	movw	r0, #1049	; 0x419
 80163fa:	f000 f8da 	bl	80165b2 <rcu_periph_reset_enable>
 80163fe:	f240 4019 	movw	r0, #1049	; 0x419
 8016402:	f000 f8d8 	bl	80165b6 <rcu_periph_reset_disable>
 8016406:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801640a:	f7ff bfdf 	b.w	80163cc <enet_initpara_reset>
	...

08016410 <fwdgt_enable>:
 8016410:	4b02      	ldr	r3, [pc, #8]	; (801641c <fwdgt_enable+0xc>)
 8016412:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8016416:	601a      	str	r2, [r3, #0]
 8016418:	4770      	bx	lr
 801641a:	bf00      	nop
 801641c:	40003000 	andmi	r3, r0, r0

08016420 <fwdgt_counter_reload>:
 8016420:	4b02      	ldr	r3, [pc, #8]	; (801642c <fwdgt_counter_reload+0xc>)
 8016422:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8016426:	601a      	str	r2, [r3, #0]
 8016428:	4770      	bx	lr
 801642a:	bf00      	nop
 801642c:	40003000 	andmi	r3, r0, r0

08016430 <fwdgt_config>:
 8016430:	4a12      	ldr	r2, [pc, #72]	; (801647c <fwdgt_config+0x4c>)
 8016432:	b510      	push	{r4, lr}
 8016434:	f245 5355 	movw	r3, #21845	; 0x5555
 8016438:	4c11      	ldr	r4, [pc, #68]	; (8016480 <fwdgt_config+0x50>)
 801643a:	6013      	str	r3, [r2, #0]
 801643c:	68d3      	ldr	r3, [r2, #12]
 801643e:	3c01      	subs	r4, #1
 8016440:	f003 0301 	and.w	r3, r3, #1
 8016444:	d013      	beq.n	801646e <fwdgt_config+0x3e>
 8016446:	2b00      	cmp	r3, #0
 8016448:	d1f8      	bne.n	801643c <fwdgt_config+0xc>
 801644a:	6051      	str	r1, [r2, #4]
 801644c:	490c      	ldr	r1, [pc, #48]	; (8016480 <fwdgt_config+0x50>)
 801644e:	4a0b      	ldr	r2, [pc, #44]	; (801647c <fwdgt_config+0x4c>)
 8016450:	68d3      	ldr	r3, [r2, #12]
 8016452:	3901      	subs	r1, #1
 8016454:	f003 0302 	and.w	r3, r3, #2
 8016458:	d00d      	beq.n	8016476 <fwdgt_config+0x46>
 801645a:	2b00      	cmp	r3, #0
 801645c:	d1f8      	bne.n	8016450 <fwdgt_config+0x20>
 801645e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8016462:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8016466:	6090      	str	r0, [r2, #8]
 8016468:	6013      	str	r3, [r2, #0]
 801646a:	2001      	movs	r0, #1
 801646c:	e002      	b.n	8016474 <fwdgt_config+0x44>
 801646e:	2b00      	cmp	r3, #0
 8016470:	d0eb      	beq.n	801644a <fwdgt_config+0x1a>
 8016472:	2000      	movs	r0, #0
 8016474:	bd10      	pop	{r4, pc}
 8016476:	2b00      	cmp	r3, #0
 8016478:	d1fb      	bne.n	8016472 <fwdgt_config+0x42>
 801647a:	e7f0      	b.n	801645e <fwdgt_config+0x2e>
 801647c:	40003000 	andmi	r3, r0, r0
 8016480:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08016484 <gpio_mode_set>:
 8016484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016488:	6805      	ldr	r5, [r0, #0]
 801648a:	68c4      	ldr	r4, [r0, #12]
 801648c:	2600      	movs	r6, #0
 801648e:	f04f 0e03 	mov.w	lr, #3
 8016492:	fa23 f706 	lsr.w	r7, r3, r6
 8016496:	07ff      	lsls	r7, r7, #31
 8016498:	d50d      	bpl.n	80164b6 <gpio_mode_set+0x32>
 801649a:	0077      	lsls	r7, r6, #1
 801649c:	fa0e fc07 	lsl.w	ip, lr, r7
 80164a0:	fa01 f807 	lsl.w	r8, r1, r7
 80164a4:	ea25 050c 	bic.w	r5, r5, ip
 80164a8:	ea24 040c 	bic.w	r4, r4, ip
 80164ac:	fa02 f707 	lsl.w	r7, r2, r7
 80164b0:	ea48 0505 	orr.w	r5, r8, r5
 80164b4:	433c      	orrs	r4, r7
 80164b6:	3601      	adds	r6, #1
 80164b8:	2e10      	cmp	r6, #16
 80164ba:	d1ea      	bne.n	8016492 <gpio_mode_set+0xe>
 80164bc:	6005      	str	r5, [r0, #0]
 80164be:	60c4      	str	r4, [r0, #12]
 80164c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080164c4 <gpio_output_options_set>:
 80164c4:	2901      	cmp	r1, #1
 80164c6:	6841      	ldr	r1, [r0, #4]
 80164c8:	bf0c      	ite	eq
 80164ca:	4319      	orreq	r1, r3
 80164cc:	4399      	bicne	r1, r3
 80164ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164d0:	6041      	str	r1, [r0, #4]
 80164d2:	6881      	ldr	r1, [r0, #8]
 80164d4:	2400      	movs	r4, #0
 80164d6:	2603      	movs	r6, #3
 80164d8:	fa23 f504 	lsr.w	r5, r3, r4
 80164dc:	07ed      	lsls	r5, r5, #31
 80164de:	d507      	bpl.n	80164f0 <gpio_output_options_set+0x2c>
 80164e0:	0065      	lsls	r5, r4, #1
 80164e2:	fa06 f705 	lsl.w	r7, r6, r5
 80164e6:	ea21 0107 	bic.w	r1, r1, r7
 80164ea:	fa02 f505 	lsl.w	r5, r2, r5
 80164ee:	4329      	orrs	r1, r5
 80164f0:	3401      	adds	r4, #1
 80164f2:	2c10      	cmp	r4, #16
 80164f4:	d1f0      	bne.n	80164d8 <gpio_output_options_set+0x14>
 80164f6:	6081      	str	r1, [r0, #8]
 80164f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080164fa <gpio_af_set>:
 80164fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164fc:	6a06      	ldr	r6, [r0, #32]
 80164fe:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8016500:	2300      	movs	r3, #0
 8016502:	f04f 0c0f 	mov.w	ip, #15
 8016506:	fa22 f403 	lsr.w	r4, r2, r3
 801650a:	07e7      	lsls	r7, r4, #31
 801650c:	d507      	bpl.n	801651e <gpio_af_set+0x24>
 801650e:	009c      	lsls	r4, r3, #2
 8016510:	fa0c f704 	lsl.w	r7, ip, r4
 8016514:	ea26 0607 	bic.w	r6, r6, r7
 8016518:	fa01 f404 	lsl.w	r4, r1, r4
 801651c:	4326      	orrs	r6, r4
 801651e:	3301      	adds	r3, #1
 8016520:	2b08      	cmp	r3, #8
 8016522:	d1f0      	bne.n	8016506 <gpio_af_set+0xc>
 8016524:	2300      	movs	r3, #0
 8016526:	f04f 0c0f 	mov.w	ip, #15
 801652a:	f103 0408 	add.w	r4, r3, #8
 801652e:	fa22 f404 	lsr.w	r4, r2, r4
 8016532:	07e4      	lsls	r4, r4, #31
 8016534:	d507      	bpl.n	8016546 <gpio_af_set+0x4c>
 8016536:	009c      	lsls	r4, r3, #2
 8016538:	fa0c f704 	lsl.w	r7, ip, r4
 801653c:	ea25 0507 	bic.w	r5, r5, r7
 8016540:	fa01 f404 	lsl.w	r4, r1, r4
 8016544:	4325      	orrs	r5, r4
 8016546:	3301      	adds	r3, #1
 8016548:	2b08      	cmp	r3, #8
 801654a:	d1ee      	bne.n	801652a <gpio_af_set+0x30>
 801654c:	6206      	str	r6, [r0, #32]
 801654e:	6245      	str	r5, [r0, #36]	; 0x24
 8016550:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016554 <pmu_backup_ldo_config>:
 8016554:	4b04      	ldr	r3, [pc, #16]	; (8016568 <pmu_backup_ldo_config+0x14>)
 8016556:	685a      	ldr	r2, [r3, #4]
 8016558:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 801655c:	605a      	str	r2, [r3, #4]
 801655e:	685a      	ldr	r2, [r3, #4]
 8016560:	4310      	orrs	r0, r2
 8016562:	6058      	str	r0, [r3, #4]
 8016564:	4770      	bx	lr
 8016566:	bf00      	nop
 8016568:	40007000 	andmi	r7, r0, r0

0801656c <pmu_backup_write_enable>:
 801656c:	4a02      	ldr	r2, [pc, #8]	; (8016578 <pmu_backup_write_enable+0xc>)
 801656e:	6813      	ldr	r3, [r2, #0]
 8016570:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016574:	6013      	str	r3, [r2, #0]
 8016576:	4770      	bx	lr
 8016578:	40007000 	andmi	r7, r0, r0

0801657c <rcu_periph_clock_enable>:
 801657c:	0983      	lsrs	r3, r0, #6
 801657e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8016582:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8016586:	f000 001f 	and.w	r0, r0, #31
 801658a:	6819      	ldr	r1, [r3, #0]
 801658c:	2201      	movs	r2, #1
 801658e:	4082      	lsls	r2, r0
 8016590:	430a      	orrs	r2, r1
 8016592:	601a      	str	r2, [r3, #0]
 8016594:	4770      	bx	lr

08016596 <rcu_periph_clock_disable>:
 8016596:	0983      	lsrs	r3, r0, #6
 8016598:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801659c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80165a0:	f000 001f 	and.w	r0, r0, #31
 80165a4:	681a      	ldr	r2, [r3, #0]
 80165a6:	2101      	movs	r1, #1
 80165a8:	4081      	lsls	r1, r0
 80165aa:	ea22 0201 	bic.w	r2, r2, r1
 80165ae:	601a      	str	r2, [r3, #0]
 80165b0:	4770      	bx	lr

080165b2 <rcu_periph_reset_enable>:
 80165b2:	f7ff bfe3 	b.w	801657c <rcu_periph_clock_enable>

080165b6 <rcu_periph_reset_disable>:
 80165b6:	f7ff bfee 	b.w	8016596 <rcu_periph_clock_disable>
	...

080165bc <rcu_ckout0_config>:
 80165bc:	4a04      	ldr	r2, [pc, #16]	; (80165d0 <rcu_ckout0_config+0x14>)
 80165be:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 80165c2:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 80165c6:	4319      	orrs	r1, r3
 80165c8:	4308      	orrs	r0, r1
 80165ca:	f8c2 0808 	str.w	r0, [r2, #2056]	; 0x808
 80165ce:	4770      	bx	lr
 80165d0:	40023000 	andmi	r3, r2, r0

080165d4 <rcu_timer_clock_prescaler_config>:
 80165d4:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 80165d8:	4298      	cmp	r0, r3
 80165da:	4b05      	ldr	r3, [pc, #20]	; (80165f0 <rcu_timer_clock_prescaler_config+0x1c>)
 80165dc:	f8d3 288c 	ldr.w	r2, [r3, #2188]	; 0x88c
 80165e0:	bf0c      	ite	eq
 80165e2:	f022 7280 	biceq.w	r2, r2, #16777216	; 0x1000000
 80165e6:	4302      	orrne	r2, r0
 80165e8:	f8c3 288c 	str.w	r2, [r3, #2188]	; 0x88c
 80165ec:	4770      	bx	lr
 80165ee:	bf00      	nop
 80165f0:	40023000 	andmi	r3, r2, r0

080165f4 <rcu_clock_freq_get>:
 80165f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80165f6:	4b35      	ldr	r3, [pc, #212]	; (80166cc <rcu_clock_freq_get+0xd8>)
 80165f8:	b089      	sub	sp, #36	; 0x24
 80165fa:	4604      	mov	r4, r0
 80165fc:	ad04      	add	r5, sp, #16
 80165fe:	f103 0610 	add.w	r6, r3, #16
 8016602:	461f      	mov	r7, r3
 8016604:	6818      	ldr	r0, [r3, #0]
 8016606:	6859      	ldr	r1, [r3, #4]
 8016608:	462a      	mov	r2, r5
 801660a:	c203      	stmia	r2!, {r0, r1}
 801660c:	3308      	adds	r3, #8
 801660e:	42b3      	cmp	r3, r6
 8016610:	4615      	mov	r5, r2
 8016612:	d1f7      	bne.n	8016604 <rcu_clock_freq_get+0x10>
 8016614:	6938      	ldr	r0, [r7, #16]
 8016616:	6871      	ldr	r1, [r6, #4]
 8016618:	4a2d      	ldr	r2, [pc, #180]	; (80166d0 <rcu_clock_freq_get+0xdc>)
 801661a:	466b      	mov	r3, sp
 801661c:	c303      	stmia	r3!, {r0, r1}
 801661e:	c303      	stmia	r3!, {r0, r1}
 8016620:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8016624:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016628:	2b01      	cmp	r3, #1
 801662a:	d03f      	beq.n	80166ac <rcu_clock_freq_get+0xb8>
 801662c:	2b02      	cmp	r3, #2
 801662e:	d13f      	bne.n	80166b0 <rcu_clock_freq_get+0xbc>
 8016630:	f8d2 0804 	ldr.w	r0, [r2, #2052]	; 0x804
 8016634:	f8d2 1804 	ldr.w	r1, [r2, #2052]	; 0x804
 8016638:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 801663c:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8016640:	4d24      	ldr	r5, [pc, #144]	; (80166d4 <rcu_clock_freq_get+0xe0>)
 8016642:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8016646:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 801664a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801664e:	f103 0301 	add.w	r3, r3, #1
 8016652:	4a21      	ldr	r2, [pc, #132]	; (80166d8 <rcu_clock_freq_get+0xe4>)
 8016654:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8016658:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801665c:	bf08      	it	eq
 801665e:	462a      	moveq	r2, r5
 8016660:	fbb2 f2f0 	udiv	r2, r2, r0
 8016664:	434a      	muls	r2, r1
 8016666:	fbb2 f0f3 	udiv	r0, r2, r3
 801666a:	4919      	ldr	r1, [pc, #100]	; (80166d0 <rcu_clock_freq_get+0xdc>)
 801666c:	f8d1 3808 	ldr.w	r3, [r1, #2056]	; 0x808
 8016670:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8016674:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8016678:	3220      	adds	r2, #32
 801667a:	446a      	add	r2, sp
 801667c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8016680:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 8016684:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 8016688:	3320      	adds	r3, #32
 801668a:	446b      	add	r3, sp
 801668c:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8016690:	3220      	adds	r2, #32
 8016692:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8016696:	446a      	add	r2, sp
 8016698:	fa20 f303 	lsr.w	r3, r0, r3
 801669c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80166a0:	2c03      	cmp	r4, #3
 80166a2:	d810      	bhi.n	80166c6 <rcu_clock_freq_get+0xd2>
 80166a4:	e8df f004 	tbb	[pc, r4]
 80166a8:	0c090607 	stceq	6, cr0, [r9], {7}
 80166ac:	480a      	ldr	r0, [pc, #40]	; (80166d8 <rcu_clock_freq_get+0xe4>)
 80166ae:	e7dc      	b.n	801666a <rcu_clock_freq_get+0x76>
 80166b0:	4808      	ldr	r0, [pc, #32]	; (80166d4 <rcu_clock_freq_get+0xe0>)
 80166b2:	e7da      	b.n	801666a <rcu_clock_freq_get+0x76>
 80166b4:	4618      	mov	r0, r3
 80166b6:	b009      	add	sp, #36	; 0x24
 80166b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80166ba:	fa23 f005 	lsr.w	r0, r3, r5
 80166be:	e7fa      	b.n	80166b6 <rcu_clock_freq_get+0xc2>
 80166c0:	fa23 f002 	lsr.w	r0, r3, r2
 80166c4:	e7f7      	b.n	80166b6 <rcu_clock_freq_get+0xc2>
 80166c6:	2000      	movs	r0, #0
 80166c8:	e7f5      	b.n	80166b6 <rcu_clock_freq_get+0xc2>
 80166ca:	bf00      	nop
 80166cc:	08017b7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, lr}
 80166d0:	40023000 	andmi	r3, r2, r0
 80166d4:	00f42400 	rscseq	r2, r4, r0, lsl #8
 80166d8:	017d7840 	cmneq	sp, r0, asr #16

080166dc <syscfg_enet_phy_interface_config>:
 80166dc:	4a04      	ldr	r2, [pc, #16]	; (80166f0 <syscfg_enet_phy_interface_config+0x14>)
 80166de:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 80166e2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80166e6:	4318      	orrs	r0, r3
 80166e8:	f8c2 0804 	str.w	r0, [r2, #2052]	; 0x804
 80166ec:	4770      	bx	lr
 80166ee:	bf00      	nop
 80166f0:	40013000 	andmi	r3, r1, r0

080166f4 <timer_deinit>:
 80166f4:	b508      	push	{r3, lr}
 80166f6:	4b4e      	ldr	r3, [pc, #312]	; (8016830 <timer_deinit+0x13c>)
 80166f8:	4298      	cmp	r0, r3
 80166fa:	f000 8092 	beq.w	8016822 <timer_deinit+0x12e>
 80166fe:	d822      	bhi.n	8016746 <timer_deinit+0x52>
 8016700:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8016704:	4298      	cmp	r0, r3
 8016706:	d062      	beq.n	80167ce <timer_deinit+0xda>
 8016708:	d80b      	bhi.n	8016722 <timer_deinit+0x2e>
 801670a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801670e:	4298      	cmp	r0, r3
 8016710:	d04f      	beq.n	80167b2 <timer_deinit+0xbe>
 8016712:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016716:	4298      	cmp	r0, r3
 8016718:	d052      	beq.n	80167c0 <timer_deinit+0xcc>
 801671a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801671e:	d041      	beq.n	80167a4 <timer_deinit+0xb0>
 8016720:	bd08      	pop	{r3, pc}
 8016722:	4b44      	ldr	r3, [pc, #272]	; (8016834 <timer_deinit+0x140>)
 8016724:	4298      	cmp	r0, r3
 8016726:	d059      	beq.n	80167dc <timer_deinit+0xe8>
 8016728:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801672c:	4298      	cmp	r0, r3
 801672e:	d071      	beq.n	8016814 <timer_deinit+0x120>
 8016730:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016734:	4298      	cmp	r0, r3
 8016736:	d1f3      	bne.n	8016720 <timer_deinit+0x2c>
 8016738:	f640 0004 	movw	r0, #2052	; 0x804
 801673c:	f7ff ff39 	bl	80165b2 <rcu_periph_reset_enable>
 8016740:	f640 0004 	movw	r0, #2052	; 0x804
 8016744:	e02a      	b.n	801679c <timer_deinit+0xa8>
 8016746:	4b3c      	ldr	r3, [pc, #240]	; (8016838 <timer_deinit+0x144>)
 8016748:	4298      	cmp	r0, r3
 801674a:	d055      	beq.n	80167f8 <timer_deinit+0x104>
 801674c:	d812      	bhi.n	8016774 <timer_deinit+0x80>
 801674e:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 8016752:	4298      	cmp	r0, r3
 8016754:	d01c      	beq.n	8016790 <timer_deinit+0x9c>
 8016756:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801675a:	4298      	cmp	r0, r3
 801675c:	d045      	beq.n	80167ea <timer_deinit+0xf6>
 801675e:	f5a3 4364 	sub.w	r3, r3, #58368	; 0xe400
 8016762:	4298      	cmp	r0, r3
 8016764:	d1dc      	bne.n	8016720 <timer_deinit+0x2c>
 8016766:	f640 0008 	movw	r0, #2056	; 0x808
 801676a:	f7ff ff22 	bl	80165b2 <rcu_periph_reset_enable>
 801676e:	f640 0008 	movw	r0, #2056	; 0x808
 8016772:	e013      	b.n	801679c <timer_deinit+0xa8>
 8016774:	4b31      	ldr	r3, [pc, #196]	; (801683c <timer_deinit+0x148>)
 8016776:	4298      	cmp	r0, r3
 8016778:	d045      	beq.n	8016806 <timer_deinit+0x112>
 801677a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801677e:	4298      	cmp	r0, r3
 8016780:	d1ce      	bne.n	8016720 <timer_deinit+0x2c>
 8016782:	f640 1012 	movw	r0, #2322	; 0x912
 8016786:	f7ff ff14 	bl	80165b2 <rcu_periph_reset_enable>
 801678a:	f640 1012 	movw	r0, #2322	; 0x912
 801678e:	e005      	b.n	801679c <timer_deinit+0xa8>
 8016790:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8016794:	f7ff ff0d 	bl	80165b2 <rcu_periph_reset_enable>
 8016798:	f44f 6010 	mov.w	r0, #2304	; 0x900
 801679c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80167a0:	f7ff bf09 	b.w	80165b6 <rcu_periph_reset_disable>
 80167a4:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80167a8:	f7ff ff03 	bl	80165b2 <rcu_periph_reset_enable>
 80167ac:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80167b0:	e7f4      	b.n	801679c <timer_deinit+0xa8>
 80167b2:	f640 0001 	movw	r0, #2049	; 0x801
 80167b6:	f7ff fefc 	bl	80165b2 <rcu_periph_reset_enable>
 80167ba:	f640 0001 	movw	r0, #2049	; 0x801
 80167be:	e7ed      	b.n	801679c <timer_deinit+0xa8>
 80167c0:	f640 0002 	movw	r0, #2050	; 0x802
 80167c4:	f7ff fef5 	bl	80165b2 <rcu_periph_reset_enable>
 80167c8:	f640 0002 	movw	r0, #2050	; 0x802
 80167cc:	e7e6      	b.n	801679c <timer_deinit+0xa8>
 80167ce:	f640 0003 	movw	r0, #2051	; 0x803
 80167d2:	f7ff feee 	bl	80165b2 <rcu_periph_reset_enable>
 80167d6:	f640 0003 	movw	r0, #2051	; 0x803
 80167da:	e7df      	b.n	801679c <timer_deinit+0xa8>
 80167dc:	f640 0005 	movw	r0, #2053	; 0x805
 80167e0:	f7ff fee7 	bl	80165b2 <rcu_periph_reset_enable>
 80167e4:	f640 0005 	movw	r0, #2053	; 0x805
 80167e8:	e7d8      	b.n	801679c <timer_deinit+0xa8>
 80167ea:	f640 1001 	movw	r0, #2305	; 0x901
 80167ee:	f7ff fee0 	bl	80165b2 <rcu_periph_reset_enable>
 80167f2:	f640 1001 	movw	r0, #2305	; 0x901
 80167f6:	e7d1      	b.n	801679c <timer_deinit+0xa8>
 80167f8:	f44f 6011 	mov.w	r0, #2320	; 0x910
 80167fc:	f7ff fed9 	bl	80165b2 <rcu_periph_reset_enable>
 8016800:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8016804:	e7ca      	b.n	801679c <timer_deinit+0xa8>
 8016806:	f640 1011 	movw	r0, #2321	; 0x911
 801680a:	f7ff fed2 	bl	80165b2 <rcu_periph_reset_enable>
 801680e:	f640 1011 	movw	r0, #2321	; 0x911
 8016812:	e7c3      	b.n	801679c <timer_deinit+0xa8>
 8016814:	f640 0006 	movw	r0, #2054	; 0x806
 8016818:	f7ff fecb 	bl	80165b2 <rcu_periph_reset_enable>
 801681c:	f640 0006 	movw	r0, #2054	; 0x806
 8016820:	e7bc      	b.n	801679c <timer_deinit+0xa8>
 8016822:	f640 0007 	movw	r0, #2055	; 0x807
 8016826:	f7ff fec4 	bl	80165b2 <rcu_periph_reset_enable>
 801682a:	f640 0007 	movw	r0, #2055	; 0x807
 801682e:	e7b5      	b.n	801679c <timer_deinit+0xa8>
 8016830:	40001c00 	andmi	r1, r0, r0, lsl #24
 8016834:	40001400 	andmi	r1, r0, r0, lsl #8
 8016838:	40014000 	andmi	r4, r1, r0
 801683c:	40014400 	andmi	r4, r1, r0, lsl #8

08016840 <timer_init>:
 8016840:	880b      	ldrh	r3, [r1, #0]
 8016842:	6283      	str	r3, [r0, #40]	; 0x28
 8016844:	4b1a      	ldr	r3, [pc, #104]	; (80168b0 <timer_init+0x70>)
 8016846:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 801684a:	429a      	cmp	r2, r3
 801684c:	d004      	beq.n	8016858 <timer_init+0x18>
 801684e:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8016852:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8016856:	d10b      	bne.n	8016870 <timer_init+0x30>
 8016858:	6803      	ldr	r3, [r0, #0]
 801685a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801685e:	6003      	str	r3, [r0, #0]
 8016860:	6802      	ldr	r2, [r0, #0]
 8016862:	884b      	ldrh	r3, [r1, #2]
 8016864:	4313      	orrs	r3, r2
 8016866:	6003      	str	r3, [r0, #0]
 8016868:	6802      	ldr	r2, [r0, #0]
 801686a:	888b      	ldrh	r3, [r1, #4]
 801686c:	4313      	orrs	r3, r2
 801686e:	6003      	str	r3, [r0, #0]
 8016870:	688b      	ldr	r3, [r1, #8]
 8016872:	62c3      	str	r3, [r0, #44]	; 0x2c
 8016874:	4b0f      	ldr	r3, [pc, #60]	; (80168b4 <timer_init+0x74>)
 8016876:	4298      	cmp	r0, r3
 8016878:	d003      	beq.n	8016882 <timer_init+0x42>
 801687a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801687e:	4298      	cmp	r0, r3
 8016880:	d104      	bne.n	801688c <timer_init+0x4c>
 8016882:	6943      	ldr	r3, [r0, #20]
 8016884:	f043 0301 	orr.w	r3, r3, #1
 8016888:	6143      	str	r3, [r0, #20]
 801688a:	4770      	bx	lr
 801688c:	6803      	ldr	r3, [r0, #0]
 801688e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016892:	6003      	str	r3, [r0, #0]
 8016894:	6802      	ldr	r2, [r0, #0]
 8016896:	88cb      	ldrh	r3, [r1, #6]
 8016898:	4313      	orrs	r3, r2
 801689a:	6003      	str	r3, [r0, #0]
 801689c:	4b04      	ldr	r3, [pc, #16]	; (80168b0 <timer_init+0x70>)
 801689e:	4298      	cmp	r0, r3
 80168a0:	d002      	beq.n	80168a8 <timer_init+0x68>
 80168a2:	4b05      	ldr	r3, [pc, #20]	; (80168b8 <timer_init+0x78>)
 80168a4:	4298      	cmp	r0, r3
 80168a6:	d1ec      	bne.n	8016882 <timer_init+0x42>
 80168a8:	7b0b      	ldrb	r3, [r1, #12]
 80168aa:	6303      	str	r3, [r0, #48]	; 0x30
 80168ac:	e7e9      	b.n	8016882 <timer_init+0x42>
 80168ae:	bf00      	nop
 80168b0:	40010000 	andmi	r0, r1, r0
 80168b4:	40001000 	andmi	r1, r0, r0
 80168b8:	40010400 	andmi	r0, r1, r0, lsl #8

080168bc <timer_enable>:
 80168bc:	6803      	ldr	r3, [r0, #0]
 80168be:	f043 0301 	orr.w	r3, r3, #1
 80168c2:	6003      	str	r3, [r0, #0]
 80168c4:	4770      	bx	lr

080168c6 <timer_interrupt_enable>:
 80168c6:	68c3      	ldr	r3, [r0, #12]
 80168c8:	4319      	orrs	r1, r3
 80168ca:	60c1      	str	r1, [r0, #12]
 80168cc:	4770      	bx	lr

080168ce <timer_interrupt_flag_clear>:
 80168ce:	43c9      	mvns	r1, r1
 80168d0:	6101      	str	r1, [r0, #16]
 80168d2:	4770      	bx	lr

080168d4 <timer_flag_clear>:
 80168d4:	43c9      	mvns	r1, r1
 80168d6:	6101      	str	r1, [r0, #16]
 80168d8:	4770      	bx	lr

080168da <timer_dma_enable>:
 80168da:	68c3      	ldr	r3, [r0, #12]
 80168dc:	4319      	orrs	r1, r3
 80168de:	60c1      	str	r1, [r0, #12]
 80168e0:	4770      	bx	lr
	...

080168e4 <timer_channel_output_config>:
 80168e4:	2903      	cmp	r1, #3
 80168e6:	d83e      	bhi.n	8016966 <timer_channel_output_config+0x82>
 80168e8:	e8df f011 	tbh	[pc, r1, lsl #1]
 80168ec:	003e0004 	eorseq	r0, lr, r4
 80168f0:	00bc007d 	adcseq	r0, ip, sp, ror r0
 80168f4:	6a03      	ldr	r3, [r0, #32]
 80168f6:	f023 0301 	bic.w	r3, r3, #1
 80168fa:	6203      	str	r3, [r0, #32]
 80168fc:	6983      	ldr	r3, [r0, #24]
 80168fe:	f023 0303 	bic.w	r3, r3, #3
 8016902:	6183      	str	r3, [r0, #24]
 8016904:	6a01      	ldr	r1, [r0, #32]
 8016906:	8813      	ldrh	r3, [r2, #0]
 8016908:	430b      	orrs	r3, r1
 801690a:	6203      	str	r3, [r0, #32]
 801690c:	6a03      	ldr	r3, [r0, #32]
 801690e:	f023 0302 	bic.w	r3, r3, #2
 8016912:	6203      	str	r3, [r0, #32]
 8016914:	6a01      	ldr	r1, [r0, #32]
 8016916:	8893      	ldrh	r3, [r2, #4]
 8016918:	430b      	orrs	r3, r1
 801691a:	6203      	str	r3, [r0, #32]
 801691c:	4b64      	ldr	r3, [pc, #400]	; (8016ab0 <timer_channel_output_config+0x1cc>)
 801691e:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016922:	4299      	cmp	r1, r3
 8016924:	d11f      	bne.n	8016966 <timer_channel_output_config+0x82>
 8016926:	6a03      	ldr	r3, [r0, #32]
 8016928:	f023 0304 	bic.w	r3, r3, #4
 801692c:	6203      	str	r3, [r0, #32]
 801692e:	6a01      	ldr	r1, [r0, #32]
 8016930:	8853      	ldrh	r3, [r2, #2]
 8016932:	430b      	orrs	r3, r1
 8016934:	6203      	str	r3, [r0, #32]
 8016936:	6a03      	ldr	r3, [r0, #32]
 8016938:	f023 0308 	bic.w	r3, r3, #8
 801693c:	6203      	str	r3, [r0, #32]
 801693e:	6a01      	ldr	r1, [r0, #32]
 8016940:	88d3      	ldrh	r3, [r2, #6]
 8016942:	430b      	orrs	r3, r1
 8016944:	6203      	str	r3, [r0, #32]
 8016946:	6843      	ldr	r3, [r0, #4]
 8016948:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801694c:	6043      	str	r3, [r0, #4]
 801694e:	6841      	ldr	r1, [r0, #4]
 8016950:	8913      	ldrh	r3, [r2, #8]
 8016952:	430b      	orrs	r3, r1
 8016954:	6043      	str	r3, [r0, #4]
 8016956:	6843      	ldr	r3, [r0, #4]
 8016958:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801695c:	6043      	str	r3, [r0, #4]
 801695e:	6841      	ldr	r1, [r0, #4]
 8016960:	8953      	ldrh	r3, [r2, #10]
 8016962:	430b      	orrs	r3, r1
 8016964:	6043      	str	r3, [r0, #4]
 8016966:	4770      	bx	lr
 8016968:	6a03      	ldr	r3, [r0, #32]
 801696a:	8811      	ldrh	r1, [r2, #0]
 801696c:	f023 0310 	bic.w	r3, r3, #16
 8016970:	6203      	str	r3, [r0, #32]
 8016972:	6983      	ldr	r3, [r0, #24]
 8016974:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016978:	6183      	str	r3, [r0, #24]
 801697a:	6a03      	ldr	r3, [r0, #32]
 801697c:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016980:	6203      	str	r3, [r0, #32]
 8016982:	6a03      	ldr	r3, [r0, #32]
 8016984:	8891      	ldrh	r1, [r2, #4]
 8016986:	f023 0320 	bic.w	r3, r3, #32
 801698a:	6203      	str	r3, [r0, #32]
 801698c:	6a03      	ldr	r3, [r0, #32]
 801698e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016992:	6203      	str	r3, [r0, #32]
 8016994:	4b46      	ldr	r3, [pc, #280]	; (8016ab0 <timer_channel_output_config+0x1cc>)
 8016996:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 801699a:	4299      	cmp	r1, r3
 801699c:	d1e3      	bne.n	8016966 <timer_channel_output_config+0x82>
 801699e:	6a03      	ldr	r3, [r0, #32]
 80169a0:	8851      	ldrh	r1, [r2, #2]
 80169a2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80169a6:	6203      	str	r3, [r0, #32]
 80169a8:	6a03      	ldr	r3, [r0, #32]
 80169aa:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80169ae:	6203      	str	r3, [r0, #32]
 80169b0:	6a03      	ldr	r3, [r0, #32]
 80169b2:	88d1      	ldrh	r1, [r2, #6]
 80169b4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80169b8:	6203      	str	r3, [r0, #32]
 80169ba:	6a03      	ldr	r3, [r0, #32]
 80169bc:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80169c0:	6203      	str	r3, [r0, #32]
 80169c2:	6843      	ldr	r3, [r0, #4]
 80169c4:	8911      	ldrh	r1, [r2, #8]
 80169c6:	8952      	ldrh	r2, [r2, #10]
 80169c8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80169cc:	6043      	str	r3, [r0, #4]
 80169ce:	6843      	ldr	r3, [r0, #4]
 80169d0:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 80169d4:	6043      	str	r3, [r0, #4]
 80169d6:	6843      	ldr	r3, [r0, #4]
 80169d8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80169dc:	6043      	str	r3, [r0, #4]
 80169de:	6843      	ldr	r3, [r0, #4]
 80169e0:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80169e4:	e7be      	b.n	8016964 <timer_channel_output_config+0x80>
 80169e6:	6a03      	ldr	r3, [r0, #32]
 80169e8:	8811      	ldrh	r1, [r2, #0]
 80169ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80169ee:	6203      	str	r3, [r0, #32]
 80169f0:	69c3      	ldr	r3, [r0, #28]
 80169f2:	f023 0303 	bic.w	r3, r3, #3
 80169f6:	61c3      	str	r3, [r0, #28]
 80169f8:	6a03      	ldr	r3, [r0, #32]
 80169fa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80169fe:	6203      	str	r3, [r0, #32]
 8016a00:	6a03      	ldr	r3, [r0, #32]
 8016a02:	8891      	ldrh	r1, [r2, #4]
 8016a04:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016a08:	6203      	str	r3, [r0, #32]
 8016a0a:	6a03      	ldr	r3, [r0, #32]
 8016a0c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016a10:	6203      	str	r3, [r0, #32]
 8016a12:	4b27      	ldr	r3, [pc, #156]	; (8016ab0 <timer_channel_output_config+0x1cc>)
 8016a14:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016a18:	4299      	cmp	r1, r3
 8016a1a:	d1a4      	bne.n	8016966 <timer_channel_output_config+0x82>
 8016a1c:	6a03      	ldr	r3, [r0, #32]
 8016a1e:	8851      	ldrh	r1, [r2, #2]
 8016a20:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8016a24:	6203      	str	r3, [r0, #32]
 8016a26:	6a03      	ldr	r3, [r0, #32]
 8016a28:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016a2c:	6203      	str	r3, [r0, #32]
 8016a2e:	6a03      	ldr	r3, [r0, #32]
 8016a30:	88d1      	ldrh	r1, [r2, #6]
 8016a32:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016a36:	6203      	str	r3, [r0, #32]
 8016a38:	6a03      	ldr	r3, [r0, #32]
 8016a3a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016a3e:	6203      	str	r3, [r0, #32]
 8016a40:	6843      	ldr	r3, [r0, #4]
 8016a42:	8911      	ldrh	r1, [r2, #8]
 8016a44:	8952      	ldrh	r2, [r2, #10]
 8016a46:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8016a4a:	6043      	str	r3, [r0, #4]
 8016a4c:	6843      	ldr	r3, [r0, #4]
 8016a4e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016a52:	6043      	str	r3, [r0, #4]
 8016a54:	6843      	ldr	r3, [r0, #4]
 8016a56:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8016a5a:	6043      	str	r3, [r0, #4]
 8016a5c:	6843      	ldr	r3, [r0, #4]
 8016a5e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8016a62:	e77f      	b.n	8016964 <timer_channel_output_config+0x80>
 8016a64:	6a03      	ldr	r3, [r0, #32]
 8016a66:	8811      	ldrh	r1, [r2, #0]
 8016a68:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8016a6c:	6203      	str	r3, [r0, #32]
 8016a6e:	69c3      	ldr	r3, [r0, #28]
 8016a70:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016a74:	61c3      	str	r3, [r0, #28]
 8016a76:	6a03      	ldr	r3, [r0, #32]
 8016a78:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016a7c:	6203      	str	r3, [r0, #32]
 8016a7e:	6a03      	ldr	r3, [r0, #32]
 8016a80:	8891      	ldrh	r1, [r2, #4]
 8016a82:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8016a86:	6203      	str	r3, [r0, #32]
 8016a88:	6a03      	ldr	r3, [r0, #32]
 8016a8a:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016a8e:	6203      	str	r3, [r0, #32]
 8016a90:	4b07      	ldr	r3, [pc, #28]	; (8016ab0 <timer_channel_output_config+0x1cc>)
 8016a92:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016a96:	4299      	cmp	r1, r3
 8016a98:	f47f af65 	bne.w	8016966 <timer_channel_output_config+0x82>
 8016a9c:	6843      	ldr	r3, [r0, #4]
 8016a9e:	8912      	ldrh	r2, [r2, #8]
 8016aa0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016aa4:	6043      	str	r3, [r0, #4]
 8016aa6:	6843      	ldr	r3, [r0, #4]
 8016aa8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8016aac:	e75a      	b.n	8016964 <timer_channel_output_config+0x80>
 8016aae:	bf00      	nop
 8016ab0:	40010000 	andmi	r0, r1, r0

08016ab4 <timer_channel_output_mode_config>:
 8016ab4:	2903      	cmp	r1, #3
 8016ab6:	d81a      	bhi.n	8016aee <timer_channel_output_mode_config+0x3a>
 8016ab8:	e8df f001 	tbb	[pc, r1]
 8016abc:	1a120a02 	bne	84992cc <__exidx_end+0x47e45c>
 8016ac0:	6983      	ldr	r3, [r0, #24]
 8016ac2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016ac6:	6183      	str	r3, [r0, #24]
 8016ac8:	6983      	ldr	r3, [r0, #24]
 8016aca:	4313      	orrs	r3, r2
 8016acc:	6183      	str	r3, [r0, #24]
 8016ace:	4770      	bx	lr
 8016ad0:	6983      	ldr	r3, [r0, #24]
 8016ad2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016ad6:	6183      	str	r3, [r0, #24]
 8016ad8:	6983      	ldr	r3, [r0, #24]
 8016ada:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016ade:	e7f5      	b.n	8016acc <timer_channel_output_mode_config+0x18>
 8016ae0:	69c3      	ldr	r3, [r0, #28]
 8016ae2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016ae6:	61c3      	str	r3, [r0, #28]
 8016ae8:	69c3      	ldr	r3, [r0, #28]
 8016aea:	4313      	orrs	r3, r2
 8016aec:	61c3      	str	r3, [r0, #28]
 8016aee:	4770      	bx	lr
 8016af0:	69c3      	ldr	r3, [r0, #28]
 8016af2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016af6:	61c3      	str	r3, [r0, #28]
 8016af8:	69c3      	ldr	r3, [r0, #28]
 8016afa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016afe:	e7f5      	b.n	8016aec <timer_channel_output_mode_config+0x38>

08016b00 <timer_channel_output_pulse_value_config>:
 8016b00:	2903      	cmp	r1, #3
 8016b02:	d80a      	bhi.n	8016b1a <timer_channel_output_pulse_value_config+0x1a>
 8016b04:	e8df f001 	tbb	[pc, r1]
 8016b08:	08060402 	stmdaeq	r6, {r1, sl}
 8016b0c:	6342      	str	r2, [r0, #52]	; 0x34
 8016b0e:	4770      	bx	lr
 8016b10:	6382      	str	r2, [r0, #56]	; 0x38
 8016b12:	4770      	bx	lr
 8016b14:	63c2      	str	r2, [r0, #60]	; 0x3c
 8016b16:	4770      	bx	lr
 8016b18:	6402      	str	r2, [r0, #64]	; 0x40
 8016b1a:	4770      	bx	lr

08016b1c <timer_channel_output_shadow_config>:
 8016b1c:	2903      	cmp	r1, #3
 8016b1e:	d81a      	bhi.n	8016b56 <timer_channel_output_shadow_config+0x3a>
 8016b20:	e8df f001 	tbb	[pc, r1]
 8016b24:	1a120a02 	bne	8499334 <__exidx_end+0x47e4c4>
 8016b28:	6983      	ldr	r3, [r0, #24]
 8016b2a:	f023 0308 	bic.w	r3, r3, #8
 8016b2e:	6183      	str	r3, [r0, #24]
 8016b30:	6983      	ldr	r3, [r0, #24]
 8016b32:	4313      	orrs	r3, r2
 8016b34:	6183      	str	r3, [r0, #24]
 8016b36:	4770      	bx	lr
 8016b38:	6983      	ldr	r3, [r0, #24]
 8016b3a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016b3e:	6183      	str	r3, [r0, #24]
 8016b40:	6983      	ldr	r3, [r0, #24]
 8016b42:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016b46:	e7f5      	b.n	8016b34 <timer_channel_output_shadow_config+0x18>
 8016b48:	69c3      	ldr	r3, [r0, #28]
 8016b4a:	f023 0308 	bic.w	r3, r3, #8
 8016b4e:	61c3      	str	r3, [r0, #28]
 8016b50:	69c3      	ldr	r3, [r0, #28]
 8016b52:	4313      	orrs	r3, r2
 8016b54:	61c3      	str	r3, [r0, #28]
 8016b56:	4770      	bx	lr
 8016b58:	69c3      	ldr	r3, [r0, #28]
 8016b5a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016b5e:	61c3      	str	r3, [r0, #28]
 8016b60:	69c3      	ldr	r3, [r0, #28]
 8016b62:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016b66:	e7f5      	b.n	8016b54 <timer_channel_output_shadow_config+0x38>

08016b68 <timer_input_trigger_source_select>:
 8016b68:	6883      	ldr	r3, [r0, #8]
 8016b6a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016b6e:	6083      	str	r3, [r0, #8]
 8016b70:	6883      	ldr	r3, [r0, #8]
 8016b72:	4319      	orrs	r1, r3
 8016b74:	6081      	str	r1, [r0, #8]
 8016b76:	4770      	bx	lr

08016b78 <timer_master_output_trigger_source_select>:
 8016b78:	6843      	ldr	r3, [r0, #4]
 8016b7a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016b7e:	6043      	str	r3, [r0, #4]
 8016b80:	6843      	ldr	r3, [r0, #4]
 8016b82:	4319      	orrs	r1, r3
 8016b84:	6041      	str	r1, [r0, #4]
 8016b86:	4770      	bx	lr

08016b88 <timer_slave_mode_select>:
 8016b88:	6883      	ldr	r3, [r0, #8]
 8016b8a:	f023 0307 	bic.w	r3, r3, #7
 8016b8e:	6083      	str	r3, [r0, #8]
 8016b90:	6883      	ldr	r3, [r0, #8]
 8016b92:	4319      	orrs	r1, r3
 8016b94:	6081      	str	r1, [r0, #8]
 8016b96:	4770      	bx	lr

08016b98 <timer_master_slave_mode_config>:
 8016b98:	b921      	cbnz	r1, 8016ba4 <timer_master_slave_mode_config+0xc>
 8016b9a:	6883      	ldr	r3, [r0, #8]
 8016b9c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016ba0:	6083      	str	r3, [r0, #8]
 8016ba2:	4770      	bx	lr
 8016ba4:	2901      	cmp	r1, #1
 8016ba6:	d1fc      	bne.n	8016ba2 <timer_master_slave_mode_config+0xa>
 8016ba8:	6883      	ldr	r3, [r0, #8]
 8016baa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016bae:	e7f7      	b.n	8016ba0 <timer_master_slave_mode_config+0x8>

08016bb0 <usart_deinit>:
 8016bb0:	b508      	push	{r3, lr}
 8016bb2:	4b2d      	ldr	r3, [pc, #180]	; (8016c68 <usart_deinit+0xb8>)
 8016bb4:	4298      	cmp	r0, r3
 8016bb6:	d050      	beq.n	8016c5a <usart_deinit+0xaa>
 8016bb8:	d817      	bhi.n	8016bea <usart_deinit+0x3a>
 8016bba:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016bbe:	4298      	cmp	r0, r3
 8016bc0:	d044      	beq.n	8016c4c <usart_deinit+0x9c>
 8016bc2:	d808      	bhi.n	8016bd6 <usart_deinit+0x26>
 8016bc4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016bc8:	4298      	cmp	r0, r3
 8016bca:	d02a      	beq.n	8016c22 <usart_deinit+0x72>
 8016bcc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016bd0:	4298      	cmp	r0, r3
 8016bd2:	d02d      	beq.n	8016c30 <usart_deinit+0x80>
 8016bd4:	bd08      	pop	{r3, pc}
 8016bd6:	4b25      	ldr	r3, [pc, #148]	; (8016c6c <usart_deinit+0xbc>)
 8016bd8:	4298      	cmp	r0, r3
 8016bda:	d1fb      	bne.n	8016bd4 <usart_deinit+0x24>
 8016bdc:	f640 0014 	movw	r0, #2068	; 0x814
 8016be0:	f7ff fce7 	bl	80165b2 <rcu_periph_reset_enable>
 8016be4:	f640 0014 	movw	r0, #2068	; 0x814
 8016be8:	e017      	b.n	8016c1a <usart_deinit+0x6a>
 8016bea:	4b21      	ldr	r3, [pc, #132]	; (8016c70 <usart_deinit+0xc0>)
 8016bec:	4298      	cmp	r0, r3
 8016bee:	d00e      	beq.n	8016c0e <usart_deinit+0x5e>
 8016bf0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016bf4:	4298      	cmp	r0, r3
 8016bf6:	d022      	beq.n	8016c3e <usart_deinit+0x8e>
 8016bf8:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8016bfc:	4298      	cmp	r0, r3
 8016bfe:	d1e9      	bne.n	8016bd4 <usart_deinit+0x24>
 8016c00:	f640 001f 	movw	r0, #2079	; 0x81f
 8016c04:	f7ff fcd5 	bl	80165b2 <rcu_periph_reset_enable>
 8016c08:	f640 001f 	movw	r0, #2079	; 0x81f
 8016c0c:	e005      	b.n	8016c1a <usart_deinit+0x6a>
 8016c0e:	f640 1004 	movw	r0, #2308	; 0x904
 8016c12:	f7ff fcce 	bl	80165b2 <rcu_periph_reset_enable>
 8016c16:	f640 1004 	movw	r0, #2308	; 0x904
 8016c1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016c1e:	f7ff bcca 	b.w	80165b6 <rcu_periph_reset_disable>
 8016c22:	f640 0011 	movw	r0, #2065	; 0x811
 8016c26:	f7ff fcc4 	bl	80165b2 <rcu_periph_reset_enable>
 8016c2a:	f640 0011 	movw	r0, #2065	; 0x811
 8016c2e:	e7f4      	b.n	8016c1a <usart_deinit+0x6a>
 8016c30:	f640 0012 	movw	r0, #2066	; 0x812
 8016c34:	f7ff fcbd 	bl	80165b2 <rcu_periph_reset_enable>
 8016c38:	f640 0012 	movw	r0, #2066	; 0x812
 8016c3c:	e7ed      	b.n	8016c1a <usart_deinit+0x6a>
 8016c3e:	f640 1005 	movw	r0, #2309	; 0x905
 8016c42:	f7ff fcb6 	bl	80165b2 <rcu_periph_reset_enable>
 8016c46:	f640 1005 	movw	r0, #2309	; 0x905
 8016c4a:	e7e6      	b.n	8016c1a <usart_deinit+0x6a>
 8016c4c:	f640 0013 	movw	r0, #2067	; 0x813
 8016c50:	f7ff fcaf 	bl	80165b2 <rcu_periph_reset_enable>
 8016c54:	f640 0013 	movw	r0, #2067	; 0x813
 8016c58:	e7df      	b.n	8016c1a <usart_deinit+0x6a>
 8016c5a:	f640 001e 	movw	r0, #2078	; 0x81e
 8016c5e:	f7ff fca8 	bl	80165b2 <rcu_periph_reset_enable>
 8016c62:	f640 001e 	movw	r0, #2078	; 0x81e
 8016c66:	e7d8      	b.n	8016c1a <usart_deinit+0x6a>
 8016c68:	40007800 	andmi	r7, r0, r0, lsl #16
 8016c6c:	40005000 	andmi	r5, r0, r0
 8016c70:	40011000 	andmi	r1, r1, r0

08016c74 <usart_baudrate_set>:
 8016c74:	b538      	push	{r3, r4, r5, lr}
 8016c76:	4b1e      	ldr	r3, [pc, #120]	; (8016cf0 <usart_baudrate_set+0x7c>)
 8016c78:	4298      	cmp	r0, r3
 8016c7a:	4604      	mov	r4, r0
 8016c7c:	460d      	mov	r5, r1
 8016c7e:	d02e      	beq.n	8016cde <usart_baudrate_set+0x6a>
 8016c80:	d821      	bhi.n	8016cc6 <usart_baudrate_set+0x52>
 8016c82:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016c86:	4298      	cmp	r0, r3
 8016c88:	d029      	beq.n	8016cde <usart_baudrate_set+0x6a>
 8016c8a:	d81a      	bhi.n	8016cc2 <usart_baudrate_set+0x4e>
 8016c8c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016c90:	4298      	cmp	r0, r3
 8016c92:	d024      	beq.n	8016cde <usart_baudrate_set+0x6a>
 8016c94:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016c98:	429c      	cmp	r4, r3
 8016c9a:	d020      	beq.n	8016cde <usart_baudrate_set+0x6a>
 8016c9c:	2000      	movs	r0, #0
 8016c9e:	68e2      	ldr	r2, [r4, #12]
 8016ca0:	0412      	lsls	r2, r2, #16
 8016ca2:	ea4f 0355 	mov.w	r3, r5, lsr #1
 8016ca6:	d51c      	bpl.n	8016ce2 <usart_baudrate_set+0x6e>
 8016ca8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8016cac:	fbb3 f1f5 	udiv	r1, r3, r5
 8016cb0:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8016cb4:	f021 010f 	bic.w	r1, r1, #15
 8016cb8:	0409      	lsls	r1, r1, #16
 8016cba:	0c09      	lsrs	r1, r1, #16
 8016cbc:	430b      	orrs	r3, r1
 8016cbe:	60a3      	str	r3, [r4, #8]
 8016cc0:	bd38      	pop	{r3, r4, r5, pc}
 8016cc2:	4b0c      	ldr	r3, [pc, #48]	; (8016cf4 <usart_baudrate_set+0x80>)
 8016cc4:	e7e8      	b.n	8016c98 <usart_baudrate_set+0x24>
 8016cc6:	4b0c      	ldr	r3, [pc, #48]	; (8016cf8 <usart_baudrate_set+0x84>)
 8016cc8:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8016ccc:	429a      	cmp	r2, r3
 8016cce:	d002      	beq.n	8016cd6 <usart_baudrate_set+0x62>
 8016cd0:	f5a3 4314 	sub.w	r3, r3, #37888	; 0x9400
 8016cd4:	e7e0      	b.n	8016c98 <usart_baudrate_set+0x24>
 8016cd6:	2003      	movs	r0, #3
 8016cd8:	f7ff fc8c 	bl	80165f4 <rcu_clock_freq_get>
 8016cdc:	e7df      	b.n	8016c9e <usart_baudrate_set+0x2a>
 8016cde:	2002      	movs	r0, #2
 8016ce0:	e7fa      	b.n	8016cd8 <usart_baudrate_set+0x64>
 8016ce2:	4403      	add	r3, r0
 8016ce4:	fbb3 f1f5 	udiv	r1, r3, r5
 8016ce8:	b289      	uxth	r1, r1
 8016cea:	60a1      	str	r1, [r4, #8]
 8016cec:	e7e8      	b.n	8016cc0 <usart_baudrate_set+0x4c>
 8016cee:	bf00      	nop
 8016cf0:	40007800 	andmi	r7, r0, r0, lsl #16
 8016cf4:	40005000 	andmi	r5, r0, r0
 8016cf8:	40011000 	andmi	r1, r1, r0

08016cfc <usart_parity_config>:
 8016cfc:	68c3      	ldr	r3, [r0, #12]
 8016cfe:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8016d02:	60c3      	str	r3, [r0, #12]
 8016d04:	68c3      	ldr	r3, [r0, #12]
 8016d06:	4319      	orrs	r1, r3
 8016d08:	60c1      	str	r1, [r0, #12]
 8016d0a:	4770      	bx	lr

08016d0c <usart_word_length_set>:
 8016d0c:	68c3      	ldr	r3, [r0, #12]
 8016d0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8016d12:	60c3      	str	r3, [r0, #12]
 8016d14:	68c3      	ldr	r3, [r0, #12]
 8016d16:	4319      	orrs	r1, r3
 8016d18:	60c1      	str	r1, [r0, #12]
 8016d1a:	4770      	bx	lr

08016d1c <usart_stop_bit_set>:
 8016d1c:	6903      	ldr	r3, [r0, #16]
 8016d1e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8016d22:	6103      	str	r3, [r0, #16]
 8016d24:	6903      	ldr	r3, [r0, #16]
 8016d26:	4319      	orrs	r1, r3
 8016d28:	6101      	str	r1, [r0, #16]
 8016d2a:	4770      	bx	lr

08016d2c <usart_transmit_config>:
 8016d2c:	68c3      	ldr	r3, [r0, #12]
 8016d2e:	f023 0308 	bic.w	r3, r3, #8
 8016d32:	4319      	orrs	r1, r3
 8016d34:	60c1      	str	r1, [r0, #12]
 8016d36:	4770      	bx	lr

08016d38 <usart_receive_config>:
 8016d38:	68c3      	ldr	r3, [r0, #12]
 8016d3a:	f023 0304 	bic.w	r3, r3, #4
 8016d3e:	4319      	orrs	r1, r3
 8016d40:	60c1      	str	r1, [r0, #12]
 8016d42:	4770      	bx	lr

08016d44 <usart_hardware_flow_rts_config>:
 8016d44:	6943      	ldr	r3, [r0, #20]
 8016d46:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016d4a:	4319      	orrs	r1, r3
 8016d4c:	6141      	str	r1, [r0, #20]
 8016d4e:	4770      	bx	lr

08016d50 <usart_hardware_flow_cts_config>:
 8016d50:	6943      	ldr	r3, [r0, #20]
 8016d52:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016d56:	4319      	orrs	r1, r3
 8016d58:	6141      	str	r1, [r0, #20]
 8016d5a:	4770      	bx	lr

08016d5c <usart_dma_transmit_config>:
 8016d5c:	6943      	ldr	r3, [r0, #20]
 8016d5e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016d62:	4319      	orrs	r1, r3
 8016d64:	6141      	str	r1, [r0, #20]
 8016d66:	4770      	bx	lr

08016d68 <usart_flag_get>:
 8016d68:	098b      	lsrs	r3, r1, #6
 8016d6a:	f001 011f 	and.w	r1, r1, #31
 8016d6e:	581a      	ldr	r2, [r3, r0]
 8016d70:	2301      	movs	r3, #1
 8016d72:	408b      	lsls	r3, r1
 8016d74:	4213      	tst	r3, r2
 8016d76:	bf14      	ite	ne
 8016d78:	2001      	movne	r0, #1
 8016d7a:	2000      	moveq	r0, #0
 8016d7c:	4770      	bx	lr

08016d7e <usart_flag_clear>:
 8016d7e:	b510      	push	{r4, lr}
 8016d80:	098c      	lsrs	r4, r1, #6
 8016d82:	2201      	movs	r2, #1
 8016d84:	5823      	ldr	r3, [r4, r0]
 8016d86:	f001 011f 	and.w	r1, r1, #31
 8016d8a:	408a      	lsls	r2, r1
 8016d8c:	ea23 0302 	bic.w	r3, r3, r2
 8016d90:	5023      	str	r3, [r4, r0]
 8016d92:	bd10      	pop	{r4, pc}

08016d94 <usart_interrupt_enable>:
 8016d94:	098a      	lsrs	r2, r1, #6
 8016d96:	b510      	push	{r4, lr}
 8016d98:	f001 011f 	and.w	r1, r1, #31
 8016d9c:	5814      	ldr	r4, [r2, r0]
 8016d9e:	2301      	movs	r3, #1
 8016da0:	408b      	lsls	r3, r1
 8016da2:	4323      	orrs	r3, r4
 8016da4:	5013      	str	r3, [r2, r0]
 8016da6:	bd10      	pop	{r4, pc}

08016da8 <usart_interrupt_disable>:
 8016da8:	f7ff bfe9 	b.w	8016d7e <usart_flag_clear>

08016dac <usart_interrupt_flag_clear>:
 8016dac:	b510      	push	{r4, lr}
 8016dae:	0d8c      	lsrs	r4, r1, #22
 8016db0:	2201      	movs	r2, #1
 8016db2:	5823      	ldr	r3, [r4, r0]
 8016db4:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8016db8:	408a      	lsls	r2, r1
 8016dba:	ea23 0302 	bic.w	r3, r3, r2
 8016dbe:	5023      	str	r3, [r4, r0]
 8016dc0:	bd10      	pop	{r4, pc}
	...

08016dc4 <emac_eth_recv>:
 8016dc4:	b538      	push	{r3, r4, r5, lr}
 8016dc6:	4605      	mov	r5, r0
 8016dc8:	f7ff fada 	bl	8016380 <enet_rxframe_size_get>
 8016dcc:	4604      	mov	r4, r0
 8016dce:	b138      	cbz	r0, 8016de0 <emac_eth_recv+0x1c>
 8016dd0:	4b05      	ldr	r3, [pc, #20]	; (8016de8 <emac_eth_recv+0x24>)
 8016dd2:	2105      	movs	r1, #5
 8016dd4:	6818      	ldr	r0, [r3, #0]
 8016dd6:	f7ff fa77 	bl	80162c8 <enet_desc_information_get>
 8016dda:	6028      	str	r0, [r5, #0]
 8016ddc:	4620      	mov	r0, r4
 8016dde:	bd38      	pop	{r3, r4, r5, pc}
 8016de0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016de4:	e7fb      	b.n	8016dde <emac_eth_recv+0x1a>
 8016de6:	bf00      	nop
 8016de8:	2000fda0 	andcs	pc, r0, r0, lsr #27

08016dec <emac_free_pkt>:
 8016dec:	2100      	movs	r1, #0
 8016dee:	4608      	mov	r0, r1
 8016df0:	f7fe bf86 	b.w	8015d00 <enet_frame_receive>

08016df4 <emac_eth_send>:
 8016df4:	f7fe bfd0 	b.w	8015d98 <enet_frame_transmit>

08016df8 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 8016df8:	2801      	cmp	r0, #1
 8016dfa:	bf9c      	itt	ls
 8016dfc:	4b01      	ldrls	r3, [pc, #4]	; (8016e04 <bkp_data_write(bkp_data_register_enum, unsigned short)+0xc>)
 8016dfe:	f823 1010 	strhls.w	r1, [r3, r0, lsl #1]
 8016e02:	4770      	bx	lr
 8016e04:	40024010 	andmi	r4, r2, r0, lsl r0

08016e08 <bkp_data_read(bkp_data_register_enum)>:
 8016e08:	2801      	cmp	r0, #1
 8016e0a:	bf9d      	ittte	ls
 8016e0c:	4b02      	ldrls	r3, [pc, #8]	; (8016e18 <bkp_data_read(bkp_data_register_enum)+0x10>)
 8016e0e:	f833 0010 	ldrhls.w	r0, [r3, r0, lsl #1]
 8016e12:	b280      	uxthls	r0, r0
 8016e14:	2000      	movhi	r0, #0
 8016e16:	4770      	bx	lr
 8016e18:	40024010 	andmi	r4, r2, r0, lsl r0

08016e1c <gd32_adc_init()>:
 8016e1c:	b510      	push	{r4, lr}
 8016e1e:	f241 1008 	movw	r0, #4360	; 0x1108
 8016e22:	4c24      	ldr	r4, [pc, #144]	; (8016eb4 <gd32_adc_init()+0x98>)
 8016e24:	f7ff fbaa 	bl	801657c <rcu_periph_clock_enable>
 8016e28:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8016e2c:	f000 fce6 	bl	80177fc <adc_clock_config>
 8016e30:	4620      	mov	r0, r4
 8016e32:	2203      	movs	r2, #3
 8016e34:	2102      	movs	r1, #2
 8016e36:	f000 fd63 	bl	8017900 <adc_channel_length_config>
 8016e3a:	4620      	mov	r0, r4
 8016e3c:	2306      	movs	r3, #6
 8016e3e:	2210      	movs	r2, #16
 8016e40:	2100      	movs	r1, #0
 8016e42:	f000 fd7a 	bl	801793a <adc_inserted_channel_config>
 8016e46:	4620      	mov	r0, r4
 8016e48:	2306      	movs	r3, #6
 8016e4a:	2211      	movs	r2, #17
 8016e4c:	2101      	movs	r1, #1
 8016e4e:	f000 fd74 	bl	801793a <adc_inserted_channel_config>
 8016e52:	2306      	movs	r3, #6
 8016e54:	4620      	mov	r0, r4
 8016e56:	2212      	movs	r2, #18
 8016e58:	2102      	movs	r1, #2
 8016e5a:	f000 fd6e 	bl	801793a <adc_inserted_channel_config>
 8016e5e:	2200      	movs	r2, #0
 8016e60:	4620      	mov	r0, r4
 8016e62:	2102      	movs	r1, #2
 8016e64:	f000 fd98 	bl	8017998 <adc_external_trigger_config>
 8016e68:	4620      	mov	r0, r4
 8016e6a:	2100      	movs	r1, #0
 8016e6c:	f000 fcfe 	bl	801786c <adc_data_alignment_config>
 8016e70:	2201      	movs	r2, #1
 8016e72:	4620      	mov	r0, r4
 8016e74:	f44f 7180 	mov.w	r1, #256	; 0x100
 8016e78:	f000 fcd0 	bl	801781c <adc_special_function_config>
 8016e7c:	2101      	movs	r1, #1
 8016e7e:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8016e82:	f000 fd15 	bl	80178b0 <adc_channel_16_to_18>
 8016e86:	2101      	movs	r1, #1
 8016e88:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8016e8c:	f000 fd10 	bl	80178b0 <adc_channel_16_to_18>
 8016e90:	4620      	mov	r0, r4
 8016e92:	f000 fcf4 	bl	801787e <adc_enable>
 8016e96:	2100      	movs	r1, #0
 8016e98:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8016e9c:	f000 fb80 	bl	80175a0 <udelay(unsigned int, unsigned int)>
 8016ea0:	4620      	mov	r0, r4
 8016ea2:	f000 fcf4 	bl	801788e <adc_calibration_enable>
 8016ea6:	4620      	mov	r0, r4
 8016ea8:	2102      	movs	r1, #2
 8016eaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016eae:	f000 bd89 	b.w	80179c4 <adc_software_trigger_enable>
 8016eb2:	bf00      	nop
 8016eb4:	40012000 	andmi	r2, r1, r0

08016eb8 <_stop() [clone .isra.0]>:
 8016eb8:	b508      	push	{r3, lr}
 8016eba:	4806      	ldr	r0, [pc, #24]	; (8016ed4 <_stop() [clone .isra.0]+0x1c>)
 8016ebc:	f000 fe10 	bl	8017ae0 <i2c_stop_on_bus>
 8016ec0:	4905      	ldr	r1, [pc, #20]	; (8016ed8 <_stop() [clone .isra.0]+0x20>)
 8016ec2:	f640 73ff 	movw	r3, #4095	; 0xfff
 8016ec6:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8016eca:	0592      	lsls	r2, r2, #22
 8016ecc:	d501      	bpl.n	8016ed2 <_stop() [clone .isra.0]+0x1a>
 8016ece:	3b01      	subs	r3, #1
 8016ed0:	d1f9      	bne.n	8016ec6 <_stop() [clone .isra.0]+0xe>
 8016ed2:	bd08      	pop	{r3, pc}
 8016ed4:	40005400 	andmi	r5, r0, r0, lsl #8
 8016ed8:	40005000 	andmi	r5, r0, r0

08016edc <gd32_i2c_begin>:
 8016edc:	b508      	push	{r3, lr}
 8016ede:	f241 0015 	movw	r0, #4117	; 0x1015
 8016ee2:	f7ff fb4b 	bl	801657c <rcu_periph_clock_enable>
 8016ee6:	f640 4001 	movw	r0, #3073	; 0xc01
 8016eea:	f7ff fb47 	bl	801657c <rcu_periph_clock_enable>
 8016eee:	f640 4001 	movw	r0, #3073	; 0xc01
 8016ef2:	f7ff fb43 	bl	801657c <rcu_periph_clock_enable>
 8016ef6:	481b      	ldr	r0, [pc, #108]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016ef8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8016efc:	2104      	movs	r1, #4
 8016efe:	f7ff fafc 	bl	80164fa <gpio_af_set>
 8016f02:	4818      	ldr	r0, [pc, #96]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016f04:	f44f 7200 	mov.w	r2, #512	; 0x200
 8016f08:	2104      	movs	r1, #4
 8016f0a:	f7ff faf6 	bl	80164fa <gpio_af_set>
 8016f0e:	4815      	ldr	r0, [pc, #84]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016f10:	f44f 7380 	mov.w	r3, #256	; 0x100
 8016f14:	2201      	movs	r2, #1
 8016f16:	2102      	movs	r1, #2
 8016f18:	f7ff fab4 	bl	8016484 <gpio_mode_set>
 8016f1c:	4811      	ldr	r0, [pc, #68]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016f1e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8016f22:	2202      	movs	r2, #2
 8016f24:	2101      	movs	r1, #1
 8016f26:	f7ff facd 	bl	80164c4 <gpio_output_options_set>
 8016f2a:	480e      	ldr	r0, [pc, #56]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016f2c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8016f30:	2201      	movs	r2, #1
 8016f32:	2102      	movs	r1, #2
 8016f34:	f7ff faa6 	bl	8016484 <gpio_mode_set>
 8016f38:	f44f 7300 	mov.w	r3, #512	; 0x200
 8016f3c:	4809      	ldr	r0, [pc, #36]	; (8016f64 <gd32_i2c_begin+0x88>)
 8016f3e:	2202      	movs	r2, #2
 8016f40:	2101      	movs	r1, #1
 8016f42:	f7ff fabf 	bl	80164c4 <gpio_output_options_set>
 8016f46:	4908      	ldr	r1, [pc, #32]	; (8016f68 <gd32_i2c_begin+0x8c>)
 8016f48:	4808      	ldr	r0, [pc, #32]	; (8016f6c <gd32_i2c_begin+0x90>)
 8016f4a:	2200      	movs	r2, #0
 8016f4c:	f000 fd48 	bl	80179e0 <i2c_clock_config>
 8016f50:	4806      	ldr	r0, [pc, #24]	; (8016f6c <gd32_i2c_begin+0x90>)
 8016f52:	f000 fdbb 	bl	8017acc <i2c_enable>
 8016f56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016f5a:	4804      	ldr	r0, [pc, #16]	; (8016f6c <gd32_i2c_begin+0x90>)
 8016f5c:	2101      	movs	r1, #1
 8016f5e:	f000 bd9b 	b.w	8017a98 <i2c_ack_config>
 8016f62:	bf00      	nop
 8016f64:	40020400 	andmi	r0, r2, r0, lsl #8
 8016f68:	00061a80 	andeq	r1, r6, r0, lsl #21
 8016f6c:	40005400 	andmi	r5, r0, r0, lsl #8

08016f70 <gd32_i2c_set_baudrate>:
 8016f70:	4601      	mov	r1, r0
 8016f72:	2200      	movs	r2, #0
 8016f74:	4801      	ldr	r0, [pc, #4]	; (8016f7c <gd32_i2c_set_baudrate+0xc>)
 8016f76:	f000 bd33 	b.w	80179e0 <i2c_clock_config>
 8016f7a:	bf00      	nop
 8016f7c:	40005400 	andmi	r5, r0, r0, lsl #8

08016f80 <gd32_i2c_set_address>:
 8016f80:	4b01      	ldr	r3, [pc, #4]	; (8016f88 <gd32_i2c_set_address+0x8>)
 8016f82:	0040      	lsls	r0, r0, #1
 8016f84:	7018      	strb	r0, [r3, #0]
 8016f86:	4770      	bx	lr
 8016f88:	2002d31c 	andcs	sp, r2, ip, lsl r3

08016f8c <gd32_i2c_write>:
 8016f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f8e:	4e30      	ldr	r6, [pc, #192]	; (8017050 <gd32_i2c_write+0xc4>)
 8016f90:	4604      	mov	r4, r0
 8016f92:	460f      	mov	r7, r1
 8016f94:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016f98:	f240 6101 	movw	r1, #1537	; 0x601
 8016f9c:	4630      	mov	r0, r6
 8016f9e:	f000 fda9 	bl	8017af4 <i2c_flag_get>
 8016fa2:	b9b0      	cbnz	r0, 8016fd2 <gd32_i2c_write+0x46>
 8016fa4:	482a      	ldr	r0, [pc, #168]	; (8017050 <gd32_i2c_write+0xc4>)
 8016fa6:	4e2a      	ldr	r6, [pc, #168]	; (8017050 <gd32_i2c_write+0xc4>)
 8016fa8:	f000 fd95 	bl	8017ad6 <i2c_start_on_bus>
 8016fac:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016fb0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8016fb4:	4630      	mov	r0, r6
 8016fb6:	f000 fd9d 	bl	8017af4 <i2c_flag_get>
 8016fba:	b190      	cbz	r0, 8016fe2 <gd32_i2c_write+0x56>
 8016fbc:	4b25      	ldr	r3, [pc, #148]	; (8017054 <gd32_i2c_write+0xc8>)
 8016fbe:	4824      	ldr	r0, [pc, #144]	; (8017050 <gd32_i2c_write+0xc4>)
 8016fc0:	7819      	ldrb	r1, [r3, #0]
 8016fc2:	4e23      	ldr	r6, [pc, #140]	; (8017050 <gd32_i2c_write+0xc4>)
 8016fc4:	f06f 0201 	mvn.w	r2, #1
 8016fc8:	f000 fd78 	bl	8017abc <i2c_master_addressing>
 8016fcc:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016fd0:	e00c      	b.n	8016fec <gd32_i2c_write+0x60>
 8016fd2:	3d01      	subs	r5, #1
 8016fd4:	d1e0      	bne.n	8016f98 <gd32_i2c_write+0xc>
 8016fd6:	f7ff ff6f 	bl	8016eb8 <_stop() [clone .isra.0]>
 8016fda:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016fde:	4240      	negs	r0, r0
 8016fe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016fe2:	3d01      	subs	r5, #1
 8016fe4:	d1e4      	bne.n	8016fb0 <gd32_i2c_write+0x24>
 8016fe6:	e7f6      	b.n	8016fd6 <gd32_i2c_write+0x4a>
 8016fe8:	3d01      	subs	r5, #1
 8016fea:	d0f4      	beq.n	8016fd6 <gd32_i2c_write+0x4a>
 8016fec:	f240 5101 	movw	r1, #1281	; 0x501
 8016ff0:	4630      	mov	r0, r6
 8016ff2:	f000 fd7f 	bl	8017af4 <i2c_flag_get>
 8016ff6:	2800      	cmp	r0, #0
 8016ff8:	d0f6      	beq.n	8016fe8 <gd32_i2c_write+0x5c>
 8016ffa:	4815      	ldr	r0, [pc, #84]	; (8017050 <gd32_i2c_write+0xc4>)
 8016ffc:	4e14      	ldr	r6, [pc, #80]	; (8017050 <gd32_i2c_write+0xc4>)
 8016ffe:	f240 5101 	movw	r1, #1281	; 0x501
 8017002:	f000 fd82 	bl	8017b0a <i2c_flag_clear>
 8017006:	f640 75ff 	movw	r5, #4095	; 0xfff
 801700a:	f240 5107 	movw	r1, #1287	; 0x507
 801700e:	4630      	mov	r0, r6
 8017010:	f000 fd70 	bl	8017af4 <i2c_flag_get>
 8017014:	2801      	cmp	r0, #1
 8017016:	d107      	bne.n	8017028 <gd32_i2c_write+0x9c>
 8017018:	4e0d      	ldr	r6, [pc, #52]	; (8017050 <gd32_i2c_write+0xc4>)
 801701a:	4427      	add	r7, r4
 801701c:	42a7      	cmp	r7, r4
 801701e:	d106      	bne.n	801702e <gd32_i2c_write+0xa2>
 8017020:	f7ff ff4a 	bl	8016eb8 <_stop() [clone .isra.0]>
 8017024:	2000      	movs	r0, #0
 8017026:	e7da      	b.n	8016fde <gd32_i2c_write+0x52>
 8017028:	3d01      	subs	r5, #1
 801702a:	d1ee      	bne.n	801700a <gd32_i2c_write+0x7e>
 801702c:	e7d3      	b.n	8016fd6 <gd32_i2c_write+0x4a>
 801702e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017032:	4630      	mov	r0, r6
 8017034:	f000 fd59 	bl	8017aea <i2c_data_transmit>
 8017038:	f640 75ff 	movw	r5, #4095	; 0xfff
 801703c:	f240 5102 	movw	r1, #1282	; 0x502
 8017040:	4630      	mov	r0, r6
 8017042:	f000 fd57 	bl	8017af4 <i2c_flag_get>
 8017046:	2800      	cmp	r0, #0
 8017048:	d1e8      	bne.n	801701c <gd32_i2c_write+0x90>
 801704a:	3d01      	subs	r5, #1
 801704c:	d1f6      	bne.n	801703c <gd32_i2c_write+0xb0>
 801704e:	e7c2      	b.n	8016fd6 <gd32_i2c_write+0x4a>
 8017050:	40005400 	andmi	r5, r0, r0, lsl #8
 8017054:	2002d31c 	andcs	sp, r2, ip, lsl r3

08017058 <gd32_i2c_read>:
 8017058:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801705c:	4f4d      	ldr	r7, [pc, #308]	; (8017194 <gd32_i2c_read+0x13c>)
 801705e:	4680      	mov	r8, r0
 8017060:	460c      	mov	r4, r1
 8017062:	f640 76ff 	movw	r6, #4095	; 0xfff
 8017066:	f240 6101 	movw	r1, #1537	; 0x601
 801706a:	4638      	mov	r0, r7
 801706c:	f000 fd42 	bl	8017af4 <i2c_flag_get>
 8017070:	4605      	mov	r5, r0
 8017072:	bb08      	cbnz	r0, 80170b8 <gd32_i2c_read+0x60>
 8017074:	2c02      	cmp	r4, #2
 8017076:	d103      	bne.n	8017080 <gd32_i2c_read+0x28>
 8017078:	4601      	mov	r1, r0
 801707a:	4846      	ldr	r0, [pc, #280]	; (8017194 <gd32_i2c_read+0x13c>)
 801707c:	f000 fd15 	bl	8017aaa <i2c_ackpos_config>
 8017080:	4844      	ldr	r0, [pc, #272]	; (8017194 <gd32_i2c_read+0x13c>)
 8017082:	4f44      	ldr	r7, [pc, #272]	; (8017194 <gd32_i2c_read+0x13c>)
 8017084:	f000 fd27 	bl	8017ad6 <i2c_start_on_bus>
 8017088:	f640 76ff 	movw	r6, #4095	; 0xfff
 801708c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8017090:	4638      	mov	r0, r7
 8017092:	f000 fd2f 	bl	8017af4 <i2c_flag_get>
 8017096:	b1a8      	cbz	r0, 80170c4 <gd32_i2c_read+0x6c>
 8017098:	4b3f      	ldr	r3, [pc, #252]	; (8017198 <gd32_i2c_read+0x140>)
 801709a:	483e      	ldr	r0, [pc, #248]	; (8017194 <gd32_i2c_read+0x13c>)
 801709c:	7819      	ldrb	r1, [r3, #0]
 801709e:	2201      	movs	r2, #1
 80170a0:	f000 fd0c 	bl	8017abc <i2c_master_addressing>
 80170a4:	2c02      	cmp	r4, #2
 80170a6:	d803      	bhi.n	80170b0 <gd32_i2c_read+0x58>
 80170a8:	483a      	ldr	r0, [pc, #232]	; (8017194 <gd32_i2c_read+0x13c>)
 80170aa:	2100      	movs	r1, #0
 80170ac:	f000 fcf4 	bl	8017a98 <i2c_ack_config>
 80170b0:	4f38      	ldr	r7, [pc, #224]	; (8017194 <gd32_i2c_read+0x13c>)
 80170b2:	f640 76ff 	movw	r6, #4095	; 0xfff
 80170b6:	e00a      	b.n	80170ce <gd32_i2c_read+0x76>
 80170b8:	3e01      	subs	r6, #1
 80170ba:	d1d4      	bne.n	8017066 <gd32_i2c_read+0xe>
 80170bc:	f7ff fefc 	bl	8016eb8 <_stop() [clone .isra.0]>
 80170c0:	2504      	movs	r5, #4
 80170c2:	e04d      	b.n	8017160 <gd32_i2c_read+0x108>
 80170c4:	3e01      	subs	r6, #1
 80170c6:	d1e1      	bne.n	801708c <gd32_i2c_read+0x34>
 80170c8:	e7f8      	b.n	80170bc <gd32_i2c_read+0x64>
 80170ca:	3e01      	subs	r6, #1
 80170cc:	d0f6      	beq.n	80170bc <gd32_i2c_read+0x64>
 80170ce:	f240 5101 	movw	r1, #1281	; 0x501
 80170d2:	4638      	mov	r0, r7
 80170d4:	f000 fd0e 	bl	8017af4 <i2c_flag_get>
 80170d8:	2800      	cmp	r0, #0
 80170da:	d0f6      	beq.n	80170ca <gd32_i2c_read+0x72>
 80170dc:	482d      	ldr	r0, [pc, #180]	; (8017194 <gd32_i2c_read+0x13c>)
 80170de:	f240 5101 	movw	r1, #1281	; 0x501
 80170e2:	f000 fd12 	bl	8017b0a <i2c_flag_clear>
 80170e6:	2c01      	cmp	r4, #1
 80170e8:	d102      	bne.n	80170f0 <gd32_i2c_read+0x98>
 80170ea:	482a      	ldr	r0, [pc, #168]	; (8017194 <gd32_i2c_read+0x13c>)
 80170ec:	f000 fcf8 	bl	8017ae0 <i2c_stop_on_bus>
 80170f0:	4e28      	ldr	r6, [pc, #160]	; (8017194 <gd32_i2c_read+0x13c>)
 80170f2:	f640 77ff 	movw	r7, #4095	; 0xfff
 80170f6:	e022      	b.n	801713e <gd32_i2c_read+0xe6>
 80170f8:	2c03      	cmp	r4, #3
 80170fa:	d134      	bne.n	8017166 <gd32_i2c_read+0x10e>
 80170fc:	f640 79ff 	movw	r9, #4095	; 0xfff
 8017100:	e002      	b.n	8017108 <gd32_i2c_read+0xb0>
 8017102:	f1b9 0901 	subs.w	r9, r9, #1
 8017106:	d0d9      	beq.n	80170bc <gd32_i2c_read+0x64>
 8017108:	f240 5102 	movw	r1, #1282	; 0x502
 801710c:	4630      	mov	r0, r6
 801710e:	f000 fcf1 	bl	8017af4 <i2c_flag_get>
 8017112:	2800      	cmp	r0, #0
 8017114:	d0f5      	beq.n	8017102 <gd32_i2c_read+0xaa>
 8017116:	2100      	movs	r1, #0
 8017118:	4630      	mov	r0, r6
 801711a:	f000 fcbd 	bl	8017a98 <i2c_ack_config>
 801711e:	f240 5106 	movw	r1, #1286	; 0x506
 8017122:	4630      	mov	r0, r6
 8017124:	f000 fce6 	bl	8017af4 <i2c_flag_get>
 8017128:	b138      	cbz	r0, 801713a <gd32_i2c_read+0xe2>
 801712a:	4630      	mov	r0, r6
 801712c:	f000 fcdf 	bl	8017aee <i2c_data_receive>
 8017130:	f808 0b01 	strb.w	r0, [r8], #1
 8017134:	3c01      	subs	r4, #1
 8017136:	f640 77ff 	movw	r7, #4095	; 0xfff
 801713a:	3f01      	subs	r7, #1
 801713c:	d0be      	beq.n	80170bc <gd32_i2c_read+0x64>
 801713e:	2c00      	cmp	r4, #0
 8017140:	d1da      	bne.n	80170f8 <gd32_i2c_read+0xa0>
 8017142:	4916      	ldr	r1, [pc, #88]	; (801719c <gd32_i2c_read+0x144>)
 8017144:	f640 73ff 	movw	r3, #4095	; 0xfff
 8017148:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801714c:	0592      	lsls	r2, r2, #22
 801714e:	d41d      	bmi.n	801718c <gd32_i2c_read+0x134>
 8017150:	4810      	ldr	r0, [pc, #64]	; (8017194 <gd32_i2c_read+0x13c>)
 8017152:	2101      	movs	r1, #1
 8017154:	f000 fca0 	bl	8017a98 <i2c_ack_config>
 8017158:	480e      	ldr	r0, [pc, #56]	; (8017194 <gd32_i2c_read+0x13c>)
 801715a:	2101      	movs	r1, #1
 801715c:	f000 fca5 	bl	8017aaa <i2c_ackpos_config>
 8017160:	4628      	mov	r0, r5
 8017162:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017166:	2c02      	cmp	r4, #2
 8017168:	d1d9      	bne.n	801711e <gd32_i2c_read+0xc6>
 801716a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801716e:	e002      	b.n	8017176 <gd32_i2c_read+0x11e>
 8017170:	f1b9 0901 	subs.w	r9, r9, #1
 8017174:	d0a2      	beq.n	80170bc <gd32_i2c_read+0x64>
 8017176:	f240 5102 	movw	r1, #1282	; 0x502
 801717a:	4630      	mov	r0, r6
 801717c:	f000 fcba 	bl	8017af4 <i2c_flag_get>
 8017180:	2800      	cmp	r0, #0
 8017182:	d0f5      	beq.n	8017170 <gd32_i2c_read+0x118>
 8017184:	4630      	mov	r0, r6
 8017186:	f000 fcab 	bl	8017ae0 <i2c_stop_on_bus>
 801718a:	e7c8      	b.n	801711e <gd32_i2c_read+0xc6>
 801718c:	3b01      	subs	r3, #1
 801718e:	d1db      	bne.n	8017148 <gd32_i2c_read+0xf0>
 8017190:	e796      	b.n	80170c0 <gd32_i2c_read+0x68>
 8017192:	bf00      	nop
 8017194:	40005400 	andmi	r5, r0, r0, lsl #8
 8017198:	2002d31c 	andcs	sp, r2, ip, lsl r3
 801719c:	40005000 	andmi	r5, r0, r0

080171a0 <_gpio_init(unsigned int)>:
 80171a0:	4b96      	ldr	r3, [pc, #600]	; (80173fc <_gpio_init(unsigned int)+0x25c>)
 80171a2:	4298      	cmp	r0, r3
 80171a4:	b510      	push	{r4, lr}
 80171a6:	f000 8104 	beq.w	80173b2 <_gpio_init(unsigned int)+0x212>
 80171aa:	d831      	bhi.n	8017210 <_gpio_init(unsigned int)+0x70>
 80171ac:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80171b0:	4298      	cmp	r0, r3
 80171b2:	f000 8098 	beq.w	80172e6 <_gpio_init(unsigned int)+0x146>
 80171b6:	f200 80bd 	bhi.w	8017334 <_gpio_init(unsigned int)+0x194>
 80171ba:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80171be:	4298      	cmp	r0, r3
 80171c0:	d070      	beq.n	80172a4 <_gpio_init(unsigned int)+0x104>
 80171c2:	488f      	ldr	r0, [pc, #572]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 80171c4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80171c8:	2107      	movs	r1, #7
 80171ca:	f7ff f996 	bl	80164fa <gpio_af_set>
 80171ce:	488c      	ldr	r0, [pc, #560]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 80171d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80171d4:	2201      	movs	r2, #1
 80171d6:	2102      	movs	r1, #2
 80171d8:	f7ff f954 	bl	8016484 <gpio_mode_set>
 80171dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80171e0:	4887      	ldr	r0, [pc, #540]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 80171e2:	2202      	movs	r2, #2
 80171e4:	2100      	movs	r1, #0
 80171e6:	f7ff f96d 	bl	80164c4 <gpio_output_options_set>
 80171ea:	4885      	ldr	r0, [pc, #532]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 80171ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80171f0:	2107      	movs	r1, #7
 80171f2:	f7ff f982 	bl	80164fa <gpio_af_set>
 80171f6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80171fa:	4881      	ldr	r0, [pc, #516]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 80171fc:	2201      	movs	r2, #1
 80171fe:	2102      	movs	r1, #2
 8017200:	f7ff f940 	bl	8016484 <gpio_mode_set>
 8017204:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017208:	487d      	ldr	r0, [pc, #500]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 801720a:	2202      	movs	r2, #2
 801720c:	2100      	movs	r1, #0
 801720e:	e045      	b.n	801729c <_gpio_init(unsigned int)+0xfc>
 8017210:	4b7c      	ldr	r3, [pc, #496]	; (8017404 <_gpio_init(unsigned int)+0x264>)
 8017212:	4298      	cmp	r0, r3
 8017214:	d022      	beq.n	801725c <_gpio_init(unsigned int)+0xbc>
 8017216:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801721a:	4298      	cmp	r0, r3
 801721c:	f000 80ab 	beq.w	8017376 <_gpio_init(unsigned int)+0x1d6>
 8017220:	4879      	ldr	r0, [pc, #484]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 8017222:	2202      	movs	r2, #2
 8017224:	2108      	movs	r1, #8
 8017226:	f7ff f968 	bl	80164fa <gpio_af_set>
 801722a:	2302      	movs	r3, #2
 801722c:	4619      	mov	r1, r3
 801722e:	4876      	ldr	r0, [pc, #472]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 8017230:	2201      	movs	r2, #1
 8017232:	f7ff f927 	bl	8016484 <gpio_mode_set>
 8017236:	2302      	movs	r3, #2
 8017238:	461a      	mov	r2, r3
 801723a:	4873      	ldr	r0, [pc, #460]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 801723c:	2100      	movs	r1, #0
 801723e:	f7ff f941 	bl	80164c4 <gpio_output_options_set>
 8017242:	4871      	ldr	r0, [pc, #452]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 8017244:	2201      	movs	r2, #1
 8017246:	2108      	movs	r1, #8
 8017248:	f7ff f957 	bl	80164fa <gpio_af_set>
 801724c:	2301      	movs	r3, #1
 801724e:	461a      	mov	r2, r3
 8017250:	486d      	ldr	r0, [pc, #436]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 8017252:	2102      	movs	r1, #2
 8017254:	f7ff f916 	bl	8016484 <gpio_mode_set>
 8017258:	2301      	movs	r3, #1
 801725a:	e0ca      	b.n	80173f2 <_gpio_init(unsigned int)+0x252>
 801725c:	486b      	ldr	r0, [pc, #428]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 801725e:	2240      	movs	r2, #64	; 0x40
 8017260:	2107      	movs	r1, #7
 8017262:	f7ff f94a 	bl	80164fa <gpio_af_set>
 8017266:	4869      	ldr	r0, [pc, #420]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 8017268:	2340      	movs	r3, #64	; 0x40
 801726a:	2201      	movs	r2, #1
 801726c:	2102      	movs	r1, #2
 801726e:	f7ff f909 	bl	8016484 <gpio_mode_set>
 8017272:	2340      	movs	r3, #64	; 0x40
 8017274:	4865      	ldr	r0, [pc, #404]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 8017276:	2202      	movs	r2, #2
 8017278:	2100      	movs	r1, #0
 801727a:	f7ff f923 	bl	80164c4 <gpio_output_options_set>
 801727e:	4863      	ldr	r0, [pc, #396]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 8017280:	2280      	movs	r2, #128	; 0x80
 8017282:	2107      	movs	r1, #7
 8017284:	f7ff f939 	bl	80164fa <gpio_af_set>
 8017288:	4860      	ldr	r0, [pc, #384]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 801728a:	2380      	movs	r3, #128	; 0x80
 801728c:	2201      	movs	r2, #1
 801728e:	2102      	movs	r1, #2
 8017290:	f7ff f8f8 	bl	8016484 <gpio_mode_set>
 8017294:	485d      	ldr	r0, [pc, #372]	; (801740c <_gpio_init(unsigned int)+0x26c>)
 8017296:	2380      	movs	r3, #128	; 0x80
 8017298:	2202      	movs	r2, #2
 801729a:	2100      	movs	r1, #0
 801729c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80172a0:	f7ff b910 	b.w	80164c4 <gpio_output_options_set>
 80172a4:	485a      	ldr	r0, [pc, #360]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172a6:	2204      	movs	r2, #4
 80172a8:	2107      	movs	r1, #7
 80172aa:	f7ff f926 	bl	80164fa <gpio_af_set>
 80172ae:	4858      	ldr	r0, [pc, #352]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172b0:	2304      	movs	r3, #4
 80172b2:	2201      	movs	r2, #1
 80172b4:	2102      	movs	r1, #2
 80172b6:	f7ff f8e5 	bl	8016484 <gpio_mode_set>
 80172ba:	2304      	movs	r3, #4
 80172bc:	4854      	ldr	r0, [pc, #336]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172be:	2202      	movs	r2, #2
 80172c0:	2100      	movs	r1, #0
 80172c2:	f7ff f8ff 	bl	80164c4 <gpio_output_options_set>
 80172c6:	4852      	ldr	r0, [pc, #328]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172c8:	2208      	movs	r2, #8
 80172ca:	2107      	movs	r1, #7
 80172cc:	f7ff f915 	bl	80164fa <gpio_af_set>
 80172d0:	484f      	ldr	r0, [pc, #316]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172d2:	2308      	movs	r3, #8
 80172d4:	2201      	movs	r2, #1
 80172d6:	2102      	movs	r1, #2
 80172d8:	f7ff f8d4 	bl	8016484 <gpio_mode_set>
 80172dc:	484c      	ldr	r0, [pc, #304]	; (8017410 <_gpio_init(unsigned int)+0x270>)
 80172de:	2308      	movs	r3, #8
 80172e0:	2202      	movs	r2, #2
 80172e2:	2100      	movs	r1, #0
 80172e4:	e7da      	b.n	801729c <_gpio_init(unsigned int)+0xfc>
 80172e6:	484b      	ldr	r0, [pc, #300]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 80172e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80172ec:	2108      	movs	r1, #8
 80172ee:	f7ff f904 	bl	80164fa <gpio_af_set>
 80172f2:	4848      	ldr	r0, [pc, #288]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 80172f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80172f8:	2201      	movs	r2, #1
 80172fa:	2102      	movs	r1, #2
 80172fc:	f7ff f8c2 	bl	8016484 <gpio_mode_set>
 8017300:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8017304:	4843      	ldr	r0, [pc, #268]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017306:	2202      	movs	r2, #2
 8017308:	2100      	movs	r1, #0
 801730a:	f7ff f8db 	bl	80164c4 <gpio_output_options_set>
 801730e:	4841      	ldr	r0, [pc, #260]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017310:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8017314:	2108      	movs	r1, #8
 8017316:	f7ff f8f0 	bl	80164fa <gpio_af_set>
 801731a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801731e:	483d      	ldr	r0, [pc, #244]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017320:	2201      	movs	r2, #1
 8017322:	2102      	movs	r1, #2
 8017324:	f7ff f8ae 	bl	8016484 <gpio_mode_set>
 8017328:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801732c:	4839      	ldr	r0, [pc, #228]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 801732e:	2202      	movs	r2, #2
 8017330:	2100      	movs	r1, #0
 8017332:	e7b3      	b.n	801729c <_gpio_init(unsigned int)+0xfc>
 8017334:	4837      	ldr	r0, [pc, #220]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017336:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801733a:	2108      	movs	r1, #8
 801733c:	f7ff f8dd 	bl	80164fa <gpio_af_set>
 8017340:	4834      	ldr	r0, [pc, #208]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017342:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8017346:	2201      	movs	r2, #1
 8017348:	2102      	movs	r1, #2
 801734a:	f7ff f89b 	bl	8016484 <gpio_mode_set>
 801734e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8017352:	4830      	ldr	r0, [pc, #192]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017354:	2202      	movs	r2, #2
 8017356:	2100      	movs	r1, #0
 8017358:	f7ff f8b4 	bl	80164c4 <gpio_output_options_set>
 801735c:	4828      	ldr	r0, [pc, #160]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 801735e:	2204      	movs	r2, #4
 8017360:	2108      	movs	r1, #8
 8017362:	f7ff f8ca 	bl	80164fa <gpio_af_set>
 8017366:	2304      	movs	r3, #4
 8017368:	4825      	ldr	r0, [pc, #148]	; (8017400 <_gpio_init(unsigned int)+0x260>)
 801736a:	2201      	movs	r2, #1
 801736c:	2102      	movs	r1, #2
 801736e:	f7ff f889 	bl	8016484 <gpio_mode_set>
 8017372:	2304      	movs	r3, #4
 8017374:	e748      	b.n	8017208 <_gpio_init(unsigned int)+0x68>
 8017376:	4827      	ldr	r0, [pc, #156]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017378:	2240      	movs	r2, #64	; 0x40
 801737a:	2108      	movs	r1, #8
 801737c:	f7ff f8bd 	bl	80164fa <gpio_af_set>
 8017380:	4824      	ldr	r0, [pc, #144]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017382:	2340      	movs	r3, #64	; 0x40
 8017384:	2201      	movs	r2, #1
 8017386:	2102      	movs	r1, #2
 8017388:	f7ff f87c 	bl	8016484 <gpio_mode_set>
 801738c:	2340      	movs	r3, #64	; 0x40
 801738e:	4821      	ldr	r0, [pc, #132]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 8017390:	2202      	movs	r2, #2
 8017392:	2100      	movs	r1, #0
 8017394:	f7ff f896 	bl	80164c4 <gpio_output_options_set>
 8017398:	481e      	ldr	r0, [pc, #120]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 801739a:	2280      	movs	r2, #128	; 0x80
 801739c:	2108      	movs	r1, #8
 801739e:	f7ff f8ac 	bl	80164fa <gpio_af_set>
 80173a2:	2380      	movs	r3, #128	; 0x80
 80173a4:	481b      	ldr	r0, [pc, #108]	; (8017414 <_gpio_init(unsigned int)+0x274>)
 80173a6:	2201      	movs	r2, #1
 80173a8:	2102      	movs	r1, #2
 80173aa:	f7ff f86b 	bl	8016484 <gpio_mode_set>
 80173ae:	2380      	movs	r3, #128	; 0x80
 80173b0:	e7bc      	b.n	801732c <_gpio_init(unsigned int)+0x18c>
 80173b2:	4815      	ldr	r0, [pc, #84]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173b4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80173b8:	2108      	movs	r1, #8
 80173ba:	f7ff f89e 	bl	80164fa <gpio_af_set>
 80173be:	4812      	ldr	r0, [pc, #72]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80173c4:	2201      	movs	r2, #1
 80173c6:	2102      	movs	r1, #2
 80173c8:	f7ff f85c 	bl	8016484 <gpio_mode_set>
 80173cc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80173d0:	480d      	ldr	r0, [pc, #52]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173d2:	2202      	movs	r2, #2
 80173d4:	2100      	movs	r1, #0
 80173d6:	f7ff f875 	bl	80164c4 <gpio_output_options_set>
 80173da:	480b      	ldr	r0, [pc, #44]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173dc:	2280      	movs	r2, #128	; 0x80
 80173de:	2108      	movs	r1, #8
 80173e0:	f7ff f88b 	bl	80164fa <gpio_af_set>
 80173e4:	2380      	movs	r3, #128	; 0x80
 80173e6:	4808      	ldr	r0, [pc, #32]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173e8:	2201      	movs	r2, #1
 80173ea:	2102      	movs	r1, #2
 80173ec:	f7ff f84a 	bl	8016484 <gpio_mode_set>
 80173f0:	2380      	movs	r3, #128	; 0x80
 80173f2:	4805      	ldr	r0, [pc, #20]	; (8017408 <_gpio_init(unsigned int)+0x268>)
 80173f4:	2202      	movs	r2, #2
 80173f6:	2100      	movs	r1, #0
 80173f8:	e750      	b.n	801729c <_gpio_init(unsigned int)+0xfc>
 80173fa:	bf00      	nop
 80173fc:	40007800 	andmi	r7, r0, r0, lsl #16
 8017400:	40020c00 	andmi	r0, r2, r0, lsl #24
 8017404:	40011000 	andmi	r1, r1, r0
 8017408:	40021000 	andmi	r1, r2, r0
 801740c:	40020400 	andmi	r0, r2, r0, lsl #8
 8017410:	40020000 	andmi	r0, r2, r0
 8017414:	40020800 	andmi	r0, r2, r0, lsl #16

08017418 <gd32_uart_begin>:
 8017418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801741a:	461e      	mov	r6, r3
 801741c:	4b44      	ldr	r3, [pc, #272]	; (8017530 <gd32_uart_begin+0x118>)
 801741e:	4298      	cmp	r0, r3
 8017420:	4604      	mov	r4, r0
 8017422:	460f      	mov	r7, r1
 8017424:	4615      	mov	r5, r2
 8017426:	d076      	beq.n	8017516 <gd32_uart_begin+0xfe>
 8017428:	d80f      	bhi.n	801744a <gd32_uart_begin+0x32>
 801742a:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801742e:	4298      	cmp	r0, r3
 8017430:	d060      	beq.n	80174f4 <gd32_uart_begin+0xdc>
 8017432:	d866      	bhi.n	8017502 <gd32_uart_begin+0xea>
 8017434:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8017438:	4298      	cmp	r0, r3
 801743a:	d054      	beq.n	80174e6 <gd32_uart_begin+0xce>
 801743c:	f241 0012 	movw	r0, #4114	; 0x1012
 8017440:	f7ff f89c 	bl	801657c <rcu_periph_clock_enable>
 8017444:	f640 4003 	movw	r0, #3075	; 0xc03
 8017448:	e00f      	b.n	801746a <gd32_uart_begin+0x52>
 801744a:	4b3a      	ldr	r3, [pc, #232]	; (8017534 <gd32_uart_begin+0x11c>)
 801744c:	4298      	cmp	r0, r3
 801744e:	d006      	beq.n	801745e <gd32_uart_begin+0x46>
 8017450:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017454:	4298      	cmp	r0, r3
 8017456:	d05b      	beq.n	8017510 <gd32_uart_begin+0xf8>
 8017458:	f241 001f 	movw	r0, #4127	; 0x101f
 801745c:	e05d      	b.n	801751a <gd32_uart_begin+0x102>
 801745e:	f241 1004 	movw	r0, #4356	; 0x1104
 8017462:	f7ff f88b 	bl	801657c <rcu_periph_clock_enable>
 8017466:	f640 4001 	movw	r0, #3073	; 0xc01
 801746a:	f7ff f887 	bl	801657c <rcu_periph_clock_enable>
 801746e:	4620      	mov	r0, r4
 8017470:	f7ff fe96 	bl	80171a0 <_gpio_init(unsigned int)>
 8017474:	4620      	mov	r0, r4
 8017476:	f7ff fb9b 	bl	8016bb0 <usart_deinit>
 801747a:	68e3      	ldr	r3, [r4, #12]
 801747c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8017480:	60e3      	str	r3, [r4, #12]
 8017482:	4639      	mov	r1, r7
 8017484:	4620      	mov	r0, r4
 8017486:	f7ff fbf5 	bl	8016c74 <usart_baudrate_set>
 801748a:	f1a5 0309 	sub.w	r3, r5, #9
 801748e:	4259      	negs	r1, r3
 8017490:	4159      	adcs	r1, r3
 8017492:	0309      	lsls	r1, r1, #12
 8017494:	4620      	mov	r0, r4
 8017496:	f7ff fc39 	bl	8016d0c <usart_word_length_set>
 801749a:	9906      	ldr	r1, [sp, #24]
 801749c:	1e8a      	subs	r2, r1, #2
 801749e:	4251      	negs	r1, r2
 80174a0:	4151      	adcs	r1, r2
 80174a2:	0349      	lsls	r1, r1, #13
 80174a4:	4620      	mov	r0, r4
 80174a6:	f7ff fc39 	bl	8016d1c <usart_stop_bit_set>
 80174aa:	2e01      	cmp	r6, #1
 80174ac:	d03a      	beq.n	8017524 <gd32_uart_begin+0x10c>
 80174ae:	2e02      	cmp	r6, #2
 80174b0:	d13b      	bne.n	801752a <gd32_uart_begin+0x112>
 80174b2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80174b6:	4620      	mov	r0, r4
 80174b8:	f7ff fc20 	bl	8016cfc <usart_parity_config>
 80174bc:	2100      	movs	r1, #0
 80174be:	4620      	mov	r0, r4
 80174c0:	f7ff fc40 	bl	8016d44 <usart_hardware_flow_rts_config>
 80174c4:	2100      	movs	r1, #0
 80174c6:	4620      	mov	r0, r4
 80174c8:	f7ff fc42 	bl	8016d50 <usart_hardware_flow_cts_config>
 80174cc:	2104      	movs	r1, #4
 80174ce:	4620      	mov	r0, r4
 80174d0:	f7ff fc32 	bl	8016d38 <usart_receive_config>
 80174d4:	2108      	movs	r1, #8
 80174d6:	4620      	mov	r0, r4
 80174d8:	f7ff fc28 	bl	8016d2c <usart_transmit_config>
 80174dc:	68e3      	ldr	r3, [r4, #12]
 80174de:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80174e2:	60e3      	str	r3, [r4, #12]
 80174e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80174e6:	f241 0011 	movw	r0, #4113	; 0x1011
 80174ea:	f7ff f847 	bl	801657c <rcu_periph_clock_enable>
 80174ee:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80174f2:	e7ba      	b.n	801746a <gd32_uart_begin+0x52>
 80174f4:	f241 0013 	movw	r0, #4115	; 0x1013
 80174f8:	f7ff f840 	bl	801657c <rcu_periph_clock_enable>
 80174fc:	f640 4002 	movw	r0, #3074	; 0xc02
 8017500:	e7b3      	b.n	801746a <gd32_uart_begin+0x52>
 8017502:	f241 0014 	movw	r0, #4116	; 0x1014
 8017506:	f7ff f839 	bl	801657c <rcu_periph_clock_enable>
 801750a:	f640 4002 	movw	r0, #3074	; 0xc02
 801750e:	e797      	b.n	8017440 <gd32_uart_begin+0x28>
 8017510:	f241 1005 	movw	r0, #4357	; 0x1105
 8017514:	e7f0      	b.n	80174f8 <gd32_uart_begin+0xe0>
 8017516:	f241 001e 	movw	r0, #4126	; 0x101e
 801751a:	f7ff f82f 	bl	801657c <rcu_periph_clock_enable>
 801751e:	f640 4004 	movw	r0, #3076	; 0xc04
 8017522:	e7a2      	b.n	801746a <gd32_uart_begin+0x52>
 8017524:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8017528:	e7c5      	b.n	80174b6 <gd32_uart_begin+0x9e>
 801752a:	2100      	movs	r1, #0
 801752c:	e7c3      	b.n	80174b6 <gd32_uart_begin+0x9e>
 801752e:	bf00      	nop
 8017530:	40007800 	andmi	r7, r0, r0, lsl #16
 8017534:	40011000 	andmi	r1, r1, r0

08017538 <micros_init()>:
 8017538:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801753a:	f241 0003 	movw	r0, #4099	; 0x1003
 801753e:	f7ff f81d 	bl	801657c <rcu_periph_clock_enable>
 8017542:	480c      	ldr	r0, [pc, #48]	; (8017574 <micros_init()+0x3c>)
 8017544:	f7ff f8d6 	bl	80166f4 <timer_deinit>
 8017548:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801754c:	2300      	movs	r3, #0
 801754e:	f8c2 3c24 	str.w	r3, [r2, #3108]	; 0xc24
 8017552:	22c7      	movs	r2, #199	; 0xc7
 8017554:	e9cd 2300 	strd	r2, r3, [sp]
 8017558:	4669      	mov	r1, sp
 801755a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801755e:	4805      	ldr	r0, [pc, #20]	; (8017574 <micros_init()+0x3c>)
 8017560:	9302      	str	r3, [sp, #8]
 8017562:	f7ff f96d 	bl	8016840 <timer_init>
 8017566:	4803      	ldr	r0, [pc, #12]	; (8017574 <micros_init()+0x3c>)
 8017568:	f7ff f9a8 	bl	80168bc <timer_enable>
 801756c:	b005      	add	sp, #20
 801756e:	f85d fb04 	ldr.w	pc, [sp], #4
 8017572:	bf00      	nop
 8017574:	40000c00 	andmi	r0, r0, r0, lsl #24

08017578 <udelay_init()>:
 8017578:	4a07      	ldr	r2, [pc, #28]	; (8017598 <udelay_init()+0x20>)
 801757a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801757e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8017582:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8017586:	4b05      	ldr	r3, [pc, #20]	; (801759c <udelay_init()+0x24>)
 8017588:	2200      	movs	r2, #0
 801758a:	605a      	str	r2, [r3, #4]
 801758c:	681a      	ldr	r2, [r3, #0]
 801758e:	f042 0201 	orr.w	r2, r2, #1
 8017592:	601a      	str	r2, [r3, #0]
 8017594:	4770      	bx	lr
 8017596:	bf00      	nop
 8017598:	e000ed00 	and	lr, r0, r0, lsl #26
 801759c:	e0001000 	and	r1, r0, r0

080175a0 <udelay(unsigned int, unsigned int)>:
 80175a0:	23c8      	movs	r3, #200	; 0xc8
 80175a2:	b530      	push	{r4, r5, lr}
 80175a4:	4358      	muls	r0, r3
 80175a6:	b909      	cbnz	r1, 80175ac <udelay(unsigned int, unsigned int)+0xc>
 80175a8:	4b08      	ldr	r3, [pc, #32]	; (80175cc <udelay(unsigned int, unsigned int)+0x2c>)
 80175aa:	6859      	ldr	r1, [r3, #4]
 80175ac:	4c07      	ldr	r4, [pc, #28]	; (80175cc <udelay(unsigned int, unsigned int)+0x2c>)
 80175ae:	2300      	movs	r3, #0
 80175b0:	6862      	ldr	r2, [r4, #4]
 80175b2:	4291      	cmp	r1, r2
 80175b4:	d0fc      	beq.n	80175b0 <udelay(unsigned int, unsigned int)+0x10>
 80175b6:	bf2a      	itet	cs
 80175b8:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80175bc:	189b      	addcc	r3, r3, r2
 80175be:	195b      	addcs	r3, r3, r5
 80175c0:	1a5b      	subs	r3, r3, r1
 80175c2:	4283      	cmp	r3, r0
 80175c4:	d300      	bcc.n	80175c8 <udelay(unsigned int, unsigned int)+0x28>
 80175c6:	bd30      	pop	{r4, r5, pc}
 80175c8:	4611      	mov	r1, r2
 80175ca:	e7f1      	b.n	80175b0 <udelay(unsigned int, unsigned int)+0x10>
 80175cc:	e0001000 	and	r1, r0, r0

080175d0 <emac_start(unsigned char*)>:
 80175d0:	b570      	push	{r4, r5, r6, lr}
 80175d2:	4605      	mov	r5, r0
 80175d4:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80175d8:	f7fe ffd0 	bl	801657c <rcu_periph_clock_enable>
 80175dc:	f640 4001 	movw	r0, #3073	; 0xc01
 80175e0:	f7fe ffcc 	bl	801657c <rcu_periph_clock_enable>
 80175e4:	f640 4002 	movw	r0, #3074	; 0xc02
 80175e8:	f7fe ffc8 	bl	801657c <rcu_periph_clock_enable>
 80175ec:	f241 100e 	movw	r0, #4366	; 0x110e
 80175f0:	f7fe ffc4 	bl	801657c <rcu_periph_clock_enable>
 80175f4:	487d      	ldr	r0, [pc, #500]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 80175f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80175fa:	2100      	movs	r1, #0
 80175fc:	f7fe ff7d 	bl	80164fa <gpio_af_set>
 8017600:	487a      	ldr	r0, [pc, #488]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017602:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017606:	2200      	movs	r2, #0
 8017608:	2102      	movs	r1, #2
 801760a:	f7fe ff3b 	bl	8016484 <gpio_mode_set>
 801760e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017612:	2203      	movs	r2, #3
 8017614:	4875      	ldr	r0, [pc, #468]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017616:	2100      	movs	r1, #0
 8017618:	f7fe ff54 	bl	80164c4 <gpio_output_options_set>
 801761c:	f04f 61c0 	mov.w	r1, #100663296	; 0x6000000
 8017620:	f44f 00c0 	mov.w	r0, #6291456	; 0x600000
 8017624:	f7fe ffca 	bl	80165bc <rcu_ckout0_config>
 8017628:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801762c:	f7ff f856 	bl	80166dc <syscfg_enet_phy_interface_config>
 8017630:	2302      	movs	r3, #2
 8017632:	4619      	mov	r1, r3
 8017634:	486d      	ldr	r0, [pc, #436]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017636:	2200      	movs	r2, #0
 8017638:	f7fe ff24 	bl	8016484 <gpio_mode_set>
 801763c:	486b      	ldr	r0, [pc, #428]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 801763e:	2302      	movs	r3, #2
 8017640:	2203      	movs	r2, #3
 8017642:	2100      	movs	r1, #0
 8017644:	f7fe ff3e 	bl	80164c4 <gpio_output_options_set>
 8017648:	4868      	ldr	r0, [pc, #416]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 801764a:	2304      	movs	r3, #4
 801764c:	2200      	movs	r2, #0
 801764e:	2102      	movs	r1, #2
 8017650:	f7fe ff18 	bl	8016484 <gpio_mode_set>
 8017654:	4865      	ldr	r0, [pc, #404]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017656:	2304      	movs	r3, #4
 8017658:	2203      	movs	r2, #3
 801765a:	2100      	movs	r1, #0
 801765c:	f7fe ff32 	bl	80164c4 <gpio_output_options_set>
 8017660:	4862      	ldr	r0, [pc, #392]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017662:	2380      	movs	r3, #128	; 0x80
 8017664:	2200      	movs	r2, #0
 8017666:	2102      	movs	r1, #2
 8017668:	f7fe ff0c 	bl	8016484 <gpio_mode_set>
 801766c:	2380      	movs	r3, #128	; 0x80
 801766e:	485f      	ldr	r0, [pc, #380]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017670:	2203      	movs	r2, #3
 8017672:	2100      	movs	r1, #0
 8017674:	f7fe ff26 	bl	80164c4 <gpio_output_options_set>
 8017678:	485c      	ldr	r0, [pc, #368]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 801767a:	2202      	movs	r2, #2
 801767c:	210b      	movs	r1, #11
 801767e:	f7fe ff3c 	bl	80164fa <gpio_af_set>
 8017682:	485a      	ldr	r0, [pc, #360]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 8017684:	2204      	movs	r2, #4
 8017686:	210b      	movs	r1, #11
 8017688:	f7fe ff37 	bl	80164fa <gpio_af_set>
 801768c:	4857      	ldr	r0, [pc, #348]	; (80177ec <emac_start(unsigned char*)+0x21c>)
 801768e:	2280      	movs	r2, #128	; 0x80
 8017690:	210b      	movs	r1, #11
 8017692:	f7fe ff32 	bl	80164fa <gpio_af_set>
 8017696:	4856      	ldr	r0, [pc, #344]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 8017698:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801769c:	2200      	movs	r2, #0
 801769e:	2102      	movs	r1, #2
 80176a0:	f7fe fef0 	bl	8016484 <gpio_mode_set>
 80176a4:	4852      	ldr	r0, [pc, #328]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80176aa:	2203      	movs	r2, #3
 80176ac:	2100      	movs	r1, #0
 80176ae:	f7fe ff09 	bl	80164c4 <gpio_output_options_set>
 80176b2:	484f      	ldr	r0, [pc, #316]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80176b8:	2200      	movs	r2, #0
 80176ba:	2102      	movs	r1, #2
 80176bc:	f7fe fee2 	bl	8016484 <gpio_mode_set>
 80176c0:	484b      	ldr	r0, [pc, #300]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176c2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80176c6:	2203      	movs	r2, #3
 80176c8:	2100      	movs	r1, #0
 80176ca:	f7fe fefb 	bl	80164c4 <gpio_output_options_set>
 80176ce:	4848      	ldr	r0, [pc, #288]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80176d4:	2200      	movs	r2, #0
 80176d6:	2102      	movs	r1, #2
 80176d8:	f7fe fed4 	bl	8016484 <gpio_mode_set>
 80176dc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80176e0:	4843      	ldr	r0, [pc, #268]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176e2:	2203      	movs	r2, #3
 80176e4:	2100      	movs	r1, #0
 80176e6:	f7fe feed 	bl	80164c4 <gpio_output_options_set>
 80176ea:	4841      	ldr	r0, [pc, #260]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80176f0:	210b      	movs	r1, #11
 80176f2:	f7fe ff02 	bl	80164fa <gpio_af_set>
 80176f6:	483e      	ldr	r0, [pc, #248]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 80176f8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80176fc:	210b      	movs	r1, #11
 80176fe:	f7fe fefc 	bl	80164fa <gpio_af_set>
 8017702:	483b      	ldr	r0, [pc, #236]	; (80177f0 <emac_start(unsigned char*)+0x220>)
 8017704:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8017708:	210b      	movs	r1, #11
 801770a:	f7fe fef6 	bl	80164fa <gpio_af_set>
 801770e:	2302      	movs	r3, #2
 8017710:	4619      	mov	r1, r3
 8017712:	4838      	ldr	r0, [pc, #224]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017714:	2200      	movs	r2, #0
 8017716:	f7fe feb5 	bl	8016484 <gpio_mode_set>
 801771a:	4836      	ldr	r0, [pc, #216]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 801771c:	2302      	movs	r3, #2
 801771e:	2203      	movs	r2, #3
 8017720:	2100      	movs	r1, #0
 8017722:	f7fe fecf 	bl	80164c4 <gpio_output_options_set>
 8017726:	4833      	ldr	r0, [pc, #204]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017728:	2310      	movs	r3, #16
 801772a:	2200      	movs	r2, #0
 801772c:	2102      	movs	r1, #2
 801772e:	f7fe fea9 	bl	8016484 <gpio_mode_set>
 8017732:	4830      	ldr	r0, [pc, #192]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017734:	2310      	movs	r3, #16
 8017736:	2203      	movs	r2, #3
 8017738:	2100      	movs	r1, #0
 801773a:	f7fe fec3 	bl	80164c4 <gpio_output_options_set>
 801773e:	482d      	ldr	r0, [pc, #180]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017740:	2320      	movs	r3, #32
 8017742:	2200      	movs	r2, #0
 8017744:	2102      	movs	r1, #2
 8017746:	f7fe fe9d 	bl	8016484 <gpio_mode_set>
 801774a:	2320      	movs	r3, #32
 801774c:	4829      	ldr	r0, [pc, #164]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 801774e:	2203      	movs	r2, #3
 8017750:	2100      	movs	r1, #0
 8017752:	f7fe feb7 	bl	80164c4 <gpio_output_options_set>
 8017756:	4827      	ldr	r0, [pc, #156]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017758:	2202      	movs	r2, #2
 801775a:	210b      	movs	r1, #11
 801775c:	f7fe fecd 	bl	80164fa <gpio_af_set>
 8017760:	4824      	ldr	r0, [pc, #144]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017762:	2210      	movs	r2, #16
 8017764:	210b      	movs	r1, #11
 8017766:	f7fe fec8 	bl	80164fa <gpio_af_set>
 801776a:	2220      	movs	r2, #32
 801776c:	210b      	movs	r1, #11
 801776e:	4821      	ldr	r0, [pc, #132]	; (80177f4 <emac_start(unsigned char*)+0x224>)
 8017770:	f7fe fec3 	bl	80164fa <gpio_af_set>
 8017774:	f640 4019 	movw	r0, #3097	; 0xc19
 8017778:	f7fe ff00 	bl	801657c <rcu_periph_clock_enable>
 801777c:	f640 401a 	movw	r0, #3098	; 0xc1a
 8017780:	f7fe fefc 	bl	801657c <rcu_periph_clock_enable>
 8017784:	f640 401b 	movw	r0, #3099	; 0xc1b
 8017788:	f7fe fef8 	bl	801657c <rcu_periph_clock_enable>
 801778c:	f7fe fe32 	bl	80163f4 <enet_deinit>
 8017790:	f7fe fa5a 	bl	8015c48 <enet_software_reset>
 8017794:	4604      	mov	r4, r0
 8017796:	b138      	cbz	r0, 80177a8 <emac_start(unsigned char*)+0x1d8>
 8017798:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 801779c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80177a0:	2001      	movs	r0, #1
 80177a2:	f7fe fbe9 	bl	8015f78 <enet_init>
 80177a6:	4604      	mov	r4, r0
 80177a8:	4628      	mov	r0, r5
 80177aa:	f000 f9c1 	bl	8017b30 <mac_address_get(unsigned char*)>
 80177ae:	4629      	mov	r1, r5
 80177b0:	2000      	movs	r0, #0
 80177b2:	f7fe fb39 	bl	8015e28 <enet_mac_address_set>
 80177b6:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80177ba:	f7fe fa59 	bl	8015c70 <enet_descriptors_chain_init>
 80177be:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80177c2:	f7fe fa55 	bl	8015c70 <enet_descriptors_chain_init>
 80177c6:	4e0c      	ldr	r6, [pc, #48]	; (80177f8 <emac_start(unsigned char*)+0x228>)
 80177c8:	2500      	movs	r5, #0
 80177ca:	4630      	mov	r0, r6
 80177cc:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80177d0:	3501      	adds	r5, #1
 80177d2:	f7fe fb23 	bl	8015e1c <enet_transmit_checksum_config>
 80177d6:	2d08      	cmp	r5, #8
 80177d8:	f106 0610 	add.w	r6, r6, #16
 80177dc:	d1f5      	bne.n	80177ca <emac_start(unsigned char*)+0x1fa>
 80177de:	f7fe fd6b 	bl	80162b8 <enet_enable>
 80177e2:	fab4 f084 	clz	r0, r4
 80177e6:	0940      	lsrs	r0, r0, #5
 80177e8:	4240      	negs	r0, r0
 80177ea:	bd70      	pop	{r4, r5, r6, pc}
 80177ec:	40020000 	andmi	r0, r2, r0
 80177f0:	40020400 	andmi	r0, r2, r0, lsl #8
 80177f4:	40020800 	andmi	r0, r2, r0, lsl #16
 80177f8:	2002d29c 	mulcs	r2, ip, r2

080177fc <adc_clock_config>:
 80177fc:	4b06      	ldr	r3, [pc, #24]	; (8017818 <adc_clock_config+0x1c>)
 80177fe:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8017802:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8017806:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 801780a:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 801780e:	4310      	orrs	r0, r2
 8017810:	f8c3 0304 	str.w	r0, [r3, #772]	; 0x304
 8017814:	4770      	bx	lr
 8017816:	bf00      	nop
 8017818:	40012000 	andmi	r2, r1, r0

0801781c <adc_special_function_config>:
 801781c:	b510      	push	{r4, lr}
 801781e:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8017822:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8017826:	f001 0102 	and.w	r1, r1, #2
 801782a:	b17a      	cbz	r2, 801784c <adc_special_function_config+0x30>
 801782c:	b11b      	cbz	r3, 8017836 <adc_special_function_config+0x1a>
 801782e:	6843      	ldr	r3, [r0, #4]
 8017830:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8017834:	6043      	str	r3, [r0, #4]
 8017836:	b11c      	cbz	r4, 8017840 <adc_special_function_config+0x24>
 8017838:	6843      	ldr	r3, [r0, #4]
 801783a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801783e:	6043      	str	r3, [r0, #4]
 8017840:	b119      	cbz	r1, 801784a <adc_special_function_config+0x2e>
 8017842:	6883      	ldr	r3, [r0, #8]
 8017844:	f043 0302 	orr.w	r3, r3, #2
 8017848:	6083      	str	r3, [r0, #8]
 801784a:	bd10      	pop	{r4, pc}
 801784c:	b11b      	cbz	r3, 8017856 <adc_special_function_config+0x3a>
 801784e:	6843      	ldr	r3, [r0, #4]
 8017850:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8017854:	6043      	str	r3, [r0, #4]
 8017856:	b11c      	cbz	r4, 8017860 <adc_special_function_config+0x44>
 8017858:	6843      	ldr	r3, [r0, #4]
 801785a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801785e:	6043      	str	r3, [r0, #4]
 8017860:	2900      	cmp	r1, #0
 8017862:	d0f2      	beq.n	801784a <adc_special_function_config+0x2e>
 8017864:	6883      	ldr	r3, [r0, #8]
 8017866:	f023 0302 	bic.w	r3, r3, #2
 801786a:	e7ed      	b.n	8017848 <adc_special_function_config+0x2c>

0801786c <adc_data_alignment_config>:
 801786c:	6883      	ldr	r3, [r0, #8]
 801786e:	b119      	cbz	r1, 8017878 <adc_data_alignment_config+0xc>
 8017870:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017874:	6083      	str	r3, [r0, #8]
 8017876:	4770      	bx	lr
 8017878:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801787c:	e7fa      	b.n	8017874 <adc_data_alignment_config+0x8>

0801787e <adc_enable>:
 801787e:	6883      	ldr	r3, [r0, #8]
 8017880:	07db      	lsls	r3, r3, #31
 8017882:	bf5e      	ittt	pl
 8017884:	6883      	ldrpl	r3, [r0, #8]
 8017886:	f043 0301 	orrpl.w	r3, r3, #1
 801788a:	6083      	strpl	r3, [r0, #8]
 801788c:	4770      	bx	lr

0801788e <adc_calibration_enable>:
 801788e:	6883      	ldr	r3, [r0, #8]
 8017890:	f043 0308 	orr.w	r3, r3, #8
 8017894:	f100 0208 	add.w	r2, r0, #8
 8017898:	6083      	str	r3, [r0, #8]
 801789a:	6813      	ldr	r3, [r2, #0]
 801789c:	0719      	lsls	r1, r3, #28
 801789e:	d4fc      	bmi.n	801789a <adc_calibration_enable+0xc>
 80178a0:	6883      	ldr	r3, [r0, #8]
 80178a2:	f043 0304 	orr.w	r3, r3, #4
 80178a6:	6083      	str	r3, [r0, #8]
 80178a8:	6813      	ldr	r3, [r2, #0]
 80178aa:	075b      	lsls	r3, r3, #29
 80178ac:	d4fc      	bmi.n	80178a8 <adc_calibration_enable+0x1a>
 80178ae:	4770      	bx	lr

080178b0 <adc_channel_16_to_18>:
 80178b0:	f400 0380 	and.w	r3, r0, #4194304	; 0x400000
 80178b4:	f400 0000 	and.w	r0, r0, #8388608	; 0x800000
 80178b8:	b181      	cbz	r1, 80178dc <adc_channel_16_to_18+0x2c>
 80178ba:	b133      	cbz	r3, 80178ca <adc_channel_16_to_18+0x1a>
 80178bc:	4a0f      	ldr	r2, [pc, #60]	; (80178fc <adc_channel_16_to_18+0x4c>)
 80178be:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80178c2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80178c6:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80178ca:	b130      	cbz	r0, 80178da <adc_channel_16_to_18+0x2a>
 80178cc:	4a0b      	ldr	r2, [pc, #44]	; (80178fc <adc_channel_16_to_18+0x4c>)
 80178ce:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80178d2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80178d6:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80178da:	4770      	bx	lr
 80178dc:	b133      	cbz	r3, 80178ec <adc_channel_16_to_18+0x3c>
 80178de:	4a07      	ldr	r2, [pc, #28]	; (80178fc <adc_channel_16_to_18+0x4c>)
 80178e0:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80178e4:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80178e8:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80178ec:	2800      	cmp	r0, #0
 80178ee:	d0f4      	beq.n	80178da <adc_channel_16_to_18+0x2a>
 80178f0:	4a02      	ldr	r2, [pc, #8]	; (80178fc <adc_channel_16_to_18+0x4c>)
 80178f2:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 80178f6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80178fa:	e7ec      	b.n	80178d6 <adc_channel_16_to_18+0x26>
 80178fc:	40012000 	andmi	r2, r1, r0

08017900 <adc_channel_length_config>:
 8017900:	2901      	cmp	r1, #1
 8017902:	d002      	beq.n	801790a <adc_channel_length_config+0xa>
 8017904:	2902      	cmp	r1, #2
 8017906:	d00c      	beq.n	8017922 <adc_channel_length_config+0x22>
 8017908:	4770      	bx	lr
 801790a:	3a01      	subs	r2, #1
 801790c:	2a0f      	cmp	r2, #15
 801790e:	d813      	bhi.n	8017938 <adc_channel_length_config+0x38>
 8017910:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017912:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8017916:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017918:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801791a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801791e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017920:	4770      	bx	lr
 8017922:	3a01      	subs	r2, #1
 8017924:	2a03      	cmp	r2, #3
 8017926:	d807      	bhi.n	8017938 <adc_channel_length_config+0x38>
 8017928:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801792a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801792e:	6383      	str	r3, [r0, #56]	; 0x38
 8017930:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8017932:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8017936:	6383      	str	r3, [r0, #56]	; 0x38
 8017938:	4770      	bx	lr

0801793a <adc_inserted_channel_config>:
 801793a:	2903      	cmp	r1, #3
 801793c:	b530      	push	{r4, r5, lr}
 801793e:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8017940:	d80f      	bhi.n	8017962 <adc_inserted_channel_config+0x28>
 8017942:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8017946:	1a61      	subs	r1, r4, r1
 8017948:	f06f 0404 	mvn.w	r4, #4
 801794c:	4361      	muls	r1, r4
 801794e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8017950:	310f      	adds	r1, #15
 8017952:	241f      	movs	r4, #31
 8017954:	408c      	lsls	r4, r1
 8017956:	ea25 0404 	bic.w	r4, r5, r4
 801795a:	fa02 f101 	lsl.w	r1, r2, r1
 801795e:	4321      	orrs	r1, r4
 8017960:	6381      	str	r1, [r0, #56]	; 0x38
 8017962:	2a09      	cmp	r2, #9
 8017964:	d80a      	bhi.n	801797c <adc_inserted_channel_config+0x42>
 8017966:	6901      	ldr	r1, [r0, #16]
 8017968:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801796c:	2407      	movs	r4, #7
 801796e:	4094      	lsls	r4, r2
 8017970:	ea21 0104 	bic.w	r1, r1, r4
 8017974:	4093      	lsls	r3, r2
 8017976:	430b      	orrs	r3, r1
 8017978:	6103      	str	r3, [r0, #16]
 801797a:	bd30      	pop	{r4, r5, pc}
 801797c:	2a12      	cmp	r2, #18
 801797e:	d8fc      	bhi.n	801797a <adc_inserted_channel_config+0x40>
 8017980:	3a0a      	subs	r2, #10
 8017982:	68c1      	ldr	r1, [r0, #12]
 8017984:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017988:	2407      	movs	r4, #7
 801798a:	4094      	lsls	r4, r2
 801798c:	ea21 0104 	bic.w	r1, r1, r4
 8017990:	4093      	lsls	r3, r2
 8017992:	430b      	orrs	r3, r1
 8017994:	60c3      	str	r3, [r0, #12]
 8017996:	e7f0      	b.n	801797a <adc_inserted_channel_config+0x40>

08017998 <adc_external_trigger_config>:
 8017998:	2901      	cmp	r1, #1
 801799a:	d002      	beq.n	80179a2 <adc_external_trigger_config+0xa>
 801799c:	2902      	cmp	r1, #2
 801799e:	d009      	beq.n	80179b4 <adc_external_trigger_config+0x1c>
 80179a0:	4770      	bx	lr
 80179a2:	6883      	ldr	r3, [r0, #8]
 80179a4:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80179a8:	6083      	str	r3, [r0, #8]
 80179aa:	6883      	ldr	r3, [r0, #8]
 80179ac:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80179b0:	6083      	str	r3, [r0, #8]
 80179b2:	4770      	bx	lr
 80179b4:	6883      	ldr	r3, [r0, #8]
 80179b6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80179ba:	6083      	str	r3, [r0, #8]
 80179bc:	6883      	ldr	r3, [r0, #8]
 80179be:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80179c2:	e7f5      	b.n	80179b0 <adc_external_trigger_config+0x18>

080179c4 <adc_software_trigger_enable>:
 80179c4:	2901      	cmp	r1, #1
 80179c6:	d002      	beq.n	80179ce <adc_software_trigger_enable+0xa>
 80179c8:	2902      	cmp	r1, #2
 80179ca:	d005      	beq.n	80179d8 <adc_software_trigger_enable+0x14>
 80179cc:	4770      	bx	lr
 80179ce:	6883      	ldr	r3, [r0, #8]
 80179d0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80179d4:	6083      	str	r3, [r0, #8]
 80179d6:	4770      	bx	lr
 80179d8:	6883      	ldr	r3, [r0, #8]
 80179da:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80179de:	e7f9      	b.n	80179d4 <adc_software_trigger_enable+0x10>

080179e0 <i2c_clock_config>:
 80179e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80179e2:	4605      	mov	r5, r0
 80179e4:	2002      	movs	r0, #2
 80179e6:	460c      	mov	r4, r1
 80179e8:	4617      	mov	r7, r2
 80179ea:	f7fe fe03 	bl	80165f4 <rcu_clock_freq_get>
 80179ee:	4a26      	ldr	r2, [pc, #152]	; (8017a88 <i2c_clock_config+0xa8>)
 80179f0:	686e      	ldr	r6, [r5, #4]
 80179f2:	4603      	mov	r3, r0
 80179f4:	4825      	ldr	r0, [pc, #148]	; (8017a8c <i2c_clock_config+0xac>)
 80179f6:	fbb3 f0f0 	udiv	r0, r3, r0
 80179fa:	4293      	cmp	r3, r2
 80179fc:	bf94      	ite	ls
 80179fe:	4601      	movls	r1, r0
 8017a00:	2132      	movhi	r1, #50	; 0x32
 8017a02:	4a23      	ldr	r2, [pc, #140]	; (8017a90 <i2c_clock_config+0xb0>)
 8017a04:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8017a08:	430e      	orrs	r6, r1
 8017a0a:	4294      	cmp	r4, r2
 8017a0c:	606e      	str	r6, [r5, #4]
 8017a0e:	d811      	bhi.n	8017a34 <i2c_clock_config+0x54>
 8017a10:	3001      	adds	r0, #1
 8017a12:	2831      	cmp	r0, #49	; 0x31
 8017a14:	bf86      	itte	hi
 8017a16:	2232      	movhi	r2, #50	; 0x32
 8017a18:	622a      	strhi	r2, [r5, #32]
 8017a1a:	6228      	strls	r0, [r5, #32]
 8017a1c:	0064      	lsls	r4, r4, #1
 8017a1e:	fbb3 f4f4 	udiv	r4, r3, r4
 8017a22:	2c04      	cmp	r4, #4
 8017a24:	69ea      	ldr	r2, [r5, #28]
 8017a26:	bf38      	it	cc
 8017a28:	2404      	movcc	r4, #4
 8017a2a:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8017a2e:	4314      	orrs	r4, r2
 8017a30:	61ec      	str	r4, [r5, #28]
 8017a32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017a34:	4a17      	ldr	r2, [pc, #92]	; (8017a94 <i2c_clock_config+0xb4>)
 8017a36:	4294      	cmp	r4, r2
 8017a38:	d8fb      	bhi.n	8017a32 <i2c_clock_config+0x52>
 8017a3a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8017a3e:	4351      	muls	r1, r2
 8017a40:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8017a44:	fbb1 f1f2 	udiv	r1, r1, r2
 8017a48:	3101      	adds	r1, #1
 8017a4a:	6229      	str	r1, [r5, #32]
 8017a4c:	b9a7      	cbnz	r7, 8017a78 <i2c_clock_config+0x98>
 8017a4e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017a52:	fbb3 f4f4 	udiv	r4, r3, r4
 8017a56:	69eb      	ldr	r3, [r5, #28]
 8017a58:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8017a5c:	61eb      	str	r3, [r5, #28]
 8017a5e:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8017a62:	b90b      	cbnz	r3, 8017a68 <i2c_clock_config+0x88>
 8017a64:	f044 0401 	orr.w	r4, r4, #1
 8017a68:	69eb      	ldr	r3, [r5, #28]
 8017a6a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8017a6e:	61eb      	str	r3, [r5, #28]
 8017a70:	69eb      	ldr	r3, [r5, #28]
 8017a72:	4323      	orrs	r3, r4
 8017a74:	61eb      	str	r3, [r5, #28]
 8017a76:	e7dc      	b.n	8017a32 <i2c_clock_config+0x52>
 8017a78:	2219      	movs	r2, #25
 8017a7a:	4354      	muls	r4, r2
 8017a7c:	fbb3 f4f4 	udiv	r4, r3, r4
 8017a80:	69eb      	ldr	r3, [r5, #28]
 8017a82:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8017a86:	e7e9      	b.n	8017a5c <i2c_clock_config+0x7c>
 8017a88:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8017a8c:	000f4240 	andeq	r4, pc, r0, asr #4
 8017a90:	000186a0 	andeq	r8, r1, r0, lsr #13
 8017a94:	00061a80 	andeq	r1, r6, r0, lsl #21

08017a98 <i2c_ack_config>:
 8017a98:	6803      	ldr	r3, [r0, #0]
 8017a9a:	2901      	cmp	r1, #1
 8017a9c:	bf0c      	ite	eq
 8017a9e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8017aa2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8017aa6:	6003      	str	r3, [r0, #0]
 8017aa8:	4770      	bx	lr

08017aaa <i2c_ackpos_config>:
 8017aaa:	6803      	ldr	r3, [r0, #0]
 8017aac:	b919      	cbnz	r1, 8017ab6 <i2c_ackpos_config+0xc>
 8017aae:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017ab2:	6003      	str	r3, [r0, #0]
 8017ab4:	4770      	bx	lr
 8017ab6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017aba:	e7fa      	b.n	8017ab2 <i2c_ackpos_config+0x8>

08017abc <i2c_master_addressing>:
 8017abc:	3202      	adds	r2, #2
 8017abe:	bf0c      	ite	eq
 8017ac0:	f021 0101 	biceq.w	r1, r1, #1
 8017ac4:	f041 0101 	orrne.w	r1, r1, #1
 8017ac8:	6101      	str	r1, [r0, #16]
 8017aca:	4770      	bx	lr

08017acc <i2c_enable>:
 8017acc:	6803      	ldr	r3, [r0, #0]
 8017ace:	f043 0301 	orr.w	r3, r3, #1
 8017ad2:	6003      	str	r3, [r0, #0]
 8017ad4:	4770      	bx	lr

08017ad6 <i2c_start_on_bus>:
 8017ad6:	6803      	ldr	r3, [r0, #0]
 8017ad8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8017adc:	6003      	str	r3, [r0, #0]
 8017ade:	4770      	bx	lr

08017ae0 <i2c_stop_on_bus>:
 8017ae0:	6803      	ldr	r3, [r0, #0]
 8017ae2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8017ae6:	6003      	str	r3, [r0, #0]
 8017ae8:	4770      	bx	lr

08017aea <i2c_data_transmit>:
 8017aea:	6101      	str	r1, [r0, #16]
 8017aec:	4770      	bx	lr

08017aee <i2c_data_receive>:
 8017aee:	6900      	ldr	r0, [r0, #16]
 8017af0:	b2c0      	uxtb	r0, r0
 8017af2:	4770      	bx	lr

08017af4 <i2c_flag_get>:
 8017af4:	098b      	lsrs	r3, r1, #6
 8017af6:	f001 011f 	and.w	r1, r1, #31
 8017afa:	581a      	ldr	r2, [r3, r0]
 8017afc:	2301      	movs	r3, #1
 8017afe:	408b      	lsls	r3, r1
 8017b00:	4213      	tst	r3, r2
 8017b02:	bf14      	ite	ne
 8017b04:	2001      	movne	r0, #1
 8017b06:	2000      	moveq	r0, #0
 8017b08:	4770      	bx	lr

08017b0a <i2c_flag_clear>:
 8017b0a:	f240 5301 	movw	r3, #1281	; 0x501
 8017b0e:	4299      	cmp	r1, r3
 8017b10:	b510      	push	{r4, lr}
 8017b12:	d102      	bne.n	8017b1a <i2c_flag_clear+0x10>
 8017b14:	6943      	ldr	r3, [r0, #20]
 8017b16:	6983      	ldr	r3, [r0, #24]
 8017b18:	bd10      	pop	{r4, pc}
 8017b1a:	098c      	lsrs	r4, r1, #6
 8017b1c:	2201      	movs	r2, #1
 8017b1e:	5823      	ldr	r3, [r4, r0]
 8017b20:	f001 011f 	and.w	r1, r1, #31
 8017b24:	408a      	lsls	r2, r1
 8017b26:	ea23 0302 	bic.w	r3, r3, r2
 8017b2a:	5023      	str	r3, [r4, r0]
 8017b2c:	e7f4      	b.n	8017b18 <i2c_flag_clear+0xe>
	...

08017b30 <mac_address_get(unsigned char*)>:
 8017b30:	4a07      	ldr	r2, [pc, #28]	; (8017b50 <mac_address_get(unsigned char*)+0x20>)
 8017b32:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8017b36:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	; 0xa14
 8017b3a:	7042      	strb	r2, [r0, #1]
 8017b3c:	0e1a      	lsrs	r2, r3, #24
 8017b3e:	7082      	strb	r2, [r0, #2]
 8017b40:	0c1a      	lsrs	r2, r3, #16
 8017b42:	2102      	movs	r1, #2
 8017b44:	70c2      	strb	r2, [r0, #3]
 8017b46:	0a1a      	lsrs	r2, r3, #8
 8017b48:	7001      	strb	r1, [r0, #0]
 8017b4a:	7102      	strb	r2, [r0, #4]
 8017b4c:	7143      	strb	r3, [r0, #5]
 8017b4e:	4770      	bx	lr
 8017b50:	1fff7000 	svcne	0x00ff7000

08017b54 <__popcountsi2>:
 8017b54:	0843      	lsrs	r3, r0, #1
 8017b56:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8017b5a:	1ac0      	subs	r0, r0, r3
 8017b5c:	0883      	lsrs	r3, r0, #2
 8017b5e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8017b62:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8017b66:	4418      	add	r0, r3
 8017b68:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8017b6c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8017b70:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8017b74:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8017b78:	0e00      	lsrs	r0, r0, #24
 8017b7a:	4770      	bx	lr

Disassembly of section .rodata:

08017b7c <vtable for DisplayHandler-0x110>:
	...
 8017b84:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8017b88:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8017b8c:	00000000 	andeq	r0, r0, r0
 8017b90:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8017b94:	313a3631 	teqcc	sl, r1, lsr r6
 8017b98:	34303a33 	ldrtcc	r3, [r0], #-2611	; 0xfffff5cd
 8017b9c:	63654400 	cmnvs	r5, #0, 8
 8017ba0:	20382020 	eorscs	r2, r8, r0, lsr #32
 8017ba4:	32323032 	eorscc	r3, r2, #50	; 0x32
 8017ba8:	335b1b00 	cmpcc	fp, #0, 22
 8017bac:	41736d32 	cmnmi	r3, r2, lsr sp
 8017bb0:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8017bb4:	31332e31 	teqcc	r3, r1, lsr lr
 8017bb8:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8017bbc:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8017bc0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8017bc4:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8017bc8:	387b2072 	ldmdacc	fp!, {r1, r4, r5, r6, sp}^
 8017bcc:	20342078 	eorscs	r2, r4, r8, ror r0
 8017bd0:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8017bd4:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017bd8:	2f207d73 	svccs	0x00207d73
 8017bdc:	20783220 	rsbscs	r3, r8, r0, lsr #4
 8017be0:	1b584d44 	blne	962b0f8 <__exidx_end+0x1610288>
 8017be4:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 8017be8:	635f2e00 	cmpvs	pc, #0, 28
 8017bec:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8017bf0:	5f2e0067 	svcpl	0x002e0067
 8017bf4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8017bf8:	646f6e00 	strbtvs	r6, [pc], #-3584	; 8017c00 <_etext+0x84>
 8017bfc:	41733d65 	cmnmi	r3, r5, ror #26
 8017c00:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8017c04:	31332e31 	teqcc	r3, r1, lsr lr
 8017c08:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8017c0c:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 8017c10:	7300584d 	movwvc	r5, #2125	; 0x84d
 8017c14:	204e4341 	subcs	r4, lr, r1, asr #6
 8017c18:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8017c1c:	7525206c 	strvc	r2, [r5, #-108]!	; 0xffffff94
 8017c20:	3a73252d 	bcc	9ce10dc <__exidx_end+0x1cc626c>
 8017c24:	44206425 	strtmi	r6, [r0], #-1061	; 0xfffffbdb
 8017c28:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8017c2c:	44470075 	strbmi	r0, [r7], #-117	; 0xffffff8b
 8017c30:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
 8017c34:	49563035 	ldmdbmi	r6, {r0, r2, r4, r5, ip, sp}^
 8017c38:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8017c3c:	442d6c65 	strtmi	r6, [sp], #-3173	; 0xfffff39b
 8017c40:	7300584d 	movwvc	r5, #2125	; 0x84d
 8017c44:	204e4341 	subcs	r4, lr, r1, asr #6
 8017c48:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8017c4c:	3a38206c 	bcc	8e1fe04 <__exidx_end+0xe04f94>
 8017c50:	25786425 	ldrbcs	r6, [r8, #-1061]!	; 0xfffffbdb
 8017c54:	73250064 			; <UNDEFINED> instruction: 0x73250064
 8017c58:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8017c5c:	20642547 	rsbcs	r2, r4, r7, asr #10
 8017c60:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 8017c64:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8017c68:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 8017c6c:	72620021 	rsbvc	r0, r2, #33	; 0x21
 8017c70:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8017c74:	62616d00 	rsbvs	r6, r1, #0, 26
 8017c78:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 8017c7c:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8017c80:	73002368 	movwvc	r2, #872	; 0x368
 8017c84:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8017c88:	00000023 	andeq	r0, r0, r3, lsr #32

08017c8c <vtable for DisplayHandler>:
	...
 8017c94:	0800907f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, ip, pc}
 8017c98:	080091c1 	stmdaeq	r0, {r0, r6, r7, r8, ip, pc}
 8017c9c:	08009215 	stmdaeq	r0, {r0, r2, r4, r9, ip, pc}

08017ca0 <vtable for PixelDmxStartStop>:
	...
 8017ca8:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8017cac:	080091d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, ip, pc}
 8017cb0:	08009085 	stmdaeq	r0, {r0, r2, r7, ip, pc}
 8017cb4:	08009095 	stmdaeq	r0, {r0, r2, r4, r7, ip, pc}

08017cb8 <vtable for LightSet64with4>:
	...
 8017cc0:	080090c9 	stmdaeq	r0, {r0, r3, r6, r7, ip, pc}
 8017cc4:	080091cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, ip, pc}
 8017cc8:	080090cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, ip, pc}
 8017ccc:	080090ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, pc}
 8017cd0:	0800910f 	stmdaeq	r0, {r0, r1, r2, r3, r8, ip, pc}
 8017cd4:	08009143 	stmdaeq	r0, {r0, r1, r6, r8, ip, pc}
 8017cd8:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 8017cdc:	08009165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip, pc}
 8017ce0:	08009183 	stmdaeq	r0, {r0, r1, r7, r8, ip, pc}
 8017ce4:	08009187 	stmdaeq	r0, {r0, r1, r2, r7, r8, ip, pc}
 8017ce8:	0800918d 	stmdaeq	r0, {r0, r2, r3, r7, r8, ip, pc}
 8017cec:	08009191 	stmdaeq	r0, {r0, r4, r7, r8, ip, pc}

08017cf0 <vtable for RDMNetDevice>:
	...
 8017cf8:	08009265 	stmdaeq	r0, {r0, r2, r5, r6, r9, ip, pc}
 8017cfc:	0800928d 	stmdaeq	r0, {r0, r2, r3, r7, r9, ip, pc}
 8017d00:	0800d7e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, sl, ip, lr, pc}
 8017d04:	0800d7e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, ip, lr, pc}
 8017d08:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8017d0c:	080091a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, ip, pc}
 8017d10:	080091e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, ip, pc}
 8017d14:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8017d18:	00000000 	andeq	r0, r0, r0
 8017d1c:	08009285 	stmdaeq	r0, {r0, r2, r7, r9, ip, pc}
 8017d20:	0800929f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 8017d24:	080091a1 	stmdaeq	r0, {r0, r5, r7, r8, ip, pc}
 8017d28:	080091b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, pc}
 8017d2c:	080091f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, pc}

08017d30 <CSWTCH.132>:
 8017d30:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8017d34:	 			; <UNDEFINED> instruction: 0x312e3146

08017d35 <SOFTWARE_VERSION>:
 8017d35:	00312e31 	eorseq	r2, r1, r1, lsr lr

08017d39 <gamma10_0>:
 8017d39:	03020100 	movweq	r0, #8448	; 0x2100
 8017d3d:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8017d41:	0b0a0908 	bleq	829a169 <__exidx_end+0x27f2f9>
 8017d45:	0f0e0d0c 	svceq	0x000e0d0c
 8017d49:	13121110 	tstne	r2, #16, 2
 8017d4d:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8017d51:	1b1a1918 	blne	869e1b9 <__exidx_end+0x683349>
 8017d55:	1f1e1d1c 	svcne	0x001e1d1c
 8017d59:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8017d5d:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8017d61:	2b2a2928 	blcs	8aa2209 <__exidx_end+0xa87399>
 8017d65:	2f2e2d2c 	svccs	0x002e2d2c
 8017d69:	33323130 	teqcc	r2, #48, 2
 8017d6d:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8017d71:	3b3a3938 	blcc	8ea6259 <__exidx_end+0xe8b3e9>
 8017d75:	3f3e3d3c 	svccc	0x003e3d3c
 8017d79:	43424140 	movtmi	r4, #8512	; 0x2140
 8017d7d:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8017d81:	4b4a4948 	blmi	92aa2a9 <__exidx_end+0x128f439>
 8017d85:	4f4e4d4c 	svcmi	0x004e4d4c
 8017d89:	53525150 	cmppl	r2, #80, 2
 8017d8d:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8017d91:	5b5a5958 	blpl	96ae2f9 <__exidx_end+0x1693489>
 8017d95:	5f5e5d5c 	svcpl	0x005e5d5c
 8017d99:	63626160 	cmnvs	r2, #96, 2
 8017d9d:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8017da1:	6b6a6968 	blvs	9ab2349 <__exidx_end+0x1a974d9>
 8017da5:	6f6e6d6c 	svcvs	0x006e6d6c
 8017da9:	73727170 	cmnvc	r2, #112, 2
 8017dad:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8017db1:	7b7a7978 	blvc	9eb6399 <__exidx_end+0x1e9b529>
 8017db5:	7f7e7d7c 	svcvc	0x007e7d7c
 8017db9:	83828180 	orrhi	r8, r2, #128, 2
 8017dbd:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8017dc1:	8b8a8988 	blhi	62ba3e9 <__stack_size+0x62b63e9>
 8017dc5:	8f8e8d8c 	svchi	0x008e8d8c
 8017dc9:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8017dcd:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8017dd1:	9b9a9998 	blls	66be439 <__stack_size+0x66ba439>
 8017dd5:	9f9e9d9c 	svcls	0x009e9d9c
 8017dd9:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8017ddd:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8017de1:	abaaa9a8 	blge	6ac2489 <__stack_size+0x6abe489>
 8017de5:	afaeadac 	svcge	0x00aeadac
 8017de9:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8017ded:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8017df1:	bbbab9b8 	bllt	6ec64d9 <__stack_size+0x6ec24d9>
 8017df5:	bfbebdbc 	svclt	0x00bebdbc
 8017df9:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8017dfd:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8017e01:	cbcac9c8 	blgt	72ca529 <__stack_size+0x72c6529>
 8017e05:	cfcecdcc 	svcgt	0x00cecdcc
 8017e09:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8017e0d:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8017e11:	dbdad9d8 	blle	76ce579 <__stack_size+0x76ca579>
 8017e15:	dfdedddc 	svcle	0x00dedddc
 8017e19:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8017e1d:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8017e21:	ebeae9e8 	bl	7ad25c9 <__stack_size+0x7ace5c9>
 8017e25:	efeeedec 	svc	0x00eeedec
 8017e29:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8017e2d:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8017e31:	fbfaf9f8 	blx	7ed661b <__stack_size+0x7ed261b>
 8017e35:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08017e39 <SOFTWARE_VERSION>:
 8017e39:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8017e3d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017e41:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017e45:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8017e49:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8017e4d:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8017e51:	0a73252c 	beq	9ce1309 <__exidx_end+0x1cc6499>
 8017e55:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8017e59:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017e5d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017e61:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8017e65:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8017e69:	4f000a64 	svcmi	0x00000a64
 8017e6d:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8017e71:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8017e75:	616c7073 	smcvs	50947	; 0xc703
 8017e79:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8017e7d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8017e81:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8017e85:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8017e89:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017e8d:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8017e91:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8017e95:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8017e99:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8017e9d:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8017ea1:	20505446 	subscs	r5, r0, r6, asr #8
 8017ea5:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8017ea9:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8017ead:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8017eb1:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8017eb5:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8017eb9:	525b2066 	subspl	r2, fp, #102	; 0x66
 8017ebd:	6f6f6265 	svcvs	0x006f6265
 8017ec1:	00205d74 	eoreq	r5, r0, r4, ror sp
 8017ec5:	4f525245 	svcmi	0x00525245
 8017ec9:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8017ecd:	000a7465 	andeq	r7, sl, r5, ror #8
 8017ed1:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8017ed5:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8017ed9:	616c7073 	smcvs	50947	; 0xc703
 8017edd:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8017ee1:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8017ee5:	000a2123 	andeq	r2, sl, r3, lsr #2
 8017ee9:	4f525245 	svcmi	0x00525245
 8017eed:	0a3f2352 	beq	8fe0c3d <__exidx_end+0xfc5dcd>
 8017ef1:	62657200 	rsbvs	r7, r5, #0, 4
 8017ef5:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8017ef9:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8017efd:	00237473 	eoreq	r7, r3, r3, ror r4
 8017f01:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017f05:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8017f09:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8017f0d:	76002365 	strvc	r2, [r0], -r5, ror #6
 8017f11:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017f15:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8017f19:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8017f1d:	63616600 	cmnvs	r1, #0, 12
 8017f21:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017f25:	 	tstmi	r0, r3, lsr #6

08017f28 <s_Node>:
 8017f28:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017f2c:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8017f38:	41730000 	cmnmi	r3, r0
 8017f3c:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8017f40:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8017f4c:	2043534f 	subcs	r5, r3, pc, asr #6
 8017f50:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8017f54:	00007265 	andeq	r7, r0, r5, ror #4
 8017f58:	00000000 	andeq	r0, r0, r0
 8017f5c:	544c0000 	strbpl	r0, [ip], #-0
 8017f60:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8017f70:	2043534f 	subcs	r5, r3, pc, asr #6
 8017f74:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8017f78:	0000746e 	andeq	r7, r0, lr, ror #8
 8017f7c:	00000000 	andeq	r0, r0, r0
 8017f80:	44520000 	ldrbmi	r0, [r2], #-0
 8017f84:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8017f88:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8017f8c:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8017f90:	0000796c 	andeq	r7, r0, ip, ror #18
 8017f94:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8017f98:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8017fa4:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8017fa8:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8017fb8:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8017fc8:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8017fcc:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8017fd0:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8017fd4:	00000072 	andeq	r0, r0, r2, ror r0
 8017fd8:	00000000 	andeq	r0, r0, r0
 8017fdc:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08017fee <s_Output>:
 8017fee:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8017ffa:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8018006:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801800a:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801800e:	00000000 	andeq	r0, r0, r0
 8018012:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8018016:	0000006c 	andeq	r0, r0, ip, rrx
 801801a:	00000000 	andeq	r0, r0, r0
 801801e:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8018022:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8018026:	00000000 	andeq	r0, r0, r0
 801802a:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8018036:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801803a:	00006769 	andeq	r6, r0, r9, ror #14
 801803e:	00000000 	andeq	r0, r0, r0
 8018042:	70657453 	rsbvc	r7, r5, r3, asr r4
 8018046:	00726570 	rsbseq	r6, r2, r0, ror r5
 801804a:	00000000 	andeq	r0, r0, r0
 801804e:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8018052:	00007265 	andeq	r7, r0, r5, ror #4
 8018056:	00000000 	andeq	r0, r0, r0
 801805a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801805e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018062:	00000000 	andeq	r0, r0, r0
 8018066:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801806a:	00006c61 	andeq	r6, r0, r1, ror #24
 801806e:	00000000 	andeq	r0, r0, r0
 8018072:	20424752 	subcs	r4, r2, r2, asr r7
 8018076:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801807a:	0000006c 	andeq	r0, r0, ip, rrx
	...

08018080 <RemoteConfig::s_GET>:
 8018080:	0800b279 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, ip, sp, pc}
 8018084:	00000000 	andeq	r0, r0, r0
 8018088:	08017ef2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 801808c:	00000008 	andeq	r0, r0, r8
 8018090:	0800a705 	stmdaeq	r0, {r0, r2, r8, r9, sl, sp, pc}
 8018094:	00000000 	andeq	r0, r0, r0
 8018098:	08017efb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 801809c:	00000005 	andeq	r0, r0, r5
 80180a0:	0800a705 	stmdaeq	r0, {r0, r2, r8, r9, sl, sp, pc}
 80180a4:	00000000 	andeq	r0, r0, r0
 80180a8:	08017f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, ip, sp, lr}
 80180ac:	00000006 	andeq	r0, r0, r6
 80180b0:	0800a8b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp, pc}
 80180b4:	00000000 	andeq	r0, r0, r0
 80180b8:	08017f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, ip, sp, lr}
 80180bc:	00000007 	andeq	r0, r0, r7
 80180c0:	0800a879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, sp, pc}
 80180c4:	00000000 	andeq	r0, r0, r0
 80180c8:	08017f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip, sp, lr}
 80180cc:	00000008 	andeq	r0, r0, r8
 80180d0:	0800a7d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, sp, pc}
 80180d4:	00000000 	andeq	r0, r0, r0
 80180d8:	08017ed7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 80180dc:	00000008 	andeq	r0, r0, r8
 80180e0:	0800ab8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, fp, sp, pc}
 80180e4:	00000000 	andeq	r0, r0, r0
 80180e8:	08017f19 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80180ec:	00010004 	andeq	r0, r1, r4
 80180f0:	0800a829 	stmdaeq	r0, {r0, r3, r5, fp, sp, pc}
 80180f4:	00000000 	andeq	r0, r0, r0
 80180f8:	08017ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 80180fc:	00000005 	andeq	r0, r0, r5
 8018100:	0800af69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, sp, pc}
 8018104:	00000000 	andeq	r0, r0, r0
 8018108:	08017f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 801810c:	00000009 	andeq	r0, r0, r9

08018110 <RemoteConfig::s_SET>:
 8018110:	0800a965 	stmdaeq	r0, {r0, r2, r5, r6, r8, fp, sp, pc}
 8018114:	00000000 	andeq	r0, r0, r0
 8018118:	08017ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 801811c:	00010005 	andeq	r0, r1, r5
 8018120:	0800a93d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, fp, sp, pc}
 8018124:	00000000 	andeq	r0, r0, r0
 8018128:	08017ed7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 801812c:	00010008 	andeq	r0, r1, r8
 8018130:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018134:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8018138:	73252300 			; <UNDEFINED> instruction: 0x73252300
 801813c:	0a64253d 	beq	9921638 <__exidx_end+0x19067c8>
 8018140:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8018144:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018148:	002c2273 	eoreq	r2, ip, r3, ror r2
 801814c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8018150:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018154:	6f626552 	svcvs	0x00626552
 8018158:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801815c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8018160:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8018164:	6f6f6265 	svcvs	0x006f6265
 8018168:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801816c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8018170:	6f637200 	svcvs	0x00637200
 8018174:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018178:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801817c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8018180:	6b726f77 	blvs	9cb3f64 <__exidx_end+0x1c990f4>
 8018184:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018188:	73696400 	cmnvc	r9, #0, 8
 801818c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018190:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8018194:	33316500 	teqcc	r1, #0, 10
 8018198:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 801819c:	61700074 	cmnvs	r0, r4, ror r0
 80181a0:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80181a4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80181a8:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 80181ac:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80181b0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80181b4:	00000000 	andeq	r0, r0, r0

080181b8 <RemoteConfig::s_TXT>:
 80181b8:	0800ab95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, fp, sp, pc}
 80181bc:	00000000 	andeq	r0, r0, r0
 80181c0:	0800ae71 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, fp, sp, pc}
 80181c4:	00000000 	andeq	r0, r0, r0
 80181c8:	08018171 	stmdaeq	r1, {r0, r4, r5, r6, r8, pc}
 80181cc:	0000000b 	andeq	r0, r0, fp
 80181d0:	0000000c 	andeq	r0, r0, ip
 80181d4:	0800abc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, fp, sp, pc}
 80181d8:	00000000 	andeq	r0, r0, r0
 80181dc:	0800aea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, sp, pc}
 80181e0:	00000000 	andeq	r0, r0, r0
 80181e4:	0801817d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, pc}
 80181e8:	0000000b 	andeq	r0, r0, fp
 80181ec:	00000000 	andeq	r0, r0, r0
 80181f0:	0800ac81 	stmdaeq	r0, {r0, r7, sl, fp, sp, pc}
 80181f4:	00000000 	andeq	r0, r0, r0
 80181f8:	0800af41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, sp, pc}
 80181fc:	00000000 	andeq	r0, r0, r0
 8018200:	08018189 	stmdaeq	r1, {r0, r3, r7, r8, pc}
 8018204:	0000000b 	andeq	r0, r0, fp
 8018208:	0000000f 	andeq	r0, r0, pc
 801820c:	0800abf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, sp, pc}
 8018210:	00000000 	andeq	r0, r0, r0
 8018214:	0800aec9 	stmdaeq	r0, {r0, r3, r6, r7, r9, sl, fp, sp, pc}
 8018218:	00000000 	andeq	r0, r0, r0
 801821c:	08018195 	stmdaeq	r1, {r0, r2, r4, r7, r8, pc}
 8018220:	00000008 	andeq	r0, r0, r8
 8018224:	00000004 	andeq	r0, r0, r4
 8018228:	0800ac25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, pc}
 801822c:	00000000 	andeq	r0, r0, r0
 8018230:	0800aef1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, fp, sp, pc}
 8018234:	00000000 	andeq	r0, r0, r0
 8018238:	0801819e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, pc}
 801823c:	0000000a 	andeq	r0, r0, sl
 8018240:	00000002 	andeq	r0, r0, r2
 8018244:	0800ac51 	stmdaeq	r0, {r0, r4, r6, sl, fp, sp, pc}
 8018248:	00000000 	andeq	r0, r0, r0
 801824c:	0800af19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, sp, pc}
 8018250:	00000000 	andeq	r0, r0, r0
 8018254:	080181a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, pc}
 8018258:	0000000b 	andeq	r0, r0, fp
 801825c:	00000003 	andeq	r0, r0, r3
 8018260:	00544547 	subseq	r4, r4, r7, asr #10
 8018264:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8018268:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 801826c:	0a200050 	beq	88183b4 <__exidx_end+0x7fd544>
 8018270:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8018274:	43003a00 	movwmi	r3, #2560	; 0xa00
 8018278:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801827c:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8018280:	00657079 	rsbeq	r7, r5, r9, ror r0
 8018284:	61003b20 	tstvs	r0, r0, lsr #22
 8018288:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801828c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8018290:	6a2f6e6f 	bvs	8bf3c54 <__exidx_end+0xbd8de4>
 8018294:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8018298:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 801829c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80182a0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80182a4:	2f006874 	svccs	0x00006874
 80182a8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80182ac:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80182b0:	2f006c6d 	svccs	0x00006c6d
 80182b4:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80182b8:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80182bc:	2f007373 	svccs	0x00007373
 80182c0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80182c4:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80182c8:	736a2f00 	cmnvc	sl, #0, 30
 80182cc:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80182d0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80182d4:	72657600 	rsbvc	r7, r5, #0, 12
 80182d8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80182dc:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80182e0:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80182e4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80182e8:	0079616c 	rsbseq	r6, r9, ip, ror #2
 80182ec:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80182f0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80182f4:	6a2f0079 	bvs	8bd84e0 <__exidx_end+0xbbd670>
 80182f8:	2f6e6f73 	svccs	0x006e6f73
 80182fc:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8018300:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8018304:	6f6f6265 	svcvs	0x006f6265
 8018308:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 801830c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8018310:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8018314:	434f4421 	movtmi	r4, #62497	; 0xf421
 8018318:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801831c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8018320:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8018324:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018328:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 801832c:	3e646165 	powccsz	f6, f4, f5
 8018330:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018334:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8018338:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 801833c:	742f3c74 	strtvc	r3, [pc], #-3188	; 8018344 <RemoteConfig::s_TXT+0x18c>
 8018340:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8018344:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018348:	3e646165 	powccsz	f6, f4, f5
 801834c:	6f623c0a 	svcvs	0x00623c0a
 8018350:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8018354:	4f3e3168 	svcmi	0x003e3168
 8018358:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801835c:	2f3c3e31 	svccs	0x003c3e31
 8018360:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018364:	2f3c0a3e 	svccs	0x003c0a3e
 8018368:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801836c:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8018370:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8018374:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8018378:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 801837c:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8018380:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8018384:	71655200 	cmnvc	r5, r0, lsl #4
 8018388:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 801838c:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8018390:	20797469 	rsbscs	r7, r9, r9, ror #8
 8018394:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8018398:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 801839c:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 80183a0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80183a4:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80183a8:	6f542049 	svcvs	0x00542049
 80183ac:	6f4c206f 	svcvs	0x004c206f
 80183b0:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 80183b4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 80183b8:	206c616e 	rsbcs	r6, ip, lr, ror #2
 80183bc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80183c0:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 80183c4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80183c8:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80183cc:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80183d0:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80183d4:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80183d8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80183dc:	00646574 	rsbeq	r6, r4, r4, ror r5
 80183e0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80183e4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80183e8:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80183ec:	70707553 	rsbsvc	r7, r0, r3, asr r5
 80183f0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 80183f4:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 80183f8:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 80183fc:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8018400:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8018404:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8018408:	434f4421 	movtmi	r4, #62497	; 0xf421
 801840c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8018410:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8018414:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8018418:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801841c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8018420:	3e646165 	powccsz	f6, f4, f5
 8018424:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018428:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 801842c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018430:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018434:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018438:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801843c:	0a3e6461 	beq	8fb15c8 <__exidx_end+0xf96758>
 8018440:	646f623c 	strbtvs	r6, [pc], #-572	; 8018448 <RemoteConfig::s_TXT+0x290>
 8018444:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8018448:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 801844c:	31682f3c 	cmncc	r8, ip, lsr pc
 8018450:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8018454:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018458:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801845c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018460:	5448000a 	strbpl	r0, [r8], #-10
 8018464:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8018468:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 801846c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018470:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8018474:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8018478:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801847c:	6f430a0d 	svcvs	0x00430a0d
 8018480:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8018484:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8018488:	203a6570 	eorscs	r6, sl, r0, ror r5
 801848c:	0a0d7325 	beq	8375128 <__exidx_end+0x35a2b8>
 8018490:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8018494:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8018498:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801849c:	203a6874 	eorscs	r6, sl, r4, ror r8
 80184a0:	0a0d7525 	beq	837593c <__exidx_end+0x35aacc>
 80184a4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80184a8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80184ac:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80184b0:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 80184b4:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 80184b8:	4447000a 	strbmi	r0, [r7], #-10
 80184bc:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
 80184c0:	49563035 	ldmdbmi	r6, {r0, r2, r4, r5, ip, sp}^
	...

080184c5 <contentType>:
 80184c5:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80184c9:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80184cd:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80184e5:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80184e9:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8018505:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8018509:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801850d:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8018511:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8018525:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8018529:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801852d:	2f6e6f69 	svccs	0x006e6f69
 8018531:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08018545 <RemoteConfigConst::PARAMS_DISABLE>:
 8018545:	61736964 	cmnvs	r3, r4, ror #18
 8018549:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801854d <RemoteConfigConst::PARAMS_FILE_NAME>:
 801854d:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8018551:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8018555:	00747874 	rsbseq	r7, r4, r4, ror r8

08018559 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8018559:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801855d:	5f79616c 	svcpl	0x0079616c
 8018561:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08018566 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8018566:	61736964 	cmnvs	r3, r4, ror #18
 801856a:	5f656c62 	svcpl	0x00656c62
 801856e:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8018572:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08018574 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8018574:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018578:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 801857c:	6f6f6265 	svcvs	0x006f6265
 8018580:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08018582 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8018582:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018586:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8018022 <s_Output+0x34>
 801858a:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801858e:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08018590 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8018590:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018594:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8018598:	6f746361 	svcvs	0x00746361
 801859c:	7b007972 	blvc	8036b6c <__exidx_end+0x1bcfc>
 80185a0:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80185a4:	7b3a2274 	blvc	8ea0f7c <__exidx_end+0xe8610c>
 80185a8:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80185ac:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80185b0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80185b4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80185b8:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80185bc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80185c0:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80185c4:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80185c8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80185cc:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80185d0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80185d4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80185d8:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80185dc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80185e0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80185e4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80185e8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80185ec:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80185f0:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80185f4:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80185f8:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80185fc:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8018600:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018604:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8018608:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801860c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8018610:	616f6222 	cmnvs	pc, r2, lsr #4
 8018614:	3a226472 	bcc	88b17e4 <__exidx_end+0x896974>
 8018618:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801861c:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8018620:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8018624:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8018628:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801862c:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8018630:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8018634:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8018638:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801863c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8018640:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8018644:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8018648:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801864c:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8018650:	7b000a7d 	blvc	801b04c <__exidx_end+0x1dc>
 8018654:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8018658:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801865c:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8018660:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8018664:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018668:	7b3a2273 	blvc	8ea103c <__exidx_end+0xe861cc>
 801866c:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8018670:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8018674:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8018678:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801867c:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8018680:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8018684:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8018688:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 801868c:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8018690:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8018694:	72542058 	subsvc	r2, r4, #88	; 0x58
 8018698:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 801869c:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80186a0:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80186a4:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80186a8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80186ac:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80186b0:	5020584d 	eorpl	r5, r0, sp, asr #16
 80186b4:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80186b8:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 80186bc:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80186c0:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 80186c4:	3a227478 	bcc	88b58ac <__exidx_end+0x89aa3c>
 80186c8:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 80186cc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80186d0:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 80186d4:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80186d8:	6f777465 	svcvs	0x00777465
 80186dc:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 80186e0:	3a227478 	bcc	88b58c8 <__exidx_end+0x89aa58>
 80186e4:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 80186e8:	6b726f77 	blvs	9cb44cc <__exidx_end+0x1c9965c>
 80186ec:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 80186f0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80186f4:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 80186f8:	3a227478 	bcc	88b58e0 <__exidx_end+0x89aa70>
 80186fc:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8018700:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8018704:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018708:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801870c:	6f697461 	svcvs	0x00697461
 8018710:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08018715 <index_html>:
 8018715:	4f44213c 	svcmi	0x0044213c
 8018719:	50595443 	subspl	r5, r9, r3, asr #8
 801871d:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8018721:	0a3e6c6d 	beq	8fb38dd <__exidx_end+0xf98a6d>
 8018725:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8018729:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801872d:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8018731:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8018735:	6b6e696c 	blvs	9bb2ced <__exidx_end+0x1b97e7d>
 8018739:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 801873d:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8018741:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8018745:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8018749:	72682022 	rsbvc	r2, r8, #34	; 0x22
 801874d:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8018751:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8018755:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8018759:	20227373 	eorcs	r7, r2, r3, ror r3
 801875d:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8018761:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018765:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8018769:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801876d:	0a3e656c 	beq	8fb1d25 <__exidx_end+0xf96eb5>
 8018771:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8018775:	0a3e6461 	beq	8fb1901 <__exidx_end+0xf96a91>
 8018779:	646f623c 	strbtvs	r6, [pc], #-572	; 8018781 <index_html+0x6c>
 801877d:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8018781:	6165683c 	cmnvs	r5, ip, lsr r8
 8018785:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8018789:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 801878d:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8018791:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8018795:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8018799:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801879d:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80187a1:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80187a5:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80187a9:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80187ad:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80187b1:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80187b5:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80187b9:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80187bd:	6f746365 	svcvs	0x00746365
 80187c1:	20227972 	eorcs	r7, r2, r2, ror r9
 80187c5:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80187c9:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80187cd:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80187d1:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80187d5:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80187d9:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80187dd:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80187e1:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80187e5:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80187e9:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80187ed:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80187f1:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80187f5:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80187f9:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80187fd:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8018801:	20227478 	eorcs	r7, r2, r8, ror r4
 8018805:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8018809:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 801880d:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8018811:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8018815:	0a3e656c 	beq	8fb1dcd <__exidx_end+0xf96f5d>
 8018819:	6f663c09 	svcvs	0x00663c09
 801881d:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8018821:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8018825:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8018829:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 801882d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018831:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8018835:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8018839:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 801883d:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8018841:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8018845:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8018849:	20747069 	rsbscs	r7, r4, r9, rrx
 801884d:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8018851:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8018855:	6a2e7865 	bvs	8bb69f1 <__exidx_end+0xb9bb81>
 8018859:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 801885d:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8018861:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8018865:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8018869:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801886d:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018871:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018875:	 	svcvs	0x0062000a

08018877 <styles_css>:
 8018877:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801887b:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801887f:	63616220 	cmnvs	r1, #32, 4
 8018883:	6f72676b 	svcvs	0x0072676b
 8018887:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 801888b:	6f6c6f63 	svcvs	0x006c6f63
 801888f:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8018893:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8018897:	30322c30 	eorscc	r2, r2, r0, lsr ip
 801889b:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 801889f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80188a3:	6f6c6f63 	svcvs	0x006c6f63
 80188a7:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80188ab:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80188af:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80188b3:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80188b7:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80188bb:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80188bf:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80188c3:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80188c7:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80188cb:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80188cf:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80188d3:	0a3b7865 	beq	8ef6a6f <__exidx_end+0xedbbff>
 80188d7:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80188db:	0a7b2069 	beq	9ee0a87 <__exidx_end+0x1ec5c17>
 80188df:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80188e3:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80188e7:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80188eb:	6f6e203a 	svcvs	0x006e203a
 80188ef:	0a3b656e 	beq	8ef1eaf <__exidx_end+0xed703f>
 80188f3:	616d2020 	cmnvs	sp, r0, lsr #32
 80188f7:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80188fb:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80188ff:	70352078 	eorsvc	r2, r5, r8, ror r0
 8018903:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8018907:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 801890b:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801890f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8018913:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8018917:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801891b:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801891f:	0a3b7865 	beq	8ef6abb <__exidx_end+0xedbc4b>
 8018923:	6f622020 	svcvs	0x00622020
 8018927:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801892b:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801892f:	3a737569 	bcc	9cf5edb <__exidx_end+0x1cdb06b>
 8018933:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8018937:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801893b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801893f:	203a7265 	eorscs	r7, sl, r5, ror #4
 8018943:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018947:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801894b:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801894f:	0a3b7870 	beq	8ef6b17 <__exidx_end+0xedbca7>
 8018953:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8018957:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801895b:	0a7b2072 	beq	9ee0b2b <__exidx_end+0x1ec5cbb>
 801895f:	69642020 	stmdbvs	r4!, {r5, sp}^
 8018963:	616c7073 	smcvs	50947	; 0xc703
 8018967:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 801896b:	3b78656c 	blcc	9e31f23 <__exidx_end+0x1e170b3>
 801896f:	6a20200a 	bvs	882099f <__exidx_end+0x805b2f>
 8018973:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8018977:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 801897b:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801897f:	203a746e 	eorscs	r7, sl, lr, ror #8
 8018983:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8018987:	0a3b7265 	beq	8ef5323 <__exidx_end+0xeda4b3>
 801898b:	6f622020 	svcvs	0x00622020
 801898f:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8018993:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8018997:	3a737569 	bcc	9cf5f43 <__exidx_end+0x1cdb0d3>
 801899b:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801899f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80189a3:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80189a7:	203a7265 	eorscs	r7, sl, r5, ror #4
 80189ab:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80189af:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80189b3:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80189b7:	0a3b7870 	beq	8ef6b7f <__exidx_end+0xedbd0f>
 80189bb:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

080189c0 <HttpContent>:
 80189c0:	080182b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, pc}
 80189c4:	08018877 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, fp, pc}
 80189c8:	080182c0 	stmdaeq	r1, {r6, r7, r9, pc}
 80189cc:	080189d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, pc}
 80189d0:	080182a8 	stmdaeq	r1, {r3, r5, r7, r9, pc}
 80189d4:	08018715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, pc}

080189d8 <index_js>:
 80189d8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80189dc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80189e0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80189e4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80189e8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80189ec:	6a284e4f 	bvs	8a2c330 <__exidx_end+0xa114c0>
 80189f0:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80189f4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80189f8:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80189fc:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8018a00:	6a2f273d 	bvs	8be26fc <__exidx_end+0xbc788c>
 8018a04:	2f6e6f73 	svccs	0x006e6f73
 8018a08:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018a0c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8018a10:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8018a14:	20797274 	rsbscs	r7, r9, r4, ror r2
 8018a18:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8018a1c:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8018a20:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8018a24:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8018a28:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018a2c:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8018a30:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8018a34:	0a3b296c 	beq	8ee2fec <__exidx_end+0xec817c>
 8018a38:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8018a3c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8018a40:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8018a44:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8018a48:	73657220 	cmnvc	r5, #32, 4
 8018a4c:	6f736a2e 	svcvs	0x00736a2e
 8018a50:	3b29286e 	blcc	8a62c10 <__exidx_end+0xa47da0>
 8018a54:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8018a58:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8018a5c:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8018a60:	6f727265 	svcvs	0x00727265
 8018a64:	7b202972 	blvc	8823034 <__exidx_end+0x8081c4>
 8018a68:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018a6c:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8018a70:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8018a74:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8018a78:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8018a7c:	3b29726f 	blcc	8a75440 <__exidx_end+0xa5a5d0>
 8018a80:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8018a84:	0a0a7d0a 	beq	82b7eb4 <__exidx_end+0x29d044>
 8018a88:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018a8c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8018a90:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018a94:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8018a98:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8018a9c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8018aa0:	20292874 	eorcs	r2, r9, r4, ror r8
 8018aa4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8018aa8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018aac:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018ab0:	6177613d 	cmnvs	r7, sp, lsr r1
 8018ab4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018ab8:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018abc:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018ac0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018ac4:	0a3b2927 	beq	8ee2f68 <__exidx_end+0xec80f8>
 8018ac8:	6f640909 	svcvs	0x00640909
 8018acc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8018ad0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8018ad4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8018ad8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8018adc:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8018ae0:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8018ae4:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8018ae8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8018aec:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8018af0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8018af4:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8018af8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8018afc:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8018b00:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8018b04:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8018b08:	2b656d61 	blcs	9974094 <__exidx_end+0x1959224>
 8018b0c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018a8c <index_js+0xb4>
 8018b10:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018b14:	2b223e69 	blcs	88a84c0 <__exidx_end+0x88d650>
 8018b18:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018b1c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8018b20:	6f6e2e74 	svcvs	0x006e2e74
 8018b24:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8018b28:	2b657079 	blcs	9974d14 <__exidx_end+0x1959ea4>
 8018b2c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018aac <index_js+0xd4>
 8018b30:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018b34:	2b223e69 	blcs	88a84e0 <__exidx_end+0x88d670>
 8018b38:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018b3c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8018b40:	6f6e2e74 	svcvs	0x006e2e74
 8018b44:	702e6564 	eorvc	r6, lr, r4, ror #10
 8018b48:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8018b4c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8018b50:	2f3c222b 	svccs	0x003c222b
 8018b54:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8018b58:	0a7d0a3b 	beq	9f5b44c <__exidx_end+0x1f405dc>
 8018b5c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8018b60:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8018b64:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8018b68:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8018b6c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8018b70:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018b74:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8018b78:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8018b7c:	0a7b2029 	beq	9ee0c28 <__exidx_end+0x1ec5db8>
 8018b80:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8018b84:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8018b88:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8018b8c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018b90:	6177613d 	cmnvs	r7, sp, lsr r1
 8018b94:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018b98:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018b9c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018ba0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018ba4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8018ba8:	3b292779 	blcc	8a62994 <__exidx_end+0xa47b24>
 8018bac:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018bb0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018bb4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018bb8:	0a22223d 	beq	88a14b4 <__exidx_end+0x886644>
 8018bbc:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8018bc0:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8018bc4:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8018bc8:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8018bcc:	6a624f3d 	bvs	98ac8c8 <__exidx_end+0x1891a58>
 8018bd0:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8018bd4:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8018bd8:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8018bdc:	6f746365 	svcvs	0x00746365
 8018be0:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8018be4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018be8:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8018bec:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8018bf0:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8018bf4:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8018bf8:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8018bfc:	6145726f 	cmpvs	r5, pc, ror #4
 8018c00:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8018c04:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8018c08:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018c0c:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8018c10:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8018c14:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8018c18:	20726176 	rsbscs	r6, r2, r6, ror r1
 8018c1c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8018c20:	203d2065 	eorscs	r2, sp, r5, rrx
 8018c24:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018c28:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8018c2c:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8018c30:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8018c34:	6b5b5d22 	blvs	96f00c4 <__exidx_end+0x16d5254>
 8018c38:	3b5d7965 	blcc	97771d4 <__exidx_end+0x175c364>
 8018c3c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018c40:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8018c44:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8018c48:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8018c4c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018c50:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8018c54:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8018c58:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8018c5c:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8018c60:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8018c64:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8018c68:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8018c6c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018c70:	0a3b223e 	beq	8ee1570 <__exidx_end+0xec6700>
 8018c74:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8018c78:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018c7c:	6f640909 	svcvs	0x00640909
 8018c80:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8018c84:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8018c88:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8018c8c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8018c90:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8018c94:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8018c98:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8018c9c:	6f746365 	svcvs	0x00746365
 8018ca0:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8018ca4:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8018ca8:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8018cac:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8018cb0:	3b6c6d74 	blcc	9b34288 <__exidx_end+0x1b19418>
 8018cb4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018cb8:	5f746567 	svcpl	0x00746567
 8018cbc:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8018cc0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018cc4:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8018cc8:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8018ccc:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8018cd0:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8018cd4:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8018cd8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8018cdc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018ce0:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8018ce4:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8018ce8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018cec:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8018cf0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8018cf4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8018cf8:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8018cfc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8018d00:	6177613d 	cmnvs	r7, sp, lsr r1
 8018d04:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018d08:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018d0c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018d10:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018d14:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8018d18:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018d1c:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8018d20:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8018d24:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8018d28:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8018d2c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8018d30:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8018d34:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8018d38:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8018d3c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8018d40:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8018d44:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8018d48:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8018d4c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8018d50:	2b22563e 	blcs	88ae650 <__exidx_end+0x8937e0>
 8018d54:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018d58:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018d5c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018d60:	2b6e6f69 	blcs	9bb4b0c <__exidx_end+0x1b99c9c>
 8018d64:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018ce4 <index_js+0x30c>
 8018d68:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018d6c:	2b223e69 	blcs	88a8718 <__exidx_end+0x88d8a8>
 8018d70:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018d74:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018d78:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8018d7c:	61642e64 	cmnvs	r4, r4, ror #28
 8018d80:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8018d84:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018d88:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018d8c:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8018d90:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018d94:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8018d98:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8018d9c:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8018da0:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8018da4:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8018da8:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8018dac:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8018db0:	6f697372 	svcvs	0x00697372
 8018db4:	6f622e6e 	svcvs	0x00622e6e
 8018db8:	2b647261 	blcs	9935744 <__exidx_end+0x191a8d4>
 8018dbc:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018d3c <index_js+0x364>
 8018dc0:	3b223e69 	blcc	88a876c <__exidx_end+0x88d8fc>
 8018dc4:	0a0a7d0a 	beq	82b81f4 <__exidx_end+0x29d384>
 8018dc8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018dcc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8018dd0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018dd4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8018dd8:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8018de0 <index_js+0x408>
 8018ddc:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8018de0:	20296c65 	eorcs	r6, r9, r5, ror #24
 8018de4:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8018de8:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8018dec:	613d7478 	teqvs	sp, r8, ror r4
 8018df0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8018df4:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8018df8:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8018dfc:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8018e00:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018e04:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018e08:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018e0c:	3b22223d 	blcc	88a1708 <__exidx_end+0x886898>
 8018e10:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8018e14:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8018e18:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8018e1c:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8018e20:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8018e24:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8018e28:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8018e2c:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8018e30:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8018e34:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018e38:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8018e3c:	0a7b2029 	beq	9ee0ee8 <__exidx_end+0x1ec6078>
 8018e40:	61760909 	cmnvs	r6, r9, lsl #18
 8018e44:	61762072 	cmnvs	r6, r2, ror r0
 8018e48:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8018e4c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8018e50:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8018e54:	6b5b5d6c 	blvs	96f040c <__exidx_end+0x16d559c>
 8018e58:	3b5d7965 	blcc	97773f4 <__exidx_end+0x175c584>
 8018e5c:	2009090a 	andcs	r0, r9, sl, lsl #18
 8018e60:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018e64:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8018e68:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8018e6c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8018e70:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8018e74:	2f3c222b 	svccs	0x003c222b
 8018e78:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8018e7c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8018e80:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8018e84:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8018e88:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8018e8c:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8018e94 <index_js+0x4bc>
 8018e90:	3b223e72 	blcc	88a8860 <__exidx_end+0x88d9f0>
 8018e94:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8018e98:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8018e9c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8018ea0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8018ea4:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8018ea8:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8018eac:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8018eb0:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8018eb4:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8018eb8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8018ebc:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8018ec0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8018ec4:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8018ec8:	0a3b6c6d 	beq	8ef4084 <__exidx_end+0xed9214>
 8018ecc:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8018ed0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8018ed4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8018ed8:	3b292874 	blcc	8a630b0 <__exidx_end+0xa48240>
 8018edc:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8018ee0:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8018ee4:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8018ee8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018eec:	0a3b2928 	beq	8ee3394 <__exidx_end+0xec8524>
 8018ef0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8018ef4:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8018ef8:	6f697372 	svcvs	0x00697372
 8018efc:	3b29286e 	blcc	8a630bc <__exidx_end+0xa4824c>
 8018f00:	3332000a 	teqcc	r2, #10
 8018f04:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8018f08:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8018f0c:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8018f10:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8018f14:	30007325 	andcc	r7, r0, r5, lsr #6
 8018f18:	6f4e202e 	svcvs	0x004e202e
 8018f1c:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8018f20:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8018f24:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8018f28:	202c6465 	eorcs	r6, ip, r5, ror #8
 8018f2c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8018f30:	6f687320 	svcvs	0x00687320
 8018f34:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8018f38:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8018f3c:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8018f40:	000a216e 	andeq	r2, sl, lr, ror #2
 8018f44:	00505448 	subseq	r5, r0, r8, asr #8
 8018f48:	0050544c 	subseq	r5, r0, ip, asr #8
 8018f4c:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8018f50:	000a6567 	andeq	r6, sl, r7, ror #10
 8018f54:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8018f58:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8018f5c:	203a2065 	eorscs	r2, sl, r5, rrx
 8018f60:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018f64:	20000a64 	andcs	r0, r0, r4, ror #20
 8018f68:	20444943 	subcs	r4, r4, r3, asr #18
 8018f6c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018f70:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8018f74:	20000a73 	andcs	r0, r0, r3, ror sl
 8018f78:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8018f7c:	000a7475 	andeq	r7, sl, r5, ror r4
 8018f80:	6f502020 	svcvs	0x00502020
 8018f84:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8018f88:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8018f8c:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8018f90:	20657372 	rsbcs	r7, r5, r2, ror r3
 8018f94:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8018f98:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8018f9c:	20000a5d 	andcs	r0, r0, sp, asr sl
 8018fa0:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8018fa4:	20000a74 	andcs	r0, r0, r4, ror sl
 8018fa8:	726f5020 	rsbvc	r5, pc, #32
 8018fac:	32252074 	eorcc	r2, r5, #116	; 0x74
 8018fb0:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8018fb4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8018fb8:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8018fbc:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8018fc0:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8018fc4:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8018fc8:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8018fcc:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018fd0:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8018fd4:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8018fd8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8018fdc:	000a6465 	andeq	r6, sl, r5, ror #8

08018fe0 <E131MsgConst::START>:
 8018fe0:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8018fe4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8018fe8:	43417320 	movtmi	r7, #4896	; 0x1320
 8018fec:	3145204e 	cmpcc	r5, lr, asr #32
 8018ff0:	0031332e 	eorseq	r3, r1, lr, lsr #6

08018ff4 <E131MsgConst::PARAMS>:
 8018ff4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018ff8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8018ffc:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019000:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019004:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019008:	 	movwvc	r3, #307	; 0x133

0801900b <E131MsgConst::STARTED>:
 801900b:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801900f:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019013:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8019017:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801901b:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 801901f:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8019023:	0066666f 	rsbeq	r6, r6, pc, ror #12
 8019027:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801902b:	6b636162 	blvs	98f15bb <__exidx_end+0x18d674b>
 801902f:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8019033:	6f007475 	svcvs	0x00007475
 8019037:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 801903b:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 801903f:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8019043:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 8019047:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 801904b:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 801904f:	754f2058 	strbvc	r2, [pc, #-88]	; 8018fff <E131MsgConst::PARAMS+0xb>
 8019053:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 8019057:	584d4400 	stmdapl	sp, {sl, lr}^
 801905b:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 801905f:	00007475 	andeq	r7, r0, r5, ror r4
	...

08019064 <CSWTCH.56>:
 8019064:	0801901e 	stmdaeq	r1, {r1, r2, r3, r4, ip, pc}
 8019068:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
 801906c:	080182da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, pc}
 8019070:	08019027 	stmdaeq	r1, {r0, r1, r2, r5, ip, pc}

08019074 <E131ParamsConst::PRIORITY>:
 8019074:	6f697270 	svcvs	0x00697270
 8019078:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801907c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019080:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8019084:	72700000 	rsbsvc	r0, r0, #0
 8019088:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801908c:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8019090:	5f74726f 	svcpl	0x0074726f
 8019094:	00000062 	andeq	r0, r0, r2, rrx
 8019098:	6f697270 	svcvs	0x00697270
 801909c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80190a0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80190a4:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80190a8:	72700000 	rsbsvc	r0, r0, #0
 80190ac:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80190b0:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 80190b4:	5f74726f 	svcpl	0x0074726f
 80190b8:	00000064 	andeq	r0, r0, r4, rrx

080190bc <E131ParamsConst::FILE_NAME>:
 80190bc:	31333165 	teqcc	r3, r5, ror #2
 80190c0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

080190c5 <E117Const::ACN_PACKET_IDENTIFIER>:
 80190c5:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80190c9:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80190cd:	00000037 	andeq	r0, r0, r7, lsr r0

080190d1 <E131BridgeConst::VERSION>:
 80190d1:	33321901 	teqcc	r2, #16384	; 0x4000
 80190d5:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 80190d9:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 80190dd:	33312e30 	teqcc	r1, #48, 28	; 0x300
 80190e1:	33320033 	teqcc	r2, #51	; 0x33
 80190e5:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 80190e9:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 80190ed:	33312e30 	teqcc	r1, #48, 28	; 0x300
 80190f1:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 80190f5:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 80190f9:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80190fd:	6f632065 	svcvs	0x00632065
 8019101:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8019105:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8019109:	0a6e6f69 	beq	9bb4eb5 <__exidx_end+0x1b9a045>
 801910d:	6f502000 	svcvs	0x00502000
 8019111:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8019115:	20205044 	eorcs	r5, r0, r4, asr #32
 8019119:	20202020 	eorcs	r2, r0, r0, lsr #32
 801911d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019121:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019125:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019129:	20000a64 	andcs	r0, r0, r4, ror #20
 801912d:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8019131:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8019135:	6f6a2074 	svcvs	0x006a2074
 8019139:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 801913d:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8019141:	3a207473 	bcc	8836315 <__exidx_end+0x81b4a5>
 8019145:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8019149:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801914d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019151:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8019155:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8019159:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 801915d:	73655220 	cmnvc	r5, #32, 4
 8019161:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8019165:	20202065 	eorcs	r2, r0, r5, rrx
 8019169:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801916d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019171:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019175:	0a64252e 	beq	9922635 <__exidx_end+0x19077c5>
 8019179:	 	andeq	r0, r0, r0

0801917c <vtable for LLRPDevice>:
	...
 8019184:	0800d2eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, ip, lr, pc}
 8019188:	0800d2f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, ip, lr, pc}
 801918c:	0800d2ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, ip, lr, pc}
 8019190:	0800d2ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r9, ip, lr, pc}
 8019194:	0800d2f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, lr, pc}

08019198 <RDMNetConst::MSG_CONFIG>:
 8019198:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801919c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80191a0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80191a4:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80191a8:	 	andpl	r7, r0, #1694498816	; 0x65000000

080191ab <RDMNetConst::MSG_STARTED>:
 80191ab:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80191af:	73207465 			; <UNDEFINED> instruction: 0x73207465
 80191b3:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80191b7:	 	movwpl	r6, #1125	; 0x465

080191ba <RDMNetConst::MSG_START>:
 80191ba:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80191be:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80191c2:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 80191c6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80191ca:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80191ce:	000a7465 	andeq	r7, sl, r5, ror #8
 80191d2:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 80191d6:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80191da:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 80191de:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 80191e2:	6f707365 	svcvs	0x00707365
 80191e6:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 80191ea:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80191ee:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80191f2:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80191f6:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80191fa:	6f725020 	svcvs	0x00725020
 80191fe:	6f636f74 	svcvs	0x00636f74
 8019202:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8019206:	6f697372 	svcvs	0x00697372
 801920a:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 801920e:	0a64252e 	beq	99226ce <__exidx_end+0x190785e>
 8019212:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8019216:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 801921a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801921e:	20202073 	eorcs	r2, r0, r3, ror r0
 8019222:	3a202020 	bcc	88212aa <__exidx_end+0x80643a>
 8019226:	0a642520 	beq	99226ae <__exidx_end+0x190783e>
 801922a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801922e:	6f462058 	svcvs	0x00462058
 8019232:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8019236:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801923a:	3a202020 	bcc	88212c2 <__exidx_end+0x806452>
 801923e:	0a642520 	beq	99226c6 <__exidx_end+0x1907856>
 8019242:	65502000 	ldrbvs	r2, [r0, #-0]
 8019246:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801924a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801924e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8019252:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8019256:	5b206425 	blpl	88322f2 <__exidx_end+0x817482>
 801925a:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801925e:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019262:	20627553 	rsbcs	r7, r2, r3, asr r5
 8019266:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801926a:	20736563 	rsbscs	r6, r3, r3, ror #10
 801926e:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019272:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019276:	20000a64 	andcs	r0, r0, r4, ror #20
 801927a:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 801927e:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8019282:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019286:	20202020 	eorcs	r2, r0, r0, lsr #32
 801928a:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801928e:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08019294 <vtable for RDMDeviceResponder>:
	...
 801929c:	0800d7e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, ip, lr, pc}
 80192a0:	0800d809 	stmdaeq	r0, {r0, r3, fp, ip, lr, pc}
 80192a4:	0800d7e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, sl, ip, lr, pc}
 80192a8:	0800d7e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, ip, lr, pc}

080192ac <UID_ALL>:
 80192ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80192b0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

080192b4 <RDMHandler::PID_DEFINITIONS>:
 80192b4:	00000060 	andeq	r0, r0, r0, rrx
 80192b8:	0800dcc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, ip, lr, pc}
	...
 80192c8:	01010000 	mrseq	r0, (UNDEF: 1)
 80192cc:	00000080 	andeq	r0, r0, r0, lsl #1
 80192d0:	0800ddad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, lr, pc}
	...
 80192e0:	01010100 	mrseq	r0, (UNDEF: 17)
 80192e4:	00000081 	andeq	r0, r0, r1, lsl #1
 80192e8:	0800ddc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, lr, pc}
	...
 80192f8:	01010100 	mrseq	r0, (UNDEF: 17)
 80192fc:	00000082 	andeq	r0, r0, r2, lsl #1
 8019300:	0800dde9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 8019304:	00000000 	andeq	r0, r0, r0
 8019308:	0800df39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, lr, pc}
 801930c:	00000000 	andeq	r0, r0, r0
 8019310:	01010100 	mrseq	r0, (UNDEF: 17)
 8019314:	00000090 	muleq	r0, r0, r0
 8019318:	0800dd2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip, lr, pc}
 801931c:	00000000 	andeq	r0, r0, r0
 8019320:	0800df05 	stmdaeq	r0, {r0, r2, r8, r9, sl, fp, ip, lr, pc}
 8019324:	00000000 	andeq	r0, r0, r0
 8019328:	01010100 	mrseq	r0, (UNDEF: 17)
 801932c:	00001000 	andeq	r1, r0, r0
 8019330:	0800de25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, ip, lr, pc}
 8019334:	00000000 	andeq	r0, r0, r0
 8019338:	0800de89 	stmdaeq	r0, {r0, r3, r7, r9, sl, fp, ip, lr, pc}
 801933c:	00000000 	andeq	r0, r0, r0
 8019340:	01010000 	mrseq	r0, (UNDEF: 1)
 8019344:	00001001 	andeq	r1, r0, r1
	...
 8019350:	0800de41 	stmdaeq	r0, {r0, r6, r9, sl, fp, ip, lr, pc}
 8019354:	00000000 	andeq	r0, r0, r0
 8019358:	01010100 	mrseq	r0, (UNDEF: 17)
 801935c:	00000700 	andeq	r0, r0, r0, lsl #14
 8019360:	0800e231 	stmdaeq	r0, {r0, r4, r5, r9, sp, lr, pc}
	...
 8019370:	01000000 	mrseq	r0, (UNDEF: 0)
 8019374:	00000701 	andeq	r0, r0, r1, lsl #14
 8019378:	0800e259 	stmdaeq	r0, {r0, r3, r4, r6, r9, sp, lr, pc}
	...
 8019388:	01000004 	tsteq	r0, r4
 801938c:	00000702 	andeq	r0, r0, r2, lsl #14
 8019390:	0800e2a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sp, lr, pc}
	...
 80193a0:	01000004 	tsteq	r0, r4
 80193a4:	00000703 	andeq	r0, r0, r3, lsl #14
 80193a8:	0800e2d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sp, lr, pc}
 80193ac:	00000000 	andeq	r0, r0, r0
 80193b0:	0800e301 	stmdaeq	r0, {r0, r8, r9, sp, lr, pc}
 80193b4:	00000000 	andeq	r0, r0, r0
 80193b8:	01000004 	tsteq	r0, r4
 80193bc:	00000704 	andeq	r0, r0, r4, lsl #14
 80193c0:	0800e36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sp, lr, pc}
 80193c4:	00000000 	andeq	r0, r0, r0
 80193c8:	0800e39d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sp, lr, pc}
 80193cc:	00000000 	andeq	r0, r0, r0
 80193d0:	01000004 	tsteq	r0, r4
 80193d4:	00000705 	andeq	r0, r0, r5, lsl #14
 80193d8:	0800e411 	stmdaeq	r0, {r0, r4, sl, sp, lr, pc}
	...
 80193e8:	01000004 	tsteq	r0, r4
 80193ec:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 80193f8:	0800e3e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sp, lr, pc}
 80193fc:	00000000 	andeq	r0, r0, r0
 8019400:	01000004 	tsteq	r0, r4
 8019404:	00000706 	andeq	r0, r0, r6, lsl #14
 8019408:	0800e459 	stmdaeq	r0, {r0, r3, r4, r6, sl, sp, lr, pc}
 801940c:	00000000 	andeq	r0, r0, r0
 8019410:	0800e49d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, sp, lr, pc}
 8019414:	00000000 	andeq	r0, r0, r0
 8019418:	01000004 	tsteq	r0, r4
 801941c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8019428:	0800e4e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, sl, sp, lr, pc}
 801942c:	00000000 	andeq	r0, r0, r0
 8019430:	01000004 	tsteq	r0, r4
 8019434:	0000070b 	andeq	r0, r0, fp, lsl #14
 8019438:	0800e349 	stmdaeq	r0, {r0, r3, r6, r8, r9, sp, lr, pc}
	...
 8019448:	01000001 	tsteq	r0, r1
 801944c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8019450:	0800e511 	stmdaeq	r0, {r0, r4, r8, sl, sp, lr, pc}
 8019454:	00000000 	andeq	r0, r0, r0
 8019458:	0800e549 	stmdaeq	r0, {r0, r3, r6, r8, sl, sp, lr, pc}
 801945c:	00000000 	andeq	r0, r0, r0
 8019460:	01000004 	tsteq	r0, r4
 8019464:	0000070c 	andeq	r0, r0, ip, lsl #14
 8019468:	0800e551 	stmdaeq	r0, {r0, r4, r6, r8, sl, sp, lr, pc}
 801946c:	00000000 	andeq	r0, r0, r0
 8019470:	0800e581 	stmdaeq	r0, {r0, r7, r8, sl, sp, lr, pc}
 8019474:	00000000 	andeq	r0, r0, r0
 8019478:	01000000 	mrseq	r0, (UNDEF: 0)
 801947c:	0000070d 	andeq	r0, r0, sp, lsl #14
 8019480:	0800e5b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, sp, lr, pc}
 8019484:	00000000 	andeq	r0, r0, r0
 8019488:	0800e5e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, sp, lr, pc}
 801948c:	00000000 	andeq	r0, r0, r0
 8019490:	01000000 	mrseq	r0, (UNDEF: 0)
 8019494:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019498:	2f2f3a73 	svccs	0x002f3a73
 801949c:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 80194a0:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 80194a4:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 80194a8:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 80194ac:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 80194b0:	20656369 	rsbcs	r6, r5, r9, ror #6
 80194b4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80194b8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80194bc:	6f697461 	svcvs	0x00697461
 80194c0:	20000a6e 	andcs	r0, r0, lr, ror #20
 80194c4:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 80194c8:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 80194cc:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 80194d0:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 80194d4:	203a2065 	eorscs	r2, sl, r5, rrx
 80194d8:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80194dc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80194e0:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 80194e4:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 80194e8:	20726572 	rsbscs	r6, r2, r2, ror r5
 80194ec:	20204449 	eorcs	r4, r0, r9, asr #8
 80194f0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80194f4:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 80194f8:	0a58322e 	beq	9625db8 <__exidx_end+0x160af48>
 80194fc:	65532000 	ldrbvs	r2, [r3, #-0]
 8019500:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 8019504:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 8019508:	20726562 	rsbscs	r6, r2, r2, ror #10
 801950c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019510:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8019514:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8019518:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801951c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8019520:	000a5832 	andeq	r5, sl, r2, lsr r8
 8019524:	6f6f5220 	svcvs	0x006f5220
 8019528:	616c2074 	smcvs	49668	; 0xc204
 801952c:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8019530:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019534:	3a202020 	bcc	88215bc <__exidx_end+0x80674c>
 8019538:	2a2e2520 	bcs	8ba29c0 <__exidx_end+0xb87b50>
 801953c:	20000a73 	andcs	r0, r0, r3, ror sl
 8019540:	646f7250 	strbtvs	r7, [pc], #-592	; 8019548 <RDMHandler::PID_DEFINITIONS+0x294>
 8019544:	20746375 	rsbscs	r6, r4, r5, ror r3
 8019548:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 801954c:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019550:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019554:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8019558:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801955c:	5020000a 	eorpl	r0, r0, sl
 8019560:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8019564:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 8019568:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 801956c:	2020206c 	eorcs	r2, r0, ip, rrx
 8019570:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019574:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8019578:	0a58322e 	beq	9625e38 <__exidx_end+0x160afc8>
	...

0801957d <DEVICE_LABEL>:
 801957d:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8019581:	30353446 	eorscc	r3, r5, r6, asr #8
 8019585:	52204956 	eorpl	r4, r0, #1409024	; 0x158000
 8019589:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 801958d:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8019591:	 	subseq	r0, r0, r5, rrx

08019593 <RDMConst::MANUFACTURER_ID>:
 8019593:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08019595 <RDMConst::MANUFACTURER_NAME>:
 8019595:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019599:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 801959d:	6f2e7777 	svcvs	0x002e7777
 80195a1:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80195a5:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80195a9:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80195ad:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80195b1:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80195b5:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80195b9:	30252d78 	eorcc	r2, r5, r8, ror sp
 80195bd:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 80195c1:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 80195c5:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 80195c9:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195cd:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195d1:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195d5:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195d9:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195dd:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80195e1:	584d4400 	stmdapl	sp, {sl, lr}^
 80195e5:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 80195e9:	20000a64 	andcs	r0, r0, r4, ror #20
 80195ed:	61657242 	cmnvs	r5, r2, asr #4
 80195f1:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 80195f5:	2020656d 	eorcs	r6, r0, sp, ror #10
 80195f9:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80195fd:	20000a75 	andcs	r0, r0, r5, ror sl
 8019601:	2042414d 	subcs	r4, r2, sp, asr #2
 8019605:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8019609:	20202020 	eorcs	r2, r0, r0, lsr #32
 801960d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019611:	20000a75 	andcs	r0, r0, r5, ror sl
 8019615:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 8019619:	20687365 	rsbcs	r7, r8, r5, ror #6
 801961d:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 8019621:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019625:	20000a75 	andcs	r0, r0, r5, ror sl
 8019629:	746f6c53 	strbtvc	r6, [pc], #-3155	; 8019631 <RDMConst::MANUFACTURER_NAME+0x9c>
 801962d:	20202073 	eorcs	r2, r0, r3, ror r0
 8019631:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019635:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019639:	 	andeq	r0, r0, r5, ror sl

0801963c <vtable for DmxSend>:
	...
 8019644:	0800e7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8019648:	0800e8d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, sp, lr, pc}
 801964c:	0800e7f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8019650:	0800e821 	stmdaeq	r0, {r0, r5, fp, sp, lr, pc}
 8019654:	0800e859 	stmdaeq	r0, {r0, r3, r4, r6, fp, sp, lr, pc}
 8019658:	0800e869 	stmdaeq	r0, {r0, r3, r5, r6, fp, sp, lr, pc}
 801965c:	0800e875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, sp, lr, pc}
 8019660:	0800e881 	stmdaeq	r0, {r0, r7, fp, sp, lr, pc}
 8019664:	08014c1b 	stmdaeq	r1, {r0, r1, r3, r4, sl, fp, lr}
 8019668:	08014c11 	stmdaeq	r1, {r0, r4, sl, fp, lr}
 801966c:	08014c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, lr}
 8019670:	08014c1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, fp, lr}

08019674 <DmxParamsConst::BREAK_TIME>:
 8019674:	61657262 	cmnvs	r5, r2, ror #4
 8019678:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801967c:	 	movwvc	r6, #1389	; 0x56d

0801967f <DmxParamsConst::SLOTS_COUNT>:
 801967f:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8019687 <DmxParamsConst::SLOTS_COUNT+0x8>
 8019683:	6f635f73 	svcvs	0x00635f73
 8019687:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801968b <DmxParamsConst::REFRESH_RATE>:
 801968b:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 801968f:	5f687365 	svcpl	0x00687365
 8019693:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08019698 <DmxParamsConst::MAB_TIME>:
 8019698:	5f62616d 	svcpl	0x0062616d
 801969c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080196a1 <DmxParamsConst::FILE_NAME>:
 80196a1:	61726170 	cmnvs	r2, r0, ror r1
 80196a5:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80196a9:	 	andeq	r7, r0, r8, ror r4

080196ac <s_DirGpio>:
 80196ac:	40020c00 	andmi	r0, r2, r0, lsl #24
 80196b0:	00000001 	andeq	r0, r0, r1
 80196b4:	40020c00 	andmi	r0, r2, r0, lsl #24
 80196b8:	00000002 	andeq	r0, r0, r2

080196bc <vtable for WS28xxDmxMulti>:
	...
 80196c4:	0800f379 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr, pc}
 80196c8:	0800f399 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, ip, sp, lr, pc}
 80196cc:	0800f357 	stmdaeq	r0, {r0, r1, r2, r4, r6, r8, r9, ip, sp, lr, pc}
 80196d0:	0800f509 	stmdaeq	r0, {r0, r3, r8, sl, ip, sp, lr, pc}
 80196d4:	0800f3d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, r9, ip, sp, lr, pc}
 80196d8:	0800f3ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r8, r9, ip, sp, lr, pc}
 80196dc:	0800f4eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, sl, ip, sp, lr, pc}
 80196e0:	0800f503 	stmdaeq	r0, {r0, r1, r8, sl, ip, sp, lr, pc}
 80196e4:	0800f349 	stmdaeq	r0, {r0, r3, r6, r8, r9, ip, sp, lr, pc}
 80196e8:	0800f34d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, ip, sp, lr, pc}
 80196ec:	0800f353 	stmdaeq	r0, {r0, r1, r4, r6, r8, r9, ip, sp, lr, pc}
 80196f0:	08014c1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, fp, lr}
 80196f4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80196f8:	2a2e253a 	bcs	8ba2be8 <__exidx_end+0xb87d78>
 80196fc:	23002c66 	movwcs	r2, #3174	; 0xc66
 8019700:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8019704:	0a662a2e 	beq	99a3fc4 <__exidx_end+0x1989154>
 8019708:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 801970c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 8019710:	4f003e74 	svcmi	0x00003e74
 8019714:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8019718:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801971c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8019720:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8019724:	4f007465 	svcmi	0x00007465
 8019728:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801972c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8019730:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8019734:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019738:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 801973c:	6f724700 	svcvs	0x00724700
 8019740:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8019744:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8019748:	206b636f 	rsbcs	r6, fp, pc, ror #6
 801974c:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 8019750:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8019754:	00737069 	rsbseq	r7, r3, r9, rrx
 8019758:	31415041 	cmpcc	r1, r1, asr #32
 801975c:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 8019760:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8019764:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 8019768:	70207473 	eorvc	r7, r0, r3, ror r4
 801976c:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8019770:	50006e72 	andpl	r6, r0, r2, ror lr
 8019774:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8019778:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 801977c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8019780:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8019784:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8019788:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801978c:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 8019790:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 8019794:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019798:	20000a64 	andcs	r0, r0, r4, ror #20
 801979c:	756f7247 	strbvc	r7, [pc, #-583]!	; 801955d <RDMHandler::PID_DEFINITIONS+0x2a9>
 80197a0:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80197a4:	756f6320 	strbvc	r6, [pc, #-800]!	; 801948c <RDMHandler::PID_DEFINITIONS+0x1d8>
 80197a8:	3a20746e 	bcc	8836968 <__exidx_end+0x81baf8>
 80197ac:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80197b0:	6f72475b 	svcvs	0x0072475b
 80197b4:	20737075 	rsbscs	r7, r3, r5, ror r0
 80197b8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80197bc:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 80197c0:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 80197c4:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 80197c8:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80197cc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80197d0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80197d4:	6f697461 	svcvs	0x00697461
 80197d8:	20000a6e 	andcs	r0, r0, lr, ror #20
 80197dc:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80197e0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80197e4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80197e8:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80197ec:	20000a5d 	andcs	r0, r0, sp, asr sl
 80197f0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 80197f4:	20202074 	eorcs	r2, r0, r4, ror r0
 80197f8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80197fc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8019800:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8019804:	3a20676e 	bcc	88335c4 <__exidx_end+0x818754>
 8019808:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801980c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8019810:	5420000a 	strtpl	r0, [r0], #-10
 8019814:	20204830 	eorcs	r4, r0, r0, lsr r8
 8019818:	3a202020 	bcc	88218a0 <__exidx_end+0x806a30>
 801981c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8019820:	305b2066 	subscc	r2, fp, r6, rrx
 8019824:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8019828:	5420000a 	strtpl	r0, [r0], #-10
 801982c:	20204831 	eorcs	r4, r0, r1, lsr r8
 8019830:	3a202020 	bcc	88218b8 <__exidx_end+0x806a48>
 8019834:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8019838:	305b2066 	subscc	r2, fp, r6, rrx
 801983c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8019840:	4720000a 	strmi	r0, [r0, -sl]!
 8019844:	61626f6c 	cmnvs	r2, ip, ror #30
 8019848:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 801984c:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8019850:	3a737365 	bcc	9cf65ec <__exidx_end+0x1cdb77c>
 8019854:	0a752520 	beq	9d62cdc <__exidx_end+0x1d47e6c>
 8019858:	61472000 	mrsvs	r2, (UNDEF: 71)
 801985c:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 8019860:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 8019864:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8019868:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801986c:	20000a73 	andcs	r0, r0, r3, ror sl
 8019870:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8019874:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 8019878:	7a482075 	bvc	9221a54 <__exidx_end+0x1206be4>
 801987c:	0000000a 	andeq	r0, r0, sl

08019880 <CSWTCH.9>:
 8019880:	08019a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, pc}
 8019884:	08019b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, pc}
 8019888:	08019c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, pc}
 801988c:	08019d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, pc}
 8019890:	08019e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, pc}

08019894 <gamma10_0>:
 8019894:	03020100 	movweq	r0, #8448	; 0x2100
 8019898:	07060504 	streq	r0, [r6, -r4, lsl #10]
 801989c:	0b0a0908 	bleq	829bcc4 <__exidx_end+0x280e54>
 80198a0:	0f0e0d0c 	svceq	0x000e0d0c
 80198a4:	13121110 	tstne	r2, #16, 2
 80198a8:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80198ac:	1b1a1918 	blne	869fd14 <__exidx_end+0x684ea4>
 80198b0:	1f1e1d1c 	svcne	0x001e1d1c
 80198b4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80198b8:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80198bc:	2b2a2928 	blcs	8aa3d64 <__exidx_end+0xa88ef4>
 80198c0:	2f2e2d2c 	svccs	0x002e2d2c
 80198c4:	33323130 	teqcc	r2, #48, 2
 80198c8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80198cc:	3b3a3938 	blcc	8ea7db4 <__exidx_end+0xe8cf44>
 80198d0:	3f3e3d3c 	svccc	0x003e3d3c
 80198d4:	43424140 	movtmi	r4, #8512	; 0x2140
 80198d8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80198dc:	4b4a4948 	blmi	92abe04 <__exidx_end+0x1290f94>
 80198e0:	4f4e4d4c 	svcmi	0x004e4d4c
 80198e4:	53525150 	cmppl	r2, #80, 2
 80198e8:	57565554 			; <UNDEFINED> instruction: 0x57565554
 80198ec:	5b5a5958 	blpl	96afe54 <__exidx_end+0x1694fe4>
 80198f0:	5f5e5d5c 	svcpl	0x005e5d5c
 80198f4:	63626160 	cmnvs	r2, #96, 2
 80198f8:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80198fc:	6b6a6968 	blvs	9ab3ea4 <__exidx_end+0x1a99034>
 8019900:	6f6e6d6c 	svcvs	0x006e6d6c
 8019904:	73727170 	cmnvc	r2, #112, 2
 8019908:	77767574 			; <UNDEFINED> instruction: 0x77767574
 801990c:	7b7a7978 	blvc	9eb7ef4 <__exidx_end+0x1e9d084>
 8019910:	7f7e7d7c 	svcvc	0x007e7d7c
 8019914:	83828180 	orrhi	r8, r2, #128, 2
 8019918:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801991c:	8b8a8988 	blhi	62bbf44 <__stack_size+0x62b7f44>
 8019920:	8f8e8d8c 	svchi	0x008e8d8c
 8019924:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8019928:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801992c:	9b9a9998 	blls	66bff94 <__stack_size+0x66bbf94>
 8019930:	9f9e9d9c 	svcls	0x009e9d9c
 8019934:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8019938:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801993c:	abaaa9a8 	blge	6ac3fe4 <__stack_size+0x6abffe4>
 8019940:	afaeadac 	svcge	0x00aeadac
 8019944:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8019948:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 801994c:	bbbab9b8 	bllt	6ec8034 <__stack_size+0x6ec4034>
 8019950:	bfbebdbc 	svclt	0x00bebdbc
 8019954:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8019958:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801995c:	cbcac9c8 	blgt	72cc084 <__stack_size+0x72c8084>
 8019960:	cfcecdcc 	svcgt	0x00cecdcc
 8019964:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8019968:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 801996c:	dbdad9d8 	blle	76d00d4 <__stack_size+0x76cc0d4>
 8019970:	dfdedddc 	svcle	0x00dedddc
 8019974:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8019978:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 801997c:	ebeae9e8 	bl	7ad4124 <__stack_size+0x7ad0124>
 8019980:	efeeedec 	svc	0x00eeedec
 8019984:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8019988:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 801998c:	fbfaf9f8 	blx	7ed8176 <__stack_size+0x7ed4176>
 8019990:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08019994 <gamma20_0>:
	...
 80199a0:	01010101 	tsteq	r1, r1, lsl #2
 80199a4:	01010101 	tsteq	r1, r1, lsl #2
 80199a8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80199ac:	03030202 	movweq	r0, #12802	; 0x3202
 80199b0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80199b4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 80199b8:	06060505 	streq	r0, [r6], -r5, lsl #10
 80199bc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 80199c0:	09080808 	stmdbeq	r8, {r3, fp}
 80199c4:	0a0a0909 	beq	829bdf0 <__exidx_end+0x280f80>
 80199c8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 80199cc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 80199d0:	100f0f0e 	andne	r0, pc, lr, lsl #30
 80199d4:	12111110 	andsne	r1, r1, #16, 2
 80199d8:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 80199dc:	16151514 			; <UNDEFINED> instruction: 0x16151514
 80199e0:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 80199e4:	1b1a1a19 	blne	86a0250 <__exidx_end+0x6853e0>
 80199e8:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 80199ec:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 80199f0:	23232221 			; <UNDEFINED> instruction: 0x23232221
 80199f4:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 80199f8:	2a292827 	bcs	8a63a9c <__exidx_end+0xa48c2c>
 80199fc:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8019a00:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8019a04:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8019a08:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8019a0c:	3b3a3938 	blcc	8ea7ef4 <__exidx_end+0xe8d084>
 8019a10:	3f3e3d3c 	svccc	0x003e3d3c
 8019a14:	43424140 	movtmi	r4, #8512	; 0x2140
 8019a18:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8019a1c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8019a20:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8019a24:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8019a28:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8019a2c:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8019a30:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8019a34:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8019a38:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8019a3c:	7371706f 	cmnvc	r1, #111	; 0x6f
 8019a40:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8019a44:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8019a48:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8019a4c:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8019a50:	8f8e8c8b 	svchi	0x008e8c8b
 8019a54:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8019a58:	9b9a9897 	blls	66bfcbc <__stack_size+0x66bbcbc>
 8019a5c:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8019a60:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8019a64:	afadabaa 	svcge	0x00adabaa
 8019a68:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8019a6c:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8019a70:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8019a74:	cac8c7c5 	bgt	724b990 <__stack_size+0x7247990>
 8019a78:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8019a7c:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8019a80:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8019a84:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8019a88:	efedebe9 	svc	0x00edebe9
 8019a8c:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8019a90:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08019a94 <gamma21_0>:
	...
 8019aa0:	01010000 	mrseq	r0, (UNDEF: 1)
 8019aa4:	01010101 	tsteq	r1, r1, lsl #2
 8019aa8:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8019aac:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019ab0:	03030302 	movweq	r0, #13058	; 0x3302
 8019ab4:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8019ab8:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8019abc:	06060505 	streq	r0, [r6], -r5, lsl #10
 8019ac0:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8019ac4:	09080808 	stmdbeq	r8, {r3, fp}
 8019ac8:	0a0a0909 	beq	829bef4 <__exidx_end+0x281084>
 8019acc:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8019ad0:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8019ad4:	0f0f0e0e 	svceq	0x000f0e0e
 8019ad8:	11111010 	tstne	r1, r0, lsl r0
 8019adc:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8019ae0:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8019ae4:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8019ae8:	1b1a1919 	blne	869ff54 <__exidx_end+0x6850e4>
 8019aec:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8019af0:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8019af4:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8019af8:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8019afc:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8019b00:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8019b04:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8019b08:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8019b0c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8019b10:	3b3a3938 	blcc	8ea7ff8 <__exidx_end+0xe8d188>
 8019b14:	3f3e3d3c 	svccc	0x003e3d3c
 8019b18:	43424140 	movtmi	r4, #8512	; 0x2140
 8019b1c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8019b20:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8019b24:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8019b28:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8019b2c:	5a585756 	bpl	962f88c <__exidx_end+0x1614a1c>
 8019b30:	5f5d5c5b 	svcpl	0x005d5c5b
 8019b34:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8019b38:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8019b3c:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8019b40:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8019b44:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8019b48:	7f7e7c7b 	svcvc	0x007e7c7b
 8019b4c:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8019b50:	8b898886 	blhi	627bd70 <__stack_size+0x6277d70>
 8019b54:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8019b58:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8019b5c:	9e9c9b99 	vmovls.32	r9, d28[0]
 8019b60:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8019b64:	abaaa8a6 	blge	6ac3e04 <__stack_size+0x6abfe04>
 8019b68:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8019b6c:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8019b70:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8019b74:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8019b78:	cfcdcbca 	svcgt	0x00cdcbca
 8019b7c:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8019b80:	dfdddbd9 	svcle	0x00dddbd9
 8019b84:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8019b88:	eeeceae8 	vfms.f32	s29, s25, s17
 8019b8c:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8019b90:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08019b94 <gamma22_0>:
	...
 8019ba0:	01000000 	mrseq	r0, (UNDEF: 0)
 8019ba4:	01010101 	tsteq	r1, r1, lsl #2
 8019ba8:	01010101 	tsteq	r1, r1, lsl #2
 8019bac:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8019bb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019bb4:	03030303 	movweq	r0, #13059	; 0x3303
 8019bb8:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8019bbc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8019bc0:	06060605 	streq	r0, [r6], -r5, lsl #12
 8019bc4:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8019bc8:	09080808 	stmdbeq	r8, {r3, fp}
 8019bcc:	0a0a0909 	beq	829bff8 <__exidx_end+0x281188>
 8019bd0:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8019bd4:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8019bd8:	0f0f0e0e 	svceq	0x000f0e0e
 8019bdc:	11111010 	tstne	r1, r0, lsl r0
 8019be0:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019be4:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8019be8:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8019bec:	1a1a1919 	bne	86a0058 <__exidx_end+0x6851e8>
 8019bf0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8019bf4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8019bf8:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8019bfc:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8019c00:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8019c04:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8019c08:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8019c0c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8019c10:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8019c14:	3b3a3938 	blcc	8ea80fc <__exidx_end+0xe8d28c>
 8019c18:	3f3e3d3c 	svccc	0x003e3d3c
 8019c1c:	43424140 	movtmi	r4, #8512	; 0x2140
 8019c20:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8019c24:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8019c28:	514f4e4d 	cmppl	pc, sp, asr #28
 8019c2c:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8019c30:	5a595857 	bpl	966fd94 <__exidx_end+0x1654f24>
 8019c34:	5f5e5d5b 	svcpl	0x005e5d5b
 8019c38:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8019c3c:	6a696766 	bvs	9a739dc <__exidx_end+0x1a58b6c>
 8019c40:	6f6e6d6b 	svcvs	0x006e6d6b
 8019c44:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8019c48:	7b797877 	blvc	9e77e2c <__exidx_end+0x1e5cfbc>
 8019c4c:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8019c50:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8019c54:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8019c58:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8019c5c:	9a999795 	bls	667fab8 <__stack_size+0x667bab8>
 8019c60:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8019c64:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8019c68:	afadacaa 	svcge	0x00adacaa
 8019c6c:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8019c70:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8019c74:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8019c78:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8019c7c:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8019c80:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8019c84:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8019c88:	eeeceae7 	vfms.f32	s29, s25, s15
 8019c8c:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8019c90:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08019c94 <gamma23_0>:
	...
 8019ca4:	01010100 	mrseq	r0, (UNDEF: 17)
 8019ca8:	01010101 	tsteq	r1, r1, lsl #2
 8019cac:	01010101 	tsteq	r1, r1, lsl #2
 8019cb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019cb4:	03020202 	movweq	r0, #8706	; 0x2202
 8019cb8:	03030303 	movweq	r0, #13059	; 0x3303
 8019cbc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8019cc0:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8019cc4:	06060605 	streq	r0, [r6], -r5, lsl #12
 8019cc8:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8019ccc:	09080808 	stmdbeq	r8, {r3, fp}
 8019cd0:	0a0a0a09 	beq	829c4fc <__exidx_end+0x28168c>
 8019cd4:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8019cd8:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8019cdc:	0f0f0e0e 	svceq	0x000f0e0e
 8019ce0:	11111010 	tstne	r1, r0, lsl r0
 8019ce4:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019ce8:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8019cec:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8019cf0:	1a1a1918 	bne	86a0158 <__exidx_end+0x6852e8>
 8019cf4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8019cf8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8019cfc:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8019d00:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8019d04:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8019d08:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8019d0c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8019d10:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8019d14:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8019d18:	3b3a3938 	blcc	8ea8200 <__exidx_end+0xe8d390>
 8019d1c:	3f3e3d3c 	svccc	0x003e3d3c
 8019d20:	43424140 	movtmi	r4, #8512	; 0x2140
 8019d24:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8019d28:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8019d2c:	51504f4e 	cmppl	r0, lr, asr #30
 8019d30:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8019d34:	5b5a5957 	blpl	96b0298 <__exidx_end+0x1695428>
 8019d38:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8019d3c:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8019d40:	6b6a6867 	blvs	9ab3ee4 <__exidx_end+0x1a99074>
 8019d44:	71706e6d 	cmnvc	r0, sp, ror #28
 8019d48:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8019d4c:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8019d50:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8019d54:	8a888685 	bhi	623b770 <__stack_size+0x6237770>
 8019d58:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8019d5c:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8019d60:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8019d64:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8019d68:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8019d6c:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8019d70:	bbb9b7b6 	bllt	6e87c50 <__stack_size+0x6e83c50>
 8019d74:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8019d78:	cbc9c7c5 	blgt	728bc94 <__stack_size+0x7287c94>
 8019d7c:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8019d80:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8019d84:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8019d88:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8019d8c:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8019d90:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08019d94 <gamma24_0>:
	...
 8019da4:	01000000 	mrseq	r0, (UNDEF: 0)
 8019da8:	01010101 	tsteq	r1, r1, lsl #2
 8019dac:	01010101 	tsteq	r1, r1, lsl #2
 8019db0:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8019db4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019db8:	03030202 	movweq	r0, #12802	; 0x3202
 8019dbc:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8019dc0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8019dc4:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8019dc8:	06060606 	streq	r0, [r6], -r6, lsl #12
 8019dcc:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8019dd0:	09090808 	stmdbeq	r9, {r3, fp}
 8019dd4:	0a0a0a09 	beq	829c600 <__exidx_end+0x281790>
 8019dd8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8019ddc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8019de0:	0f0f0e0e 	svceq	0x000f0e0e
 8019de4:	11111010 	tstne	r1, r0, lsl r0
 8019de8:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019dec:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8019df0:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8019df4:	1a1a1918 	bne	86a025c <__exidx_end+0x6853ec>
 8019df8:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8019dfc:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8019e00:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8019e04:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8019e08:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8019e0c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8019e10:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8019e14:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8019e18:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8019e1c:	3b3a3938 	blcc	8ea8304 <__exidx_end+0xe8d494>
 8019e20:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8019e24:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8019e28:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8019e2c:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8019e30:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8019e34:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8019e38:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8019e3c:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8019e40:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8019e44:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8019e48:	7372706f 	cmnvc	r2, #111	; 0x6f
 8019e4c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8019e50:	7f7e7c7b 	svcvc	0x007e7c7b
 8019e54:	86848381 	strhi	r8, [r4], r1, lsl #7
 8019e58:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8019e5c:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8019e60:	9b999795 	blls	667fcbc <__stack_size+0x667bcbc>
 8019e64:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8019e68:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8019e6c:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8019e70:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8019e74:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8019e78:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8019e7c:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8019e80:	dad8d6d4 	ble	764f9d8 <__stack_size+0x764b9d8>
 8019e84:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8019e88:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8019e8c:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8019e90:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08019e94 <gamma25_0>:
	...
 8019ea8:	01010000 	mrseq	r0, (UNDEF: 1)
 8019eac:	01010101 	tsteq	r1, r1, lsl #2
 8019eb0:	01010101 	tsteq	r1, r1, lsl #2
 8019eb4:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8019eb8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019ebc:	03030302 	movweq	r0, #13058	; 0x3302
 8019ec0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8019ec4:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8019ec8:	06050505 	streq	r0, [r5], -r5, lsl #10
 8019ecc:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8019ed0:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8019ed4:	09090808 	stmdbeq	r9, {r3, fp}
 8019ed8:	0a0a0a09 	beq	829c704 <__exidx_end+0x281894>
 8019edc:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8019ee0:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8019ee4:	0f0f0f0e 	svceq	0x000f0f0e
 8019ee8:	11111010 	tstne	r1, r0, lsl r0
 8019eec:	13131212 	tstne	r3, #536870913	; 0x20000001
 8019ef0:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8019ef4:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8019ef8:	1a1a1919 	bne	86a0364 <__exidx_end+0x6854f4>
 8019efc:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8019f00:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8019f04:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8019f08:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8019f0c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8019f10:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8019f14:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8019f18:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8019f1c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8019f20:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8019f24:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8019f28:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8019f2c:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8019f30:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8019f34:	53525150 	cmppl	r2, #80, 2
 8019f38:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8019f3c:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8019f40:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8019f44:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8019f48:	6f6e6c6b 	svcvs	0x006e6c6b
 8019f4c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8019f50:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8019f54:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8019f58:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8019f5c:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8019f60:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8019f64:	9f9d9b99 	svcls	0x009d9b99
 8019f68:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8019f6c:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8019f70:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8019f74:	bfbdbab8 	svclt	0x00bdbab8
 8019f78:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8019f7c:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8019f80:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8019f84:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8019f88:	ebe9e7e4 	bl	7a93f20 <__stack_size+0x7a8ff20>
 8019f8c:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8019f90:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08019f94 <gamma25_5>:
 8019f94:	01010100 	mrseq	r0, (UNDEF: 17)
 8019f98:	01010101 	tsteq	r1, r1, lsl #2
 8019f9c:	01010101 	tsteq	r1, r1, lsl #2
 8019fa0:	01010101 	tsteq	r1, r1, lsl #2
 8019fa4:	01010101 	tsteq	r1, r1, lsl #2
 8019fa8:	01010101 	tsteq	r1, r1, lsl #2
 8019fac:	01010101 	tsteq	r1, r1, lsl #2
 8019fb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019fb4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8019fb8:	03030302 	movweq	r0, #13058	; 0x3302
 8019fbc:	03030303 	movweq	r0, #13059	; 0x3303
 8019fc0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8019fc4:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8019fc8:	06060605 	streq	r0, [r6], -r5, lsl #12
 8019fcc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8019fd0:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8019fd4:	0a090909 	beq	825c400 <__exidx_end+0x241590>
 8019fd8:	0b0b0a0a 	bleq	82dc808 <__exidx_end+0x2c1998>
 8019fdc:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8019fe0:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8019fe4:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8019fe8:	12111110 	andsne	r1, r1, #16, 2
 8019fec:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8019ff0:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8019ff4:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8019ff8:	1b1a1a19 	blne	86a0864 <__exidx_end+0x6859f4>
 8019ffc:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 801a000:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801a004:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801a008:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801a00c:	2a292827 	bcs	8a640b0 <__exidx_end+0xa49240>
 801a010:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 801a014:	31302f2e 	teqcc	r0, lr, lsr #30
 801a018:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801a01c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801a020:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 801a024:	41403f3e 	cmpmi	r0, lr, lsr pc
 801a028:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801a02c:	4a494846 	bmi	926c14c <__exidx_end+0x12512dc>
 801a030:	4f4e4c4b 	svcmi	0x004e4c4b
 801a034:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 801a038:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801a03c:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 801a040:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 801a044:	6a686765 	bvs	9a33de0 <__exidx_end+0x1a18f70>
 801a048:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801a04c:	76747371 			; <UNDEFINED> instruction: 0x76747371
 801a050:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 801a054:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 801a058:	8a888685 	bhi	623ba74 <__stack_size+0x6237a74>
 801a05c:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 801a060:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 801a064:	9f9d9c9a 	svcls	0x009d9c9a
 801a068:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 801a06c:	afadaba9 	svcge	0x00adaba9
 801a070:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 801a074:	bfbdbbb9 	svclt	0x00bdbbb9
 801a078:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 801a07c:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 801a080:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801a084:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 801a088:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 801a08c:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 801a090:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 801a094:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801a098:	006e776f 	rsbeq	r7, lr, pc, ror #14
 801a09c:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 801a0a0:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 801a0a4:	 	andeq	r0, r0, #100	; 0x64

0801a0a6 <CSWTCH.18>:
 801a0a6:	02020200 	andeq	r0, r2, #0, 4
 801a0aa:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 801a0ae:	 	ldrbmi	r0, [r2, -r0, lsl #10]

0801a0b0 <PixelType::MAPS>:
 801a0b0:	00424752 	subeq	r4, r2, r2, asr r7
 801a0b4:	00474252 	subeq	r4, r7, r2, asr r2
 801a0b8:	00425247 	subeq	r5, r2, r7, asr #4
 801a0bc:	00524247 	subseq	r4, r2, r7, asr #4
 801a0c0:	00475242 	subeq	r5, r7, r2, asr #4
 801a0c4:	00524742 	subseq	r4, r2, r2, asr #14

0801a0c8 <PixelType::TYPES>:
 801a0c8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0cc:	00003130 	andeq	r3, r0, r0, lsr r1
 801a0d0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0d4:	00003131 	andeq	r3, r0, r1, lsr r1
 801a0d8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0dc:	00003231 	andeq	r3, r0, r1, lsr r2
 801a0e0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0e4:	00423231 	subeq	r3, r2, r1, lsr r2
 801a0e8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0ec:	00003331 	andeq	r3, r0, r1, lsr r3
 801a0f0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a0f4:	00003531 	andeq	r3, r0, r1, lsr r5
 801a0f8:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a0fc:	00003231 	andeq	r3, r0, r1, lsr r2
 801a100:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a104:	00573231 	subseq	r3, r7, r1, lsr r2
 801a108:	31534355 	cmpcc	r3, r5, asr r3
 801a10c:	00333039 	eorseq	r3, r3, r9, lsr r0
 801a110:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801a114:	00333039 	eorseq	r3, r3, r9, lsr r0
 801a118:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801a11c:	00003231 	andeq	r3, r0, r1, lsr r2
 801a120:	31415041 	cmpcc	r1, r1, asr #32
 801a124:	00003230 	andeq	r3, r0, r0, lsr r2
 801a128:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a12c:	00003232 	andeq	r3, r0, r2, lsr r2
 801a130:	31383950 	teqcc	r8, r0, asr r9
 801a134:	00000033 	andeq	r0, r0, r3, lsr r0

0801a138 <s_patternName>:
 801a138:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 801a144:	61520000 	cmpvs	r2, r0
 801a148:	6f626e69 	svcvs	0x00626e69
 801a14c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801a150:	00656c63 	rsbeq	r6, r5, r3, ror #24
 801a154:	61656854 	cmnvs	r5, r4, asr r8
 801a158:	20726574 	rsbscs	r6, r2, r4, ror r5
 801a15c:	73616863 	cmnvc	r1, #6488064	; 0x630000
 801a160:	6f430065 	svcvs	0x00430065
 801a164:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 801a168:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801a16c:	00000065 	andeq	r0, r0, r5, rrx
 801a170:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801a174:	0072656e 	rsbseq	r6, r2, lr, ror #10
 801a178:	00000000 	andeq	r0, r0, r0
 801a17c:	61460000 	mrsvs	r0, (UNDEF: 70)
 801a180:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801a18c <pixel::s_GPIO_PINs>:
 801a18c:	6374ffff 	cmnvs	r4, #1020	; 0x3fc	; <UNPREDICTABLE>
 801a190:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 801a194:	3a6e6967 	bcc	9bb4738 <__exidx_end+0x1b998c8>
 801a198:	6f6f7420 	svcvs	0x006f7420
 801a19c:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801a1a0:	6f632079 	svcvs	0x00632079
 801a1a4:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801a1a8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801a1ac:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801a1b0:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 801a1b4:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 801a1b8:	41000a64 	tstmi	r0, r4, ror #20
 801a1bc:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801a1c0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 801a1c4:	61662070 	smcvs	25088	; 0x6200
 801a1c8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 801a1cc:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801a1d0:	61666564 	cmnvs	r6, r4, ror #10
 801a1d4:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801a1d8:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801a1dc:	0a796177 	beq	9e727c0 <__exidx_end+0x1e57950>
 801a1e0:	50524100 	subspl	r4, r2, r0, lsl #2
 801a1e4:	6f6f6c20 	svcvs	0x006f6c20
 801a1e8:	2070756b 	rsbscs	r7, r0, fp, ror #10
 801a1ec:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801a1f0:	000a6465 	andeq	r6, sl, r5, ror #8

0801a1f4 <NetworkConst::MSG_MDNS_CONFIG>:
 801a1f4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801a1f8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a1fc:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801a200:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801a205 <NetworkConst::MSG_NETWORK_INIT>:
 801a205:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801a209:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801a20d:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801a211:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801a215:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801a219:	3135322e 	teqcc	r5, lr, lsr #4
 801a21d:	63745f00 	cmnvs	r4, #0, 30
 801a221:	6f6c2e70 	svcvs	0x006c2e70
 801a225:	006c6163 	rsbeq	r6, ip, r3, ror #2
 801a229:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801a22d:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801a231:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 801a239 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801a235:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 801a239:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80193dd <RDMHandler::PID_DEFINITIONS+0x129>
 801a23d:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801a241:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801a245:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801a249:	20000a53 	andcs	r0, r0, r3, asr sl
 801a24d:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801a251:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801a255:	0a676e69 	beq	99f5c01 <__exidx_end+0x19dad91>
 801a259:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801a25d:	3a20656d 	bcc	8833819 <__exidx_end+0x8189a9>
 801a261:	0a732520 	beq	9ce36e9 <__exidx_end+0x1cc8879>
 801a265:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801a269:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801a26d:	000a7325 	andeq	r7, sl, r5, lsr #6
 801a271:	30687465 	rsbcc	r7, r8, r5, ror #8
 801a275:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801a279:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801a27d:	5f656369 	svcpl	0x00656369
 801a281:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801a285:	6b726f77 	blvs	9cb6069 <__exidx_end+0x1c9b1f9>
 801a289:	4820000a 	stmdami	r0!, {r1, r3}
 801a28d:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801a291:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801a295:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a299:	20000a73 	andcs	r0, r0, r3, ror sl
 801a29d:	614e6649 	cmpvs	lr, r9, asr #12
 801a2a1:	2020656d 	eorcs	r6, r0, sp, ror #10
 801a2a5:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a2a9:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801a2ad:	000a7325 	andeq	r7, sl, r5, lsr #6
 801a2b1:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801a2b5:	20202074 	eorcs	r2, r0, r4, ror r0
 801a2b9:	3a202020 	bcc	8822341 <__exidx_end+0x8074d1>
 801a2bd:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801a2c1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a2c5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a2c9:	0a64252f 	beq	992378d <__exidx_end+0x190891d>
 801a2cd:	654e2000 	strbvs	r2, [lr, #-0]
 801a2d1:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801a2d5:	2020206b 	eorcs	r2, r0, fp, rrx
 801a2d9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a2dd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a2e1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a2e5:	20000a64 	andcs	r0, r0, r4, ror #20
 801a2e9:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801a2ed:	20796177 	rsbscs	r6, r9, r7, ror r1
 801a2f1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a2f5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a2f9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a2fd:	0a64252e 	beq	99237bd <__exidx_end+0x190894d>
 801a301:	72422000 	subvc	r2, r2, #0
 801a305:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 801a309:	20747361 	rsbscs	r7, r4, r1, ror #6
 801a30d:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a311:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a315:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a319:	20000a64 	andcs	r0, r0, r4, ror #20
 801a31d:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801a321:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a325:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a329:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a32d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801a331:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801a335:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801a339:	3a78322e 	bcc	9e26bf9 <__exidx_end+0x1e0bd89>
 801a33d:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a341:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801a345:	20000a78 	andcs	r0, r0, r8, ror sl
 801a349:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801a34d:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a351:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a355:	000a6325 	andeq	r6, sl, r5, lsr #6
 801a359:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801a35d:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801a361:	 	rsbvc	r0, r9, r0, asr r0

0801a363 <NetworkParamsConst::IP_ADDRESS>:
 801a363:	615f7069 	cmpvs	pc, r9, rrx
 801a367:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801a36b:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801a36e <NetworkParamsConst::DEFAULT_GATEWAY>:
 801a36e:	61666564 	cmnvs	r6, r4, ror #10
 801a372:	5f746c75 	svcpl	0x00746c75
 801a376:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801a37a:	00796177 	rsbseq	r6, r9, r7, ror r1

0801a37e <NetworkParamsConst::DHCP_RETRY_TIME>:
 801a37e:	70636864 	rsbvc	r6, r3, r4, ror #16
 801a382:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801a386:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801a38e <NetworkParamsConst::HOSTNAME>
 801a38a:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801a38e <NetworkParamsConst::HOSTNAME>:
 801a38e:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801a392:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801a397 <NetworkParamsConst::NET_MASK>:
 801a397:	5f74656e 	svcpl	0x0074656e
 801a39b:	6b73616d 	blvs	9cf2957 <__exidx_end+0x1cd7ae7>
	...

0801a3a0 <NetworkParamsConst::USE_DHCP>:
 801a3a0:	5f657375 	svcpl	0x00657375
 801a3a4:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801a3a9 <NetworkParamsConst::FILE_NAME>:
 801a3a9:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801a3ad:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801a3b1:	00747874 	rsbseq	r7, r4, r4, ror r8
 801a3b5:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 801a3b9:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 801a3bd:	61747320 	cmnvs	r4, r0, lsr #6
 801a3c1:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801a3c5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a3c9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a3cd:	252f6425 	strcs	r6, [pc, #-1061]!	; 8019fb0 <gamma25_5+0x1c>
 801a3d1:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801a3d5:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 801a3d9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a3dd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a3e1:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801a3e5:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 801a3e9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a3ed:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a3f1:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801a3f5:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 801a3f9:	20657261 	rsbcs	r7, r5, r1, ror #4
 801a3fd:	2a2e2556 	bcs	8ba395d <__exidx_end+0xb88aed>
 801a401:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801a405:	72205043 	eorvc	r5, r0, #67	; 0x43
 801a409:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801a40d:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801a411:	50434844 	subpl	r4, r3, r4, asr #16
 801a415:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 801a419:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801a41d:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801a421:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801a425:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 801a429:	6f647475 	svcvs	0x00647475
 801a42d:	 	strgt	r6, [r0], #-3703	; 0xfffff189

0801a430 <pArray>:
 801a430:	0801a4c4 	stmdaeq	r1, {r2, r6, r7, sl, sp, pc}
 801a434:	0801a480 	stmdaeq	r1, {r7, sl, sp, pc}
 801a438:	0801a363 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sp, pc}
 801a43c:	0801a4ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, sp, pc}
 801a440:	0801a9df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, fp, sp, pc}
 801a444:	0801a48b 	stmdaeq	r1, {r0, r1, r3, r7, sl, sp, pc}
 801a448:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 801a44c:	0801a38e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sp, pc}
 801a450:	0801a7e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, sp, pc}
 801a454:	0801a7f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 801a458:	0801a806 	stmdaeq	r1, {r1, r2, fp, sp, pc}
 801a45c:	0801a816 	stmdaeq	r1, {r1, r2, r4, fp, sp, pc}
 801a460:	0801a397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sp, pc}
 801a464:	0801a9ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, fp, sp, pc}
 801a468:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 801a46c:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 801a470:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 801a474:	080184b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, pc}
 801a478:	0801a36e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sp, pc}
 801a47c:	0801a498 	stmdaeq	r1, {r3, r4, r7, sl, sp, pc}

0801a480 <DisplayUdfParamsConst::BOARD_NAME>:
 801a480:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801a484:	616e5f64 	cmnvs	lr, r4, ror #30
 801a488:	 	tstvs	r0, sp, ror #10

0801a48b <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801a48b:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a48f:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801a493:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

0801a498 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801a498:	5f786d64 	svcpl	0x00786d64
 801a49c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801a4a0:	6f697463 	svcvs	0x00697463
 801a4a4:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801a4a6 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801a4a6:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 801a4aa:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a4ae:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8019f49 <gamma25_0+0xb5>
 801a4b2:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801a4b4 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801a4b4:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801a4b8:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 801a4bc:	61636974 	smcvs	13972	; 0x3694
 801a4c0:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801a4c4 <DisplayUdfParamsConst::TITLE>:
 801a4c4:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 801a4c8:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801a4ca <DisplayUdfParamsConst::VERSION>:
 801a4ca:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801a4ce:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801a4d2 <DisplayUdfParamsConst::FILE_NAME>:
 801a4d2:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a4d6:	2e79616c 	rpwcsez	f6, f1, #4.0
 801a4da:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a4de <DisplayUdfParamsConst::INTENSITY>:
 801a4de:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801a4e2:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801a4e6:	50410079 	subpl	r0, r1, r9, ror r0
 801a4ea:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a4ee:	726f5000 	rsbvc	r5, pc, #0
 801a4f2:	63252074 			; <UNDEFINED> instruction: 0x63252074
 801a4f6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a4fa:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801a4fe:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801a502:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801a506:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801a50a:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

0801a510 <s_aStorSize>:
 801a510:	00000060 	andeq	r0, r0, r0, rrx
 801a514:	00000090 	muleq	r0, r0, r0
 801a518:	00000020 	andeq	r0, r0, r0, lsr #32
 801a51c:	00000040 	andeq	r0, r0, r0, asr #32
 801a520:	00000060 	andeq	r0, r0, r0, rrx
 801a524:	00000040 	andeq	r0, r0, r0, asr #32
 801a528:	00000020 	andeq	r0, r0, r0, lsr #32
 801a52c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a530:	000001e0 	andeq	r0, r0, r0, ror #3
 801a534:	00000040 	andeq	r0, r0, r0, asr #32
 801a538:	00000020 	andeq	r0, r0, r0, lsr #32
 801a53c:	00000060 	andeq	r0, r0, r0, rrx
 801a540:	00000030 	andeq	r0, r0, r0, lsr r0
 801a544:	00000020 	andeq	r0, r0, r0, lsr #32
 801a548:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 801a54c:	00000030 	andeq	r0, r0, r0, lsr r0
 801a550:	00000040 	andeq	r0, r0, r0, asr #32
 801a554:	00000020 	andeq	r0, r0, r0, lsr #32
 801a558:	00000060 	andeq	r0, r0, r0, rrx
 801a55c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a560:	00000400 	andeq	r0, r0, r0, lsl #8
 801a564:	00000020 	andeq	r0, r0, r0, lsr #32
 801a568:	00000020 	andeq	r0, r0, r0, lsr #32
 801a56c:	00000040 	andeq	r0, r0, r0, asr #32
 801a570:	00000060 	andeq	r0, r0, r0, rrx
 801a574:	00000020 	andeq	r0, r0, r0, lsr #32
 801a578:	00000020 	andeq	r0, r0, r0, lsr #32
 801a57c:	000000c0 	andeq	r0, r0, r0, asr #1

0801a580 <vtable for StoreDisplayUdf>:
	...
 801a588:	08013fc1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, fp, ip, sp}
 801a58c:	0801400d 	stmdaeq	r1, {r0, r2, r3, lr}
 801a590:	08013fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp}
 801a594:	08013fc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, fp, ip, sp}

0801a598 <vtable for StoreDmxSend>:
	...
 801a5a0:	0801402d 	stmdaeq	r1, {r0, r2, r3, r5, lr}
 801a5a4:	08014079 	stmdaeq	r1, {r0, r3, r4, r5, r6, lr}
 801a5a8:	08014055 	stmdaeq	r1, {r0, r2, r4, r6, lr}
 801a5ac:	08014031 	stmdaeq	r1, {r0, r4, r5, lr}

0801a5b0 <vtable for StoreNetwork>:
	...
 801a5b8:	08014099 	stmdaeq	r1, {r0, r3, r4, r7, lr}
 801a5bc:	08014181 	stmdaeq	r1, {r0, r7, r8, lr}
 801a5c0:	080140a1 	stmdaeq	r1, {r0, r5, r7, lr}
 801a5c4:	08014195 	stmdaeq	r1, {r0, r2, r4, r7, r8, lr}
 801a5c8:	08014121 	stmdaeq	r1, {r0, r5, r8, lr}
 801a5cc:	080140f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, lr}
 801a5d0:	080140c5 	stmdaeq	r1, {r0, r2, r6, r7, lr}
 801a5d4:	0801414d 	stmdaeq	r1, {r0, r2, r3, r6, r8, lr}
 801a5d8:	08009d3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, fp, ip, pc}
 801a5dc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801a5e0:	00000000 	andeq	r0, r0, r0
 801a5e4:	0801409b 	stmdaeq	r1, {r0, r1, r3, r4, r7, lr}
 801a5e8:	0801418d 	stmdaeq	r1, {r0, r2, r3, r7, r8, lr}
 801a5ec:	08014145 	stmdaeq	r1, {r0, r2, r6, r8, lr}
 801a5f0:	08014119 	stmdaeq	r1, {r0, r3, r4, r8, lr}
 801a5f4:	080140ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, lr}
 801a5f8:	08014179 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, lr}
 801a5fc:	08009d65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, ip, pc}

0801a600 <vtable for StoreRemoteConfig>:
	...
 801a608:	080141cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, lr}
 801a60c:	08014219 	stmdaeq	r1, {r0, r3, r4, r9, lr}
 801a610:	080141f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, lr}
 801a614:	080141d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, lr}
 801a618:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
 801a61c:	76654465 	strbtvc	r4, [r5], -r5, ror #8
 801a620:	3a656369 	bcc	99733cc <__exidx_end+0x195855c>
 801a624:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
 801a628:	34325441 	ldrtcc	r5, [r2], #-1089	; 0xfffffbbf
 801a62c:	20323343 	eorscs	r3, r2, r3, asr #6
 801a630:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801a634:	53007832 	movwpl	r7, #2098	; 0x832
 801a638:	65726f74 	ldrbvs	r6, [r2, #-3956]!	; 0xfffff08c
 801a63c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801a640:	203a6563 	eorscs	r6, sl, r3, ror #10
 801a644:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 801a648:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 801a64c:	32544120 	subscc	r4, r4, #32, 2
 801a650:	32334334 	eorscc	r4, r3, #52, 6	; 0xd0000000
 801a654:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801a658:	6f742068 	svcvs	0x00742068
 801a65c:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801a660:	62207525 	eorvs	r7, r0, #155189248	; 0x9400000
 801a664:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801a668:	75255b20 	strvc	r5, [r5, #-2848]!	; 0xfffff4e0
 801a66c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 801a670:	0000000a 	andeq	r0, r0, sl

0801a674 <vtable for StoreE131>:
	...
 801a67c:	080143b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, lr}
 801a680:	08014401 	stmdaeq	r1, {r0, sl, lr}
 801a684:	080143dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, lr}
 801a688:	080143b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, lr}

0801a68c <vtable for StorePixelDmx>:
	...
 801a694:	08014421 	stmdaeq	r1, {r0, r5, sl, lr}
 801a698:	0801458d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, lr}
 801a69c:	08014429 	stmdaeq	r1, {r0, r3, r5, sl, lr}
 801a6a0:	080145a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, lr}
 801a6a4:	08014559 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, lr}
 801a6a8:	08014525 	stmdaeq	r1, {r0, r2, r5, r8, sl, lr}
 801a6ac:	080144ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl, lr}
 801a6b0:	080144b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, sl, lr}
 801a6b4:	08014481 	stmdaeq	r1, {r0, r7, sl, lr}
 801a6b8:	0801444d 	stmdaeq	r1, {r0, r2, r3, r6, sl, lr}
 801a6bc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801a6c0:	00000000 	andeq	r0, r0, r0
 801a6c4:	08014423 	stmdaeq	r1, {r0, r1, r5, sl, lr}
 801a6c8:	08014599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, lr}
 801a6cc:	08014585 	stmdaeq	r1, {r0, r2, r7, r8, sl, lr}
 801a6d0:	08014551 	stmdaeq	r1, {r0, r4, r6, r8, sl, lr}
 801a6d4:	0801451d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, lr}
 801a6d8:	080144e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, lr}
 801a6dc:	080144ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, lr}
 801a6e0:	08014479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, lr}

0801a6e4 <vtable for StoreRDMDevice>:
	...
 801a6ec:	080145dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, lr}
 801a6f0:	0801464d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, lr}
 801a6f4:	080145e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, lr}
 801a6f8:	08014661 	stmdaeq	r1, {r0, r5, r6, r9, sl, lr}
 801a6fc:	08014609 	stmdaeq	r1, {r0, r3, r9, sl, lr}
 801a700:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801a704:	00000000 	andeq	r0, r0, r0
 801a708:	080145df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, sl, lr}
 801a70c:	08014659 	stmdaeq	r1, {r0, r3, r4, r6, r9, sl, lr}
 801a710:	08014645 	stmdaeq	r1, {r0, r2, r6, r9, sl, lr}

0801a714 <DevicesParamsConst::ACTIVE_OUT>:
 801a714:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a718:	6f5f6576 	svcvs	0x005f6576
 801a71c:	 	smlsdxvs	r0, r5, r4, r7

0801a71f <DevicesParamsConst::GAMMA_VALUE>:
 801a71f:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801a723:	61765f61 	cmnvs	r6, r1, ror #30
 801a727:	0065756c 	rsbeq	r7, r5, ip, ror #10

0801a72b <DevicesParamsConst::SPI_SPEED_HZ>:
 801a72b:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801a72f:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801a733:	5f646565 	svcpl	0x00646565
 801a737:	 	strvc	r7, [r0], #-2664	; 0xfffff598

0801a73a <DevicesParamsConst::TEST_PATTERN>:
 801a73a:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801a73e:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801a742:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801a747 <DevicesParamsConst::GROUPING_COUNT>:
 801a747:	5f64656c 	svcpl	0x0064656c
 801a74b:	756f7267 	strbvc	r7, [pc, #-615]!	; 801a4ec <DisplayUdfParamsConst::INTENSITY+0xe>
 801a74f:	6f635f70 	svcvs	0x00635f70
 801a753:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a757 <DevicesParamsConst::GAMMA_CORRECTION>:
 801a757:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801a75b:	6f635f61 	svcvs	0x00635f61
 801a75f:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 801a763:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

0801a768 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801a768:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 801a76c:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801a770:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801a774:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801a778:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

0801a77a <DevicesParamsConst::MAP>:
 801a77a:	5f64656c 	svcpl	0x0064656c
 801a77e:	5f626772 	svcpl	0x00626772
 801a782:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801a786:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801a78a <DevicesParamsConst::TYPE>:
 801a78a:	5f64656c 	svcpl	0x0064656c
 801a78e:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801a793 <DevicesParamsConst::COUNT>:
 801a793:	5f64656c 	svcpl	0x0064656c
 801a797:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801a79b:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801a79d <DevicesParamsConst::LED_T0H>:
 801a79d:	5f64656c 	svcpl	0x0064656c
 801a7a1:	00683074 	rsbeq	r3, r8, r4, ror r0

0801a7a5 <DevicesParamsConst::LED_T1H>:
 801a7a5:	5f64656c 	svcpl	0x0064656c
 801a7a9:	00683174 	rsbeq	r3, r8, r4, ror r1

0801a7ad <DevicesParamsConst::FILE_NAME>:
 801a7ad:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801a7b1:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801a7b5:	00747874 	rsbseq	r7, r4, r4, ror r8
 801a7b9:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801a7bd:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801a7c1:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a7c5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a7c9:	002c2264 	eoreq	r2, ip, r4, ror #4
 801a7cd:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801a7d1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a7d5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a7d9:	0a64252e 	beq	9923c99 <__exidx_end+0x1908e29>
 801a7dd:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801a7e1:	0a232073 	beq	88e29b5 <__exidx_end+0x8c7b45>
	...

0801a7e6 <LightSetParamsConst::UNIVERSE_PORT>:
 801a7e6:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a7ea:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a7ee:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a7f2:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801a7f6:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a7fa:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a7fe:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a802:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a806:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a80a:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a80e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a812:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801a816:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a81a:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a81e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a822:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801a826 <LightSetParamsConst::START_UNI_PORT>:
 801a826:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a82a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a82e:	6f705f69 	svcvs	0x00705f69
 801a832:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a836:	00000000 	andeq	r0, r0, r0
 801a83a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a83e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a842:	6f705f69 	svcvs	0x00705f69
 801a846:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 801a84a:	00000000 	andeq	r0, r0, r0
 801a84e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a852:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a856:	6f705f69 	svcvs	0x00705f69
 801a85a:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801a85e:	00000000 	andeq	r0, r0, r0
 801a862:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a866:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a86a:	6f705f69 	svcvs	0x00705f69
 801a86e:	345f7472 	ldrbcc	r7, [pc], #-1138	; 801a876 <LightSetParamsConst::START_UNI_PORT+0x50>
 801a872:	00000000 	andeq	r0, r0, r0
 801a876:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a87a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a87e:	6f705f69 	svcvs	0x00705f69
 801a882:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 801a418 <NetworkParamsConst::FILE_NAME+0x6f>
 801a886:	00000000 	andeq	r0, r0, r0
 801a88a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a88e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a892:	6f705f69 	svcvs	0x00705f69
 801a896:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 801a89a:	00000000 	andeq	r0, r0, r0
 801a89e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a8a2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a8a6:	6f705f69 	svcvs	0x00705f69
 801a8aa:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 801a8ae:	00000000 	andeq	r0, r0, r0
 801a8b2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a8b6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a8ba:	6f705f69 	svcvs	0x00705f69
 801a8be:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801a8c2:	00000000 	andeq	r0, r0, r0
 801a8c6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a8ca:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a8ce:	6f705f69 	svcvs	0x00705f69
 801a8d2:	395f7472 	ldmdbcc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801a8d6:	00000000 	andeq	r0, r0, r0
 801a8da:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a8de:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a8e2:	6f705f69 	svcvs	0x00705f69
 801a8e6:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a8ea:	00000030 	andeq	r0, r0, r0, lsr r0
 801a8ee:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a8f2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a8f6:	6f705f69 	svcvs	0x00705f69
 801a8fa:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a8fe:	00000031 	andeq	r0, r0, r1, lsr r0
 801a902:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a906:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a90a:	6f705f69 	svcvs	0x00705f69
 801a90e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a912:	00000032 	andeq	r0, r0, r2, lsr r0
 801a916:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a91a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a91e:	6f705f69 	svcvs	0x00705f69
 801a922:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a926:	00000033 	andeq	r0, r0, r3, lsr r0
 801a92a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a92e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a932:	6f705f69 	svcvs	0x00705f69
 801a936:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a93a:	00000034 	andeq	r0, r0, r4, lsr r0
 801a93e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a942:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a946:	6f705f69 	svcvs	0x00705f69
 801a94a:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a94e:	00000035 	andeq	r0, r0, r5, lsr r0
 801a952:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a956:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a95a:	6f705f69 	svcvs	0x00705f69
 801a95e:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a962:	00000036 	andeq	r0, r0, r6, lsr r0

0801a966 <LightSetParamsConst::MERGE_MODE_PORT>:
 801a966:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a96a:	6f6d5f65 	svcvs	0x006d5f65
 801a96e:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a972:	5f74726f 	svcpl	0x0074726f
 801a976:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801a97a:	5f656772 	svcpl	0x00656772
 801a97e:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801a982:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a986:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a98a:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a98e:	6f6d5f65 	svcvs	0x006d5f65
 801a992:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a996:	5f74726f 	svcpl	0x0074726f
 801a99a:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 801a99e:	5f656772 	svcpl	0x00656772
 801a9a2:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801a9a6:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a9aa:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801a9ae <LightSetParamsConst::DMX_START_ADDRESS>:
 801a9ae:	5f786d64 	svcpl	0x00786d64
 801a9b2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a9b6:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801a9ba:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801a9be:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

0801a9c0 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 801a9c0:	61736964 	cmnvs	r3, r4, ror #18
 801a9c4:	5f656c62 	svcpl	0x00656c62
 801a9c8:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a9cc:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a9d0:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801a46b <pArray+0x3b>
 801a9d4:	 	smcvs	24580	; 0x6004

0801a9d6 <LightSetParamsConst::FAILSAFE>:
 801a9d6:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801a9da:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

0801a9df <LightSetParamsConst::UNIVERSE>:
 801a9df:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a9e3:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801a9e8 <LightSetParamsConst::DIRECTION>:
 801a9e8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801a9ec:	6f697463 	svcvs	0x00697463
 801a9f0:	6f705f6e 	svcvs	0x00705f6e
 801a9f4:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801a9f8:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801a9fc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801aa00:	5f6e6f69 	svcpl	0x006e6f69
 801aa04:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801aa08:	0000625f 	andeq	r6, r0, pc, asr r2
 801aa0c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801aa10:	6f697463 	svcvs	0x00697463
 801aa14:	6f705f6e 	svcvs	0x00705f6e
 801aa18:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801aa1c:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801aa20:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801aa24:	5f6e6f69 	svcpl	0x006e6f69
 801aa28:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801aa2c:	0000645f 	andeq	r6, r0, pc, asr r4
 801aa30:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801aa34:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801aa38:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801aa3c:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801aa40:	31485300 	mrscc	r5, (UNDEF: 120)
 801aa44:	00363031 	eorseq	r3, r6, r1, lsr r0
 801aa48:	31445353 	cmpcc	r4, r3, asr r3
 801aa4c:	00363033 	eorseq	r3, r6, r3, lsr r0
 801aa50:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801aa54:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801aa58:	000a2964 	andeq	r2, sl, r4, ror #18
 801aa5c:	aaeeaa40 	bge	7bc5364 <__stack_size+0x7bc1364>
 801aa60:	000000ee 	andeq	r0, r0, lr, ror #1

0801aa64 <_OledFont8x6>:
 801aa64:	00000040 	andeq	r0, r0, r0, asr #32
 801aa68:	40000000 	andmi	r0, r0, r0
 801aa6c:	005f0000 	subseq	r0, pc, r0
 801aa70:	00400000 	subeq	r0, r0, r0
 801aa74:	00070007 	andeq	r0, r7, r7
 801aa78:	7f144000 	svcvc	0x00144000
 801aa7c:	00147f14 	andseq	r7, r4, r4, lsl pc
 801aa80:	7f2a2440 	svcvc	0x002a2440
 801aa84:	4000122a 	andmi	r1, r0, sl, lsr #4
 801aa88:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801aa8c:	36400062 	strbcc	r0, [r0], -r2, rrx
 801aa90:	50205649 	eorpl	r5, r0, r9, asr #12
 801aa94:	08004000 	stmdaeq	r0, {lr}
 801aa98:	00000307 	andeq	r0, r0, r7, lsl #6
 801aa9c:	221c0040 	andscs	r0, ip, #64	; 0x40
 801aaa0:	40000041 	andmi	r0, r0, r1, asr #32
 801aaa4:	1c224100 	stfnes	f4, [r2], #-0
 801aaa8:	2a400000 	bcs	901aab0 <__exidx_end+0xfffc40>
 801aaac:	2a1c7f1c 	bcs	873a724 <__exidx_end+0x71f8b4>
 801aab0:	08084000 	stmdaeq	r8, {lr}
 801aab4:	0008083e 	andeq	r0, r8, lr, lsr r8
 801aab8:	70800040 	addvc	r0, r0, r0, asr #32
 801aabc:	40000030 	andmi	r0, r0, r0, lsr r0
 801aac0:	08080808 	stmdaeq	r8, {r3, fp}
 801aac4:	00400008 	subeq	r0, r0, r8
 801aac8:	00606000 	rsbeq	r6, r0, r0
 801aacc:	10204000 	eorne	r4, r0, r0
 801aad0:	00020408 	andeq	r0, r2, r8, lsl #8
 801aad4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801aad8:	40003e45 	andmi	r3, r0, r5, asr #28
 801aadc:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801aae0:	72400000 	subvc	r0, r0, #0
 801aae4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801aae8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801aaec:	00334d49 	eorseq	r4, r3, r9, asr #26
 801aaf0:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801aaf4:	4000107f 	andmi	r1, r0, pc, ror r0
 801aaf8:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801aafc:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801ab00:	3149494a 	cmpcc	r9, sl, asr #18
 801ab04:	21414000 	mrscs	r4, (UNDEF: 65)
 801ab08:	00070911 	andeq	r0, r7, r1, lsl r9
 801ab0c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801ab10:	40003649 	andmi	r3, r0, r9, asr #12
 801ab14:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801ab18:	0040001e 	subeq	r0, r0, lr, lsl r0
 801ab1c:	00001400 	andeq	r1, r0, r0, lsl #8
 801ab20:	40004000 	andmi	r4, r0, r0
 801ab24:	00000034 	andeq	r0, r0, r4, lsr r0
 801ab28:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801ab2c:	40004122 	andmi	r4, r0, r2, lsr #2
 801ab30:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801ab34:	00400014 	subeq	r0, r0, r4, lsl r0
 801ab38:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801ab3c:	01024000 	mrseq	r4, (UNDEF: 2)
 801ab40:	00060959 	andeq	r0, r6, r9, asr r9
 801ab44:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801ab48:	40004e59 	andmi	r4, r0, r9, asr lr
 801ab4c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801ab50:	7f40007c 	svcvc	0x0040007c
 801ab54:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801ab58:	413e4000 	teqmi	lr, r0
 801ab5c:	00224141 	eoreq	r4, r2, r1, asr #2
 801ab60:	41417f40 	cmpmi	r1, r0, asr #30
 801ab64:	40003e41 	andmi	r3, r0, r1, asr #28
 801ab68:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801ab6c:	7f400041 	svcvc	0x00400041
 801ab70:	01090909 	tsteq	r9, r9, lsl #18
 801ab74:	413e4000 	teqmi	lr, r0
 801ab78:	00735141 	rsbseq	r5, r3, r1, asr #2
 801ab7c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801ab80:	40007f08 	andmi	r7, r0, r8, lsl #30
 801ab84:	417f4100 	cmnmi	pc, r0, lsl #2
 801ab88:	20400000 	subcs	r0, r0, r0
 801ab8c:	013f4140 	teqeq	pc, r0, asr #2
 801ab90:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 801ab94:	00412214 	subeq	r2, r1, r4, lsl r2
 801ab98:	40407f40 	submi	r7, r0, r0, asr #30
 801ab9c:	40004040 	andmi	r4, r0, r0, asr #32
 801aba0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 801aba4:	7f40007f 	svcvc	0x0040007f
 801aba8:	7f100804 	svcvc	0x00100804
 801abac:	413e4000 	teqmi	lr, r0
 801abb0:	003e4141 	eorseq	r4, lr, r1, asr #2
 801abb4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801abb8:	40000609 	andmi	r0, r0, r9, lsl #12
 801abbc:	2151413e 	cmpcs	r1, lr, lsr r1
 801abc0:	7f40005e 	svcvc	0x0040005e
 801abc4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801abc8:	49264000 	stmdbmi	r6!, {lr}
 801abcc:	00324949 	eorseq	r4, r2, r9, asr #18
 801abd0:	7f010340 	svcvc	0x00010340
 801abd4:	40000301 	andmi	r0, r0, r1, lsl #6
 801abd8:	4040403f 	submi	r4, r0, pc, lsr r0
 801abdc:	1f40003f 	svcne	0x0040003f
 801abe0:	1f204020 	svcne	0x00204020
 801abe4:	403f4000 	eorsmi	r4, pc, r0
 801abe8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801abec:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801abf0:	40006314 	andmi	r6, r0, r4, lsl r3
 801abf4:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 801abf8:	61400003 	cmpvs	r0, r3
 801abfc:	434d4959 	movtmi	r4, #55641	; 0xd959
 801ac00:	7f004000 	svcvc	0x00004000
 801ac04:	00414141 	subeq	r4, r1, r1, asr #2
 801ac08:	08040240 	stmdaeq	r4, {r6, r9}
 801ac0c:	40002010 	andmi	r2, r0, r0, lsl r0
 801ac10:	41414100 	mrsmi	r4, (UNDEF: 81)
 801ac14:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801ac18:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801ac1c:	40404000 	submi	r4, r0, r0
 801ac20:	00404040 	subeq	r4, r0, r0, asr #32
 801ac24:	07030040 	streq	r0, [r3, -r0, asr #32]
 801ac28:	40000008 	andmi	r0, r0, r8
 801ac2c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801ac30:	7f400040 	svcvc	0x00400040
 801ac34:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801ac38:	44384000 	ldrtmi	r4, [r8], #-0
 801ac3c:	00284444 	eoreq	r4, r8, r4, asr #8
 801ac40:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801ac44:	40007f28 	andmi	r7, r0, r8, lsr #30
 801ac48:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801ac4c:	00400018 	subeq	r0, r0, r8, lsl r0
 801ac50:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801ac54:	a4184000 	ldrge	r4, [r8], #-0
 801ac58:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801ac5c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 801ac60:	40007804 	andmi	r7, r0, r4, lsl #16
 801ac64:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801ac68:	20400000 	subcs	r0, r0, r0
 801ac6c:	003d4040 	eorseq	r4, sp, r0, asr #32
 801ac70:	107f4000 	rsbsne	r4, pc, r0
 801ac74:	00004428 	andeq	r4, r0, r8, lsr #8
 801ac78:	7f410040 	svcvc	0x00410040
 801ac7c:	40000040 	andmi	r0, r0, r0, asr #32
 801ac80:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 801ac84:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801ac88:	78040408 	stmdavc	r4, {r3, sl}
 801ac8c:	44384000 	ldrtmi	r4, [r8], #-0
 801ac90:	00384444 	eorseq	r4, r8, r4, asr #8
 801ac94:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801ac98:	40001824 	andmi	r1, r0, r4, lsr #16
 801ac9c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801aca0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801aca4:	08040408 	stmdaeq	r4, {r3, sl}
 801aca8:	54484000 	strbpl	r4, [r8], #-0
 801acac:	00245454 	eoreq	r5, r4, r4, asr r4
 801acb0:	3f040440 	svccc	0x00040440
 801acb4:	40002444 	andmi	r2, r0, r4, asr #8
 801acb8:	2040403c 	subcs	r4, r0, ip, lsr r0
 801acbc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801acc0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 801acc4:	403c4000 	eorsmi	r4, ip, r0
 801acc8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801accc:	10284440 	eorne	r4, r8, r0, asr #8
 801acd0:	40004428 	andmi	r4, r0, r8, lsr #8
 801acd4:	9090904c 	addsls	r9, r0, ip, asr #32
 801acd8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801acdc:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801ace0:	08004000 	stmdaeq	r0, {lr}
 801ace4:	00004136 	andeq	r4, r0, r6, lsr r1
 801ace8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801acec:	40000000 	andmi	r0, r0, r0
 801acf0:	08364100 	ldmdaeq	r6!, {r8, lr}
 801acf4:	02400000 	subeq	r0, r0, #0
 801acf8:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801acfc:	263c4000 	ldrtcs	r4, [ip], -r0
 801ad00:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801ad04 <oled_128x32_init>:
 801ad04:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801ad08:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801ad0c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801ad10:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801ad14:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801ad18:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801ad1c <oled_128x64_init>:
 801ad1c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801ad20:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801ad24:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801ad28:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801ad2c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801ad30:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801ad34 <vtable for Ssd1306>:
	...
 801ad3c:	08014d81 	stmdaeq	r1, {r0, r7, r8, sl, fp, lr}
 801ad40:	08014dad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, fp, lr}
 801ad44:	080150b1 	stmdaeq	r1, {r0, r4, r5, r7, ip, lr}
 801ad48:	08015039 	stmdaeq	r1, {r0, r3, r4, r5, ip, lr}
 801ad4c:	08014f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, lr}
 801ad50:	08014db9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, fp, lr}
 801ad54:	08014de5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, fp, lr}
 801ad58:	08014ed9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, fp, lr}
 801ad5c:	08014e91 	stmdaeq	r1, {r0, r4, r7, r9, sl, fp, lr}
 801ad60:	08014d83 	stmdaeq	r1, {r0, r1, r7, r8, sl, fp, lr}
 801ad64:	08014f41 	stmdaeq	r1, {r0, r6, r8, r9, sl, fp, lr}
 801ad68:	08014f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, lr}
 801ad6c:	08014f67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, fp, lr}
 801ad70:	08014d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, lr}
 801ad74:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801ad78:	5b1b006d 	blpl	86daf34 <__exidx_end+0x6c00c4>
 801ad7c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 801ad80:	31335b1b 	teqcc	r3, fp, lsl fp
 801ad84:	5b1b006d 	blpl	86daf40 <__exidx_end+0x6c00d0>
 801ad88:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801ad8c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 801ad90:	5b1b006d 	blpl	86daf4c <__exidx_end+0x6c00dc>
 801ad94:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801ad98:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 801ad9c:	205d732a 	subscs	r7, sp, sl, lsr #6
 801ada0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 801ada4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801ada8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801adac:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801adb0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 801adb4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801adb8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 801adbc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801adc0:	203a636f 	eorscs	r6, sl, pc, ror #6
 801adc4:	000a7525 	andeq	r7, sl, r5, lsr #10
 801adc8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801adcc:	203a636f 	eorscs	r6, sl, pc, ror #6
 801add0:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 801add4:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801add8:	6b636f6c 	blvs	98f6b90 <__exidx_end+0x18dbd20>
 801addc:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 801ade0:	000a7469 	andeq	r7, sl, r9, ror #8
 801ade4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801ade8:	203a636f 	eorscs	r6, sl, pc, ror #6
 801adec:	6f6c4270 	svcvs	0x006c4270
 801adf0:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801adf4:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801adf8:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 801adfc:	7a697320 	bvc	9a77a84 <__exidx_end+0x1a5cc14>
 801ae00:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 801ae04:	6164202c 	cmnvs	r4, ip, lsr #32
 801ae08:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 801ae0c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 801ae10:	3a656572 	bcc	99743e0 <__exidx_end+0x1959570>
 801ae14:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801ae18:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801ae1c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801ae20:	203d2072 	eorscs	r2, sp, r2, ror r0
 801ae24:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801ae28:	6f6c4270 	svcvs	0x006c4270
 801ae2c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 801ae30:	0a702520 	beq	9c242b8 <__exidx_end+0x1c09448>
 801ae34:	00000000 	andeq	r0, r0, r0

0801ae38 <days_of_month>:
 801ae38:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae3c:	0000001c 	andeq	r0, r0, ip, lsl r0
 801ae40:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae44:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ae48:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae4c:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ae50:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae54:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae58:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ae5c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ae60:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ae64:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

0801ae68 <__exidx_start>:
 801ae68:	7ffef5d4 	svcvc	0x00fef5d4
 801ae6c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801ae70 <.ARM.attributes>:
 801ae70:	00003441 	andeq	r3, r0, r1, asr #8
 801ae74:	61656100 	cmnvs	r5, r0, lsl #2
 801ae78:	01006962 	tsteq	r0, r2, ror #18
 801ae7c:	0000002a 	andeq	r0, r0, sl, lsr #32
 801ae80:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 801ae84:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801ae88:	0600344d 	streq	r3, [r0], -sp, asr #8
 801ae8c:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 801ae90:	12060a02 	andne	r0, r6, #8192	; 0x2000
 801ae94:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 801ae98:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 801ae9c:	1b011a01 	blne	80616a8 <__exidx_end+0x46838>
 801aea0:	22011c01 	andcs	r1, r1, #256	; 0x100
 801aea4:	Address 0x000000000801aea4 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	1000a000 	andne	sl, r0, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	0bebc200 	bleq	1faf08fc <_sp+0xfae08fc>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <E131Bridge::s_pThis>:
200006cc:	00000000 	andeq	r0, r0, r0

200006d0 <s_ReceivingMask>:
200006d0:	00000000 	andeq	r0, r0, r0

200006d4 <s_nPortsMax>:
200006d4:	00000000 	andeq	r0, r0, r0

200006d8 <LLRPDevice::s_nIpAddressFrom>:
200006d8:	00000000 	andeq	r0, r0, r0

200006dc <LLRPDevice::m_nIpAddresLLRPRequest>:
200006dc:	00000000 	andeq	r0, r0, r0

200006e0 <LLRPDevice::m_nIpAddressLLRPResponse>:
200006e0:	00000000 	andeq	r0, r0, r0

200006e4 <LLRPDevice::m_pLLRP>:
200006e4:	00000000 	andeq	r0, r0, r0

200006e8 <RDMNetDevice::s_RdmCommand>:
	...

200007e9 <RDMNetDevice::s_Cid>:
	...

200007fc <RDMSensors::s_pThis>:
200007fc:	00000000 	andeq	r0, r0, r0

20000800 <RDMSubDevices::s_pThis>:
20000800:	00000000 	andeq	r0, r0, r0

20000804 <RDMDeviceResponder::s_pThis>:
20000804:	00000000 	andeq	r0, r0, r0

20000808 <RDMIdentify::m_bIsEnabled>:
	...

20000809 <RDMIdentify::m_nMode>:
20000809:	 	andeq	r0, r0, r0

2000080c <RDMIdentify::s_pThis>:
2000080c:	00000000 	andeq	r0, r0, r0

20000810 <DmxSend::s_nStarted>:
20000810:	00000000 	andeq	r0, r0, r0

20000814 <s_RxBuffer>:
	...

20000c34 <s_TxBuffer>:
	...

2000103c <sv_PortState>:
	...

20001044 <sv_nUartsSending>:
20001044:	00000000 	andeq	r0, r0, r0

20001048 <Dmx::s_pThis>:
20001048:	00000000 	andeq	r0, r0, r0

2000104c <DmxConfigUdp::s_pUdpBuffer>:
2000104c:	00000000 	andeq	r0, r0, r0

20001050 <PixelPatterns::m_PortConfig>:
	...

20001250 <PixelPatterns::m_nActivePorts>:
20001250:	00000000 	andeq	r0, r0, r0

20001254 <PixelPatterns::m_pScannerColours>:
20001254:	00000000 	andeq	r0, r0, r0

20001258 <PixelPatterns::m_nCount>:
20001258:	00000000 	andeq	r0, r0, r0

2000125c <PixelPatterns::m_pOutput>:
2000125c:	00000000 	andeq	r0, r0, r0

20001260 <PixelTestPattern::s_Pattern>:
20001260:	00000000 	andeq	r0, r0, r0

20001264 <sv_isRunning>:
20001264:	00000000 	andeq	r0, r0, r0

20001268 <WS28xxMulti::s_pThis>:
20001268:	00000000 	andeq	r0, r0, r0

2000126c <pixel::s_DmaBuffer>:
	...

2000926c <g_ip_info>:
	...

20009278 <g_mac_address>:
20009278:	00000000 	andeq	r0, r0, r0
	...

2000927e <s_is_dhcp>:
	...

20009280 <s_p>:
20009280:	00000000 	andeq	r0, r0, r0

20009284 <s_ticker>:
20009284:	00000000 	andeq	r0, r0, r0

20009288 <s_mac_address>:
	...

20009290 <s_mac_address_arp_reply>:
	...

20009298 <broadcast_mask>:
20009298:	00000000 	andeq	r0, r0, r0

2000929c <gw_ip>:
2000929c:	00000000 	andeq	r0, r0, r0

200092a0 <on_network_mask>:
200092a0:	00000000 	andeq	r0, r0, r0

200092a4 <s_id>:
200092a4:	00000000 	andeq	r0, r0, r0

200092a8 <s_ports_allowed>:
	...

200092c8 <s_recv_queue>:
	...

2000ef68 <s_send_packet>:
	...

2000f554 <MDNS::s_nRemoteIp>:
2000f554:	00000000 	andeq	r0, r0, r0

2000f558 <MDNS::s_nRemotePort>:
2000f558:	00000000 	andeq	r0, r0, r0

2000f55c <MDNS::s_nMulticastIp>:
2000f55c:	00000000 	andeq	r0, r0, r0

2000f560 <MDNS::s_AnswerLocalIp>:
	...

2000f764 <MDNS::s_ServiceRecords>:
	...

2000f784 <MDNS::s_nBytesReceived>:
2000f784:	00000000 	andeq	r0, r0, r0

2000f788 <MDNS::s_ServiceRecordsData>:
	...

2000f98c <MDNS::s_pName>:
2000f98c:	00000000 	andeq	r0, r0, r0

2000f990 <MDNS::s_pBuffer>:
2000f990:	00000000 	andeq	r0, r0, r0

2000f994 <Network::s_pThis>:
2000f994:	00000000 	andeq	r0, r0, r0

2000f998 <s_arp_announce>:
	...

2000f9c4 <s_arp_reply>:
	...

2000f9f0 <s_arp_request>:
	...

2000fa1c <s_dhcp_allocated_gw>:
2000fa1c:	00000000 	andeq	r0, r0, r0

2000fa20 <s_dhcp_allocated_ip>:
2000fa20:	00000000 	andeq	r0, r0, r0

2000fa24 <s_dhcp_allocated_netmask>:
2000fa24:	00000000 	andeq	r0, r0, r0

2000fa28 <s_dhcp_message>:
	...

2000fc4c <s_dhcp_server_ip>:
2000fc4c:	00000000 	andeq	r0, r0, r0

2000fc50 <DisplayUdf::s_pThis>:
2000fc50:	00000000 	andeq	r0, r0, r0

2000fc54 <ConfigStore::s_nWaitMillis>:
2000fc54:	00000000 	andeq	r0, r0, r0

2000fc58 <ConfigStore::s_nStartAddress>:
2000fc58:	00000000 	andeq	r0, r0, r0

2000fc5c <ConfigStore::s_bHaveFlashChip>:
2000fc5c:	00000000 	andeq	r0, r0, r0

2000fc60 <ConfigStore::s_nSpiFlashStoreSize>:
2000fc60:	00000000 	andeq	r0, r0, r0

2000fc64 <ConfigStore::s_State>:
2000fc64:	00000000 	andeq	r0, r0, r0

2000fc68 <ConfigStore::s_pThis>:
2000fc68:	00000000 	andeq	r0, r0, r0

2000fc6c <ConfigStore::s_bIsNew>:
2000fc6c:	00000000 	andeq	r0, r0, r0

2000fc70 <StoreDisplayUdf::s_pThis>:
2000fc70:	00000000 	andeq	r0, r0, r0

2000fc74 <StoreDmxSend::s_pThis>:
2000fc74:	00000000 	andeq	r0, r0, r0

2000fc78 <StoreNetwork::s_pThis>:
2000fc78:	00000000 	andeq	r0, r0, r0

2000fc7c <StoreRemoteConfig::s_pThis>:
2000fc7c:	00000000 	andeq	r0, r0, r0

2000fc80 <StoreE131::s_pThis>:
2000fc80:	00000000 	andeq	r0, r0, r0

2000fc84 <StorePixelDmx::s_pThis>:
2000fc84:	00000000 	andeq	r0, r0, r0

2000fc88 <StoreRDMDevice::s_pThis>:
2000fc88:	00000000 	andeq	r0, r0, r0

2000fc8c <PropertiesConfig::s_Config>:
2000fc8c:	00000000 	andeq	r0, r0, r0

2000fc90 <Display::s_pThis>:
2000fc90:	00000000 	andeq	r0, r0, r0

2000fc94 <_ClearBuffer>:
	...

2000fd1c <Ssd1306::s_pThis>:
2000fd1c:	00000000 	andeq	r0, r0, r0

2000fd20 <FirmwareVersion::s_FirmwareVersion>:
	...

2000fd36 <FirmwareVersion::s_Print>:
	...

2000fd78 <FirmwareVersion::s_pThis>:
2000fd78:	00000000 	andeq	r0, r0, r0

2000fd7c <LedBlink::s_pThis>:
2000fd7c:	00000000 	andeq	r0, r0, r0

2000fd80 <Hardware::s_pThis>:
2000fd80:	00000000 	andeq	r0, r0, r0

2000fd84 <last.0>:
2000fd84:	00000000 	andeq	r0, r0, r0

2000fd88 <s_micros>:
	...

2000fd90 <set_timer>:
2000fd90:	00000000 	andeq	r0, r0, r0

2000fd94 <s_nSysTickMillis>:
2000fd94:	00000000 	andeq	r0, r0, r0

2000fd98 <dma_current_ptp_rxdesc>:
2000fd98:	00000000 	andeq	r0, r0, r0

2000fd9c <dma_current_ptp_txdesc>:
2000fd9c:	00000000 	andeq	r0, r0, r0

2000fda0 <dma_current_rxdesc>:
2000fda0:	00000000 	andeq	r0, r0, r0

2000fda4 <dma_current_txdesc>:
2000fda4:	00000000 	andeq	r0, r0, r0

2000fda8 <enet_initpara>:
	...

2000fde4 <rx_buff>:
	...

20029e9c <rxdesc_tab>:
	...

2002a2fc <tx_buff>:
	...

2002d29c <txdesc_tab>:
	...

2002d31c <s_nAddress>:
2002d31c:	00000000 	andeq	r0, r0, r0

Disassembly of section .tcmsram:

10000000 <s_tcp>:
	...

100005ec <s_id>:
100005ec:	00000000 	andeq	r0, r0, r0

100005f0 <s_tcb>:
	...

10000634 <s_recv_queue>:
	...

100011a4 <s_entry_current>:
100011a4:	00000000 	andeq	r0, r0, r0

100011a8 <s_arp_records>:
	...

10001328 <s_multicast_mac>:
	...

10001330 <s_report>:
	...

10001360 <s_id>:
10001360:	00000000 	andeq	r0, r0, r0

10001364 <s_leave>:
	...

10001394 <s_groups>:
	...

100015c4 <s_joins_allowed_index>:
100015c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

1000a000 <heap_low>:
	...

Disassembly of section .stack:

1000c000 <_sp-0x4000>:
	...

Disassembly of section .ramadd:

20030000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
