
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10010000 	andne	r0, r1, r0
 8008004:	08008bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, pc}
 8008008:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800800c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008010:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008014:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008018:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
	...
 800802c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008030:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800803c:	08016485 	stmdaeq	r1, {r0, r2, r7, sl, sp, lr}
 8008040:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008044:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008048:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800804c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008050:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008054:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008058:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800805c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008060:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008064:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008068:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800806c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008070:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008074:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008078:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800807c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008080:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008084:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008088:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800808c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008090:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008094:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008098:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800809c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ac:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b0:	0800f019 	stmdaeq	r0, {r0, r3, r4, ip, sp, lr, pc}
 80080b4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080b8:	08011065 	stmdaeq	r1, {r0, r2, r5, r6, ip}
 80080bc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080c8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080cc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080d8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080dc:	0800f001 	stmdaeq	r0, {r0, ip, sp, lr, pc}
 80080e0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080e8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080ec:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080f8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80080fc:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008100:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008104:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008108:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800810c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008110:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008114:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008118:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800811c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008120:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008124:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008128:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800812c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008130:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008134:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008138:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800813c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008140:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008144:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008148:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800814c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008150:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008154:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008158:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800815c:	0800f00d 	stmdaeq	r0, {r0, r2, r3, ip, sp, lr, pc}
 8008160:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008164:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008168:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800816c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008170:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008174:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008178:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008184:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008188:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800818c:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008190:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008194:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 8008198:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a4:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}
 80081a8:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

Disassembly of section .text:

080081ac <net_init>:
 80081ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081ae:	9e08      	ldr	r6, [sp, #32]
 80081b0:	460c      	mov	r4, r1
 80081b2:	4921      	ldr	r1, [pc, #132]	; (8008238 <net_init+0x8c>)
 80081b4:	461d      	mov	r5, r3
 80081b6:	1e43      	subs	r3, r0, #1
 80081b8:	3005      	adds	r0, #5
 80081ba:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80081be:	f801 7b01 	strb.w	r7, [r1], #1
 80081c2:	4283      	cmp	r3, r0
 80081c4:	d1f9      	bne.n	80081ba <net_init+0xe>
 80081c6:	491d      	ldr	r1, [pc, #116]	; (800823c <net_init+0x90>)
 80081c8:	f104 000c 	add.w	r0, r4, #12
 80081cc:	4623      	mov	r3, r4
 80081ce:	f813 7b01 	ldrb.w	r7, [r3], #1
 80081d2:	f801 7b01 	strb.w	r7, [r1], #1
 80081d6:	4283      	cmp	r3, r0
 80081d8:	d1f9      	bne.n	80081ce <net_init+0x22>
 80081da:	4918      	ldr	r1, [pc, #96]	; (800823c <net_init+0x90>)
 80081dc:	4816      	ldr	r0, [pc, #88]	; (8008238 <net_init+0x8c>)
 80081de:	9201      	str	r2, [sp, #4]
 80081e0:	2700      	movs	r7, #0
 80081e2:	f000 f99d 	bl	8008520 <ip_init>
 80081e6:	4814      	ldr	r0, [pc, #80]	; (8008238 <net_init+0x8c>)
 80081e8:	f000 f83a 	bl	8008260 <rfc3927_init>
 80081ec:	7037      	strb	r7, [r6, #0]
 80081ee:	782b      	ldrb	r3, [r5, #0]
 80081f0:	9a01      	ldr	r2, [sp, #4]
 80081f2:	b153      	cbz	r3, 800820a <net_init+0x5e>
 80081f4:	4911      	ldr	r1, [pc, #68]	; (800823c <net_init+0x90>)
 80081f6:	4810      	ldr	r0, [pc, #64]	; (8008238 <net_init+0x8c>)
 80081f8:	f00c f856 	bl	80142a8 <dhcp_client>
 80081fc:	42b8      	cmp	r0, r7
 80081fe:	da04      	bge.n	800820a <net_init+0x5e>
 8008200:	480e      	ldr	r0, [pc, #56]	; (800823c <net_init+0x90>)
 8008202:	702f      	strb	r7, [r5, #0]
 8008204:	f00a fa2c 	bl	8012660 <rfc3927>
 8008208:	7030      	strb	r0, [r6, #0]
 800820a:	490c      	ldr	r1, [pc, #48]	; (800823c <net_init+0x90>)
 800820c:	480a      	ldr	r0, [pc, #40]	; (8008238 <net_init+0x8c>)
 800820e:	f000 f883 	bl	8008318 <arp_init>
 8008212:	480a      	ldr	r0, [pc, #40]	; (800823c <net_init+0x90>)
 8008214:	f00c fa62 	bl	80146dc <ip_set_ip>
 8008218:	f000 f82e 	bl	8008278 <tcp_init>
 800821c:	4a07      	ldr	r2, [pc, #28]	; (800823c <net_init+0x90>)
 800821e:	1e63      	subs	r3, r4, #1
 8008220:	340b      	adds	r4, #11
 8008222:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008226:	f803 1f01 	strb.w	r1, [r3, #1]!
 800822a:	429c      	cmp	r4, r3
 800822c:	d1f9      	bne.n	8008222 <net_init+0x76>
 800822e:	782a      	ldrb	r2, [r5, #0]
 8008230:	4b03      	ldr	r3, [pc, #12]	; (8008240 <net_init+0x94>)
 8008232:	701a      	strb	r2, [r3, #0]
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008238:	200092d4 	ldrdcs	r9, [r0], -r4
 800823c:	200092c8 	andcs	r9, r0, r8, asr #5
 8008240:	200092da 	ldrdcs	r9, [r0], -sl

08008244 <net_shutdown>:
 8008244:	b508      	push	{r3, lr}
 8008246:	f000 f976 	bl	8008536 <ip_shutdown>
 800824a:	4b04      	ldr	r3, [pc, #16]	; (800825c <net_shutdown+0x18>)
 800824c:	781b      	ldrb	r3, [r3, #0]
 800824e:	b11b      	cbz	r3, 8008258 <net_shutdown+0x14>
 8008250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008254:	f00c b930 	b.w	80144b8 <dhcp_client_release>
 8008258:	bd08      	pop	{r3, pc}
 800825a:	bf00      	nop
 800825c:	200092da 	ldrdcs	r9, [r0], -sl

08008260 <rfc3927_init>:
 8008260:	4b04      	ldr	r3, [pc, #16]	; (8008274 <rfc3927_init+0x14>)
 8008262:	1d82      	adds	r2, r0, #6
 8008264:	4290      	cmp	r0, r2
 8008266:	d100      	bne.n	800826a <rfc3927_init+0xa>
 8008268:	4770      	bx	lr
 800826a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800826e:	f803 1b01 	strb.w	r1, [r3], #1
 8008272:	e7f7      	b.n	8008264 <rfc3927_init+0x4>
 8008274:	200092e4 	andcs	r9, r0, r4, ror #5

08008278 <tcp_init>:
 8008278:	b513      	push	{r0, r1, r4, lr}
 800827a:	4c0c      	ldr	r4, [pc, #48]	; (80082ac <tcp_init+0x34>)
 800827c:	490c      	ldr	r1, [pc, #48]	; (80082b0 <tcp_init+0x38>)
 800827e:	2206      	movs	r2, #6
 8008280:	18a0      	adds	r0, r4, r2
 8008282:	f00a fa47 	bl	8012714 <memcpy.isra.0>
 8008286:	2308      	movs	r3, #8
 8008288:	81a3      	strh	r3, [r4, #12]
 800828a:	4b0a      	ldr	r3, [pc, #40]	; (80082b4 <tcp_init+0x3c>)
 800828c:	2204      	movs	r2, #4
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	eb0d 0102 	add.w	r1, sp, r2
 8008296:	f104 001a 	add.w	r0, r4, #26
 800829a:	f00a fa3b 	bl	8012714 <memcpy.isra.0>
 800829e:	2345      	movs	r3, #69	; 0x45
 80082a0:	81e3      	strh	r3, [r4, #14]
 80082a2:	4b05      	ldr	r3, [pc, #20]	; (80082b8 <tcp_init+0x40>)
 80082a4:	6163      	str	r3, [r4, #20]
 80082a6:	b002      	add	sp, #8
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	10000000 	andne	r0, r0, r0
 80082b0:	200092d4 	ldrdcs	r9, [r0], -r4
 80082b4:	200092c8 	andcs	r9, r0, r8, asr #5
 80082b8:	06400040 	strbeq	r0, [r0], -r0, asr #32

080082bc <udp_init>:
 80082bc:	b570      	push	{r4, r5, r6, lr}
 80082be:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <udp_init+0x40>)
 80082c0:	460e      	mov	r6, r1
 80082c2:	490f      	ldr	r1, [pc, #60]	; (8008300 <udp_init+0x44>)
 80082c4:	2408      	movs	r4, #8
 80082c6:	2200      	movs	r2, #0
 80082c8:	3c01      	subs	r4, #1
 80082ca:	801a      	strh	r2, [r3, #0]
 80082cc:	805a      	strh	r2, [r3, #2]
 80082ce:	f841 2b04 	str.w	r2, [r1], #4
 80082d2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80082d6:	d1f7      	bne.n	80082c8 <udp_init+0xc>
 80082d8:	4d0a      	ldr	r5, [pc, #40]	; (8008304 <udp_init+0x48>)
 80082da:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <udp_init+0x4c>)
 80082dc:	2206      	movs	r2, #6
 80082de:	4601      	mov	r1, r0
 80082e0:	18a8      	adds	r0, r5, r2
 80082e2:	801c      	strh	r4, [r3, #0]
 80082e4:	f00a fbb0 	bl	8012a48 <memcpy.isra.0>
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <udp_init+0x50>)
 80082ea:	60eb      	str	r3, [r5, #12]
 80082ec:	4630      	mov	r0, r6
 80082ee:	4b08      	ldr	r3, [pc, #32]	; (8008310 <udp_init+0x54>)
 80082f0:	616b      	str	r3, [r5, #20]
 80082f2:	f00a fbd1 	bl	8012a98 <udp_set_ip>
 80082f6:	852c      	strh	r4, [r5, #40]	; 0x28
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	20009324 	andcs	r9, r0, r4, lsr #6
 8008300:	20009304 	andcs	r9, r0, r4, lsl #6
 8008304:	2000efc4 	andcs	lr, r0, r4, asr #31
 8008308:	20009300 	andcs	r9, r0, r0, lsl #6
 800830c:	00450008 	subeq	r0, r5, r8
 8008310:	11400040 	cmpne	r0, r0, asr #32

08008314 <udp_shutdown>:
 8008314:	4770      	bx	lr
	...

08008318 <arp_init>:
 8008318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800831c:	460d      	mov	r5, r1
 800831e:	4604      	mov	r4, r0
 8008320:	f000 f876 	bl	8008410 <arp_cache_init>
 8008324:	2206      	movs	r2, #6
 8008326:	482f      	ldr	r0, [pc, #188]	; (80083e4 <arp_init+0xcc>)
 8008328:	682f      	ldr	r7, [r5, #0]
 800832a:	4621      	mov	r1, r4
 800832c:	f00b fe3e 	bl	8013fac <memcpy.isra.0>
 8008330:	4b2d      	ldr	r3, [pc, #180]	; (80083e8 <arp_init+0xd0>)
 8008332:	2507      	movs	r5, #7
 8008334:	461e      	mov	r6, r3
 8008336:	22ff      	movs	r2, #255	; 0xff
 8008338:	3d01      	subs	r5, #1
 800833a:	d146      	bne.n	80083ca <arp_init+0xb2>
 800833c:	4b2b      	ldr	r3, [pc, #172]	; (80083ec <arp_init+0xd4>)
 800833e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800840c <arp_init+0xf4>
 8008342:	482b      	ldr	r0, [pc, #172]	; (80083f0 <arp_init+0xd8>)
 8008344:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8008348:	2206      	movs	r2, #6
 800834a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800834e:	4621      	mov	r1, r4
 8008350:	82b3      	strh	r3, [r6, #20]
 8008352:	f00b fe2b 	bl	8013fac <memcpy.isra.0>
 8008356:	4a27      	ldr	r2, [pc, #156]	; (80083f4 <arp_init+0xdc>)
 8008358:	61f7      	str	r7, [r6, #28]
 800835a:	2307      	movs	r3, #7
 800835c:	3b01      	subs	r3, #1
 800835e:	d137      	bne.n	80083d0 <arp_init+0xb8>
 8008360:	2206      	movs	r2, #6
 8008362:	4621      	mov	r1, r4
 8008364:	4824      	ldr	r0, [pc, #144]	; (80083f8 <arp_init+0xe0>)
 8008366:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800836a:	f00b fe1f 	bl	8013fac <memcpy.isra.0>
 800836e:	4a23      	ldr	r2, [pc, #140]	; (80083fc <arp_init+0xe4>)
 8008370:	2306      	movs	r3, #6
 8008372:	4615      	mov	r5, r2
 8008374:	21ff      	movs	r1, #255	; 0xff
 8008376:	3b01      	subs	r3, #1
 8008378:	d22d      	bcs.n	80083d6 <arp_init+0xbe>
 800837a:	4b1c      	ldr	r3, [pc, #112]	; (80083ec <arp_init+0xd4>)
 800837c:	4820      	ldr	r0, [pc, #128]	; (8008400 <arp_init+0xe8>)
 800837e:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8008382:	2206      	movs	r2, #6
 8008384:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008388:	4621      	mov	r1, r4
 800838a:	82ab      	strh	r3, [r5, #20]
 800838c:	f00b fe0e 	bl	8013fac <memcpy.isra.0>
 8008390:	4a1c      	ldr	r2, [pc, #112]	; (8008404 <arp_init+0xec>)
 8008392:	61ef      	str	r7, [r5, #28]
 8008394:	2307      	movs	r3, #7
 8008396:	2100      	movs	r1, #0
 8008398:	3b01      	subs	r3, #1
 800839a:	d11f      	bne.n	80083dc <arp_init+0xc4>
 800839c:	4d1a      	ldr	r5, [pc, #104]	; (8008408 <arp_init+0xf0>)
 800839e:	2206      	movs	r2, #6
 80083a0:	18a8      	adds	r0, r5, r2
 80083a2:	4621      	mov	r1, r4
 80083a4:	f00b fe02 	bl	8013fac <memcpy.isra.0>
 80083a8:	4b10      	ldr	r3, [pc, #64]	; (80083ec <arp_init+0xd4>)
 80083aa:	4621      	mov	r1, r4
 80083ac:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80083b0:	f105 0016 	add.w	r0, r5, #22
 80083b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80083b8:	2206      	movs	r2, #6
 80083ba:	82ab      	strh	r3, [r5, #20]
 80083bc:	f00b fdf6 	bl	8013fac <memcpy.isra.0>
 80083c0:	61ef      	str	r7, [r5, #28]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f00b bdfb 	b.w	8013fc0 <arp_announce>
 80083ca:	f803 2b01 	strb.w	r2, [r3], #1
 80083ce:	e7b3      	b.n	8008338 <arp_init+0x20>
 80083d0:	f802 5b01 	strb.w	r5, [r2], #1
 80083d4:	e7c2      	b.n	800835c <arp_init+0x44>
 80083d6:	f802 1b01 	strb.w	r1, [r2], #1
 80083da:	e7cc      	b.n	8008376 <arp_init+0x5e>
 80083dc:	f802 1b01 	strb.w	r1, [r2], #1
 80083e0:	e7da      	b.n	8008398 <arp_init+0x80>
 80083e2:	bf00      	nop
 80083e4:	2000f9fa 	strdcs	pc, [r0], -sl
 80083e8:	2000f9f4 	strdcs	pc, [r0], -r4
 80083ec:	01000608 	tsteq	r0, r8, lsl #12
 80083f0:	2000fa0a 	andcs	pc, r0, sl, lsl #20
 80083f4:	2000fa14 	andcs	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
 80083f8:	2000fa52 	andcs	pc, r0, r2, asr sl	; <UNPREDICTABLE>
 80083fc:	2000fa4c 	andcs	pc, r0, ip, asr #20
 8008400:	2000fa62 	andcs	pc, r0, r2, ror #20
 8008404:	2000fa6c 	andcs	pc, r0, ip, ror #20
 8008408:	2000fa20 	andcs	pc, r0, r0, lsr #20
 800840c:	04060008 	streq	r0, [r6], #-8

08008410 <arp_cache_init>:
 8008410:	4a0a      	ldr	r2, [pc, #40]	; (800843c <arp_cache_init+0x2c>)
 8008412:	2300      	movs	r3, #0
 8008414:	b510      	push	{r4, lr}
 8008416:	f822 3b08 	strh.w	r3, [r2], #8
 800841a:	4618      	mov	r0, r3
 800841c:	4611      	mov	r1, r2
 800841e:	f842 0c04 	str.w	r0, [r2, #-4]
 8008422:	1d94      	adds	r4, r2, #6
 8008424:	42a1      	cmp	r1, r4
 8008426:	d105      	bne.n	8008434 <arp_cache_init+0x24>
 8008428:	3303      	adds	r3, #3
 800842a:	2b60      	cmp	r3, #96	; 0x60
 800842c:	f102 020c 	add.w	r2, r2, #12
 8008430:	d1f4      	bne.n	800841c <arp_cache_init+0xc>
 8008432:	bd10      	pop	{r4, pc}
 8008434:	f801 0b01 	strb.w	r0, [r1], #1
 8008438:	e7f4      	b.n	8008424 <arp_cache_init+0x14>
 800843a:	bf00      	nop
 800843c:	100011a4 	andne	r1, r0, r4, lsr #3

08008440 <igmp_init>:
 8008440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008444:	2200      	movs	r2, #0
 8008446:	4b26      	ldr	r3, [pc, #152]	; (80084e0 <igmp_init+0xa0>)
 8008448:	4605      	mov	r5, r0
 800844a:	4608      	mov	r0, r1
 800844c:	4611      	mov	r1, r2
 800844e:	f103 0408 	add.w	r4, r3, #8
 8008452:	42a3      	cmp	r3, r4
 8008454:	d140      	bne.n	80084d8 <igmp_init+0x98>
 8008456:	3201      	adds	r2, #1
 8008458:	2a46      	cmp	r2, #70	; 0x46
 800845a:	d1f8      	bne.n	800844e <igmp_init+0xe>
 800845c:	4c21      	ldr	r4, [pc, #132]	; (80084e4 <igmp_init+0xa4>)
 800845e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80084f0 <igmp_init+0xb0>
 8008462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80084f4 <igmp_init+0xb4>
 8008466:	2600      	movs	r6, #0
 8008468:	f8c4 629c 	str.w	r6, [r4, #668]	; 0x29c
 800846c:	8726      	strh	r6, [r4, #56]	; 0x38
 800846e:	f00c f899 	bl	80145a4 <igmp_set_ip>
 8008472:	2301      	movs	r3, #1
 8008474:	8023      	strh	r3, [r4, #0]
 8008476:	235e      	movs	r3, #94	; 0x5e
 8008478:	70a3      	strb	r3, [r4, #2]
 800847a:	2206      	movs	r2, #6
 800847c:	4629      	mov	r1, r5
 800847e:	f104 000e 	add.w	r0, r4, #14
 8008482:	f00c f847 	bl	8014514 <memcpy.isra.0>
 8008486:	f240 4394 	movw	r3, #1172	; 0x494
 800848a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848c:	2316      	movs	r3, #22
 800848e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008490:	4b15      	ldr	r3, [pc, #84]	; (80084e8 <igmp_init+0xa8>)
 8008492:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008498:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800849c:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80084a0:	2206      	movs	r2, #6
 80084a2:	f8c4 901c 	str.w	r9, [r4, #28]
 80084a6:	f8c4 8014 	str.w	r8, [r4, #20]
 80084aa:	4629      	mov	r1, r5
 80084ac:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80084b0:	8327      	strh	r7, [r4, #24]
 80084b2:	85a6      	strh	r6, [r4, #44]	; 0x2c
 80084b4:	f00c f82e 	bl	8014514 <memcpy.isra.0>
 80084b8:	23e0      	movs	r3, #224	; 0xe0
 80084ba:	4a0c      	ldr	r2, [pc, #48]	; (80084ec <igmp_init+0xac>)
 80084bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80084c0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80084c4:	e9c4 2317 	strd	r2, r3, [r4, #92]	; 0x5c
 80084c8:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
 80084cc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
 80084d0:	f8a4 704c 	strh.w	r7, [r4, #76]	; 0x4c
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80084d8:	f803 1b01 	strb.w	r1, [r3], #1
 80084dc:	e7b9      	b.n	8008452 <igmp_init+0x12>
 80084de:	bf00      	nop
 80084e0:	10001394 	mulne	r0, r4, r3
 80084e4:	10001328 	andne	r1, r0, r8, lsr #6
 80084e8:	005e0001 	subseq	r0, lr, r1
 80084ec:	04940200 	ldreq	r0, [r4], #512	; 0x200
 80084f0:	02010040 	andeq	r0, r1, #64	; 0x40
 80084f4:	00460008 	subeq	r0, r6, r8

080084f8 <igmp_shutdown>:
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	2500      	movs	r5, #0
 80084fc:	4c07      	ldr	r4, [pc, #28]	; (800851c <igmp_shutdown+0x24>)
 80084fe:	462e      	mov	r6, r5
 8008500:	6820      	ldr	r0, [r4, #0]
 8008502:	b120      	cbz	r0, 800850e <igmp_shutdown+0x16>
 8008504:	f00c f8aa 	bl	801465c <igmp_leave>
 8008508:	6026      	str	r6, [r4, #0]
 800850a:	7166      	strb	r6, [r4, #5]
 800850c:	7126      	strb	r6, [r4, #4]
 800850e:	3501      	adds	r5, #1
 8008510:	2d46      	cmp	r5, #70	; 0x46
 8008512:	f104 0408 	add.w	r4, r4, #8
 8008516:	d1f3      	bne.n	8008500 <igmp_shutdown+0x8>
 8008518:	bd70      	pop	{r4, r5, r6, pc}
 800851a:	bf00      	nop
 800851c:	10001394 	mulne	r0, r4, r3

08008520 <ip_init>:
 8008520:	b538      	push	{r3, r4, r5, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	460d      	mov	r5, r1
 8008526:	f7ff fec9 	bl	80082bc <udp_init>
 800852a:	4629      	mov	r1, r5
 800852c:	4620      	mov	r0, r4
 800852e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008532:	f7ff bf85 	b.w	8008440 <igmp_init>

08008536 <ip_shutdown>:
 8008536:	b508      	push	{r3, lr}
 8008538:	f7ff ffde 	bl	80084f8 <igmp_shutdown>
 800853c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008540:	f7ff bee8 	b.w	8008314 <udp_shutdown>

08008544 <console_init>:
 8008544:	b508      	push	{r3, lr}
 8008546:	f00d ff45 	bl	80163d4 <uart0_init>
 800854a:	4804      	ldr	r0, [pc, #16]	; (800855c <console_init+0x18>)
 800854c:	f00d ff6c 	bl	8016428 <uart0_puts>
 8008550:	4803      	ldr	r0, [pc, #12]	; (8008560 <console_init+0x1c>)
 8008552:	f00d ff69 	bl	8016428 <uart0_puts>
 8008556:	2000      	movs	r0, #0
 8008558:	bd08      	pop	{r3, pc}
 800855a:	bf00      	nop
 800855c:	0801894c 	stmdaeq	r1, {r2, r3, r6, r8, fp, pc}
 8008560:	0801bf20 	stmdaeq	r1, {r5, r8, r9, sl, fp, ip, sp, pc}

08008564 <net_handle>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4c0c      	ldr	r4, [pc, #48]	; (8008598 <net_handle+0x34>)
 8008568:	4620      	mov	r0, r4
 800856a:	f00e fdbd 	bl	80170e8 <emac_eth_recv>
 800856e:	2800      	cmp	r0, #0
 8008570:	dd07      	ble.n	8008582 <net_handle+0x1e>
 8008572:	6820      	ldr	r0, [r4, #0]
 8008574:	8983      	ldrh	r3, [r0, #12]
 8008576:	2b08      	cmp	r3, #8
 8008578:	d107      	bne.n	800858a <net_handle+0x26>
 800857a:	f000 faab 	bl	8008ad4 <ip_handle>
 800857e:	f00e fdc7 	bl	8017110 <emac_free_pkt>
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008586:	f00a b85b 	b.w	8012640 <net_timers_run>
 800858a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800858e:	d1f6      	bne.n	800857e <net_handle+0x1a>
 8008590:	f000 fa44 	bl	8008a1c <arp_handle>
 8008594:	e7f3      	b.n	800857e <net_handle+0x1a>
 8008596:	bf00      	nop
 8008598:	200092dc 	ldrdcs	r9, [r0], -ip

0800859c <tcp_handle>:
 800859c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085a0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80085a2:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80085a6:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80085aa:	4cbd      	ldr	r4, [pc, #756]	; (80088a0 <tcp_handle+0x304>)
 80085ac:	ba5b      	rev16	r3, r3
 80085ae:	8443      	strh	r3, [r0, #34]	; 0x22
 80085b0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80085b2:	4605      	mov	r5, r0
 80085b4:	ba5b      	rev16	r3, r3
 80085b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80085b8:	f00a f8b6 	bl	8012728 <_bswap32>
 80085bc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80085be:	f8b4 25f0 	ldrh.w	r2, [r4, #1520]	; 0x5f0
 80085c2:	ba5b      	rev16	r3, r3
 80085c4:	862b      	strh	r3, [r5, #48]	; 0x30
 80085c6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80085c8:	ba5b      	rev16	r3, r3
 80085ca:	86ab      	strh	r3, [r5, #52]	; 0x34
 80085cc:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d152      	bne.n	8008678 <tcp_handle+0xdc>
 80085d2:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80085d6:	2b01      	cmp	r3, #1
 80085d8:	d00f      	beq.n	80085fa <tcp_handle+0x5e>
 80085da:	2204      	movs	r2, #4
 80085dc:	f105 011a 	add.w	r1, r5, #26
 80085e0:	4668      	mov	r0, sp
 80085e2:	f00a f897 	bl	8012714 <memcpy.isra.0>
 80085e6:	f8b4 25f2 	ldrh.w	r2, [r4, #1522]	; 0x5f2
 80085ea:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d143      	bne.n	8008678 <tcp_handle+0xdc>
 80085f0:	f8d4 25f4 	ldr.w	r2, [r4, #1524]	; 0x5f4
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d13e      	bne.n	8008678 <tcp_handle+0xdc>
 80085fa:	2204      	movs	r2, #4
 80085fc:	eb0d 0002 	add.w	r0, sp, r2
 8008600:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8008604:	f00a f886 	bl	8012714 <memcpy.isra.0>
 8008608:	2204      	movs	r2, #4
 800860a:	eb0d 0002 	add.w	r0, sp, r2
 800860e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8008612:	9e01      	ldr	r6, [sp, #4]
 8008614:	f00a f87e 	bl	8012714 <memcpy.isra.0>
 8008618:	f894 2630 	ldrb.w	r2, [r4, #1584]	; 0x630
 800861c:	9f01      	ldr	r7, [sp, #4]
 800861e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8008622:	2a01      	cmp	r2, #1
 8008624:	d01e      	beq.n	8008664 <tcp_handle+0xc8>
 8008626:	1ed3      	subs	r3, r2, #3
 8008628:	2b07      	cmp	r3, #7
 800862a:	d825      	bhi.n	8008678 <tcp_handle+0xdc>
 800862c:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8008630:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8008634:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8008638:	fa98 f898 	rev16.w	r8, r8
 800863c:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 8008640:	f8b4 1628 	ldrh.w	r1, [r4, #1576]	; 0x628
 8008644:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8008648:	fa13 f888 	uxtah	r8, r3, r8
 800864c:	fa1f f888 	uxth.w	r8, r8
 8008650:	2900      	cmp	r1, #0
 8008652:	d14d      	bne.n	80086f0 <tcp_handle+0x154>
 8008654:	f1b8 0f00 	cmp.w	r8, #0
 8008658:	d178      	bne.n	800874c <tcp_handle+0x1b0>
 800865a:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800865e:	42bb      	cmp	r3, r7
 8008660:	d174      	bne.n	800874c <tcp_handle+0x1b0>
 8008662:	e053      	b.n	800870c <tcp_handle+0x170>
 8008664:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008668:	075a      	lsls	r2, r3, #29
 800866a:	d405      	bmi.n	8008678 <tcp_handle+0xdc>
 800866c:	06d8      	lsls	r0, r3, #27
 800866e:	d506      	bpl.n	800867e <tcp_handle+0xe2>
 8008670:	498c      	ldr	r1, [pc, #560]	; (80088a4 <tcp_handle+0x308>)
 8008672:	4628      	mov	r0, r5
 8008674:	f00a f922 	bl	80128bc <_send_reset>
 8008678:	b004      	add	sp, #16
 800867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800867e:	0799      	lsls	r1, r3, #30
 8008680:	d5fa      	bpl.n	8008678 <tcp_handle+0xdc>
 8008682:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8008686:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800868a:	f105 011a 	add.w	r1, r5, #26
 800868e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008692:	4668      	mov	r0, sp
 8008694:	2204      	movs	r2, #4
 8008696:	f8a4 35f2 	strh.w	r3, [r4, #1522]	; 0x5f2
 800869a:	f00a f83b 	bl	8012714 <memcpy.isra.0>
 800869e:	2206      	movs	r2, #6
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4881      	ldr	r0, [pc, #516]	; (80088a8 <tcp_handle+0x30c>)
 80086a4:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80086a8:	18a9      	adds	r1, r5, r2
 80086aa:	f00a f833 	bl	8012714 <memcpy.isra.0>
 80086ae:	f8d4 2618 	ldr.w	r2, [r4, #1560]	; 0x618
 80086b2:	487c      	ldr	r0, [pc, #496]	; (80088a4 <tcp_handle+0x308>)
 80086b4:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 80086b8:	1c7b      	adds	r3, r7, #1
 80086ba:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086be:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 80086c2:	a901      	add	r1, sp, #4
 80086c4:	2312      	movs	r3, #18
 80086c6:	f88d 300c 	strb.w	r3, [sp, #12]
 80086ca:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80086ce:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80086d2:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80086d6:	f00a f84d 	bl	8012774 <_tcp_send_package>
 80086da:	f8d4 3618 	ldr.w	r3, [r4, #1560]	; 0x618
 80086de:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80086e2:	1c5a      	adds	r2, r3, #1
 80086e4:	f8c4 2604 	str.w	r2, [r4, #1540]	; 0x604
 80086e8:	2303      	movs	r3, #3
 80086ea:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80086ee:	e7c3      	b.n	8008678 <tcp_handle+0xdc>
 80086f0:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80086f4:	eba3 0c07 	sub.w	ip, r3, r7
 80086f8:	f1b8 0f00 	cmp.w	r8, #0
 80086fc:	d10e      	bne.n	800871c <tcp_handle+0x180>
 80086fe:	f1bc 0f00 	cmp.w	ip, #0
 8008702:	dc23      	bgt.n	800874c <tcp_handle+0x1b0>
 8008704:	1afb      	subs	r3, r7, r3
 8008706:	1a5b      	subs	r3, r3, r1
 8008708:	2b00      	cmp	r3, #0
 800870a:	da1f      	bge.n	800874c <tcp_handle+0x1b0>
 800870c:	0743      	lsls	r3, r0, #29
 800870e:	d534      	bpl.n	800877a <tcp_handle+0x1de>
 8008710:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008714:	4863      	ldr	r0, [pc, #396]	; (80088a4 <tcp_handle+0x308>)
 8008716:	f009 ffe3 	bl	80126e0 <_init_tcb>
 800871a:	e7ad      	b.n	8008678 <tcp_handle+0xdc>
 800871c:	f1bc 0f00 	cmp.w	ip, #0
 8008720:	dc06      	bgt.n	8008730 <tcp_handle+0x194>
 8008722:	eba7 0c03 	sub.w	ip, r7, r3
 8008726:	ebac 0c01 	sub.w	ip, ip, r1
 800872a:	f1bc 0f00 	cmp.w	ip, #0
 800872e:	dbed      	blt.n	800870c <tcp_handle+0x170>
 8008730:	eb08 0c07 	add.w	ip, r8, r7
 8008734:	f103 0e01 	add.w	lr, r3, #1
 8008738:	ebae 0e0c 	sub.w	lr, lr, ip
 800873c:	f1be 0f00 	cmp.w	lr, #0
 8008740:	dc04      	bgt.n	800874c <tcp_handle+0x1b0>
 8008742:	43db      	mvns	r3, r3
 8008744:	1a5b      	subs	r3, r3, r1
 8008746:	eb13 0f0c 	cmn.w	r3, ip
 800874a:	d4df      	bmi.n	800870c <tcp_handle+0x170>
 800874c:	0742      	lsls	r2, r0, #29
 800874e:	d506      	bpl.n	800875e <tcp_handle+0x1c2>
 8008750:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008754:	4853      	ldr	r0, [pc, #332]	; (80088a4 <tcp_handle+0x308>)
 8008756:	f009 ffc3 	bl	80126e0 <_init_tcb>
 800875a:	2301      	movs	r3, #1
 800875c:	e7c5      	b.n	80086ea <tcp_handle+0x14e>
 800875e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008762:	9301      	str	r3, [sp, #4]
 8008764:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 8008768:	9302      	str	r3, [sp, #8]
 800876a:	484e      	ldr	r0, [pc, #312]	; (80088a4 <tcp_handle+0x308>)
 800876c:	2310      	movs	r3, #16
 800876e:	a901      	add	r1, sp, #4
 8008770:	f88d 300c 	strb.w	r3, [sp, #12]
 8008774:	f009 fffe 	bl	8012774 <_tcp_send_package>
 8008778:	e77e      	b.n	8008678 <tcp_handle+0xdc>
 800877a:	0781      	lsls	r1, r0, #30
 800877c:	d505      	bpl.n	800878a <tcp_handle+0x1ee>
 800877e:	2a03      	cmp	r2, #3
 8008780:	d0eb      	beq.n	800875a <tcp_handle+0x1be>
 8008782:	4948      	ldr	r1, [pc, #288]	; (80088a4 <tcp_handle+0x308>)
 8008784:	4628      	mov	r0, r5
 8008786:	f00a f899 	bl	80128bc <_send_reset>
 800878a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800878e:	06da      	lsls	r2, r3, #27
 8008790:	f57f af72 	bpl.w	8008678 <tcp_handle+0xdc>
 8008794:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008798:	3b03      	subs	r3, #3
 800879a:	2b07      	cmp	r3, #7
 800879c:	d81d      	bhi.n	80087da <tcp_handle+0x23e>
 800879e:	e8df f003 	tbb	[pc, r3]
 80087a2:	87878704 	strhi	r8, [r7, r4, lsl #14]
 80087a6:	c5ba8787 	ldrgt	r8, [sl, #1927]!	; 0x787
 80087aa:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80087ae:	1b9b      	subs	r3, r3, r6
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	dc0e      	bgt.n	80087d2 <tcp_handle+0x236>
 80087b4:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80087b8:	1af3      	subs	r3, r6, r3
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	dc09      	bgt.n	80087d2 <tcp_handle+0x236>
 80087be:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80087c2:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80087c6:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80087ca:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80087ce:	2304      	movs	r3, #4
 80087d0:	e78b      	b.n	80086ea <tcp_handle+0x14e>
 80087d2:	4934      	ldr	r1, [pc, #208]	; (80088a4 <tcp_handle+0x308>)
 80087d4:	4628      	mov	r0, r5
 80087d6:	f00a f871 	bl	80128bc <_send_reset>
 80087da:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 80087de:	3b04      	subs	r3, #4
 80087e0:	2b02      	cmp	r3, #2
 80087e2:	d837      	bhi.n	8008854 <tcp_handle+0x2b8>
 80087e4:	f1b8 0f00 	cmp.w	r8, #0
 80087e8:	d034      	beq.n	8008854 <tcp_handle+0x2b8>
 80087ea:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 80087ee:	42bb      	cmp	r3, r7
 80087f0:	f040 80ad 	bne.w	800894e <tcp_handle+0x3b2>
 80087f4:	f8b4 7634 	ldrh.w	r7, [r4, #1588]	; 0x634
 80087f8:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80088ac <tcp_handle+0x310>
 80087fc:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8008800:	435f      	muls	r7, r3
 8008802:	1d38      	adds	r0, r7, #4
 8008804:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8008808:	4642      	mov	r2, r8
 800880a:	4449      	add	r1, r9
 800880c:	4450      	add	r0, sl
 800880e:	f009 ff81 	bl	8012714 <memcpy.isra.0>
 8008812:	f8b4 2628 	ldrh.w	r2, [r4, #1576]	; 0x628
 8008816:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800881a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800881e:	f8a4 2628 	strh.w	r2, [r4, #1576]	; 0x628
 8008822:	4427      	add	r7, r4
 8008824:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008828:	f8a7 8bec 	strh.w	r8, [r7, #3052]	; 0xbec
 800882c:	4443      	add	r3, r8
 800882e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008832:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 8008836:	a901      	add	r1, sp, #4
 8008838:	2310      	movs	r3, #16
 800883a:	f1aa 0044 	sub.w	r0, sl, #68	; 0x44
 800883e:	f88d 300c 	strb.w	r3, [sp, #12]
 8008842:	f009 ff97 	bl	8012774 <_tcp_send_package>
 8008846:	f8b4 3634 	ldrh.w	r3, [r4, #1588]	; 0x634
 800884a:	3301      	adds	r3, #1
 800884c:	f003 0301 	and.w	r3, r3, #1
 8008850:	f8a4 3634 	strh.w	r3, [r4, #1588]	; 0x634
 8008854:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 8008858:	2b02      	cmp	r3, #2
 800885a:	f67f af0d 	bls.w	8008678 <tcp_handle+0xdc>
 800885e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8008862:	07db      	lsls	r3, r3, #31
 8008864:	f57f af08 	bpl.w	8008678 <tcp_handle+0xdc>
 8008868:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800886c:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008870:	480c      	ldr	r0, [pc, #48]	; (80088a4 <tcp_handle+0x308>)
 8008872:	3301      	adds	r3, #1
 8008874:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8008878:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
 800887c:	a901      	add	r1, sp, #4
 800887e:	2310      	movs	r3, #16
 8008880:	f88d 300c 	strb.w	r3, [sp, #12]
 8008884:	f009 ff76 	bl	8012774 <_tcp_send_package>
 8008888:	f894 3630 	ldrb.w	r3, [r4, #1584]	; 0x630
 800888c:	2b05      	cmp	r3, #5
 800888e:	d067      	beq.n	8008960 <tcp_handle+0x3c4>
 8008890:	d861      	bhi.n	8008956 <tcp_handle+0x3ba>
 8008892:	3b03      	subs	r3, #3
 8008894:	2b01      	cmp	r3, #1
 8008896:	f63f aeef 	bhi.w	8008678 <tcp_handle+0xdc>
 800889a:	2307      	movs	r3, #7
 800889c:	e725      	b.n	80086ea <tcp_handle+0x14e>
 800889e:	bf00      	nop
 80088a0:	10000000 	andne	r0, r0, r0
 80088a4:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 80088a8:	100005f8 	strdne	r0, [r0], -r8
 80088ac:	10000634 	andne	r0, r0, r4, lsr r6
 80088b0:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 80088b4:	1b99      	subs	r1, r3, r6
 80088b6:	d51a      	bpl.n	80088ee <tcp_handle+0x352>
 80088b8:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 80088bc:	1ab2      	subs	r2, r6, r2
 80088be:	2a00      	cmp	r2, #0
 80088c0:	dc15      	bgt.n	80088ee <tcp_handle+0x352>
 80088c2:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
 80088c6:	f8d4 3610 	ldr.w	r3, [r4, #1552]	; 0x610
 80088ca:	1bda      	subs	r2, r3, r7
 80088cc:	2a00      	cmp	r2, #0
 80088ce:	db07      	blt.n	80088e0 <tcp_handle+0x344>
 80088d0:	42bb      	cmp	r3, r7
 80088d2:	d182      	bne.n	80087da <tcp_handle+0x23e>
 80088d4:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 80088d8:	1b9b      	subs	r3, r3, r6
 80088da:	2b00      	cmp	r3, #0
 80088dc:	f73f af7d 	bgt.w	80087da <tcp_handle+0x23e>
 80088e0:	f8c4 a608 	str.w	sl, [r4, #1544]	; 0x608
 80088e4:	f8c4 7610 	str.w	r7, [r4, #1552]	; 0x610
 80088e8:	f8c4 6614 	str.w	r6, [r4, #1556]	; 0x614
 80088ec:	e775      	b.n	80087da <tcp_handle+0x23e>
 80088ee:	1af3      	subs	r3, r6, r3
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	dc09      	bgt.n	8008908 <tcp_handle+0x36c>
 80088f4:	2900      	cmp	r1, #0
 80088f6:	f73f af70 	bgt.w	80087da <tcp_handle+0x23e>
 80088fa:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80088fe:	1af3      	subs	r3, r6, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f73f af6a 	bgt.w	80087da <tcp_handle+0x23e>
 8008906:	e7de      	b.n	80088c6 <tcp_handle+0x32a>
 8008908:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800890c:	1b9a      	subs	r2, r3, r6
 800890e:	2a00      	cmp	r2, #0
 8008910:	f6bf af63 	bge.w	80087da <tcp_handle+0x23e>
 8008914:	e725      	b.n	8008762 <tcp_handle+0x1c6>
 8008916:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 800891a:	42b3      	cmp	r3, r6
 800891c:	f47f af5d 	bne.w	80087da <tcp_handle+0x23e>
 8008920:	f8b4 15f0 	ldrh.w	r1, [r4, #1520]	; 0x5f0
 8008924:	4811      	ldr	r0, [pc, #68]	; (800896c <tcp_handle+0x3d0>)
 8008926:	f009 fedb 	bl	80126e0 <_init_tcb>
 800892a:	e756      	b.n	80087da <tcp_handle+0x23e>
 800892c:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008930:	42b3      	cmp	r3, r6
 8008932:	f47f af52 	bne.w	80087da <tcp_handle+0x23e>
 8008936:	f8d4 3624 	ldr.w	r3, [r4, #1572]	; 0x624
 800893a:	9302      	str	r3, [sp, #8]
 800893c:	480b      	ldr	r0, [pc, #44]	; (800896c <tcp_handle+0x3d0>)
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	2310      	movs	r3, #16
 8008942:	a901      	add	r1, sp, #4
 8008944:	f88d 300c 	strb.w	r3, [sp, #12]
 8008948:	f009 ff14 	bl	8012774 <_tcp_send_package>
 800894c:	e745      	b.n	80087da <tcp_handle+0x23e>
 800894e:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8008952:	9201      	str	r2, [sp, #4]
 8008954:	e708      	b.n	8008768 <tcp_handle+0x1cc>
 8008956:	2b06      	cmp	r3, #6
 8008958:	f47f ae8e 	bne.w	8008678 <tcp_handle+0xdc>
 800895c:	230a      	movs	r3, #10
 800895e:	e6c4      	b.n	80086ea <tcp_handle+0x14e>
 8008960:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8008964:	42b3      	cmp	r3, r6
 8008966:	d0f9      	beq.n	800895c <tcp_handle+0x3c0>
 8008968:	2308      	movs	r3, #8
 800896a:	e6be      	b.n	80086ea <tcp_handle+0x14e>
 800896c:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08008970 <udp_handle>:
 8008970:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008974:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8008976:	ba5b      	rev16	r3, r3
 8008978:	b29b      	uxth	r3, r3
 800897a:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800897e:	2a01      	cmp	r2, #1
 8008980:	4607      	mov	r7, r0
 8008982:	d904      	bls.n	800898e <udp_handle+0x1e>
 8008984:	2b7b      	cmp	r3, #123	; 0x7b
 8008986:	d002      	beq.n	800898e <udp_handle+0x1e>
 8008988:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800898c:	d308      	bcc.n	80089a0 <udp_handle+0x30>
 800898e:	4a21      	ldr	r2, [pc, #132]	; (8008a14 <udp_handle+0xa4>)
 8008990:	2400      	movs	r4, #0
 8008992:	f852 1b04 	ldr.w	r1, [r2], #4
 8008996:	4299      	cmp	r1, r3
 8008998:	d005      	beq.n	80089a6 <udp_handle+0x36>
 800899a:	3401      	adds	r4, #1
 800899c:	2c08      	cmp	r4, #8
 800899e:	d1f8      	bne.n	8008992 <udp_handle+0x22>
 80089a0:	b002      	add	sp, #8
 80089a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089a6:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80089a8:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8008a18 <udp_handle+0xa8>
 80089ac:	f640 3394 	movw	r3, #2964	; 0xb94
 80089b0:	435c      	muls	r4, r3
 80089b2:	ba76      	rev16	r6, r6
 80089b4:	f838 5004 	ldrh.w	r5, [r8, r4]
 80089b8:	3e08      	subs	r6, #8
 80089ba:	b2b6      	uxth	r6, r6
 80089bc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80089c0:	435d      	muls	r5, r3
 80089c2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80089c6:	f104 0004 	add.w	r0, r4, #4
 80089ca:	bf28      	it	cs
 80089cc:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 80089d0:	4428      	add	r0, r5
 80089d2:	4632      	mov	r2, r6
 80089d4:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 80089d8:	4440      	add	r0, r8
 80089da:	f00a f835 	bl	8012a48 <memcpy.isra.0>
 80089de:	2204      	movs	r2, #4
 80089e0:	eb0d 0002 	add.w	r0, sp, r2
 80089e4:	f107 011a 	add.w	r1, r7, #26
 80089e8:	f00a f82e 	bl	8012a48 <memcpy.isra.0>
 80089ec:	192b      	adds	r3, r5, r4
 80089ee:	4443      	add	r3, r8
 80089f0:	9a01      	ldr	r2, [sp, #4]
 80089f2:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80089f6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80089f8:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80089fc:	ba52      	rev16	r2, r2
 80089fe:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8008a02:	f838 3004 	ldrh.w	r3, [r8, r4]
 8008a06:	3301      	adds	r3, #1
 8008a08:	f003 0301 	and.w	r3, r3, #1
 8008a0c:	f828 3004 	strh.w	r3, [r8, r4]
 8008a10:	e7c6      	b.n	80089a0 <udp_handle+0x30>
 8008a12:	bf00      	nop
 8008a14:	20009304 	andcs	r9, r0, r4, lsl #6
 8008a18:	20009324 	andcs	r9, r0, r4, lsr #6

08008a1c <arp_handle>:
 8008a1c:	8a83      	ldrh	r3, [r0, #20]
 8008a1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a22:	d003      	beq.n	8008a2c <arp_handle+0x10>
 8008a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a28:	d002      	beq.n	8008a30 <arp_handle+0x14>
 8008a2a:	4770      	bx	lr
 8008a2c:	f00b bad2 	b.w	8013fd4 <arp_handle_request>
 8008a30:	f00b baf8 	b.w	8014024 <arp_handle_reply>

08008a34 <igmp_handle>:
 8008a34:	7b83      	ldrb	r3, [r0, #14]
 8008a36:	2b45      	cmp	r3, #69	; 0x45
 8008a38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a3c:	d117      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a3e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008a42:	2b11      	cmp	r3, #17
 8008a44:	d113      	bne.n	8008a6e <igmp_handle+0x3a>
 8008a46:	4b21      	ldr	r3, [pc, #132]	; (8008acc <igmp_handle+0x98>)
 8008a48:	9300      	str	r3, [sp, #0]
 8008a4a:	f100 051d 	add.w	r5, r0, #29
 8008a4e:	466a      	mov	r2, sp
 8008a50:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8008a54:	462b      	mov	r3, r5
 8008a56:	42b3      	cmp	r3, r6
 8008a58:	d10c      	bne.n	8008a74 <igmp_handle+0x40>
 8008a5a:	2401      	movs	r4, #1
 8008a5c:	4b1c      	ldr	r3, [pc, #112]	; (8008ad0 <igmp_handle+0x9c>)
 8008a5e:	2100      	movs	r1, #0
 8008a60:	f8d3 729c 	ldr.w	r7, [r3, #668]	; 0x29c
 8008a64:	f04f 0c01 	mov.w	ip, #1
 8008a68:	336c      	adds	r3, #108	; 0x6c
 8008a6a:	428f      	cmp	r7, r1
 8008a6c:	d10a      	bne.n	8008a84 <igmp_handle+0x50>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a74:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008a78:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8008a7c:	428c      	cmp	r4, r1
 8008a7e:	d0ea      	beq.n	8008a56 <igmp_handle+0x22>
 8008a80:	2400      	movs	r4, #0
 8008a82:	e7eb      	b.n	8008a5c <igmp_handle+0x28>
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	9201      	str	r2, [sp, #4]
 8008a88:	b924      	cbnz	r4, 8008a94 <igmp_handle+0x60>
 8008a8a:	f10d 0e04 	add.w	lr, sp, #4
 8008a8e:	462a      	mov	r2, r5
 8008a90:	42b2      	cmp	r2, r6
 8008a92:	d10e      	bne.n	8008ab2 <igmp_handle+0x7e>
 8008a94:	f893 e005 	ldrb.w	lr, [r3, #5]
 8008a98:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 8008a9c:	f1be 0f01 	cmp.w	lr, #1
 8008aa0:	d110      	bne.n	8008ac4 <igmp_handle+0x90>
 8008aa2:	f893 e004 	ldrb.w	lr, [r3, #4]
 8008aa6:	4596      	cmp	lr, r2
 8008aa8:	d909      	bls.n	8008abe <igmp_handle+0x8a>
 8008aaa:	0852      	lsrs	r2, r2, #1
 8008aac:	3201      	adds	r2, #1
 8008aae:	711a      	strb	r2, [r3, #4]
 8008ab0:	e005      	b.n	8008abe <igmp_handle+0x8a>
 8008ab2:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8008ab6:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 8008aba:	45c1      	cmp	r9, r8
 8008abc:	d0e8      	beq.n	8008a90 <igmp_handle+0x5c>
 8008abe:	3101      	adds	r1, #1
 8008ac0:	3308      	adds	r3, #8
 8008ac2:	e7d2      	b.n	8008a6a <igmp_handle+0x36>
 8008ac4:	f883 c005 	strb.w	ip, [r3, #5]
 8008ac8:	e7ef      	b.n	8008aaa <igmp_handle+0x76>
 8008aca:	bf00      	nop
 8008acc:	010000e0 	smlatteq	r0, r0, r0, r0
 8008ad0:	10001328 	andne	r1, r0, r8, lsr #6

08008ad4 <ip_handle>:
 8008ad4:	7b82      	ldrb	r2, [r0, #14]
 8008ad6:	7dc3      	ldrb	r3, [r0, #23]
 8008ad8:	2a45      	cmp	r2, #69	; 0x45
 8008ada:	d003      	beq.n	8008ae4 <ip_handle+0x10>
 8008adc:	2b02      	cmp	r3, #2
 8008ade:	d111      	bne.n	8008b04 <ip_handle+0x30>
 8008ae0:	f7ff bfa8 	b.w	8008a34 <igmp_handle>
 8008ae4:	2b06      	cmp	r3, #6
 8008ae6:	d00b      	beq.n	8008b00 <ip_handle+0x2c>
 8008ae8:	d804      	bhi.n	8008af4 <ip_handle+0x20>
 8008aea:	2b01      	cmp	r3, #1
 8008aec:	d006      	beq.n	8008afc <ip_handle+0x28>
 8008aee:	2b02      	cmp	r3, #2
 8008af0:	d0f6      	beq.n	8008ae0 <ip_handle+0xc>
 8008af2:	4770      	bx	lr
 8008af4:	2b11      	cmp	r3, #17
 8008af6:	d105      	bne.n	8008b04 <ip_handle+0x30>
 8008af8:	f7ff bf3a 	b.w	8008970 <udp_handle>
 8008afc:	f000 b804 	b.w	8008b08 <icmp_handle>
 8008b00:	f7ff bd4c 	b.w	800859c <tcp_handle>
 8008b04:	4770      	bx	lr
	...

08008b08 <icmp_handle>:
 8008b08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b0a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8008b0e:	2b08      	cmp	r3, #8
 8008b10:	4604      	mov	r4, r0
 8008b12:	d13e      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b14:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8008b18:	2d00      	cmp	r5, #0
 8008b1a:	d13a      	bne.n	8008b92 <icmp_handle+0x8a>
 8008b1c:	1d86      	adds	r6, r0, #6
 8008b1e:	4631      	mov	r1, r6
 8008b20:	2206      	movs	r2, #6
 8008b22:	f00b fdfe 	bl	8014722 <memcpy.isra.0>
 8008b26:	4630      	mov	r0, r6
 8008b28:	491b      	ldr	r1, [pc, #108]	; (8008b98 <icmp_handle+0x90>)
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	f00b fdf9 	bl	8014722 <memcpy.isra.0>
 8008b30:	8a63      	ldrh	r3, [r4, #18]
 8008b32:	f104 061a 	add.w	r6, r4, #26
 8008b36:	43db      	mvns	r3, r3
 8008b38:	4631      	mov	r1, r6
 8008b3a:	8263      	strh	r3, [r4, #18]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	f104 001e 	add.w	r0, r4, #30
 8008b42:	f00b fdee 	bl	8014722 <memcpy.isra.0>
 8008b46:	4b15      	ldr	r3, [pc, #84]	; (8008b9c <icmp_handle+0x94>)
 8008b48:	2204      	movs	r2, #4
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	9301      	str	r3, [sp, #4]
 8008b4e:	eb0d 0102 	add.w	r1, sp, r2
 8008b52:	4630      	mov	r0, r6
 8008b54:	f104 060e 	add.w	r6, r4, #14
 8008b58:	f00b fde3 	bl	8014722 <memcpy.isra.0>
 8008b5c:	2114      	movs	r1, #20
 8008b5e:	7625      	strb	r5, [r4, #24]
 8008b60:	7665      	strb	r5, [r4, #25]
 8008b62:	4630      	mov	r0, r6
 8008b64:	f00b fdc3 	bl	80146ee <net_chksum>
 8008b68:	8a21      	ldrh	r1, [r4, #16]
 8008b6a:	8320      	strh	r0, [r4, #24]
 8008b6c:	ba49      	rev16	r1, r1
 8008b6e:	b289      	uxth	r1, r1
 8008b70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8008b74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8008b78:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8008b7c:	4630      	mov	r0, r6
 8008b7e:	f00b fdb6 	bl	80146ee <net_chksum>
 8008b82:	8a21      	ldrh	r1, [r4, #16]
 8008b84:	84a0      	strh	r0, [r4, #36]	; 0x24
 8008b86:	ba49      	rev16	r1, r1
 8008b88:	b289      	uxth	r1, r1
 8008b8a:	310e      	adds	r1, #14
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f00e fac3 	bl	8017118 <emac_eth_send>
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop
 8008b98:	200092d4 	ldrdcs	r9, [r0], -r4
 8008b9c:	200092c8 	andcs	r9, r0, r8, asr #5
 8008ba0:	0801c470 	stmdaeq	r1, {r4, r5, r6, sl, lr, pc}
 8008ba4:	20000000 	andcs	r0, r0, r0
 8008ba8:	200000f8 	strdcs	r0, [r0], -r8
 8008bac:	200000f8 	strdcs	r0, [r0], -r8
 8008bb0:	2002d348 	andcs	sp, r2, r8, asr #6

08008bb4 <Reset_Handler>:
 8008bb4:	2100      	movs	r1, #0
 8008bb6:	e003      	b.n	8008bc0 <DataInit>

08008bb8 <CopyData>:
 8008bb8:	4b0a      	ldr	r3, [pc, #40]	; (8008be4 <Zerobss+0x10>)
 8008bba:	585b      	ldr	r3, [r3, r1]
 8008bbc:	5043      	str	r3, [r0, r1]
 8008bbe:	3104      	adds	r1, #4

08008bc0 <DataInit>:
 8008bc0:	4809      	ldr	r0, [pc, #36]	; (8008be8 <Zerobss+0x14>)
 8008bc2:	4b0a      	ldr	r3, [pc, #40]	; (8008bec <Zerobss+0x18>)
 8008bc4:	1842      	adds	r2, r0, r1
 8008bc6:	429a      	cmp	r2, r3
 8008bc8:	d3f6      	bcc.n	8008bb8 <CopyData>
 8008bca:	4a09      	ldr	r2, [pc, #36]	; (8008bf0 <Zerobss+0x1c>)
 8008bcc:	e002      	b.n	8008bd4 <Zerobss>

08008bce <FillZerobss>:
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f842 3b04 	str.w	r3, [r2], #4

08008bd4 <Zerobss>:
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <Zerobss+0x20>)
 8008bd6:	429a      	cmp	r2, r3
 8008bd8:	d3f9      	bcc.n	8008bce <FillZerobss>
 8008bda:	f00d fc5b 	bl	8016494 <SystemInit>
 8008bde:	f000 fc65 	bl	80094ac <main>
 8008be2:	4770      	bx	lr
 8008be4:	0801c470 	stmdaeq	r1, {r4, r5, r6, sl, lr, pc}
 8008be8:	20000000 	andcs	r0, r0, r0
 8008bec:	200000f8 	strdcs	r0, [r0], -r8
 8008bf0:	200000f8 	strdcs	r0, [r0], -r8
 8008bf4:	2002d348 	andcs	sp, r2, r8, asr #6

08008bf8 <__aeabi_d2f>:
 8008bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8008c00:	bf24      	itt	cs
 8008c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8008c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8008c0a:	d90d      	bls.n	8008c28 <__aeabi_d2f+0x30>
 8008c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8008c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008c20:	bf08      	it	eq
 8008c22:	f020 0001 	biceq.w	r0, r0, #1
 8008c26:	4770      	bx	lr
 8008c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8008c2c:	d121      	bne.n	8008c72 <__aeabi_d2f+0x7a>
 8008c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8008c32:	bfbc      	itt	lt
 8008c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8008c38:	4770      	bxlt	lr
 8008c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008c42:	f1c2 0218 	rsb	r2, r2, #24
 8008c46:	f1c2 0c20 	rsb	ip, r2, #32
 8008c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8008c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8008c52:	bf18      	it	ne
 8008c54:	f040 0001 	orrne.w	r0, r0, #1
 8008c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008c64:	ea40 000c 	orr.w	r0, r0, ip
 8008c68:	fa23 f302 	lsr.w	r3, r3, r2
 8008c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008c70:	e7cc      	b.n	8008c0c <__aeabi_d2f+0x14>
 8008c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008c76:	d107      	bne.n	8008c88 <__aeabi_d2f+0x90>
 8008c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008c7c:	bf1e      	ittt	ne
 8008c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8008c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8008c86:	4770      	bxne	lr
 8008c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8008c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop

08008c98 <__aeabi_uldivmod>:
 8008c98:	b953      	cbnz	r3, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9a:	b94a      	cbnz	r2, 8008cb0 <__aeabi_uldivmod+0x18>
 8008c9c:	2900      	cmp	r1, #0
 8008c9e:	bf08      	it	eq
 8008ca0:	2800      	cmpeq	r0, #0
 8008ca2:	bf1c      	itt	ne
 8008ca4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008ca8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008cac:	f000 b80c 	b.w	8008cc8 <__aeabi_idiv0>
 8008cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8008cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008cb8:	f001 fc4e 	bl	800a558 <__udivmoddi4>
 8008cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr

08008cc8 <__aeabi_idiv0>:
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop

08008ccc <__aeabi_drsub>:
 8008ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008cd0:	e002      	b.n	8008cd8 <__adddf3>
 8008cd2:	bf00      	nop

08008cd4 <__aeabi_dsub>:
 8008cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008cd8 <__adddf3>:
 8008cd8:	b530      	push	{r4, r5, lr}
 8008cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008ce2:	ea94 0f05 	teq	r4, r5
 8008ce6:	bf08      	it	eq
 8008ce8:	ea90 0f02 	teqeq	r0, r2
 8008cec:	bf1f      	itttt	ne
 8008cee:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008cfe:	f000 80e2 	beq.w	8008ec6 <__adddf3+0x1ee>
 8008d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008d0a:	bfb8      	it	lt
 8008d0c:	426d      	neglt	r5, r5
 8008d0e:	dd0c      	ble.n	8008d2a <__adddf3+0x52>
 8008d10:	442c      	add	r4, r5
 8008d12:	ea80 0202 	eor.w	r2, r0, r2
 8008d16:	ea81 0303 	eor.w	r3, r1, r3
 8008d1a:	ea82 0000 	eor.w	r0, r2, r0
 8008d1e:	ea83 0101 	eor.w	r1, r3, r1
 8008d22:	ea80 0202 	eor.w	r2, r0, r2
 8008d26:	ea81 0303 	eor.w	r3, r1, r3
 8008d2a:	2d36      	cmp	r5, #54	; 0x36
 8008d2c:	bf88      	it	hi
 8008d2e:	bd30      	pophi	{r4, r5, pc}
 8008d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008d40:	d002      	beq.n	8008d48 <__adddf3+0x70>
 8008d42:	4240      	negs	r0, r0
 8008d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008d54:	d002      	beq.n	8008d5c <__adddf3+0x84>
 8008d56:	4252      	negs	r2, r2
 8008d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5c:	ea94 0f05 	teq	r4, r5
 8008d60:	f000 80a7 	beq.w	8008eb2 <__adddf3+0x1da>
 8008d64:	f1a4 0401 	sub.w	r4, r4, #1
 8008d68:	f1d5 0e20 	rsbs	lr, r5, #32
 8008d6c:	db0d      	blt.n	8008d8a <__adddf3+0xb2>
 8008d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008d72:	fa22 f205 	lsr.w	r2, r2, r5
 8008d76:	1880      	adds	r0, r0, r2
 8008d78:	f141 0100 	adc.w	r1, r1, #0
 8008d7c:	fa03 f20e 	lsl.w	r2, r3, lr
 8008d80:	1880      	adds	r0, r0, r2
 8008d82:	fa43 f305 	asr.w	r3, r3, r5
 8008d86:	4159      	adcs	r1, r3
 8008d88:	e00e      	b.n	8008da8 <__adddf3+0xd0>
 8008d8a:	f1a5 0520 	sub.w	r5, r5, #32
 8008d8e:	f10e 0e20 	add.w	lr, lr, #32
 8008d92:	2a01      	cmp	r2, #1
 8008d94:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008d98:	bf28      	it	cs
 8008d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008d9e:	fa43 f305 	asr.w	r3, r3, r5
 8008da2:	18c0      	adds	r0, r0, r3
 8008da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008dac:	d507      	bpl.n	8008dbe <__adddf3+0xe6>
 8008dae:	f04f 0e00 	mov.w	lr, #0
 8008db2:	f1dc 0c00 	rsbs	ip, ip, #0
 8008db6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008dba:	eb6e 0101 	sbc.w	r1, lr, r1
 8008dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008dc2:	d31b      	bcc.n	8008dfc <__adddf3+0x124>
 8008dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008dc8:	d30c      	bcc.n	8008de4 <__adddf3+0x10c>
 8008dca:	0849      	lsrs	r1, r1, #1
 8008dcc:	ea5f 0030 	movs.w	r0, r0, rrx
 8008dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008dd4:	f104 0401 	add.w	r4, r4, #1
 8008dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008de0:	f080 809a 	bcs.w	8008f18 <__adddf3+0x240>
 8008de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008de8:	bf08      	it	eq
 8008dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008dee:	f150 0000 	adcs.w	r0, r0, #0
 8008df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008df6:	ea41 0105 	orr.w	r1, r1, r5
 8008dfa:	bd30      	pop	{r4, r5, pc}
 8008dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008e00:	4140      	adcs	r0, r0
 8008e02:	eb41 0101 	adc.w	r1, r1, r1
 8008e06:	3c01      	subs	r4, #1
 8008e08:	bf28      	it	cs
 8008e0a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8008e0e:	d2e9      	bcs.n	8008de4 <__adddf3+0x10c>
 8008e10:	f091 0f00 	teq	r1, #0
 8008e14:	bf04      	itt	eq
 8008e16:	4601      	moveq	r1, r0
 8008e18:	2000      	moveq	r0, #0
 8008e1a:	fab1 f381 	clz	r3, r1
 8008e1e:	bf08      	it	eq
 8008e20:	3320      	addeq	r3, #32
 8008e22:	f1a3 030b 	sub.w	r3, r3, #11
 8008e26:	f1b3 0220 	subs.w	r2, r3, #32
 8008e2a:	da0c      	bge.n	8008e46 <__adddf3+0x16e>
 8008e2c:	320c      	adds	r2, #12
 8008e2e:	dd08      	ble.n	8008e42 <__adddf3+0x16a>
 8008e30:	f102 0c14 	add.w	ip, r2, #20
 8008e34:	f1c2 020c 	rsb	r2, r2, #12
 8008e38:	fa01 f00c 	lsl.w	r0, r1, ip
 8008e3c:	fa21 f102 	lsr.w	r1, r1, r2
 8008e40:	e00c      	b.n	8008e5c <__adddf3+0x184>
 8008e42:	f102 0214 	add.w	r2, r2, #20
 8008e46:	bfd8      	it	le
 8008e48:	f1c2 0c20 	rsble	ip, r2, #32
 8008e4c:	fa01 f102 	lsl.w	r1, r1, r2
 8008e50:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008e54:	bfdc      	itt	le
 8008e56:	ea41 010c 	orrle.w	r1, r1, ip
 8008e5a:	4090      	lslle	r0, r2
 8008e5c:	1ae4      	subs	r4, r4, r3
 8008e5e:	bfa2      	ittt	ge
 8008e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008e64:	4329      	orrge	r1, r5
 8008e66:	bd30      	popge	{r4, r5, pc}
 8008e68:	ea6f 0404 	mvn.w	r4, r4
 8008e6c:	3c1f      	subs	r4, #31
 8008e6e:	da1c      	bge.n	8008eaa <__adddf3+0x1d2>
 8008e70:	340c      	adds	r4, #12
 8008e72:	dc0e      	bgt.n	8008e92 <__adddf3+0x1ba>
 8008e74:	f104 0414 	add.w	r4, r4, #20
 8008e78:	f1c4 0220 	rsb	r2, r4, #32
 8008e7c:	fa20 f004 	lsr.w	r0, r0, r4
 8008e80:	fa01 f302 	lsl.w	r3, r1, r2
 8008e84:	ea40 0003 	orr.w	r0, r0, r3
 8008e88:	fa21 f304 	lsr.w	r3, r1, r4
 8008e8c:	ea45 0103 	orr.w	r1, r5, r3
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	f1c4 040c 	rsb	r4, r4, #12
 8008e96:	f1c4 0220 	rsb	r2, r4, #32
 8008e9a:	fa20 f002 	lsr.w	r0, r0, r2
 8008e9e:	fa01 f304 	lsl.w	r3, r1, r4
 8008ea2:	ea40 0003 	orr.w	r0, r0, r3
 8008ea6:	4629      	mov	r1, r5
 8008ea8:	bd30      	pop	{r4, r5, pc}
 8008eaa:	fa21 f004 	lsr.w	r0, r1, r4
 8008eae:	4629      	mov	r1, r5
 8008eb0:	bd30      	pop	{r4, r5, pc}
 8008eb2:	f094 0f00 	teq	r4, #0
 8008eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008eba:	bf06      	itte	eq
 8008ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008ec0:	3401      	addeq	r4, #1
 8008ec2:	3d01      	subne	r5, #1
 8008ec4:	e74e      	b.n	8008d64 <__adddf3+0x8c>
 8008ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008eca:	bf18      	it	ne
 8008ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008ed0:	d029      	beq.n	8008f26 <__adddf3+0x24e>
 8008ed2:	ea94 0f05 	teq	r4, r5
 8008ed6:	bf08      	it	eq
 8008ed8:	ea90 0f02 	teqeq	r0, r2
 8008edc:	d005      	beq.n	8008eea <__adddf3+0x212>
 8008ede:	ea54 0c00 	orrs.w	ip, r4, r0
 8008ee2:	bf04      	itt	eq
 8008ee4:	4619      	moveq	r1, r3
 8008ee6:	4610      	moveq	r0, r2
 8008ee8:	bd30      	pop	{r4, r5, pc}
 8008eea:	ea91 0f03 	teq	r1, r3
 8008eee:	bf1e      	ittt	ne
 8008ef0:	2100      	movne	r1, #0
 8008ef2:	2000      	movne	r0, #0
 8008ef4:	bd30      	popne	{r4, r5, pc}
 8008ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008efa:	d105      	bne.n	8008f08 <__adddf3+0x230>
 8008efc:	0040      	lsls	r0, r0, #1
 8008efe:	4149      	adcs	r1, r1
 8008f00:	bf28      	it	cs
 8008f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008f06:	bd30      	pop	{r4, r5, pc}
 8008f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008f0c:	bf3c      	itt	cc
 8008f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008f12:	bd30      	popcc	{r4, r5, pc}
 8008f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008f20:	f04f 0000 	mov.w	r0, #0
 8008f24:	bd30      	pop	{r4, r5, pc}
 8008f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008f2a:	bf1a      	itte	ne
 8008f2c:	4619      	movne	r1, r3
 8008f2e:	4610      	movne	r0, r2
 8008f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008f34:	bf1c      	itt	ne
 8008f36:	460b      	movne	r3, r1
 8008f38:	4602      	movne	r2, r0
 8008f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008f3e:	bf06      	itte	eq
 8008f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008f44:	ea91 0f03 	teqeq	r1, r3
 8008f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008f4c:	bd30      	pop	{r4, r5, pc}
 8008f4e:	bf00      	nop

08008f50 <__aeabi_ui2d>:
 8008f50:	f090 0f00 	teq	r0, #0
 8008f54:	bf04      	itt	eq
 8008f56:	2100      	moveq	r1, #0
 8008f58:	4770      	bxeq	lr
 8008f5a:	b530      	push	{r4, r5, lr}
 8008f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f64:	f04f 0500 	mov.w	r5, #0
 8008f68:	f04f 0100 	mov.w	r1, #0
 8008f6c:	e750      	b.n	8008e10 <__adddf3+0x138>
 8008f6e:	bf00      	nop

08008f70 <__aeabi_i2d>:
 8008f70:	f090 0f00 	teq	r0, #0
 8008f74:	bf04      	itt	eq
 8008f76:	2100      	moveq	r1, #0
 8008f78:	4770      	bxeq	lr
 8008f7a:	b530      	push	{r4, r5, lr}
 8008f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008f88:	bf48      	it	mi
 8008f8a:	4240      	negmi	r0, r0
 8008f8c:	f04f 0100 	mov.w	r1, #0
 8008f90:	e73e      	b.n	8008e10 <__adddf3+0x138>
 8008f92:	bf00      	nop

08008f94 <__aeabi_f2d>:
 8008f94:	0042      	lsls	r2, r0, #1
 8008f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008f9a:	ea4f 0131 	mov.w	r1, r1, rrx
 8008f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8008fa2:	bf1f      	itttt	ne
 8008fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008fb0:	4770      	bxne	lr
 8008fb2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008fb6:	bf08      	it	eq
 8008fb8:	4770      	bxeq	lr
 8008fba:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008fbe:	bf04      	itt	eq
 8008fc0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008fc4:	4770      	bxeq	lr
 8008fc6:	b530      	push	{r4, r5, lr}
 8008fc8:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008fd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008fd4:	e71c      	b.n	8008e10 <__adddf3+0x138>
 8008fd6:	bf00      	nop

08008fd8 <__aeabi_ul2d>:
 8008fd8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fdc:	bf08      	it	eq
 8008fde:	4770      	bxeq	lr
 8008fe0:	b530      	push	{r4, r5, lr}
 8008fe2:	f04f 0500 	mov.w	r5, #0
 8008fe6:	e00a      	b.n	8008ffe <__aeabi_l2d+0x16>

08008fe8 <__aeabi_l2d>:
 8008fe8:	ea50 0201 	orrs.w	r2, r0, r1
 8008fec:	bf08      	it	eq
 8008fee:	4770      	bxeq	lr
 8008ff0:	b530      	push	{r4, r5, lr}
 8008ff2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008ff6:	d502      	bpl.n	8008ffe <__aeabi_l2d+0x16>
 8008ff8:	4240      	negs	r0, r0
 8008ffa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ffe:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009002:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009006:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800900a:	f43f aed8 	beq.w	8008dbe <__adddf3+0xe6>
 800900e:	f04f 0203 	mov.w	r2, #3
 8009012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009016:	bf18      	it	ne
 8009018:	3203      	addne	r2, #3
 800901a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800901e:	bf18      	it	ne
 8009020:	3203      	addne	r2, #3
 8009022:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009026:	f1c2 0320 	rsb	r3, r2, #32
 800902a:	fa00 fc03 	lsl.w	ip, r0, r3
 800902e:	fa20 f002 	lsr.w	r0, r0, r2
 8009032:	fa01 fe03 	lsl.w	lr, r1, r3
 8009036:	ea40 000e 	orr.w	r0, r0, lr
 800903a:	fa21 f102 	lsr.w	r1, r1, r2
 800903e:	4414      	add	r4, r2
 8009040:	e6bd      	b.n	8008dbe <__adddf3+0xe6>
 8009042:	bf00      	nop

08009044 <ADC_IRQHandler>:
 8009044:	e7fe      	b.n	8009044 <ADC_IRQHandler>

08009046 <memcmp>:
 8009046:	b510      	push	{r4, lr}
 8009048:	3901      	subs	r1, #1
 800904a:	4402      	add	r2, r0
 800904c:	4290      	cmp	r0, r2
 800904e:	d101      	bne.n	8009054 <memcmp+0xe>
 8009050:	2000      	movs	r0, #0
 8009052:	e005      	b.n	8009060 <memcmp+0x1a>
 8009054:	7803      	ldrb	r3, [r0, #0]
 8009056:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800905a:	42a3      	cmp	r3, r4
 800905c:	d001      	beq.n	8009062 <memcmp+0x1c>
 800905e:	1b18      	subs	r0, r3, r4
 8009060:	bd10      	pop	{r4, pc}
 8009062:	3001      	adds	r0, #1
 8009064:	e7f2      	b.n	800904c <memcmp+0x6>

08009066 <memcpy>:
 8009066:	b510      	push	{r4, lr}
 8009068:	1e43      	subs	r3, r0, #1
 800906a:	440a      	add	r2, r1
 800906c:	4291      	cmp	r1, r2
 800906e:	d100      	bne.n	8009072 <memcpy+0xc>
 8009070:	bd10      	pop	{r4, pc}
 8009072:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009076:	f803 4f01 	strb.w	r4, [r3, #1]!
 800907a:	e7f7      	b.n	800906c <memcpy+0x6>

0800907c <LightSet::FullOn()>:
 800907c:	4770      	bx	lr

0800907e <DisplayHandler::~DisplayHandler()>:
 800907e:	4770      	bx	lr

08009080 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8009080:	4770      	bx	lr
	...

08009084 <PixelDmxStartStop::Start()>:
 8009084:	4b02      	ldr	r3, [pc, #8]	; (8009090 <PixelDmxStartStop::Start()+0xc>)
 8009086:	2204      	movs	r2, #4
 8009088:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	40020000 	andmi	r0, r2, r0

08009094 <PixelDmxStartStop::Stop()>:
 8009094:	4b02      	ldr	r3, [pc, #8]	; (80090a0 <PixelDmxStartStop::Stop()+0xc>)
 8009096:	2204      	movs	r2, #4
 8009098:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800909c:	4770      	bx	lr
 800909e:	bf00      	nop
 80090a0:	40020000 	andmi	r0, r2, r0

080090a4 <LightSet64with4::~LightSet64with4()>:
 80090a4:	4770      	bx	lr

080090a6 <LightSet64with4::Start(unsigned int)>:
 80090a6:	291f      	cmp	r1, #31
 80090a8:	460b      	mov	r3, r1
 80090aa:	d805      	bhi.n	80090b8 <LightSet64with4::Start(unsigned int)+0x12>
 80090ac:	6842      	ldr	r2, [r0, #4]
 80090ae:	b11a      	cbz	r2, 80090b8 <LightSet64with4::Start(unsigned int)+0x12>
 80090b0:	6813      	ldr	r3, [r2, #0]
 80090b2:	4610      	mov	r0, r2
 80090b4:	689b      	ldr	r3, [r3, #8]
 80090b6:	4718      	bx	r3
 80090b8:	6880      	ldr	r0, [r0, #8]
 80090ba:	b120      	cbz	r0, 80090c6 <LightSet64with4::Start(unsigned int)+0x20>
 80090bc:	6802      	ldr	r2, [r0, #0]
 80090be:	f003 0103 	and.w	r1, r3, #3
 80090c2:	6892      	ldr	r2, [r2, #8]
 80090c4:	4710      	bx	r2
 80090c6:	4770      	bx	lr

080090c8 <LightSet64with4::Stop(unsigned int)>:
 80090c8:	293f      	cmp	r1, #63	; 0x3f
 80090ca:	460b      	mov	r3, r1
 80090cc:	d805      	bhi.n	80090da <LightSet64with4::Stop(unsigned int)+0x12>
 80090ce:	6842      	ldr	r2, [r0, #4]
 80090d0:	b11a      	cbz	r2, 80090da <LightSet64with4::Stop(unsigned int)+0x12>
 80090d2:	6813      	ldr	r3, [r2, #0]
 80090d4:	4610      	mov	r0, r2
 80090d6:	68db      	ldr	r3, [r3, #12]
 80090d8:	4718      	bx	r3
 80090da:	6880      	ldr	r0, [r0, #8]
 80090dc:	b120      	cbz	r0, 80090e8 <LightSet64with4::Stop(unsigned int)+0x20>
 80090de:	6802      	ldr	r2, [r0, #0]
 80090e0:	f003 0103 	and.w	r1, r3, #3
 80090e4:	68d2      	ldr	r2, [r2, #12]
 80090e6:	4710      	bx	r2
 80090e8:	4770      	bx	lr

080090ea <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)>:
 80090ea:	293f      	cmp	r1, #63	; 0x3f
 80090ec:	b4f0      	push	{r4, r5, r6, r7}
 80090ee:	460c      	mov	r4, r1
 80090f0:	4615      	mov	r5, r2
 80090f2:	461e      	mov	r6, r3
 80090f4:	d807      	bhi.n	8009106 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 80090f6:	6847      	ldr	r7, [r0, #4]
 80090f8:	b12f      	cbz	r7, 8009106 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x1c>
 80090fa:	6838      	ldr	r0, [r7, #0]
 80090fc:	6904      	ldr	r4, [r0, #16]
 80090fe:	4638      	mov	r0, r7
 8009100:	46a4      	mov	ip, r4
 8009102:	bcf0      	pop	{r4, r5, r6, r7}
 8009104:	4760      	bx	ip
 8009106:	6880      	ldr	r0, [r0, #8]
 8009108:	b138      	cbz	r0, 800911a <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x30>
 800910a:	6803      	ldr	r3, [r0, #0]
 800910c:	691f      	ldr	r7, [r3, #16]
 800910e:	462a      	mov	r2, r5
 8009110:	4633      	mov	r3, r6
 8009112:	f004 0103 	and.w	r1, r4, #3
 8009116:	46bc      	mov	ip, r7
 8009118:	e7f3      	b.n	8009102 <LightSet64with4::SetData(unsigned int, unsigned char const*, unsigned int)+0x18>
 800911a:	bcf0      	pop	{r4, r5, r6, r7}
 800911c:	4770      	bx	lr

0800911e <LightSet64with4::Blackout(bool)>:
 800911e:	b570      	push	{r4, r5, r6, lr}
 8009120:	4604      	mov	r4, r0
 8009122:	6840      	ldr	r0, [r0, #4]
 8009124:	460d      	mov	r5, r1
 8009126:	b110      	cbz	r0, 800912e <LightSet64with4::Blackout(bool)+0x10>
 8009128:	6803      	ldr	r3, [r0, #0]
 800912a:	695b      	ldr	r3, [r3, #20]
 800912c:	4798      	blx	r3
 800912e:	68a0      	ldr	r0, [r4, #8]
 8009130:	b128      	cbz	r0, 800913e <LightSet64with4::Blackout(bool)+0x20>
 8009132:	6803      	ldr	r3, [r0, #0]
 8009134:	4629      	mov	r1, r5
 8009136:	695b      	ldr	r3, [r3, #20]
 8009138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800913c:	4718      	bx	r3
 800913e:	bd70      	pop	{r4, r5, r6, pc}

08009140 <LightSet64with4::Print()>:
 8009140:	b510      	push	{r4, lr}
 8009142:	4604      	mov	r4, r0
 8009144:	6840      	ldr	r0, [r0, #4]
 8009146:	b110      	cbz	r0, 800914e <LightSet64with4::Print()+0xe>
 8009148:	6803      	ldr	r3, [r0, #0]
 800914a:	69db      	ldr	r3, [r3, #28]
 800914c:	4798      	blx	r3
 800914e:	68a0      	ldr	r0, [r4, #8]
 8009150:	b120      	cbz	r0, 800915c <LightSet64with4::Print()+0x1c>
 8009152:	6803      	ldr	r3, [r0, #0]
 8009154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009158:	69db      	ldr	r3, [r3, #28]
 800915a:	4718      	bx	r3
 800915c:	bd10      	pop	{r4, pc}

0800915e <LightSet64with4::SetDmxStartAddress(unsigned short)>:
 800915e:	2000      	movs	r0, #0
 8009160:	4770      	bx	lr

08009162 <LightSet64with4::GetDmxStartAddress()>:
 8009162:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009166:	4770      	bx	lr

08009168 <LightSet64with4::GetDmxFootprint()>:
 8009168:	2000      	movs	r0, #0
 800916a:	4770      	bx	lr

0800916c <LightSet64with4::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800916c:	2000      	movs	r0, #0
 800916e:	4770      	bx	lr

08009170 <RDMNetDevice::CopyUID(unsigned char*)>:
 8009170:	460b      	mov	r3, r1
 8009172:	2206      	movs	r2, #6
 8009174:	1d01      	adds	r1, r0, #4
 8009176:	4618      	mov	r0, r3
 8009178:	f7ff bf75 	b.w	8009066 <memcpy>

0800917c <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 800917c:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009180:	e7f6      	b.n	8009170 <RDMNetDevice::CopyUID(unsigned char*)>
	...

08009184 <RDMNetDevice::CopyCID(unsigned char*)>:
 8009184:	4608      	mov	r0, r1
 8009186:	2210      	movs	r2, #16
 8009188:	4901      	ldr	r1, [pc, #4]	; (8009190 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 800918a:	f7ff bf6c 	b.w	8009066 <memcpy>
 800918e:	bf00      	nop
 8009190:	200007e7 	andcs	r0, r0, r7, ror #15

08009194 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8009194:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009198:	e7f4      	b.n	8009184 <RDMNetDevice::CopyCID(unsigned char*)>
 800919a:	bf00      	nop

0800919c <FactoryDefaults::~FactoryDefaults()>:
 800919c:	4770      	bx	lr

0800919e <dmxconfigudp::atoi(char const*, unsigned int)>:
 800919e:	b530      	push	{r4, r5, lr}
 80091a0:	4401      	add	r1, r0
 80091a2:	2300      	movs	r3, #0
 80091a4:	250a      	movs	r5, #10
 80091a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80091aa:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80091ae:	2c09      	cmp	r4, #9
 80091b0:	d805      	bhi.n	80091be <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
 80091b2:	fb05 2303 	mla	r3, r5, r3, r2
 80091b6:	4281      	cmp	r1, r0
 80091b8:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 80091bc:	d1f3      	bne.n	80091a6 <dmxconfigudp::atoi(char const*, unsigned int)+0x8>
 80091be:	4618      	mov	r0, r3
 80091c0:	bd30      	pop	{r4, r5, pc}

080091c2 <DisplayHandler::~DisplayHandler()>:
 80091c2:	b510      	push	{r4, lr}
 80091c4:	4604      	mov	r4, r0
 80091c6:	f00c febd 	bl	8015f44 <operator delete(void*)>
 80091ca:	4620      	mov	r0, r4
 80091cc:	bd10      	pop	{r4, pc}

080091ce <LightSet64with4::~LightSet64with4()>:
 80091ce:	b510      	push	{r4, lr}
 80091d0:	4604      	mov	r4, r0
 80091d2:	f00c feb7 	bl	8015f44 <operator delete(void*)>
 80091d6:	4620      	mov	r0, r4
 80091d8:	bd10      	pop	{r4, pc}

080091da <PixelDmxStartStop::~PixelDmxStartStop()>:
 80091da:	b510      	push	{r4, lr}
 80091dc:	4604      	mov	r4, r0
 80091de:	f00c feb1 	bl	8015f44 <operator delete(void*)>
 80091e2:	4620      	mov	r0, r4
 80091e4:	bd10      	pop	{r4, pc}

080091e6 <FactoryDefaults::~FactoryDefaults()>:
 80091e6:	b510      	push	{r4, lr}
 80091e8:	4604      	mov	r4, r0
 80091ea:	f00c feab 	bl	8015f44 <operator delete(void*)>
 80091ee:	4620      	mov	r0, r4
 80091f0:	bd10      	pop	{r4, pc}
	...

080091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80091f4:	b510      	push	{r4, lr}
 80091f6:	4c03      	ldr	r4, [pc, #12]	; (8009204 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80091f8:	30d0      	adds	r0, #208	; 0xd0
 80091fa:	4622      	mov	r2, r4
 80091fc:	f004 ffd2 	bl	800e1a4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8009200:	4620      	mov	r0, r4
 8009202:	bd10      	pop	{r4, pc}
 8009204:	200006e8 	andcs	r0, r0, r8, ror #13

08009208 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8009208:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800920c:	e7f2      	b.n	80091f4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 800920e:	bf00      	nop

08009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8009210:	b110      	cbz	r0, 8009218 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8009212:	6803      	ldr	r3, [r0, #0]
 8009214:	6a1b      	ldr	r3, [r3, #32]
 8009216:	4718      	bx	r3
 8009218:	4770      	bx	lr

0800921a <Display::PutChar(int) [clone .isra.0]>:
 800921a:	b110      	cbz	r0, 8009222 <Display::PutChar(int) [clone .isra.0]+0x8>
 800921c:	6803      	ldr	r3, [r0, #0]
 800921e:	695b      	ldr	r3, [r3, #20]
 8009220:	4718      	bx	r3
 8009222:	4770      	bx	lr

08009224 <DisplayHandler::Print(unsigned int)>:
 8009224:	b538      	push	{r3, r4, r5, lr}
 8009226:	7903      	ldrb	r3, [r0, #4]
 8009228:	b1f3      	cbz	r3, 8009268 <DisplayHandler::Print(unsigned int)+0x44>
 800922a:	2904      	cmp	r1, #4
 800922c:	bf98      	it	ls
 800922e:	4b0f      	ldrls	r3, [pc, #60]	; (800926c <DisplayHandler::Print(unsigned int)+0x48>)
 8009230:	4d0f      	ldr	r5, [pc, #60]	; (8009270 <DisplayHandler::Print(unsigned int)+0x4c>)
 8009232:	bf98      	it	ls
 8009234:	5c5c      	ldrbls	r4, [r3, r1]
 8009236:	682b      	ldr	r3, [r5, #0]
 8009238:	6998      	ldr	r0, [r3, #24]
 800923a:	bf88      	it	hi
 800923c:	2455      	movhi	r4, #85	; 0x55
 800923e:	b178      	cbz	r0, 8009260 <DisplayHandler::Print(unsigned int)+0x3c>
 8009240:	7901      	ldrb	r1, [r0, #4]
 8009242:	3901      	subs	r1, #1
 8009244:	b2c9      	uxtb	r1, r1
 8009246:	b168      	cbz	r0, 8009264 <DisplayHandler::Print(unsigned int)+0x40>
 8009248:	7942      	ldrb	r2, [r0, #5]
 800924a:	3a01      	subs	r2, #1
 800924c:	b2d2      	uxtb	r2, r2
 800924e:	f7ff ffdf 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009252:	682b      	ldr	r3, [r5, #0]
 8009254:	4621      	mov	r1, r4
 8009256:	6998      	ldr	r0, [r3, #24]
 8009258:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800925c:	f7ff bfdd 	b.w	800921a <Display::PutChar(int) [clone .isra.0]>
 8009260:	4601      	mov	r1, r0
 8009262:	e7ee      	b.n	8009242 <DisplayHandler::Print(unsigned int)+0x1e>
 8009264:	4602      	mov	r2, r0
 8009266:	e7f0      	b.n	800924a <DisplayHandler::Print(unsigned int)+0x26>
 8009268:	bd38      	pop	{r3, r4, r5, pc}
 800926a:	bf00      	nop
 800926c:	08018c08 	stmdaeq	r1, {r3, sl, fp, pc}
 8009270:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4

08009274 <RDMNetDevice::~RDMNetDevice()>:
 8009274:	b510      	push	{r4, lr}
 8009276:	4b06      	ldr	r3, [pc, #24]	; (8009290 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8009278:	4604      	mov	r4, r0
 800927a:	f840 3b88 	str.w	r3, [r0], #136
 800927e:	f004 fa37 	bl	800d6f0 <RDMSubDevices::~RDMSubDevices()>
 8009282:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8009286:	f004 fa13 	bl	800d6b0 <RDMSensors::~RDMSensors()>
 800928a:	4620      	mov	r0, r4
 800928c:	bd10      	pop	{r4, pc}
 800928e:	bf00      	nop
 8009290:	0801a1b0 	stmdaeq	r1, {r4, r5, r7, r8, sp, pc}

08009294 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8009294:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8009298:	e7ec      	b.n	8009274 <RDMNetDevice::~RDMNetDevice()>
 800929a:	bf00      	nop

0800929c <RDMNetDevice::~RDMNetDevice()>:
 800929c:	b510      	push	{r4, lr}
 800929e:	4604      	mov	r4, r0
 80092a0:	f7ff ffe8 	bl	8009274 <RDMNetDevice::~RDMNetDevice()>
 80092a4:	4620      	mov	r0, r4
 80092a6:	f00c fe4d 	bl	8015f44 <operator delete(void*)>
 80092aa:	4620      	mov	r0, r4
 80092ac:	bd10      	pop	{r4, pc}

080092ae <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 80092ae:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80092b2:	e7f3      	b.n	800929c <RDMNetDevice::~RDMNetDevice()>

080092b4 <Display::Printf(unsigned char, char const*, ...)>:
 80092b4:	b40c      	push	{r2, r3}
 80092b6:	b570      	push	{r4, r5, r6, lr}
 80092b8:	6984      	ldr	r4, [r0, #24]
 80092ba:	b08a      	sub	sp, #40	; 0x28
 80092bc:	4605      	mov	r5, r0
 80092be:	460e      	mov	r6, r1
 80092c0:	b174      	cbz	r4, 80092e0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80092c2:	ab0f      	add	r3, sp, #60	; 0x3c
 80092c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80092c6:	9301      	str	r3, [sp, #4]
 80092c8:	2120      	movs	r1, #32
 80092ca:	a802      	add	r0, sp, #8
 80092cc:	f001 f934 	bl	800a538 <vsnprintf>
 80092d0:	4604      	mov	r4, r0
 80092d2:	69a8      	ldr	r0, [r5, #24]
 80092d4:	6803      	ldr	r3, [r0, #0]
 80092d6:	aa02      	add	r2, sp, #8
 80092d8:	69dd      	ldr	r5, [r3, #28]
 80092da:	4631      	mov	r1, r6
 80092dc:	b2a3      	uxth	r3, r4
 80092de:	47a8      	blx	r5
 80092e0:	4620      	mov	r0, r4
 80092e2:	b00a      	add	sp, #40	; 0x28
 80092e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092e8:	b002      	add	sp, #8
 80092ea:	4770      	bx	lr

080092ec <Display::TextStatus(char const*)>:
 80092ec:	6983      	ldr	r3, [r0, #24]
 80092ee:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092f2:	4604      	mov	r4, r0
 80092f4:	460d      	mov	r5, r1
 80092f6:	2b00      	cmp	r3, #0
 80092f8:	d03b      	beq.n	8009372 <Display::TextStatus(char const*)+0x86>
 80092fa:	791e      	ldrb	r6, [r3, #4]
 80092fc:	795f      	ldrb	r7, [r3, #5]
 80092fe:	b92e      	cbnz	r6, 800930c <Display::TextStatus(char const*)+0x20>
 8009300:	4b1d      	ldr	r3, [pc, #116]	; (8009378 <Display::TextStatus(char const*)+0x8c>)
 8009302:	4a1e      	ldr	r2, [pc, #120]	; (800937c <Display::TextStatus(char const*)+0x90>)
 8009304:	481e      	ldr	r0, [pc, #120]	; (8009380 <Display::TextStatus(char const*)+0x94>)
 8009306:	2199      	movs	r1, #153	; 0x99
 8009308:	f000 fdca 	bl	8009ea0 <__assert_func>
 800930c:	b92f      	cbnz	r7, 800931a <Display::TextStatus(char const*)+0x2e>
 800930e:	4b1d      	ldr	r3, [pc, #116]	; (8009384 <Display::TextStatus(char const*)+0x98>)
 8009310:	4a1a      	ldr	r2, [pc, #104]	; (800937c <Display::TextStatus(char const*)+0x90>)
 8009312:	481b      	ldr	r0, [pc, #108]	; (8009380 <Display::TextStatus(char const*)+0x94>)
 8009314:	219a      	movs	r1, #154	; 0x9a
 8009316:	f000 fdc3 	bl	8009ea0 <__assert_func>
 800931a:	1e7a      	subs	r2, r7, #1
 800931c:	b2d2      	uxtb	r2, r2
 800931e:	69a0      	ldr	r0, [r4, #24]
 8009320:	9201      	str	r2, [sp, #4]
 8009322:	2100      	movs	r1, #0
 8009324:	f7ff ff74 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8009328:	f04f 0800 	mov.w	r8, #0
 800932c:	3e01      	subs	r6, #1
 800932e:	4546      	cmp	r6, r8
 8009330:	9a01      	ldr	r2, [sp, #4]
 8009332:	69a0      	ldr	r0, [r4, #24]
 8009334:	d816      	bhi.n	8009364 <Display::TextStatus(char const*)+0x78>
 8009336:	2100      	movs	r1, #0
 8009338:	f7ff ff6a 	bl	8009210 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800933c:	69a0      	ldr	r0, [r4, #24]
 800933e:	b1c0      	cbz	r0, 8009372 <Display::TextStatus(char const*)+0x86>
 8009340:	7901      	ldrb	r1, [r0, #4]
 8009342:	2300      	movs	r3, #0
 8009344:	5cea      	ldrb	r2, [r5, r3]
 8009346:	b11a      	cbz	r2, 8009350 <Display::TextStatus(char const*)+0x64>
 8009348:	1c5a      	adds	r2, r3, #1
 800934a:	4299      	cmp	r1, r3
 800934c:	4613      	mov	r3, r2
 800934e:	dcf9      	bgt.n	8009344 <Display::TextStatus(char const*)+0x58>
 8009350:	6802      	ldr	r2, [r0, #0]
 8009352:	69d4      	ldr	r4, [r2, #28]
 8009354:	b2db      	uxtb	r3, r3
 8009356:	462a      	mov	r2, r5
 8009358:	4639      	mov	r1, r7
 800935a:	46a4      	mov	ip, r4
 800935c:	b002      	add	sp, #8
 800935e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009362:	4760      	bx	ip
 8009364:	2120      	movs	r1, #32
 8009366:	9201      	str	r2, [sp, #4]
 8009368:	f108 0801 	add.w	r8, r8, #1
 800936c:	f7ff ff55 	bl	800921a <Display::PutChar(int) [clone .isra.0]>
 8009370:	e7dd      	b.n	800932e <Display::TextStatus(char const*)+0x42>
 8009372:	b002      	add	sp, #8
 8009374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009378:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 800937c:	080188bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, pc}
 8009380:	080188c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, fp, pc}
 8009384:	080188ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, pc}

08009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8009388:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800938a:	4605      	mov	r5, r0
 800938c:	461e      	mov	r6, r3
 800938e:	460f      	mov	r7, r1
 8009390:	4614      	mov	r4, r2
 8009392:	f7ff ffab 	bl	80092ec <Display::TextStatus(char const*)>
 8009396:	7c6b      	ldrb	r3, [r5, #17]
 8009398:	b19b      	cbz	r3, 80093c2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 800939a:	43e2      	mvns	r2, r4
 800939c:	2312      	movs	r3, #18
 800939e:	7a28      	ldrb	r0, [r5, #8]
 80093a0:	f88d 3004 	strb.w	r3, [sp, #4]
 80093a4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 80093a8:	f88d 3005 	strb.w	r3, [sp, #5]
 80093ac:	f88d 2006 	strb.w	r2, [sp, #6]
 80093b0:	f00d ff78 	bl	80172a4 <gd32_i2c_set_address>
 80093b4:	68e8      	ldr	r0, [r5, #12]
 80093b6:	f00d ff6d 	bl	8017294 <gd32_i2c_set_baudrate>
 80093ba:	2103      	movs	r1, #3
 80093bc:	a801      	add	r0, sp, #4
 80093be:	f00d ff77 	bl	80172b0 <gd32_i2c_write>
 80093c2:	1c73      	adds	r3, r6, #1
 80093c4:	d006      	beq.n	80093d4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 80093c6:	4639      	mov	r1, r7
 80093c8:	4630      	mov	r0, r6
 80093ca:	b003      	add	sp, #12
 80093cc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80093d0:	f00c bb16 	b.w	8015a00 <console_status>
 80093d4:	b003      	add	sp, #12
 80093d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080093d8 <Display::SetSleep(bool)>:
 80093d8:	b538      	push	{r3, r4, r5, lr}
 80093da:	4604      	mov	r4, r0
 80093dc:	6980      	ldr	r0, [r0, #24]
 80093de:	460d      	mov	r5, r1
 80093e0:	b138      	cbz	r0, 80093f2 <Display::SetSleep(bool)+0x1a>
 80093e2:	6803      	ldr	r3, [r0, #0]
 80093e4:	7421      	strb	r1, [r4, #16]
 80093e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093e8:	4798      	blx	r3
 80093ea:	b915      	cbnz	r5, 80093f2 <Display::SetSleep(bool)+0x1a>
 80093ec:	4b01      	ldr	r3, [pc, #4]	; (80093f4 <Display::SetSleep(bool)+0x1c>)
 80093ee:	681b      	ldr	r3, [r3, #0]
 80093f0:	6063      	str	r3, [r4, #4]
 80093f2:	bd38      	pop	{r3, r4, r5, pc}
 80093f4:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc

080093f8 <display::timeout::gpio_init()>:
 80093f8:	b510      	push	{r4, lr}
 80093fa:	f640 4002 	movw	r0, #3074	; 0xc02
 80093fe:	f00d fa5b 	bl	80168b8 <rcu_periph_clock_enable>
 8009402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009406:	4803      	ldr	r0, [pc, #12]	; (8009414 <display::timeout::gpio_init()+0x1c>)
 8009408:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800940c:	2201      	movs	r2, #1
 800940e:	2100      	movs	r1, #0
 8009410:	f00d b9d6 	b.w	80167c0 <gpio_mode_set>
 8009414:	40020800 	andmi	r0, r2, r0, lsl #16

08009418 <display::timeout::gpio_renew()>:
 8009418:	4b03      	ldr	r3, [pc, #12]	; (8009428 <display::timeout::gpio_renew()+0x10>)
 800941a:	f8d3 0810 	ldr.w	r0, [r3, #2064]	; 0x810
 800941e:	f480 5000 	eor.w	r0, r0, #8192	; 0x2000
 8009422:	f3c0 3040 	ubfx	r0, r0, #13, #1
 8009426:	4770      	bx	lr
 8009428:	40020000 	andmi	r0, r2, r0

0800942c <StoreNetwork::SaveDhcp(bool)>:
 800942c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800942e:	2301      	movs	r3, #1
 8009430:	f88d 1017 	strb.w	r1, [sp, #23]
 8009434:	2100      	movs	r1, #0
 8009436:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800943a:	4805      	ldr	r0, [pc, #20]	; (8009450 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800943c:	9300      	str	r3, [sp, #0]
 800943e:	6800      	ldr	r0, [r0, #0]
 8009440:	f10d 0317 	add.w	r3, sp, #23
 8009444:	2214      	movs	r2, #20
 8009446:	f008 fc4f 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800944a:	b007      	add	sp, #28
 800944c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009450:	200092a0 	andcs	r9, r0, r0, lsr #5

08009454 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8009454:	f1a0 0004 	sub.w	r0, r0, #4
 8009458:	e7e8      	b.n	800942c <StoreNetwork::SaveDhcp(bool)>
 800945a:	bf00      	nop

0800945c <FactoryDefaults::Set()>:
 800945c:	b508      	push	{r3, lr}
 800945e:	4b08      	ldr	r3, [pc, #32]	; (8009480 <FactoryDefaults::Set()+0x24>)
 8009460:	2100      	movs	r1, #0
 8009462:	6818      	ldr	r0, [r3, #0]
 8009464:	f001 fb8c 	bl	800ab80 <RemoteConfig::SetDisable(bool)>
 8009468:	4b06      	ldr	r3, [pc, #24]	; (8009484 <FactoryDefaults::Set()+0x28>)
 800946a:	210b      	movs	r1, #11
 800946c:	6818      	ldr	r0, [r3, #0]
 800946e:	f008 fc29 	bl	8011cc4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009472:	4b05      	ldr	r3, [pc, #20]	; (8009488 <FactoryDefaults::Set()+0x2c>)
 8009474:	2101      	movs	r1, #1
 8009476:	6818      	ldr	r0, [r3, #0]
 8009478:	f7ff ffd8 	bl	800942c <StoreNetwork::SaveDhcp(bool)>
 800947c:	bd08      	pop	{r3, pc}
 800947e:	bf00      	nop
 8009480:	20000124 	andcs	r0, r0, r4, lsr #2
 8009484:	200092a0 	andcs	r9, r0, r0, lsr #5
 8009488:	200092b0 			; <UNDEFINED> instruction: 0x200092b0

0800948c <Hardware::RebootHandler()>:
 800948c:	b508      	push	{r3, lr}
 800948e:	4b05      	ldr	r3, [pc, #20]	; (80094a4 <Hardware::RebootHandler()+0x18>)
 8009490:	6818      	ldr	r0, [r3, #0]
 8009492:	f008 f93f 	bl	8011714 <WS28xxMulti::Blackout()>
 8009496:	4b04      	ldr	r3, [pc, #16]	; (80094a8 <Hardware::RebootHandler()+0x1c>)
 8009498:	6818      	ldr	r0, [r3, #0]
 800949a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800949e:	f002 bd63 	b.w	800bf68 <E131Bridge::Stop()>
 80094a2:	bf00      	nop
 80094a4:	20001288 	andcs	r1, r0, r8, lsl #5
 80094a8:	200006cc 	andcs	r0, r0, ip, asr #13

080094ac <main>:
 80094ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094b0:	f5ad 5df3 	sub.w	sp, sp, #7776	; 0x1e60
 80094b4:	b085      	sub	sp, #20
 80094b6:	a806      	add	r0, sp, #24
 80094b8:	f00c fbba 	bl	8015c30 <Hardware::Hardware()>
 80094bc:	a8c5      	add	r0, sp, #788	; 0x314
 80094be:	f00a f83f 	bl	8013540 <Network::Network()>
 80094c2:	a822      	add	r0, sp, #136	; 0x88
 80094c4:	f00c fb38 	bl	8015b38 <LedBlink::LedBlink()>
 80094c8:	a899      	add	r0, sp, #612	; 0x264
 80094ca:	f00b f94b 	bl	8014764 <DisplayUdf::DisplayUdf()>
 80094ce:	4abb      	ldr	r2, [pc, #748]	; (80097bc <main+0x310>)
 80094d0:	4bbb      	ldr	r3, [pc, #748]	; (80097c0 <main+0x314>)
 80094d2:	49bc      	ldr	r1, [pc, #752]	; (80097c4 <main+0x318>)
 80094d4:	a807      	add	r0, sp, #28
 80094d6:	f00c faab 	bl	8015a30 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80094da:	a818      	add	r0, sp, #96	; 0x60
 80094dc:	f008 ffd8 	bl	8012490 <FlashRom::FlashRom()>
 80094e0:	a808      	add	r0, sp, #32
 80094e2:	f008 fbc9 	bl	8011c78 <SpiFlashStore::SpiFlashStore()>
 80094e6:	49b8      	ldr	r1, [pc, #736]	; (80097c8 <main+0x31c>)
 80094e8:	a807      	add	r0, sp, #28
 80094ea:	f00c fb17 	bl	8015b1c <FirmwareVersion::Print(char const*)>
 80094ee:	4bb7      	ldr	r3, [pc, #732]	; (80097cc <main+0x320>)
 80094f0:	2501      	movs	r5, #1
 80094f2:	f8c3 5818 	str.w	r5, [r3, #2072]	; 0x818
 80094f6:	2008      	movs	r0, #8
 80094f8:	f00c fd28 	bl	8015f4c <operator new(unsigned int)>
 80094fc:	4bb4      	ldr	r3, [pc, #720]	; (80097d0 <main+0x324>)
 80094fe:	6003      	str	r3, [r0, #0]
 8009500:	4bb4      	ldr	r3, [pc, #720]	; (80097d4 <main+0x328>)
 8009502:	49b5      	ldr	r1, [pc, #724]	; (80097d8 <main+0x32c>)
 8009504:	681b      	ldr	r3, [r3, #0]
 8009506:	3b00      	subs	r3, #0
 8009508:	bf18      	it	ne
 800950a:	2301      	movne	r3, #1
 800950c:	7103      	strb	r3, [r0, #4]
 800950e:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8009512:	9024      	str	r0, [sp, #144]	; 0x90
 8009514:	ab22      	add	r3, sp, #136	; 0x88
 8009516:	a899      	add	r0, sp, #612	; 0x264
 8009518:	2303      	movs	r3, #3
 800951a:	f7ff ff35 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800951e:	a812      	add	r0, sp, #72	; 0x48
 8009520:	f008 fda8 	bl	8012074 <StoreNetwork::StoreNetwork()>
 8009524:	abc5      	add	r3, sp, #788	; 0x314
 8009526:	aa13      	add	r2, sp, #76	; 0x4c
 8009528:	4618      	mov	r0, r3
 800952a:	a912      	add	r1, sp, #72	; 0x48
 800952c:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8009530:	f00a f860 	bl	80135f4 <Network::Init(NetworkParamsStore*)>
 8009534:	a8c5      	add	r0, sp, #788	; 0x314
 8009536:	f00a facf 	bl	8013ad8 <Network::Print()>
 800953a:	49a8      	ldr	r1, [pc, #672]	; (80097dc <main+0x330>)
 800953c:	2303      	movs	r3, #3
 800953e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8009542:	a899      	add	r0, sp, #612	; 0x264
 8009544:	f7ff ff20 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009548:	a809      	add	r0, sp, #36	; 0x24
 800954a:	f009 fc35 	bl	8012db8 <MDNS::MDNS()>
 800954e:	2400      	movs	r4, #0
 8009550:	a809      	add	r0, sp, #36	; 0x24
 8009552:	f009 fcf1 	bl	8012f38 <MDNS::Start()>
 8009556:	4aa2      	ldr	r2, [pc, #648]	; (80097e0 <main+0x334>)
 8009558:	f642 1305 	movw	r3, #10501	; 0x2905
 800955c:	4621      	mov	r1, r4
 800955e:	e9cd 4400 	strd	r4, r4, [sp]
 8009562:	a809      	add	r0, sp, #36	; 0x24
 8009564:	f009 fe56 	bl	8013214 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8009568:	4b9e      	ldr	r3, [pc, #632]	; (80097e4 <main+0x338>)
 800956a:	4a9f      	ldr	r2, [pc, #636]	; (80097e8 <main+0x33c>)
 800956c:	4621      	mov	r1, r4
 800956e:	e9cd 5300 	strd	r5, r3, [sp]
 8009572:	a809      	add	r0, sp, #36	; 0x24
 8009574:	2350      	movs	r3, #80	; 0x50
 8009576:	f009 fe4d 	bl	8013214 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 800957a:	a809      	add	r0, sp, #36	; 0x24
 800957c:	f009 ff92 	bl	80134a4 <MDNS::Print()>
 8009580:	a85e      	add	r0, sp, #376	; 0x178
 8009582:	f001 ffcb 	bl	800b51c <HttpDaemon::HttpDaemon()>
 8009586:	a85e      	add	r0, sp, #376	; 0x178
 8009588:	f001 ffdc 	bl	800b544 <HttpDaemon::Start()>
 800958c:	2303      	movs	r3, #3
 800958e:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8009592:	4996      	ldr	r1, [pc, #600]	; (80097ec <main+0x340>)
 8009594:	a899      	add	r0, sp, #612	; 0x264
 8009596:	f7ff fef7 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800959a:	a80b      	add	r0, sp, #44	; 0x2c
 800959c:	f008 fe38 	bl	8012210 <StoreE131::StoreE131()>
 80095a0:	a90b      	add	r1, sp, #44	; 0x2c
 80095a2:	a83a      	add	r0, sp, #232	; 0xe8
 80095a4:	f003 fbd2 	bl	800cd4c <E131Params::E131Params(E131ParamsStore*)>
 80095a8:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 80095ac:	f002 fc34 	bl	800be18 <E131Bridge::E131Bridge()>
 80095b0:	a83a      	add	r0, sp, #232	; 0xe8
 80095b2:	f003 fbef 	bl	800cd94 <E131Params::Load()>
 80095b6:	b130      	cbz	r0, 80095c6 <main+0x11a>
 80095b8:	a83a      	add	r0, sp, #232	; 0xe8
 80095ba:	f003 ff23 	bl	800d404 <E131Params::Dump()>
 80095be:	2140      	movs	r1, #64	; 0x40
 80095c0:	a83a      	add	r0, sp, #232	; 0xe8
 80095c2:	f003 fec7 	bl	800d354 <E131Params::Set(unsigned int)>
 80095c6:	ab72      	add	r3, sp, #456	; 0x1c8
 80095c8:	21aa      	movs	r1, #170	; 0xaa
 80095ca:	2203      	movs	r2, #3
 80095cc:	e9c3 2100 	strd	r2, r1, [r3]
 80095d0:	2006      	movs	r0, #6
 80095d2:	2200      	movs	r2, #0
 80095d4:	e9c3 0202 	strd	r0, r2, [r3, #8]
 80095d8:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80095dc:	611a      	str	r2, [r3, #16]
 80095de:	f44f 7280 	mov.w	r2, #256	; 0x100
 80095e2:	829a      	strh	r2, [r3, #20]
 80095e4:	4a82      	ldr	r2, [pc, #520]	; (80097f0 <main+0x344>)
 80095e6:	619a      	str	r2, [r3, #24]
 80095e8:	2201      	movs	r2, #1
 80095ea:	6259      	str	r1, [r3, #36]	; 0x24
 80095ec:	e9c3 2207 	strd	r2, r2, [r3, #28]
 80095f0:	859a      	strh	r2, [r3, #44]	; 0x2c
 80095f2:	a814      	add	r0, sp, #80	; 0x50
 80095f4:	f008 fee8 	bl	80123c8 <StorePixelDmx::StorePixelDmx()>
 80095f8:	a914      	add	r1, sp, #80	; 0x50
 80095fa:	a88a      	add	r0, sp, #552	; 0x228
 80095fc:	f006 faf0 	bl	800fbe0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009600:	a88a      	add	r0, sp, #552	; 0x228
 8009602:	f006 fb0d 	bl	800fc20 <PixelDmxParams::Load()>
 8009606:	b130      	cbz	r0, 8009616 <main+0x16a>
 8009608:	a88a      	add	r0, sp, #552	; 0x228
 800960a:	f006 fecf 	bl	80103ac <PixelDmxParams::Dump()>
 800960e:	a972      	add	r1, sp, #456	; 0x1c8
 8009610:	a88a      	add	r0, sp, #552	; 0x228
 8009612:	f006 fe7f 	bl	8010314 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8009616:	aeaf      	add	r6, sp, #700	; 0x2bc
 8009618:	a972      	add	r1, sp, #456	; 0x1c8
 800961a:	4630      	mov	r0, r6
 800961c:	f006 f9d4 	bl	800f9c8 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8009620:	2004      	movs	r0, #4
 8009622:	f00c fc93 	bl	8015f4c <operator new(unsigned int)>
 8009626:	4b73      	ldr	r3, [pc, #460]	; (80097f4 <main+0x348>)
 8009628:	6003      	str	r3, [r0, #0]
 800962a:	4604      	mov	r4, r0
 800962c:	2304      	movs	r3, #4
 800962e:	4872      	ldr	r0, [pc, #456]	; (80097f8 <main+0x34c>)
 8009630:	2200      	movs	r2, #0
 8009632:	2101      	movs	r1, #1
 8009634:	f00d f8c4 	bl	80167c0 <gpio_mode_set>
 8009638:	2304      	movs	r3, #4
 800963a:	2202      	movs	r2, #2
 800963c:	2100      	movs	r1, #0
 800963e:	486e      	ldr	r0, [pc, #440]	; (80097f8 <main+0x34c>)
 8009640:	f00d f8de 	bl	8016800 <gpio_output_options_set>
 8009644:	4b61      	ldr	r3, [pc, #388]	; (80097cc <main+0x320>)
 8009646:	2204      	movs	r2, #4
 8009648:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800964c:	6a37      	ldr	r7, [r6, #32]
 800964e:	64f4      	str	r4, [r6, #76]	; 0x4c
 8009650:	f8d6 902c 	ldr.w	r9, [r6, #44]	; 0x2c
 8009654:	f8cd 64c0 	str.w	r6, [sp, #1216]	; 0x4c0
 8009658:	2400      	movs	r4, #0
 800965a:	f20d 42bc 	addw	r2, sp, #1212	; 0x4bc
 800965e:	4621      	mov	r1, r4
 8009660:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 8009664:	42bc      	cmp	r4, r7
 8009666:	f040 82ed 	bne.w	8009c44 <main+0x798>
 800966a:	f89d 523c 	ldrb.w	r5, [sp, #572]	; 0x23c
 800966e:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8009830 <main+0x384>
 8009672:	4639      	mov	r1, r7
 8009674:	a80a      	add	r0, sp, #40	; 0x28
 8009676:	ab8a      	add	r3, sp, #552	; 0x228
 8009678:	f007 fa38 	bl	8010aec <PixelPatterns::PixelPatterns(unsigned int)>
 800967c:	2d05      	cmp	r5, #5
 800967e:	f8c8 5000 	str.w	r5, [r8]
 8009682:	f340 8309 	ble.w	8009c98 <main+0x7ec>
 8009686:	9c3b      	ldr	r4, [sp, #236]	; 0xec
 8009688:	f014 0410 	ands.w	r4, r4, #16
 800968c:	ab3a      	add	r3, sp, #232	; 0xe8
 800968e:	d008      	beq.n	80096a2 <main+0x1f6>
 8009690:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 8009694:	2201      	movs	r2, #1
 8009696:	2140      	movs	r1, #64	; 0x40
 8009698:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 800969c:	f002 fcea 	bl	800c074 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 80096a0:	2401      	movs	r4, #1
 80096a2:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 80096a4:	0692      	lsls	r2, r2, #26
 80096a6:	ab3a      	add	r3, sp, #232	; 0xe8
 80096a8:	d508      	bpl.n	80096bc <main+0x210>
 80096aa:	f8b3 300d 	ldrh.w	r3, [r3, #13]
 80096ae:	2201      	movs	r2, #1
 80096b0:	2141      	movs	r1, #65	; 0x41
 80096b2:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 80096b6:	f002 fcdd 	bl	800c074 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 80096ba:	3401      	adds	r4, #1
 80096bc:	a80c      	add	r0, sp, #48	; 0x30
 80096be:	f008 fc41 	bl	8011f44 <StoreDmxSend::StoreDmxSend()>
 80096c2:	ab1e      	add	r3, sp, #120	; 0x78
 80096c4:	a90c      	add	r1, sp, #48	; 0x30
 80096c6:	4618      	mov	r0, r3
 80096c8:	9305      	str	r3, [sp, #20]
 80096ca:	f005 f9cb 	bl	800ea64 <DmxParams::DmxParams(DmxParamsStore*)>
 80096ce:	a843      	add	r0, sp, #268	; 0x10c
 80096d0:	f005 fe80 	bl	800f3d4 <Dmx::Dmx()>
 80096d4:	9805      	ldr	r0, [sp, #20]
 80096d6:	f005 f9d1 	bl	800ea7c <DmxParams::Load()>
 80096da:	b130      	cbz	r0, 80096ea <main+0x23e>
 80096dc:	9805      	ldr	r0, [sp, #20]
 80096de:	f005 fb1f 	bl	800ed20 <DmxParams::Dump()>
 80096e2:	9805      	ldr	r0, [sp, #20]
 80096e4:	a943      	add	r1, sp, #268	; 0x10c
 80096e6:	f005 faed 	bl	800ecc4 <DmxParams::Set(Dmx*)>
 80096ea:	ab0d      	add	r3, sp, #52	; 0x34
 80096ec:	4a43      	ldr	r2, [pc, #268]	; (80097fc <main+0x350>)
 80096ee:	601a      	str	r2, [r3, #0]
 80096f0:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 80096f4:	4650      	mov	r0, sl
 80096f6:	f005 f95b 	bl	800e9b0 <DmxSend::Print()>
 80096fa:	2c00      	cmp	r4, #0
 80096fc:	f000 833d 	beq.w	8009d7a <main+0x8ce>
 8009700:	f8df b130 	ldr.w	fp, [pc, #304]	; 8009834 <main+0x388>
 8009704:	2001      	movs	r0, #1
 8009706:	f00c fc21 	bl	8015f4c <operator new(unsigned int)>
 800970a:	f8db 3000 	ldr.w	r3, [fp]
 800970e:	3301      	adds	r3, #1
 8009710:	4681      	mov	r9, r0
 8009712:	d005      	beq.n	8009720 <main+0x274>
 8009714:	4b3a      	ldr	r3, [pc, #232]	; (8009800 <main+0x354>)
 8009716:	4a3b      	ldr	r2, [pc, #236]	; (8009804 <main+0x358>)
 8009718:	483b      	ldr	r0, [pc, #236]	; (8009808 <main+0x35c>)
 800971a:	2145      	movs	r1, #69	; 0x45
 800971c:	f000 fbc0 	bl	8009ea0 <__assert_func>
 8009720:	4b3a      	ldr	r3, [pc, #232]	; (800980c <main+0x360>)
 8009722:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8009726:	6818      	ldr	r0, [r3, #0]
 8009728:	f009 ff3c 	bl	80135a4 <Network::Begin(unsigned short)>
 800972c:	f8cb 0000 	str.w	r0, [fp]
 8009730:	2201      	movs	r2, #1
 8009732:	ab99      	add	r3, sp, #612	; 0x264
 8009734:	e9c3 2414 	strd	r2, r4, [r3, #80]	; 0x50
 8009738:	f8d8 3000 	ldr.w	r3, [r8]
 800973c:	4934      	ldr	r1, [pc, #208]	; (8009810 <main+0x364>)
 800973e:	4835      	ldr	r0, [pc, #212]	; (8009814 <main+0x368>)
 8009740:	2b00      	cmp	r3, #0
 8009742:	bf18      	it	ne
 8009744:	2600      	movne	r6, #0
 8009746:	aa1b      	add	r2, sp, #108	; 0x6c
 8009748:	2c00      	cmp	r4, #0
 800974a:	bf14      	ite	ne
 800974c:	4653      	movne	r3, sl
 800974e:	2300      	moveq	r3, #0
 8009750:	e9c2 1600 	strd	r1, r6, [r2]
 8009754:	6093      	str	r3, [r2, #8]
 8009756:	4930      	ldr	r1, [pc, #192]	; (8009818 <main+0x36c>)
 8009758:	4a30      	ldr	r2, [pc, #192]	; (800981c <main+0x370>)
 800975a:	e9cd 6300 	strd	r6, r3, [sp]
 800975e:	2324      	movs	r3, #36	; 0x24
 8009760:	ae1b      	add	r6, sp, #108	; 0x6c
 8009762:	f000 fea9 	bl	800a4b8 <printf>
 8009766:	4630      	mov	r0, r6
 8009768:	f7ff fcea 	bl	8009140 <LightSet64with4::Print()>
 800976c:	f20d 43bc 	addw	r3, sp, #1212	; 0x4bc
 8009770:	4618      	mov	r0, r3
 8009772:	605e      	str	r6, [r3, #4]
 8009774:	4e2a      	ldr	r6, [pc, #168]	; (8009820 <main+0x374>)
 8009776:	f003 fa33 	bl	800cbe0 <E131Bridge::Print()>
 800977a:	492a      	ldr	r1, [pc, #168]	; (8009824 <main+0x378>)
 800977c:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8009780:	2303      	movs	r3, #3
 8009782:	a899      	add	r0, sp, #612	; 0x264
 8009784:	f7ff fe00 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009788:	6833      	ldr	r3, [r6, #0]
 800978a:	6818      	ldr	r0, [r3, #0]
 800978c:	f007 f880 	bl	8010890 <PixelType::GetType(pixel::Type)>
 8009790:	9402      	str	r4, [sp, #8]
 8009792:	6833      	ldr	r3, [r6, #0]
 8009794:	4a24      	ldr	r2, [pc, #144]	; (8009828 <main+0x37c>)
 8009796:	685b      	ldr	r3, [r3, #4]
 8009798:	2120      	movs	r1, #32
 800979a:	e9cd 0300 	strd	r0, r3, [sp]
 800979e:	463b      	mov	r3, r7
 80097a0:	a828      	add	r0, sp, #160	; 0xa0
 80097a2:	f000 feb1 	bl	800a508 <snprintf>
 80097a6:	4a21      	ldr	r2, [pc, #132]	; (800982c <main+0x380>)
 80097a8:	2120      	movs	r1, #32
 80097aa:	a831      	add	r0, sp, #196	; 0xc4
 80097ac:	f000 feac 	bl	800a508 <snprintf>
 80097b0:	4604      	mov	r4, r0
 80097b2:	202c      	movs	r0, #44	; 0x2c
 80097b4:	f00c fbca 	bl	8015f4c <operator new(unsigned int)>
 80097b8:	4603      	mov	r3, r0
 80097ba:	e03d      	b.n	8009838 <main+0x38c>
 80097bc:	08018906 	stmdaeq	r1, {r1, r2, r8, fp, pc}
 80097c0:	080188fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, fp, pc}
 80097c4:	08018c0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, pc}
 80097c8:	08018912 	stmdaeq	r1, {r1, r4, r8, fp, pc}
 80097cc:	40020000 	andmi	r0, r2, r0
 80097d0:	08018b58 	stmdaeq	r1, {r3, r4, r6, r8, r9, fp, pc}
 80097d4:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 80097d8:	0801b5b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, ip, sp, pc}
 80097dc:	0801b5a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, ip, sp, pc}
 80097e0:	08018952 	stmdaeq	r1, {r1, r4, r6, r8, fp, pc}
 80097e4:	08018962 	stmdaeq	r1, {r1, r5, r6, r8, fp, pc}
 80097e8:	0801895b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, fp, pc}
 80097ec:	08019f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, ip, pc}
 80097f0:	08018c11 	stmdaeq	r1, {r0, r4, sl, fp, pc}
 80097f4:	08018b6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, fp, pc}
 80097f8:	40020800 	andmi	r0, r2, r0, lsl #16
 80097fc:	0801a558 	stmdaeq	r1, {r3, r4, r6, r8, sl, sp, pc}
 8009800:	080189b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, pc}
 8009804:	080189c0 	stmdaeq	r1, {r6, r7, r8, fp, pc}
 8009808:	080189cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, pc}
 800980c:	2000f9f0 	strdcs	pc, [r0], -r0
 8009810:	08018b84 	stmdaeq	r1, {r2, r7, r8, r9, fp, pc}
 8009814:	08018a29 	stmdaeq	r1, {r0, r3, r5, r9, fp, pc}
 8009818:	08018a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, pc}
 800981c:	080189ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, fp, pc}
 8009820:	20001288 	andcs	r1, r0, r8, lsl #5
 8009824:	0801a0ac 	stmdaeq	r1, {r2, r3, r5, r7, sp, pc}
 8009828:	08018a42 	stmdaeq	r1, {r1, r6, r9, fp, pc}
 800982c:	08018a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, pc}
 8009830:	20001280 	andcs	r1, r0, r0, lsl #5
 8009834:	20000010 	andcs	r0, r0, r0, lsl r0
 8009838:	2200      	movs	r2, #0
 800983a:	6042      	str	r2, [r0, #4]
 800983c:	6282      	str	r2, [r0, #40]	; 0x28
 800983e:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8009842:	f823 2b08 	strh.w	r2, [r3], #8
 8009846:	aa28      	add	r2, sp, #160	; 0xa0
 8009848:	f812 1b01 	ldrb.w	r1, [r2], #1
 800984c:	b111      	cbz	r1, 8009854 <main+0x3a8>
 800984e:	4563      	cmp	r3, ip
 8009850:	f040 8295 	bne.w	8009d7e <main+0x8d2>
 8009854:	2201      	movs	r2, #1
 8009856:	900e      	str	r0, [sp, #56]	; 0x38
 8009858:	a90e      	add	r1, sp, #56	; 0x38
 800985a:	a8f8      	add	r0, sp, #992	; 0x3e0
 800985c:	ab0e      	add	r3, sp, #56	; 0x38
 800985e:	f004 f86b 	bl	800d938 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8009862:	f20d 40ac 	addw	r0, sp, #1196	; 0x4ac
 8009866:	f003 fde3 	bl	800d430 <LLRPDevice::LLRPDevice()>
 800986a:	f50d 7a78 	add.w	sl, sp, #992	; 0x3e0
 800986e:	4bae      	ldr	r3, [pc, #696]	; (8009b28 <main+0x67c>)
 8009870:	f8ca 3000 	str.w	r3, [sl]
 8009874:	3324      	adds	r3, #36	; 0x24
 8009876:	f8ca 30cc 	str.w	r3, [sl, #204]	; 0xcc
 800987a:	2100      	movs	r1, #0
 800987c:	f50d 6096 	add.w	r0, sp, #1200	; 0x4b0
 8009880:	f004 fa51 	bl	800dd26 <RDMHandler::RDMHandler(bool)>
 8009884:	4ba9      	ldr	r3, [pc, #676]	; (8009b2c <main+0x680>)
 8009886:	49aa      	ldr	r1, [pc, #680]	; (8009b30 <main+0x684>)
 8009888:	6818      	ldr	r0, [r3, #0]
 800988a:	f00c faa5 	bl	8015dd8 <Hardware::GetUuid(unsigned char*)>
 800988e:	b2e4      	uxtb	r4, r4
 8009890:	f89a 3054 	ldrb.w	r3, [sl, #84]	; 0x54
 8009894:	2c20      	cmp	r4, #32
 8009896:	bf28      	it	cs
 8009898:	2420      	movcs	r4, #32
 800989a:	2b00      	cmp	r3, #0
 800989c:	f000 8275 	beq.w	8009d8a <main+0x8de>
 80098a0:	f20d 3bee 	addw	fp, sp, #1006	; 0x3ee
 80098a4:	4622      	mov	r2, r4
 80098a6:	a931      	add	r1, sp, #196	; 0xc4
 80098a8:	4658      	mov	r0, fp
 80098aa:	f7ff fbdc 	bl	8009066 <memcpy>
 80098ae:	f8da 0078 	ldr.w	r0, [sl, #120]	; 0x78
 80098b2:	f88a 402e 	strb.w	r4, [sl, #46]	; 0x2e
 80098b6:	b120      	cbz	r0, 80098c2 <main+0x416>
 80098b8:	6803      	ldr	r3, [r0, #0]
 80098ba:	4622      	mov	r2, r4
 80098bc:	689b      	ldr	r3, [r3, #8]
 80098be:	4659      	mov	r1, fp
 80098c0:	4798      	blx	r3
 80098c2:	f50d 7a78 	add.w	sl, sp, #992	; 0x3e0
 80098c6:	4b9b      	ldr	r3, [pc, #620]	; (8009b34 <main+0x688>)
 80098c8:	f8ca 3050 	str.w	r3, [sl, #80]	; 0x50
 80098cc:	2004      	movs	r0, #4
 80098ce:	f00c fb3d 	bl	8015f4c <operator new(unsigned int)>
 80098d2:	4b99      	ldr	r3, [pc, #612]	; (8009b38 <main+0x68c>)
 80098d4:	6003      	str	r3, [r0, #0]
 80098d6:	4a99      	ldr	r2, [pc, #612]	; (8009b3c <main+0x690>)
 80098d8:	4999      	ldr	r1, [pc, #612]	; (8009b40 <main+0x694>)
 80098da:	4604      	mov	r4, r0
 80098dc:	f44f 738d 	mov.w	r3, #282	; 0x11a
 80098e0:	4898      	ldr	r0, [pc, #608]	; (8009b44 <main+0x698>)
 80098e2:	f000 fde9 	bl	800a4b8 <printf>
 80098e6:	4a95      	ldr	r2, [pc, #596]	; (8009b3c <main+0x690>)
 80098e8:	4995      	ldr	r1, [pc, #596]	; (8009b40 <main+0x694>)
 80098ea:	4897      	ldr	r0, [pc, #604]	; (8009b48 <main+0x69c>)
 80098ec:	f8ca 40c8 	str.w	r4, [sl, #200]	; 0xc8
 80098f0:	f44f 738e 	mov.w	r3, #284	; 0x11c
 80098f4:	f000 fde0 	bl	800a4b8 <printf>
 80098f8:	4650      	mov	r0, sl
 80098fa:	f004 f86d 	bl	800d9d8 <RDMDeviceResponder::Init()>
 80098fe:	a816      	add	r0, sp, #88	; 0x58
 8009900:	f008 fc18 	bl	8012134 <StoreRDMDevice::StoreRDMDevice()>
 8009904:	a916      	add	r1, sp, #88	; 0x58
 8009906:	a87e      	add	r0, sp, #504	; 0x1f8
 8009908:	f003 ffa4 	bl	800d854 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 800990c:	a87e      	add	r0, sp, #504	; 0x1f8
 800990e:	f003 ffb3 	bl	800d878 <RDMDeviceParams::Load()>
 8009912:	b130      	cbz	r0, 8009922 <main+0x476>
 8009914:	a87e      	add	r0, sp, #504	; 0x1f8
 8009916:	f003 fff2 	bl	800d8fe <RDMDeviceParams::Dump()>
 800991a:	a9f9      	add	r1, sp, #996	; 0x3e4
 800991c:	a87e      	add	r0, sp, #504	; 0x1f8
 800991e:	f003 ffb6 	bl	800d88e <RDMDeviceParams::Set(RDMDevice*)>
 8009922:	aaf8      	add	r2, sp, #992	; 0x3e0
 8009924:	ab17      	add	r3, sp, #92	; 0x5c
 8009926:	6793      	str	r3, [r2, #120]	; 0x78
 8009928:	4610      	mov	r0, r2
 800992a:	f003 fe99 	bl	800d660 <RDMNetDevice::Print()>
 800992e:	6833      	ldr	r3, [r6, #0]
 8009930:	4986      	ldr	r1, [pc, #536]	; (8009b4c <main+0x6a0>)
 8009932:	685b      	ldr	r3, [r3, #4]
 8009934:	463a      	mov	r2, r7
 8009936:	a899      	add	r0, sp, #612	; 0x264
 8009938:	f00a ff2a 	bl	8014790 <DisplayUdf::SetTitle(char const*, ...)>
 800993c:	2203      	movs	r2, #3
 800993e:	2102      	movs	r1, #2
 8009940:	a899      	add	r0, sp, #612	; 0x264
 8009942:	f00a ff38 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009946:	2207      	movs	r2, #7
 8009948:	2103      	movs	r1, #3
 800994a:	a899      	add	r0, sp, #612	; 0x264
 800994c:	f00a ff33 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009950:	2202      	movs	r2, #2
 8009952:	2104      	movs	r1, #4
 8009954:	a899      	add	r0, sp, #612	; 0x264
 8009956:	f00a ff2e 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800995a:	ac72      	add	r4, sp, #456	; 0x1c8
 800995c:	2212      	movs	r2, #18
 800995e:	2105      	movs	r1, #5
 8009960:	a899      	add	r0, sp, #612	; 0x264
 8009962:	f00a ff28 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009966:	2213      	movs	r2, #19
 8009968:	2106      	movs	r1, #6
 800996a:	a899      	add	r0, sp, #612	; 0x264
 800996c:	f00a ff23 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8009970:	6820      	ldr	r0, [r4, #0]
 8009972:	f006 ff8d 	bl	8010890 <PixelType::GetType(pixel::Type)>
 8009976:	9005      	str	r0, [sp, #20]
 8009978:	68a0      	ldr	r0, [r4, #8]
 800997a:	6866      	ldr	r6, [r4, #4]
 800997c:	6a27      	ldr	r7, [r4, #32]
 800997e:	f006 ffdf 	bl	8010940 <PixelType::GetMap(pixel::Map)>
 8009982:	9b05      	ldr	r3, [sp, #20]
 8009984:	4a72      	ldr	r2, [pc, #456]	; (8009b50 <main+0x6a4>)
 8009986:	9600      	str	r6, [sp, #0]
 8009988:	2107      	movs	r1, #7
 800998a:	e9cd 7001 	strd	r7, r0, [sp, #4]
 800998e:	a899      	add	r0, sp, #612	; 0x264
 8009990:	f7ff fc90 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8009994:	a80f      	add	r0, sp, #60	; 0x3c
 8009996:	f008 fa9f 	bl	8011ed8 <StoreDisplayUdf::StoreDisplayUdf()>
 800999a:	a90f      	add	r1, sp, #60	; 0x3c
 800999c:	a868      	add	r0, sp, #416	; 0x1a0
 800999e:	f00b f88b 	bl	8014ab8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80099a2:	a868      	add	r0, sp, #416	; 0x1a0
 80099a4:	f00b f895 	bl	8014ad2 <DisplayUdfParams::Load()>
 80099a8:	b130      	cbz	r0, 80099b8 <main+0x50c>
 80099aa:	a868      	add	r0, sp, #416	; 0x1a0
 80099ac:	a999      	add	r1, sp, #612	; 0x264
 80099ae:	f00b f9ca 	bl	8014d46 <DisplayUdfParams::Set(DisplayUdf*)>
 80099b2:	a868      	add	r0, sp, #416	; 0x1a0
 80099b4:	f00b f9fa 	bl	8014dac <DisplayUdfParams::Dump()>
 80099b8:	f20d 41bc 	addw	r1, sp, #1212	; 0x4bc
 80099bc:	a899      	add	r0, sp, #612	; 0x264
 80099be:	f00b f9f7 	bl	8014db0 <DisplayUdf::Show(E131Bridge*)>
 80099c2:	b185      	cbz	r5, 80099e6 <main+0x53a>
 80099c4:	989f      	ldr	r0, [sp, #636]	; 0x27c
 80099c6:	ab99      	add	r3, sp, #612	; 0x264
 80099c8:	b118      	cbz	r0, 80099d2 <main+0x526>
 80099ca:	6803      	ldr	r3, [r0, #0]
 80099cc:	2106      	movs	r1, #6
 80099ce:	691b      	ldr	r3, [r3, #16]
 80099d0:	4798      	blx	r3
 80099d2:	4628      	mov	r0, r5
 80099d4:	f007 f8b0 	bl	8010b38 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 80099d8:	4a5e      	ldr	r2, [pc, #376]	; (8009b54 <main+0x6a8>)
 80099da:	9500      	str	r5, [sp, #0]
 80099dc:	4603      	mov	r3, r0
 80099de:	2106      	movs	r1, #6
 80099e0:	a899      	add	r0, sp, #612	; 0x264
 80099e2:	f7ff fc67 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80099e6:	f20d 43bc 	addw	r3, sp, #1212	; 0x4bc
 80099ea:	2203      	movs	r2, #3
 80099ec:	f893 350b 	ldrb.w	r3, [r3, #1291]	; 0x50b
 80099f0:	2101      	movs	r1, #1
 80099f2:	a84c      	add	r0, sp, #304	; 0x130
 80099f4:	f001 f878 	bl	800aae8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 80099f8:	a810      	add	r0, sp, #64	; 0x40
 80099fa:	f008 fbd3 	bl	80121a4 <StoreRemoteConfig::StoreRemoteConfig()>
 80099fe:	a910      	add	r1, sp, #64	; 0x40
 8009a00:	a855      	add	r0, sp, #340	; 0x154
 8009a02:	f001 fb75 	bl	800b0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009a06:	a855      	add	r0, sp, #340	; 0x154
 8009a08:	f001 fb7c 	bl	800b104 <RemoteConfigParams::Load()>
 8009a0c:	b130      	cbz	r0, 8009a1c <main+0x570>
 8009a0e:	a855      	add	r0, sp, #340	; 0x154
 8009a10:	f001 fcbf 	bl	800b392 <RemoteConfigParams::Dump()>
 8009a14:	a94c      	add	r1, sp, #304	; 0x130
 8009a16:	a855      	add	r0, sp, #340	; 0x154
 8009a18:	f001 fc9b 	bl	800b352 <RemoteConfigParams::Set(RemoteConfig*)>
 8009a1c:	a808      	add	r0, sp, #32
 8009a1e:	f008 f9d5 	bl	8011dcc <SpiFlashStore::Flash()>
 8009a22:	2800      	cmp	r0, #0
 8009a24:	d1fa      	bne.n	8009a1c <main+0x570>
 8009a26:	494c      	ldr	r1, [pc, #304]	; (8009b58 <main+0x6ac>)
 8009a28:	4c4c      	ldr	r4, [pc, #304]	; (8009b5c <main+0x6b0>)
 8009a2a:	4d4d      	ldr	r5, [pc, #308]	; (8009b60 <main+0x6b4>)
 8009a2c:	2303      	movs	r3, #3
 8009a2e:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009a32:	a899      	add	r0, sp, #612	; 0x264
 8009a34:	f7ff fca8 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a38:	4a4a      	ldr	r2, [pc, #296]	; (8009b64 <main+0x6b8>)
 8009a3a:	494b      	ldr	r1, [pc, #300]	; (8009b68 <main+0x6bc>)
 8009a3c:	4841      	ldr	r0, [pc, #260]	; (8009b44 <main+0x698>)
 8009a3e:	232b      	movs	r3, #43	; 0x2b
 8009a40:	f000 fd3a 	bl	800a4b8 <printf>
 8009a44:	6820      	ldr	r0, [r4, #0]
 8009a46:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8009a4a:	f009 fdab 	bl	80135a4 <Network::Begin(unsigned short)>
 8009a4e:	6028      	str	r0, [r5, #0]
 8009a50:	3001      	adds	r0, #1
 8009a52:	d105      	bne.n	8009a60 <main+0x5b4>
 8009a54:	4b45      	ldr	r3, [pc, #276]	; (8009b6c <main+0x6c0>)
 8009a56:	4a43      	ldr	r2, [pc, #268]	; (8009b64 <main+0x6b8>)
 8009a58:	4843      	ldr	r0, [pc, #268]	; (8009b68 <main+0x6bc>)
 8009a5a:	212d      	movs	r1, #45	; 0x2d
 8009a5c:	f000 fa20 	bl	8009ea0 <__assert_func>
 8009a60:	4b43      	ldr	r3, [pc, #268]	; (8009b70 <main+0x6c4>)
 8009a62:	6829      	ldr	r1, [r5, #0]
 8009a64:	681a      	ldr	r2, [r3, #0]
 8009a66:	6820      	ldr	r0, [r4, #0]
 8009a68:	f009 fdad 	bl	80135c6 <Network::JoinGroup(int, unsigned int)>
 8009a6c:	4a3d      	ldr	r2, [pc, #244]	; (8009b64 <main+0x6b8>)
 8009a6e:	493e      	ldr	r1, [pc, #248]	; (8009b68 <main+0x6bc>)
 8009a70:	4835      	ldr	r0, [pc, #212]	; (8009b48 <main+0x69c>)
 8009a72:	232f      	movs	r3, #47	; 0x2f
 8009a74:	f000 fd20 	bl	800a4b8 <printf>
 8009a78:	493e      	ldr	r1, [pc, #248]	; (8009b74 <main+0x6c8>)
 8009a7a:	2302      	movs	r3, #2
 8009a7c:	f248 0280 	movw	r2, #32896	; 0x8080
 8009a80:	a899      	add	r0, sp, #612	; 0x264
 8009a82:	f7ff fc81 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a86:	493c      	ldr	r1, [pc, #240]	; (8009b78 <main+0x6cc>)
 8009a88:	2303      	movs	r3, #3
 8009a8a:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8009a8e:	a899      	add	r0, sp, #612	; 0x264
 8009a90:	f7ff fc7a 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009a94:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 8009a98:	f002 fa28 	bl	800beec <E131Bridge::Start()>
 8009a9c:	f248 0280 	movw	r2, #32896	; 0x8080
 8009aa0:	2302      	movs	r3, #2
 8009aa2:	4936      	ldr	r1, [pc, #216]	; (8009b7c <main+0x6d0>)
 8009aa4:	a899      	add	r0, sp, #612	; 0x264
 8009aa6:	f7ff fc6f 	bl	8009388 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8009aaa:	2102      	movs	r1, #2
 8009aac:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8009ab0:	f00c fe5c 	bl	801676c <fwdgt_config>
 8009ab4:	ab06      	add	r3, sp, #24
 8009ab6:	2801      	cmp	r0, #1
 8009ab8:	bf0c      	ite	eq
 8009aba:	2201      	moveq	r2, #1
 8009abc:	2200      	movne	r2, #0
 8009abe:	701a      	strb	r2, [r3, #0]
 8009ac0:	d101      	bne.n	8009ac6 <main+0x61a>
 8009ac2:	f00c fe43 	bl	801674c <fwdgt_enable>
 8009ac6:	4d2e      	ldr	r5, [pc, #184]	; (8009b80 <main+0x6d4>)
 8009ac8:	4e2e      	ldr	r6, [pc, #184]	; (8009b84 <main+0x6d8>)
 8009aca:	4f2f      	ldr	r7, [pc, #188]	; (8009b88 <main+0x6dc>)
 8009acc:	f00c fe46 	bl	801675c <fwdgt_counter_reload>
 8009ad0:	f7fe fd48 	bl	8008564 <net_handle>
 8009ad4:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 8009ad8:	f002 fe32 	bl	800c740 <E131Bridge::Run()>
 8009adc:	a84c      	add	r0, sp, #304	; 0x130
 8009ade:	f001 f9b7 	bl	800ae50 <RemoteConfig::Run()>
 8009ae2:	a808      	add	r0, sp, #32
 8009ae4:	f008 f972 	bl	8011dcc <SpiFlashStore::Flash()>
 8009ae8:	f8d8 3000 	ldr.w	r3, [r8]
 8009aec:	b113      	cbz	r3, 8009af4 <main+0x648>
 8009aee:	a80a      	add	r0, sp, #40	; 0x28
 8009af0:	f007 fa46 	bl	8010f80 <PixelPatterns::Run()>
 8009af4:	f1b9 0f00 	cmp.w	r9, #0
 8009af8:	d06e      	beq.n	8009bd8 <main+0x72c>
 8009afa:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8009afe:	4920      	ldr	r1, [pc, #128]	; (8009b80 <main+0x6d4>)
 8009b00:	7830      	ldrb	r0, [r6, #0]
 8009b02:	aa11      	add	r2, sp, #68	; 0x44
 8009b04:	f009 f858 	bl	8012bb8 <udp_recv2>
 8009b08:	f1a0 030b 	sub.w	r3, r0, #11
 8009b0c:	b29b      	uxth	r3, r3
 8009b0e:	2b05      	cmp	r3, #5
 8009b10:	4604      	mov	r4, r0
 8009b12:	d861      	bhi.n	8009bd8 <main+0x72c>
 8009b14:	f8d5 a000 	ldr.w	sl, [r5]
 8009b18:	2204      	movs	r2, #4
 8009b1a:	4651      	mov	r1, sl
 8009b1c:	4638      	mov	r0, r7
 8009b1e:	f7ff fa92 	bl	8009046 <memcmp>
 8009b22:	2800      	cmp	r0, #0
 8009b24:	d158      	bne.n	8009bd8 <main+0x72c>
 8009b26:	e031      	b.n	8009b8c <main+0x6e0>
 8009b28:	08018bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, pc}
 8009b2c:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8009b30:	200007e7 	andcs	r0, r0, r7, ror #15
 8009b34:	06010100 	streq	r0, [r1], -r0, lsl #2
 8009b38:	08018bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8009b3c:	08018a72 	stmdaeq	r1, {r1, r4, r5, r6, r9, fp, pc}
 8009b40:	08018a88 	stmdaeq	r1, {r3, r7, r9, fp, pc}
 8009b44:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}
 8009b48:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 8009b4c:	08018acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, pc}
 8009b50:	08018adf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, fp, pc}
 8009b54:	08018aec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, fp, pc}
 8009b58:	0801a0ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sp, pc}
 8009b5c:	2000f9f0 	strdcs	pc, [r0], -r0
 8009b60:	20000000 	andcs	r0, r0, r0
 8009b64:	08018af2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, fp, pc}
 8009b68:	08018af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, pc}
 8009b6c:	08018b1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, fp, pc}
 8009b70:	200006dc 	ldrdcs	r0, [r0], -ip
 8009b74:	0801a0bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sp, pc}
 8009b78:	08019ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, ip, pc}
 8009b7c:	08019f1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, fp, ip, pc}
 8009b80:	2000106c 	andcs	r1, r0, ip, rrx
 8009b84:	20000010 	andcs	r0, r0, r0, lsl r0
 8009b88:	08018b2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, fp, pc}
 8009b8c:	eb0a 0304 	add.w	r3, sl, r4
 8009b90:	f10a 0104 	add.w	r1, sl, #4
 8009b94:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8009b98:	2b0a      	cmp	r3, #10
 8009b9a:	bf04      	itt	eq
 8009b9c:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009ba0:	b2a4      	uxtheq	r4, r4
 8009ba2:	2c0a      	cmp	r4, #10
 8009ba4:	f000 80fa 	beq.w	8009d9c <main+0x8f0>
 8009ba8:	2c0e      	cmp	r4, #14
 8009baa:	f200 80f7 	bhi.w	8009d9c <main+0x8f0>
 8009bae:	48a7      	ldr	r0, [pc, #668]	; (8009e4c <main+0x9a0>)
 8009bb0:	9105      	str	r1, [sp, #20]
 8009bb2:	2206      	movs	r2, #6
 8009bb4:	f7ff fa47 	bl	8009046 <memcmp>
 8009bb8:	9905      	ldr	r1, [sp, #20]
 8009bba:	2800      	cmp	r0, #0
 8009bbc:	f040 80ee 	bne.w	8009d9c <main+0x8f0>
 8009bc0:	2104      	movs	r1, #4
 8009bc2:	f10a 000a 	add.w	r0, sl, #10
 8009bc6:	f7ff faea 	bl	800919e <dmxconfigudp::atoi(char const*, unsigned int)>
 8009bca:	285b      	cmp	r0, #91	; 0x5b
 8009bcc:	4601      	mov	r1, r0
 8009bce:	d903      	bls.n	8009bd8 <main+0x72c>
 8009bd0:	4b9f      	ldr	r3, [pc, #636]	; (8009e50 <main+0x9a4>)
 8009bd2:	6818      	ldr	r0, [r3, #0]
 8009bd4:	f005 fcda 	bl	800f58c <Dmx::SetDmxBreakTime(unsigned int)>
 8009bd8:	a809      	add	r0, sp, #36	; 0x24
 8009bda:	f009 fc3f 	bl	801345c <MDNS::Run()>
 8009bde:	f20d 40ac 	addw	r0, sp, #1196	; 0x4ac
 8009be2:	f003 fce7 	bl	800d5b4 <LLRPDevice::Run()>
 8009be6:	a85e      	add	r0, sp, #376	; 0x178
 8009be8:	f001 ff1a 	bl	800ba20 <HttpDaemon::Run()>
 8009bec:	999e      	ldr	r1, [sp, #632]	; 0x278
 8009bee:	aa99      	add	r2, sp, #612	; 0x264
 8009bf0:	b169      	cbz	r1, 8009c0e <main+0x762>
 8009bf2:	7c13      	ldrb	r3, [r2, #16]
 8009bf4:	2b00      	cmp	r3, #0
 8009bf6:	f040 8121 	bne.w	8009e3c <main+0x990>
 8009bfa:	4b96      	ldr	r3, [pc, #600]	; (8009e54 <main+0x9a8>)
 8009bfc:	6852      	ldr	r2, [r2, #4]
 8009bfe:	681b      	ldr	r3, [r3, #0]
 8009c00:	1a9b      	subs	r3, r3, r2
 8009c02:	4299      	cmp	r1, r3
 8009c04:	d203      	bcs.n	8009c0e <main+0x762>
 8009c06:	2101      	movs	r1, #1
 8009c08:	a899      	add	r0, sp, #612	; 0x264
 8009c0a:	f7ff fbe5 	bl	80093d8 <Display::SetSleep(bool)>
 8009c0e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8009c10:	ab22      	add	r3, sp, #136	; 0x88
 8009c12:	2c00      	cmp	r4, #0
 8009c14:	f43f af5a 	beq.w	8009acc <main+0x620>
 8009c18:	498e      	ldr	r1, [pc, #568]	; (8009e54 <main+0x9a8>)
 8009c1a:	6958      	ldr	r0, [r3, #20]
 8009c1c:	680a      	ldr	r2, [r1, #0]
 8009c1e:	1a12      	subs	r2, r2, r0
 8009c20:	4294      	cmp	r4, r2
 8009c22:	f63f af53 	bhi.w	8009acc <main+0x620>
 8009c26:	680a      	ldr	r2, [r1, #0]
 8009c28:	615a      	str	r2, [r3, #20]
 8009c2a:	691a      	ldr	r2, [r3, #16]
 8009c2c:	f082 0101 	eor.w	r1, r2, #1
 8009c30:	2a01      	cmp	r2, #1
 8009c32:	6119      	str	r1, [r3, #16]
 8009c34:	4b88      	ldr	r3, [pc, #544]	; (8009e58 <main+0x9ac>)
 8009c36:	bf1a      	itte	ne
 8009c38:	2201      	movne	r2, #1
 8009c3a:	f8c3 2818 	strne.w	r2, [r3, #2072]	; 0x818
 8009c3e:	f8c3 2828 	streq.w	r2, [r3, #2088]	; 0x828
 8009c42:	e743      	b.n	8009acc <main+0x620>
 8009c44:	2c0f      	cmp	r4, #15
 8009c46:	d815      	bhi.n	8009c74 <main+0x7c8>
 8009c48:	aa8a      	add	r2, sp, #552	; 0x228
 8009c4a:	fa0a f304 	lsl.w	r3, sl, r4
 8009c4e:	6852      	ldr	r2, [r2, #4]
 8009c50:	4393      	bics	r3, r2
 8009c52:	ab8a      	add	r3, sp, #552	; 0x228
 8009c54:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8009c58:	bf08      	it	eq
 8009c5a:	f04f 0801 	moveq.w	r8, #1
 8009c5e:	8b5d      	ldrh	r5, [r3, #26]
 8009c60:	bf18      	it	ne
 8009c62:	f04f 0800 	movne.w	r8, #0
 8009c66:	eb01 0b09 	add.w	fp, r1, r9
 8009c6a:	1a6d      	subs	r5, r5, r1
 8009c6c:	4559      	cmp	r1, fp
 8009c6e:	d105      	bne.n	8009c7c <main+0x7d0>
 8009c70:	3401      	adds	r4, #1
 8009c72:	e4f7      	b.n	8009664 <main+0x1b8>
 8009c74:	f04f 0800 	mov.w	r8, #0
 8009c78:	4645      	mov	r5, r8
 8009c7a:	e7f4      	b.n	8009c66 <main+0x7ba>
 8009c7c:	f1b8 0f00 	cmp.w	r8, #0
 8009c80:	d008      	beq.n	8009c94 <main+0x7e8>
 8009c82:	186b      	adds	r3, r5, r1
 8009c84:	b29b      	uxth	r3, r3
 8009c86:	2201      	movs	r2, #1
 8009c88:	f20d 40bc 	addw	r0, sp, #1212	; 0x4bc
 8009c8c:	9105      	str	r1, [sp, #20]
 8009c8e:	f002 f9f1 	bl	800c074 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8009c92:	9905      	ldr	r1, [sp, #20]
 8009c94:	3101      	adds	r1, #1
 8009c96:	e7e9      	b.n	8009c6c <main+0x7c0>
 8009c98:	f8df 91e8 	ldr.w	r9, [pc, #488]	; 8009e84 <main+0x9d8>
 8009c9c:	f8df a1e8 	ldr.w	sl, [pc, #488]	; 8009e88 <main+0x9dc>
 8009ca0:	2400      	movs	r4, #0
 8009ca2:	2d05      	cmp	r5, #5
 8009ca4:	d862      	bhi.n	8009d6c <main+0x8c0>
 8009ca6:	e8df f005 	tbb	[pc, r5]
 8009caa:	190f0336 	stmdbne	pc, {r1, r2, r4, r5, r8, r9}	; <UNPREDICTABLE>
 8009cae:	23002a22 	movwcs	r2, #2594	; 0xa22
 8009cb2:	2264      	movs	r2, #100	; 0x64
 8009cb4:	4621      	mov	r1, r4
 8009cb6:	a80a      	add	r0, sp, #40	; 0x28
 8009cb8:	f006 ff4a 	bl	8010b50 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8009cbc:	3401      	adds	r4, #1
 8009cbe:	2c10      	cmp	r4, #16
 8009cc0:	f109 0920 	add.w	r9, r9, #32
 8009cc4:	d1ed      	bne.n	8009ca2 <main+0x7f6>
 8009cc6:	e4de      	b.n	8009686 <main+0x1da>
 8009cc8:	2364      	movs	r3, #100	; 0x64
 8009cca:	2200      	movs	r2, #0
 8009ccc:	e9cd 3200 	strd	r3, r2, [sp]
 8009cd0:	4621      	mov	r1, r4
 8009cd2:	4b62      	ldr	r3, [pc, #392]	; (8009e5c <main+0x9b0>)
 8009cd4:	a80a      	add	r0, sp, #40	; 0x28
 8009cd6:	f006 ff51 	bl	8010b7c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009cda:	e7ef      	b.n	8009cbc <main+0x810>
 8009cdc:	2300      	movs	r3, #0
 8009cde:	9300      	str	r3, [sp, #0]
 8009ce0:	4a5e      	ldr	r2, [pc, #376]	; (8009e5c <main+0x9b0>)
 8009ce2:	2364      	movs	r3, #100	; 0x64
 8009ce4:	4621      	mov	r1, r4
 8009ce6:	a80a      	add	r0, sp, #40	; 0x28
 8009ce8:	f006 ff64 	bl	8010bb4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009cec:	e7e6      	b.n	8009cbc <main+0x810>
 8009cee:	2364      	movs	r3, #100	; 0x64
 8009cf0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8009cf4:	4621      	mov	r1, r4
 8009cf6:	a80a      	add	r0, sp, #40	; 0x28
 8009cf8:	f006 ff76 	bl	8010be8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8009cfc:	e7de      	b.n	8009cbc <main+0x810>
 8009cfe:	2364      	movs	r3, #100	; 0x64
 8009d00:	2200      	movs	r2, #0
 8009d02:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009d06:	230a      	movs	r3, #10
 8009d08:	9300      	str	r3, [sp, #0]
 8009d0a:	4621      	mov	r1, r4
 8009d0c:	4b53      	ldr	r3, [pc, #332]	; (8009e5c <main+0x9b0>)
 8009d0e:	a80a      	add	r0, sp, #40	; 0x28
 8009d10:	f006 ff9e 	bl	8010c50 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8009d14:	e7d2      	b.n	8009cbc <main+0x810>
 8009d16:	2200      	movs	r2, #0
 8009d18:	f8c9 201c 	str.w	r2, [r9, #28]
 8009d1c:	4693      	mov	fp, r2
 8009d1e:	4b50      	ldr	r3, [pc, #320]	; (8009e60 <main+0x9b4>)
 8009d20:	f8da 0000 	ldr.w	r0, [sl]
 8009d24:	681b      	ldr	r3, [r3, #0]
 8009d26:	459b      	cmp	fp, r3
 8009d28:	d30a      	bcc.n	8009d40 <main+0x894>
 8009d2a:	f8da 0000 	ldr.w	r0, [sl]
 8009d2e:	f007 fdb3 	bl	8011898 <WS28xxMulti::IsUpdating()>
 8009d32:	2800      	cmp	r0, #0
 8009d34:	d1f9      	bne.n	8009d2a <main+0x87e>
 8009d36:	f8da 0000 	ldr.w	r0, [sl]
 8009d3a:	f007 fc47 	bl	80115cc <WS28xxMulti::Update()>
 8009d3e:	e7bd      	b.n	8009cbc <main+0x810>
 8009d40:	6803      	ldr	r3, [r0, #0]
 8009d42:	2b07      	cmp	r3, #7
 8009d44:	f04f 0300 	mov.w	r3, #0
 8009d48:	d008      	beq.n	8009d5c <main+0x8b0>
 8009d4a:	e9cd 3300 	strd	r3, r3, [sp]
 8009d4e:	465a      	mov	r2, fp
 8009d50:	4621      	mov	r1, r4
 8009d52:	f007 fe21 	bl	8011998 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8009d56:	f10b 0b01 	add.w	fp, fp, #1
 8009d5a:	e7e0      	b.n	8009d1e <main+0x872>
 8009d5c:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009d60:	9300      	str	r3, [sp, #0]
 8009d62:	465a      	mov	r2, fp
 8009d64:	4621      	mov	r1, r4
 8009d66:	f007 fe99 	bl	8011a9c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009d6a:	e7f4      	b.n	8009d56 <main+0x8aa>
 8009d6c:	4b3d      	ldr	r3, [pc, #244]	; (8009e64 <main+0x9b8>)
 8009d6e:	4a3e      	ldr	r2, [pc, #248]	; (8009e68 <main+0x9bc>)
 8009d70:	483e      	ldr	r0, [pc, #248]	; (8009e6c <main+0x9c0>)
 8009d72:	214a      	movs	r1, #74	; 0x4a
 8009d74:	f000 f894 	bl	8009ea0 <__assert_func>
 8009d78:	e7a0      	b.n	8009cbc <main+0x810>
 8009d7a:	46a1      	mov	r9, r4
 8009d7c:	e4d8      	b.n	8009730 <main+0x284>
 8009d7e:	f803 1b01 	strb.w	r1, [r3], #1
 8009d82:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009d84:	3101      	adds	r1, #1
 8009d86:	6281      	str	r1, [r0, #40]	; 0x28
 8009d88:	e55e      	b.n	8009848 <main+0x39c>
 8009d8a:	4622      	mov	r2, r4
 8009d8c:	a931      	add	r1, sp, #196	; 0xc4
 8009d8e:	f20d 4035 	addw	r0, sp, #1077	; 0x435
 8009d92:	f7ff f968 	bl	8009066 <memcpy>
 8009d96:	f88a 4075 	strb.w	r4, [sl, #117]	; 0x75
 8009d9a:	e592      	b.n	80098c2 <main+0x416>
 8009d9c:	4834      	ldr	r0, [pc, #208]	; (8009e70 <main+0x9c4>)
 8009d9e:	9105      	str	r1, [sp, #20]
 8009da0:	2204      	movs	r2, #4
 8009da2:	f7ff f950 	bl	8009046 <memcmp>
 8009da6:	9905      	ldr	r1, [sp, #20]
 8009da8:	b980      	cbnz	r0, 8009dcc <main+0x920>
 8009daa:	2107      	movs	r1, #7
 8009dac:	f10a 0008 	add.w	r0, sl, #8
 8009db0:	f7ff f9f5 	bl	800919e <dmxconfigudp::atoi(char const*, unsigned int)>
 8009db4:	4b2f      	ldr	r3, [pc, #188]	; (8009e74 <main+0x9c8>)
 8009db6:	f1a0 020c 	sub.w	r2, r0, #12
 8009dba:	429a      	cmp	r2, r3
 8009dbc:	4601      	mov	r1, r0
 8009dbe:	f63f af0b 	bhi.w	8009bd8 <main+0x72c>
 8009dc2:	4b23      	ldr	r3, [pc, #140]	; (8009e50 <main+0x9a4>)
 8009dc4:	6818      	ldr	r0, [r3, #0]
 8009dc6:	f005 fbeb 	bl	800f5a0 <Dmx::SetDmxMabTime(unsigned int)>
 8009dca:	e705      	b.n	8009bd8 <main+0x72c>
 8009dcc:	2c0c      	cmp	r4, #12
 8009dce:	d917      	bls.n	8009e00 <main+0x954>
 8009dd0:	2c0e      	cmp	r4, #14
 8009dd2:	d82f      	bhi.n	8009e34 <main+0x988>
 8009dd4:	4828      	ldr	r0, [pc, #160]	; (8009e78 <main+0x9cc>)
 8009dd6:	9105      	str	r1, [sp, #20]
 8009dd8:	2208      	movs	r2, #8
 8009dda:	f7ff f934 	bl	8009046 <memcmp>
 8009dde:	9905      	ldr	r1, [sp, #20]
 8009de0:	bb40      	cbnz	r0, 8009e34 <main+0x988>
 8009de2:	2102      	movs	r1, #2
 8009de4:	f10a 000c 	add.w	r0, sl, #12
 8009de8:	f7ff f9d9 	bl	800919e <dmxconfigudp::atoi(char const*, unsigned int)>
 8009dec:	4601      	mov	r1, r0
 8009dee:	b110      	cbz	r0, 8009df6 <main+0x94a>
 8009df0:	4b22      	ldr	r3, [pc, #136]	; (8009e7c <main+0x9d0>)
 8009df2:	fbb3 f1f0 	udiv	r1, r3, r0
 8009df6:	4b16      	ldr	r3, [pc, #88]	; (8009e50 <main+0x9a4>)
 8009df8:	6818      	ldr	r0, [r3, #0]
 8009dfa:	f005 fb9f 	bl	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009dfe:	e6eb      	b.n	8009bd8 <main+0x72c>
 8009e00:	2c0a      	cmp	r4, #10
 8009e02:	f43f aee9 	beq.w	8009bd8 <main+0x72c>
 8009e06:	481e      	ldr	r0, [pc, #120]	; (8009e80 <main+0x9d4>)
 8009e08:	2206      	movs	r2, #6
 8009e0a:	f7ff f91c 	bl	8009046 <memcmp>
 8009e0e:	2800      	cmp	r0, #0
 8009e10:	f47f aee2 	bne.w	8009bd8 <main+0x72c>
 8009e14:	2103      	movs	r1, #3
 8009e16:	f10a 000a 	add.w	r0, sl, #10
 8009e1a:	f7ff f9c0 	bl	800919e <dmxconfigudp::atoi(char const*, unsigned int)>
 8009e1e:	1e83      	subs	r3, r0, #2
 8009e20:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009e24:	f63f aed8 	bhi.w	8009bd8 <main+0x72c>
 8009e28:	4b09      	ldr	r3, [pc, #36]	; (8009e50 <main+0x9a4>)
 8009e2a:	b281      	uxth	r1, r0
 8009e2c:	6818      	ldr	r0, [r3, #0]
 8009e2e:	f005 fbc1 	bl	800f5b4 <Dmx::SetDmxSlots(unsigned short)>
 8009e32:	e6d1      	b.n	8009bd8 <main+0x72c>
 8009e34:	2c0d      	cmp	r4, #13
 8009e36:	f47f aecf 	bne.w	8009bd8 <main+0x72c>
 8009e3a:	e7e4      	b.n	8009e06 <main+0x95a>
 8009e3c:	f7ff faec 	bl	8009418 <display::timeout::gpio_renew()>
 8009e40:	2800      	cmp	r0, #0
 8009e42:	f43f aee4 	beq.w	8009c0e <main+0x762>
 8009e46:	2100      	movs	r1, #0
 8009e48:	e6de      	b.n	8009c08 <main+0x75c>
 8009e4a:	bf00      	nop
 8009e4c:	08018b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, pc}
 8009e50:	20001064 	andcs	r1, r0, r4, rrx
 8009e54:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8009e58:	40020000 	andmi	r0, r2, r0
 8009e5c:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009e60:	20001278 	andcs	r1, r0, r8, ror r2
 8009e64:	0801a72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, sp, pc}
 8009e68:	0801897c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, pc}
 8009e6c:	08018987 	stmdaeq	r1, {r0, r1, r2, r7, r8, fp, pc}
 8009e70:	08018b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, pc}
 8009e74:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8009e78:	08018b40 	stmdaeq	r1, {r6, r8, r9, fp, pc}
 8009e7c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009e80:	08018b49 	stmdaeq	r1, {r0, r3, r6, r8, r9, fp, pc}
 8009e84:	20001070 	andcs	r1, r0, r0, ror r0
 8009e88:	2000127c 	andcs	r1, r0, ip, ror r2

08009e8c <RDMSoftwareVersion::GetVersion()>:
 8009e8c:	4800      	ldr	r0, [pc, #0]	; (8009e90 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009e8e:	4770      	bx	lr
 8009e90:	08018d11 	stmdaeq	r1, {r0, r4, r8, sl, fp, pc}

08009e94 <RDMSoftwareVersion::GetVersionLength()>:
 8009e94:	2003      	movs	r0, #3
 8009e96:	4770      	bx	lr

08009e98 <RDMSoftwareVersion::GetVersionId()>:
 8009e98:	4800      	ldr	r0, [pc, #0]	; (8009e9c <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009e9a:	4770      	bx	lr
 8009e9c:	634541ba 	movtvs	r4, #20922	; 0x51ba

08009ea0 <__assert_func>:
 8009ea0:	b507      	push	{r0, r1, r2, lr}
 8009ea2:	460c      	mov	r4, r1
 8009ea4:	4619      	mov	r1, r3
 8009ea6:	b142      	cbz	r2, 8009eba <__assert_func+0x1a>
 8009ea8:	4b05      	ldr	r3, [pc, #20]	; (8009ec0 <__assert_func+0x20>)
 8009eaa:	e9cd 3200 	strd	r3, r2, [sp]
 8009eae:	4602      	mov	r2, r0
 8009eb0:	4623      	mov	r3, r4
 8009eb2:	4804      	ldr	r0, [pc, #16]	; (8009ec4 <__assert_func+0x24>)
 8009eb4:	f000 fb00 	bl	800a4b8 <printf>
 8009eb8:	e7fe      	b.n	8009eb8 <__assert_func+0x18>
 8009eba:	4b03      	ldr	r3, [pc, #12]	; (8009ec8 <__assert_func+0x28>)
 8009ebc:	461a      	mov	r2, r3
 8009ebe:	e7f4      	b.n	8009eaa <__assert_func+0xa>
 8009ec0:	08018d15 	stmdaeq	r1, {r0, r2, r4, r8, sl, fp, pc}
 8009ec4:	08018d22 	stmdaeq	r1, {r1, r5, r8, sl, fp, pc}
 8009ec8:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}

08009ecc <_itostr>:
 8009ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ece:	0fc7      	lsrs	r7, r0, #31
 8009ed0:	b091      	sub	sp, #68	; 0x44
 8009ed2:	bf18      	it	ne
 8009ed4:	4240      	negne	r0, r0
 8009ed6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009eda:	b9c8      	cbnz	r0, 8009f10 <_itostr+0x44>
 8009edc:	2330      	movs	r3, #48	; 0x30
 8009ede:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009ee2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009ee6:	b132      	cbz	r2, 8009ef6 <_itostr+0x2a>
 8009ee8:	4668      	mov	r0, sp
 8009eea:	2530      	movs	r5, #48	; 0x30
 8009eec:	1ae6      	subs	r6, r4, r3
 8009eee:	4296      	cmp	r6, r2
 8009ef0:	da01      	bge.n	8009ef6 <_itostr+0x2a>
 8009ef2:	4283      	cmp	r3, r0
 8009ef4:	d81c      	bhi.n	8009f30 <_itostr+0x64>
 8009ef6:	b117      	cbz	r7, 8009efe <_itostr+0x32>
 8009ef8:	222d      	movs	r2, #45	; 0x2d
 8009efa:	f803 2901 	strb.w	r2, [r3], #-1
 8009efe:	3301      	adds	r3, #1
 8009f00:	1ae0      	subs	r0, r4, r3
 8009f02:	3901      	subs	r1, #1
 8009f04:	aa10      	add	r2, sp, #64	; 0x40
 8009f06:	4293      	cmp	r3, r2
 8009f08:	d315      	bcc.n	8009f36 <_itostr+0x6a>
 8009f0a:	3001      	adds	r0, #1
 8009f0c:	b011      	add	sp, #68	; 0x44
 8009f0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f10:	4623      	mov	r3, r4
 8009f12:	250a      	movs	r5, #10
 8009f14:	46ec      	mov	ip, sp
 8009f16:	fb90 f6f5 	sdiv	r6, r0, r5
 8009f1a:	fb05 0016 	mls	r0, r5, r6, r0
 8009f1e:	3030      	adds	r0, #48	; 0x30
 8009f20:	f803 0901 	strb.w	r0, [r3], #-1
 8009f24:	4630      	mov	r0, r6
 8009f26:	2e00      	cmp	r6, #0
 8009f28:	d0dd      	beq.n	8009ee6 <_itostr+0x1a>
 8009f2a:	4563      	cmp	r3, ip
 8009f2c:	d1f3      	bne.n	8009f16 <_itostr+0x4a>
 8009f2e:	e7da      	b.n	8009ee6 <_itostr+0x1a>
 8009f30:	f803 5901 	strb.w	r5, [r3], #-1
 8009f34:	e7da      	b.n	8009eec <_itostr+0x20>
 8009f36:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009f3a:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009f3e:	e7e1      	b.n	8009f04 <_itostr+0x38>

08009f40 <_xputch>:
 8009f40:	4603      	mov	r3, r0
 8009f42:	b410      	push	{r4}
 8009f44:	4c09      	ldr	r4, [pc, #36]	; (8009f6c <_xputch+0x2c>)
 8009f46:	68da      	ldr	r2, [r3, #12]
 8009f48:	4608      	mov	r0, r1
 8009f4a:	6821      	ldr	r1, [r4, #0]
 8009f4c:	3201      	adds	r2, #1
 8009f4e:	60da      	str	r2, [r3, #12]
 8009f50:	b141      	cbz	r1, 8009f64 <_xputch+0x24>
 8009f52:	691b      	ldr	r3, [r3, #16]
 8009f54:	429a      	cmp	r2, r3
 8009f56:	da02      	bge.n	8009f5e <_xputch+0x1e>
 8009f58:	1c4b      	adds	r3, r1, #1
 8009f5a:	6023      	str	r3, [r4, #0]
 8009f5c:	7008      	strb	r0, [r1, #0]
 8009f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009f62:	4770      	bx	lr
 8009f64:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009f68:	f00b bd12 	b.w	8015990 <console_putc>
 8009f6c:	200000f8 	strdcs	r0, [r0], -r8

08009f70 <_format_int>:
 8009f70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f74:	4698      	mov	r8, r3
 8009f76:	b091      	sub	sp, #68	; 0x44
 8009f78:	ea52 0308 	orrs.w	r3, r2, r8
 8009f7c:	4606      	mov	r6, r0
 8009f7e:	4617      	mov	r7, r2
 8009f80:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009f84:	d133      	bne.n	8009fee <_format_int+0x7e>
 8009f86:	2330      	movs	r3, #48	; 0x30
 8009f88:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009f8c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009f90:	6833      	ldr	r3, [r6, #0]
 8009f92:	07d8      	lsls	r0, r3, #31
 8009f94:	d507      	bpl.n	8009fa6 <_format_int+0x36>
 8009f96:	6871      	ldr	r1, [r6, #4]
 8009f98:	466a      	mov	r2, sp
 8009f9a:	2030      	movs	r0, #48	; 0x30
 8009f9c:	1b2f      	subs	r7, r5, r4
 8009f9e:	428f      	cmp	r7, r1
 8009fa0:	da01      	bge.n	8009fa6 <_format_int+0x36>
 8009fa2:	4294      	cmp	r4, r2
 8009fa4:	d839      	bhi.n	800a01a <_format_int+0xaa>
 8009fa6:	0699      	lsls	r1, r3, #26
 8009fa8:	d507      	bpl.n	8009fba <_format_int+0x4a>
 8009faa:	68b1      	ldr	r1, [r6, #8]
 8009fac:	466a      	mov	r2, sp
 8009fae:	2030      	movs	r0, #48	; 0x30
 8009fb0:	1b2f      	subs	r7, r5, r4
 8009fb2:	428f      	cmp	r7, r1
 8009fb4:	da01      	bge.n	8009fba <_format_int+0x4a>
 8009fb6:	4294      	cmp	r4, r2
 8009fb8:	d832      	bhi.n	800a020 <_format_int+0xb0>
 8009fba:	071a      	lsls	r2, r3, #28
 8009fbc:	bf44      	itt	mi
 8009fbe:	222d      	movmi	r2, #45	; 0x2d
 8009fc0:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009fc4:	065b      	lsls	r3, r3, #25
 8009fc6:	d407      	bmi.n	8009fd8 <_format_int+0x68>
 8009fc8:	68b2      	ldr	r2, [r6, #8]
 8009fca:	466b      	mov	r3, sp
 8009fcc:	2120      	movs	r1, #32
 8009fce:	1b28      	subs	r0, r5, r4
 8009fd0:	4290      	cmp	r0, r2
 8009fd2:	da01      	bge.n	8009fd8 <_format_int+0x68>
 8009fd4:	429c      	cmp	r4, r3
 8009fd6:	d826      	bhi.n	800a026 <_format_int+0xb6>
 8009fd8:	1b2d      	subs	r5, r5, r4
 8009fda:	3401      	adds	r4, #1
 8009fdc:	ab10      	add	r3, sp, #64	; 0x40
 8009fde:	429c      	cmp	r4, r3
 8009fe0:	d324      	bcc.n	800a02c <_format_int+0xbc>
 8009fe2:	68b3      	ldr	r3, [r6, #8]
 8009fe4:	42ab      	cmp	r3, r5
 8009fe6:	dc27      	bgt.n	800a038 <_format_int+0xc8>
 8009fe8:	b011      	add	sp, #68	; 0x44
 8009fea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009fee:	462c      	mov	r4, r5
 8009ff0:	46e9      	mov	r9, sp
 8009ff2:	4638      	mov	r0, r7
 8009ff4:	4641      	mov	r1, r8
 8009ff6:	220a      	movs	r2, #10
 8009ff8:	2300      	movs	r3, #0
 8009ffa:	f7fe fe4d 	bl	8008c98 <__aeabi_uldivmod>
 8009ffe:	3230      	adds	r2, #48	; 0x30
 800a000:	f804 2901 	strb.w	r2, [r4], #-1
 800a004:	463a      	mov	r2, r7
 800a006:	4643      	mov	r3, r8
 800a008:	2a0a      	cmp	r2, #10
 800a00a:	f173 0300 	sbcs.w	r3, r3, #0
 800a00e:	4607      	mov	r7, r0
 800a010:	4688      	mov	r8, r1
 800a012:	d3bd      	bcc.n	8009f90 <_format_int+0x20>
 800a014:	454c      	cmp	r4, r9
 800a016:	d1ec      	bne.n	8009ff2 <_format_int+0x82>
 800a018:	e7ba      	b.n	8009f90 <_format_int+0x20>
 800a01a:	f804 0901 	strb.w	r0, [r4], #-1
 800a01e:	e7bd      	b.n	8009f9c <_format_int+0x2c>
 800a020:	f804 0901 	strb.w	r0, [r4], #-1
 800a024:	e7c4      	b.n	8009fb0 <_format_int+0x40>
 800a026:	f804 1901 	strb.w	r1, [r4], #-1
 800a02a:	e7d0      	b.n	8009fce <_format_int+0x5e>
 800a02c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a030:	4630      	mov	r0, r6
 800a032:	f7ff ff85 	bl	8009f40 <_xputch>
 800a036:	e7d1      	b.n	8009fdc <_format_int+0x6c>
 800a038:	2120      	movs	r1, #32
 800a03a:	4630      	mov	r0, r6
 800a03c:	f7ff ff80 	bl	8009f40 <_xputch>
 800a040:	3501      	adds	r5, #1
 800a042:	e7ce      	b.n	8009fe2 <_format_int+0x72>

0800a044 <_format_hex>:
 800a044:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a046:	b091      	sub	sp, #68	; 0x44
 800a048:	6804      	ldr	r4, [r0, #0]
 800a04a:	4606      	mov	r6, r0
 800a04c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800a050:	bb61      	cbnz	r1, 800a0ac <_format_hex+0x68>
 800a052:	2330      	movs	r3, #48	; 0x30
 800a054:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800a058:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800a05c:	07e5      	lsls	r5, r4, #31
 800a05e:	d507      	bpl.n	800a070 <_format_hex+0x2c>
 800a060:	6870      	ldr	r0, [r6, #4]
 800a062:	4669      	mov	r1, sp
 800a064:	2530      	movs	r5, #48	; 0x30
 800a066:	1ad7      	subs	r7, r2, r3
 800a068:	4287      	cmp	r7, r0
 800a06a:	da01      	bge.n	800a070 <_format_hex+0x2c>
 800a06c:	428b      	cmp	r3, r1
 800a06e:	d831      	bhi.n	800a0d4 <_format_hex+0x90>
 800a070:	06a0      	lsls	r0, r4, #26
 800a072:	d507      	bpl.n	800a084 <_format_hex+0x40>
 800a074:	68b0      	ldr	r0, [r6, #8]
 800a076:	4669      	mov	r1, sp
 800a078:	2530      	movs	r5, #48	; 0x30
 800a07a:	1ad7      	subs	r7, r2, r3
 800a07c:	4287      	cmp	r7, r0
 800a07e:	da01      	bge.n	800a084 <_format_hex+0x40>
 800a080:	428b      	cmp	r3, r1
 800a082:	d82a      	bhi.n	800a0da <_format_hex+0x96>
 800a084:	0661      	lsls	r1, r4, #25
 800a086:	d407      	bmi.n	800a098 <_format_hex+0x54>
 800a088:	68b0      	ldr	r0, [r6, #8]
 800a08a:	4669      	mov	r1, sp
 800a08c:	2420      	movs	r4, #32
 800a08e:	1ad5      	subs	r5, r2, r3
 800a090:	4285      	cmp	r5, r0
 800a092:	da01      	bge.n	800a098 <_format_hex+0x54>
 800a094:	428b      	cmp	r3, r1
 800a096:	d823      	bhi.n	800a0e0 <_format_hex+0x9c>
 800a098:	1ad5      	subs	r5, r2, r3
 800a09a:	1c5c      	adds	r4, r3, #1
 800a09c:	ab10      	add	r3, sp, #64	; 0x40
 800a09e:	429c      	cmp	r4, r3
 800a0a0:	d321      	bcc.n	800a0e6 <_format_hex+0xa2>
 800a0a2:	68b3      	ldr	r3, [r6, #8]
 800a0a4:	429d      	cmp	r5, r3
 800a0a6:	db24      	blt.n	800a0f2 <_format_hex+0xae>
 800a0a8:	b011      	add	sp, #68	; 0x44
 800a0aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a0ac:	f014 0f02 	tst.w	r4, #2
 800a0b0:	bf0c      	ite	eq
 800a0b2:	2757      	moveq	r7, #87	; 0x57
 800a0b4:	2737      	movne	r7, #55	; 0x37
 800a0b6:	4613      	mov	r3, r2
 800a0b8:	466d      	mov	r5, sp
 800a0ba:	f001 000f 	and.w	r0, r1, #15
 800a0be:	2809      	cmp	r0, #9
 800a0c0:	bf94      	ite	ls
 800a0c2:	3030      	addls	r0, #48	; 0x30
 800a0c4:	19c0      	addhi	r0, r0, r7
 800a0c6:	0909      	lsrs	r1, r1, #4
 800a0c8:	f803 0901 	strb.w	r0, [r3], #-1
 800a0cc:	d0c6      	beq.n	800a05c <_format_hex+0x18>
 800a0ce:	42ab      	cmp	r3, r5
 800a0d0:	d1f3      	bne.n	800a0ba <_format_hex+0x76>
 800a0d2:	e7c3      	b.n	800a05c <_format_hex+0x18>
 800a0d4:	f803 5901 	strb.w	r5, [r3], #-1
 800a0d8:	e7c5      	b.n	800a066 <_format_hex+0x22>
 800a0da:	f803 5901 	strb.w	r5, [r3], #-1
 800a0de:	e7cc      	b.n	800a07a <_format_hex+0x36>
 800a0e0:	f803 4901 	strb.w	r4, [r3], #-1
 800a0e4:	e7d3      	b.n	800a08e <_format_hex+0x4a>
 800a0e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a0ea:	4630      	mov	r0, r6
 800a0ec:	f7ff ff28 	bl	8009f40 <_xputch>
 800a0f0:	e7d4      	b.n	800a09c <_format_hex+0x58>
 800a0f2:	2120      	movs	r1, #32
 800a0f4:	4630      	mov	r0, r6
 800a0f6:	f7ff ff23 	bl	8009f40 <_xputch>
 800a0fa:	3501      	adds	r5, #1
 800a0fc:	e7d1      	b.n	800a0a2 <_format_hex+0x5e>
	...

0800a100 <_vprintf>:
 800a100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a104:	f04f 0800 	mov.w	r8, #0
 800a108:	b096      	sub	sp, #88	; 0x58
 800a10a:	e9cd 8004 	strd	r8, r0, [sp, #16]
 800a10e:	4614      	mov	r4, r2
 800a110:	af06      	add	r7, sp, #24
 800a112:	780b      	ldrb	r3, [r1, #0]
 800a114:	b91b      	cbnz	r3, 800a11e <_vprintf+0x1e>
 800a116:	9804      	ldr	r0, [sp, #16]
 800a118:	b016      	add	sp, #88	; 0x58
 800a11a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a11e:	2b25      	cmp	r3, #37	; 0x25
 800a120:	f101 0601 	add.w	r6, r1, #1
 800a124:	d005      	beq.n	800a132 <_vprintf+0x32>
 800a126:	4619      	mov	r1, r3
 800a128:	a801      	add	r0, sp, #4
 800a12a:	f7ff ff09 	bl	8009f40 <_xputch>
 800a12e:	4631      	mov	r1, r6
 800a130:	e7ef      	b.n	800a112 <_vprintf+0x12>
 800a132:	784b      	ldrb	r3, [r1, #1]
 800a134:	f8cd 800c 	str.w	r8, [sp, #12]
 800a138:	2b30      	cmp	r3, #48	; 0x30
 800a13a:	e9cd 8801 	strd	r8, r8, [sp, #4]
 800a13e:	d129      	bne.n	800a194 <_vprintf+0x94>
 800a140:	2320      	movs	r3, #32
 800a142:	9301      	str	r3, [sp, #4]
 800a144:	1c8e      	adds	r6, r1, #2
 800a146:	2200      	movs	r2, #0
 800a148:	4635      	mov	r5, r6
 800a14a:	4613      	mov	r3, r2
 800a14c:	f04f 0c0a 	mov.w	ip, #10
 800a150:	7829      	ldrb	r1, [r5, #0]
 800a152:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800a156:	2809      	cmp	r0, #9
 800a158:	462e      	mov	r6, r5
 800a15a:	f105 0501 	add.w	r5, r5, #1
 800a15e:	d91d      	bls.n	800a19c <_vprintf+0x9c>
 800a160:	b12a      	cbz	r2, 800a16e <_vprintf+0x6e>
 800a162:	9303      	str	r3, [sp, #12]
 800a164:	b11b      	cbz	r3, 800a16e <_vprintf+0x6e>
 800a166:	9b01      	ldr	r3, [sp, #4]
 800a168:	f043 0310 	orr.w	r3, r3, #16
 800a16c:	9301      	str	r3, [sp, #4]
 800a16e:	292e      	cmp	r1, #46	; 0x2e
 800a170:	d123      	bne.n	800a1ba <_vprintf+0xba>
 800a172:	7873      	ldrb	r3, [r6, #1]
 800a174:	2b2a      	cmp	r3, #42	; 0x2a
 800a176:	d015      	beq.n	800a1a4 <_vprintf+0xa4>
 800a178:	2100      	movs	r1, #0
 800a17a:	1c70      	adds	r0, r6, #1
 800a17c:	460a      	mov	r2, r1
 800a17e:	250a      	movs	r5, #10
 800a180:	7803      	ldrb	r3, [r0, #0]
 800a182:	3b30      	subs	r3, #48	; 0x30
 800a184:	2b09      	cmp	r3, #9
 800a186:	4606      	mov	r6, r0
 800a188:	f100 0001 	add.w	r0, r0, #1
 800a18c:	d958      	bls.n	800a240 <_vprintf+0x140>
 800a18e:	b181      	cbz	r1, 800a1b2 <_vprintf+0xb2>
 800a190:	9202      	str	r2, [sp, #8]
 800a192:	e00e      	b.n	800a1b2 <_vprintf+0xb2>
 800a194:	2b2d      	cmp	r3, #45	; 0x2d
 800a196:	d1d6      	bne.n	800a146 <_vprintf+0x46>
 800a198:	2340      	movs	r3, #64	; 0x40
 800a19a:	e7d2      	b.n	800a142 <_vprintf+0x42>
 800a19c:	fb0c 0303 	mla	r3, ip, r3, r0
 800a1a0:	2201      	movs	r2, #1
 800a1a2:	e7d5      	b.n	800a150 <_vprintf+0x50>
 800a1a4:	f854 3b04 	ldr.w	r3, [r4], #4
 800a1a8:	2b00      	cmp	r3, #0
 800a1aa:	bfb8      	it	lt
 800a1ac:	425b      	neglt	r3, r3
 800a1ae:	3602      	adds	r6, #2
 800a1b0:	9302      	str	r3, [sp, #8]
 800a1b2:	9b01      	ldr	r3, [sp, #4]
 800a1b4:	f043 0301 	orr.w	r3, r3, #1
 800a1b8:	9301      	str	r3, [sp, #4]
 800a1ba:	7833      	ldrb	r3, [r6, #0]
 800a1bc:	2b6c      	cmp	r3, #108	; 0x6c
 800a1be:	bf04      	itt	eq
 800a1c0:	3601      	addeq	r6, #1
 800a1c2:	9b01      	ldreq	r3, [sp, #4]
 800a1c4:	7831      	ldrb	r1, [r6, #0]
 800a1c6:	bf04      	itt	eq
 800a1c8:	f043 0304 	orreq.w	r3, r3, #4
 800a1cc:	9301      	streq	r3, [sp, #4]
 800a1ce:	2958      	cmp	r1, #88	; 0x58
 800a1d0:	f000 8169 	beq.w	800a4a6 <_vprintf+0x3a6>
 800a1d4:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800a1d8:	b2da      	uxtb	r2, r3
 800a1da:	2a15      	cmp	r2, #21
 800a1dc:	d8a4      	bhi.n	800a128 <_vprintf+0x28>
 800a1de:	2b15      	cmp	r3, #21
 800a1e0:	d8a2      	bhi.n	800a128 <_vprintf+0x28>
 800a1e2:	a201      	add	r2, pc, #4	; (adr r2, 800a1e8 <_vprintf+0xe8>)
 800a1e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a1e8:	0800a249 	stmdaeq	r0, {r0, r3, r6, r9, sp, pc}
 800a1ec:	0800a25b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r9, sp, pc}
 800a1f0:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a1f4:	0800a291 	stmdaeq	r0, {r0, r4, r7, r9, sp, pc}
 800a1f8:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a1fc:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a200:	0800a25b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r9, sp, pc}
 800a204:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a208:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a20c:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a210:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a214:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a218:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a21c:	0800a3e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sp, pc}
 800a220:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a224:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a228:	0800a411 	stmdaeq	r0, {r0, r4, sl, sp, pc}
 800a22c:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a230:	0800a487 	stmdaeq	r0, {r0, r1, r2, r7, sl, sp, pc}
 800a234:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a238:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 800a23c:	0800a4af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, sl, sp, pc}
 800a240:	fb05 3202 	mla	r2, r5, r2, r3
 800a244:	2101      	movs	r1, #1
 800a246:	e79b      	b.n	800a180 <_vprintf+0x80>
 800a248:	4625      	mov	r5, r4
 800a24a:	a801      	add	r0, sp, #4
 800a24c:	f855 1b04 	ldr.w	r1, [r5], #4
 800a250:	f7ff fe76 	bl	8009f40 <_xputch>
 800a254:	3601      	adds	r6, #1
 800a256:	462c      	mov	r4, r5
 800a258:	e769      	b.n	800a12e <_vprintf+0x2e>
 800a25a:	9901      	ldr	r1, [sp, #4]
 800a25c:	074d      	lsls	r5, r1, #29
 800a25e:	bf4b      	itete	mi
 800a260:	3407      	addmi	r4, #7
 800a262:	4625      	movpl	r5, r4
 800a264:	f024 0407 	bicmi.w	r4, r4, #7
 800a268:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800a26c:	bf45      	ittet	mi
 800a26e:	6863      	ldrmi	r3, [r4, #4]
 800a270:	4625      	movmi	r5, r4
 800a272:	17d3      	asrpl	r3, r2, #31
 800a274:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800a278:	2b00      	cmp	r3, #0
 800a27a:	da05      	bge.n	800a288 <_vprintf+0x188>
 800a27c:	f041 0108 	orr.w	r1, r1, #8
 800a280:	4252      	negs	r2, r2
 800a282:	9101      	str	r1, [sp, #4]
 800a284:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a288:	a801      	add	r0, sp, #4
 800a28a:	f7ff fe71 	bl	8009f70 <_format_int>
 800a28e:	e7e1      	b.n	800a254 <_vprintf+0x154>
 800a290:	3407      	adds	r4, #7
 800a292:	f024 0507 	bic.w	r5, r4, #7
 800a296:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800a29a:	f7fe fcad 	bl	8008bf8 <__aeabi_d2f>
 800a29e:	9b01      	ldr	r3, [sp, #4]
 800a2a0:	ee07 0a90 	vmov	s15, r0
 800a2a4:	07dc      	lsls	r4, r3, #31
 800a2a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a2aa:	bf4c      	ite	mi
 800a2ac:	9c02      	ldrmi	r4, [sp, #8]
 800a2ae:	2406      	movpl	r4, #6
 800a2b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a2b4:	bf48      	it	mi
 800a2b6:	eef1 7a67 	vnegmi.f32	s15, s15
 800a2ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2be:	bf4a      	itet	mi
 800a2c0:	f10d 0a19 	addmi.w	sl, sp, #25
 800a2c4:	46ba      	movpl	sl, r7
 800a2c6:	232d      	movmi	r3, #45	; 0x2d
 800a2c8:	ee17 0a10 	vmov	r0, s14
 800a2cc:	f04f 0200 	mov.w	r2, #0
 800a2d0:	4651      	mov	r1, sl
 800a2d2:	bf48      	it	mi
 800a2d4:	f88d 3018 	strbmi.w	r3, [sp, #24]
 800a2d8:	f7ff fdf8 	bl	8009ecc <_itostr>
 800a2dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a2e0:	232e      	movs	r3, #46	; 0x2e
 800a2e2:	f80a 3000 	strb.w	r3, [sl, r0]
 800a2e6:	eb0a 0900 	add.w	r9, sl, r0
 800a2ea:	230a      	movs	r3, #10
 800a2ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800a2f0:	1c62      	adds	r2, r4, #1
 800a2f2:	f109 0901 	add.w	r9, r9, #1
 800a2f6:	4619      	mov	r1, r3
 800a2f8:	2c00      	cmp	r4, #0
 800a2fa:	dc3d      	bgt.n	800a378 <_vprintf+0x278>
 800a2fc:	ee07 3a10 	vmov	s14, r3
 800a300:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a304:	4649      	mov	r1, r9
 800a306:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a30a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a30e:	ee17 0a90 	vmov	r0, s15
 800a312:	f7ff fddb 	bl	8009ecc <_itostr>
 800a316:	4448      	add	r0, r9
 800a318:	1bc0      	subs	r0, r0, r7
 800a31a:	1e44      	subs	r4, r0, #1
 800a31c:	193a      	adds	r2, r7, r4
 800a31e:	5d3b      	ldrb	r3, [r7, r4]
 800a320:	2b34      	cmp	r3, #52	; 0x34
 800a322:	d911      	bls.n	800a348 <_vprintf+0x248>
 800a324:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800a328:	292e      	cmp	r1, #46	; 0x2e
 800a32a:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800a32e:	d029      	beq.n	800a384 <_vprintf+0x284>
 800a330:	469c      	mov	ip, r3
 800a332:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800a336:	4663      	mov	r3, ip
 800a338:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800a33c:	2939      	cmp	r1, #57	; 0x39
 800a33e:	d01e      	beq.n	800a37e <_vprintf+0x27e>
 800a340:	292e      	cmp	r1, #46	; 0x2e
 800a342:	d01f      	beq.n	800a384 <_vprintf+0x284>
 800a344:	3101      	adds	r1, #1
 800a346:	7019      	strb	r1, [r3, #0]
 800a348:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800a34c:	446b      	add	r3, sp
 800a34e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800a352:	2b2e      	cmp	r3, #46	; 0x2e
 800a354:	bf08      	it	eq
 800a356:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800a35a:	46a1      	mov	r9, r4
 800a35c:	9b03      	ldr	r3, [sp, #12]
 800a35e:	4599      	cmp	r9, r3
 800a360:	db3b      	blt.n	800a3da <_vprintf+0x2da>
 800a362:	46b9      	mov	r9, r7
 800a364:	2c00      	cmp	r4, #0
 800a366:	f77f af75 	ble.w	800a254 <_vprintf+0x154>
 800a36a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800a36e:	a801      	add	r0, sp, #4
 800a370:	f7ff fde6 	bl	8009f40 <_xputch>
 800a374:	3c01      	subs	r4, #1
 800a376:	e7f5      	b.n	800a364 <_vprintf+0x264>
 800a378:	434b      	muls	r3, r1
 800a37a:	3c01      	subs	r4, #1
 800a37c:	e7bc      	b.n	800a2f8 <_vprintf+0x1f8>
 800a37e:	f88c e001 	strb.w	lr, [ip, #1]
 800a382:	e7d8      	b.n	800a336 <_vprintf+0x236>
 800a384:	3b01      	subs	r3, #1
 800a386:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800a38a:	7819      	ldrb	r1, [r3, #0]
 800a38c:	2939      	cmp	r1, #57	; 0x39
 800a38e:	d112      	bne.n	800a3b6 <_vprintf+0x2b6>
 800a390:	42bb      	cmp	r3, r7
 800a392:	d20d      	bcs.n	800a3b0 <_vprintf+0x2b0>
 800a394:	1c5c      	adds	r4, r3, #1
 800a396:	1c99      	adds	r1, r3, #2
 800a398:	428c      	cmp	r4, r1
 800a39a:	eba2 0203 	sub.w	r2, r2, r3
 800a39e:	d913      	bls.n	800a3c8 <_vprintf+0x2c8>
 800a3a0:	4619      	mov	r1, r3
 800a3a2:	441a      	add	r2, r3
 800a3a4:	428a      	cmp	r2, r1
 800a3a6:	d10b      	bne.n	800a3c0 <_vprintf+0x2c0>
 800a3a8:	2231      	movs	r2, #49	; 0x31
 800a3aa:	705a      	strb	r2, [r3, #1]
 800a3ac:	4604      	mov	r4, r0
 800a3ae:	e7cb      	b.n	800a348 <_vprintf+0x248>
 800a3b0:	f803 c901 	strb.w	ip, [r3], #-1
 800a3b4:	e7e9      	b.n	800a38a <_vprintf+0x28a>
 800a3b6:	42bb      	cmp	r3, r7
 800a3b8:	d3ec      	bcc.n	800a394 <_vprintf+0x294>
 800a3ba:	292d      	cmp	r1, #45	; 0x2d
 800a3bc:	d0ea      	beq.n	800a394 <_vprintf+0x294>
 800a3be:	e7c1      	b.n	800a344 <_vprintf+0x244>
 800a3c0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a3c4:	704c      	strb	r4, [r1, #1]
 800a3c6:	e7ed      	b.n	800a3a4 <_vprintf+0x2a4>
 800a3c8:	4414      	add	r4, r2
 800a3ca:	440a      	add	r2, r1
 800a3cc:	428a      	cmp	r2, r1
 800a3ce:	d0eb      	beq.n	800a3a8 <_vprintf+0x2a8>
 800a3d0:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800a3d4:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800a3d8:	e7f8      	b.n	800a3cc <_vprintf+0x2cc>
 800a3da:	2120      	movs	r1, #32
 800a3dc:	a801      	add	r0, sp, #4
 800a3de:	f7ff fdaf 	bl	8009f40 <_xputch>
 800a3e2:	f109 0901 	add.w	r9, r9, #1
 800a3e6:	e7b9      	b.n	800a35c <_vprintf+0x25c>
 800a3e8:	4625      	mov	r5, r4
 800a3ea:	2308      	movs	r3, #8
 800a3ec:	f855 4b04 	ldr.w	r4, [r5], #4
 800a3f0:	9303      	str	r3, [sp, #12]
 800a3f2:	2130      	movs	r1, #48	; 0x30
 800a3f4:	2320      	movs	r3, #32
 800a3f6:	a801      	add	r0, sp, #4
 800a3f8:	9301      	str	r3, [sp, #4]
 800a3fa:	f7ff fda1 	bl	8009f40 <_xputch>
 800a3fe:	2178      	movs	r1, #120	; 0x78
 800a400:	a801      	add	r0, sp, #4
 800a402:	f7ff fd9d 	bl	8009f40 <_xputch>
 800a406:	4621      	mov	r1, r4
 800a408:	a801      	add	r0, sp, #4
 800a40a:	f7ff fe1b 	bl	800a044 <_format_hex>
 800a40e:	e721      	b.n	800a254 <_vprintf+0x154>
 800a410:	4625      	mov	r5, r4
 800a412:	2400      	movs	r4, #0
 800a414:	f855 9b04 	ldr.w	r9, [r5], #4
 800a418:	f819 3004 	ldrb.w	r3, [r9, r4]
 800a41c:	b993      	cbnz	r3, 800a444 <_vprintf+0x344>
 800a41e:	9b01      	ldr	r3, [sp, #4]
 800a420:	07d9      	lsls	r1, r3, #31
 800a422:	d503      	bpl.n	800a42c <_vprintf+0x32c>
 800a424:	9b02      	ldr	r3, [sp, #8]
 800a426:	429c      	cmp	r4, r3
 800a428:	bfa8      	it	ge
 800a42a:	461c      	movge	r4, r3
 800a42c:	9b01      	ldr	r3, [sp, #4]
 800a42e:	065a      	lsls	r2, r3, #25
 800a430:	f104 0a01 	add.w	sl, r4, #1
 800a434:	d403      	bmi.n	800a43e <_vprintf+0x33e>
 800a436:	9b03      	ldr	r3, [sp, #12]
 800a438:	429c      	cmp	r4, r3
 800a43a:	db05      	blt.n	800a448 <_vprintf+0x348>
 800a43c:	4654      	mov	r4, sl
 800a43e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a442:	e00d      	b.n	800a460 <_vprintf+0x360>
 800a444:	3401      	adds	r4, #1
 800a446:	e7e7      	b.n	800a418 <_vprintf+0x318>
 800a448:	2120      	movs	r1, #32
 800a44a:	a801      	add	r0, sp, #4
 800a44c:	f7ff fd78 	bl	8009f40 <_xputch>
 800a450:	4654      	mov	r4, sl
 800a452:	e7eb      	b.n	800a42c <_vprintf+0x32c>
 800a454:	a801      	add	r0, sp, #4
 800a456:	f7ff fd73 	bl	8009f40 <_xputch>
 800a45a:	9b02      	ldr	r3, [sp, #8]
 800a45c:	3b01      	subs	r3, #1
 800a45e:	9302      	str	r3, [sp, #8]
 800a460:	9b01      	ldr	r3, [sp, #4]
 800a462:	07db      	lsls	r3, r3, #31
 800a464:	d501      	bpl.n	800a46a <_vprintf+0x36a>
 800a466:	9b02      	ldr	r3, [sp, #8]
 800a468:	b11b      	cbz	r3, 800a472 <_vprintf+0x372>
 800a46a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800a46e:	2900      	cmp	r1, #0
 800a470:	d1f0      	bne.n	800a454 <_vprintf+0x354>
 800a472:	9b03      	ldr	r3, [sp, #12]
 800a474:	429c      	cmp	r4, r3
 800a476:	f6bf aeed 	bge.w	800a254 <_vprintf+0x154>
 800a47a:	2120      	movs	r1, #32
 800a47c:	a801      	add	r0, sp, #4
 800a47e:	f7ff fd5f 	bl	8009f40 <_xputch>
 800a482:	3401      	adds	r4, #1
 800a484:	e7f5      	b.n	800a472 <_vprintf+0x372>
 800a486:	9b01      	ldr	r3, [sp, #4]
 800a488:	f013 0304 	ands.w	r3, r3, #4
 800a48c:	bf1d      	ittte	ne
 800a48e:	3407      	addne	r4, #7
 800a490:	f024 0407 	bicne.w	r4, r4, #7
 800a494:	4625      	movne	r5, r4
 800a496:	4625      	moveq	r5, r4
 800a498:	bf1a      	itte	ne
 800a49a:	f855 2b08 	ldrne.w	r2, [r5], #8
 800a49e:	6863      	ldrne	r3, [r4, #4]
 800a4a0:	f855 2b04 	ldreq.w	r2, [r5], #4
 800a4a4:	e6f0      	b.n	800a288 <_vprintf+0x188>
 800a4a6:	9b01      	ldr	r3, [sp, #4]
 800a4a8:	f043 0302 	orr.w	r3, r3, #2
 800a4ac:	9301      	str	r3, [sp, #4]
 800a4ae:	4625      	mov	r5, r4
 800a4b0:	f855 1b04 	ldr.w	r1, [r5], #4
 800a4b4:	e7a8      	b.n	800a408 <_vprintf+0x308>
 800a4b6:	bf00      	nop

0800a4b8 <printf>:
 800a4b8:	b40f      	push	{r0, r1, r2, r3}
 800a4ba:	b507      	push	{r0, r1, r2, lr}
 800a4bc:	aa04      	add	r2, sp, #16
 800a4be:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a4c2:	f852 1b04 	ldr.w	r1, [r2], #4
 800a4c6:	9201      	str	r2, [sp, #4]
 800a4c8:	f7ff fe1a 	bl	800a100 <_vprintf>
 800a4cc:	b003      	add	sp, #12
 800a4ce:	f85d eb04 	ldr.w	lr, [sp], #4
 800a4d2:	b004      	add	sp, #16
 800a4d4:	4770      	bx	lr
	...

0800a4d8 <sprintf>:
 800a4d8:	b40e      	push	{r1, r2, r3}
 800a4da:	b517      	push	{r0, r1, r2, r4, lr}
 800a4dc:	4c09      	ldr	r4, [pc, #36]	; (800a504 <sprintf+0x2c>)
 800a4de:	aa05      	add	r2, sp, #20
 800a4e0:	6020      	str	r0, [r4, #0]
 800a4e2:	f852 1b04 	ldr.w	r1, [r2], #4
 800a4e6:	9201      	str	r2, [sp, #4]
 800a4e8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a4ec:	f7ff fe08 	bl	800a100 <_vprintf>
 800a4f0:	6822      	ldr	r2, [r4, #0]
 800a4f2:	2300      	movs	r3, #0
 800a4f4:	7013      	strb	r3, [r2, #0]
 800a4f6:	6023      	str	r3, [r4, #0]
 800a4f8:	b003      	add	sp, #12
 800a4fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4fe:	b003      	add	sp, #12
 800a500:	4770      	bx	lr
 800a502:	bf00      	nop
 800a504:	200000f8 	strdcs	r0, [r0], -r8

0800a508 <snprintf>:
 800a508:	b40c      	push	{r2, r3}
 800a50a:	b513      	push	{r0, r1, r4, lr}
 800a50c:	4c09      	ldr	r4, [pc, #36]	; (800a534 <snprintf+0x2c>)
 800a50e:	aa04      	add	r2, sp, #16
 800a510:	460b      	mov	r3, r1
 800a512:	6020      	str	r0, [r4, #0]
 800a514:	f852 1b04 	ldr.w	r1, [r2], #4
 800a518:	9201      	str	r2, [sp, #4]
 800a51a:	4618      	mov	r0, r3
 800a51c:	f7ff fdf0 	bl	800a100 <_vprintf>
 800a520:	6822      	ldr	r2, [r4, #0]
 800a522:	2300      	movs	r3, #0
 800a524:	7013      	strb	r3, [r2, #0]
 800a526:	6023      	str	r3, [r4, #0]
 800a528:	b002      	add	sp, #8
 800a52a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a52e:	b002      	add	sp, #8
 800a530:	4770      	bx	lr
 800a532:	bf00      	nop
 800a534:	200000f8 	strdcs	r0, [r0], -r8

0800a538 <vsnprintf>:
 800a538:	b538      	push	{r3, r4, r5, lr}
 800a53a:	4c06      	ldr	r4, [pc, #24]	; (800a554 <vsnprintf+0x1c>)
 800a53c:	4605      	mov	r5, r0
 800a53e:	4608      	mov	r0, r1
 800a540:	4611      	mov	r1, r2
 800a542:	461a      	mov	r2, r3
 800a544:	6025      	str	r5, [r4, #0]
 800a546:	f7ff fddb 	bl	800a100 <_vprintf>
 800a54a:	6822      	ldr	r2, [r4, #0]
 800a54c:	2300      	movs	r3, #0
 800a54e:	7013      	strb	r3, [r2, #0]
 800a550:	6023      	str	r3, [r4, #0]
 800a552:	bd38      	pop	{r3, r4, r5, pc}
 800a554:	200000f8 	strdcs	r0, [r0], -r8

0800a558 <__udivmoddi4>:
 800a558:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a55c:	9e08      	ldr	r6, [sp, #32]
 800a55e:	460d      	mov	r5, r1
 800a560:	4604      	mov	r4, r0
 800a562:	460f      	mov	r7, r1
 800a564:	2b00      	cmp	r3, #0
 800a566:	d14a      	bne.n	800a5fe <__udivmoddi4+0xa6>
 800a568:	428a      	cmp	r2, r1
 800a56a:	4694      	mov	ip, r2
 800a56c:	d965      	bls.n	800a63a <__udivmoddi4+0xe2>
 800a56e:	fab2 f382 	clz	r3, r2
 800a572:	b143      	cbz	r3, 800a586 <__udivmoddi4+0x2e>
 800a574:	fa02 fc03 	lsl.w	ip, r2, r3
 800a578:	f1c3 0220 	rsb	r2, r3, #32
 800a57c:	409f      	lsls	r7, r3
 800a57e:	fa20 f202 	lsr.w	r2, r0, r2
 800a582:	4317      	orrs	r7, r2
 800a584:	409c      	lsls	r4, r3
 800a586:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800a58a:	fa1f f58c 	uxth.w	r5, ip
 800a58e:	fbb7 f1fe 	udiv	r1, r7, lr
 800a592:	0c22      	lsrs	r2, r4, #16
 800a594:	fb0e 7711 	mls	r7, lr, r1, r7
 800a598:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800a59c:	fb01 f005 	mul.w	r0, r1, r5
 800a5a0:	4290      	cmp	r0, r2
 800a5a2:	d90a      	bls.n	800a5ba <__udivmoddi4+0x62>
 800a5a4:	eb1c 0202 	adds.w	r2, ip, r2
 800a5a8:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 800a5ac:	f080 811c 	bcs.w	800a7e8 <__udivmoddi4+0x290>
 800a5b0:	4290      	cmp	r0, r2
 800a5b2:	f240 8119 	bls.w	800a7e8 <__udivmoddi4+0x290>
 800a5b6:	3902      	subs	r1, #2
 800a5b8:	4462      	add	r2, ip
 800a5ba:	1a12      	subs	r2, r2, r0
 800a5bc:	b2a4      	uxth	r4, r4
 800a5be:	fbb2 f0fe 	udiv	r0, r2, lr
 800a5c2:	fb0e 2210 	mls	r2, lr, r0, r2
 800a5c6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a5ca:	fb00 f505 	mul.w	r5, r0, r5
 800a5ce:	42a5      	cmp	r5, r4
 800a5d0:	d90a      	bls.n	800a5e8 <__udivmoddi4+0x90>
 800a5d2:	eb1c 0404 	adds.w	r4, ip, r4
 800a5d6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a5da:	f080 8107 	bcs.w	800a7ec <__udivmoddi4+0x294>
 800a5de:	42a5      	cmp	r5, r4
 800a5e0:	f240 8104 	bls.w	800a7ec <__udivmoddi4+0x294>
 800a5e4:	4464      	add	r4, ip
 800a5e6:	3802      	subs	r0, #2
 800a5e8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800a5ec:	1b64      	subs	r4, r4, r5
 800a5ee:	2100      	movs	r1, #0
 800a5f0:	b11e      	cbz	r6, 800a5fa <__udivmoddi4+0xa2>
 800a5f2:	40dc      	lsrs	r4, r3
 800a5f4:	2300      	movs	r3, #0
 800a5f6:	e9c6 4300 	strd	r4, r3, [r6]
 800a5fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5fe:	428b      	cmp	r3, r1
 800a600:	d908      	bls.n	800a614 <__udivmoddi4+0xbc>
 800a602:	2e00      	cmp	r6, #0
 800a604:	f000 80ed 	beq.w	800a7e2 <__udivmoddi4+0x28a>
 800a608:	2100      	movs	r1, #0
 800a60a:	e9c6 0500 	strd	r0, r5, [r6]
 800a60e:	4608      	mov	r0, r1
 800a610:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a614:	fab3 f183 	clz	r1, r3
 800a618:	2900      	cmp	r1, #0
 800a61a:	d149      	bne.n	800a6b0 <__udivmoddi4+0x158>
 800a61c:	42ab      	cmp	r3, r5
 800a61e:	d302      	bcc.n	800a626 <__udivmoddi4+0xce>
 800a620:	4282      	cmp	r2, r0
 800a622:	f200 80f8 	bhi.w	800a816 <__udivmoddi4+0x2be>
 800a626:	1a84      	subs	r4, r0, r2
 800a628:	eb65 0203 	sbc.w	r2, r5, r3
 800a62c:	2001      	movs	r0, #1
 800a62e:	4617      	mov	r7, r2
 800a630:	2e00      	cmp	r6, #0
 800a632:	d0e2      	beq.n	800a5fa <__udivmoddi4+0xa2>
 800a634:	e9c6 4700 	strd	r4, r7, [r6]
 800a638:	e7df      	b.n	800a5fa <__udivmoddi4+0xa2>
 800a63a:	b902      	cbnz	r2, 800a63e <__udivmoddi4+0xe6>
 800a63c:	deff      	udf	#255	; 0xff
 800a63e:	fab2 f382 	clz	r3, r2
 800a642:	2b00      	cmp	r3, #0
 800a644:	f040 8090 	bne.w	800a768 <__udivmoddi4+0x210>
 800a648:	1a8a      	subs	r2, r1, r2
 800a64a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a64e:	fa1f fe8c 	uxth.w	lr, ip
 800a652:	2101      	movs	r1, #1
 800a654:	fbb2 f5f7 	udiv	r5, r2, r7
 800a658:	fb07 2015 	mls	r0, r7, r5, r2
 800a65c:	0c22      	lsrs	r2, r4, #16
 800a65e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a662:	fb0e f005 	mul.w	r0, lr, r5
 800a666:	4290      	cmp	r0, r2
 800a668:	d908      	bls.n	800a67c <__udivmoddi4+0x124>
 800a66a:	eb1c 0202 	adds.w	r2, ip, r2
 800a66e:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a672:	d202      	bcs.n	800a67a <__udivmoddi4+0x122>
 800a674:	4290      	cmp	r0, r2
 800a676:	f200 80cb 	bhi.w	800a810 <__udivmoddi4+0x2b8>
 800a67a:	4645      	mov	r5, r8
 800a67c:	1a12      	subs	r2, r2, r0
 800a67e:	b2a4      	uxth	r4, r4
 800a680:	fbb2 f0f7 	udiv	r0, r2, r7
 800a684:	fb07 2210 	mls	r2, r7, r0, r2
 800a688:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a68c:	fb0e fe00 	mul.w	lr, lr, r0
 800a690:	45a6      	cmp	lr, r4
 800a692:	d908      	bls.n	800a6a6 <__udivmoddi4+0x14e>
 800a694:	eb1c 0404 	adds.w	r4, ip, r4
 800a698:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800a69c:	d202      	bcs.n	800a6a4 <__udivmoddi4+0x14c>
 800a69e:	45a6      	cmp	lr, r4
 800a6a0:	f200 80bb 	bhi.w	800a81a <__udivmoddi4+0x2c2>
 800a6a4:	4610      	mov	r0, r2
 800a6a6:	eba4 040e 	sub.w	r4, r4, lr
 800a6aa:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800a6ae:	e79f      	b.n	800a5f0 <__udivmoddi4+0x98>
 800a6b0:	f1c1 0720 	rsb	r7, r1, #32
 800a6b4:	408b      	lsls	r3, r1
 800a6b6:	fa22 fc07 	lsr.w	ip, r2, r7
 800a6ba:	ea4c 0c03 	orr.w	ip, ip, r3
 800a6be:	fa05 f401 	lsl.w	r4, r5, r1
 800a6c2:	fa20 f307 	lsr.w	r3, r0, r7
 800a6c6:	40fd      	lsrs	r5, r7
 800a6c8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800a6cc:	4323      	orrs	r3, r4
 800a6ce:	fbb5 f8f9 	udiv	r8, r5, r9
 800a6d2:	fa1f fe8c 	uxth.w	lr, ip
 800a6d6:	fb09 5518 	mls	r5, r9, r8, r5
 800a6da:	0c1c      	lsrs	r4, r3, #16
 800a6dc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a6e0:	fb08 f50e 	mul.w	r5, r8, lr
 800a6e4:	42a5      	cmp	r5, r4
 800a6e6:	fa02 f201 	lsl.w	r2, r2, r1
 800a6ea:	fa00 f001 	lsl.w	r0, r0, r1
 800a6ee:	d90b      	bls.n	800a708 <__udivmoddi4+0x1b0>
 800a6f0:	eb1c 0404 	adds.w	r4, ip, r4
 800a6f4:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800a6f8:	f080 8088 	bcs.w	800a80c <__udivmoddi4+0x2b4>
 800a6fc:	42a5      	cmp	r5, r4
 800a6fe:	f240 8085 	bls.w	800a80c <__udivmoddi4+0x2b4>
 800a702:	f1a8 0802 	sub.w	r8, r8, #2
 800a706:	4464      	add	r4, ip
 800a708:	1b64      	subs	r4, r4, r5
 800a70a:	b29d      	uxth	r5, r3
 800a70c:	fbb4 f3f9 	udiv	r3, r4, r9
 800a710:	fb09 4413 	mls	r4, r9, r3, r4
 800a714:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800a718:	fb03 fe0e 	mul.w	lr, r3, lr
 800a71c:	45a6      	cmp	lr, r4
 800a71e:	d908      	bls.n	800a732 <__udivmoddi4+0x1da>
 800a720:	eb1c 0404 	adds.w	r4, ip, r4
 800a724:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 800a728:	d26c      	bcs.n	800a804 <__udivmoddi4+0x2ac>
 800a72a:	45a6      	cmp	lr, r4
 800a72c:	d96a      	bls.n	800a804 <__udivmoddi4+0x2ac>
 800a72e:	3b02      	subs	r3, #2
 800a730:	4464      	add	r4, ip
 800a732:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800a736:	fba3 9502 	umull	r9, r5, r3, r2
 800a73a:	eba4 040e 	sub.w	r4, r4, lr
 800a73e:	42ac      	cmp	r4, r5
 800a740:	46c8      	mov	r8, r9
 800a742:	46ae      	mov	lr, r5
 800a744:	d356      	bcc.n	800a7f4 <__udivmoddi4+0x29c>
 800a746:	d053      	beq.n	800a7f0 <__udivmoddi4+0x298>
 800a748:	b156      	cbz	r6, 800a760 <__udivmoddi4+0x208>
 800a74a:	ebb0 0208 	subs.w	r2, r0, r8
 800a74e:	eb64 040e 	sbc.w	r4, r4, lr
 800a752:	fa04 f707 	lsl.w	r7, r4, r7
 800a756:	40ca      	lsrs	r2, r1
 800a758:	40cc      	lsrs	r4, r1
 800a75a:	4317      	orrs	r7, r2
 800a75c:	e9c6 7400 	strd	r7, r4, [r6]
 800a760:	4618      	mov	r0, r3
 800a762:	2100      	movs	r1, #0
 800a764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a768:	f1c3 0120 	rsb	r1, r3, #32
 800a76c:	fa02 fc03 	lsl.w	ip, r2, r3
 800a770:	fa20 f201 	lsr.w	r2, r0, r1
 800a774:	fa25 f101 	lsr.w	r1, r5, r1
 800a778:	409d      	lsls	r5, r3
 800a77a:	432a      	orrs	r2, r5
 800a77c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800a780:	fa1f fe8c 	uxth.w	lr, ip
 800a784:	fbb1 f0f7 	udiv	r0, r1, r7
 800a788:	fb07 1510 	mls	r5, r7, r0, r1
 800a78c:	0c11      	lsrs	r1, r2, #16
 800a78e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800a792:	fb00 f50e 	mul.w	r5, r0, lr
 800a796:	428d      	cmp	r5, r1
 800a798:	fa04 f403 	lsl.w	r4, r4, r3
 800a79c:	d908      	bls.n	800a7b0 <__udivmoddi4+0x258>
 800a79e:	eb1c 0101 	adds.w	r1, ip, r1
 800a7a2:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800a7a6:	d22f      	bcs.n	800a808 <__udivmoddi4+0x2b0>
 800a7a8:	428d      	cmp	r5, r1
 800a7aa:	d92d      	bls.n	800a808 <__udivmoddi4+0x2b0>
 800a7ac:	3802      	subs	r0, #2
 800a7ae:	4461      	add	r1, ip
 800a7b0:	1b49      	subs	r1, r1, r5
 800a7b2:	b292      	uxth	r2, r2
 800a7b4:	fbb1 f5f7 	udiv	r5, r1, r7
 800a7b8:	fb07 1115 	mls	r1, r7, r5, r1
 800a7bc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a7c0:	fb05 f10e 	mul.w	r1, r5, lr
 800a7c4:	4291      	cmp	r1, r2
 800a7c6:	d908      	bls.n	800a7da <__udivmoddi4+0x282>
 800a7c8:	eb1c 0202 	adds.w	r2, ip, r2
 800a7cc:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800a7d0:	d216      	bcs.n	800a800 <__udivmoddi4+0x2a8>
 800a7d2:	4291      	cmp	r1, r2
 800a7d4:	d914      	bls.n	800a800 <__udivmoddi4+0x2a8>
 800a7d6:	3d02      	subs	r5, #2
 800a7d8:	4462      	add	r2, ip
 800a7da:	1a52      	subs	r2, r2, r1
 800a7dc:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800a7e0:	e738      	b.n	800a654 <__udivmoddi4+0xfc>
 800a7e2:	4631      	mov	r1, r6
 800a7e4:	4630      	mov	r0, r6
 800a7e6:	e708      	b.n	800a5fa <__udivmoddi4+0xa2>
 800a7e8:	4639      	mov	r1, r7
 800a7ea:	e6e6      	b.n	800a5ba <__udivmoddi4+0x62>
 800a7ec:	4610      	mov	r0, r2
 800a7ee:	e6fb      	b.n	800a5e8 <__udivmoddi4+0x90>
 800a7f0:	4548      	cmp	r0, r9
 800a7f2:	d2a9      	bcs.n	800a748 <__udivmoddi4+0x1f0>
 800a7f4:	ebb9 0802 	subs.w	r8, r9, r2
 800a7f8:	eb65 0e0c 	sbc.w	lr, r5, ip
 800a7fc:	3b01      	subs	r3, #1
 800a7fe:	e7a3      	b.n	800a748 <__udivmoddi4+0x1f0>
 800a800:	4645      	mov	r5, r8
 800a802:	e7ea      	b.n	800a7da <__udivmoddi4+0x282>
 800a804:	462b      	mov	r3, r5
 800a806:	e794      	b.n	800a732 <__udivmoddi4+0x1da>
 800a808:	4640      	mov	r0, r8
 800a80a:	e7d1      	b.n	800a7b0 <__udivmoddi4+0x258>
 800a80c:	46d0      	mov	r8, sl
 800a80e:	e77b      	b.n	800a708 <__udivmoddi4+0x1b0>
 800a810:	3d02      	subs	r5, #2
 800a812:	4462      	add	r2, ip
 800a814:	e732      	b.n	800a67c <__udivmoddi4+0x124>
 800a816:	4608      	mov	r0, r1
 800a818:	e70a      	b.n	800a630 <__udivmoddi4+0xd8>
 800a81a:	4464      	add	r4, ip
 800a81c:	3802      	subs	r0, #2
 800a81e:	e742      	b.n	800a6a6 <__udivmoddi4+0x14e>

0800a820 <RemoteConfig::HandleList()>:
 800a820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a824:	6801      	ldr	r1, [r0, #0]
 800a826:	4a2b      	ldr	r2, [pc, #172]	; (800a8d4 <RemoteConfig::HandleList()+0xb4>)
 800a828:	4b2b      	ldr	r3, [pc, #172]	; (800a8d8 <RemoteConfig::HandleList()+0xb8>)
 800a82a:	4e2c      	ldr	r6, [pc, #176]	; (800a8dc <RemoteConfig::HandleList()+0xbc>)
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	6835      	ldr	r5, [r6, #0]
 800a830:	695f      	ldr	r7, [r3, #20]
 800a832:	4604      	mov	r4, r0
 800a834:	2012      	movs	r0, #18
 800a836:	fb00 2201 	mla	r2, r0, r1, r2
 800a83a:	6860      	ldr	r0, [r4, #4]
 800a83c:	4928      	ldr	r1, [pc, #160]	; (800a8e0 <RemoteConfig::HandleList()+0xc0>)
 800a83e:	f04f 080c 	mov.w	r8, #12
 800a842:	fb08 1100 	mla	r1, r8, r0, r1
 800a846:	4827      	ldr	r0, [pc, #156]	; (800a8e4 <RemoteConfig::HandleList()+0xc4>)
 800a848:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a84c:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a850:	b2fb      	uxtb	r3, r7
 800a852:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a856:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a85a:	b089      	sub	sp, #36	; 0x24
 800a85c:	3507      	adds	r5, #7
 800a85e:	0e3f      	lsrs	r7, r7, #24
 800a860:	f1b9 0f00 	cmp.w	r9, #0
 800a864:	d01d      	beq.n	800a8a2 <RemoteConfig::HandleList()+0x82>
 800a866:	3009      	adds	r0, #9
 800a868:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a86c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a870:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a874:	4a1c      	ldr	r2, [pc, #112]	; (800a8e8 <RemoteConfig::HandleList()+0xc8>)
 800a876:	f8cd c000 	str.w	ip, [sp]
 800a87a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a87e:	4628      	mov	r0, r5
 800a880:	f7ff fe42 	bl	800a508 <snprintf>
 800a884:	69e3      	ldr	r3, [r4, #28]
 800a886:	2b05      	cmp	r3, #5
 800a888:	d118      	bne.n	800a8bc <RemoteConfig::HandleList()+0x9c>
 800a88a:	f642 1305 	movw	r3, #10501	; 0x2905
 800a88e:	9300      	str	r3, [sp, #0]
 800a890:	69a3      	ldr	r3, [r4, #24]
 800a892:	b282      	uxth	r2, r0
 800a894:	4629      	mov	r1, r5
 800a896:	7d20      	ldrb	r0, [r4, #20]
 800a898:	f008 f9b4 	bl	8012c04 <udp_send>
 800a89c:	b009      	add	sp, #36	; 0x24
 800a89e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a8a2:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a8a6:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a8aa:	e9cd ce00 	strd	ip, lr, [sp]
 800a8ae:	4a0f      	ldr	r2, [pc, #60]	; (800a8ec <RemoteConfig::HandleList()+0xcc>)
 800a8b0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a8b4:	4628      	mov	r0, r5
 800a8b6:	f7ff fe27 	bl	800a508 <snprintf>
 800a8ba:	e7e3      	b.n	800a884 <RemoteConfig::HandleList()+0x64>
 800a8bc:	2b06      	cmp	r3, #6
 800a8be:	d1ed      	bne.n	800a89c <RemoteConfig::HandleList()+0x7c>
 800a8c0:	6833      	ldr	r3, [r6, #0]
 800a8c2:	799b      	ldrb	r3, [r3, #6]
 800a8c4:	2b2a      	cmp	r3, #42	; 0x2a
 800a8c6:	d1e9      	bne.n	800a89c <RemoteConfig::HandleList()+0x7c>
 800a8c8:	f642 1305 	movw	r3, #10501	; 0x2905
 800a8cc:	9300      	str	r3, [sp, #0]
 800a8ce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a8d2:	e7de      	b.n	800a892 <RemoteConfig::HandleList()+0x72>
 800a8d4:	08018e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, pc}
 800a8d8:	2000f9f0 	strdcs	pc, [r0], -r0
 800a8dc:	200000fc 	strdcs	r0, [r0], -ip
 800a8e0:	08018f02 	stmdaeq	r1, {r1, r8, r9, sl, fp, pc}
 800a8e4:	20000100 	andcs	r0, r0, r0, lsl #2
 800a8e8:	08018d51 	stmdaeq	r1, {r0, r4, r6, r8, sl, fp, pc}
 800a8ec:	08018d6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, fp, pc}

0800a8f0 <RemoteConfig::HandleDisplayGet()>:
 800a8f0:	69c3      	ldr	r3, [r0, #28]
 800a8f2:	2b08      	cmp	r3, #8
 800a8f4:	d11b      	bne.n	800a92e <RemoteConfig::HandleDisplayGet()+0x3e>
 800a8f6:	4b0e      	ldr	r3, [pc, #56]	; (800a930 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a8f8:	681b      	ldr	r3, [r3, #0]
 800a8fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a8fc:	7c19      	ldrb	r1, [r3, #16]
 800a8fe:	4d0d      	ldr	r5, [pc, #52]	; (800a934 <RemoteConfig::HandleDisplayGet()+0x44>)
 800a900:	4a0d      	ldr	r2, [pc, #52]	; (800a938 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a902:	4b0e      	ldr	r3, [pc, #56]	; (800a93c <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a904:	4604      	mov	r4, r0
 800a906:	2900      	cmp	r1, #0
 800a908:	bf18      	it	ne
 800a90a:	4613      	movne	r3, r2
 800a90c:	6828      	ldr	r0, [r5, #0]
 800a90e:	4a0c      	ldr	r2, [pc, #48]	; (800a940 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a910:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a914:	f7ff fdf8 	bl	800a508 <snprintf>
 800a918:	f642 1305 	movw	r3, #10501	; 0x2905
 800a91c:	9300      	str	r3, [sp, #0]
 800a91e:	b282      	uxth	r2, r0
 800a920:	69a3      	ldr	r3, [r4, #24]
 800a922:	6829      	ldr	r1, [r5, #0]
 800a924:	7d20      	ldrb	r0, [r4, #20]
 800a926:	f008 f96d 	bl	8012c04 <udp_send>
 800a92a:	b003      	add	sp, #12
 800a92c:	bd30      	pop	{r4, r5, pc}
 800a92e:	4770      	bx	lr
 800a930:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 800a934:	200000fc 	strdcs	r0, [r0], -ip
 800a938:	08018d83 	stmdaeq	r1, {r0, r1, r7, r8, sl, fp, pc}
 800a93c:	08018d80 	stmdaeq	r1, {r7, r8, sl, fp, pc}
 800a940:	08018d87 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, fp, pc}

0800a944 <RemoteConfig::HandleTftpGet()>:
 800a944:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a946:	4604      	mov	r4, r0
 800a948:	f000 fda8 	bl	800b49c <RemoteConfig::PlatformHandleTftpGet()>
 800a94c:	69e3      	ldr	r3, [r4, #28]
 800a94e:	2b05      	cmp	r3, #5
 800a950:	d116      	bne.n	800a980 <RemoteConfig::HandleTftpGet()+0x3c>
 800a952:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a956:	4d0b      	ldr	r5, [pc, #44]	; (800a984 <RemoteConfig::HandleTftpGet()+0x40>)
 800a958:	4a0b      	ldr	r2, [pc, #44]	; (800a988 <RemoteConfig::HandleTftpGet()+0x44>)
 800a95a:	4b0c      	ldr	r3, [pc, #48]	; (800a98c <RemoteConfig::HandleTftpGet()+0x48>)
 800a95c:	6828      	ldr	r0, [r5, #0]
 800a95e:	2900      	cmp	r1, #0
 800a960:	bf08      	it	eq
 800a962:	4613      	moveq	r3, r2
 800a964:	4a0a      	ldr	r2, [pc, #40]	; (800a990 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a966:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a96a:	f7ff fdcd 	bl	800a508 <snprintf>
 800a96e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a972:	9300      	str	r3, [sp, #0]
 800a974:	b282      	uxth	r2, r0
 800a976:	69a3      	ldr	r3, [r4, #24]
 800a978:	6829      	ldr	r1, [r5, #0]
 800a97a:	7d20      	ldrb	r0, [r4, #20]
 800a97c:	f008 f942 	bl	8012c04 <udp_send>
 800a980:	b003      	add	sp, #12
 800a982:	bd30      	pop	{r4, r5, pc}
 800a984:	200000fc 	strdcs	r0, [r0], -ip
 800a988:	08018d83 	stmdaeq	r1, {r0, r1, r7, r8, sl, fp, pc}
 800a98c:	08018d80 	stmdaeq	r1, {r7, r8, sl, fp, pc}
 800a990:	08018d93 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, fp, pc}

0800a994 <RemoteConfig::HandleVersion()>:
 800a994:	69c3      	ldr	r3, [r0, #28]
 800a996:	2b08      	cmp	r3, #8
 800a998:	d114      	bne.n	800a9c4 <RemoteConfig::HandleVersion()+0x30>
 800a99a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a99c:	4d0a      	ldr	r5, [pc, #40]	; (800a9c8 <RemoteConfig::HandleVersion()+0x34>)
 800a99e:	4b0b      	ldr	r3, [pc, #44]	; (800a9cc <RemoteConfig::HandleVersion()+0x38>)
 800a9a0:	4a0b      	ldr	r2, [pc, #44]	; (800a9d0 <RemoteConfig::HandleVersion()+0x3c>)
 800a9a2:	4604      	mov	r4, r0
 800a9a4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a9a8:	6828      	ldr	r0, [r5, #0]
 800a9aa:	f7ff fdad 	bl	800a508 <snprintf>
 800a9ae:	f642 1305 	movw	r3, #10501	; 0x2905
 800a9b2:	9300      	str	r3, [sp, #0]
 800a9b4:	b282      	uxth	r2, r0
 800a9b6:	69a3      	ldr	r3, [r4, #24]
 800a9b8:	6829      	ldr	r1, [r5, #0]
 800a9ba:	7d20      	ldrb	r0, [r4, #20]
 800a9bc:	f008 f922 	bl	8012c04 <udp_send>
 800a9c0:	b003      	add	sp, #12
 800a9c2:	bd30      	pop	{r4, r5, pc}
 800a9c4:	4770      	bx	lr
 800a9c6:	bf00      	nop
 800a9c8:	200000fc 	strdcs	r0, [r0], -ip
 800a9cc:	2000fd5a 	andcs	pc, r0, sl, asr sp	; <UNPREDICTABLE>
 800a9d0:	08018d9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, fp, pc}

0800a9d4 <RemoteConfig::HandleUptime()>:
 800a9d4:	7bc3      	ldrb	r3, [r0, #15]
 800a9d6:	b1e3      	cbz	r3, 800aa12 <RemoteConfig::HandleUptime()+0x3e>
 800a9d8:	4b0e      	ldr	r3, [pc, #56]	; (800aa14 <RemoteConfig::HandleUptime()+0x40>)
 800a9da:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a9dc:	681a      	ldr	r2, [r3, #0]
 800a9de:	69c3      	ldr	r3, [r0, #28]
 800a9e0:	2b07      	cmp	r3, #7
 800a9e2:	4604      	mov	r4, r0
 800a9e4:	d113      	bne.n	800aa0e <RemoteConfig::HandleUptime()+0x3a>
 800a9e6:	4d0c      	ldr	r5, [pc, #48]	; (800aa18 <RemoteConfig::HandleUptime()+0x44>)
 800a9e8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a9ec:	6828      	ldr	r0, [r5, #0]
 800a9ee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a9f2:	fbb2 f3f3 	udiv	r3, r2, r3
 800a9f6:	4a09      	ldr	r2, [pc, #36]	; (800aa1c <RemoteConfig::HandleUptime()+0x48>)
 800a9f8:	f7ff fd86 	bl	800a508 <snprintf>
 800a9fc:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa00:	9300      	str	r3, [sp, #0]
 800aa02:	b282      	uxth	r2, r0
 800aa04:	69a3      	ldr	r3, [r4, #24]
 800aa06:	6829      	ldr	r1, [r5, #0]
 800aa08:	7d20      	ldrb	r0, [r4, #20]
 800aa0a:	f008 f8fb 	bl	8012c04 <udp_send>
 800aa0e:	b003      	add	sp, #12
 800aa10:	bd30      	pop	{r4, r5, pc}
 800aa12:	4770      	bx	lr
 800aa14:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800aa18:	200000fc 	strdcs	r0, [r0], -ip
 800aa1c:	08018da7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, fp, pc}

0800aa20 <Display::Status(Display7SegmentMessage)>:
 800aa20:	7c43      	ldrb	r3, [r0, #17]
 800aa22:	b1bb      	cbz	r3, 800aa54 <Display::Status(Display7SegmentMessage)+0x34>
 800aa24:	b513      	push	{r0, r1, r4, lr}
 800aa26:	2312      	movs	r3, #18
 800aa28:	43c9      	mvns	r1, r1
 800aa2a:	4604      	mov	r4, r0
 800aa2c:	f88d 3004 	strb.w	r3, [sp, #4]
 800aa30:	7a00      	ldrb	r0, [r0, #8]
 800aa32:	f88d 1006 	strb.w	r1, [sp, #6]
 800aa36:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800aa3a:	f88d 3005 	strb.w	r3, [sp, #5]
 800aa3e:	f00c fc31 	bl	80172a4 <gd32_i2c_set_address>
 800aa42:	68e0      	ldr	r0, [r4, #12]
 800aa44:	f00c fc26 	bl	8017294 <gd32_i2c_set_baudrate>
 800aa48:	2103      	movs	r1, #3
 800aa4a:	a801      	add	r0, sp, #4
 800aa4c:	f00c fc30 	bl	80172b0 <gd32_i2c_write>
 800aa50:	b002      	add	sp, #8
 800aa52:	bd10      	pop	{r4, pc}
 800aa54:	4770      	bx	lr
	...

0800aa58 <RemoteConfig::HandleDisplaySet()>:
 800aa58:	b508      	push	{r3, lr}
 800aa5a:	69c3      	ldr	r3, [r0, #28]
 800aa5c:	2b09      	cmp	r3, #9
 800aa5e:	d10a      	bne.n	800aa76 <RemoteConfig::HandleDisplaySet()+0x1e>
 800aa60:	4b05      	ldr	r3, [pc, #20]	; (800aa78 <RemoteConfig::HandleDisplaySet()+0x20>)
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	7a59      	ldrb	r1, [r3, #9]
 800aa66:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800aa6a:	4259      	negs	r1, r3
 800aa6c:	4159      	adcs	r1, r3
 800aa6e:	4b03      	ldr	r3, [pc, #12]	; (800aa7c <RemoteConfig::HandleDisplaySet()+0x24>)
 800aa70:	6818      	ldr	r0, [r3, #0]
 800aa72:	f7fe fcb1 	bl	80093d8 <Display::SetSleep(bool)>
 800aa76:	bd08      	pop	{r3, pc}
 800aa78:	200000fc 	strdcs	r0, [r0], -ip
 800aa7c:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4

0800aa80 <RemoteConfig::HandleTftpSet()>:
 800aa80:	69c3      	ldr	r3, [r0, #28]
 800aa82:	2b06      	cmp	r3, #6
 800aa84:	d127      	bne.n	800aad6 <RemoteConfig::HandleTftpSet()+0x56>
 800aa86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa88:	4b13      	ldr	r3, [pc, #76]	; (800aad8 <RemoteConfig::HandleTftpSet()+0x58>)
 800aa8a:	4d14      	ldr	r5, [pc, #80]	; (800aadc <RemoteConfig::HandleTftpSet()+0x5c>)
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	799b      	ldrb	r3, [r3, #6]
 800aa90:	2b30      	cmp	r3, #48	; 0x30
 800aa92:	bf14      	ite	ne
 800aa94:	2301      	movne	r3, #1
 800aa96:	2300      	moveq	r3, #0
 800aa98:	4604      	mov	r4, r0
 800aa9a:	f880 3020 	strb.w	r3, [r0, #32]
 800aa9e:	6828      	ldr	r0, [r5, #0]
 800aaa0:	d012      	beq.n	800aac8 <RemoteConfig::HandleTftpSet()+0x48>
 800aaa2:	2100      	movs	r1, #0
 800aaa4:	f7fe fc98 	bl	80093d8 <Display::SetSleep(bool)>
 800aaa8:	6828      	ldr	r0, [r5, #0]
 800aaaa:	490d      	ldr	r1, [pc, #52]	; (800aae0 <RemoteConfig::HandleTftpSet()+0x60>)
 800aaac:	9001      	str	r0, [sp, #4]
 800aaae:	f7fe fc1d 	bl	80092ec <Display::TextStatus(char const*)>
 800aab2:	f244 0171 	movw	r1, #16497	; 0x4071
 800aab6:	9801      	ldr	r0, [sp, #4]
 800aab8:	f7ff ffb2 	bl	800aa20 <Display::Status(Display7SegmentMessage)>
 800aabc:	4620      	mov	r0, r4
 800aabe:	b003      	add	sp, #12
 800aac0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800aac4:	f000 bce2 	b.w	800b48c <RemoteConfig::PlatformHandleTftpSet()>
 800aac8:	4906      	ldr	r1, [pc, #24]	; (800aae4 <RemoteConfig::HandleTftpSet()+0x64>)
 800aaca:	9001      	str	r0, [sp, #4]
 800aacc:	f7fe fc0e 	bl	80092ec <Display::TextStatus(char const*)>
 800aad0:	f248 0171 	movw	r1, #32881	; 0x8071
 800aad4:	e7ef      	b.n	800aab6 <RemoteConfig::HandleTftpSet()+0x36>
 800aad6:	4770      	bx	lr
 800aad8:	200000fc 	strdcs	r0, [r0], -ip
 800aadc:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 800aae0:	08018db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, pc}
 800aae4:	08018dc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, sl, fp, pc}

0800aae8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800aae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aaec:	2500      	movs	r5, #0
 800aaee:	461f      	mov	r7, r3
 800aaf0:	6083      	str	r3, [r0, #8]
 800aaf2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aaf6:	4e13      	ldr	r6, [pc, #76]	; (800ab44 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 800aaf8:	f8df a050 	ldr.w	sl, [pc, #80]	; 800ab4c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 800aafc:	60c5      	str	r5, [r0, #12]
 800aafe:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800ab02:	4b11      	ldr	r3, [pc, #68]	; (800ab48 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 800ab04:	8205      	strh	r5, [r0, #16]
 800ab06:	e9c0 1200 	strd	r1, r2, [r0]
 800ab0a:	4604      	mov	r4, r0
 800ab0c:	6018      	str	r0, [r3, #0]
 800ab0e:	4689      	mov	r9, r1
 800ab10:	61c5      	str	r5, [r0, #28]
 800ab12:	f880 5020 	strb.w	r5, [r0, #32]
 800ab16:	4631      	mov	r1, r6
 800ab18:	f8da 0000 	ldr.w	r0, [sl]
 800ab1c:	4690      	mov	r8, r2
 800ab1e:	f008 fd47 	bl	80135b0 <Network::MacAddressCopyTo(unsigned char*)>
 800ab22:	f8da 0000 	ldr.w	r0, [sl]
 800ab26:	f886 9006 	strb.w	r9, [r6, #6]
 800ab2a:	f642 1105 	movw	r1, #10501	; 0x2905
 800ab2e:	f886 8007 	strb.w	r8, [r6, #7]
 800ab32:	7237      	strb	r7, [r6, #8]
 800ab34:	7275      	strb	r5, [r6, #9]
 800ab36:	f008 fd35 	bl	80135a4 <Network::Begin(unsigned short)>
 800ab3a:	6160      	str	r0, [r4, #20]
 800ab3c:	4620      	mov	r0, r4
 800ab3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab42:	bf00      	nop
 800ab44:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab48:	20000124 	andcs	r0, r0, r4, lsr #2
 800ab4c:	2000f9f0 	strdcs	pc, [r0], -r0

0800ab50 <RemoteConfig::GetStringNode() const>:
 800ab50:	4b03      	ldr	r3, [pc, #12]	; (800ab60 <RemoteConfig::GetStringNode() const+0x10>)
 800ab52:	7998      	ldrb	r0, [r3, #6]
 800ab54:	4b03      	ldr	r3, [pc, #12]	; (800ab64 <RemoteConfig::GetStringNode() const+0x14>)
 800ab56:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800ab5a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800ab5e:	4770      	bx	lr
 800ab60:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab64:	08018e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, pc}

0800ab68 <RemoteConfig::GetStringOutput() const>:
 800ab68:	4b03      	ldr	r3, [pc, #12]	; (800ab78 <RemoteConfig::GetStringOutput() const+0x10>)
 800ab6a:	79d8      	ldrb	r0, [r3, #7]
 800ab6c:	4b03      	ldr	r3, [pc, #12]	; (800ab7c <RemoteConfig::GetStringOutput() const+0x14>)
 800ab6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800ab72:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800ab76:	4770      	bx	lr
 800ab78:	20000100 	andcs	r0, r0, r0, lsl #2
 800ab7c:	08018f02 	stmdaeq	r1, {r1, r8, r9, sl, fp, pc}

0800ab80 <RemoteConfig::SetDisable(bool)>:
 800ab80:	b538      	push	{r3, r4, r5, lr}
 800ab82:	7b03      	ldrb	r3, [r0, #12]
 800ab84:	4604      	mov	r4, r0
 800ab86:	b161      	cbz	r1, 800aba2 <RemoteConfig::SetDisable(bool)+0x22>
 800ab88:	b953      	cbnz	r3, 800aba0 <RemoteConfig::SetDisable(bool)+0x20>
 800ab8a:	4b0c      	ldr	r3, [pc, #48]	; (800abbc <RemoteConfig::SetDisable(bool)+0x3c>)
 800ab8c:	f642 1105 	movw	r1, #10501	; 0x2905
 800ab90:	6818      	ldr	r0, [r3, #0]
 800ab92:	f008 fd0a 	bl	80135aa <Network::End(unsigned short)>
 800ab96:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ab9a:	6163      	str	r3, [r4, #20]
 800ab9c:	2301      	movs	r3, #1
 800ab9e:	7323      	strb	r3, [r4, #12]
 800aba0:	bd38      	pop	{r3, r4, r5, pc}
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d0fc      	beq.n	800aba0 <RemoteConfig::SetDisable(bool)+0x20>
 800aba6:	4b05      	ldr	r3, [pc, #20]	; (800abbc <RemoteConfig::SetDisable(bool)+0x3c>)
 800aba8:	460d      	mov	r5, r1
 800abaa:	6818      	ldr	r0, [r3, #0]
 800abac:	f642 1105 	movw	r1, #10501	; 0x2905
 800abb0:	f008 fcf8 	bl	80135a4 <Network::Begin(unsigned short)>
 800abb4:	7325      	strb	r5, [r4, #12]
 800abb6:	6160      	str	r0, [r4, #20]
 800abb8:	e7f2      	b.n	800aba0 <RemoteConfig::SetDisable(bool)+0x20>
 800abba:	bf00      	nop
 800abbc:	2000f9f0 	strdcs	pc, [r0], -r0

0800abc0 <RemoteConfig::SetDisplayName(char const*)>:
 800abc0:	4809      	ldr	r0, [pc, #36]	; (800abe8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800abc2:	b508      	push	{r3, lr}
 800abc4:	2217      	movs	r2, #23
 800abc6:	1e4b      	subs	r3, r1, #1
 800abc8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800abcc:	b911      	cbnz	r1, 800abd4 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800abce:	f00b fad1 	bl	8016174 <memset>
 800abd2:	e003      	b.n	800abdc <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800abd4:	3a01      	subs	r2, #1
 800abd6:	f800 1b01 	strb.w	r1, [r0], #1
 800abda:	d1f5      	bne.n	800abc8 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800abdc:	4b03      	ldr	r3, [pc, #12]	; (800abec <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800abde:	2200      	movs	r2, #0
 800abe0:	f883 2020 	strb.w	r2, [r3, #32]
 800abe4:	bd08      	pop	{r3, pc}
 800abe6:	bf00      	nop
 800abe8:	20000109 	andcs	r0, r0, r9, lsl #2
 800abec:	20000100 	andcs	r0, r0, r0, lsl #2

0800abf0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800abf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abf2:	4f2a      	ldr	r7, [pc, #168]	; (800ac9c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800abf4:	b085      	sub	sp, #20
 800abf6:	4604      	mov	r4, r0
 800abf8:	4616      	mov	r6, r2
 800abfa:	460d      	mov	r5, r1
 800abfc:	b9a9      	cbnz	r1, 800ac2a <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800abfe:	6839      	ldr	r1, [r7, #0]
 800ac00:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800ac04:	aa03      	add	r2, sp, #12
 800ac06:	3105      	adds	r1, #5
 800ac08:	9303      	str	r3, [sp, #12]
 800ac0a:	f000 fc15 	bl	800b438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800ac0e:	1e03      	subs	r3, r0, #0
 800ac10:	da1b      	bge.n	800ac4a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800ac12:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac16:	9300      	str	r3, [sp, #0]
 800ac18:	4921      	ldr	r1, [pc, #132]	; (800aca0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800ac1a:	69a3      	ldr	r3, [r4, #24]
 800ac1c:	7d20      	ldrb	r0, [r4, #20]
 800ac1e:	220b      	movs	r2, #11
 800ac20:	f007 fff0 	bl	8012c04 <udp_send>
 800ac24:	200c      	movs	r0, #12
 800ac26:	b005      	add	sp, #20
 800ac28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac2a:	9203      	str	r2, [sp, #12]
 800ac2c:	aa03      	add	r2, sp, #12
 800ac2e:	6039      	str	r1, [r7, #0]
 800ac30:	f000 fc02 	bl	800b438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800ac34:	1e03      	subs	r3, r0, #0
 800ac36:	da08      	bge.n	800ac4a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800ac38:	2e0b      	cmp	r6, #11
 800ac3a:	4632      	mov	r2, r6
 800ac3c:	4918      	ldr	r1, [pc, #96]	; (800aca0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800ac3e:	bf28      	it	cs
 800ac40:	220b      	movcs	r2, #11
 800ac42:	4628      	mov	r0, r5
 800ac44:	f00b fa74 	bl	8016130 <memcpy>
 800ac48:	e7ec      	b.n	800ac24 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800ac4a:	4916      	ldr	r1, [pc, #88]	; (800aca4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800ac4c:	221c      	movs	r2, #28
 800ac4e:	4353      	muls	r3, r2
 800ac50:	18ca      	adds	r2, r1, r3
 800ac52:	58cb      	ldr	r3, [r1, r3]
 800ac54:	6852      	ldr	r2, [r2, #4]
 800ac56:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800ac5a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ac5e:	07d2      	lsls	r2, r2, #31
 800ac60:	bf48      	it	mi
 800ac62:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800ac66:	a903      	add	r1, sp, #12
 800ac68:	bf48      	it	mi
 800ac6a:	58d3      	ldrmi	r3, [r2, r3]
 800ac6c:	4798      	blx	r3
 800ac6e:	b95d      	cbnz	r5, 800ac88 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800ac70:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac74:	9300      	str	r3, [sp, #0]
 800ac76:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ac7a:	69a3      	ldr	r3, [r4, #24]
 800ac7c:	6839      	ldr	r1, [r7, #0]
 800ac7e:	7d20      	ldrb	r0, [r4, #20]
 800ac80:	f007 ffc0 	bl	8012c04 <udp_send>
 800ac84:	9803      	ldr	r0, [sp, #12]
 800ac86:	e7ce      	b.n	800ac26 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800ac88:	9a03      	ldr	r2, [sp, #12]
 800ac8a:	6839      	ldr	r1, [r7, #0]
 800ac8c:	42b2      	cmp	r2, r6
 800ac8e:	bf28      	it	cs
 800ac90:	4632      	movcs	r2, r6
 800ac92:	4628      	mov	r0, r5
 800ac94:	f00b fa57 	bl	8016146 <memmove>
 800ac98:	e7f4      	b.n	800ac84 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800ac9a:	bf00      	nop
 800ac9c:	200000fc 	strdcs	r0, [r0], -ip
 800aca0:	08018dd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, fp, pc}
 800aca4:	080190cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, pc}

0800aca8 <RemoteConfig::HandleGetNoParams()>:
 800aca8:	2200      	movs	r2, #0
 800acaa:	4611      	mov	r1, r2
 800acac:	f7ff bfa0 	b.w	800abf0 <RemoteConfig::HandleGet(void*, unsigned int)>

0800acb0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800acb0:	b500      	push	{lr}
 800acb2:	4a09      	ldr	r2, [pc, #36]	; (800acd8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800acb4:	b08d      	sub	sp, #52	; 0x34
 800acb6:	a803      	add	r0, sp, #12
 800acb8:	9101      	str	r1, [sp, #4]
 800acba:	6811      	ldr	r1, [r2, #0]
 800acbc:	f000 fa18 	bl	800b0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800acc0:	4906      	ldr	r1, [pc, #24]	; (800acdc <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x2c>)
 800acc2:	9b01      	ldr	r3, [sp, #4]
 800acc4:	6809      	ldr	r1, [r1, #0]
 800acc6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800acca:	a803      	add	r0, sp, #12
 800accc:	f000 fb34 	bl	800b338 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800acd0:	b00d      	add	sp, #52	; 0x34
 800acd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800acd6:	bf00      	nop
 800acd8:	200092b8 			; <UNDEFINED> instruction: 0x200092b8
 800acdc:	200000fc 	strdcs	r0, [r0], -ip

0800ace0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800ace0:	b500      	push	{lr}
 800ace2:	4a09      	ldr	r2, [pc, #36]	; (800ad08 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800ace4:	b09d      	sub	sp, #116	; 0x74
 800ace6:	a803      	add	r0, sp, #12
 800ace8:	9101      	str	r1, [sp, #4]
 800acea:	6811      	ldr	r1, [r2, #0]
 800acec:	f008 ff7c 	bl	8013be8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800acf0:	4906      	ldr	r1, [pc, #24]	; (800ad0c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x2c>)
 800acf2:	9b01      	ldr	r3, [sp, #4]
 800acf4:	6809      	ldr	r1, [r1, #0]
 800acf6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800acfa:	a803      	add	r0, sp, #12
 800acfc:	f009 f948 	bl	8013f90 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800ad00:	b01d      	add	sp, #116	; 0x74
 800ad02:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad06:	bf00      	nop
 800ad08:	200092b0 			; <UNDEFINED> instruction: 0x200092b0
 800ad0c:	200000fc 	strdcs	r0, [r0], -ip

0800ad10 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800ad10:	b500      	push	{lr}
 800ad12:	4a09      	ldr	r2, [pc, #36]	; (800ad38 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800ad14:	b08d      	sub	sp, #52	; 0x34
 800ad16:	a803      	add	r0, sp, #12
 800ad18:	9101      	str	r1, [sp, #4]
 800ad1a:	6811      	ldr	r1, [r2, #0]
 800ad1c:	f002 f816 	bl	800cd4c <E131Params::E131Params(E131ParamsStore*)>
 800ad20:	4906      	ldr	r1, [pc, #24]	; (800ad3c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x2c>)
 800ad22:	9b01      	ldr	r3, [sp, #4]
 800ad24:	6809      	ldr	r1, [r1, #0]
 800ad26:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad2a:	a803      	add	r0, sp, #12
 800ad2c:	f002 fb04 	bl	800d338 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800ad30:	b00d      	add	sp, #52	; 0x34
 800ad32:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad36:	bf00      	nop
 800ad38:	200092bc 			; <UNDEFINED> instruction: 0x200092bc
 800ad3c:	200000fc 	strdcs	r0, [r0], -ip

0800ad40 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800ad40:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ad42:	4a08      	ldr	r2, [pc, #32]	; (800ad64 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800ad44:	9101      	str	r1, [sp, #4]
 800ad46:	a802      	add	r0, sp, #8
 800ad48:	6811      	ldr	r1, [r2, #0]
 800ad4a:	f003 fe8b 	bl	800ea64 <DmxParams::DmxParams(DmxParamsStore*)>
 800ad4e:	4906      	ldr	r1, [pc, #24]	; (800ad68 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800ad50:	9b01      	ldr	r3, [sp, #4]
 800ad52:	6809      	ldr	r1, [r1, #0]
 800ad54:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad58:	a802      	add	r0, sp, #8
 800ad5a:	f003 ffa5 	bl	800eca8 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800ad5e:	b007      	add	sp, #28
 800ad60:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad64:	200092ac 	andcs	r9, r0, ip, lsr #5
 800ad68:	200000fc 	strdcs	r0, [r0], -ip

0800ad6c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800ad6c:	b500      	push	{lr}
 800ad6e:	4a09      	ldr	r2, [pc, #36]	; (800ad94 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800ad70:	b093      	sub	sp, #76	; 0x4c
 800ad72:	a803      	add	r0, sp, #12
 800ad74:	9101      	str	r1, [sp, #4]
 800ad76:	6811      	ldr	r1, [r2, #0]
 800ad78:	f004 ff32 	bl	800fbe0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800ad7c:	4906      	ldr	r1, [pc, #24]	; (800ad98 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x2c>)
 800ad7e:	9b01      	ldr	r3, [sp, #4]
 800ad80:	6809      	ldr	r1, [r1, #0]
 800ad82:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ad86:	a803      	add	r0, sp, #12
 800ad88:	f005 fab6 	bl	80102f8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 800ad8c:	b013      	add	sp, #76	; 0x4c
 800ad8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad92:	bf00      	nop
 800ad94:	200092c0 	andcs	r9, r0, r0, asr #5
 800ad98:	200000fc 	strdcs	r0, [r0], -ip

0800ad9c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800ad9c:	b500      	push	{lr}
 800ad9e:	4a09      	ldr	r2, [pc, #36]	; (800adc4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800ada0:	b08d      	sub	sp, #52	; 0x34
 800ada2:	a802      	add	r0, sp, #8
 800ada4:	9101      	str	r1, [sp, #4]
 800ada6:	6811      	ldr	r1, [r2, #0]
 800ada8:	f009 fe86 	bl	8014ab8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800adac:	4906      	ldr	r1, [pc, #24]	; (800adc8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x2c>)
 800adae:	9b01      	ldr	r3, [sp, #4]
 800adb0:	6809      	ldr	r1, [r1, #0]
 800adb2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800adb6:	a802      	add	r0, sp, #8
 800adb8:	f009 ffb8 	bl	8014d2c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800adbc:	b00d      	add	sp, #52	; 0x34
 800adbe:	f85d fb04 	ldr.w	pc, [sp], #4
 800adc2:	bf00      	nop
 800adc4:	200092a8 	andcs	r9, r0, r8, lsr #5
 800adc8:	200000fc 	strdcs	r0, [r0], -ip

0800adcc <RemoteConfig::HandleSet(void*, unsigned int)>:
 800adcc:	b530      	push	{r4, r5, lr}
 800adce:	b085      	sub	sp, #20
 800add0:	4604      	mov	r4, r0
 800add2:	9201      	str	r2, [sp, #4]
 800add4:	b9d1      	cbnz	r1, 800ae0c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800add6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800adda:	9303      	str	r3, [sp, #12]
 800addc:	4b19      	ldr	r3, [pc, #100]	; (800ae44 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800adde:	6819      	ldr	r1, [r3, #0]
 800ade0:	aa03      	add	r2, sp, #12
 800ade2:	3101      	adds	r1, #1
 800ade4:	f000 fb28 	bl	800b438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800ade8:	2800      	cmp	r0, #0
 800adea:	db0d      	blt.n	800ae08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800adec:	4b16      	ldr	r3, [pc, #88]	; (800ae48 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 800adee:	221c      	movs	r2, #28
 800adf0:	fb02 3300 	mla	r3, r2, r0, r3
 800adf4:	68da      	ldr	r2, [r3, #12]
 800adf6:	689b      	ldr	r3, [r3, #8]
 800adf8:	1051      	asrs	r1, r2, #1
 800adfa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800adfe:	07d2      	lsls	r2, r2, #31
 800ae00:	bf44      	itt	mi
 800ae02:	5862      	ldrmi	r2, [r4, r1]
 800ae04:	58d3      	ldrmi	r3, [r2, r3]
 800ae06:	4798      	blx	r3
 800ae08:	b005      	add	sp, #20
 800ae0a:	bd30      	pop	{r4, r5, pc}
 800ae0c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ae10:	d8fa      	bhi.n	800ae08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ae12:	4b0e      	ldr	r3, [pc, #56]	; (800ae4c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800ae14:	781b      	ldrb	r3, [r3, #0]
 800ae16:	460d      	mov	r5, r1
 800ae18:	07d9      	lsls	r1, r3, #31
 800ae1a:	d50b      	bpl.n	800ae34 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ae1c:	782b      	ldrb	r3, [r5, #0]
 800ae1e:	2b7b      	cmp	r3, #123	; 0x7b
 800ae20:	d108      	bne.n	800ae34 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800ae22:	1e51      	subs	r1, r2, #1
 800ae24:	b289      	uxth	r1, r1
 800ae26:	2200      	movs	r2, #0
 800ae28:	4628      	mov	r0, r5
 800ae2a:	f00a f84d 	bl	8014ec8 <properties::convert_json_file(char*, unsigned short, bool)>
 800ae2e:	1e02      	subs	r2, r0, #0
 800ae30:	ddea      	ble.n	800ae08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800ae32:	b292      	uxth	r2, r2
 800ae34:	4b03      	ldr	r3, [pc, #12]	; (800ae44 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800ae36:	61e2      	str	r2, [r4, #28]
 800ae38:	601d      	str	r5, [r3, #0]
 800ae3a:	aa01      	add	r2, sp, #4
 800ae3c:	1c69      	adds	r1, r5, #1
 800ae3e:	4620      	mov	r0, r4
 800ae40:	e7d0      	b.n	800ade4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ae42:	bf00      	nop
 800ae44:	200000fc 	strdcs	r0, [r0], -ip
 800ae48:	080190cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, pc}
 800ae4c:	2000fcb0 			; <UNDEFINED> instruction: 0x2000fcb0

0800ae50 <RemoteConfig::Run()>:
 800ae50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ae54:	7b05      	ldrb	r5, [r0, #12]
 800ae56:	2d00      	cmp	r5, #0
 800ae58:	d156      	bne.n	800af08 <RemoteConfig::Run()+0xb8>
 800ae5a:	4e45      	ldr	r6, [pc, #276]	; (800af70 <RemoteConfig::Run()+0x120>)
 800ae5c:	4604      	mov	r4, r0
 800ae5e:	f100 0218 	add.w	r2, r0, #24
 800ae62:	f10d 030e 	add.w	r3, sp, #14
 800ae66:	7d00      	ldrb	r0, [r0, #20]
 800ae68:	4631      	mov	r1, r6
 800ae6a:	f007 fea5 	bl	8012bb8 <udp_recv2>
 800ae6e:	2803      	cmp	r0, #3
 800ae70:	61e0      	str	r0, [r4, #28]
 800ae72:	d949      	bls.n	800af08 <RemoteConfig::Run()+0xb8>
 800ae74:	1e43      	subs	r3, r0, #1
 800ae76:	6831      	ldr	r1, [r6, #0]
 800ae78:	5cca      	ldrb	r2, [r1, r3]
 800ae7a:	2a0a      	cmp	r2, #10
 800ae7c:	bf18      	it	ne
 800ae7e:	4603      	movne	r3, r0
 800ae80:	61e3      	str	r3, [r4, #28]
 800ae82:	7808      	ldrb	r0, [r1, #0]
 800ae84:	283f      	cmp	r0, #63	; 0x3f
 800ae86:	d137      	bne.n	800aef8 <RemoteConfig::Run()+0xa8>
 800ae88:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 800af88 <RemoteConfig::Run()+0x138>
 800ae8c:	3b01      	subs	r3, #1
 800ae8e:	61e3      	str	r3, [r4, #28]
 800ae90:	462a      	mov	r2, r5
 800ae92:	4667      	mov	r7, ip
 800ae94:	f89c 500e 	ldrb.w	r5, [ip, #14]
 800ae98:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800ae9c:	b16d      	cbz	r5, 800aeba <RemoteConfig::Run()+0x6a>
 800ae9e:	4283      	cmp	r3, r0
 800aea0:	d80d      	bhi.n	800aebe <RemoteConfig::Run()+0x6e>
 800aea2:	3201      	adds	r2, #1
 800aea4:	2a09      	cmp	r2, #9
 800aea6:	f10c 0c10 	add.w	ip, ip, #16
 800aeaa:	d1f3      	bne.n	800ae94 <RemoteConfig::Run()+0x44>
 800aeac:	f642 1305 	movw	r3, #10501	; 0x2905
 800aeb0:	9300      	str	r3, [sp, #0]
 800aeb2:	69a3      	ldr	r3, [r4, #24]
 800aeb4:	492f      	ldr	r1, [pc, #188]	; (800af74 <RemoteConfig::Run()+0x124>)
 800aeb6:	2208      	movs	r2, #8
 800aeb8:	e04e      	b.n	800af58 <RemoteConfig::Run()+0x108>
 800aeba:	4283      	cmp	r3, r0
 800aebc:	d1f1      	bne.n	800aea2 <RemoteConfig::Run()+0x52>
 800aebe:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800aec2:	460e      	mov	r6, r1
 800aec4:	3d01      	subs	r5, #1
 800aec6:	4408      	add	r0, r1
 800aec8:	4286      	cmp	r6, r0
 800aeca:	d10b      	bne.n	800aee4 <RemoteConfig::Run()+0x94>
 800aecc:	0113      	lsls	r3, r2, #4
 800aece:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800aed2:	58fb      	ldr	r3, [r7, r3]
 800aed4:	6852      	ldr	r2, [r2, #4]
 800aed6:	1051      	asrs	r1, r2, #1
 800aed8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aedc:	07d2      	lsls	r2, r2, #31
 800aede:	d408      	bmi.n	800aef2 <RemoteConfig::Run()+0xa2>
 800aee0:	4798      	blx	r3
 800aee2:	e011      	b.n	800af08 <RemoteConfig::Run()+0xb8>
 800aee4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800aee8:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800aeec:	45f0      	cmp	r8, lr
 800aeee:	d0eb      	beq.n	800aec8 <RemoteConfig::Run()+0x78>
 800aef0:	e7d7      	b.n	800aea2 <RemoteConfig::Run()+0x52>
 800aef2:	5862      	ldr	r2, [r4, r1]
 800aef4:	58d3      	ldr	r3, [r2, r3]
 800aef6:	e7f3      	b.n	800aee0 <RemoteConfig::Run()+0x90>
 800aef8:	7b62      	ldrb	r2, [r4, #13]
 800aefa:	b92a      	cbnz	r2, 800af08 <RemoteConfig::Run()+0xb8>
 800aefc:	2823      	cmp	r0, #35	; 0x23
 800aefe:	d106      	bne.n	800af0e <RemoteConfig::Run()+0xbe>
 800af00:	4611      	mov	r1, r2
 800af02:	4620      	mov	r0, r4
 800af04:	f7ff ff62 	bl	800adcc <RemoteConfig::HandleSet(void*, unsigned int)>
 800af08:	b004      	add	sp, #16
 800af0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af0e:	2821      	cmp	r0, #33	; 0x21
 800af10:	d1fa      	bne.n	800af08 <RemoteConfig::Run()+0xb8>
 800af12:	3b01      	subs	r3, #1
 800af14:	2b05      	cmp	r3, #5
 800af16:	61e3      	str	r3, [r4, #28]
 800af18:	d918      	bls.n	800af4c <RemoteConfig::Run()+0xfc>
 800af1a:	4d17      	ldr	r5, [pc, #92]	; (800af78 <RemoteConfig::Run()+0x128>)
 800af1c:	460a      	mov	r2, r1
 800af1e:	f101 0c05 	add.w	ip, r1, #5
 800af22:	4608      	mov	r0, r1
 800af24:	4560      	cmp	r0, ip
 800af26:	d01b      	beq.n	800af60 <RemoteConfig::Run()+0x110>
 800af28:	f815 6b01 	ldrb.w	r6, [r5], #1
 800af2c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800af30:	42b7      	cmp	r7, r6
 800af32:	d0f7      	beq.n	800af24 <RemoteConfig::Run()+0xd4>
 800af34:	2b08      	cmp	r3, #8
 800af36:	d909      	bls.n	800af4c <RemoteConfig::Run()+0xfc>
 800af38:	4b10      	ldr	r3, [pc, #64]	; (800af7c <RemoteConfig::Run()+0x12c>)
 800af3a:	3108      	adds	r1, #8
 800af3c:	428a      	cmp	r2, r1
 800af3e:	d015      	beq.n	800af6c <RemoteConfig::Run()+0x11c>
 800af40:	f813 0b01 	ldrb.w	r0, [r3], #1
 800af44:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800af48:	4285      	cmp	r5, r0
 800af4a:	d0f7      	beq.n	800af3c <RemoteConfig::Run()+0xec>
 800af4c:	f642 1305 	movw	r3, #10501	; 0x2905
 800af50:	9300      	str	r3, [sp, #0]
 800af52:	69a3      	ldr	r3, [r4, #24]
 800af54:	490a      	ldr	r1, [pc, #40]	; (800af80 <RemoteConfig::Run()+0x130>)
 800af56:	2208      	movs	r2, #8
 800af58:	7d20      	ldrb	r0, [r4, #20]
 800af5a:	f007 fe53 	bl	8012c04 <udp_send>
 800af5e:	e7d3      	b.n	800af08 <RemoteConfig::Run()+0xb8>
 800af60:	2300      	movs	r3, #0
 800af62:	4a08      	ldr	r2, [pc, #32]	; (800af84 <RemoteConfig::Run()+0x134>)
 800af64:	011b      	lsls	r3, r3, #4
 800af66:	4620      	mov	r0, r4
 800af68:	58d3      	ldr	r3, [r2, r3]
 800af6a:	e7b9      	b.n	800aee0 <RemoteConfig::Run()+0x90>
 800af6c:	2301      	movs	r3, #1
 800af6e:	e7f8      	b.n	800af62 <RemoteConfig::Run()+0x112>
 800af70:	200000fc 	strdcs	r0, [r0], -ip
 800af74:	08018dfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}
 800af78:	08018de5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, fp, pc}
 800af7c:	08018deb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, fp, pc}
 800af80:	08018df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, pc}
 800af84:	08019024 	stmdaeq	r1, {r2, r5, ip, pc}
 800af88:	08018f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, pc}

0800af8c <RemoteConfig::HandleSetRconfig()>:
 800af8c:	b510      	push	{r4, lr}
 800af8e:	4b09      	ldr	r3, [pc, #36]	; (800afb4 <RemoteConfig::HandleSetRconfig()+0x28>)
 800af90:	b08a      	sub	sp, #40	; 0x28
 800af92:	4604      	mov	r4, r0
 800af94:	6819      	ldr	r1, [r3, #0]
 800af96:	a801      	add	r0, sp, #4
 800af98:	f000 f8aa 	bl	800b0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800af9c:	4b06      	ldr	r3, [pc, #24]	; (800afb8 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800af9e:	69e2      	ldr	r2, [r4, #28]
 800afa0:	6819      	ldr	r1, [r3, #0]
 800afa2:	a801      	add	r0, sp, #4
 800afa4:	f000 f8ba 	bl	800b11c <RemoteConfigParams::Load(char const*, unsigned int)>
 800afa8:	4621      	mov	r1, r4
 800afaa:	a801      	add	r0, sp, #4
 800afac:	f000 f9d1 	bl	800b352 <RemoteConfigParams::Set(RemoteConfig*)>
 800afb0:	b00a      	add	sp, #40	; 0x28
 800afb2:	bd10      	pop	{r4, pc}
 800afb4:	200092b8 			; <UNDEFINED> instruction: 0x200092b8
 800afb8:	200000fc 	strdcs	r0, [r0], -ip

0800afbc <RemoteConfig::HandleSetNetworkTxt()>:
 800afbc:	b510      	push	{r4, lr}
 800afbe:	4b07      	ldr	r3, [pc, #28]	; (800afdc <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800afc0:	b09a      	sub	sp, #104	; 0x68
 800afc2:	6819      	ldr	r1, [r3, #0]
 800afc4:	4604      	mov	r4, r0
 800afc6:	a801      	add	r0, sp, #4
 800afc8:	f008 fe0e 	bl	8013be8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800afcc:	4b04      	ldr	r3, [pc, #16]	; (800afe0 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800afce:	69e2      	ldr	r2, [r4, #28]
 800afd0:	6819      	ldr	r1, [r3, #0]
 800afd2:	a801      	add	r0, sp, #4
 800afd4:	f008 fe20 	bl	8013c18 <NetworkParams::Load(char const*, unsigned int)>
 800afd8:	b01a      	add	sp, #104	; 0x68
 800afda:	bd10      	pop	{r4, pc}
 800afdc:	200092b0 			; <UNDEFINED> instruction: 0x200092b0
 800afe0:	200000fc 	strdcs	r0, [r0], -ip

0800afe4 <RemoteConfig::HandleSetE131Txt()>:
 800afe4:	b510      	push	{r4, lr}
 800afe6:	4b07      	ldr	r3, [pc, #28]	; (800b004 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800afe8:	b08a      	sub	sp, #40	; 0x28
 800afea:	6819      	ldr	r1, [r3, #0]
 800afec:	4604      	mov	r4, r0
 800afee:	a801      	add	r0, sp, #4
 800aff0:	f001 feac 	bl	800cd4c <E131Params::E131Params(E131ParamsStore*)>
 800aff4:	4b04      	ldr	r3, [pc, #16]	; (800b008 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800aff6:	69e2      	ldr	r2, [r4, #28]
 800aff8:	6819      	ldr	r1, [r3, #0]
 800affa:	a801      	add	r0, sp, #4
 800affc:	f001 fed6 	bl	800cdac <E131Params::Load(char const*, unsigned int)>
 800b000:	b00a      	add	sp, #40	; 0x28
 800b002:	bd10      	pop	{r4, pc}
 800b004:	200092bc 			; <UNDEFINED> instruction: 0x200092bc
 800b008:	200000fc 	strdcs	r0, [r0], -ip

0800b00c <RemoteConfig::HandleSetParamsTxt()>:
 800b00c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b00e:	4b07      	ldr	r3, [pc, #28]	; (800b02c <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800b010:	4604      	mov	r4, r0
 800b012:	6819      	ldr	r1, [r3, #0]
 800b014:	4668      	mov	r0, sp
 800b016:	f003 fd25 	bl	800ea64 <DmxParams::DmxParams(DmxParamsStore*)>
 800b01a:	4b05      	ldr	r3, [pc, #20]	; (800b030 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800b01c:	69e2      	ldr	r2, [r4, #28]
 800b01e:	6819      	ldr	r1, [r3, #0]
 800b020:	4668      	mov	r0, sp
 800b022:	f003 fd37 	bl	800ea94 <DmxParams::Load(char const*, unsigned int)>
 800b026:	b004      	add	sp, #16
 800b028:	bd10      	pop	{r4, pc}
 800b02a:	bf00      	nop
 800b02c:	200092ac 	andcs	r9, r0, ip, lsr #5
 800b030:	200000fc 	strdcs	r0, [r0], -ip

0800b034 <RemoteConfig::HandleSetDevicesTxt()>:
 800b034:	b510      	push	{r4, lr}
 800b036:	4b07      	ldr	r3, [pc, #28]	; (800b054 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800b038:	b090      	sub	sp, #64	; 0x40
 800b03a:	6819      	ldr	r1, [r3, #0]
 800b03c:	4604      	mov	r4, r0
 800b03e:	a801      	add	r0, sp, #4
 800b040:	f004 fdce 	bl	800fbe0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800b044:	4b04      	ldr	r3, [pc, #16]	; (800b058 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800b046:	69e2      	ldr	r2, [r4, #28]
 800b048:	6819      	ldr	r1, [r3, #0]
 800b04a:	a801      	add	r0, sp, #4
 800b04c:	f004 fdf4 	bl	800fc38 <PixelDmxParams::Load(char const*, unsigned int)>
 800b050:	b010      	add	sp, #64	; 0x40
 800b052:	bd10      	pop	{r4, pc}
 800b054:	200092c0 	andcs	r9, r0, r0, asr #5
 800b058:	200000fc 	strdcs	r0, [r0], -ip

0800b05c <RemoteConfig::HandleSetDisplayTxt()>:
 800b05c:	b510      	push	{r4, lr}
 800b05e:	4b07      	ldr	r3, [pc, #28]	; (800b07c <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800b060:	b08a      	sub	sp, #40	; 0x28
 800b062:	6819      	ldr	r1, [r3, #0]
 800b064:	4604      	mov	r4, r0
 800b066:	4668      	mov	r0, sp
 800b068:	f009 fd26 	bl	8014ab8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800b06c:	4b04      	ldr	r3, [pc, #16]	; (800b080 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800b06e:	69e2      	ldr	r2, [r4, #28]
 800b070:	6819      	ldr	r1, [r3, #0]
 800b072:	4668      	mov	r0, sp
 800b074:	f009 fd3a 	bl	8014aec <DisplayUdfParams::Load(char const*, unsigned int)>
 800b078:	b00a      	add	sp, #40	; 0x28
 800b07a:	bd10      	pop	{r4, pc}
 800b07c:	200092a8 	andcs	r9, r0, r8, lsr #5
 800b080:	200000fc 	strdcs	r0, [r0], -ip

0800b084 <RemoteConfig::HandleFactory()>:
 800b084:	b538      	push	{r3, r4, r5, lr}
 800b086:	4d05      	ldr	r5, [pc, #20]	; (800b09c <RemoteConfig::HandleFactory()+0x18>)
 800b088:	2400      	movs	r4, #0
 800b08a:	4621      	mov	r1, r4
 800b08c:	6828      	ldr	r0, [r5, #0]
 800b08e:	3401      	adds	r4, #1
 800b090:	f006 fe18 	bl	8011cc4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800b094:	2c1c      	cmp	r4, #28
 800b096:	d1f8      	bne.n	800b08a <RemoteConfig::HandleFactory()+0x6>
 800b098:	bd38      	pop	{r3, r4, r5, pc}
 800b09a:	bf00      	nop
 800b09c:	200092a0 	andcs	r9, r0, r0, lsr #5

0800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800b0a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b0a2:	460b      	mov	r3, r1
 800b0a4:	8885      	ldrh	r5, [r0, #4]
 800b0a6:	88c1      	ldrh	r1, [r0, #6]
 800b0a8:	42a9      	cmp	r1, r5
 800b0aa:	d214      	bcs.n	800b0d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800b0ac:	4604      	mov	r4, r0
 800b0ae:	6800      	ldr	r0, [r0, #0]
 800b0b0:	1a6d      	subs	r5, r5, r1
 800b0b2:	4408      	add	r0, r1
 800b0b4:	7a21      	ldrb	r1, [r4, #8]
 800b0b6:	b91a      	cbnz	r2, 800b0c0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800b0b8:	b919      	cbnz	r1, 800b0c2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800b0ba:	4a0a      	ldr	r2, [pc, #40]	; (800b0e4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800b0bc:	9100      	str	r1, [sp, #0]
 800b0be:	e002      	b.n	800b0c6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b0c0:	b159      	cbz	r1, 800b0da <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800b0c2:	9200      	str	r2, [sp, #0]
 800b0c4:	4a08      	ldr	r2, [pc, #32]	; (800b0e8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800b0c6:	4629      	mov	r1, r5
 800b0c8:	f7ff fa1e 	bl	800a508 <snprintf>
 800b0cc:	4285      	cmp	r5, r0
 800b0ce:	bfa2      	ittt	ge
 800b0d0:	88e3      	ldrhge	r3, [r4, #6]
 800b0d2:	181b      	addge	r3, r3, r0
 800b0d4:	80e3      	strhge	r3, [r4, #6]
 800b0d6:	b003      	add	sp, #12
 800b0d8:	bd30      	pop	{r4, r5, pc}
 800b0da:	2201      	movs	r2, #1
 800b0dc:	9200      	str	r2, [sp, #0]
 800b0de:	4a03      	ldr	r2, [pc, #12]	; (800b0ec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800b0e0:	e7f1      	b.n	800b0c6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b0e2:	bf00      	nop
 800b0e4:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800b0e8:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800b0ec:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

0800b0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800b0f0:	b510      	push	{r4, lr}
 800b0f2:	2220      	movs	r2, #32
 800b0f4:	4604      	mov	r4, r0
 800b0f6:	f840 1b04 	str.w	r1, [r0], #4
 800b0fa:	2100      	movs	r1, #0
 800b0fc:	f00b f83a 	bl	8016174 <memset>
 800b100:	4620      	mov	r0, r4
 800b102:	bd10      	pop	{r4, pc}

0800b104 <RemoteConfigParams::Load()>:
 800b104:	b508      	push	{r3, lr}
 800b106:	2300      	movs	r3, #0
 800b108:	4601      	mov	r1, r0
 800b10a:	6043      	str	r3, [r0, #4]
 800b10c:	6800      	ldr	r0, [r0, #0]
 800b10e:	b120      	cbz	r0, 800b11a <RemoteConfigParams::Load()+0x16>
 800b110:	6803      	ldr	r3, [r0, #0]
 800b112:	3104      	adds	r1, #4
 800b114:	68db      	ldr	r3, [r3, #12]
 800b116:	4798      	blx	r3
 800b118:	2001      	movs	r0, #1
 800b11a:	bd08      	pop	{r3, pc}

0800b11c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800b11c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b11e:	2300      	movs	r3, #0
 800b120:	6043      	str	r3, [r0, #4]
 800b122:	4604      	mov	r4, r0
 800b124:	460d      	mov	r5, r1
 800b126:	4616      	mov	r6, r2
 800b128:	490a      	ldr	r1, [pc, #40]	; (800b154 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800b12a:	4602      	mov	r2, r0
 800b12c:	4668      	mov	r0, sp
 800b12e:	f00a f81d 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b132:	4632      	mov	r2, r6
 800b134:	4629      	mov	r1, r5
 800b136:	4668      	mov	r0, sp
 800b138:	f00a f81c 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 800b13c:	4621      	mov	r1, r4
 800b13e:	f851 0b04 	ldr.w	r0, [r1], #4
 800b142:	6803      	ldr	r3, [r0, #0]
 800b144:	689b      	ldr	r3, [r3, #8]
 800b146:	4798      	blx	r3
 800b148:	4668      	mov	r0, sp
 800b14a:	f00a f812 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 800b14e:	b002      	add	sp, #8
 800b150:	bd70      	pop	{r4, r5, r6, pc}
 800b152:	bf00      	nop
 800b154:	0800b215 	stmdaeq	r0, {r0, r2, r4, r9, ip, sp, pc}

0800b158 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800b158:	6843      	ldr	r3, [r0, #4]
 800b15a:	b111      	cbz	r1, 800b162 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800b15c:	431a      	orrs	r2, r3
 800b15e:	6042      	str	r2, [r0, #4]
 800b160:	4770      	bx	lr
 800b162:	ea23 0202 	bic.w	r2, r3, r2
 800b166:	e7fa      	b.n	800b15e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800b168 <RemoteConfigParams::callbackFunction(char const*)>:
 800b168:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b16a:	460d      	mov	r5, r1
 800b16c:	4604      	mov	r4, r0
 800b16e:	4923      	ldr	r1, [pc, #140]	; (800b1fc <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800b170:	f10d 0203 	add.w	r2, sp, #3
 800b174:	4628      	mov	r0, r5
 800b176:	f00a f92e 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b17a:	b940      	cbnz	r0, 800b18e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800b17c:	2201      	movs	r2, #1
 800b17e:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800b182:	4620      	mov	r0, r4
 800b184:	b003      	add	sp, #12
 800b186:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b18a:	f7ff bfe5 	b.w	800b158 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800b18e:	491c      	ldr	r1, [pc, #112]	; (800b200 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800b190:	f10d 0203 	add.w	r2, sp, #3
 800b194:	4628      	mov	r0, r5
 800b196:	f00a f91e 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b19a:	b908      	cbnz	r0, 800b1a0 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800b19c:	2202      	movs	r2, #2
 800b19e:	e7ee      	b.n	800b17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b1a0:	4918      	ldr	r1, [pc, #96]	; (800b204 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800b1a2:	f10d 0203 	add.w	r2, sp, #3
 800b1a6:	4628      	mov	r0, r5
 800b1a8:	f00a f915 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b1ac:	b908      	cbnz	r0, 800b1b2 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800b1ae:	2204      	movs	r2, #4
 800b1b0:	e7e5      	b.n	800b17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b1b2:	4915      	ldr	r1, [pc, #84]	; (800b208 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800b1b4:	f10d 0203 	add.w	r2, sp, #3
 800b1b8:	4628      	mov	r0, r5
 800b1ba:	f00a f90c 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b1be:	b908      	cbnz	r0, 800b1c4 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800b1c0:	2208      	movs	r2, #8
 800b1c2:	e7dc      	b.n	800b17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b1c4:	4911      	ldr	r1, [pc, #68]	; (800b20c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800b1c6:	f10d 0203 	add.w	r2, sp, #3
 800b1ca:	4628      	mov	r0, r5
 800b1cc:	f00a f903 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b1d0:	b908      	cbnz	r0, 800b1d6 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800b1d2:	2220      	movs	r2, #32
 800b1d4:	e7d3      	b.n	800b17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800b1d6:	2317      	movs	r3, #23
 800b1d8:	9301      	str	r3, [sp, #4]
 800b1da:	490d      	ldr	r1, [pc, #52]	; (800b210 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800b1dc:	ab01      	add	r3, sp, #4
 800b1de:	f104 020c 	add.w	r2, r4, #12
 800b1e2:	4628      	mov	r0, r5
 800b1e4:	f009 fffa 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1e8:	b930      	cbnz	r0, 800b1f8 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800b1ea:	9b01      	ldr	r3, [sp, #4]
 800b1ec:	4423      	add	r3, r4
 800b1ee:	7318      	strb	r0, [r3, #12]
 800b1f0:	6863      	ldr	r3, [r4, #4]
 800b1f2:	f043 0310 	orr.w	r3, r3, #16
 800b1f6:	6063      	str	r3, [r4, #4]
 800b1f8:	b003      	add	sp, #12
 800b1fa:	bd30      	pop	{r4, r5, pc}
 800b1fc:	08019459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, pc}
 800b200:	0801947a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, ip, pc}
 800b204:	08019488 	stmdaeq	r1, {r3, r7, sl, ip, pc}
 800b208:	08019496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip, pc}
 800b20c:	080194a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, pc}
 800b210:	0801946d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, ip, pc}

0800b214 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800b214:	f7ff bfa8 	b.w	800b168 <RemoteConfigParams::callbackFunction(char const*)>

0800b218 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800b218:	b570      	push	{r4, r5, r6, lr}
 800b21a:	4604      	mov	r4, r0
 800b21c:	b086      	sub	sp, #24
 800b21e:	4615      	mov	r5, r2
 800b220:	461e      	mov	r6, r3
 800b222:	3004      	adds	r0, #4
 800b224:	2900      	cmp	r1, #0
 800b226:	d041      	beq.n	800b2ac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800b228:	2220      	movs	r2, #32
 800b22a:	f00a ff8c 	bl	8016146 <memmove>
 800b22e:	4633      	mov	r3, r6
 800b230:	462a      	mov	r2, r5
 800b232:	4937      	ldr	r1, [pc, #220]	; (800b310 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800b234:	a803      	add	r0, sp, #12
 800b236:	f009 fef9 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b23a:	6862      	ldr	r2, [r4, #4]
 800b23c:	4935      	ldr	r1, [pc, #212]	; (800b314 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800b23e:	f002 0201 	and.w	r2, r2, #1
 800b242:	a803      	add	r0, sp, #12
 800b244:	f7ff ff2c 	bl	800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b248:	6862      	ldr	r2, [r4, #4]
 800b24a:	4933      	ldr	r1, [pc, #204]	; (800b318 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b24c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800b250:	a803      	add	r0, sp, #12
 800b252:	f7ff ff25 	bl	800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b256:	6862      	ldr	r2, [r4, #4]
 800b258:	4930      	ldr	r1, [pc, #192]	; (800b31c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800b25a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800b25e:	a803      	add	r0, sp, #12
 800b260:	f7ff ff1e 	bl	800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b264:	6862      	ldr	r2, [r4, #4]
 800b266:	492e      	ldr	r1, [pc, #184]	; (800b320 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800b268:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800b26c:	a803      	add	r0, sp, #12
 800b26e:	f7ff ff17 	bl	800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b272:	6862      	ldr	r2, [r4, #4]
 800b274:	492b      	ldr	r1, [pc, #172]	; (800b324 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800b276:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800b27a:	a803      	add	r0, sp, #12
 800b27c:	f7ff ff10 	bl	800b0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b280:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b284:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b288:	6862      	ldr	r2, [r4, #4]
 800b28a:	42ab      	cmp	r3, r5
 800b28c:	d223      	bcs.n	800b2d6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800b28e:	9803      	ldr	r0, [sp, #12]
 800b290:	06d2      	lsls	r2, r2, #27
 800b292:	4418      	add	r0, r3
 800b294:	eba5 0503 	sub.w	r5, r5, r3
 800b298:	f104 040c 	add.w	r4, r4, #12
 800b29c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b2a0:	d40b      	bmi.n	800b2ba <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800b2a2:	b95b      	cbnz	r3, 800b2bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800b2a4:	4b20      	ldr	r3, [pc, #128]	; (800b328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b2a6:	4a21      	ldr	r2, [pc, #132]	; (800b32c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b2a8:	9400      	str	r4, [sp, #0]
 800b2aa:	e00a      	b.n	800b2c2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b2ac:	6823      	ldr	r3, [r4, #0]
 800b2ae:	681a      	ldr	r2, [r3, #0]
 800b2b0:	4601      	mov	r1, r0
 800b2b2:	68d2      	ldr	r2, [r2, #12]
 800b2b4:	4618      	mov	r0, r3
 800b2b6:	4790      	blx	r2
 800b2b8:	e7b9      	b.n	800b22e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800b2ba:	b32b      	cbz	r3, 800b308 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800b2bc:	4b1a      	ldr	r3, [pc, #104]	; (800b328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b2be:	4a1c      	ldr	r2, [pc, #112]	; (800b330 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800b2c0:	9400      	str	r4, [sp, #0]
 800b2c2:	4629      	mov	r1, r5
 800b2c4:	f7ff f920 	bl	800a508 <snprintf>
 800b2c8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b2cc:	4285      	cmp	r5, r0
 800b2ce:	bfa4      	itt	ge
 800b2d0:	181b      	addge	r3, r3, r0
 800b2d2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b2d6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b2da:	b17b      	cbz	r3, 800b2fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800b2dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b2e0:	9b03      	ldr	r3, [sp, #12]
 800b2e2:	4413      	add	r3, r2
 800b2e4:	227d      	movs	r2, #125	; 0x7d
 800b2e6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b2ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b2ee:	9903      	ldr	r1, [sp, #12]
 800b2f0:	54ca      	strb	r2, [r1, r3]
 800b2f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b2f6:	3301      	adds	r3, #1
 800b2f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b2fc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b300:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b302:	601a      	str	r2, [r3, #0]
 800b304:	b006      	add	sp, #24
 800b306:	bd70      	pop	{r4, r5, r6, pc}
 800b308:	4b07      	ldr	r3, [pc, #28]	; (800b328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800b30a:	4a0a      	ldr	r2, [pc, #40]	; (800b334 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b30c:	9400      	str	r4, [sp, #0]
 800b30e:	e7d8      	b.n	800b2c2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800b310:	08019461 	stmdaeq	r1, {r0, r5, r6, sl, ip, pc}
 800b314:	08019459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, pc}
 800b318:	0801947a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, ip, pc}
 800b31c:	08019488 	stmdaeq	r1, {r3, r7, sl, ip, pc}
 800b320:	08019496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip, pc}
 800b324:	080194a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, pc}
 800b328:	0801946d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, ip, pc}
 800b32c:	08019060 	stmdaeq	r1, {r5, r6, ip, pc}
 800b330:	08019055 	stmdaeq	r1, {r0, r2, r4, r6, ip, pc}
 800b334:	08019061 	stmdaeq	r1, {r0, r5, r6, ip, pc}

0800b338 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b338:	b513      	push	{r0, r1, r4, lr}
 800b33a:	6804      	ldr	r4, [r0, #0]
 800b33c:	b914      	cbnz	r4, 800b344 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b33e:	601c      	str	r4, [r3, #0]
 800b340:	b002      	add	sp, #8
 800b342:	bd10      	pop	{r4, pc}
 800b344:	9300      	str	r3, [sp, #0]
 800b346:	4613      	mov	r3, r2
 800b348:	460a      	mov	r2, r1
 800b34a:	2100      	movs	r1, #0
 800b34c:	f7ff ff64 	bl	800b218 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b350:	e7f6      	b.n	800b340 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b352 <RemoteConfigParams::Set(RemoteConfig*)>:
 800b352:	b538      	push	{r3, r4, r5, lr}
 800b354:	460c      	mov	r4, r1
 800b356:	6841      	ldr	r1, [r0, #4]
 800b358:	4605      	mov	r5, r0
 800b35a:	f001 0101 	and.w	r1, r1, #1
 800b35e:	4620      	mov	r0, r4
 800b360:	f7ff fc0e 	bl	800ab80 <RemoteConfig::SetDisable(bool)>
 800b364:	686b      	ldr	r3, [r5, #4]
 800b366:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b36a:	7362      	strb	r2, [r4, #13]
 800b36c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b370:	73a2      	strb	r2, [r4, #14]
 800b372:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b376:	73e2      	strb	r2, [r4, #15]
 800b378:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b37c:	06db      	lsls	r3, r3, #27
 800b37e:	7422      	strb	r2, [r4, #16]
 800b380:	d506      	bpl.n	800b390 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800b382:	f105 010c 	add.w	r1, r5, #12
 800b386:	4620      	mov	r0, r4
 800b388:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b38c:	f7ff bc18 	b.w	800abc0 <RemoteConfig::SetDisplayName(char const*)>
 800b390:	bd38      	pop	{r3, r4, r5, pc}

0800b392 <RemoteConfigParams::Dump()>:
 800b392:	4770      	bx	lr

0800b394 <RemoteConfig::HandleReboot()>:
 800b394:	7b83      	ldrb	r3, [r0, #14]
 800b396:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b398:	2b00      	cmp	r3, #0
 800b39a:	d03c      	beq.n	800b416 <RemoteConfig::HandleReboot()+0x82>
 800b39c:	4c1f      	ldr	r4, [pc, #124]	; (800b41c <RemoteConfig::HandleReboot()+0x88>)
 800b39e:	6825      	ldr	r5, [r4, #0]
 800b3a0:	2301      	movs	r3, #1
 800b3a2:	7443      	strb	r3, [r0, #17]
 800b3a4:	69a8      	ldr	r0, [r5, #24]
 800b3a6:	b138      	cbz	r0, 800b3b8 <RemoteConfig::HandleReboot()+0x24>
 800b3a8:	6803      	ldr	r3, [r0, #0]
 800b3aa:	2100      	movs	r1, #0
 800b3ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3ae:	7429      	strb	r1, [r5, #16]
 800b3b0:	4798      	blx	r3
 800b3b2:	4b1b      	ldr	r3, [pc, #108]	; (800b420 <RemoteConfig::HandleReboot()+0x8c>)
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	606b      	str	r3, [r5, #4]
 800b3b8:	4d1a      	ldr	r5, [pc, #104]	; (800b424 <RemoteConfig::HandleReboot()+0x90>)
 800b3ba:	6828      	ldr	r0, [r5, #0]
 800b3bc:	f006 fd06 	bl	8011dcc <SpiFlashStore::Flash()>
 800b3c0:	2800      	cmp	r0, #0
 800b3c2:	d1fa      	bne.n	800b3ba <RemoteConfig::HandleReboot()+0x26>
 800b3c4:	4b18      	ldr	r3, [pc, #96]	; (800b428 <RemoteConfig::HandleReboot()+0x94>)
 800b3c6:	6818      	ldr	r0, [r3, #0]
 800b3c8:	f008 f8e4 	bl	8013594 <Network::Shutdown()>
 800b3cc:	4817      	ldr	r0, [pc, #92]	; (800b42c <RemoteConfig::HandleReboot()+0x98>)
 800b3ce:	f7ff f873 	bl	800a4b8 <printf>
 800b3d2:	6823      	ldr	r3, [r4, #0]
 800b3d4:	6998      	ldr	r0, [r3, #24]
 800b3d6:	b110      	cbz	r0, 800b3de <RemoteConfig::HandleReboot()+0x4a>
 800b3d8:	6803      	ldr	r3, [r0, #0]
 800b3da:	68db      	ldr	r3, [r3, #12]
 800b3dc:	4798      	blx	r3
 800b3de:	6824      	ldr	r4, [r4, #0]
 800b3e0:	4913      	ldr	r1, [pc, #76]	; (800b430 <RemoteConfig::HandleReboot()+0x9c>)
 800b3e2:	4620      	mov	r0, r4
 800b3e4:	f7fd ff82 	bl	80092ec <Display::TextStatus(char const*)>
 800b3e8:	7c63      	ldrb	r3, [r4, #17]
 800b3ea:	b183      	cbz	r3, 800b40e <RemoteConfig::HandleReboot()+0x7a>
 800b3ec:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b3f0:	7a20      	ldrb	r0, [r4, #8]
 800b3f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b3f6:	23bf      	movs	r3, #191	; 0xbf
 800b3f8:	f88d 3006 	strb.w	r3, [sp, #6]
 800b3fc:	f00b ff52 	bl	80172a4 <gd32_i2c_set_address>
 800b400:	68e0      	ldr	r0, [r4, #12]
 800b402:	f00b ff47 	bl	8017294 <gd32_i2c_set_baudrate>
 800b406:	2103      	movs	r1, #3
 800b408:	a801      	add	r0, sp, #4
 800b40a:	f00b ff51 	bl	80172b0 <gd32_i2c_write>
 800b40e:	4b09      	ldr	r3, [pc, #36]	; (800b434 <RemoteConfig::HandleReboot()+0xa0>)
 800b410:	6818      	ldr	r0, [r3, #0]
 800b412:	f00a fcfd 	bl	8015e10 <Hardware::Reboot()>
 800b416:	b003      	add	sp, #12
 800b418:	bd30      	pop	{r4, r5, pc}
 800b41a:	bf00      	nop
 800b41c:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 800b420:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800b424:	200092a0 	andcs	r9, r0, r0, lsr #5
 800b428:	2000f9f0 	strdcs	pc, [r0], -r0
 800b42c:	08019068 	stmdaeq	r1, {r3, r5, r6, ip, pc}
 800b430:	08019077 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, ip, pc}
 800b434:	2000fda4 	andcs	pc, r0, r4, lsr #27

0800b438 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b438:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b43c:	4d12      	ldr	r5, [pc, #72]	; (800b488 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b43e:	2000      	movs	r0, #0
 800b440:	f10d 0c04 	add.w	ip, sp, #4
 800b444:	6814      	ldr	r4, [r2, #0]
 800b446:	7d2b      	ldrb	r3, [r5, #20]
 800b448:	9301      	str	r3, [sp, #4]
 800b44a:	42a3      	cmp	r3, r4
 800b44c:	bf34      	ite	cc
 800b44e:	4664      	movcc	r4, ip
 800b450:	4614      	movcs	r4, r2
 800b452:	692e      	ldr	r6, [r5, #16]
 800b454:	6827      	ldr	r7, [r4, #0]
 800b456:	3e01      	subs	r6, #1
 800b458:	440f      	add	r7, r1
 800b45a:	460c      	mov	r4, r1
 800b45c:	42bc      	cmp	r4, r7
 800b45e:	d101      	bne.n	800b464 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b460:	6013      	str	r3, [r2, #0]
 800b462:	e00c      	b.n	800b47e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b464:	f894 8000 	ldrb.w	r8, [r4]
 800b468:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b46c:	45f0      	cmp	r8, lr
 800b46e:	d009      	beq.n	800b484 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b470:	3001      	adds	r0, #1
 800b472:	2806      	cmp	r0, #6
 800b474:	f105 051c 	add.w	r5, r5, #28
 800b478:	d1e4      	bne.n	800b444 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b47a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b47e:	b002      	add	sp, #8
 800b480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b484:	3401      	adds	r4, #1
 800b486:	e7e9      	b.n	800b45c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b488:	080190cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, pc}

0800b48c <RemoteConfig::PlatformHandleTftpSet()>:
 800b48c:	f890 1020 	ldrb.w	r1, [r0, #32]
 800b490:	b109      	cbz	r1, 800b496 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b492:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b496:	2001      	movs	r0, #1
 800b498:	f00b be40 	b.w	801711c <bkp_data_write(bkp_data_register_enum, unsigned short)>

0800b49c <RemoteConfig::PlatformHandleTftpGet()>:
 800b49c:	b510      	push	{r4, lr}
 800b49e:	4604      	mov	r4, r0
 800b4a0:	2001      	movs	r0, #1
 800b4a2:	f00b fe43 	bl	801712c <bkp_data_read(bkp_data_register_enum)>
 800b4a6:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b4aa:	1ac3      	subs	r3, r0, r3
 800b4ac:	4258      	negs	r0, r3
 800b4ae:	4158      	adcs	r0, r3
 800b4b0:	f884 0020 	strb.w	r0, [r4, #32]
 800b4b4:	bd10      	pop	{r4, pc}

0800b4b6 <strcmp>:
 800b4b6:	1e43      	subs	r3, r0, #1
 800b4b8:	3901      	subs	r1, #1
 800b4ba:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b4be:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b4c2:	4290      	cmp	r0, r2
 800b4c4:	d001      	beq.n	800b4ca <strcmp+0x14>
 800b4c6:	1a80      	subs	r0, r0, r2
 800b4c8:	e001      	b.n	800b4ce <strcmp+0x18>
 800b4ca:	2800      	cmp	r0, #0
 800b4cc:	d1f5      	bne.n	800b4ba <strcmp+0x4>
 800b4ce:	4770      	bx	lr

0800b4d0 <strcasecmp>:
 800b4d0:	b530      	push	{r4, r5, lr}
 800b4d2:	1e42      	subs	r2, r0, #1
 800b4d4:	3901      	subs	r1, #1
 800b4d6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b4da:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b4de:	2b19      	cmp	r3, #25
 800b4e0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b4e4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b4e8:	4604      	mov	r4, r0
 800b4ea:	bf98      	it	ls
 800b4ec:	f100 0420 	addls.w	r4, r0, #32
 800b4f0:	2d19      	cmp	r5, #25
 800b4f2:	bf98      	it	ls
 800b4f4:	3320      	addls	r3, #32
 800b4f6:	42a3      	cmp	r3, r4
 800b4f8:	d001      	beq.n	800b4fe <strcasecmp+0x2e>
 800b4fa:	1ae0      	subs	r0, r4, r3
 800b4fc:	e001      	b.n	800b502 <strcasecmp+0x32>
 800b4fe:	2800      	cmp	r0, #0
 800b500:	d1e9      	bne.n	800b4d6 <strcasecmp+0x6>
 800b502:	bd30      	pop	{r4, r5, pc}

0800b504 <PropertiesConfig::EnableJSON(bool)>:
 800b504:	4a04      	ldr	r2, [pc, #16]	; (800b518 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b506:	7813      	ldrb	r3, [r2, #0]
 800b508:	b118      	cbz	r0, 800b512 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b50a:	f043 0301 	orr.w	r3, r3, #1
 800b50e:	7013      	strb	r3, [r2, #0]
 800b510:	4770      	bx	lr
 800b512:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b516:	e7fa      	b.n	800b50e <PropertiesConfig::EnableJSON(bool)+0xa>
 800b518:	2000fcb0 			; <UNDEFINED> instruction: 0x2000fcb0

0800b51c <HttpDaemon::HttpDaemon()>:
 800b51c:	4a08      	ldr	r2, [pc, #32]	; (800b540 <HttpDaemon::HttpDaemon()+0x24>)
 800b51e:	6002      	str	r2, [r0, #0]
 800b520:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b524:	2200      	movs	r2, #0
 800b526:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b52a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b52e:	2102      	movs	r1, #2
 800b530:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b534:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b538:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800b53c:	60c2      	str	r2, [r0, #12]
 800b53e:	4770      	bx	lr
 800b540:	080193d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, pc}

0800b544 <HttpDaemon::Start()>:
 800b544:	4b04      	ldr	r3, [pc, #16]	; (800b558 <HttpDaemon::Start()+0x14>)
 800b546:	b510      	push	{r4, lr}
 800b548:	2150      	movs	r1, #80	; 0x50
 800b54a:	4604      	mov	r4, r0
 800b54c:	6818      	ldr	r0, [r3, #0]
 800b54e:	f008 fb3f 	bl	8013bd0 <Network::TcpBegin(unsigned short)>
 800b552:	6120      	str	r0, [r4, #16]
 800b554:	bd10      	pop	{r4, pc}
 800b556:	bf00      	nop
 800b558:	2000f9f0 	strdcs	pc, [r0], -r0

0800b55c <HttpDaemon::ParseMethod(char*)>:
 800b55c:	b538      	push	{r3, r4, r5, lr}
 800b55e:	4604      	mov	r4, r0
 800b560:	4608      	mov	r0, r1
 800b562:	491a      	ldr	r1, [pc, #104]	; (800b5cc <HttpDaemon::ParseMethod(char*)+0x70>)
 800b564:	f00a fe30 	bl	80161c8 <strtok>
 800b568:	4605      	mov	r5, r0
 800b56a:	b360      	cbz	r0, 800b5c6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b56c:	4918      	ldr	r1, [pc, #96]	; (800b5d0 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b56e:	f7ff ffa2 	bl	800b4b6 <strcmp>
 800b572:	b128      	cbz	r0, 800b580 <HttpDaemon::ParseMethod(char*)+0x24>
 800b574:	4917      	ldr	r1, [pc, #92]	; (800b5d4 <HttpDaemon::ParseMethod(char*)+0x78>)
 800b576:	4628      	mov	r0, r5
 800b578:	f7ff ff9d 	bl	800b4b6 <strcmp>
 800b57c:	bb18      	cbnz	r0, 800b5c6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800b57e:	2001      	movs	r0, #1
 800b580:	61e0      	str	r0, [r4, #28]
 800b582:	4912      	ldr	r1, [pc, #72]	; (800b5cc <HttpDaemon::ParseMethod(char*)+0x70>)
 800b584:	2000      	movs	r0, #0
 800b586:	f00a fe1f 	bl	80161c8 <strtok>
 800b58a:	b910      	cbnz	r0, 800b592 <HttpDaemon::ParseMethod(char*)+0x36>
 800b58c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b590:	bd38      	pop	{r3, r4, r5, pc}
 800b592:	6060      	str	r0, [r4, #4]
 800b594:	4910      	ldr	r1, [pc, #64]	; (800b5d8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b596:	2000      	movs	r0, #0
 800b598:	f00a fe16 	bl	80161c8 <strtok>
 800b59c:	2800      	cmp	r0, #0
 800b59e:	d0f5      	beq.n	800b58c <HttpDaemon::ParseMethod(char*)+0x30>
 800b5a0:	490e      	ldr	r1, [pc, #56]	; (800b5dc <HttpDaemon::ParseMethod(char*)+0x80>)
 800b5a2:	f7ff ff88 	bl	800b4b6 <strcmp>
 800b5a6:	2800      	cmp	r0, #0
 800b5a8:	d1f0      	bne.n	800b58c <HttpDaemon::ParseMethod(char*)+0x30>
 800b5aa:	490d      	ldr	r1, [pc, #52]	; (800b5e0 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b5ac:	f00a fe0c 	bl	80161c8 <strtok>
 800b5b0:	2800      	cmp	r0, #0
 800b5b2:	d0eb      	beq.n	800b58c <HttpDaemon::ParseMethod(char*)+0x30>
 800b5b4:	490b      	ldr	r1, [pc, #44]	; (800b5e4 <HttpDaemon::ParseMethod(char*)+0x88>)
 800b5b6:	f7ff ff7e 	bl	800b4b6 <strcmp>
 800b5ba:	2800      	cmp	r0, #0
 800b5bc:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b5c0:	bf08      	it	eq
 800b5c2:	20c8      	moveq	r0, #200	; 0xc8
 800b5c4:	e7e4      	b.n	800b590 <HttpDaemon::ParseMethod(char*)+0x34>
 800b5c6:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b5ca:	e7e1      	b.n	800b590 <HttpDaemon::ParseMethod(char*)+0x34>
 800b5cc:	0801c100 	stmdaeq	r1, {r8, lr, pc}
 800b5d0:	08019174 	stmdaeq	r1, {r2, r4, r5, r6, r8, ip, pc}
 800b5d4:	08019178 	stmdaeq	r1, {r3, r4, r5, r6, r8, ip, pc}
 800b5d8:	080191e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, ip, pc}
 800b5dc:	0801917d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, ip, pc}
 800b5e0:	08019182 	stmdaeq	r1, {r1, r7, r8, ip, pc}
 800b5e4:	08019185 	stmdaeq	r1, {r0, r2, r7, r8, ip, pc}

0800b5e8 <HttpDaemon::ParseHeaderField(char*)>:
 800b5e8:	b538      	push	{r3, r4, r5, lr}
 800b5ea:	4605      	mov	r5, r0
 800b5ec:	4608      	mov	r0, r1
 800b5ee:	491d      	ldr	r1, [pc, #116]	; (800b664 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b5f0:	f00a fdea 	bl	80161c8 <strtok>
 800b5f4:	4604      	mov	r4, r0
 800b5f6:	b910      	cbnz	r0, 800b5fe <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b5f8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b5fc:	bd38      	pop	{r3, r4, r5, pc}
 800b5fe:	491a      	ldr	r1, [pc, #104]	; (800b668 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b600:	f7ff ff66 	bl	800b4d0 <strcasecmp>
 800b604:	b970      	cbnz	r0, 800b624 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b606:	4919      	ldr	r1, [pc, #100]	; (800b66c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b608:	f00a fdde 	bl	80161c8 <strtok>
 800b60c:	2800      	cmp	r0, #0
 800b60e:	d0f3      	beq.n	800b5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b610:	4917      	ldr	r1, [pc, #92]	; (800b670 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b612:	f7ff ff50 	bl	800b4b6 <strcmp>
 800b616:	b108      	cbz	r0, 800b61c <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b618:	20c8      	movs	r0, #200	; 0xc8
 800b61a:	e7ef      	b.n	800b5fc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b61c:	2301      	movs	r3, #1
 800b61e:	f885 3020 	strb.w	r3, [r5, #32]
 800b622:	e7f9      	b.n	800b618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b624:	4620      	mov	r0, r4
 800b626:	4913      	ldr	r1, [pc, #76]	; (800b674 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b628:	f7ff ff52 	bl	800b4d0 <strcasecmp>
 800b62c:	4604      	mov	r4, r0
 800b62e:	2800      	cmp	r0, #0
 800b630:	d1f2      	bne.n	800b618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b632:	4911      	ldr	r1, [pc, #68]	; (800b678 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b634:	f00a fdc8 	bl	80161c8 <strtok>
 800b638:	2800      	cmp	r0, #0
 800b63a:	d0dd      	beq.n	800b5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b63c:	1e42      	subs	r2, r0, #1
 800b63e:	4623      	mov	r3, r4
 800b640:	200a      	movs	r0, #10
 800b642:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b646:	b909      	cbnz	r1, 800b64c <HttpDaemon::ParseHeaderField(char*)+0x64>
 800b648:	84eb      	strh	r3, [r5, #38]	; 0x26
 800b64a:	e7e5      	b.n	800b618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b64c:	3930      	subs	r1, #48	; 0x30
 800b64e:	2909      	cmp	r1, #9
 800b650:	d8d2      	bhi.n	800b5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b652:	fb00 1303 	mla	r3, r0, r3, r1
 800b656:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b65a:	d9f2      	bls.n	800b642 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b65c:	f240 109d 	movw	r0, #413	; 0x19d
 800b660:	e7cc      	b.n	800b5fc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b662:	bf00      	nop
 800b664:	08019189 	stmdaeq	r1, {r0, r3, r7, r8, ip, pc}
 800b668:	0801918b 	stmdaeq	r1, {r0, r1, r3, r7, r8, ip, pc}
 800b66c:	08019198 	stmdaeq	r1, {r3, r4, r7, r8, ip, pc}
 800b670:	0801919b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, ip, pc}
 800b674:	080191ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip, pc}
 800b678:	0801c100 	stmdaeq	r1, {r8, lr, pc}

0800b67c <HttpDaemon::ParseRequest()>:
 800b67c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b67e:	68c1      	ldr	r1, [r0, #12]
 800b680:	2400      	movs	r4, #0
 800b682:	4605      	mov	r5, r0
 800b684:	f880 4020 	strb.w	r4, [r0, #32]
 800b688:	6244      	str	r4, [r0, #36]	; 0x24
 800b68a:	4622      	mov	r2, r4
 800b68c:	4626      	mov	r6, r4
 800b68e:	8aab      	ldrh	r3, [r5, #20]
 800b690:	42a3      	cmp	r3, r4
 800b692:	d91e      	bls.n	800b6d2 <HttpDaemon::ParseRequest()+0x56>
 800b694:	68eb      	ldr	r3, [r5, #12]
 800b696:	5d18      	ldrb	r0, [r3, r4]
 800b698:	280a      	cmp	r0, #10
 800b69a:	d10f      	bne.n	800b6bc <HttpDaemon::ParseRequest()+0x40>
 800b69c:	4423      	add	r3, r4
 800b69e:	1c57      	adds	r7, r2, #1
 800b6a0:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b6a4:	b96a      	cbnz	r2, 800b6c2 <HttpDaemon::ParseRequest()+0x46>
 800b6a6:	4628      	mov	r0, r5
 800b6a8:	f7ff ff58 	bl	800b55c <HttpDaemon::ParseMethod(char*)>
 800b6ac:	28c8      	cmp	r0, #200	; 0xc8
 800b6ae:	d111      	bne.n	800b6d4 <HttpDaemon::ParseRequest()+0x58>
 800b6b0:	68eb      	ldr	r3, [r5, #12]
 800b6b2:	1c61      	adds	r1, r4, #1
 800b6b4:	b28c      	uxth	r4, r1
 800b6b6:	463a      	mov	r2, r7
 800b6b8:	fa13 f181 	uxtah	r1, r3, r1
 800b6bc:	3401      	adds	r4, #1
 800b6be:	b2a4      	uxth	r4, r4
 800b6c0:	e7e5      	b.n	800b68e <HttpDaemon::ParseRequest()+0x12>
 800b6c2:	7808      	ldrb	r0, [r1, #0]
 800b6c4:	b968      	cbnz	r0, 800b6e2 <HttpDaemon::ParseRequest()+0x66>
 800b6c6:	696b      	ldr	r3, [r5, #20]
 800b6c8:	3b01      	subs	r3, #1
 800b6ca:	1b1b      	subs	r3, r3, r4
 800b6cc:	b29b      	uxth	r3, r3
 800b6ce:	84ab      	strh	r3, [r5, #36]	; 0x24
 800b6d0:	b90b      	cbnz	r3, 800b6d6 <HttpDaemon::ParseRequest()+0x5a>
 800b6d2:	20c8      	movs	r0, #200	; 0xc8
 800b6d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b6d6:	68ea      	ldr	r2, [r5, #12]
 800b6d8:	3401      	adds	r4, #1
 800b6da:	4414      	add	r4, r2
 800b6dc:	60ac      	str	r4, [r5, #8]
 800b6de:	54e0      	strb	r0, [r4, r3]
 800b6e0:	e7f7      	b.n	800b6d2 <HttpDaemon::ParseRequest()+0x56>
 800b6e2:	4628      	mov	r0, r5
 800b6e4:	f7ff ff80 	bl	800b5e8 <HttpDaemon::ParseHeaderField(char*)>
 800b6e8:	e7e0      	b.n	800b6ac <HttpDaemon::ParseRequest()+0x30>
	...

0800b6ec <HttpDaemon::HandleGetTxt()>:
 800b6ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6f0:	6846      	ldr	r6, [r0, #4]
 800b6f2:	1db4      	adds	r4, r6, #6
 800b6f4:	4607      	mov	r7, r0
 800b6f6:	4622      	mov	r2, r4
 800b6f8:	4613      	mov	r3, r2
 800b6fa:	3201      	adds	r2, #1
 800b6fc:	7819      	ldrb	r1, [r3, #0]
 800b6fe:	2900      	cmp	r1, #0
 800b700:	d1fa      	bne.n	800b6f8 <HttpDaemon::HandleGetTxt()+0xc>
 800b702:	1b1b      	subs	r3, r3, r4
 800b704:	2b04      	cmp	r3, #4
 800b706:	d803      	bhi.n	800b710 <HttpDaemon::HandleGetTxt()+0x24>
 800b708:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b70c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b710:	3b04      	subs	r3, #4
 800b712:	4914      	ldr	r1, [pc, #80]	; (800b764 <HttpDaemon::HandleGetTxt()+0x78>)
 800b714:	18e0      	adds	r0, r4, r3
 800b716:	f7ff fece 	bl	800b4b6 <strcmp>
 800b71a:	2800      	cmp	r0, #0
 800b71c:	d1f4      	bne.n	800b708 <HttpDaemon::HandleGetTxt()+0x1c>
 800b71e:	4b12      	ldr	r3, [pc, #72]	; (800b768 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b720:	2001      	movs	r0, #1
 800b722:	f893 8000 	ldrb.w	r8, [r3]
 800b726:	f7ff feed 	bl	800b504 <PropertiesConfig::EnableJSON(bool)>
 800b72a:	4b10      	ldr	r3, [pc, #64]	; (800b76c <HttpDaemon::HandleGetTxt()+0x80>)
 800b72c:	f240 529b 	movw	r2, #1435	; 0x59b
 800b730:	6818      	ldr	r0, [r3, #0]
 800b732:	4621      	mov	r1, r4
 800b734:	f7ff fa5c 	bl	800abf0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b738:	f008 0801 	and.w	r8, r8, #1
 800b73c:	4605      	mov	r5, r0
 800b73e:	4640      	mov	r0, r8
 800b740:	f7ff fee0 	bl	800b504 <PropertiesConfig::EnableJSON(bool)>
 800b744:	2d00      	cmp	r5, #0
 800b746:	d0df      	beq.n	800b708 <HttpDaemon::HandleGetTxt()+0x1c>
 800b748:	847d      	strh	r5, [r7, #34]	; 0x22
 800b74a:	4b09      	ldr	r3, [pc, #36]	; (800b770 <HttpDaemon::HandleGetTxt()+0x84>)
 800b74c:	3506      	adds	r5, #6
 800b74e:	442e      	add	r6, r5
 800b750:	42b4      	cmp	r4, r6
 800b752:	d101      	bne.n	800b758 <HttpDaemon::HandleGetTxt()+0x6c>
 800b754:	20c8      	movs	r0, #200	; 0xc8
 800b756:	e7d9      	b.n	800b70c <HttpDaemon::HandleGetTxt()+0x20>
 800b758:	f814 2b01 	ldrb.w	r2, [r4], #1
 800b75c:	f803 2b01 	strb.w	r2, [r3], #1
 800b760:	e7f6      	b.n	800b750 <HttpDaemon::HandleGetTxt()+0x64>
 800b762:	bf00      	nop
 800b764:	080190ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, ip, pc}
 800b768:	2000fcb0 			; <UNDEFINED> instruction: 0x2000fcb0
 800b76c:	20000124 	andcs	r0, r0, r4, lsr #2
 800b770:	20000128 	andcs	r0, r0, r8, lsr #2

0800b774 <HttpDaemon::HandleGet()>:
 800b774:	b570      	push	{r4, r5, r6, lr}
 800b776:	6845      	ldr	r5, [r0, #4]
 800b778:	493e      	ldr	r1, [pc, #248]	; (800b874 <HttpDaemon::HandleGet()+0x100>)
 800b77a:	4604      	mov	r4, r0
 800b77c:	4628      	mov	r0, r5
 800b77e:	f7ff fe9a 	bl	800b4b6 <strcmp>
 800b782:	b120      	cbz	r0, 800b78e <HttpDaemon::HandleGet()+0x1a>
 800b784:	493c      	ldr	r1, [pc, #240]	; (800b878 <HttpDaemon::HandleGet()+0x104>)
 800b786:	4628      	mov	r0, r5
 800b788:	f7ff fe95 	bl	800b4b6 <strcmp>
 800b78c:	b950      	cbnz	r0, 800b7a4 <HttpDaemon::HandleGet()+0x30>
 800b78e:	4b3b      	ldr	r3, [pc, #236]	; (800b87c <HttpDaemon::HandleGet()+0x108>)
 800b790:	493b      	ldr	r1, [pc, #236]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b792:	483c      	ldr	r0, [pc, #240]	; (800b884 <HttpDaemon::HandleGet()+0x110>)
 800b794:	6023      	str	r3, [r4, #0]
 800b796:	f000 fa63 	bl	800bc60 <get_file_content(char const*, char*)>
 800b79a:	2800      	cmp	r0, #0
 800b79c:	dd2f      	ble.n	800b7fe <HttpDaemon::HandleGet()+0x8a>
 800b79e:	8460      	strh	r0, [r4, #34]	; 0x22
 800b7a0:	20c8      	movs	r0, #200	; 0xc8
 800b7a2:	bd70      	pop	{r4, r5, r6, pc}
 800b7a4:	4938      	ldr	r1, [pc, #224]	; (800b888 <HttpDaemon::HandleGet()+0x114>)
 800b7a6:	4628      	mov	r0, r5
 800b7a8:	f7ff fe85 	bl	800b4b6 <strcmp>
 800b7ac:	b920      	cbnz	r0, 800b7b8 <HttpDaemon::HandleGet()+0x44>
 800b7ae:	4b37      	ldr	r3, [pc, #220]	; (800b88c <HttpDaemon::HandleGet()+0x118>)
 800b7b0:	4933      	ldr	r1, [pc, #204]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b7b2:	4837      	ldr	r0, [pc, #220]	; (800b890 <HttpDaemon::HandleGet()+0x11c>)
 800b7b4:	6023      	str	r3, [r4, #0]
 800b7b6:	e7ee      	b.n	800b796 <HttpDaemon::HandleGet()+0x22>
 800b7b8:	4936      	ldr	r1, [pc, #216]	; (800b894 <HttpDaemon::HandleGet()+0x120>)
 800b7ba:	4628      	mov	r0, r5
 800b7bc:	f7ff fe7b 	bl	800b4b6 <strcmp>
 800b7c0:	b190      	cbz	r0, 800b7e8 <HttpDaemon::HandleGet()+0x74>
 800b7c2:	4a35      	ldr	r2, [pc, #212]	; (800b898 <HttpDaemon::HandleGet()+0x124>)
 800b7c4:	1e6b      	subs	r3, r5, #1
 800b7c6:	1d69      	adds	r1, r5, #5
 800b7c8:	428b      	cmp	r3, r1
 800b7ca:	d112      	bne.n	800b7f2 <HttpDaemon::HandleGet()+0x7e>
 800b7cc:	4b33      	ldr	r3, [pc, #204]	; (800b89c <HttpDaemon::HandleGet()+0x128>)
 800b7ce:	4934      	ldr	r1, [pc, #208]	; (800b8a0 <HttpDaemon::HandleGet()+0x12c>)
 800b7d0:	6023      	str	r3, [r4, #0]
 800b7d2:	3506      	adds	r5, #6
 800b7d4:	4628      	mov	r0, r5
 800b7d6:	f7ff fe6e 	bl	800b4b6 <strcmp>
 800b7da:	b998      	cbnz	r0, 800b804 <HttpDaemon::HandleGet()+0x90>
 800b7dc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b7e0:	4827      	ldr	r0, [pc, #156]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b7e2:	f000 f9c9 	bl	800bb78 <remoteconfig::json_get_list(char*, unsigned short)>
 800b7e6:	e7d8      	b.n	800b79a <HttpDaemon::HandleGet()+0x26>
 800b7e8:	4b2e      	ldr	r3, [pc, #184]	; (800b8a4 <HttpDaemon::HandleGet()+0x130>)
 800b7ea:	4925      	ldr	r1, [pc, #148]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b7ec:	482e      	ldr	r0, [pc, #184]	; (800b8a8 <HttpDaemon::HandleGet()+0x134>)
 800b7ee:	6023      	str	r3, [r4, #0]
 800b7f0:	e7d1      	b.n	800b796 <HttpDaemon::HandleGet()+0x22>
 800b7f2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b7f6:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b7fa:	4286      	cmp	r6, r0
 800b7fc:	d0e4      	beq.n	800b7c8 <HttpDaemon::HandleGet()+0x54>
 800b7fe:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b802:	e7ce      	b.n	800b7a2 <HttpDaemon::HandleGet()+0x2e>
 800b804:	4929      	ldr	r1, [pc, #164]	; (800b8ac <HttpDaemon::HandleGet()+0x138>)
 800b806:	4628      	mov	r0, r5
 800b808:	f7ff fe55 	bl	800b4b6 <strcmp>
 800b80c:	b928      	cbnz	r0, 800b81a <HttpDaemon::HandleGet()+0xa6>
 800b80e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b812:	481b      	ldr	r0, [pc, #108]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b814:	f000 f9e0 	bl	800bbd8 <remoteconfig::json_get_version(char*, unsigned short)>
 800b818:	e7bf      	b.n	800b79a <HttpDaemon::HandleGet()+0x26>
 800b81a:	4925      	ldr	r1, [pc, #148]	; (800b8b0 <HttpDaemon::HandleGet()+0x13c>)
 800b81c:	4628      	mov	r0, r5
 800b81e:	f7ff fe4a 	bl	800b4b6 <strcmp>
 800b822:	b948      	cbnz	r0, 800b838 <HttpDaemon::HandleGet()+0xc4>
 800b824:	4b23      	ldr	r3, [pc, #140]	; (800b8b4 <HttpDaemon::HandleGet()+0x140>)
 800b826:	681b      	ldr	r3, [r3, #0]
 800b828:	7bdb      	ldrb	r3, [r3, #15]
 800b82a:	b303      	cbz	r3, 800b86e <HttpDaemon::HandleGet()+0xfa>
 800b82c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b830:	4813      	ldr	r0, [pc, #76]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b832:	f000 f9ed 	bl	800bc10 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b836:	e7b0      	b.n	800b79a <HttpDaemon::HandleGet()+0x26>
 800b838:	491f      	ldr	r1, [pc, #124]	; (800b8b8 <HttpDaemon::HandleGet()+0x144>)
 800b83a:	4628      	mov	r0, r5
 800b83c:	f7ff fe3b 	bl	800b4b6 <strcmp>
 800b840:	b928      	cbnz	r0, 800b84e <HttpDaemon::HandleGet()+0xda>
 800b842:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b846:	480e      	ldr	r0, [pc, #56]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b848:	f000 f9f2 	bl	800bc30 <remoteconfig::json_get_display(char*, unsigned short)>
 800b84c:	e7a5      	b.n	800b79a <HttpDaemon::HandleGet()+0x26>
 800b84e:	491b      	ldr	r1, [pc, #108]	; (800b8bc <HttpDaemon::HandleGet()+0x148>)
 800b850:	4628      	mov	r0, r5
 800b852:	f7ff fe30 	bl	800b4b6 <strcmp>
 800b856:	b928      	cbnz	r0, 800b864 <HttpDaemon::HandleGet()+0xf0>
 800b858:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b85c:	4808      	ldr	r0, [pc, #32]	; (800b880 <HttpDaemon::HandleGet()+0x10c>)
 800b85e:	f000 f9f7 	bl	800bc50 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b862:	e79a      	b.n	800b79a <HttpDaemon::HandleGet()+0x26>
 800b864:	4620      	mov	r0, r4
 800b866:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b86a:	f7ff bf3f 	b.w	800b6ec <HttpDaemon::HandleGetTxt()>
 800b86e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b872:	e796      	b.n	800b7a2 <HttpDaemon::HandleGet()+0x2e>
 800b874:	080191e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, ip, pc}
 800b878:	080191bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, ip, pc}
 800b87c:	080193d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, pc}
 800b880:	20000128 	andcs	r0, r0, r8, lsr #2
 800b884:	080191bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, ip, pc}
 800b888:	080191c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, ip, pc}
 800b88c:	080193f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, ip, pc}
 800b890:	080191c8 	stmdaeq	r1, {r3, r6, r7, r8, ip, pc}
 800b894:	080191d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, ip, pc}
 800b898:	080191dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, ip, pc}
 800b89c:	08019439 	stmdaeq	r1, {r0, r3, r4, r5, sl, ip, pc}
 800b8a0:	080191e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, pc}
 800b8a4:	08019419 	stmdaeq	r1, {r0, r3, r4, sl, ip, pc}
 800b8a8:	080191d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, ip, pc}
 800b8ac:	080191e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, pc}
 800b8b0:	080191f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, pc}
 800b8b4:	20000124 	andcs	r0, r0, r4, lsr #2
 800b8b8:	080191f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, ip, pc}
 800b8bc:	08019200 	stmdaeq	r1, {r9, ip, pc}

0800b8c0 <HttpDaemon::HandlePost(bool)>:
 800b8c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b8c2:	4604      	mov	r4, r0
 800b8c4:	2900      	cmp	r1, #0
 800b8c6:	f040 808a 	bne.w	800b9de <HttpDaemon::HandlePost(bool)+0x11e>
 800b8ca:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b8ce:	2b00      	cmp	r3, #0
 800b8d0:	d05a      	beq.n	800b988 <HttpDaemon::HandlePost(bool)+0xc8>
 800b8d2:	6845      	ldr	r5, [r0, #4]
 800b8d4:	4944      	ldr	r1, [pc, #272]	; (800b9e8 <HttpDaemon::HandlePost(bool)+0x128>)
 800b8d6:	4628      	mov	r0, r5
 800b8d8:	f7ff fded 	bl	800b4b6 <strcmp>
 800b8dc:	2800      	cmp	r0, #0
 800b8de:	bf0c      	ite	eq
 800b8e0:	2301      	moveq	r3, #1
 800b8e2:	2300      	movne	r3, #0
 800b8e4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b8e8:	d052      	beq.n	800b990 <HttpDaemon::HandlePost(bool)+0xd0>
 800b8ea:	4940      	ldr	r1, [pc, #256]	; (800b9ec <HttpDaemon::HandlePost(bool)+0x12c>)
 800b8ec:	4628      	mov	r0, r5
 800b8ee:	f7ff fde2 	bl	800b4b6 <strcmp>
 800b8f2:	2800      	cmp	r0, #0
 800b8f4:	d04c      	beq.n	800b990 <HttpDaemon::HandlePost(bool)+0xd0>
 800b8f6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b8fa:	e047      	b.n	800b98c <HttpDaemon::HandlePost(bool)+0xcc>
 800b8fc:	493c      	ldr	r1, [pc, #240]	; (800b9f0 <HttpDaemon::HandlePost(bool)+0x130>)
 800b8fe:	68a0      	ldr	r0, [r4, #8]
 800b900:	f10d 0207 	add.w	r2, sp, #7
 800b904:	f009 fd67 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b908:	b9d8      	cbnz	r0, 800b942 <HttpDaemon::HandlePost(bool)+0x82>
 800b90a:	4b3a      	ldr	r3, [pc, #232]	; (800b9f4 <HttpDaemon::HandlePost(bool)+0x134>)
 800b90c:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b910:	681d      	ldr	r5, [r3, #0]
 800b912:	69a8      	ldr	r0, [r5, #24]
 800b914:	fab6 f186 	clz	r1, r6
 800b918:	0949      	lsrs	r1, r1, #5
 800b91a:	b138      	cbz	r0, 800b92c <HttpDaemon::HandlePost(bool)+0x6c>
 800b91c:	6803      	ldr	r3, [r0, #0]
 800b91e:	7429      	strb	r1, [r5, #16]
 800b920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b922:	4798      	blx	r3
 800b924:	b116      	cbz	r6, 800b92c <HttpDaemon::HandlePost(bool)+0x6c>
 800b926:	4b34      	ldr	r3, [pc, #208]	; (800b9f8 <HttpDaemon::HandlePost(bool)+0x138>)
 800b928:	681b      	ldr	r3, [r3, #0]
 800b92a:	606b      	str	r3, [r5, #4]
 800b92c:	4b33      	ldr	r3, [pc, #204]	; (800b9fc <HttpDaemon::HandlePost(bool)+0x13c>)
 800b92e:	4a34      	ldr	r2, [pc, #208]	; (800ba00 <HttpDaemon::HandlePost(bool)+0x140>)
 800b930:	4834      	ldr	r0, [pc, #208]	; (800ba04 <HttpDaemon::HandlePost(bool)+0x144>)
 800b932:	6023      	str	r3, [r4, #0]
 800b934:	f240 519f 	movw	r1, #1439	; 0x59f
 800b938:	f7fe fde6 	bl	800a508 <snprintf>
 800b93c:	8460      	strh	r0, [r4, #34]	; 0x22
 800b93e:	20c8      	movs	r0, #200	; 0xc8
 800b940:	e024      	b.n	800b98c <HttpDaemon::HandlePost(bool)+0xcc>
 800b942:	4931      	ldr	r1, [pc, #196]	; (800ba08 <HttpDaemon::HandlePost(bool)+0x148>)
 800b944:	68a0      	ldr	r0, [r4, #8]
 800b946:	f10d 0207 	add.w	r2, sp, #7
 800b94a:	f009 fd44 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b94e:	b9d8      	cbnz	r0, 800b988 <HttpDaemon::HandlePost(bool)+0xc8>
 800b950:	4b2e      	ldr	r3, [pc, #184]	; (800ba0c <HttpDaemon::HandlePost(bool)+0x14c>)
 800b952:	6818      	ldr	r0, [r3, #0]
 800b954:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b958:	b11b      	cbz	r3, 800b962 <HttpDaemon::HandlePost(bool)+0xa2>
 800b95a:	2104      	movs	r1, #4
 800b95c:	f00a f924 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800b960:	e7e4      	b.n	800b92c <HttpDaemon::HandlePost(bool)+0x6c>
 800b962:	2102      	movs	r1, #2
 800b964:	e7fa      	b.n	800b95c <HttpDaemon::HandlePost(bool)+0x9c>
 800b966:	4b2a      	ldr	r3, [pc, #168]	; (800ba10 <HttpDaemon::HandlePost(bool)+0x150>)
 800b968:	2001      	movs	r0, #1
 800b96a:	781d      	ldrb	r5, [r3, #0]
 800b96c:	f7ff fdca 	bl	800b504 <PropertiesConfig::EnableJSON(bool)>
 800b970:	4b28      	ldr	r3, [pc, #160]	; (800ba14 <HttpDaemon::HandlePost(bool)+0x154>)
 800b972:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800b974:	6818      	ldr	r0, [r3, #0]
 800b976:	68a1      	ldr	r1, [r4, #8]
 800b978:	f005 0501 	and.w	r5, r5, #1
 800b97c:	f7ff fa26 	bl	800adcc <RemoteConfig::HandleSet(void*, unsigned int)>
 800b980:	4628      	mov	r0, r5
 800b982:	f7ff fdbf 	bl	800b504 <PropertiesConfig::EnableJSON(bool)>
 800b986:	e7d1      	b.n	800b92c <HttpDaemon::HandlePost(bool)+0x6c>
 800b988:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b98c:	b002      	add	sp, #8
 800b98e:	bd70      	pop	{r4, r5, r6, pc}
 800b990:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b992:	6962      	ldr	r2, [r4, #20]
 800b994:	429a      	cmp	r2, r3
 800b996:	dbd2      	blt.n	800b93e <HttpDaemon::HandlePost(bool)+0x7e>
 800b998:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800b99a:	2b00      	cmp	r3, #0
 800b99c:	d0cf      	beq.n	800b93e <HttpDaemon::HandlePost(bool)+0x7e>
 800b99e:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b9a2:	2b00      	cmp	r3, #0
 800b9a4:	d0df      	beq.n	800b966 <HttpDaemon::HandlePost(bool)+0xa6>
 800b9a6:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800b9a8:	68a0      	ldr	r0, [r4, #8]
 800b9aa:	2201      	movs	r2, #1
 800b9ac:	f009 fa8c 	bl	8014ec8 <properties::convert_json_file(char*, unsigned short, bool)>
 800b9b0:	2800      	cmp	r0, #0
 800b9b2:	dde9      	ble.n	800b988 <HttpDaemon::HandlePost(bool)+0xc8>
 800b9b4:	4918      	ldr	r1, [pc, #96]	; (800ba18 <HttpDaemon::HandlePost(bool)+0x158>)
 800b9b6:	68a0      	ldr	r0, [r4, #8]
 800b9b8:	f10d 0207 	add.w	r2, sp, #7
 800b9bc:	f009 fd0b 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b9c0:	2800      	cmp	r0, #0
 800b9c2:	d19b      	bne.n	800b8fc <HttpDaemon::HandlePost(bool)+0x3c>
 800b9c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b9c8:	2b00      	cmp	r3, #0
 800b9ca:	d0af      	beq.n	800b92c <HttpDaemon::HandlePost(bool)+0x6c>
 800b9cc:	4b11      	ldr	r3, [pc, #68]	; (800ba14 <HttpDaemon::HandlePost(bool)+0x154>)
 800b9ce:	681b      	ldr	r3, [r3, #0]
 800b9d0:	7b9b      	ldrb	r3, [r3, #14]
 800b9d2:	2b00      	cmp	r3, #0
 800b9d4:	d0d8      	beq.n	800b988 <HttpDaemon::HandlePost(bool)+0xc8>
 800b9d6:	4b11      	ldr	r3, [pc, #68]	; (800ba1c <HttpDaemon::HandlePost(bool)+0x15c>)
 800b9d8:	6818      	ldr	r0, [r3, #0]
 800b9da:	f00a fa19 	bl	8015e10 <Hardware::Reboot()>
 800b9de:	68c3      	ldr	r3, [r0, #12]
 800b9e0:	6083      	str	r3, [r0, #8]
 800b9e2:	6943      	ldr	r3, [r0, #20]
 800b9e4:	8483      	strh	r3, [r0, #36]	; 0x24
 800b9e6:	e7da      	b.n	800b99e <HttpDaemon::HandlePost(bool)+0xde>
 800b9e8:	0801920a 	stmdaeq	r1, {r1, r3, r9, ip, pc}
 800b9ec:	080191a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, ip, pc}
 800b9f0:	080191f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, ip, pc}
 800b9f4:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 800b9f8:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800b9fc:	080193d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, pc}
 800ba00:	08019227 	stmdaeq	r1, {r0, r1, r2, r5, r9, ip, pc}
 800ba04:	20000128 	andcs	r0, r0, r8, lsr #2
 800ba08:	0801921e 	stmdaeq	r1, {r1, r2, r3, r4, r9, ip, pc}
 800ba0c:	2000fda0 	andcs	pc, r0, r0, lsr #27
 800ba10:	2000fcb0 			; <UNDEFINED> instruction: 0x2000fcb0
 800ba14:	20000124 	andcs	r0, r0, r4, lsr #2
 800ba18:	08019217 	stmdaeq	r1, {r0, r1, r2, r4, r9, ip, pc}
 800ba1c:	2000fda4 	andcs	pc, r0, r4, lsr #27

0800ba20 <HttpDaemon::Run()>:
 800ba20:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba22:	4e46      	ldr	r6, [pc, #280]	; (800bb3c <HttpDaemon::Run()+0x11c>)
 800ba24:	6901      	ldr	r1, [r0, #16]
 800ba26:	4604      	mov	r4, r0
 800ba28:	f100 020c 	add.w	r2, r0, #12
 800ba2c:	6830      	ldr	r0, [r6, #0]
 800ba2e:	f008 f8d2 	bl	8013bd6 <Network::TcpRead(int, unsigned char const**)>
 800ba32:	6160      	str	r0, [r4, #20]
 800ba34:	2800      	cmp	r0, #0
 800ba36:	d05b      	beq.n	800baf0 <HttpDaemon::Run()+0xd0>
 800ba38:	69a3      	ldr	r3, [r4, #24]
 800ba3a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ba3e:	d159      	bne.n	800baf4 <HttpDaemon::Run()+0xd4>
 800ba40:	4620      	mov	r0, r4
 800ba42:	f7ff fe1b 	bl	800b67c <HttpDaemon::ParseRequest()>
 800ba46:	28c8      	cmp	r0, #200	; 0xc8
 800ba48:	61a0      	str	r0, [r4, #24]
 800ba4a:	d106      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800ba4c:	69e3      	ldr	r3, [r4, #28]
 800ba4e:	2b00      	cmp	r3, #0
 800ba50:	d142      	bne.n	800bad8 <HttpDaemon::Run()+0xb8>
 800ba52:	4620      	mov	r0, r4
 800ba54:	f7ff fe8e 	bl	800b774 <HttpDaemon::HandleGet()>
 800ba58:	61a0      	str	r0, [r4, #24]
 800ba5a:	69a3      	ldr	r3, [r4, #24]
 800ba5c:	2bc8      	cmp	r3, #200	; 0xc8
 800ba5e:	d06b      	beq.n	800bb38 <HttpDaemon::Run()+0x118>
 800ba60:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800ba64:	d05e      	beq.n	800bb24 <HttpDaemon::Run()+0x104>
 800ba66:	dc4e      	bgt.n	800bb06 <HttpDaemon::Run()+0xe6>
 800ba68:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800ba6c:	d05c      	beq.n	800bb28 <HttpDaemon::Run()+0x108>
 800ba6e:	f240 129d 	movw	r2, #413	; 0x19d
 800ba72:	4293      	cmp	r3, r2
 800ba74:	d05a      	beq.n	800bb2c <HttpDaemon::Run()+0x10c>
 800ba76:	4d32      	ldr	r5, [pc, #200]	; (800bb40 <HttpDaemon::Run()+0x120>)
 800ba78:	4a32      	ldr	r2, [pc, #200]	; (800bb44 <HttpDaemon::Run()+0x124>)
 800ba7a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800ba7e:	bf18      	it	ne
 800ba80:	4615      	movne	r5, r2
 800ba82:	4a31      	ldr	r2, [pc, #196]	; (800bb48 <HttpDaemon::Run()+0x128>)
 800ba84:	6022      	str	r2, [r4, #0]
 800ba86:	e9cd 5500 	strd	r5, r5, [sp]
 800ba8a:	4a30      	ldr	r2, [pc, #192]	; (800bb4c <HttpDaemon::Run()+0x12c>)
 800ba8c:	4830      	ldr	r0, [pc, #192]	; (800bb50 <HttpDaemon::Run()+0x130>)
 800ba8e:	f240 519f 	movw	r1, #1439	; 0x59f
 800ba92:	f7fe fd39 	bl	800a508 <snprintf>
 800ba96:	8460      	strh	r0, [r4, #34]	; 0x22
 800ba98:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ba9a:	9303      	str	r3, [sp, #12]
 800ba9c:	6823      	ldr	r3, [r4, #0]
 800ba9e:	9302      	str	r3, [sp, #8]
 800baa0:	4b2c      	ldr	r3, [pc, #176]	; (800bb54 <HttpDaemon::Run()+0x134>)
 800baa2:	4a2d      	ldr	r2, [pc, #180]	; (800bb58 <HttpDaemon::Run()+0x138>)
 800baa4:	68e0      	ldr	r0, [r4, #12]
 800baa6:	e9cd 5300 	strd	r5, r3, [sp]
 800baaa:	f240 519f 	movw	r1, #1439	; 0x59f
 800baae:	69a3      	ldr	r3, [r4, #24]
 800bab0:	f7fe fd2a 	bl	800a508 <snprintf>
 800bab4:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800bab8:	b283      	uxth	r3, r0
 800baba:	6830      	ldr	r0, [r6, #0]
 800babc:	f008 f88f 	bl	8013bde <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800bac0:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800bac2:	4a23      	ldr	r2, [pc, #140]	; (800bb50 <HttpDaemon::Run()+0x130>)
 800bac4:	6921      	ldr	r1, [r4, #16]
 800bac6:	6830      	ldr	r0, [r6, #0]
 800bac8:	f008 f889 	bl	8013bde <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800bacc:	f44f 7202 	mov.w	r2, #520	; 0x208
 800bad0:	2302      	movs	r3, #2
 800bad2:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800bad6:	e00b      	b.n	800baf0 <HttpDaemon::Run()+0xd0>
 800bad8:	2b01      	cmp	r3, #1
 800bada:	d1be      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800badc:	2100      	movs	r1, #0
 800bade:	4620      	mov	r0, r4
 800bae0:	f7ff feee 	bl	800b8c0 <HttpDaemon::HandlePost(bool)>
 800bae4:	28c8      	cmp	r0, #200	; 0xc8
 800bae6:	61a0      	str	r0, [r4, #24]
 800bae8:	d1b7      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800baea:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800baec:	2b00      	cmp	r3, #0
 800baee:	d1b4      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800baf0:	b004      	add	sp, #16
 800baf2:	bd70      	pop	{r4, r5, r6, pc}
 800baf4:	2bc8      	cmp	r3, #200	; 0xc8
 800baf6:	d1b0      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800baf8:	69e1      	ldr	r1, [r4, #28]
 800bafa:	2901      	cmp	r1, #1
 800bafc:	d1ad      	bne.n	800ba5a <HttpDaemon::Run()+0x3a>
 800bafe:	4620      	mov	r0, r4
 800bb00:	f7ff fede 	bl	800b8c0 <HttpDaemon::HandlePost(bool)>
 800bb04:	e7a8      	b.n	800ba58 <HttpDaemon::Run()+0x38>
 800bb06:	f240 12f5 	movw	r2, #501	; 0x1f5
 800bb0a:	4293      	cmp	r3, r2
 800bb0c:	d010      	beq.n	800bb30 <HttpDaemon::Run()+0x110>
 800bb0e:	f240 12f9 	movw	r2, #505	; 0x1f9
 800bb12:	4293      	cmp	r3, r2
 800bb14:	d00e      	beq.n	800bb34 <HttpDaemon::Run()+0x114>
 800bb16:	4d11      	ldr	r5, [pc, #68]	; (800bb5c <HttpDaemon::Run()+0x13c>)
 800bb18:	4a0a      	ldr	r2, [pc, #40]	; (800bb44 <HttpDaemon::Run()+0x124>)
 800bb1a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800bb1e:	bf18      	it	ne
 800bb20:	4615      	movne	r5, r2
 800bb22:	e7ae      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb24:	4d0e      	ldr	r5, [pc, #56]	; (800bb60 <HttpDaemon::Run()+0x140>)
 800bb26:	e7ac      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb28:	4d0e      	ldr	r5, [pc, #56]	; (800bb64 <HttpDaemon::Run()+0x144>)
 800bb2a:	e7aa      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb2c:	4d0e      	ldr	r5, [pc, #56]	; (800bb68 <HttpDaemon::Run()+0x148>)
 800bb2e:	e7a8      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb30:	4d0e      	ldr	r5, [pc, #56]	; (800bb6c <HttpDaemon::Run()+0x14c>)
 800bb32:	e7a6      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb34:	4d0e      	ldr	r5, [pc, #56]	; (800bb70 <HttpDaemon::Run()+0x150>)
 800bb36:	e7a4      	b.n	800ba82 <HttpDaemon::Run()+0x62>
 800bb38:	4d0e      	ldr	r5, [pc, #56]	; (800bb74 <HttpDaemon::Run()+0x154>)
 800bb3a:	e7ad      	b.n	800ba98 <HttpDaemon::Run()+0x78>
 800bb3c:	2000f9f0 	strdcs	pc, [r0], -r0
 800bb40:	08019283 	stmdaeq	r1, {r0, r1, r7, r9, ip, pc}
 800bb44:	0801930a 	stmdaeq	r1, {r1, r3, r8, r9, ip, pc}
 800bb48:	080193d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, pc}
 800bb4c:	0801931b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip, pc}
 800bb50:	20000128 	andcs	r0, r0, r8, lsr #2
 800bb54:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}
 800bb58:	08019376 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, ip, pc}
 800bb5c:	080192c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, ip, pc}
 800bb60:	080192b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, ip, pc}
 800bb64:	0801928f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, ip, pc}
 800bb68:	08019299 	stmdaeq	r1, {r0, r3, r4, r7, r9, ip, pc}
 800bb6c:	080192dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, ip, pc}
 800bb70:	080192f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, ip, pc}
 800bb74:	08019318 	stmdaeq	r1, {r3, r4, r8, r9, ip, pc}

0800bb78 <remoteconfig::json_get_list(char*, unsigned short)>:
 800bb78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb7a:	4b13      	ldr	r3, [pc, #76]	; (800bbc8 <remoteconfig::json_get_list(char*, unsigned short)+0x50>)
 800bb7c:	4f13      	ldr	r7, [pc, #76]	; (800bbcc <remoteconfig::json_get_list(char*, unsigned short)+0x54>)
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	b08b      	sub	sp, #44	; 0x2c
 800bb82:	4605      	mov	r5, r0
 800bb84:	6838      	ldr	r0, [r7, #0]
 800bb86:	695c      	ldr	r4, [r3, #20]
 800bb88:	9109      	str	r1, [sp, #36]	; 0x24
 800bb8a:	f7fe ffe1 	bl	800ab50 <RemoteConfig::GetStringNode() const>
 800bb8e:	4606      	mov	r6, r0
 800bb90:	6838      	ldr	r0, [r7, #0]
 800bb92:	f7fe ffe9 	bl	800ab68 <RemoteConfig::GetStringOutput() const>
 800bb96:	4b0e      	ldr	r3, [pc, #56]	; (800bbd0 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800bb98:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bb9a:	7a1a      	ldrb	r2, [r3, #8]
 800bb9c:	9604      	str	r6, [sp, #16]
 800bb9e:	3309      	adds	r3, #9
 800bba0:	9303      	str	r3, [sp, #12]
 800bba2:	0e23      	lsrs	r3, r4, #24
 800bba4:	9302      	str	r3, [sp, #8]
 800bba6:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800bbaa:	9301      	str	r3, [sp, #4]
 800bbac:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800bbb0:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800bbb4:	9300      	str	r3, [sp, #0]
 800bbb6:	4a07      	ldr	r2, [pc, #28]	; (800bbd4 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>)
 800bbb8:	b2e3      	uxtb	r3, r4
 800bbba:	4628      	mov	r0, r5
 800bbbc:	f7fe fca4 	bl	800a508 <snprintf>
 800bbc0:	b280      	uxth	r0, r0
 800bbc2:	b00b      	add	sp, #44	; 0x2c
 800bbc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bbc6:	bf00      	nop
 800bbc8:	2000f9f0 	strdcs	pc, [r0], -r0
 800bbcc:	20000124 	andcs	r0, r0, r4, lsr #2
 800bbd0:	20000100 	andcs	r0, r0, r0, lsl #2
 800bbd4:	080194b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, ip, pc}

0800bbd8 <remoteconfig::json_get_version(char*, unsigned short)>:
 800bbd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bbda:	4b0a      	ldr	r3, [pc, #40]	; (800bc04 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800bbdc:	9305      	str	r3, [sp, #20]
 800bbde:	2208      	movs	r2, #8
 800bbe0:	9204      	str	r2, [sp, #16]
 800bbe2:	f1a3 020b 	sub.w	r2, r3, #11
 800bbe6:	9203      	str	r2, [sp, #12]
 800bbe8:	220b      	movs	r2, #11
 800bbea:	9202      	str	r2, [sp, #8]
 800bbec:	3b0e      	subs	r3, #14
 800bbee:	4a06      	ldr	r2, [pc, #24]	; (800bc08 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800bbf0:	9201      	str	r2, [sp, #4]
 800bbf2:	9300      	str	r3, [sp, #0]
 800bbf4:	4a05      	ldr	r2, [pc, #20]	; (800bc0c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800bbf6:	2303      	movs	r3, #3
 800bbf8:	f7fe fc86 	bl	800a508 <snprintf>
 800bbfc:	b280      	uxth	r0, r0
 800bbfe:	b007      	add	sp, #28
 800bc00:	f85d fb04 	ldr.w	pc, [sp], #4
 800bc04:	2000fd52 	andcs	pc, r0, r2, asr sp	; <UNPREDICTABLE>
 800bc08:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}
 800bc0c:	08019512 	stmdaeq	r1, {r1, r4, r8, sl, ip, pc}

0800bc10 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800bc10:	b508      	push	{r3, lr}
 800bc12:	4b05      	ldr	r3, [pc, #20]	; (800bc28 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800bc14:	681a      	ldr	r2, [r3, #0]
 800bc16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800bc1a:	fbb2 f3f3 	udiv	r3, r2, r3
 800bc1e:	4a03      	ldr	r2, [pc, #12]	; (800bc2c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800bc20:	f7fe fc72 	bl	800a508 <snprintf>
 800bc24:	b280      	uxth	r0, r0
 800bc26:	bd08      	pop	{r3, pc}
 800bc28:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800bc2c:	08019558 	stmdaeq	r1, {r3, r4, r6, r8, sl, ip, pc}

0800bc30 <remoteconfig::json_get_display(char*, unsigned short)>:
 800bc30:	b508      	push	{r3, lr}
 800bc32:	4b05      	ldr	r3, [pc, #20]	; (800bc48 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800bc34:	4a05      	ldr	r2, [pc, #20]	; (800bc4c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800bc36:	681b      	ldr	r3, [r3, #0]
 800bc38:	7c1b      	ldrb	r3, [r3, #16]
 800bc3a:	f083 0301 	eor.w	r3, r3, #1
 800bc3e:	f7fe fc63 	bl	800a508 <snprintf>
 800bc42:	b280      	uxth	r0, r0
 800bc44:	bd08      	pop	{r3, pc}
 800bc46:	bf00      	nop
 800bc48:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 800bc4c:	08019567 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sl, ip, pc}

0800bc50 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800bc50:	b508      	push	{r3, lr}
 800bc52:	4a02      	ldr	r2, [pc, #8]	; (800bc5c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800bc54:	f7fe fc58 	bl	800a508 <snprintf>
 800bc58:	b280      	uxth	r0, r0
 800bc5a:	bd08      	pop	{r3, pc}
 800bc5c:	08019576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, pc}

0800bc60 <get_file_content(char const*, char*)>:
 800bc60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc62:	4a11      	ldr	r2, [pc, #68]	; (800bca8 <get_file_content(char const*, char*)+0x48>)
 800bc64:	2300      	movs	r3, #0
 800bc66:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800bc6a:	1e46      	subs	r6, r0, #1
 800bc6c:	3c01      	subs	r4, #1
 800bc6e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800bc72:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800bc76:	42bd      	cmp	r5, r7
 800bc78:	d005      	beq.n	800bc86 <get_file_content(char const*, char*)+0x26>
 800bc7a:	3301      	adds	r3, #1
 800bc7c:	2b03      	cmp	r3, #3
 800bc7e:	d1f2      	bne.n	800bc66 <get_file_content(char const*, char*)+0x6>
 800bc80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bc84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bc86:	2d00      	cmp	r5, #0
 800bc88:	d1f1      	bne.n	800bc6e <get_file_content(char const*, char*)+0xe>
 800bc8a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800bc8e:	4608      	mov	r0, r1
 800bc90:	6853      	ldr	r3, [r2, #4]
 800bc92:	3b01      	subs	r3, #1
 800bc94:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800bc98:	f800 2b01 	strb.w	r2, [r0], #1
 800bc9c:	2a00      	cmp	r2, #0
 800bc9e:	d1f9      	bne.n	800bc94 <get_file_content(char const*, char*)+0x34>
 800bca0:	1a41      	subs	r1, r0, r1
 800bca2:	1e48      	subs	r0, r1, #1
 800bca4:	e7ee      	b.n	800bc84 <get_file_content(char const*, char*)+0x24>
 800bca6:	bf00      	nop
 800bca8:	080198d4 	stmdaeq	r1, {r2, r4, r6, r7, fp, ip, pc}

0800bcac <e131::universe_to_multicast_ip(unsigned short)>:
 800bcac:	b513      	push	{r0, r1, r4, lr}
 800bcae:	4604      	mov	r4, r0
 800bcb0:	a901      	add	r1, sp, #4
 800bcb2:	4806      	ldr	r0, [pc, #24]	; (800bccc <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800bcb4:	f00a f94e 	bl	8015f54 <inet_aton>
 800bcb8:	9801      	ldr	r0, [sp, #4]
 800bcba:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800bcbe:	0224      	lsls	r4, r4, #8
 800bcc0:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800bcc4:	4320      	orrs	r0, r4
 800bcc6:	b002      	add	sp, #8
 800bcc8:	bd10      	pop	{r4, pc}
 800bcca:	bf00      	nop
 800bccc:	08019e16 	stmdaeq	r1, {r1, r2, r4, r9, sl, fp, ip, pc}

0800bcd0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800bcd0:	b510      	push	{r4, lr}
 800bcd2:	f240 6304 	movw	r3, #1540	; 0x604
 800bcd6:	fb03 0001 	mla	r0, r3, r1, r0
 800bcda:	2300      	movs	r3, #0
 800bcdc:	4293      	cmp	r3, r2
 800bcde:	d100      	bne.n	800bce2 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800bce0:	bd10      	pop	{r4, pc}
 800bce2:	f810 4b01 	ldrb.w	r4, [r0], #1
 800bce6:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800bcea:	42a1      	cmp	r1, r4
 800bcec:	bf38      	it	cc
 800bcee:	4621      	movcc	r1, r4
 800bcf0:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800bcf4:	3301      	adds	r3, #1
 800bcf6:	e7f1      	b.n	800bcdc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800bcf8 <memset.constprop.0.isra.0>:
 800bcf8:	4401      	add	r1, r0
 800bcfa:	2300      	movs	r3, #0
 800bcfc:	4288      	cmp	r0, r1
 800bcfe:	d100      	bne.n	800bd02 <memset.constprop.0.isra.0+0xa>
 800bd00:	4770      	bx	lr
 800bd02:	f800 3b01 	strb.w	r3, [r0], #1
 800bd06:	e7f9      	b.n	800bcfc <memset.constprop.0.isra.0+0x4>

0800bd08 <memcpy.isra.0>:
 800bd08:	3801      	subs	r0, #1
 800bd0a:	440a      	add	r2, r1
 800bd0c:	4291      	cmp	r1, r2
 800bd0e:	d100      	bne.n	800bd12 <memcpy.isra.0+0xa>
 800bd10:	4770      	bx	lr
 800bd12:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bd16:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bd1a:	e7f7      	b.n	800bd0c <memcpy.isra.0+0x4>

0800bd1c <lightset::Data::Get()>:
 800bd1c:	4b03      	ldr	r3, [pc, #12]	; (800bd2c <lightset::Data::Get()+0x10>)
 800bd1e:	4804      	ldr	r0, [pc, #16]	; (800bd30 <lightset::Data::Get()+0x14>)
 800bd20:	681a      	ldr	r2, [r3, #0]
 800bd22:	07d2      	lsls	r2, r2, #31
 800bd24:	bf5c      	itt	pl
 800bd26:	2201      	movpl	r2, #1
 800bd28:	601a      	strpl	r2, [r3, #0]
 800bd2a:	4770      	bx	lr
 800bd2c:	200006c8 	andcs	r0, r0, r8, asr #13
 800bd30:	20030000 	andcs	r0, r3, r0

0800bd34 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800bd34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bd36:	4604      	mov	r4, r0
 800bd38:	9103      	str	r1, [sp, #12]
 800bd3a:	9201      	str	r2, [sp, #4]
 800bd3c:	f7ff ffee 	bl	800bd1c <lightset::Data::Get()>
 800bd40:	f240 6304 	movw	r3, #1540	; 0x604
 800bd44:	435c      	muls	r4, r3
 800bd46:	1906      	adds	r6, r0, r4
 800bd48:	9a01      	ldr	r2, [sp, #4]
 800bd4a:	9903      	ldr	r1, [sp, #12]
 800bd4c:	9202      	str	r2, [sp, #8]
 800bd4e:	4605      	mov	r5, r0
 800bd50:	4630      	mov	r0, r6
 800bd52:	9101      	str	r1, [sp, #4]
 800bd54:	f7ff ffd8 	bl	800bd08 <memcpy.isra.0>
 800bd58:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bd5c:	9a02      	ldr	r2, [sp, #8]
 800bd5e:	9901      	ldr	r1, [sp, #4]
 800bd60:	f8c6 2600 	str.w	r2, [r6, #1536]	; 0x600
 800bd64:	1928      	adds	r0, r5, r4
 800bd66:	b004      	add	sp, #16
 800bd68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd6c:	f7ff bfcc 	b.w	800bd08 <memcpy.isra.0>

0800bd70 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bd70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bd74:	4606      	mov	r6, r0
 800bd76:	9103      	str	r1, [sp, #12]
 800bd78:	9201      	str	r2, [sp, #4]
 800bd7a:	461f      	mov	r7, r3
 800bd7c:	f7ff ffce 	bl	800bd1c <lightset::Data::Get()>
 800bd80:	f240 6404 	movw	r4, #1540	; 0x604
 800bd84:	4374      	muls	r4, r6
 800bd86:	eb00 0804 	add.w	r8, r0, r4
 800bd8a:	9a01      	ldr	r2, [sp, #4]
 800bd8c:	9903      	ldr	r1, [sp, #12]
 800bd8e:	9202      	str	r2, [sp, #8]
 800bd90:	4605      	mov	r5, r0
 800bd92:	4640      	mov	r0, r8
 800bd94:	9101      	str	r1, [sp, #4]
 800bd96:	f7ff ffb7 	bl	800bd08 <memcpy.isra.0>
 800bd9a:	9a02      	ldr	r2, [sp, #8]
 800bd9c:	9901      	ldr	r1, [sp, #4]
 800bd9e:	f8c8 2600 	str.w	r2, [r8, #1536]	; 0x600
 800bda2:	b937      	cbnz	r7, 800bdb2 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800bda4:	4631      	mov	r1, r6
 800bda6:	4628      	mov	r0, r5
 800bda8:	b004      	add	sp, #16
 800bdaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bdae:	f7ff bf8f 	b.w	800bcd0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800bdb2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800bdb6:	1928      	adds	r0, r5, r4
 800bdb8:	b004      	add	sp, #16
 800bdba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bdbe:	f7ff bfa3 	b.w	800bd08 <memcpy.isra.0>

0800bdc2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800bdc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bdc4:	b085      	sub	sp, #20
 800bdc6:	461f      	mov	r7, r3
 800bdc8:	4606      	mov	r6, r0
 800bdca:	9103      	str	r1, [sp, #12]
 800bdcc:	9201      	str	r2, [sp, #4]
 800bdce:	f7ff ffa5 	bl	800bd1c <lightset::Data::Get()>
 800bdd2:	f240 6404 	movw	r4, #1540	; 0x604
 800bdd6:	4374      	muls	r4, r6
 800bdd8:	4605      	mov	r5, r0
 800bdda:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800bdde:	9a01      	ldr	r2, [sp, #4]
 800bde0:	9903      	ldr	r1, [sp, #12]
 800bde2:	9202      	str	r2, [sp, #8]
 800bde4:	4428      	add	r0, r5
 800bde6:	9101      	str	r1, [sp, #4]
 800bde8:	f7ff ff8e 	bl	800bd08 <memcpy.isra.0>
 800bdec:	192b      	adds	r3, r5, r4
 800bdee:	9a02      	ldr	r2, [sp, #8]
 800bdf0:	9901      	ldr	r1, [sp, #4]
 800bdf2:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
 800bdf6:	b937      	cbnz	r7, 800be06 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x44>
 800bdf8:	4631      	mov	r1, r6
 800bdfa:	4628      	mov	r0, r5
 800bdfc:	b005      	add	sp, #20
 800bdfe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800be02:	f7ff bf65 	b.w	800bcd0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800be06:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800be0a:	1928      	adds	r0, r5, r4
 800be0c:	b005      	add	sp, #20
 800be0e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800be12:	f7ff bf79 	b.w	800bd08 <memcpy.isra.0>
	...

0800be18 <E131Bridge::E131Bridge()>:
 800be18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be1a:	2300      	movs	r3, #0
 800be1c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800be20:	e9c0 2300 	strd	r2, r3, [r0]
 800be24:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800be28:	2201      	movs	r2, #1
 800be2a:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800be2e:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800be32:	6743      	str	r3, [r0, #116]	; 0x74
 800be34:	4b28      	ldr	r3, [pc, #160]	; (800bed8 <E131Bridge::E131Bridge()+0xc0>)
 800be36:	7202      	strb	r2, [r0, #8]
 800be38:	f500 55cd 	add.w	r5, r0, #6560	; 0x19a0
 800be3c:	f500 52b4 	add.w	r2, r0, #5760	; 0x1680
 800be40:	b093      	sub	sp, #76	; 0x4c
 800be42:	4604      	mov	r4, r0
 800be44:	6018      	str	r0, [r3, #0]
 800be46:	f200 5614 	addw	r6, r0, #1300	; 0x514
 800be4a:	321c      	adds	r2, #28
 800be4c:	3514      	adds	r5, #20
 800be4e:	2764      	movs	r7, #100	; 0x64
 800be50:	4630      	mov	r0, r6
 800be52:	2144      	movs	r1, #68	; 0x44
 800be54:	f7ff ff50 	bl	800bcf8 <memset.constprop.0.isra.0>
 800be58:	4610      	mov	r0, r2
 800be5a:	210c      	movs	r1, #12
 800be5c:	f7ff ff4c 	bl	800bcf8 <memset.constprop.0.isra.0>
 800be60:	320c      	adds	r2, #12
 800be62:	f802 7c03 	strb.w	r7, [r2, #-3]
 800be66:	4295      	cmp	r5, r2
 800be68:	f106 0644 	add.w	r6, r6, #68	; 0x44
 800be6c:	d1f0      	bne.n	800be50 <E131Bridge::E131Bridge()+0x38>
 800be6e:	2120      	movs	r1, #32
 800be70:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800be74:	4d19      	ldr	r5, [pc, #100]	; (800bedc <E131Bridge::E131Bridge()+0xc4>)
 800be76:	4a1a      	ldr	r2, [pc, #104]	; (800bee0 <E131Bridge::E131Bridge()+0xc8>)
 800be78:	f7ff ff3e 	bl	800bcf8 <memset.constprop.0.isra.0>
 800be7c:	2301      	movs	r3, #1
 800be7e:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800be82:	682b      	ldr	r3, [r5, #0]
 800be84:	9200      	str	r2, [sp, #0]
 800be86:	3320      	adds	r3, #32
 800be88:	4a16      	ldr	r2, [pc, #88]	; (800bee4 <E131Bridge::E131Bridge()+0xcc>)
 800be8a:	2140      	movs	r1, #64	; 0x40
 800be8c:	a802      	add	r0, sp, #8
 800be8e:	f7fe fb3b 	bl	800a508 <snprintf>
 800be92:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800be96:	a902      	add	r1, sp, #8
 800be98:	233f      	movs	r3, #63	; 0x3f
 800be9a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800be9e:	b928      	cbnz	r0, 800beac <E131Bridge::E131Bridge()+0x94>
 800bea0:	4413      	add	r3, r2
 800bea2:	429a      	cmp	r2, r3
 800bea4:	d006      	beq.n	800beb4 <E131Bridge::E131Bridge()+0x9c>
 800bea6:	f802 0b01 	strb.w	r0, [r2], #1
 800beaa:	e7fa      	b.n	800bea2 <E131Bridge::E131Bridge()+0x8a>
 800beac:	3b01      	subs	r3, #1
 800beae:	f802 0b01 	strb.w	r0, [r2], #1
 800beb2:	d1f2      	bne.n	800be9a <E131Bridge::E131Bridge()+0x82>
 800beb4:	2300      	movs	r3, #0
 800beb6:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800beba:	6828      	ldr	r0, [r5, #0]
 800bebc:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800bec0:	f007 fb70 	bl	80135a4 <Network::Begin(unsigned short)>
 800bec4:	4b08      	ldr	r3, [pc, #32]	; (800bee8 <E131Bridge::E131Bridge()+0xd0>)
 800bec6:	4621      	mov	r1, r4
 800bec8:	f841 0b24 	str.w	r0, [r1], #36
 800becc:	6818      	ldr	r0, [r3, #0]
 800bece:	f009 ff83 	bl	8015dd8 <Hardware::GetUuid(unsigned char*)>
 800bed2:	4620      	mov	r0, r4
 800bed4:	b013      	add	sp, #76	; 0x4c
 800bed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bed8:	200006cc 	andcs	r0, r0, ip, asr #13
 800bedc:	2000f9f0 	strdcs	pc, [r0], -r0
 800bee0:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}
 800bee4:	08019e22 	stmdaeq	r1, {r1, r5, r9, sl, fp, ip, pc}
 800bee8:	2000fda4 	andcs	pc, r0, r4, lsr #27

0800beec <E131Bridge::Start()>:
 800beec:	6943      	ldr	r3, [r0, #20]
 800beee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bef0:	4604      	mov	r4, r0
 800bef2:	b363      	cbz	r3, 800bf4e <E131Bridge::Start()+0x62>
 800bef4:	6983      	ldr	r3, [r0, #24]
 800bef6:	b9cb      	cbnz	r3, 800bf2c <E131Bridge::Start()+0x40>
 800bef8:	a901      	add	r1, sp, #4
 800befa:	4819      	ldr	r0, [pc, #100]	; (800bf60 <E131Bridge::Start()+0x74>)
 800befc:	f00a f82a 	bl	8015f54 <inet_aton>
 800bf00:	9b01      	ldr	r3, [sp, #4]
 800bf02:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800bf06:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800bf0a:	6223      	str	r3, [r4, #32]
 800bf0c:	f240 207e 	movw	r0, #638	; 0x27e
 800bf10:	f00a f81c 	bl	8015f4c <operator new(unsigned int)>
 800bf14:	61a0      	str	r0, [r4, #24]
 800bf16:	4620      	mov	r0, r4
 800bf18:	f000 fd42 	bl	800c9a0 <E131Bridge::FillDataPacket()>
 800bf1c:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800bf20:	f00a f814 	bl	8015f4c <operator new(unsigned int)>
 800bf24:	61e0      	str	r0, [r4, #28]
 800bf26:	4620      	mov	r0, r4
 800bf28:	f000 fc92 	bl	800c850 <E131Bridge::FillDiscoveryPacket()>
 800bf2c:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800bf30:	2500      	movs	r5, #0
 800bf32:	361e      	adds	r6, #30
 800bf34:	270c      	movs	r7, #12
 800bf36:	fb07 f305 	mul.w	r3, r7, r5
 800bf3a:	5cf3      	ldrb	r3, [r6, r3]
 800bf3c:	b123      	cbz	r3, 800bf48 <E131Bridge::Start()+0x5c>
 800bf3e:	6960      	ldr	r0, [r4, #20]
 800bf40:	6803      	ldr	r3, [r0, #0]
 800bf42:	4629      	mov	r1, r5
 800bf44:	689b      	ldr	r3, [r3, #8]
 800bf46:	4798      	blx	r3
 800bf48:	3501      	adds	r5, #1
 800bf4a:	2d42      	cmp	r5, #66	; 0x42
 800bf4c:	d1f3      	bne.n	800bf36 <E131Bridge::Start()+0x4a>
 800bf4e:	4b05      	ldr	r3, [pc, #20]	; (800bf64 <E131Bridge::Start()+0x78>)
 800bf50:	6818      	ldr	r0, [r3, #0]
 800bf52:	2102      	movs	r1, #2
 800bf54:	b003      	add	sp, #12
 800bf56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bf5a:	f009 be25 	b.w	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800bf5e:	bf00      	nop
 800bf60:	08019e16 	stmdaeq	r1, {r1, r2, r4, r9, sl, fp, ip, pc}
 800bf64:	2000fda0 	andcs	pc, r0, r0, lsr #27

0800bf68 <E131Bridge::Stop()>:
 800bf68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf6c:	2301      	movs	r3, #1
 800bf6e:	2500      	movs	r5, #0
 800bf70:	4604      	mov	r4, r0
 800bf72:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800bf76:	f240 6804 	movw	r8, #1540	; 0x604
 800bf7a:	462e      	mov	r6, r5
 800bf7c:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800bf80:	6860      	ldr	r0, [r4, #4]
 800bf82:	b118      	cbz	r0, 800bf8c <E131Bridge::Stop()+0x24>
 800bf84:	6803      	ldr	r3, [r0, #0]
 800bf86:	4629      	mov	r1, r5
 800bf88:	68db      	ldr	r3, [r3, #12]
 800bf8a:	4798      	blx	r3
 800bf8c:	f7ff fec6 	bl	800bd1c <lightset::Data::Get()>
 800bf90:	2344      	movs	r3, #68	; 0x44
 800bf92:	fb08 0005 	mla	r0, r8, r5, r0
 800bf96:	436b      	muls	r3, r5
 800bf98:	3501      	adds	r5, #1
 800bf9a:	2d42      	cmp	r5, #66	; 0x42
 800bf9c:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800bfa0:	54fe      	strb	r6, [r7, r3]
 800bfa2:	d1ed      	bne.n	800bf80 <E131Bridge::Stop()+0x18>
 800bfa4:	6963      	ldr	r3, [r4, #20]
 800bfa6:	b183      	cbz	r3, 800bfca <E131Bridge::Stop()+0x62>
 800bfa8:	f504 56b4 	add.w	r6, r4, #5760	; 0x1680
 800bfac:	2500      	movs	r5, #0
 800bfae:	361e      	adds	r6, #30
 800bfb0:	270c      	movs	r7, #12
 800bfb2:	fb07 f305 	mul.w	r3, r7, r5
 800bfb6:	5cf3      	ldrb	r3, [r6, r3]
 800bfb8:	b123      	cbz	r3, 800bfc4 <E131Bridge::Stop()+0x5c>
 800bfba:	6960      	ldr	r0, [r4, #20]
 800bfbc:	6803      	ldr	r3, [r0, #0]
 800bfbe:	4629      	mov	r1, r5
 800bfc0:	68db      	ldr	r3, [r3, #12]
 800bfc2:	4798      	blx	r3
 800bfc4:	3501      	adds	r5, #1
 800bfc6:	2d42      	cmp	r5, #66	; 0x42
 800bfc8:	d1f3      	bne.n	800bfb2 <E131Bridge::Stop()+0x4a>
 800bfca:	4b03      	ldr	r3, [pc, #12]	; (800bfd8 <E131Bridge::Stop()+0x70>)
 800bfcc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bfd0:	6818      	ldr	r0, [r3, #0]
 800bfd2:	2100      	movs	r1, #0
 800bfd4:	f009 bde8 	b.w	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800bfd8:	2000fda0 	andcs	pc, r0, r0, lsr #27

0800bfdc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800bfdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfde:	2300      	movs	r3, #0
 800bfe0:	f200 5414 	addw	r4, r0, #1300	; 0x514
 800bfe4:	2544      	movs	r5, #68	; 0x44
 800bfe6:	4299      	cmp	r1, r3
 800bfe8:	d004      	beq.n	800bff4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x18>
 800bfea:	fb05 f603 	mul.w	r6, r5, r3
 800bfee:	5ba6      	ldrh	r6, [r4, r6]
 800bff0:	4296      	cmp	r6, r2
 800bff2:	d011      	beq.n	800c018 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>
 800bff4:	3301      	adds	r3, #1
 800bff6:	2b42      	cmp	r3, #66	; 0x42
 800bff8:	d1f5      	bne.n	800bfe6 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xa>
 800bffa:	4b08      	ldr	r3, [pc, #32]	; (800c01c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x40>)
 800bffc:	6801      	ldr	r1, [r0, #0]
 800bffe:	681c      	ldr	r4, [r3, #0]
 800c000:	9101      	str	r1, [sp, #4]
 800c002:	4610      	mov	r0, r2
 800c004:	f7ff fe52 	bl	800bcac <e131::universe_to_multicast_ip(unsigned short)>
 800c008:	9901      	ldr	r1, [sp, #4]
 800c00a:	4602      	mov	r2, r0
 800c00c:	4620      	mov	r0, r4
 800c00e:	b002      	add	sp, #8
 800c010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c014:	f007 bada 	b.w	80135cc <Network::LeaveGroup(int, unsigned int)>
 800c018:	b002      	add	sp, #8
 800c01a:	bd70      	pop	{r4, r5, r6, pc}
 800c01c:	2000f9f0 	strdcs	pc, [r0], -r0

0800c020 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800c020:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c022:	4604      	mov	r4, r0
 800c024:	461d      	mov	r5, r3
 800c026:	b1d1      	cbz	r1, 800c05e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3e>
 800c028:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800c02c:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800c030:	b12a      	cbz	r2, 800c03e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800c032:	42aa      	cmp	r2, r5
 800c034:	d019      	beq.n	800c06a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800c036:	2142      	movs	r1, #66	; 0x42
 800c038:	4620      	mov	r0, r4
 800c03a:	f7ff ffcf 	bl	800bfdc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c03e:	4b0c      	ldr	r3, [pc, #48]	; (800c070 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x50>)
 800c040:	6821      	ldr	r1, [r4, #0]
 800c042:	8035      	strh	r5, [r6, #0]
 800c044:	4628      	mov	r0, r5
 800c046:	681c      	ldr	r4, [r3, #0]
 800c048:	9101      	str	r1, [sp, #4]
 800c04a:	f7ff fe2f 	bl	800bcac <e131::universe_to_multicast_ip(unsigned short)>
 800c04e:	9901      	ldr	r1, [sp, #4]
 800c050:	4602      	mov	r2, r0
 800c052:	4620      	mov	r0, r4
 800c054:	b002      	add	sp, #8
 800c056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c05a:	f007 bab4 	b.w	80135c6 <Network::JoinGroup(int, unsigned int)>
 800c05e:	b122      	cbz	r2, 800c06a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4a>
 800c060:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800c064:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800c068:	e7e2      	b.n	800c030 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800c06a:	b002      	add	sp, #8
 800c06c:	bd70      	pop	{r4, r5, r6, pc}
 800c06e:	bf00      	nop
 800c070:	2000f9f0 	strdcs	pc, [r0], -r0

0800c074 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800c074:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c076:	4604      	mov	r4, r0
 800c078:	460d      	mov	r5, r1
 800c07a:	461e      	mov	r6, r3
 800c07c:	bb1a      	cbnz	r2, 800c0c6 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x52>
 800c07e:	2941      	cmp	r1, #65	; 0x41
 800c080:	d846      	bhi.n	800c110 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800c082:	230c      	movs	r3, #12
 800c084:	fb03 0301 	mla	r3, r3, r1, r0
 800c088:	f241 619e 	movw	r1, #5790	; 0x169e
 800c08c:	5c5a      	ldrb	r2, [r3, r1]
 800c08e:	b132      	cbz	r2, 800c09e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x2a>
 800c090:	f241 629c 	movw	r2, #5788	; 0x169c
 800c094:	5a9b      	ldrh	r3, [r3, r2]
 800c096:	42b3      	cmp	r3, r6
 800c098:	d108      	bne.n	800c0ac <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800c09a:	b003      	add	sp, #12
 800c09c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c09e:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c0a2:	3201      	adds	r2, #1
 800c0a4:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800c0a8:	2201      	movs	r2, #1
 800c0aa:	545a      	strb	r2, [r3, r1]
 800c0ac:	230c      	movs	r3, #12
 800c0ae:	fb03 4405 	mla	r4, r3, r5, r4
 800c0b2:	f241 639c 	movw	r3, #5788	; 0x169c
 800c0b6:	4630      	mov	r0, r6
 800c0b8:	52e6      	strh	r6, [r4, r3]
 800c0ba:	f7ff fdf7 	bl	800bcac <e131::universe_to_multicast_ip(unsigned short)>
 800c0be:	f504 54b5 	add.w	r4, r4, #5792	; 0x16a0
 800c0c2:	6020      	str	r0, [r4, #0]
 800c0c4:	e7e9      	b.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c0c6:	2a02      	cmp	r2, #2
 800c0c8:	d122      	bne.n	800c110 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9c>
 800c0ca:	2941      	cmp	r1, #65	; 0x41
 800c0cc:	d8e5      	bhi.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c0ce:	2344      	movs	r3, #68	; 0x44
 800c0d0:	fb03 0301 	mla	r3, r3, r1, r0
 800c0d4:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800c0d8:	b152      	cbz	r2, 800c0f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 800c0da:	2200      	movs	r2, #0
 800c0dc:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800c0e0:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800c0e4:	3b01      	subs	r3, #1
 800c0e6:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800c0ea:	4632      	mov	r2, r6
 800c0ec:	f7ff ff76 	bl	800bfdc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c0f0:	230c      	movs	r3, #12
 800c0f2:	fb03 4505 	mla	r5, r3, r5, r4
 800c0f6:	f241 639e 	movw	r3, #5790	; 0x169e
 800c0fa:	5cea      	ldrb	r2, [r5, r3]
 800c0fc:	2a00      	cmp	r2, #0
 800c0fe:	d0cc      	beq.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c100:	2200      	movs	r2, #0
 800c102:	54ea      	strb	r2, [r5, r3]
 800c104:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800c108:	3b01      	subs	r3, #1
 800c10a:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800c10e:	e7c4      	b.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c110:	2344      	movs	r3, #68	; 0x44
 800c112:	fb03 4305 	mla	r3, r3, r5, r4
 800c116:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800c11a:	b1d2      	cbz	r2, 800c152 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xde>
 800c11c:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800c120:	42b3      	cmp	r3, r6
 800c122:	d0ba      	beq.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c124:	4632      	mov	r2, r6
 800c126:	4629      	mov	r1, r5
 800c128:	4620      	mov	r0, r4
 800c12a:	f7ff ff57 	bl	800bfdc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c12e:	4b0d      	ldr	r3, [pc, #52]	; (800c164 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xf0>)
 800c130:	6821      	ldr	r1, [r4, #0]
 800c132:	681f      	ldr	r7, [r3, #0]
 800c134:	9101      	str	r1, [sp, #4]
 800c136:	4630      	mov	r0, r6
 800c138:	f7ff fdb8 	bl	800bcac <e131::universe_to_multicast_ip(unsigned short)>
 800c13c:	9901      	ldr	r1, [sp, #4]
 800c13e:	4602      	mov	r2, r0
 800c140:	4638      	mov	r0, r7
 800c142:	f007 fa40 	bl	80135c6 <Network::JoinGroup(int, unsigned int)>
 800c146:	2344      	movs	r3, #68	; 0x44
 800c148:	fb03 4305 	mla	r3, r3, r5, r4
 800c14c:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800c150:	e7a3      	b.n	800c09a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x26>
 800c152:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800c156:	3201      	adds	r2, #1
 800c158:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800c15c:	2201      	movs	r2, #1
 800c15e:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800c162:	e7e4      	b.n	800c12e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xba>
 800c164:	2000f9f0 	strdcs	pc, [r0], -r0

0800c168 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800c168:	b963      	cbnz	r3, 800c184 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x1c>
 800c16a:	2941      	cmp	r1, #65	; 0x41
 800c16c:	d813      	bhi.n	800c196 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2e>
 800c16e:	230c      	movs	r3, #12
 800c170:	fb03 0101 	mla	r1, r3, r1, r0
 800c174:	f241 639c 	movw	r3, #5788	; 0x169c
 800c178:	5acb      	ldrh	r3, [r1, r3]
 800c17a:	8013      	strh	r3, [r2, #0]
 800c17c:	f241 639e 	movw	r3, #5790	; 0x169e
 800c180:	5cc8      	ldrb	r0, [r1, r3]
 800c182:	4770      	bx	lr
 800c184:	2344      	movs	r3, #68	; 0x44
 800c186:	fb03 0101 	mla	r1, r3, r1, r0
 800c18a:	f8b1 3514 	ldrh.w	r3, [r1, #1300]	; 0x514
 800c18e:	f891 0516 	ldrb.w	r0, [r1, #1302]	; 0x516
 800c192:	8013      	strh	r3, [r2, #0]
 800c194:	4770      	bx	lr
 800c196:	4618      	mov	r0, r3
 800c198:	4770      	bx	lr

0800c19a <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800c19a:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800c19e:	b923      	cbnz	r3, 800c1aa <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800c1a0:	2301      	movs	r3, #1
 800c1a2:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800c1a6:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c1aa:	2344      	movs	r3, #68	; 0x44
 800c1ac:	fb03 0101 	mla	r1, r3, r1, r0
 800c1b0:	2301      	movs	r3, #1
 800c1b2:	f881 3555 	strb.w	r3, [r1, #1365]	; 0x555
 800c1b6:	4770      	bx	lr

0800c1b8 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800c1b8:	4602      	mov	r2, r0
 800c1ba:	2044      	movs	r0, #68	; 0x44
 800c1bc:	4348      	muls	r0, r1
 800c1be:	b570      	push	{r4, r5, r6, lr}
 800c1c0:	1815      	adds	r5, r2, r0
 800c1c2:	68d3      	ldr	r3, [r2, #12]
 800c1c4:	460c      	mov	r4, r1
 800c1c6:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800c1ca:	1a5b      	subs	r3, r3, r1
 800c1cc:	f242 7110 	movw	r1, #10000	; 0x2710
 800c1d0:	428b      	cmp	r3, r1
 800c1d2:	d90a      	bls.n	800c1ea <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800c1d4:	2600      	movs	r6, #0
 800c1d6:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800c1da:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800c1de:	2110      	movs	r1, #16
 800c1e0:	4410      	add	r0, r2
 800c1e2:	f7ff fd89 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c1e6:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c1ea:	2344      	movs	r3, #68	; 0x44
 800c1ec:	435c      	muls	r4, r3
 800c1ee:	1915      	adds	r5, r2, r4
 800c1f0:	68d3      	ldr	r3, [r2, #12]
 800c1f2:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800c1f6:	1a5b      	subs	r3, r3, r1
 800c1f8:	f242 7110 	movw	r1, #10000	; 0x2710
 800c1fc:	428b      	cmp	r3, r1
 800c1fe:	d90a      	bls.n	800c216 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800c200:	2600      	movs	r6, #0
 800c202:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800c206:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800c20a:	2110      	movs	r1, #16
 800c20c:	1910      	adds	r0, r2, r4
 800c20e:	f7ff fd73 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c212:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800c216:	f502 508c 	add.w	r0, r2, #4480	; 0x1180
 800c21a:	4611      	mov	r1, r2
 800c21c:	3008      	adds	r0, #8
 800c21e:	2300      	movs	r3, #0
 800c220:	f891 4555 	ldrb.w	r4, [r1, #1365]	; 0x555
 800c224:	3144      	adds	r1, #68	; 0x44
 800c226:	4281      	cmp	r1, r0
 800c228:	ea43 0304 	orr.w	r3, r3, r4
 800c22c:	d1f8      	bne.n	800c220 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x68>
 800c22e:	b923      	cbnz	r3, 800c23a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x82>
 800c230:	2101      	movs	r1, #1
 800c232:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800c236:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800c23a:	bd70      	pop	{r4, r5, r6, pc}

0800c23c <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800c23c:	2244      	movs	r2, #68	; 0x44
 800c23e:	fb02 0101 	mla	r1, r2, r1, r0
 800c242:	68c3      	ldr	r3, [r0, #12]
 800c244:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800c248:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800c24c:	b510      	push	{r4, lr}
 800c24e:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800c252:	1a9a      	subs	r2, r3, r2
 800c254:	b184      	cbz	r4, 800c278 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800c256:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800c25a:	1a5b      	subs	r3, r3, r1
 800c25c:	b128      	cbz	r0, 800c26a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800c25e:	f242 700f 	movw	r0, #9999	; 0x270f
 800c262:	4283      	cmp	r3, r0
 800c264:	d90d      	bls.n	800c282 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800c266:	4282      	cmp	r2, r0
 800c268:	e002      	b.n	800c270 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800c26a:	f242 7010 	movw	r0, #10000	; 0x2710
 800c26e:	4283      	cmp	r3, r0
 800c270:	bf94      	ite	ls
 800c272:	2000      	movls	r0, #0
 800c274:	2001      	movhi	r0, #1
 800c276:	bd10      	pop	{r4, pc}
 800c278:	2800      	cmp	r0, #0
 800c27a:	d0fc      	beq.n	800c276 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800c27c:	f242 7010 	movw	r0, #10000	; 0x2710
 800c280:	e7f1      	b.n	800c266 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800c282:	2000      	movs	r0, #0
 800c284:	e7f7      	b.n	800c276 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800c286 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800c286:	684a      	ldr	r2, [r1, #4]
 800c288:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800c28a:	429a      	cmp	r2, r3
 800c28c:	b510      	push	{r4, lr}
 800c28e:	d10d      	bne.n	800c2ac <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800c290:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800c294:	3107      	adds	r1, #7
 800c296:	30a1      	adds	r0, #161	; 0xa1
 800c298:	4283      	cmp	r3, r0
 800c29a:	d101      	bne.n	800c2a0 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800c29c:	2001      	movs	r0, #1
 800c29e:	bd10      	pop	{r4, pc}
 800c2a0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c2a4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c2a8:	4294      	cmp	r4, r2
 800c2aa:	d0f5      	beq.n	800c298 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800c2ac:	2000      	movs	r0, #0
 800c2ae:	e7f6      	b.n	800c29e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>

0800c2b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800c2b0:	2301      	movs	r3, #1
 800c2b2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2b6:	4604      	mov	r4, r0
 800c2b8:	4690      	mov	r8, r2
 800c2ba:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c2be:	460f      	mov	r7, r1
 800c2c0:	2900      	cmp	r1, #0
 800c2c2:	d044      	beq.n	800c34e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c2c4:	2a00      	cmp	r2, #0
 800c2c6:	d042      	beq.n	800c34e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800c2c8:	2600      	movs	r6, #0
 800c2ca:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800c2ce:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800c2d2:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c2d6:	4632      	mov	r2, r6
 800c2d8:	4637      	mov	r7, r6
 800c2da:	f240 6904 	movw	r9, #1540	; 0x604
 800c2de:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800c2e2:	f1b8 0f00 	cmp.w	r8, #0
 800c2e6:	d018      	beq.n	800c31a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800c2e8:	2110      	movs	r1, #16
 800c2ea:	4628      	mov	r0, r5
 800c2ec:	f845 7c04 	str.w	r7, [r5, #-4]
 800c2f0:	f7ff fd02 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c2f4:	2110      	movs	r1, #16
 800c2f6:	f105 001c 	add.w	r0, r5, #28
 800c2fa:	61af      	str	r7, [r5, #24]
 800c2fc:	f7ff fcfc 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c300:	f7ff fd0c 	bl	800bd1c <lightset::Data::Get()>
 800c304:	fb09 0006 	mla	r0, r9, r6, r0
 800c308:	4642      	mov	r2, r8
 800c30a:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800c30e:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800c312:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800c316:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800c31a:	3601      	adds	r6, #1
 800c31c:	2e42      	cmp	r6, #66	; 0x42
 800c31e:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c322:	d1dc      	bne.n	800c2de <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800c324:	b12a      	cbz	r2, 800c332 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c326:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800c32a:	2901      	cmp	r1, #1
 800c32c:	d04a      	beq.n	800c3c4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800c32e:	2902      	cmp	r1, #2
 800c330:	d04d      	beq.n	800c3ce <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800c332:	4b29      	ldr	r3, [pc, #164]	; (800c3d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800c334:	2102      	movs	r1, #2
 800c336:	6818      	ldr	r0, [r3, #0]
 800c338:	f009 fc36 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800c33c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c340:	f023 0302 	bic.w	r3, r3, #2
 800c344:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c348:	b003      	add	sp, #12
 800c34a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c34e:	2600      	movs	r6, #0
 800c350:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800c354:	4632      	mov	r2, r6
 800c356:	f240 6b04 	movw	fp, #1540	; 0x604
 800c35a:	46b1      	mov	r9, r6
 800c35c:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800c360:	f1ba 0f00 	cmp.w	sl, #0
 800c364:	d028      	beq.n	800c3b8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c366:	b15f      	cbz	r7, 800c380 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c368:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800c36c:	b143      	cbz	r3, 800c380 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800c36e:	f845 9c20 	str.w	r9, [r5, #-32]
 800c372:	2110      	movs	r1, #16
 800c374:	f1a5 001c 	sub.w	r0, r5, #28
 800c378:	f7ff fcbe 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c37c:	f885 9019 	strb.w	r9, [r5, #25]
 800c380:	f1b8 0f00 	cmp.w	r8, #0
 800c384:	d00a      	beq.n	800c39c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c386:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c38a:	b13b      	cbz	r3, 800c39c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800c38c:	f845 9c04 	str.w	r9, [r5, #-4]
 800c390:	2110      	movs	r1, #16
 800c392:	4628      	mov	r0, r5
 800c394:	f7ff fcb0 	bl	800bcf8 <memset.constprop.0.isra.0>
 800c398:	f885 9019 	strb.w	r9, [r5, #25]
 800c39c:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c3a0:	b953      	cbnz	r3, 800c3b8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800c3a2:	9301      	str	r3, [sp, #4]
 800c3a4:	f7ff fcba 	bl	800bd1c <lightset::Data::Get()>
 800c3a8:	fb0b 0006 	mla	r0, fp, r6, r0
 800c3ac:	9b01      	ldr	r3, [sp, #4]
 800c3ae:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800c3b2:	4652      	mov	r2, sl
 800c3b4:	762b      	strb	r3, [r5, #24]
 800c3b6:	76ab      	strb	r3, [r5, #26]
 800c3b8:	3601      	adds	r6, #1
 800c3ba:	2e42      	cmp	r6, #66	; 0x42
 800c3bc:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c3c0:	d1cc      	bne.n	800c35c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800c3c2:	e7af      	b.n	800c324 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800c3c4:	6860      	ldr	r0, [r4, #4]
 800c3c6:	6803      	ldr	r3, [r0, #0]
 800c3c8:	695b      	ldr	r3, [r3, #20]
 800c3ca:	4798      	blx	r3
 800c3cc:	e7b1      	b.n	800c332 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c3ce:	6860      	ldr	r0, [r4, #4]
 800c3d0:	6803      	ldr	r3, [r0, #0]
 800c3d2:	699b      	ldr	r3, [r3, #24]
 800c3d4:	4798      	blx	r3
 800c3d6:	e7ac      	b.n	800c332 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800c3d8:	2000fda0 	andcs	pc, r0, r0, lsr #27

0800c3dc <E131Bridge::HandleDmx()>:
 800c3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3e0:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800c3e4:	b085      	sub	sp, #20
 800c3e6:	ba7f      	rev16	r7, r7
 800c3e8:	b2bf      	uxth	r7, r7
 800c3ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c3ee:	4604      	mov	r4, r0
 800c3f0:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800c3f4:	3f01      	subs	r7, #1
 800c3f6:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800c3fa:	9301      	str	r3, [sp, #4]
 800c3fc:	2600      	movs	r6, #0
 800c3fe:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800c402:	b353      	cbz	r3, 800c45a <E131Bridge::HandleDmx()+0x7e>
 800c404:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800c408:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800c40c:	ba5b      	rev16	r3, r3
 800c40e:	b29b      	uxth	r3, r3
 800c410:	429a      	cmp	r2, r3
 800c412:	d122      	bne.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c414:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800c418:	9302      	str	r3, [sp, #8]
 800c41a:	f1a5 0108 	sub.w	r1, r5, #8
 800c41e:	4620      	mov	r0, r4
 800c420:	f7ff ff31 	bl	800c286 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c424:	f105 0114 	add.w	r1, r5, #20
 800c428:	4682      	mov	sl, r0
 800c42a:	4620      	mov	r0, r4
 800c42c:	f7ff ff2b 	bl	800c286 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800c430:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800c434:	4680      	mov	r8, r0
 800c436:	f1ba 0f00 	cmp.w	sl, #0
 800c43a:	d01a      	beq.n	800c472 <E131Bridge::HandleDmx()+0x96>
 800c43c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c440:	7c2a      	ldrb	r2, [r5, #16]
 800c442:	742b      	strb	r3, [r5, #16]
 800c444:	3313      	adds	r3, #19
 800c446:	1a9b      	subs	r3, r3, r2
 800c448:	b2db      	uxtb	r3, r3
 800c44a:	2b13      	cmp	r3, #19
 800c44c:	d905      	bls.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c44e:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800c452:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c456:	2a00      	cmp	r2, #0
 800c458:	da14      	bge.n	800c484 <E131Bridge::HandleDmx()+0xa8>
 800c45a:	9b01      	ldr	r3, [sp, #4]
 800c45c:	3601      	adds	r6, #1
 800c45e:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800c462:	2e42      	cmp	r6, #66	; 0x42
 800c464:	9301      	str	r3, [sp, #4]
 800c466:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c46a:	d1c8      	bne.n	800c3fe <E131Bridge::HandleDmx()+0x22>
 800c46c:	b005      	add	sp, #20
 800c46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c472:	2800      	cmp	r0, #0
 800c474:	d0eb      	beq.n	800c44e <E131Bridge::HandleDmx()+0x72>
 800c476:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c47a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800c47e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c482:	e7df      	b.n	800c444 <E131Bridge::HandleDmx()+0x68>
 800c484:	065a      	lsls	r2, r3, #25
 800c486:	d50b      	bpl.n	800c4a0 <E131Bridge::HandleDmx()+0xc4>
 800c488:	f1ba 0f00 	cmp.w	sl, #0
 800c48c:	d102      	bne.n	800c494 <E131Bridge::HandleDmx()+0xb8>
 800c48e:	f1b8 0f00 	cmp.w	r8, #0
 800c492:	d0e2      	beq.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c494:	4642      	mov	r2, r8
 800c496:	4651      	mov	r1, sl
 800c498:	4620      	mov	r0, r4
 800c49a:	f7ff ff09 	bl	800c2b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c49e:	e7dc      	b.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c4a0:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800c4a4:	b133      	cbz	r3, 800c4b4 <E131Bridge::HandleDmx()+0xd8>
 800c4a6:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800c4aa:	b91b      	cbnz	r3, 800c4b4 <E131Bridge::HandleDmx()+0xd8>
 800c4ac:	4631      	mov	r1, r6
 800c4ae:	4620      	mov	r0, r4
 800c4b0:	f7ff fe82 	bl	800c1b8 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800c4b4:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800c4b8:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800c4bc:	4293      	cmp	r3, r2
 800c4be:	d259      	bcs.n	800c574 <E131Bridge::HandleDmx()+0x198>
 800c4c0:	4631      	mov	r1, r6
 800c4c2:	4620      	mov	r0, r4
 800c4c4:	9303      	str	r3, [sp, #12]
 800c4c6:	f7ff feb9 	bl	800c23c <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800c4ca:	2800      	cmp	r0, #0
 800c4cc:	d0c5      	beq.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c4ce:	9b03      	ldr	r3, [sp, #12]
 800c4d0:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800c4d4:	9b02      	ldr	r3, [sp, #8]
 800c4d6:	2b00      	cmp	r3, #0
 800c4d8:	d154      	bne.n	800c584 <E131Bridge::HandleDmx()+0x1a8>
 800c4da:	f1bb 0f00 	cmp.w	fp, #0
 800c4de:	d15c      	bne.n	800c59a <E131Bridge::HandleDmx()+0x1be>
 800c4e0:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c4e2:	f845 3c04 	str.w	r3, [r5, #-4]
 800c4e6:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c4ea:	742b      	strb	r3, [r5, #16]
 800c4ec:	2210      	movs	r2, #16
 800c4ee:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c4f2:	4628      	mov	r0, r5
 800c4f4:	f7ff fc08 	bl	800bd08 <memcpy.isra.0>
 800c4f8:	68e3      	ldr	r3, [r4, #12]
 800c4fa:	f845 3c08 	str.w	r3, [r5, #-8]
 800c4fe:	463a      	mov	r2, r7
 800c500:	4649      	mov	r1, r9
 800c502:	4630      	mov	r0, r6
 800c504:	f7ff fc16 	bl	800bd34 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800c508:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800c50c:	069b      	lsls	r3, r3, #26
 800c50e:	f100 80aa 	bmi.w	800c666 <E131Bridge::HandleDmx()+0x28a>
 800c512:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800c516:	b29a      	uxth	r2, r3
 800c518:	2a00      	cmp	r2, #0
 800c51a:	f000 80a8 	beq.w	800c66e <E131Bridge::HandleDmx()+0x292>
 800c51e:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800c522:	2a00      	cmp	r2, #0
 800c524:	f040 80a3 	bne.w	800c66e <E131Bridge::HandleDmx()+0x292>
 800c528:	ba5b      	rev16	r3, r3
 800c52a:	b29b      	uxth	r3, r3
 800c52c:	f1ba 0f00 	cmp.w	sl, #0
 800c530:	f040 8096 	bne.w	800c660 <E131Bridge::HandleDmx()+0x284>
 800c534:	f1b8 0f00 	cmp.w	r8, #0
 800c538:	f040 8092 	bne.w	800c660 <E131Bridge::HandleDmx()+0x284>
 800c53c:	69aa      	ldr	r2, [r5, #24]
 800c53e:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800c542:	3a00      	subs	r2, #0
 800c544:	bf18      	it	ne
 800c546:	2201      	movne	r2, #1
 800c548:	3900      	subs	r1, #0
 800c54a:	bf18      	it	ne
 800c54c:	2101      	movne	r1, #1
 800c54e:	4620      	mov	r0, r4
 800c550:	f7ff fd66 	bl	800c020 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800c554:	f240 1301 	movw	r3, #257	; 0x101
 800c558:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800c55c:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800c560:	2b00      	cmp	r3, #0
 800c562:	f040 8089 	bne.w	800c678 <E131Bridge::HandleDmx()+0x29c>
 800c566:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c56a:	f043 0302 	orr.w	r3, r3, #2
 800c56e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c572:	e772      	b.n	800c45a <E131Bridge::HandleDmx()+0x7e>
 800c574:	d9ae      	bls.n	800c4d4 <E131Bridge::HandleDmx()+0xf8>
 800c576:	2200      	movs	r2, #0
 800c578:	f845 2c04 	str.w	r2, [r5, #-4]
 800c57c:	61aa      	str	r2, [r5, #24]
 800c57e:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800c582:	e7a5      	b.n	800c4d0 <E131Bridge::HandleDmx()+0xf4>
 800c584:	f1ba 0f00 	cmp.w	sl, #0
 800c588:	f000 809a 	beq.w	800c6c0 <E131Bridge::HandleDmx()+0x2e4>
 800c58c:	f1bb 0f00 	cmp.w	fp, #0
 800c590:	d159      	bne.n	800c646 <E131Bridge::HandleDmx()+0x26a>
 800c592:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c596:	742b      	strb	r3, [r5, #16]
 800c598:	e7ae      	b.n	800c4f8 <E131Bridge::HandleDmx()+0x11c>
 800c59a:	f1b8 0f00 	cmp.w	r8, #0
 800c59e:	d038      	beq.n	800c612 <E131Bridge::HandleDmx()+0x236>
 800c5a0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c5a4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c5a8:	68e3      	ldr	r3, [r4, #12]
 800c5aa:	616b      	str	r3, [r5, #20]
 800c5ac:	f7ff fbb6 	bl	800bd1c <lightset::Data::Get()>
 800c5b0:	9b01      	ldr	r3, [sp, #4]
 800c5b2:	4683      	mov	fp, r0
 800c5b4:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800c5b8:	463a      	mov	r2, r7
 800c5ba:	4649      	mov	r1, r9
 800c5bc:	4458      	add	r0, fp
 800c5be:	f7ff fba3 	bl	800bd08 <memcpy.isra.0>
 800c5c2:	f240 6304 	movw	r3, #1540	; 0x604
 800c5c6:	fb03 b306 	mla	r3, r3, r6, fp
 800c5ca:	463a      	mov	r2, r7
 800c5cc:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800c5d0:	9b01      	ldr	r3, [sp, #4]
 800c5d2:	4649      	mov	r1, r9
 800c5d4:	eb0b 0003 	add.w	r0, fp, r3
 800c5d8:	f7ff fb96 	bl	800bd08 <memcpy.isra.0>
 800c5dc:	e794      	b.n	800c508 <E131Bridge::HandleDmx()+0x12c>
 800c5de:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c5e0:	61ab      	str	r3, [r5, #24]
 800c5e2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c5e6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c5ea:	2210      	movs	r2, #16
 800c5ec:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c5f0:	f105 001c 	add.w	r0, r5, #28
 800c5f4:	f7ff fb88 	bl	800bd08 <memcpy.isra.0>
 800c5f8:	68e3      	ldr	r3, [r4, #12]
 800c5fa:	616b      	str	r3, [r5, #20]
 800c5fc:	4631      	mov	r1, r6
 800c5fe:	4620      	mov	r0, r4
 800c600:	f7ff fdcb 	bl	800c19a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c604:	463a      	mov	r2, r7
 800c606:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c608:	4649      	mov	r1, r9
 800c60a:	4630      	mov	r0, r6
 800c60c:	f7ff fbd9 	bl	800bdc2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c610:	e77a      	b.n	800c508 <E131Bridge::HandleDmx()+0x12c>
 800c612:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800c614:	f845 3c04 	str.w	r3, [r5, #-4]
 800c618:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c61c:	742b      	strb	r3, [r5, #16]
 800c61e:	2210      	movs	r2, #16
 800c620:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800c624:	4628      	mov	r0, r5
 800c626:	f7ff fb6f 	bl	800bd08 <memcpy.isra.0>
 800c62a:	68e3      	ldr	r3, [r4, #12]
 800c62c:	f845 3c08 	str.w	r3, [r5, #-8]
 800c630:	4631      	mov	r1, r6
 800c632:	4620      	mov	r0, r4
 800c634:	f7ff fdb1 	bl	800c19a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800c638:	463a      	mov	r2, r7
 800c63a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800c63c:	4649      	mov	r1, r9
 800c63e:	4630      	mov	r0, r6
 800c640:	f7ff fb96 	bl	800bd70 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800c644:	e760      	b.n	800c508 <E131Bridge::HandleDmx()+0x12c>
 800c646:	f1b8 0f00 	cmp.w	r8, #0
 800c64a:	d103      	bne.n	800c654 <E131Bridge::HandleDmx()+0x278>
 800c64c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c650:	742b      	strb	r3, [r5, #16]
 800c652:	e7ea      	b.n	800c62a <E131Bridge::HandleDmx()+0x24e>
 800c654:	4820      	ldr	r0, [pc, #128]	; (800c6d8 <E131Bridge::HandleDmx()+0x2fc>)
 800c656:	b005      	add	sp, #20
 800c658:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c65c:	f7fd bf2c 	b.w	800a4b8 <printf>
 800c660:	4642      	mov	r2, r8
 800c662:	4651      	mov	r1, sl
 800c664:	e773      	b.n	800c54e <E131Bridge::HandleDmx()+0x172>
 800c666:	f04f 0300 	mov.w	r3, #0
 800c66a:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800c66e:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c672:	2b00      	cmp	r3, #0
 800c674:	f47f af72 	bne.w	800c55c <E131Bridge::HandleDmx()+0x180>
 800c678:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800c67c:	f7ff fb4e 	bl	800bd1c <lightset::Data::Get()>
 800c680:	f8d8 2000 	ldr.w	r2, [r8]
 800c684:	f240 6304 	movw	r3, #1540	; 0x604
 800c688:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800c68c:	9a01      	ldr	r2, [sp, #4]
 800c68e:	fb03 0306 	mla	r3, r3, r6, r0
 800c692:	1882      	adds	r2, r0, r2
 800c694:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800c698:	4631      	mov	r1, r6
 800c69a:	4640      	mov	r0, r8
 800c69c:	47d0      	blx	sl
 800c69e:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800c6a2:	2b00      	cmp	r3, #0
 800c6a4:	f47f af5f 	bne.w	800c566 <E131Bridge::HandleDmx()+0x18a>
 800c6a8:	6860      	ldr	r0, [r4, #4]
 800c6aa:	6803      	ldr	r3, [r0, #0]
 800c6ac:	4631      	mov	r1, r6
 800c6ae:	689b      	ldr	r3, [r3, #8]
 800c6b0:	4798      	blx	r3
 800c6b2:	f04f 0301 	mov.w	r3, #1
 800c6b6:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800c6ba:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800c6be:	e752      	b.n	800c566 <E131Bridge::HandleDmx()+0x18a>
 800c6c0:	f1bb 0f00 	cmp.w	fp, #0
 800c6c4:	d08b      	beq.n	800c5de <E131Bridge::HandleDmx()+0x202>
 800c6c6:	f1b8 0f00 	cmp.w	r8, #0
 800c6ca:	d0c3      	beq.n	800c654 <E131Bridge::HandleDmx()+0x278>
 800c6cc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800c6d0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800c6d4:	e790      	b.n	800c5f8 <E131Bridge::HandleDmx()+0x21c>
 800c6d6:	bf00      	nop
 800c6d8:	08019e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, ip, pc}

0800c6dc <E131Bridge::IsValidRoot()>:
 800c6dc:	b530      	push	{r4, r5, lr}
 800c6de:	4a0d      	ldr	r2, [pc, #52]	; (800c714 <E131Bridge::IsValidRoot()+0x38>)
 800c6e0:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800c6e4:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800c6e8:	4299      	cmp	r1, r3
 800c6ea:	d109      	bne.n	800c700 <E131Bridge::IsValidRoot()+0x24>
 800c6ec:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800c6f0:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800c6f4:	d00c      	beq.n	800c710 <E131Bridge::IsValidRoot()+0x34>
 800c6f6:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800c6fa:	4258      	negs	r0, r3
 800c6fc:	4158      	adcs	r0, r3
 800c6fe:	bd30      	pop	{r4, r5, pc}
 800c700:	f812 4b01 	ldrb.w	r4, [r2], #1
 800c704:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800c708:	42a5      	cmp	r5, r4
 800c70a:	d0ed      	beq.n	800c6e8 <E131Bridge::IsValidRoot()+0xc>
 800c70c:	2000      	movs	r0, #0
 800c70e:	e7f6      	b.n	800c6fe <E131Bridge::IsValidRoot()+0x22>
 800c710:	2001      	movs	r0, #1
 800c712:	e7f4      	b.n	800c6fe <E131Bridge::IsValidRoot()+0x22>
 800c714:	08019fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}

0800c718 <E131Bridge::IsValidDataPacket()>:
 800c718:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800c71c:	2b02      	cmp	r3, #2
 800c71e:	d10d      	bne.n	800c73c <E131Bridge::IsValidDataPacket()+0x24>
 800c720:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800c724:	2ba1      	cmp	r3, #161	; 0xa1
 800c726:	d109      	bne.n	800c73c <E131Bridge::IsValidDataPacket()+0x24>
 800c728:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800c72c:	b933      	cbnz	r3, 800c73c <E131Bridge::IsValidDataPacket()+0x24>
 800c72e:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800c732:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800c736:	4258      	negs	r0, r3
 800c738:	4158      	adcs	r0, r3
 800c73a:	4770      	bx	lr
 800c73c:	2000      	movs	r0, #0
 800c73e:	4770      	bx	lr

0800c740 <E131Bridge::Run()>:
 800c740:	b530      	push	{r4, r5, lr}
 800c742:	4601      	mov	r1, r0
 800c744:	b085      	sub	sp, #20
 800c746:	4604      	mov	r4, r0
 800c748:	f10d 030e 	add.w	r3, sp, #14
 800c74c:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800c750:	9300      	str	r3, [sp, #0]
 800c752:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800c756:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800c75a:	f006 f9f7 	bl	8012b4c <udp_recv>
 800c75e:	4b3a      	ldr	r3, [pc, #232]	; (800c848 <E131Bridge::Run()+0x108>)
 800c760:	681d      	ldr	r5, [r3, #0]
 800c762:	60e5      	str	r5, [r4, #12]
 800c764:	2800      	cmp	r0, #0
 800c766:	d138      	bne.n	800c7da <E131Bridge::Run()+0x9a>
 800c768:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800c76c:	b16b      	cbz	r3, 800c78a <E131Bridge::Run()+0x4a>
 800c76e:	6923      	ldr	r3, [r4, #16]
 800c770:	1aed      	subs	r5, r5, r3
 800c772:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800c776:	429d      	cmp	r5, r3
 800c778:	d928      	bls.n	800c7cc <E131Bridge::Run()+0x8c>
 800c77a:	6863      	ldr	r3, [r4, #4]
 800c77c:	b9eb      	cbnz	r3, 800c7ba <E131Bridge::Run()+0x7a>
 800c77e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c782:	f023 0302 	bic.w	r3, r3, #2
 800c786:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800c78a:	6963      	ldr	r3, [r4, #20]
 800c78c:	b12b      	cbz	r3, 800c79a <E131Bridge::Run()+0x5a>
 800c78e:	4620      	mov	r0, r4
 800c790:	f000 f94c 	bl	800ca2c <E131Bridge::HandleDmxIn()>
 800c794:	4620      	mov	r0, r4
 800c796:	f000 f8c7 	bl	800c928 <E131Bridge::SendDiscoveryPacket()>
 800c79a:	7a23      	ldrb	r3, [r4, #8]
 800c79c:	b15b      	cbz	r3, 800c7b6 <E131Bridge::Run()+0x76>
 800c79e:	4b2b      	ldr	r3, [pc, #172]	; (800c84c <E131Bridge::Run()+0x10c>)
 800c7a0:	6818      	ldr	r0, [r3, #0]
 800c7a2:	6843      	ldr	r3, [r0, #4]
 800c7a4:	2b04      	cmp	r3, #4
 800c7a6:	d006      	beq.n	800c7b6 <E131Bridge::Run()+0x76>
 800c7a8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800c7ac:	2b00      	cmp	r3, #0
 800c7ae:	d049      	beq.n	800c844 <E131Bridge::Run()+0x104>
 800c7b0:	2103      	movs	r1, #3
 800c7b2:	f009 f9f9 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800c7b6:	b005      	add	sp, #20
 800c7b8:	bd30      	pop	{r4, r5, pc}
 800c7ba:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800c7be:	2b00      	cmp	r3, #0
 800c7c0:	d1dd      	bne.n	800c77e <E131Bridge::Run()+0x3e>
 800c7c2:	2201      	movs	r2, #1
 800c7c4:	4611      	mov	r1, r2
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	f7ff fd72 	bl	800c2b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800c7cc:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800c7d0:	1a9b      	subs	r3, r3, r2
 800c7d2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c7d6:	d3d8      	bcc.n	800c78a <E131Bridge::Run()+0x4a>
 800c7d8:	e7d1      	b.n	800c77e <E131Bridge::Run()+0x3e>
 800c7da:	4620      	mov	r0, r4
 800c7dc:	f7ff ff7e 	bl	800c6dc <E131Bridge::IsValidRoot()>
 800c7e0:	2800      	cmp	r0, #0
 800c7e2:	d0e8      	beq.n	800c7b6 <E131Bridge::Run()+0x76>
 800c7e4:	2300      	movs	r3, #0
 800c7e6:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800c7ea:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800c7ee:	6125      	str	r5, [r4, #16]
 800c7f0:	b15b      	cbz	r3, 800c80a <E131Bridge::Run()+0xca>
 800c7f2:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800c7f6:	b943      	cbnz	r3, 800c80a <E131Bridge::Run()+0xca>
 800c7f8:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800c7fc:	1aad      	subs	r5, r5, r2
 800c7fe:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800c802:	4295      	cmp	r5, r2
 800c804:	bf88      	it	hi
 800c806:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800c80a:	6863      	ldr	r3, [r4, #4]
 800c80c:	2b00      	cmp	r3, #0
 800c80e:	d0bc      	beq.n	800c78a <E131Bridge::Run()+0x4a>
 800c810:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800c814:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800c818:	ba1a      	rev	r2, r3
 800c81a:	d108      	bne.n	800c82e <E131Bridge::Run()+0xee>
 800c81c:	4620      	mov	r0, r4
 800c81e:	f7ff ff7b 	bl	800c718 <E131Bridge::IsValidDataPacket()>
 800c822:	2800      	cmp	r0, #0
 800c824:	d0b1      	beq.n	800c78a <E131Bridge::Run()+0x4a>
 800c826:	4620      	mov	r0, r4
 800c828:	f7ff fdd8 	bl	800c3dc <E131Bridge::HandleDmx()>
 800c82c:	e7ad      	b.n	800c78a <E131Bridge::Run()+0x4a>
 800c82e:	2a08      	cmp	r2, #8
 800c830:	d1ab      	bne.n	800c78a <E131Bridge::Run()+0x4a>
 800c832:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800c836:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c83a:	d1a6      	bne.n	800c78a <E131Bridge::Run()+0x4a>
 800c83c:	4620      	mov	r0, r4
 800c83e:	f000 f971 	bl	800cb24 <E131Bridge::HandleSynchronization()>
 800c842:	e7a2      	b.n	800c78a <E131Bridge::Run()+0x4a>
 800c844:	2102      	movs	r1, #2
 800c846:	e7b4      	b.n	800c7b2 <E131Bridge::Run()+0x72>
 800c848:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 800c84c:	2000fda0 	andcs	pc, r0, r0, lsr #27

0800c850 <E131Bridge::FillDiscoveryPacket()>:
 800c850:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c854:	b510      	push	{r4, lr}
 800c856:	333c      	adds	r3, #60	; 0x3c
 800c858:	005b      	lsls	r3, r3, #1
 800c85a:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800c85e:	69c3      	ldr	r3, [r0, #28]
 800c860:	2200      	movs	r2, #0
 800c862:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800c866:	428b      	cmp	r3, r1
 800c868:	d14a      	bne.n	800c900 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800c86a:	69c3      	ldr	r3, [r0, #28]
 800c86c:	492d      	ldr	r1, [pc, #180]	; (800c924 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800c86e:	701a      	strb	r2, [r3, #0]
 800c870:	2210      	movs	r2, #16
 800c872:	705a      	strb	r2, [r3, #1]
 800c874:	1cda      	adds	r2, r3, #3
 800c876:	330f      	adds	r3, #15
 800c878:	4293      	cmp	r3, r2
 800c87a:	d144      	bne.n	800c906 <E131Bridge::FillDiscoveryPacket()+0xb6>
 800c87c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c880:	69c3      	ldr	r3, [r0, #28]
 800c882:	3234      	adds	r2, #52	; 0x34
 800c884:	0052      	lsls	r2, r2, #1
 800c886:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c88a:	ba52      	rev16	r2, r2
 800c88c:	821a      	strh	r2, [r3, #16]
 800c88e:	2200      	movs	r2, #0
 800c890:	749a      	strb	r2, [r3, #18]
 800c892:	74da      	strb	r2, [r3, #19]
 800c894:	751a      	strb	r2, [r3, #20]
 800c896:	2208      	movs	r2, #8
 800c898:	f803 2f15 	strb.w	r2, [r3, #21]!
 800c89c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800c8a0:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800c8a4:	4291      	cmp	r1, r2
 800c8a6:	d133      	bne.n	800c910 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800c8a8:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c8ac:	69c3      	ldr	r3, [r0, #28]
 800c8ae:	3229      	adds	r2, #41	; 0x29
 800c8b0:	0052      	lsls	r2, r2, #1
 800c8b2:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800c8b6:	ba52      	rev16	r2, r2
 800c8b8:	84da      	strh	r2, [r3, #38]	; 0x26
 800c8ba:	2200      	movs	r2, #0
 800c8bc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800c8c0:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800c8c4:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800c8c8:	2202      	movs	r2, #2
 800c8ca:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800c8ce:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800c8d2:	4291      	cmp	r1, r2
 800c8d4:	d121      	bne.n	800c91a <E131Bridge::FillDiscoveryPacket()+0xca>
 800c8d6:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c8da:	69c2      	ldr	r2, [r0, #28]
 800c8dc:	3304      	adds	r3, #4
 800c8de:	005b      	lsls	r3, r3, #1
 800c8e0:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800c8e4:	ba5b      	rev16	r3, r3
 800c8e6:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800c8ea:	2300      	movs	r3, #0
 800c8ec:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800c8f0:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800c8f4:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800c8f8:	2301      	movs	r3, #1
 800c8fa:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800c8fe:	bd10      	pop	{r4, pc}
 800c900:	f803 2b01 	strb.w	r2, [r3], #1
 800c904:	e7af      	b.n	800c866 <E131Bridge::FillDiscoveryPacket()+0x16>
 800c906:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c90a:	f802 4f01 	strb.w	r4, [r2, #1]!
 800c90e:	e7b3      	b.n	800c878 <E131Bridge::FillDiscoveryPacket()+0x28>
 800c910:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c914:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c918:	e7c4      	b.n	800c8a4 <E131Bridge::FillDiscoveryPacket()+0x54>
 800c91a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c91e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c922:	e7d6      	b.n	800c8d2 <E131Bridge::FillDiscoveryPacket()+0x82>
 800c924:	08019fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}

0800c928 <E131Bridge::SendDiscoveryPacket()>:
 800c928:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c92a:	68c2      	ldr	r2, [r0, #12]
 800c92c:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800c930:	f242 710f 	movw	r1, #9999	; 0x270f
 800c934:	1ad3      	subs	r3, r2, r3
 800c936:	428b      	cmp	r3, r1
 800c938:	4604      	mov	r4, r0
 800c93a:	d924      	bls.n	800c986 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800c93c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800c940:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800c944:	b1ab      	cbz	r3, 800c972 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800c946:	2500      	movs	r5, #0
 800c948:	462e      	mov	r6, r5
 800c94a:	2300      	movs	r3, #0
 800c94c:	f10d 020e 	add.w	r2, sp, #14
 800c950:	4629      	mov	r1, r5
 800c952:	4620      	mov	r0, r4
 800c954:	f7ff fc08 	bl	800c168 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800c958:	b140      	cbz	r0, 800c96c <E131Bridge::SendDiscoveryPacket()+0x44>
 800c95a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c95e:	69e2      	ldr	r2, [r4, #28]
 800c960:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800c964:	ba5b      	rev16	r3, r3
 800c966:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800c96a:	3601      	adds	r6, #1
 800c96c:	3501      	adds	r5, #1
 800c96e:	2d42      	cmp	r5, #66	; 0x42
 800c970:	d1eb      	bne.n	800c94a <E131Bridge::SendDiscoveryPacket()+0x22>
 800c972:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800c976:	9300      	str	r3, [sp, #0]
 800c978:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800c97c:	6a23      	ldr	r3, [r4, #32]
 800c97e:	69e1      	ldr	r1, [r4, #28]
 800c980:	7820      	ldrb	r0, [r4, #0]
 800c982:	f006 f93f 	bl	8012c04 <udp_send>
 800c986:	b004      	add	sp, #16
 800c988:	bd70      	pop	{r4, r5, r6, pc}

0800c98a <memcpy.isra.0>:
 800c98a:	3801      	subs	r0, #1
 800c98c:	440a      	add	r2, r1
 800c98e:	4291      	cmp	r1, r2
 800c990:	d100      	bne.n	800c994 <memcpy.isra.0+0xa>
 800c992:	4770      	bx	lr
 800c994:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c998:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c99c:	e7f7      	b.n	800c98e <memcpy.isra.0+0x4>
	...

0800c9a0 <E131Bridge::FillDataPacket()>:
 800c9a0:	b570      	push	{r4, r5, r6, lr}
 800c9a2:	4605      	mov	r5, r0
 800c9a4:	6980      	ldr	r0, [r0, #24]
 800c9a6:	4920      	ldr	r1, [pc, #128]	; (800ca28 <E131Bridge::FillDataPacket()+0x88>)
 800c9a8:	2400      	movs	r4, #0
 800c9aa:	2610      	movs	r6, #16
 800c9ac:	7046      	strb	r6, [r0, #1]
 800c9ae:	7004      	strb	r4, [r0, #0]
 800c9b0:	7084      	strb	r4, [r0, #2]
 800c9b2:	70c4      	strb	r4, [r0, #3]
 800c9b4:	220c      	movs	r2, #12
 800c9b6:	3004      	adds	r0, #4
 800c9b8:	f7ff ffe7 	bl	800c98a <memcpy.isra.0>
 800c9bc:	69a8      	ldr	r0, [r5, #24]
 800c9be:	2304      	movs	r3, #4
 800c9c0:	7543      	strb	r3, [r0, #21]
 800c9c2:	7484      	strb	r4, [r0, #18]
 800c9c4:	74c4      	strb	r4, [r0, #19]
 800c9c6:	7504      	strb	r4, [r0, #20]
 800c9c8:	4632      	mov	r2, r6
 800c9ca:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800c9ce:	3016      	adds	r0, #22
 800c9d0:	f7ff ffdb 	bl	800c98a <memcpy.isra.0>
 800c9d4:	69a8      	ldr	r0, [r5, #24]
 800c9d6:	2602      	movs	r6, #2
 800c9d8:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800c9dc:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800c9e0:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800c9e4:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800c9e8:	2240      	movs	r2, #64	; 0x40
 800c9ea:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800c9ee:	302c      	adds	r0, #44	; 0x2c
 800c9f0:	f7ff ffcb 	bl	800c98a <memcpy.isra.0>
 800c9f4:	69ab      	ldr	r3, [r5, #24]
 800c9f6:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800c9fa:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800c9fe:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800ca02:	69ab      	ldr	r3, [r5, #24]
 800ca04:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800ca08:	69ab      	ldr	r3, [r5, #24]
 800ca0a:	22a1      	movs	r2, #161	; 0xa1
 800ca0c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800ca10:	69ab      	ldr	r3, [r5, #24]
 800ca12:	2201      	movs	r2, #1
 800ca14:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800ca18:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800ca1c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800ca20:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800ca24:	bd70      	pop	{r4, r5, r6, pc}
 800ca26:	bf00      	nop
 800ca28:	08019fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}

0800ca2c <E131Bridge::HandleDmxIn()>:
 800ca2c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ca30:	f500 55b4 	add.w	r5, r0, #5760	; 0x1680
 800ca34:	4f3a      	ldr	r7, [pc, #232]	; (800cb20 <E131Bridge::HandleDmxIn()+0xf4>)
 800ca36:	4604      	mov	r4, r0
 800ca38:	351c      	adds	r5, #28
 800ca3a:	2600      	movs	r6, #0
 800ca3c:	78ab      	ldrb	r3, [r5, #2]
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	d056      	beq.n	800caf0 <E131Bridge::HandleDmxIn()+0xc4>
 800ca42:	6960      	ldr	r0, [r4, #20]
 800ca44:	6803      	ldr	r3, [r0, #0]
 800ca46:	4631      	mov	r1, r6
 800ca48:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800ca4c:	aa02      	add	r2, sp, #8
 800ca4e:	ab03      	add	r3, sp, #12
 800ca50:	47c0      	blx	r8
 800ca52:	4601      	mov	r1, r0
 800ca54:	2800      	cmp	r0, #0
 800ca56:	d053      	beq.n	800cb00 <E131Bridge::HandleDmxIn()+0xd4>
 800ca58:	9a02      	ldr	r2, [sp, #8]
 800ca5a:	69a0      	ldr	r0, [r4, #24]
 800ca5c:	b293      	uxth	r3, r2
 800ca5e:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800ca62:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800ca66:	fa9c fc9c 	rev16.w	ip, ip
 800ca6a:	f8a0 c010 	strh.w	ip, [r0, #16]
 800ca6e:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800ca72:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800ca76:	fa9c fc9c 	rev16.w	ip, ip
 800ca7a:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800ca7e:	f895 c009 	ldrb.w	ip, [r5, #9]
 800ca82:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800ca86:	f895 c008 	ldrb.w	ip, [r5, #8]
 800ca8a:	f10c 0001 	add.w	r0, ip, #1
 800ca8e:	7228      	strb	r0, [r5, #8]
 800ca90:	69a0      	ldr	r0, [r4, #24]
 800ca92:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800ca96:	f8b5 c000 	ldrh.w	ip, [r5]
 800ca9a:	69a0      	ldr	r0, [r4, #24]
 800ca9c:	330a      	adds	r3, #10
 800ca9e:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800caa2:	fa9c fc9c 	rev16.w	ip, ip
 800caa6:	ba5b      	rev16	r3, r3
 800caa8:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800caac:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800cab0:	307d      	adds	r0, #125	; 0x7d
 800cab2:	f7ff ff6a 	bl	800c98a <memcpy.isra.0>
 800cab6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800caba:	69a1      	ldr	r1, [r4, #24]
 800cabc:	7820      	ldrb	r0, [r4, #0]
 800cabe:	ba53      	rev16	r3, r2
 800cac0:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800cac4:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800cac8:	9300      	str	r3, [sp, #0]
 800caca:	327d      	adds	r2, #125	; 0x7d
 800cacc:	686b      	ldr	r3, [r5, #4]
 800cace:	b292      	uxth	r2, r2
 800cad0:	f006 f898 	bl	8012c04 <udp_send>
 800cad4:	683a      	ldr	r2, [r7, #0]
 800cad6:	2301      	movs	r3, #1
 800cad8:	40b3      	lsls	r3, r6
 800cada:	ea33 0102 	bics.w	r1, r3, r2
 800cade:	d007      	beq.n	800caf0 <E131Bridge::HandleDmxIn()+0xc4>
 800cae0:	4313      	orrs	r3, r2
 800cae2:	603b      	str	r3, [r7, #0]
 800cae4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800cae8:	f043 0301 	orr.w	r3, r3, #1
 800caec:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800caf0:	3601      	adds	r6, #1
 800caf2:	2e42      	cmp	r6, #66	; 0x42
 800caf4:	f105 050c 	add.w	r5, r5, #12
 800caf8:	d1a0      	bne.n	800ca3c <E131Bridge::HandleDmxIn()+0x10>
 800cafa:	b004      	add	sp, #16
 800cafc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb00:	9b03      	ldr	r3, [sp, #12]
 800cb02:	2b00      	cmp	r3, #0
 800cb04:	d1f4      	bne.n	800caf0 <E131Bridge::HandleDmxIn()+0xc4>
 800cb06:	683b      	ldr	r3, [r7, #0]
 800cb08:	2201      	movs	r2, #1
 800cb0a:	40b2      	lsls	r2, r6
 800cb0c:	ea23 0302 	bic.w	r3, r3, r2
 800cb10:	603b      	str	r3, [r7, #0]
 800cb12:	2b00      	cmp	r3, #0
 800cb14:	d1ec      	bne.n	800caf0 <E131Bridge::HandleDmxIn()+0xc4>
 800cb16:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800cb1a:	f023 0301 	bic.w	r3, r3, #1
 800cb1e:	e7e5      	b.n	800caec <E131Bridge::HandleDmxIn()+0xc0>
 800cb20:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800cb24 <E131Bridge::HandleSynchronization()>:
 800cb24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb28:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800cb2c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800cb30:	ba5b      	rev16	r3, r3
 800cb32:	b29b      	uxth	r3, r3
 800cb34:	429a      	cmp	r2, r3
 800cb36:	4604      	mov	r4, r0
 800cb38:	d00a      	beq.n	800cb50 <E131Bridge::HandleSynchronization()+0x2c>
 800cb3a:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800cb3e:	429a      	cmp	r2, r3
 800cb40:	d006      	beq.n	800cb50 <E131Bridge::HandleSynchronization()+0x2c>
 800cb42:	4b24      	ldr	r3, [pc, #144]	; (800cbd4 <E131Bridge::HandleSynchronization()+0xb0>)
 800cb44:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb48:	6818      	ldr	r0, [r3, #0]
 800cb4a:	2102      	movs	r1, #2
 800cb4c:	f009 b82c 	b.w	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800cb50:	68e3      	ldr	r3, [r4, #12]
 800cb52:	4e21      	ldr	r6, [pc, #132]	; (800cbd8 <E131Bridge::HandleSynchronization()+0xb4>)
 800cb54:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800cbdc <E131Bridge::HandleSynchronization()+0xb8>
 800cb58:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800cb5c:	2500      	movs	r5, #0
 800cb5e:	4627      	mov	r7, r4
 800cb60:	46a9      	mov	r9, r5
 800cb62:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800cb66:	b323      	cbz	r3, 800cbb2 <E131Bridge::HandleSynchronization()+0x8e>
 800cb68:	f8d8 3000 	ldr.w	r3, [r8]
 800cb6c:	6860      	ldr	r0, [r4, #4]
 800cb6e:	07da      	lsls	r2, r3, #31
 800cb70:	bf5c      	itt	pl
 800cb72:	2301      	movpl	r3, #1
 800cb74:	f8c8 3000 	strpl.w	r3, [r8]
 800cb78:	6803      	ldr	r3, [r0, #0]
 800cb7a:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800cb7e:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800cb82:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800cb86:	4629      	mov	r1, r5
 800cb88:	47d0      	blx	sl
 800cb8a:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800cb8e:	b93b      	cbnz	r3, 800cba0 <E131Bridge::HandleSynchronization()+0x7c>
 800cb90:	6860      	ldr	r0, [r4, #4]
 800cb92:	6803      	ldr	r3, [r0, #0]
 800cb94:	4629      	mov	r1, r5
 800cb96:	689b      	ldr	r3, [r3, #8]
 800cb98:	4798      	blx	r3
 800cb9a:	2301      	movs	r3, #1
 800cb9c:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800cba0:	f8d8 3000 	ldr.w	r3, [r8]
 800cba4:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800cba8:	07db      	lsls	r3, r3, #31
 800cbaa:	bf5c      	itt	pl
 800cbac:	2301      	movpl	r3, #1
 800cbae:	f8c8 3000 	strpl.w	r3, [r8]
 800cbb2:	3501      	adds	r5, #1
 800cbb4:	2d42      	cmp	r5, #66	; 0x42
 800cbb6:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800cbba:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800cbbe:	d1d0      	bne.n	800cb62 <E131Bridge::HandleSynchronization()+0x3e>
 800cbc0:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800cbc2:	b120      	cbz	r0, 800cbce <E131Bridge::HandleSynchronization()+0xaa>
 800cbc4:	6803      	ldr	r3, [r0, #0]
 800cbc6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cbca:	689b      	ldr	r3, [r3, #8]
 800cbcc:	4718      	bx	r3
 800cbce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cbd2:	bf00      	nop
 800cbd4:	2000fda0 	andcs	pc, r0, r0, lsr #27
 800cbd8:	20030000 	andcs	r0, r3, r0
 800cbdc:	200006c8 	andcs	r0, r0, r8, asr #13

0800cbe0 <E131Bridge::Print()>:
 800cbe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbe4:	b08c      	sub	sp, #48	; 0x30
 800cbe6:	a902      	add	r1, sp, #8
 800cbe8:	4604      	mov	r4, r0
 800cbea:	2500      	movs	r5, #0
 800cbec:	3024      	adds	r0, #36	; 0x24
 800cbee:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cbf2:	f001 fe8d 	bl	800e910 <uuid_unparse>
 800cbf6:	482c      	ldr	r0, [pc, #176]	; (800cca8 <E131Bridge::Print()+0xc8>)
 800cbf8:	f7fd fc5e 	bl	800a4b8 <printf>
 800cbfc:	4b2b      	ldr	r3, [pc, #172]	; (800ccac <E131Bridge::Print()+0xcc>)
 800cbfe:	482c      	ldr	r0, [pc, #176]	; (800ccb0 <E131Bridge::Print()+0xd0>)
 800cc00:	7819      	ldrb	r1, [r3, #0]
 800cc02:	785a      	ldrb	r2, [r3, #1]
 800cc04:	f7fd fc58 	bl	800a4b8 <printf>
 800cc08:	482a      	ldr	r0, [pc, #168]	; (800ccb4 <E131Bridge::Print()+0xd4>)
 800cc0a:	a902      	add	r1, sp, #8
 800cc0c:	f7fd fc54 	bl	800a4b8 <printf>
 800cc10:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800cc14:	b303      	cbz	r3, 800cc58 <E131Bridge::Print()+0x78>
 800cc16:	4828      	ldr	r0, [pc, #160]	; (800ccb8 <E131Bridge::Print()+0xd8>)
 800cc18:	4e28      	ldr	r6, [pc, #160]	; (800ccbc <E131Bridge::Print()+0xdc>)
 800cc1a:	4f29      	ldr	r7, [pc, #164]	; (800ccc0 <E131Bridge::Print()+0xe0>)
 800cc1c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800ccd0 <E131Bridge::Print()+0xf0>
 800cc20:	f7fd fc4a 	bl	800a4b8 <printf>
 800cc24:	2301      	movs	r3, #1
 800cc26:	f10d 0206 	add.w	r2, sp, #6
 800cc2a:	4629      	mov	r1, r5
 800cc2c:	4620      	mov	r0, r4
 800cc2e:	f7ff fa9b 	bl	800c168 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cc32:	b170      	cbz	r0, 800cc52 <E131Bridge::Print()+0x72>
 800cc34:	2344      	movs	r3, #68	; 0x44
 800cc36:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800cc3a:	436b      	muls	r3, r5
 800cc3c:	4629      	mov	r1, r5
 800cc3e:	58d3      	ldr	r3, [r2, r3]
 800cc40:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cc44:	2b00      	cmp	r3, #0
 800cc46:	bf0c      	ite	eq
 800cc48:	4633      	moveq	r3, r6
 800cc4a:	463b      	movne	r3, r7
 800cc4c:	4640      	mov	r0, r8
 800cc4e:	f7fd fc33 	bl	800a4b8 <printf>
 800cc52:	3501      	adds	r5, #1
 800cc54:	2d42      	cmp	r5, #66	; 0x42
 800cc56:	d1e5      	bne.n	800cc24 <E131Bridge::Print()+0x44>
 800cc58:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800cc5c:	b1db      	cbz	r3, 800cc96 <E131Bridge::Print()+0xb6>
 800cc5e:	4819      	ldr	r0, [pc, #100]	; (800ccc4 <E131Bridge::Print()+0xe4>)
 800cc60:	4f19      	ldr	r7, [pc, #100]	; (800ccc8 <E131Bridge::Print()+0xe8>)
 800cc62:	f7fd fc29 	bl	800a4b8 <printf>
 800cc66:	f504 56b5 	add.w	r6, r4, #5792	; 0x16a0
 800cc6a:	2500      	movs	r5, #0
 800cc6c:	3605      	adds	r6, #5
 800cc6e:	2300      	movs	r3, #0
 800cc70:	f10d 0206 	add.w	r2, sp, #6
 800cc74:	4629      	mov	r1, r5
 800cc76:	4620      	mov	r0, r4
 800cc78:	f7ff fa76 	bl	800c168 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800cc7c:	b140      	cbz	r0, 800cc90 <E131Bridge::Print()+0xb0>
 800cc7e:	230c      	movs	r3, #12
 800cc80:	436b      	muls	r3, r5
 800cc82:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cc86:	5cf3      	ldrb	r3, [r6, r3]
 800cc88:	4629      	mov	r1, r5
 800cc8a:	4638      	mov	r0, r7
 800cc8c:	f7fd fc14 	bl	800a4b8 <printf>
 800cc90:	3501      	adds	r5, #1
 800cc92:	2d42      	cmp	r5, #66	; 0x42
 800cc94:	d1eb      	bne.n	800cc6e <E131Bridge::Print()+0x8e>
 800cc96:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800cc9a:	b113      	cbz	r3, 800cca2 <E131Bridge::Print()+0xc2>
 800cc9c:	480b      	ldr	r0, [pc, #44]	; (800cccc <E131Bridge::Print()+0xec>)
 800cc9e:	f7fd fc0b 	bl	800a4b8 <printf>
 800cca2:	b00c      	add	sp, #48	; 0x30
 800cca4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cca8:	08019e60 	stmdaeq	r1, {r5, r6, r9, sl, fp, ip, pc}
 800ccac:	08019fe5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 800ccb0:	08019e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip, pc}
 800ccb4:	08019e7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, pc}
 800ccb8:	08019e8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, fp, ip, pc}
 800ccbc:	08019e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip, pc}
 800ccc0:	08019e5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, fp, ip, pc}
 800ccc4:	08019eb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, fp, ip, pc}
 800ccc8:	08019ebb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, fp, ip, pc}
 800cccc:	08019eda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, fp, ip, pc}
 800ccd0:	08019e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, pc}

0800ccd4 <memcmp>:
 800ccd4:	4402      	add	r2, r0
 800ccd6:	4290      	cmp	r0, r2
 800ccd8:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800ccdc:	d106      	bne.n	800ccec <memcmp+0x18>
 800ccde:	2000      	movs	r0, #0
 800cce0:	4770      	bx	lr
 800cce2:	3001      	adds	r0, #1
 800cce4:	4290      	cmp	r0, r2
 800cce6:	d102      	bne.n	800ccee <memcmp+0x1a>
 800cce8:	2000      	movs	r0, #0
 800ccea:	e006      	b.n	800ccfa <memcmp+0x26>
 800ccec:	b510      	push	{r4, lr}
 800ccee:	7803      	ldrb	r3, [r0, #0]
 800ccf0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ccf4:	42a3      	cmp	r3, r4
 800ccf6:	d0f4      	beq.n	800cce2 <memcmp+0xe>
 800ccf8:	1b18      	subs	r0, r3, r4
 800ccfa:	bd10      	pop	{r4, pc}

0800ccfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800ccfc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ccfe:	88c6      	ldrh	r6, [r0, #6]
 800cd00:	8885      	ldrh	r5, [r0, #4]
 800cd02:	42ae      	cmp	r6, r5
 800cd04:	d216      	bcs.n	800cd34 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800cd06:	4604      	mov	r4, r0
 800cd08:	6800      	ldr	r0, [r0, #0]
 800cd0a:	1bad      	subs	r5, r5, r6
 800cd0c:	4430      	add	r0, r6
 800cd0e:	7a26      	ldrb	r6, [r4, #8]
 800cd10:	b923      	cbnz	r3, 800cd1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800cd12:	b926      	cbnz	r6, 800cd1e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800cd14:	9200      	str	r2, [sp, #0]
 800cd16:	460b      	mov	r3, r1
 800cd18:	4a09      	ldr	r2, [pc, #36]	; (800cd40 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800cd1a:	e003      	b.n	800cd24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800cd1c:	b166      	cbz	r6, 800cd38 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800cd1e:	9200      	str	r2, [sp, #0]
 800cd20:	4a08      	ldr	r2, [pc, #32]	; (800cd44 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800cd22:	460b      	mov	r3, r1
 800cd24:	4629      	mov	r1, r5
 800cd26:	f7fd fbef 	bl	800a508 <snprintf>
 800cd2a:	4285      	cmp	r5, r0
 800cd2c:	bfa2      	ittt	ge
 800cd2e:	88e3      	ldrhge	r3, [r4, #6]
 800cd30:	181b      	addge	r3, r3, r0
 800cd32:	80e3      	strhge	r3, [r4, #6]
 800cd34:	b002      	add	sp, #8
 800cd36:	bd70      	pop	{r4, r5, r6, pc}
 800cd38:	9200      	str	r2, [sp, #0]
 800cd3a:	460b      	mov	r3, r1
 800cd3c:	4a02      	ldr	r2, [pc, #8]	; (800cd48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800cd3e:	e7f1      	b.n	800cd24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800cd40:	08019060 	stmdaeq	r1, {r5, r6, ip, pc}
 800cd44:	08019055 	stmdaeq	r1, {r0, r2, r4, r6, ip, pc}
 800cd48:	08019061 	stmdaeq	r1, {r0, r5, r6, ip, pc}

0800cd4c <E131Params::E131Params(E131ParamsStore*)>:
 800cd4c:	b510      	push	{r4, lr}
 800cd4e:	2219      	movs	r2, #25
 800cd50:	4604      	mov	r4, r0
 800cd52:	f840 1b04 	str.w	r1, [r0], #4
 800cd56:	2100      	movs	r1, #0
 800cd58:	f009 fa0c 	bl	8016174 <memset>
 800cd5c:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800cd60:	f8c4 301f 	str.w	r3, [r4, #31]
 800cd64:	2300      	movs	r3, #0
 800cd66:	2201      	movs	r2, #1
 800cd68:	7323      	strb	r3, [r4, #12]
 800cd6a:	77a3      	strb	r3, [r4, #30]
 800cd6c:	4b08      	ldr	r3, [pc, #32]	; (800cd90 <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800cd6e:	72e2      	strb	r2, [r4, #11]
 800cd70:	2155      	movs	r1, #85	; 0x55
 800cd72:	2202      	movs	r2, #2
 800cd74:	f8a4 200d 	strh.w	r2, [r4, #13]
 800cd78:	7761      	strb	r1, [r4, #29]
 800cd7a:	2203      	movs	r2, #3
 800cd7c:	6819      	ldr	r1, [r3, #0]
 800cd7e:	f8a4 200f 	strh.w	r2, [r4, #15]
 800cd82:	2204      	movs	r2, #4
 800cd84:	f8a4 2011 	strh.w	r2, [r4, #17]
 800cd88:	b901      	cbnz	r1, 800cd8c <E131Params::E131Params(E131ParamsStore*)+0x40>
 800cd8a:	601a      	str	r2, [r3, #0]
 800cd8c:	4620      	mov	r0, r4
 800cd8e:	bd10      	pop	{r4, pc}
 800cd90:	200006d4 	ldrdcs	r0, [r0], -r4

0800cd94 <E131Params::Load()>:
 800cd94:	b508      	push	{r3, lr}
 800cd96:	2300      	movs	r3, #0
 800cd98:	4601      	mov	r1, r0
 800cd9a:	6043      	str	r3, [r0, #4]
 800cd9c:	6800      	ldr	r0, [r0, #0]
 800cd9e:	b120      	cbz	r0, 800cdaa <E131Params::Load()+0x16>
 800cda0:	6803      	ldr	r3, [r0, #0]
 800cda2:	3104      	adds	r1, #4
 800cda4:	68db      	ldr	r3, [r3, #12]
 800cda6:	4798      	blx	r3
 800cda8:	2001      	movs	r0, #1
 800cdaa:	bd08      	pop	{r3, pc}

0800cdac <E131Params::Load(char const*, unsigned int)>:
 800cdac:	6803      	ldr	r3, [r0, #0]
 800cdae:	b1d3      	cbz	r3, 800cde6 <E131Params::Load(char const*, unsigned int)+0x3a>
 800cdb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cdb2:	2300      	movs	r3, #0
 800cdb4:	6043      	str	r3, [r0, #4]
 800cdb6:	4604      	mov	r4, r0
 800cdb8:	460d      	mov	r5, r1
 800cdba:	4616      	mov	r6, r2
 800cdbc:	490a      	ldr	r1, [pc, #40]	; (800cde8 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800cdbe:	4602      	mov	r2, r0
 800cdc0:	4668      	mov	r0, sp
 800cdc2:	f008 f9d3 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cdc6:	4632      	mov	r2, r6
 800cdc8:	4629      	mov	r1, r5
 800cdca:	4668      	mov	r0, sp
 800cdcc:	f008 f9d2 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 800cdd0:	4621      	mov	r1, r4
 800cdd2:	f851 0b04 	ldr.w	r0, [r1], #4
 800cdd6:	6803      	ldr	r3, [r0, #0]
 800cdd8:	689b      	ldr	r3, [r3, #8]
 800cdda:	4798      	blx	r3
 800cddc:	4668      	mov	r0, sp
 800cdde:	f008 f9c8 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 800cde2:	b002      	add	sp, #8
 800cde4:	bd70      	pop	{r4, r5, r6, pc}
 800cde6:	4770      	bx	lr
 800cde8:	0800d085 	stmdaeq	r0, {r0, r2, r7, ip, lr, pc}

0800cdec <E131Params::callbackFunction(char const*)>:
 800cdec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdf0:	460e      	mov	r6, r1
 800cdf2:	b087      	sub	sp, #28
 800cdf4:	2708      	movs	r7, #8
 800cdf6:	4604      	mov	r4, r0
 800cdf8:	4998      	ldr	r1, [pc, #608]	; (800d05c <E131Params::callbackFunction(char const*)+0x270>)
 800cdfa:	9701      	str	r7, [sp, #4]
 800cdfc:	ab01      	add	r3, sp, #4
 800cdfe:	eb0d 0207 	add.w	r2, sp, r7
 800ce02:	4630      	mov	r0, r6
 800ce04:	f008 f9ea 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ce08:	bb68      	cbnz	r0, 800ce66 <E131Params::callbackFunction(char const*)+0x7a>
 800ce0a:	4995      	ldr	r1, [pc, #596]	; (800d060 <E131Params::callbackFunction(char const*)+0x274>)
 800ce0c:	2204      	movs	r2, #4
 800ce0e:	eb0d 0007 	add.w	r0, sp, r7
 800ce12:	f7ff ff5f 	bl	800ccd4 <memcmp>
 800ce16:	6865      	ldr	r5, [r4, #4]
 800ce18:	b1a0      	cbz	r0, 800ce44 <E131Params::callbackFunction(char const*)+0x58>
 800ce1a:	4992      	ldr	r1, [pc, #584]	; (800d064 <E131Params::callbackFunction(char const*)+0x278>)
 800ce1c:	2203      	movs	r2, #3
 800ce1e:	eb0d 0007 	add.w	r0, sp, r7
 800ce22:	f7ff ff57 	bl	800ccd4 <memcmp>
 800ce26:	b1b0      	cbz	r0, 800ce56 <E131Params::callbackFunction(char const*)+0x6a>
 800ce28:	498f      	ldr	r1, [pc, #572]	; (800d068 <E131Params::callbackFunction(char const*)+0x27c>)
 800ce2a:	2202      	movs	r2, #2
 800ce2c:	eb0d 0007 	add.w	r0, sp, r7
 800ce30:	f7ff ff50 	bl	800ccd4 <memcmp>
 800ce34:	b198      	cbz	r0, 800ce5e <E131Params::callbackFunction(char const*)+0x72>
 800ce36:	498d      	ldr	r1, [pc, #564]	; (800d06c <E131Params::callbackFunction(char const*)+0x280>)
 800ce38:	463a      	mov	r2, r7
 800ce3a:	eb0d 0007 	add.w	r0, sp, r7
 800ce3e:	f7ff ff49 	bl	800ccd4 <memcmp>
 800ce42:	b170      	cbz	r0, 800ce62 <E131Params::callbackFunction(char const*)+0x76>
 800ce44:	f025 0501 	bic.w	r5, r5, #1
 800ce48:	2300      	movs	r3, #0
 800ce4a:	6065      	str	r5, [r4, #4]
 800ce4c:	f8a4 3009 	strh.w	r3, [r4, #9]
 800ce50:	b007      	add	sp, #28
 800ce52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce56:	2301      	movs	r3, #1
 800ce58:	f045 0501 	orr.w	r5, r5, #1
 800ce5c:	e7f5      	b.n	800ce4a <E131Params::callbackFunction(char const*)+0x5e>
 800ce5e:	2302      	movs	r3, #2
 800ce60:	e7fa      	b.n	800ce58 <E131Params::callbackFunction(char const*)+0x6c>
 800ce62:	2303      	movs	r3, #3
 800ce64:	e7f8      	b.n	800ce58 <E131Params::callbackFunction(char const*)+0x6c>
 800ce66:	f8df 920c 	ldr.w	r9, [pc, #524]	; 800d074 <E131Params::callbackFunction(char const*)+0x288>
 800ce6a:	f8df 820c 	ldr.w	r8, [pc, #524]	; 800d078 <E131Params::callbackFunction(char const*)+0x28c>
 800ce6e:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800d07c <E131Params::callbackFunction(char const*)+0x290>
 800ce72:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800d080 <E131Params::callbackFunction(char const*)+0x294>
 800ce76:	2500      	movs	r5, #0
 800ce78:	f10d 0202 	add.w	r2, sp, #2
 800ce7c:	4649      	mov	r1, r9
 800ce7e:	4630      	mov	r0, r6
 800ce80:	f008 fa61 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ce84:	b9d8      	cbnz	r0, 800cebe <E131Params::callbackFunction(char const*)+0xd2>
 800ce86:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800ce8a:	6861      	ldr	r1, [r4, #4]
 800ce8c:	1e42      	subs	r2, r0, #1
 800ce8e:	b292      	uxth	r2, r2
 800ce90:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800ce94:	2310      	movs	r3, #16
 800ce96:	42b2      	cmp	r2, r6
 800ce98:	fa03 f305 	lsl.w	r3, r3, r5
 800ce9c:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800cea0:	d907      	bls.n	800ceb2 <E131Params::callbackFunction(char const*)+0xc6>
 800cea2:	4422      	add	r2, r4
 800cea4:	3501      	adds	r5, #1
 800cea6:	ea21 0103 	bic.w	r1, r1, r3
 800ceaa:	f8a2 500b 	strh.w	r5, [r2, #11]
 800ceae:	6061      	str	r1, [r4, #4]
 800ceb0:	e7ce      	b.n	800ce50 <E131Params::callbackFunction(char const*)+0x64>
 800ceb2:	4422      	add	r2, r4
 800ceb4:	430b      	orrs	r3, r1
 800ceb6:	f8a2 000b 	strh.w	r0, [r2, #11]
 800ceba:	6063      	str	r3, [r4, #4]
 800cebc:	e7c8      	b.n	800ce50 <E131Params::callbackFunction(char const*)+0x64>
 800cebe:	2712      	movs	r7, #18
 800cec0:	2303      	movs	r3, #3
 800cec2:	436f      	muls	r7, r5
 800cec4:	9301      	str	r3, [sp, #4]
 800cec6:	aa02      	add	r2, sp, #8
 800cec8:	ab01      	add	r3, sp, #4
 800ceca:	eb0a 0107 	add.w	r1, sl, r7
 800cece:	4630      	mov	r0, r6
 800ced0:	f008 f984 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ced4:	bb08      	cbnz	r0, 800cf1a <E131Params::callbackFunction(char const*)+0x12e>
 800ced6:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800ceda:	6862      	ldr	r2, [r4, #4]
 800cedc:	f041 0120 	orr.w	r1, r1, #32
 800cee0:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cee4:	296c      	cmp	r1, #108	; 0x6c
 800cee6:	fa03 f305 	lsl.w	r3, r3, r5
 800ceea:	4425      	add	r5, r4
 800ceec:	d10f      	bne.n	800cf0e <E131Params::callbackFunction(char const*)+0x122>
 800ceee:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800cef2:	f041 0120 	orr.w	r1, r1, #32
 800cef6:	2974      	cmp	r1, #116	; 0x74
 800cef8:	d109      	bne.n	800cf0e <E131Params::callbackFunction(char const*)+0x122>
 800cefa:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800cefe:	f041 0120 	orr.w	r1, r1, #32
 800cf02:	2970      	cmp	r1, #112	; 0x70
 800cf04:	d103      	bne.n	800cf0e <E131Params::callbackFunction(char const*)+0x122>
 800cf06:	2101      	movs	r1, #1
 800cf08:	7529      	strb	r1, [r5, #20]
 800cf0a:	4313      	orrs	r3, r2
 800cf0c:	e7d5      	b.n	800ceba <E131Params::callbackFunction(char const*)+0xce>
 800cf0e:	2100      	movs	r1, #0
 800cf10:	ea22 0203 	bic.w	r2, r2, r3
 800cf14:	7529      	strb	r1, [r5, #20]
 800cf16:	6062      	str	r2, [r4, #4]
 800cf18:	e79a      	b.n	800ce50 <E131Params::callbackFunction(char const*)+0x64>
 800cf1a:	2307      	movs	r3, #7
 800cf1c:	9301      	str	r3, [sp, #4]
 800cf1e:	aa02      	add	r2, sp, #8
 800cf20:	ab01      	add	r3, sp, #4
 800cf22:	eb0b 0107 	add.w	r1, fp, r7
 800cf26:	4630      	mov	r0, r6
 800cf28:	f008 f958 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cf2c:	2800      	cmp	r0, #0
 800cf2e:	d15e      	bne.n	800cfee <E131Params::callbackFunction(char const*)+0x202>
 800cf30:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800cf34:	f043 0320 	orr.w	r3, r3, #32
 800cf38:	2b69      	cmp	r3, #105	; 0x69
 800cf3a:	d123      	bne.n	800cf84 <E131Params::callbackFunction(char const*)+0x198>
 800cf3c:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800cf40:	f043 0320 	orr.w	r3, r3, #32
 800cf44:	2b6e      	cmp	r3, #110	; 0x6e
 800cf46:	d146      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf48:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800cf4c:	f043 0320 	orr.w	r3, r3, #32
 800cf50:	2b70      	cmp	r3, #112	; 0x70
 800cf52:	d140      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf54:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800cf58:	f043 0320 	orr.w	r3, r3, #32
 800cf5c:	2b75      	cmp	r3, #117	; 0x75
 800cf5e:	d13a      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf60:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800cf64:	f043 0320 	orr.w	r3, r3, #32
 800cf68:	3b74      	subs	r3, #116	; 0x74
 800cf6a:	bf18      	it	ne
 800cf6c:	2301      	movne	r3, #1
 800cf6e:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800cf72:	006d      	lsls	r5, r5, #1
 800cf74:	2103      	movs	r1, #3
 800cf76:	40a9      	lsls	r1, r5
 800cf78:	ea22 0201 	bic.w	r2, r2, r1
 800cf7c:	bb6b      	cbnz	r3, 800cfda <E131Params::callbackFunction(char const*)+0x1ee>
 800cf7e:	f8a4 201d 	strh.w	r2, [r4, #29]
 800cf82:	e765      	b.n	800ce50 <E131Params::callbackFunction(char const*)+0x64>
 800cf84:	2b64      	cmp	r3, #100	; 0x64
 800cf86:	d126      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf88:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800cf8c:	f043 0320 	orr.w	r3, r3, #32
 800cf90:	2b69      	cmp	r3, #105	; 0x69
 800cf92:	d120      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cf94:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800cf98:	f043 0320 	orr.w	r3, r3, #32
 800cf9c:	2b73      	cmp	r3, #115	; 0x73
 800cf9e:	d11a      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cfa0:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800cfa4:	f043 0320 	orr.w	r3, r3, #32
 800cfa8:	2b61      	cmp	r3, #97	; 0x61
 800cfaa:	d114      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cfac:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800cfb0:	f043 0320 	orr.w	r3, r3, #32
 800cfb4:	2b62      	cmp	r3, #98	; 0x62
 800cfb6:	d10e      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cfb8:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800cfbc:	f043 0320 	orr.w	r3, r3, #32
 800cfc0:	2b6c      	cmp	r3, #108	; 0x6c
 800cfc2:	d108      	bne.n	800cfd6 <E131Params::callbackFunction(char const*)+0x1ea>
 800cfc4:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800cfc8:	f043 0320 	orr.w	r3, r3, #32
 800cfcc:	2b65      	cmp	r3, #101	; 0x65
 800cfce:	bf14      	ite	ne
 800cfd0:	2301      	movne	r3, #1
 800cfd2:	2302      	moveq	r3, #2
 800cfd4:	e7cb      	b.n	800cf6e <E131Params::callbackFunction(char const*)+0x182>
 800cfd6:	2301      	movs	r3, #1
 800cfd8:	e7c9      	b.n	800cf6e <E131Params::callbackFunction(char const*)+0x182>
 800cfda:	2b02      	cmp	r3, #2
 800cfdc:	bf15      	itete	ne
 800cfde:	2301      	movne	r3, #1
 800cfe0:	40ab      	lsleq	r3, r5
 800cfe2:	fa03 f505 	lslne.w	r5, r3, r5
 800cfe6:	431a      	orreq	r2, r3
 800cfe8:	bf18      	it	ne
 800cfea:	432a      	orrne	r2, r5
 800cfec:	e7c7      	b.n	800cf7e <E131Params::callbackFunction(char const*)+0x192>
 800cfee:	f10d 0201 	add.w	r2, sp, #1
 800cff2:	4641      	mov	r1, r8
 800cff4:	4630      	mov	r0, r6
 800cff6:	f008 f9ee 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cffa:	b9a0      	cbnz	r0, 800d026 <E131Params::callbackFunction(char const*)+0x23a>
 800cffc:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800d000:	6863      	ldr	r3, [r4, #4]
 800d002:	1e48      	subs	r0, r1, #1
 800d004:	b2c0      	uxtb	r0, r0
 800d006:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800d00a:	28c7      	cmp	r0, #199	; 0xc7
 800d00c:	fa02 f205 	lsl.w	r2, r2, r5
 800d010:	4425      	add	r5, r4
 800d012:	d803      	bhi.n	800d01c <E131Params::callbackFunction(char const*)+0x230>
 800d014:	2964      	cmp	r1, #100	; 0x64
 800d016:	d001      	beq.n	800d01c <E131Params::callbackFunction(char const*)+0x230>
 800d018:	77e9      	strb	r1, [r5, #31]
 800d01a:	e776      	b.n	800cf0a <E131Params::callbackFunction(char const*)+0x11e>
 800d01c:	2164      	movs	r1, #100	; 0x64
 800d01e:	77e9      	strb	r1, [r5, #31]
 800d020:	ea23 0302 	bic.w	r3, r3, r2
 800d024:	e749      	b.n	800ceba <E131Params::callbackFunction(char const*)+0xce>
 800d026:	3501      	adds	r5, #1
 800d028:	2d04      	cmp	r5, #4
 800d02a:	f109 0910 	add.w	r9, r9, #16
 800d02e:	f108 0812 	add.w	r8, r8, #18
 800d032:	f47f af21 	bne.w	800ce78 <E131Params::callbackFunction(char const*)+0x8c>
 800d036:	490e      	ldr	r1, [pc, #56]	; (800d070 <E131Params::callbackFunction(char const*)+0x284>)
 800d038:	f10d 0201 	add.w	r2, sp, #1
 800d03c:	4630      	mov	r0, r6
 800d03e:	f008 f9ca 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d042:	2800      	cmp	r0, #0
 800d044:	f47f af04 	bne.w	800ce50 <E131Params::callbackFunction(char const*)+0x64>
 800d048:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d04c:	6863      	ldr	r3, [r4, #4]
 800d04e:	b112      	cbz	r2, 800d056 <E131Params::callbackFunction(char const*)+0x26a>
 800d050:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d054:	e731      	b.n	800ceba <E131Params::callbackFunction(char const*)+0xce>
 800d056:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d05a:	e72e      	b.n	800ceba <E131Params::callbackFunction(char const*)+0xce>
 800d05c:	0801bb81 	stmdaeq	r1, {r0, r7, r8, r9, fp, ip, sp, pc}
 800d060:	08019f32 	stmdaeq	r1, {r1, r4, r5, r8, r9, sl, fp, ip, pc}
 800d064:	08019f37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, fp, ip, pc}
 800d068:	0801bf51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 800d06c:	08019f3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800d070:	0801bb6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 800d074:	0801b991 	stmdaeq	r1, {r0, r4, r7, r8, fp, ip, sp, pc}
 800d078:	08019f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip, pc}
 800d07c:	0801bb11 	stmdaeq	r1, {r0, r4, r8, r9, fp, ip, sp, pc}
 800d080:	0801bb93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, fp, ip, sp, pc}

0800d084 <E131Params::staticCallbackFunction(void*, char const*)>:
 800d084:	f7ff beb2 	b.w	800cdec <E131Params::callbackFunction(char const*)>

0800d088 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800d088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d08c:	4604      	mov	r4, r0
 800d08e:	b087      	sub	sp, #28
 800d090:	4615      	mov	r5, r2
 800d092:	461e      	mov	r6, r3
 800d094:	3004      	adds	r0, #4
 800d096:	2900      	cmp	r1, #0
 800d098:	d05f      	beq.n	800d15a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800d09a:	221f      	movs	r2, #31
 800d09c:	f009 f853 	bl	8016146 <memmove>
 800d0a0:	4633      	mov	r3, r6
 800d0a2:	462a      	mov	r2, r5
 800d0a4:	4990      	ldr	r1, [pc, #576]	; (800d2e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800d0a6:	4f91      	ldr	r7, [pc, #580]	; (800d2ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800d0a8:	4e91      	ldr	r6, [pc, #580]	; (800d2f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800d0aa:	f8df 8280 	ldr.w	r8, [pc, #640]	; 800d32c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>
 800d0ae:	f8df 9278 	ldr.w	r9, [pc, #632]	; 800d328 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>
 800d0b2:	a803      	add	r0, sp, #12
 800d0b4:	f007 ffba 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d0b8:	2500      	movs	r5, #0
 800d0ba:	f8d8 2000 	ldr.w	r2, [r8]
 800d0be:	6863      	ldr	r3, [r4, #4]
 800d0c0:	42aa      	cmp	r2, r5
 800d0c2:	d851      	bhi.n	800d168 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800d0c4:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800d0c8:	4a8a      	ldr	r2, [pc, #552]	; (800d2f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800d0ca:	4e8b      	ldr	r6, [pc, #556]	; (800d2f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800d0cc:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800d0d0:	498a      	ldr	r1, [pc, #552]	; (800d2fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800d0d2:	f8df 925c 	ldr.w	r9, [pc, #604]	; 800d330 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>
 800d0d6:	f8df a25c 	ldr.w	sl, [pc, #604]	; 800d334 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>
 800d0da:	f003 0301 	and.w	r3, r3, #1
 800d0de:	a803      	add	r0, sp, #12
 800d0e0:	f7ff fe0c 	bl	800ccfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d0e4:	4986      	ldr	r1, [pc, #536]	; (800d300 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800d0e6:	a803      	add	r0, sp, #12
 800d0e8:	f008 f826 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 800d0ec:	f104 0713 	add.w	r7, r4, #19
 800d0f0:	2500      	movs	r5, #0
 800d0f2:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800d0f6:	f8d8 3000 	ldr.w	r3, [r8]
 800d0fa:	42ab      	cmp	r3, r5
 800d0fc:	d87f      	bhi.n	800d1fe <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800d0fe:	4981      	ldr	r1, [pc, #516]	; (800d304 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800d100:	4e81      	ldr	r6, [pc, #516]	; (800d308 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800d102:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800d320 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800d106:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800d314 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>
 800d10a:	a803      	add	r0, sp, #12
 800d10c:	f008 f814 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 800d110:	f104 091e 	add.w	r9, r4, #30
 800d114:	2700      	movs	r7, #0
 800d116:	f8d8 3000 	ldr.w	r3, [r8]
 800d11a:	42bb      	cmp	r3, r7
 800d11c:	f200 8083 	bhi.w	800d226 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800d120:	497a      	ldr	r1, [pc, #488]	; (800d30c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800d122:	a803      	add	r0, sp, #12
 800d124:	f008 f808 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 800d128:	6863      	ldr	r3, [r4, #4]
 800d12a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d12e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d132:	42a2      	cmp	r2, r4
 800d134:	f080 80b8 	bcs.w	800d2a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800d138:	9803      	ldr	r0, [sp, #12]
 800d13a:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800d13e:	4410      	add	r0, r2
 800d140:	eba4 0402 	sub.w	r4, r4, r2
 800d144:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d148:	f040 809d 	bne.w	800d286 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800d14c:	2a00      	cmp	r2, #0
 800d14e:	f040 809b 	bne.w	800d288 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800d152:	9200      	str	r2, [sp, #0]
 800d154:	4b6e      	ldr	r3, [pc, #440]	; (800d310 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d156:	4a6f      	ldr	r2, [pc, #444]	; (800d314 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d158:	e09c      	b.n	800d294 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d15a:	6823      	ldr	r3, [r4, #0]
 800d15c:	681a      	ldr	r2, [r3, #0]
 800d15e:	4601      	mov	r1, r0
 800d160:	68d2      	ldr	r2, [r2, #12]
 800d162:	4618      	mov	r0, r3
 800d164:	4790      	blx	r2
 800d166:	e79b      	b.n	800d0a0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800d168:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800d16c:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800d170:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800d174:	45dc      	cmp	ip, fp
 800d176:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800d17a:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800d17e:	d221      	bcs.n	800d1c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800d180:	2110      	movs	r1, #16
 800d182:	9803      	ldr	r0, [sp, #12]
 800d184:	40a9      	lsls	r1, r5
 800d186:	ea31 0303 	bics.w	r3, r1, r3
 800d18a:	4460      	add	r0, ip
 800d18c:	ebab 0b0c 	sub.w	fp, fp, ip
 800d190:	f89d c014 	ldrb.w	ip, [sp, #20]
 800d194:	d006      	beq.n	800d1a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800d196:	f1bc 0f00 	cmp.w	ip, #0
 800d19a:	d106      	bne.n	800d1aa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800d19c:	9200      	str	r2, [sp, #0]
 800d19e:	4633      	mov	r3, r6
 800d1a0:	4a5c      	ldr	r2, [pc, #368]	; (800d314 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800d1a2:	e005      	b.n	800d1b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d1a4:	f1bc 0f00 	cmp.w	ip, #0
 800d1a8:	d023      	beq.n	800d1f2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800d1aa:	9200      	str	r2, [sp, #0]
 800d1ac:	4633      	mov	r3, r6
 800d1ae:	464a      	mov	r2, r9
 800d1b0:	4659      	mov	r1, fp
 800d1b2:	f7fd f9a9 	bl	800a508 <snprintf>
 800d1b6:	4583      	cmp	fp, r0
 800d1b8:	bfa2      	ittt	ge
 800d1ba:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d1be:	18c0      	addge	r0, r0, r3
 800d1c0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d1c4:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800d1c8:	fa23 f30a 	lsr.w	r3, r3, sl
 800d1cc:	f013 0303 	ands.w	r3, r3, #3
 800d1d0:	d013      	beq.n	800d1fa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800d1d2:	4a51      	ldr	r2, [pc, #324]	; (800d318 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800d1d4:	4951      	ldr	r1, [pc, #324]	; (800d31c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800d1d6:	2b02      	cmp	r3, #2
 800d1d8:	bf08      	it	eq
 800d1da:	460a      	moveq	r2, r1
 800d1dc:	3b01      	subs	r3, #1
 800d1de:	4639      	mov	r1, r7
 800d1e0:	bf18      	it	ne
 800d1e2:	2301      	movne	r3, #1
 800d1e4:	a803      	add	r0, sp, #12
 800d1e6:	f7ff fd89 	bl	800ccfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d1ea:	3501      	adds	r5, #1
 800d1ec:	3712      	adds	r7, #18
 800d1ee:	3610      	adds	r6, #16
 800d1f0:	e763      	b.n	800d0ba <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800d1f2:	9200      	str	r2, [sp, #0]
 800d1f4:	4633      	mov	r3, r6
 800d1f6:	4a4a      	ldr	r2, [pc, #296]	; (800d320 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d1f8:	e7da      	b.n	800d1b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800d1fa:	4a4a      	ldr	r2, [pc, #296]	; (800d324 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800d1fc:	e7ee      	b.n	800d1dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800d1fe:	6861      	ldr	r1, [r4, #4]
 800d200:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d204:	fa0b f305 	lsl.w	r3, fp, r5
 800d208:	438b      	bics	r3, r1
 800d20a:	bf0c      	ite	eq
 800d20c:	2301      	moveq	r3, #1
 800d20e:	2300      	movne	r3, #0
 800d210:	4631      	mov	r1, r6
 800d212:	2a00      	cmp	r2, #0
 800d214:	bf0c      	ite	eq
 800d216:	464a      	moveq	r2, r9
 800d218:	4652      	movne	r2, sl
 800d21a:	a803      	add	r0, sp, #12
 800d21c:	f7ff fd6e 	bl	800ccfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d220:	3501      	adds	r5, #1
 800d222:	3612      	adds	r6, #18
 800d224:	e767      	b.n	800d0f6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800d226:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d22a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d22e:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800d232:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800d236:	42a9      	cmp	r1, r5
 800d238:	d21e      	bcs.n	800d278 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800d23a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800d23e:	9803      	ldr	r0, [sp, #12]
 800d240:	40ba      	lsls	r2, r7
 800d242:	ea32 0c0c 	bics.w	ip, r2, ip
 800d246:	4408      	add	r0, r1
 800d248:	eba5 0501 	sub.w	r5, r5, r1
 800d24c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d250:	d004      	beq.n	800d25c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800d252:	b921      	cbnz	r1, 800d25e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800d254:	9300      	str	r3, [sp, #0]
 800d256:	465a      	mov	r2, fp
 800d258:	4633      	mov	r3, r6
 800d25a:	e003      	b.n	800d264 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d25c:	b179      	cbz	r1, 800d27e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800d25e:	4a32      	ldr	r2, [pc, #200]	; (800d328 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d260:	9300      	str	r3, [sp, #0]
 800d262:	4633      	mov	r3, r6
 800d264:	4629      	mov	r1, r5
 800d266:	f7fd f94f 	bl	800a508 <snprintf>
 800d26a:	4285      	cmp	r5, r0
 800d26c:	bfa2      	ittt	ge
 800d26e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d272:	18c0      	addge	r0, r0, r3
 800d274:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d278:	3701      	adds	r7, #1
 800d27a:	3612      	adds	r6, #18
 800d27c:	e74b      	b.n	800d116 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800d27e:	9300      	str	r3, [sp, #0]
 800d280:	4652      	mov	r2, sl
 800d282:	4633      	mov	r3, r6
 800d284:	e7ee      	b.n	800d264 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800d286:	b34a      	cbz	r2, 800d2dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800d288:	3b00      	subs	r3, #0
 800d28a:	bf18      	it	ne
 800d28c:	2301      	movne	r3, #1
 800d28e:	9300      	str	r3, [sp, #0]
 800d290:	4a25      	ldr	r2, [pc, #148]	; (800d328 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800d292:	4b1f      	ldr	r3, [pc, #124]	; (800d310 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d294:	4621      	mov	r1, r4
 800d296:	f7fd f937 	bl	800a508 <snprintf>
 800d29a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d29e:	4284      	cmp	r4, r0
 800d2a0:	bfa4      	itt	ge
 800d2a2:	181b      	addge	r3, r3, r0
 800d2a4:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d2a8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d2ac:	b17b      	cbz	r3, 800d2ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800d2ae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d2b2:	9b03      	ldr	r3, [sp, #12]
 800d2b4:	4413      	add	r3, r2
 800d2b6:	227d      	movs	r2, #125	; 0x7d
 800d2b8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d2bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d2c0:	9903      	ldr	r1, [sp, #12]
 800d2c2:	54ca      	strb	r2, [r1, r3]
 800d2c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d2c8:	3301      	adds	r3, #1
 800d2ca:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d2ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d2d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d2d4:	601a      	str	r2, [r3, #0]
 800d2d6:	b007      	add	sp, #28
 800d2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2dc:	2301      	movs	r3, #1
 800d2de:	9300      	str	r3, [sp, #0]
 800d2e0:	4a0f      	ldr	r2, [pc, #60]	; (800d320 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800d2e2:	4b0b      	ldr	r3, [pc, #44]	; (800d310 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800d2e4:	e7d6      	b.n	800d294 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800d2e6:	bf00      	nop
 800d2e8:	08019fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp, ip, pc}
 800d2ec:	0801bb93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, fp, ip, sp, pc}
 800d2f0:	0801b991 	stmdaeq	r1, {r0, r4, r7, r8, fp, ip, sp, pc}
 800d2f4:	08019f78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 800d2f8:	0801bb11 	stmdaeq	r1, {r0, r4, r8, r9, fp, ip, sp, pc}
 800d2fc:	0801bb81 	stmdaeq	r1, {r0, r7, r8, r9, fp, ip, sp, pc}
 800d300:	08019f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp, ip, pc}
 800d304:	08019f6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, fp, ip, pc}
 800d308:	08019f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip, pc}
 800d30c:	08018e0d 	stmdaeq	r1, {r0, r2, r3, r9, sl, fp, pc}
 800d310:	0801bb6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 800d314:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800d318:	08019f4a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sl, fp, ip, pc}
 800d31c:	08019f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip, pc}
 800d320:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}
 800d324:	08019f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, ip, pc}
 800d328:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800d32c:	200006d4 	ldrdcs	r0, [r0], -r4
 800d330:	08019f5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, fp, ip, pc}
 800d334:	08019f59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, fp, ip, pc}

0800d338 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800d338:	b513      	push	{r0, r1, r4, lr}
 800d33a:	6804      	ldr	r4, [r0, #0]
 800d33c:	b914      	cbnz	r4, 800d344 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800d33e:	601c      	str	r4, [r3, #0]
 800d340:	b002      	add	sp, #8
 800d342:	bd10      	pop	{r4, pc}
 800d344:	9300      	str	r3, [sp, #0]
 800d346:	4613      	mov	r3, r2
 800d348:	460a      	mov	r2, r1
 800d34a:	2100      	movs	r1, #0
 800d34c:	f7ff fe9c 	bl	800d088 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800d350:	e7f6      	b.n	800d340 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800d354 <E131Params::Set(unsigned int)>:
 800d354:	1e4b      	subs	r3, r1, #1
 800d356:	2b40      	cmp	r3, #64	; 0x40
 800d358:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d35c:	d807      	bhi.n	800d36e <E131Params::Set(unsigned int)+0x1a>
 800d35e:	4a27      	ldr	r2, [pc, #156]	; (800d3fc <E131Params::Set(unsigned int)+0xa8>)
 800d360:	f1c1 0342 	rsb	r3, r1, #66	; 0x42
 800d364:	6814      	ldr	r4, [r2, #0]
 800d366:	42a3      	cmp	r3, r4
 800d368:	bf94      	ite	ls
 800d36a:	6013      	strls	r3, [r2, #0]
 800d36c:	6014      	strhi	r4, [r2, #0]
 800d36e:	6843      	ldr	r3, [r0, #4]
 800d370:	b1fb      	cbz	r3, 800d3b2 <E131Params::Set(unsigned int)+0x5e>
 800d372:	4b23      	ldr	r3, [pc, #140]	; (800d400 <E131Params::Set(unsigned int)+0xac>)
 800d374:	681c      	ldr	r4, [r3, #0]
 800d376:	4b21      	ldr	r3, [pc, #132]	; (800d3fc <E131Params::Set(unsigned int)+0xa8>)
 800d378:	2244      	movs	r2, #68	; 0x44
 800d37a:	f504 57b5 	add.w	r7, r4, #5792	; 0x16a0
 800d37e:	f8d3 c000 	ldr.w	ip, [r3]
 800d382:	f100 0514 	add.w	r5, r0, #20
 800d386:	fb02 4201 	mla	r2, r2, r1, r4
 800d38a:	2300      	movs	r3, #0
 800d38c:	f44f 7e80 	mov.w	lr, #256	; 0x100
 800d390:	f44f 3880 	mov.w	r8, #65536	; 0x10000
 800d394:	3705      	adds	r7, #5
 800d396:	f04f 090c 	mov.w	r9, #12
 800d39a:	459c      	cmp	ip, r3
 800d39c:	6846      	ldr	r6, [r0, #4]
 800d39e:	d10a      	bne.n	800d3b6 <E131Params::Set(unsigned int)+0x62>
 800d3a0:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800d3a4:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800d3a8:	04b3      	lsls	r3, r6, #18
 800d3aa:	bf44      	itt	mi
 800d3ac:	2301      	movmi	r3, #1
 800d3ae:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800d3b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3b6:	eb03 0a01 	add.w	sl, r3, r1
 800d3ba:	f1ba 0f41 	cmp.w	sl, #65	; 0x41
 800d3be:	d8ef      	bhi.n	800d3a0 <E131Params::Set(unsigned int)+0x4c>
 800d3c0:	fa0e fa03 	lsl.w	sl, lr, r3
 800d3c4:	ea3a 0a06 	bics.w	sl, sl, r6
 800d3c8:	bf04      	itt	eq
 800d3ca:	f895 a000 	ldrbeq.w	sl, [r5]
 800d3ce:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800d3d2:	fa08 fa03 	lsl.w	sl, r8, r3
 800d3d6:	ea3a 0a06 	bics.w	sl, sl, r6
 800d3da:	d10a      	bne.n	800d3f2 <E131Params::Set(unsigned int)+0x9e>
 800d3dc:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800d3e0:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800d3e4:	b2f6      	uxtb	r6, r6
 800d3e6:	2ec7      	cmp	r6, #199	; 0xc7
 800d3e8:	bf9c      	itt	ls
 800d3ea:	fb09 f603 	mulls.w	r6, r9, r3
 800d3ee:	f807 a006 	strbls.w	sl, [r7, r6]
 800d3f2:	3301      	adds	r3, #1
 800d3f4:	3501      	adds	r5, #1
 800d3f6:	3244      	adds	r2, #68	; 0x44
 800d3f8:	e7cf      	b.n	800d39a <E131Params::Set(unsigned int)+0x46>
 800d3fa:	bf00      	nop
 800d3fc:	200006d4 	ldrdcs	r0, [r0], -r4
 800d400:	200006cc 	andcs	r0, r0, ip, asr #13

0800d404 <E131Params::Dump()>:
 800d404:	4770      	bx	lr

0800d406 <LLRPDevice::~LLRPDevice()>:
 800d406:	4770      	bx	lr

0800d408 <LLRPDevice::CopyUID(unsigned char*)>:
 800d408:	4770      	bx	lr

0800d40a <LLRPDevice::CopyCID(unsigned char*)>:
 800d40a:	4770      	bx	lr

0800d40c <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800d40c:	2000      	movs	r0, #0
 800d40e:	4770      	bx	lr

0800d410 <LLRPDevice::~LLRPDevice()>:
 800d410:	b510      	push	{r4, lr}
 800d412:	4604      	mov	r4, r0
 800d414:	f008 fd96 	bl	8015f44 <operator delete(void*)>
 800d418:	4620      	mov	r0, r4
 800d41a:	bd10      	pop	{r4, pc}

0800d41c <memcpy.isra.0>:
 800d41c:	3801      	subs	r0, #1
 800d41e:	440a      	add	r2, r1
 800d420:	4291      	cmp	r1, r2
 800d422:	d100      	bne.n	800d426 <memcpy.isra.0+0xa>
 800d424:	4770      	bx	lr
 800d426:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d42a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d42e:	e7f7      	b.n	800d420 <memcpy.isra.0+0x4>

0800d430 <LLRPDevice::LLRPDevice()>:
 800d430:	b513      	push	{r0, r1, r4, lr}
 800d432:	4b0a      	ldr	r3, [pc, #40]	; (800d45c <LLRPDevice::LLRPDevice()+0x2c>)
 800d434:	6003      	str	r3, [r0, #0]
 800d436:	4604      	mov	r4, r0
 800d438:	a901      	add	r1, sp, #4
 800d43a:	4809      	ldr	r0, [pc, #36]	; (800d460 <LLRPDevice::LLRPDevice()+0x30>)
 800d43c:	f008 fd8a 	bl	8015f54 <inet_aton>
 800d440:	4b08      	ldr	r3, [pc, #32]	; (800d464 <LLRPDevice::LLRPDevice()+0x34>)
 800d442:	9a01      	ldr	r2, [sp, #4]
 800d444:	4808      	ldr	r0, [pc, #32]	; (800d468 <LLRPDevice::LLRPDevice()+0x38>)
 800d446:	601a      	str	r2, [r3, #0]
 800d448:	a901      	add	r1, sp, #4
 800d44a:	f008 fd83 	bl	8015f54 <inet_aton>
 800d44e:	4b07      	ldr	r3, [pc, #28]	; (800d46c <LLRPDevice::LLRPDevice()+0x3c>)
 800d450:	9a01      	ldr	r2, [sp, #4]
 800d452:	601a      	str	r2, [r3, #0]
 800d454:	4620      	mov	r0, r4
 800d456:	b002      	add	sp, #8
 800d458:	bd10      	pop	{r4, pc}
 800d45a:	bf00      	nop
 800d45c:	0801a098 	stmdaeq	r1, {r3, r4, r7, sp, pc}
 800d460:	08019fe7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 800d464:	200006dc 	ldrdcs	r0, [r0], -ip
 800d468:	08019ff7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 800d46c:	200006e0 	andcs	r0, r0, r0, ror #13

0800d470 <LLRPDevice::HandleRequestMessage()>:
 800d470:	b530      	push	{r4, r5, lr}
 800d472:	4b24      	ldr	r3, [pc, #144]	; (800d504 <LLRPDevice::HandleRequestMessage()+0x94>)
 800d474:	681c      	ldr	r4, [r3, #0]
 800d476:	b089      	sub	sp, #36	; 0x24
 800d478:	2210      	movs	r2, #16
 800d47a:	4605      	mov	r5, r0
 800d47c:	f104 0117 	add.w	r1, r4, #23
 800d480:	eb0d 0002 	add.w	r0, sp, r2
 800d484:	9103      	str	r1, [sp, #12]
 800d486:	f7ff ffc9 	bl	800d41c <memcpy.isra.0>
 800d48a:	2343      	movs	r3, #67	; 0x43
 800d48c:	74a3      	strb	r3, [r4, #18]
 800d48e:	682b      	ldr	r3, [r5, #0]
 800d490:	9903      	ldr	r1, [sp, #12]
 800d492:	68db      	ldr	r3, [r3, #12]
 800d494:	4628      	mov	r0, r5
 800d496:	4798      	blx	r3
 800d498:	232c      	movs	r3, #44	; 0x2c
 800d49a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d49e:	2300      	movs	r3, #0
 800d4a0:	2210      	movs	r2, #16
 800d4a2:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800d4a6:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800d4aa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d4ae:	2302      	movs	r3, #2
 800d4b0:	eb0d 0102 	add.w	r1, sp, r2
 800d4b4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800d4b8:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d4bc:	f7ff ffae 	bl	800d41c <memcpy.isra.0>
 800d4c0:	2311      	movs	r3, #17
 800d4c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d4c6:	2301      	movs	r3, #1
 800d4c8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d4cc:	682b      	ldr	r3, [r5, #0]
 800d4ce:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800d4d2:	4628      	mov	r0, r5
 800d4d4:	689b      	ldr	r3, [r3, #8]
 800d4d6:	4798      	blx	r3
 800d4d8:	4b0b      	ldr	r3, [pc, #44]	; (800d508 <LLRPDevice::HandleRequestMessage()+0x98>)
 800d4da:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800d4de:	6818      	ldr	r0, [r3, #0]
 800d4e0:	f006 f866 	bl	80135b0 <Network::MacAddressCopyTo(unsigned char*)>
 800d4e4:	23ff      	movs	r3, #255	; 0xff
 800d4e6:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800d4ea:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d4ee:	9300      	str	r3, [sp, #0]
 800d4f0:	4806      	ldr	r0, [pc, #24]	; (800d50c <LLRPDevice::HandleRequestMessage()+0x9c>)
 800d4f2:	4b07      	ldr	r3, [pc, #28]	; (800d510 <LLRPDevice::HandleRequestMessage()+0xa0>)
 800d4f4:	7800      	ldrb	r0, [r0, #0]
 800d4f6:	681b      	ldr	r3, [r3, #0]
 800d4f8:	2253      	movs	r2, #83	; 0x53
 800d4fa:	4621      	mov	r1, r4
 800d4fc:	f005 fb82 	bl	8012c04 <udp_send>
 800d500:	b009      	add	sp, #36	; 0x24
 800d502:	bd30      	pop	{r4, r5, pc}
 800d504:	200006e4 	andcs	r0, r0, r4, ror #13
 800d508:	2000f9f0 	strdcs	pc, [r0], -r0
 800d50c:	20000000 	andcs	r0, r0, r0
 800d510:	200006e0 	andcs	r0, r0, r0, ror #13

0800d514 <LLRPDevice::HandleRdmCommand()>:
 800d514:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d518:	4b23      	ldr	r3, [pc, #140]	; (800d5a8 <LLRPDevice::HandleRdmCommand()+0x94>)
 800d51a:	681c      	ldr	r4, [r3, #0]
 800d51c:	6803      	ldr	r3, [r0, #0]
 800d51e:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800d522:	691b      	ldr	r3, [r3, #16]
 800d524:	b089      	sub	sp, #36	; 0x24
 800d526:	4649      	mov	r1, r9
 800d528:	4607      	mov	r7, r0
 800d52a:	4798      	blx	r3
 800d52c:	4605      	mov	r5, r0
 800d52e:	2800      	cmp	r0, #0
 800d530:	d036      	beq.n	800d5a0 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d532:	7803      	ldrb	r3, [r0, #0]
 800d534:	2bcc      	cmp	r3, #204	; 0xcc
 800d536:	d133      	bne.n	800d5a0 <LLRPDevice::HandleRdmCommand()+0x8c>
 800d538:	2210      	movs	r2, #16
 800d53a:	eb0d 0002 	add.w	r0, sp, r2
 800d53e:	f104 0117 	add.w	r1, r4, #23
 800d542:	9103      	str	r1, [sp, #12]
 800d544:	f7ff ff6a 	bl	800d41c <memcpy.isra.0>
 800d548:	78ae      	ldrb	r6, [r5, #2]
 800d54a:	9903      	ldr	r1, [sp, #12]
 800d54c:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800d550:	fa5f f888 	uxtb.w	r8, r8
 800d554:	f884 8012 	strb.w	r8, [r4, #18]
 800d558:	683b      	ldr	r3, [r7, #0]
 800d55a:	4638      	mov	r0, r7
 800d55c:	68db      	ldr	r3, [r3, #12]
 800d55e:	4798      	blx	r3
 800d560:	f106 0320 	add.w	r3, r6, #32
 800d564:	2210      	movs	r2, #16
 800d566:	eb0d 0102 	add.w	r1, sp, r2
 800d56a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800d56e:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800d572:	f7ff ff53 	bl	800d41c <memcpy.isra.0>
 800d576:	1d73      	adds	r3, r6, #5
 800d578:	1c72      	adds	r2, r6, #1
 800d57a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d57e:	b2d2      	uxtb	r2, r2
 800d580:	1c69      	adds	r1, r5, #1
 800d582:	4648      	mov	r0, r9
 800d584:	f7ff ff4a 	bl	800d41c <memcpy.isra.0>
 800d588:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800d58c:	9300      	str	r3, [sp, #0]
 800d58e:	4807      	ldr	r0, [pc, #28]	; (800d5ac <LLRPDevice::HandleRdmCommand()+0x98>)
 800d590:	4b07      	ldr	r3, [pc, #28]	; (800d5b0 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800d592:	7800      	ldrb	r0, [r0, #0]
 800d594:	681b      	ldr	r3, [r3, #0]
 800d596:	f108 0210 	add.w	r2, r8, #16
 800d59a:	4621      	mov	r1, r4
 800d59c:	f005 fb32 	bl	8012c04 <udp_send>
 800d5a0:	b009      	add	sp, #36	; 0x24
 800d5a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5a6:	bf00      	nop
 800d5a8:	200006e4 	andcs	r0, r0, r4, ror #13
 800d5ac:	20000000 	andcs	r0, r0, r0
 800d5b0:	200006e0 	andcs	r0, r0, r0, ror #13

0800d5b4 <LLRPDevice::Run()>:
 800d5b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d5b6:	4d0f      	ldr	r5, [pc, #60]	; (800d5f4 <LLRPDevice::Run()+0x40>)
 800d5b8:	4a0f      	ldr	r2, [pc, #60]	; (800d5f8 <LLRPDevice::Run()+0x44>)
 800d5ba:	4604      	mov	r4, r0
 800d5bc:	480f      	ldr	r0, [pc, #60]	; (800d5fc <LLRPDevice::Run()+0x48>)
 800d5be:	f10d 0306 	add.w	r3, sp, #6
 800d5c2:	7800      	ldrb	r0, [r0, #0]
 800d5c4:	4629      	mov	r1, r5
 800d5c6:	f005 faf7 	bl	8012bb8 <udp_recv2>
 800d5ca:	2841      	cmp	r0, #65	; 0x41
 800d5cc:	d908      	bls.n	800d5e0 <LLRPDevice::Run()+0x2c>
 800d5ce:	682b      	ldr	r3, [r5, #0]
 800d5d0:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800d5d4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d5d8:	ba1a      	rev	r2, r3
 800d5da:	d003      	beq.n	800d5e4 <LLRPDevice::Run()+0x30>
 800d5dc:	2a03      	cmp	r2, #3
 800d5de:	d005      	beq.n	800d5ec <LLRPDevice::Run()+0x38>
 800d5e0:	b003      	add	sp, #12
 800d5e2:	bd30      	pop	{r4, r5, pc}
 800d5e4:	4620      	mov	r0, r4
 800d5e6:	f7ff ff43 	bl	800d470 <LLRPDevice::HandleRequestMessage()>
 800d5ea:	e7f9      	b.n	800d5e0 <LLRPDevice::Run()+0x2c>
 800d5ec:	4620      	mov	r0, r4
 800d5ee:	f7ff ff91 	bl	800d514 <LLRPDevice::HandleRdmCommand()>
 800d5f2:	e7f5      	b.n	800d5e0 <LLRPDevice::Run()+0x2c>
 800d5f4:	200006e4 	andcs	r0, r0, r4, ror #13
 800d5f8:	200006d8 	ldrdcs	r0, [r0], -r8
 800d5fc:	20000000 	andcs	r0, r0, r0

0800d600 <LLRPDevice::Print()>:
 800d600:	b507      	push	{r0, r1, r2, lr}
 800d602:	4811      	ldr	r0, [pc, #68]	; (800d648 <LLRPDevice::Print()+0x48>)
 800d604:	f7fc ff58 	bl	800a4b8 <printf>
 800d608:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800d60c:	480f      	ldr	r0, [pc, #60]	; (800d64c <LLRPDevice::Print()+0x4c>)
 800d60e:	f7fc ff53 	bl	800a4b8 <printf>
 800d612:	4b0f      	ldr	r3, [pc, #60]	; (800d650 <LLRPDevice::Print()+0x50>)
 800d614:	480f      	ldr	r0, [pc, #60]	; (800d654 <LLRPDevice::Print()+0x54>)
 800d616:	6819      	ldr	r1, [r3, #0]
 800d618:	0e0b      	lsrs	r3, r1, #24
 800d61a:	9300      	str	r3, [sp, #0]
 800d61c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d620:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d624:	b2c9      	uxtb	r1, r1
 800d626:	f7fc ff47 	bl	800a4b8 <printf>
 800d62a:	4b0b      	ldr	r3, [pc, #44]	; (800d658 <LLRPDevice::Print()+0x58>)
 800d62c:	480b      	ldr	r0, [pc, #44]	; (800d65c <LLRPDevice::Print()+0x5c>)
 800d62e:	6819      	ldr	r1, [r3, #0]
 800d630:	0e0b      	lsrs	r3, r1, #24
 800d632:	9300      	str	r3, [sp, #0]
 800d634:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d638:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d63c:	b2c9      	uxtb	r1, r1
 800d63e:	f7fc ff3b 	bl	800a4b8 <printf>
 800d642:	b003      	add	sp, #12
 800d644:	f85d fb04 	ldr.w	pc, [sp], #4
 800d648:	0801a007 	stmdaeq	r1, {r0, r1, r2, sp, pc}
 800d64c:	0801a022 	stmdaeq	r1, {r1, r5, sp, pc}
 800d650:	200006dc 	ldrdcs	r0, [r0], -ip
 800d654:	0801a040 	stmdaeq	r1, {r6, sp, pc}
 800d658:	200006e0 	andcs	r0, r0, r0, ror #13
 800d65c:	0801a067 	stmdaeq	r1, {r0, r1, r2, r5, r6, sp, pc}

0800d660 <RDMNetDevice::Print()>:
 800d660:	b510      	push	{r4, lr}
 800d662:	b08a      	sub	sp, #40	; 0x28
 800d664:	2300      	movs	r3, #0
 800d666:	4604      	mov	r4, r0
 800d668:	4669      	mov	r1, sp
 800d66a:	480a      	ldr	r0, [pc, #40]	; (800d694 <RDMNetDevice::Print()+0x34>)
 800d66c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d670:	f001 f94e 	bl	800e910 <uuid_unparse>
 800d674:	4808      	ldr	r0, [pc, #32]	; (800d698 <RDMNetDevice::Print()+0x38>)
 800d676:	f7fc ff1f 	bl	800a4b8 <printf>
 800d67a:	4669      	mov	r1, sp
 800d67c:	4807      	ldr	r0, [pc, #28]	; (800d69c <RDMNetDevice::Print()+0x3c>)
 800d67e:	f7fc ff1b 	bl	800a4b8 <printf>
 800d682:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800d686:	f7ff ffbb 	bl	800d600 <LLRPDevice::Print()>
 800d68a:	4620      	mov	r0, r4
 800d68c:	f000 fa3a 	bl	800db04 <RDMDeviceResponder::Print()>
 800d690:	b00a      	add	sp, #40	; 0x28
 800d692:	bd10      	pop	{r4, pc}
 800d694:	200007e7 	andcs	r0, r0, r7, ror #15
 800d698:	0801a0de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sp, pc}
 800d69c:	0801a0e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, sp, pc}

0800d6a0 <RDMSensors::RDMSensors()>:
 800d6a0:	2200      	movs	r2, #0
 800d6a2:	6002      	str	r2, [r0, #0]
 800d6a4:	7102      	strb	r2, [r0, #4]
 800d6a6:	4a01      	ldr	r2, [pc, #4]	; (800d6ac <RDMSensors::RDMSensors()+0xc>)
 800d6a8:	6010      	str	r0, [r2, #0]
 800d6aa:	4770      	bx	lr
 800d6ac:	200007f8 	strdcs	r0, [r0], -r8

0800d6b0 <RDMSensors::~RDMSensors()>:
 800d6b0:	b570      	push	{r4, r5, r6, lr}
 800d6b2:	2500      	movs	r5, #0
 800d6b4:	4604      	mov	r4, r0
 800d6b6:	462e      	mov	r6, r5
 800d6b8:	7923      	ldrb	r3, [r4, #4]
 800d6ba:	6820      	ldr	r0, [r4, #0]
 800d6bc:	42ab      	cmp	r3, r5
 800d6be:	d804      	bhi.n	800d6ca <RDMSensors::~RDMSensors()+0x1a>
 800d6c0:	b108      	cbz	r0, 800d6c6 <RDMSensors::~RDMSensors()+0x16>
 800d6c2:	f008 fc41 	bl	8015f48 <operator delete[](void*)>
 800d6c6:	4620      	mov	r0, r4
 800d6c8:	bd70      	pop	{r4, r5, r6, pc}
 800d6ca:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d6ce:	b128      	cbz	r0, 800d6dc <RDMSensors::~RDMSensors()+0x2c>
 800d6d0:	6803      	ldr	r3, [r0, #0]
 800d6d2:	685b      	ldr	r3, [r3, #4]
 800d6d4:	4798      	blx	r3
 800d6d6:	6823      	ldr	r3, [r4, #0]
 800d6d8:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800d6dc:	3501      	adds	r5, #1
 800d6de:	e7eb      	b.n	800d6b8 <RDMSensors::~RDMSensors()+0x8>

0800d6e0 <RDMSubDevices::RDMSubDevices()>:
 800d6e0:	2200      	movs	r2, #0
 800d6e2:	6002      	str	r2, [r0, #0]
 800d6e4:	8082      	strh	r2, [r0, #4]
 800d6e6:	4a01      	ldr	r2, [pc, #4]	; (800d6ec <RDMSubDevices::RDMSubDevices()+0xc>)
 800d6e8:	6010      	str	r0, [r2, #0]
 800d6ea:	4770      	bx	lr
 800d6ec:	200007fc 	strdcs	r0, [r0], -ip

0800d6f0 <RDMSubDevices::~RDMSubDevices()>:
 800d6f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6f2:	2500      	movs	r5, #0
 800d6f4:	4604      	mov	r4, r0
 800d6f6:	462e      	mov	r6, r5
 800d6f8:	88a3      	ldrh	r3, [r4, #4]
 800d6fa:	6820      	ldr	r0, [r4, #0]
 800d6fc:	42ab      	cmp	r3, r5
 800d6fe:	d804      	bhi.n	800d70a <RDMSubDevices::~RDMSubDevices()+0x1a>
 800d700:	b108      	cbz	r0, 800d706 <RDMSubDevices::~RDMSubDevices()+0x16>
 800d702:	f008 fc21 	bl	8015f48 <operator delete[](void*)>
 800d706:	4620      	mov	r0, r4
 800d708:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d70a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800d70e:	00af      	lsls	r7, r5, #2
 800d710:	b110      	cbz	r0, 800d718 <RDMSubDevices::~RDMSubDevices()+0x28>
 800d712:	6803      	ldr	r3, [r0, #0]
 800d714:	685b      	ldr	r3, [r3, #4]
 800d716:	4798      	blx	r3
 800d718:	6823      	ldr	r3, [r4, #0]
 800d71a:	3501      	adds	r5, #1
 800d71c:	51de      	str	r6, [r3, r7]
 800d71e:	e7eb      	b.n	800d6f8 <RDMSubDevices::~RDMSubDevices()+0x8>

0800d720 <RDMSubDevices::GetInfo(unsigned short)>:
 800d720:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800d724:	6803      	ldr	r3, [r0, #0]
 800d726:	3901      	subs	r1, #1
 800d728:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d72c:	3010      	adds	r0, #16
 800d72e:	4770      	bx	lr

0800d730 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800d730:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800d734:	6800      	ldr	r0, [r0, #0]
 800d736:	3b01      	subs	r3, #1
 800d738:	4611      	mov	r1, r2
 800d73a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800d73e:	f000 b830 	b.w	800d7a2 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800d742 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800d742:	b410      	push	{r4}
 800d744:	460c      	mov	r4, r1
 800d746:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800d74a:	3c01      	subs	r4, #1
 800d74c:	6800      	ldr	r0, [r0, #0]
 800d74e:	4611      	mov	r1, r2
 800d750:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800d754:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d758:	461a      	mov	r2, r3
 800d75a:	f000 b837 	b.w	800d7cc <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800d75e <RDMSubDevices::GetFactoryDefaults()>:
 800d75e:	b538      	push	{r3, r4, r5, lr}
 800d760:	4605      	mov	r5, r0
 800d762:	2400      	movs	r4, #0
 800d764:	88ab      	ldrh	r3, [r5, #4]
 800d766:	42a3      	cmp	r3, r4
 800d768:	d801      	bhi.n	800d76e <RDMSubDevices::GetFactoryDefaults()+0x10>
 800d76a:	2001      	movs	r0, #1
 800d76c:	e009      	b.n	800d782 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800d76e:	682b      	ldr	r3, [r5, #0]
 800d770:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d774:	b908      	cbnz	r0, 800d77a <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800d776:	3401      	adds	r4, #1
 800d778:	e7f4      	b.n	800d764 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800d77a:	f000 f85c 	bl	800d836 <RDMSubDevice::GetFactoryDefaults()>
 800d77e:	2800      	cmp	r0, #0
 800d780:	d1f9      	bne.n	800d776 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800d782:	bd38      	pop	{r3, r4, r5, pc}

0800d784 <RDMSubDevices::SetFactoryDefaults()>:
 800d784:	b538      	push	{r3, r4, r5, lr}
 800d786:	4605      	mov	r5, r0
 800d788:	2400      	movs	r4, #0
 800d78a:	88ab      	ldrh	r3, [r5, #4]
 800d78c:	42a3      	cmp	r3, r4
 800d78e:	d800      	bhi.n	800d792 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800d790:	bd38      	pop	{r3, r4, r5, pc}
 800d792:	682b      	ldr	r3, [r5, #0]
 800d794:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800d798:	b108      	cbz	r0, 800d79e <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800d79a:	f000 f826 	bl	800d7ea <RDMSubDevice::SetFactoryDefaults()>
 800d79e:	3401      	adds	r4, #1
 800d7a0:	e7f3      	b.n	800d78a <RDMSubDevices::SetFactoryDefaults()+0x6>

0800d7a2 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800d7a2:	f100 0316 	add.w	r3, r0, #22
 800d7a6:	600b      	str	r3, [r1, #0]
 800d7a8:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d7ac:	710b      	strb	r3, [r1, #4]
 800d7ae:	4770      	bx	lr

0800d7b0 <RDMSubDevice::SetLabel(char const*)>:
 800d7b0:	b510      	push	{r4, lr}
 800d7b2:	2300      	movs	r3, #0
 800d7b4:	f100 0415 	add.w	r4, r0, #21
 800d7b8:	5cca      	ldrb	r2, [r1, r3]
 800d7ba:	b122      	cbz	r2, 800d7c6 <RDMSubDevice::SetLabel(char const*)+0x16>
 800d7bc:	3301      	adds	r3, #1
 800d7be:	2b20      	cmp	r3, #32
 800d7c0:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d7c4:	d1f8      	bne.n	800d7b8 <RDMSubDevice::SetLabel(char const*)+0x8>
 800d7c6:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d7ca:	bd10      	pop	{r4, pc}

0800d7cc <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800d7cc:	b530      	push	{r4, r5, lr}
 800d7ce:	2300      	movs	r3, #0
 800d7d0:	f100 0415 	add.w	r4, r0, #21
 800d7d4:	429a      	cmp	r2, r3
 800d7d6:	d905      	bls.n	800d7e4 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800d7d8:	5ccd      	ldrb	r5, [r1, r3]
 800d7da:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d7de:	3301      	adds	r3, #1
 800d7e0:	2b20      	cmp	r3, #32
 800d7e2:	d1f7      	bne.n	800d7d4 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800d7e4:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800d7e8:	bd30      	pop	{r4, r5, pc}

0800d7ea <RDMSubDevice::SetFactoryDefaults()>:
 800d7ea:	7a03      	ldrb	r3, [r0, #8]
 800d7ec:	b510      	push	{r4, lr}
 800d7ee:	b94b      	cbnz	r3, 800d804 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800d7f0:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800d7f4:	f7ff ffdc 	bl	800d7b0 <RDMSubDevice::SetLabel(char const*)>
 800d7f8:	8983      	ldrh	r3, [r0, #12]
 800d7fa:	8243      	strh	r3, [r0, #18]
 800d7fc:	7b83      	ldrb	r3, [r0, #14]
 800d7fe:	7503      	strb	r3, [r0, #20]
 800d800:	2301      	movs	r3, #1
 800d802:	7203      	strb	r3, [r0, #8]
 800d804:	bd10      	pop	{r4, pc}

0800d806 <RDMSubDevice::CalculateChecksum()>:
 800d806:	b510      	push	{r4, lr}
 800d808:	8a43      	ldrh	r3, [r0, #18]
 800d80a:	7d02      	ldrb	r2, [r0, #20]
 800d80c:	f890 4036 	ldrb.w	r4, [r0, #54]	; 0x36
 800d810:	4413      	add	r3, r2
 800d812:	f100 0215 	add.w	r2, r0, #21
 800d816:	f1c0 20ff 	rsb	r0, r0, #4278255360	; 0xff00ff00
 800d81a:	f500 007f 	add.w	r0, r0, #16711680	; 0xff0000
 800d81e:	b29b      	uxth	r3, r3
 800d820:	30eb      	adds	r0, #235	; 0xeb
 800d822:	1881      	adds	r1, r0, r2
 800d824:	428c      	cmp	r4, r1
 800d826:	d801      	bhi.n	800d82c <RDMSubDevice::CalculateChecksum()+0x26>
 800d828:	4618      	mov	r0, r3
 800d82a:	bd10      	pop	{r4, pc}
 800d82c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d830:	440b      	add	r3, r1
 800d832:	b29b      	uxth	r3, r3
 800d834:	e7f5      	b.n	800d822 <RDMSubDevice::CalculateChecksum()+0x1c>

0800d836 <RDMSubDevice::GetFactoryDefaults()>:
 800d836:	7a03      	ldrb	r3, [r0, #8]
 800d838:	b510      	push	{r4, lr}
 800d83a:	4604      	mov	r4, r0
 800d83c:	b133      	cbz	r3, 800d84c <RDMSubDevice::GetFactoryDefaults()+0x16>
 800d83e:	f7ff ffe2 	bl	800d806 <RDMSubDevice::CalculateChecksum()>
 800d842:	8963      	ldrh	r3, [r4, #10]
 800d844:	4283      	cmp	r3, r0
 800d846:	bf1c      	itt	ne
 800d848:	2300      	movne	r3, #0
 800d84a:	7223      	strbne	r3, [r4, #8]
 800d84c:	7a20      	ldrb	r0, [r4, #8]
 800d84e:	bd10      	pop	{r4, pc}

0800d850 <memcpy.isra.0>:
 800d850:	f008 bc6e 	b.w	8016130 <memcpy>

0800d854 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800d854:	b510      	push	{r4, lr}
 800d856:	6001      	str	r1, [r0, #0]
 800d858:	2100      	movs	r1, #0
 800d85a:	4604      	mov	r4, r0
 800d85c:	6041      	str	r1, [r0, #4]
 800d85e:	2220      	movs	r2, #32
 800d860:	3008      	adds	r0, #8
 800d862:	f008 fc87 	bl	8016174 <memset>
 800d866:	4b03      	ldr	r3, [pc, #12]	; (800d874 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800d868:	62a3      	str	r3, [r4, #40]	; 0x28
 800d86a:	237f      	movs	r3, #127	; 0x7f
 800d86c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800d870:	4620      	mov	r0, r4
 800d872:	bd10      	pop	{r4, pc}
 800d874:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800d878 <RDMDeviceParams::Load()>:
 800d878:	4601      	mov	r1, r0
 800d87a:	6800      	ldr	r0, [r0, #0]
 800d87c:	b130      	cbz	r0, 800d88c <RDMDeviceParams::Load()+0x14>
 800d87e:	b508      	push	{r3, lr}
 800d880:	6803      	ldr	r3, [r0, #0]
 800d882:	3104      	adds	r1, #4
 800d884:	68db      	ldr	r3, [r3, #12]
 800d886:	4798      	blx	r3
 800d888:	2001      	movs	r0, #1
 800d88a:	bd08      	pop	{r3, pc}
 800d88c:	4770      	bx	lr

0800d88e <RDMDeviceParams::Set(RDMDevice*)>:
 800d88e:	6843      	ldr	r3, [r0, #4]
 800d890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d894:	460c      	mov	r4, r1
 800d896:	07d9      	lsls	r1, r3, #31
 800d898:	4605      	mov	r5, r0
 800d89a:	d519      	bpl.n	800d8d0 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 800d89c:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800d8a0:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d8a4:	2e20      	cmp	r6, #32
 800d8a6:	f100 0108 	add.w	r1, r0, #8
 800d8aa:	bf28      	it	cs
 800d8ac:	2620      	movcs	r6, #32
 800d8ae:	b1f3      	cbz	r3, 800d8ee <RDMDeviceParams::Set(RDMDevice*)+0x60>
 800d8b0:	f104 070a 	add.w	r7, r4, #10
 800d8b4:	4638      	mov	r0, r7
 800d8b6:	4632      	mov	r2, r6
 800d8b8:	f7ff ffca 	bl	800d850 <memcpy.isra.0>
 800d8bc:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800d8be:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800d8c2:	b128      	cbz	r0, 800d8d0 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 800d8c4:	6802      	ldr	r2, [r0, #0]
 800d8c6:	4639      	mov	r1, r7
 800d8c8:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800d8cc:	4632      	mov	r2, r6
 800d8ce:	47c0      	blx	r8
 800d8d0:	686b      	ldr	r3, [r5, #4]
 800d8d2:	079a      	lsls	r2, r3, #30
 800d8d4:	bf44      	itt	mi
 800d8d6:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800d8da:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800d8de:	075b      	lsls	r3, r3, #29
 800d8e0:	bf44      	itt	mi
 800d8e2:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800d8e6:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800d8ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8ee:	4632      	mov	r2, r6
 800d8f0:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800d8f4:	f7ff ffac 	bl	800d850 <memcpy.isra.0>
 800d8f8:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800d8fc:	e7e8      	b.n	800d8d0 <RDMDeviceParams::Set(RDMDevice*)+0x42>

0800d8fe <RDMDeviceParams::Dump()>:
 800d8fe:	4770      	bx	lr

0800d900 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800d900:	4770      	bx	lr

0800d902 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800d902:	4770      	bx	lr

0800d904 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d904:	b510      	push	{r4, lr}
 800d906:	4b06      	ldr	r3, [pc, #24]	; (800d920 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800d908:	4604      	mov	r4, r0
 800d90a:	f840 3b88 	str.w	r3, [r0], #136
 800d90e:	f7ff feef 	bl	800d6f0 <RDMSubDevices::~RDMSubDevices()>
 800d912:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800d916:	f7ff fecb 	bl	800d6b0 <RDMSensors::~RDMSensors()>
 800d91a:	4620      	mov	r0, r4
 800d91c:	bd10      	pop	{r4, pc}
 800d91e:	bf00      	nop
 800d920:	0801a1b0 	stmdaeq	r1, {r4, r5, r7, r8, sp, pc}

0800d924 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800d924:	b510      	push	{r4, lr}
 800d926:	4604      	mov	r4, r0
 800d928:	f7ff ffec 	bl	800d904 <RDMDeviceResponder::~RDMDeviceResponder()>
 800d92c:	4620      	mov	r0, r4
 800d92e:	f008 fb09 	bl	8015f44 <operator delete(void*)>
 800d932:	4620      	mov	r0, r4
 800d934:	bd10      	pop	{r4, pc}
	...

0800d938 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800d938:	b570      	push	{r4, r5, r6, lr}
 800d93a:	4604      	mov	r4, r0
 800d93c:	3004      	adds	r0, #4
 800d93e:	460e      	mov	r6, r1
 800d940:	4615      	mov	r5, r2
 800d942:	f000 feed 	bl	800e720 <RDMDevice::RDMDevice()>
 800d946:	4620      	mov	r0, r4
 800d948:	4b21      	ldr	r3, [pc, #132]	; (800d9d0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800d94a:	f840 3b7c 	str.w	r3, [r0], #124
 800d94e:	f000 fcf7 	bl	800e340 <RDMIdentify::RDMIdentify()>
 800d952:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800d956:	f7ff fea3 	bl	800d6a0 <RDMSensors::RDMSensors()>
 800d95a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800d95e:	f7ff febf 	bl	800d6e0 <RDMSubDevices::RDMSubDevices()>
 800d962:	4b1c      	ldr	r3, [pc, #112]	; (800d9d4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800d964:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800d968:	601c      	str	r4, [r3, #0]
 800d96a:	2365      	movs	r3, #101	; 0x65
 800d96c:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800d970:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800d974:	2200      	movs	r2, #0
 800d976:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800d97a:	2301      	movs	r3, #1
 800d97c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800d980:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800d984:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800d988:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800d98c:	428b      	cmp	r3, r1
 800d98e:	d119      	bne.n	800d9c4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800d990:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800d994:	2100      	movs	r1, #0
 800d996:	4293      	cmp	r3, r2
 800d998:	d117      	bne.n	800d9ca <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800d99a:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800d99e:	f7fc fa75 	bl	8009e8c <RDMSoftwareVersion::GetVersion()>
 800d9a2:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800d9a6:	f7fc fa75 	bl	8009e94 <RDMSoftwareVersion::GetVersionLength()>
 800d9aa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d9ae:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800d9b2:	681b      	ldr	r3, [r3, #0]
 800d9b4:	685b      	ldr	r3, [r3, #4]
 800d9b6:	b91b      	cbnz	r3, 800d9c0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800d9b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d9bc:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800d9c0:	4620      	mov	r0, r4
 800d9c2:	bd70      	pop	{r4, r5, r6, pc}
 800d9c4:	f803 2b01 	strb.w	r2, [r3], #1
 800d9c8:	e7e0      	b.n	800d98c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800d9ca:	f803 1b01 	strb.w	r1, [r3], #1
 800d9ce:	e7e2      	b.n	800d996 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800d9d0:	0801a1b0 	stmdaeq	r1, {r4, r5, r7, r8, sp, pc}
 800d9d4:	20000800 	andcs	r0, r0, r0, lsl #16

0800d9d8 <RDMDeviceResponder::Init()>:
 800d9d8:	b570      	push	{r4, r5, r6, lr}
 800d9da:	2301      	movs	r3, #1
 800d9dc:	4604      	mov	r4, r0
 800d9de:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800d9e2:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800d9e6:	2a20      	cmp	r2, #32
 800d9e8:	bf28      	it	cs
 800d9ea:	2220      	movcs	r2, #32
 800d9ec:	3055      	adds	r0, #85	; 0x55
 800d9ee:	f104 010e 	add.w	r1, r4, #14
 800d9f2:	4613      	mov	r3, r2
 800d9f4:	3b01      	subs	r3, #1
 800d9f6:	d25d      	bcs.n	800dab4 <RDMDeviceResponder::Init()+0xdc>
 800d9f8:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800d9fa:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800d9fe:	b110      	cbz	r0, 800da06 <RDMDeviceResponder::Init()+0x2e>
 800da00:	6803      	ldr	r3, [r0, #0]
 800da02:	689b      	ldr	r3, [r3, #8]
 800da04:	4798      	blx	r3
 800da06:	f06f 050c 	mvn.w	r5, #12
 800da0a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800da0e:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800da12:	f104 020d 	add.w	r2, r4, #13
 800da16:	1b2d      	subs	r5, r5, r4
 800da18:	18a9      	adds	r1, r5, r2
 800da1a:	4288      	cmp	r0, r1
 800da1c:	d84f      	bhi.n	800dabe <RDMDeviceResponder::Init()+0xe6>
 800da1e:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800da22:	f7fc fa39 	bl	8009e98 <RDMSoftwareVersion::GetVersionId()>
 800da26:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800da2a:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800da2e:	2201      	movs	r2, #1
 800da30:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800da34:	2200      	movs	r2, #0
 800da36:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800da3a:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800da3e:	0a1a      	lsrs	r2, r3, #8
 800da40:	0e03      	lsrs	r3, r0, #24
 800da42:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800da46:	0c03      	lsrs	r3, r0, #16
 800da48:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800da4c:	0a03      	lsrs	r3, r0, #8
 800da4e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800da52:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800da56:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800da5a:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800da5e:	681b      	ldr	r3, [r3, #0]
 800da60:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800da64:	685d      	ldr	r5, [r3, #4]
 800da66:	bb7d      	cbnz	r5, 800dac8 <RDMDeviceResponder::Init()+0xf0>
 800da68:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800da6c:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800da70:	0a03      	lsrs	r3, r0, #8
 800da72:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800da76:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800da7a:	2301      	movs	r3, #1
 800da7c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800da80:	0a33      	lsrs	r3, r6, #8
 800da82:	b2c0      	uxtb	r0, r0
 800da84:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800da88:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800da8c:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800da90:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800da94:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800da98:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800da9c:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800daa0:	4293      	cmp	r3, r2
 800daa2:	d12a      	bne.n	800dafa <RDMDeviceResponder::Init()+0x122>
 800daa4:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800daa8:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800daac:	4413      	add	r3, r2
 800daae:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800dab2:	bd70      	pop	{r4, r5, r6, pc}
 800dab4:	f810 5b01 	ldrb.w	r5, [r0], #1
 800dab8:	f800 5c48 	strb.w	r5, [r0, #-72]
 800dabc:	e79a      	b.n	800d9f4 <RDMDeviceResponder::Init()+0x1c>
 800dabe:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800dac2:	440b      	add	r3, r1
 800dac4:	b29b      	uxth	r3, r3
 800dac6:	e7a7      	b.n	800da18 <RDMDeviceResponder::Init()+0x40>
 800dac8:	682b      	ldr	r3, [r5, #0]
 800daca:	4628      	mov	r0, r5
 800dacc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dace:	4798      	blx	r3
 800dad0:	0a00      	lsrs	r0, r0, #8
 800dad2:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800dad6:	682b      	ldr	r3, [r5, #0]
 800dad8:	4628      	mov	r0, r5
 800dada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dadc:	4798      	blx	r3
 800dade:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800dae2:	682b      	ldr	r3, [r5, #0]
 800dae4:	4628      	mov	r0, r5
 800dae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dae8:	4798      	blx	r3
 800daea:	0a00      	lsrs	r0, r0, #8
 800daec:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800daf0:	682b      	ldr	r3, [r5, #0]
 800daf2:	4628      	mov	r0, r5
 800daf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800daf6:	4798      	blx	r3
 800daf8:	e7bf      	b.n	800da7a <RDMDeviceResponder::Init()+0xa2>
 800dafa:	f813 1b01 	ldrb.w	r1, [r3], #1
 800dafe:	7499      	strb	r1, [r3, #18]
 800db00:	e7ce      	b.n	800daa0 <RDMDeviceResponder::Init()+0xc8>
	...

0800db04 <RDMDeviceResponder::Print()>:
 800db04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800db06:	4604      	mov	r4, r0
 800db08:	3004      	adds	r0, #4
 800db0a:	f000 fe7b 	bl	800e804 <RDMDevice::Print()>
 800db0e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800db12:	481c      	ldr	r0, [pc, #112]	; (800db84 <RDMDeviceResponder::Print()+0x80>)
 800db14:	681d      	ldr	r5, [r3, #0]
 800db16:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800db18:	f7fc fcce 	bl	800a4b8 <printf>
 800db1c:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800db20:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800db24:	4818      	ldr	r0, [pc, #96]	; (800db88 <RDMDeviceResponder::Print()+0x84>)
 800db26:	f7fc fcc7 	bl	800a4b8 <printf>
 800db2a:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800db2e:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800db32:	4816      	ldr	r0, [pc, #88]	; (800db8c <RDMDeviceResponder::Print()+0x88>)
 800db34:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db38:	f7fc fcbe 	bl	800a4b8 <printf>
 800db3c:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800db40:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800db44:	4812      	ldr	r0, [pc, #72]	; (800db90 <RDMDeviceResponder::Print()+0x8c>)
 800db46:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db4a:	3508      	adds	r5, #8
 800db4c:	f7fc fcb4 	bl	800a4b8 <printf>
 800db50:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800db54:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800db58:	9500      	str	r5, [sp, #0]
 800db5a:	b2f3      	uxtb	r3, r6
 800db5c:	480d      	ldr	r0, [pc, #52]	; (800db94 <RDMDeviceResponder::Print()+0x90>)
 800db5e:	f7fc fcab 	bl	800a4b8 <printf>
 800db62:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800db66:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800db6a:	480b      	ldr	r0, [pc, #44]	; (800db98 <RDMDeviceResponder::Print()+0x94>)
 800db6c:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800db70:	f7fc fca2 	bl	800a4b8 <printf>
 800db74:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800db78:	4808      	ldr	r0, [pc, #32]	; (800db9c <RDMDeviceResponder::Print()+0x98>)
 800db7a:	b002      	add	sp, #8
 800db7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db80:	f7fc bc9a 	b.w	800a4b8 <printf>
 800db84:	0801a0f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sp, pc}
 800db88:	0801a10e 	stmdaeq	r1, {r1, r2, r3, r8, sp, pc}
 800db8c:	0801a127 	stmdaeq	r1, {r0, r1, r2, r5, r8, sp, pc}
 800db90:	0801a13f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sp, pc}
 800db94:	0801a157 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, sp, pc}
 800db98:	0801a175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sp, pc}
 800db9c:	0801a18d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sp, pc}

0800dba0 <memcmp>:
 800dba0:	b510      	push	{r4, lr}
 800dba2:	3901      	subs	r1, #1
 800dba4:	4402      	add	r2, r0
 800dba6:	4290      	cmp	r0, r2
 800dba8:	d101      	bne.n	800dbae <memcmp+0xe>
 800dbaa:	2000      	movs	r0, #0
 800dbac:	e005      	b.n	800dbba <memcmp+0x1a>
 800dbae:	7803      	ldrb	r3, [r0, #0]
 800dbb0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800dbb4:	42a3      	cmp	r3, r4
 800dbb6:	d001      	beq.n	800dbbc <memcmp+0x1c>
 800dbb8:	1b18      	subs	r0, r3, r4
 800dbba:	bd10      	pop	{r4, pc}
 800dbbc:	3001      	adds	r0, #1
 800dbbe:	e7f2      	b.n	800dba6 <memcmp+0x6>

0800dbc0 <memcpy.isra.0>:
 800dbc0:	3801      	subs	r0, #1
 800dbc2:	440a      	add	r2, r1
 800dbc4:	4291      	cmp	r1, r2
 800dbc6:	d100      	bne.n	800dbca <memcpy.isra.0+0xa>
 800dbc8:	4770      	bx	lr
 800dbca:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dbce:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dbd2:	e7f7      	b.n	800dbc4 <memcpy.isra.0+0x4>

0800dbd4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800dbd4:	b570      	push	{r4, r5, r6, lr}
 800dbd6:	790d      	ldrb	r5, [r1, #4]
 800dbd8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800dbdc:	6809      	ldr	r1, [r1, #0]
 800dbde:	2d20      	cmp	r5, #32
 800dbe0:	4604      	mov	r4, r0
 800dbe2:	bf28      	it	cs
 800dbe4:	2520      	movcs	r5, #32
 800dbe6:	b18b      	cbz	r3, 800dc0c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800dbe8:	f100 060a 	add.w	r6, r0, #10
 800dbec:	4630      	mov	r0, r6
 800dbee:	462a      	mov	r2, r5
 800dbf0:	f7ff ffe6 	bl	800dbc0 <memcpy.isra.0>
 800dbf4:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800dbf6:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800dbfa:	b168      	cbz	r0, 800dc18 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 800dbfc:	6802      	ldr	r2, [r0, #0]
 800dbfe:	6894      	ldr	r4, [r2, #8]
 800dc00:	4631      	mov	r1, r6
 800dc02:	462a      	mov	r2, r5
 800dc04:	4623      	mov	r3, r4
 800dc06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc0a:	4718      	bx	r3
 800dc0c:	462a      	mov	r2, r5
 800dc0e:	3051      	adds	r0, #81	; 0x51
 800dc10:	f7ff ffd6 	bl	800dbc0 <memcpy.isra.0>
 800dc14:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800dc18:	bd70      	pop	{r4, r5, r6, pc}

0800dc1a <RDMDeviceResponder::SetFactoryDefaults()>:
 800dc1a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dc1c:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800dc20:	4604      	mov	r4, r0
 800dc22:	9300      	str	r3, [sp, #0]
 800dc24:	3004      	adds	r0, #4
 800dc26:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 800dc2a:	f88d 3004 	strb.w	r3, [sp, #4]
 800dc2e:	4669      	mov	r1, sp
 800dc30:	f7ff ffd0 	bl	800dbd4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800dc34:	f06f 050c 	mvn.w	r5, #12
 800dc38:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800dc3c:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800dc40:	f104 020d 	add.w	r2, r4, #13
 800dc44:	1b2d      	subs	r5, r5, r4
 800dc46:	18a9      	adds	r1, r5, r2
 800dc48:	4288      	cmp	r0, r1
 800dc4a:	d865      	bhi.n	800dd18 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800dc4c:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800dc50:	2301      	movs	r3, #1
 800dc52:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800dc56:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800dc5a:	681b      	ldr	r3, [r3, #0]
 800dc5c:	685d      	ldr	r5, [r3, #4]
 800dc5e:	b1f5      	cbz	r5, 800dc9e <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800dc60:	682b      	ldr	r3, [r5, #0]
 800dc62:	4628      	mov	r0, r5
 800dc64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc66:	4798      	blx	r3
 800dc68:	0a00      	lsrs	r0, r0, #8
 800dc6a:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800dc6e:	682b      	ldr	r3, [r5, #0]
 800dc70:	4628      	mov	r0, r5
 800dc72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc74:	4798      	blx	r3
 800dc76:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800dc7a:	682b      	ldr	r3, [r5, #0]
 800dc7c:	4628      	mov	r0, r5
 800dc7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc80:	4798      	blx	r3
 800dc82:	0a00      	lsrs	r0, r0, #8
 800dc84:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800dc88:	682b      	ldr	r3, [r5, #0]
 800dc8a:	4628      	mov	r0, r5
 800dc8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc8e:	4798      	blx	r3
 800dc90:	6823      	ldr	r3, [r4, #0]
 800dc92:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800dc96:	689b      	ldr	r3, [r3, #8]
 800dc98:	4629      	mov	r1, r5
 800dc9a:	4620      	mov	r0, r4
 800dc9c:	4798      	blx	r3
 800dc9e:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800dca2:	1e6b      	subs	r3, r5, #1
 800dca4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800dca8:	d218      	bcs.n	800dcdc <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800dcaa:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800dcae:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800dcb2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800dcb6:	3b01      	subs	r3, #1
 800dcb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800dcbc:	6858      	ldr	r0, [r3, #4]
 800dcbe:	b168      	cbz	r0, 800dcdc <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800dcc0:	6803      	ldr	r3, [r0, #0]
 800dcc2:	4629      	mov	r1, r5
 800dcc4:	6a1b      	ldr	r3, [r3, #32]
 800dcc6:	4798      	blx	r3
 800dcc8:	b120      	cbz	r0, 800dcd4 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800dcca:	0a2b      	lsrs	r3, r5, #8
 800dccc:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800dcd0:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800dcd4:	6823      	ldr	r3, [r4, #0]
 800dcd6:	4620      	mov	r0, r4
 800dcd8:	68db      	ldr	r3, [r3, #12]
 800dcda:	4798      	blx	r3
 800dcdc:	2213      	movs	r2, #19
 800dcde:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800dce2:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800dce6:	f7ff ff6b 	bl	800dbc0 <memcpy.isra.0>
 800dcea:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800dcee:	f7ff fd49 	bl	800d784 <RDMSubDevices::SetFactoryDefaults()>
 800dcf2:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800dcf6:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800dcfa:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800dcfe:	4413      	add	r3, r2
 800dd00:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800dd04:	2301      	movs	r3, #1
 800dd06:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800dd0a:	b150      	cbz	r0, 800dd22 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800dd0c:	6803      	ldr	r3, [r0, #0]
 800dd0e:	689b      	ldr	r3, [r3, #8]
 800dd10:	b003      	add	sp, #12
 800dd12:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dd16:	4718      	bx	r3
 800dd18:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800dd1c:	440b      	add	r3, r1
 800dd1e:	b29b      	uxth	r3, r3
 800dd20:	e791      	b.n	800dc46 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800dd22:	b003      	add	sp, #12
 800dd24:	bd30      	pop	{r4, r5, pc}

0800dd26 <RDMHandler::RDMHandler(bool)>:
 800dd26:	2200      	movs	r2, #0
 800dd28:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800dd2c:	7001      	strb	r1, [r0, #0]
 800dd2e:	7042      	strb	r2, [r0, #1]
 800dd30:	4770      	bx	lr

0800dd32 <RDMHandler::HandleString(char const*, unsigned int)>:
 800dd32:	6883      	ldr	r3, [r0, #8]
 800dd34:	f803 2f17 	strb.w	r2, [r3, #23]!
 800dd38:	440a      	add	r2, r1
 800dd3a:	4291      	cmp	r1, r2
 800dd3c:	d100      	bne.n	800dd40 <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800dd3e:	4770      	bx	lr
 800dd40:	f811 0b01 	ldrb.w	r0, [r1], #1
 800dd44:	f803 0f01 	strb.w	r0, [r3, #1]!
 800dd48:	e7f7      	b.n	800dd3a <RDMHandler::HandleString(char const*, unsigned int)+0x8>
	...

0800dd4c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800dd4c:	b570      	push	{r4, r5, r6, lr}
 800dd4e:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800dd52:	25cc      	movs	r5, #204	; 0xcc
 800dd54:	701d      	strb	r5, [r3, #0]
 800dd56:	7825      	ldrb	r5, [r4, #0]
 800dd58:	705d      	strb	r5, [r3, #1]
 800dd5a:	7ba5      	ldrb	r5, [r4, #14]
 800dd5c:	73dd      	strb	r5, [r3, #15]
 800dd5e:	2500      	movs	r5, #0
 800dd60:	745d      	strb	r5, [r3, #17]
 800dd62:	7c65      	ldrb	r5, [r4, #17]
 800dd64:	749d      	strb	r5, [r3, #18]
 800dd66:	7ca5      	ldrb	r5, [r4, #18]
 800dd68:	74dd      	strb	r5, [r3, #19]
 800dd6a:	7ce5      	ldrb	r5, [r4, #19]
 800dd6c:	3501      	adds	r5, #1
 800dd6e:	751d      	strb	r5, [r3, #20]
 800dd70:	7d25      	ldrb	r5, [r4, #20]
 800dd72:	755d      	strb	r5, [r3, #21]
 800dd74:	7d65      	ldrb	r5, [r4, #21]
 800dd76:	759d      	strb	r5, [r3, #22]
 800dd78:	b119      	cbz	r1, 800dd82 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800dd7a:	1e4d      	subs	r5, r1, #1
 800dd7c:	2d01      	cmp	r5, #1
 800dd7e:	d921      	bls.n	800ddc4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800dd80:	bd70      	pop	{r4, r5, r6, pc}
 800dd82:	7dda      	ldrb	r2, [r3, #23]
 800dd84:	7419      	strb	r1, [r3, #16]
 800dd86:	3218      	adds	r2, #24
 800dd88:	709a      	strb	r2, [r3, #2]
 800dd8a:	4a15      	ldr	r2, [pc, #84]	; (800dde0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800dd8c:	6812      	ldr	r2, [r2, #0]
 800dd8e:	1de1      	adds	r1, r4, #7
 800dd90:	1c9d      	adds	r5, r3, #2
 800dd92:	3203      	adds	r2, #3
 800dd94:	340d      	adds	r4, #13
 800dd96:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800dd9a:	f805 6f01 	strb.w	r6, [r5, #1]!
 800dd9e:	42a1      	cmp	r1, r4
 800dda0:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800dda4:	71ae      	strb	r6, [r5, #6]
 800dda6:	d1f6      	bne.n	800dd96 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800dda8:	2200      	movs	r2, #0
 800ddaa:	6884      	ldr	r4, [r0, #8]
 800ddac:	7899      	ldrb	r1, [r3, #2]
 800ddae:	4613      	mov	r3, r2
 800ddb0:	428a      	cmp	r2, r1
 800ddb2:	eb04 0502 	add.w	r5, r4, r2
 800ddb6:	d30e      	bcc.n	800ddd6 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800ddb8:	0a1a      	lsrs	r2, r3, #8
 800ddba:	702a      	strb	r2, [r5, #0]
 800ddbc:	6882      	ldr	r2, [r0, #8]
 800ddbe:	440a      	add	r2, r1
 800ddc0:	7053      	strb	r3, [r2, #1]
 800ddc2:	e7dd      	b.n	800dd80 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800ddc4:	7419      	strb	r1, [r3, #16]
 800ddc6:	2102      	movs	r1, #2
 800ddc8:	251a      	movs	r5, #26
 800ddca:	75d9      	strb	r1, [r3, #23]
 800ddcc:	0a11      	lsrs	r1, r2, #8
 800ddce:	709d      	strb	r5, [r3, #2]
 800ddd0:	7619      	strb	r1, [r3, #24]
 800ddd2:	765a      	strb	r2, [r3, #25]
 800ddd4:	e7d9      	b.n	800dd8a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800ddd6:	5ca5      	ldrb	r5, [r4, r2]
 800ddd8:	442b      	add	r3, r5
 800ddda:	b29b      	uxth	r3, r3
 800dddc:	3201      	adds	r2, #1
 800ddde:	e7e7      	b.n	800ddb0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800dde0:	20000800 	andcs	r0, r0, r0, lsl #16

0800dde4 <RDMHandler::RespondMessageAck()>:
 800dde4:	6843      	ldr	r3, [r0, #4]
 800dde6:	7d9a      	ldrb	r2, [r3, #22]
 800dde8:	b90a      	cbnz	r2, 800ddee <RDMHandler::RespondMessageAck()+0xa>
 800ddea:	2218      	movs	r2, #24
 800ddec:	705a      	strb	r2, [r3, #1]
 800ddee:	2200      	movs	r2, #0
 800ddf0:	4611      	mov	r1, r2
 800ddf2:	f7ff bfab 	b.w	800dd4c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800ddf8 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800ddf8:	b538      	push	{r3, r4, r5, lr}
 800ddfa:	4b18      	ldr	r3, [pc, #96]	; (800de5c <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800ddfc:	4605      	mov	r5, r0
 800ddfe:	681c      	ldr	r4, [r3, #0]
 800de00:	b349      	cbz	r1, 800de56 <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800de02:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800de06:	f7ff fc8b 	bl	800d720 <RDMSubDevices::GetInfo(unsigned short)>
 800de0a:	b1b8      	cbz	r0, 800de3c <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800de0c:	8803      	ldrh	r3, [r0, #0]
 800de0e:	0a1b      	lsrs	r3, r3, #8
 800de10:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800de14:	8803      	ldrh	r3, [r0, #0]
 800de16:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800de1a:	7903      	ldrb	r3, [r0, #4]
 800de1c:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800de20:	7943      	ldrb	r3, [r0, #5]
 800de22:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800de26:	8843      	ldrh	r3, [r0, #2]
 800de28:	0a1b      	lsrs	r3, r3, #8
 800de2a:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800de2e:	8843      	ldrh	r3, [r0, #2]
 800de30:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800de34:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800de38:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800de3c:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800de40:	68a8      	ldr	r0, [r5, #8]
 800de42:	2213      	movs	r2, #19
 800de44:	75c2      	strb	r2, [r0, #23]
 800de46:	3018      	adds	r0, #24
 800de48:	f7ff feba 	bl	800dbc0 <memcpy.isra.0>
 800de4c:	4628      	mov	r0, r5
 800de4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de52:	f7ff bfc7 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800de56:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800de5a:	e7f1      	b.n	800de40 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800de5c:	20000800 	andcs	r0, r0, r0, lsl #16

0800de60 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800de60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de62:	6886      	ldr	r6, [r0, #8]
 800de64:	2301      	movs	r3, #1
 800de66:	75f3      	strb	r3, [r6, #23]
 800de68:	4b1c      	ldr	r3, [pc, #112]	; (800dedc <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800de6a:	681c      	ldr	r4, [r3, #0]
 800de6c:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800de70:	4605      	mov	r5, r0
 800de72:	b37b      	cbz	r3, 800ded4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800de74:	f06f 0c0c 	mvn.w	ip, #12
 800de78:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800de7c:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800de80:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800de84:	f104 020d 	add.w	r2, r4, #13
 800de88:	ebac 0c04 	sub.w	ip, ip, r4
 800de8c:	eb0c 0702 	add.w	r7, ip, r2
 800de90:	4287      	cmp	r7, r0
 800de92:	d30a      	bcc.n	800deaa <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800de94:	4299      	cmp	r1, r3
 800de96:	d00d      	beq.n	800deb4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800de98:	2300      	movs	r3, #0
 800de9a:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800de9e:	7633      	strb	r3, [r6, #24]
 800dea0:	4628      	mov	r0, r5
 800dea2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dea6:	f7ff bf9d 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800deaa:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800deae:	443b      	add	r3, r7
 800deb0:	b29b      	uxth	r3, r3
 800deb2:	e7eb      	b.n	800de8c <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800deb4:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800deb8:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800debc:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800dec0:	440b      	add	r3, r1
 800dec2:	429a      	cmp	r2, r3
 800dec4:	d1e8      	bne.n	800de98 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800dec6:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800deca:	f7ff fc48 	bl	800d75e <RDMSubDevices::GetFactoryDefaults()>
 800dece:	4603      	mov	r3, r0
 800ded0:	2800      	cmp	r0, #0
 800ded2:	d0e2      	beq.n	800de9a <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800ded4:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ded8:	e7e1      	b.n	800de9e <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800deda:	bf00      	nop
 800dedc:	20000800 	andcs	r0, r0, r0, lsl #16

0800dee0 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800dee0:	b510      	push	{r4, lr}
 800dee2:	4905      	ldr	r1, [pc, #20]	; (800def8 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800dee4:	4604      	mov	r4, r0
 800dee6:	220a      	movs	r2, #10
 800dee8:	f7ff ff23 	bl	800dd32 <RDMHandler::HandleString(char const*, unsigned int)>
 800deec:	4620      	mov	r0, r4
 800deee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800def2:	f7ff bf77 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800def6:	bf00      	nop
 800def8:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}

0800defc <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800defc:	b510      	push	{r4, lr}
 800defe:	4b06      	ldr	r3, [pc, #24]	; (800df18 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800df00:	6819      	ldr	r1, [r3, #0]
 800df02:	4604      	mov	r4, r0
 800df04:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800df08:	312f      	adds	r1, #47	; 0x2f
 800df0a:	f7ff ff12 	bl	800dd32 <RDMHandler::HandleString(char const*, unsigned int)>
 800df0e:	4620      	mov	r0, r4
 800df10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df14:	f7ff bf66 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800df18:	20000800 	andcs	r0, r0, r0, lsl #16

0800df1c <RDMHandler::GetDeviceLabel(unsigned short)>:
 800df1c:	4b0d      	ldr	r3, [pc, #52]	; (800df54 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800df1e:	b513      	push	{r0, r1, r4, lr}
 800df20:	4604      	mov	r4, r0
 800df22:	6818      	ldr	r0, [r3, #0]
 800df24:	b171      	cbz	r1, 800df44 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800df26:	466a      	mov	r2, sp
 800df28:	3088      	adds	r0, #136	; 0x88
 800df2a:	f7ff fc01 	bl	800d730 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800df2e:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800df32:	9900      	ldr	r1, [sp, #0]
 800df34:	4620      	mov	r0, r4
 800df36:	f7ff fefc 	bl	800dd32 <RDMHandler::HandleString(char const*, unsigned int)>
 800df3a:	4620      	mov	r0, r4
 800df3c:	f7ff ff52 	bl	800dde4 <RDMHandler::RespondMessageAck()>
 800df40:	b002      	add	sp, #8
 800df42:	bd10      	pop	{r4, pc}
 800df44:	f100 030e 	add.w	r3, r0, #14
 800df48:	9300      	str	r3, [sp, #0]
 800df4a:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800df4e:	f88d 3004 	strb.w	r3, [sp, #4]
 800df52:	e7ec      	b.n	800df2e <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800df54:	20000800 	andcs	r0, r0, r0, lsl #16

0800df58 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800df58:	6883      	ldr	r3, [r0, #8]
 800df5a:	2201      	movs	r2, #1
 800df5c:	75da      	strb	r2, [r3, #23]
 800df5e:	4a02      	ldr	r2, [pc, #8]	; (800df68 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800df60:	7812      	ldrb	r2, [r2, #0]
 800df62:	761a      	strb	r2, [r3, #24]
 800df64:	f7ff bf3e 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800df68:	20000804 	andcs	r0, r0, r4, lsl #16

0800df6c <RDMHandler::RespondMessageNack(unsigned short)>:
 800df6c:	460a      	mov	r2, r1
 800df6e:	2102      	movs	r1, #2
 800df70:	f7ff beec 	b.w	800dd4c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800df74 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800df74:	b510      	push	{r4, lr}
 800df76:	6843      	ldr	r3, [r0, #4]
 800df78:	7d9a      	ldrb	r2, [r3, #22]
 800df7a:	2a01      	cmp	r2, #1
 800df7c:	4604      	mov	r4, r0
 800df7e:	d004      	beq.n	800df8a <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800df80:	2101      	movs	r1, #1
 800df82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df86:	f7ff bff1 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800df8a:	7ddb      	ldrb	r3, [r3, #23]
 800df8c:	2b01      	cmp	r3, #1
 800df8e:	d003      	beq.n	800df98 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800df90:	2bff      	cmp	r3, #255	; 0xff
 800df92:	d001      	beq.n	800df98 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800df94:	2106      	movs	r1, #6
 800df96:	e7f4      	b.n	800df82 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800df98:	68a2      	ldr	r2, [r4, #8]
 800df9a:	2100      	movs	r1, #0
 800df9c:	2bff      	cmp	r3, #255	; 0xff
 800df9e:	75d1      	strb	r1, [r2, #23]
 800dfa0:	d102      	bne.n	800dfa8 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800dfa2:	2104      	movs	r1, #4
 800dfa4:	4620      	mov	r0, r4
 800dfa6:	e7ec      	b.n	800df82 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800dfa8:	4b03      	ldr	r3, [pc, #12]	; (800dfb8 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800dfaa:	6818      	ldr	r0, [r3, #0]
 800dfac:	f007 ff30 	bl	8015e10 <Hardware::Reboot()>
 800dfb0:	2800      	cmp	r0, #0
 800dfb2:	d0f6      	beq.n	800dfa2 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800dfb4:	bd10      	pop	{r4, pc}
 800dfb6:	bf00      	nop
 800dfb8:	2000fda4 	andcs	pc, r0, r4, lsr #27

0800dfbc <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800dfbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfbe:	6843      	ldr	r3, [r0, #4]
 800dfc0:	460d      	mov	r5, r1
 800dfc2:	7d99      	ldrb	r1, [r3, #22]
 800dfc4:	2901      	cmp	r1, #1
 800dfc6:	4604      	mov	r4, r0
 800dfc8:	d004      	beq.n	800dfd4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800dfca:	2101      	movs	r1, #1
 800dfcc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dfd0:	f7ff bfcc 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800dfd4:	7ddb      	ldrb	r3, [r3, #23]
 800dfd6:	2b01      	cmp	r3, #1
 800dfd8:	d901      	bls.n	800dfde <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800dfda:	2106      	movs	r1, #6
 800dfdc:	e7f6      	b.n	800dfcc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800dfde:	4a12      	ldr	r2, [pc, #72]	; (800e028 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800dfe0:	4f12      	ldr	r7, [pc, #72]	; (800e02c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800dfe2:	6816      	ldr	r6, [r2, #0]
 800dfe4:	4a12      	ldr	r2, [pc, #72]	; (800e030 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800dfe6:	6810      	ldr	r0, [r2, #0]
 800dfe8:	4a12      	ldr	r2, [pc, #72]	; (800e034 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800dfea:	b983      	cbnz	r3, 800e00e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800dfec:	2102      	movs	r1, #2
 800dfee:	7013      	strb	r3, [r2, #0]
 800dff0:	f007 fdda 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800dff4:	7839      	ldrb	r1, [r7, #0]
 800dff6:	b111      	cbz	r1, 800dffe <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800dff8:	4630      	mov	r0, r6
 800dffa:	f000 f9a8 	bl	800e34e <RDMIdentify::Off(rdm::identify::Mode)>
 800dffe:	b98d      	cbnz	r5, 800e024 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800e000:	68a3      	ldr	r3, [r4, #8]
 800e002:	75dd      	strb	r5, [r3, #23]
 800e004:	4620      	mov	r0, r4
 800e006:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e00a:	f7ff beeb 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e00e:	7011      	strb	r1, [r2, #0]
 800e010:	2104      	movs	r1, #4
 800e012:	f007 fdc9 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 800e016:	7839      	ldrb	r1, [r7, #0]
 800e018:	2900      	cmp	r1, #0
 800e01a:	d0f0      	beq.n	800dffe <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800e01c:	4630      	mov	r0, r6
 800e01e:	f000 f995 	bl	800e34c <RDMIdentify::On(rdm::identify::Mode)>
 800e022:	e7ec      	b.n	800dffe <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800e024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e026:	bf00      	nop
 800e028:	20000808 	andcs	r0, r0, r8, lsl #16
 800e02c:	20000805 	andcs	r0, r0, r5, lsl #16
 800e030:	2000fda0 	andcs	pc, r0, r0, lsr #27
 800e034:	20000804 	andcs	r0, r0, r4, lsl #16

0800e038 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800e038:	b538      	push	{r3, r4, r5, lr}
 800e03a:	6843      	ldr	r3, [r0, #4]
 800e03c:	7d9b      	ldrb	r3, [r3, #22]
 800e03e:	4604      	mov	r4, r0
 800e040:	460d      	mov	r5, r1
 800e042:	b123      	cbz	r3, 800e04e <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800e044:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e048:	2101      	movs	r1, #1
 800e04a:	f7ff bf8f 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e04e:	4b06      	ldr	r3, [pc, #24]	; (800e068 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800e050:	6818      	ldr	r0, [r3, #0]
 800e052:	f7ff fde2 	bl	800dc1a <RDMDeviceResponder::SetFactoryDefaults()>
 800e056:	b935      	cbnz	r5, 800e066 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800e058:	68a3      	ldr	r3, [r4, #8]
 800e05a:	75dd      	strb	r5, [r3, #23]
 800e05c:	4620      	mov	r0, r4
 800e05e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e062:	f7ff bebf 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e066:	bd38      	pop	{r3, r4, r5, pc}
 800e068:	20000800 	andcs	r0, r0, r0, lsl #16

0800e06c <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800e06c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e06e:	6845      	ldr	r5, [r0, #4]
 800e070:	7dab      	ldrb	r3, [r5, #22]
 800e072:	2b20      	cmp	r3, #32
 800e074:	460e      	mov	r6, r1
 800e076:	4604      	mov	r4, r0
 800e078:	4611      	mov	r1, r2
 800e07a:	d905      	bls.n	800e088 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800e07c:	2101      	movs	r1, #1
 800e07e:	b002      	add	sp, #8
 800e080:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e084:	f7ff bf72 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e088:	4a0d      	ldr	r2, [pc, #52]	; (800e0c0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800e08a:	6810      	ldr	r0, [r2, #0]
 800e08c:	f105 0217 	add.w	r2, r5, #23
 800e090:	b159      	cbz	r1, 800e0aa <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800e092:	3088      	adds	r0, #136	; 0x88
 800e094:	f7ff fb55 	bl	800d742 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800e098:	b97e      	cbnz	r6, 800e0ba <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800e09a:	68a3      	ldr	r3, [r4, #8]
 800e09c:	4620      	mov	r0, r4
 800e09e:	75de      	strb	r6, [r3, #23]
 800e0a0:	b002      	add	sp, #8
 800e0a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0a6:	f7ff be9d 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e0aa:	4669      	mov	r1, sp
 800e0ac:	3004      	adds	r0, #4
 800e0ae:	9200      	str	r2, [sp, #0]
 800e0b0:	f88d 3004 	strb.w	r3, [sp, #4]
 800e0b4:	f7ff fd8e 	bl	800dbd4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e0b8:	e7ee      	b.n	800e098 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800e0ba:	b002      	add	sp, #8
 800e0bc:	bd70      	pop	{r4, r5, r6, pc}
 800e0be:	bf00      	nop
 800e0c0:	20000800 	andcs	r0, r0, r0, lsl #16

0800e0c4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800e0c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0c8:	4616      	mov	r6, r2
 800e0ca:	4604      	mov	r4, r0
 800e0cc:	f006 00ef 	and.w	r0, r6, #239	; 0xef
 800e0d0:	2700      	movs	r7, #0
 800e0d2:	2820      	cmp	r0, #32
 800e0d4:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800e0d8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800e0dc:	46be      	mov	lr, r7
 800e0de:	d005      	beq.n	800e0ec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
 800e0e0:	2105      	movs	r1, #5
 800e0e2:	4620      	mov	r0, r4
 800e0e4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0e8:	f7ff bf40 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e0ec:	482b      	ldr	r0, [pc, #172]	; (800e19c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd8>)
 800e0ee:	6800      	ldr	r0, [r0, #0]
 800e0f0:	8880      	ldrh	r0, [r0, #4]
 800e0f2:	4290      	cmp	r0, r2
 800e0f4:	d205      	bcs.n	800e102 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800e0f6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e0fa:	4282      	cmp	r2, r0
 800e0fc:	d001      	beq.n	800e102 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3e>
 800e0fe:	2109      	movs	r1, #9
 800e100:	e7ef      	b.n	800e0e2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e102:	4d27      	ldr	r5, [pc, #156]	; (800e1a0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800e104:	f04f 0c14 	mov.w	ip, #20
 800e108:	2000      	movs	r0, #0
 800e10a:	f8b5 9000 	ldrh.w	r9, [r5]
 800e10e:	4599      	cmp	r9, r3
 800e110:	bf02      	ittt	eq
 800e112:	7daf      	ldrbeq	r7, [r5, #22]
 800e114:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800e118:	4628      	moveq	r0, r5
 800e11a:	f1bc 0c01 	subs.w	ip, ip, #1
 800e11e:	f105 0518 	add.w	r5, r5, #24
 800e122:	d1f2      	bne.n	800e10a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x46>
 800e124:	b908      	cbnz	r0, 800e12a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x66>
 800e126:	2100      	movs	r1, #0
 800e128:	e7db      	b.n	800e0e2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e12a:	7823      	ldrb	r3, [r4, #0]
 800e12c:	b193      	cbz	r3, 800e154 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
 800e12e:	2f00      	cmp	r7, #0
 800e130:	d0f9      	beq.n	800e126 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e132:	2e20      	cmp	r6, #32
 800e134:	d11f      	bne.n	800e176 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800e136:	bb71      	cbnz	r1, 800e196 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd2>
 800e138:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e13c:	429a      	cmp	r2, r3
 800e13e:	d0de      	beq.n	800e0fe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800e140:	6843      	ldr	r3, [r0, #4]
 800e142:	b913      	cbnz	r3, 800e14a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x86>
 800e144:	6881      	ldr	r1, [r0, #8]
 800e146:	07cd      	lsls	r5, r1, #31
 800e148:	d5ca      	bpl.n	800e0e0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e14a:	7d01      	ldrb	r1, [r0, #20]
 800e14c:	4541      	cmp	r1, r8
 800e14e:	d005      	beq.n	800e15c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x98>
 800e150:	2101      	movs	r1, #1
 800e152:	e7c6      	b.n	800e0e2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1e>
 800e154:	f1be 0f00 	cmp.w	lr, #0
 800e158:	d1eb      	bne.n	800e132 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6e>
 800e15a:	e7e4      	b.n	800e126 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e15c:	6881      	ldr	r1, [r0, #8]
 800e15e:	104d      	asrs	r5, r1, #1
 800e160:	eb04 0061 	add.w	r0, r4, r1, asr #1
 800e164:	07c9      	lsls	r1, r1, #31
 800e166:	bf48      	it	mi
 800e168:	5961      	ldrmi	r1, [r4, r5]
 800e16a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e16e:	bf48      	it	mi
 800e170:	58cb      	ldrmi	r3, [r1, r3]
 800e172:	4611      	mov	r1, r2
 800e174:	4718      	bx	r3
 800e176:	e9d0 3003 	ldrd	r3, r0, [r0, #12]
 800e17a:	f000 0501 	and.w	r5, r0, #1
 800e17e:	b90b      	cbnz	r3, 800e184 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800e180:	2d00      	cmp	r5, #0
 800e182:	d0ad      	beq.n	800e0e0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e184:	1046      	asrs	r6, r0, #1
 800e186:	eb04 0060 	add.w	r0, r4, r0, asr #1
 800e18a:	b10d      	cbz	r5, 800e190 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800e18c:	59a4      	ldr	r4, [r4, r6]
 800e18e:	58e3      	ldr	r3, [r4, r3]
 800e190:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e194:	4718      	bx	r3
 800e196:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e19a:	bf00      	nop
 800e19c:	200007fc 	strdcs	r0, [r0], -ip
 800e1a0:	0801a1c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, pc}

0800e1a4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800e1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1a8:	23ff      	movs	r3, #255	; 0xff
 800e1aa:	7013      	strb	r3, [r2, #0]
 800e1ac:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e1b0:	b085      	sub	sp, #20
 800e1b2:	7ccb      	ldrb	r3, [r1, #19]
 800e1b4:	7d4f      	ldrb	r7, [r1, #21]
 800e1b6:	9303      	str	r3, [sp, #12]
 800e1b8:	7d0b      	ldrb	r3, [r1, #20]
 800e1ba:	f101 0a02 	add.w	sl, r1, #2
 800e1be:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800e1c2:	4b5c      	ldr	r3, [pc, #368]	; (800e334 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800e1c4:	4606      	mov	r6, r0
 800e1c6:	460d      	mov	r5, r1
 800e1c8:	4614      	mov	r4, r2
 800e1ca:	495b      	ldr	r1, [pc, #364]	; (800e338 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e1cc:	f8d3 8000 	ldr.w	r8, [r3]
 800e1d0:	2206      	movs	r2, #6
 800e1d2:	4650      	mov	r0, sl
 800e1d4:	f7ff fce4 	bl	800dba0 <memcmp>
 800e1d8:	f108 0904 	add.w	r9, r8, #4
 800e1dc:	4683      	mov	fp, r0
 800e1de:	2202      	movs	r2, #2
 800e1e0:	4649      	mov	r1, r9
 800e1e2:	4650      	mov	r0, sl
 800e1e4:	b2bf      	uxth	r7, r7
 800e1e6:	f7ff fcdb 	bl	800dba0 <memcmp>
 800e1ea:	b928      	cbnz	r0, 800e1f8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800e1ec:	2204      	movs	r2, #4
 800e1ee:	4952      	ldr	r1, [pc, #328]	; (800e338 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800e1f0:	18a8      	adds	r0, r5, r2
 800e1f2:	f7ff fcd5 	bl	800dba0 <memcmp>
 800e1f6:	b158      	cbz	r0, 800e210 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800e1f8:	2206      	movs	r2, #6
 800e1fa:	4649      	mov	r1, r9
 800e1fc:	4650      	mov	r0, sl
 800e1fe:	f7ff fccf 	bl	800dba0 <memcmp>
 800e202:	b130      	cbz	r0, 800e212 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800e204:	f1bb 0f00 	cmp.w	fp, #0
 800e208:	d04b      	beq.n	800e2a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800e20a:	b005      	add	sp, #20
 800e20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e210:	2001      	movs	r0, #1
 800e212:	2301      	movs	r3, #1
 800e214:	9a03      	ldr	r2, [sp, #12]
 800e216:	2a10      	cmp	r2, #16
 800e218:	d177      	bne.n	800e30a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800e21a:	2f01      	cmp	r7, #1
 800e21c:	d144      	bne.n	800e2a8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800e21e:	7873      	ldrb	r3, [r6, #1]
 800e220:	2b00      	cmp	r3, #0
 800e222:	d1f2      	bne.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e224:	2206      	movs	r2, #6
 800e226:	4649      	mov	r1, r9
 800e228:	f105 0017 	add.w	r0, r5, #23
 800e22c:	f7ff fcb8 	bl	800dba0 <memcmp>
 800e230:	2800      	cmp	r0, #0
 800e232:	dcea      	bgt.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e234:	2206      	movs	r2, #6
 800e236:	f105 011d 	add.w	r1, r5, #29
 800e23a:	4648      	mov	r0, r9
 800e23c:	f7ff fcb0 	bl	800dba0 <memcmp>
 800e240:	2800      	cmp	r0, #0
 800e242:	dce2      	bgt.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e244:	23fe      	movs	r3, #254	; 0xfe
 800e246:	7023      	strb	r3, [r4, #0]
 800e248:	7063      	strb	r3, [r4, #1]
 800e24a:	70a3      	strb	r3, [r4, #2]
 800e24c:	70e3      	strb	r3, [r4, #3]
 800e24e:	7123      	strb	r3, [r4, #4]
 800e250:	7163      	strb	r3, [r4, #5]
 800e252:	71a3      	strb	r3, [r4, #6]
 800e254:	23aa      	movs	r3, #170	; 0xaa
 800e256:	71e3      	strb	r3, [r4, #7]
 800e258:	f108 0203 	add.w	r2, r8, #3
 800e25c:	4621      	mov	r1, r4
 800e25e:	f108 0809 	add.w	r8, r8, #9
 800e262:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800e266:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e26a:	f060 0055 	orn	r0, r0, #85	; 0x55
 800e26e:	7208      	strb	r0, [r1, #8]
 800e270:	7810      	ldrb	r0, [r2, #0]
 800e272:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800e276:	7248      	strb	r0, [r1, #9]
 800e278:	7810      	ldrb	r0, [r2, #0]
 800e27a:	4542      	cmp	r2, r8
 800e27c:	4403      	add	r3, r0
 800e27e:	b29b      	uxth	r3, r3
 800e280:	f101 0102 	add.w	r1, r1, #2
 800e284:	d1ef      	bne.n	800e266 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc2>
 800e286:	0a1a      	lsrs	r2, r3, #8
 800e288:	f062 0155 	orn	r1, r2, #85	; 0x55
 800e28c:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800e290:	7562      	strb	r2, [r4, #21]
 800e292:	f063 0255 	orn	r2, r3, #85	; 0x55
 800e296:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800e29a:	7521      	strb	r1, [r4, #20]
 800e29c:	75a2      	strb	r2, [r4, #22]
 800e29e:	75e3      	strb	r3, [r4, #23]
 800e2a0:	e7b3      	b.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2a2:	4658      	mov	r0, fp
 800e2a4:	465b      	mov	r3, fp
 800e2a6:	e7b5      	b.n	800e214 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800e2a8:	2f03      	cmp	r7, #3
 800e2aa:	d11a      	bne.n	800e2e2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800e2ac:	7daa      	ldrb	r2, [r5, #22]
 800e2ae:	2a00      	cmp	r2, #0
 800e2b0:	d1ab      	bne.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2b2:	7072      	strb	r2, [r6, #1]
 800e2b4:	f1bb 0f00 	cmp.w	fp, #0
 800e2b8:	d0a7      	beq.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2ba:	2b00      	cmp	r3, #0
 800e2bc:	d0a5      	beq.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2be:	2302      	movs	r3, #2
 800e2c0:	75e3      	strb	r3, [r4, #23]
 800e2c2:	4b1e      	ldr	r3, [pc, #120]	; (800e33c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e2c4:	7622      	strb	r2, [r4, #24]
 800e2c6:	681b      	ldr	r3, [r3, #0]
 800e2c8:	7662      	strb	r2, [r4, #25]
 800e2ca:	889b      	ldrh	r3, [r3, #4]
 800e2cc:	3b00      	subs	r3, #0
 800e2ce:	bf18      	it	ne
 800e2d0:	2301      	movne	r3, #1
 800e2d2:	005b      	lsls	r3, r3, #1
 800e2d4:	4630      	mov	r0, r6
 800e2d6:	7663      	strb	r3, [r4, #25]
 800e2d8:	b005      	add	sp, #20
 800e2da:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2de:	f7ff bd81 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e2e2:	2f02      	cmp	r7, #2
 800e2e4:	d191      	bne.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2e6:	7daa      	ldrb	r2, [r5, #22]
 800e2e8:	2a00      	cmp	r2, #0
 800e2ea:	d18e      	bne.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2ec:	2101      	movs	r1, #1
 800e2ee:	7071      	strb	r1, [r6, #1]
 800e2f0:	2b00      	cmp	r3, #0
 800e2f2:	d08a      	beq.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e2f4:	4b11      	ldr	r3, [pc, #68]	; (800e33c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800e2f6:	75e7      	strb	r7, [r4, #23]
 800e2f8:	681b      	ldr	r3, [r3, #0]
 800e2fa:	7622      	strb	r2, [r4, #24]
 800e2fc:	7662      	strb	r2, [r4, #25]
 800e2fe:	889b      	ldrh	r3, [r3, #4]
 800e300:	3b00      	subs	r3, #0
 800e302:	bf18      	it	ne
 800e304:	2301      	movne	r3, #1
 800e306:	408b      	lsls	r3, r1
 800e308:	e7e4      	b.n	800e2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800e30a:	7c6a      	ldrb	r2, [r5, #17]
 800e30c:	7cab      	ldrb	r3, [r5, #18]
 800e30e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800e312:	b29b      	uxth	r3, r3
 800e314:	f1bb 0f00 	cmp.w	fp, #0
 800e318:	9301      	str	r3, [sp, #4]
 800e31a:	7dab      	ldrb	r3, [r5, #22]
 800e31c:	9300      	str	r3, [sp, #0]
 800e31e:	bf18      	it	ne
 800e320:	4601      	movne	r1, r0
 800e322:	9a03      	ldr	r2, [sp, #12]
 800e324:	463b      	mov	r3, r7
 800e326:	bf08      	it	eq
 800e328:	2101      	moveq	r1, #1
 800e32a:	4630      	mov	r0, r6
 800e32c:	f7ff feca 	bl	800e0c4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800e330:	e76b      	b.n	800e20a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e332:	bf00      	nop
 800e334:	20000800 	andcs	r0, r0, r0, lsl #16
 800e338:	0801a1c0 	stmdaeq	r1, {r6, r7, r8, sp, pc}
 800e33c:	200007fc 	strdcs	r0, [r0], -ip

0800e340 <RDMIdentify::RDMIdentify()>:
 800e340:	4b01      	ldr	r3, [pc, #4]	; (800e348 <RDMIdentify::RDMIdentify()+0x8>)
 800e342:	6018      	str	r0, [r3, #0]
 800e344:	4770      	bx	lr
 800e346:	bf00      	nop
 800e348:	20000808 	andcs	r0, r0, r8, lsl #16

0800e34c <RDMIdentify::On(rdm::identify::Mode)>:
 800e34c:	4770      	bx	lr

0800e34e <RDMIdentify::Off(rdm::identify::Mode)>:
 800e34e:	4770      	bx	lr

0800e350 <memcpy.constprop.0.isra.0>:
 800e350:	3801      	subs	r0, #1
 800e352:	1d0b      	adds	r3, r1, #4
 800e354:	4299      	cmp	r1, r3
 800e356:	d100      	bne.n	800e35a <memcpy.constprop.0.isra.0+0xa>
 800e358:	4770      	bx	lr
 800e35a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e35e:	f800 2f01 	strb.w	r2, [r0, #1]!
 800e362:	e7f7      	b.n	800e354 <memcpy.constprop.0.isra.0+0x4>

0800e364 <RDMHandler::GetInterfaceList(unsigned short)>:
 800e364:	4a08      	ldr	r2, [pc, #32]	; (800e388 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800e366:	6883      	ldr	r3, [r0, #8]
 800e368:	6812      	ldr	r2, [r2, #0]
 800e36a:	6892      	ldr	r2, [r2, #8]
 800e36c:	76da      	strb	r2, [r3, #27]
 800e36e:	0e11      	lsrs	r1, r2, #24
 800e370:	7619      	strb	r1, [r3, #24]
 800e372:	0c11      	lsrs	r1, r2, #16
 800e374:	7659      	strb	r1, [r3, #25]
 800e376:	0a11      	lsrs	r1, r2, #8
 800e378:	2200      	movs	r2, #0
 800e37a:	771a      	strb	r2, [r3, #28]
 800e37c:	2206      	movs	r2, #6
 800e37e:	7699      	strb	r1, [r3, #26]
 800e380:	775a      	strb	r2, [r3, #29]
 800e382:	75da      	strb	r2, [r3, #23]
 800e384:	f7ff bd2e 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e388:	2000f9f0 	strdcs	pc, [r0], -r0

0800e38c <RDMHandler::GetInterfaceName(unsigned short)>:
 800e38c:	b538      	push	{r3, r4, r5, lr}
 800e38e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e392:	4604      	mov	r4, r0
 800e394:	3117      	adds	r1, #23
 800e396:	f105 0018 	add.w	r0, r5, #24
 800e39a:	f7ff ffd9 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e39e:	4a0d      	ldr	r2, [pc, #52]	; (800e3d4 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800e3a0:	6813      	ldr	r3, [r2, #0]
 800e3a2:	f105 001b 	add.w	r0, r5, #27
 800e3a6:	33a6      	adds	r3, #166	; 0xa6
 800e3a8:	f813 1b01 	ldrb.w	r1, [r3], #1
 800e3ac:	f800 1f01 	strb.w	r1, [r0, #1]!
 800e3b0:	2900      	cmp	r1, #0
 800e3b2:	d1f9      	bne.n	800e3a8 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800e3b4:	6812      	ldr	r2, [r2, #0]
 800e3b6:	32a6      	adds	r2, #166	; 0xa6
 800e3b8:	4611      	mov	r1, r2
 800e3ba:	460b      	mov	r3, r1
 800e3bc:	3101      	adds	r1, #1
 800e3be:	7818      	ldrb	r0, [r3, #0]
 800e3c0:	2800      	cmp	r0, #0
 800e3c2:	d1fa      	bne.n	800e3ba <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800e3c4:	1a9b      	subs	r3, r3, r2
 800e3c6:	3304      	adds	r3, #4
 800e3c8:	75eb      	strb	r3, [r5, #23]
 800e3ca:	4620      	mov	r0, r4
 800e3cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e3d0:	f7ff bd08 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e3d4:	2000f9f0 	strdcs	pc, [r0], -r0

0800e3d8 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800e3d8:	b538      	push	{r3, r4, r5, lr}
 800e3da:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e3de:	4604      	mov	r4, r0
 800e3e0:	3117      	adds	r1, #23
 800e3e2:	f105 0018 	add.w	r0, r5, #24
 800e3e6:	f7ff ffb3 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e3ea:	4b06      	ldr	r3, [pc, #24]	; (800e404 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800e3ec:	f105 011c 	add.w	r1, r5, #28
 800e3f0:	6818      	ldr	r0, [r3, #0]
 800e3f2:	f005 f8dd 	bl	80135b0 <Network::MacAddressCopyTo(unsigned char*)>
 800e3f6:	230a      	movs	r3, #10
 800e3f8:	75eb      	strb	r3, [r5, #23]
 800e3fa:	4620      	mov	r0, r4
 800e3fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e400:	f7ff bcf0 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e404:	2000f9f0 	strdcs	pc, [r0], -r0

0800e408 <RDMHandler::GetDHCPMode(unsigned short)>:
 800e408:	b538      	push	{r3, r4, r5, lr}
 800e40a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e40e:	4604      	mov	r4, r0
 800e410:	3117      	adds	r1, #23
 800e412:	f105 0018 	add.w	r0, r5, #24
 800e416:	f7ff ff9b 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e41a:	4b05      	ldr	r3, [pc, #20]	; (800e430 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800e41c:	681b      	ldr	r3, [r3, #0]
 800e41e:	795b      	ldrb	r3, [r3, #5]
 800e420:	772b      	strb	r3, [r5, #28]
 800e422:	2305      	movs	r3, #5
 800e424:	75eb      	strb	r3, [r5, #23]
 800e426:	4620      	mov	r0, r4
 800e428:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e42c:	f7ff bcda 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e430:	2000f9f0 	strdcs	pc, [r0], -r0

0800e434 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800e434:	4b10      	ldr	r3, [pc, #64]	; (800e478 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800e436:	6842      	ldr	r2, [r0, #4]
 800e438:	681b      	ldr	r3, [r3, #0]
 800e43a:	7919      	ldrb	r1, [r3, #4]
 800e43c:	b510      	push	{r4, lr}
 800e43e:	4604      	mov	r4, r0
 800e440:	b921      	cbnz	r1, 800e44c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800e442:	210b      	movs	r1, #11
 800e444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e448:	f7ff bd90 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e44c:	7ed2      	ldrb	r2, [r2, #27]
 800e44e:	2a01      	cmp	r2, #1
 800e450:	d109      	bne.n	800e466 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800e452:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800e456:	f042 0204 	orr.w	r2, r2, #4
 800e45a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800e45e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e462:	f7ff bcbf 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e466:	b92a      	cbnz	r2, 800e474 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800e468:	4618      	mov	r0, r3
 800e46a:	4611      	mov	r1, r2
 800e46c:	f005 fae6 	bl	8013a3c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e470:	4620      	mov	r0, r4
 800e472:	e7f4      	b.n	800e45e <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800e474:	2106      	movs	r1, #6
 800e476:	e7e5      	b.n	800e444 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800e478:	2000f9f0 	strdcs	pc, [r0], -r0

0800e47c <RDMHandler::GetNameServers(unsigned short)>:
 800e47c:	6842      	ldr	r2, [r0, #4]
 800e47e:	7dd2      	ldrb	r2, [r2, #23]
 800e480:	2a02      	cmp	r2, #2
 800e482:	d902      	bls.n	800e48a <RDMHandler::GetNameServers(unsigned short)+0xe>
 800e484:	2106      	movs	r1, #6
 800e486:	f7ff bd71 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e48a:	6883      	ldr	r3, [r0, #8]
 800e48c:	2200      	movs	r2, #0
 800e48e:	765a      	strb	r2, [r3, #25]
 800e490:	769a      	strb	r2, [r3, #26]
 800e492:	76da      	strb	r2, [r3, #27]
 800e494:	771a      	strb	r2, [r3, #28]
 800e496:	2205      	movs	r2, #5
 800e498:	75da      	strb	r2, [r3, #23]
 800e49a:	f7ff bca3 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
	...

0800e4a0 <RDMHandler::GetZeroconf(unsigned short)>:
 800e4a0:	b538      	push	{r3, r4, r5, lr}
 800e4a2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e4a6:	4604      	mov	r4, r0
 800e4a8:	3117      	adds	r1, #23
 800e4aa:	f105 0018 	add.w	r0, r5, #24
 800e4ae:	f7ff ff4f 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e4b2:	4b06      	ldr	r3, [pc, #24]	; (800e4cc <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800e4b4:	681a      	ldr	r2, [r3, #0]
 800e4b6:	7993      	ldrb	r3, [r2, #6]
 800e4b8:	b103      	cbz	r3, 800e4bc <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800e4ba:	79d3      	ldrb	r3, [r2, #7]
 800e4bc:	772b      	strb	r3, [r5, #28]
 800e4be:	2305      	movs	r3, #5
 800e4c0:	75eb      	strb	r3, [r5, #23]
 800e4c2:	4620      	mov	r0, r4
 800e4c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e4c8:	f7ff bc8c 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e4cc:	2000f9f0 	strdcs	pc, [r0], -r0

0800e4d0 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800e4d0:	4b10      	ldr	r3, [pc, #64]	; (800e514 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800e4d2:	6842      	ldr	r2, [r0, #4]
 800e4d4:	681b      	ldr	r3, [r3, #0]
 800e4d6:	7999      	ldrb	r1, [r3, #6]
 800e4d8:	b510      	push	{r4, lr}
 800e4da:	4604      	mov	r4, r0
 800e4dc:	b921      	cbnz	r1, 800e4e8 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800e4de:	210b      	movs	r1, #11
 800e4e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4e4:	f7ff bd42 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e4e8:	7ed2      	ldrb	r2, [r2, #27]
 800e4ea:	2a01      	cmp	r2, #1
 800e4ec:	d109      	bne.n	800e502 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800e4ee:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800e4f2:	f042 0208 	orr.w	r2, r2, #8
 800e4f6:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800e4fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4fe:	f7ff bc71 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e502:	b92a      	cbnz	r2, 800e510 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800e504:	4618      	mov	r0, r3
 800e506:	4611      	mov	r1, r2
 800e508:	f005 fa98 	bl	8013a3c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e50c:	4620      	mov	r0, r4
 800e50e:	e7f4      	b.n	800e4fa <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800e510:	2106      	movs	r1, #6
 800e512:	e7e5      	b.n	800e4e0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800e514:	2000f9f0 	strdcs	pc, [r0], -r0

0800e518 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800e518:	4b09      	ldr	r3, [pc, #36]	; (800e540 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800e51a:	681b      	ldr	r3, [r3, #0]
 800e51c:	795a      	ldrb	r2, [r3, #5]
 800e51e:	b510      	push	{r4, lr}
 800e520:	4604      	mov	r4, r0
 800e522:	b922      	cbnz	r2, 800e52e <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800e524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e528:	210b      	movs	r1, #11
 800e52a:	f7ff bd1f 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e52e:	4618      	mov	r0, r3
 800e530:	f005 fa36 	bl	80139a0 <Network::EnableDhcp()>
 800e534:	4620      	mov	r0, r4
 800e536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e53a:	f7ff bc53 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e53e:	bf00      	nop
 800e540:	2000f9f0 	strdcs	pc, [r0], -r0

0800e544 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800e544:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e546:	4e10      	ldr	r6, [pc, #64]	; (800e588 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800e548:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e54c:	6833      	ldr	r3, [r6, #0]
 800e54e:	4604      	mov	r4, r0
 800e550:	695b      	ldr	r3, [r3, #20]
 800e552:	9301      	str	r3, [sp, #4]
 800e554:	f105 0018 	add.w	r0, r5, #24
 800e558:	3117      	adds	r1, #23
 800e55a:	f7ff fef9 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e55e:	a901      	add	r1, sp, #4
 800e560:	f105 001c 	add.w	r0, r5, #28
 800e564:	f7ff fef4 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e568:	6836      	ldr	r6, [r6, #0]
 800e56a:	69f0      	ldr	r0, [r6, #28]
 800e56c:	f00a f97c 	bl	8018868 <__popcountsi2>
 800e570:	f885 0020 	strb.w	r0, [r5, #32]
 800e574:	7973      	ldrb	r3, [r6, #5]
 800e576:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800e57a:	230a      	movs	r3, #10
 800e57c:	75eb      	strb	r3, [r5, #23]
 800e57e:	4620      	mov	r0, r4
 800e580:	f7ff fc30 	bl	800dde4 <RDMHandler::RespondMessageAck()>
 800e584:	b002      	add	sp, #8
 800e586:	bd70      	pop	{r4, r5, r6, pc}
 800e588:	2000f9f0 	strdcs	pc, [r0], -r0

0800e58c <RDMHandler::GetStaticAddress(unsigned short)>:
 800e58c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e58e:	4e0f      	ldr	r6, [pc, #60]	; (800e5cc <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800e590:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e594:	6833      	ldr	r3, [r6, #0]
 800e596:	4604      	mov	r4, r0
 800e598:	695b      	ldr	r3, [r3, #20]
 800e59a:	9301      	str	r3, [sp, #4]
 800e59c:	f105 0018 	add.w	r0, r5, #24
 800e5a0:	3117      	adds	r1, #23
 800e5a2:	f7ff fed5 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e5a6:	a901      	add	r1, sp, #4
 800e5a8:	f105 001c 	add.w	r0, r5, #28
 800e5ac:	f7ff fed0 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e5b0:	6833      	ldr	r3, [r6, #0]
 800e5b2:	69d8      	ldr	r0, [r3, #28]
 800e5b4:	f00a f958 	bl	8018868 <__popcountsi2>
 800e5b8:	2309      	movs	r3, #9
 800e5ba:	f885 0020 	strb.w	r0, [r5, #32]
 800e5be:	75eb      	strb	r3, [r5, #23]
 800e5c0:	4620      	mov	r0, r4
 800e5c2:	f7ff fc0f 	bl	800dde4 <RDMHandler::RespondMessageAck()>
 800e5c6:	b002      	add	sp, #8
 800e5c8:	bd70      	pop	{r4, r5, r6, pc}
 800e5ca:	bf00      	nop
 800e5cc:	2000f9f0 	strdcs	pc, [r0], -r0

0800e5d0 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800e5d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5d2:	6845      	ldr	r5, [r0, #4]
 800e5d4:	7dab      	ldrb	r3, [r5, #22]
 800e5d6:	2b09      	cmp	r3, #9
 800e5d8:	4604      	mov	r4, r0
 800e5da:	d005      	beq.n	800e5e8 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800e5dc:	2101      	movs	r1, #1
 800e5de:	b003      	add	sp, #12
 800e5e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e5e4:	f7ff bcc2 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e5e8:	f105 011b 	add.w	r1, r5, #27
 800e5ec:	a801      	add	r0, sp, #4
 800e5ee:	f7ff feaf 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e5f2:	4b09      	ldr	r3, [pc, #36]	; (800e618 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800e5f4:	7fea      	ldrb	r2, [r5, #31]
 800e5f6:	6818      	ldr	r0, [r3, #0]
 800e5f8:	9901      	ldr	r1, [sp, #4]
 800e5fa:	b12a      	cbz	r2, 800e608 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800e5fc:	f1c2 0220 	rsb	r2, r2, #32
 800e600:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e604:	4093      	lsls	r3, r2
 800e606:	ba1a      	rev	r2, r3
 800e608:	f005 fa18 	bl	8013a3c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800e60c:	4620      	mov	r0, r4
 800e60e:	f7ff fbe9 	bl	800dde4 <RDMHandler::RespondMessageAck()>
 800e612:	b003      	add	sp, #12
 800e614:	bd30      	pop	{r4, r5, pc}
 800e616:	bf00      	nop
 800e618:	2000f9f0 	strdcs	pc, [r0], -r0

0800e61c <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800e61c:	4b08      	ldr	r3, [pc, #32]	; (800e640 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800e61e:	b510      	push	{r4, lr}
 800e620:	4604      	mov	r4, r0
 800e622:	6818      	ldr	r0, [r3, #0]
 800e624:	f005 fa17 	bl	8013a56 <Network::ApplyQueuedConfig()>
 800e628:	b120      	cbz	r0, 800e634 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800e62a:	4620      	mov	r0, r4
 800e62c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e630:	f7ff bbd8 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e634:	4620      	mov	r0, r4
 800e636:	2101      	movs	r1, #1
 800e638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e63c:	f7ff bc96 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e640:	2000f9f0 	strdcs	pc, [r0], -r0

0800e644 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800e644:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e646:	4b0c      	ldr	r3, [pc, #48]	; (800e678 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800e648:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800e64c:	681b      	ldr	r3, [r3, #0]
 800e64e:	4604      	mov	r4, r0
 800e650:	699b      	ldr	r3, [r3, #24]
 800e652:	9301      	str	r3, [sp, #4]
 800e654:	f105 0018 	add.w	r0, r5, #24
 800e658:	3117      	adds	r1, #23
 800e65a:	f7ff fe79 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e65e:	a901      	add	r1, sp, #4
 800e660:	f105 001c 	add.w	r0, r5, #28
 800e664:	f7ff fe74 	bl	800e350 <memcpy.constprop.0.isra.0>
 800e668:	2308      	movs	r3, #8
 800e66a:	75eb      	strb	r3, [r5, #23]
 800e66c:	4620      	mov	r0, r4
 800e66e:	f7ff fbb9 	bl	800dde4 <RDMHandler::RespondMessageAck()>
 800e672:	b003      	add	sp, #12
 800e674:	bd30      	pop	{r4, r5, pc}
 800e676:	bf00      	nop
 800e678:	2000f9f0 	strdcs	pc, [r0], -r0

0800e67c <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800e67c:	210b      	movs	r1, #11
 800e67e:	f7ff bc75 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e684 <RDMHandler::GetHostName(unsigned short)>:
 800e684:	4b0a      	ldr	r3, [pc, #40]	; (800e6b0 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800e686:	b513      	push	{r0, r1, r4, lr}
 800e688:	6819      	ldr	r1, [r3, #0]
 800e68a:	3120      	adds	r1, #32
 800e68c:	460b      	mov	r3, r1
 800e68e:	461a      	mov	r2, r3
 800e690:	3301      	adds	r3, #1
 800e692:	7814      	ldrb	r4, [r2, #0]
 800e694:	2c00      	cmp	r4, #0
 800e696:	d1fa      	bne.n	800e68e <RDMHandler::GetHostName(unsigned short)+0xa>
 800e698:	1a52      	subs	r2, r2, r1
 800e69a:	b292      	uxth	r2, r2
 800e69c:	9001      	str	r0, [sp, #4]
 800e69e:	f7ff fb48 	bl	800dd32 <RDMHandler::HandleString(char const*, unsigned int)>
 800e6a2:	9801      	ldr	r0, [sp, #4]
 800e6a4:	b002      	add	sp, #8
 800e6a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6aa:	f7ff bb9b 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e6ae:	bf00      	nop
 800e6b0:	2000f9f0 	strdcs	pc, [r0], -r0

0800e6b4 <RDMHandler::SetHostName(bool, unsigned short)>:
 800e6b4:	b510      	push	{r4, lr}
 800e6b6:	6841      	ldr	r1, [r0, #4]
 800e6b8:	7d8b      	ldrb	r3, [r1, #22]
 800e6ba:	2b3f      	cmp	r3, #63	; 0x3f
 800e6bc:	4604      	mov	r4, r0
 800e6be:	d904      	bls.n	800e6ca <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800e6c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6c4:	2102      	movs	r1, #2
 800e6c6:	f7ff bc51 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
 800e6ca:	440b      	add	r3, r1
 800e6cc:	2200      	movs	r2, #0
 800e6ce:	75da      	strb	r2, [r3, #23]
 800e6d0:	4b04      	ldr	r3, [pc, #16]	; (800e6e4 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800e6d2:	3117      	adds	r1, #23
 800e6d4:	6818      	ldr	r0, [r3, #0]
 800e6d6:	f005 f922 	bl	801391e <Network::SetHostName(char const*)>
 800e6da:	4620      	mov	r0, r4
 800e6dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6e0:	f7ff bb80 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e6e4:	2000f9f0 	strdcs	pc, [r0], -r0

0800e6e8 <RDMHandler::GetDomainName(unsigned short)>:
 800e6e8:	4b0a      	ldr	r3, [pc, #40]	; (800e714 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800e6ea:	b513      	push	{r0, r1, r4, lr}
 800e6ec:	6819      	ldr	r1, [r3, #0]
 800e6ee:	3160      	adds	r1, #96	; 0x60
 800e6f0:	460b      	mov	r3, r1
 800e6f2:	461a      	mov	r2, r3
 800e6f4:	3301      	adds	r3, #1
 800e6f6:	7814      	ldrb	r4, [r2, #0]
 800e6f8:	2c00      	cmp	r4, #0
 800e6fa:	d1fa      	bne.n	800e6f2 <RDMHandler::GetDomainName(unsigned short)+0xa>
 800e6fc:	1a52      	subs	r2, r2, r1
 800e6fe:	b292      	uxth	r2, r2
 800e700:	9001      	str	r0, [sp, #4]
 800e702:	f7ff fb16 	bl	800dd32 <RDMHandler::HandleString(char const*, unsigned int)>
 800e706:	9801      	ldr	r0, [sp, #4]
 800e708:	b002      	add	sp, #8
 800e70a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e70e:	f7ff bb69 	b.w	800dde4 <RDMHandler::RespondMessageAck()>
 800e712:	bf00      	nop
 800e714:	2000f9f0 	strdcs	pc, [r0], -r0

0800e718 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800e718:	210b      	movs	r1, #11
 800e71a:	f7ff bc27 	b.w	800df6c <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e720 <RDMDevice::RDMDevice()>:
 800e720:	4a33      	ldr	r2, [pc, #204]	; (800e7f0 <RDMDevice::RDMDevice()+0xd0>)
 800e722:	2300      	movs	r3, #0
 800e724:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e726:	4604      	mov	r4, r0
 800e728:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800e72c:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800e730:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800e734:	6743      	str	r3, [r0, #116]	; 0x74
 800e736:	4611      	mov	r1, r2
 800e738:	4613      	mov	r3, r2
 800e73a:	3201      	adds	r2, #1
 800e73c:	7818      	ldrb	r0, [r3, #0]
 800e73e:	2800      	cmp	r0, #0
 800e740:	d1fa      	bne.n	800e738 <RDMDevice::RDMDevice()+0x18>
 800e742:	1a5b      	subs	r3, r3, r1
 800e744:	2b20      	cmp	r3, #32
 800e746:	bf28      	it	cs
 800e748:	2320      	movcs	r3, #32
 800e74a:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800e74e:	4828      	ldr	r0, [pc, #160]	; (800e7f0 <RDMDevice::RDMDevice()+0xd0>)
 800e750:	4629      	mov	r1, r5
 800e752:	461a      	mov	r2, r3
 800e754:	3a01      	subs	r2, #1
 800e756:	d23b      	bcs.n	800e7d0 <RDMDevice::RDMDevice()+0xb0>
 800e758:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800e75c:	4b25      	ldr	r3, [pc, #148]	; (800e7f4 <RDMDevice::RDMDevice()+0xd4>)
 800e75e:	781a      	ldrb	r2, [r3, #0]
 800e760:	7022      	strb	r2, [r4, #0]
 800e762:	785b      	ldrb	r3, [r3, #1]
 800e764:	7063      	strb	r3, [r4, #1]
 800e766:	4b24      	ldr	r3, [pc, #144]	; (800e7f8 <RDMDevice::RDMDevice()+0xd8>)
 800e768:	4669      	mov	r1, sp
 800e76a:	6818      	ldr	r0, [r3, #0]
 800e76c:	f004 ff20 	bl	80135b0 <Network::MacAddressCopyTo(unsigned char*)>
 800e770:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800e774:	70a3      	strb	r3, [r4, #2]
 800e776:	7263      	strb	r3, [r4, #9]
 800e778:	4b20      	ldr	r3, [pc, #128]	; (800e7fc <RDMDevice::RDMDevice()+0xdc>)
 800e77a:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800e77e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800e782:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800e786:	70e2      	strb	r2, [r4, #3]
 800e788:	7222      	strb	r2, [r4, #8]
 800e78a:	7121      	strb	r1, [r4, #4]
 800e78c:	7160      	strb	r0, [r4, #5]
 800e78e:	71a0      	strb	r0, [r4, #6]
 800e790:	71e1      	strb	r1, [r4, #7]
 800e792:	461a      	mov	r2, r3
 800e794:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e798:	2900      	cmp	r1, #0
 800e79a:	d1fb      	bne.n	800e794 <RDMDevice::RDMDevice()+0x74>
 800e79c:	1a9b      	subs	r3, r3, r2
 800e79e:	2b20      	cmp	r3, #32
 800e7a0:	bf28      	it	cs
 800e7a2:	2320      	movcs	r3, #32
 800e7a4:	4915      	ldr	r1, [pc, #84]	; (800e7fc <RDMDevice::RDMDevice()+0xdc>)
 800e7a6:	461a      	mov	r2, r3
 800e7a8:	3a01      	subs	r2, #1
 800e7aa:	d216      	bcs.n	800e7da <RDMDevice::RDMDevice()+0xba>
 800e7ac:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800e7b0:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800e7b4:	64e3      	str	r3, [r4, #76]	; 0x4c
 800e7b6:	4a12      	ldr	r2, [pc, #72]	; (800e800 <RDMDevice::RDMDevice()+0xe0>)
 800e7b8:	2315      	movs	r3, #21
 800e7ba:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800e7be:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800e7c2:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800e7c6:	4299      	cmp	r1, r3
 800e7c8:	d10c      	bne.n	800e7e4 <RDMDevice::RDMDevice()+0xc4>
 800e7ca:	4620      	mov	r0, r4
 800e7cc:	b002      	add	sp, #8
 800e7ce:	bd70      	pop	{r4, r5, r6, pc}
 800e7d0:	f810 6b01 	ldrb.w	r6, [r0], #1
 800e7d4:	f801 6f01 	strb.w	r6, [r1, #1]!
 800e7d8:	e7bc      	b.n	800e754 <RDMDevice::RDMDevice()+0x34>
 800e7da:	f811 0b01 	ldrb.w	r0, [r1], #1
 800e7de:	f805 0f01 	strb.w	r0, [r5, #1]!
 800e7e2:	e7e1      	b.n	800e7a8 <RDMDevice::RDMDevice()+0x88>
 800e7e4:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e7e8:	f803 0f01 	strb.w	r0, [r3, #1]!
 800e7ec:	e7eb      	b.n	800e7c6 <RDMDevice::RDMDevice()+0xa6>
 800e7ee:	bf00      	nop
 800e7f0:	0801a4a9 	stmdaeq	r1, {r0, r3, r5, r7, sl, sp, pc}
 800e7f4:	0801a4a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp, pc}
 800e7f8:	2000f9f0 	strdcs	pc, [r0], -r0
 800e7fc:	0801a3a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sp, pc}
 800e800:	0801a491 	stmdaeq	r1, {r0, r4, r7, sl, sp, pc}

0800e804 <RDMDevice::Print()>:
 800e804:	b513      	push	{r0, r1, r4, lr}
 800e806:	4604      	mov	r4, r0
 800e808:	4818      	ldr	r0, [pc, #96]	; (800e86c <RDMDevice::Print()+0x68>)
 800e80a:	f7fb fe55 	bl	800a4b8 <printf>
 800e80e:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800e812:	4817      	ldr	r0, [pc, #92]	; (800e870 <RDMDevice::Print()+0x6c>)
 800e814:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800e818:	f7fb fe4e 	bl	800a4b8 <printf>
 800e81c:	7862      	ldrb	r2, [r4, #1]
 800e81e:	7821      	ldrb	r1, [r4, #0]
 800e820:	4814      	ldr	r0, [pc, #80]	; (800e874 <RDMDevice::Print()+0x70>)
 800e822:	f7fb fe49 	bl	800a4b8 <printf>
 800e826:	79a3      	ldrb	r3, [r4, #6]
 800e828:	7a22      	ldrb	r2, [r4, #8]
 800e82a:	7a61      	ldrb	r1, [r4, #9]
 800e82c:	9300      	str	r3, [sp, #0]
 800e82e:	4812      	ldr	r0, [pc, #72]	; (800e878 <RDMDevice::Print()+0x74>)
 800e830:	79e3      	ldrb	r3, [r4, #7]
 800e832:	f7fb fe41 	bl	800a4b8 <printf>
 800e836:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800e83a:	4810      	ldr	r0, [pc, #64]	; (800e87c <RDMDevice::Print()+0x78>)
 800e83c:	f104 020a 	add.w	r2, r4, #10
 800e840:	f7fb fe3a 	bl	800a4b8 <printf>
 800e844:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800e848:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800e84c:	480c      	ldr	r0, [pc, #48]	; (800e880 <RDMDevice::Print()+0x7c>)
 800e84e:	0a09      	lsrs	r1, r1, #8
 800e850:	f7fb fe32 	bl	800a4b8 <printf>
 800e854:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e858:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800e85c:	4809      	ldr	r0, [pc, #36]	; (800e884 <RDMDevice::Print()+0x80>)
 800e85e:	0a09      	lsrs	r1, r1, #8
 800e860:	b002      	add	sp, #8
 800e862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e866:	f7fb be27 	b.w	800a4b8 <printf>
 800e86a:	bf00      	nop
 800e86c:	0801a3bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sp, pc}
 800e870:	0801a3d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sp, pc}
 800e874:	0801a3f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, sp, pc}
 800e878:	0801a411 	stmdaeq	r1, {r0, r4, sl, sp, pc}
 800e87c:	0801a438 	stmdaeq	r1, {r3, r4, r5, sl, sp, pc}
 800e880:	0801a453 	stmdaeq	r1, {r0, r1, r4, r6, sl, sp, pc}
 800e884:	0801a472 	stmdaeq	r1, {r1, r4, r5, r6, sl, sp, pc}

0800e888 <uuid_unparse_x>:
 800e888:	b530      	push	{r4, r5, lr}
 800e88a:	4603      	mov	r3, r0
 800e88c:	4608      	mov	r0, r1
 800e88e:	4611      	mov	r1, r2
 800e890:	681a      	ldr	r2, [r3, #0]
 800e892:	891c      	ldrh	r4, [r3, #8]
 800e894:	b08f      	sub	sp, #60	; 0x3c
 800e896:	ba12      	rev	r2, r2
 800e898:	920a      	str	r2, [sp, #40]	; 0x28
 800e89a:	889a      	ldrh	r2, [r3, #4]
 800e89c:	ba52      	rev16	r2, r2
 800e89e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e8a2:	88da      	ldrh	r2, [r3, #6]
 800e8a4:	ba64      	rev16	r4, r4
 800e8a6:	ba52      	rev16	r2, r2
 800e8a8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e8ac:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800e8b0:	f103 020a 	add.w	r2, r3, #10
 800e8b4:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800e8b8:	3310      	adds	r3, #16
 800e8ba:	4293      	cmp	r3, r2
 800e8bc:	d122      	bne.n	800e904 <uuid_unparse_x+0x7c>
 800e8be:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800e8c2:	9208      	str	r2, [sp, #32]
 800e8c4:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800e8c8:	9207      	str	r2, [sp, #28]
 800e8ca:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800e8ce:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e8d2:	9206      	str	r2, [sp, #24]
 800e8d4:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800e8d8:	9205      	str	r2, [sp, #20]
 800e8da:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800e8de:	9204      	str	r2, [sp, #16]
 800e8e0:	0a1b      	lsrs	r3, r3, #8
 800e8e2:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800e8e6:	9203      	str	r2, [sp, #12]
 800e8e8:	9301      	str	r3, [sp, #4]
 800e8ea:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800e8ee:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e8f2:	9202      	str	r2, [sp, #8]
 800e8f4:	9300      	str	r3, [sp, #0]
 800e8f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e8f8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e8fc:	f7fb fdec 	bl	800a4d8 <sprintf>
 800e900:	b00f      	add	sp, #60	; 0x3c
 800e902:	bd30      	pop	{r4, r5, pc}
 800e904:	f812 5b01 	ldrb.w	r5, [r2], #1
 800e908:	f804 5f01 	strb.w	r5, [r4, #1]!
 800e90c:	e7d5      	b.n	800e8ba <uuid_unparse_x+0x32>
	...

0800e910 <uuid_unparse>:
 800e910:	4a01      	ldr	r2, [pc, #4]	; (800e918 <uuid_unparse+0x8>)
 800e912:	f7ff bfb9 	b.w	800e888 <uuid_unparse_x>
 800e916:	bf00      	nop
 800e918:	0801a4c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, sp, pc}

0800e91c <DmxSend::~DmxSend()>:
 800e91c:	4770      	bx	lr
	...

0800e920 <DmxSend::Start(unsigned int)>:
 800e920:	b430      	push	{r4, r5}
 800e922:	4c09      	ldr	r4, [pc, #36]	; (800e948 <DmxSend::Start(unsigned int)+0x28>)
 800e924:	2301      	movs	r3, #1
 800e926:	7822      	ldrb	r2, [r4, #0]
 800e928:	fa03 f001 	lsl.w	r0, r3, r1
 800e92c:	ea30 0502 	bics.w	r5, r0, r2
 800e930:	d007      	beq.n	800e942 <DmxSend::Start(unsigned int)+0x22>
 800e932:	4302      	orrs	r2, r0
 800e934:	4805      	ldr	r0, [pc, #20]	; (800e94c <DmxSend::Start(unsigned int)+0x2c>)
 800e936:	7022      	strb	r2, [r4, #0]
 800e938:	6800      	ldr	r0, [r0, #0]
 800e93a:	bc30      	pop	{r4, r5}
 800e93c:	2200      	movs	r2, #0
 800e93e:	f000 bd0d 	b.w	800f35c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e942:	bc30      	pop	{r4, r5}
 800e944:	4770      	bx	lr
 800e946:	bf00      	nop
 800e948:	2000080c 	andcs	r0, r0, ip, lsl #16
 800e94c:	20001064 	andcs	r1, r0, r4, rrx

0800e950 <DmxSend::Stop(unsigned int)>:
 800e950:	b410      	push	{r4}
 800e952:	480b      	ldr	r0, [pc, #44]	; (800e980 <DmxSend::Stop(unsigned int)+0x30>)
 800e954:	2201      	movs	r2, #1
 800e956:	7803      	ldrb	r3, [r0, #0]
 800e958:	408a      	lsls	r2, r1
 800e95a:	ea03 0402 	and.w	r4, r3, r2
 800e95e:	439a      	bics	r2, r3
 800e960:	d10a      	bne.n	800e978 <DmxSend::Stop(unsigned int)+0x28>
 800e962:	ea23 0304 	bic.w	r3, r3, r4
 800e966:	7003      	strb	r3, [r0, #0]
 800e968:	4806      	ldr	r0, [pc, #24]	; (800e984 <DmxSend::Stop(unsigned int)+0x34>)
 800e96a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e96e:	6800      	ldr	r0, [r0, #0]
 800e970:	2300      	movs	r3, #0
 800e972:	461a      	mov	r2, r3
 800e974:	f000 bcf2 	b.w	800f35c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e978:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e97c:	4770      	bx	lr
 800e97e:	bf00      	nop
 800e980:	2000080c 	andcs	r0, r0, ip, lsl #16
 800e984:	20001064 	andcs	r1, r0, r4, rrx

0800e988 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e988:	b11b      	cbz	r3, 800e992 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800e98a:	4802      	ldr	r0, [pc, #8]	; (800e994 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800e98c:	6800      	ldr	r0, [r0, #0]
 800e98e:	f000 be27 	b.w	800f5e0 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800e992:	4770      	bx	lr
 800e994:	20001064 	andcs	r1, r0, r4, rrx

0800e998 <DmxSend::Blackout(bool)>:
 800e998:	4b01      	ldr	r3, [pc, #4]	; (800e9a0 <DmxSend::Blackout(bool)+0x8>)
 800e99a:	6818      	ldr	r0, [r3, #0]
 800e99c:	f000 be46 	b.w	800f62c <Dmx::Blackout()>
 800e9a0:	20001064 	andcs	r1, r0, r4, rrx

0800e9a4 <DmxSend::FullOn()>:
 800e9a4:	4b01      	ldr	r3, [pc, #4]	; (800e9ac <DmxSend::FullOn()+0x8>)
 800e9a6:	6818      	ldr	r0, [r3, #0]
 800e9a8:	f000 be84 	b.w	800f6b4 <Dmx::FullOn()>
 800e9ac:	20001064 	andcs	r1, r0, r4, rrx

0800e9b0 <DmxSend::Print()>:
 800e9b0:	b510      	push	{r4, lr}
 800e9b2:	4c0e      	ldr	r4, [pc, #56]	; (800e9ec <DmxSend::Print()+0x3c>)
 800e9b4:	480e      	ldr	r0, [pc, #56]	; (800e9f0 <DmxSend::Print()+0x40>)
 800e9b6:	f7fb fd7f 	bl	800a4b8 <printf>
 800e9ba:	6823      	ldr	r3, [r4, #0]
 800e9bc:	480d      	ldr	r0, [pc, #52]	; (800e9f4 <DmxSend::Print()+0x44>)
 800e9be:	6819      	ldr	r1, [r3, #0]
 800e9c0:	f7fb fd7a 	bl	800a4b8 <printf>
 800e9c4:	6823      	ldr	r3, [r4, #0]
 800e9c6:	480c      	ldr	r0, [pc, #48]	; (800e9f8 <DmxSend::Print()+0x48>)
 800e9c8:	6859      	ldr	r1, [r3, #4]
 800e9ca:	f7fb fd75 	bl	800a4b8 <printf>
 800e9ce:	6823      	ldr	r3, [r4, #0]
 800e9d0:	490a      	ldr	r1, [pc, #40]	; (800e9fc <DmxSend::Print()+0x4c>)
 800e9d2:	689b      	ldr	r3, [r3, #8]
 800e9d4:	480a      	ldr	r0, [pc, #40]	; (800ea00 <DmxSend::Print()+0x50>)
 800e9d6:	fbb1 f1f3 	udiv	r1, r1, r3
 800e9da:	f7fb fd6d 	bl	800a4b8 <printf>
 800e9de:	6823      	ldr	r3, [r4, #0]
 800e9e0:	4808      	ldr	r0, [pc, #32]	; (800ea04 <DmxSend::Print()+0x54>)
 800e9e2:	8a19      	ldrh	r1, [r3, #16]
 800e9e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e9e8:	f7fb bd66 	b.w	800a4b8 <printf>
 800e9ec:	20001064 	andcs	r1, r0, r4, rrx
 800e9f0:	0801a4f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, sl, sp, pc}
 800e9f4:	0801a500 	stmdaeq	r1, {r8, sl, sp, pc}
 800e9f8:	0801a514 	stmdaeq	r1, {r2, r4, r8, sl, sp, pc}
 800e9fc:	000f4240 	andeq	r4, pc, r0, asr #4
 800ea00:	0801a528 	stmdaeq	r1, {r3, r5, r8, sl, sp, pc}
 800ea04:	0801a53c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, sp, pc}

0800ea08 <DmxSend::~DmxSend()>:
 800ea08:	b510      	push	{r4, lr}
 800ea0a:	4604      	mov	r4, r0
 800ea0c:	f007 fa9a 	bl	8015f44 <operator delete(void*)>
 800ea10:	4620      	mov	r0, r4
 800ea12:	bd10      	pop	{r4, pc}

0800ea14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800ea14:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ea16:	88c6      	ldrh	r6, [r0, #6]
 800ea18:	8885      	ldrh	r5, [r0, #4]
 800ea1a:	42ae      	cmp	r6, r5
 800ea1c:	d216      	bcs.n	800ea4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800ea1e:	4604      	mov	r4, r0
 800ea20:	6800      	ldr	r0, [r0, #0]
 800ea22:	1bad      	subs	r5, r5, r6
 800ea24:	4430      	add	r0, r6
 800ea26:	7a26      	ldrb	r6, [r4, #8]
 800ea28:	b923      	cbnz	r3, 800ea34 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800ea2a:	b926      	cbnz	r6, 800ea36 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800ea2c:	9200      	str	r2, [sp, #0]
 800ea2e:	460b      	mov	r3, r1
 800ea30:	4a09      	ldr	r2, [pc, #36]	; (800ea58 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800ea32:	e003      	b.n	800ea3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ea34:	b166      	cbz	r6, 800ea50 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800ea36:	9200      	str	r2, [sp, #0]
 800ea38:	4a08      	ldr	r2, [pc, #32]	; (800ea5c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800ea3a:	460b      	mov	r3, r1
 800ea3c:	4629      	mov	r1, r5
 800ea3e:	f7fb fd63 	bl	800a508 <snprintf>
 800ea42:	4285      	cmp	r5, r0
 800ea44:	bfa2      	ittt	ge
 800ea46:	88e3      	ldrhge	r3, [r4, #6]
 800ea48:	181b      	addge	r3, r3, r0
 800ea4a:	80e3      	strhge	r3, [r4, #6]
 800ea4c:	b002      	add	sp, #8
 800ea4e:	bd70      	pop	{r4, r5, r6, pc}
 800ea50:	9200      	str	r2, [sp, #0]
 800ea52:	460b      	mov	r3, r1
 800ea54:	4a02      	ldr	r2, [pc, #8]	; (800ea60 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ea56:	e7f1      	b.n	800ea3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ea58:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800ea5c:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800ea60:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

0800ea64 <DmxParams::DmxParams(DmxParamsStore*)>:
 800ea64:	4a04      	ldr	r2, [pc, #16]	; (800ea78 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800ea66:	6001      	str	r1, [r0, #0]
 800ea68:	2100      	movs	r1, #0
 800ea6a:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ea6e:	f64f 7228 	movw	r2, #65320	; 0xff28
 800ea72:	8182      	strh	r2, [r0, #12]
 800ea74:	4770      	bx	lr
 800ea76:	bf00      	nop
 800ea78:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800ea7c <DmxParams::Load()>:
 800ea7c:	b508      	push	{r3, lr}
 800ea7e:	2300      	movs	r3, #0
 800ea80:	4601      	mov	r1, r0
 800ea82:	6043      	str	r3, [r0, #4]
 800ea84:	6800      	ldr	r0, [r0, #0]
 800ea86:	b120      	cbz	r0, 800ea92 <DmxParams::Load()+0x16>
 800ea88:	6803      	ldr	r3, [r0, #0]
 800ea8a:	3104      	adds	r1, #4
 800ea8c:	68db      	ldr	r3, [r3, #12]
 800ea8e:	4798      	blx	r3
 800ea90:	2001      	movs	r0, #1
 800ea92:	bd08      	pop	{r3, pc}

0800ea94 <DmxParams::Load(char const*, unsigned int)>:
 800ea94:	6803      	ldr	r3, [r0, #0]
 800ea96:	b1d3      	cbz	r3, 800eace <DmxParams::Load(char const*, unsigned int)+0x3a>
 800ea98:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ea9a:	2300      	movs	r3, #0
 800ea9c:	6043      	str	r3, [r0, #4]
 800ea9e:	4604      	mov	r4, r0
 800eaa0:	460d      	mov	r5, r1
 800eaa2:	4616      	mov	r6, r2
 800eaa4:	490a      	ldr	r1, [pc, #40]	; (800ead0 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800eaa6:	4602      	mov	r2, r0
 800eaa8:	4668      	mov	r0, sp
 800eaaa:	f006 fb5f 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800eaae:	4632      	mov	r2, r6
 800eab0:	4629      	mov	r1, r5
 800eab2:	4668      	mov	r0, sp
 800eab4:	f006 fb5e 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 800eab8:	4621      	mov	r1, r4
 800eaba:	f851 0b04 	ldr.w	r0, [r1], #4
 800eabe:	6803      	ldr	r3, [r0, #0]
 800eac0:	689b      	ldr	r3, [r3, #8]
 800eac2:	4798      	blx	r3
 800eac4:	4668      	mov	r0, sp
 800eac6:	f006 fb54 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 800eaca:	b002      	add	sp, #8
 800eacc:	bd70      	pop	{r4, r5, r6, pc}
 800eace:	4770      	bx	lr
 800ead0:	0800eba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, sp, lr, pc}

0800ead4 <DmxParams::callbackFunction(char const*)>:
 800ead4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ead6:	460d      	mov	r5, r1
 800ead8:	4604      	mov	r4, r0
 800eada:	492d      	ldr	r1, [pc, #180]	; (800eb90 <DmxParams::callbackFunction(char const*)+0xbc>)
 800eadc:	f10d 0206 	add.w	r2, sp, #6
 800eae0:	4628      	mov	r0, r5
 800eae2:	f006 fc30 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800eae6:	b988      	cbnz	r0, 800eb0c <DmxParams::callbackFunction(char const*)+0x38>
 800eae8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eaec:	6863      	ldr	r3, [r4, #4]
 800eaee:	2a5b      	cmp	r2, #91	; 0x5b
 800eaf0:	d907      	bls.n	800eb02 <DmxParams::callbackFunction(char const*)+0x2e>
 800eaf2:	2ab0      	cmp	r2, #176	; 0xb0
 800eaf4:	d005      	beq.n	800eb02 <DmxParams::callbackFunction(char const*)+0x2e>
 800eaf6:	8122      	strh	r2, [r4, #8]
 800eaf8:	f043 0301 	orr.w	r3, r3, #1
 800eafc:	6063      	str	r3, [r4, #4]
 800eafe:	b003      	add	sp, #12
 800eb00:	bd30      	pop	{r4, r5, pc}
 800eb02:	22b0      	movs	r2, #176	; 0xb0
 800eb04:	8122      	strh	r2, [r4, #8]
 800eb06:	f023 0301 	bic.w	r3, r3, #1
 800eb0a:	e7f7      	b.n	800eafc <DmxParams::callbackFunction(char const*)+0x28>
 800eb0c:	4921      	ldr	r1, [pc, #132]	; (800eb94 <DmxParams::callbackFunction(char const*)+0xc0>)
 800eb0e:	f10d 0206 	add.w	r2, sp, #6
 800eb12:	4628      	mov	r0, r5
 800eb14:	f006 fc17 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800eb18:	b968      	cbnz	r0, 800eb36 <DmxParams::callbackFunction(char const*)+0x62>
 800eb1a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eb1e:	6863      	ldr	r3, [r4, #4]
 800eb20:	2a0c      	cmp	r2, #12
 800eb22:	bf93      	iteet	ls
 800eb24:	220c      	movls	r2, #12
 800eb26:	8162      	strhhi	r2, [r4, #10]
 800eb28:	f043 0302 	orrhi.w	r3, r3, #2
 800eb2c:	8162      	strhls	r2, [r4, #10]
 800eb2e:	bf98      	it	ls
 800eb30:	f023 0302 	bicls.w	r3, r3, #2
 800eb34:	e7e2      	b.n	800eafc <DmxParams::callbackFunction(char const*)+0x28>
 800eb36:	4918      	ldr	r1, [pc, #96]	; (800eb98 <DmxParams::callbackFunction(char const*)+0xc4>)
 800eb38:	f10d 0205 	add.w	r2, sp, #5
 800eb3c:	4628      	mov	r0, r5
 800eb3e:	f006 fc4a 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eb42:	b950      	cbnz	r0, 800eb5a <DmxParams::callbackFunction(char const*)+0x86>
 800eb44:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800eb48:	6863      	ldr	r3, [r4, #4]
 800eb4a:	7322      	strb	r2, [r4, #12]
 800eb4c:	2a28      	cmp	r2, #40	; 0x28
 800eb4e:	bf14      	ite	ne
 800eb50:	f043 0304 	orrne.w	r3, r3, #4
 800eb54:	f023 0304 	biceq.w	r3, r3, #4
 800eb58:	e7d0      	b.n	800eafc <DmxParams::callbackFunction(char const*)+0x28>
 800eb5a:	4910      	ldr	r1, [pc, #64]	; (800eb9c <DmxParams::callbackFunction(char const*)+0xc8>)
 800eb5c:	f10d 0206 	add.w	r2, sp, #6
 800eb60:	4628      	mov	r0, r5
 800eb62:	f006 fbf0 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800eb66:	2800      	cmp	r0, #0
 800eb68:	d1c9      	bne.n	800eafe <DmxParams::callbackFunction(char const*)+0x2a>
 800eb6a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eb6e:	6863      	ldr	r3, [r4, #4]
 800eb70:	1e91      	subs	r1, r2, #2
 800eb72:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800eb76:	bf3b      	ittet	cc
 800eb78:	0852      	lsrcc	r2, r2, #1
 800eb7a:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800eb7e:	22ff      	movcs	r2, #255	; 0xff
 800eb80:	7362      	strbcc	r2, [r4, #13]
 800eb82:	bf32      	itee	cc
 800eb84:	f043 0308 	orrcc.w	r3, r3, #8
 800eb88:	7362      	strbcs	r2, [r4, #13]
 800eb8a:	f023 0308 	biccs.w	r3, r3, #8
 800eb8e:	e7b5      	b.n	800eafc <DmxParams::callbackFunction(char const*)+0x28>
 800eb90:	0801a588 	stmdaeq	r1, {r3, r7, r8, sl, sp, pc}
 800eb94:	0801a5ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, sp, pc}
 800eb98:	0801a59f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, sp, pc}
 800eb9c:	0801a593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, sp, pc}

0800eba0 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800eba0:	f7ff bf98 	b.w	800ead4 <DmxParams::callbackFunction(char const*)>

0800eba4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800eba4:	b570      	push	{r4, r5, r6, lr}
 800eba6:	4604      	mov	r4, r0
 800eba8:	b086      	sub	sp, #24
 800ebaa:	4615      	mov	r5, r2
 800ebac:	461e      	mov	r6, r3
 800ebae:	3004      	adds	r0, #4
 800ebb0:	b369      	cbz	r1, 800ec0e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800ebb2:	220a      	movs	r2, #10
 800ebb4:	f007 fac7 	bl	8016146 <memmove>
 800ebb8:	462a      	mov	r2, r5
 800ebba:	4933      	ldr	r1, [pc, #204]	; (800ec88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800ebbc:	4633      	mov	r3, r6
 800ebbe:	a803      	add	r0, sp, #12
 800ebc0:	f006 fa34 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ebc4:	6863      	ldr	r3, [r4, #4]
 800ebc6:	8922      	ldrh	r2, [r4, #8]
 800ebc8:	4930      	ldr	r1, [pc, #192]	; (800ec8c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800ebca:	f003 0301 	and.w	r3, r3, #1
 800ebce:	a803      	add	r0, sp, #12
 800ebd0:	f7ff ff20 	bl	800ea14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ebd4:	6863      	ldr	r3, [r4, #4]
 800ebd6:	8962      	ldrh	r2, [r4, #10]
 800ebd8:	492d      	ldr	r1, [pc, #180]	; (800ec90 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800ebda:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ebde:	a803      	add	r0, sp, #12
 800ebe0:	f7ff ff18 	bl	800ea14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ebe4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ebe8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ebec:	7b23      	ldrb	r3, [r4, #12]
 800ebee:	6861      	ldr	r1, [r4, #4]
 800ebf0:	42aa      	cmp	r2, r5
 800ebf2:	d221      	bcs.n	800ec38 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800ebf4:	9803      	ldr	r0, [sp, #12]
 800ebf6:	0749      	lsls	r1, r1, #29
 800ebf8:	4410      	add	r0, r2
 800ebfa:	eba5 0502 	sub.w	r5, r5, r2
 800ebfe:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ec02:	d40b      	bmi.n	800ec1c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800ec04:	b95a      	cbnz	r2, 800ec1e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800ec06:	9300      	str	r3, [sp, #0]
 800ec08:	4a22      	ldr	r2, [pc, #136]	; (800ec94 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800ec0a:	4b23      	ldr	r3, [pc, #140]	; (800ec98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ec0c:	e00a      	b.n	800ec24 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800ec0e:	6823      	ldr	r3, [r4, #0]
 800ec10:	681a      	ldr	r2, [r3, #0]
 800ec12:	4601      	mov	r1, r0
 800ec14:	68d2      	ldr	r2, [r2, #12]
 800ec16:	4618      	mov	r0, r3
 800ec18:	4790      	blx	r2
 800ec1a:	e7cd      	b.n	800ebb8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800ec1c:	b37a      	cbz	r2, 800ec7e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800ec1e:	9300      	str	r3, [sp, #0]
 800ec20:	4a1e      	ldr	r2, [pc, #120]	; (800ec9c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800ec22:	4b1d      	ldr	r3, [pc, #116]	; (800ec98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ec24:	4629      	mov	r1, r5
 800ec26:	f7fb fc6f 	bl	800a508 <snprintf>
 800ec2a:	4285      	cmp	r5, r0
 800ec2c:	bfa2      	ittt	ge
 800ec2e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ec32:	18c0      	addge	r0, r0, r3
 800ec34:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ec38:	7b62      	ldrb	r2, [r4, #13]
 800ec3a:	6863      	ldr	r3, [r4, #4]
 800ec3c:	4918      	ldr	r1, [pc, #96]	; (800eca0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800ec3e:	3201      	adds	r2, #1
 800ec40:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800ec44:	0052      	lsls	r2, r2, #1
 800ec46:	a803      	add	r0, sp, #12
 800ec48:	f7ff fee4 	bl	800ea14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ec4c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ec50:	b17b      	cbz	r3, 800ec72 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800ec52:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ec56:	9b03      	ldr	r3, [sp, #12]
 800ec58:	4413      	add	r3, r2
 800ec5a:	227d      	movs	r2, #125	; 0x7d
 800ec5c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ec60:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ec64:	9903      	ldr	r1, [sp, #12]
 800ec66:	54ca      	strb	r2, [r1, r3]
 800ec68:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ec6c:	3301      	adds	r3, #1
 800ec6e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ec72:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ec76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec78:	601a      	str	r2, [r3, #0]
 800ec7a:	b006      	add	sp, #24
 800ec7c:	bd70      	pop	{r4, r5, r6, pc}
 800ec7e:	9300      	str	r3, [sp, #0]
 800ec80:	4a08      	ldr	r2, [pc, #32]	; (800eca4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800ec82:	4b05      	ldr	r3, [pc, #20]	; (800ec98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800ec84:	e7ce      	b.n	800ec24 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800ec86:	bf00      	nop
 800ec88:	0801a5b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, sp, pc}
 800ec8c:	0801a588 	stmdaeq	r1, {r3, r7, r8, sl, sp, pc}
 800ec90:	0801a5ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, sp, pc}
 800ec94:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800ec98:	0801a59f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, sp, pc}
 800ec9c:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800eca0:	0801a593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, sp, pc}
 800eca4:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

0800eca8 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800eca8:	b513      	push	{r0, r1, r4, lr}
 800ecaa:	6804      	ldr	r4, [r0, #0]
 800ecac:	b914      	cbnz	r4, 800ecb4 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ecae:	601c      	str	r4, [r3, #0]
 800ecb0:	b002      	add	sp, #8
 800ecb2:	bd10      	pop	{r4, pc}
 800ecb4:	9300      	str	r3, [sp, #0]
 800ecb6:	4613      	mov	r3, r2
 800ecb8:	460a      	mov	r2, r1
 800ecba:	2100      	movs	r1, #0
 800ecbc:	f7ff ff72 	bl	800eba4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800ecc0:	e7f6      	b.n	800ecb0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800ecc4 <DmxParams::Set(Dmx*)>:
 800ecc4:	b513      	push	{r0, r1, r4, lr}
 800ecc6:	4604      	mov	r4, r0
 800ecc8:	4608      	mov	r0, r1
 800ecca:	6863      	ldr	r3, [r4, #4]
 800eccc:	07db      	lsls	r3, r3, #31
 800ecce:	d504      	bpl.n	800ecda <DmxParams::Set(Dmx*)+0x16>
 800ecd0:	8921      	ldrh	r1, [r4, #8]
 800ecd2:	9001      	str	r0, [sp, #4]
 800ecd4:	f000 fc5a 	bl	800f58c <Dmx::SetDmxBreakTime(unsigned int)>
 800ecd8:	9801      	ldr	r0, [sp, #4]
 800ecda:	6863      	ldr	r3, [r4, #4]
 800ecdc:	0799      	lsls	r1, r3, #30
 800ecde:	d504      	bpl.n	800ecea <DmxParams::Set(Dmx*)+0x26>
 800ece0:	8961      	ldrh	r1, [r4, #10]
 800ece2:	9001      	str	r0, [sp, #4]
 800ece4:	f000 fc5c 	bl	800f5a0 <Dmx::SetDmxMabTime(unsigned int)>
 800ece8:	9801      	ldr	r0, [sp, #4]
 800ecea:	6863      	ldr	r3, [r4, #4]
 800ecec:	075a      	lsls	r2, r3, #29
 800ecee:	d508      	bpl.n	800ed02 <DmxParams::Set(Dmx*)+0x3e>
 800ecf0:	7b21      	ldrb	r1, [r4, #12]
 800ecf2:	b111      	cbz	r1, 800ecfa <DmxParams::Set(Dmx*)+0x36>
 800ecf4:	4b09      	ldr	r3, [pc, #36]	; (800ed1c <DmxParams::Set(Dmx*)+0x58>)
 800ecf6:	fbb3 f1f1 	udiv	r1, r3, r1
 800ecfa:	9001      	str	r0, [sp, #4]
 800ecfc:	f000 fc1e 	bl	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 800ed00:	9801      	ldr	r0, [sp, #4]
 800ed02:	6863      	ldr	r3, [r4, #4]
 800ed04:	071b      	lsls	r3, r3, #28
 800ed06:	d507      	bpl.n	800ed18 <DmxParams::Set(Dmx*)+0x54>
 800ed08:	7b61      	ldrb	r1, [r4, #13]
 800ed0a:	3101      	adds	r1, #1
 800ed0c:	0049      	lsls	r1, r1, #1
 800ed0e:	b002      	add	sp, #8
 800ed10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed14:	f000 bc4e 	b.w	800f5b4 <Dmx::SetDmxSlots(unsigned short)>
 800ed18:	b002      	add	sp, #8
 800ed1a:	bd10      	pop	{r4, pc}
 800ed1c:	000f4240 	andeq	r4, pc, r0, asr #4

0800ed20 <DmxParams::Dump()>:
 800ed20:	4770      	bx	lr

0800ed22 <_gpio_mode_output(unsigned int, unsigned int)>:
 800ed22:	b513      	push	{r0, r1, r4, lr}
 800ed24:	460a      	mov	r2, r1
 800ed26:	9101      	str	r1, [sp, #4]
 800ed28:	2100      	movs	r1, #0
 800ed2a:	4604      	mov	r4, r0
 800ed2c:	f007 fd83 	bl	8016836 <gpio_af_set>
 800ed30:	9b01      	ldr	r3, [sp, #4]
 800ed32:	2200      	movs	r2, #0
 800ed34:	2101      	movs	r1, #1
 800ed36:	4620      	mov	r0, r4
 800ed38:	b002      	add	sp, #8
 800ed3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed3e:	f007 bd3f 	b.w	80167c0 <gpio_mode_set>
	...

0800ed44 <_port_to_uart(unsigned int)>:
 800ed44:	4a03      	ldr	r2, [pc, #12]	; (800ed54 <_port_to_uart(unsigned int)+0x10>)
 800ed46:	4b04      	ldr	r3, [pc, #16]	; (800ed58 <_port_to_uart(unsigned int)+0x14>)
 800ed48:	2800      	cmp	r0, #0
 800ed4a:	bf14      	ite	ne
 800ed4c:	4610      	movne	r0, r2
 800ed4e:	4618      	moveq	r0, r3
 800ed50:	4770      	bx	lr
 800ed52:	bf00      	nop
 800ed54:	40011400 	andmi	r1, r1, r0, lsl #8
 800ed58:	40004800 	andmi	r4, r0, r0, lsl #16

0800ed5c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800ed5c:	b570      	push	{r4, r5, r6, lr}
 800ed5e:	f3bf 8f5f 	dmb	sy
 800ed62:	4ba1      	ldr	r3, [pc, #644]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800ed64:	2508      	movs	r5, #8
 800ed66:	f8c3 5418 	str.w	r5, [r3, #1048]	; 0x418
 800ed6a:	6802      	ldr	r2, [r0, #0]
 800ed6c:	f012 0f02 	tst.w	r2, #2
 800ed70:	4a9e      	ldr	r2, [pc, #632]	; (800efec <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x290>)
 800ed72:	d017      	beq.n	800eda4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x48>
 800ed74:	6804      	ldr	r4, [r0, #0]
 800ed76:	f024 0402 	bic.w	r4, r4, #2
 800ed7a:	6004      	str	r4, [r0, #0]
 800ed7c:	6840      	ldr	r0, [r0, #4]
 800ed7e:	f44f 7004 	mov.w	r0, #528	; 0x210
 800ed82:	fb00 2201 	mla	r2, r0, r1, r2
 800ed86:	2100      	movs	r1, #0
 800ed88:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
 800ed8c:	2102      	movs	r1, #2
 800ed8e:	f8c2 120c 	str.w	r1, [r2, #524]	; 0x20c
 800ed92:	2210      	movs	r2, #16
 800ed94:	f8c3 5428 	str.w	r5, [r3, #1064]	; 0x428
 800ed98:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800ed9c:	2220      	movs	r2, #32
 800ed9e:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800eda2:	bd70      	pop	{r4, r5, r6, pc}
 800eda4:	f44f 7304 	mov.w	r3, #528	; 0x210
 800eda8:	fb03 2401 	mla	r4, r3, r1, r2
 800edac:	6840      	ldr	r0, [r0, #4]
 800edae:	f8d4 420c 	ldr.w	r4, [r4, #524]	; 0x20c
 800edb2:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800edb6:	2c0a      	cmp	r4, #10
 800edb8:	f200 810f 	bhi.w	800efda <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x27e>
 800edbc:	e8df f014 	tbh	[pc, r4, lsl #1]
 800edc0:	010d000b 	tsteq	sp, fp
 800edc4:	010d001b 	tsteq	sp, fp, lsl r0
 800edc8:	00630049 	rsbeq	r0, r3, r9, asr #32
 800edcc:	00940082 	addseq	r0, r4, r2, lsl #1
 800edd0:	00d900c1 	sbcseq	r0, r9, r1, asr #1
 800edd4:	435900ef 	cmpmi	r9, #239	; 0xef
 800edd8:	1853      	adds	r3, r2, r1
 800edda:	5450      	strb	r0, [r2, r1]
 800eddc:	2408      	movs	r4, #8
 800edde:	2201      	movs	r2, #1
 800ede0:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800ede4:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800ede8:	4b7f      	ldr	r3, [pc, #508]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800edea:	2208      	movs	r2, #8
 800edec:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800edf0:	f3bf 8f5f 	dmb	sy
 800edf4:	e7d5      	b.n	800eda2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x46>
 800edf6:	b148      	cbz	r0, 800ee0c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xb0>
 800edf8:	28cc      	cmp	r0, #204	; 0xcc
 800edfa:	f44f 7304 	mov.w	r3, #528	; 0x210
 800edfe:	d01e      	beq.n	800ee3e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xe2>
 800ee00:	fb03 2301 	mla	r3, r3, r1, r2
 800ee04:	2200      	movs	r2, #0
 800ee06:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ee0a:	e7ed      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ee0c:	434b      	muls	r3, r1
 800ee0e:	18d4      	adds	r4, r2, r3
 800ee10:	54d0      	strb	r0, [r2, r3]
 800ee12:	2301      	movs	r3, #1
 800ee14:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
 800ee18:	4b75      	ldr	r3, [pc, #468]	; (800eff0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x294>)
 800ee1a:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800ee1e:	685a      	ldr	r2, [r3, #4]
 800ee20:	3201      	adds	r2, #1
 800ee22:	605a      	str	r2, [r3, #4]
 800ee24:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800ee28:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800ee2c:	60da      	str	r2, [r3, #12]
 800ee2e:	2304      	movs	r3, #4
 800ee30:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
 800ee34:	4b6c      	ldr	r3, [pc, #432]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800ee36:	2210      	movs	r2, #16
 800ee38:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 800ee3c:	e7d4      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ee3e:	434b      	muls	r3, r1
 800ee40:	18d1      	adds	r1, r2, r3
 800ee42:	54d0      	strb	r0, [r2, r3]
 800ee44:	4b6b      	ldr	r3, [pc, #428]	; (800eff4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x298>)
 800ee46:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800ee4a:	2305      	movs	r3, #5
 800ee4c:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800ee50:	e7f0      	b.n	800ee34 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xd8>
 800ee52:	fb03 2101 	mla	r1, r3, r1, r2
 800ee56:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800ee5a:	b29a      	uxth	r2, r3
 800ee5c:	3301      	adds	r3, #1
 800ee5e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ee62:	bf81      	itttt	hi
 800ee64:	f443 4300 	orrhi.w	r3, r3, #32768	; 0x8000
 800ee68:	f8c1 3204 	strhi.w	r3, [r1, #516]	; 0x204
 800ee6c:	2300      	movhi	r3, #0
 800ee6e:	f8c1 320c 	strhi.w	r3, [r1, #524]	; 0x20c
 800ee72:	bf88      	it	hi
 800ee74:	4b5c      	ldrhi	r3, [pc, #368]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800ee76:	5488      	strb	r0, [r1, r2]
 800ee78:	bf8a      	itet	hi
 800ee7a:	2210      	movhi	r2, #16
 800ee7c:	f8c1 3204 	strls.w	r3, [r1, #516]	; 0x204
 800ee80:	f8c3 2428 	strhi.w	r2, [r3, #1064]	; 0x428
 800ee84:	e7b0      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ee86:	fb03 2301 	mla	r3, r3, r1, r2
 800ee8a:	f8b3 5204 	ldrh.w	r5, [r3, #516]	; 0x204
 800ee8e:	f8b3 6206 	ldrh.w	r6, [r3, #518]	; 0x206
 800ee92:	5558      	strb	r0, [r3, r5]
 800ee94:	1c6c      	adds	r4, r5, #1
 800ee96:	3d17      	subs	r5, #23
 800ee98:	b2a4      	uxth	r4, r4
 800ee9a:	4430      	add	r0, r6
 800ee9c:	2de7      	cmp	r5, #231	; 0xe7
 800ee9e:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800eea2:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800eea6:	d808      	bhi.n	800eeba <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15e>
 800eea8:	7898      	ldrb	r0, [r3, #2]
 800eeaa:	42a0      	cmp	r0, r4
 800eeac:	d105      	bne.n	800eeba <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15e>
 800eeae:	2206      	movs	r2, #6
 800eeb0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800eeb4:	4b4c      	ldr	r3, [pc, #304]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800eeb6:	2220      	movs	r2, #32
 800eeb8:	e7be      	b.n	800ee38 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xdc>
 800eeba:	2cff      	cmp	r4, #255	; 0xff
 800eebc:	d994      	bls.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800eebe:	f44f 7304 	mov.w	r3, #528	; 0x210
 800eec2:	e79d      	b.n	800ee00 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xa4>
 800eec4:	fb03 2101 	mla	r1, r3, r1, r2
 800eec8:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800eecc:	54c8      	strb	r0, [r1, r3]
 800eece:	3301      	adds	r3, #1
 800eed0:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800eed4:	f8b1 3206 	ldrh.w	r3, [r1, #518]	; 0x206
 800eed8:	eba3 2300 	sub.w	r3, r3, r0, lsl #8
 800eedc:	f8a1 3206 	strh.w	r3, [r1, #518]	; 0x206
 800eee0:	2307      	movs	r3, #7
 800eee2:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800eee6:	e77f      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800eee8:	4e3f      	ldr	r6, [pc, #252]	; (800efe8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x28c>)
 800eeea:	2320      	movs	r3, #32
 800eeec:	f8c6 3428 	str.w	r3, [r6, #1064]	; 0x428
 800eef0:	f44f 7304 	mov.w	r3, #528	; 0x210
 800eef4:	fb03 2301 	mla	r3, r3, r1, r2
 800eef8:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800eefc:	f8b3 5206 	ldrh.w	r5, [r3, #518]	; 0x206
 800ef00:	5518      	strb	r0, [r3, r4]
 800ef02:	3401      	adds	r4, #1
 800ef04:	1a28      	subs	r0, r5, r0
 800ef06:	b2a4      	uxth	r4, r4
 800ef08:	b280      	uxth	r0, r0
 800ef0a:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800ef0e:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800ef12:	b910      	cbnz	r0, 800ef1a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1be>
 800ef14:	7858      	ldrb	r0, [r3, #1]
 800ef16:	2801      	cmp	r0, #1
 800ef18:	d007      	beq.n	800ef2a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ce>
 800ef1a:	f44f 7304 	mov.w	r3, #528	; 0x210
 800ef1e:	fb03 2301 	mla	r3, r3, r1, r2
 800ef22:	2000      	movs	r0, #0
 800ef24:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800ef28:	e7c9      	b.n	800eebe <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x162>
 800ef2a:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 800ef2e:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800ef32:	4b31      	ldr	r3, [pc, #196]	; (800eff8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29c>)
 800ef34:	6858      	ldr	r0, [r3, #4]
 800ef36:	4b31      	ldr	r3, [pc, #196]	; (800effc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2a0>)
 800ef38:	6018      	str	r0, [r3, #0]
 800ef3a:	2310      	movs	r3, #16
 800ef3c:	f8c6 3428 	str.w	r3, [r6, #1064]	; 0x428
 800ef40:	e7bd      	b.n	800eebe <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x162>
 800ef42:	fb03 2301 	mla	r3, r3, r1, r2
 800ef46:	28aa      	cmp	r0, #170	; 0xaa
 800ef48:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800ef4c:	5518      	strb	r0, [r3, r4]
 800ef4e:	f104 0401 	add.w	r4, r4, #1
 800ef52:	b2a4      	uxth	r4, r4
 800ef54:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800ef58:	d002      	beq.n	800ef60 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x204>
 800ef5a:	2c09      	cmp	r4, #9
 800ef5c:	f47f af44 	bne.w	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ef60:	f44f 7304 	mov.w	r3, #528	; 0x210
 800ef64:	fb03 2301 	mla	r3, r3, r1, r2
 800ef68:	2200      	movs	r2, #0
 800ef6a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800ef6e:	2209      	movs	r2, #9
 800ef70:	e749      	b.n	800ee06 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800ef72:	fb03 2101 	mla	r1, r3, r1, r2
 800ef76:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800ef7a:	54c8      	strb	r0, [r1, r3]
 800ef7c:	3301      	adds	r3, #1
 800ef7e:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800ef82:	f8b1 3208 	ldrh.w	r3, [r1, #520]	; 0x208
 800ef86:	3301      	adds	r3, #1
 800ef88:	b29b      	uxth	r3, r3
 800ef8a:	2b0c      	cmp	r3, #12
 800ef8c:	d002      	beq.n	800ef94 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x238>
 800ef8e:	f8a1 3208 	strh.w	r3, [r1, #520]	; 0x208
 800ef92:	e729      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ef94:	2300      	movs	r3, #0
 800ef96:	f8a1 3208 	strh.w	r3, [r1, #520]	; 0x208
 800ef9a:	230a      	movs	r3, #10
 800ef9c:	e7a1      	b.n	800eee2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800ef9e:	fb03 2101 	mla	r1, r3, r1, r2
 800efa2:	f8b1 2208 	ldrh.w	r2, [r1, #520]	; 0x208
 800efa6:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800efaa:	3201      	adds	r2, #1
 800efac:	b292      	uxth	r2, r2
 800efae:	54c8      	strb	r0, [r1, r3]
 800efb0:	3301      	adds	r3, #1
 800efb2:	b29b      	uxth	r3, r3
 800efb4:	2a04      	cmp	r2, #4
 800efb6:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800efba:	f8a1 2208 	strh.w	r2, [r1, #520]	; 0x208
 800efbe:	f47f af13 	bne.w	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800efc2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800efc6:	2200      	movs	r2, #0
 800efc8:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800efcc:	4b0a      	ldr	r3, [pc, #40]	; (800eff8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29c>)
 800efce:	f8c1 220c 	str.w	r2, [r1, #524]	; 0x20c
 800efd2:	685a      	ldr	r2, [r3, #4]
 800efd4:	4b09      	ldr	r3, [pc, #36]	; (800effc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2a0>)
 800efd6:	601a      	str	r2, [r3, #0]
 800efd8:	e706      	b.n	800ede8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800efda:	fb03 2101 	mla	r1, r3, r1, r2
 800efde:	2300      	movs	r3, #0
 800efe0:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800efe4:	e77d      	b.n	800eee2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800efe6:	bf00      	nop
 800efe8:	40020000 	andmi	r0, r2, r0
 800efec:	20000810 	andcs	r0, r0, r0, lsl r8
 800eff0:	20001040 	andcs	r1, r0, r0, asr #32
 800eff4:	00cc0001 	sbceq	r0, ip, r1
 800eff8:	e0001000 	and	r1, r0, r0
 800effc:	20001068 	andcs	r1, r0, r8, rrx

0800f000 <USART2_IRQHandler>:
 800f000:	4801      	ldr	r0, [pc, #4]	; (800f008 <USART2_IRQHandler+0x8>)
 800f002:	2100      	movs	r1, #0
 800f004:	f7ff beaa 	b.w	800ed5c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800f008:	40004800 	andmi	r4, r0, r0, lsl #16

0800f00c <USART5_IRQHandler>:
 800f00c:	4801      	ldr	r0, [pc, #4]	; (800f014 <USART5_IRQHandler+0x8>)
 800f00e:	2101      	movs	r1, #1
 800f010:	f7ff bea4 	b.w	800ed5c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800f014:	40011400 	andmi	r1, r1, r0, lsl #8

0800f018 <TIMER1_IRQHandler>:
 800f018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f01a:	f3bf 8f5f 	dmb	sy
 800f01e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f022:	4d48      	ldr	r5, [pc, #288]	; (800f144 <TIMER1_IRQHandler+0x12c>)
 800f024:	691e      	ldr	r6, [r3, #16]
 800f026:	4f48      	ldr	r7, [pc, #288]	; (800f148 <TIMER1_IRQHandler+0x130>)
 800f028:	882c      	ldrh	r4, [r5, #0]
 800f02a:	2308      	movs	r3, #8
 800f02c:	07b1      	lsls	r1, r6, #30
 800f02e:	b2a4      	uxth	r4, r4
 800f030:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
 800f034:	d52a      	bpl.n	800f08c <TIMER1_IRQHandler+0x74>
 800f036:	07e2      	lsls	r2, r4, #31
 800f038:	d50d      	bpl.n	800f056 <TIMER1_IRQHandler+0x3e>
 800f03a:	882b      	ldrh	r3, [r5, #0]
 800f03c:	4843      	ldr	r0, [pc, #268]	; (800f14c <TIMER1_IRQHandler+0x134>)
 800f03e:	b29b      	uxth	r3, r3
 800f040:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f044:	f44f 7180 	mov.w	r1, #256	; 0x100
 800f048:	802b      	strh	r3, [r5, #0]
 800f04a:	f7ff fe6a 	bl	800ed22 <_gpio_mode_output(unsigned int, unsigned int)>
 800f04e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f052:	f8c7 3c28 	str.w	r3, [r7, #3112]	; 0xc28
 800f056:	07a3      	lsls	r3, r4, #30
 800f058:	d50c      	bpl.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f05a:	882b      	ldrh	r3, [r5, #0]
 800f05c:	483c      	ldr	r0, [pc, #240]	; (800f150 <TIMER1_IRQHandler+0x138>)
 800f05e:	b29b      	uxth	r3, r3
 800f060:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800f064:	2140      	movs	r1, #64	; 0x40
 800f066:	802b      	strh	r3, [r5, #0]
 800f068:	f7ff fe5b 	bl	800ed22 <_gpio_mode_output(unsigned int, unsigned int)>
 800f06c:	4b36      	ldr	r3, [pc, #216]	; (800f148 <TIMER1_IRQHandler+0x130>)
 800f06e:	2240      	movs	r2, #64	; 0x40
 800f070:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 800f074:	4631      	mov	r1, r6
 800f076:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f07a:	f007 fdba 	bl	8016bf2 <timer_interrupt_flag_clear>
 800f07e:	4b32      	ldr	r3, [pc, #200]	; (800f148 <TIMER1_IRQHandler+0x130>)
 800f080:	2208      	movs	r2, #8
 800f082:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 800f086:	f3bf 8f5f 	dmb	sy
 800f08a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f08c:	0777      	lsls	r7, r6, #29
 800f08e:	d51c      	bpl.n	800f0ca <TIMER1_IRQHandler+0xb2>
 800f090:	05e5      	lsls	r5, r4, #23
 800f092:	d50c      	bpl.n	800f0ae <TIMER1_IRQHandler+0x96>
 800f094:	482d      	ldr	r0, [pc, #180]	; (800f14c <TIMER1_IRQHandler+0x134>)
 800f096:	2201      	movs	r2, #1
 800f098:	2102      	movs	r1, #2
 800f09a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f09e:	f007 fb8f 	bl	80167c0 <gpio_mode_set>
 800f0a2:	482a      	ldr	r0, [pc, #168]	; (800f14c <TIMER1_IRQHandler+0x134>)
 800f0a4:	f44f 7280 	mov.w	r2, #256	; 0x100
 800f0a8:	2107      	movs	r1, #7
 800f0aa:	f007 fbc4 	bl	8016836 <gpio_af_set>
 800f0ae:	05a0      	lsls	r0, r4, #22
 800f0b0:	d5e0      	bpl.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f0b2:	4827      	ldr	r0, [pc, #156]	; (800f150 <TIMER1_IRQHandler+0x138>)
 800f0b4:	2340      	movs	r3, #64	; 0x40
 800f0b6:	2201      	movs	r2, #1
 800f0b8:	2102      	movs	r1, #2
 800f0ba:	f007 fb81 	bl	80167c0 <gpio_mode_set>
 800f0be:	4824      	ldr	r0, [pc, #144]	; (800f150 <TIMER1_IRQHandler+0x138>)
 800f0c0:	2240      	movs	r2, #64	; 0x40
 800f0c2:	2108      	movs	r1, #8
 800f0c4:	f007 fbb7 	bl	8016836 <gpio_af_set>
 800f0c8:	e7d4      	b.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f0ca:	0731      	lsls	r1, r6, #28
 800f0cc:	d5d2      	bpl.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f0ce:	05e2      	lsls	r2, r4, #23
 800f0d0:	d516      	bpl.n	800f100 <TIMER1_IRQHandler+0xe8>
 800f0d2:	4d20      	ldr	r5, [pc, #128]	; (800f154 <TIMER1_IRQHandler+0x13c>)
 800f0d4:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800f0d6:	f023 0301 	bic.w	r3, r3, #1
 800f0da:	65ab      	str	r3, [r5, #88]	; 0x58
 800f0dc:	2103      	movs	r1, #3
 800f0de:	4628      	mov	r0, r5
 800f0e0:	2220      	movs	r2, #32
 800f0e2:	f007 fb31 	bl	8016748 <dma_interrupt_flag_clear>
 800f0e6:	4b1c      	ldr	r3, [pc, #112]	; (800f158 <TIMER1_IRQHandler+0x140>)
 800f0e8:	666b      	str	r3, [r5, #100]	; 0x64
 800f0ea:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800f0ee:	65eb      	str	r3, [r5, #92]	; 0x5c
 800f0f0:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800f0f2:	481a      	ldr	r0, [pc, #104]	; (800f15c <TIMER1_IRQHandler+0x144>)
 800f0f4:	f043 0301 	orr.w	r3, r3, #1
 800f0f8:	65ab      	str	r3, [r5, #88]	; 0x58
 800f0fa:	2180      	movs	r1, #128	; 0x80
 800f0fc:	f007 ffc0 	bl	8017080 <usart_dma_transmit_config>
 800f100:	05a3      	lsls	r3, r4, #22
 800f102:	d5b7      	bpl.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f104:	4c13      	ldr	r4, [pc, #76]	; (800f154 <TIMER1_IRQHandler+0x13c>)
 800f106:	4816      	ldr	r0, [pc, #88]	; (800f160 <TIMER1_IRQHandler+0x148>)
 800f108:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800f10c:	f023 0301 	bic.w	r3, r3, #1
 800f110:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800f114:	2220      	movs	r2, #32
 800f116:	2106      	movs	r1, #6
 800f118:	f007 fb16 	bl	8016748 <dma_interrupt_flag_clear>
 800f11c:	4b0e      	ldr	r3, [pc, #56]	; (800f158 <TIMER1_IRQHandler+0x140>)
 800f11e:	4811      	ldr	r0, [pc, #68]	; (800f164 <TIMER1_IRQHandler+0x14c>)
 800f120:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800f124:	f8b3 3406 	ldrh.w	r3, [r3, #1030]	; 0x406
 800f128:	f8c4 24ac 	str.w	r2, [r4, #1196]	; 0x4ac
 800f12c:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 800f130:	f8d4 34a0 	ldr.w	r3, [r4, #1184]	; 0x4a0
 800f134:	f043 0301 	orr.w	r3, r3, #1
 800f138:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
 800f13c:	2180      	movs	r1, #128	; 0x80
 800f13e:	f007 ff9f 	bl	8017080 <usart_dma_transmit_config>
 800f142:	e797      	b.n	800f074 <TIMER1_IRQHandler+0x5c>
 800f144:	20001060 	andcs	r1, r0, r0, rrx
 800f148:	40020000 	andmi	r0, r2, r0
 800f14c:	40020c00 	andmi	r0, r2, r0, lsl #24
 800f150:	40020800 	andmi	r0, r2, r0, lsl #16
 800f154:	40026000 	andmi	r6, r2, r0
 800f158:	20000c30 	andcs	r0, r0, r0, lsr ip
 800f15c:	40004800 	andmi	r4, r0, r0, lsl #16
 800f160:	40026400 	andmi	r6, r2, r0, lsl #8
 800f164:	40011400 	andmi	r1, r1, r0, lsl #8

0800f168 <Dmx::ClearData(unsigned int)>:
 800f168:	4a0a      	ldr	r2, [pc, #40]	; (800f194 <Dmx::ClearData(unsigned int)+0x2c>)
 800f16a:	f44f 7301 	mov.w	r3, #516	; 0x204
 800f16e:	fb03 2301 	mla	r3, r3, r1, r2
 800f172:	b510      	push	{r4, lr}
 800f174:	f203 2002 	addw	r0, r3, #514	; 0x202
 800f178:	2400      	movs	r4, #0
 800f17a:	f823 4b02 	strh.w	r4, [r3], #2
 800f17e:	4283      	cmp	r3, r0
 800f180:	d1fb      	bne.n	800f17a <Dmx::ClearData(unsigned int)+0x12>
 800f182:	f44f 7301 	mov.w	r3, #516	; 0x204
 800f186:	fb03 2101 	mla	r1, r3, r1, r2
 800f18a:	f240 2301 	movw	r3, #513	; 0x201
 800f18e:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 800f192:	bd10      	pop	{r4, pc}
 800f194:	20000c30 	andcs	r0, r0, r0, lsr ip

0800f198 <Dmx::StartData(unsigned int, unsigned int)>:
 800f198:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f19a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800f19e:	b085      	sub	sp, #20
 800f1a0:	6943      	ldr	r3, [r0, #20]
 800f1a2:	460c      	mov	r4, r1
 800f1a4:	4615      	mov	r5, r2
 800f1a6:	2b00      	cmp	r3, #0
 800f1a8:	d168      	bne.n	800f27c <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800f1aa:	4e41      	ldr	r6, [pc, #260]	; (800f2b0 <Dmx::StartData(unsigned int, unsigned int)+0x118>)
 800f1ac:	8834      	ldrh	r4, [r6, #0]
 800f1ae:	b2a4      	uxth	r4, r4
 800f1b0:	2c00      	cmp	r4, #0
 800f1b2:	d157      	bne.n	800f264 <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 800f1b4:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800f1b8:	f007 fb7e 	bl	80168b8 <rcu_periph_clock_enable>
 800f1bc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f1c0:	f007 fc2a 	bl	8016a18 <timer_deinit>
 800f1c4:	4b3b      	ldr	r3, [pc, #236]	; (800f2b4 <Dmx::StartData(unsigned int, unsigned int)+0x11c>)
 800f1c6:	f88d 400c 	strb.w	r4, [sp, #12]
 800f1ca:	681b      	ldr	r3, [r3, #0]
 800f1cc:	9302      	str	r3, [sp, #8]
 800f1ce:	4669      	mov	r1, sp
 800f1d0:	23c7      	movs	r3, #199	; 0xc7
 800f1d2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f1d6:	e9cd 3400 	strd	r3, r4, [sp]
 800f1da:	f007 fcc3 	bl	8016b64 <timer_init>
 800f1de:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800f1e2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f1e6:	f007 fd07 	bl	8016bf8 <timer_flag_clear>
 800f1ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800f1ee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f1f2:	f007 fcfe 	bl	8016bf2 <timer_interrupt_flag_clear>
 800f1f6:	2210      	movs	r2, #16
 800f1f8:	4621      	mov	r1, r4
 800f1fa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f1fe:	f007 fdeb 	bl	8016dd8 <timer_channel_output_mode_config>
 800f202:	2210      	movs	r2, #16
 800f204:	2101      	movs	r1, #1
 800f206:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f20a:	f007 fde5 	bl	8016dd8 <timer_channel_output_mode_config>
 800f20e:	4f2a      	ldr	r7, [pc, #168]	; (800f2b8 <Dmx::StartData(unsigned int, unsigned int)+0x120>)
 800f210:	2210      	movs	r2, #16
 800f212:	2102      	movs	r1, #2
 800f214:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f218:	f007 fdde 	bl	8016dd8 <timer_channel_output_mode_config>
 800f21c:	4622      	mov	r2, r4
 800f21e:	4621      	mov	r1, r4
 800f220:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f224:	f007 fdfe 	bl	8016e24 <timer_channel_output_pulse_value_config>
 800f228:	683a      	ldr	r2, [r7, #0]
 800f22a:	2101      	movs	r1, #1
 800f22c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f230:	f007 fdf8 	bl	8016e24 <timer_channel_output_pulse_value_config>
 800f234:	4b21      	ldr	r3, [pc, #132]	; (800f2bc <Dmx::StartData(unsigned int, unsigned int)+0x124>)
 800f236:	683a      	ldr	r2, [r7, #0]
 800f238:	681b      	ldr	r3, [r3, #0]
 800f23a:	2102      	movs	r1, #2
 800f23c:	441a      	add	r2, r3
 800f23e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f242:	f007 fdef 	bl	8016e24 <timer_channel_output_pulse_value_config>
 800f246:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f24a:	210e      	movs	r1, #14
 800f24c:	f007 fccd 	bl	8016bea <timer_interrupt_enable>
 800f250:	4b1b      	ldr	r3, [pc, #108]	; (800f2c0 <Dmx::StartData(unsigned int, unsigned int)+0x128>)
 800f252:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f256:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800f25a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f25e:	601a      	str	r2, [r3, #0]
 800f260:	f007 fcbe 	bl	8016be0 <timer_enable>
 800f264:	8831      	ldrh	r1, [r6, #0]
 800f266:	2201      	movs	r2, #1
 800f268:	fa02 f305 	lsl.w	r3, r2, r5
 800f26c:	430b      	orrs	r3, r1
 800f26e:	b29b      	uxth	r3, r3
 800f270:	8033      	strh	r3, [r6, #0]
 800f272:	4b14      	ldr	r3, [pc, #80]	; (800f2c4 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800f274:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800f278:	b005      	add	sp, #20
 800f27a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f27c:	4b12      	ldr	r3, [pc, #72]	; (800f2c8 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800f27e:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f282:	fb02 3305 	mla	r3, r2, r5, r3
 800f286:	2200      	movs	r2, #0
 800f288:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800f28c:	2107      	movs	r1, #7
 800f28e:	4620      	mov	r0, r4
 800f290:	f007 fefc 	bl	801708c <usart_flag_get>
 800f294:	2800      	cmp	r0, #0
 800f296:	d0f9      	beq.n	800f28c <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 800f298:	490c      	ldr	r1, [pc, #48]	; (800f2cc <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800f29a:	4620      	mov	r0, r4
 800f29c:	f007 ff18 	bl	80170d0 <usart_interrupt_flag_clear>
 800f2a0:	f240 3105 	movw	r1, #773	; 0x305
 800f2a4:	4620      	mov	r0, r4
 800f2a6:	f007 ff07 	bl	80170b8 <usart_interrupt_enable>
 800f2aa:	4b06      	ldr	r3, [pc, #24]	; (800f2c4 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 800f2ac:	2202      	movs	r2, #2
 800f2ae:	e7e1      	b.n	800f274 <Dmx::StartData(unsigned int, unsigned int)+0xdc>
 800f2b0:	20001060 	andcs	r1, r0, r0, rrx
 800f2b4:	20000004 	andcs	r0, r0, r4
 800f2b8:	2000000c 	andcs	r0, r0, ip
 800f2bc:	20000008 	andcs	r0, r0, r8
 800f2c0:	e000e100 	and	lr, r0, r0, lsl #2
 800f2c4:	20001038 	andcs	r1, r0, r8, lsr r0
 800f2c8:	20000810 	andcs	r0, r0, r0, lsl r8
 800f2cc:	00050305 	andeq	r0, r5, r5, lsl #6

0800f2d0 <Dmx::StopData(unsigned int, unsigned int)>:
 800f2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2d4:	4f1e      	ldr	r7, [pc, #120]	; (800f350 <Dmx::StopData(unsigned int, unsigned int)+0x80>)
 800f2d6:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800f2da:	4688      	mov	r8, r1
 800f2dc:	4614      	mov	r4, r2
 800f2de:	b333      	cbz	r3, 800f32e <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800f2e0:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800f2e4:	6943      	ldr	r3, [r0, #20]
 800f2e6:	bb23      	cbnz	r3, 800f332 <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800f2e8:	4d1a      	ldr	r5, [pc, #104]	; (800f354 <Dmx::StopData(unsigned int, unsigned int)+0x84>)
 800f2ea:	882b      	ldrh	r3, [r5, #0]
 800f2ec:	2601      	movs	r6, #1
 800f2ee:	fa06 f202 	lsl.w	r2, r6, r2
 800f2f2:	b29b      	uxth	r3, r3
 800f2f4:	ea23 0302 	bic.w	r3, r3, r2
 800f2f8:	802b      	strh	r3, [r5, #0]
 800f2fa:	f3bf 8f5f 	dmb	sy
 800f2fe:	882b      	ldrh	r3, [r5, #0]
 800f300:	f104 0208 	add.w	r2, r4, #8
 800f304:	b29b      	uxth	r3, r3
 800f306:	4096      	lsls	r6, r2
 800f308:	ea36 0303 	bics.w	r3, r6, r3
 800f30c:	d105      	bne.n	800f31a <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800f30e:	2107      	movs	r1, #7
 800f310:	4640      	mov	r0, r8
 800f312:	f007 febb 	bl	801708c <usart_flag_get>
 800f316:	2801      	cmp	r0, #1
 800f318:	d1f9      	bne.n	800f30e <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800f31a:	882b      	ldrh	r3, [r5, #0]
 800f31c:	b29b      	uxth	r3, r3
 800f31e:	ea23 0306 	bic.w	r3, r3, r6
 800f322:	802b      	strh	r3, [r5, #0]
 800f324:	f3bf 8f4f 	dsb	sy
 800f328:	2300      	movs	r3, #0
 800f32a:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800f32e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f332:	f240 3105 	movw	r1, #773	; 0x305
 800f336:	4640      	mov	r0, r8
 800f338:	f007 fec8 	bl	80170cc <usart_interrupt_disable>
 800f33c:	4b06      	ldr	r3, [pc, #24]	; (800f358 <Dmx::StopData(unsigned int, unsigned int)+0x88>)
 800f33e:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f342:	fb02 3304 	mla	r3, r2, r4, r3
 800f346:	2200      	movs	r2, #0
 800f348:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800f34c:	e7ec      	b.n	800f328 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800f34e:	bf00      	nop
 800f350:	20001038 	andcs	r1, r0, r8, lsr r0
 800f354:	20001060 	andcs	r1, r0, r0, rrx
 800f358:	20000810 	andcs	r0, r0, r0, lsl r8

0800f35c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800f35c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f35e:	4605      	mov	r5, r0
 800f360:	460c      	mov	r4, r1
 800f362:	4608      	mov	r0, r1
 800f364:	4616      	mov	r6, r2
 800f366:	461f      	mov	r7, r3
 800f368:	f7ff fcec 	bl	800ed44 <_port_to_uart(unsigned int)>
 800f36c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800f370:	4601      	mov	r1, r0
 800f372:	695a      	ldr	r2, [r3, #20]
 800f374:	42b2      	cmp	r2, r6
 800f376:	d01b      	beq.n	800f3b0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800f378:	9001      	str	r0, [sp, #4]
 800f37a:	615e      	str	r6, [r3, #20]
 800f37c:	4622      	mov	r2, r4
 800f37e:	4628      	mov	r0, r5
 800f380:	f7ff ffa6 	bl	800f2d0 <Dmx::StopData(unsigned int, unsigned int)>
 800f384:	9901      	ldr	r1, [sp, #4]
 800f386:	b94e      	cbnz	r6, 800f39c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800f388:	4b11      	ldr	r3, [pc, #68]	; (800f3d0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800f38a:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800f38e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f392:	685b      	ldr	r3, [r3, #4]
 800f394:	6193      	str	r3, [r2, #24]
 800f396:	b967      	cbnz	r7, 800f3b2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800f398:	b003      	add	sp, #12
 800f39a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f39c:	2e01      	cmp	r6, #1
 800f39e:	d1fa      	bne.n	800f396 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800f3a0:	4b0b      	ldr	r3, [pc, #44]	; (800f3d0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800f3a2:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800f3a6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f3aa:	685b      	ldr	r3, [r3, #4]
 800f3ac:	6293      	str	r3, [r2, #40]	; 0x28
 800f3ae:	e7f2      	b.n	800f396 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800f3b0:	b137      	cbz	r7, 800f3c0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800f3b2:	4622      	mov	r2, r4
 800f3b4:	4628      	mov	r0, r5
 800f3b6:	b003      	add	sp, #12
 800f3b8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f3bc:	f7ff beec 	b.w	800f198 <Dmx::StartData(unsigned int, unsigned int)>
 800f3c0:	4622      	mov	r2, r4
 800f3c2:	4628      	mov	r0, r5
 800f3c4:	b003      	add	sp, #12
 800f3c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f3ca:	f7ff bf81 	b.w	800f2d0 <Dmx::StopData(unsigned int, unsigned int)>
 800f3ce:	bf00      	nop
 800f3d0:	0801a5c0 	stmdaeq	r1, {r6, r7, r8, sl, sp, pc}

0800f3d4 <Dmx::Dmx()>:
 800f3d4:	230c      	movs	r3, #12
 800f3d6:	225c      	movs	r2, #92	; 0x5c
 800f3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3dc:	e9c0 2300 	strd	r2, r3, [r0]
 800f3e0:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800f3e4:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800f3e8:	f44f 7300 	mov.w	r3, #512	; 0x200
 800f3ec:	8203      	strh	r3, [r0, #16]
 800f3ee:	4b46      	ldr	r3, [pc, #280]	; (800f508 <Dmx::Dmx()+0x134>)
 800f3f0:	4f46      	ldr	r7, [pc, #280]	; (800f50c <Dmx::Dmx()+0x138>)
 800f3f2:	6018      	str	r0, [r3, #0]
 800f3f4:	4b46      	ldr	r3, [pc, #280]	; (800f510 <Dmx::Dmx()+0x13c>)
 800f3f6:	2400      	movs	r4, #0
 800f3f8:	b08e      	sub	sp, #56	; 0x38
 800f3fa:	4605      	mov	r5, r0
 800f3fc:	801c      	strh	r4, [r3, #0]
 800f3fe:	4626      	mov	r6, r4
 800f400:	e9d7 0800 	ldrd	r0, r8, [r7]
 800f404:	2202      	movs	r2, #2
 800f406:	4643      	mov	r3, r8
 800f408:	2101      	movs	r1, #1
 800f40a:	9003      	str	r0, [sp, #12]
 800f40c:	f007 f9d8 	bl	80167c0 <gpio_mode_set>
 800f410:	4643      	mov	r3, r8
 800f412:	9803      	ldr	r0, [sp, #12]
 800f414:	2202      	movs	r2, #2
 800f416:	2100      	movs	r1, #0
 800f418:	f007 f9f2 	bl	8016800 <gpio_output_options_set>
 800f41c:	4642      	mov	r2, r8
 800f41e:	9803      	ldr	r0, [sp, #12]
 800f420:	2100      	movs	r1, #0
 800f422:	f007 fa08 	bl	8016836 <gpio_af_set>
 800f426:	4621      	mov	r1, r4
 800f428:	4628      	mov	r0, r5
 800f42a:	f7ff fe9d 	bl	800f168 <Dmx::ClearData(unsigned int)>
 800f42e:	4b39      	ldr	r3, [pc, #228]	; (800f514 <Dmx::Dmx()+0x140>)
 800f430:	2201      	movs	r2, #1
 800f432:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800f436:	4621      	mov	r1, r4
 800f438:	2300      	movs	r3, #0
 800f43a:	4628      	mov	r0, r5
 800f43c:	f7ff ff8e 	bl	800f35c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800f440:	4b35      	ldr	r3, [pc, #212]	; (800f518 <Dmx::Dmx()+0x144>)
 800f442:	f44f 7204 	mov.w	r2, #528	; 0x210
 800f446:	fb02 3304 	mla	r3, r2, r4, r3
 800f44a:	3708      	adds	r7, #8
 800f44c:	f8c3 620c 	str.w	r6, [r3, #524]	; 0x20c
 800f450:	2c00      	cmp	r4, #0
 800f452:	d056      	beq.n	800f502 <Dmx::Dmx()+0x12e>
 800f454:	f640 4015 	movw	r0, #3093	; 0xc15
 800f458:	f007 fa2e 	bl	80168b8 <rcu_periph_clock_enable>
 800f45c:	f640 4016 	movw	r0, #3094	; 0xc16
 800f460:	f007 fa2a 	bl	80168b8 <rcu_periph_clock_enable>
 800f464:	482d      	ldr	r0, [pc, #180]	; (800f51c <Dmx::Dmx()+0x148>)
 800f466:	2103      	movs	r1, #3
 800f468:	f007 f8cc 	bl	8016604 <dma_deinit>
 800f46c:	4b2c      	ldr	r3, [pc, #176]	; (800f520 <Dmx::Dmx()+0x14c>)
 800f46e:	482b      	ldr	r0, [pc, #172]	; (800f51c <Dmx::Dmx()+0x148>)
 800f470:	9608      	str	r6, [sp, #32]
 800f472:	aa05      	add	r2, sp, #20
 800f474:	f04f 0840 	mov.w	r8, #64	; 0x40
 800f478:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 800f47c:	2103      	movs	r1, #3
 800f47e:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f482:	9609      	str	r6, [sp, #36]	; 0x24
 800f484:	970d      	str	r7, [sp, #52]	; 0x34
 800f486:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f48a:	f007 f8f2 	bl	8016672 <dma_single_data_mode_init>
 800f48e:	4823      	ldr	r0, [pc, #140]	; (800f51c <Dmx::Dmx()+0x148>)
 800f490:	2103      	movs	r1, #3
 800f492:	f007 f92d 	bl	80166f0 <dma_circulation_disable>
 800f496:	2204      	movs	r2, #4
 800f498:	4820      	ldr	r0, [pc, #128]	; (800f51c <Dmx::Dmx()+0x148>)
 800f49a:	2103      	movs	r1, #3
 800f49c:	f007 f930 	bl	8016700 <dma_channel_subperipheral_select>
 800f4a0:	4820      	ldr	r0, [pc, #128]	; (800f524 <Dmx::Dmx()+0x150>)
 800f4a2:	2106      	movs	r1, #6
 800f4a4:	f007 f8ae 	bl	8016604 <dma_deinit>
 800f4a8:	4b1f      	ldr	r3, [pc, #124]	; (800f528 <Dmx::Dmx()+0x154>)
 800f4aa:	481e      	ldr	r0, [pc, #120]	; (800f524 <Dmx::Dmx()+0x150>)
 800f4ac:	9608      	str	r6, [sp, #32]
 800f4ae:	aa05      	add	r2, sp, #20
 800f4b0:	2106      	movs	r1, #6
 800f4b2:	e9cd 3405 	strd	r3, r4, [sp, #20]
 800f4b6:	9609      	str	r6, [sp, #36]	; 0x24
 800f4b8:	970d      	str	r7, [sp, #52]	; 0x34
 800f4ba:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800f4be:	f007 f8d8 	bl	8016672 <dma_single_data_mode_init>
 800f4c2:	4818      	ldr	r0, [pc, #96]	; (800f524 <Dmx::Dmx()+0x150>)
 800f4c4:	4c19      	ldr	r4, [pc, #100]	; (800f52c <Dmx::Dmx()+0x158>)
 800f4c6:	2106      	movs	r1, #6
 800f4c8:	f007 f912 	bl	80166f0 <dma_circulation_disable>
 800f4cc:	2702      	movs	r7, #2
 800f4ce:	4815      	ldr	r0, [pc, #84]	; (800f524 <Dmx::Dmx()+0x150>)
 800f4d0:	2205      	movs	r2, #5
 800f4d2:	2106      	movs	r1, #6
 800f4d4:	f007 f914 	bl	8016700 <dma_channel_subperipheral_select>
 800f4d8:	2680      	movs	r6, #128	; 0x80
 800f4da:	4915      	ldr	r1, [pc, #84]	; (800f530 <Dmx::Dmx()+0x15c>)
 800f4dc:	4815      	ldr	r0, [pc, #84]	; (800f534 <Dmx::Dmx()+0x160>)
 800f4de:	9700      	str	r7, [sp, #0]
 800f4e0:	2300      	movs	r3, #0
 800f4e2:	2208      	movs	r2, #8
 800f4e4:	f008 f942 	bl	801776c <gd32_uart_begin>
 800f4e8:	6066      	str	r6, [r4, #4]
 800f4ea:	4911      	ldr	r1, [pc, #68]	; (800f530 <Dmx::Dmx()+0x15c>)
 800f4ec:	4812      	ldr	r0, [pc, #72]	; (800f538 <Dmx::Dmx()+0x164>)
 800f4ee:	9700      	str	r7, [sp, #0]
 800f4f0:	2300      	movs	r3, #0
 800f4f2:	2208      	movs	r2, #8
 800f4f4:	f008 f93a 	bl	801776c <gd32_uart_begin>
 800f4f8:	4628      	mov	r0, r5
 800f4fa:	60a6      	str	r6, [r4, #8]
 800f4fc:	b00e      	add	sp, #56	; 0x38
 800f4fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f502:	2401      	movs	r4, #1
 800f504:	e77c      	b.n	800f400 <Dmx::Dmx()+0x2c>
 800f506:	bf00      	nop
 800f508:	20001064 	andcs	r1, r0, r4, rrx
 800f50c:	0801a5c0 	stmdaeq	r1, {r6, r7, r8, sl, sp, pc}
 800f510:	20001060 	andcs	r1, r0, r0, rrx
 800f514:	20001038 	andcs	r1, r0, r8, lsr r0
 800f518:	20000810 	andcs	r0, r0, r0, lsl r8
 800f51c:	40026000 	andmi	r6, r2, r0
 800f520:	40004804 	andmi	r4, r0, r4, lsl #16
 800f524:	40026400 	andmi	r6, r2, r0, lsl #8
 800f528:	40011404 	andmi	r1, r1, r4, lsl #8
 800f52c:	e000e100 	and	lr, r0, r0, lsl #2
 800f530:	0003d090 	muleq	r3, r0, r0
 800f534:	40004800 	andmi	r4, r0, r0, lsl #16
 800f538:	40011400 	andmi	r1, r1, r0, lsl #8

0800f53c <Dmx::SetDmxPeriodTime(unsigned int)>:
 800f53c:	4b0f      	ldr	r3, [pc, #60]	; (800f57c <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 800f53e:	60c1      	str	r1, [r0, #12]
 800f540:	f8b3 2406 	ldrh.w	r2, [r3, #1030]	; 0x406
 800f544:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800f548:	480d      	ldr	r0, [pc, #52]	; (800f580 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 800f54a:	429a      	cmp	r2, r3
 800f54c:	bf38      	it	cc
 800f54e:	461a      	movcc	r2, r3
 800f550:	4b0c      	ldr	r3, [pc, #48]	; (800f584 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>)
 800f552:	6800      	ldr	r0, [r0, #0]
 800f554:	681b      	ldr	r3, [r3, #0]
 800f556:	4403      	add	r3, r0
 800f558:	202c      	movs	r0, #44	; 0x2c
 800f55a:	fb00 3302 	mla	r3, r0, r2, r3
 800f55e:	b151      	cbz	r1, 800f576 <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800f560:	4299      	cmp	r1, r3
 800f562:	d205      	bcs.n	800f570 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800f564:	1819      	adds	r1, r3, r0
 800f566:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800f56a:	4299      	cmp	r1, r3
 800f56c:	bf38      	it	cc
 800f56e:	4619      	movcc	r1, r3
 800f570:	4b05      	ldr	r3, [pc, #20]	; (800f588 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>)
 800f572:	6019      	str	r1, [r3, #0]
 800f574:	4770      	bx	lr
 800f576:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800f57a:	e7f4      	b.n	800f566 <Dmx::SetDmxPeriodTime(unsigned int)+0x2a>
 800f57c:	20000c30 	andcs	r0, r0, r0, lsr ip
 800f580:	20000008 	andcs	r0, r0, r8
 800f584:	2000000c 	andcs	r0, r0, ip
 800f588:	20000004 	andcs	r0, r0, r4

0800f58c <Dmx::SetDmxBreakTime(unsigned int)>:
 800f58c:	295c      	cmp	r1, #92	; 0x5c
 800f58e:	4b03      	ldr	r3, [pc, #12]	; (800f59c <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800f590:	bf38      	it	cc
 800f592:	215c      	movcc	r1, #92	; 0x5c
 800f594:	6019      	str	r1, [r3, #0]
 800f596:	68c1      	ldr	r1, [r0, #12]
 800f598:	f7ff bfd0 	b.w	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 800f59c:	2000000c 	andcs	r0, r0, ip

0800f5a0 <Dmx::SetDmxMabTime(unsigned int)>:
 800f5a0:	290c      	cmp	r1, #12
 800f5a2:	4b03      	ldr	r3, [pc, #12]	; (800f5b0 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800f5a4:	bf38      	it	cc
 800f5a6:	210c      	movcc	r1, #12
 800f5a8:	6019      	str	r1, [r3, #0]
 800f5aa:	68c1      	ldr	r1, [r0, #12]
 800f5ac:	f7ff bfc6 	b.w	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 800f5b0:	20000008 	andcs	r0, r0, r8

0800f5b4 <Dmx::SetDmxSlots(unsigned short)>:
 800f5b4:	1e8b      	subs	r3, r1, #2
 800f5b6:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800f5ba:	d80f      	bhi.n	800f5dc <Dmx::SetDmxSlots(unsigned short)+0x28>
 800f5bc:	69c3      	ldr	r3, [r0, #28]
 800f5be:	8201      	strh	r1, [r0, #16]
 800f5c0:	b11b      	cbz	r3, 800f5ca <Dmx::SetDmxSlots(unsigned short)+0x16>
 800f5c2:	4299      	cmp	r1, r3
 800f5c4:	bf94      	ite	ls
 800f5c6:	61c1      	strls	r1, [r0, #28]
 800f5c8:	61c3      	strhi	r3, [r0, #28]
 800f5ca:	6a03      	ldr	r3, [r0, #32]
 800f5cc:	b11b      	cbz	r3, 800f5d6 <Dmx::SetDmxSlots(unsigned short)+0x22>
 800f5ce:	4299      	cmp	r1, r3
 800f5d0:	bf94      	ite	ls
 800f5d2:	6201      	strls	r1, [r0, #32]
 800f5d4:	6203      	strhi	r3, [r0, #32]
 800f5d6:	68c1      	ldr	r1, [r0, #12]
 800f5d8:	f7ff bfb0 	b.w	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 800f5dc:	4770      	bx	lr
	...

0800f5e0 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800f5e0:	b470      	push	{r4, r5, r6}
 800f5e2:	8a04      	ldrh	r4, [r0, #16]
 800f5e4:	f892 f000 	pld	[r2]
 800f5e8:	42a3      	cmp	r3, r4
 800f5ea:	bf28      	it	cs
 800f5ec:	4623      	movcs	r3, r4
 800f5ee:	4c0e      	ldr	r4, [pc, #56]	; (800f628 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800f5f0:	f44f 7501 	mov.w	r5, #516	; 0x204
 800f5f4:	fb05 4401 	mla	r4, r5, r1, r4
 800f5f8:	1c5d      	adds	r5, r3, #1
 800f5fa:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800f5fe:	18d5      	adds	r5, r2, r3
 800f600:	4295      	cmp	r5, r2
 800f602:	d109      	bne.n	800f618 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800f604:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800f608:	69ca      	ldr	r2, [r1, #28]
 800f60a:	429a      	cmp	r2, r3
 800f60c:	d009      	beq.n	800f622 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800f60e:	61cb      	str	r3, [r1, #28]
 800f610:	bc70      	pop	{r4, r5, r6}
 800f612:	68c1      	ldr	r1, [r0, #12]
 800f614:	f7ff bf92 	b.w	800f53c <Dmx::SetDmxPeriodTime(unsigned int)>
 800f618:	f812 6b01 	ldrb.w	r6, [r2], #1
 800f61c:	f804 6f01 	strb.w	r6, [r4, #1]!
 800f620:	e7ee      	b.n	800f600 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800f622:	bc70      	pop	{r4, r5, r6}
 800f624:	4770      	bx	lr
 800f626:	bf00      	nop
 800f628:	20000c30 	andcs	r0, r0, r0, lsr ip

0800f62c <Dmx::Blackout()>:
 800f62c:	b538      	push	{r3, r4, r5, lr}
 800f62e:	4c1e      	ldr	r4, [pc, #120]	; (800f6a8 <Dmx::Blackout()+0x7c>)
 800f630:	8823      	ldrh	r3, [r4, #0]
 800f632:	b29b      	uxth	r3, r3
 800f634:	b3bb      	cbz	r3, 800f6a6 <Dmx::Blackout()+0x7a>
 800f636:	f3bf 8f5f 	dmb	sy
 800f63a:	8823      	ldrh	r3, [r4, #0]
 800f63c:	05da      	lsls	r2, r3, #23
 800f63e:	d515      	bpl.n	800f66c <Dmx::Blackout()+0x40>
 800f640:	2000      	movs	r0, #0
 800f642:	f7ff fb7f 	bl	800ed44 <_port_to_uart(unsigned int)>
 800f646:	4605      	mov	r5, r0
 800f648:	2107      	movs	r1, #7
 800f64a:	4628      	mov	r0, r5
 800f64c:	f007 fd1e 	bl	801708c <usart_flag_get>
 800f650:	2801      	cmp	r0, #1
 800f652:	d1f9      	bne.n	800f648 <Dmx::Blackout()+0x1c>
 800f654:	4b15      	ldr	r3, [pc, #84]	; (800f6ac <Dmx::Blackout()+0x80>)
 800f656:	2000      	movs	r0, #0
 800f658:	461a      	mov	r2, r3
 800f65a:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f65e:	f823 0b02 	strh.w	r0, [r3], #2
 800f662:	428b      	cmp	r3, r1
 800f664:	d1fb      	bne.n	800f65e <Dmx::Blackout()+0x32>
 800f666:	f04f 0300 	mov.w	r3, #0
 800f66a:	7013      	strb	r3, [r2, #0]
 800f66c:	f3bf 8f5f 	dmb	sy
 800f670:	8823      	ldrh	r3, [r4, #0]
 800f672:	059b      	lsls	r3, r3, #22
 800f674:	d517      	bpl.n	800f6a6 <Dmx::Blackout()+0x7a>
 800f676:	2001      	movs	r0, #1
 800f678:	f7ff fb64 	bl	800ed44 <_port_to_uart(unsigned int)>
 800f67c:	4604      	mov	r4, r0
 800f67e:	2107      	movs	r1, #7
 800f680:	4620      	mov	r0, r4
 800f682:	f007 fd03 	bl	801708c <usart_flag_get>
 800f686:	2801      	cmp	r0, #1
 800f688:	d1f9      	bne.n	800f67e <Dmx::Blackout()+0x52>
 800f68a:	4b09      	ldr	r3, [pc, #36]	; (800f6b0 <Dmx::Blackout()+0x84>)
 800f68c:	2000      	movs	r0, #0
 800f68e:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f692:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f696:	f823 0b02 	strh.w	r0, [r3], #2
 800f69a:	428b      	cmp	r3, r1
 800f69c:	d1fb      	bne.n	800f696 <Dmx::Blackout()+0x6a>
 800f69e:	f04f 0300 	mov.w	r3, #0
 800f6a2:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f6a6:	bd38      	pop	{r3, r4, r5, pc}
 800f6a8:	20001060 	andcs	r1, r0, r0, rrx
 800f6ac:	20000c30 	andcs	r0, r0, r0, lsr ip
 800f6b0:	20000e34 	andcs	r0, r0, r4, lsr lr

0800f6b4 <Dmx::FullOn()>:
 800f6b4:	b538      	push	{r3, r4, r5, lr}
 800f6b6:	4c1e      	ldr	r4, [pc, #120]	; (800f730 <Dmx::FullOn()+0x7c>)
 800f6b8:	8823      	ldrh	r3, [r4, #0]
 800f6ba:	b29b      	uxth	r3, r3
 800f6bc:	b3bb      	cbz	r3, 800f72e <Dmx::FullOn()+0x7a>
 800f6be:	f3bf 8f5f 	dmb	sy
 800f6c2:	8823      	ldrh	r3, [r4, #0]
 800f6c4:	05da      	lsls	r2, r3, #23
 800f6c6:	d515      	bpl.n	800f6f4 <Dmx::FullOn()+0x40>
 800f6c8:	2000      	movs	r0, #0
 800f6ca:	f7ff fb3b 	bl	800ed44 <_port_to_uart(unsigned int)>
 800f6ce:	4605      	mov	r5, r0
 800f6d0:	2107      	movs	r1, #7
 800f6d2:	4628      	mov	r0, r5
 800f6d4:	f007 fcda 	bl	801708c <usart_flag_get>
 800f6d8:	2801      	cmp	r0, #1
 800f6da:	d1f9      	bne.n	800f6d0 <Dmx::FullOn()+0x1c>
 800f6dc:	4b15      	ldr	r3, [pc, #84]	; (800f734 <Dmx::FullOn()+0x80>)
 800f6de:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f6e2:	461a      	mov	r2, r3
 800f6e4:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f6e8:	f823 0b02 	strh.w	r0, [r3], #2
 800f6ec:	428b      	cmp	r3, r1
 800f6ee:	d1fb      	bne.n	800f6e8 <Dmx::FullOn()+0x34>
 800f6f0:	2300      	movs	r3, #0
 800f6f2:	7013      	strb	r3, [r2, #0]
 800f6f4:	f3bf 8f5f 	dmb	sy
 800f6f8:	8823      	ldrh	r3, [r4, #0]
 800f6fa:	059b      	lsls	r3, r3, #22
 800f6fc:	d517      	bpl.n	800f72e <Dmx::FullOn()+0x7a>
 800f6fe:	2001      	movs	r0, #1
 800f700:	f7ff fb20 	bl	800ed44 <_port_to_uart(unsigned int)>
 800f704:	4604      	mov	r4, r0
 800f706:	2107      	movs	r1, #7
 800f708:	4620      	mov	r0, r4
 800f70a:	f007 fcbf 	bl	801708c <usart_flag_get>
 800f70e:	2801      	cmp	r0, #1
 800f710:	d1f9      	bne.n	800f706 <Dmx::FullOn()+0x52>
 800f712:	4b09      	ldr	r3, [pc, #36]	; (800f738 <Dmx::FullOn()+0x84>)
 800f714:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f718:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800f71c:	f203 2102 	addw	r1, r3, #514	; 0x202
 800f720:	f823 0b02 	strh.w	r0, [r3], #2
 800f724:	428b      	cmp	r3, r1
 800f726:	d1fb      	bne.n	800f720 <Dmx::FullOn()+0x6c>
 800f728:	2300      	movs	r3, #0
 800f72a:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800f72e:	bd38      	pop	{r3, r4, r5, pc}
 800f730:	20001060 	andcs	r1, r0, r0, rrx
 800f734:	20000c30 	andcs	r0, r0, r0, lsr ip
 800f738:	20000e34 	andcs	r0, r0, r4, lsr lr

0800f73c <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800f73c:	2000      	movs	r0, #0
 800f73e:	4770      	bx	lr

0800f740 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800f740:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f744:	4770      	bx	lr

0800f746 <WS28xxDmxMulti::GetDmxFootprint()>:
 800f746:	2000      	movs	r0, #0
 800f748:	4770      	bx	lr
	...

0800f74c <WS28xxDmxMulti::Start(unsigned int)>:
 800f74c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f74e:	4604      	mov	r4, r0
 800f750:	9100      	str	r1, [sp, #0]
 800f752:	2347      	movs	r3, #71	; 0x47
 800f754:	4a09      	ldr	r2, [pc, #36]	; (800f77c <WS28xxDmxMulti::Start(unsigned int)+0x30>)
 800f756:	480a      	ldr	r0, [pc, #40]	; (800f780 <WS28xxDmxMulti::Start(unsigned int)+0x34>)
 800f758:	460d      	mov	r5, r1
 800f75a:	490a      	ldr	r1, [pc, #40]	; (800f784 <WS28xxDmxMulti::Start(unsigned int)+0x38>)
 800f75c:	f7fa feac 	bl	800a4b8 <printf>
 800f760:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f762:	b923      	cbnz	r3, 800f76e <WS28xxDmxMulti::Start(unsigned int)+0x22>
 800f764:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f766:	b110      	cbz	r0, 800f76e <WS28xxDmxMulti::Start(unsigned int)+0x22>
 800f768:	6803      	ldr	r3, [r0, #0]
 800f76a:	689b      	ldr	r3, [r3, #8]
 800f76c:	4798      	blx	r3
 800f76e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f770:	2201      	movs	r2, #1
 800f772:	40aa      	lsls	r2, r5
 800f774:	4313      	orrs	r3, r2
 800f776:	6523      	str	r3, [r4, #80]	; 0x50
 800f778:	b003      	add	sp, #12
 800f77a:	bd30      	pop	{r4, r5, pc}
 800f77c:	0801a5d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, sp, pc}
 800f780:	0801a5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, sp, pc}
 800f784:	08018af2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, fp, pc}

0800f788 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f788:	b538      	push	{r3, r4, r5, lr}
 800f78a:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800f78c:	4b05      	ldr	r3, [pc, #20]	; (800f7a4 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800f78e:	6003      	str	r3, [r0, #0]
 800f790:	4604      	mov	r4, r0
 800f792:	b12d      	cbz	r5, 800f7a0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800f794:	4628      	mov	r0, r5
 800f796:	f001 fc99 	bl	80110cc <WS28xxMulti::~WS28xxMulti()>
 800f79a:	4628      	mov	r0, r5
 800f79c:	f006 fbd2 	bl	8015f44 <operator delete(void*)>
 800f7a0:	4620      	mov	r0, r4
 800f7a2:	bd38      	pop	{r3, r4, r5, pc}
 800f7a4:	0801a6a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, pc}

0800f7a8 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f7a8:	b510      	push	{r4, lr}
 800f7aa:	4604      	mov	r4, r0
 800f7ac:	f7ff ffec 	bl	800f788 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800f7b0:	4620      	mov	r0, r4
 800f7b2:	f006 fbc7 	bl	8015f44 <operator delete(void*)>
 800f7b6:	4620      	mov	r0, r4
 800f7b8:	bd10      	pop	{r4, pc}

0800f7ba <WS28xxDmxMulti::Blackout(bool)>:
 800f7ba:	b538      	push	{r3, r4, r5, lr}
 800f7bc:	4604      	mov	r4, r0
 800f7be:	460d      	mov	r5, r1
 800f7c0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f7c4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f7c6:	f002 f867 	bl	8011898 <WS28xxMulti::IsUpdating()>
 800f7ca:	2800      	cmp	r0, #0
 800f7cc:	d1fa      	bne.n	800f7c4 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800f7ce:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f7d0:	b11d      	cbz	r5, 800f7da <WS28xxDmxMulti::Blackout(bool)+0x20>
 800f7d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f7d6:	f001 bf9d 	b.w	8011714 <WS28xxMulti::Blackout()>
 800f7da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f7de:	f001 bef5 	b.w	80115cc <WS28xxMulti::Update()>
	...

0800f7e4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800f7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7e8:	ed2d 8b02 	vpush	{d8}
 800f7ec:	b087      	sub	sp, #28
 800f7ee:	4605      	mov	r5, r0
 800f7f0:	9105      	str	r1, [sp, #20]
 800f7f2:	4698      	mov	r8, r3
 800f7f4:	9204      	str	r2, [sp, #16]
 800f7f6:	b92a      	cbnz	r2, 800f804 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x20>
 800f7f8:	4b53      	ldr	r3, [pc, #332]	; (800f948 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x164>)
 800f7fa:	4a54      	ldr	r2, [pc, #336]	; (800f94c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f7fc:	4854      	ldr	r0, [pc, #336]	; (800f950 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f7fe:	2160      	movs	r1, #96	; 0x60
 800f800:	f7fa fb4e 	bl	8009ea0 <__assert_func>
 800f804:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 800f808:	d905      	bls.n	800f816 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800f80a:	4b52      	ldr	r3, [pc, #328]	; (800f954 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x170>)
 800f80c:	4a4f      	ldr	r2, [pc, #316]	; (800f94c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f80e:	4850      	ldr	r0, [pc, #320]	; (800f950 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f810:	2161      	movs	r1, #97	; 0x61
 800f812:	f7fa fb45 	bl	8009ea0 <__assert_func>
 800f816:	6aec      	ldr	r4, [r5, #44]	; 0x2c
 800f818:	9b05      	ldr	r3, [sp, #20]
 800f81a:	fbb3 f3f4 	udiv	r3, r3, r4
 800f81e:	ee08 3a10 	vmov	s16, r3
 800f822:	9b05      	ldr	r3, [sp, #20]
 800f824:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 800f826:	ee18 2a10 	vmov	r2, s16
 800f82a:	fb04 3412 	mls	r4, r4, r2, r3
 800f82e:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800f830:	2c03      	cmp	r4, #3
 800f832:	d82b      	bhi.n	800f88c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa8>
 800f834:	e8df f004 	tbb	[pc, r4]
 800f838:	2a282302 	bcs	8a18448 <__exidx_end+0x9fbfd8>
 800f83c:	fbb8 f3f3 	udiv	r3, r8, r3
 800f840:	429f      	cmp	r7, r3
 800f842:	bf28      	it	cs
 800f844:	461f      	movcs	r7, r3
 800f846:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f848:	f002 f826 	bl	8011898 <WS28xxMulti::IsUpdating()>
 800f84c:	2800      	cmp	r0, #0
 800f84e:	d1fa      	bne.n	800f846 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x62>
 800f850:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800f852:	f8d5 a024 	ldr.w	sl, [r5, #36]	; 0x24
 800f856:	2b03      	cmp	r3, #3
 800f858:	fb0a f604 	mul.w	r6, sl, r4
 800f85c:	d13b      	bne.n	800f8d6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf2>
 800f85e:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f862:	42bc      	cmp	r4, r7
 800f864:	d323      	bcc.n	800f8ae <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xca>
 800f866:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800f868:	9a05      	ldr	r2, [sp, #20]
 800f86a:	4293      	cmp	r3, r2
 800f86c:	d166      	bne.n	800f93c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x158>
 800f86e:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f870:	b007      	add	sp, #28
 800f872:	ecbd 8b02 	vpop	{d8}
 800f876:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f87a:	f001 bea7 	b.w	80115cc <WS28xxMulti::Update()>
 800f87e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
 800f880:	fbb8 f3f3 	udiv	r3, r8, r3
 800f884:	4423      	add	r3, r4
 800f886:	e7db      	b.n	800f840 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5c>
 800f888:	6bac      	ldr	r4, [r5, #56]	; 0x38
 800f88a:	e7f9      	b.n	800f880 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9c>
 800f88c:	6bec      	ldr	r4, [r5, #60]	; 0x3c
 800f88e:	e7f7      	b.n	800f880 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9c>
 800f890:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f894:	9301      	str	r3, [sp, #4]
 800f896:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f89a:	9300      	str	r3, [sp, #0]
 800f89c:	f899 3000 	ldrb.w	r3, [r9]
 800f8a0:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f8a2:	ee18 1a10 	vmov	r1, s16
 800f8a6:	4432      	add	r2, r6
 800f8a8:	f002 f876 	bl	8011998 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f8ac:	e008      	b.n	800f8c0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800f8ae:	9b04      	ldr	r3, [sp, #16]
 800f8b0:	eba9 0303 	sub.w	r3, r9, r3
 800f8b4:	4598      	cmp	r8, r3
 800f8b6:	d9d6      	bls.n	800f866 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f8b8:	f899 f000 	pld	[r9]
 800f8bc:	f04f 0b00 	mov.w	fp, #0
 800f8c0:	fa1f f28b 	uxth.w	r2, fp
 800f8c4:	4552      	cmp	r2, sl
 800f8c6:	f10b 0b01 	add.w	fp, fp, #1
 800f8ca:	d3e1      	bcc.n	800f890 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xac>
 800f8cc:	3401      	adds	r4, #1
 800f8ce:	f109 0903 	add.w	r9, r9, #3
 800f8d2:	4456      	add	r6, sl
 800f8d4:	e7c5      	b.n	800f862 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x7e>
 800f8d6:	2b04      	cmp	r3, #4
 800f8d8:	d005      	beq.n	800f8e6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x102>
 800f8da:	4b1f      	ldr	r3, [pc, #124]	; (800f958 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x174>)
 800f8dc:	4a1b      	ldr	r2, [pc, #108]	; (800f94c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x168>)
 800f8de:	481c      	ldr	r0, [pc, #112]	; (800f950 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x16c>)
 800f8e0:	2198      	movs	r1, #152	; 0x98
 800f8e2:	f7fa fadd 	bl	8009ea0 <__assert_func>
 800f8e6:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f8ea:	e00d      	b.n	800f908 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x124>
 800f8ec:	f899 f000 	pld	[r9]
 800f8f0:	f04f 0b00 	mov.w	fp, #0
 800f8f4:	fa1f f28b 	uxth.w	r2, fp
 800f8f8:	4552      	cmp	r2, sl
 800f8fa:	f10b 0b01 	add.w	fp, fp, #1
 800f8fe:	d30b      	bcc.n	800f918 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x134>
 800f900:	3401      	adds	r4, #1
 800f902:	f109 0904 	add.w	r9, r9, #4
 800f906:	4456      	add	r6, sl
 800f908:	42bc      	cmp	r4, r7
 800f90a:	d2ac      	bcs.n	800f866 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f90c:	9b04      	ldr	r3, [sp, #16]
 800f90e:	eba9 0303 	sub.w	r3, r9, r3
 800f912:	4543      	cmp	r3, r8
 800f914:	d3ea      	bcc.n	800f8ec <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x108>
 800f916:	e7a6      	b.n	800f866 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800f918:	f899 3003 	ldrb.w	r3, [r9, #3]
 800f91c:	9302      	str	r3, [sp, #8]
 800f91e:	f899 3002 	ldrb.w	r3, [r9, #2]
 800f922:	9301      	str	r3, [sp, #4]
 800f924:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f928:	9300      	str	r3, [sp, #0]
 800f92a:	f899 3000 	ldrb.w	r3, [r9]
 800f92e:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800f930:	ee18 1a10 	vmov	r1, s16
 800f934:	4432      	add	r2, r6
 800f936:	f002 f8b1 	bl	8011a9c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f93a:	e7db      	b.n	800f8f4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x110>
 800f93c:	b007      	add	sp, #28
 800f93e:	ecbd 8b02 	vpop	{d8}
 800f942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f946:	bf00      	nop
 800f948:	0801a601 	stmdaeq	r1, {r0, r9, sl, sp, pc}
 800f94c:	0801a612 	stmdaeq	r1, {r1, r4, r9, sl, sp, pc}
 800f950:	0801a5d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, sp, pc}
 800f954:	0801a61a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp, pc}
 800f958:	0801a638 	stmdaeq	r1, {r3, r4, r5, r9, sl, sp, pc}

0800f95c <WS28xxDmxMulti::FullOn()>:
 800f95c:	b510      	push	{r4, lr}
 800f95e:	4604      	mov	r4, r0
 800f960:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f962:	f001 ff99 	bl	8011898 <WS28xxMulti::IsUpdating()>
 800f966:	2800      	cmp	r0, #0
 800f968:	d1fa      	bne.n	800f960 <WS28xxDmxMulti::FullOn()+0x4>
 800f96a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f96c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f970:	f001 bf32 	b.w	80117d8 <WS28xxMulti::FullOn()>

0800f974 <WS28xxDmxMulti::Print()>:
 800f974:	3004      	adds	r0, #4
 800f976:	f000 be67 	b.w	8010648 <PixelDmxConfiguration::Print()>
	...

0800f97c <WS28xxDmxMulti::Stop(unsigned int)>:
 800f97c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f97e:	4604      	mov	r4, r0
 800f980:	460d      	mov	r5, r1
 800f982:	4a0e      	ldr	r2, [pc, #56]	; (800f9bc <WS28xxDmxMulti::Stop(unsigned int)+0x40>)
 800f984:	9100      	str	r1, [sp, #0]
 800f986:	2352      	movs	r3, #82	; 0x52
 800f988:	490d      	ldr	r1, [pc, #52]	; (800f9c0 <WS28xxDmxMulti::Stop(unsigned int)+0x44>)
 800f98a:	480e      	ldr	r0, [pc, #56]	; (800f9c4 <WS28xxDmxMulti::Stop(unsigned int)+0x48>)
 800f98c:	f7fa fd94 	bl	800a4b8 <printf>
 800f990:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f992:	fa23 f205 	lsr.w	r2, r3, r5
 800f996:	07d2      	lsls	r2, r2, #31
 800f998:	bf41      	itttt	mi
 800f99a:	2201      	movmi	r2, #1
 800f99c:	40aa      	lslmi	r2, r5
 800f99e:	4393      	bicmi	r3, r2
 800f9a0:	6523      	strmi	r3, [r4, #80]	; 0x50
 800f9a2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f9a4:	b93b      	cbnz	r3, 800f9b6 <WS28xxDmxMulti::Stop(unsigned int)+0x3a>
 800f9a6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f9a8:	b128      	cbz	r0, 800f9b6 <WS28xxDmxMulti::Stop(unsigned int)+0x3a>
 800f9aa:	6803      	ldr	r3, [r0, #0]
 800f9ac:	68db      	ldr	r3, [r3, #12]
 800f9ae:	b003      	add	sp, #12
 800f9b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f9b4:	4718      	bx	r3
 800f9b6:	b003      	add	sp, #12
 800f9b8:	bd30      	pop	{r4, r5, pc}
 800f9ba:	bf00      	nop
 800f9bc:	0801a5d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, sp, pc}
 800f9c0:	0801a651 	stmdaeq	r1, {r0, r4, r6, r9, sl, sp, pc}
 800f9c4:	0801a5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, sp, pc}

0800f9c8 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800f9c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f9cc:	4604      	mov	r4, r0
 800f9ce:	4b21      	ldr	r3, [pc, #132]	; (800fa54 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x8c>)
 800f9d0:	f844 3b04 	str.w	r3, [r4], #4
 800f9d4:	460d      	mov	r5, r1
 800f9d6:	4606      	mov	r6, r0
 800f9d8:	460f      	mov	r7, r1
 800f9da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f9dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f9de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f9e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f9e2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800f9e6:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800fa68 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0xa0>
 800f9ea:	4d1b      	ldr	r5, [pc, #108]	; (800fa58 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x90>)
 800f9ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f9f0:	2300      	movs	r3, #0
 800f9f2:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800f9f6:	6533      	str	r3, [r6, #80]	; 0x50
 800f9f8:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800f9fc:	4642      	mov	r2, r8
 800f9fe:	4629      	mov	r1, r5
 800fa00:	2333      	movs	r3, #51	; 0x33
 800fa02:	4816      	ldr	r0, [pc, #88]	; (800fa5c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x94>)
 800fa04:	f7fa fd58 	bl	800a4b8 <printf>
 800fa08:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800fa0c:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800fa10:	1d30      	adds	r0, r6, #4
 800fa12:	2110      	movs	r1, #16
 800fa14:	f000 fdb6 	bl	8010584 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800fa18:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800fa1a:	9300      	str	r3, [sp, #0]
 800fa1c:	462a      	mov	r2, r5
 800fa1e:	2337      	movs	r3, #55	; 0x37
 800fa20:	4641      	mov	r1, r8
 800fa22:	480f      	ldr	r0, [pc, #60]	; (800fa60 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x98>)
 800fa24:	f7fa fd48 	bl	800a4b8 <printf>
 800fa28:	2020      	movs	r0, #32
 800fa2a:	f006 fa8f 	bl	8015f4c <operator new(unsigned int)>
 800fa2e:	4639      	mov	r1, r7
 800fa30:	4604      	mov	r4, r0
 800fa32:	f001 fd6d 	bl	8011510 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800fa36:	4620      	mov	r0, r4
 800fa38:	64b4      	str	r4, [r6, #72]	; 0x48
 800fa3a:	f001 fe6b 	bl	8011714 <WS28xxMulti::Blackout()>
 800fa3e:	233e      	movs	r3, #62	; 0x3e
 800fa40:	4642      	mov	r2, r8
 800fa42:	4629      	mov	r1, r5
 800fa44:	4807      	ldr	r0, [pc, #28]	; (800fa64 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x9c>)
 800fa46:	f7fa fd37 	bl	800a4b8 <printf>
 800fa4a:	4630      	mov	r0, r6
 800fa4c:	b002      	add	sp, #8
 800fa4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fa52:	bf00      	nop
 800fa54:	0801a6a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, pc}
 800fa58:	0801a5d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, sp, pc}
 800fa5c:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}
 800fa60:	0801a665 	stmdaeq	r1, {r0, r2, r5, r6, r9, sl, sp, pc}
 800fa64:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 800fa68:	0801a656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, sp, pc}

0800fa6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800fa6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa6e:	88c6      	ldrh	r6, [r0, #6]
 800fa70:	8885      	ldrh	r5, [r0, #4]
 800fa72:	42ae      	cmp	r6, r5
 800fa74:	d216      	bcs.n	800faa4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800fa76:	4604      	mov	r4, r0
 800fa78:	6800      	ldr	r0, [r0, #0]
 800fa7a:	1bad      	subs	r5, r5, r6
 800fa7c:	4430      	add	r0, r6
 800fa7e:	7a26      	ldrb	r6, [r4, #8]
 800fa80:	b923      	cbnz	r3, 800fa8c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800fa82:	b926      	cbnz	r6, 800fa8e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800fa84:	9200      	str	r2, [sp, #0]
 800fa86:	460b      	mov	r3, r1
 800fa88:	4a09      	ldr	r2, [pc, #36]	; (800fab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800fa8a:	e003      	b.n	800fa94 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800fa8c:	b166      	cbz	r6, 800faa8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800fa8e:	9200      	str	r2, [sp, #0]
 800fa90:	4a08      	ldr	r2, [pc, #32]	; (800fab4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800fa92:	460b      	mov	r3, r1
 800fa94:	4629      	mov	r1, r5
 800fa96:	f7fa fd37 	bl	800a508 <snprintf>
 800fa9a:	4285      	cmp	r5, r0
 800fa9c:	bfa2      	ittt	ge
 800fa9e:	88e3      	ldrhge	r3, [r4, #6]
 800faa0:	181b      	addge	r3, r3, r0
 800faa2:	80e3      	strhge	r3, [r4, #6]
 800faa4:	b002      	add	sp, #8
 800faa6:	bd70      	pop	{r4, r5, r6, pc}
 800faa8:	9200      	str	r2, [sp, #0]
 800faaa:	460b      	mov	r3, r1
 800faac:	4a02      	ldr	r2, [pc, #8]	; (800fab8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800faae:	e7f1      	b.n	800fa94 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800fab0:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800fab4:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800fab8:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

0800fabc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800fabc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fabe:	88c6      	ldrh	r6, [r0, #6]
 800fac0:	8885      	ldrh	r5, [r0, #4]
 800fac2:	42ae      	cmp	r6, r5
 800fac4:	d216      	bcs.n	800faf4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800fac6:	4604      	mov	r4, r0
 800fac8:	6800      	ldr	r0, [r0, #0]
 800faca:	1bad      	subs	r5, r5, r6
 800facc:	4430      	add	r0, r6
 800face:	7a26      	ldrb	r6, [r4, #8]
 800fad0:	b923      	cbnz	r3, 800fadc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800fad2:	b926      	cbnz	r6, 800fade <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800fad4:	9200      	str	r2, [sp, #0]
 800fad6:	460b      	mov	r3, r1
 800fad8:	4a09      	ldr	r2, [pc, #36]	; (800fb00 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800fada:	e003      	b.n	800fae4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800fadc:	b166      	cbz	r6, 800faf8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800fade:	9200      	str	r2, [sp, #0]
 800fae0:	4a08      	ldr	r2, [pc, #32]	; (800fb04 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800fae2:	460b      	mov	r3, r1
 800fae4:	4629      	mov	r1, r5
 800fae6:	f7fa fd0f 	bl	800a508 <snprintf>
 800faea:	4285      	cmp	r5, r0
 800faec:	bfa2      	ittt	ge
 800faee:	88e3      	ldrhge	r3, [r4, #6]
 800faf0:	181b      	addge	r3, r3, r0
 800faf2:	80e3      	strhge	r3, [r4, #6]
 800faf4:	b002      	add	sp, #8
 800faf6:	bd70      	pop	{r4, r5, r6, pc}
 800faf8:	9200      	str	r2, [sp, #0]
 800fafa:	460b      	mov	r3, r1
 800fafc:	4a02      	ldr	r2, [pc, #8]	; (800fb08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800fafe:	e7f1      	b.n	800fae4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800fb00:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 800fb04:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 800fb08:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

0800fb0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800fb0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fb0e:	88c6      	ldrh	r6, [r0, #6]
 800fb10:	8885      	ldrh	r5, [r0, #4]
 800fb12:	42ae      	cmp	r6, r5
 800fb14:	d216      	bcs.n	800fb44 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800fb16:	4604      	mov	r4, r0
 800fb18:	6800      	ldr	r0, [r0, #0]
 800fb1a:	1bad      	subs	r5, r5, r6
 800fb1c:	4430      	add	r0, r6
 800fb1e:	7a26      	ldrb	r6, [r4, #8]
 800fb20:	b923      	cbnz	r3, 800fb2c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800fb22:	b926      	cbnz	r6, 800fb2e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800fb24:	9200      	str	r2, [sp, #0]
 800fb26:	460b      	mov	r3, r1
 800fb28:	4a09      	ldr	r2, [pc, #36]	; (800fb50 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800fb2a:	e003      	b.n	800fb34 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800fb2c:	b166      	cbz	r6, 800fb48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800fb2e:	9200      	str	r2, [sp, #0]
 800fb30:	4a08      	ldr	r2, [pc, #32]	; (800fb54 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800fb32:	460b      	mov	r3, r1
 800fb34:	4629      	mov	r1, r5
 800fb36:	f7fa fce7 	bl	800a508 <snprintf>
 800fb3a:	4285      	cmp	r5, r0
 800fb3c:	bfa2      	ittt	ge
 800fb3e:	88e3      	ldrhge	r3, [r4, #6]
 800fb40:	181b      	addge	r3, r3, r0
 800fb42:	80e3      	strhge	r3, [r4, #6]
 800fb44:	b002      	add	sp, #8
 800fb46:	bd70      	pop	{r4, r5, r6, pc}
 800fb48:	9200      	str	r2, [sp, #0]
 800fb4a:	460b      	mov	r3, r1
 800fb4c:	4a02      	ldr	r2, [pc, #8]	; (800fb58 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800fb4e:	e7f1      	b.n	800fb34 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800fb50:	08019060 	stmdaeq	r1, {r5, r6, ip, pc}
 800fb54:	08019055 	stmdaeq	r1, {r0, r2, r4, r6, ip, pc}
 800fb58:	08019061 	stmdaeq	r1, {r0, r5, r6, ip, pc}

0800fb5c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800fb5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800fb60:	8885      	ldrh	r5, [r0, #4]
 800fb62:	4698      	mov	r8, r3
 800fb64:	88c3      	ldrh	r3, [r0, #6]
 800fb66:	42ab      	cmp	r3, r5
 800fb68:	4604      	mov	r4, r0
 800fb6a:	d229      	bcs.n	800fbc0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800fb6c:	6826      	ldr	r6, [r4, #0]
 800fb6e:	f894 9008 	ldrb.w	r9, [r4, #8]
 800fb72:	4692      	mov	sl, r2
 800fb74:	ee10 0a10 	vmov	r0, s0
 800fb78:	460f      	mov	r7, r1
 800fb7a:	441e      	add	r6, r3
 800fb7c:	1aed      	subs	r5, r5, r3
 800fb7e:	f7f9 fa09 	bl	8008f94 <__aeabi_f2d>
 800fb82:	f1ba 0f00 	cmp.w	sl, #0
 800fb86:	d109      	bne.n	800fb9c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800fb88:	f1b9 0f00 	cmp.w	r9, #0
 800fb8c:	d109      	bne.n	800fba2 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800fb8e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fb92:	4a10      	ldr	r2, [pc, #64]	; (800fbd4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800fb94:	f8cd 8000 	str.w	r8, [sp]
 800fb98:	463b      	mov	r3, r7
 800fb9a:	e008      	b.n	800fbae <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800fb9c:	f1b9 0f00 	cmp.w	r9, #0
 800fba0:	d011      	beq.n	800fbc6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800fba2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fba6:	4a0c      	ldr	r2, [pc, #48]	; (800fbd8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800fba8:	f8cd 8000 	str.w	r8, [sp]
 800fbac:	463b      	mov	r3, r7
 800fbae:	4629      	mov	r1, r5
 800fbb0:	4630      	mov	r0, r6
 800fbb2:	f7fa fca9 	bl	800a508 <snprintf>
 800fbb6:	4285      	cmp	r5, r0
 800fbb8:	bfa2      	ittt	ge
 800fbba:	88e3      	ldrhge	r3, [r4, #6]
 800fbbc:	18c0      	addge	r0, r0, r3
 800fbbe:	80e0      	strhge	r0, [r4, #6]
 800fbc0:	b004      	add	sp, #16
 800fbc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fbc6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fbca:	4a04      	ldr	r2, [pc, #16]	; (800fbdc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800fbcc:	f8cd 8000 	str.w	r8, [sp]
 800fbd0:	463b      	mov	r3, r7
 800fbd2:	e7ec      	b.n	800fbae <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800fbd4:	0801a6e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, sl, sp, pc}
 800fbd8:	0801a6d8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, sp, pc}
 800fbdc:	0801a6e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, sp, pc}

0800fbe0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800fbe0:	6001      	str	r1, [r0, #0]
 800fbe2:	2106      	movs	r1, #6
 800fbe4:	2200      	movs	r2, #0
 800fbe6:	75c1      	strb	r1, [r0, #23]
 800fbe8:	490b      	ldr	r1, [pc, #44]	; (800fc18 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800fbea:	7582      	strb	r2, [r0, #22]
 800fbec:	8302      	strh	r2, [r0, #24]
 800fbee:	6042      	str	r2, [r0, #4]
 800fbf0:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 800fbf4:	e9c0 1202 	strd	r1, r2, [r0, #8]
 800fbf8:	2301      	movs	r3, #1
 800fbfa:	4a08      	ldr	r2, [pc, #32]	; (800fc1c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800fbfc:	6102      	str	r2, [r0, #16]
 800fbfe:	7543      	strb	r3, [r0, #21]
 800fc00:	f100 0218 	add.w	r2, r0, #24
 800fc04:	f822 3f02 	strh.w	r3, [r2, #2]!
 800fc08:	3304      	adds	r3, #4
 800fc0a:	b29b      	uxth	r3, r3
 800fc0c:	2b41      	cmp	r3, #65	; 0x41
 800fc0e:	d1f9      	bne.n	800fc04 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>
 800fc10:	2300      	movs	r3, #0
 800fc12:	7503      	strb	r3, [r0, #20]
 800fc14:	4770      	bx	lr
 800fc16:	bf00      	nop
 800fc18:	0100aa03 	tsteq	r0, r3, lsl #20
 800fc1c:	01ff003d 	mvnseq	r0, sp, lsr r0

0800fc20 <PixelDmxParams::Load()>:
 800fc20:	b508      	push	{r3, lr}
 800fc22:	2300      	movs	r3, #0
 800fc24:	4601      	mov	r1, r0
 800fc26:	6043      	str	r3, [r0, #4]
 800fc28:	6800      	ldr	r0, [r0, #0]
 800fc2a:	b120      	cbz	r0, 800fc36 <PixelDmxParams::Load()+0x16>
 800fc2c:	6803      	ldr	r3, [r0, #0]
 800fc2e:	3104      	adds	r1, #4
 800fc30:	68db      	ldr	r3, [r3, #12]
 800fc32:	4798      	blx	r3
 800fc34:	2001      	movs	r0, #1
 800fc36:	bd08      	pop	{r3, pc}

0800fc38 <PixelDmxParams::Load(char const*, unsigned int)>:
 800fc38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fc3a:	4604      	mov	r4, r0
 800fc3c:	4616      	mov	r6, r2
 800fc3e:	460d      	mov	r5, r1
 800fc40:	b929      	cbnz	r1, 800fc4e <PixelDmxParams::Load(char const*, unsigned int)+0x16>
 800fc42:	4b17      	ldr	r3, [pc, #92]	; (800fca0 <PixelDmxParams::Load(char const*, unsigned int)+0x68>)
 800fc44:	4a17      	ldr	r2, [pc, #92]	; (800fca4 <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800fc46:	4818      	ldr	r0, [pc, #96]	; (800fca8 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800fc48:	217c      	movs	r1, #124	; 0x7c
 800fc4a:	f7fa f929 	bl	8009ea0 <__assert_func>
 800fc4e:	b92e      	cbnz	r6, 800fc5c <PixelDmxParams::Load(char const*, unsigned int)+0x24>
 800fc50:	4b16      	ldr	r3, [pc, #88]	; (800fcac <PixelDmxParams::Load(char const*, unsigned int)+0x74>)
 800fc52:	4a14      	ldr	r2, [pc, #80]	; (800fca4 <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800fc54:	4814      	ldr	r0, [pc, #80]	; (800fca8 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800fc56:	217d      	movs	r1, #125	; 0x7d
 800fc58:	f7fa f922 	bl	8009ea0 <__assert_func>
 800fc5c:	6823      	ldr	r3, [r4, #0]
 800fc5e:	b93b      	cbnz	r3, 800fc70 <PixelDmxParams::Load(char const*, unsigned int)+0x38>
 800fc60:	4b13      	ldr	r3, [pc, #76]	; (800fcb0 <PixelDmxParams::Load(char const*, unsigned int)+0x78>)
 800fc62:	4a10      	ldr	r2, [pc, #64]	; (800fca4 <PixelDmxParams::Load(char const*, unsigned int)+0x6c>)
 800fc64:	4810      	ldr	r0, [pc, #64]	; (800fca8 <PixelDmxParams::Load(char const*, unsigned int)+0x70>)
 800fc66:	217e      	movs	r1, #126	; 0x7e
 800fc68:	f7fa f91a 	bl	8009ea0 <__assert_func>
 800fc6c:	6823      	ldr	r3, [r4, #0]
 800fc6e:	b1a3      	cbz	r3, 800fc9a <PixelDmxParams::Load(char const*, unsigned int)+0x62>
 800fc70:	2300      	movs	r3, #0
 800fc72:	6063      	str	r3, [r4, #4]
 800fc74:	490f      	ldr	r1, [pc, #60]	; (800fcb4 <PixelDmxParams::Load(char const*, unsigned int)+0x7c>)
 800fc76:	4622      	mov	r2, r4
 800fc78:	4668      	mov	r0, sp
 800fc7a:	f005 fa77 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800fc7e:	4632      	mov	r2, r6
 800fc80:	4629      	mov	r1, r5
 800fc82:	4668      	mov	r0, sp
 800fc84:	f005 fa76 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 800fc88:	4621      	mov	r1, r4
 800fc8a:	f851 0b04 	ldr.w	r0, [r1], #4
 800fc8e:	6803      	ldr	r3, [r0, #0]
 800fc90:	689b      	ldr	r3, [r3, #8]
 800fc92:	4798      	blx	r3
 800fc94:	4668      	mov	r0, sp
 800fc96:	f005 fa6c 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 800fc9a:	b002      	add	sp, #8
 800fc9c:	bd70      	pop	{r4, r5, r6, pc}
 800fc9e:	bf00      	nop
 800fca0:	0801a6ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, sp, pc}
 800fca4:	0801a700 	stmdaeq	r1, {r8, r9, sl, sp, pc}
 800fca8:	0801a705 	stmdaeq	r1, {r0, r2, r8, r9, sl, sp, pc}
 800fcac:	0801a723 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, sp, pc}
 800fcb0:	0801a730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, pc}
 800fcb4:	0800ff95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr, pc}

0800fcb8 <PixelDmxParams::callbackFunction(char const*)>:
 800fcb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fcbc:	4604      	mov	r4, r0
 800fcbe:	b08a      	sub	sp, #40	; 0x28
 800fcc0:	460d      	mov	r5, r1
 800fcc2:	b929      	cbnz	r1, 800fcd0 <PixelDmxParams::callbackFunction(char const*)+0x18>
 800fcc4:	4ba2      	ldr	r3, [pc, #648]	; (800ff50 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800fcc6:	4aa3      	ldr	r2, [pc, #652]	; (800ff54 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800fcc8:	48a3      	ldr	r0, [pc, #652]	; (800ff58 <PixelDmxParams::callbackFunction(char const*)+0x2a0>)
 800fcca:	218e      	movs	r1, #142	; 0x8e
 800fccc:	f7fa f8e8 	bl	8009ea0 <__assert_func>
 800fcd0:	2308      	movs	r3, #8
 800fcd2:	9304      	str	r3, [sp, #16]
 800fcd4:	49a1      	ldr	r1, [pc, #644]	; (800ff5c <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800fcd6:	ab04      	add	r3, sp, #16
 800fcd8:	aa06      	add	r2, sp, #24
 800fcda:	4628      	mov	r0, r5
 800fcdc:	f005 fa7e 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800fce0:	b9a0      	cbnz	r0, 800fd0c <PixelDmxParams::callbackFunction(char const*)+0x54>
 800fce2:	9b04      	ldr	r3, [sp, #16]
 800fce4:	3328      	adds	r3, #40	; 0x28
 800fce6:	446b      	add	r3, sp
 800fce8:	f803 0c10 	strb.w	r0, [r3, #-16]
 800fcec:	a806      	add	r0, sp, #24
 800fcee:	f000 fddb 	bl	80108a8 <PixelType::GetType(char const*)>
 800fcf2:	6863      	ldr	r3, [r4, #4]
 800fcf4:	280e      	cmp	r0, #14
 800fcf6:	bf0d      	iteet	eq
 800fcf8:	2203      	moveq	r2, #3
 800fcfa:	7220      	strbne	r0, [r4, #8]
 800fcfc:	f043 0301 	orrne.w	r3, r3, #1
 800fd00:	7222      	strbeq	r2, [r4, #8]
 800fd02:	bf08      	it	eq
 800fd04:	f023 0301 	biceq.w	r3, r3, #1
 800fd08:	6063      	str	r3, [r4, #4]
 800fd0a:	e033      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fd0c:	4994      	ldr	r1, [pc, #592]	; (800ff60 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800fd0e:	f10d 020a 	add.w	r2, sp, #10
 800fd12:	4628      	mov	r0, r5
 800fd14:	f005 fb17 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800fd18:	b990      	cbnz	r0, 800fd40 <PixelDmxParams::callbackFunction(char const*)+0x88>
 800fd1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800fd1e:	6863      	ldr	r3, [r4, #4]
 800fd20:	1e51      	subs	r1, r2, #1
 800fd22:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800fd26:	bf2d      	iteet	cs
 800fd28:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800fd2c:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800fd30:	f043 0302 	orrcc.w	r3, r3, #2
 800fd34:	7262      	strbcs	r2, [r4, #9]
 800fd36:	bf24      	itt	cs
 800fd38:	72a0      	strbcs	r0, [r4, #10]
 800fd3a:	f023 0302 	biccs.w	r3, r3, #2
 800fd3e:	e7e3      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fd40:	2303      	movs	r3, #3
 800fd42:	9304      	str	r3, [sp, #16]
 800fd44:	4987      	ldr	r1, [pc, #540]	; (800ff64 <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800fd46:	ab04      	add	r3, sp, #16
 800fd48:	aa06      	add	r2, sp, #24
 800fd4a:	4628      	mov	r0, r5
 800fd4c:	f005 fa46 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800fd50:	b998      	cbnz	r0, 800fd7a <PixelDmxParams::callbackFunction(char const*)+0xc2>
 800fd52:	9b04      	ldr	r3, [sp, #16]
 800fd54:	3328      	adds	r3, #40	; 0x28
 800fd56:	446b      	add	r3, sp
 800fd58:	f803 0c10 	strb.w	r0, [r3, #-16]
 800fd5c:	a806      	add	r0, sp, #24
 800fd5e:	f000 fdc7 	bl	80108f0 <PixelType::GetMap(char const*)>
 800fd62:	6863      	ldr	r3, [r4, #4]
 800fd64:	75e0      	strb	r0, [r4, #23]
 800fd66:	2806      	cmp	r0, #6
 800fd68:	bf14      	ite	ne
 800fd6a:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800fd6e:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800fd72:	6063      	str	r3, [r4, #4]
 800fd74:	b00a      	add	sp, #40	; 0x28
 800fd76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fd7a:	497b      	ldr	r1, [pc, #492]	; (800ff68 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800fd7c:	aa03      	add	r2, sp, #12
 800fd7e:	4628      	mov	r0, r5
 800fd80:	f005 fa45 	bl	801520e <Sscan::Float(char const*, char const*, float&)>
 800fd84:	b968      	cbnz	r0, 800fda2 <PixelDmxParams::callbackFunction(char const*)+0xea>
 800fd86:	ed9d 0a03 	vldr	s0, [sp, #12]
 800fd8a:	f000 fe1d 	bl	80109c8 <PixelType::ConvertTxH(float)>
 800fd8e:	6863      	ldr	r3, [r4, #4]
 800fd90:	b120      	cbz	r0, 800fd9c <PixelDmxParams::callbackFunction(char const*)+0xe4>
 800fd92:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800fd96:	6063      	str	r3, [r4, #4]
 800fd98:	7620      	strb	r0, [r4, #24]
 800fd9a:	e7eb      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fd9c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800fda0:	e7f9      	b.n	800fd96 <PixelDmxParams::callbackFunction(char const*)+0xde>
 800fda2:	4972      	ldr	r1, [pc, #456]	; (800ff6c <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800fda4:	aa03      	add	r2, sp, #12
 800fda6:	4628      	mov	r0, r5
 800fda8:	f005 fa31 	bl	801520e <Sscan::Float(char const*, char const*, float&)>
 800fdac:	b968      	cbnz	r0, 800fdca <PixelDmxParams::callbackFunction(char const*)+0x112>
 800fdae:	ed9d 0a03 	vldr	s0, [sp, #12]
 800fdb2:	f000 fe09 	bl	80109c8 <PixelType::ConvertTxH(float)>
 800fdb6:	6863      	ldr	r3, [r4, #4]
 800fdb8:	b120      	cbz	r0, 800fdc4 <PixelDmxParams::callbackFunction(char const*)+0x10c>
 800fdba:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800fdbe:	6063      	str	r3, [r4, #4]
 800fdc0:	7660      	strb	r0, [r4, #25]
 800fdc2:	e7d7      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fdc4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800fdc8:	e7f9      	b.n	800fdbe <PixelDmxParams::callbackFunction(char const*)+0x106>
 800fdca:	4969      	ldr	r1, [pc, #420]	; (800ff70 <PixelDmxParams::callbackFunction(char const*)+0x2b8>)
 800fdcc:	f10d 020a 	add.w	r2, sp, #10
 800fdd0:	4628      	mov	r0, r5
 800fdd2:	f005 fab8 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800fdd6:	b998      	cbnz	r0, 800fe00 <PixelDmxParams::callbackFunction(char const*)+0x148>
 800fdd8:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800fddc:	6863      	ldr	r3, [r4, #4]
 800fdde:	1e8a      	subs	r2, r1, #2
 800fde0:	b292      	uxth	r2, r2
 800fde2:	f240 25a6 	movw	r5, #678	; 0x2a6
 800fde6:	42aa      	cmp	r2, r5
 800fde8:	bf81      	itttt	hi
 800fdea:	2201      	movhi	r2, #1
 800fdec:	7562      	strbhi	r2, [r4, #21]
 800fdee:	75a0      	strbhi	r0, [r4, #22]
 800fdf0:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800fdf4:	bf9c      	itt	ls
 800fdf6:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800fdfa:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800fdfe:	e783      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fe00:	495c      	ldr	r1, [pc, #368]	; (800ff74 <PixelDmxParams::callbackFunction(char const*)+0x2bc>)
 800fe02:	aa05      	add	r2, sp, #20
 800fe04:	4628      	mov	r0, r5
 800fe06:	f005 fabd 	bl	8015384 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800fe0a:	b960      	cbnz	r0, 800fe26 <PixelDmxParams::callbackFunction(char const*)+0x16e>
 800fe0c:	9a05      	ldr	r2, [sp, #20]
 800fe0e:	495a      	ldr	r1, [pc, #360]	; (800ff78 <PixelDmxParams::callbackFunction(char const*)+0x2c0>)
 800fe10:	6863      	ldr	r3, [r4, #4]
 800fe12:	f8c4 200e 	str.w	r2, [r4, #14]
 800fe16:	428a      	cmp	r2, r1
 800fe18:	bf14      	ite	ne
 800fe1a:	f043 0310 	orrne.w	r3, r3, #16
 800fe1e:	f023 0310 	biceq.w	r3, r3, #16
 800fe22:	6063      	str	r3, [r4, #4]
 800fe24:	e7a6      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fe26:	4955      	ldr	r1, [pc, #340]	; (800ff7c <PixelDmxParams::callbackFunction(char const*)+0x2c4>)
 800fe28:	f10d 0209 	add.w	r2, sp, #9
 800fe2c:	4628      	mov	r0, r5
 800fe2e:	f005 fad2 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fe32:	b988      	cbnz	r0, 800fe58 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800fe34:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800fe38:	6863      	ldr	r3, [r4, #4]
 800fe3a:	1e4a      	subs	r2, r1, #1
 800fe3c:	b2d2      	uxtb	r2, r2
 800fe3e:	2afd      	cmp	r2, #253	; 0xfd
 800fe40:	bf89      	itett	hi
 800fe42:	f023 0320 	bichi.w	r3, r3, #32
 800fe46:	f043 0320 	orrls.w	r3, r3, #32
 800fe4a:	6063      	strhi	r3, [r4, #4]
 800fe4c:	23ff      	movhi	r3, #255	; 0xff
 800fe4e:	bf9a      	itte	ls
 800fe50:	6063      	strls	r3, [r4, #4]
 800fe52:	74a1      	strbls	r1, [r4, #18]
 800fe54:	74a3      	strbhi	r3, [r4, #18]
 800fe56:	e78d      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800fe58:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800ff90 <PixelDmxParams::callbackFunction(char const*)+0x2d8>
 800fe5c:	f104 071a 	add.w	r7, r4, #26
 800fe60:	2600      	movs	r6, #0
 800fe62:	f04f 0814 	mov.w	r8, #20
 800fe66:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800fe6a:	f10d 020a 	add.w	r2, sp, #10
 800fe6e:	fb08 9106 	mla	r1, r8, r6, r9
 800fe72:	4628      	mov	r0, r5
 800fe74:	f005 fa67 	bl	8015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800fe78:	b940      	cbnz	r0, 800fe8c <PixelDmxParams::callbackFunction(char const*)+0x1d4>
 800fe7a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800fe7e:	6863      	ldr	r3, [r4, #4]
 800fe80:	fa0a f106 	lsl.w	r1, sl, r6
 800fe84:	b1ea      	cbz	r2, 800fec2 <PixelDmxParams::callbackFunction(char const*)+0x20a>
 800fe86:	803a      	strh	r2, [r7, #0]
 800fe88:	430b      	orrs	r3, r1
 800fe8a:	6063      	str	r3, [r4, #4]
 800fe8c:	3601      	adds	r6, #1
 800fe8e:	2e10      	cmp	r6, #16
 800fe90:	f107 0702 	add.w	r7, r7, #2
 800fe94:	d1e9      	bne.n	800fe6a <PixelDmxParams::callbackFunction(char const*)+0x1b2>
 800fe96:	493a      	ldr	r1, [pc, #232]	; (800ff80 <PixelDmxParams::callbackFunction(char const*)+0x2c8>)
 800fe98:	f10d 0209 	add.w	r2, sp, #9
 800fe9c:	4628      	mov	r0, r5
 800fe9e:	f005 fa9a 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800fea2:	b9a0      	cbnz	r0, 800fece <PixelDmxParams::callbackFunction(char const*)+0x216>
 800fea4:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800fea8:	6863      	ldr	r3, [r4, #4]
 800feaa:	1e91      	subs	r1, r2, #2
 800feac:	290e      	cmp	r1, #14
 800feae:	bf8d      	iteet	hi
 800feb0:	2201      	movhi	r2, #1
 800feb2:	74e2      	strbls	r2, [r4, #19]
 800feb4:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800feb8:	74e2      	strbhi	r2, [r4, #19]
 800feba:	bf88      	it	hi
 800febc:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800fec0:	e722      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fec2:	00b2      	lsls	r2, r6, #2
 800fec4:	3201      	adds	r2, #1
 800fec6:	803a      	strh	r2, [r7, #0]
 800fec8:	ea23 0301 	bic.w	r3, r3, r1
 800fecc:	e7dd      	b.n	800fe8a <PixelDmxParams::callbackFunction(char const*)+0x1d2>
 800fece:	492d      	ldr	r1, [pc, #180]	; (800ff84 <PixelDmxParams::callbackFunction(char const*)+0x2cc>)
 800fed0:	f10d 0209 	add.w	r2, sp, #9
 800fed4:	4628      	mov	r0, r5
 800fed6:	f005 fa7e 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800feda:	b960      	cbnz	r0, 800fef6 <PixelDmxParams::callbackFunction(char const*)+0x23e>
 800fedc:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800fee0:	6863      	ldr	r3, [r4, #4]
 800fee2:	1e51      	subs	r1, r2, #1
 800fee4:	2904      	cmp	r1, #4
 800fee6:	bf99      	ittee	ls
 800fee8:	7522      	strbls	r2, [r4, #20]
 800feea:	f043 0308 	orrls.w	r3, r3, #8
 800feee:	7520      	strbhi	r0, [r4, #20]
 800fef0:	f023 0308 	bichi.w	r3, r3, #8
 800fef4:	e708      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800fef6:	4924      	ldr	r1, [pc, #144]	; (800ff88 <PixelDmxParams::callbackFunction(char const*)+0x2d0>)
 800fef8:	f10d 0209 	add.w	r2, sp, #9
 800fefc:	4628      	mov	r0, r5
 800fefe:	f005 fa6a 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ff02:	b948      	cbnz	r0, 800ff18 <PixelDmxParams::callbackFunction(char const*)+0x260>
 800ff04:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800ff08:	6863      	ldr	r3, [r4, #4]
 800ff0a:	b112      	cbz	r2, 800ff12 <PixelDmxParams::callbackFunction(char const*)+0x25a>
 800ff0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ff10:	e6fa      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800ff12:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ff16:	e6f7      	b.n	800fd08 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800ff18:	491c      	ldr	r1, [pc, #112]	; (800ff8c <PixelDmxParams::callbackFunction(char const*)+0x2d4>)
 800ff1a:	aa03      	add	r2, sp, #12
 800ff1c:	4628      	mov	r0, r5
 800ff1e:	f005 f976 	bl	801520e <Sscan::Float(char const*, char const*, float&)>
 800ff22:	2800      	cmp	r0, #0
 800ff24:	f47f af26 	bne.w	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800ff28:	eddd 7a03 	vldr	s15, [sp, #12]
 800ff2c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800ff30:	ee67 7a87 	vmul.f32	s15, s15, s14
 800ff34:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800ff38:	edcd 7a01 	vstr	s15, [sp, #4]
 800ff3c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800ff40:	f1a3 0214 	sub.w	r2, r3, #20
 800ff44:	2a05      	cmp	r2, #5
 800ff46:	bf8c      	ite	hi
 800ff48:	7360      	strbhi	r0, [r4, #13]
 800ff4a:	7363      	strbls	r3, [r4, #13]
 800ff4c:	e712      	b.n	800fd74 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800ff4e:	bf00      	nop
 800ff50:	0801a752 	stmdaeq	r1, {r1, r4, r6, r8, r9, sl, sp, pc}
 800ff54:	0801a763 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, sp, pc}
 800ff58:	0801a705 	stmdaeq	r1, {r0, r2, r8, r9, sl, sp, pc}
 800ff5c:	0801b935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, ip, sp, pc}
 800ff60:	0801b93e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, fp, ip, sp, pc}
 800ff64:	0801b925 	stmdaeq	r1, {r0, r2, r5, r8, fp, ip, sp, pc}
 800ff68:	0801b948 	stmdaeq	r1, {r3, r6, r8, fp, ip, sp, pc}
 800ff6c:	0801b950 	stmdaeq	r1, {r4, r6, r8, fp, ip, sp, pc}
 800ff70:	0801b8f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, fp, ip, sp, pc}
 800ff74:	0801b8d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, fp, ip, sp, pc}
 800ff78:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ff7c:	0801b913 	stmdaeq	r1, {r0, r1, r4, r8, fp, ip, sp, pc}
 800ff80:	0801b8bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, fp, ip, sp, pc}
 800ff84:	0801b8e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, fp, ip, sp, pc}
 800ff88:	0801b902 	stmdaeq	r1, {r1, r8, fp, ip, sp, pc}
 800ff8c:	0801b8ca 	stmdaeq	r1, {r1, r3, r6, r7, fp, ip, sp, pc}
 800ff90:	0801b9d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, fp, ip, sp, pc}

0800ff94 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800ff94:	b538      	push	{r3, r4, r5, lr}
 800ff96:	460d      	mov	r5, r1
 800ff98:	4604      	mov	r4, r0
 800ff9a:	b930      	cbnz	r0, 800ffaa <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x16>
 800ff9c:	4b0a      	ldr	r3, [pc, #40]	; (800ffc8 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x34>)
 800ff9e:	4a0b      	ldr	r2, [pc, #44]	; (800ffcc <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800ffa0:	480b      	ldr	r0, [pc, #44]	; (800ffd0 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800ffa2:	f240 1141 	movw	r1, #321	; 0x141
 800ffa6:	f7f9 ff7b 	bl	8009ea0 <__assert_func>
 800ffaa:	b935      	cbnz	r5, 800ffba <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x26>
 800ffac:	4b09      	ldr	r3, [pc, #36]	; (800ffd4 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x40>)
 800ffae:	4a07      	ldr	r2, [pc, #28]	; (800ffcc <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800ffb0:	4807      	ldr	r0, [pc, #28]	; (800ffd0 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800ffb2:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800ffb6:	f7f9 ff73 	bl	8009ea0 <__assert_func>
 800ffba:	4629      	mov	r1, r5
 800ffbc:	4620      	mov	r0, r4
 800ffbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ffc2:	f7ff be79 	b.w	800fcb8 <PixelDmxParams::callbackFunction(char const*)>
 800ffc6:	bf00      	nop
 800ffc8:	0801a774 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, sp, pc}
 800ffcc:	0801a781 	stmdaeq	r1, {r0, r7, r8, r9, sl, sp, pc}
 800ffd0:	0801a705 	stmdaeq	r1, {r0, r2, r8, r9, sl, sp, pc}
 800ffd4:	0801a798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, sp, pc}

0800ffd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800ffd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffdc:	4604      	mov	r4, r0
 800ffde:	b086      	sub	sp, #24
 800ffe0:	460e      	mov	r6, r1
 800ffe2:	461f      	mov	r7, r3
 800ffe4:	4615      	mov	r5, r2
 800ffe6:	b932      	cbnz	r2, 800fff6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1e>
 800ffe8:	4ba7      	ldr	r3, [pc, #668]	; (8010288 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800ffea:	4aa8      	ldr	r2, [pc, #672]	; (801028c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800ffec:	48a8      	ldr	r0, [pc, #672]	; (8010290 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800ffee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800fff2:	f7f9 ff55 	bl	8009ea0 <__assert_func>
 800fff6:	1d20      	adds	r0, r4, #4
 800fff8:	2e00      	cmp	r6, #0
 800fffa:	d032      	beq.n	8010062 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x8a>
 800fffc:	2236      	movs	r2, #54	; 0x36
 800fffe:	4631      	mov	r1, r6
 8010000:	f006 f8a1 	bl	8016146 <memmove>
 8010004:	462a      	mov	r2, r5
 8010006:	49a3      	ldr	r1, [pc, #652]	; (8010294 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 8010008:	463b      	mov	r3, r7
 801000a:	a803      	add	r0, sp, #12
 801000c:	f005 f80e 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8010010:	7a20      	ldrb	r0, [r4, #8]
 8010012:	f000 fc3d 	bl	8010890 <PixelType::GetType(pixel::Type)>
 8010016:	6863      	ldr	r3, [r4, #4]
 8010018:	499f      	ldr	r1, [pc, #636]	; (8010298 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 801001a:	4602      	mov	r2, r0
 801001c:	f003 0301 	and.w	r3, r3, #1
 8010020:	a803      	add	r0, sp, #12
 8010022:	f7ff fd73 	bl	800fb0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 8010026:	6863      	ldr	r3, [r4, #4]
 8010028:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 801002c:	499b      	ldr	r1, [pc, #620]	; (801029c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 801002e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8010032:	a803      	add	r0, sp, #12
 8010034:	f7ff fd42 	bl	800fabc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8010038:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801003c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010040:	6863      	ldr	r3, [r4, #4]
 8010042:	42aa      	cmp	r2, r5
 8010044:	d227      	bcs.n	8010096 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xbe>
 8010046:	9803      	ldr	r0, [sp, #12]
 8010048:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 801004c:	4410      	add	r0, r2
 801004e:	eba5 0502 	sub.w	r5, r5, r2
 8010052:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010056:	d10b      	bne.n	8010070 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x98>
 8010058:	b96a      	cbnz	r2, 8010076 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 801005a:	9200      	str	r2, [sp, #0]
 801005c:	4b90      	ldr	r3, [pc, #576]	; (80102a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 801005e:	4a91      	ldr	r2, [pc, #580]	; (80102a4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 8010060:	e00f      	b.n	8010082 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xaa>
 8010062:	6823      	ldr	r3, [r4, #0]
 8010064:	681a      	ldr	r2, [r3, #0]
 8010066:	4601      	mov	r1, r0
 8010068:	68d2      	ldr	r2, [r2, #12]
 801006a:	4618      	mov	r0, r3
 801006c:	4790      	blx	r2
 801006e:	e7c9      	b.n	8010004 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c>
 8010070:	2a00      	cmp	r2, #0
 8010072:	f000 8087 	beq.w	8010184 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ac>
 8010076:	3b00      	subs	r3, #0
 8010078:	bf18      	it	ne
 801007a:	2301      	movne	r3, #1
 801007c:	9300      	str	r3, [sp, #0]
 801007e:	4a8a      	ldr	r2, [pc, #552]	; (80102a8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 8010080:	4b87      	ldr	r3, [pc, #540]	; (80102a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 8010082:	4629      	mov	r1, r5
 8010084:	f7fa fa40 	bl	800a508 <snprintf>
 8010088:	4285      	cmp	r5, r0
 801008a:	bfa2      	ittt	ge
 801008c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8010090:	18c0      	addge	r0, r0, r3
 8010092:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010096:	7b63      	ldrb	r3, [r4, #13]
 8010098:	2b00      	cmp	r3, #0
 801009a:	d178      	bne.n	801018e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1b6>
 801009c:	4a83      	ldr	r2, [pc, #524]	; (80102ac <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 801009e:	4984      	ldr	r1, [pc, #528]	; (80102b0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 80100a0:	a803      	add	r0, sp, #12
 80100a2:	f7ff fd33 	bl	800fb0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 80100a6:	4983      	ldr	r1, [pc, #524]	; (80102b4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 80100a8:	a803      	add	r0, sp, #12
 80100aa:	f005 f845 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 80100ae:	6863      	ldr	r3, [r4, #4]
 80100b0:	059e      	lsls	r6, r3, #22
 80100b2:	d403      	bmi.n	80100bc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 80100b4:	7a20      	ldrb	r0, [r4, #8]
 80100b6:	f000 fc4f 	bl	8010958 <PixelType::GetMap(pixel::Type)>
 80100ba:	75e0      	strb	r0, [r4, #23]
 80100bc:	7de0      	ldrb	r0, [r4, #23]
 80100be:	f000 fc3f 	bl	8010940 <PixelType::GetMap(pixel::Map)>
 80100c2:	6863      	ldr	r3, [r4, #4]
 80100c4:	497c      	ldr	r1, [pc, #496]	; (80102b8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 80100c6:	4602      	mov	r2, r0
 80100c8:	f3c3 2340 	ubfx	r3, r3, #9, #1
 80100cc:	a803      	add	r0, sp, #12
 80100ce:	f7ff fd1d 	bl	800fb0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 80100d2:	6863      	ldr	r3, [r4, #4]
 80100d4:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80100d8:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80100dc:	d011      	beq.n	8010102 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x12a>
 80100de:	f10d 020b 	add.w	r2, sp, #11
 80100e2:	7a20      	ldrb	r0, [r4, #8]
 80100e4:	f10d 010a 	add.w	r1, sp, #10
 80100e8:	f000 fac6 	bl	8010678 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 80100ec:	6863      	ldr	r3, [r4, #4]
 80100ee:	055d      	lsls	r5, r3, #21
 80100f0:	bf5c      	itt	pl
 80100f2:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 80100f6:	7622      	strbpl	r2, [r4, #24]
 80100f8:	0518      	lsls	r0, r3, #20
 80100fa:	bf5c      	itt	pl
 80100fc:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 8010100:	7663      	strbpl	r3, [r4, #25]
 8010102:	496e      	ldr	r1, [pc, #440]	; (80102bc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 8010104:	a803      	add	r0, sp, #12
 8010106:	f005 f817 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 801010a:	7e20      	ldrb	r0, [r4, #24]
 801010c:	f000 fc2e 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 8010110:	6862      	ldr	r2, [r4, #4]
 8010112:	496b      	ldr	r1, [pc, #428]	; (80102c0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 8010114:	2302      	movs	r3, #2
 8010116:	f3c2 2280 	ubfx	r2, r2, #10, #1
 801011a:	a803      	add	r0, sp, #12
 801011c:	f7ff fd1e 	bl	800fb5c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 8010120:	7e60      	ldrb	r0, [r4, #25]
 8010122:	f000 fc23 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 8010126:	6862      	ldr	r2, [r4, #4]
 8010128:	4966      	ldr	r1, [pc, #408]	; (80102c4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 801012a:	2302      	movs	r3, #2
 801012c:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 8010130:	a803      	add	r0, sp, #12
 8010132:	f7ff fd13 	bl	800fb5c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 8010136:	4964      	ldr	r1, [pc, #400]	; (80102c8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f0>)
 8010138:	a803      	add	r0, sp, #12
 801013a:	f004 fffd 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 801013e:	6863      	ldr	r3, [r4, #4]
 8010140:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 8010144:	4961      	ldr	r1, [pc, #388]	; (80102cc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f4>)
 8010146:	f3c3 2300 	ubfx	r3, r3, #8, #1
 801014a:	a803      	add	r0, sp, #12
 801014c:	f7ff fcb6 	bl	800fabc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8010150:	495f      	ldr	r1, [pc, #380]	; (80102d0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2f8>)
 8010152:	a803      	add	r0, sp, #12
 8010154:	f004 fff0 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 8010158:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801015c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010160:	f8d4 300e 	ldr.w	r3, [r4, #14]
 8010164:	6861      	ldr	r1, [r4, #4]
 8010166:	42aa      	cmp	r2, r5
 8010168:	d22f      	bcs.n	80101ca <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1f2>
 801016a:	9803      	ldr	r0, [sp, #12]
 801016c:	06c9      	lsls	r1, r1, #27
 801016e:	4410      	add	r0, r2
 8010170:	eba5 0502 	sub.w	r5, r5, r2
 8010174:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010178:	d418      	bmi.n	80101ac <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 801017a:	b9ca      	cbnz	r2, 80101b0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>
 801017c:	9300      	str	r3, [sp, #0]
 801017e:	4a49      	ldr	r2, [pc, #292]	; (80102a4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 8010180:	4b54      	ldr	r3, [pc, #336]	; (80102d4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 8010182:	e018      	b.n	80101b6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 8010184:	2301      	movs	r3, #1
 8010186:	9300      	str	r3, [sp, #0]
 8010188:	4a53      	ldr	r2, [pc, #332]	; (80102d8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 801018a:	4b45      	ldr	r3, [pc, #276]	; (80102a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 801018c:	e779      	b.n	8010082 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xaa>
 801018e:	ee07 3a90 	vmov	s15, r3
 8010192:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8010196:	2301      	movs	r3, #1
 8010198:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 801019c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80101a0:	4943      	ldr	r1, [pc, #268]	; (80102b0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 80101a2:	461a      	mov	r2, r3
 80101a4:	a803      	add	r0, sp, #12
 80101a6:	f7ff fcd9 	bl	800fb5c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 80101aa:	e77c      	b.n	80100a6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 80101ac:	2a00      	cmp	r2, #0
 80101ae:	d066      	beq.n	801027e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a6>
 80101b0:	9300      	str	r3, [sp, #0]
 80101b2:	4a3d      	ldr	r2, [pc, #244]	; (80102a8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 80101b4:	4b47      	ldr	r3, [pc, #284]	; (80102d4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 80101b6:	4629      	mov	r1, r5
 80101b8:	f7fa f9a6 	bl	800a508 <snprintf>
 80101bc:	4285      	cmp	r5, r0
 80101be:	bfa2      	ittt	ge
 80101c0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80101c4:	18c0      	addge	r0, r0, r3
 80101c6:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80101ca:	4944      	ldr	r1, [pc, #272]	; (80102dc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x304>)
 80101cc:	4e44      	ldr	r6, [pc, #272]	; (80102e0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x308>)
 80101ce:	a803      	add	r0, sp, #12
 80101d0:	f004 ffb2 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 80101d4:	6863      	ldr	r3, [r4, #4]
 80101d6:	7ca2      	ldrb	r2, [r4, #18]
 80101d8:	4942      	ldr	r1, [pc, #264]	; (80102e4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x30c>)
 80101da:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80101de:	a803      	add	r0, sp, #12
 80101e0:	f7ff fc44 	bl	800fa6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80101e4:	f104 0718 	add.w	r7, r4, #24
 80101e8:	2500      	movs	r5, #0
 80101ea:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 80101ee:	6862      	ldr	r2, [r4, #4]
 80101f0:	fa08 f305 	lsl.w	r3, r8, r5
 80101f4:	4393      	bics	r3, r2
 80101f6:	bf0c      	ite	eq
 80101f8:	2301      	moveq	r3, #1
 80101fa:	2300      	movne	r3, #0
 80101fc:	4631      	mov	r1, r6
 80101fe:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 8010202:	a803      	add	r0, sp, #12
 8010204:	3501      	adds	r5, #1
 8010206:	f7ff fc59 	bl	800fabc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 801020a:	2d10      	cmp	r5, #16
 801020c:	f106 0614 	add.w	r6, r6, #20
 8010210:	d1ed      	bne.n	80101ee <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x216>
 8010212:	6863      	ldr	r3, [r4, #4]
 8010214:	7ce2      	ldrb	r2, [r4, #19]
 8010216:	4934      	ldr	r1, [pc, #208]	; (80102e8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x310>)
 8010218:	f3c3 1380 	ubfx	r3, r3, #6, #1
 801021c:	a803      	add	r0, sp, #12
 801021e:	f7ff fc25 	bl	800fa6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8010222:	4932      	ldr	r1, [pc, #200]	; (80102ec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x314>)
 8010224:	a803      	add	r0, sp, #12
 8010226:	f004 ff87 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 801022a:	6863      	ldr	r3, [r4, #4]
 801022c:	7d22      	ldrb	r2, [r4, #20]
 801022e:	4930      	ldr	r1, [pc, #192]	; (80102f0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x318>)
 8010230:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010234:	a803      	add	r0, sp, #12
 8010236:	f7ff fc19 	bl	800fa6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801023a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801023e:	b17b      	cbz	r3, 8010260 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>
 8010240:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010244:	9b03      	ldr	r3, [sp, #12]
 8010246:	4413      	add	r3, r2
 8010248:	227d      	movs	r2, #125	; 0x7d
 801024a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801024e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010252:	9903      	ldr	r1, [sp, #12]
 8010254:	54ca      	strb	r2, [r1, r3]
 8010256:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801025a:	3301      	adds	r3, #1
 801025c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010260:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010262:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010266:	6013      	str	r3, [r2, #0]
 8010268:	4908      	ldr	r1, [pc, #32]	; (801028c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 801026a:	9300      	str	r3, [sp, #0]
 801026c:	4a08      	ldr	r2, [pc, #32]	; (8010290 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 801026e:	4821      	ldr	r0, [pc, #132]	; (80102f4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x31c>)
 8010270:	f240 138f 	movw	r3, #399	; 0x18f
 8010274:	f7fa f920 	bl	800a4b8 <printf>
 8010278:	b006      	add	sp, #24
 801027a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801027e:	9300      	str	r3, [sp, #0]
 8010280:	4a15      	ldr	r2, [pc, #84]	; (80102d8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 8010282:	4b14      	ldr	r3, [pc, #80]	; (80102d4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 8010284:	e797      	b.n	80101b6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 8010286:	bf00      	nop
 8010288:	0801a6ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, sp, pc}
 801028c:	0801a7a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, sp, pc}
 8010290:	0801a705 	stmdaeq	r1, {r0, r2, r8, r9, sl, sp, pc}
 8010294:	0801b958 	stmdaeq	r1, {r3, r4, r6, r8, fp, ip, sp, pc}
 8010298:	0801b935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, ip, sp, pc}
 801029c:	0801b93e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, fp, ip, sp, pc}
 80102a0:	0801b902 	stmdaeq	r1, {r1, r8, fp, ip, sp, pc}
 80102a4:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 80102a8:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 80102ac:	0801a7ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, sp, pc}
 80102b0:	0801b8ca 	stmdaeq	r1, {r1, r3, r6, r7, fp, ip, sp, pc}
 80102b4:	0801a7b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, sp, pc}
 80102b8:	0801b925 	stmdaeq	r1, {r0, r2, r5, r8, fp, ip, sp, pc}
 80102bc:	0801a7cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, sp, pc}
 80102c0:	0801b948 	stmdaeq	r1, {r3, r6, r8, fp, ip, sp, pc}
 80102c4:	0801b950 	stmdaeq	r1, {r4, r6, r8, fp, ip, sp, pc}
 80102c8:	0801a7e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, sp, pc}
 80102cc:	0801b8f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, fp, ip, sp, pc}
 80102d0:	0801a7ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, sp, pc}
 80102d4:	0801b8d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, fp, ip, sp, pc}
 80102d8:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}
 80102dc:	0801a7fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 80102e0:	0801b9d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, fp, ip, sp, pc}
 80102e4:	0801b913 	stmdaeq	r1, {r0, r1, r4, r8, fp, ip, sp, pc}
 80102e8:	0801b8bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, fp, ip, sp, pc}
 80102ec:	0801a80a 	stmdaeq	r1, {r1, r3, fp, sp, pc}
 80102f0:	0801b8e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, fp, ip, sp, pc}
 80102f4:	0801a817 	stmdaeq	r1, {r0, r1, r2, r4, fp, sp, pc}

080102f8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 80102f8:	b513      	push	{r0, r1, r4, lr}
 80102fa:	6804      	ldr	r4, [r0, #0]
 80102fc:	b914      	cbnz	r4, 8010304 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80102fe:	601c      	str	r4, [r3, #0]
 8010300:	b002      	add	sp, #8
 8010302:	bd10      	pop	{r4, pc}
 8010304:	9300      	str	r3, [sp, #0]
 8010306:	4613      	mov	r3, r2
 8010308:	460a      	mov	r2, r1
 801030a:	2100      	movs	r1, #0
 801030c:	f7ff fe64 	bl	800ffd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 8010310:	e7f6      	b.n	8010300 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08010314 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 8010314:	b538      	push	{r3, r4, r5, lr}
 8010316:	4605      	mov	r5, r0
 8010318:	460c      	mov	r4, r1
 801031a:	b931      	cbnz	r1, 801032a <PixelDmxParams::Set(PixelDmxConfiguration*)+0x16>
 801031c:	4b20      	ldr	r3, [pc, #128]	; (80103a0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x8c>)
 801031e:	4a21      	ldr	r2, [pc, #132]	; (80103a4 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x90>)
 8010320:	4821      	ldr	r0, [pc, #132]	; (80103a8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x94>)
 8010322:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 8010326:	f7f9 fdbb 	bl	8009ea0 <__assert_func>
 801032a:	686b      	ldr	r3, [r5, #4]
 801032c:	07da      	lsls	r2, r3, #31
 801032e:	bf44      	itt	mi
 8010330:	7a2a      	ldrbmi	r2, [r5, #8]
 8010332:	6022      	strmi	r2, [r4, #0]
 8010334:	0798      	lsls	r0, r3, #30
 8010336:	d505      	bpl.n	8010344 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x30>
 8010338:	f8b5 2009 	ldrh.w	r2, [r5, #9]
 801033c:	2a00      	cmp	r2, #0
 801033e:	bf08      	it	eq
 8010340:	22aa      	moveq	r2, #170	; 0xaa
 8010342:	6062      	str	r2, [r4, #4]
 8010344:	0599      	lsls	r1, r3, #22
 8010346:	bf44      	itt	mi
 8010348:	7dea      	ldrbmi	r2, [r5, #23]
 801034a:	60a2      	strmi	r2, [r4, #8]
 801034c:	055a      	lsls	r2, r3, #21
 801034e:	bf44      	itt	mi
 8010350:	7e2a      	ldrbmi	r2, [r5, #24]
 8010352:	7422      	strbmi	r2, [r4, #16]
 8010354:	0518      	lsls	r0, r3, #20
 8010356:	bf44      	itt	mi
 8010358:	7e6a      	ldrbmi	r2, [r5, #25]
 801035a:	7462      	strbmi	r2, [r4, #17]
 801035c:	06d9      	lsls	r1, r3, #27
 801035e:	bf44      	itt	mi
 8010360:	f8d5 200e 	ldrmi.w	r2, [r5, #14]
 8010364:	60e2      	strmi	r2, [r4, #12]
 8010366:	069a      	lsls	r2, r3, #26
 8010368:	bf44      	itt	mi
 801036a:	7caa      	ldrbmi	r2, [r5, #18]
 801036c:	74a2      	strbmi	r2, [r4, #18]
 801036e:	0618      	lsls	r0, r3, #24
 8010370:	d504      	bpl.n	801037c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x68>
 8010372:	2201      	movs	r2, #1
 8010374:	7522      	strb	r2, [r4, #20]
 8010376:	7b6a      	ldrb	r2, [r5, #13]
 8010378:	b102      	cbz	r2, 801037c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x68>
 801037a:	74e2      	strb	r2, [r4, #19]
 801037c:	0759      	lsls	r1, r3, #29
 801037e:	bf41      	itttt	mi
 8010380:	7aea      	ldrbmi	r2, [r5, #11]
 8010382:	7b29      	ldrbmi	r1, [r5, #12]
 8010384:	ea42 2201 	orrmi.w	r2, r2, r1, lsl #8
 8010388:	85a2      	strhmi	r2, [r4, #44]	; 0x2c
 801038a:	05da      	lsls	r2, r3, #23
 801038c:	bf44      	itt	mi
 801038e:	f8b5 2015 	ldrhmi.w	r2, [r5, #21]
 8010392:	6222      	strmi	r2, [r4, #32]
 8010394:	065b      	lsls	r3, r3, #25
 8010396:	bf44      	itt	mi
 8010398:	7ceb      	ldrbmi	r3, [r5, #19]
 801039a:	61e3      	strmi	r3, [r4, #28]
 801039c:	bd38      	pop	{r3, r4, r5, pc}
 801039e:	bf00      	nop
 80103a0:	0801a833 	stmdaeq	r1, {r0, r1, r4, r5, fp, sp, pc}
 80103a4:	0801a855 	stmdaeq	r1, {r0, r2, r4, r6, fp, sp, pc}
 80103a8:	0801a705 	stmdaeq	r1, {r0, r2, r8, r9, sl, sp, pc}

080103ac <PixelDmxParams::Dump()>:
 80103ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103b0:	4604      	mov	r4, r0
 80103b2:	4b5c      	ldr	r3, [pc, #368]	; (8010524 <PixelDmxParams::Dump()+0x178>)
 80103b4:	4a5c      	ldr	r2, [pc, #368]	; (8010528 <PixelDmxParams::Dump()+0x17c>)
 80103b6:	495d      	ldr	r1, [pc, #372]	; (801052c <PixelDmxParams::Dump()+0x180>)
 80103b8:	485d      	ldr	r0, [pc, #372]	; (8010530 <PixelDmxParams::Dump()+0x184>)
 80103ba:	b085      	sub	sp, #20
 80103bc:	f7fa f87c 	bl	800a4b8 <printf>
 80103c0:	6863      	ldr	r3, [r4, #4]
 80103c2:	07dd      	lsls	r5, r3, #31
 80103c4:	d508      	bpl.n	80103d8 <PixelDmxParams::Dump()+0x2c>
 80103c6:	7a20      	ldrb	r0, [r4, #8]
 80103c8:	f000 fa62 	bl	8010890 <PixelType::GetType(pixel::Type)>
 80103cc:	7a23      	ldrb	r3, [r4, #8]
 80103ce:	4959      	ldr	r1, [pc, #356]	; (8010534 <PixelDmxParams::Dump()+0x188>)
 80103d0:	4602      	mov	r2, r0
 80103d2:	4859      	ldr	r0, [pc, #356]	; (8010538 <PixelDmxParams::Dump()+0x18c>)
 80103d4:	f7fa f870 	bl	800a4b8 <printf>
 80103d8:	6863      	ldr	r3, [r4, #4]
 80103da:	0598      	lsls	r0, r3, #22
 80103dc:	d50a      	bpl.n	80103f4 <PixelDmxParams::Dump()+0x48>
 80103de:	7de2      	ldrb	r2, [r4, #23]
 80103e0:	9203      	str	r2, [sp, #12]
 80103e2:	4610      	mov	r0, r2
 80103e4:	f000 faac 	bl	8010940 <PixelType::GetMap(pixel::Map)>
 80103e8:	9a03      	ldr	r2, [sp, #12]
 80103ea:	4954      	ldr	r1, [pc, #336]	; (801053c <PixelDmxParams::Dump()+0x190>)
 80103ec:	4603      	mov	r3, r0
 80103ee:	4854      	ldr	r0, [pc, #336]	; (8010540 <PixelDmxParams::Dump()+0x194>)
 80103f0:	f7fa f862 	bl	800a4b8 <printf>
 80103f4:	6863      	ldr	r3, [r4, #4]
 80103f6:	0559      	lsls	r1, r3, #21
 80103f8:	d50e      	bpl.n	8010418 <PixelDmxParams::Dump()+0x6c>
 80103fa:	7e20      	ldrb	r0, [r4, #24]
 80103fc:	f000 fab6 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 8010400:	ee10 0a10 	vmov	r0, s0
 8010404:	f7f8 fdc6 	bl	8008f94 <__aeabi_f2d>
 8010408:	460b      	mov	r3, r1
 801040a:	7e21      	ldrb	r1, [r4, #24]
 801040c:	9100      	str	r1, [sp, #0]
 801040e:	4602      	mov	r2, r0
 8010410:	494c      	ldr	r1, [pc, #304]	; (8010544 <PixelDmxParams::Dump()+0x198>)
 8010412:	484d      	ldr	r0, [pc, #308]	; (8010548 <PixelDmxParams::Dump()+0x19c>)
 8010414:	f7fa f850 	bl	800a4b8 <printf>
 8010418:	6863      	ldr	r3, [r4, #4]
 801041a:	051a      	lsls	r2, r3, #20
 801041c:	d50e      	bpl.n	801043c <PixelDmxParams::Dump()+0x90>
 801041e:	7e60      	ldrb	r0, [r4, #25]
 8010420:	f000 faa4 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 8010424:	ee10 0a10 	vmov	r0, s0
 8010428:	f7f8 fdb4 	bl	8008f94 <__aeabi_f2d>
 801042c:	460b      	mov	r3, r1
 801042e:	7e61      	ldrb	r1, [r4, #25]
 8010430:	9100      	str	r1, [sp, #0]
 8010432:	4602      	mov	r2, r0
 8010434:	4945      	ldr	r1, [pc, #276]	; (801054c <PixelDmxParams::Dump()+0x1a0>)
 8010436:	4844      	ldr	r0, [pc, #272]	; (8010548 <PixelDmxParams::Dump()+0x19c>)
 8010438:	f7fa f83e 	bl	800a4b8 <printf>
 801043c:	6863      	ldr	r3, [r4, #4]
 801043e:	079b      	lsls	r3, r3, #30
 8010440:	d505      	bpl.n	801044e <PixelDmxParams::Dump()+0xa2>
 8010442:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 8010446:	4942      	ldr	r1, [pc, #264]	; (8010550 <PixelDmxParams::Dump()+0x1a4>)
 8010448:	4842      	ldr	r0, [pc, #264]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 801044a:	f7fa f835 	bl	800a4b8 <printf>
 801044e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8010580 <PixelDmxParams::Dump()+0x1d4>
 8010452:	f8df 8100 	ldr.w	r8, [pc, #256]	; 8010554 <PixelDmxParams::Dump()+0x1a8>
 8010456:	2500      	movs	r5, #0
 8010458:	f44f 5680 	mov.w	r6, #4096	; 0x1000
 801045c:	f104 071a 	add.w	r7, r4, #26
 8010460:	6862      	ldr	r2, [r4, #4]
 8010462:	fa06 f305 	lsl.w	r3, r6, r5
 8010466:	4393      	bics	r3, r2
 8010468:	d105      	bne.n	8010476 <PixelDmxParams::Dump()+0xca>
 801046a:	f837 2015 	ldrh.w	r2, [r7, r5, lsl #1]
 801046e:	4649      	mov	r1, r9
 8010470:	4640      	mov	r0, r8
 8010472:	f7fa f821 	bl	800a4b8 <printf>
 8010476:	3501      	adds	r5, #1
 8010478:	2d10      	cmp	r5, #16
 801047a:	f109 0914 	add.w	r9, r9, #20
 801047e:	d1ef      	bne.n	8010460 <PixelDmxParams::Dump()+0xb4>
 8010480:	6863      	ldr	r3, [r4, #4]
 8010482:	065f      	lsls	r7, r3, #25
 8010484:	d504      	bpl.n	8010490 <PixelDmxParams::Dump()+0xe4>
 8010486:	7ce2      	ldrb	r2, [r4, #19]
 8010488:	4933      	ldr	r1, [pc, #204]	; (8010558 <PixelDmxParams::Dump()+0x1ac>)
 801048a:	4832      	ldr	r0, [pc, #200]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 801048c:	f7fa f814 	bl	800a4b8 <printf>
 8010490:	6863      	ldr	r3, [r4, #4]
 8010492:	05de      	lsls	r6, r3, #23
 8010494:	d505      	bpl.n	80104a2 <PixelDmxParams::Dump()+0xf6>
 8010496:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 801049a:	4930      	ldr	r1, [pc, #192]	; (801055c <PixelDmxParams::Dump()+0x1b0>)
 801049c:	482d      	ldr	r0, [pc, #180]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 801049e:	f7fa f80b 	bl	800a4b8 <printf>
 80104a2:	6863      	ldr	r3, [r4, #4]
 80104a4:	06dd      	lsls	r5, r3, #27
 80104a6:	d505      	bpl.n	80104b4 <PixelDmxParams::Dump()+0x108>
 80104a8:	f8d4 200e 	ldr.w	r2, [r4, #14]
 80104ac:	492c      	ldr	r1, [pc, #176]	; (8010560 <PixelDmxParams::Dump()+0x1b4>)
 80104ae:	4829      	ldr	r0, [pc, #164]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 80104b0:	f7fa f802 	bl	800a4b8 <printf>
 80104b4:	6863      	ldr	r3, [r4, #4]
 80104b6:	0698      	lsls	r0, r3, #26
 80104b8:	d504      	bpl.n	80104c4 <PixelDmxParams::Dump()+0x118>
 80104ba:	7ca2      	ldrb	r2, [r4, #18]
 80104bc:	4929      	ldr	r1, [pc, #164]	; (8010564 <PixelDmxParams::Dump()+0x1b8>)
 80104be:	4825      	ldr	r0, [pc, #148]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 80104c0:	f7f9 fffa 	bl	800a4b8 <printf>
 80104c4:	6863      	ldr	r3, [r4, #4]
 80104c6:	0759      	lsls	r1, r3, #29
 80104c8:	d505      	bpl.n	80104d6 <PixelDmxParams::Dump()+0x12a>
 80104ca:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 80104ce:	4926      	ldr	r1, [pc, #152]	; (8010568 <PixelDmxParams::Dump()+0x1bc>)
 80104d0:	4820      	ldr	r0, [pc, #128]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 80104d2:	f7f9 fff1 	bl	800a4b8 <printf>
 80104d6:	6863      	ldr	r3, [r4, #4]
 80104d8:	071a      	lsls	r2, r3, #28
 80104da:	d504      	bpl.n	80104e6 <PixelDmxParams::Dump()+0x13a>
 80104dc:	7d22      	ldrb	r2, [r4, #20]
 80104de:	4923      	ldr	r1, [pc, #140]	; (801056c <PixelDmxParams::Dump()+0x1c0>)
 80104e0:	481c      	ldr	r0, [pc, #112]	; (8010554 <PixelDmxParams::Dump()+0x1a8>)
 80104e2:	f7f9 ffe9 	bl	800a4b8 <printf>
 80104e6:	6863      	ldr	r3, [r4, #4]
 80104e8:	061b      	lsls	r3, r3, #24
 80104ea:	d517      	bpl.n	801051c <PixelDmxParams::Dump()+0x170>
 80104ec:	4920      	ldr	r1, [pc, #128]	; (8010570 <PixelDmxParams::Dump()+0x1c4>)
 80104ee:	4821      	ldr	r0, [pc, #132]	; (8010574 <PixelDmxParams::Dump()+0x1c8>)
 80104f0:	f7f9 ffe2 	bl	800a4b8 <printf>
 80104f4:	7b64      	ldrb	r4, [r4, #13]
 80104f6:	ee07 4a90 	vmov	s15, r4
 80104fa:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80104fe:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010502:	eec7 7a27 	vdiv.f32	s15, s14, s15
 8010506:	ee17 0a90 	vmov	r0, s15
 801050a:	f7f8 fd43 	bl	8008f94 <__aeabi_f2d>
 801050e:	9400      	str	r4, [sp, #0]
 8010510:	4602      	mov	r2, r0
 8010512:	460b      	mov	r3, r1
 8010514:	4818      	ldr	r0, [pc, #96]	; (8010578 <PixelDmxParams::Dump()+0x1cc>)
 8010516:	4919      	ldr	r1, [pc, #100]	; (801057c <PixelDmxParams::Dump()+0x1d0>)
 8010518:	f7f9 ffce 	bl	800a4b8 <printf>
 801051c:	b005      	add	sp, #20
 801051e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010522:	bf00      	nop
 8010524:	0801b958 	stmdaeq	r1, {r3, r4, r6, r8, fp, ip, sp, pc}
 8010528:	0801a859 	stmdaeq	r1, {r0, r3, r4, r6, fp, sp, pc}
 801052c:	0801a85e 	stmdaeq	r1, {r1, r2, r3, r4, r6, fp, sp, pc}
 8010530:	0801a880 	stmdaeq	r1, {r7, fp, sp, pc}
 8010534:	0801b935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, ip, sp, pc}
 8010538:	0801a88e 	stmdaeq	r1, {r1, r2, r3, r7, fp, sp, pc}
 801053c:	0801b925 	stmdaeq	r1, {r0, r2, r5, r8, fp, ip, sp, pc}
 8010540:	0801a89b 	stmdaeq	r1, {r0, r1, r3, r4, r7, fp, sp, pc}
 8010544:	0801b948 	stmdaeq	r1, {r3, r6, r8, fp, ip, sp, pc}
 8010548:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}
 801054c:	0801b950 	stmdaeq	r1, {r4, r6, r8, fp, ip, sp, pc}
 8010550:	0801b93e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, fp, ip, sp, pc}
 8010554:	0801a8b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, sp, pc}
 8010558:	0801b8bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, fp, ip, sp, pc}
 801055c:	0801b8f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, fp, ip, sp, pc}
 8010560:	0801b8d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, fp, ip, sp, pc}
 8010564:	0801b913 	stmdaeq	r1, {r0, r1, r4, r8, fp, ip, sp, pc}
 8010568:	0801bb59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, fp, ip, sp, pc}
 801056c:	0801b8e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, fp, ip, sp, pc}
 8010570:	0801b902 	stmdaeq	r1, {r1, r8, fp, ip, sp, pc}
 8010574:	0801a8c1 	stmdaeq	r1, {r0, r6, r7, fp, sp, pc}
 8010578:	0801a8ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, fp, sp, pc}
 801057c:	0801b8ca 	stmdaeq	r1, {r1, r3, r6, r7, fp, ip, sp, pc}
 8010580:	0801b9d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, fp, ip, sp, pc}

08010584 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 8010584:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010586:	4604      	mov	r4, r0
 8010588:	4617      	mov	r7, r2
 801058a:	482a      	ldr	r0, [pc, #168]	; (8010634 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb0>)
 801058c:	4a2a      	ldr	r2, [pc, #168]	; (8010638 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 801058e:	460e      	mov	r6, r1
 8010590:	461d      	mov	r5, r3
 8010592:	492a      	ldr	r1, [pc, #168]	; (801063c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 8010594:	232d      	movs	r3, #45	; 0x2d
 8010596:	f7f9 ff8f 	bl	800a4b8 <printf>
 801059a:	4639      	mov	r1, r7
 801059c:	4620      	mov	r0, r4
 801059e:	f000 f879 	bl	8010694 <PixelConfiguration::Validate(unsigned int&)>
 80105a2:	7d62      	ldrb	r2, [r4, #21]
 80105a4:	b94a      	cbnz	r2, 80105ba <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x36>
 80105a6:	6823      	ldr	r3, [r4, #0]
 80105a8:	b11b      	cbz	r3, 80105b2 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x2e>
 80105aa:	3b0b      	subs	r3, #11
 80105ac:	2b01      	cmp	r3, #1
 80105ae:	bf88      	it	hi
 80105b0:	6022      	strhi	r2, [r4, #0]
 80105b2:	4639      	mov	r1, r7
 80105b4:	4620      	mov	r0, r4
 80105b6:	f000 f86d 	bl	8010694 <PixelConfiguration::Validate(unsigned int&)>
 80105ba:	6823      	ldr	r3, [r4, #0]
 80105bc:	2b07      	cmp	r3, #7
 80105be:	bf15      	itete	ne
 80105c0:	f44f 71aa 	movne.w	r1, #340	; 0x154
 80105c4:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80105c8:	23aa      	movne	r3, #170	; 0xaa
 80105ca:	2380      	moveq	r3, #128	; 0x80
 80105cc:	e9c5 3100 	strd	r3, r1, [r5]
 80105d0:	6a21      	ldr	r1, [r4, #32]
 80105d2:	bf14      	ite	ne
 80105d4:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 80105d8:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 80105dc:	60aa      	str	r2, [r5, #8]
 80105de:	6862      	ldr	r2, [r4, #4]
 80105e0:	b109      	cbz	r1, 80105e6 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x62>
 80105e2:	4291      	cmp	r1, r2
 80105e4:	d900      	bls.n	80105e8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x64>
 80105e6:	6222      	str	r2, [r4, #32]
 80105e8:	69e0      	ldr	r0, [r4, #28]
 80105ea:	6a21      	ldr	r1, [r4, #32]
 80105ec:	fbb2 f2f1 	udiv	r2, r2, r1
 80105f0:	42b0      	cmp	r0, r6
 80105f2:	bf28      	it	cs
 80105f4:	4630      	movcs	r0, r6
 80105f6:	6262      	str	r2, [r4, #36]	; 0x24
 80105f8:	2e01      	cmp	r6, #1
 80105fa:	f103 0301 	add.w	r3, r3, #1
 80105fe:	fbb2 f2f3 	udiv	r2, r2, r3
 8010602:	f102 0301 	add.w	r3, r2, #1
 8010606:	62a3      	str	r3, [r4, #40]	; 0x28
 8010608:	bf1c      	itt	ne
 801060a:	4343      	mulne	r3, r0
 801060c:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 8010610:	61e0      	str	r0, [r4, #28]
 8010612:	9200      	str	r2, [sp, #0]
 8010614:	60ea      	str	r2, [r5, #12]
 8010616:	4908      	ldr	r1, [pc, #32]	; (8010638 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 8010618:	4a08      	ldr	r2, [pc, #32]	; (801063c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 801061a:	4809      	ldr	r0, [pc, #36]	; (8010640 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xbc>)
 801061c:	2357      	movs	r3, #87	; 0x57
 801061e:	f7f9 ff4b 	bl	800a4b8 <printf>
 8010622:	4a05      	ldr	r2, [pc, #20]	; (8010638 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb4>)
 8010624:	4905      	ldr	r1, [pc, #20]	; (801063c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xb8>)
 8010626:	4807      	ldr	r0, [pc, #28]	; (8010644 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0xc0>)
 8010628:	2358      	movs	r3, #88	; 0x58
 801062a:	b003      	add	sp, #12
 801062c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010630:	f7f9 bf42 	b.w	800a4b8 <printf>
 8010634:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}
 8010638:	0801a8de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, fp, sp, pc}
 801063c:	0801a8e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, fp, sp, pc}
 8010640:	0801a905 	stmdaeq	r1, {r0, r2, r8, fp, sp, pc}
 8010644:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}

08010648 <PixelDmxConfiguration::Print()>:
 8010648:	b510      	push	{r4, lr}
 801064a:	4604      	mov	r4, r0
 801064c:	f000 f8b8 	bl	80107c0 <PixelConfiguration::Print()>
 8010650:	4806      	ldr	r0, [pc, #24]	; (801066c <PixelDmxConfiguration::Print()+0x24>)
 8010652:	f7f9 ff31 	bl	800a4b8 <printf>
 8010656:	69e1      	ldr	r1, [r4, #28]
 8010658:	4805      	ldr	r0, [pc, #20]	; (8010670 <PixelDmxConfiguration::Print()+0x28>)
 801065a:	f7f9 ff2d 	bl	800a4b8 <printf>
 801065e:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 8010662:	4804      	ldr	r0, [pc, #16]	; (8010674 <PixelDmxConfiguration::Print()+0x2c>)
 8010664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010668:	f7f9 bf26 	b.w	800a4b8 <printf>
 801066c:	0801a93b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, sp, pc}
 8010670:	0801a954 	stmdaeq	r1, {r2, r4, r6, r8, fp, sp, pc}
 8010674:	0801a963 	stmdaeq	r1, {r0, r1, r5, r6, r8, fp, sp, pc}

08010678 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 8010678:	23c0      	movs	r3, #192	; 0xc0
 801067a:	2803      	cmp	r0, #3
 801067c:	700b      	strb	r3, [r1, #0]
 801067e:	d006      	beq.n	801068e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 8010680:	3808      	subs	r0, #8
 8010682:	2803      	cmp	r0, #3
 8010684:	bf34      	ite	cc
 8010686:	23fc      	movcc	r3, #252	; 0xfc
 8010688:	23f0      	movcs	r3, #240	; 0xf0
 801068a:	7013      	strb	r3, [r2, #0]
 801068c:	4770      	bx	lr
 801068e:	23f8      	movs	r3, #248	; 0xf8
 8010690:	e7fb      	b.n	801068a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

08010694 <PixelConfiguration::Validate(unsigned int&)>:
 8010694:	b513      	push	{r0, r1, r4, lr}
 8010696:	4604      	mov	r4, r0
 8010698:	6800      	ldr	r0, [r0, #0]
 801069a:	6863      	ldr	r3, [r4, #4]
 801069c:	68a2      	ldr	r2, [r4, #8]
 801069e:	2807      	cmp	r0, #7
 80106a0:	d127      	bne.n	80106f2 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 80106a2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80106a6:	bf28      	it	cs
 80106a8:	f44f 7300 	movcs.w	r3, #512	; 0x200
 80106ac:	6063      	str	r3, [r4, #4]
 80106ae:	2304      	movs	r3, #4
 80106b0:	600b      	str	r3, [r1, #0]
 80106b2:	2301      	movs	r3, #1
 80106b4:	2a06      	cmp	r2, #6
 80106b6:	7563      	strb	r3, [r4, #21]
 80106b8:	d102      	bne.n	80106c0 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 80106ba:	f000 f94d 	bl	8010958 <PixelType::GetMap(pixel::Type)>
 80106be:	60a0      	str	r0, [r4, #8]
 80106c0:	7c63      	ldrb	r3, [r4, #17]
 80106c2:	7c22      	ldrb	r2, [r4, #16]
 80106c4:	6820      	ldr	r0, [r4, #0]
 80106c6:	429a      	cmp	r2, r3
 80106c8:	bf24      	itt	cs
 80106ca:	2300      	movcs	r3, #0
 80106cc:	8223      	strhcs	r3, [r4, #16]
 80106ce:	f10d 0207 	add.w	r2, sp, #7
 80106d2:	f10d 0106 	add.w	r1, sp, #6
 80106d6:	f7ff ffcf 	bl	8010678 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 80106da:	7c23      	ldrb	r3, [r4, #16]
 80106dc:	b913      	cbnz	r3, 80106e4 <PixelConfiguration::Validate(unsigned int&)+0x50>
 80106de:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80106e2:	7423      	strb	r3, [r4, #16]
 80106e4:	7c63      	ldrb	r3, [r4, #17]
 80106e6:	b913      	cbnz	r3, 80106ee <PixelConfiguration::Validate(unsigned int&)+0x5a>
 80106e8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80106ec:	7463      	strb	r3, [r4, #17]
 80106ee:	4b2a      	ldr	r3, [pc, #168]	; (8010798 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 80106f0:	e01e      	b.n	8010730 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 80106f2:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 80106f6:	bf28      	it	cs
 80106f8:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 80106fc:	6063      	str	r3, [r4, #4]
 80106fe:	2303      	movs	r3, #3
 8010700:	600b      	str	r3, [r1, #0]
 8010702:	f1a0 030b 	sub.w	r3, r0, #11
 8010706:	2b01      	cmp	r3, #1
 8010708:	d806      	bhi.n	8010718 <PixelConfiguration::Validate(unsigned int&)+0x84>
 801070a:	7ca3      	ldrb	r3, [r4, #18]
 801070c:	2b1f      	cmp	r3, #31
 801070e:	d83d      	bhi.n	801078c <PixelConfiguration::Validate(unsigned int&)+0xf8>
 8010710:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8010714:	74a3      	strb	r3, [r4, #18]
 8010716:	e001      	b.n	801071c <PixelConfiguration::Validate(unsigned int&)+0x88>
 8010718:	2800      	cmp	r0, #0
 801071a:	d139      	bne.n	8010790 <PixelConfiguration::Validate(unsigned int&)+0xfc>
 801071c:	2300      	movs	r3, #0
 801071e:	2a06      	cmp	r2, #6
 8010720:	bf08      	it	eq
 8010722:	60a3      	streq	r3, [r4, #8]
 8010724:	280d      	cmp	r0, #13
 8010726:	7563      	strb	r3, [r4, #21]
 8010728:	68e3      	ldr	r3, [r4, #12]
 801072a:	d119      	bne.n	8010760 <PixelConfiguration::Validate(unsigned int&)+0xcc>
 801072c:	b913      	cbnz	r3, 8010734 <PixelConfiguration::Validate(unsigned int&)+0xa0>
 801072e:	4b1b      	ldr	r3, [pc, #108]	; (801079c <PixelConfiguration::Validate(unsigned int&)+0x108>)
 8010730:	60e3      	str	r3, [r4, #12]
 8010732:	e003      	b.n	801073c <PixelConfiguration::Validate(unsigned int&)+0xa8>
 8010734:	4a1a      	ldr	r2, [pc, #104]	; (80107a0 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 8010736:	4293      	cmp	r3, r2
 8010738:	d900      	bls.n	801073c <PixelConfiguration::Validate(unsigned int&)+0xa8>
 801073a:	60e2      	str	r2, [r4, #12]
 801073c:	7d23      	ldrb	r3, [r4, #20]
 801073e:	b31b      	cbz	r3, 8010788 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 8010740:	7ce3      	ldrb	r3, [r4, #19]
 8010742:	b9ab      	cbnz	r3, 8010770 <PixelConfiguration::Validate(unsigned int&)+0xdc>
 8010744:	6822      	ldr	r2, [r4, #0]
 8010746:	b17a      	cbz	r2, 8010768 <PixelConfiguration::Validate(unsigned int&)+0xd4>
 8010748:	f1a2 030b 	sub.w	r3, r2, #11
 801074c:	2b01      	cmp	r3, #1
 801074e:	d90d      	bls.n	801076c <PixelConfiguration::Validate(unsigned int&)+0xd8>
 8010750:	4b14      	ldr	r3, [pc, #80]	; (80107a4 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 8010752:	4915      	ldr	r1, [pc, #84]	; (80107a8 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 8010754:	2a0d      	cmp	r2, #13
 8010756:	bf08      	it	eq
 8010758:	460b      	moveq	r3, r1
 801075a:	61a3      	str	r3, [r4, #24]
 801075c:	b002      	add	sp, #8
 801075e:	bd10      	pop	{r4, pc}
 8010760:	2b00      	cmp	r3, #0
 8010762:	d0e4      	beq.n	801072e <PixelConfiguration::Validate(unsigned int&)+0x9a>
 8010764:	4a11      	ldr	r2, [pc, #68]	; (80107ac <PixelConfiguration::Validate(unsigned int&)+0x118>)
 8010766:	e7e6      	b.n	8010736 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 8010768:	4b11      	ldr	r3, [pc, #68]	; (80107b0 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 801076a:	e7f6      	b.n	801075a <PixelConfiguration::Validate(unsigned int&)+0xc6>
 801076c:	4b11      	ldr	r3, [pc, #68]	; (80107b4 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 801076e:	e7f4      	b.n	801075a <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010770:	f1a3 0214 	sub.w	r2, r3, #20
 8010774:	2a05      	cmp	r2, #5
 8010776:	d807      	bhi.n	8010788 <PixelConfiguration::Validate(unsigned int&)+0xf4>
 8010778:	3b15      	subs	r3, #21
 801077a:	2b04      	cmp	r3, #4
 801077c:	bf96      	itet	ls
 801077e:	4a0e      	ldrls	r2, [pc, #56]	; (80107b8 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 8010780:	4b0e      	ldrhi	r3, [pc, #56]	; (80107bc <PixelConfiguration::Validate(unsigned int&)+0x128>)
 8010782:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 8010786:	e7e8      	b.n	801075a <PixelConfiguration::Validate(unsigned int&)+0xc6>
 8010788:	4b07      	ldr	r3, [pc, #28]	; (80107a8 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 801078a:	e7e6      	b.n	801075a <PixelConfiguration::Validate(unsigned int&)+0xc6>
 801078c:	23ff      	movs	r3, #255	; 0xff
 801078e:	e7c1      	b.n	8010714 <PixelConfiguration::Validate(unsigned int&)+0x80>
 8010790:	280d      	cmp	r0, #13
 8010792:	d18e      	bne.n	80106b2 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 8010794:	e7c2      	b.n	801071c <PixelConfiguration::Validate(unsigned int&)+0x88>
 8010796:	bf00      	nop
 8010798:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 801079c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80107a0:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80107a4:	0801ad5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, fp, sp, pc}
 80107a8:	0801aa5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, sp, pc}
 80107ac:	017d7840 	cmneq	sp, r0, asr #16
 80107b0:	0801b05c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp, pc}
 80107b4:	0801b15c 	stmdaeq	r1, {r2, r3, r4, r6, r8, ip, sp, pc}
 80107b8:	0801aa48 	stmdaeq	r1, {r3, r6, r9, fp, sp, pc}
 80107bc:	0801ab5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, fp, sp, pc}

080107c0 <PixelConfiguration::Print()>:
 80107c0:	b513      	push	{r0, r1, r4, lr}
 80107c2:	4604      	mov	r4, r0
 80107c4:	4827      	ldr	r0, [pc, #156]	; (8010864 <PixelConfiguration::Print()+0xa4>)
 80107c6:	f7f9 fe77 	bl	800a4b8 <printf>
 80107ca:	6820      	ldr	r0, [r4, #0]
 80107cc:	f000 f860 	bl	8010890 <PixelType::GetType(pixel::Type)>
 80107d0:	6822      	ldr	r2, [r4, #0]
 80107d2:	4601      	mov	r1, r0
 80107d4:	4824      	ldr	r0, [pc, #144]	; (8010868 <PixelConfiguration::Print()+0xa8>)
 80107d6:	f7f9 fe6f 	bl	800a4b8 <printf>
 80107da:	6861      	ldr	r1, [r4, #4]
 80107dc:	4823      	ldr	r0, [pc, #140]	; (801086c <PixelConfiguration::Print()+0xac>)
 80107de:	f7f9 fe6b 	bl	800a4b8 <printf>
 80107e2:	7d63      	ldrb	r3, [r4, #21]
 80107e4:	2b00      	cmp	r3, #0
 80107e6:	d034      	beq.n	8010852 <PixelConfiguration::Print()+0x92>
 80107e8:	68a0      	ldr	r0, [r4, #8]
 80107ea:	f000 f8a9 	bl	8010940 <PixelType::GetMap(pixel::Map)>
 80107ee:	68a2      	ldr	r2, [r4, #8]
 80107f0:	4601      	mov	r1, r0
 80107f2:	481f      	ldr	r0, [pc, #124]	; (8010870 <PixelConfiguration::Print()+0xb0>)
 80107f4:	f7f9 fe60 	bl	800a4b8 <printf>
 80107f8:	7c20      	ldrb	r0, [r4, #16]
 80107fa:	f000 f8b7 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 80107fe:	ee10 0a10 	vmov	r0, s0
 8010802:	f7f8 fbc7 	bl	8008f94 <__aeabi_f2d>
 8010806:	460b      	mov	r3, r1
 8010808:	7c21      	ldrb	r1, [r4, #16]
 801080a:	9100      	str	r1, [sp, #0]
 801080c:	4602      	mov	r2, r0
 801080e:	4819      	ldr	r0, [pc, #100]	; (8010874 <PixelConfiguration::Print()+0xb4>)
 8010810:	f7f9 fe52 	bl	800a4b8 <printf>
 8010814:	7c60      	ldrb	r0, [r4, #17]
 8010816:	f000 f8a9 	bl	801096c <PixelType::ConvertTxH(unsigned char)>
 801081a:	ee10 0a10 	vmov	r0, s0
 801081e:	f7f8 fbb9 	bl	8008f94 <__aeabi_f2d>
 8010822:	460b      	mov	r3, r1
 8010824:	7c61      	ldrb	r1, [r4, #17]
 8010826:	9100      	str	r1, [sp, #0]
 8010828:	4602      	mov	r2, r0
 801082a:	4813      	ldr	r0, [pc, #76]	; (8010878 <PixelConfiguration::Print()+0xb8>)
 801082c:	f7f9 fe44 	bl	800a4b8 <printf>
 8010830:	7d21      	ldrb	r1, [r4, #20]
 8010832:	4a12      	ldr	r2, [pc, #72]	; (801087c <PixelConfiguration::Print()+0xbc>)
 8010834:	4b12      	ldr	r3, [pc, #72]	; (8010880 <PixelConfiguration::Print()+0xc0>)
 8010836:	4813      	ldr	r0, [pc, #76]	; (8010884 <PixelConfiguration::Print()+0xc4>)
 8010838:	2900      	cmp	r1, #0
 801083a:	bf14      	ite	ne
 801083c:	4611      	movne	r1, r2
 801083e:	4619      	moveq	r1, r3
 8010840:	f7f9 fe3a 	bl	800a4b8 <printf>
 8010844:	68e1      	ldr	r1, [r4, #12]
 8010846:	4810      	ldr	r0, [pc, #64]	; (8010888 <PixelConfiguration::Print()+0xc8>)
 8010848:	b002      	add	sp, #8
 801084a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801084e:	f7f9 be33 	b.w	800a4b8 <printf>
 8010852:	6823      	ldr	r3, [r4, #0]
 8010854:	3b0b      	subs	r3, #11
 8010856:	2b01      	cmp	r3, #1
 8010858:	d8ea      	bhi.n	8010830 <PixelConfiguration::Print()+0x70>
 801085a:	7ca1      	ldrb	r1, [r4, #18]
 801085c:	480b      	ldr	r0, [pc, #44]	; (801088c <PixelConfiguration::Print()+0xcc>)
 801085e:	f7f9 fe2b 	bl	800a4b8 <printf>
 8010862:	e7e5      	b.n	8010830 <PixelConfiguration::Print()+0x70>
 8010864:	0801a98e 	stmdaeq	r1, {r1, r2, r3, r7, r8, fp, sp, pc}
 8010868:	0801a9a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, fp, sp, pc}
 801086c:	0801a9b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, sp, pc}
 8010870:	0801a9c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, sp, pc}
 8010874:	0801a9da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, fp, sp, pc}
 8010878:	0801a9f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, fp, sp, pc}
 801087c:	0801a987 	stmdaeq	r1, {r0, r1, r2, r7, r8, fp, sp, pc}
 8010880:	0801a98b 	stmdaeq	r1, {r0, r1, r3, r7, r8, fp, sp, pc}
 8010884:	0801aa21 	stmdaeq	r1, {r0, r5, r9, fp, sp, pc}
 8010888:	0801aa37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, fp, sp, pc}
 801088c:	0801aa0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, pc}

08010890 <PixelType::GetType(pixel::Type)>:
 8010890:	280d      	cmp	r0, #13
 8010892:	bfda      	itte	le
 8010894:	4b02      	ldrle	r3, [pc, #8]	; (80108a0 <PixelType::GetType(pixel::Type)+0x10>)
 8010896:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 801089a:	4802      	ldrgt	r0, [pc, #8]	; (80108a4 <PixelType::GetType(pixel::Type)+0x14>)
 801089c:	4770      	bx	lr
 801089e:	bf00      	nop
 80108a0:	0801b290 	stmdaeq	r1, {r4, r7, r9, ip, sp, pc}
 80108a4:	0801b25c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, sp, pc}

080108a8 <PixelType::GetType(char const*)>:
 80108a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108aa:	4c10      	ldr	r4, [pc, #64]	; (80108ec <PixelType::GetType(char const*)+0x44>)
 80108ac:	2300      	movs	r3, #0
 80108ae:	1e47      	subs	r7, r0, #1
 80108b0:	1e66      	subs	r6, r4, #1
 80108b2:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 80108b6:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
 80108ba:	2a19      	cmp	r2, #25
 80108bc:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 80108c0:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 80108c4:	460d      	mov	r5, r1
 80108c6:	bf98      	it	ls
 80108c8:	f101 0520 	addls.w	r5, r1, #32
 80108cc:	f1bc 0f19 	cmp.w	ip, #25
 80108d0:	bf98      	it	ls
 80108d2:	3220      	addls	r2, #32
 80108d4:	42aa      	cmp	r2, r5
 80108d6:	d005      	beq.n	80108e4 <PixelType::GetType(char const*)+0x3c>
 80108d8:	3301      	adds	r3, #1
 80108da:	2b0e      	cmp	r3, #14
 80108dc:	f104 0408 	add.w	r4, r4, #8
 80108e0:	d1e5      	bne.n	80108ae <PixelType::GetType(char const*)+0x6>
 80108e2:	e001      	b.n	80108e8 <PixelType::GetType(char const*)+0x40>
 80108e4:	2900      	cmp	r1, #0
 80108e6:	d1e4      	bne.n	80108b2 <PixelType::GetType(char const*)+0xa>
 80108e8:	4618      	mov	r0, r3
 80108ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108ec:	0801b290 	stmdaeq	r1, {r4, r7, r9, ip, sp, pc}

080108f0 <PixelType::GetMap(char const*)>:
 80108f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108f2:	4a12      	ldr	r2, [pc, #72]	; (801093c <PixelType::GetMap(char const*)+0x4c>)
 80108f4:	2300      	movs	r3, #0
 80108f6:	1e55      	subs	r5, r2, #1
 80108f8:	1e46      	subs	r6, r0, #1
 80108fa:	f102 0c02 	add.w	ip, r2, #2
 80108fe:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8010902:	f1a1 0441 	sub.w	r4, r1, #65	; 0x41
 8010906:	2c19      	cmp	r4, #25
 8010908:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 801090c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8010910:	460f      	mov	r7, r1
 8010912:	bf98      	it	ls
 8010914:	f101 0720 	addls.w	r7, r1, #32
 8010918:	f1be 0f19 	cmp.w	lr, #25
 801091c:	bf98      	it	ls
 801091e:	3420      	addls	r4, #32
 8010920:	42bc      	cmp	r4, r7
 8010922:	d006      	beq.n	8010932 <PixelType::GetMap(char const*)+0x42>
 8010924:	3301      	adds	r3, #1
 8010926:	2b06      	cmp	r3, #6
 8010928:	f102 0204 	add.w	r2, r2, #4
 801092c:	d1e3      	bne.n	80108f6 <PixelType::GetMap(char const*)+0x6>
 801092e:	4618      	mov	r0, r3
 8010930:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010932:	2900      	cmp	r1, #0
 8010934:	d0fb      	beq.n	801092e <PixelType::GetMap(char const*)+0x3e>
 8010936:	4565      	cmp	r5, ip
 8010938:	d1e1      	bne.n	80108fe <PixelType::GetMap(char const*)+0xe>
 801093a:	e7f8      	b.n	801092e <PixelType::GetMap(char const*)+0x3e>
 801093c:	0801b278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, sp, pc}

08010940 <PixelType::GetMap(pixel::Map)>:
 8010940:	2805      	cmp	r0, #5
 8010942:	bfda      	itte	le
 8010944:	4b02      	ldrle	r3, [pc, #8]	; (8010950 <PixelType::GetMap(pixel::Map)+0x10>)
 8010946:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 801094a:	4802      	ldrgt	r0, [pc, #8]	; (8010954 <PixelType::GetMap(pixel::Map)+0x14>)
 801094c:	4770      	bx	lr
 801094e:	bf00      	nop
 8010950:	0801b278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, sp, pc}
 8010954:	0801b264 	stmdaeq	r1, {r2, r5, r6, r9, ip, sp, pc}

08010958 <PixelType::GetMap(pixel::Type)>:
 8010958:	3801      	subs	r0, #1
 801095a:	2809      	cmp	r0, #9
 801095c:	bf9a      	itte	ls
 801095e:	4b02      	ldrls	r3, [pc, #8]	; (8010968 <PixelType::GetMap(pixel::Type)+0x10>)
 8010960:	5618      	ldrsbls	r0, [r3, r0]
 8010962:	2002      	movhi	r0, #2
 8010964:	4770      	bx	lr
 8010966:	bf00      	nop
 8010968:	0801b26e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, ip, sp, pc}

0801096c <PixelType::ConvertTxH(unsigned char)>:
 801096c:	28f0      	cmp	r0, #240	; 0xf0
 801096e:	d017      	beq.n	80109a0 <PixelType::ConvertTxH(unsigned char)+0x34>
 8010970:	d80c      	bhi.n	801098c <PixelType::ConvertTxH(unsigned char)+0x20>
 8010972:	28c0      	cmp	r0, #192	; 0xc0
 8010974:	d017      	beq.n	80109a6 <PixelType::ConvertTxH(unsigned char)+0x3a>
 8010976:	28e0      	cmp	r0, #224	; 0xe0
 8010978:	d018      	beq.n	80109ac <PixelType::ConvertTxH(unsigned char)+0x40>
 801097a:	ed9f 0a11 	vldr	s0, [pc, #68]	; 80109c0 <PixelType::ConvertTxH(unsigned char)+0x54>
 801097e:	2880      	cmp	r0, #128	; 0x80
 8010980:	eef4 7a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
 8010984:	bf08      	it	eq
 8010986:	eeb0 0a67 	vmoveq.f32	s0, s15
 801098a:	4770      	bx	lr
 801098c:	28fc      	cmp	r0, #252	; 0xfc
 801098e:	d010      	beq.n	80109b2 <PixelType::ConvertTxH(unsigned char)+0x46>
 8010990:	28fe      	cmp	r0, #254	; 0xfe
 8010992:	d011      	beq.n	80109b8 <PixelType::ConvertTxH(unsigned char)+0x4c>
 8010994:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 80109c0 <PixelType::ConvertTxH(unsigned char)+0x54>
 8010998:	28f8      	cmp	r0, #248	; 0xf8
 801099a:	eef6 7a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
 801099e:	e7f1      	b.n	8010984 <PixelType::ConvertTxH(unsigned char)+0x18>
 80109a0:	eeb6 0a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
 80109a4:	4770      	bx	lr
 80109a6:	eeb5 0a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
 80109aa:	4770      	bx	lr
 80109ac:	eeb5 0a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
 80109b0:	4770      	bx	lr
 80109b2:	eeb6 0a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
 80109b6:	4770      	bx	lr
 80109b8:	ed9f 0a02 	vldr	s0, [pc, #8]	; 80109c4 <PixelType::ConvertTxH(unsigned char)+0x58>
 80109bc:	4770      	bx	lr
 80109be:	bf00      	nop
 80109c0:	00000000 	andeq	r0, r0, r0
 80109c4:	3f8c0000 	svccc	0x008c0000

080109c8 <PixelType::ConvertTxH(float)>:
 80109c8:	eddf 7a24 	vldr	s15, [pc, #144]	; 8010a5c <PixelType::ConvertTxH(float)+0x94>
 80109cc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80109d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109d4:	d433      	bmi.n	8010a3e <PixelType::ConvertTxH(float)+0x76>
 80109d6:	eef4 7a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
 80109da:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80109de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109e2:	d42e      	bmi.n	8010a42 <PixelType::ConvertTxH(float)+0x7a>
 80109e4:	eef5 7a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
 80109e8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80109ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109f0:	d429      	bmi.n	8010a46 <PixelType::ConvertTxH(float)+0x7e>
 80109f2:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8010a60 <PixelType::ConvertTxH(float)+0x98>
 80109f6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80109fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109fe:	d424      	bmi.n	8010a4a <PixelType::ConvertTxH(float)+0x82>
 8010a00:	eddf 7a18 	vldr	s15, [pc, #96]	; 8010a64 <PixelType::ConvertTxH(float)+0x9c>
 8010a04:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a0c:	d41f      	bmi.n	8010a4e <PixelType::ConvertTxH(float)+0x86>
 8010a0e:	eddf 7a16 	vldr	s15, [pc, #88]	; 8010a68 <PixelType::ConvertTxH(float)+0xa0>
 8010a12:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a1a:	d41a      	bmi.n	8010a52 <PixelType::ConvertTxH(float)+0x8a>
 8010a1c:	eddf 7a13 	vldr	s15, [pc, #76]	; 8010a6c <PixelType::ConvertTxH(float)+0xa4>
 8010a20:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a28:	d415      	bmi.n	8010a56 <PixelType::ConvertTxH(float)+0x8e>
 8010a2a:	eddf 7a11 	vldr	s15, [pc, #68]	; 8010a70 <PixelType::ConvertTxH(float)+0xa8>
 8010a2e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010a32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a36:	bf4c      	ite	mi
 8010a38:	20fe      	movmi	r0, #254	; 0xfe
 8010a3a:	2000      	movpl	r0, #0
 8010a3c:	4770      	bx	lr
 8010a3e:	2000      	movs	r0, #0
 8010a40:	4770      	bx	lr
 8010a42:	2080      	movs	r0, #128	; 0x80
 8010a44:	4770      	bx	lr
 8010a46:	20c0      	movs	r0, #192	; 0xc0
 8010a48:	4770      	bx	lr
 8010a4a:	20e0      	movs	r0, #224	; 0xe0
 8010a4c:	4770      	bx	lr
 8010a4e:	20f0      	movs	r0, #240	; 0xf0
 8010a50:	4770      	bx	lr
 8010a52:	20f8      	movs	r0, #248	; 0xf8
 8010a54:	4770      	bx	lr
 8010a56:	20fc      	movs	r0, #252	; 0xfc
 8010a58:	4770      	bx	lr
 8010a5a:	bf00      	nop
 8010a5c:	3da00000 	stccc	0, cr0, [r0]
 8010a60:	3f0c0000 	svccc	0x000c0000
 8010a64:	3f340000 	svccc	0x00340000
 8010a68:	3f5c0000 	svccc	0x005c0000
 8010a6c:	3f820000 	svccc	0x00820000
 8010a70:	3f960000 	svccc	0x00960000

08010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 8010a74:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010a76:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8010a7a:	f3c2 2607 	ubfx	r6, r2, #8, #8
 8010a7e:	b2d4      	uxtb	r4, r2
 8010a80:	4a10      	ldr	r2, [pc, #64]	; (8010ac4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 8010a82:	4605      	mov	r5, r0
 8010a84:	6810      	ldr	r0, [r2, #0]
 8010a86:	6802      	ldr	r2, [r0, #0]
 8010a88:	2a07      	cmp	r2, #7
 8010a8a:	d007      	beq.n	8010a9c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 8010a8c:	460a      	mov	r2, r1
 8010a8e:	e9cd 6400 	strd	r6, r4, [sp]
 8010a92:	4629      	mov	r1, r5
 8010a94:	f000 ff80 	bl	8011998 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8010a98:	b004      	add	sp, #16
 8010a9a:	bd70      	pop	{r4, r5, r6, pc}
 8010a9c:	42b3      	cmp	r3, r6
 8010a9e:	f04f 0200 	mov.w	r2, #0
 8010aa2:	d10a      	bne.n	8010aba <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 8010aa4:	42a3      	cmp	r3, r4
 8010aa6:	d108      	bne.n	8010aba <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 8010aa8:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8010aac:	9200      	str	r2, [sp, #0]
 8010aae:	4613      	mov	r3, r2
 8010ab0:	460a      	mov	r2, r1
 8010ab2:	4629      	mov	r1, r5
 8010ab4:	f000 fff2 	bl	8011a9c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010ab8:	e7ee      	b.n	8010a98 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 8010aba:	e9cd 4201 	strd	r4, r2, [sp, #4]
 8010abe:	9600      	str	r6, [sp, #0]
 8010ac0:	e7f6      	b.n	8010ab0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 8010ac2:	bf00      	nop
 8010ac4:	2000127c 	andcs	r1, r0, ip, ror r2

08010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 8010ac8:	b570      	push	{r4, r5, r6, lr}
 8010aca:	4d07      	ldr	r5, [pc, #28]	; (8010ae8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 8010acc:	4606      	mov	r6, r0
 8010ace:	2400      	movs	r4, #0
 8010ad0:	682b      	ldr	r3, [r5, #0]
 8010ad2:	429c      	cmp	r4, r3
 8010ad4:	d300      	bcc.n	8010ad8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 8010ad6:	bd70      	pop	{r4, r5, r6, pc}
 8010ad8:	4621      	mov	r1, r4
 8010ada:	2200      	movs	r2, #0
 8010adc:	4630      	mov	r0, r6
 8010ade:	f7ff ffc9 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010ae2:	3401      	adds	r4, #1
 8010ae4:	e7f4      	b.n	8010ad0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 8010ae6:	bf00      	nop
 8010ae8:	20001278 	andcs	r1, r0, r8, ror r2

08010aec <PixelPatterns::PixelPatterns(unsigned int)>:
 8010aec:	4b0c      	ldr	r3, [pc, #48]	; (8010b20 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 8010aee:	4a0d      	ldr	r2, [pc, #52]	; (8010b24 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 8010af0:	681b      	ldr	r3, [r3, #0]
 8010af2:	b510      	push	{r4, lr}
 8010af4:	2910      	cmp	r1, #16
 8010af6:	6013      	str	r3, [r2, #0]
 8010af8:	4a0b      	ldr	r2, [pc, #44]	; (8010b28 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 8010afa:	bf28      	it	cs
 8010afc:	2110      	movcs	r1, #16
 8010afe:	6011      	str	r1, [r2, #0]
 8010b00:	685a      	ldr	r2, [r3, #4]
 8010b02:	4b0a      	ldr	r3, [pc, #40]	; (8010b2c <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 8010b04:	601a      	str	r2, [r3, #0]
 8010b06:	4b0a      	ldr	r3, [pc, #40]	; (8010b30 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 8010b08:	681c      	ldr	r4, [r3, #0]
 8010b0a:	4b0a      	ldr	r3, [pc, #40]	; (8010b34 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 8010b0c:	2210      	movs	r2, #16
 8010b0e:	2100      	movs	r1, #0
 8010b10:	3a01      	subs	r2, #1
 8010b12:	61d9      	str	r1, [r3, #28]
 8010b14:	601c      	str	r4, [r3, #0]
 8010b16:	6199      	str	r1, [r3, #24]
 8010b18:	f103 0320 	add.w	r3, r3, #32
 8010b1c:	d1f8      	bne.n	8010b10 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 8010b1e:	bd10      	pop	{r4, pc}
 8010b20:	20001288 	andcs	r1, r0, r8, lsl #5
 8010b24:	2000127c 	andcs	r1, r0, ip, ror r2
 8010b28:	20001270 	andcs	r1, r0, r0, ror r2
 8010b2c:	20001278 	andcs	r1, r0, r8, ror r2
 8010b30:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8010b34:	20001070 	andcs	r1, r0, r0, ror r0

08010b38 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 8010b38:	2805      	cmp	r0, #5
 8010b3a:	bfdd      	ittte	le
 8010b3c:	4b02      	ldrle	r3, [pc, #8]	; (8010b48 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 8010b3e:	220e      	movle	r2, #14
 8010b40:	fb02 3000 	mlale	r0, r2, r0, r3
 8010b44:	4801      	ldrgt	r0, [pc, #4]	; (8010b4c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 8010b46:	4770      	bx	lr
 8010b48:	0801b300 	stmdaeq	r1, {r8, r9, ip, sp, pc}
 8010b4c:	0801b25c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, sp, pc}

08010b50 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010b50:	b5e0      	push	{r5, r6, r7, lr}
 8010b52:	4608      	mov	r0, r1
 8010b54:	460d      	mov	r5, r1
 8010b56:	4617      	mov	r7, r2
 8010b58:	461e      	mov	r6, r3
 8010b5a:	f7ff ffb5 	bl	8010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010b5e:	4906      	ldr	r1, [pc, #24]	; (8010b78 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 8010b60:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010b64:	2301      	movs	r3, #1
 8010b66:	61cb      	str	r3, [r1, #28]
 8010b68:	22ff      	movs	r2, #255	; 0xff
 8010b6a:	2300      	movs	r3, #0
 8010b6c:	e9c1 2304 	strd	r2, r3, [r1, #16]
 8010b70:	604f      	str	r7, [r1, #4]
 8010b72:	618e      	str	r6, [r1, #24]
 8010b74:	bde0      	pop	{r5, r6, r7, pc}
 8010b76:	bf00      	nop
 8010b78:	20001070 	andcs	r1, r0, r0, ror r0

08010b7c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010b7c:	b5e0      	push	{r5, r6, r7, lr}
 8010b7e:	4608      	mov	r0, r1
 8010b80:	460d      	mov	r5, r1
 8010b82:	461e      	mov	r6, r3
 8010b84:	4617      	mov	r7, r2
 8010b86:	f7ff ff9f 	bl	8010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010b8a:	4908      	ldr	r1, [pc, #32]	; (8010bac <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010b8c:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010b90:	2302      	movs	r3, #2
 8010b92:	61cb      	str	r3, [r1, #28]
 8010b94:	9b04      	ldr	r3, [sp, #16]
 8010b96:	604b      	str	r3, [r1, #4]
 8010b98:	4b05      	ldr	r3, [pc, #20]	; (8010bb0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 8010b9a:	681b      	ldr	r3, [r3, #0]
 8010b9c:	610b      	str	r3, [r1, #16]
 8010b9e:	2300      	movs	r3, #0
 8010ba0:	614b      	str	r3, [r1, #20]
 8010ba2:	9b05      	ldr	r3, [sp, #20]
 8010ba4:	618b      	str	r3, [r1, #24]
 8010ba6:	e9c1 7602 	strd	r7, r6, [r1, #8]
 8010baa:	bde0      	pop	{r5, r6, r7, pc}
 8010bac:	20001070 	andcs	r1, r0, r0, ror r0
 8010bb0:	20001278 	andcs	r1, r0, r8, ror r2

08010bb4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010bb4:	b5e0      	push	{r5, r6, r7, lr}
 8010bb6:	4608      	mov	r0, r1
 8010bb8:	460d      	mov	r5, r1
 8010bba:	461f      	mov	r7, r3
 8010bbc:	4616      	mov	r6, r2
 8010bbe:	f7ff ff83 	bl	8010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010bc2:	4907      	ldr	r1, [pc, #28]	; (8010be0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 8010bc4:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010bc8:	2303      	movs	r3, #3
 8010bca:	61cb      	str	r3, [r1, #28]
 8010bcc:	4b05      	ldr	r3, [pc, #20]	; (8010be4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010bce:	604f      	str	r7, [r1, #4]
 8010bd0:	681b      	ldr	r3, [r3, #0]
 8010bd2:	610b      	str	r3, [r1, #16]
 8010bd4:	2300      	movs	r3, #0
 8010bd6:	614b      	str	r3, [r1, #20]
 8010bd8:	9b04      	ldr	r3, [sp, #16]
 8010bda:	608e      	str	r6, [r1, #8]
 8010bdc:	618b      	str	r3, [r1, #24]
 8010bde:	bde0      	pop	{r5, r6, r7, pc}
 8010be0:	20001070 	andcs	r1, r0, r0, ror r0
 8010be4:	20001278 	andcs	r1, r0, r8, ror r2

08010be8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 8010be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010bea:	4608      	mov	r0, r1
 8010bec:	460d      	mov	r5, r1
 8010bee:	461f      	mov	r7, r3
 8010bf0:	4616      	mov	r6, r2
 8010bf2:	4c14      	ldr	r4, [pc, #80]	; (8010c44 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 8010bf4:	f7ff ff68 	bl	8010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010bf8:	4913      	ldr	r1, [pc, #76]	; (8010c48 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 8010bfa:	6820      	ldr	r0, [r4, #0]
 8010bfc:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010c00:	2304      	movs	r3, #4
 8010c02:	61cb      	str	r3, [r1, #28]
 8010c04:	1e43      	subs	r3, r0, #1
 8010c06:	005b      	lsls	r3, r3, #1
 8010c08:	b29b      	uxth	r3, r3
 8010c0a:	4d10      	ldr	r5, [pc, #64]	; (8010c4c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 8010c0c:	610b      	str	r3, [r1, #16]
 8010c0e:	2300      	movs	r3, #0
 8010c10:	614b      	str	r3, [r1, #20]
 8010c12:	682b      	ldr	r3, [r5, #0]
 8010c14:	604f      	str	r7, [r1, #4]
 8010c16:	608e      	str	r6, [r1, #8]
 8010c18:	b97b      	cbnz	r3, 8010c3a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 8010c1a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8010c1e:	4298      	cmp	r0, r3
 8010c20:	bf34      	ite	cc
 8010c22:	0080      	lslcc	r0, r0, #2
 8010c24:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 8010c28:	f005 f992 	bl	8015f50 <operator new[](unsigned int)>
 8010c2c:	6823      	ldr	r3, [r4, #0]
 8010c2e:	6028      	str	r0, [r5, #0]
 8010c30:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8010c34:	2200      	movs	r2, #0
 8010c36:	4298      	cmp	r0, r3
 8010c38:	d100      	bne.n	8010c3c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 8010c3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c3c:	f840 2b04 	str.w	r2, [r0], #4
 8010c40:	e7f9      	b.n	8010c36 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 8010c42:	bf00      	nop
 8010c44:	20001278 	andcs	r1, r0, r8, ror r2
 8010c48:	20001070 	andcs	r1, r0, r0, ror r0
 8010c4c:	20001274 	andcs	r1, r0, r4, ror r2

08010c50 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 8010c50:	b5e0      	push	{r5, r6, r7, lr}
 8010c52:	4608      	mov	r0, r1
 8010c54:	460d      	mov	r5, r1
 8010c56:	461e      	mov	r6, r3
 8010c58:	4617      	mov	r7, r2
 8010c5a:	f7ff ff35 	bl	8010ac8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 8010c5e:	4908      	ldr	r1, [pc, #32]	; (8010c80 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 8010c60:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 8010c64:	2305      	movs	r3, #5
 8010c66:	61cb      	str	r3, [r1, #28]
 8010c68:	9b05      	ldr	r3, [sp, #20]
 8010c6a:	604b      	str	r3, [r1, #4]
 8010c6c:	9b04      	ldr	r3, [sp, #16]
 8010c6e:	610b      	str	r3, [r1, #16]
 8010c70:	2300      	movs	r3, #0
 8010c72:	614b      	str	r3, [r1, #20]
 8010c74:	9b06      	ldr	r3, [sp, #24]
 8010c76:	618b      	str	r3, [r1, #24]
 8010c78:	e9c1 7602 	strd	r7, r6, [r1, #8]
 8010c7c:	bde0      	pop	{r5, r6, r7, pc}
 8010c7e:	bf00      	nop
 8010c80:	20001070 	andcs	r1, r0, r0, ror r0

08010c84 <PixelPatterns::Wheel(unsigned char)>:
 8010c84:	43cb      	mvns	r3, r1
 8010c86:	b2db      	uxtb	r3, r3
 8010c88:	2b54      	cmp	r3, #84	; 0x54
 8010c8a:	d809      	bhi.n	8010ca0 <PixelPatterns::Wheel(unsigned char)+0x1c>
 8010c8c:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 8010c90:	b2db      	uxtb	r3, r3
 8010c92:	1e5a      	subs	r2, r3, #1
 8010c94:	4258      	negs	r0, r3
 8010c96:	b2d2      	uxtb	r2, r2
 8010c98:	b2c0      	uxtb	r0, r0
 8010c9a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8010c9e:	4770      	bx	lr
 8010ca0:	2ba9      	cmp	r3, #169	; 0xa9
 8010ca2:	d809      	bhi.n	8010cb8 <PixelPatterns::Wheel(unsigned char)+0x34>
 8010ca4:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 8010ca8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8010cac:	b2c9      	uxtb	r1, r1
 8010cae:	43c8      	mvns	r0, r1
 8010cb0:	b2c0      	uxtb	r0, r0
 8010cb2:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8010cb6:	4770      	bx	lr
 8010cb8:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 8010cbc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8010cc0:	b2c9      	uxtb	r1, r1
 8010cc2:	0208      	lsls	r0, r1, #8
 8010cc4:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 8010cc8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8010ccc:	4770      	bx	lr
	...

08010cd0 <PixelPatterns::Increment(unsigned int)>:
 8010cd0:	4a0d      	ldr	r2, [pc, #52]	; (8010d08 <PixelPatterns::Increment(unsigned int)+0x38>)
 8010cd2:	b510      	push	{r4, lr}
 8010cd4:	014c      	lsls	r4, r1, #5
 8010cd6:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 8010cda:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 8010cde:	b930      	cbnz	r0, 8010cee <PixelPatterns::Increment(unsigned int)+0x1e>
 8010ce0:	690a      	ldr	r2, [r1, #16]
 8010ce2:	3301      	adds	r3, #1
 8010ce4:	4293      	cmp	r3, r2
 8010ce6:	bf18      	it	ne
 8010ce8:	4618      	movne	r0, r3
 8010cea:	6148      	str	r0, [r1, #20]
 8010cec:	bd10      	pop	{r4, pc}
 8010cee:	b92b      	cbnz	r3, 8010cfc <PixelPatterns::Increment(unsigned int)+0x2c>
 8010cf0:	4422      	add	r2, r4
 8010cf2:	6913      	ldr	r3, [r2, #16]
 8010cf4:	3b01      	subs	r3, #1
 8010cf6:	b29b      	uxth	r3, r3
 8010cf8:	6153      	str	r3, [r2, #20]
 8010cfa:	e7f7      	b.n	8010cec <PixelPatterns::Increment(unsigned int)+0x1c>
 8010cfc:	3b01      	subs	r3, #1
 8010cfe:	614b      	str	r3, [r1, #20]
 8010d00:	2b00      	cmp	r3, #0
 8010d02:	d1f3      	bne.n	8010cec <PixelPatterns::Increment(unsigned int)+0x1c>
 8010d04:	e7f4      	b.n	8010cf0 <PixelPatterns::Increment(unsigned int)+0x20>
 8010d06:	bf00      	nop
 8010d08:	20001070 	andcs	r1, r0, r0, ror r0

08010d0c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 8010d0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010d10:	4b12      	ldr	r3, [pc, #72]	; (8010d5c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 8010d12:	f8df 804c 	ldr.w	r8, [pc, #76]	; 8010d60 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 8010d16:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010d1a:	4605      	mov	r5, r0
 8010d1c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 8010d20:	460c      	mov	r4, r1
 8010d22:	2700      	movs	r7, #0
 8010d24:	f8d8 3000 	ldr.w	r3, [r8]
 8010d28:	b2be      	uxth	r6, r7
 8010d2a:	42b3      	cmp	r3, r6
 8010d2c:	f107 0701 	add.w	r7, r7, #1
 8010d30:	d805      	bhi.n	8010d3e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 8010d32:	4621      	mov	r1, r4
 8010d34:	4628      	mov	r0, r5
 8010d36:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010d3a:	f7ff bfc9 	b.w	8010cd0 <PixelPatterns::Increment(unsigned int)>
 8010d3e:	0231      	lsls	r1, r6, #8
 8010d40:	fbb1 f1f3 	udiv	r1, r1, r3
 8010d44:	4449      	add	r1, r9
 8010d46:	b2c9      	uxtb	r1, r1
 8010d48:	4628      	mov	r0, r5
 8010d4a:	f7ff ff9b 	bl	8010c84 <PixelPatterns::Wheel(unsigned char)>
 8010d4e:	4631      	mov	r1, r6
 8010d50:	4602      	mov	r2, r0
 8010d52:	4620      	mov	r0, r4
 8010d54:	f7ff fe8e 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010d58:	e7e4      	b.n	8010d24 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 8010d5a:	bf00      	nop
 8010d5c:	20001070 	andcs	r1, r0, r0, ror r0
 8010d60:	20001278 	andcs	r1, r0, r8, ror r2

08010d64 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 8010d64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d68:	4b13      	ldr	r3, [pc, #76]	; (8010db8 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 8010d6a:	4e14      	ldr	r6, [pc, #80]	; (8010dbc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 8010d6c:	f8df a050 	ldr.w	sl, [pc, #80]	; 8010dc0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 8010d70:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010d74:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 8010d78:	f8d3 9014 	ldr.w	r9, [r3, #20]
 8010d7c:	4605      	mov	r5, r0
 8010d7e:	460c      	mov	r4, r1
 8010d80:	f04f 0b00 	mov.w	fp, #0
 8010d84:	6833      	ldr	r3, [r6, #0]
 8010d86:	fa1f f18b 	uxth.w	r1, fp
 8010d8a:	428b      	cmp	r3, r1
 8010d8c:	d805      	bhi.n	8010d9a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 8010d8e:	4621      	mov	r1, r4
 8010d90:	4628      	mov	r0, r5
 8010d92:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d96:	f7ff bf9b 	b.w	8010cd0 <PixelPatterns::Increment(unsigned int)>
 8010d9a:	eb09 0301 	add.w	r3, r9, r1
 8010d9e:	fb0a f303 	mul.w	r3, sl, r3
 8010da2:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 8010da6:	bf94      	ite	ls
 8010da8:	463a      	movls	r2, r7
 8010daa:	4642      	movhi	r2, r8
 8010dac:	4620      	mov	r0, r4
 8010dae:	f7ff fe61 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010db2:	f10b 0b01 	add.w	fp, fp, #1
 8010db6:	e7e5      	b.n	8010d84 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 8010db8:	20001070 	andcs	r1, r0, r0, ror r0
 8010dbc:	20001278 	andcs	r1, r0, r8, ror r2
 8010dc0:	aaaaaaab 	bge	6abb874 <__stack_size+0x6ab7874>

08010dc4 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 8010dc4:	b538      	push	{r3, r4, r5, lr}
 8010dc6:	4b08      	ldr	r3, [pc, #32]	; (8010de8 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 8010dc8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010dcc:	460c      	mov	r4, r1
 8010dce:	4605      	mov	r5, r0
 8010dd0:	6959      	ldr	r1, [r3, #20]
 8010dd2:	689a      	ldr	r2, [r3, #8]
 8010dd4:	4620      	mov	r0, r4
 8010dd6:	f7ff fe4d 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010dda:	4621      	mov	r1, r4
 8010ddc:	4628      	mov	r0, r5
 8010dde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010de2:	f7ff bf75 	b.w	8010cd0 <PixelPatterns::Increment(unsigned int)>
 8010de6:	bf00      	nop
 8010de8:	20001070 	andcs	r1, r0, r0, ror r0

08010dec <PixelPatterns::ScannerUpdate(unsigned int)>:
 8010dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010df0:	4b29      	ldr	r3, [pc, #164]	; (8010e98 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>)
 8010df2:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8010e9c <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 8010df6:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 8010ea0 <PixelPatterns::ScannerUpdate(unsigned int)+0xb4>
 8010dfa:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8010dfe:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 8010e02:	b085      	sub	sp, #20
 8010e04:	689d      	ldr	r5, [r3, #8]
 8010e06:	00b3      	lsls	r3, r6, #2
 8010e08:	4680      	mov	r8, r0
 8010e0a:	9301      	str	r3, [sp, #4]
 8010e0c:	4608      	mov	r0, r1
 8010e0e:	f04f 0900 	mov.w	r9, #0
 8010e12:	1bbf      	subs	r7, r7, r6
 8010e14:	f8da 2000 	ldr.w	r2, [sl]
 8010e18:	fa1f f489 	uxth.w	r4, r9
 8010e1c:	42a2      	cmp	r2, r4
 8010e1e:	d806      	bhi.n	8010e2e <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 8010e20:	4601      	mov	r1, r0
 8010e22:	4640      	mov	r0, r8
 8010e24:	b005      	add	sp, #20
 8010e26:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e2a:	f7ff bf51 	b.w	8010cd0 <PixelPatterns::Increment(unsigned int)>
 8010e2e:	42a6      	cmp	r6, r4
 8010e30:	d10c      	bne.n	8010e4c <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 8010e32:	462a      	mov	r2, r5
 8010e34:	4631      	mov	r1, r6
 8010e36:	9002      	str	r0, [sp, #8]
 8010e38:	f7ff fe1c 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010e3c:	f8db 2000 	ldr.w	r2, [fp]
 8010e40:	9b01      	ldr	r3, [sp, #4]
 8010e42:	50d5      	str	r5, [r2, r3]
 8010e44:	9802      	ldr	r0, [sp, #8]
 8010e46:	f109 0901 	add.w	r9, r9, #1
 8010e4a:	e7e3      	b.n	8010e14 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 8010e4c:	42a7      	cmp	r7, r4
 8010e4e:	d109      	bne.n	8010e64 <PixelPatterns::ScannerUpdate(unsigned int)+0x78>
 8010e50:	462a      	mov	r2, r5
 8010e52:	4639      	mov	r1, r7
 8010e54:	9002      	str	r0, [sp, #8]
 8010e56:	f7ff fe0d 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010e5a:	f8db 2000 	ldr.w	r2, [fp]
 8010e5e:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 8010e62:	e7ef      	b.n	8010e44 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 8010e64:	f8db 2000 	ldr.w	r2, [fp]
 8010e68:	9002      	str	r0, [sp, #8]
 8010e6a:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 8010e6e:	f3c1 2246 	ubfx	r2, r1, #9, #7
 8010e72:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 8010e76:	0212      	lsls	r2, r2, #8
 8010e78:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8010e7c:	f3c1 0146 	ubfx	r1, r1, #1, #7
 8010e80:	430a      	orrs	r2, r1
 8010e82:	4621      	mov	r1, r4
 8010e84:	9203      	str	r2, [sp, #12]
 8010e86:	f7ff fdf5 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010e8a:	f8db 1000 	ldr.w	r1, [fp]
 8010e8e:	9a03      	ldr	r2, [sp, #12]
 8010e90:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 8010e94:	e7d6      	b.n	8010e44 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 8010e96:	bf00      	nop
 8010e98:	20001070 	andcs	r1, r0, r0, ror r0
 8010e9c:	20001278 	andcs	r1, r0, r8, ror r2
 8010ea0:	20001274 	andcs	r1, r0, r4, ror r2

08010ea4 <PixelPatterns::FadeUpdate(unsigned int)>:
 8010ea4:	4a20      	ldr	r2, [pc, #128]	; (8010f28 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 8010ea6:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8010eaa:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 8010eae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010eb2:	460e      	mov	r6, r1
 8010eb4:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 8010eb8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010ebc:	f3cc 2407 	ubfx	r4, ip, #8, #8
 8010ec0:	437a      	muls	r2, r7
 8010ec2:	4605      	mov	r5, r0
 8010ec4:	1bc8      	subs	r0, r1, r7
 8010ec6:	fb00 2204 	mla	r2, r0, r4, r2
 8010eca:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8010ece:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 8010ed2:	437c      	muls	r4, r7
 8010ed4:	fb00 440e 	mla	r4, r0, lr, r4
 8010ed8:	b2db      	uxtb	r3, r3
 8010eda:	fbb2 f2f1 	udiv	r2, r2, r1
 8010ede:	fbb4 f4f1 	udiv	r4, r4, r1
 8010ee2:	0212      	lsls	r2, r2, #8
 8010ee4:	0424      	lsls	r4, r4, #16
 8010ee6:	437b      	muls	r3, r7
 8010ee8:	b292      	uxth	r2, r2
 8010eea:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8010eee:	fa5f fc8c 	uxtb.w	ip, ip
 8010ef2:	4314      	orrs	r4, r2
 8010ef4:	fb00 330c 	mla	r3, r0, ip, r3
 8010ef8:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8010f2c <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 8010efc:	fbb3 f3f1 	udiv	r3, r3, r1
 8010f00:	b2db      	uxtb	r3, r3
 8010f02:	431c      	orrs	r4, r3
 8010f04:	2700      	movs	r7, #0
 8010f06:	f8d8 3000 	ldr.w	r3, [r8]
 8010f0a:	429f      	cmp	r7, r3
 8010f0c:	d305      	bcc.n	8010f1a <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 8010f0e:	4631      	mov	r1, r6
 8010f10:	4628      	mov	r0, r5
 8010f12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010f16:	f7ff bedb 	b.w	8010cd0 <PixelPatterns::Increment(unsigned int)>
 8010f1a:	4639      	mov	r1, r7
 8010f1c:	4622      	mov	r2, r4
 8010f1e:	4630      	mov	r0, r6
 8010f20:	f7ff fda8 	bl	8010a74 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 8010f24:	3701      	adds	r7, #1
 8010f26:	e7ee      	b.n	8010f06 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 8010f28:	20001070 	andcs	r1, r0, r0, ror r0
 8010f2c:	20001278 	andcs	r1, r0, r8, ror r2

08010f30 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 8010f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010f32:	4b12      	ldr	r3, [pc, #72]	; (8010f7c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 8010f34:	014e      	lsls	r6, r1, #5
 8010f36:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 8010f3a:	599c      	ldr	r4, [r3, r6]
 8010f3c:	686f      	ldr	r7, [r5, #4]
 8010f3e:	1b14      	subs	r4, r2, r4
 8010f40:	42bc      	cmp	r4, r7
 8010f42:	d319      	bcc.n	8010f78 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010f44:	519a      	str	r2, [r3, r6]
 8010f46:	69eb      	ldr	r3, [r5, #28]
 8010f48:	3b01      	subs	r3, #1
 8010f4a:	2b04      	cmp	r3, #4
 8010f4c:	d814      	bhi.n	8010f78 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010f4e:	e8df f003 	tbb	[pc, r3]
 8010f52:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 8010f56:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 8010f5a:	fed8 2001 	cdp2	0, 13, cr2, cr8, cr1, {0}
 8010f5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010f60:	f7ff ff00 	bl	8010d64 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 8010f64:	e7fa      	b.n	8010f5c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010f66:	f7ff ff2d 	bl	8010dc4 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 8010f6a:	e7f7      	b.n	8010f5c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010f6c:	f7ff ff3e 	bl	8010dec <PixelPatterns::ScannerUpdate(unsigned int)>
 8010f70:	e7f4      	b.n	8010f5c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010f72:	f7ff ff97 	bl	8010ea4 <PixelPatterns::FadeUpdate(unsigned int)>
 8010f76:	e7f1      	b.n	8010f5c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010f78:	2000      	movs	r0, #0
 8010f7a:	e7f0      	b.n	8010f5e <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 8010f7c:	20001070 	andcs	r1, r0, r0, ror r0

08010f80 <PixelPatterns::Run()>:
 8010f80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010f84:	4f11      	ldr	r7, [pc, #68]	; (8010fcc <PixelPatterns::Run()+0x4c>)
 8010f86:	4606      	mov	r6, r0
 8010f88:	6838      	ldr	r0, [r7, #0]
 8010f8a:	f000 fc85 	bl	8011898 <WS28xxMulti::IsUpdating()>
 8010f8e:	4604      	mov	r4, r0
 8010f90:	b9c8      	cbnz	r0, 8010fc6 <PixelPatterns::Run()+0x46>
 8010f92:	4b0f      	ldr	r3, [pc, #60]	; (8010fd0 <PixelPatterns::Run()+0x50>)
 8010f94:	f8df 803c 	ldr.w	r8, [pc, #60]	; 8010fd4 <PixelPatterns::Run()+0x54>
 8010f98:	f8d3 9000 	ldr.w	r9, [r3]
 8010f9c:	4605      	mov	r5, r0
 8010f9e:	f8d8 3000 	ldr.w	r3, [r8]
 8010fa2:	b2e9      	uxtb	r1, r5
 8010fa4:	428b      	cmp	r3, r1
 8010fa6:	f105 0501 	add.w	r5, r5, #1
 8010faa:	d805      	bhi.n	8010fb8 <PixelPatterns::Run()+0x38>
 8010fac:	b15c      	cbz	r4, 8010fc6 <PixelPatterns::Run()+0x46>
 8010fae:	6838      	ldr	r0, [r7, #0]
 8010fb0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010fb4:	f000 bb0a 	b.w	80115cc <WS28xxMulti::Update()>
 8010fb8:	464a      	mov	r2, r9
 8010fba:	4630      	mov	r0, r6
 8010fbc:	f7ff ffb8 	bl	8010f30 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 8010fc0:	4320      	orrs	r0, r4
 8010fc2:	b2c4      	uxtb	r4, r0
 8010fc4:	e7eb      	b.n	8010f9e <PixelPatterns::Run()+0x1e>
 8010fc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010fca:	bf00      	nop
 8010fcc:	2000127c 	andcs	r1, r0, ip, ror r2
 8010fd0:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8010fd4:	20001270 	andcs	r1, r0, r0, ror r2

08010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 8010fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fda:	4c20      	ldr	r4, [pc, #128]	; (801105c <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 8010fdc:	f89d e014 	ldrb.w	lr, [sp, #20]
 8010fe0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010fe4:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 8010fe8:	4c1d      	ldr	r4, [pc, #116]	; (8011060 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x88>)
 8010fea:	b2c0      	uxtb	r0, r0
 8010fec:	440c      	add	r4, r1
 8010fee:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 8010ff2:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 8010ff6:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8010ffa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8010ffe:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8011002:	0089      	lsls	r1, r1, #2
 8011004:	2080      	movs	r0, #128	; 0x80
 8011006:	2601      	movs	r6, #1
 8011008:	ea12 0400 	ands.w	r4, r2, r0
 801100c:	bf0b      	itete	eq
 801100e:	f5ac 67c0 	subeq.w	r7, ip, #1536	; 0x600
 8011012:	f5ac 64c0 	subne.w	r4, ip, #1536	; 0x600
 8011016:	603c      	streq	r4, [r7, #0]
 8011018:	6026      	strne	r6, [r4, #0]
 801101a:	ea13 0400 	ands.w	r4, r3, r0
 801101e:	bf0b      	itete	eq
 8011020:	f5ac 6780 	subeq.w	r7, ip, #1024	; 0x400
 8011024:	f5ac 6480 	subne.w	r4, ip, #1024	; 0x400
 8011028:	603c      	streq	r4, [r7, #0]
 801102a:	6026      	strne	r6, [r4, #0]
 801102c:	ea1e 0400 	ands.w	r4, lr, r0
 8011030:	bf15      	itete	ne
 8011032:	f5ac 7400 	subne.w	r4, ip, #512	; 0x200
 8011036:	f5ac 7700 	subeq.w	r7, ip, #512	; 0x200
 801103a:	6026      	strne	r6, [r4, #0]
 801103c:	603c      	streq	r4, [r7, #0]
 801103e:	ea15 0400 	ands.w	r4, r5, r0
 8011042:	bf14      	ite	ne
 8011044:	f8cc 6000 	strne.w	r6, [ip]
 8011048:	f8cc 4000 	streq.w	r4, [ip]
 801104c:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 8011050:	4561      	cmp	r1, ip
 8011052:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8011056:	d1d7      	bne.n	8011008 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x30>
 8011058:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801105a:	bf00      	nop
 801105c:	2000128c 	andcs	r1, r0, ip, lsl #5
 8011060:	e1100030 	tst	r0, r0, lsr r0

08011064 <TIMER3_IRQHandler>:
 8011064:	f3bf 8f5f 	dmb	sy
 8011068:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801106c:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 8011070:	0791      	lsls	r1, r2, #30
 8011072:	d51e      	bpl.n	80110b2 <TIMER3_IRQHandler+0x4e>
 8011074:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 8011078:	f021 0101 	bic.w	r1, r1, #1
 801107c:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 8011080:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 8011084:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 8011088:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 801108c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 8011090:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 8011094:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 8011098:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 801109c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 80110a0:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80110a4:	4b07      	ldr	r3, [pc, #28]	; (80110c4 <TIMER3_IRQHandler+0x60>)
 80110a6:	2100      	movs	r1, #0
 80110a8:	7019      	strb	r1, [r3, #0]
 80110aa:	4b07      	ldr	r3, [pc, #28]	; (80110c8 <TIMER3_IRQHandler+0x64>)
 80110ac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80110b0:	6299      	str	r1, [r3, #40]	; 0x28
 80110b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80110b6:	43d2      	mvns	r2, r2
 80110b8:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 80110bc:	f3bf 8f5f 	dmb	sy
 80110c0:	4770      	bx	lr
 80110c2:	bf00      	nop
 80110c4:	20001284 	andcs	r1, r0, r4, lsl #5
 80110c8:	40021000 	andmi	r1, r2, r0

080110cc <WS28xxMulti::~WS28xxMulti()>:
 80110cc:	4b01      	ldr	r3, [pc, #4]	; (80110d4 <WS28xxMulti::~WS28xxMulti()+0x8>)
 80110ce:	2200      	movs	r2, #0
 80110d0:	601a      	str	r2, [r3, #0]
 80110d2:	4770      	bx	lr
 80110d4:	20001288 	andcs	r1, r0, r8, lsl #5

080110d8 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 80110d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80110dc:	4680      	mov	r8, r0
 80110de:	b08e      	sub	sp, #56	; 0x38
 80110e0:	4608      	mov	r0, r1
 80110e2:	4614      	mov	r4, r2
 80110e4:	f007 fbc0 	bl	8018868 <__popcountsi2>
 80110e8:	4607      	mov	r7, r0
 80110ea:	4620      	mov	r0, r4
 80110ec:	f007 fbbc 	bl	8018868 <__popcountsi2>
 80110f0:	4c70      	ldr	r4, [pc, #448]	; (80112b4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 80110f2:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 80112c8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 80110f6:	4606      	mov	r6, r0
 80110f8:	f241 0001 	movw	r0, #4097	; 0x1001
 80110fc:	f005 fbdc 	bl	80168b8 <rcu_periph_clock_enable>
 8011100:	4620      	mov	r0, r4
 8011102:	f005 fc89 	bl	8016a18 <timer_deinit>
 8011106:	2500      	movs	r5, #0
 8011108:	23f9      	movs	r3, #249	; 0xf9
 801110a:	a901      	add	r1, sp, #4
 801110c:	4620      	mov	r0, r4
 801110e:	9303      	str	r3, [sp, #12]
 8011110:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8011114:	f005 fd26 	bl	8016b64 <timer_init>
 8011118:	4620      	mov	r0, r4
 801111a:	2101      	movs	r1, #1
 801111c:	f005 fece 	bl	8016ebc <timer_master_slave_mode_config>
 8011120:	4620      	mov	r0, r4
 8011122:	2130      	movs	r1, #48	; 0x30
 8011124:	f005 feba 	bl	8016e9c <timer_master_output_trigger_source_select>
 8011128:	4629      	mov	r1, r5
 801112a:	4620      	mov	r0, r4
 801112c:	2210      	movs	r2, #16
 801112e:	f005 fe53 	bl	8016dd8 <timer_channel_output_mode_config>
 8011132:	4620      	mov	r0, r4
 8011134:	2210      	movs	r2, #16
 8011136:	2102      	movs	r1, #2
 8011138:	f005 fe4e 	bl	8016dd8 <timer_channel_output_mode_config>
 801113c:	4620      	mov	r0, r4
 801113e:	2210      	movs	r2, #16
 8011140:	2103      	movs	r1, #3
 8011142:	f005 fe49 	bl	8016dd8 <timer_channel_output_mode_config>
 8011146:	f04f 09fa 	mov.w	r9, #250	; 0xfa
 801114a:	4629      	mov	r1, r5
 801114c:	4620      	mov	r0, r4
 801114e:	2201      	movs	r2, #1
 8011150:	f005 fe68 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011154:	fb09 f207 	mul.w	r2, r9, r7
 8011158:	4620      	mov	r0, r4
 801115a:	08d2      	lsrs	r2, r2, #3
 801115c:	2102      	movs	r1, #2
 801115e:	f005 fe61 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011162:	fb09 f206 	mul.w	r2, r9, r6
 8011166:	08d2      	lsrs	r2, r2, #3
 8011168:	2103      	movs	r1, #3
 801116a:	4620      	mov	r0, r4
 801116c:	f005 fe5a 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011170:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8011174:	f241 0002 	movw	r0, #4098	; 0x1002
 8011178:	f005 fb9e 	bl	80168b8 <rcu_periph_clock_enable>
 801117c:	4620      	mov	r0, r4
 801117e:	f005 fc4b 	bl	8016a18 <timer_deinit>
 8011182:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011186:	a901      	add	r1, sp, #4
 8011188:	4620      	mov	r0, r4
 801118a:	9303      	str	r3, [sp, #12]
 801118c:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8011190:	f005 fce8 	bl	8016b64 <timer_init>
 8011194:	4620      	mov	r0, r4
 8011196:	2101      	movs	r1, #1
 8011198:	f005 fe90 	bl	8016ebc <timer_master_slave_mode_config>
 801119c:	4620      	mov	r0, r4
 801119e:	2107      	movs	r1, #7
 80111a0:	f005 fe84 	bl	8016eac <timer_slave_mode_select>
 80111a4:	4620      	mov	r0, r4
 80111a6:	2120      	movs	r1, #32
 80111a8:	f005 fe70 	bl	8016e8c <timer_input_trigger_source_select>
 80111ac:	4629      	mov	r1, r5
 80111ae:	4620      	mov	r0, r4
 80111b0:	2210      	movs	r2, #16
 80111b2:	f005 fe11 	bl	8016dd8 <timer_channel_output_mode_config>
 80111b6:	f8d8 201c 	ldr.w	r2, [r8, #28]
 80111ba:	4629      	mov	r1, r5
 80111bc:	3201      	adds	r2, #1
 80111be:	4620      	mov	r0, r4
 80111c0:	f005 fe30 	bl	8016e24 <timer_channel_output_pulse_value_config>
 80111c4:	2102      	movs	r1, #2
 80111c6:	4620      	mov	r0, r4
 80111c8:	f005 fd0f 	bl	8016bea <timer_interrupt_enable>
 80111cc:	4b3a      	ldr	r3, [pc, #232]	; (80112b8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 80111ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80111d2:	f504 3416 	add.w	r4, r4, #153600	; 0x25800
 80111d6:	f883 531e 	strb.w	r5, [r3, #798]	; 0x31e
 80111da:	f640 4015 	movw	r0, #3093	; 0xc15
 80111de:	601a      	str	r2, [r3, #0]
 80111e0:	f005 fb6a 	bl	80168b8 <rcu_periph_clock_enable>
 80111e4:	2104      	movs	r1, #4
 80111e6:	4620      	mov	r0, r4
 80111e8:	f005 fa0c 	bl	8016604 <dma_deinit>
 80111ec:	a805      	add	r0, sp, #20
 80111ee:	f005 fa34 	bl	801665a <dma_single_data_para_struct_init>
 80111f2:	4b32      	ldr	r3, [pc, #200]	; (80112bc <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 80111f4:	f8cd a01c 	str.w	sl, [sp, #28]
 80111f8:	2601      	movs	r6, #1
 80111fa:	f04f 0940 	mov.w	r9, #64	; 0x40
 80111fe:	f44f 6800 	mov.w	r8, #2048	; 0x800
 8011202:	f44f 3700 	mov.w	r7, #131072	; 0x20000
 8011206:	aa05      	add	r2, sp, #20
 8011208:	4620      	mov	r0, r4
 801120a:	2104      	movs	r1, #4
 801120c:	e9cd 3605 	strd	r3, r6, [sp, #20]
 8011210:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8011214:	9608      	str	r6, [sp, #32]
 8011216:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801121a:	970d      	str	r7, [sp, #52]	; 0x34
 801121c:	f005 fa29 	bl	8016672 <dma_single_data_mode_init>
 8011220:	4620      	mov	r0, r4
 8011222:	2104      	movs	r1, #4
 8011224:	f005 fa64 	bl	80166f0 <dma_circulation_disable>
 8011228:	2205      	movs	r2, #5
 801122a:	4620      	mov	r0, r4
 801122c:	2104      	movs	r1, #4
 801122e:	f005 fa67 	bl	8016700 <dma_channel_subperipheral_select>
 8011232:	2107      	movs	r1, #7
 8011234:	4620      	mov	r0, r4
 8011236:	f005 f9e5 	bl	8016604 <dma_deinit>
 801123a:	a805      	add	r0, sp, #20
 801123c:	f005 fa0d 	bl	801665a <dma_single_data_para_struct_init>
 8011240:	4b1f      	ldr	r3, [pc, #124]	; (80112c0 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 8011242:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8011246:	e9cd 3507 	strd	r3, r5, [sp, #28]
 801124a:	4d1e      	ldr	r5, [pc, #120]	; (80112c4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>)
 801124c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8011250:	aa05      	add	r2, sp, #20
 8011252:	4620      	mov	r0, r4
 8011254:	2107      	movs	r1, #7
 8011256:	e9cd 5605 	strd	r5, r6, [sp, #20]
 801125a:	970d      	str	r7, [sp, #52]	; 0x34
 801125c:	f005 fa09 	bl	8016672 <dma_single_data_mode_init>
 8011260:	4620      	mov	r0, r4
 8011262:	2107      	movs	r1, #7
 8011264:	f005 fa44 	bl	80166f0 <dma_circulation_disable>
 8011268:	2205      	movs	r2, #5
 801126a:	4620      	mov	r0, r4
 801126c:	2107      	movs	r1, #7
 801126e:	f005 fa47 	bl	8016700 <dma_channel_subperipheral_select>
 8011272:	2102      	movs	r1, #2
 8011274:	4620      	mov	r0, r4
 8011276:	f005 f9c5 	bl	8016604 <dma_deinit>
 801127a:	a805      	add	r0, sp, #20
 801127c:	f005 f9ed 	bl	801665a <dma_single_data_para_struct_init>
 8011280:	aa05      	add	r2, sp, #20
 8011282:	4620      	mov	r0, r4
 8011284:	2102      	movs	r1, #2
 8011286:	e9cd a607 	strd	sl, r6, [sp, #28]
 801128a:	e9cd 5605 	strd	r5, r6, [sp, #20]
 801128e:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8011292:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8011296:	970d      	str	r7, [sp, #52]	; 0x34
 8011298:	f005 f9eb 	bl	8016672 <dma_single_data_mode_init>
 801129c:	4620      	mov	r0, r4
 801129e:	2102      	movs	r1, #2
 80112a0:	f005 fa26 	bl	80166f0 <dma_circulation_disable>
 80112a4:	2205      	movs	r2, #5
 80112a6:	2102      	movs	r1, #2
 80112a8:	4620      	mov	r0, r4
 80112aa:	f005 fa29 	bl	8016700 <dma_channel_subperipheral_select>
 80112ae:	b00e      	add	sp, #56	; 0x38
 80112b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80112b4:	40000400 	andmi	r0, r0, r0, lsl #8
 80112b8:	e000e100 	and	lr, r0, r0, lsl #2
 80112bc:	40021018 	andmi	r1, r2, r8, lsl r0
 80112c0:	2000128c 	andcs	r1, r0, ip, lsl #5
 80112c4:	40021028 	andmi	r1, r2, r8, lsr #32
 80112c8:	0801b354 	stmdaeq	r1, {r2, r4, r6, r8, r9, ip, sp, pc}

080112cc <WS28xxMulti::Setup(unsigned int)>:
 80112cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80112d0:	4680      	mov	r8, r0
 80112d2:	b092      	sub	sp, #72	; 0x48
 80112d4:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80112d8:	460c      	mov	r4, r1
 80112da:	f005 faed 	bl	80168b8 <rcu_periph_clock_enable>
 80112de:	4882      	ldr	r0, [pc, #520]	; (80114e8 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 80112e0:	4d82      	ldr	r5, [pc, #520]	; (80114ec <WS28xxMulti::Setup(unsigned int)+0x220>)
 80112e2:	2340      	movs	r3, #64	; 0x40
 80112e4:	2200      	movs	r2, #0
 80112e6:	2102      	movs	r1, #2
 80112e8:	f005 fa6a 	bl	80167c0 <gpio_mode_set>
 80112ec:	2340      	movs	r3, #64	; 0x40
 80112ee:	487e      	ldr	r0, [pc, #504]	; (80114e8 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 80112f0:	2202      	movs	r2, #2
 80112f2:	2100      	movs	r1, #0
 80112f4:	f005 fa84 	bl	8016800 <gpio_output_options_set>
 80112f8:	2240      	movs	r2, #64	; 0x40
 80112fa:	2102      	movs	r1, #2
 80112fc:	487a      	ldr	r0, [pc, #488]	; (80114e8 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 80112fe:	f005 fa9a 	bl	8016836 <gpio_af_set>
 8011302:	fbb5 f5f4 	udiv	r5, r5, r4
 8011306:	f241 0001 	movw	r0, #4097	; 0x1001
 801130a:	2d0c      	cmp	r5, #12
 801130c:	bf38      	it	cc
 801130e:	250c      	movcc	r5, #12
 8011310:	f005 fad2 	bl	80168b8 <rcu_periph_clock_enable>
 8011314:	4876      	ldr	r0, [pc, #472]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011316:	2400      	movs	r4, #0
 8011318:	f005 fb7e 	bl	8016a18 <timer_deinit>
 801131c:	1e6b      	subs	r3, r5, #1
 801131e:	4874      	ldr	r0, [pc, #464]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011320:	9307      	str	r3, [sp, #28]
 8011322:	a905      	add	r1, sp, #20
 8011324:	2602      	movs	r6, #2
 8011326:	2701      	movs	r7, #1
 8011328:	e9cd 4405 	strd	r4, r4, [sp, #20]
 801132c:	f88d 4020 	strb.w	r4, [sp, #32]
 8011330:	f005 fc18 	bl	8016b64 <timer_init>
 8011334:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011338:	486d      	ldr	r0, [pc, #436]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801133a:	9304      	str	r3, [sp, #16]
 801133c:	aa02      	add	r2, sp, #8
 801133e:	4621      	mov	r1, r4
 8011340:	e9cd 7602 	strd	r7, r6, [sp, #8]
 8011344:	f005 fc60 	bl	8016c08 <timer_channel_output_config>
 8011348:	fa25 f207 	lsr.w	r2, r5, r7
 801134c:	4868      	ldr	r0, [pc, #416]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801134e:	3a01      	subs	r2, #1
 8011350:	4621      	mov	r1, r4
 8011352:	f005 fd67 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011356:	4866      	ldr	r0, [pc, #408]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011358:	2260      	movs	r2, #96	; 0x60
 801135a:	4621      	mov	r1, r4
 801135c:	f005 fd3c 	bl	8016dd8 <timer_channel_output_mode_config>
 8011360:	4863      	ldr	r0, [pc, #396]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011362:	4622      	mov	r2, r4
 8011364:	4621      	mov	r1, r4
 8011366:	f005 fd6b 	bl	8016e40 <timer_channel_output_shadow_config>
 801136a:	4861      	ldr	r0, [pc, #388]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 801136c:	2210      	movs	r2, #16
 801136e:	4631      	mov	r1, r6
 8011370:	f005 fd32 	bl	8016dd8 <timer_channel_output_mode_config>
 8011374:	485e      	ldr	r0, [pc, #376]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011376:	2210      	movs	r2, #16
 8011378:	2103      	movs	r1, #3
 801137a:	f005 fd2d 	bl	8016dd8 <timer_channel_output_mode_config>
 801137e:	485c      	ldr	r0, [pc, #368]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011380:	463a      	mov	r2, r7
 8011382:	4631      	mov	r1, r6
 8011384:	f005 fd4e 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011388:	fa25 f206 	lsr.w	r2, r5, r6
 801138c:	3a01      	subs	r2, #1
 801138e:	4858      	ldr	r0, [pc, #352]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011390:	2103      	movs	r1, #3
 8011392:	f005 fd47 	bl	8016e24 <timer_channel_output_pulse_value_config>
 8011396:	4856      	ldr	r0, [pc, #344]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 8011398:	4639      	mov	r1, r7
 801139a:	f005 fd8f 	bl	8016ebc <timer_master_slave_mode_config>
 801139e:	2130      	movs	r1, #48	; 0x30
 80113a0:	4853      	ldr	r0, [pc, #332]	; (80114f0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 80113a2:	f005 fd7b 	bl	8016e9c <timer_master_output_trigger_source_select>
 80113a6:	f241 0002 	movw	r0, #4098	; 0x1002
 80113aa:	f005 fa85 	bl	80168b8 <rcu_periph_clock_enable>
 80113ae:	4851      	ldr	r0, [pc, #324]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113b0:	f005 fb32 	bl	8016a18 <timer_deinit>
 80113b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80113b8:	484e      	ldr	r0, [pc, #312]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113ba:	9307      	str	r3, [sp, #28]
 80113bc:	a905      	add	r1, sp, #20
 80113be:	e9cd 4405 	strd	r4, r4, [sp, #20]
 80113c2:	f005 fbcf 	bl	8016b64 <timer_init>
 80113c6:	484b      	ldr	r0, [pc, #300]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113c8:	4639      	mov	r1, r7
 80113ca:	f005 fd77 	bl	8016ebc <timer_master_slave_mode_config>
 80113ce:	4849      	ldr	r0, [pc, #292]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113d0:	2107      	movs	r1, #7
 80113d2:	f005 fd6b 	bl	8016eac <timer_slave_mode_select>
 80113d6:	4847      	ldr	r0, [pc, #284]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113d8:	2120      	movs	r1, #32
 80113da:	f005 fd57 	bl	8016e8c <timer_input_trigger_source_select>
 80113de:	4845      	ldr	r0, [pc, #276]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113e0:	2210      	movs	r2, #16
 80113e2:	4621      	mov	r1, r4
 80113e4:	f005 fcf8 	bl	8016dd8 <timer_channel_output_mode_config>
 80113e8:	f8d8 201c 	ldr.w	r2, [r8, #28]
 80113ec:	4841      	ldr	r0, [pc, #260]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113ee:	4621      	mov	r1, r4
 80113f0:	f005 fd18 	bl	8016e24 <timer_channel_output_pulse_value_config>
 80113f4:	4631      	mov	r1, r6
 80113f6:	483f      	ldr	r0, [pc, #252]	; (80114f4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 80113f8:	f005 fbf7 	bl	8016bea <timer_interrupt_enable>
 80113fc:	4b3e      	ldr	r3, [pc, #248]	; (80114f8 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 80113fe:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8011402:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 8011406:	f640 4015 	movw	r0, #3093	; 0xc15
 801140a:	601a      	str	r2, [r3, #0]
 801140c:	f005 fa54 	bl	80168b8 <rcu_periph_clock_enable>
 8011410:	2107      	movs	r1, #7
 8011412:	483a      	ldr	r0, [pc, #232]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011414:	f005 f8f6 	bl	8016604 <dma_deinit>
 8011418:	a809      	add	r0, sp, #36	; 0x24
 801141a:	f005 f91e 	bl	801665a <dma_single_data_para_struct_init>
 801141e:	4b38      	ldr	r3, [pc, #224]	; (8011500 <WS28xxMulti::Setup(unsigned int)+0x234>)
 8011420:	4836      	ldr	r0, [pc, #216]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011422:	e9cd 370b 	strd	r3, r7, [sp, #44]	; 0x2c
 8011426:	4b37      	ldr	r3, [pc, #220]	; (8011504 <WS28xxMulti::Setup(unsigned int)+0x238>)
 8011428:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 801142c:	aa09      	add	r2, sp, #36	; 0x24
 801142e:	f04f 0a40 	mov.w	sl, #64	; 0x40
 8011432:	f44f 6900 	mov.w	r9, #2048	; 0x800
 8011436:	2107      	movs	r1, #7
 8011438:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 801143c:	9511      	str	r5, [sp, #68]	; 0x44
 801143e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8011442:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011446:	f005 f914 	bl	8016672 <dma_single_data_mode_init>
 801144a:	482c      	ldr	r0, [pc, #176]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 801144c:	2107      	movs	r1, #7
 801144e:	f005 f94f 	bl	80166f0 <dma_circulation_disable>
 8011452:	2205      	movs	r2, #5
 8011454:	4829      	ldr	r0, [pc, #164]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011456:	2107      	movs	r1, #7
 8011458:	f005 f952 	bl	8016700 <dma_channel_subperipheral_select>
 801145c:	4631      	mov	r1, r6
 801145e:	4827      	ldr	r0, [pc, #156]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011460:	f005 f8d0 	bl	8016604 <dma_deinit>
 8011464:	a809      	add	r0, sp, #36	; 0x24
 8011466:	f005 f8f8 	bl	801665a <dma_single_data_para_struct_init>
 801146a:	4b27      	ldr	r3, [pc, #156]	; (8011508 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 801146c:	4823      	ldr	r0, [pc, #140]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 801146e:	9511      	str	r5, [sp, #68]	; 0x44
 8011470:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
 8011474:	4b25      	ldr	r3, [pc, #148]	; (801150c <WS28xxMulti::Setup(unsigned int)+0x240>)
 8011476:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 801147a:	aa09      	add	r2, sp, #36	; 0x24
 801147c:	4631      	mov	r1, r6
 801147e:	e9cd 3709 	strd	r3, r7, [sp, #36]	; 0x24
 8011482:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011486:	f005 f8f4 	bl	8016672 <dma_single_data_mode_init>
 801148a:	481c      	ldr	r0, [pc, #112]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 801148c:	4631      	mov	r1, r6
 801148e:	f005 f92f 	bl	80166f0 <dma_circulation_disable>
 8011492:	481a      	ldr	r0, [pc, #104]	; (80114fc <WS28xxMulti::Setup(unsigned int)+0x230>)
 8011494:	2205      	movs	r2, #5
 8011496:	4631      	mov	r1, r6
 8011498:	f005 f932 	bl	8016700 <dma_channel_subperipheral_select>
 801149c:	f8d8 5000 	ldr.w	r5, [r8]
 80114a0:	3d0b      	subs	r5, #11
 80114a2:	42b5      	cmp	r5, r6
 80114a4:	d81c      	bhi.n	80114e0 <WS28xxMulti::Setup(unsigned int)+0x214>
 80114a6:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80114aa:	4627      	mov	r7, r4
 80114ac:	3601      	adds	r6, #1
 80114ae:	f04f 08ff 	mov.w	r8, #255	; 0xff
 80114b2:	2300      	movs	r3, #0
 80114b4:	461a      	mov	r2, r3
 80114b6:	4619      	mov	r1, r3
 80114b8:	4620      	mov	r0, r4
 80114ba:	e9cd 7700 	strd	r7, r7, [sp]
 80114be:	f7ff fd8b 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80114c2:	2d02      	cmp	r5, #2
 80114c4:	bf1b      	ittet	ne
 80114c6:	23ff      	movne	r3, #255	; 0xff
 80114c8:	e9cd 8800 	strdne	r8, r8, [sp]
 80114cc:	e9cd 7700 	strdeq	r7, r7, [sp]
 80114d0:	461a      	movne	r2, r3
 80114d2:	4620      	mov	r0, r4
 80114d4:	4631      	mov	r1, r6
 80114d6:	3401      	adds	r4, #1
 80114d8:	f7ff fd7e 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80114dc:	2c10      	cmp	r4, #16
 80114de:	d1e8      	bne.n	80114b2 <WS28xxMulti::Setup(unsigned int)+0x1e6>
 80114e0:	b012      	add	sp, #72	; 0x48
 80114e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80114e6:	bf00      	nop
 80114e8:	40020000 	andmi	r0, r2, r0
 80114ec:	0bebc200 	bleq	7b01cf4 <__stack_size+0x7afdcf4>
 80114f0:	40000400 	andmi	r0, r0, r0, lsl #8
 80114f4:	40000800 	andmi	r0, r0, r0, lsl #16
 80114f8:	e000e100 	and	lr, r0, r0, lsl #2
 80114fc:	40026000 	andmi	r6, r2, r0
 8011500:	0801b354 	stmdaeq	r1, {r2, r4, r6, r8, r9, ip, sp, pc}
 8011504:	40021028 	andmi	r1, r2, r8, lsr #32
 8011508:	2000128c 	andcs	r1, r0, ip, lsl #5
 801150c:	40021018 	andmi	r1, r2, r8, lsl r0

08011510 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 8011510:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011512:	460f      	mov	r7, r1
 8011514:	4604      	mov	r4, r0
 8011516:	460d      	mov	r5, r1
 8011518:	4606      	mov	r6, r0
 801151a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801151c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801151e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8011522:	2300      	movs	r3, #0
 8011524:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8011528:	61e3      	str	r3, [r4, #28]
 801152a:	4b26      	ldr	r3, [pc, #152]	; (80115c4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb4>)
 801152c:	a901      	add	r1, sp, #4
 801152e:	4628      	mov	r0, r5
 8011530:	601c      	str	r4, [r3, #0]
 8011532:	f7ff f8af 	bl	8010694 <PixelConfiguration::Validate(unsigned int&)>
 8011536:	6826      	ldr	r6, [r4, #0]
 8011538:	3e0b      	subs	r6, #11
 801153a:	2e02      	cmp	r6, #2
 801153c:	d80a      	bhi.n	8011554 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 801153e:	686b      	ldr	r3, [r5, #4]
 8011540:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8011544:	d906      	bls.n	8011554 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 8011546:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 801154a:	606b      	str	r3, [r5, #4]
 801154c:	a901      	add	r1, sp, #4
 801154e:	4628      	mov	r0, r5
 8011550:	f7ff f8a0 	bl	8010694 <PixelConfiguration::Validate(unsigned int&)>
 8011554:	6863      	ldr	r3, [r4, #4]
 8011556:	9a01      	ldr	r2, [sp, #4]
 8011558:	2e02      	cmp	r6, #2
 801155a:	fb03 f202 	mul.w	r2, r3, r2
 801155e:	bf9b      	ittet	ls
 8011560:	3308      	addls	r3, #8
 8011562:	189b      	addls	r3, r3, r2
 8011564:	61e2      	strhi	r2, [r4, #28]
 8011566:	61e3      	strls	r3, [r4, #28]
 8011568:	69e3      	ldr	r3, [r4, #28]
 801156a:	4e17      	ldr	r6, [pc, #92]	; (80115c8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xb8>)
 801156c:	00db      	lsls	r3, r3, #3
 801156e:	61e3      	str	r3, [r4, #28]
 8011570:	f640 4004 	movw	r0, #3076	; 0xc04
 8011574:	f005 f9a0 	bl	80168b8 <rcu_periph_clock_enable>
 8011578:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801157c:	2100      	movs	r1, #0
 801157e:	4630      	mov	r0, r6
 8011580:	f005 f959 	bl	8016836 <gpio_af_set>
 8011584:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011588:	2202      	movs	r2, #2
 801158a:	2101      	movs	r1, #1
 801158c:	4630      	mov	r0, r6
 801158e:	f005 f917 	bl	80167c0 <gpio_mode_set>
 8011592:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011596:	2202      	movs	r2, #2
 8011598:	2100      	movs	r1, #0
 801159a:	4630      	mov	r0, r6
 801159c:	f005 f930 	bl	8016800 <gpio_output_options_set>
 80115a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80115a4:	62b3      	str	r3, [r6, #40]	; 0x28
 80115a6:	7d6b      	ldrb	r3, [r5, #21]
 80115a8:	b13b      	cbz	r3, 80115ba <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xaa>
 80115aa:	7c6a      	ldrb	r2, [r5, #17]
 80115ac:	7c29      	ldrb	r1, [r5, #16]
 80115ae:	4620      	mov	r0, r4
 80115b0:	f7ff fd92 	bl	80110d8 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 80115b4:	4620      	mov	r0, r4
 80115b6:	b003      	add	sp, #12
 80115b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115ba:	68e9      	ldr	r1, [r5, #12]
 80115bc:	4620      	mov	r0, r4
 80115be:	f7ff fe85 	bl	80112cc <WS28xxMulti::Setup(unsigned int)>
 80115c2:	e7f7      	b.n	80115b4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa4>
 80115c4:	20001288 	andcs	r1, r0, r8, lsl #5
 80115c8:	40021000 	andmi	r1, r2, r0

080115cc <WS28xxMulti::Update()>:
 80115cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115ce:	4b4c      	ldr	r3, [pc, #304]	; (8011700 <WS28xxMulti::Update()+0x134>)
 80115d0:	4e4c      	ldr	r6, [pc, #304]	; (8011704 <WS28xxMulti::Update()+0x138>)
 80115d2:	4c4d      	ldr	r4, [pc, #308]	; (8011708 <WS28xxMulti::Update()+0x13c>)
 80115d4:	4f4d      	ldr	r7, [pc, #308]	; (801170c <WS28xxMulti::Update()+0x140>)
 80115d6:	2201      	movs	r2, #1
 80115d8:	701a      	strb	r2, [r3, #0]
 80115da:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80115de:	2100      	movs	r1, #0
 80115e0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80115e4:	f022 0201 	bic.w	r2, r2, #1
 80115e8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80115ec:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 80115f0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80115f4:	f022 0201 	bic.w	r2, r2, #1
 80115f8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80115fc:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 8011600:	7d43      	ldrb	r3, [r0, #21]
 8011602:	4605      	mov	r5, r0
 8011604:	2b00      	cmp	r3, #0
 8011606:	d053      	beq.n	80116b0 <WS28xxMulti::Update()+0xe4>
 8011608:	6f23      	ldr	r3, [r4, #112]	; 0x70
 801160a:	f023 0301 	bic.w	r3, r3, #1
 801160e:	6723      	str	r3, [r4, #112]	; 0x70
 8011610:	2220      	movs	r2, #32
 8011612:	2104      	movs	r1, #4
 8011614:	4620      	mov	r0, r4
 8011616:	f005 f897 	bl	8016748 <dma_interrupt_flag_clear>
 801161a:	67e6      	str	r6, [r4, #124]	; 0x7c
 801161c:	8bab      	ldrh	r3, [r5, #28]
 801161e:	6763      	str	r3, [r4, #116]	; 0x74
 8011620:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8011622:	f043 0301 	orr.w	r3, r3, #1
 8011626:	6723      	str	r3, [r4, #112]	; 0x70
 8011628:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 801162c:	f023 0301 	bic.w	r3, r3, #1
 8011630:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8011634:	2220      	movs	r2, #32
 8011636:	2107      	movs	r1, #7
 8011638:	4620      	mov	r0, r4
 801163a:	f005 f885 	bl	8016748 <dma_interrupt_flag_clear>
 801163e:	f8c4 70c4 	str.w	r7, [r4, #196]	; 0xc4
 8011642:	8bab      	ldrh	r3, [r5, #28]
 8011644:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011648:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 801164c:	f043 0301 	orr.w	r3, r3, #1
 8011650:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8011654:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011656:	f023 0301 	bic.w	r3, r3, #1
 801165a:	6423      	str	r3, [r4, #64]	; 0x40
 801165c:	2102      	movs	r1, #2
 801165e:	4620      	mov	r0, r4
 8011660:	2220      	movs	r2, #32
 8011662:	f005 f871 	bl	8016748 <dma_interrupt_flag_clear>
 8011666:	64e6      	str	r6, [r4, #76]	; 0x4c
 8011668:	8bab      	ldrh	r3, [r5, #28]
 801166a:	6463      	str	r3, [r4, #68]	; 0x44
 801166c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801166e:	4828      	ldr	r0, [pc, #160]	; (8011710 <WS28xxMulti::Update()+0x144>)
 8011670:	f043 0301 	orr.w	r3, r3, #1
 8011674:	6423      	str	r3, [r4, #64]	; 0x40
 8011676:	f44f 7100 	mov.w	r1, #512	; 0x200
 801167a:	f005 fac0 	bl	8016bfe <timer_dma_enable>
 801167e:	4824      	ldr	r0, [pc, #144]	; (8011710 <WS28xxMulti::Update()+0x144>)
 8011680:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8011684:	f005 fabb 	bl	8016bfe <timer_dma_enable>
 8011688:	4821      	ldr	r0, [pc, #132]	; (8011710 <WS28xxMulti::Update()+0x144>)
 801168a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 801168e:	f005 fab6 	bl	8016bfe <timer_dma_enable>
 8011692:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8011696:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 801169a:	f042 0201 	orr.w	r2, r2, #1
 801169e:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80116a2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80116a6:	f042 0201 	orr.w	r2, r2, #1
 80116aa:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80116ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80116b0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80116b4:	f023 0301 	bic.w	r3, r3, #1
 80116b8:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80116bc:	2220      	movs	r2, #32
 80116be:	2107      	movs	r1, #7
 80116c0:	4620      	mov	r0, r4
 80116c2:	f005 f841 	bl	8016748 <dma_interrupt_flag_clear>
 80116c6:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 80116ca:	8bab      	ldrh	r3, [r5, #28]
 80116cc:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80116d0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80116d4:	f043 0301 	orr.w	r3, r3, #1
 80116d8:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80116dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80116de:	f023 0301 	bic.w	r3, r3, #1
 80116e2:	6423      	str	r3, [r4, #64]	; 0x40
 80116e4:	2220      	movs	r2, #32
 80116e6:	2102      	movs	r1, #2
 80116e8:	4620      	mov	r0, r4
 80116ea:	f005 f82d 	bl	8016748 <dma_interrupt_flag_clear>
 80116ee:	64e7      	str	r7, [r4, #76]	; 0x4c
 80116f0:	8bab      	ldrh	r3, [r5, #28]
 80116f2:	6463      	str	r3, [r4, #68]	; 0x44
 80116f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80116f6:	f043 0301 	orr.w	r3, r3, #1
 80116fa:	6423      	str	r3, [r4, #64]	; 0x40
 80116fc:	e7bf      	b.n	801167e <WS28xxMulti::Update()+0xb2>
 80116fe:	bf00      	nop
 8011700:	20001284 	andcs	r1, r0, r4, lsl #5
 8011704:	0801b354 	stmdaeq	r1, {r2, r4, r6, r8, r9, ip, sp, pc}
 8011708:	40026000 	andmi	r6, r2, r0
 801170c:	2000128c 	andcs	r1, r0, ip, lsl #5
 8011710:	40000400 	andmi	r0, r0, r0, lsl #8

08011714 <WS28xxMulti::Blackout()>:
 8011714:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011718:	4f2d      	ldr	r7, [pc, #180]	; (80117d0 <WS28xxMulti::Blackout()+0xbc>)
 801171a:	4605      	mov	r5, r0
 801171c:	f3bf 8f5f 	dmb	sy
 8011720:	783a      	ldrb	r2, [r7, #0]
 8011722:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8011726:	2a00      	cmp	r2, #0
 8011728:	d1f8      	bne.n	801171c <WS28xxMulti::Blackout()+0x8>
 801172a:	7d6c      	ldrb	r4, [r5, #21]
 801172c:	b19c      	cbz	r4, 8011756 <WS28xxMulti::Blackout()+0x42>
 801172e:	4a29      	ldr	r2, [pc, #164]	; (80117d4 <WS28xxMulti::Blackout()+0xc0>)
 8011730:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8011734:	3301      	adds	r3, #1
 8011736:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801173a:	f842 1b04 	str.w	r1, [r2], #4
 801173e:	d1f9      	bne.n	8011734 <WS28xxMulti::Blackout()+0x20>
 8011740:	4628      	mov	r0, r5
 8011742:	f7ff ff43 	bl	80115cc <WS28xxMulti::Update()>
 8011746:	f3bf 8f5f 	dmb	sy
 801174a:	783b      	ldrb	r3, [r7, #0]
 801174c:	2b00      	cmp	r3, #0
 801174e:	d1fa      	bne.n	8011746 <WS28xxMulti::Blackout()+0x32>
 8011750:	b003      	add	sp, #12
 8011752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011756:	682b      	ldr	r3, [r5, #0]
 8011758:	f1a3 080b 	sub.w	r8, r3, #11
 801175c:	f1b8 0f02 	cmp.w	r8, #2
 8011760:	d908      	bls.n	8011774 <WS28xxMulti::Blackout()+0x60>
 8011762:	4b1c      	ldr	r3, [pc, #112]	; (80117d4 <WS28xxMulti::Blackout()+0xc0>)
 8011764:	4622      	mov	r2, r4
 8011766:	3401      	adds	r4, #1
 8011768:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 801176c:	f843 2b04 	str.w	r2, [r3], #4
 8011770:	d1f9      	bne.n	8011766 <WS28xxMulti::Blackout()+0x52>
 8011772:	e7e5      	b.n	8011740 <WS28xxMulti::Blackout()+0x2c>
 8011774:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8011778:	4626      	mov	r6, r4
 801177a:	f10a 0b01 	add.w	fp, sl, #1
 801177e:	2300      	movs	r3, #0
 8011780:	e9cd 6600 	strd	r6, r6, [sp]
 8011784:	461a      	mov	r2, r3
 8011786:	4619      	mov	r1, r3
 8011788:	4620      	mov	r0, r4
 801178a:	f7ff fc25 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801178e:	f04f 0901 	mov.w	r9, #1
 8011792:	45ca      	cmp	sl, r9
 8011794:	d211      	bcs.n	80117ba <WS28xxMulti::Blackout()+0xa6>
 8011796:	f1b8 0f02 	cmp.w	r8, #2
 801179a:	bf15      	itete	ne
 801179c:	23ff      	movne	r3, #255	; 0xff
 801179e:	2300      	moveq	r3, #0
 80117a0:	e9cd 3300 	strdne	r3, r3, [sp]
 80117a4:	e9cd 6600 	strdeq	r6, r6, [sp]
 80117a8:	4620      	mov	r0, r4
 80117aa:	461a      	mov	r2, r3
 80117ac:	4659      	mov	r1, fp
 80117ae:	3401      	adds	r4, #1
 80117b0:	f7ff fc12 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80117b4:	2c10      	cmp	r4, #16
 80117b6:	d1e2      	bne.n	801177e <WS28xxMulti::Blackout()+0x6a>
 80117b8:	e7c2      	b.n	8011740 <WS28xxMulti::Blackout()+0x2c>
 80117ba:	4649      	mov	r1, r9
 80117bc:	e9cd 6600 	strd	r6, r6, [sp]
 80117c0:	2300      	movs	r3, #0
 80117c2:	22e0      	movs	r2, #224	; 0xe0
 80117c4:	4620      	mov	r0, r4
 80117c6:	f7ff fc07 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80117ca:	f109 0901 	add.w	r9, r9, #1
 80117ce:	e7e0      	b.n	8011792 <WS28xxMulti::Blackout()+0x7e>
 80117d0:	20001284 	andcs	r1, r0, r4, lsl #5
 80117d4:	2000128c 	andcs	r1, r0, ip, lsl #5

080117d8 <WS28xxMulti::FullOn()>:
 80117d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117dc:	4f2c      	ldr	r7, [pc, #176]	; (8011890 <WS28xxMulti::FullOn()+0xb8>)
 80117de:	4605      	mov	r5, r0
 80117e0:	f3bf 8f5f 	dmb	sy
 80117e4:	783a      	ldrb	r2, [r7, #0]
 80117e6:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 80117ea:	2a00      	cmp	r2, #0
 80117ec:	d1f8      	bne.n	80117e0 <WS28xxMulti::FullOn()+0x8>
 80117ee:	7d6c      	ldrb	r4, [r5, #21]
 80117f0:	b194      	cbz	r4, 8011818 <WS28xxMulti::FullOn()+0x40>
 80117f2:	4a28      	ldr	r2, [pc, #160]	; (8011894 <WS28xxMulti::FullOn()+0xbc>)
 80117f4:	4619      	mov	r1, r3
 80117f6:	3301      	adds	r3, #1
 80117f8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80117fc:	f842 1b04 	str.w	r1, [r2], #4
 8011800:	d1f9      	bne.n	80117f6 <WS28xxMulti::FullOn()+0x1e>
 8011802:	4628      	mov	r0, r5
 8011804:	f7ff fee2 	bl	80115cc <WS28xxMulti::Update()>
 8011808:	f3bf 8f5f 	dmb	sy
 801180c:	783b      	ldrb	r3, [r7, #0]
 801180e:	2b00      	cmp	r3, #0
 8011810:	d1fa      	bne.n	8011808 <WS28xxMulti::FullOn()+0x30>
 8011812:	b003      	add	sp, #12
 8011814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011818:	682e      	ldr	r6, [r5, #0]
 801181a:	3e0b      	subs	r6, #11
 801181c:	2e02      	cmp	r6, #2
 801181e:	d908      	bls.n	8011832 <WS28xxMulti::FullOn()+0x5a>
 8011820:	4b1c      	ldr	r3, [pc, #112]	; (8011894 <WS28xxMulti::FullOn()+0xbc>)
 8011822:	22ff      	movs	r2, #255	; 0xff
 8011824:	3401      	adds	r4, #1
 8011826:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 801182a:	f843 2b04 	str.w	r2, [r3], #4
 801182e:	d1f9      	bne.n	8011824 <WS28xxMulti::FullOn()+0x4c>
 8011830:	e7e7      	b.n	8011802 <WS28xxMulti::FullOn()+0x2a>
 8011832:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8011836:	46a0      	mov	r8, r4
 8011838:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801183c:	2300      	movs	r3, #0
 801183e:	e9cd 8800 	strd	r8, r8, [sp]
 8011842:	461a      	mov	r2, r3
 8011844:	4619      	mov	r1, r3
 8011846:	4620      	mov	r0, r4
 8011848:	f7ff fbc6 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 801184c:	f04f 0b01 	mov.w	fp, #1
 8011850:	45da      	cmp	sl, fp
 8011852:	d211      	bcs.n	8011878 <WS28xxMulti::FullOn()+0xa0>
 8011854:	2e02      	cmp	r6, #2
 8011856:	bf15      	itete	ne
 8011858:	23ff      	movne	r3, #255	; 0xff
 801185a:	2300      	moveq	r3, #0
 801185c:	e9cd 9900 	strdne	r9, r9, [sp]
 8011860:	e9cd 8800 	strdeq	r8, r8, [sp]
 8011864:	4620      	mov	r0, r4
 8011866:	f10a 0101 	add.w	r1, sl, #1
 801186a:	461a      	mov	r2, r3
 801186c:	3401      	adds	r4, #1
 801186e:	f7ff fbb3 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011872:	2c10      	cmp	r4, #16
 8011874:	d1e2      	bne.n	801183c <WS28xxMulti::FullOn()+0x64>
 8011876:	e7c4      	b.n	8011802 <WS28xxMulti::FullOn()+0x2a>
 8011878:	4659      	mov	r1, fp
 801187a:	e9cd 9900 	strd	r9, r9, [sp]
 801187e:	23ff      	movs	r3, #255	; 0xff
 8011880:	22e0      	movs	r2, #224	; 0xe0
 8011882:	4620      	mov	r0, r4
 8011884:	f7ff fba8 	bl	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011888:	f10b 0b01 	add.w	fp, fp, #1
 801188c:	e7e0      	b.n	8011850 <WS28xxMulti::FullOn()+0x78>
 801188e:	bf00      	nop
 8011890:	20001284 	andcs	r1, r0, r4, lsl #5
 8011894:	2000128c 	andcs	r1, r0, ip, lsl #5

08011898 <WS28xxMulti::IsUpdating()>:
 8011898:	f3bf 8f5f 	dmb	sy
 801189c:	4b01      	ldr	r3, [pc, #4]	; (80118a4 <WS28xxMulti::IsUpdating()+0xc>)
 801189e:	7818      	ldrb	r0, [r3, #0]
 80118a0:	4770      	bx	lr
 80118a2:	bf00      	nop
 80118a4:	20001284 	andcs	r1, r0, r4, lsl #5

080118a8 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 80118a8:	b2c8      	uxtb	r0, r1
 80118aa:	491c      	ldr	r1, [pc, #112]	; (801191c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 80118ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80118b0:	b570      	push	{r4, r5, r6, lr}
 80118b2:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 80118b6:	4a1a      	ldr	r2, [pc, #104]	; (8011920 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 80118b8:	f89d e010 	ldrb.w	lr, [sp, #16]
 80118bc:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80118c0:	440a      	add	r2, r1
 80118c2:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80118c6:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 80118ca:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 80118ce:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80118d2:	0092      	lsls	r2, r2, #2
 80118d4:	0080      	lsls	r0, r0, #2
 80118d6:	2180      	movs	r1, #128	; 0x80
 80118d8:	2400      	movs	r4, #0
 80118da:	2501      	movs	r5, #1
 80118dc:	420b      	tst	r3, r1
 80118de:	f5a2 6c80 	sub.w	ip, r2, #1024	; 0x400
 80118e2:	bf16      	itet	ne
 80118e4:	f5a2 6c80 	subne.w	ip, r2, #1024	; 0x400
 80118e8:	f8cc 5000 	streq.w	r5, [ip]
 80118ec:	f8cc 4000 	strne.w	r4, [ip]
 80118f0:	ea1e 0f01 	tst.w	lr, r1
 80118f4:	f5a2 7c00 	sub.w	ip, r2, #512	; 0x200
 80118f8:	bf16      	itet	ne
 80118fa:	f5a2 7c00 	subne.w	ip, r2, #512	; 0x200
 80118fe:	f8cc 5000 	streq.w	r5, [ip]
 8011902:	f8cc 4000 	strne.w	r4, [ip]
 8011906:	420e      	tst	r6, r1
 8011908:	bf0c      	ite	eq
 801190a:	6015      	streq	r5, [r2, #0]
 801190c:	6014      	strne	r4, [r2, #0]
 801190e:	3240      	adds	r2, #64	; 0x40
 8011910:	4290      	cmp	r0, r2
 8011912:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8011916:	d1e1      	bne.n	80118dc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 8011918:	bd70      	pop	{r4, r5, r6, pc}
 801191a:	bf00      	nop
 801191c:	2000128c 	andcs	r1, r0, ip, lsl #5
 8011920:	e1100020 	tst	r0, r0, lsr #32

08011924 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8011924:	b2c8      	uxtb	r0, r1
 8011926:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801192a:	4a19      	ldr	r2, [pc, #100]	; (8011990 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>)
 801192c:	b570      	push	{r4, r5, r6, lr}
 801192e:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8011932:	4918      	ldr	r1, [pc, #96]	; (8011994 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 8011934:	f89d c010 	ldrb.w	ip, [sp, #16]
 8011938:	f89d e014 	ldrb.w	lr, [sp, #20]
 801193c:	4411      	add	r1, r2
 801193e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8011942:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 8011946:	f500 70c0 	add.w	r0, r0, #384	; 0x180
 801194a:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 801194e:	0089      	lsls	r1, r1, #2
 8011950:	0080      	lsls	r0, r0, #2
 8011952:	2280      	movs	r2, #128	; 0x80
 8011954:	2401      	movs	r4, #1
 8011956:	ea13 0502 	ands.w	r5, r3, r2
 801195a:	f5a1 6680 	sub.w	r6, r1, #1024	; 0x400
 801195e:	bf0a      	itet	eq
 8011960:	f5a1 6680 	subeq.w	r6, r1, #1024	; 0x400
 8011964:	6034      	strne	r4, [r6, #0]
 8011966:	6035      	streq	r5, [r6, #0]
 8011968:	ea1c 0502 	ands.w	r5, ip, r2
 801196c:	f5a1 7600 	sub.w	r6, r1, #512	; 0x200
 8011970:	bf0a      	itet	eq
 8011972:	f5a1 7600 	subeq.w	r6, r1, #512	; 0x200
 8011976:	6034      	strne	r4, [r6, #0]
 8011978:	6035      	streq	r5, [r6, #0]
 801197a:	ea1e 0502 	ands.w	r5, lr, r2
 801197e:	bf14      	ite	ne
 8011980:	600c      	strne	r4, [r1, #0]
 8011982:	600d      	streq	r5, [r1, #0]
 8011984:	3140      	adds	r1, #64	; 0x40
 8011986:	4288      	cmp	r0, r1
 8011988:	ea4f 0252 	mov.w	r2, r2, lsr #1
 801198c:	d1e3      	bne.n	8011956 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x32>
 801198e:	bd70      	pop	{r4, r5, r6, pc}
 8011990:	2000128c 	andcs	r1, r0, ip, lsl #5
 8011994:	e1100020 	tst	r0, r0, lsr #32

08011998 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8011998:	b530      	push	{r4, r5, lr}
 801199a:	6984      	ldr	r4, [r0, #24]
 801199c:	f89d 500c 	ldrb.w	r5, [sp, #12]
 80119a0:	468c      	mov	ip, r1
 80119a2:	4611      	mov	r1, r2
 80119a4:	5ce2      	ldrb	r2, [r4, r3]
 80119a6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80119aa:	5d65      	ldrb	r5, [r4, r5]
 80119ac:	5ce3      	ldrb	r3, [r4, r3]
 80119ae:	7d44      	ldrb	r4, [r0, #21]
 80119b0:	bb1c      	cbnz	r4, 80119fa <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x62>
 80119b2:	6804      	ldr	r4, [r0, #0]
 80119b4:	b1cc      	cbz	r4, 80119ea <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x52>
 80119b6:	3c0b      	subs	r4, #11
 80119b8:	2c01      	cmp	r4, #1
 80119ba:	9204      	str	r2, [sp, #16]
 80119bc:	d94a      	bls.n	8011a54 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 80119be:	ea6f 0493 	mvn.w	r4, r3, lsr #2
 80119c2:	9503      	str	r5, [sp, #12]
 80119c4:	f004 0430 	and.w	r4, r4, #48	; 0x30
 80119c8:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80119cc:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 80119d0:	f005 050c 	and.w	r5, r5, #12
 80119d4:	ea44 1292 	orr.w	r2, r4, r2, lsr #6
 80119d8:	432a      	orrs	r2, r5
 80119da:	3101      	adds	r1, #1
 80119dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80119e0:	4660      	mov	r0, ip
 80119e2:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 80119e6:	f7ff baf7 	b.w	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 80119ea:	6884      	ldr	r4, [r0, #8]
 80119ec:	2c05      	cmp	r4, #5
 80119ee:	d854      	bhi.n	8011a9a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x102>
 80119f0:	e8df f004 	tbb	[pc, r4]
 80119f4:	4c484440 	cfstrdmi	mvd4, [r8], {64}	; 0x40
 80119f8:	68843850 	stmvs	r4, {r4, r6, fp, ip, sp}
 80119fc:	2c05      	cmp	r4, #5
 80119fe:	d826      	bhi.n	8011a4e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 8011a00:	e8df f004 	tbb	[pc, r4]
 8011a04:	0b141821 	bleq	8517a90 <__exidx_end+0x4fb620>
 8011a08:	e9cd2503 	stmib	sp, {r0, r1, r8, sl, sp}^
 8011a0c:	2503      	movs	r5, #3
 8011a0e:	460a      	mov	r2, r1
 8011a10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a14:	4661      	mov	r1, ip
 8011a16:	f7ff bf47 	b.w	80118a8 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011a1a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8011a1e:	462b      	mov	r3, r5
 8011a20:	460a      	mov	r2, r1
 8011a22:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a26:	4661      	mov	r1, ip
 8011a28:	f7ff bf3e 	b.w	80118a8 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011a2c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011a30:	462b      	mov	r3, r5
 8011a32:	e7f5      	b.n	8011a20 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x88>
 8011a34:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8011a38:	4613      	mov	r3, r2
 8011a3a:	460a      	mov	r2, r1
 8011a3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a40:	4661      	mov	r1, ip
 8011a42:	f7ff bf31 	b.w	80118a8 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011a46:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8011a4a:	4613      	mov	r3, r2
 8011a4c:	e7f5      	b.n	8011a3a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa2>
 8011a4e:	e9cd 5203 	strd	r5, r2, [sp, #12]
 8011a52:	e7dc      	b.n	8011a0e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x76>
 8011a54:	7c82      	ldrb	r2, [r0, #18]
 8011a56:	9503      	str	r5, [sp, #12]
 8011a58:	3101      	adds	r1, #1
 8011a5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a5e:	4660      	mov	r0, ip
 8011a60:	f7ff baba 	b.w	8010fd8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 8011a64:	e9cd 5203 	strd	r5, r2, [sp, #12]
 8011a68:	460a      	mov	r2, r1
 8011a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a6e:	4661      	mov	r1, ip
 8011a70:	f7ff bf58 	b.w	8011924 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8011a74:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8011a78:	4613      	mov	r3, r2
 8011a7a:	e7f5      	b.n	8011a68 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011a7c:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8011a80:	4613      	mov	r3, r2
 8011a82:	e7f1      	b.n	8011a68 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011a84:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011a88:	462b      	mov	r3, r5
 8011a8a:	e7ed      	b.n	8011a68 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011a8c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8011a90:	462b      	mov	r3, r5
 8011a92:	e7e9      	b.n	8011a68 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011a94:	e9cd 2503 	strd	r2, r5, [sp, #12]
 8011a98:	e7e6      	b.n	8011a68 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd0>
 8011a9a:	bf00      	nop

08011a9c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 8011a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a9e:	6980      	ldr	r0, [r0, #24]
 8011aa0:	f89d 4014 	ldrb.w	r4, [sp, #20]
 8011aa4:	f810 c003 	ldrb.w	ip, [r0, r3]
 8011aa8:	4b1c      	ldr	r3, [pc, #112]	; (8011b1c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>)
 8011aaa:	f810 e004 	ldrb.w	lr, [r0, r4]
 8011aae:	eb03 1282 	add.w	r2, r3, r2, lsl #6
 8011ab2:	4b1b      	ldr	r3, [pc, #108]	; (8011b20 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x84>)
 8011ab4:	b2c9      	uxtb	r1, r1
 8011ab6:	4413      	add	r3, r2
 8011ab8:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8011abc:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 8011ac0:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8011ac4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8011ac8:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8011acc:	5c45      	ldrb	r5, [r0, r1]
 8011ace:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8011ad2:	009b      	lsls	r3, r3, #2
 8011ad4:	5c46      	ldrb	r6, [r0, r1]
 8011ad6:	0092      	lsls	r2, r2, #2
 8011ad8:	2180      	movs	r1, #128	; 0x80
 8011ada:	2000      	movs	r0, #0
 8011adc:	2401      	movs	r4, #1
 8011ade:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 8011ae2:	ea1e 0f01 	tst.w	lr, r1
 8011ae6:	bf0c      	ite	eq
 8011ae8:	603c      	streq	r4, [r7, #0]
 8011aea:	6038      	strne	r0, [r7, #0]
 8011aec:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 8011af0:	ea1c 0f01 	tst.w	ip, r1
 8011af4:	bf0c      	ite	eq
 8011af6:	603c      	streq	r4, [r7, #0]
 8011af8:	6038      	strne	r0, [r7, #0]
 8011afa:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 8011afe:	420d      	tst	r5, r1
 8011b00:	bf0c      	ite	eq
 8011b02:	603c      	streq	r4, [r7, #0]
 8011b04:	6038      	strne	r0, [r7, #0]
 8011b06:	420e      	tst	r6, r1
 8011b08:	bf0c      	ite	eq
 8011b0a:	601c      	streq	r4, [r3, #0]
 8011b0c:	6018      	strne	r0, [r3, #0]
 8011b0e:	3340      	adds	r3, #64	; 0x40
 8011b10:	429a      	cmp	r2, r3
 8011b12:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8011b16:	d1e2      	bne.n	8011ade <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x42>
 8011b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b1a:	bf00      	nop
 8011b1c:	2000128c 	andcs	r1, r0, ip, lsl #5
 8011b20:	e1100030 	tst	r0, r0, lsr r0

08011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8011b24:	b510      	push	{r4, lr}
 8011b26:	4a05      	ldr	r2, [pc, #20]	; (8011b3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8011b28:	2300      	movs	r3, #0
 8011b2a:	2020      	movs	r0, #32
 8011b2c:	428b      	cmp	r3, r1
 8011b2e:	d100      	bne.n	8011b32 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 8011b30:	bd10      	pop	{r4, pc}
 8011b32:	f852 4b04 	ldr.w	r4, [r2], #4
 8011b36:	3301      	adds	r3, #1
 8011b38:	4420      	add	r0, r4
 8011b3a:	e7f7      	b.n	8011b2c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 8011b3c:	0801b358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, sp, pc}

08011b40 <SpiFlashStore::Init()>:
 8011b40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b44:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8011c70 <SpiFlashStore::Init()+0x130>
 8011b48:	b085      	sub	sp, #20
 8011b4a:	4607      	mov	r7, r0
 8011b4c:	f8d8 0000 	ldr.w	r0, [r8]
 8011b50:	f000 fcd7 	bl	8012502 <FlashRom::GetSectorSize() const>
 8011b54:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8011b58:	4605      	mov	r5, r0
 8011b5a:	d17e      	bne.n	8011c5a <SpiFlashStore::Init()+0x11a>
 8011b5c:	f8d8 0000 	ldr.w	r0, [r8]
 8011b60:	f000 fccc 	bl	80124fc <FlashRom::GetSize() const>
 8011b64:	4b3e      	ldr	r3, [pc, #248]	; (8011c60 <SpiFlashStore::Init()+0x120>)
 8011b66:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8011b6a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8011b6e:	6019      	str	r1, [r3, #0]
 8011b70:	2e00      	cmp	r6, #0
 8011b72:	d172      	bne.n	8011c5a <SpiFlashStore::Init()+0x11a>
 8011b74:	4c3b      	ldr	r4, [pc, #236]	; (8011c64 <SpiFlashStore::Init()+0x124>)
 8011b76:	ab03      	add	r3, sp, #12
 8011b78:	9300      	str	r3, [sp, #0]
 8011b7a:	462a      	mov	r2, r5
 8011b7c:	4623      	mov	r3, r4
 8011b7e:	f8d8 0000 	ldr.w	r0, [r8]
 8011b82:	f000 fcc1 	bl	8012508 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 8011b86:	7823      	ldrb	r3, [r4, #0]
 8011b88:	2b41      	cmp	r3, #65	; 0x41
 8011b8a:	bf1c      	itt	ne
 8011b8c:	2341      	movne	r3, #65	; 0x41
 8011b8e:	7023      	strbne	r3, [r4, #0]
 8011b90:	7863      	ldrb	r3, [r4, #1]
 8011b92:	bf14      	ite	ne
 8011b94:	4635      	movne	r5, r6
 8011b96:	2501      	moveq	r5, #1
 8011b98:	2b76      	cmp	r3, #118	; 0x76
 8011b9a:	bf1c      	itt	ne
 8011b9c:	2376      	movne	r3, #118	; 0x76
 8011b9e:	7063      	strbne	r3, [r4, #1]
 8011ba0:	78a3      	ldrb	r3, [r4, #2]
 8011ba2:	bf18      	it	ne
 8011ba4:	2500      	movne	r5, #0
 8011ba6:	2b56      	cmp	r3, #86	; 0x56
 8011ba8:	bf1c      	itt	ne
 8011baa:	2356      	movne	r3, #86	; 0x56
 8011bac:	70a3      	strbne	r3, [r4, #2]
 8011bae:	78e3      	ldrb	r3, [r4, #3]
 8011bb0:	bf18      	it	ne
 8011bb2:	2500      	movne	r5, #0
 8011bb4:	2b10      	cmp	r3, #16
 8011bb6:	d023      	beq.n	8011c00 <SpiFlashStore::Init()+0xc0>
 8011bb8:	2310      	movs	r3, #16
 8011bba:	70e3      	strb	r3, [r4, #3]
 8011bbc:	4b2a      	ldr	r3, [pc, #168]	; (8011c68 <SpiFlashStore::Init()+0x128>)
 8011bbe:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8011c74 <SpiFlashStore::Init()+0x134>
 8011bc2:	2201      	movs	r2, #1
 8011bc4:	701a      	strb	r2, [r3, #0]
 8011bc6:	2500      	movs	r5, #0
 8011bc8:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8011bcc:	4631      	mov	r1, r6
 8011bce:	4638      	mov	r0, r7
 8011bd0:	f7ff ffa8 	bl	8011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8011bd4:	1821      	adds	r1, r4, r0
 8011bd6:	5425      	strb	r5, [r4, r0]
 8011bd8:	704d      	strb	r5, [r1, #1]
 8011bda:	708d      	strb	r5, [r1, #2]
 8011bdc:	70cd      	strb	r5, [r1, #3]
 8011bde:	f858 1b04 	ldr.w	r1, [r8], #4
 8011be2:	4603      	mov	r3, r0
 8011be4:	1d02      	adds	r2, r0, #4
 8011be6:	440b      	add	r3, r1
 8011be8:	429a      	cmp	r2, r3
 8011bea:	d332      	bcc.n	8011c52 <SpiFlashStore::Init()+0x112>
 8011bec:	3601      	adds	r6, #1
 8011bee:	2e1c      	cmp	r6, #28
 8011bf0:	d1ec      	bne.n	8011bcc <SpiFlashStore::Init()+0x8c>
 8011bf2:	4b1e      	ldr	r3, [pc, #120]	; (8011c6c <SpiFlashStore::Init()+0x12c>)
 8011bf4:	2501      	movs	r5, #1
 8011bf6:	601d      	str	r5, [r3, #0]
 8011bf8:	4628      	mov	r0, r5
 8011bfa:	b005      	add	sp, #20
 8011bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c00:	2d00      	cmp	r5, #0
 8011c02:	d0db      	beq.n	8011bbc <SpiFlashStore::Init()+0x7c>
 8011c04:	f04f 0900 	mov.w	r9, #0
 8011c08:	46c8      	mov	r8, r9
 8011c0a:	4631      	mov	r1, r6
 8011c0c:	4638      	mov	r0, r7
 8011c0e:	f7ff ff89 	bl	8011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8011c12:	5c23      	ldrb	r3, [r4, r0]
 8011c14:	2bff      	cmp	r3, #255	; 0xff
 8011c16:	d112      	bne.n	8011c3e <SpiFlashStore::Init()+0xfe>
 8011c18:	1823      	adds	r3, r4, r0
 8011c1a:	785a      	ldrb	r2, [r3, #1]
 8011c1c:	2aff      	cmp	r2, #255	; 0xff
 8011c1e:	d10e      	bne.n	8011c3e <SpiFlashStore::Init()+0xfe>
 8011c20:	789a      	ldrb	r2, [r3, #2]
 8011c22:	2aff      	cmp	r2, #255	; 0xff
 8011c24:	d10b      	bne.n	8011c3e <SpiFlashStore::Init()+0xfe>
 8011c26:	78da      	ldrb	r2, [r3, #3]
 8011c28:	2aff      	cmp	r2, #255	; 0xff
 8011c2a:	d108      	bne.n	8011c3e <SpiFlashStore::Init()+0xfe>
 8011c2c:	f804 8000 	strb.w	r8, [r4, r0]
 8011c30:	46a9      	mov	r9, r5
 8011c32:	f883 8001 	strb.w	r8, [r3, #1]
 8011c36:	f883 8002 	strb.w	r8, [r3, #2]
 8011c3a:	f883 8003 	strb.w	r8, [r3, #3]
 8011c3e:	3601      	adds	r6, #1
 8011c40:	2e1c      	cmp	r6, #28
 8011c42:	d1e2      	bne.n	8011c0a <SpiFlashStore::Init()+0xca>
 8011c44:	f1b9 0f00 	cmp.w	r9, #0
 8011c48:	d0d6      	beq.n	8011bf8 <SpiFlashStore::Init()+0xb8>
 8011c4a:	4b08      	ldr	r3, [pc, #32]	; (8011c6c <SpiFlashStore::Init()+0x12c>)
 8011c4c:	2201      	movs	r2, #1
 8011c4e:	601a      	str	r2, [r3, #0]
 8011c50:	e7d2      	b.n	8011bf8 <SpiFlashStore::Init()+0xb8>
 8011c52:	f804 9002 	strb.w	r9, [r4, r2]
 8011c56:	3201      	adds	r2, #1
 8011c58:	e7c6      	b.n	8011be8 <SpiFlashStore::Init()+0xa8>
 8011c5a:	2500      	movs	r5, #0
 8011c5c:	e7cc      	b.n	8011bf8 <SpiFlashStore::Init()+0xb8>
 8011c5e:	bf00      	nop
 8011c60:	20009290 	mulcs	r0, r0, r2
 8011c64:	40024000 	andmi	r4, r2, r0
 8011c68:	200092a4 	andcs	r9, r0, r4, lsr #5
 8011c6c:	2000929c 	mulcs	r0, ip, r2
 8011c70:	200092c4 	andcs	r9, r0, r4, asr #5
 8011c74:	0801b358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, sp, pc}

08011c78 <SpiFlashStore::SpiFlashStore()>:
 8011c78:	b538      	push	{r3, r4, r5, lr}
 8011c7a:	4b0d      	ldr	r3, [pc, #52]	; (8011cb0 <SpiFlashStore::SpiFlashStore()+0x38>)
 8011c7c:	4d0d      	ldr	r5, [pc, #52]	; (8011cb4 <SpiFlashStore::SpiFlashStore()+0x3c>)
 8011c7e:	6018      	str	r0, [r3, #0]
 8011c80:	4b0d      	ldr	r3, [pc, #52]	; (8011cb8 <SpiFlashStore::SpiFlashStore()+0x40>)
 8011c82:	681b      	ldr	r3, [r3, #0]
 8011c84:	7a9b      	ldrb	r3, [r3, #10]
 8011c86:	4604      	mov	r4, r0
 8011c88:	b113      	cbz	r3, 8011c90 <SpiFlashStore::SpiFlashStore()+0x18>
 8011c8a:	f7ff ff59 	bl	8011b40 <SpiFlashStore::Init()>
 8011c8e:	7028      	strb	r0, [r5, #0]
 8011c90:	782b      	ldrb	r3, [r5, #0]
 8011c92:	b153      	cbz	r3, 8011caa <SpiFlashStore::SpiFlashStore()+0x32>
 8011c94:	4909      	ldr	r1, [pc, #36]	; (8011cbc <SpiFlashStore::SpiFlashStore()+0x44>)
 8011c96:	2320      	movs	r3, #32
 8011c98:	2200      	movs	r2, #0
 8011c9a:	f851 0b04 	ldr.w	r0, [r1], #4
 8011c9e:	3201      	adds	r2, #1
 8011ca0:	2a1c      	cmp	r2, #28
 8011ca2:	4403      	add	r3, r0
 8011ca4:	d1f9      	bne.n	8011c9a <SpiFlashStore::SpiFlashStore()+0x22>
 8011ca6:	4a06      	ldr	r2, [pc, #24]	; (8011cc0 <SpiFlashStore::SpiFlashStore()+0x48>)
 8011ca8:	6013      	str	r3, [r2, #0]
 8011caa:	4620      	mov	r0, r4
 8011cac:	bd38      	pop	{r3, r4, r5, pc}
 8011cae:	bf00      	nop
 8011cb0:	200092a0 	andcs	r9, r0, r0, lsr #5
 8011cb4:	20009294 	mulcs	r0, r4, r2
 8011cb8:	200092c4 	andcs	r9, r0, r4, asr #5
 8011cbc:	0801b358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, sp, pc}
 8011cc0:	20009298 	mulcs	r0, r8, r2

08011cc4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 8011cc4:	b508      	push	{r3, lr}
 8011cc6:	f7ff ff2d 	bl	8011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8011cca:	4905      	ldr	r1, [pc, #20]	; (8011ce0 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 8011ccc:	1842      	adds	r2, r0, r1
 8011cce:	2300      	movs	r3, #0
 8011cd0:	540b      	strb	r3, [r1, r0]
 8011cd2:	7053      	strb	r3, [r2, #1]
 8011cd4:	7093      	strb	r3, [r2, #2]
 8011cd6:	70d3      	strb	r3, [r2, #3]
 8011cd8:	4b02      	ldr	r3, [pc, #8]	; (8011ce4 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 8011cda:	2201      	movs	r2, #1
 8011cdc:	601a      	str	r2, [r3, #0]
 8011cde:	bd08      	pop	{r3, pc}
 8011ce0:	40024000 	andmi	r4, r2, r0
 8011ce4:	2000929c 	mulcs	r0, ip, r2

08011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8011ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011cec:	461c      	mov	r4, r3
 8011cee:	4b19      	ldr	r3, [pc, #100]	; (8011d54 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8011cf0:	9d07      	ldr	r5, [sp, #28]
 8011cf2:	781f      	ldrb	r7, [r3, #0]
 8011cf4:	4616      	mov	r6, r2
 8011cf6:	b307      	cbz	r7, 8011d3a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8011cf8:	f7ff ff14 	bl	8011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8011cfc:	4a16      	ldr	r2, [pc, #88]	; (8011d58 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8011cfe:	1831      	adds	r1, r6, r0
 8011d00:	1e63      	subs	r3, r4, #1
 8011d02:	9c06      	ldr	r4, [sp, #24]
 8011d04:	4411      	add	r1, r2
 8011d06:	440c      	add	r4, r1
 8011d08:	f04f 0c00 	mov.w	ip, #0
 8011d0c:	42a1      	cmp	r1, r4
 8011d0e:	d116      	bne.n	8011d3e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8011d10:	f1bc 0f00 	cmp.w	ip, #0
 8011d14:	d011      	beq.n	8011d3a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8011d16:	4b11      	ldr	r3, [pc, #68]	; (8011d5c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8011d18:	6819      	ldr	r1, [r3, #0]
 8011d1a:	b109      	cbz	r1, 8011d20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8011d1c:	2906      	cmp	r1, #6
 8011d1e:	d101      	bne.n	8011d24 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8011d20:	2101      	movs	r1, #1
 8011d22:	6019      	str	r1, [r3, #0]
 8011d24:	4b0e      	ldr	r3, [pc, #56]	; (8011d60 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8011d26:	6819      	ldr	r1, [r3, #0]
 8011d28:	4b0e      	ldr	r3, [pc, #56]	; (8011d64 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8011d2a:	6019      	str	r1, [r3, #0]
 8011d2c:	b12e      	cbz	r6, 8011d3a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8011d2e:	b125      	cbz	r5, 8011d3a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8011d30:	9b08      	ldr	r3, [sp, #32]
 8011d32:	4418      	add	r0, r3
 8011d34:	5813      	ldr	r3, [r2, r0]
 8011d36:	432b      	orrs	r3, r5
 8011d38:	5013      	str	r3, [r2, r0]
 8011d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d3e:	f891 8000 	ldrb.w	r8, [r1]
 8011d42:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8011d46:	45f0      	cmp	r8, lr
 8011d48:	bf1c      	itt	ne
 8011d4a:	f881 e000 	strbne.w	lr, [r1]
 8011d4e:	46bc      	movne	ip, r7
 8011d50:	3101      	adds	r1, #1
 8011d52:	e7db      	b.n	8011d0c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8011d54:	20009294 	mulcs	r0, r4, r2
 8011d58:	40024000 	andmi	r4, r2, r0
 8011d5c:	2000929c 	mulcs	r0, ip, r2
 8011d60:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8011d64:	2000928c 	andcs	r9, r0, ip, lsl #5

08011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 8011d68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d6c:	461d      	mov	r5, r3
 8011d6e:	4b15      	ldr	r3, [pc, #84]	; (8011dc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8011d70:	b085      	sub	sp, #20
 8011d72:	781b      	ldrb	r3, [r3, #0]
 8011d74:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8011d78:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8011d7c:	4607      	mov	r7, r0
 8011d7e:	4614      	mov	r4, r2
 8011d80:	b193      	cbz	r3, 8011da8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8011d82:	f7ff fecf 	bl	8011b24 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8011d86:	4a10      	ldr	r2, [pc, #64]	; (8011dc8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8011d88:	eb08 0600 	add.w	r6, r8, r0
 8011d8c:	18b3      	adds	r3, r6, r2
 8011d8e:	f1b9 0f00 	cmp.w	r9, #0
 8011d92:	d013      	beq.n	8011dbc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8011d94:	5990      	ldr	r0, [r2, r6]
 8011d96:	b988      	cbnz	r0, 8011dbc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8011d98:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8011d9c:	9500      	str	r5, [sp, #0]
 8011d9e:	4623      	mov	r3, r4
 8011da0:	4642      	mov	r2, r8
 8011da2:	4638      	mov	r0, r7
 8011da4:	f7ff ffa0 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011da8:	b005      	add	sp, #20
 8011daa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dae:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011db2:	f804 2f01 	strb.w	r2, [r4, #1]!
 8011db6:	429d      	cmp	r5, r3
 8011db8:	d1f9      	bne.n	8011dae <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8011dba:	e7f5      	b.n	8011da8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8011dbc:	3c01      	subs	r4, #1
 8011dbe:	441d      	add	r5, r3
 8011dc0:	e7f9      	b.n	8011db6 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8011dc2:	bf00      	nop
 8011dc4:	20009294 	mulcs	r0, r4, r2
 8011dc8:	40024000 	andmi	r4, r2, r0

08011dcc <SpiFlashStore::Flash()>:
 8011dcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011dce:	4c25      	ldr	r4, [pc, #148]	; (8011e64 <SpiFlashStore::Flash()+0x98>)
 8011dd0:	6820      	ldr	r0, [r4, #0]
 8011dd2:	2800      	cmp	r0, #0
 8011dd4:	d043      	beq.n	8011e5e <SpiFlashStore::Flash()+0x92>
 8011dd6:	3801      	subs	r0, #1
 8011dd8:	2805      	cmp	r0, #5
 8011dda:	d831      	bhi.n	8011e40 <SpiFlashStore::Flash()+0x74>
 8011ddc:	e8df f000 	tbb	[pc, r0]
 8011de0:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8011de4:	4b203025 	blmi	881de80 <__exidx_end+0x801a10>
 8011de8:	681a      	ldr	r2, [r3, #0]
 8011dea:	4b20      	ldr	r3, [pc, #128]	; (8011e6c <SpiFlashStore::Flash()+0xa0>)
 8011dec:	601a      	str	r2, [r3, #0]
 8011dee:	2302      	movs	r3, #2
 8011df0:	6023      	str	r3, [r4, #0]
 8011df2:	2001      	movs	r0, #1
 8011df4:	e033      	b.n	8011e5e <SpiFlashStore::Flash()+0x92>
 8011df6:	4b1c      	ldr	r3, [pc, #112]	; (8011e68 <SpiFlashStore::Flash()+0x9c>)
 8011df8:	4a1c      	ldr	r2, [pc, #112]	; (8011e6c <SpiFlashStore::Flash()+0xa0>)
 8011dfa:	681b      	ldr	r3, [r3, #0]
 8011dfc:	6812      	ldr	r2, [r2, #0]
 8011dfe:	1a9b      	subs	r3, r3, r2
 8011e00:	2b63      	cmp	r3, #99	; 0x63
 8011e02:	d9f6      	bls.n	8011df2 <SpiFlashStore::Flash()+0x26>
 8011e04:	2303      	movs	r3, #3
 8011e06:	e7f3      	b.n	8011df0 <SpiFlashStore::Flash()+0x24>
 8011e08:	4919      	ldr	r1, [pc, #100]	; (8011e70 <SpiFlashStore::Flash()+0xa4>)
 8011e0a:	481a      	ldr	r0, [pc, #104]	; (8011e74 <SpiFlashStore::Flash()+0xa8>)
 8011e0c:	6809      	ldr	r1, [r1, #0]
 8011e0e:	6800      	ldr	r0, [r0, #0]
 8011e10:	ab03      	add	r3, sp, #12
 8011e12:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8011e16:	f000 fb9b 	bl	8012550 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 8011e1a:	2800      	cmp	r0, #0
 8011e1c:	d0e9      	beq.n	8011df2 <SpiFlashStore::Flash()+0x26>
 8011e1e:	4b12      	ldr	r3, [pc, #72]	; (8011e68 <SpiFlashStore::Flash()+0x9c>)
 8011e20:	681a      	ldr	r2, [r3, #0]
 8011e22:	4b12      	ldr	r3, [pc, #72]	; (8011e6c <SpiFlashStore::Flash()+0xa0>)
 8011e24:	601a      	str	r2, [r3, #0]
 8011e26:	2305      	movs	r3, #5
 8011e28:	e7e2      	b.n	8011df0 <SpiFlashStore::Flash()+0x24>
 8011e2a:	4b0f      	ldr	r3, [pc, #60]	; (8011e68 <SpiFlashStore::Flash()+0x9c>)
 8011e2c:	4a0f      	ldr	r2, [pc, #60]	; (8011e6c <SpiFlashStore::Flash()+0xa0>)
 8011e2e:	681b      	ldr	r3, [r3, #0]
 8011e30:	6812      	ldr	r2, [r2, #0]
 8011e32:	1a9b      	subs	r3, r3, r2
 8011e34:	2b63      	cmp	r3, #99	; 0x63
 8011e36:	d9dc      	bls.n	8011df2 <SpiFlashStore::Flash()+0x26>
 8011e38:	2304      	movs	r3, #4
 8011e3a:	e7d9      	b.n	8011df0 <SpiFlashStore::Flash()+0x24>
 8011e3c:	2306      	movs	r3, #6
 8011e3e:	e7d7      	b.n	8011df0 <SpiFlashStore::Flash()+0x24>
 8011e40:	ab03      	add	r3, sp, #12
 8011e42:	4a0d      	ldr	r2, [pc, #52]	; (8011e78 <SpiFlashStore::Flash()+0xac>)
 8011e44:	490a      	ldr	r1, [pc, #40]	; (8011e70 <SpiFlashStore::Flash()+0xa4>)
 8011e46:	480b      	ldr	r0, [pc, #44]	; (8011e74 <SpiFlashStore::Flash()+0xa8>)
 8011e48:	9300      	str	r3, [sp, #0]
 8011e4a:	6812      	ldr	r2, [r2, #0]
 8011e4c:	4b0b      	ldr	r3, [pc, #44]	; (8011e7c <SpiFlashStore::Flash()+0xb0>)
 8011e4e:	6809      	ldr	r1, [r1, #0]
 8011e50:	6800      	ldr	r0, [r0, #0]
 8011e52:	f000 fb81 	bl	8012558 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 8011e56:	2800      	cmp	r0, #0
 8011e58:	d0cb      	beq.n	8011df2 <SpiFlashStore::Flash()+0x26>
 8011e5a:	2000      	movs	r0, #0
 8011e5c:	6020      	str	r0, [r4, #0]
 8011e5e:	b004      	add	sp, #16
 8011e60:	bd10      	pop	{r4, pc}
 8011e62:	bf00      	nop
 8011e64:	2000929c 	mulcs	r0, ip, r2
 8011e68:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8011e6c:	2000928c 	andcs	r9, r0, ip, lsl #5
 8011e70:	20009290 	mulcs	r0, r0, r2
 8011e74:	200092c4 	andcs	r9, r0, r4, asr #5
 8011e78:	20009298 	mulcs	r0, r8, r2
 8011e7c:	40024000 	andmi	r4, r2, r0

08011e80 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8011e80:	4770      	bx	lr
	...

08011e84 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8011e84:	b507      	push	{r0, r1, r2, lr}
 8011e86:	2300      	movs	r3, #0
 8011e88:	460a      	mov	r2, r1
 8011e8a:	2101      	movs	r1, #1
 8011e8c:	e9cd 3100 	strd	r3, r1, [sp]
 8011e90:	4804      	ldr	r0, [pc, #16]	; (8011ea4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 8011e92:	2322      	movs	r3, #34	; 0x22
 8011e94:	6800      	ldr	r0, [r0, #0]
 8011e96:	210f      	movs	r1, #15
 8011e98:	f7ff ff66 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8011e9c:	b003      	add	sp, #12
 8011e9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011ea2:	bf00      	nop
 8011ea4:	200092a0 	andcs	r9, r0, r0, lsr #5

08011ea8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8011ea8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011eaa:	2200      	movs	r2, #0
 8011eac:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8011eb0:	460b      	mov	r3, r1
 8011eb2:	4805      	ldr	r0, [pc, #20]	; (8011ec8 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8011eb4:	2122      	movs	r1, #34	; 0x22
 8011eb6:	9100      	str	r1, [sp, #0]
 8011eb8:	6800      	ldr	r0, [r0, #0]
 8011eba:	210f      	movs	r1, #15
 8011ebc:	f7ff ff14 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011ec0:	b005      	add	sp, #20
 8011ec2:	f85d fb04 	ldr.w	pc, [sp], #4
 8011ec6:	bf00      	nop
 8011ec8:	200092a0 	andcs	r9, r0, r0, lsr #5

08011ecc <StoreDisplayUdf::~StoreDisplayUdf()>:
 8011ecc:	b510      	push	{r4, lr}
 8011ece:	4604      	mov	r4, r0
 8011ed0:	f004 f838 	bl	8015f44 <operator delete(void*)>
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	bd10      	pop	{r4, pc}

08011ed8 <StoreDisplayUdf::StoreDisplayUdf()>:
 8011ed8:	4a02      	ldr	r2, [pc, #8]	; (8011ee4 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 8011eda:	6002      	str	r2, [r0, #0]
 8011edc:	4a02      	ldr	r2, [pc, #8]	; (8011ee8 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 8011ede:	6010      	str	r0, [r2, #0]
 8011ee0:	4770      	bx	lr
 8011ee2:	bf00      	nop
 8011ee4:	0801b3d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, ip, sp, pc}
 8011ee8:	200092a8 	andcs	r9, r0, r8, lsr #5

08011eec <StoreDmxSend::~StoreDmxSend()>:
 8011eec:	4770      	bx	lr
	...

08011ef0 <StoreDmxSend::Copy(TDmxParams*)>:
 8011ef0:	b507      	push	{r0, r1, r2, lr}
 8011ef2:	2300      	movs	r3, #0
 8011ef4:	460a      	mov	r2, r1
 8011ef6:	2101      	movs	r1, #1
 8011ef8:	e9cd 3100 	strd	r3, r1, [sp]
 8011efc:	4804      	ldr	r0, [pc, #16]	; (8011f10 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 8011efe:	230a      	movs	r3, #10
 8011f00:	6800      	ldr	r0, [r0, #0]
 8011f02:	2102      	movs	r1, #2
 8011f04:	f7ff ff30 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8011f08:	b003      	add	sp, #12
 8011f0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f0e:	bf00      	nop
 8011f10:	200092a0 	andcs	r9, r0, r0, lsr #5

08011f14 <StoreDmxSend::Update(TDmxParams const*)>:
 8011f14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011f16:	2200      	movs	r2, #0
 8011f18:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8011f1c:	460b      	mov	r3, r1
 8011f1e:	4805      	ldr	r0, [pc, #20]	; (8011f34 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 8011f20:	210a      	movs	r1, #10
 8011f22:	9100      	str	r1, [sp, #0]
 8011f24:	6800      	ldr	r0, [r0, #0]
 8011f26:	2102      	movs	r1, #2
 8011f28:	f7ff fede 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011f2c:	b005      	add	sp, #20
 8011f2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f32:	bf00      	nop
 8011f34:	200092a0 	andcs	r9, r0, r0, lsr #5

08011f38 <StoreDmxSend::~StoreDmxSend()>:
 8011f38:	b510      	push	{r4, lr}
 8011f3a:	4604      	mov	r4, r0
 8011f3c:	f004 f802 	bl	8015f44 <operator delete(void*)>
 8011f40:	4620      	mov	r0, r4
 8011f42:	bd10      	pop	{r4, pc}

08011f44 <StoreDmxSend::StoreDmxSend()>:
 8011f44:	4a02      	ldr	r2, [pc, #8]	; (8011f50 <StoreDmxSend::StoreDmxSend()+0xc>)
 8011f46:	6002      	str	r2, [r0, #0]
 8011f48:	4a02      	ldr	r2, [pc, #8]	; (8011f54 <StoreDmxSend::StoreDmxSend()+0x10>)
 8011f4a:	6010      	str	r0, [r2, #0]
 8011f4c:	4770      	bx	lr
 8011f4e:	bf00      	nop
 8011f50:	0801b3e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, ip, sp, pc}
 8011f54:	200092ac 	andcs	r9, r0, ip, lsr #5

08011f58 <StoreNetwork::~StoreNetwork()>:
 8011f58:	4770      	bx	lr

08011f5a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8011f5a:	3804      	subs	r0, #4
 8011f5c:	4770      	bx	lr
	...

08011f60 <StoreNetwork::Update(networkparams::Params const*)>:
 8011f60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011f62:	2200      	movs	r2, #0
 8011f64:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8011f68:	460b      	mov	r3, r1
 8011f6a:	4805      	ldr	r0, [pc, #20]	; (8011f80 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 8011f6c:	215e      	movs	r1, #94	; 0x5e
 8011f6e:	9100      	str	r1, [sp, #0]
 8011f70:	6800      	ldr	r0, [r0, #0]
 8011f72:	4611      	mov	r1, r2
 8011f74:	f7ff feb8 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011f78:	b005      	add	sp, #20
 8011f7a:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f7e:	bf00      	nop
 8011f80:	200092a0 	andcs	r9, r0, r0, lsr #5

08011f84 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 8011f84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011f86:	2308      	movs	r3, #8
 8011f88:	9105      	str	r1, [sp, #20]
 8011f8a:	2100      	movs	r1, #0
 8011f8c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011f90:	4805      	ldr	r0, [pc, #20]	; (8011fa8 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 8011f92:	2304      	movs	r3, #4
 8011f94:	9300      	str	r3, [sp, #0]
 8011f96:	6800      	ldr	r0, [r0, #0]
 8011f98:	ab05      	add	r3, sp, #20
 8011f9a:	220c      	movs	r2, #12
 8011f9c:	f7ff fea4 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011fa0:	b007      	add	sp, #28
 8011fa2:	f85d fb04 	ldr.w	pc, [sp], #4
 8011fa6:	bf00      	nop
 8011fa8:	200092a0 	andcs	r9, r0, r0, lsr #5

08011fac <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 8011fac:	f1a0 0004 	sub.w	r0, r0, #4
 8011fb0:	e7e8      	b.n	8011f84 <StoreNetwork::SaveGatewayIp(unsigned int)>
 8011fb2:	bf00      	nop

08011fb4 <StoreNetwork::SaveNetMask(unsigned int)>:
 8011fb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011fb6:	2304      	movs	r3, #4
 8011fb8:	9105      	str	r1, [sp, #20]
 8011fba:	2100      	movs	r1, #0
 8011fbc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011fc0:	4804      	ldr	r0, [pc, #16]	; (8011fd4 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8011fc2:	9300      	str	r3, [sp, #0]
 8011fc4:	6800      	ldr	r0, [r0, #0]
 8011fc6:	ab05      	add	r3, sp, #20
 8011fc8:	2208      	movs	r2, #8
 8011fca:	f7ff fe8d 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011fce:	b007      	add	sp, #28
 8011fd0:	f85d fb04 	ldr.w	pc, [sp], #4
 8011fd4:	200092a0 	andcs	r9, r0, r0, lsr #5

08011fd8 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8011fd8:	f1a0 0004 	sub.w	r0, r0, #4
 8011fdc:	e7ea      	b.n	8011fb4 <StoreNetwork::SaveNetMask(unsigned int)>
 8011fde:	bf00      	nop

08011fe0 <StoreNetwork::SaveIp(unsigned int)>:
 8011fe0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011fe2:	2302      	movs	r3, #2
 8011fe4:	9105      	str	r1, [sp, #20]
 8011fe6:	2100      	movs	r1, #0
 8011fe8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011fec:	2204      	movs	r2, #4
 8011fee:	4804      	ldr	r0, [pc, #16]	; (8012000 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8011ff0:	9200      	str	r2, [sp, #0]
 8011ff2:	6800      	ldr	r0, [r0, #0]
 8011ff4:	ab05      	add	r3, sp, #20
 8011ff6:	f7ff fe77 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011ffa:	b007      	add	sp, #28
 8011ffc:	f85d fb04 	ldr.w	pc, [sp], #4
 8012000:	200092a0 	andcs	r9, r0, r0, lsr #5

08012004 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8012004:	f1a0 0004 	sub.w	r0, r0, #4
 8012008:	e7ea      	b.n	8011fe0 <StoreNetwork::SaveIp(unsigned int)>
 801200a:	bf00      	nop

0801200c <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 801200c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801200e:	460b      	mov	r3, r1
 8012010:	2000      	movs	r0, #0
 8012012:	2120      	movs	r1, #32
 8012014:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8012018:	2a40      	cmp	r2, #64	; 0x40
 801201a:	bf28      	it	cs
 801201c:	2240      	movcs	r2, #64	; 0x40
 801201e:	4601      	mov	r1, r0
 8012020:	4804      	ldr	r0, [pc, #16]	; (8012034 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x28>)
 8012022:	9200      	str	r2, [sp, #0]
 8012024:	6800      	ldr	r0, [r0, #0]
 8012026:	2215      	movs	r2, #21
 8012028:	f7ff fe5e 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801202c:	b005      	add	sp, #20
 801202e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012032:	bf00      	nop
 8012034:	200092a0 	andcs	r9, r0, r0, lsr #5

08012038 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8012038:	f1a0 0004 	sub.w	r0, r0, #4
 801203c:	e7e6      	b.n	801200c <StoreNetwork::SaveHostName(char const*, unsigned int)>
 801203e:	bf00      	nop

08012040 <StoreNetwork::~StoreNetwork()>:
 8012040:	b510      	push	{r4, lr}
 8012042:	4604      	mov	r4, r0
 8012044:	f003 ff7e 	bl	8015f44 <operator delete(void*)>
 8012048:	4620      	mov	r0, r4
 801204a:	bd10      	pop	{r4, pc}

0801204c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 801204c:	f1a0 0004 	sub.w	r0, r0, #4
 8012050:	e7f6      	b.n	8012040 <StoreNetwork::~StoreNetwork()>
	...

08012054 <StoreNetwork::Copy(networkparams::Params*)>:
 8012054:	b507      	push	{r0, r1, r2, lr}
 8012056:	2301      	movs	r3, #1
 8012058:	460a      	mov	r2, r1
 801205a:	2100      	movs	r1, #0
 801205c:	e9cd 1300 	strd	r1, r3, [sp]
 8012060:	4803      	ldr	r0, [pc, #12]	; (8012070 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 8012062:	235e      	movs	r3, #94	; 0x5e
 8012064:	6800      	ldr	r0, [r0, #0]
 8012066:	f7ff fe7f 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 801206a:	b003      	add	sp, #12
 801206c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012070:	200092a0 	andcs	r9, r0, r0, lsr #5

08012074 <StoreNetwork::StoreNetwork()>:
 8012074:	4a03      	ldr	r2, [pc, #12]	; (8012084 <StoreNetwork::StoreNetwork()+0x10>)
 8012076:	6002      	str	r2, [r0, #0]
 8012078:	322c      	adds	r2, #44	; 0x2c
 801207a:	6042      	str	r2, [r0, #4]
 801207c:	4a02      	ldr	r2, [pc, #8]	; (8012088 <StoreNetwork::StoreNetwork()+0x14>)
 801207e:	6010      	str	r0, [r2, #0]
 8012080:	4770      	bx	lr
 8012082:	bf00      	nop
 8012084:	0801b400 	stmdaeq	r1, {sl, ip, sp, pc}
 8012088:	200092b0 			; <UNDEFINED> instruction: 0x200092b0

0801208c <StoreRDMDevice::~StoreRDMDevice()>:
 801208c:	4770      	bx	lr

0801208e <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 801208e:	3804      	subs	r0, #4
 8012090:	4770      	bx	lr
	...

08012094 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8012094:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012096:	2200      	movs	r2, #0
 8012098:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801209c:	460b      	mov	r3, r1
 801209e:	4805      	ldr	r0, [pc, #20]	; (80120b4 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 80120a0:	2129      	movs	r1, #41	; 0x29
 80120a2:	9100      	str	r1, [sp, #0]
 80120a4:	6800      	ldr	r0, [r0, #0]
 80120a6:	210b      	movs	r1, #11
 80120a8:	f7ff fe1e 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80120ac:	b005      	add	sp, #20
 80120ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80120b2:	bf00      	nop
 80120b4:	200092a0 	andcs	r9, r0, r0, lsr #5

080120b8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80120b8:	b570      	push	{r4, r5, r6, lr}
 80120ba:	4d0d      	ldr	r5, [pc, #52]	; (80120f0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 80120bc:	b086      	sub	sp, #24
 80120be:	2401      	movs	r4, #1
 80120c0:	2600      	movs	r6, #0
 80120c2:	6828      	ldr	r0, [r5, #0]
 80120c4:	f88d 2017 	strb.w	r2, [sp, #23]
 80120c8:	460b      	mov	r3, r1
 80120ca:	9200      	str	r2, [sp, #0]
 80120cc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80120d0:	2204      	movs	r2, #4
 80120d2:	210b      	movs	r1, #11
 80120d4:	f7ff fe08 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80120d8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80120dc:	6828      	ldr	r0, [r5, #0]
 80120de:	9400      	str	r4, [sp, #0]
 80120e0:	f10d 0317 	add.w	r3, sp, #23
 80120e4:	2224      	movs	r2, #36	; 0x24
 80120e6:	210b      	movs	r1, #11
 80120e8:	f7ff fdfe 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80120ec:	b006      	add	sp, #24
 80120ee:	bd70      	pop	{r4, r5, r6, pc}
 80120f0:	200092a0 	andcs	r9, r0, r0, lsr #5

080120f4 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80120f4:	f1a0 0004 	sub.w	r0, r0, #4
 80120f8:	e7de      	b.n	80120b8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 80120fa:	bf00      	nop

080120fc <StoreRDMDevice::~StoreRDMDevice()>:
 80120fc:	b510      	push	{r4, lr}
 80120fe:	4604      	mov	r4, r0
 8012100:	f003 ff20 	bl	8015f44 <operator delete(void*)>
 8012104:	4620      	mov	r0, r4
 8012106:	bd10      	pop	{r4, pc}

08012108 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8012108:	f1a0 0004 	sub.w	r0, r0, #4
 801210c:	e7f6      	b.n	80120fc <StoreRDMDevice::~StoreRDMDevice()>
	...

08012110 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8012110:	b507      	push	{r0, r1, r2, lr}
 8012112:	2300      	movs	r3, #0
 8012114:	460a      	mov	r2, r1
 8012116:	2101      	movs	r1, #1
 8012118:	e9cd 3100 	strd	r3, r1, [sp]
 801211c:	4804      	ldr	r0, [pc, #16]	; (8012130 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 801211e:	2329      	movs	r3, #41	; 0x29
 8012120:	6800      	ldr	r0, [r0, #0]
 8012122:	210b      	movs	r1, #11
 8012124:	f7ff fe20 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8012128:	b003      	add	sp, #12
 801212a:	f85d fb04 	ldr.w	pc, [sp], #4
 801212e:	bf00      	nop
 8012130:	200092a0 	andcs	r9, r0, r0, lsr #5

08012134 <StoreRDMDevice::StoreRDMDevice()>:
 8012134:	4a03      	ldr	r2, [pc, #12]	; (8012144 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8012136:	6002      	str	r2, [r0, #0]
 8012138:	321c      	adds	r2, #28
 801213a:	6042      	str	r2, [r0, #4]
 801213c:	4a02      	ldr	r2, [pc, #8]	; (8012148 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 801213e:	6010      	str	r0, [r2, #0]
 8012140:	4770      	bx	lr
 8012142:	bf00      	nop
 8012144:	0801b450 	stmdaeq	r1, {r4, r6, sl, ip, sp, pc}
 8012148:	200092b4 			; <UNDEFINED> instruction: 0x200092b4

0801214c <StoreRemoteConfig::~StoreRemoteConfig()>:
 801214c:	4770      	bx	lr
	...

08012150 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8012150:	b507      	push	{r0, r1, r2, lr}
 8012152:	2300      	movs	r3, #0
 8012154:	460a      	mov	r2, r1
 8012156:	2101      	movs	r1, #1
 8012158:	e9cd 3100 	strd	r3, r1, [sp]
 801215c:	4804      	ldr	r0, [pc, #16]	; (8012170 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 801215e:	2320      	movs	r3, #32
 8012160:	6800      	ldr	r0, [r0, #0]
 8012162:	210c      	movs	r1, #12
 8012164:	f7ff fe00 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8012168:	b003      	add	sp, #12
 801216a:	f85d fb04 	ldr.w	pc, [sp], #4
 801216e:	bf00      	nop
 8012170:	200092a0 	andcs	r9, r0, r0, lsr #5

08012174 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8012174:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012176:	2200      	movs	r2, #0
 8012178:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801217c:	460b      	mov	r3, r1
 801217e:	4805      	ldr	r0, [pc, #20]	; (8012194 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8012180:	2120      	movs	r1, #32
 8012182:	9100      	str	r1, [sp, #0]
 8012184:	6800      	ldr	r0, [r0, #0]
 8012186:	210c      	movs	r1, #12
 8012188:	f7ff fdae 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801218c:	b005      	add	sp, #20
 801218e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012192:	bf00      	nop
 8012194:	200092a0 	andcs	r9, r0, r0, lsr #5

08012198 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8012198:	b510      	push	{r4, lr}
 801219a:	4604      	mov	r4, r0
 801219c:	f003 fed2 	bl	8015f44 <operator delete(void*)>
 80121a0:	4620      	mov	r0, r4
 80121a2:	bd10      	pop	{r4, pc}

080121a4 <StoreRemoteConfig::StoreRemoteConfig()>:
 80121a4:	4a02      	ldr	r2, [pc, #8]	; (80121b0 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 80121a6:	6002      	str	r2, [r0, #0]
 80121a8:	4a02      	ldr	r2, [pc, #8]	; (80121b4 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 80121aa:	6010      	str	r0, [r2, #0]
 80121ac:	4770      	bx	lr
 80121ae:	bf00      	nop
 80121b0:	0801b480 	stmdaeq	r1, {r7, sl, ip, sp, pc}
 80121b4:	200092b8 			; <UNDEFINED> instruction: 0x200092b8

080121b8 <StoreE131::~StoreE131()>:
 80121b8:	4770      	bx	lr
	...

080121bc <StoreE131::Copy(e131params::Params*)>:
 80121bc:	b507      	push	{r0, r1, r2, lr}
 80121be:	2300      	movs	r3, #0
 80121c0:	460a      	mov	r2, r1
 80121c2:	2101      	movs	r1, #1
 80121c4:	e9cd 3100 	strd	r3, r1, [sp]
 80121c8:	4804      	ldr	r0, [pc, #16]	; (80121dc <StoreE131::Copy(e131params::Params*)+0x20>)
 80121ca:	231f      	movs	r3, #31
 80121cc:	6800      	ldr	r0, [r0, #0]
 80121ce:	2104      	movs	r1, #4
 80121d0:	f7ff fdca 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80121d4:	b003      	add	sp, #12
 80121d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80121da:	bf00      	nop
 80121dc:	200092a0 	andcs	r9, r0, r0, lsr #5

080121e0 <StoreE131::Update(e131params::Params const*)>:
 80121e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80121e2:	2200      	movs	r2, #0
 80121e4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80121e8:	460b      	mov	r3, r1
 80121ea:	4805      	ldr	r0, [pc, #20]	; (8012200 <StoreE131::Update(e131params::Params const*)+0x20>)
 80121ec:	211f      	movs	r1, #31
 80121ee:	9100      	str	r1, [sp, #0]
 80121f0:	6800      	ldr	r0, [r0, #0]
 80121f2:	2104      	movs	r1, #4
 80121f4:	f7ff fd78 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80121f8:	b005      	add	sp, #20
 80121fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80121fe:	bf00      	nop
 8012200:	200092a0 	andcs	r9, r0, r0, lsr #5

08012204 <StoreE131::~StoreE131()>:
 8012204:	b510      	push	{r4, lr}
 8012206:	4604      	mov	r4, r0
 8012208:	f003 fe9c 	bl	8015f44 <operator delete(void*)>
 801220c:	4620      	mov	r0, r4
 801220e:	bd10      	pop	{r4, pc}

08012210 <StoreE131::StoreE131()>:
 8012210:	4a02      	ldr	r2, [pc, #8]	; (801221c <StoreE131::StoreE131()+0xc>)
 8012212:	6002      	str	r2, [r0, #0]
 8012214:	4a02      	ldr	r2, [pc, #8]	; (8012220 <StoreE131::StoreE131()+0x10>)
 8012216:	6010      	str	r0, [r2, #0]
 8012218:	4770      	bx	lr
 801221a:	bf00      	nop
 801221c:	0801b498 	stmdaeq	r1, {r3, r4, r7, sl, ip, sp, pc}
 8012220:	200092bc 			; <UNDEFINED> instruction: 0x200092bc

08012224 <StorePixelDmx::~StorePixelDmx()>:
 8012224:	4770      	bx	lr

08012226 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8012226:	3804      	subs	r0, #4
 8012228:	4770      	bx	lr
	...

0801222c <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 801222c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801222e:	2200      	movs	r2, #0
 8012230:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8012234:	460b      	mov	r3, r1
 8012236:	4805      	ldr	r0, [pc, #20]	; (801224c <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8012238:	2136      	movs	r1, #54	; 0x36
 801223a:	9100      	str	r1, [sp, #0]
 801223c:	6800      	ldr	r0, [r0, #0]
 801223e:	2103      	movs	r1, #3
 8012240:	f7ff fd52 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012244:	b005      	add	sp, #20
 8012246:	f85d fb04 	ldr.w	pc, [sp], #4
 801224a:	bf00      	nop
 801224c:	200092a0 	andcs	r9, r0, r0, lsr #5

08012250 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8012250:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012252:	2304      	movs	r3, #4
 8012254:	2200      	movs	r2, #0
 8012256:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801225a:	4807      	ldr	r0, [pc, #28]	; (8012278 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 801225c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012260:	2302      	movs	r3, #2
 8012262:	9300      	str	r3, [sp, #0]
 8012264:	6800      	ldr	r0, [r0, #0]
 8012266:	f10d 0316 	add.w	r3, sp, #22
 801226a:	2207      	movs	r2, #7
 801226c:	2103      	movs	r1, #3
 801226e:	f7ff fd3b 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012272:	b007      	add	sp, #28
 8012274:	f85d fb04 	ldr.w	pc, [sp], #4
 8012278:	200092a0 	andcs	r9, r0, r0, lsr #5

0801227c <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 801227c:	f1a0 0004 	sub.w	r0, r0, #4
 8012280:	e7e6      	b.n	8012250 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 8012282:	bf00      	nop

08012284 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8012284:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012286:	2308      	movs	r3, #8
 8012288:	2200      	movs	r2, #0
 801228a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801228e:	4807      	ldr	r0, [pc, #28]	; (80122ac <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 8012290:	f88d 1017 	strb.w	r1, [sp, #23]
 8012294:	2301      	movs	r3, #1
 8012296:	9300      	str	r3, [sp, #0]
 8012298:	6800      	ldr	r0, [r0, #0]
 801229a:	f10d 0317 	add.w	r3, sp, #23
 801229e:	2210      	movs	r2, #16
 80122a0:	2103      	movs	r1, #3
 80122a2:	f7ff fd21 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80122a6:	b007      	add	sp, #28
 80122a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80122ac:	200092a0 	andcs	r9, r0, r0, lsr #5

080122b0 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 80122b0:	f1a0 0004 	sub.w	r0, r0, #4
 80122b4:	e7e6      	b.n	8012284 <StorePixelDmx::SaveTestPattern(unsigned char)>
 80122b6:	bf00      	nop

080122b8 <StorePixelDmx::SaveMap(unsigned char)>:
 80122b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80122ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 80122be:	2200      	movs	r2, #0
 80122c0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80122c4:	4807      	ldr	r0, [pc, #28]	; (80122e4 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 80122c6:	f88d 1017 	strb.w	r1, [sp, #23]
 80122ca:	2301      	movs	r3, #1
 80122cc:	9300      	str	r3, [sp, #0]
 80122ce:	6800      	ldr	r0, [r0, #0]
 80122d0:	f10d 0317 	add.w	r3, sp, #23
 80122d4:	2213      	movs	r2, #19
 80122d6:	2103      	movs	r1, #3
 80122d8:	f7ff fd06 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80122dc:	b007      	add	sp, #28
 80122de:	f85d fb04 	ldr.w	pc, [sp], #4
 80122e2:	bf00      	nop
 80122e4:	200092a0 	andcs	r9, r0, r0, lsr #5

080122e8 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 80122e8:	f1a0 0004 	sub.w	r0, r0, #4
 80122ec:	e7e4      	b.n	80122b8 <StorePixelDmx::SaveMap(unsigned char)>
 80122ee:	bf00      	nop

080122f0 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 80122f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80122f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80122f6:	2200      	movs	r2, #0
 80122f8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80122fc:	4807      	ldr	r0, [pc, #28]	; (801231c <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 80122fe:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012302:	2302      	movs	r3, #2
 8012304:	9300      	str	r3, [sp, #0]
 8012306:	6800      	ldr	r0, [r0, #0]
 8012308:	f10d 0316 	add.w	r3, sp, #22
 801230c:	2211      	movs	r2, #17
 801230e:	2103      	movs	r1, #3
 8012310:	f7ff fcea 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012314:	b007      	add	sp, #28
 8012316:	f85d fb04 	ldr.w	pc, [sp], #4
 801231a:	bf00      	nop
 801231c:	200092a0 	andcs	r9, r0, r0, lsr #5

08012320 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8012320:	f1a0 0004 	sub.w	r0, r0, #4
 8012324:	e7e4      	b.n	80122f0 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 8012326:	bf00      	nop

08012328 <StorePixelDmx::SaveCount(unsigned short)>:
 8012328:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801232a:	2302      	movs	r3, #2
 801232c:	2200      	movs	r2, #0
 801232e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8012332:	4807      	ldr	r0, [pc, #28]	; (8012350 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8012334:	9300      	str	r3, [sp, #0]
 8012336:	f8ad 1016 	strh.w	r1, [sp, #22]
 801233a:	6800      	ldr	r0, [r0, #0]
 801233c:	f10d 0316 	add.w	r3, sp, #22
 8012340:	2205      	movs	r2, #5
 8012342:	2103      	movs	r1, #3
 8012344:	f7ff fcd0 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8012348:	b007      	add	sp, #28
 801234a:	f85d fb04 	ldr.w	pc, [sp], #4
 801234e:	bf00      	nop
 8012350:	200092a0 	andcs	r9, r0, r0, lsr #5

08012354 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8012354:	f1a0 0004 	sub.w	r0, r0, #4
 8012358:	e7e6      	b.n	8012328 <StorePixelDmx::SaveCount(unsigned short)>
 801235a:	bf00      	nop

0801235c <StorePixelDmx::SaveType(unsigned char)>:
 801235c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801235e:	2301      	movs	r3, #1
 8012360:	2200      	movs	r2, #0
 8012362:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8012366:	4807      	ldr	r0, [pc, #28]	; (8012384 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8012368:	9300      	str	r3, [sp, #0]
 801236a:	f88d 1017 	strb.w	r1, [sp, #23]
 801236e:	6800      	ldr	r0, [r0, #0]
 8012370:	f10d 0317 	add.w	r3, sp, #23
 8012374:	2204      	movs	r2, #4
 8012376:	2103      	movs	r1, #3
 8012378:	f7ff fcb6 	bl	8011ce8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801237c:	b007      	add	sp, #28
 801237e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012382:	bf00      	nop
 8012384:	200092a0 	andcs	r9, r0, r0, lsr #5

08012388 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8012388:	f1a0 0004 	sub.w	r0, r0, #4
 801238c:	e7e6      	b.n	801235c <StorePixelDmx::SaveType(unsigned char)>
 801238e:	bf00      	nop

08012390 <StorePixelDmx::~StorePixelDmx()>:
 8012390:	b510      	push	{r4, lr}
 8012392:	4604      	mov	r4, r0
 8012394:	f003 fdd6 	bl	8015f44 <operator delete(void*)>
 8012398:	4620      	mov	r0, r4
 801239a:	bd10      	pop	{r4, pc}

0801239c <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 801239c:	f1a0 0004 	sub.w	r0, r0, #4
 80123a0:	e7f6      	b.n	8012390 <StorePixelDmx::~StorePixelDmx()>
	...

080123a4 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 80123a4:	b507      	push	{r0, r1, r2, lr}
 80123a6:	2300      	movs	r3, #0
 80123a8:	460a      	mov	r2, r1
 80123aa:	2101      	movs	r1, #1
 80123ac:	e9cd 3100 	strd	r3, r1, [sp]
 80123b0:	4804      	ldr	r0, [pc, #16]	; (80123c4 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 80123b2:	2336      	movs	r3, #54	; 0x36
 80123b4:	6800      	ldr	r0, [r0, #0]
 80123b6:	2103      	movs	r1, #3
 80123b8:	f7ff fcd6 	bl	8011d68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80123bc:	b003      	add	sp, #12
 80123be:	f85d fb04 	ldr.w	pc, [sp], #4
 80123c2:	bf00      	nop
 80123c4:	200092a0 	andcs	r9, r0, r0, lsr #5

080123c8 <StorePixelDmx::StorePixelDmx()>:
 80123c8:	4a03      	ldr	r2, [pc, #12]	; (80123d8 <StorePixelDmx::StorePixelDmx()+0x10>)
 80123ca:	6002      	str	r2, [r0, #0]
 80123cc:	3230      	adds	r2, #48	; 0x30
 80123ce:	6042      	str	r2, [r0, #4]
 80123d0:	4a02      	ldr	r2, [pc, #8]	; (80123dc <StorePixelDmx::StorePixelDmx()+0x14>)
 80123d2:	6010      	str	r0, [r2, #0]
 80123d4:	4770      	bx	lr
 80123d6:	bf00      	nop
 80123d8:	0801b4b0 	stmdaeq	r1, {r4, r5, r7, sl, ip, sp, pc}
 80123dc:	200092c0 	andcs	r9, r0, r0, asr #5

080123e0 <HAL_I2C::Setup()>:
 80123e0:	b510      	push	{r4, lr}
 80123e2:	4604      	mov	r4, r0
 80123e4:	7800      	ldrb	r0, [r0, #0]
 80123e6:	f004 ff5d 	bl	80172a4 <gd32_i2c_set_address>
 80123ea:	6860      	ldr	r0, [r4, #4]
 80123ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123f0:	f004 bf50 	b.w	8017294 <gd32_i2c_set_baudrate>

080123f4 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>:
 80123f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123f8:	b08d      	sub	sp, #52	; 0x34
 80123fa:	4606      	mov	r6, r0
 80123fc:	9301      	str	r3, [sp, #4]
 80123fe:	7a03      	ldrb	r3, [r0, #8]
 8012400:	460c      	mov	r4, r1
 8012402:	4617      	mov	r7, r2
 8012404:	2b00      	cmp	r3, #0
 8012406:	d13c      	bne.n	8012482 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8012408:	b00d      	add	sp, #52	; 0x34
 801240a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801240e:	2101      	movs	r1, #1
 8012410:	4640      	mov	r0, r8
 8012412:	f004 ffb3 	bl	801737c <gd32_i2c_read>
 8012416:	2800      	cmp	r0, #0
 8012418:	d1f9      	bne.n	801240e <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 801241a:	7a73      	ldrb	r3, [r6, #9]
 801241c:	f8cd 9008 	str.w	r9, [sp, #8]
 8012420:	2d1d      	cmp	r5, #29
 8012422:	bf8c      	ite	hi
 8012424:	a902      	addhi	r1, sp, #8
 8012426:	a901      	addls	r1, sp, #4
 8012428:	fbb4 f2f3 	udiv	r2, r4, r3
 801242c:	fb03 4212 	mls	r2, r3, r2, r4
 8012430:	1a9b      	subs	r3, r3, r2
 8012432:	680a      	ldr	r2, [r1, #0]
 8012434:	9303      	str	r3, [sp, #12]
 8012436:	4293      	cmp	r3, r2
 8012438:	bf98      	it	ls
 801243a:	4641      	movls	r1, r8
 801243c:	ba63      	rev16	r3, r4
 801243e:	f8d1 a000 	ldr.w	sl, [r1]
 8012442:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012446:	eb07 030b 	add.w	r3, r7, fp
 801244a:	f10d 0211 	add.w	r2, sp, #17
 801244e:	eb03 010a 	add.w	r1, r3, sl
 8012452:	428b      	cmp	r3, r1
 8012454:	d110      	bne.n	8012478 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x84>
 8012456:	4630      	mov	r0, r6
 8012458:	f7ff ffc2 	bl	80123e0 <HAL_I2C::Setup()>
 801245c:	eba5 050a 	sub.w	r5, r5, sl
 8012460:	f10a 0102 	add.w	r1, sl, #2
 8012464:	a804      	add	r0, sp, #16
 8012466:	f004 ff23 	bl	80172b0 <gd32_i2c_write>
 801246a:	4454      	add	r4, sl
 801246c:	9501      	str	r5, [sp, #4]
 801246e:	44d3      	add	fp, sl
 8012470:	9d01      	ldr	r5, [sp, #4]
 8012472:	2d00      	cmp	r5, #0
 8012474:	d1cb      	bne.n	801240e <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x1a>
 8012476:	e7c7      	b.n	8012408 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x14>
 8012478:	f813 0b01 	ldrb.w	r0, [r3], #1
 801247c:	f802 0f01 	strb.w	r0, [r2, #1]!
 8012480:	e7e7      	b.n	8012452 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x5e>
 8012482:	f04f 0b00 	mov.w	fp, #0
 8012486:	f10d 080c 	add.w	r8, sp, #12
 801248a:	f04f 091e 	mov.w	r9, #30
 801248e:	e7ef      	b.n	8012470 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)+0x7c>

08012490 <FlashRom::FlashRom()>:
 8012490:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012492:	4604      	mov	r4, r0
 8012494:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8012498:	2050      	movs	r0, #80	; 0x50
 801249a:	4d13      	ldr	r5, [pc, #76]	; (80124e8 <FlashRom::FlashRom()+0x58>)
 801249c:	8123      	strh	r3, [r4, #8]
 801249e:	7020      	strb	r0, [r4, #0]
 80124a0:	6065      	str	r5, [r4, #4]
 80124a2:	f004 feff 	bl	80172a4 <gd32_i2c_set_address>
 80124a6:	4628      	mov	r0, r5
 80124a8:	f004 fef4 	bl	8017294 <gd32_i2c_set_baudrate>
 80124ac:	2101      	movs	r1, #1
 80124ae:	f10d 0007 	add.w	r0, sp, #7
 80124b2:	f004 ff63 	bl	801737c <gd32_i2c_read>
 80124b6:	4a0d      	ldr	r2, [pc, #52]	; (80124ec <FlashRom::FlashRom()+0x5c>)
 80124b8:	2800      	cmp	r0, #0
 80124ba:	bf0c      	ite	eq
 80124bc:	2301      	moveq	r3, #1
 80124be:	2300      	movne	r3, #0
 80124c0:	7223      	strb	r3, [r4, #8]
 80124c2:	6014      	str	r4, [r2, #0]
 80124c4:	72a3      	strb	r3, [r4, #10]
 80124c6:	d007      	beq.n	80124d8 <FlashRom::FlashRom()+0x48>
 80124c8:	7822      	ldrb	r2, [r4, #0]
 80124ca:	4909      	ldr	r1, [pc, #36]	; (80124f0 <FlashRom::FlashRom()+0x60>)
 80124cc:	4809      	ldr	r0, [pc, #36]	; (80124f4 <FlashRom::FlashRom()+0x64>)
 80124ce:	f7f7 fff3 	bl	800a4b8 <printf>
 80124d2:	4620      	mov	r0, r4
 80124d4:	b003      	add	sp, #12
 80124d6:	bd30      	pop	{r4, r5, pc}
 80124d8:	4905      	ldr	r1, [pc, #20]	; (80124f0 <FlashRom::FlashRom()+0x60>)
 80124da:	4807      	ldr	r0, [pc, #28]	; (80124f8 <FlashRom::FlashRom()+0x68>)
 80124dc:	2304      	movs	r3, #4
 80124de:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80124e2:	f7f7 ffe9 	bl	800a4b8 <printf>
 80124e6:	e7f4      	b.n	80124d2 <FlashRom::FlashRom()+0x42>
 80124e8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80124ec:	200092c4 	andcs	r9, r0, r4, asr #5
 80124f0:	0801b500 	stmdaeq	r1, {r8, sl, ip, sp, pc}
 80124f4:	0801b508 	stmdaeq	r1, {r3, r8, sl, ip, sp, pc}
 80124f8:	0801b515 	stmdaeq	r1, {r0, r2, r4, r8, sl, ip, sp, pc}

080124fc <FlashRom::GetSize() const>:
 80124fc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8012500:	4770      	bx	lr

08012502 <FlashRom::GetSectorSize() const>:
 8012502:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8012506:	4770      	bx	lr

08012508 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 8012508:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801250a:	461e      	mov	r6, r3
 801250c:	7a03      	ldrb	r3, [r0, #8]
 801250e:	4604      	mov	r4, r0
 8012510:	460d      	mov	r5, r1
 8012512:	4617      	mov	r7, r2
 8012514:	b1b3      	cbz	r3, 8012544 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x3c>
 8012516:	2101      	movs	r1, #1
 8012518:	a801      	add	r0, sp, #4
 801251a:	f004 ff2f 	bl	801737c <gd32_i2c_read>
 801251e:	2800      	cmp	r0, #0
 8012520:	d1f9      	bne.n	8012516 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0xe>
 8012522:	4620      	mov	r0, r4
 8012524:	ba6d      	rev16	r5, r5
 8012526:	f8ad 5004 	strh.w	r5, [sp, #4]
 801252a:	f7ff ff59 	bl	80123e0 <HAL_I2C::Setup()>
 801252e:	2102      	movs	r1, #2
 8012530:	a801      	add	r0, sp, #4
 8012532:	f004 febd 	bl	80172b0 <gd32_i2c_write>
 8012536:	4620      	mov	r0, r4
 8012538:	f7ff ff52 	bl	80123e0 <HAL_I2C::Setup()>
 801253c:	4639      	mov	r1, r7
 801253e:	4630      	mov	r0, r6
 8012540:	f004 ff1c 	bl	801737c <gd32_i2c_read>
 8012544:	9b08      	ldr	r3, [sp, #32]
 8012546:	2200      	movs	r2, #0
 8012548:	2001      	movs	r0, #1
 801254a:	601a      	str	r2, [r3, #0]
 801254c:	b003      	add	sp, #12
 801254e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012550 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 8012550:	2200      	movs	r2, #0
 8012552:	601a      	str	r2, [r3, #0]
 8012554:	2001      	movs	r0, #1
 8012556:	4770      	bx	lr

08012558 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8012558:	b510      	push	{r4, lr}
 801255a:	4614      	mov	r4, r2
 801255c:	461a      	mov	r2, r3
 801255e:	4623      	mov	r3, r4
 8012560:	f7ff ff48 	bl	80123f4 <AT24Cxx::Write(unsigned int, unsigned char const*, unsigned int)>
 8012564:	9b02      	ldr	r3, [sp, #8]
 8012566:	2200      	movs	r2, #0
 8012568:	601a      	str	r2, [r3, #0]
 801256a:	2001      	movs	r0, #1
 801256c:	bd10      	pop	{r4, pc}
	...

08012570 <net_set_ip>:
 8012570:	b510      	push	{r4, lr}
 8012572:	4c05      	ldr	r4, [pc, #20]	; (8012588 <net_set_ip+0x18>)
 8012574:	6020      	str	r0, [r4, #0]
 8012576:	4621      	mov	r1, r4
 8012578:	4804      	ldr	r0, [pc, #16]	; (801258c <net_set_ip+0x1c>)
 801257a:	f7f5 fecd 	bl	8008318 <arp_init>
 801257e:	4620      	mov	r0, r4
 8012580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012584:	f002 b8aa 	b.w	80146dc <ip_set_ip>
 8012588:	200092c8 	andcs	r9, r0, r8, asr #5
 801258c:	200092d4 	ldrdcs	r9, [r0], -r4

08012590 <net_set_dhcp>:
 8012590:	b570      	push	{r4, r5, r6, lr}
 8012592:	2400      	movs	r4, #0
 8012594:	7014      	strb	r4, [r2, #0]
 8012596:	4605      	mov	r5, r0
 8012598:	4616      	mov	r6, r2
 801259a:	4810      	ldr	r0, [pc, #64]	; (80125dc <net_set_dhcp+0x4c>)
 801259c:	460a      	mov	r2, r1
 801259e:	4910      	ldr	r1, [pc, #64]	; (80125e0 <net_set_dhcp+0x50>)
 80125a0:	f001 fe82 	bl	80142a8 <dhcp_client>
 80125a4:	42a0      	cmp	r0, r4
 80125a6:	da17      	bge.n	80125d8 <net_set_dhcp+0x48>
 80125a8:	480d      	ldr	r0, [pc, #52]	; (80125e0 <net_set_dhcp+0x50>)
 80125aa:	f000 f859 	bl	8012660 <rfc3927>
 80125ae:	7030      	strb	r0, [r6, #0]
 80125b0:	490b      	ldr	r1, [pc, #44]	; (80125e0 <net_set_dhcp+0x50>)
 80125b2:	480a      	ldr	r0, [pc, #40]	; (80125dc <net_set_dhcp+0x4c>)
 80125b4:	f7f5 feb0 	bl	8008318 <arp_init>
 80125b8:	4809      	ldr	r0, [pc, #36]	; (80125e0 <net_set_dhcp+0x50>)
 80125ba:	f002 f88f 	bl	80146dc <ip_set_ip>
 80125be:	4a08      	ldr	r2, [pc, #32]	; (80125e0 <net_set_dhcp+0x50>)
 80125c0:	1e6b      	subs	r3, r5, #1
 80125c2:	350b      	adds	r5, #11
 80125c4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80125c8:	f803 1f01 	strb.w	r1, [r3, #1]!
 80125cc:	42ab      	cmp	r3, r5
 80125ce:	d1f9      	bne.n	80125c4 <net_set_dhcp+0x34>
 80125d0:	4b04      	ldr	r3, [pc, #16]	; (80125e4 <net_set_dhcp+0x54>)
 80125d2:	4620      	mov	r0, r4
 80125d4:	701c      	strb	r4, [r3, #0]
 80125d6:	bd70      	pop	{r4, r5, r6, pc}
 80125d8:	2401      	movs	r4, #1
 80125da:	e7e9      	b.n	80125b0 <net_set_dhcp+0x20>
 80125dc:	200092d4 	ldrdcs	r9, [r0], -r4
 80125e0:	200092c8 	andcs	r9, r0, r8, asr #5
 80125e4:	200092da 	ldrdcs	r9, [r0], -sl

080125e8 <net_dhcp_release>:
 80125e8:	b508      	push	{r3, lr}
 80125ea:	f001 ff65 	bl	80144b8 <dhcp_client_release>
 80125ee:	4b02      	ldr	r3, [pc, #8]	; (80125f8 <net_dhcp_release+0x10>)
 80125f0:	2200      	movs	r2, #0
 80125f2:	701a      	strb	r2, [r3, #0]
 80125f4:	bd08      	pop	{r3, pc}
 80125f6:	bf00      	nop
 80125f8:	200092da 	ldrdcs	r9, [r0], -sl

080125fc <net_set_zeroconf>:
 80125fc:	b538      	push	{r3, r4, r5, lr}
 80125fe:	4604      	mov	r4, r0
 8012600:	480c      	ldr	r0, [pc, #48]	; (8012634 <net_set_zeroconf+0x38>)
 8012602:	f000 f82d 	bl	8012660 <rfc3927>
 8012606:	4605      	mov	r5, r0
 8012608:	b190      	cbz	r0, 8012630 <net_set_zeroconf+0x34>
 801260a:	490a      	ldr	r1, [pc, #40]	; (8012634 <net_set_zeroconf+0x38>)
 801260c:	480a      	ldr	r0, [pc, #40]	; (8012638 <net_set_zeroconf+0x3c>)
 801260e:	f7f5 fe83 	bl	8008318 <arp_init>
 8012612:	4808      	ldr	r0, [pc, #32]	; (8012634 <net_set_zeroconf+0x38>)
 8012614:	f002 f862 	bl	80146dc <ip_set_ip>
 8012618:	4a06      	ldr	r2, [pc, #24]	; (8012634 <net_set_zeroconf+0x38>)
 801261a:	1e63      	subs	r3, r4, #1
 801261c:	340b      	adds	r4, #11
 801261e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8012622:	f803 1f01 	strb.w	r1, [r3, #1]!
 8012626:	42a3      	cmp	r3, r4
 8012628:	d1f9      	bne.n	801261e <net_set_zeroconf+0x22>
 801262a:	4b04      	ldr	r3, [pc, #16]	; (801263c <net_set_zeroconf+0x40>)
 801262c:	2200      	movs	r2, #0
 801262e:	701a      	strb	r2, [r3, #0]
 8012630:	4628      	mov	r0, r5
 8012632:	bd38      	pop	{r3, r4, r5, pc}
 8012634:	200092c8 	andcs	r9, r0, r8, asr #5
 8012638:	200092d4 	ldrdcs	r9, [r0], -r4
 801263c:	200092da 	ldrdcs	r9, [r0], -sl

08012640 <net_timers_run>:
 8012640:	4b05      	ldr	r3, [pc, #20]	; (8012658 <net_timers_run+0x18>)
 8012642:	4a06      	ldr	r2, [pc, #24]	; (801265c <net_timers_run+0x1c>)
 8012644:	681b      	ldr	r3, [r3, #0]
 8012646:	6811      	ldr	r1, [r2, #0]
 8012648:	4299      	cmp	r1, r3
 801264a:	d803      	bhi.n	8012654 <net_timers_run+0x14>
 801264c:	3364      	adds	r3, #100	; 0x64
 801264e:	6013      	str	r3, [r2, #0]
 8012650:	f001 bfbe 	b.w	80145d0 <igmp_timer>
 8012654:	4770      	bx	lr
 8012656:	bf00      	nop
 8012658:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 801265c:	200092e0 	andcs	r9, r0, r0, ror #5

08012660 <rfc3927>:
 8012660:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012664:	4b19      	ldr	r3, [pc, #100]	; (80126cc <rfc3927+0x6c>)
 8012666:	4f1a      	ldr	r7, [pc, #104]	; (80126d0 <rfc3927+0x70>)
 8012668:	791a      	ldrb	r2, [r3, #4]
 801266a:	78dc      	ldrb	r4, [r3, #3]
 801266c:	f8df 8064 	ldr.w	r8, [pc, #100]	; 80126d4 <rfc3927+0x74>
 8012670:	f8d7 9000 	ldr.w	r9, [r7]
 8012674:	f8df b060 	ldr.w	fp, [pc, #96]	; 80126d8 <rfc3927+0x78>
 8012678:	f8df a060 	ldr.w	sl, [pc, #96]	; 80126dc <rfc3927+0x7c>
 801267c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 8012680:	4606      	mov	r6, r0
 8012682:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8012686:	25ff      	movs	r5, #255	; 0xff
 8012688:	4659      	mov	r1, fp
 801268a:	4620      	mov	r0, r4
 801268c:	f001 fd00 	bl	8014090 <arp_cache_lookup>
 8012690:	b190      	cbz	r0, 80126b8 <rfc3927+0x58>
 8012692:	ba24      	rev	r4, r4
 8012694:	3401      	adds	r4, #1
 8012696:	3d01      	subs	r5, #1
 8012698:	ba24      	rev	r4, r4
 801269a:	b2ad      	uxth	r5, r5
 801269c:	4554      	cmp	r4, sl
 801269e:	bf08      	it	eq
 80126a0:	4644      	moveq	r4, r8
 80126a2:	b18d      	cbz	r5, 80126c8 <rfc3927+0x68>
 80126a4:	683b      	ldr	r3, [r7, #0]
 80126a6:	eba3 0309 	sub.w	r3, r3, r9
 80126aa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80126ae:	d3eb      	bcc.n	8012688 <rfc3927+0x28>
 80126b0:	2400      	movs	r4, #0
 80126b2:	4623      	mov	r3, r4
 80126b4:	4620      	mov	r0, r4
 80126b6:	e002      	b.n	80126be <rfc3927+0x5e>
 80126b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80126bc:	2001      	movs	r0, #1
 80126be:	e9c6 3401 	strd	r3, r4, [r6, #4]
 80126c2:	6034      	str	r4, [r6, #0]
 80126c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126c8:	462c      	mov	r4, r5
 80126ca:	e7f2      	b.n	80126b2 <rfc3927+0x52>
 80126cc:	200092e4 	andcs	r9, r0, r4, ror #5
 80126d0:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 80126d4:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 80126d8:	200092ec 	andcs	r9, r0, ip, ror #5
 80126dc:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

080126e0 <_init_tcb>:
 80126e0:	b510      	push	{r4, lr}
 80126e2:	f100 0244 	add.w	r2, r0, #68	; 0x44
 80126e6:	4603      	mov	r3, r0
 80126e8:	2400      	movs	r4, #0
 80126ea:	4293      	cmp	r3, r2
 80126ec:	d10d      	bne.n	801270a <_init_tcb+0x2a>
 80126ee:	4b08      	ldr	r3, [pc, #32]	; (8012710 <_init_tcb+0x30>)
 80126f0:	681b      	ldr	r3, [r3, #0]
 80126f2:	6283      	str	r3, [r0, #40]	; 0x28
 80126f4:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80126f8:	f640 3268 	movw	r2, #2920	; 0xb68
 80126fc:	6243      	str	r3, [r0, #36]	; 0x24
 80126fe:	2301      	movs	r3, #1
 8012700:	8001      	strh	r1, [r0, #0]
 8012702:	8702      	strh	r2, [r0, #56]	; 0x38
 8012704:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8012708:	bd10      	pop	{r4, pc}
 801270a:	f803 4b01 	strb.w	r4, [r3], #1
 801270e:	e7ec      	b.n	80126ea <_init_tcb+0xa>
 8012710:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc

08012714 <memcpy.isra.0>:
 8012714:	3801      	subs	r0, #1
 8012716:	440a      	add	r2, r1
 8012718:	4291      	cmp	r1, r2
 801271a:	d100      	bne.n	801271e <memcpy.isra.0+0xa>
 801271c:	4770      	bx	lr
 801271e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012722:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012726:	e7f7      	b.n	8012718 <memcpy.isra.0+0x4>

08012728 <_bswap32>:
 8012728:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801272a:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 801272e:	2204      	movs	r2, #4
 8012730:	4629      	mov	r1, r5
 8012732:	4604      	mov	r4, r0
 8012734:	eb0d 0002 	add.w	r0, sp, r2
 8012738:	f7ff ffec 	bl	8012714 <memcpy.isra.0>
 801273c:	9b01      	ldr	r3, [sp, #4]
 801273e:	2204      	movs	r2, #4
 8012740:	ba1b      	rev	r3, r3
 8012742:	eb0d 0102 	add.w	r1, sp, r2
 8012746:	4628      	mov	r0, r5
 8012748:	9301      	str	r3, [sp, #4]
 801274a:	3426      	adds	r4, #38	; 0x26
 801274c:	f7ff ffe2 	bl	8012714 <memcpy.isra.0>
 8012750:	2204      	movs	r2, #4
 8012752:	eb0d 0002 	add.w	r0, sp, r2
 8012756:	4621      	mov	r1, r4
 8012758:	f7ff ffdc 	bl	8012714 <memcpy.isra.0>
 801275c:	9b01      	ldr	r3, [sp, #4]
 801275e:	2204      	movs	r2, #4
 8012760:	ba1b      	rev	r3, r3
 8012762:	eb0d 0102 	add.w	r1, sp, r2
 8012766:	4620      	mov	r0, r4
 8012768:	9301      	str	r3, [sp, #4]
 801276a:	f7ff ffd3 	bl	8012714 <memcpy.isra.0>
 801276e:	b003      	add	sp, #12
 8012770:	bd30      	pop	{r4, r5, pc}
	...

08012774 <_tcp_send_package>:
 8012774:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012778:	7a0b      	ldrb	r3, [r1, #8]
 801277a:	4c4c      	ldr	r4, [pc, #304]	; (80128ac <_tcp_send_package+0x138>)
 801277c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 801277e:	f013 0f02 	tst.w	r3, #2
 8012782:	4605      	mov	r5, r0
 8012784:	bf0c      	ite	eq
 8012786:	f04f 0805 	moveq.w	r8, #5
 801278a:	f04f 0806 	movne.w	r8, #6
 801278e:	460f      	mov	r7, r1
 8012790:	2206      	movs	r2, #6
 8012792:	f100 0108 	add.w	r1, r0, #8
 8012796:	4620      	mov	r0, r4
 8012798:	f7ff ffbc 	bl	8012714 <memcpy.isra.0>
 801279c:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 80127a0:	f8b4 35ec 	ldrh.w	r3, [r4, #1516]	; 0x5ec
 80127a4:	8263      	strh	r3, [r4, #18]
 80127a6:	b2b6      	uxth	r6, r6
 80127a8:	1c5a      	adds	r2, r3, #1
 80127aa:	f105 0904 	add.w	r9, r5, #4
 80127ae:	f106 0314 	add.w	r3, r6, #20
 80127b2:	ba5b      	rev16	r3, r3
 80127b4:	f8a4 25ec 	strh.w	r2, [r4, #1516]	; 0x5ec
 80127b8:	4649      	mov	r1, r9
 80127ba:	2204      	movs	r2, #4
 80127bc:	f104 001e 	add.w	r0, r4, #30
 80127c0:	8223      	strh	r3, [r4, #16]
 80127c2:	f04f 0a00 	mov.w	sl, #0
 80127c6:	f7ff ffa5 	bl	8012714 <memcpy.isra.0>
 80127ca:	2114      	movs	r1, #20
 80127cc:	f104 000e 	add.w	r0, r4, #14
 80127d0:	f8a4 a018 	strh.w	sl, [r4, #24]
 80127d4:	f001 ff8b 	bl	80146ee <net_chksum>
 80127d8:	882b      	ldrh	r3, [r5, #0]
 80127da:	8463      	strh	r3, [r4, #34]	; 0x22
 80127dc:	886b      	ldrh	r3, [r5, #2]
 80127de:	84a3      	strh	r3, [r4, #36]	; 0x24
 80127e0:	683b      	ldr	r3, [r7, #0]
 80127e2:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 80127e6:	ea4f 1808 	mov.w	r8, r8, lsl #4
 80127ea:	687b      	ldr	r3, [r7, #4]
 80127ec:	8320      	strh	r0, [r4, #24]
 80127ee:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 80127f2:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 80127f6:	7a3b      	ldrb	r3, [r7, #8]
 80127f8:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 80127fc:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 80127fe:	8622      	strh	r2, [r4, #48]	; 0x30
 8012800:	079b      	lsls	r3, r3, #30
 8012802:	8baa      	ldrh	r2, [r5, #28]
 8012804:	86a2      	strh	r2, [r4, #52]	; 0x34
 8012806:	bf41      	itttt	mi
 8012808:	f240 4302 	movwmi	r3, #1026	; 0x402
 801280c:	4622      	movmi	r2, r4
 801280e:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 8012810:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8012814:	bf48      	it	mi
 8012816:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 801281a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801281c:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 8012820:	bf58      	it	pl
 8012822:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 8012826:	2b00      	cmp	r3, #0
 8012828:	d13e      	bne.n	80128a8 <_tcp_send_package+0x134>
 801282a:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 801282c:	481f      	ldr	r0, [pc, #124]	; (80128ac <_tcp_send_package+0x138>)
 801282e:	ba5b      	rev16	r3, r3
 8012830:	8463      	strh	r3, [r4, #34]	; 0x22
 8012832:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8012834:	ba5b      	rev16	r3, r3
 8012836:	84a3      	strh	r3, [r4, #36]	; 0x24
 8012838:	f7ff ff76 	bl	8012728 <_bswap32>
 801283c:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801283e:	491c      	ldr	r1, [pc, #112]	; (80128b0 <_tcp_send_package+0x13c>)
 8012840:	ba5b      	rev16	r3, r3
 8012842:	8623      	strh	r3, [r4, #48]	; 0x30
 8012844:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012846:	a801      	add	r0, sp, #4
 8012848:	ba5b      	rev16	r3, r3
 801284a:	220c      	movs	r2, #12
 801284c:	86a3      	strh	r3, [r4, #52]	; 0x34
 801284e:	f7ff ff61 	bl	8012714 <memcpy.isra.0>
 8012852:	4918      	ldr	r1, [pc, #96]	; (80128b4 <_tcp_send_package+0x140>)
 8012854:	4816      	ldr	r0, [pc, #88]	; (80128b0 <_tcp_send_package+0x13c>)
 8012856:	2204      	movs	r2, #4
 8012858:	f7ff ff5c 	bl	8012714 <memcpy.isra.0>
 801285c:	2204      	movs	r2, #4
 801285e:	4649      	mov	r1, r9
 8012860:	4815      	ldr	r0, [pc, #84]	; (80128b8 <_tcp_send_package+0x144>)
 8012862:	f7ff ff57 	bl	8012714 <memcpy.isra.0>
 8012866:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801286a:	83e3      	strh	r3, [r4, #30]
 801286c:	f106 010c 	add.w	r1, r6, #12
 8012870:	ba73      	rev16	r3, r6
 8012872:	480f      	ldr	r0, [pc, #60]	; (80128b0 <_tcp_send_package+0x13c>)
 8012874:	8423      	strh	r3, [r4, #32]
 8012876:	f001 ff3a 	bl	80146ee <net_chksum>
 801287a:	a901      	add	r1, sp, #4
 801287c:	4605      	mov	r5, r0
 801287e:	220c      	movs	r2, #12
 8012880:	480b      	ldr	r0, [pc, #44]	; (80128b0 <_tcp_send_package+0x13c>)
 8012882:	f7ff ff47 	bl	8012714 <memcpy.isra.0>
 8012886:	4809      	ldr	r0, [pc, #36]	; (80128ac <_tcp_send_package+0x138>)
 8012888:	8665      	strh	r5, [r4, #50]	; 0x32
 801288a:	f106 0122 	add.w	r1, r6, #34	; 0x22
 801288e:	b004      	add	sp, #16
 8012890:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012894:	f004 bc40 	b.w	8017118 <emac_eth_send>
 8012898:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 801289a:	5cc9      	ldrb	r1, [r1, r3]
 801289c:	54d1      	strb	r1, [r2, r3]
 801289e:	3301      	adds	r3, #1
 80128a0:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 80128a2:	4299      	cmp	r1, r3
 80128a4:	d8f8      	bhi.n	8012898 <_tcp_send_package+0x124>
 80128a6:	e7c0      	b.n	801282a <_tcp_send_package+0xb6>
 80128a8:	2300      	movs	r3, #0
 80128aa:	e7f9      	b.n	80128a0 <_tcp_send_package+0x12c>
 80128ac:	10000000 	andne	r0, r0, r0
 80128b0:	10000016 	andne	r0, r0, r6, lsl r0
 80128b4:	200092c8 	andcs	r9, r0, r8, asr #5
 80128b8:	1000001a 	andne	r0, r0, sl, lsl r0

080128bc <_send_reset>:
 80128bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80128be:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80128c2:	075a      	lsls	r2, r3, #29
 80128c4:	4604      	mov	r4, r0
 80128c6:	460e      	mov	r6, r1
 80128c8:	d421      	bmi.n	801290e <_send_reset+0x52>
 80128ca:	2204      	movs	r2, #4
 80128cc:	f013 0310 	ands.w	r3, r3, #16
 80128d0:	f88d 200c 	strb.w	r2, [sp, #12]
 80128d4:	d01d      	beq.n	8012912 <_send_reset+0x56>
 80128d6:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 80128da:	4668      	mov	r0, sp
 80128dc:	f7ff ff1a 	bl	8012714 <memcpy.isra.0>
 80128e0:	9b00      	ldr	r3, [sp, #0]
 80128e2:	9301      	str	r3, [sp, #4]
 80128e4:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80128e8:	f104 0126 	add.w	r1, r4, #38	; 0x26
 80128ec:	f3c3 0540 	ubfx	r5, r3, #1, #1
 80128f0:	4668      	mov	r0, sp
 80128f2:	07db      	lsls	r3, r3, #31
 80128f4:	f04f 0204 	mov.w	r2, #4
 80128f8:	bf48      	it	mi
 80128fa:	3501      	addmi	r5, #1
 80128fc:	f7ff ff0a 	bl	8012714 <memcpy.isra.0>
 8012900:	9b00      	ldr	r3, [sp, #0]
 8012902:	a901      	add	r1, sp, #4
 8012904:	441d      	add	r5, r3
 8012906:	4630      	mov	r0, r6
 8012908:	9502      	str	r5, [sp, #8]
 801290a:	f7ff ff33 	bl	8012774 <_tcp_send_package>
 801290e:	b004      	add	sp, #16
 8012910:	bd70      	pop	{r4, r5, r6, pc}
 8012912:	9301      	str	r3, [sp, #4]
 8012914:	2314      	movs	r3, #20
 8012916:	f88d 300c 	strb.w	r3, [sp, #12]
 801291a:	e7e3      	b.n	80128e4 <_send_reset+0x28>

0801291c <tcp_begin>:
 801291c:	b508      	push	{r3, lr}
 801291e:	4b0b      	ldr	r3, [pc, #44]	; (801294c <tcp_begin+0x30>)
 8012920:	f8b3 25f0 	ldrh.w	r2, [r3, #1520]	; 0x5f0
 8012924:	4282      	cmp	r2, r0
 8012926:	4601      	mov	r1, r0
 8012928:	d102      	bne.n	8012930 <tcp_begin+0x14>
 801292a:	f893 0630 	ldrb.w	r0, [r3, #1584]	; 0x630
 801292e:	b130      	cbz	r0, 801293e <tcp_begin+0x22>
 8012930:	b12a      	cbz	r2, 801293e <tcp_begin+0x22>
 8012932:	4807      	ldr	r0, [pc, #28]	; (8012950 <tcp_begin+0x34>)
 8012934:	f003 f852 	bl	80159dc <console_error>
 8012938:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801293c:	bd08      	pop	{r3, pc}
 801293e:	4805      	ldr	r0, [pc, #20]	; (8012954 <tcp_begin+0x38>)
 8012940:	f8a3 15f0 	strh.w	r1, [r3, #1520]	; 0x5f0
 8012944:	f7ff fecc 	bl	80126e0 <_init_tcb>
 8012948:	2000      	movs	r0, #0
 801294a:	e7f7      	b.n	801293c <tcp_begin+0x20>
 801294c:	10000000 	andne	r0, r0, r0
 8012950:	0801b53e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, sl, ip, sp, pc}
 8012954:	100005f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>

08012958 <tcp_write>:
 8012958:	f240 53b4 	movw	r3, #1460	; 0x5b4
 801295c:	b530      	push	{r4, r5, lr}
 801295e:	429a      	cmp	r2, r3
 8012960:	bf28      	it	cs
 8012962:	461a      	movcs	r2, r3
 8012964:	4615      	mov	r5, r2
 8012966:	4b12      	ldr	r3, [pc, #72]	; (80129b0 <tcp_write+0x58>)
 8012968:	2244      	movs	r2, #68	; 0x44
 801296a:	4350      	muls	r0, r2
 801296c:	181c      	adds	r4, r3, r0
 801296e:	b085      	sub	sp, #20
 8012970:	f8d4 2604 	ldr.w	r2, [r4, #1540]	; 0x604
 8012974:	9201      	str	r2, [sp, #4]
 8012976:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 801297a:	f8d4 2624 	ldr.w	r2, [r4, #1572]	; 0x624
 801297e:	f8c4 161c 	str.w	r1, [r4, #1564]	; 0x61c
 8012982:	9202      	str	r2, [sp, #8]
 8012984:	4418      	add	r0, r3
 8012986:	2218      	movs	r2, #24
 8012988:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
 801298c:	a901      	add	r1, sp, #4
 801298e:	f88d 200c 	strb.w	r2, [sp, #12]
 8012992:	f7ff feef 	bl	8012774 <_tcp_send_package>
 8012996:	2300      	movs	r3, #0
 8012998:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 801299c:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 80129a0:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80129a4:	442b      	add	r3, r5
 80129a6:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 80129aa:	b005      	add	sp, #20
 80129ac:	bd30      	pop	{r4, r5, pc}
 80129ae:	bf00      	nop
 80129b0:	10000000 	andne	r0, r0, r0

080129b4 <tcp_read>:
 80129b4:	4b23      	ldr	r3, [pc, #140]	; (8012a44 <tcp_read+0x90>)
 80129b6:	2244      	movs	r2, #68	; 0x44
 80129b8:	4342      	muls	r2, r0
 80129ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80129bc:	189c      	adds	r4, r3, r2
 80129be:	b085      	sub	sp, #20
 80129c0:	f894 5630 	ldrb.w	r5, [r4, #1584]	; 0x630
 80129c4:	2d07      	cmp	r5, #7
 80129c6:	d118      	bne.n	80129fa <tcp_read+0x46>
 80129c8:	f8d4 1604 	ldr.w	r1, [r4, #1540]	; 0x604
 80129cc:	9101      	str	r1, [sp, #4]
 80129ce:	f8d4 1624 	ldr.w	r1, [r4, #1572]	; 0x624
 80129d2:	9102      	str	r1, [sp, #8]
 80129d4:	f503 63be 	add.w	r3, r3, #1520	; 0x5f0
 80129d8:	2111      	movs	r1, #17
 80129da:	f88d 100c 	strb.w	r1, [sp, #12]
 80129de:	1898      	adds	r0, r3, r2
 80129e0:	a901      	add	r1, sp, #4
 80129e2:	f7ff fec7 	bl	8012774 <_tcp_send_package>
 80129e6:	2309      	movs	r3, #9
 80129e8:	f884 3630 	strb.w	r3, [r4, #1584]	; 0x630
 80129ec:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 80129f0:	3301      	adds	r3, #1
 80129f2:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
 80129f6:	2000      	movs	r0, #0
 80129f8:	e022      	b.n	8012a40 <tcp_read+0x8c>
 80129fa:	f44f 6237 	mov.w	r2, #2928	; 0xb70
 80129fe:	4350      	muls	r0, r2
 8012a00:	181e      	adds	r6, r3, r0
 8012a02:	f8b6 5636 	ldrh.w	r5, [r6, #1590]	; 0x636
 8012a06:	f8b6 2634 	ldrh.w	r2, [r6, #1588]	; 0x634
 8012a0a:	42aa      	cmp	r2, r5
 8012a0c:	d0f3      	beq.n	80129f6 <tcp_read+0x42>
 8012a0e:	f240 52b6 	movw	r2, #1462	; 0x5b6
 8012a12:	f100 0c04 	add.w	ip, r0, #4
 8012a16:	436a      	muls	r2, r5
 8012a18:	f203 6734 	addw	r7, r3, #1588	; 0x634
 8012a1c:	4494      	add	ip, r2
 8012a1e:	4467      	add	r7, ip
 8012a20:	600f      	str	r7, [r1, #0]
 8012a22:	4402      	add	r2, r0
 8012a24:	441a      	add	r2, r3
 8012a26:	f8b4 3628 	ldrh.w	r3, [r4, #1576]	; 0x628
 8012a2a:	f8b2 0bec 	ldrh.w	r0, [r2, #3052]	; 0xbec
 8012a2e:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
 8012a32:	f8a4 3628 	strh.w	r3, [r4, #1576]	; 0x628
 8012a36:	1c6b      	adds	r3, r5, #1
 8012a38:	f003 0301 	and.w	r3, r3, #1
 8012a3c:	f8a6 3636 	strh.w	r3, [r6, #1590]	; 0x636
 8012a40:	b005      	add	sp, #20
 8012a42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012a44:	10000000 	andne	r0, r0, r0

08012a48 <memcpy.isra.0>:
 8012a48:	3801      	subs	r0, #1
 8012a4a:	440a      	add	r2, r1
 8012a4c:	4291      	cmp	r1, r2
 8012a4e:	d100      	bne.n	8012a52 <memcpy.isra.0+0xa>
 8012a50:	4770      	bx	lr
 8012a52:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012a56:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012a5a:	e7f7      	b.n	8012a4c <memcpy.isra.0+0x4>

08012a5c <net_memcpy>:
 8012a5c:	ea40 0301 	orr.w	r3, r0, r1
 8012a60:	079b      	lsls	r3, r3, #30
 8012a62:	b570      	push	{r4, r5, r6, lr}
 8012a64:	d108      	bne.n	8012a78 <net_memcpy+0x1c>
 8012a66:	f022 0303 	bic.w	r3, r2, #3
 8012a6a:	1f04      	subs	r4, r0, #4
 8012a6c:	18cd      	adds	r5, r1, r3
 8012a6e:	42a9      	cmp	r1, r5
 8012a70:	d108      	bne.n	8012a84 <net_memcpy+0x28>
 8012a72:	1ad2      	subs	r2, r2, r3
 8012a74:	4403      	add	r3, r0
 8012a76:	e000      	b.n	8012a7a <net_memcpy+0x1e>
 8012a78:	4603      	mov	r3, r0
 8012a7a:	3b01      	subs	r3, #1
 8012a7c:	440a      	add	r2, r1
 8012a7e:	4291      	cmp	r1, r2
 8012a80:	d105      	bne.n	8012a8e <net_memcpy+0x32>
 8012a82:	bd70      	pop	{r4, r5, r6, pc}
 8012a84:	f851 6b04 	ldr.w	r6, [r1], #4
 8012a88:	f844 6f04 	str.w	r6, [r4, #4]!
 8012a8c:	e7ef      	b.n	8012a6e <net_memcpy+0x12>
 8012a8e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012a92:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012a96:	e7f2      	b.n	8012a7e <net_memcpy+0x22>

08012a98 <udp_set_ip>:
 8012a98:	b513      	push	{r0, r1, r4, lr}
 8012a9a:	2204      	movs	r2, #4
 8012a9c:	4604      	mov	r4, r0
 8012a9e:	6803      	ldr	r3, [r0, #0]
 8012aa0:	4809      	ldr	r0, [pc, #36]	; (8012ac8 <udp_set_ip+0x30>)
 8012aa2:	9301      	str	r3, [sp, #4]
 8012aa4:	eb0d 0102 	add.w	r1, sp, r2
 8012aa8:	f7ff ffce 	bl	8012a48 <memcpy.isra.0>
 8012aac:	6862      	ldr	r2, [r4, #4]
 8012aae:	4b07      	ldr	r3, [pc, #28]	; (8012acc <udp_set_ip+0x34>)
 8012ab0:	43d1      	mvns	r1, r2
 8012ab2:	6019      	str	r1, [r3, #0]
 8012ab4:	6823      	ldr	r3, [r4, #0]
 8012ab6:	4013      	ands	r3, r2
 8012ab8:	4a05      	ldr	r2, [pc, #20]	; (8012ad0 <udp_set_ip+0x38>)
 8012aba:	6013      	str	r3, [r2, #0]
 8012abc:	68a2      	ldr	r2, [r4, #8]
 8012abe:	4b05      	ldr	r3, [pc, #20]	; (8012ad4 <udp_set_ip+0x3c>)
 8012ac0:	601a      	str	r2, [r3, #0]
 8012ac2:	b002      	add	sp, #8
 8012ac4:	bd10      	pop	{r4, pc}
 8012ac6:	bf00      	nop
 8012ac8:	2000efde 	ldrdcs	lr, [r0], -lr	; <UNPREDICTABLE>
 8012acc:	200092f4 	strdcs	r9, [r0], -r4
 8012ad0:	200092fc 	strdcs	r9, [r0], -ip
 8012ad4:	200092f8 	strdcs	r9, [r0], -r8

08012ad8 <udp_bind>:
 8012ad8:	4a0a      	ldr	r2, [pc, #40]	; (8012b04 <udp_bind+0x2c>)
 8012ada:	b510      	push	{r4, lr}
 8012adc:	2300      	movs	r3, #0
 8012ade:	4614      	mov	r4, r2
 8012ae0:	f852 1b04 	ldr.w	r1, [r2], #4
 8012ae4:	4281      	cmp	r1, r0
 8012ae6:	d008      	beq.n	8012afa <udp_bind+0x22>
 8012ae8:	b149      	cbz	r1, 8012afe <udp_bind+0x26>
 8012aea:	3301      	adds	r3, #1
 8012aec:	2b08      	cmp	r3, #8
 8012aee:	d1f7      	bne.n	8012ae0 <udp_bind+0x8>
 8012af0:	4805      	ldr	r0, [pc, #20]	; (8012b08 <udp_bind+0x30>)
 8012af2:	f002 ff73 	bl	80159dc <console_error>
 8012af6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012afa:	4618      	mov	r0, r3
 8012afc:	bd10      	pop	{r4, pc}
 8012afe:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 8012b02:	e7fa      	b.n	8012afa <udp_bind+0x22>
 8012b04:	20009304 	andcs	r9, r0, r4, lsl #6
 8012b08:	0801b55e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sl, ip, sp, pc}

08012b0c <udp_unbind>:
 8012b0c:	b510      	push	{r4, lr}
 8012b0e:	4a0c      	ldr	r2, [pc, #48]	; (8012b40 <udp_unbind+0x34>)
 8012b10:	2300      	movs	r3, #0
 8012b12:	4611      	mov	r1, r2
 8012b14:	f852 4b04 	ldr.w	r4, [r2], #4
 8012b18:	4284      	cmp	r4, r0
 8012b1a:	d108      	bne.n	8012b2e <udp_unbind+0x22>
 8012b1c:	2000      	movs	r0, #0
 8012b1e:	f640 3294 	movw	r2, #2964	; 0xb94
 8012b22:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8012b26:	4353      	muls	r3, r2
 8012b28:	4a06      	ldr	r2, [pc, #24]	; (8012b44 <udp_unbind+0x38>)
 8012b2a:	50d0      	str	r0, [r2, r3]
 8012b2c:	bd10      	pop	{r4, pc}
 8012b2e:	3301      	adds	r3, #1
 8012b30:	2b08      	cmp	r3, #8
 8012b32:	d1ef      	bne.n	8012b14 <udp_unbind+0x8>
 8012b34:	4804      	ldr	r0, [pc, #16]	; (8012b48 <udp_unbind+0x3c>)
 8012b36:	f002 ff51 	bl	80159dc <console_error>
 8012b3a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012b3e:	e7f5      	b.n	8012b2c <udp_unbind+0x20>
 8012b40:	20009304 	andcs	r9, r0, r4, lsl #6
 8012b44:	20009324 	andcs	r9, r0, r4, lsr #6
 8012b48:	0801b563 	stmdaeq	r1, {r0, r1, r5, r6, r8, sl, ip, sp, pc}

08012b4c <udp_recv>:
 8012b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b50:	4604      	mov	r4, r0
 8012b52:	4698      	mov	r8, r3
 8012b54:	4608      	mov	r0, r1
 8012b56:	f640 3394 	movw	r3, #2964	; 0xb94
 8012b5a:	4916      	ldr	r1, [pc, #88]	; (8012bb4 <udp_recv+0x68>)
 8012b5c:	435c      	muls	r4, r3
 8012b5e:	190f      	adds	r7, r1, r4
 8012b60:	5b0b      	ldrh	r3, [r1, r4]
 8012b62:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 8012b66:	4563      	cmp	r3, ip
 8012b68:	d021      	beq.n	8012bae <udp_recv+0x62>
 8012b6a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8012b6e:	fb03 fc0c 	mul.w	ip, r3, ip
 8012b72:	eb0c 0604 	add.w	r6, ip, r4
 8012b76:	440e      	add	r6, r1
 8012b78:	3404      	adds	r4, #4
 8012b7a:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8012b7e:	4295      	cmp	r5, r2
 8012b80:	bf28      	it	cs
 8012b82:	4615      	movcs	r5, r2
 8012b84:	4464      	add	r4, ip
 8012b86:	462a      	mov	r2, r5
 8012b88:	4421      	add	r1, r4
 8012b8a:	f7ff ff67 	bl	8012a5c <net_memcpy>
 8012b8e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8012b92:	f8c8 3000 	str.w	r3, [r8]
 8012b96:	9b06      	ldr	r3, [sp, #24]
 8012b98:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8012b9c:	801a      	strh	r2, [r3, #0]
 8012b9e:	887b      	ldrh	r3, [r7, #2]
 8012ba0:	3301      	adds	r3, #1
 8012ba2:	f003 0301 	and.w	r3, r3, #1
 8012ba6:	807b      	strh	r3, [r7, #2]
 8012ba8:	4628      	mov	r0, r5
 8012baa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012bae:	2500      	movs	r5, #0
 8012bb0:	e7fa      	b.n	8012ba8 <udp_recv+0x5c>
 8012bb2:	bf00      	nop
 8012bb4:	20009324 	andcs	r9, r0, r4, lsr #6

08012bb8 <udp_recv2>:
 8012bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012bba:	4c11      	ldr	r4, [pc, #68]	; (8012c00 <udp_recv2+0x48>)
 8012bbc:	f640 3594 	movw	r5, #2964	; 0xb94
 8012bc0:	4368      	muls	r0, r5
 8012bc2:	1827      	adds	r7, r4, r0
 8012bc4:	5a26      	ldrh	r6, [r4, r0]
 8012bc6:	887d      	ldrh	r5, [r7, #2]
 8012bc8:	42ae      	cmp	r6, r5
 8012bca:	d017      	beq.n	8012bfc <udp_recv2+0x44>
 8012bcc:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8012bd0:	1d06      	adds	r6, r0, #4
 8012bd2:	fb0c f505 	mul.w	r5, ip, r5
 8012bd6:	442e      	add	r6, r5
 8012bd8:	4405      	add	r5, r0
 8012bda:	4426      	add	r6, r4
 8012bdc:	442c      	add	r4, r5
 8012bde:	600e      	str	r6, [r1, #0]
 8012be0:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8012be4:	6011      	str	r1, [r2, #0]
 8012be6:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 8012bea:	801a      	strh	r2, [r3, #0]
 8012bec:	887b      	ldrh	r3, [r7, #2]
 8012bee:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8012bf2:	3301      	adds	r3, #1
 8012bf4:	f003 0301 	and.w	r3, r3, #1
 8012bf8:	807b      	strh	r3, [r7, #2]
 8012bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012bfc:	2000      	movs	r0, #0
 8012bfe:	e7fc      	b.n	8012bfa <udp_recv2+0x42>
 8012c00:	20009324 	andcs	r9, r0, r4, lsr #6

08012c04 <udp_send>:
 8012c04:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012c08:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8012d5c <udp_send+0x158>
 8012c0c:	461c      	mov	r4, r3
 8012c0e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8012c12:	4607      	mov	r7, r0
 8012c14:	4688      	mov	r8, r1
 8012c16:	4616      	mov	r6, r2
 8012c18:	2b00      	cmp	r3, #0
 8012c1a:	f000 808b 	beq.w	8012d34 <udp_send+0x130>
 8012c1e:	1c63      	adds	r3, r4, #1
 8012c20:	d141      	bne.n	8012ca6 <udp_send+0xa2>
 8012c22:	4a46      	ldr	r2, [pc, #280]	; (8012d3c <udp_send+0x138>)
 8012c24:	2307      	movs	r3, #7
 8012c26:	4611      	mov	r1, r2
 8012c28:	20ff      	movs	r0, #255	; 0xff
 8012c2a:	e001      	b.n	8012c30 <udp_send+0x2c>
 8012c2c:	f802 0b01 	strb.w	r0, [r2], #1
 8012c30:	3b01      	subs	r3, #1
 8012c32:	d1fb      	bne.n	8012c2c <udp_send+0x28>
 8012c34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012c38:	83cb      	strh	r3, [r1, #30]
 8012c3a:	840b      	strh	r3, [r1, #32]
 8012c3c:	f8df a120 	ldr.w	sl, [pc, #288]	; 8012d60 <udp_send+0x15c>
 8012c40:	4c3e      	ldr	r4, [pc, #248]	; (8012d3c <udp_send+0x138>)
 8012c42:	f8ba 3000 	ldrh.w	r3, [sl]
 8012c46:	8263      	strh	r3, [r4, #18]
 8012c48:	f106 031c 	add.w	r3, r6, #28
 8012c4c:	ba5b      	rev16	r3, r3
 8012c4e:	2500      	movs	r5, #0
 8012c50:	2114      	movs	r1, #20
 8012c52:	f104 000e 	add.w	r0, r4, #14
 8012c56:	8223      	strh	r3, [r4, #16]
 8012c58:	8325      	strh	r5, [r4, #24]
 8012c5a:	f001 fd48 	bl	80146ee <net_chksum>
 8012c5e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8012c62:	8320      	strh	r0, [r4, #24]
 8012c64:	ba5b      	rev16	r3, r3
 8012c66:	8463      	strh	r3, [r4, #34]	; 0x22
 8012c68:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012c6c:	ba5b      	rev16	r3, r3
 8012c6e:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8012c72:	84a3      	strh	r3, [r4, #36]	; 0x24
 8012c74:	f106 0308 	add.w	r3, r6, #8
 8012c78:	ba5b      	rev16	r3, r3
 8012c7a:	4632      	mov	r2, r6
 8012c7c:	4641      	mov	r1, r8
 8012c7e:	bf28      	it	cs
 8012c80:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8012c84:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8012c88:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012c8a:	f7ff fee7 	bl	8012a5c <net_memcpy>
 8012c8e:	4620      	mov	r0, r4
 8012c90:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8012c94:	f004 fa40 	bl	8017118 <emac_eth_send>
 8012c98:	f8ba 3000 	ldrh.w	r3, [sl]
 8012c9c:	3301      	adds	r3, #1
 8012c9e:	f8aa 3000 	strh.w	r3, [sl]
 8012ca2:	4628      	mov	r0, r5
 8012ca4:	e037      	b.n	8012d16 <udp_send+0x112>
 8012ca6:	4b26      	ldr	r3, [pc, #152]	; (8012d40 <udp_send+0x13c>)
 8012ca8:	681b      	ldr	r3, [r3, #0]
 8012caa:	43a3      	bics	r3, r4
 8012cac:	d10f      	bne.n	8012cce <udp_send+0xca>
 8012cae:	4a23      	ldr	r2, [pc, #140]	; (8012d3c <udp_send+0x138>)
 8012cb0:	2307      	movs	r3, #7
 8012cb2:	21ff      	movs	r1, #255	; 0xff
 8012cb4:	e001      	b.n	8012cba <udp_send+0xb6>
 8012cb6:	f802 1b01 	strb.w	r1, [r2], #1
 8012cba:	3b01      	subs	r3, #1
 8012cbc:	d1fb      	bne.n	8012cb6 <udp_send+0xb2>
 8012cbe:	2204      	movs	r2, #4
 8012cc0:	4820      	ldr	r0, [pc, #128]	; (8012d44 <udp_send+0x140>)
 8012cc2:	9401      	str	r4, [sp, #4]
 8012cc4:	eb0d 0102 	add.w	r1, sp, r2
 8012cc8:	f7ff febe 	bl	8012a48 <memcpy.isra.0>
 8012ccc:	e7b6      	b.n	8012c3c <udp_send+0x38>
 8012cce:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8012cd2:	2be0      	cmp	r3, #224	; 0xe0
 8012cd4:	d10e      	bne.n	8012cf4 <udp_send+0xf0>
 8012cd6:	491c      	ldr	r1, [pc, #112]	; (8012d48 <udp_send+0x144>)
 8012cd8:	4818      	ldr	r0, [pc, #96]	; (8012d3c <udp_send+0x138>)
 8012cda:	f3c4 2206 	ubfx	r2, r4, #8, #7
 8012cde:	70ca      	strb	r2, [r1, #3]
 8012ce0:	f3c4 4207 	ubfx	r2, r4, #16, #8
 8012ce4:	710a      	strb	r2, [r1, #4]
 8012ce6:	f3c4 6207 	ubfx	r2, r4, #24, #8
 8012cea:	714a      	strb	r2, [r1, #5]
 8012cec:	2206      	movs	r2, #6
 8012cee:	f7ff feab 	bl	8012a48 <memcpy.isra.0>
 8012cf2:	e7e4      	b.n	8012cbe <udp_send+0xba>
 8012cf4:	4b15      	ldr	r3, [pc, #84]	; (8012d4c <udp_send+0x148>)
 8012cf6:	681b      	ldr	r3, [r3, #0]
 8012cf8:	43a3      	bics	r3, r4
 8012cfa:	d00f      	beq.n	8012d1c <udp_send+0x118>
 8012cfc:	4d14      	ldr	r5, [pc, #80]	; (8012d50 <udp_send+0x14c>)
 8012cfe:	490f      	ldr	r1, [pc, #60]	; (8012d3c <udp_send+0x138>)
 8012d00:	6828      	ldr	r0, [r5, #0]
 8012d02:	f001 f9c5 	bl	8014090 <arp_cache_lookup>
 8012d06:	682b      	ldr	r3, [r5, #0]
 8012d08:	4298      	cmp	r0, r3
 8012d0a:	d0d8      	beq.n	8012cbe <udp_send+0xba>
 8012d0c:	4811      	ldr	r0, [pc, #68]	; (8012d54 <udp_send+0x150>)
 8012d0e:	f002 fe65 	bl	80159dc <console_error>
 8012d12:	f06f 0002 	mvn.w	r0, #2
 8012d16:	b002      	add	sp, #8
 8012d18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d1c:	4907      	ldr	r1, [pc, #28]	; (8012d3c <udp_send+0x138>)
 8012d1e:	4620      	mov	r0, r4
 8012d20:	f001 f9b6 	bl	8014090 <arp_cache_lookup>
 8012d24:	42a0      	cmp	r0, r4
 8012d26:	d0ca      	beq.n	8012cbe <udp_send+0xba>
 8012d28:	480b      	ldr	r0, [pc, #44]	; (8012d58 <udp_send+0x154>)
 8012d2a:	f002 fe57 	bl	80159dc <console_error>
 8012d2e:	f06f 0001 	mvn.w	r0, #1
 8012d32:	e7f0      	b.n	8012d16 <udp_send+0x112>
 8012d34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012d38:	e7ed      	b.n	8012d16 <udp_send+0x112>
 8012d3a:	bf00      	nop
 8012d3c:	2000efc4 	andcs	lr, r0, r4, asr #31
 8012d40:	200092f4 	strdcs	r9, [r0], -r4
 8012d44:	2000efe2 	andcs	lr, r0, r2, ror #31
 8012d48:	20000014 	andcs	r0, r0, r4, lsl r0
 8012d4c:	200092fc 	strdcs	r9, [r0], -ip
 8012d50:	200092f8 	strdcs	r9, [r0], -r8
 8012d54:	0801b56b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, ip, sp, pc}
 8012d58:	0801b591 	stmdaeq	r1, {r0, r4, r7, r8, sl, ip, sp, pc}
 8012d5c:	20009304 	andcs	r9, r0, r4, lsl #6
 8012d60:	20009300 	andcs	r9, r0, r0, lsl #6

08012d64 <strlen>:
 8012d64:	4603      	mov	r3, r0
 8012d66:	461a      	mov	r2, r3
 8012d68:	3301      	adds	r3, #1
 8012d6a:	7811      	ldrb	r1, [r2, #0]
 8012d6c:	2900      	cmp	r1, #0
 8012d6e:	d1fa      	bne.n	8012d66 <strlen+0x2>
 8012d70:	1a10      	subs	r0, r2, r0
 8012d72:	4770      	bx	lr

08012d74 <strcmp>:
 8012d74:	1e43      	subs	r3, r0, #1
 8012d76:	3901      	subs	r1, #1
 8012d78:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012d7c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8012d80:	4290      	cmp	r0, r2
 8012d82:	d001      	beq.n	8012d88 <strcmp+0x14>
 8012d84:	1a80      	subs	r0, r0, r2
 8012d86:	e001      	b.n	8012d8c <strcmp+0x18>
 8012d88:	2800      	cmp	r0, #0
 8012d8a:	d1f5      	bne.n	8012d78 <strcmp+0x4>
 8012d8c:	4770      	bx	lr

08012d8e <strcpy.isra.0>:
 8012d8e:	3801      	subs	r0, #1
 8012d90:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012d94:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012d98:	2b00      	cmp	r3, #0
 8012d9a:	d1f9      	bne.n	8012d90 <strcpy.isra.0+0x2>
 8012d9c:	4770      	bx	lr

08012d9e <strcat.isra.0>:
 8012d9e:	b513      	push	{r0, r1, r4, lr}
 8012da0:	4604      	mov	r4, r0
 8012da2:	9101      	str	r1, [sp, #4]
 8012da4:	f7ff ffde 	bl	8012d64 <strlen>
 8012da8:	9901      	ldr	r1, [sp, #4]
 8012daa:	4420      	add	r0, r4
 8012dac:	b002      	add	sp, #8
 8012dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012db2:	f7ff bfec 	b.w	8012d8e <strcpy.isra.0>
	...

08012db8 <MDNS::MDNS()>:
 8012db8:	b513      	push	{r0, r1, r4, lr}
 8012dba:	4604      	mov	r4, r0
 8012dbc:	a901      	add	r1, sp, #4
 8012dbe:	4804      	ldr	r0, [pc, #16]	; (8012dd0 <MDNS::MDNS()+0x18>)
 8012dc0:	f003 f8c8 	bl	8015f54 <inet_aton>
 8012dc4:	4b03      	ldr	r3, [pc, #12]	; (8012dd4 <MDNS::MDNS()+0x1c>)
 8012dc6:	9a01      	ldr	r2, [sp, #4]
 8012dc8:	601a      	str	r2, [r3, #0]
 8012dca:	4620      	mov	r0, r4
 8012dcc:	b002      	add	sp, #8
 8012dce:	bd10      	pop	{r4, pc}
 8012dd0:	0801b5c2 	stmdaeq	r1, {r1, r6, r7, r8, sl, ip, sp, pc}
 8012dd4:	2000f5b8 			; <UNDEFINED> instruction: 0x2000f5b8

08012dd8 <MDNS::SetName(char const*)>:
 8012dd8:	b538      	push	{r3, r4, r5, lr}
 8012dda:	4d0b      	ldr	r5, [pc, #44]	; (8012e08 <MDNS::SetName(char const*)+0x30>)
 8012ddc:	6828      	ldr	r0, [r5, #0]
 8012dde:	460c      	mov	r4, r1
 8012de0:	b108      	cbz	r0, 8012de6 <MDNS::SetName(char const*)+0xe>
 8012de2:	f003 f8b1 	bl	8015f48 <operator delete[](void*)>
 8012de6:	4620      	mov	r0, r4
 8012de8:	f7ff ffbc 	bl	8012d64 <strlen>
 8012dec:	3007      	adds	r0, #7
 8012dee:	f003 f8af 	bl	8015f50 <operator new[](unsigned int)>
 8012df2:	4621      	mov	r1, r4
 8012df4:	6028      	str	r0, [r5, #0]
 8012df6:	f7ff ffca 	bl	8012d8e <strcpy.isra.0>
 8012dfa:	6828      	ldr	r0, [r5, #0]
 8012dfc:	4903      	ldr	r1, [pc, #12]	; (8012e0c <MDNS::SetName(char const*)+0x34>)
 8012dfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012e02:	f7ff bfcc 	b.w	8012d9e <strcat.isra.0>
 8012e06:	bf00      	nop
 8012e08:	2000f9e8 	andcs	pc, r0, r8, ror #19
 8012e0c:	0801b5d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sl, ip, sp, pc}

08012e10 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8012e10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012e14:	f04f 0e00 	mov.w	lr, #0
 8012e18:	4e1c      	ldr	r6, [pc, #112]	; (8012e8c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 8012e1a:	4f1d      	ldr	r7, [pc, #116]	; (8012e90 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 8012e1c:	4675      	mov	r5, lr
 8012e1e:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8012e22:	780b      	ldrb	r3, [r1, #0]
 8012e24:	1c68      	adds	r0, r5, #1
 8012e26:	b913      	cbnz	r3, 8012e2e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 8012e28:	7013      	strb	r3, [r2, #0]
 8012e2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e2e:	2b3f      	cmp	r3, #63	; 0x3f
 8012e30:	d91c      	bls.n	8012e6c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 8012e32:	7849      	ldrb	r1, [r1, #1]
 8012e34:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8012e38:	430b      	orrs	r3, r1
 8012e3a:	6839      	ldr	r1, [r7, #0]
 8012e3c:	5ccc      	ldrb	r4, [r1, r3]
 8012e3e:	3301      	adds	r3, #1
 8012e40:	4419      	add	r1, r3
 8012e42:	f1be 0f00 	cmp.w	lr, #0
 8012e46:	bf08      	it	eq
 8012e48:	4605      	moveq	r5, r0
 8012e4a:	2300      	movs	r3, #0
 8012e4c:	42a3      	cmp	r3, r4
 8012e4e:	5cc8      	ldrb	r0, [r1, r3]
 8012e50:	d309      	bcc.n	8012e66 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 8012e52:	4421      	add	r1, r4
 8012e54:	f04f 0e01 	mov.w	lr, #1
 8012e58:	4414      	add	r4, r2
 8012e5a:	780b      	ldrb	r3, [r1, #0]
 8012e5c:	b10b      	cbz	r3, 8012e62 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 8012e5e:	f804 cb01 	strb.w	ip, [r4], #1
 8012e62:	4622      	mov	r2, r4
 8012e64:	e7dd      	b.n	8012e22 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8012e66:	54d0      	strb	r0, [r2, r3]
 8012e68:	3301      	adds	r3, #1
 8012e6a:	e7ef      	b.n	8012e4c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8012e6c:	4688      	mov	r8, r1
 8012e6e:	18d4      	adds	r4, r2, r3
 8012e70:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8012e74:	f802 9b01 	strb.w	r9, [r2], #1
 8012e78:	4294      	cmp	r4, r2
 8012e7a:	d1f9      	bne.n	8012e70 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8012e7c:	1c5a      	adds	r2, r3, #1
 8012e7e:	4411      	add	r1, r2
 8012e80:	f1be 0f00 	cmp.w	lr, #0
 8012e84:	d1e9      	bne.n	8012e5a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8012e86:	181d      	adds	r5, r3, r0
 8012e88:	e7e7      	b.n	8012e5a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8012e8a:	bf00      	nop
 8012e8c:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8012e90:	2000f9ec 	andcs	pc, r0, ip, ror #19

08012e94 <MDNS::FindFirstDotFromRight(char const*) const>:
 8012e94:	b510      	push	{r4, lr}
 8012e96:	4608      	mov	r0, r1
 8012e98:	460c      	mov	r4, r1
 8012e9a:	f7ff ff63 	bl	8012d64 <strlen>
 8012e9e:	4420      	add	r0, r4
 8012ea0:	42a0      	cmp	r0, r4
 8012ea2:	d903      	bls.n	8012eac <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8012ea4:	f810 3901 	ldrb.w	r3, [r0], #-1
 8012ea8:	2b2e      	cmp	r3, #46	; 0x2e
 8012eaa:	d1f9      	bne.n	8012ea0 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8012eac:	3001      	adds	r0, #1
 8012eae:	bd10      	pop	{r4, pc}

08012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>:
 8012eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012eb2:	4610      	mov	r0, r2
 8012eb4:	1c44      	adds	r4, r0, #1
 8012eb6:	460f      	mov	r7, r1
 8012eb8:	463d      	mov	r5, r7
 8012eba:	f817 6b01 	ldrb.w	r6, [r7], #1
 8012ebe:	b946      	cbnz	r6, 8012ed2 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 8012ec0:	1a69      	subs	r1, r5, r1
 8012ec2:	7001      	strb	r1, [r0, #0]
 8012ec4:	7829      	ldrb	r1, [r5, #0]
 8012ec6:	b949      	cbnz	r1, 8012edc <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8012ec8:	b10b      	cbz	r3, 8012ece <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8012eca:	f804 1b01 	strb.w	r1, [r4], #1
 8012ece:	1aa0      	subs	r0, r4, r2
 8012ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ed2:	2e2e      	cmp	r6, #46	; 0x2e
 8012ed4:	d0f4      	beq.n	8012ec0 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8012ed6:	f804 6b01 	strb.w	r6, [r4], #1
 8012eda:	e7ed      	b.n	8012eb8 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8012edc:	1c69      	adds	r1, r5, #1
 8012ede:	4620      	mov	r0, r4
 8012ee0:	e7e8      	b.n	8012eb4 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08012ee4 <MDNS::CreateAnswerLocalIpAddress()>:
 8012ee4:	b510      	push	{r4, lr}
 8012ee6:	4c10      	ldr	r4, [pc, #64]	; (8012f28 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8012ee8:	4910      	ldr	r1, [pc, #64]	; (8012f2c <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8012eea:	2384      	movs	r3, #132	; 0x84
 8012eec:	80e3      	strh	r3, [r4, #6]
 8012eee:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8012ef2:	2300      	movs	r3, #0
 8012ef4:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8012ef8:	6809      	ldr	r1, [r1, #0]
 8012efa:	f104 0210 	add.w	r2, r4, #16
 8012efe:	2301      	movs	r3, #1
 8012f00:	f7ff ffd6 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012f04:	490a      	ldr	r1, [pc, #40]	; (8012f30 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8012f06:	5011      	str	r1, [r2, r0]
 8012f08:	1813      	adds	r3, r2, r0
 8012f0a:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8012f0e:	605a      	str	r2, [r3, #4]
 8012f10:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8012f14:	811a      	strh	r2, [r3, #8]
 8012f16:	4a07      	ldr	r2, [pc, #28]	; (8012f34 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8012f18:	6812      	ldr	r2, [r2, #0]
 8012f1a:	6952      	ldr	r2, [r2, #20]
 8012f1c:	f8c3 200a 	str.w	r2, [r3, #10]
 8012f20:	1b1b      	subs	r3, r3, r4
 8012f22:	330a      	adds	r3, #10
 8012f24:	6023      	str	r3, [r4, #0]
 8012f26:	bd10      	pop	{r4, pc}
 8012f28:	2000f5bc 			; <UNDEFINED> instruction: 0x2000f5bc
 8012f2c:	2000f9e8 	andcs	pc, r0, r8, ror #19
 8012f30:	01800100 	orreq	r0, r0, r0, lsl #2
 8012f34:	2000f9f0 	strdcs	pc, [r0], -r0

08012f38 <MDNS::Start()>:
 8012f38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012f3a:	4c1d      	ldr	r4, [pc, #116]	; (8012fb0 <MDNS::Start()+0x78>)
 8012f3c:	4e1d      	ldr	r6, [pc, #116]	; (8012fb4 <MDNS::Start()+0x7c>)
 8012f3e:	4f1e      	ldr	r7, [pc, #120]	; (8012fb8 <MDNS::Start()+0x80>)
 8012f40:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8012f44:	4605      	mov	r5, r0
 8012f46:	6820      	ldr	r0, [r4, #0]
 8012f48:	f000 fb2c 	bl	80135a4 <Network::Begin(unsigned short)>
 8012f4c:	683a      	ldr	r2, [r7, #0]
 8012f4e:	6030      	str	r0, [r6, #0]
 8012f50:	4601      	mov	r1, r0
 8012f52:	6820      	ldr	r0, [r4, #0]
 8012f54:	f000 fb37 	bl	80135c6 <Network::JoinGroup(int, unsigned int)>
 8012f58:	4b18      	ldr	r3, [pc, #96]	; (8012fbc <MDNS::Start()+0x84>)
 8012f5a:	681b      	ldr	r3, [r3, #0]
 8012f5c:	b923      	cbnz	r3, 8012f68 <MDNS::Start()+0x30>
 8012f5e:	6821      	ldr	r1, [r4, #0]
 8012f60:	4628      	mov	r0, r5
 8012f62:	3120      	adds	r1, #32
 8012f64:	f7ff ff38 	bl	8012dd8 <MDNS::SetName(char const*)>
 8012f68:	4628      	mov	r0, r5
 8012f6a:	f7ff ffbb 	bl	8012ee4 <MDNS::CreateAnswerLocalIpAddress()>
 8012f6e:	4914      	ldr	r1, [pc, #80]	; (8012fc0 <MDNS::Start()+0x88>)
 8012f70:	7830      	ldrb	r0, [r6, #0]
 8012f72:	f831 2b04 	ldrh.w	r2, [r1], #4
 8012f76:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012f7a:	9300      	str	r3, [sp, #0]
 8012f7c:	683b      	ldr	r3, [r7, #0]
 8012f7e:	f7ff fe41 	bl	8012c04 <udp_send>
 8012f82:	6820      	ldr	r0, [r4, #0]
 8012f84:	4c0f      	ldr	r4, [pc, #60]	; (8012fc4 <MDNS::Start()+0x8c>)
 8012f86:	f100 0260 	add.w	r2, r0, #96	; 0x60
 8012f8a:	233f      	movs	r3, #63	; 0x3f
 8012f8c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012f90:	b929      	cbnz	r1, 8012f9e <MDNS::Start()+0x66>
 8012f92:	4413      	add	r3, r2
 8012f94:	429a      	cmp	r2, r3
 8012f96:	d006      	beq.n	8012fa6 <MDNS::Start()+0x6e>
 8012f98:	f802 1b01 	strb.w	r1, [r2], #1
 8012f9c:	e7fa      	b.n	8012f94 <MDNS::Start()+0x5c>
 8012f9e:	3b01      	subs	r3, #1
 8012fa0:	f802 1b01 	strb.w	r1, [r2], #1
 8012fa4:	d1f2      	bne.n	8012f8c <MDNS::Start()+0x54>
 8012fa6:	2300      	movs	r3, #0
 8012fa8:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 8012fac:	b003      	add	sp, #12
 8012fae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fb0:	2000f9f0 	strdcs	pc, [r0], -r0
 8012fb4:	2000001c 	andcs	r0, r0, ip, lsl r0
 8012fb8:	2000f5b8 			; <UNDEFINED> instruction: 0x2000f5b8
 8012fbc:	2000f9e8 	andcs	pc, r0, r8, ror #19
 8012fc0:	2000f5bc 			; <UNDEFINED> instruction: 0x2000f5bc
 8012fc4:	0801b5d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sl, ip, sp, pc}

08012fc8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8012fc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012fca:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8012fce:	4c1b      	ldr	r4, [pc, #108]	; (801303c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 8012fd0:	2300      	movs	r3, #0
 8012fd2:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8012fd6:	f854 100c 	ldr.w	r1, [r4, ip]
 8012fda:	4607      	mov	r7, r0
 8012fdc:	f7ff ff68 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012fe0:	4616      	mov	r6, r2
 8012fe2:	7bac      	ldrb	r4, [r5, #14]
 8012fe4:	4916      	ldr	r1, [pc, #88]	; (8013040 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8012fe6:	4402      	add	r2, r0
 8012fe8:	4816      	ldr	r0, [pc, #88]	; (8013044 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8012fea:	2301      	movs	r3, #1
 8012fec:	429c      	cmp	r4, r3
 8012fee:	bf18      	it	ne
 8012ff0:	4601      	movne	r1, r0
 8012ff2:	4638      	mov	r0, r7
 8012ff4:	f7ff ff5c 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012ff8:	4b13      	ldr	r3, [pc, #76]	; (8013048 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8012ffa:	5013      	str	r3, [r2, r0]
 8012ffc:	1814      	adds	r4, r2, r0
 8012ffe:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8013002:	6063      	str	r3, [r4, #4]
 8013004:	4b11      	ldr	r3, [pc, #68]	; (801304c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8013006:	6819      	ldr	r1, [r3, #0]
 8013008:	9101      	str	r1, [sp, #4]
 801300a:	4608      	mov	r0, r1
 801300c:	f7ff feaa 	bl	8012d64 <strlen>
 8013010:	f100 0308 	add.w	r3, r0, #8
 8013014:	ba5b      	rev16	r3, r3
 8013016:	8123      	strh	r3, [r4, #8]
 8013018:	2300      	movs	r3, #0
 801301a:	f8c4 300a 	str.w	r3, [r4, #10]
 801301e:	89ab      	ldrh	r3, [r5, #12]
 8013020:	9901      	ldr	r1, [sp, #4]
 8013022:	ba5b      	rev16	r3, r3
 8013024:	81e3      	strh	r3, [r4, #14]
 8013026:	f104 0210 	add.w	r2, r4, #16
 801302a:	2301      	movs	r3, #1
 801302c:	4638      	mov	r0, r7
 801302e:	f7ff ff3f 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8013032:	4410      	add	r0, r2
 8013034:	1b80      	subs	r0, r0, r6
 8013036:	b003      	add	sp, #12
 8013038:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801303a:	bf00      	nop
 801303c:	2000f7c0 	andcs	pc, r0, r0, asr #15
 8013040:	0801b5ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp, pc}
 8013044:	0801b5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, ip, sp, pc}
 8013048:	01802100 	orreq	r2, r0, r0, lsl #2
 801304c:	2000f9e8 	andcs	pc, r0, r8, ror #19

08013050 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8013050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013054:	4e19      	ldr	r6, [pc, #100]	; (80130bc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8013056:	010f      	lsls	r7, r1, #4
 8013058:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 801305c:	2300      	movs	r3, #0
 801305e:	59f1      	ldr	r1, [r6, r7]
 8013060:	4604      	mov	r4, r0
 8013062:	f7ff ff25 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8013066:	4690      	mov	r8, r2
 8013068:	7bae      	ldrb	r6, [r5, #14]
 801306a:	4915      	ldr	r1, [pc, #84]	; (80130c0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 801306c:	4402      	add	r2, r0
 801306e:	4815      	ldr	r0, [pc, #84]	; (80130c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8013070:	2301      	movs	r3, #1
 8013072:	429e      	cmp	r6, r3
 8013074:	bf18      	it	ne
 8013076:	4601      	movne	r1, r0
 8013078:	4620      	mov	r0, r4
 801307a:	f7ff ff19 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 801307e:	4b12      	ldr	r3, [pc, #72]	; (80130c8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8013080:	5013      	str	r3, [r2, r0]
 8013082:	1816      	adds	r6, r2, r0
 8013084:	68a8      	ldr	r0, [r5, #8]
 8013086:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801308a:	6073      	str	r3, [r6, #4]
 801308c:	f106 040b 	add.w	r4, r6, #11
 8013090:	b938      	cbnz	r0, 80130a2 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8013092:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013096:	8133      	strh	r3, [r6, #8]
 8013098:	72b0      	strb	r0, [r6, #10]
 801309a:	eba4 0008 	sub.w	r0, r4, r8
 801309e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130a2:	f7ff fe5f 	bl	8012d64 <strlen>
 80130a6:	1c43      	adds	r3, r0, #1
 80130a8:	72b0      	strb	r0, [r6, #10]
 80130aa:	ba5b      	rev16	r3, r3
 80130ac:	4607      	mov	r7, r0
 80130ae:	68a9      	ldr	r1, [r5, #8]
 80130b0:	8133      	strh	r3, [r6, #8]
 80130b2:	4620      	mov	r0, r4
 80130b4:	f7ff fe6b 	bl	8012d8e <strcpy.isra.0>
 80130b8:	443c      	add	r4, r7
 80130ba:	e7ee      	b.n	801309a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 80130bc:	2000f7c0 	andcs	pc, r0, r0, asr #15
 80130c0:	0801b5ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp, pc}
 80130c4:	0801b5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, ip, sp, pc}
 80130c8:	01801000 	orreq	r1, r0, r0

080130cc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 80130cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80130d0:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8013144 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x78>
 80130d4:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 80130d8:	ea4f 1901 	mov.w	r9, r1, lsl #4
 80130dc:	2301      	movs	r3, #1
 80130de:	6869      	ldr	r1, [r5, #4]
 80130e0:	4607      	mov	r7, r0
 80130e2:	f7ff fee5 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 80130e6:	f858 1009 	ldr.w	r1, [r8, r9]
 80130ea:	4b13      	ldr	r3, [pc, #76]	; (8013138 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 80130ec:	5013      	str	r3, [r2, r0]
 80130ee:	1816      	adds	r6, r2, r0
 80130f0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80130f4:	6073      	str	r3, [r6, #4]
 80130f6:	4608      	mov	r0, r1
 80130f8:	4614      	mov	r4, r2
 80130fa:	9101      	str	r1, [sp, #4]
 80130fc:	f7ff fe32 	bl	8012d64 <strlen>
 8013100:	f100 030d 	add.w	r3, r0, #13
 8013104:	ba5b      	rev16	r3, r3
 8013106:	9901      	ldr	r1, [sp, #4]
 8013108:	8133      	strh	r3, [r6, #8]
 801310a:	f106 020a 	add.w	r2, r6, #10
 801310e:	2300      	movs	r3, #0
 8013110:	4638      	mov	r0, r7
 8013112:	f7ff fecd 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8013116:	7bad      	ldrb	r5, [r5, #14]
 8013118:	4908      	ldr	r1, [pc, #32]	; (801313c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 801311a:	4402      	add	r2, r0
 801311c:	4808      	ldr	r0, [pc, #32]	; (8013140 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 801311e:	2301      	movs	r3, #1
 8013120:	429d      	cmp	r5, r3
 8013122:	bf18      	it	ne
 8013124:	4601      	movne	r1, r0
 8013126:	4638      	mov	r0, r7
 8013128:	f7ff fec2 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 801312c:	4410      	add	r0, r2
 801312e:	1b00      	subs	r0, r0, r4
 8013130:	b003      	add	sp, #12
 8013132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013136:	bf00      	nop
 8013138:	01000c00 	tsteq	r0, r0, lsl #24
 801313c:	0801b5ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp, pc}
 8013140:	0801b5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, ip, sp, pc}
 8013144:	2000f7c0 	andcs	pc, r0, r0, asr #15

08013148 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8013148:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801314a:	2301      	movs	r3, #1
 801314c:	460f      	mov	r7, r1
 801314e:	4910      	ldr	r1, [pc, #64]	; (8013190 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8013150:	4606      	mov	r6, r0
 8013152:	f7ff fead 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8013156:	490f      	ldr	r1, [pc, #60]	; (8013194 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8013158:	4b0f      	ldr	r3, [pc, #60]	; (8013198 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x50>)
 801315a:	5013      	str	r3, [r2, r0]
 801315c:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 8013160:	1815      	adds	r5, r2, r0
 8013162:	6849      	ldr	r1, [r1, #4]
 8013164:	9101      	str	r1, [sp, #4]
 8013166:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801316a:	606b      	str	r3, [r5, #4]
 801316c:	4608      	mov	r0, r1
 801316e:	4614      	mov	r4, r2
 8013170:	f7ff fdf8 	bl	8012d64 <strlen>
 8013174:	1c83      	adds	r3, r0, #2
 8013176:	ba5b      	rev16	r3, r3
 8013178:	812b      	strh	r3, [r5, #8]
 801317a:	f105 020a 	add.w	r2, r5, #10
 801317e:	9901      	ldr	r1, [sp, #4]
 8013180:	2301      	movs	r3, #1
 8013182:	4630      	mov	r0, r6
 8013184:	f7ff fe94 	bl	8012eb0 <MDNS::WriteDnsName(char const*, char*, bool)>
 8013188:	4410      	add	r0, r2
 801318a:	1b00      	subs	r0, r0, r4
 801318c:	b003      	add	sp, #12
 801318e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013190:	0801b5d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, ip, sp, pc}
 8013194:	2000f7c0 	andcs	pc, r0, r0, asr #15
 8013198:	01000c00 	tsteq	r0, r0, lsl #24

0801319c <MDNS::CreateMDNSMessage(unsigned int)>:
 801319c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801319e:	4d1a      	ldr	r5, [pc, #104]	; (8013208 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 80131a0:	2384      	movs	r3, #132	; 0x84
 80131a2:	80eb      	strh	r3, [r5, #6]
 80131a4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80131a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80131ac:	f105 0410 	add.w	r4, r5, #16
 80131b0:	e9c5 2302 	strd	r2, r3, [r5, #8]
 80131b4:	4622      	mov	r2, r4
 80131b6:	4606      	mov	r6, r0
 80131b8:	460f      	mov	r7, r1
 80131ba:	f7ff ff05 	bl	8012fc8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 80131be:	4404      	add	r4, r0
 80131c0:	4622      	mov	r2, r4
 80131c2:	4639      	mov	r1, r7
 80131c4:	4630      	mov	r0, r6
 80131c6:	f7ff ff43 	bl	8013050 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 80131ca:	4404      	add	r4, r0
 80131cc:	4622      	mov	r2, r4
 80131ce:	4639      	mov	r1, r7
 80131d0:	4630      	mov	r0, r6
 80131d2:	f7ff ffb9 	bl	8013148 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 80131d6:	4404      	add	r4, r0
 80131d8:	4622      	mov	r2, r4
 80131da:	4639      	mov	r1, r7
 80131dc:	4630      	mov	r0, r6
 80131de:	f7ff ff75 	bl	80130cc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 80131e2:	4a0a      	ldr	r2, [pc, #40]	; (801320c <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 80131e4:	f852 3b10 	ldr.w	r3, [r2], #16
 80131e8:	4420      	add	r0, r4
 80131ea:	3b0c      	subs	r3, #12
 80131ec:	1e44      	subs	r4, r0, #1
 80131ee:	4619      	mov	r1, r3
 80131f0:	3901      	subs	r1, #1
 80131f2:	d204      	bcs.n	80131fe <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 80131f4:	18c4      	adds	r4, r0, r3
 80131f6:	4b06      	ldr	r3, [pc, #24]	; (8013210 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 80131f8:	1ae4      	subs	r4, r4, r3
 80131fa:	602c      	str	r4, [r5, #0]
 80131fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80131fe:	f812 6b01 	ldrb.w	r6, [r2], #1
 8013202:	f804 6f01 	strb.w	r6, [r4, #1]!
 8013206:	e7f3      	b.n	80131f0 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8013208:	2000f7e4 	andcs	pc, r0, r4, ror #15
 801320c:	2000f5bc 			; <UNDEFINED> instruction: 0x2000f5bc
 8013210:	2000f7e8 	andcs	pc, r0, r8, ror #15

08013214 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8013214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013218:	4d41      	ldr	r5, [pc, #260]	; (8013320 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 801321a:	b085      	sub	sp, #20
 801321c:	682c      	ldr	r4, [r5, #0]
 801321e:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
 8013222:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8013226:	4607      	mov	r7, r0
 8013228:	4616      	mov	r6, r2
 801322a:	b11c      	cbz	r4, 8013234 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x20>
 801322c:	692a      	ldr	r2, [r5, #16]
 801322e:	2a00      	cmp	r2, #0
 8013230:	d172      	bne.n	8013318 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>
 8013232:	2401      	movs	r4, #1
 8013234:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 8013238:	ea4f 1804 	mov.w	r8, r4, lsl #4
 801323c:	8193      	strh	r3, [r2, #12]
 801323e:	f882 a00e 	strb.w	sl, [r2, #14]
 8013242:	2900      	cmp	r1, #0
 8013244:	d158      	bne.n	80132f8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe4>
 8013246:	4b37      	ldr	r3, [pc, #220]	; (8013324 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8013248:	6818      	ldr	r0, [r3, #0]
 801324a:	3020      	adds	r0, #32
 801324c:	f7ff fd8a 	bl	8012d64 <strlen>
 8013250:	4683      	mov	fp, r0
 8013252:	4630      	mov	r0, r6
 8013254:	f7ff fd86 	bl	8012d64 <strlen>
 8013258:	4458      	add	r0, fp
 801325a:	3001      	adds	r0, #1
 801325c:	f002 fe78 	bl	8015f50 <operator new[](unsigned int)>
 8013260:	4b30      	ldr	r3, [pc, #192]	; (8013324 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8013262:	f845 0008 	str.w	r0, [r5, r8]
 8013266:	6819      	ldr	r1, [r3, #0]
 8013268:	3120      	adds	r1, #32
 801326a:	f7ff fd90 	bl	8012d8e <strcpy.isra.0>
 801326e:	f855 0008 	ldr.w	r0, [r5, r8]
 8013272:	4631      	mov	r1, r6
 8013274:	f7ff fd93 	bl	8012d9e <strcat.isra.0>
 8013278:	4631      	mov	r1, r6
 801327a:	4638      	mov	r0, r7
 801327c:	f7ff fe0a 	bl	8012e94 <MDNS::FindFirstDotFromRight(char const*) const>
 8013280:	9003      	str	r0, [sp, #12]
 8013282:	f7ff fd6f 	bl	8012d64 <strlen>
 8013286:	300d      	adds	r0, #13
 8013288:	f002 fe62 	bl	8015f50 <operator new[](unsigned int)>
 801328c:	eb05 0b08 	add.w	fp, r5, r8
 8013290:	9903      	ldr	r1, [sp, #12]
 8013292:	f8cb 0004 	str.w	r0, [fp, #4]
 8013296:	f7ff fd7a 	bl	8012d8e <strcpy.isra.0>
 801329a:	4923      	ldr	r1, [pc, #140]	; (8013328 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 801329c:	f8db 0004 	ldr.w	r0, [fp, #4]
 80132a0:	f7ff fd7d 	bl	8012d9e <strcat.isra.0>
 80132a4:	4921      	ldr	r1, [pc, #132]	; (801332c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 80132a6:	4b22      	ldr	r3, [pc, #136]	; (8013330 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 80132a8:	f8db 0004 	ldr.w	r0, [fp, #4]
 80132ac:	f1ba 0f01 	cmp.w	sl, #1
 80132b0:	bf18      	it	ne
 80132b2:	4619      	movne	r1, r3
 80132b4:	f7ff fd73 	bl	8012d9e <strcat.isra.0>
 80132b8:	f1b9 0f00 	cmp.w	r9, #0
 80132bc:	d00a      	beq.n	80132d4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xc0>
 80132be:	4648      	mov	r0, r9
 80132c0:	f7ff fd50 	bl	8012d64 <strlen>
 80132c4:	3001      	adds	r0, #1
 80132c6:	f002 fe43 	bl	8015f50 <operator new[](unsigned int)>
 80132ca:	4649      	mov	r1, r9
 80132cc:	f8cb 0008 	str.w	r0, [fp, #8]
 80132d0:	f7ff fd5d 	bl	8012d8e <strcpy.isra.0>
 80132d4:	4621      	mov	r1, r4
 80132d6:	4638      	mov	r0, r7
 80132d8:	f7ff ff60 	bl	801319c <MDNS::CreateMDNSMessage(unsigned int)>
 80132dc:	4915      	ldr	r1, [pc, #84]	; (8013334 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 80132de:	4816      	ldr	r0, [pc, #88]	; (8013338 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 80132e0:	f831 2b04 	ldrh.w	r2, [r1], #4
 80132e4:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80132e8:	9300      	str	r3, [sp, #0]
 80132ea:	4b14      	ldr	r3, [pc, #80]	; (801333c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x128>)
 80132ec:	7800      	ldrb	r0, [r0, #0]
 80132ee:	681b      	ldr	r3, [r3, #0]
 80132f0:	f7ff fc88 	bl	8012c04 <udp_send>
 80132f4:	2001      	movs	r0, #1
 80132f6:	e010      	b.n	801331a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x106>
 80132f8:	4608      	mov	r0, r1
 80132fa:	9103      	str	r1, [sp, #12]
 80132fc:	f7ff fd32 	bl	8012d64 <strlen>
 8013300:	4683      	mov	fp, r0
 8013302:	4630      	mov	r0, r6
 8013304:	f7ff fd2e 	bl	8012d64 <strlen>
 8013308:	4458      	add	r0, fp
 801330a:	3001      	adds	r0, #1
 801330c:	f002 fe20 	bl	8015f50 <operator new[](unsigned int)>
 8013310:	9903      	ldr	r1, [sp, #12]
 8013312:	f845 0008 	str.w	r0, [r5, r8]
 8013316:	e7a8      	b.n	801326a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x56>
 8013318:	2000      	movs	r0, #0
 801331a:	b005      	add	sp, #20
 801331c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013320:	2000f7c0 	andcs	pc, r0, r0, asr #15
 8013324:	2000f9f0 	strdcs	pc, [r0], -r0
 8013328:	08019083 	stmdaeq	r1, {r0, r1, r7, ip, pc}
 801332c:	0801b5ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp, pc}
 8013330:	0801b5eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, ip, sp, pc}
 8013334:	2000f7e4 	andcs	pc, r0, r4, ror #15
 8013338:	2000001c 	andcs	r0, r0, ip, lsl r0
 801333c:	2000f5b8 			; <UNDEFINED> instruction: 0x2000f5b8

08013340 <MDNS::HandleRequest(unsigned short)>:
 8013340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013344:	b0c5      	sub	sp, #276	; 0x114
 8013346:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801342c <MDNS::HandleRequest(unsigned short)+0xec>
 801334a:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 8013430 <MDNS::HandleRequest(unsigned short)+0xf0>
 801334e:	9103      	str	r1, [sp, #12]
 8013350:	4605      	mov	r5, r0
 8013352:	2700      	movs	r7, #0
 8013354:	f04f 080c 	mov.w	r8, #12
 8013358:	9b03      	ldr	r3, [sp, #12]
 801335a:	42bb      	cmp	r3, r7
 801335c:	d802      	bhi.n	8013364 <MDNS::HandleRequest(unsigned short)+0x24>
 801335e:	b045      	add	sp, #276	; 0x114
 8013360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013364:	f8da 1000 	ldr.w	r1, [sl]
 8013368:	aa04      	add	r2, sp, #16
 801336a:	4441      	add	r1, r8
 801336c:	4628      	mov	r0, r5
 801336e:	f7ff fd4f 	bl	8012e10 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 8013372:	f8da 2000 	ldr.w	r2, [sl]
 8013376:	4440      	add	r0, r8
 8013378:	1813      	adds	r3, r2, r0
 801337a:	f100 0804 	add.w	r8, r0, #4
 801337e:	885b      	ldrh	r3, [r3, #2]
 8013380:	ba5b      	rev16	r3, r3
 8013382:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8013386:	2b01      	cmp	r3, #1
 8013388:	d13d      	bne.n	8013406 <MDNS::HandleRequest(unsigned short)+0xc6>
 801338a:	5a14      	ldrh	r4, [r2, r0]
 801338c:	4b20      	ldr	r3, [pc, #128]	; (8013410 <MDNS::HandleRequest(unsigned short)+0xd0>)
 801338e:	ba64      	rev16	r4, r4
 8013390:	6818      	ldr	r0, [r3, #0]
 8013392:	a904      	add	r1, sp, #16
 8013394:	b2a4      	uxth	r4, r4
 8013396:	f7ff fced 	bl	8012d74 <strcmp>
 801339a:	b968      	cbnz	r0, 80133b8 <MDNS::HandleRequest(unsigned short)+0x78>
 801339c:	2c01      	cmp	r4, #1
 801339e:	d10b      	bne.n	80133b8 <MDNS::HandleRequest(unsigned short)+0x78>
 80133a0:	491c      	ldr	r1, [pc, #112]	; (8013414 <MDNS::HandleRequest(unsigned short)+0xd4>)
 80133a2:	481d      	ldr	r0, [pc, #116]	; (8013418 <MDNS::HandleRequest(unsigned short)+0xd8>)
 80133a4:	f831 2b04 	ldrh.w	r2, [r1], #4
 80133a8:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80133ac:	9300      	str	r3, [sp, #0]
 80133ae:	4b1b      	ldr	r3, [pc, #108]	; (801341c <MDNS::HandleRequest(unsigned short)+0xdc>)
 80133b0:	7800      	ldrb	r0, [r0, #0]
 80133b2:	681b      	ldr	r3, [r3, #0]
 80133b4:	f7ff fc26 	bl	8012c04 <udp_send>
 80133b8:	4819      	ldr	r0, [pc, #100]	; (8013420 <MDNS::HandleRequest(unsigned short)+0xe0>)
 80133ba:	4e1a      	ldr	r6, [pc, #104]	; (8013424 <MDNS::HandleRequest(unsigned short)+0xe4>)
 80133bc:	a904      	add	r1, sp, #16
 80133be:	f7ff fcd9 	bl	8012d74 <strcmp>
 80133c2:	f04f 0900 	mov.w	r9, #0
 80133c6:	9002      	str	r0, [sp, #8]
 80133c8:	6833      	ldr	r3, [r6, #0]
 80133ca:	b1c3      	cbz	r3, 80133fe <MDNS::HandleRequest(unsigned short)+0xbe>
 80133cc:	9b02      	ldr	r3, [sp, #8]
 80133ce:	b123      	cbz	r3, 80133da <MDNS::HandleRequest(unsigned short)+0x9a>
 80133d0:	6870      	ldr	r0, [r6, #4]
 80133d2:	a904      	add	r1, sp, #16
 80133d4:	f7ff fcce 	bl	8012d74 <strcmp>
 80133d8:	b988      	cbnz	r0, 80133fe <MDNS::HandleRequest(unsigned short)+0xbe>
 80133da:	2c0c      	cmp	r4, #12
 80133dc:	d10f      	bne.n	80133fe <MDNS::HandleRequest(unsigned short)+0xbe>
 80133de:	4649      	mov	r1, r9
 80133e0:	4628      	mov	r0, r5
 80133e2:	f7ff fedb 	bl	801319c <MDNS::CreateMDNSMessage(unsigned int)>
 80133e6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80133ea:	9300      	str	r3, [sp, #0]
 80133ec:	480a      	ldr	r0, [pc, #40]	; (8013418 <MDNS::HandleRequest(unsigned short)+0xd8>)
 80133ee:	4b0b      	ldr	r3, [pc, #44]	; (801341c <MDNS::HandleRequest(unsigned short)+0xdc>)
 80133f0:	f8bb 2000 	ldrh.w	r2, [fp]
 80133f4:	681b      	ldr	r3, [r3, #0]
 80133f6:	490c      	ldr	r1, [pc, #48]	; (8013428 <MDNS::HandleRequest(unsigned short)+0xe8>)
 80133f8:	7800      	ldrb	r0, [r0, #0]
 80133fa:	f7ff fc03 	bl	8012c04 <udp_send>
 80133fe:	3610      	adds	r6, #16
 8013400:	f1b9 0f00 	cmp.w	r9, #0
 8013404:	d001      	beq.n	801340a <MDNS::HandleRequest(unsigned short)+0xca>
 8013406:	3701      	adds	r7, #1
 8013408:	e7a6      	b.n	8013358 <MDNS::HandleRequest(unsigned short)+0x18>
 801340a:	f04f 0901 	mov.w	r9, #1
 801340e:	e7db      	b.n	80133c8 <MDNS::HandleRequest(unsigned short)+0x88>
 8013410:	2000f9e8 	andcs	pc, r0, r8, ror #19
 8013414:	2000f5bc 			; <UNDEFINED> instruction: 0x2000f5bc
 8013418:	2000001c 	andcs	r0, r0, ip, lsl r0
 801341c:	2000f5b8 			; <UNDEFINED> instruction: 0x2000f5b8
 8013420:	0801b5d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, ip, sp, pc}
 8013424:	2000f7c0 	andcs	pc, r0, r0, asr #15
 8013428:	2000f7e8 	andcs	pc, r0, r8, ror #15
 801342c:	2000f9ec 	andcs	pc, r0, ip, ror #19
 8013430:	2000f7e4 	andcs	pc, r0, r4, ror #15

08013434 <MDNS::Parse()>:
 8013434:	4b08      	ldr	r3, [pc, #32]	; (8013458 <MDNS::Parse()+0x24>)
 8013436:	681a      	ldr	r2, [r3, #0]
 8013438:	8853      	ldrh	r3, [r2, #2]
 801343a:	ba5b      	rev16	r3, r3
 801343c:	b299      	uxth	r1, r3
 801343e:	041b      	lsls	r3, r3, #16
 8013440:	d408      	bmi.n	8013454 <MDNS::Parse()+0x20>
 8013442:	0b89      	lsrs	r1, r1, #14
 8013444:	d106      	bne.n	8013454 <MDNS::Parse()+0x20>
 8013446:	8891      	ldrh	r1, [r2, #4]
 8013448:	b28b      	uxth	r3, r1
 801344a:	b11b      	cbz	r3, 8013454 <MDNS::Parse()+0x20>
 801344c:	ba49      	rev16	r1, r1
 801344e:	b289      	uxth	r1, r1
 8013450:	f7ff bf76 	b.w	8013340 <MDNS::HandleRequest(unsigned short)>
 8013454:	4770      	bx	lr
 8013456:	bf00      	nop
 8013458:	2000f9ec 	andcs	pc, r0, ip, ror #19

0801345c <MDNS::Run()>:
 801345c:	b538      	push	{r3, r4, r5, lr}
 801345e:	4d0c      	ldr	r5, [pc, #48]	; (8013490 <MDNS::Run()+0x34>)
 8013460:	490c      	ldr	r1, [pc, #48]	; (8013494 <MDNS::Run()+0x38>)
 8013462:	4a0d      	ldr	r2, [pc, #52]	; (8013498 <MDNS::Run()+0x3c>)
 8013464:	4604      	mov	r4, r0
 8013466:	480d      	ldr	r0, [pc, #52]	; (801349c <MDNS::Run()+0x40>)
 8013468:	462b      	mov	r3, r5
 801346a:	7800      	ldrb	r0, [r0, #0]
 801346c:	f7ff fba4 	bl	8012bb8 <udp_recv2>
 8013470:	4b0b      	ldr	r3, [pc, #44]	; (80134a0 <MDNS::Run()+0x44>)
 8013472:	8829      	ldrh	r1, [r5, #0]
 8013474:	8018      	strh	r0, [r3, #0]
 8013476:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801347a:	4299      	cmp	r1, r3
 801347c:	d106      	bne.n	801348c <MDNS::Run()+0x30>
 801347e:	280c      	cmp	r0, #12
 8013480:	d904      	bls.n	801348c <MDNS::Run()+0x30>
 8013482:	4620      	mov	r0, r4
 8013484:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013488:	f7ff bfd4 	b.w	8013434 <MDNS::Parse()>
 801348c:	bd38      	pop	{r3, r4, r5, pc}
 801348e:	bf00      	nop
 8013490:	2000f5b4 			; <UNDEFINED> instruction: 0x2000f5b4
 8013494:	2000f9ec 	andcs	pc, r0, ip, ror #19
 8013498:	2000f5b0 			; <UNDEFINED> instruction: 0x2000f5b0
 801349c:	2000001c 	andcs	r0, r0, ip, lsl r0
 80134a0:	2000f7e0 	andcs	pc, r0, r0, ror #15

080134a4 <MDNS::Print()>:
 80134a4:	b510      	push	{r4, lr}
 80134a6:	4816      	ldr	r0, [pc, #88]	; (8013500 <MDNS::Print()+0x5c>)
 80134a8:	f7f7 f806 	bl	800a4b8 <printf>
 80134ac:	4b15      	ldr	r3, [pc, #84]	; (8013504 <MDNS::Print()+0x60>)
 80134ae:	681b      	ldr	r3, [r3, #0]
 80134b0:	3301      	adds	r3, #1
 80134b2:	d104      	bne.n	80134be <MDNS::Print()+0x1a>
 80134b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134b8:	4813      	ldr	r0, [pc, #76]	; (8013508 <MDNS::Print()+0x64>)
 80134ba:	f7f6 bffd 	b.w	800a4b8 <printf>
 80134be:	4b13      	ldr	r3, [pc, #76]	; (801350c <MDNS::Print()+0x68>)
 80134c0:	4c13      	ldr	r4, [pc, #76]	; (8013510 <MDNS::Print()+0x6c>)
 80134c2:	6819      	ldr	r1, [r3, #0]
 80134c4:	4813      	ldr	r0, [pc, #76]	; (8013514 <MDNS::Print()+0x70>)
 80134c6:	f7f6 fff7 	bl	800a4b8 <printf>
 80134ca:	6823      	ldr	r3, [r4, #0]
 80134cc:	b14b      	cbz	r3, 80134e2 <MDNS::Print()+0x3e>
 80134ce:	4a12      	ldr	r2, [pc, #72]	; (8013518 <MDNS::Print()+0x74>)
 80134d0:	68a3      	ldr	r3, [r4, #8]
 80134d2:	6861      	ldr	r1, [r4, #4]
 80134d4:	4811      	ldr	r0, [pc, #68]	; (801351c <MDNS::Print()+0x78>)
 80134d6:	2b00      	cmp	r3, #0
 80134d8:	bf08      	it	eq
 80134da:	4613      	moveq	r3, r2
 80134dc:	89a2      	ldrh	r2, [r4, #12]
 80134de:	f7f6 ffeb 	bl	800a4b8 <printf>
 80134e2:	6923      	ldr	r3, [r4, #16]
 80134e4:	b15b      	cbz	r3, 80134fe <MDNS::Print()+0x5a>
 80134e6:	69a3      	ldr	r3, [r4, #24]
 80134e8:	4a0b      	ldr	r2, [pc, #44]	; (8013518 <MDNS::Print()+0x74>)
 80134ea:	6961      	ldr	r1, [r4, #20]
 80134ec:	480b      	ldr	r0, [pc, #44]	; (801351c <MDNS::Print()+0x78>)
 80134ee:	2b00      	cmp	r3, #0
 80134f0:	bf08      	it	eq
 80134f2:	4613      	moveq	r3, r2
 80134f4:	8ba2      	ldrh	r2, [r4, #28]
 80134f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134fa:	f7f6 bfdd 	b.w	800a4b8 <printf>
 80134fe:	bd10      	pop	{r4, pc}
 8013500:	0801b5f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp, pc}
 8013504:	2000001c 	andcs	r0, r0, ip, lsl r0
 8013508:	0801b5fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, ip, sp, pc}
 801350c:	2000f9e8 	andcs	pc, r0, r8, ror #19
 8013510:	2000f7c0 	andcs	pc, r0, r0, asr #15
 8013514:	0801b60a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp, pc}
 8013518:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801351c:	0801b616 	stmdaeq	r1, {r1, r2, r4, r9, sl, ip, sp, pc}

08013520 <strncpy.constprop.0.isra.0>:
 8013520:	3901      	subs	r1, #1
 8013522:	233f      	movs	r3, #63	; 0x3f
 8013524:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8013528:	b92a      	cbnz	r2, 8013536 <strncpy.constprop.0.isra.0+0x16>
 801352a:	4403      	add	r3, r0
 801352c:	4298      	cmp	r0, r3
 801352e:	d006      	beq.n	801353e <strncpy.constprop.0.isra.0+0x1e>
 8013530:	f800 2b01 	strb.w	r2, [r0], #1
 8013534:	e7fa      	b.n	801352c <strncpy.constprop.0.isra.0+0xc>
 8013536:	3b01      	subs	r3, #1
 8013538:	f800 2b01 	strb.w	r2, [r0], #1
 801353c:	d1f2      	bne.n	8013524 <strncpy.constprop.0.isra.0+0x4>
 801353e:	4770      	bx	lr

08013540 <Network::Network()>:
 8013540:	4a12      	ldr	r2, [pc, #72]	; (801358c <Network::Network()+0x4c>)
 8013542:	2300      	movs	r3, #0
 8013544:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8013548:	6010      	str	r0, [r2, #0]
 801354a:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 801354e:	2201      	movs	r2, #1
 8013550:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013554:	e9c0 2100 	strd	r2, r1, [r0]
 8013558:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801355c:	490c      	ldr	r1, [pc, #48]	; (8013590 <Network::Network()+0x50>)
 801355e:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8013562:	2200      	movs	r2, #0
 8013564:	6102      	str	r2, [r0, #16]
 8013566:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 801356a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 801356e:	61c3      	str	r3, [r0, #28]
 8013570:	f880 3020 	strb.w	r3, [r0, #32]
 8013574:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8013578:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 801357c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013580:	f802 3f01 	strb.w	r3, [r2, #1]!
 8013584:	2b00      	cmp	r3, #0
 8013586:	d1f9      	bne.n	801357c <Network::Network()+0x3c>
 8013588:	4770      	bx	lr
 801358a:	bf00      	nop
 801358c:	2000f9f0 	strdcs	pc, [r0], -r0
 8013590:	0801b621 	stmdaeq	r1, {r0, r5, r9, sl, ip, sp, pc}

08013594 <Network::Shutdown()>:
 8013594:	b508      	push	{r3, lr}
 8013596:	30bc      	adds	r0, #188	; 0xbc
 8013598:	f001 fc8a 	bl	8014eb0 <NetworkDisplay::ShowShutdown()>
 801359c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80135a0:	f7f4 be50 	b.w	8008244 <net_shutdown>

080135a4 <Network::Begin(unsigned short)>:
 80135a4:	4608      	mov	r0, r1
 80135a6:	f7ff ba97 	b.w	8012ad8 <udp_bind>

080135aa <Network::End(unsigned short)>:
 80135aa:	4608      	mov	r0, r1
 80135ac:	f7ff baae 	b.w	8012b0c <udp_unbind>

080135b0 <Network::MacAddressCopyTo(unsigned char*)>:
 80135b0:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 80135b4:	3901      	subs	r1, #1
 80135b6:	30a5      	adds	r0, #165	; 0xa5
 80135b8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80135bc:	f801 2f01 	strb.w	r2, [r1, #1]!
 80135c0:	4283      	cmp	r3, r0
 80135c2:	d1f9      	bne.n	80135b8 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 80135c4:	4770      	bx	lr

080135c6 <Network::JoinGroup(int, unsigned int)>:
 80135c6:	4610      	mov	r0, r2
 80135c8:	f001 b81c 	b.w	8014604 <igmp_join>

080135cc <Network::LeaveGroup(int, unsigned int)>:
 80135cc:	4610      	mov	r0, r2
 80135ce:	f001 b845 	b.w	801465c <igmp_leave>

080135d2 <Network::SetDefaultIp()>:
 80135d2:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80135d6:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 80135da:	041b      	lsls	r3, r3, #16
 80135dc:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80135e0:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 80135e4:	3302      	adds	r3, #2
 80135e6:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 80135ea:	22ff      	movs	r2, #255	; 0xff
 80135ec:	e9c0 3206 	strd	r3, r2, [r0, #24]
 80135f0:	6143      	str	r3, [r0, #20]
 80135f2:	4770      	bx	lr

080135f4 <Network::Init(NetworkParamsStore*)>:
 80135f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135f8:	b0a5      	sub	sp, #148	; 0x94
 80135fa:	4604      	mov	r4, r0
 80135fc:	a80b      	add	r0, sp, #44	; 0x2c
 80135fe:	f000 faf3 	bl	8013be8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8013602:	a80b      	add	r0, sp, #44	; 0x2c
 8013604:	f000 fafc 	bl	8013c00 <NetworkParams::Load()>
 8013608:	b110      	cbz	r0, 8013610 <Network::Init(NetworkParamsStore*)+0x1c>
 801360a:	a80b      	add	r0, sp, #44	; 0x2c
 801360c:	f000 fccd 	bl	8013faa <NetworkParams::Dump()>
 8013610:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8013614:	4628      	mov	r0, r5
 8013616:	f001 fc2d 	bl	8014e74 <NetworkDisplay::ShowEmacStart()>
 801361a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801361c:	9308      	str	r3, [sp, #32]
 801361e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013620:	9309      	str	r3, [sp, #36]	; 0x24
 8013622:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013624:	930a      	str	r3, [sp, #40]	; 0x28
 8013626:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801362a:	7163      	strb	r3, [r4, #5]
 801362c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801362e:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8013632:	bf18      	it	ne
 8013634:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8013638:	60e2      	str	r2, [r4, #12]
 801363a:	061b      	lsls	r3, r3, #24
 801363c:	bf4c      	ite	mi
 801363e:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 8013642:	2300      	movpl	r3, #0
 8013644:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8013648:	6123      	str	r3, [r4, #16]
 801364a:	4630      	mov	r0, r6
 801364c:	f004 f99a 	bl	8017984 <emac_start(unsigned char*)>
 8013650:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 8013654:	f104 0720 	add.w	r7, r4, #32
 8013658:	2b00      	cmp	r3, #0
 801365a:	f040 80cb 	bne.w	80137f4 <Network::Init(NetworkParamsStore*)+0x200>
 801365e:	4987      	ldr	r1, [pc, #540]	; (801387c <Network::Init(NetworkParamsStore*)+0x288>)
 8013660:	f104 001f 	add.w	r0, r4, #31
 8013664:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013668:	f103 0c01 	add.w	ip, r3, #1
 801366c:	2a00      	cmp	r2, #0
 801366e:	f040 80bd 	bne.w	80137ec <Network::Init(NetworkParamsStore*)+0x1f8>
 8013672:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8013676:	0910      	lsrs	r0, r2, #4
 8013678:	2a9f      	cmp	r2, #159	; 0x9f
 801367a:	f002 020f 	and.w	r2, r2, #15
 801367e:	bf94      	ite	ls
 8013680:	3030      	addls	r0, #48	; 0x30
 8013682:	3037      	addhi	r0, #55	; 0x37
 8013684:	18e1      	adds	r1, r4, r3
 8013686:	2a09      	cmp	r2, #9
 8013688:	44a4      	add	ip, r4
 801368a:	bf94      	ite	ls
 801368c:	3230      	addls	r2, #48	; 0x30
 801368e:	3237      	addhi	r2, #55	; 0x37
 8013690:	f881 0020 	strb.w	r0, [r1, #32]
 8013694:	f88c 2020 	strb.w	r2, [ip, #32]
 8013698:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 801369c:	f103 0802 	add.w	r8, r3, #2
 80136a0:	0910      	lsrs	r0, r2, #4
 80136a2:	2a9f      	cmp	r2, #159	; 0x9f
 80136a4:	eb04 0c08 	add.w	ip, r4, r8
 80136a8:	f002 020f 	and.w	r2, r2, #15
 80136ac:	bf94      	ite	ls
 80136ae:	3030      	addls	r0, #48	; 0x30
 80136b0:	3037      	addhi	r0, #55	; 0x37
 80136b2:	f103 0e03 	add.w	lr, r3, #3
 80136b6:	f88c 0020 	strb.w	r0, [ip, #32]
 80136ba:	2a09      	cmp	r2, #9
 80136bc:	eb04 000e 	add.w	r0, r4, lr
 80136c0:	bf94      	ite	ls
 80136c2:	3230      	addls	r2, #48	; 0x30
 80136c4:	3237      	addhi	r2, #55	; 0x37
 80136c6:	f880 2020 	strb.w	r2, [r0, #32]
 80136ca:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 80136ce:	f103 0c04 	add.w	ip, r3, #4
 80136d2:	0910      	lsrs	r0, r2, #4
 80136d4:	2a9f      	cmp	r2, #159	; 0x9f
 80136d6:	f103 0305 	add.w	r3, r3, #5
 80136da:	f002 020f 	and.w	r2, r2, #15
 80136de:	bf94      	ite	ls
 80136e0:	3030      	addls	r0, #48	; 0x30
 80136e2:	3037      	addhi	r0, #55	; 0x37
 80136e4:	4423      	add	r3, r4
 80136e6:	2a09      	cmp	r2, #9
 80136e8:	44a4      	add	ip, r4
 80136ea:	bf94      	ite	ls
 80136ec:	3230      	addls	r2, #48	; 0x30
 80136ee:	3237      	addhi	r2, #55	; 0x37
 80136f0:	f88c 0020 	strb.w	r0, [ip, #32]
 80136f4:	f883 2020 	strb.w	r2, [r3, #32]
 80136f8:	2300      	movs	r3, #0
 80136fa:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 80136fe:	f004 fadf 	bl	8017cc0 <net::link_register_read()>
 8013702:	7963      	ldrb	r3, [r4, #5]
 8013704:	6020      	str	r0, [r4, #0]
 8013706:	2800      	cmp	r0, #0
 8013708:	f040 80a1 	bne.w	801384e <Network::Init(NetworkParamsStore*)+0x25a>
 801370c:	2b00      	cmp	r3, #0
 801370e:	f040 80af 	bne.w	8013870 <Network::Init(NetworkParamsStore*)+0x27c>
 8013712:	9b08      	ldr	r3, [sp, #32]
 8013714:	2b00      	cmp	r3, #0
 8013716:	d176      	bne.n	8013806 <Network::Init(NetworkParamsStore*)+0x212>
 8013718:	4620      	mov	r0, r4
 801371a:	f7ff ff5a 	bl	80135d2 <Network::SetDefaultIp()>
 801371e:	6963      	ldr	r3, [r4, #20]
 8013720:	69e2      	ldr	r2, [r4, #28]
 8013722:	9308      	str	r3, [sp, #32]
 8013724:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8013728:	f104 0905 	add.w	r9, r4, #5
 801372c:	f104 0a07 	add.w	sl, r4, #7
 8013730:	464b      	mov	r3, r9
 8013732:	f8cd a000 	str.w	sl, [sp]
 8013736:	463a      	mov	r2, r7
 8013738:	a908      	add	r1, sp, #32
 801373a:	4630      	mov	r0, r6
 801373c:	f7f4 fd36 	bl	80081ac <net_init>
 8013740:	79e3      	ldrb	r3, [r4, #7]
 8013742:	b11b      	cbz	r3, 801374c <Network::Init(NetworkParamsStore*)+0x158>
 8013744:	2104      	movs	r1, #4
 8013746:	4628      	mov	r0, r5
 8013748:	f001 fbb8 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801374c:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 8013750:	9302      	str	r3, [sp, #8]
 8013752:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013756:	9303      	str	r3, [sp, #12]
 8013758:	f89d 308d 	ldrb.w	r3, [sp, #141]	; 0x8d
 801375c:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8013884 <Network::Init(NetworkParamsStore*)+0x290>
 8013760:	f8df b124 	ldr.w	fp, [pc, #292]	; 8013888 <Network::Init(NetworkParamsStore*)+0x294>
 8013764:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 8013768:	009b      	lsls	r3, r3, #2
 801376a:	9305      	str	r3, [sp, #20]
 801376c:	79e3      	ldrb	r3, [r4, #7]
 801376e:	b38b      	cbz	r3, 80137d4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8013770:	9b02      	ldr	r3, [sp, #8]
 8013772:	b37b      	cbz	r3, 80137d4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8013774:	9b03      	ldr	r3, [sp, #12]
 8013776:	b36b      	cbz	r3, 80137d4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8013778:	f8d8 0000 	ldr.w	r0, [r8]
 801377c:	2104      	movs	r1, #4
 801377e:	f002 fa13 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 8013782:	2103      	movs	r1, #3
 8013784:	4628      	mov	r0, r5
 8013786:	f001 fb99 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801378a:	2000      	movs	r0, #0
 801378c:	f002 fe16 	bl	80163bc <time>
 8013790:	9004      	str	r0, [sp, #16]
 8013792:	2000      	movs	r0, #0
 8013794:	f002 fe12 	bl	80163bc <time>
 8013798:	9b04      	ldr	r3, [sp, #16]
 801379a:	4939      	ldr	r1, [pc, #228]	; (8013880 <Network::Init(NetworkParamsStore*)+0x28c>)
 801379c:	1ac0      	subs	r0, r0, r3
 801379e:	9b05      	ldr	r3, [sp, #20]
 80137a0:	4298      	cmp	r0, r3
 80137a2:	db38      	blt.n	8013816 <Network::Init(NetworkParamsStore*)+0x222>
 80137a4:	2101      	movs	r1, #1
 80137a6:	4628      	mov	r0, r5
 80137a8:	f001 fb88 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80137ac:	f8d8 0000 	ldr.w	r0, [r8]
 80137b0:	2101      	movs	r1, #1
 80137b2:	f002 f9f9 	bl	8015ba8 <LedBlink::SetMode(ledblink::Mode)>
 80137b6:	2301      	movs	r3, #1
 80137b8:	7163      	strb	r3, [r4, #5]
 80137ba:	2300      	movs	r3, #0
 80137bc:	71e3      	strb	r3, [r4, #7]
 80137be:	f8cd a000 	str.w	sl, [sp]
 80137c2:	464b      	mov	r3, r9
 80137c4:	463a      	mov	r2, r7
 80137c6:	a908      	add	r1, sp, #32
 80137c8:	4630      	mov	r0, r6
 80137ca:	f7f4 fcef 	bl	80081ac <net_init>
 80137ce:	7963      	ldrb	r3, [r4, #5]
 80137d0:	2b00      	cmp	r3, #0
 80137d2:	d0cb      	beq.n	801376c <Network::Init(NetworkParamsStore*)+0x178>
 80137d4:	9b08      	ldr	r3, [sp, #32]
 80137d6:	6163      	str	r3, [r4, #20]
 80137d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137da:	61e3      	str	r3, [r4, #28]
 80137dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80137de:	61a3      	str	r3, [r4, #24]
 80137e0:	4628      	mov	r0, r5
 80137e2:	f001 fb4d 	bl	8014e80 <NetworkDisplay::ShowIp()>
 80137e6:	b025      	add	sp, #148	; 0x94
 80137e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137ec:	f800 2f01 	strb.w	r2, [r0, #1]!
 80137f0:	4663      	mov	r3, ip
 80137f2:	e737      	b.n	8013664 <Network::Init(NetworkParamsStore*)+0x70>
 80137f4:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80137f8:	4638      	mov	r0, r7
 80137fa:	f7ff fe91 	bl	8013520 <strncpy.constprop.0.isra.0>
 80137fe:	2300      	movs	r3, #0
 8013800:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8013804:	e77b      	b.n	80136fe <Network::Init(NetworkParamsStore*)+0x10a>
 8013806:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 801380a:	69e1      	ldr	r1, [r4, #28]
 801380c:	4053      	eors	r3, r2
 801380e:	420b      	tst	r3, r1
 8013810:	bf18      	it	ne
 8013812:	920a      	strne	r2, [sp, #40]	; 0x28
 8013814:	e788      	b.n	8013728 <Network::Init(NetworkParamsStore*)+0x134>
 8013816:	f8d8 3000 	ldr.w	r3, [r8]
 801381a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 801381e:	f1bc 0f00 	cmp.w	ip, #0
 8013822:	d0b6      	beq.n	8013792 <Network::Init(NetworkParamsStore*)+0x19e>
 8013824:	f8db 0000 	ldr.w	r0, [fp]
 8013828:	695a      	ldr	r2, [r3, #20]
 801382a:	1a80      	subs	r0, r0, r2
 801382c:	4584      	cmp	ip, r0
 801382e:	d8b0      	bhi.n	8013792 <Network::Init(NetworkParamsStore*)+0x19e>
 8013830:	f8db 0000 	ldr.w	r0, [fp]
 8013834:	6158      	str	r0, [r3, #20]
 8013836:	6918      	ldr	r0, [r3, #16]
 8013838:	2801      	cmp	r0, #1
 801383a:	f080 0201 	eor.w	r2, r0, #1
 801383e:	611a      	str	r2, [r3, #16]
 8013840:	bf1a      	itte	ne
 8013842:	2301      	movne	r3, #1
 8013844:	f8c1 3818 	strne.w	r3, [r1, #2072]	; 0x818
 8013848:	f8c1 0828 	streq.w	r0, [r1, #2088]	; 0x828
 801384c:	e7a1      	b.n	8013792 <Network::Init(NetworkParamsStore*)+0x19e>
 801384e:	b11b      	cbz	r3, 8013858 <Network::Init(NetworkParamsStore*)+0x264>
 8013850:	2300      	movs	r3, #0
 8013852:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8013856:	9308      	str	r3, [sp, #32]
 8013858:	2300      	movs	r3, #0
 801385a:	f88d 301f 	strb.w	r3, [sp, #31]
 801385e:	f10d 031f 	add.w	r3, sp, #31
 8013862:	9300      	str	r3, [sp, #0]
 8013864:	463a      	mov	r2, r7
 8013866:	a908      	add	r1, sp, #32
 8013868:	4630      	mov	r0, r6
 801386a:	f7f4 fc9f 	bl	80081ac <net_init>
 801386e:	e7b1      	b.n	80137d4 <Network::Init(NetworkParamsStore*)+0x1e0>
 8013870:	2101      	movs	r1, #1
 8013872:	4628      	mov	r0, r5
 8013874:	f001 fb22 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8013878:	e756      	b.n	8013728 <Network::Init(NetworkParamsStore*)+0x134>
 801387a:	bf00      	nop
 801387c:	0801b626 	stmdaeq	r1, {r1, r2, r5, r9, sl, ip, sp, pc}
 8013880:	40020000 	andmi	r0, r2, r0
 8013884:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8013888:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc

0801388c <Network::SetIp(unsigned int)>:
 801388c:	7943      	ldrb	r3, [r0, #5]
 801388e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013890:	4604      	mov	r4, r0
 8013892:	460d      	mov	r5, r1
 8013894:	2600      	movs	r6, #0
 8013896:	b113      	cbz	r3, 801389e <Network::SetIp(unsigned int)+0x12>
 8013898:	7146      	strb	r6, [r0, #5]
 801389a:	f7fe fea5 	bl	80125e8 <net_dhcp_release>
 801389e:	71e6      	strb	r6, [r4, #7]
 80138a0:	b985      	cbnz	r5, 80138c4 <Network::SetIp(unsigned int)+0x38>
 80138a2:	4620      	mov	r0, r4
 80138a4:	f7ff fe95 	bl	80135d2 <Network::SetDefaultIp()>
 80138a8:	6960      	ldr	r0, [r4, #20]
 80138aa:	f7fe fe61 	bl	8012570 <net_set_ip>
 80138ae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80138b2:	9001      	str	r0, [sp, #4]
 80138b4:	f001 fae4 	bl	8014e80 <NetworkDisplay::ShowIp()>
 80138b8:	9801      	ldr	r0, [sp, #4]
 80138ba:	b002      	add	sp, #8
 80138bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80138c0:	f001 bae4 	b.w	8014e8c <NetworkDisplay::ShowNetMask()>
 80138c4:	4628      	mov	r0, r5
 80138c6:	f7fe fe53 	bl	8012570 <net_set_ip>
 80138ca:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80138ce:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80138d2:	2800      	cmp	r0, #0
 80138d4:	d0eb      	beq.n	80138ae <Network::SetIp(unsigned int)+0x22>
 80138d6:	6803      	ldr	r3, [r0, #0]
 80138d8:	4629      	mov	r1, r5
 80138da:	689b      	ldr	r3, [r3, #8]
 80138dc:	4798      	blx	r3
 80138de:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80138e2:	6803      	ldr	r3, [r0, #0]
 80138e4:	2100      	movs	r1, #0
 80138e6:	699b      	ldr	r3, [r3, #24]
 80138e8:	4798      	blx	r3
 80138ea:	e7e0      	b.n	80138ae <Network::SetIp(unsigned int)+0x22>

080138ec <Network::SetNetmask(unsigned int)>:
 80138ec:	69c2      	ldr	r2, [r0, #28]
 80138ee:	428a      	cmp	r2, r1
 80138f0:	b513      	push	{r0, r1, r4, lr}
 80138f2:	4604      	mov	r4, r0
 80138f4:	d011      	beq.n	801391a <Network::SetNetmask(unsigned int)+0x2e>
 80138f6:	61c1      	str	r1, [r0, #28]
 80138f8:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80138fc:	b110      	cbz	r0, 8013904 <Network::SetNetmask(unsigned int)+0x18>
 80138fe:	6803      	ldr	r3, [r0, #0]
 8013900:	68db      	ldr	r3, [r3, #12]
 8013902:	4798      	blx	r3
 8013904:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8013908:	9001      	str	r0, [sp, #4]
 801390a:	f001 fab9 	bl	8014e80 <NetworkDisplay::ShowIp()>
 801390e:	9801      	ldr	r0, [sp, #4]
 8013910:	b002      	add	sp, #8
 8013912:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013916:	f001 bab9 	b.w	8014e8c <NetworkDisplay::ShowNetMask()>
 801391a:	b002      	add	sp, #8
 801391c:	bd10      	pop	{r4, pc}

0801391e <Network::SetHostName(char const*)>:
 801391e:	b570      	push	{r4, r5, r6, lr}
 8013920:	4604      	mov	r4, r0
 8013922:	f100 0520 	add.w	r5, r0, #32
 8013926:	4628      	mov	r0, r5
 8013928:	f7ff fdfa 	bl	8013520 <strncpy.constprop.0.isra.0>
 801392c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8013930:	2300      	movs	r3, #0
 8013932:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8013936:	b158      	cbz	r0, 8013950 <Network::SetHostName(char const*)+0x32>
 8013938:	6803      	ldr	r3, [r0, #0]
 801393a:	695e      	ldr	r6, [r3, #20]
 801393c:	462b      	mov	r3, r5
 801393e:	461a      	mov	r2, r3
 8013940:	3301      	adds	r3, #1
 8013942:	7811      	ldrb	r1, [r2, #0]
 8013944:	2900      	cmp	r1, #0
 8013946:	d1fa      	bne.n	801393e <Network::SetHostName(char const*)+0x20>
 8013948:	1b52      	subs	r2, r2, r5
 801394a:	b292      	uxth	r2, r2
 801394c:	4629      	mov	r1, r5
 801394e:	47b0      	blx	r6
 8013950:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8013954:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013958:	f001 baa4 	b.w	8014ea4 <NetworkDisplay::ShowHostName()>

0801395c <Network::SetZeroconf()>:
 801395c:	b510      	push	{r4, lr}
 801395e:	b086      	sub	sp, #24
 8013960:	4604      	mov	r4, r0
 8013962:	a803      	add	r0, sp, #12
 8013964:	f7fe fe4a 	bl	80125fc <net_set_zeroconf>
 8013968:	71e0      	strb	r0, [r4, #7]
 801396a:	b170      	cbz	r0, 801398a <Network::SetZeroconf()+0x2e>
 801396c:	9b03      	ldr	r3, [sp, #12]
 801396e:	6163      	str	r3, [r4, #20]
 8013970:	9b04      	ldr	r3, [sp, #16]
 8013972:	61e3      	str	r3, [r4, #28]
 8013974:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8013978:	9b05      	ldr	r3, [sp, #20]
 801397a:	61a3      	str	r3, [r4, #24]
 801397c:	2300      	movs	r3, #0
 801397e:	7163      	strb	r3, [r4, #5]
 8013980:	b118      	cbz	r0, 801398a <Network::SetZeroconf()+0x2e>
 8013982:	6803      	ldr	r3, [r0, #0]
 8013984:	2101      	movs	r1, #1
 8013986:	699b      	ldr	r3, [r3, #24]
 8013988:	4798      	blx	r3
 801398a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801398e:	9001      	str	r0, [sp, #4]
 8013990:	f001 fa76 	bl	8014e80 <NetworkDisplay::ShowIp()>
 8013994:	9801      	ldr	r0, [sp, #4]
 8013996:	f001 fa79 	bl	8014e8c <NetworkDisplay::ShowNetMask()>
 801399a:	79e0      	ldrb	r0, [r4, #7]
 801399c:	b006      	add	sp, #24
 801399e:	bd10      	pop	{r4, pc}

080139a0 <Network::EnableDhcp()>:
 80139a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139a2:	4e25      	ldr	r6, [pc, #148]	; (8013a38 <Network::EnableDhcp()+0x98>)
 80139a4:	6833      	ldr	r3, [r6, #0]
 80139a6:	781f      	ldrb	r7, [r3, #0]
 80139a8:	b085      	sub	sp, #20
 80139aa:	4604      	mov	r4, r0
 80139ac:	b137      	cbz	r7, 80139bc <Network::EnableDhcp()+0x1c>
 80139ae:	2200      	movs	r2, #0
 80139b0:	701a      	strb	r2, [r3, #0]
 80139b2:	2104      	movs	r1, #4
 80139b4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80139b8:	f002 fed8 	bl	801676c <fwdgt_config>
 80139bc:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80139c0:	2101      	movs	r1, #1
 80139c2:	4628      	mov	r0, r5
 80139c4:	f001 fa7a 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80139c8:	1de2      	adds	r2, r4, #7
 80139ca:	f104 0120 	add.w	r1, r4, #32
 80139ce:	a801      	add	r0, sp, #4
 80139d0:	f7fe fdde 	bl	8012590 <net_set_dhcp>
 80139d4:	79e3      	ldrb	r3, [r4, #7]
 80139d6:	7160      	strb	r0, [r4, #5]
 80139d8:	b35b      	cbz	r3, 8013a32 <Network::EnableDhcp()+0x92>
 80139da:	2104      	movs	r1, #4
 80139dc:	4628      	mov	r0, r5
 80139de:	f001 fa6d 	bl	8014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80139e2:	b16f      	cbz	r7, 8013a00 <Network::EnableDhcp()+0x60>
 80139e4:	2102      	movs	r1, #2
 80139e6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80139ea:	6836      	ldr	r6, [r6, #0]
 80139ec:	f002 febe 	bl	801676c <fwdgt_config>
 80139f0:	2801      	cmp	r0, #1
 80139f2:	bf0c      	ite	eq
 80139f4:	2301      	moveq	r3, #1
 80139f6:	2300      	movne	r3, #0
 80139f8:	7033      	strb	r3, [r6, #0]
 80139fa:	d101      	bne.n	8013a00 <Network::EnableDhcp()+0x60>
 80139fc:	f002 fea6 	bl	801674c <fwdgt_enable>
 8013a00:	9b01      	ldr	r3, [sp, #4]
 8013a02:	6163      	str	r3, [r4, #20]
 8013a04:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8013a08:	9b02      	ldr	r3, [sp, #8]
 8013a0a:	61e3      	str	r3, [r4, #28]
 8013a0c:	9b03      	ldr	r3, [sp, #12]
 8013a0e:	61a3      	str	r3, [r4, #24]
 8013a10:	b118      	cbz	r0, 8013a1a <Network::EnableDhcp()+0x7a>
 8013a12:	6803      	ldr	r3, [r0, #0]
 8013a14:	7961      	ldrb	r1, [r4, #5]
 8013a16:	699b      	ldr	r3, [r3, #24]
 8013a18:	4798      	blx	r3
 8013a1a:	4628      	mov	r0, r5
 8013a1c:	f001 fa30 	bl	8014e80 <NetworkDisplay::ShowIp()>
 8013a20:	4628      	mov	r0, r5
 8013a22:	f001 fa33 	bl	8014e8c <NetworkDisplay::ShowNetMask()>
 8013a26:	4628      	mov	r0, r5
 8013a28:	f001 fa36 	bl	8014e98 <NetworkDisplay::ShowGatewayIp()>
 8013a2c:	7960      	ldrb	r0, [r4, #5]
 8013a2e:	b005      	add	sp, #20
 8013a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a32:	2102      	movs	r1, #2
 8013a34:	e7d2      	b.n	80139dc <Network::EnableDhcp()+0x3c>
 8013a36:	bf00      	nop
 8013a38:	2000fda4 	andcs	pc, r0, r4, lsr #27

08013a3c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8013a3c:	b109      	cbz	r1, 8013a42 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8013a3e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 8013a42:	b10a      	cbz	r2, 8013a48 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8013a44:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8013a48:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8013a4c:	f043 0303 	orr.w	r3, r3, #3
 8013a50:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 8013a54:	4770      	bx	lr

08013a56 <Network::ApplyQueuedConfig()>:
 8013a56:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8013a5a:	b510      	push	{r4, lr}
 8013a5c:	4604      	mov	r4, r0
 8013a5e:	b3c3      	cbz	r3, 8013ad2 <Network::ApplyQueuedConfig()+0x7c>
 8013a60:	079a      	lsls	r2, r3, #30
 8013a62:	d01a      	beq.n	8013a9a <Network::ApplyQueuedConfig()+0x44>
 8013a64:	079b      	lsls	r3, r3, #30
 8013a66:	d509      	bpl.n	8013a7c <Network::ApplyQueuedConfig()+0x26>
 8013a68:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 8013a6c:	f7ff ff3e 	bl	80138ec <Network::SetNetmask(unsigned int)>
 8013a70:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013a74:	f023 0302 	bic.w	r3, r3, #2
 8013a78:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8013a7c:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013a80:	07d9      	lsls	r1, r3, #31
 8013a82:	d50a      	bpl.n	8013a9a <Network::ApplyQueuedConfig()+0x44>
 8013a84:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 8013a88:	4620      	mov	r0, r4
 8013a8a:	f7ff feff 	bl	801388c <Network::SetIp(unsigned int)>
 8013a8e:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013a92:	f023 0301 	bic.w	r3, r3, #1
 8013a96:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8013a9a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013a9e:	075a      	lsls	r2, r3, #29
 8013aa0:	d508      	bpl.n	8013ab4 <Network::ApplyQueuedConfig()+0x5e>
 8013aa2:	4620      	mov	r0, r4
 8013aa4:	f7ff ff7c 	bl	80139a0 <Network::EnableDhcp()>
 8013aa8:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013aac:	f023 0304 	bic.w	r3, r3, #4
 8013ab0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8013ab4:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013ab8:	071b      	lsls	r3, r3, #28
 8013aba:	d508      	bpl.n	8013ace <Network::ApplyQueuedConfig()+0x78>
 8013abc:	4620      	mov	r0, r4
 8013abe:	f7ff ff4d 	bl	801395c <Network::SetZeroconf()>
 8013ac2:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8013ac6:	f023 0308 	bic.w	r3, r3, #8
 8013aca:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8013ace:	2001      	movs	r0, #1
 8013ad0:	e000      	b.n	8013ad4 <Network::ApplyQueuedConfig()+0x7e>
 8013ad2:	4618      	mov	r0, r3
 8013ad4:	bd10      	pop	{r4, pc}
	...

08013ad8 <Network::Print()>:
 8013ad8:	b530      	push	{r4, r5, lr}
 8013ada:	4604      	mov	r4, r0
 8013adc:	b085      	sub	sp, #20
 8013ade:	4832      	ldr	r0, [pc, #200]	; (8013ba8 <Network::Print()+0xd0>)
 8013ae0:	f7f6 fcea 	bl	800a4b8 <printf>
 8013ae4:	f104 0120 	add.w	r1, r4, #32
 8013ae8:	4830      	ldr	r0, [pc, #192]	; (8013bac <Network::Print()+0xd4>)
 8013aea:	f7f6 fce5 	bl	800a4b8 <printf>
 8013aee:	68a1      	ldr	r1, [r4, #8]
 8013af0:	482f      	ldr	r0, [pc, #188]	; (8013bb0 <Network::Print()+0xd8>)
 8013af2:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 8013af6:	f7f6 fcdf 	bl	800a4b8 <printf>
 8013afa:	69e0      	ldr	r0, [r4, #28]
 8013afc:	6965      	ldr	r5, [r4, #20]
 8013afe:	f004 feb3 	bl	8018868 <__popcountsi2>
 8013b02:	0e2b      	lsrs	r3, r5, #24
 8013b04:	9001      	str	r0, [sp, #4]
 8013b06:	9300      	str	r3, [sp, #0]
 8013b08:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8013b0c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8013b10:	b2e9      	uxtb	r1, r5
 8013b12:	4828      	ldr	r0, [pc, #160]	; (8013bb4 <Network::Print()+0xdc>)
 8013b14:	f7f6 fcd0 	bl	800a4b8 <printf>
 8013b18:	69e1      	ldr	r1, [r4, #28]
 8013b1a:	4827      	ldr	r0, [pc, #156]	; (8013bb8 <Network::Print()+0xe0>)
 8013b1c:	0e0b      	lsrs	r3, r1, #24
 8013b1e:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013b22:	9300      	str	r3, [sp, #0]
 8013b24:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013b28:	b2c9      	uxtb	r1, r1
 8013b2a:	f7f6 fcc5 	bl	800a4b8 <printf>
 8013b2e:	69a1      	ldr	r1, [r4, #24]
 8013b30:	4822      	ldr	r0, [pc, #136]	; (8013bbc <Network::Print()+0xe4>)
 8013b32:	0e0b      	lsrs	r3, r1, #24
 8013b34:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013b38:	9300      	str	r3, [sp, #0]
 8013b3a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013b3e:	b2c9      	uxtb	r1, r1
 8013b40:	f7f6 fcba 	bl	800a4b8 <printf>
 8013b44:	69e3      	ldr	r3, [r4, #28]
 8013b46:	6961      	ldr	r1, [r4, #20]
 8013b48:	481d      	ldr	r0, [pc, #116]	; (8013bc0 <Network::Print()+0xe8>)
 8013b4a:	ea61 0103 	orn	r1, r1, r3
 8013b4e:	0e0b      	lsrs	r3, r1, #24
 8013b50:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013b54:	9300      	str	r3, [sp, #0]
 8013b56:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013b5a:	b2c9      	uxtb	r1, r1
 8013b5c:	f7f6 fcac 	bl	800a4b8 <printf>
 8013b60:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8013b64:	9302      	str	r3, [sp, #8]
 8013b66:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8013b6a:	9301      	str	r3, [sp, #4]
 8013b6c:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8013b70:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8013b74:	9300      	str	r3, [sp, #0]
 8013b76:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8013b7a:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8013b7e:	4811      	ldr	r0, [pc, #68]	; (8013bc4 <Network::Print()+0xec>)
 8013b80:	f7f6 fc9a 	bl	800a4b8 <printf>
 8013b84:	4b10      	ldr	r3, [pc, #64]	; (8013bc8 <Network::Print()+0xf0>)
 8013b86:	681b      	ldr	r3, [r3, #0]
 8013b88:	79da      	ldrb	r2, [r3, #7]
 8013b8a:	b952      	cbnz	r2, 8013ba2 <Network::Print()+0xca>
 8013b8c:	795b      	ldrb	r3, [r3, #5]
 8013b8e:	2b00      	cmp	r3, #0
 8013b90:	bf14      	ite	ne
 8013b92:	2144      	movne	r1, #68	; 0x44
 8013b94:	2153      	moveq	r1, #83	; 0x53
 8013b96:	480d      	ldr	r0, [pc, #52]	; (8013bcc <Network::Print()+0xf4>)
 8013b98:	b005      	add	sp, #20
 8013b9a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013b9e:	f7f6 bc8b 	b.w	800a4b8 <printf>
 8013ba2:	215a      	movs	r1, #90	; 0x5a
 8013ba4:	e7f7      	b.n	8013b96 <Network::Print()+0xbe>
 8013ba6:	bf00      	nop
 8013ba8:	0801b632 	stmdaeq	r1, {r1, r4, r5, r9, sl, ip, sp, pc}
 8013bac:	0801b63b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, ip, sp, pc}
 8013bb0:	0801b64c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, sp, pc}
 8013bb4:	0801b661 	stmdaeq	r1, {r0, r5, r6, r9, sl, ip, sp, pc}
 8013bb8:	0801b67e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, pc}
 8013bbc:	0801b698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, sp, pc}
 8013bc0:	0801b6b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, ip, sp, pc}
 8013bc4:	0801b6cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp, pc}
 8013bc8:	2000f9f0 	strdcs	pc, [r0], -r0
 8013bcc:	0801b6f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, ip, sp, pc}

08013bd0 <Network::TcpBegin(unsigned short)>:
 8013bd0:	4608      	mov	r0, r1
 8013bd2:	f7fe bea3 	b.w	801291c <tcp_begin>

08013bd6 <Network::TcpRead(int, unsigned char const**)>:
 8013bd6:	4608      	mov	r0, r1
 8013bd8:	4611      	mov	r1, r2
 8013bda:	f7fe beeb 	b.w	80129b4 <tcp_read>

08013bde <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8013bde:	4608      	mov	r0, r1
 8013be0:	4611      	mov	r1, r2
 8013be2:	461a      	mov	r2, r3
 8013be4:	f7fe beb8 	b.w	8012958 <tcp_write>

08013be8 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8013be8:	b510      	push	{r4, lr}
 8013bea:	225e      	movs	r2, #94	; 0x5e
 8013bec:	4604      	mov	r4, r0
 8013bee:	f840 1b04 	str.w	r1, [r0], #4
 8013bf2:	2100      	movs	r1, #0
 8013bf4:	f002 fabe 	bl	8016174 <memset>
 8013bf8:	2301      	movs	r3, #1
 8013bfa:	7623      	strb	r3, [r4, #24]
 8013bfc:	4620      	mov	r0, r4
 8013bfe:	bd10      	pop	{r4, pc}

08013c00 <NetworkParams::Load()>:
 8013c00:	b508      	push	{r3, lr}
 8013c02:	2300      	movs	r3, #0
 8013c04:	4601      	mov	r1, r0
 8013c06:	6043      	str	r3, [r0, #4]
 8013c08:	6800      	ldr	r0, [r0, #0]
 8013c0a:	b120      	cbz	r0, 8013c16 <NetworkParams::Load()+0x16>
 8013c0c:	6803      	ldr	r3, [r0, #0]
 8013c0e:	3104      	adds	r1, #4
 8013c10:	68db      	ldr	r3, [r3, #12]
 8013c12:	4798      	blx	r3
 8013c14:	2001      	movs	r0, #1
 8013c16:	bd08      	pop	{r3, pc}

08013c18 <NetworkParams::Load(char const*, unsigned int)>:
 8013c18:	6803      	ldr	r3, [r0, #0]
 8013c1a:	b1d3      	cbz	r3, 8013c52 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 8013c1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013c1e:	2300      	movs	r3, #0
 8013c20:	6043      	str	r3, [r0, #4]
 8013c22:	4604      	mov	r4, r0
 8013c24:	460d      	mov	r5, r1
 8013c26:	4616      	mov	r6, r2
 8013c28:	490a      	ldr	r1, [pc, #40]	; (8013c54 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8013c2a:	4602      	mov	r2, r0
 8013c2c:	4668      	mov	r0, sp
 8013c2e:	f001 fa9d 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8013c32:	4632      	mov	r2, r6
 8013c34:	4629      	mov	r1, r5
 8013c36:	4668      	mov	r0, sp
 8013c38:	f001 fa9c 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 8013c3c:	4621      	mov	r1, r4
 8013c3e:	f851 0b04 	ldr.w	r0, [r1], #4
 8013c42:	6803      	ldr	r3, [r0, #0]
 8013c44:	689b      	ldr	r3, [r3, #8]
 8013c46:	4798      	blx	r3
 8013c48:	4668      	mov	r0, sp
 8013c4a:	f001 fa92 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 8013c4e:	b002      	add	sp, #8
 8013c50:	bd70      	pop	{r4, r5, r6, pc}
 8013c52:	4770      	bx	lr
 8013c54:	08013d79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, fp, ip, sp}

08013c58 <NetworkParams::callbackFunction(char const*)>:
 8013c58:	b530      	push	{r4, r5, lr}
 8013c5a:	460d      	mov	r5, r1
 8013c5c:	b085      	sub	sp, #20
 8013c5e:	4604      	mov	r4, r0
 8013c60:	493f      	ldr	r1, [pc, #252]	; (8013d60 <NetworkParams::callbackFunction(char const*)+0x108>)
 8013c62:	f10d 0207 	add.w	r2, sp, #7
 8013c66:	4628      	mov	r0, r5
 8013c68:	f001 fbb5 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013c6c:	b978      	cbnz	r0, 8013c8e <NetworkParams::callbackFunction(char const*)+0x36>
 8013c6e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013c72:	6863      	ldr	r3, [r4, #4]
 8013c74:	b142      	cbz	r2, 8013c88 <NetworkParams::callbackFunction(char const*)+0x30>
 8013c76:	f023 0301 	bic.w	r3, r3, #1
 8013c7a:	3a00      	subs	r2, #0
 8013c7c:	bf18      	it	ne
 8013c7e:	2201      	movne	r2, #1
 8013c80:	6063      	str	r3, [r4, #4]
 8013c82:	7622      	strb	r2, [r4, #24]
 8013c84:	b005      	add	sp, #20
 8013c86:	bd30      	pop	{r4, r5, pc}
 8013c88:	f043 0301 	orr.w	r3, r3, #1
 8013c8c:	e7f5      	b.n	8013c7a <NetworkParams::callbackFunction(char const*)+0x22>
 8013c8e:	4935      	ldr	r1, [pc, #212]	; (8013d64 <NetworkParams::callbackFunction(char const*)+0x10c>)
 8013c90:	f10d 0207 	add.w	r2, sp, #7
 8013c94:	4628      	mov	r0, r5
 8013c96:	f001 fb9e 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013c9a:	b980      	cbnz	r0, 8013cbe <NetworkParams::callbackFunction(char const*)+0x66>
 8013c9c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013ca0:	6863      	ldr	r3, [r4, #4]
 8013ca2:	1e51      	subs	r1, r2, #1
 8013ca4:	2904      	cmp	r1, #4
 8013ca6:	bf97      	itett	ls
 8013ca8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8013cac:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8013cb0:	6063      	strls	r3, [r4, #4]
 8013cb2:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8013cb6:	bf84      	itt	hi
 8013cb8:	6063      	strhi	r3, [r4, #4]
 8013cba:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 8013cbe:	492a      	ldr	r1, [pc, #168]	; (8013d68 <NetworkParams::callbackFunction(char const*)+0x110>)
 8013cc0:	aa02      	add	r2, sp, #8
 8013cc2:	4628      	mov	r0, r5
 8013cc4:	f001 fafe 	bl	80152c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8013cc8:	b9c8      	cbnz	r0, 8013cfe <NetworkParams::callbackFunction(char const*)+0xa6>
 8013cca:	9b02      	ldr	r3, [sp, #8]
 8013ccc:	b2d9      	uxtb	r1, r3
 8013cce:	29ac      	cmp	r1, #172	; 0xac
 8013cd0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013cd4:	d009      	beq.n	8013cea <NetworkParams::callbackFunction(char const*)+0x92>
 8013cd6:	29c0      	cmp	r1, #192	; 0xc0
 8013cd8:	d00b      	beq.n	8013cf2 <NetworkParams::callbackFunction(char const*)+0x9a>
 8013cda:	290a      	cmp	r1, #10
 8013cdc:	d10c      	bne.n	8013cf8 <NetworkParams::callbackFunction(char const*)+0xa0>
 8013cde:	60a3      	str	r3, [r4, #8]
 8013ce0:	6863      	ldr	r3, [r4, #4]
 8013ce2:	f043 0302 	orr.w	r3, r3, #2
 8013ce6:	6063      	str	r3, [r4, #4]
 8013ce8:	e7cc      	b.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013cea:	3a10      	subs	r2, #16
 8013cec:	2a0f      	cmp	r2, #15
 8013cee:	d8c9      	bhi.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013cf0:	e7f5      	b.n	8013cde <NetworkParams::callbackFunction(char const*)+0x86>
 8013cf2:	2aa8      	cmp	r2, #168	; 0xa8
 8013cf4:	d1c6      	bne.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013cf6:	e7f2      	b.n	8013cde <NetworkParams::callbackFunction(char const*)+0x86>
 8013cf8:	2b00      	cmp	r3, #0
 8013cfa:	d0f0      	beq.n	8013cde <NetworkParams::callbackFunction(char const*)+0x86>
 8013cfc:	e7c2      	b.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013cfe:	491b      	ldr	r1, [pc, #108]	; (8013d6c <NetworkParams::callbackFunction(char const*)+0x114>)
 8013d00:	aa02      	add	r2, sp, #8
 8013d02:	4628      	mov	r0, r5
 8013d04:	f001 fade 	bl	80152c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8013d08:	b960      	cbnz	r0, 8013d24 <NetworkParams::callbackFunction(char const*)+0xcc>
 8013d0a:	9b02      	ldr	r3, [sp, #8]
 8013d0c:	2b00      	cmp	r3, #0
 8013d0e:	d0b9      	beq.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013d10:	ba1a      	rev	r2, r3
 8013d12:	43d1      	mvns	r1, r2
 8013d14:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8013d18:	d1b4      	bne.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013d1a:	60e3      	str	r3, [r4, #12]
 8013d1c:	6863      	ldr	r3, [r4, #4]
 8013d1e:	f043 0304 	orr.w	r3, r3, #4
 8013d22:	e7e0      	b.n	8013ce6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8013d24:	4912      	ldr	r1, [pc, #72]	; (8013d70 <NetworkParams::callbackFunction(char const*)+0x118>)
 8013d26:	aa02      	add	r2, sp, #8
 8013d28:	4628      	mov	r0, r5
 8013d2a:	f001 facb 	bl	80152c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8013d2e:	b928      	cbnz	r0, 8013d3c <NetworkParams::callbackFunction(char const*)+0xe4>
 8013d30:	9b02      	ldr	r3, [sp, #8]
 8013d32:	6123      	str	r3, [r4, #16]
 8013d34:	6863      	ldr	r3, [r4, #4]
 8013d36:	f043 0308 	orr.w	r3, r3, #8
 8013d3a:	e7d4      	b.n	8013ce6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8013d3c:	233f      	movs	r3, #63	; 0x3f
 8013d3e:	9303      	str	r3, [sp, #12]
 8013d40:	490c      	ldr	r1, [pc, #48]	; (8013d74 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8013d42:	ab03      	add	r3, sp, #12
 8013d44:	f104 0219 	add.w	r2, r4, #25
 8013d48:	4628      	mov	r0, r5
 8013d4a:	f001 fa47 	bl	80151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8013d4e:	2800      	cmp	r0, #0
 8013d50:	d198      	bne.n	8013c84 <NetworkParams::callbackFunction(char const*)+0x2c>
 8013d52:	9b03      	ldr	r3, [sp, #12]
 8013d54:	4423      	add	r3, r4
 8013d56:	7658      	strb	r0, [r3, #25]
 8013d58:	6863      	ldr	r3, [r4, #4]
 8013d5a:	f043 0320 	orr.w	r3, r3, #32
 8013d5e:	e7c2      	b.n	8013ce6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8013d60:	0801b750 	stmdaeq	r1, {r4, r6, r8, r9, sl, ip, sp, pc}
 8013d64:	0801b72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, ip, sp, pc}
 8013d68:	0801b713 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, ip, sp, pc}
 8013d6c:	0801b747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, pc}
 8013d70:	0801b71e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, ip, sp, pc}
 8013d74:	0801b73e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, pc}

08013d78 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8013d78:	f7ff bf6e 	b.w	8013c58 <NetworkParams::callbackFunction(char const*)>

08013d7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8013d7c:	b570      	push	{r4, r5, r6, lr}
 8013d7e:	4604      	mov	r4, r0
 8013d80:	b086      	sub	sp, #24
 8013d82:	4615      	mov	r5, r2
 8013d84:	461e      	mov	r6, r3
 8013d86:	3004      	adds	r0, #4
 8013d88:	2900      	cmp	r1, #0
 8013d8a:	d02a      	beq.n	8013de2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x66>
 8013d8c:	225e      	movs	r2, #94	; 0x5e
 8013d8e:	f002 f9da 	bl	8016146 <memmove>
 8013d92:	462a      	mov	r2, r5
 8013d94:	4633      	mov	r3, r6
 8013d96:	496f      	ldr	r1, [pc, #444]	; (8013f54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d8>)
 8013d98:	a803      	add	r0, sp, #12
 8013d9a:	f001 f947 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8013d9e:	6863      	ldr	r3, [r4, #4]
 8013da0:	079a      	lsls	r2, r3, #30
 8013da2:	bf5f      	itttt	pl
 8013da4:	4a6c      	ldrpl	r2, [pc, #432]	; (8013f58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013da6:	6812      	ldrpl	r2, [r2, #0]
 8013da8:	6952      	ldrpl	r2, [r2, #20]
 8013daa:	60a2      	strpl	r2, [r4, #8]
 8013dac:	075e      	lsls	r6, r3, #29
 8013dae:	bf5f      	itttt	pl
 8013db0:	4a69      	ldrpl	r2, [pc, #420]	; (8013f58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013db2:	6812      	ldrpl	r2, [r2, #0]
 8013db4:	69d2      	ldrpl	r2, [r2, #28]
 8013db6:	60e2      	strpl	r2, [r4, #12]
 8013db8:	071d      	lsls	r5, r3, #28
 8013dba:	bf5f      	itttt	pl
 8013dbc:	4a66      	ldrpl	r2, [pc, #408]	; (8013f58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013dbe:	6812      	ldrpl	r2, [r2, #0]
 8013dc0:	6992      	ldrpl	r2, [r2, #24]
 8013dc2:	6122      	strpl	r2, [r4, #16]
 8013dc4:	0698      	lsls	r0, r3, #26
 8013dc6:	f104 0519 	add.w	r5, r4, #25
 8013dca:	d418      	bmi.n	8013dfe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8013dcc:	4b62      	ldr	r3, [pc, #392]	; (8013f58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8013dce:	681b      	ldr	r3, [r3, #0]
 8013dd0:	4628      	mov	r0, r5
 8013dd2:	331f      	adds	r3, #31
 8013dd4:	223f      	movs	r2, #63	; 0x3f
 8013dd6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013dda:	b949      	cbnz	r1, 8013df0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 8013ddc:	f002 f9ca 	bl	8016174 <memset>
 8013de0:	e00a      	b.n	8013df8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 8013de2:	6823      	ldr	r3, [r4, #0]
 8013de4:	681a      	ldr	r2, [r3, #0]
 8013de6:	4601      	mov	r1, r0
 8013de8:	68d2      	ldr	r2, [r2, #12]
 8013dea:	4618      	mov	r0, r3
 8013dec:	4790      	blx	r2
 8013dee:	e7d0      	b.n	8013d92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8013df0:	3a01      	subs	r2, #1
 8013df2:	f800 1b01 	strb.w	r1, [r0], #1
 8013df6:	d1ee      	bne.n	8013dd6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 8013df8:	2300      	movs	r3, #0
 8013dfa:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8013dfe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013e02:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8013e06:	7e23      	ldrb	r3, [r4, #24]
 8013e08:	6861      	ldr	r1, [r4, #4]
 8013e0a:	42b2      	cmp	r2, r6
 8013e0c:	d21a      	bcs.n	8013e44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 8013e0e:	9803      	ldr	r0, [sp, #12]
 8013e10:	07c9      	lsls	r1, r1, #31
 8013e12:	4410      	add	r0, r2
 8013e14:	eba6 0602 	sub.w	r6, r6, r2
 8013e18:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013e1c:	d404      	bmi.n	8013e28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8013e1e:	b922      	cbnz	r2, 8013e2a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8013e20:	9300      	str	r3, [sp, #0]
 8013e22:	4a4e      	ldr	r2, [pc, #312]	; (8013f5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8013e24:	4b4e      	ldr	r3, [pc, #312]	; (8013f60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8013e26:	e003      	b.n	8013e30 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8013e28:	b312      	cbz	r2, 8013e70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf4>
 8013e2a:	9300      	str	r3, [sp, #0]
 8013e2c:	4a4d      	ldr	r2, [pc, #308]	; (8013f64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8013e2e:	4b4c      	ldr	r3, [pc, #304]	; (8013f60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8013e30:	4631      	mov	r1, r6
 8013e32:	f7f6 fb69 	bl	800a508 <snprintf>
 8013e36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013e3a:	4286      	cmp	r6, r0
 8013e3c:	bfa4      	itt	ge
 8013e3e:	181b      	addge	r3, r3, r0
 8013e40:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013e44:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013e48:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8013e4c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013e50:	6861      	ldr	r1, [r4, #4]
 8013e52:	42b2      	cmp	r2, r6
 8013e54:	d21f      	bcs.n	8013e96 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11a>
 8013e56:	9803      	ldr	r0, [sp, #12]
 8013e58:	05c9      	lsls	r1, r1, #23
 8013e5a:	4410      	add	r0, r2
 8013e5c:	eba6 0602 	sub.w	r6, r6, r2
 8013e60:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013e64:	d408      	bmi.n	8013e78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8013e66:	b94a      	cbnz	r2, 8013e7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x100>
 8013e68:	9300      	str	r3, [sp, #0]
 8013e6a:	4a3c      	ldr	r2, [pc, #240]	; (8013f5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8013e6c:	4b3e      	ldr	r3, [pc, #248]	; (8013f68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8013e6e:	e008      	b.n	8013e82 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8013e70:	9300      	str	r3, [sp, #0]
 8013e72:	4a3e      	ldr	r2, [pc, #248]	; (8013f6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8013e74:	4b3a      	ldr	r3, [pc, #232]	; (8013f60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8013e76:	e7db      	b.n	8013e30 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb4>
 8013e78:	2a00      	cmp	r2, #0
 8013e7a:	d03c      	beq.n	8013ef6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17a>
 8013e7c:	9300      	str	r3, [sp, #0]
 8013e7e:	4a39      	ldr	r2, [pc, #228]	; (8013f64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8013e80:	4b39      	ldr	r3, [pc, #228]	; (8013f68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8013e82:	4631      	mov	r1, r6
 8013e84:	f7f6 fb40 	bl	800a508 <snprintf>
 8013e88:	4286      	cmp	r6, r0
 8013e8a:	bfa2      	ittt	ge
 8013e8c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8013e90:	18c0      	addge	r0, r0, r3
 8013e92:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8013e96:	4936      	ldr	r1, [pc, #216]	; (8013f70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8013e98:	a803      	add	r0, sp, #12
 8013e9a:	f001 f94d 	bl	8015138 <PropertiesBuilder::AddComment(char const*)>
 8013e9e:	6863      	ldr	r3, [r4, #4]
 8013ea0:	68a2      	ldr	r2, [r4, #8]
 8013ea2:	4934      	ldr	r1, [pc, #208]	; (8013f74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8013ea4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8013ea8:	a803      	add	r0, sp, #12
 8013eaa:	f001 f901 	bl	80150b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013eae:	6863      	ldr	r3, [r4, #4]
 8013eb0:	68e2      	ldr	r2, [r4, #12]
 8013eb2:	4931      	ldr	r1, [pc, #196]	; (8013f78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8013eb4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8013eb8:	a803      	add	r0, sp, #12
 8013eba:	f001 f8f9 	bl	80150b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013ebe:	6863      	ldr	r3, [r4, #4]
 8013ec0:	6922      	ldr	r2, [r4, #16]
 8013ec2:	492e      	ldr	r1, [pc, #184]	; (8013f7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8013ec4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8013ec8:	a803      	add	r0, sp, #12
 8013eca:	f001 f8f1 	bl	80150b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013ece:	6862      	ldr	r2, [r4, #4]
 8013ed0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013ed4:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8013ed8:	42a3      	cmp	r3, r4
 8013eda:	d21e      	bcs.n	8013f1a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 8013edc:	9803      	ldr	r0, [sp, #12]
 8013ede:	0692      	lsls	r2, r2, #26
 8013ee0:	4418      	add	r0, r3
 8013ee2:	eba4 0403 	sub.w	r4, r4, r3
 8013ee6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013eea:	d408      	bmi.n	8013efe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x182>
 8013eec:	b943      	cbnz	r3, 8013f00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 8013eee:	4b24      	ldr	r3, [pc, #144]	; (8013f80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8013ef0:	4a24      	ldr	r2, [pc, #144]	; (8013f84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8013ef2:	9500      	str	r5, [sp, #0]
 8013ef4:	e007      	b.n	8013f06 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8013ef6:	9300      	str	r3, [sp, #0]
 8013ef8:	4a1c      	ldr	r2, [pc, #112]	; (8013f6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8013efa:	4b1b      	ldr	r3, [pc, #108]	; (8013f68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8013efc:	e7c1      	b.n	8013e82 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8013efe:	b32b      	cbz	r3, 8013f4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d0>
 8013f00:	4b1f      	ldr	r3, [pc, #124]	; (8013f80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8013f02:	4a21      	ldr	r2, [pc, #132]	; (8013f88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 8013f04:	9500      	str	r5, [sp, #0]
 8013f06:	4621      	mov	r1, r4
 8013f08:	f7f6 fafe 	bl	800a508 <snprintf>
 8013f0c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013f10:	4284      	cmp	r4, r0
 8013f12:	bfa4      	itt	ge
 8013f14:	181b      	addge	r3, r3, r0
 8013f16:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8013f1a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013f1e:	b17b      	cbz	r3, 8013f40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 8013f20:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013f24:	9b03      	ldr	r3, [sp, #12]
 8013f26:	4413      	add	r3, r2
 8013f28:	227d      	movs	r2, #125	; 0x7d
 8013f2a:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013f2e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013f32:	9903      	ldr	r1, [sp, #12]
 8013f34:	54ca      	strb	r2, [r1, r3]
 8013f36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013f3a:	3301      	adds	r3, #1
 8013f3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013f40:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013f44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f46:	601a      	str	r2, [r3, #0]
 8013f48:	b006      	add	sp, #24
 8013f4a:	bd70      	pop	{r4, r5, r6, pc}
 8013f4c:	4b0c      	ldr	r3, [pc, #48]	; (8013f80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8013f4e:	4a0f      	ldr	r2, [pc, #60]	; (8013f8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8013f50:	9500      	str	r5, [sp, #0]
 8013f52:	e7d8      	b.n	8013f06 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18a>
 8013f54:	0801b759 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, ip, sp, pc}
 8013f58:	2000f9f0 	strdcs	pc, [r0], -r0
 8013f5c:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 8013f60:	0801b750 	stmdaeq	r1, {r4, r6, r8, r9, sl, ip, sp, pc}
 8013f64:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 8013f68:	0801b72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, ip, sp, pc}
 8013f6c:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}
 8013f70:	0801b709 	stmdaeq	r1, {r0, r3, r8, r9, sl, ip, sp, pc}
 8013f74:	0801b713 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, ip, sp, pc}
 8013f78:	0801b747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, pc}
 8013f7c:	0801b71e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, ip, sp, pc}
 8013f80:	0801b73e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, pc}
 8013f84:	08019060 	stmdaeq	r1, {r5, r6, ip, pc}
 8013f88:	08019055 	stmdaeq	r1, {r0, r2, r4, r6, ip, pc}
 8013f8c:	08019061 	stmdaeq	r1, {r0, r5, r6, ip, pc}

08013f90 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8013f90:	b513      	push	{r0, r1, r4, lr}
 8013f92:	6804      	ldr	r4, [r0, #0]
 8013f94:	b914      	cbnz	r4, 8013f9c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8013f96:	601c      	str	r4, [r3, #0]
 8013f98:	b002      	add	sp, #8
 8013f9a:	bd10      	pop	{r4, pc}
 8013f9c:	9300      	str	r3, [sp, #0]
 8013f9e:	4613      	mov	r3, r2
 8013fa0:	460a      	mov	r2, r1
 8013fa2:	2100      	movs	r1, #0
 8013fa4:	f7ff feea 	bl	8013d7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8013fa8:	e7f6      	b.n	8013f98 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08013faa <NetworkParams::Dump()>:
 8013faa:	4770      	bx	lr

08013fac <memcpy.isra.0>:
 8013fac:	3801      	subs	r0, #1
 8013fae:	440a      	add	r2, r1
 8013fb0:	4291      	cmp	r1, r2
 8013fb2:	d100      	bne.n	8013fb6 <memcpy.isra.0+0xa>
 8013fb4:	4770      	bx	lr
 8013fb6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013fba:	f800 3f01 	strb.w	r3, [r0, #1]!
 8013fbe:	e7f7      	b.n	8013fb0 <memcpy.isra.0+0x4>

08013fc0 <arp_announce>:
 8013fc0:	4803      	ldr	r0, [pc, #12]	; (8013fd0 <arp_announce+0x10>)
 8013fc2:	69c3      	ldr	r3, [r0, #28]
 8013fc4:	b113      	cbz	r3, 8013fcc <arp_announce+0xc>
 8013fc6:	212a      	movs	r1, #42	; 0x2a
 8013fc8:	f003 b8a6 	b.w	8017118 <emac_eth_send>
 8013fcc:	4770      	bx	lr
 8013fce:	bf00      	nop
 8013fd0:	2000f9f4 	strdcs	pc, [r0], -r4

08013fd4 <arp_handle_request>:
 8013fd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013fd6:	2204      	movs	r2, #4
 8013fd8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8013fdc:	4604      	mov	r4, r0
 8013fde:	eb0d 0002 	add.w	r0, sp, r2
 8013fe2:	f7ff ffe3 	bl	8013fac <memcpy.isra.0>
 8013fe6:	4b0d      	ldr	r3, [pc, #52]	; (801401c <arp_handle_request+0x48>)
 8013fe8:	9a01      	ldr	r2, [sp, #4]
 8013fea:	69db      	ldr	r3, [r3, #28]
 8013fec:	429a      	cmp	r2, r3
 8013fee:	d113      	bne.n	8014018 <arp_handle_request+0x44>
 8013ff0:	4d0b      	ldr	r5, [pc, #44]	; (8014020 <arp_handle_request+0x4c>)
 8013ff2:	2206      	movs	r2, #6
 8013ff4:	18a1      	adds	r1, r4, r2
 8013ff6:	4628      	mov	r0, r5
 8013ff8:	f7ff ffd8 	bl	8013fac <memcpy.isra.0>
 8013ffc:	f104 0116 	add.w	r1, r4, #22
 8014000:	f105 0020 	add.w	r0, r5, #32
 8014004:	2206      	movs	r2, #6
 8014006:	f7ff ffd1 	bl	8013fac <memcpy.isra.0>
 801400a:	69e3      	ldr	r3, [r4, #28]
 801400c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8014010:	212a      	movs	r1, #42	; 0x2a
 8014012:	4628      	mov	r0, r5
 8014014:	f003 f880 	bl	8017118 <emac_eth_send>
 8014018:	b003      	add	sp, #12
 801401a:	bd30      	pop	{r4, r5, pc}
 801401c:	2000f9f4 	strdcs	pc, [r0], -r4
 8014020:	2000fa20 	andcs	pc, r0, r0, lsr #20

08014024 <arp_handle_reply>:
 8014024:	69c1      	ldr	r1, [r0, #28]
 8014026:	3016      	adds	r0, #22
 8014028:	f000 b80a 	b.w	8014040 <arp_cache_update>

0801402c <arp_send_request>:
 801402c:	4b03      	ldr	r3, [pc, #12]	; (801403c <arp_send_request+0x10>)
 801402e:	212a      	movs	r1, #42	; 0x2a
 8014030:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8014034:	4618      	mov	r0, r3
 8014036:	f003 b86f 	b.w	8017118 <emac_eth_send>
 801403a:	bf00      	nop
 801403c:	2000fa4c 	andcs	pc, r0, ip, asr #20

08014040 <arp_cache_update>:
 8014040:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014042:	4c12      	ldr	r4, [pc, #72]	; (801408c <arp_cache_update+0x4c>)
 8014044:	8823      	ldrh	r3, [r4, #0]
 8014046:	2b20      	cmp	r3, #32
 8014048:	d019      	beq.n	801407e <arp_cache_update+0x3e>
 801404a:	2500      	movs	r5, #0
 801404c:	1d22      	adds	r2, r4, #4
 801404e:	260c      	movs	r6, #12
 8014050:	b2af      	uxth	r7, r5
 8014052:	42bb      	cmp	r3, r7
 8014054:	d80c      	bhi.n	8014070 <arp_cache_update+0x30>
 8014056:	fb06 2203 	mla	r2, r6, r3, r2
 801405a:	3203      	adds	r2, #3
 801405c:	1d85      	adds	r5, r0, #6
 801405e:	42a8      	cmp	r0, r5
 8014060:	d10e      	bne.n	8014080 <arp_cache_update+0x40>
 8014062:	220c      	movs	r2, #12
 8014064:	fb02 4203 	mla	r2, r2, r3, r4
 8014068:	3301      	adds	r3, #1
 801406a:	6051      	str	r1, [r2, #4]
 801406c:	8023      	strh	r3, [r4, #0]
 801406e:	e006      	b.n	801407e <arp_cache_update+0x3e>
 8014070:	3501      	adds	r5, #1
 8014072:	fb06 2705 	mla	r7, r6, r5, r2
 8014076:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 801407a:	428f      	cmp	r7, r1
 801407c:	d1e8      	bne.n	8014050 <arp_cache_update+0x10>
 801407e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014080:	f810 6b01 	ldrb.w	r6, [r0], #1
 8014084:	f802 6f01 	strb.w	r6, [r2, #1]!
 8014088:	e7e9      	b.n	801405e <arp_cache_update+0x1e>
 801408a:	bf00      	nop
 801408c:	100011a4 	andne	r1, r0, r4, lsr #3

08014090 <arp_cache_lookup>:
 8014090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014094:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8014124 <arp_cache_lookup+0x94>
 8014098:	4606      	mov	r6, r0
 801409a:	460c      	mov	r4, r1
 801409c:	2200      	movs	r2, #0
 801409e:	200c      	movs	r0, #12
 80140a0:	fb00 f302 	mul.w	r3, r0, r2
 80140a4:	f853 1008 	ldr.w	r1, [r3, r8]
 80140a8:	42b1      	cmp	r1, r6
 80140aa:	d10d      	bne.n	80140c8 <arp_cache_lookup+0x38>
 80140ac:	3304      	adds	r3, #4
 80140ae:	4443      	add	r3, r8
 80140b0:	3c01      	subs	r4, #1
 80140b2:	1d9a      	adds	r2, r3, #6
 80140b4:	4293      	cmp	r3, r2
 80140b6:	d102      	bne.n	80140be <arp_cache_lookup+0x2e>
 80140b8:	4630      	mov	r0, r6
 80140ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80140be:	f813 1b01 	ldrb.w	r1, [r3], #1
 80140c2:	f804 1f01 	strb.w	r1, [r4, #1]!
 80140c6:	e7f5      	b.n	80140b4 <arp_cache_lookup+0x24>
 80140c8:	b111      	cbz	r1, 80140d0 <arp_cache_lookup+0x40>
 80140ca:	3201      	adds	r2, #1
 80140cc:	2a20      	cmp	r2, #32
 80140ce:	d1e7      	bne.n	80140a0 <arp_cache_lookup+0x10>
 80140d0:	f8df a054 	ldr.w	sl, [pc, #84]	; 8014128 <arp_cache_lookup+0x98>
 80140d4:	f8ba 5000 	ldrh.w	r5, [sl]
 80140d8:	2704      	movs	r7, #4
 80140da:	3f01      	subs	r7, #1
 80140dc:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 80140e0:	d101      	bne.n	80140e6 <arp_cache_lookup+0x56>
 80140e2:	463e      	mov	r6, r7
 80140e4:	e7e8      	b.n	80140b8 <arp_cache_lookup+0x28>
 80140e6:	4630      	mov	r0, r6
 80140e8:	f7ff ffa0 	bl	801402c <arp_send_request>
 80140ec:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 80140f0:	f1b9 0901 	subs.w	r9, r9, #1
 80140f4:	f8ba 3000 	ldrh.w	r3, [sl]
 80140f8:	d011      	beq.n	801411e <arp_cache_lookup+0x8e>
 80140fa:	429d      	cmp	r5, r3
 80140fc:	d00c      	beq.n	8014118 <arp_cache_lookup+0x88>
 80140fe:	230c      	movs	r3, #12
 8014100:	fb03 8505 	mla	r5, r3, r5, r8
 8014104:	1d2b      	adds	r3, r5, #4
 8014106:	3c01      	subs	r4, #1
 8014108:	350a      	adds	r5, #10
 801410a:	42ab      	cmp	r3, r5
 801410c:	d0d4      	beq.n	80140b8 <arp_cache_lookup+0x28>
 801410e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014112:	f804 2f01 	strb.w	r2, [r4, #1]!
 8014116:	e7f8      	b.n	801410a <arp_cache_lookup+0x7a>
 8014118:	f7f4 fa24 	bl	8008564 <net_handle>
 801411c:	e7e8      	b.n	80140f0 <arp_cache_lookup+0x60>
 801411e:	429d      	cmp	r5, r3
 8014120:	d0db      	beq.n	80140da <arp_cache_lookup+0x4a>
 8014122:	e7ec      	b.n	80140fe <arp_cache_lookup+0x6e>
 8014124:	100011a8 	andne	r1, r0, r8, lsr #3
 8014128:	100011a4 	andne	r1, r0, r4, lsr #3

0801412c <_parse_response>:
 801412c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014130:	2400      	movs	r4, #0
 8014132:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8014136:	4e52      	ldr	r6, [pc, #328]	; (8014280 <_parse_response+0x154>)
 8014138:	9009      	str	r0, [sp, #36]	; 0x24
 801413a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 801413e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8014142:	6833      	ldr	r3, [r6, #0]
 8014144:	9402      	str	r4, [sp, #8]
 8014146:	460d      	mov	r5, r1
 8014148:	46a3      	mov	fp, r4
 801414a:	4627      	mov	r7, r4
 801414c:	46a2      	mov	sl, r4
 801414e:	46a1      	mov	r9, r4
 8014150:	9407      	str	r4, [sp, #28]
 8014152:	46a0      	mov	r8, r4
 8014154:	9308      	str	r3, [sp, #32]
 8014156:	f7f4 fa05 	bl	8008564 <net_handle>
 801415a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801415e:	9300      	str	r3, [sp, #0]
 8014160:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8014164:	ab0c      	add	r3, sp, #48	; 0x30
 8014166:	f44f 7209 	mov.w	r2, #548	; 0x224
 801416a:	a90d      	add	r1, sp, #52	; 0x34
 801416c:	f7fe fcee 	bl	8012b4c <udp_recv>
 8014170:	2800      	cmp	r0, #0
 8014172:	d040      	beq.n	80141f6 <_parse_response+0xca>
 8014174:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014178:	2b43      	cmp	r3, #67	; 0x43
 801417a:	d13c      	bne.n	80141f6 <_parse_response+0xca>
 801417c:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8014180:	1e6b      	subs	r3, r5, #1
 8014182:	1d69      	adds	r1, r5, #5
 8014184:	4299      	cmp	r1, r3
 8014186:	d130      	bne.n	80141ea <_parse_response+0xbe>
 8014188:	2500      	movs	r5, #0
 801418a:	ab0d      	add	r3, sp, #52	; 0x34
 801418c:	4418      	add	r0, r3
 801418e:	46ac      	mov	ip, r5
 8014190:	462e      	mov	r6, r5
 8014192:	ab49      	add	r3, sp, #292	; 0x124
 8014194:	4629      	mov	r1, r5
 8014196:	4283      	cmp	r3, r0
 8014198:	d338      	bcc.n	801420c <_parse_response+0xe0>
 801419a:	b145      	cbz	r5, 80141ae <_parse_response+0x82>
 801419c:	4b39      	ldr	r3, [pc, #228]	; (8014284 <_parse_response+0x158>)
 801419e:	9a07      	ldr	r2, [sp, #28]
 80141a0:	709a      	strb	r2, [r3, #2]
 80141a2:	9a06      	ldr	r2, [sp, #24]
 80141a4:	705a      	strb	r2, [r3, #1]
 80141a6:	9a05      	ldr	r2, [sp, #20]
 80141a8:	f883 8003 	strb.w	r8, [r3, #3]
 80141ac:	701a      	strb	r2, [r3, #0]
 80141ae:	f1bc 0f00 	cmp.w	ip, #0
 80141b2:	d007      	beq.n	80141c4 <_parse_response+0x98>
 80141b4:	4b34      	ldr	r3, [pc, #208]	; (8014288 <_parse_response+0x15c>)
 80141b6:	9a04      	ldr	r2, [sp, #16]
 80141b8:	70da      	strb	r2, [r3, #3]
 80141ba:	9a03      	ldr	r2, [sp, #12]
 80141bc:	709a      	strb	r2, [r3, #2]
 80141be:	9a02      	ldr	r2, [sp, #8]
 80141c0:	705c      	strb	r4, [r3, #1]
 80141c2:	701a      	strb	r2, [r3, #0]
 80141c4:	b13e      	cbz	r6, 80141d6 <_parse_response+0xaa>
 80141c6:	4b31      	ldr	r3, [pc, #196]	; (801428c <_parse_response+0x160>)
 80141c8:	70df      	strb	r7, [r3, #3]
 80141ca:	f883 a002 	strb.w	sl, [r3, #2]
 80141ce:	f883 9001 	strb.w	r9, [r3, #1]
 80141d2:	f883 b000 	strb.w	fp, [r3]
 80141d6:	2902      	cmp	r1, #2
 80141d8:	bf02      	ittt	eq
 80141da:	4b2d      	ldreq	r3, [pc, #180]	; (8014290 <_parse_response+0x164>)
 80141dc:	9a11      	ldreq	r2, [sp, #68]	; 0x44
 80141de:	601a      	streq	r2, [r3, #0]
 80141e0:	4608      	mov	r0, r1
 80141e2:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 80141e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141ea:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 80141ee:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 80141f2:	45e6      	cmp	lr, ip
 80141f4:	d0c6      	beq.n	8014184 <_parse_response+0x58>
 80141f6:	6833      	ldr	r3, [r6, #0]
 80141f8:	9a08      	ldr	r2, [sp, #32]
 80141fa:	1a9b      	subs	r3, r3, r2
 80141fc:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8014200:	d3a9      	bcc.n	8014156 <_parse_response+0x2a>
 8014202:	2800      	cmp	r0, #0
 8014204:	d1c0      	bne.n	8014188 <_parse_response+0x5c>
 8014206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801420a:	e7ea      	b.n	80141e2 <_parse_response+0xb6>
 801420c:	781a      	ldrb	r2, [r3, #0]
 801420e:	2a35      	cmp	r2, #53	; 0x35
 8014210:	d011      	beq.n	8014236 <_parse_response+0x10a>
 8014212:	d808      	bhi.n	8014226 <_parse_response+0xfa>
 8014214:	2a01      	cmp	r2, #1
 8014216:	d011      	beq.n	801423c <_parse_response+0x110>
 8014218:	2a03      	cmp	r2, #3
 801421a:	d019      	beq.n	8014250 <_parse_response+0x124>
 801421c:	b14a      	cbz	r2, 8014232 <_parse_response+0x106>
 801421e:	1c9a      	adds	r2, r3, #2
 8014220:	785b      	ldrb	r3, [r3, #1]
 8014222:	4413      	add	r3, r2
 8014224:	e7b7      	b.n	8014196 <_parse_response+0x6a>
 8014226:	2a36      	cmp	r2, #54	; 0x36
 8014228:	d01f      	beq.n	801426a <_parse_response+0x13e>
 801422a:	2aff      	cmp	r2, #255	; 0xff
 801422c:	d1f7      	bne.n	801421e <_parse_response+0xf2>
 801422e:	4603      	mov	r3, r0
 8014230:	e7b1      	b.n	8014196 <_parse_response+0x6a>
 8014232:	3301      	adds	r3, #1
 8014234:	e7af      	b.n	8014196 <_parse_response+0x6a>
 8014236:	7899      	ldrb	r1, [r3, #2]
 8014238:	3303      	adds	r3, #3
 801423a:	e7ac      	b.n	8014196 <_parse_response+0x6a>
 801423c:	f893 b002 	ldrb.w	fp, [r3, #2]
 8014240:	f893 9003 	ldrb.w	r9, [r3, #3]
 8014244:	f893 a004 	ldrb.w	sl, [r3, #4]
 8014248:	795f      	ldrb	r7, [r3, #5]
 801424a:	4616      	mov	r6, r2
 801424c:	3306      	adds	r3, #6
 801424e:	e7a2      	b.n	8014196 <_parse_response+0x6a>
 8014250:	789a      	ldrb	r2, [r3, #2]
 8014252:	9202      	str	r2, [sp, #8]
 8014254:	791a      	ldrb	r2, [r3, #4]
 8014256:	9203      	str	r2, [sp, #12]
 8014258:	795a      	ldrb	r2, [r3, #5]
 801425a:	9204      	str	r2, [sp, #16]
 801425c:	785a      	ldrb	r2, [r3, #1]
 801425e:	78dc      	ldrb	r4, [r3, #3]
 8014260:	4413      	add	r3, r2
 8014262:	3302      	adds	r3, #2
 8014264:	f04f 0c01 	mov.w	ip, #1
 8014268:	e795      	b.n	8014196 <_parse_response+0x6a>
 801426a:	789a      	ldrb	r2, [r3, #2]
 801426c:	9205      	str	r2, [sp, #20]
 801426e:	78da      	ldrb	r2, [r3, #3]
 8014270:	9206      	str	r2, [sp, #24]
 8014272:	791a      	ldrb	r2, [r3, #4]
 8014274:	f893 8005 	ldrb.w	r8, [r3, #5]
 8014278:	9207      	str	r2, [sp, #28]
 801427a:	3306      	adds	r3, #6
 801427c:	2501      	movs	r5, #1
 801427e:	e78a      	b.n	8014196 <_parse_response+0x6a>
 8014280:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8014284:	2000fca8 	andcs	pc, r0, r8, lsr #25
 8014288:	2000fa78 	andcs	pc, r0, r8, ror sl	; <UNPREDICTABLE>
 801428c:	2000fa80 	andcs	pc, r0, r0, lsl #21
 8014290:	2000fa7c 	andcs	pc, r0, ip, ror sl	; <UNPREDICTABLE>

08014294 <memcpy.isra.0>:
 8014294:	3801      	subs	r0, #1
 8014296:	440a      	add	r2, r1
 8014298:	4291      	cmp	r1, r2
 801429a:	d100      	bne.n	801429e <memcpy.isra.0+0xa>
 801429c:	4770      	bx	lr
 801429e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80142a2:	f800 3f01 	strb.w	r3, [r0, #1]!
 80142a6:	e7f7      	b.n	8014298 <memcpy.isra.0+0x4>

080142a8 <dhcp_client>:
 80142a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142ac:	b087      	sub	sp, #28
 80142ae:	460f      	mov	r7, r1
 80142b0:	9203      	str	r2, [sp, #12]
 80142b2:	4a77      	ldr	r2, [pc, #476]	; (8014490 <dhcp_client+0x1e8>)
 80142b4:	4605      	mov	r5, r0
 80142b6:	f44f 7309 	mov.w	r3, #548	; 0x224
 80142ba:	4614      	mov	r4, r2
 80142bc:	2100      	movs	r1, #0
 80142be:	3b01      	subs	r3, #1
 80142c0:	f802 1b01 	strb.w	r1, [r2], #1
 80142c4:	d1fb      	bne.n	80142be <dhcp_client+0x16>
 80142c6:	f240 1301 	movw	r3, #257	; 0x101
 80142ca:	2206      	movs	r2, #6
 80142cc:	4871      	ldr	r0, [pc, #452]	; (8014494 <dhcp_client+0x1ec>)
 80142ce:	8023      	strh	r3, [r4, #0]
 80142d0:	4629      	mov	r1, r5
 80142d2:	70a2      	strb	r2, [r4, #2]
 80142d4:	f7ff ffde 	bl	8014294 <memcpy.isra.0>
 80142d8:	4b6f      	ldr	r3, [pc, #444]	; (8014498 <dhcp_client+0x1f0>)
 80142da:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 80142de:	f240 1335 	movw	r3, #309	; 0x135
 80142e2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 80142e6:	2044      	movs	r0, #68	; 0x44
 80142e8:	f7fe fbf6 	bl	8012ad8 <udp_bind>
 80142ec:	1e06      	subs	r6, r0, #0
 80142ee:	f2c0 80c9 	blt.w	8014484 <dhcp_client+0x1dc>
 80142f2:	f8df a19c 	ldr.w	sl, [pc, #412]	; 8014490 <dhcp_client+0x1e8>
 80142f6:	f04f 0915 	mov.w	r9, #21
 80142fa:	f1b9 0901 	subs.w	r9, r9, #1
 80142fe:	d11f      	bne.n	8014340 <dhcp_client+0x98>
 8014300:	464c      	mov	r4, r9
 8014302:	2044      	movs	r0, #68	; 0x44
 8014304:	f7fe fc02 	bl	8012b0c <udp_unbind>
 8014308:	2c00      	cmp	r4, #0
 801430a:	f000 80be 	beq.w	801448a <dhcp_client+0x1e2>
 801430e:	4963      	ldr	r1, [pc, #396]	; (801449c <dhcp_client+0x1f4>)
 8014310:	2204      	movs	r2, #4
 8014312:	a805      	add	r0, sp, #20
 8014314:	f7ff ffbe 	bl	8014294 <memcpy.isra.0>
 8014318:	9b05      	ldr	r3, [sp, #20]
 801431a:	4961      	ldr	r1, [pc, #388]	; (80144a0 <dhcp_client+0x1f8>)
 801431c:	603b      	str	r3, [r7, #0]
 801431e:	2204      	movs	r2, #4
 8014320:	a805      	add	r0, sp, #20
 8014322:	f7ff ffb7 	bl	8014294 <memcpy.isra.0>
 8014326:	9b05      	ldr	r3, [sp, #20]
 8014328:	60bb      	str	r3, [r7, #8]
 801432a:	a805      	add	r0, sp, #20
 801432c:	495d      	ldr	r1, [pc, #372]	; (80144a4 <dhcp_client+0x1fc>)
 801432e:	2204      	movs	r2, #4
 8014330:	f7ff ffb0 	bl	8014294 <memcpy.isra.0>
 8014334:	9b05      	ldr	r3, [sp, #20]
 8014336:	607b      	str	r3, [r7, #4]
 8014338:	2000      	movs	r0, #0
 801433a:	b007      	add	sp, #28
 801433c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014340:	f643 5301 	movw	r3, #15617	; 0x3d01
 8014344:	f240 1807 	movw	r8, #263	; 0x107
 8014348:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 801434c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8014350:	782b      	ldrb	r3, [r5, #0]
 8014352:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8014356:	786b      	ldrb	r3, [r5, #1]
 8014358:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 801435c:	78ab      	ldrb	r3, [r5, #2]
 801435e:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8014362:	78eb      	ldrb	r3, [r5, #3]
 8014364:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8014368:	792b      	ldrb	r3, [r5, #4]
 801436a:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 801436e:	796b      	ldrb	r3, [r5, #5]
 8014370:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8014374:	4a4c      	ldr	r2, [pc, #304]	; (80144a8 <dhcp_client+0x200>)
 8014376:	4b4d      	ldr	r3, [pc, #308]	; (80144ac <dhcp_client+0x204>)
 8014378:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 801437c:	23ff      	movs	r3, #255	; 0xff
 801437e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8014382:	fa5f fb86 	uxtb.w	fp, r6
 8014386:	2343      	movs	r3, #67	; 0x43
 8014388:	9300      	str	r3, [sp, #0]
 801438a:	f240 1205 	movw	r2, #261	; 0x105
 801438e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8014392:	4651      	mov	r1, sl
 8014394:	4658      	mov	r0, fp
 8014396:	f7fe fc35 	bl	8012c04 <udp_send>
 801439a:	4629      	mov	r1, r5
 801439c:	4630      	mov	r0, r6
 801439e:	f7ff fec5 	bl	801412c <_parse_response>
 80143a2:	2802      	cmp	r0, #2
 80143a4:	d1a9      	bne.n	80142fa <dhcp_client+0x52>
 80143a6:	f643 5303 	movw	r3, #15619	; 0x3d03
 80143aa:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80143ae:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80143b2:	782b      	ldrb	r3, [r5, #0]
 80143b4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80143b8:	786b      	ldrb	r3, [r5, #1]
 80143ba:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80143be:	78ab      	ldrb	r3, [r5, #2]
 80143c0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80143c4:	78eb      	ldrb	r3, [r5, #3]
 80143c6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80143ca:	792b      	ldrb	r3, [r5, #4]
 80143cc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 80143d0:	796b      	ldrb	r3, [r5, #5]
 80143d2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 80143d6:	f240 4332 	movw	r3, #1074	; 0x432
 80143da:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 80143de:	4b2f      	ldr	r3, [pc, #188]	; (801449c <dhcp_client+0x1f4>)
 80143e0:	f8df c0d0 	ldr.w	ip, [pc, #208]	; 80144b4 <dhcp_client+0x20c>
 80143e4:	881a      	ldrh	r2, [r3, #0]
 80143e6:	885b      	ldrh	r3, [r3, #2]
 80143e8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 80143ec:	f240 4336 	movw	r3, #1078	; 0x436
 80143f0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 80143f4:	4b2e      	ldr	r3, [pc, #184]	; (80144b0 <dhcp_client+0x208>)
 80143f6:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 80143fa:	681b      	ldr	r3, [r3, #0]
 80143fc:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8014400:	230c      	movs	r3, #12
 8014402:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8014406:	9b03      	ldr	r3, [sp, #12]
 8014408:	221e      	movs	r2, #30
 801440a:	1e58      	subs	r0, r3, #1
 801440c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8014410:	f1a2 0e1e 	sub.w	lr, r2, #30
 8014414:	1c51      	adds	r1, r2, #1
 8014416:	bb8b      	cbnz	r3, 801447c <dhcp_client+0x1d4>
 8014418:	18a3      	adds	r3, r4, r2
 801441a:	2037      	movs	r0, #55	; 0x37
 801441c:	4421      	add	r1, r4
 801441e:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8014422:	2006      	movs	r0, #6
 8014424:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8014428:	2103      	movs	r1, #3
 801442a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 801442e:	210f      	movs	r1, #15
 8014430:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8014434:	213a      	movs	r1, #58	; 0x3a
 8014436:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 801443a:	213b      	movs	r1, #59	; 0x3b
 801443c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8014440:	f04f 0801 	mov.w	r8, #1
 8014444:	21ff      	movs	r1, #255	; 0xff
 8014446:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 801444a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 801444e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8014452:	32f5      	adds	r2, #245	; 0xf5
 8014454:	2343      	movs	r3, #67	; 0x43
 8014456:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801445a:	b292      	uxth	r2, r2
 801445c:	9300      	str	r3, [sp, #0]
 801445e:	4651      	mov	r1, sl
 8014460:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8014464:	4658      	mov	r0, fp
 8014466:	f7fe fbcd 	bl	8012c04 <udp_send>
 801446a:	4629      	mov	r1, r5
 801446c:	4630      	mov	r0, r6
 801446e:	f7ff fe5d 	bl	801412c <_parse_response>
 8014472:	2805      	cmp	r0, #5
 8014474:	f47f af41 	bne.w	80142fa <dhcp_client+0x52>
 8014478:	4644      	mov	r4, r8
 801447a:	e742      	b.n	8014302 <dhcp_client+0x5a>
 801447c:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8014480:	460a      	mov	r2, r1
 8014482:	e7c3      	b.n	801440c <dhcp_client+0x164>
 8014484:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014488:	e757      	b.n	801433a <dhcp_client+0x92>
 801448a:	f06f 0001 	mvn.w	r0, #1
 801448e:	e754      	b.n	801433a <dhcp_client+0x92>
 8014490:	2000fa84 	andcs	pc, r0, r4, lsl #21
 8014494:	2000faa0 	andcs	pc, r0, r0, lsr #21
 8014498:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 801449c:	2000fa7c 	andcs	pc, r0, ip, ror sl	; <UNPREDICTABLE>
 80144a0:	2000fa78 	andcs	pc, r0, r8, ror sl	; <UNPREDICTABLE>
 80144a4:	2000fa80 	andcs	pc, r0, r0, lsl #21
 80144a8:	03010637 	movweq	r0, #5687	; 0x1637
 80144ac:	3b3a0f06 	blcc	8e980cc <__exidx_end+0xe7bc5c>
 80144b0:	2000fca8 	andcs	pc, r0, r8, lsr #25
 80144b4:	2000fb8d 	andcs	pc, r0, sp, lsl #23

080144b8 <dhcp_client_release>:
 80144b8:	b507      	push	{r0, r1, r2, lr}
 80144ba:	2044      	movs	r0, #68	; 0x44
 80144bc:	f7fe fb0c 	bl	8012ad8 <udp_bind>
 80144c0:	4912      	ldr	r1, [pc, #72]	; (801450c <dhcp_client_release+0x54>)
 80144c2:	f243 6307 	movw	r3, #13831	; 0x3607
 80144c6:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 80144ca:	2304      	movs	r3, #4
 80144cc:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 80144d0:	4b0f      	ldr	r3, [pc, #60]	; (8014510 <dhcp_client_release+0x58>)
 80144d2:	781a      	ldrb	r2, [r3, #0]
 80144d4:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 80144d8:	785a      	ldrb	r2, [r3, #1]
 80144da:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 80144de:	789a      	ldrb	r2, [r3, #2]
 80144e0:	78db      	ldrb	r3, [r3, #3]
 80144e2:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80144e6:	23ff      	movs	r3, #255	; 0xff
 80144e8:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80144ec:	2343      	movs	r3, #67	; 0x43
 80144ee:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 80144f2:	b2c0      	uxtb	r0, r0
 80144f4:	9300      	str	r3, [sp, #0]
 80144f6:	22fa      	movs	r2, #250	; 0xfa
 80144f8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80144fc:	f7fe fb82 	bl	8012c04 <udp_send>
 8014500:	2044      	movs	r0, #68	; 0x44
 8014502:	b003      	add	sp, #12
 8014504:	f85d eb04 	ldr.w	lr, [sp], #4
 8014508:	f7fe bb00 	b.w	8012b0c <udp_unbind>
 801450c:	2000fa84 	andcs	pc, r0, r4, lsl #21
 8014510:	2000fca8 	andcs	pc, r0, r8, lsr #25

08014514 <memcpy.isra.0>:
 8014514:	3801      	subs	r0, #1
 8014516:	440a      	add	r2, r1
 8014518:	4291      	cmp	r1, r2
 801451a:	d100      	bne.n	801451e <memcpy.isra.0+0xa>
 801451c:	4770      	bx	lr
 801451e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014522:	f800 3f01 	strb.w	r3, [r0, #1]!
 8014526:	e7f7      	b.n	8014518 <memcpy.isra.0+0x4>

08014528 <_send_report>:
 8014528:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801452a:	4c1d      	ldr	r4, [pc, #116]	; (80145a0 <_send_report+0x78>)
 801452c:	9001      	str	r0, [sp, #4]
 801452e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8014532:	70e3      	strb	r3, [r4, #3]
 8014534:	f104 0508 	add.w	r5, r4, #8
 8014538:	f3c0 4307 	ubfx	r3, r0, #16, #8
 801453c:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8014540:	7160      	strb	r0, [r4, #5]
 8014542:	4621      	mov	r1, r4
 8014544:	4628      	mov	r0, r5
 8014546:	2206      	movs	r2, #6
 8014548:	7123      	strb	r3, [r4, #4]
 801454a:	f7ff ffe3 	bl	8014514 <memcpy.isra.0>
 801454e:	2204      	movs	r2, #4
 8014550:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8014552:	8363      	strh	r3, [r4, #26]
 8014554:	eb0d 0102 	add.w	r1, sp, r2
 8014558:	f104 0026 	add.w	r0, r4, #38	; 0x26
 801455c:	f104 0616 	add.w	r6, r4, #22
 8014560:	f7ff ffd8 	bl	8014514 <memcpy.isra.0>
 8014564:	2700      	movs	r7, #0
 8014566:	2118      	movs	r1, #24
 8014568:	4630      	mov	r0, r6
 801456a:	8427      	strh	r7, [r4, #32]
 801456c:	f000 f8bf 	bl	80146ee <net_chksum>
 8014570:	2204      	movs	r2, #4
 8014572:	eb0d 0102 	add.w	r1, sp, r2
 8014576:	8420      	strh	r0, [r4, #32]
 8014578:	f104 0032 	add.w	r0, r4, #50	; 0x32
 801457c:	f7ff ffca 	bl	8014514 <memcpy.isra.0>
 8014580:	2120      	movs	r1, #32
 8014582:	4630      	mov	r0, r6
 8014584:	8627      	strh	r7, [r4, #48]	; 0x30
 8014586:	f000 f8b2 	bl	80146ee <net_chksum>
 801458a:	212e      	movs	r1, #46	; 0x2e
 801458c:	8620      	strh	r0, [r4, #48]	; 0x30
 801458e:	4628      	mov	r0, r5
 8014590:	f002 fdc2 	bl	8017118 <emac_eth_send>
 8014594:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8014596:	3301      	adds	r3, #1
 8014598:	8723      	strh	r3, [r4, #56]	; 0x38
 801459a:	b003      	add	sp, #12
 801459c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801459e:	bf00      	nop
 80145a0:	10001328 	andne	r1, r0, r8, lsr #6

080145a4 <igmp_set_ip>:
 80145a4:	b513      	push	{r0, r1, r4, lr}
 80145a6:	4c09      	ldr	r4, [pc, #36]	; (80145cc <igmp_set_ip+0x28>)
 80145a8:	6803      	ldr	r3, [r0, #0]
 80145aa:	9301      	str	r3, [sp, #4]
 80145ac:	2204      	movs	r2, #4
 80145ae:	eb0d 0102 	add.w	r1, sp, r2
 80145b2:	f104 0022 	add.w	r0, r4, #34	; 0x22
 80145b6:	f7ff ffad 	bl	8014514 <memcpy.isra.0>
 80145ba:	2204      	movs	r2, #4
 80145bc:	eb0d 0102 	add.w	r1, sp, r2
 80145c0:	f104 0056 	add.w	r0, r4, #86	; 0x56
 80145c4:	f7ff ffa6 	bl	8014514 <memcpy.isra.0>
 80145c8:	b002      	add	sp, #8
 80145ca:	bd10      	pop	{r4, pc}
 80145cc:	10001328 	andne	r1, r0, r8, lsr #6

080145d0 <igmp_timer>:
 80145d0:	b570      	push	{r4, r5, r6, lr}
 80145d2:	4c0b      	ldr	r4, [pc, #44]	; (8014600 <igmp_timer+0x30>)
 80145d4:	2500      	movs	r5, #0
 80145d6:	2602      	movs	r6, #2
 80145d8:	7963      	ldrb	r3, [r4, #5]
 80145da:	2b01      	cmp	r3, #1
 80145dc:	d109      	bne.n	80145f2 <igmp_timer+0x22>
 80145de:	7923      	ldrb	r3, [r4, #4]
 80145e0:	b13b      	cbz	r3, 80145f2 <igmp_timer+0x22>
 80145e2:	3b01      	subs	r3, #1
 80145e4:	b2db      	uxtb	r3, r3
 80145e6:	7123      	strb	r3, [r4, #4]
 80145e8:	b91b      	cbnz	r3, 80145f2 <igmp_timer+0x22>
 80145ea:	6820      	ldr	r0, [r4, #0]
 80145ec:	f7ff ff9c 	bl	8014528 <_send_report>
 80145f0:	7166      	strb	r6, [r4, #5]
 80145f2:	3501      	adds	r5, #1
 80145f4:	2d46      	cmp	r5, #70	; 0x46
 80145f6:	f104 0408 	add.w	r4, r4, #8
 80145fa:	d1ed      	bne.n	80145d8 <igmp_timer+0x8>
 80145fc:	bd70      	pop	{r4, r5, r6, pc}
 80145fe:	bf00      	nop
 8014600:	10001394 	mulne	r0, r4, r3

08014604 <igmp_join>:
 8014604:	b538      	push	{r3, r4, r5, lr}
 8014606:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 801460a:	2be0      	cmp	r3, #224	; 0xe0
 801460c:	d11e      	bne.n	801464c <igmp_join+0x48>
 801460e:	4a12      	ldr	r2, [pc, #72]	; (8014658 <igmp_join+0x54>)
 8014610:	f8d2 429c 	ldr.w	r4, [r2, #668]	; 0x29c
 8014614:	2c46      	cmp	r4, #70	; 0x46
 8014616:	d01c      	beq.n	8014652 <igmp_join+0x4e>
 8014618:	2300      	movs	r3, #0
 801461a:	f102 016c 	add.w	r1, r2, #108	; 0x6c
 801461e:	429c      	cmp	r4, r3
 8014620:	dc0e      	bgt.n	8014640 <igmp_join+0x3c>
 8014622:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
 8014626:	f44f 7181 	mov.w	r1, #258	; 0x102
 801462a:	66d8      	str	r0, [r3, #108]	; 0x6c
 801462c:	f8a3 1070 	strh.w	r1, [r3, #112]	; 0x70
 8014630:	1c63      	adds	r3, r4, #1
 8014632:	f8c2 329c 	str.w	r3, [r2, #668]	; 0x29c
 8014636:	f7ff ff77 	bl	8014528 <_send_report>
 801463a:	4623      	mov	r3, r4
 801463c:	4618      	mov	r0, r3
 801463e:	bd38      	pop	{r3, r4, r5, pc}
 8014640:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
 8014644:	4285      	cmp	r5, r0
 8014646:	d0f9      	beq.n	801463c <igmp_join+0x38>
 8014648:	3301      	adds	r3, #1
 801464a:	e7e8      	b.n	801461e <igmp_join+0x1a>
 801464c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8014650:	e7f4      	b.n	801463c <igmp_join+0x38>
 8014652:	f06f 0301 	mvn.w	r3, #1
 8014656:	e7f1      	b.n	801463c <igmp_join+0x38>
 8014658:	10001328 	andne	r1, r0, r8, lsr #6

0801465c <igmp_leave>:
 801465c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801465e:	4c1d      	ldr	r4, [pc, #116]	; (80146d4 <igmp_leave+0x78>)
 8014660:	2600      	movs	r6, #0
 8014662:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8014666:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 801466a:	4282      	cmp	r2, r0
 801466c:	d006      	beq.n	801467c <igmp_leave+0x20>
 801466e:	3601      	adds	r6, #1
 8014670:	2e46      	cmp	r6, #70	; 0x46
 8014672:	d1f8      	bne.n	8014666 <igmp_leave+0xa>
 8014674:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014678:	b002      	add	sp, #8
 801467a:	bd70      	pop	{r4, r5, r6, pc}
 801467c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801467e:	9001      	str	r0, [sp, #4]
 8014680:	2500      	movs	r5, #0
 8014682:	2118      	movs	r1, #24
 8014684:	f104 0016 	add.w	r0, r4, #22
 8014688:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801468c:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8014690:	f000 f82d 	bl	80146ee <net_chksum>
 8014694:	2204      	movs	r2, #4
 8014696:	eb0d 0102 	add.w	r1, sp, r2
 801469a:	f8a4 0054 	strh.w	r0, [r4, #84]	; 0x54
 801469e:	f104 0066 	add.w	r0, r4, #102	; 0x66
 80146a2:	f7ff ff37 	bl	8014514 <memcpy.isra.0>
 80146a6:	2120      	movs	r1, #32
 80146a8:	f104 004a 	add.w	r0, r4, #74	; 0x4a
 80146ac:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80146b0:	f000 f81d 	bl	80146ee <net_chksum>
 80146b4:	212e      	movs	r1, #46	; 0x2e
 80146b6:	f8a4 0064 	strh.w	r0, [r4, #100]	; 0x64
 80146ba:	4807      	ldr	r0, [pc, #28]	; (80146d8 <igmp_leave+0x7c>)
 80146bc:	f002 fd2c 	bl	8017118 <emac_eth_send>
 80146c0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80146c2:	3301      	adds	r3, #1
 80146c4:	8723      	strh	r3, [r4, #56]	; 0x38
 80146c6:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80146ca:	4628      	mov	r0, r5
 80146cc:	66e5      	str	r5, [r4, #108]	; 0x6c
 80146ce:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 80146d2:	e7d1      	b.n	8014678 <igmp_leave+0x1c>
 80146d4:	10001328 	andne	r1, r0, r8, lsr #6
 80146d8:	10001364 	andne	r1, r0, r4, ror #6

080146dc <ip_set_ip>:
 80146dc:	b510      	push	{r4, lr}
 80146de:	4604      	mov	r4, r0
 80146e0:	f7fe f9da 	bl	8012a98 <udp_set_ip>
 80146e4:	4620      	mov	r0, r4
 80146e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80146ea:	f7ff bf5b 	b.w	80145a4 <igmp_set_ip>

080146ee <net_chksum>:
 80146ee:	f021 0201 	bic.w	r2, r1, #1
 80146f2:	b530      	push	{r4, r5, lr}
 80146f4:	2300      	movs	r3, #0
 80146f6:	1884      	adds	r4, r0, r2
 80146f8:	42a0      	cmp	r0, r4
 80146fa:	d10b      	bne.n	8014714 <net_chksum+0x26>
 80146fc:	4291      	cmp	r1, r2
 80146fe:	d004      	beq.n	801470a <net_chksum+0x1c>
 8014700:	7802      	ldrb	r2, [r0, #0]
 8014702:	0212      	lsls	r2, r2, #8
 8014704:	ba52      	rev16	r2, r2
 8014706:	fa13 f382 	uxtah	r3, r3, r2
 801470a:	0c1a      	lsrs	r2, r3, #16
 801470c:	d106      	bne.n	801471c <net_chksum+0x2e>
 801470e:	43d8      	mvns	r0, r3
 8014710:	b280      	uxth	r0, r0
 8014712:	bd30      	pop	{r4, r5, pc}
 8014714:	f830 5b02 	ldrh.w	r5, [r0], #2
 8014718:	442b      	add	r3, r5
 801471a:	e7ed      	b.n	80146f8 <net_chksum+0xa>
 801471c:	fa12 f383 	uxtah	r3, r2, r3
 8014720:	e7f3      	b.n	801470a <net_chksum+0x1c>

08014722 <memcpy.isra.0>:
 8014722:	3801      	subs	r0, #1
 8014724:	440a      	add	r2, r1
 8014726:	4291      	cmp	r1, r2
 8014728:	d100      	bne.n	801472c <memcpy.isra.0+0xa>
 801472a:	4770      	bx	lr
 801472c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014730:	f800 3f01 	strb.w	r3, [r0, #1]!
 8014734:	e7f7      	b.n	8014726 <memcpy.isra.0+0x4>

08014736 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8014736:	b430      	push	{r4, r5}
 8014738:	b168      	cbz	r0, 8014756 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 801473a:	7905      	ldrb	r5, [r0, #4]
 801473c:	2300      	movs	r3, #0
 801473e:	5cd4      	ldrb	r4, [r2, r3]
 8014740:	b11c      	cbz	r4, 801474a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8014742:	1c5c      	adds	r4, r3, #1
 8014744:	429d      	cmp	r5, r3
 8014746:	4623      	mov	r3, r4
 8014748:	dcf9      	bgt.n	801473e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 801474a:	6804      	ldr	r4, [r0, #0]
 801474c:	69e4      	ldr	r4, [r4, #28]
 801474e:	b2db      	uxtb	r3, r3
 8014750:	46a4      	mov	ip, r4
 8014752:	bc30      	pop	{r4, r5}
 8014754:	4760      	bx	ip
 8014756:	bc30      	pop	{r4, r5}
 8014758:	4770      	bx	lr

0801475a <Display::ClearLine(unsigned char) [clone .isra.0]>:
 801475a:	b110      	cbz	r0, 8014762 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801475c:	6803      	ldr	r3, [r0, #0]
 801475e:	691b      	ldr	r3, [r3, #16]
 8014760:	4718      	bx	r3
 8014762:	4770      	bx	lr

08014764 <DisplayUdf::DisplayUdf()>:
 8014764:	b510      	push	{r4, lr}
 8014766:	4604      	mov	r4, r0
 8014768:	f000 fef6 	bl	8015558 <Display::Display()>
 801476c:	2202      	movs	r2, #2
 801476e:	2300      	movs	r3, #0
 8014770:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8014774:	4b05      	ldr	r3, [pc, #20]	; (801478c <DisplayUdf::DisplayUdf()+0x28>)
 8014776:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 801477a:	601c      	str	r4, [r3, #0]
 801477c:	2301      	movs	r3, #1
 801477e:	f802 3f01 	strb.w	r3, [r2, #1]!
 8014782:	3301      	adds	r3, #1
 8014784:	2b15      	cmp	r3, #21
 8014786:	d1fa      	bne.n	801477e <DisplayUdf::DisplayUdf()+0x1a>
 8014788:	4620      	mov	r0, r4
 801478a:	bd10      	pop	{r4, pc}
 801478c:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014790 <DisplayUdf::SetTitle(char const*, ...)>:
 8014790:	b40e      	push	{r1, r2, r3}
 8014792:	b517      	push	{r0, r1, r2, r4, lr}
 8014794:	ab05      	add	r3, sp, #20
 8014796:	4604      	mov	r4, r0
 8014798:	f853 2b04 	ldr.w	r2, [r3], #4
 801479c:	9301      	str	r3, [sp, #4]
 801479e:	211f      	movs	r1, #31
 80147a0:	301c      	adds	r0, #28
 80147a2:	f7f5 fec9 	bl	800a538 <vsnprintf>
 80147a6:	4420      	add	r0, r4
 80147a8:	2300      	movs	r3, #0
 80147aa:	7703      	strb	r3, [r0, #28]
 80147ac:	b003      	add	sp, #12
 80147ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80147b2:	b003      	add	sp, #12
 80147b4:	4770      	bx	lr

080147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80147b6:	1e4b      	subs	r3, r1, #1
 80147b8:	2b05      	cmp	r3, #5
 80147ba:	b530      	push	{r4, r5, lr}
 80147bc:	d80f      	bhi.n	80147de <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80147be:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80147c2:	2300      	movs	r3, #0
 80147c4:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80147c8:	428d      	cmp	r5, r1
 80147ca:	d109      	bne.n	80147e0 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80147cc:	1884      	adds	r4, r0, r2
 80147ce:	4403      	add	r3, r0
 80147d0:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80147d4:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80147d8:	4402      	add	r2, r0
 80147da:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
 80147de:	bd30      	pop	{r4, r5, pc}
 80147e0:	3301      	adds	r3, #1
 80147e2:	2b14      	cmp	r3, #20
 80147e4:	d1ee      	bne.n	80147c4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80147e6:	e7f7      	b.n	80147d8 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080147e8 <DisplayUdf::ShowEmacStart()>:
 80147e8:	b510      	push	{r4, lr}
 80147ea:	4604      	mov	r4, r0
 80147ec:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80147f0:	6980      	ldr	r0, [r0, #24]
 80147f2:	f7ff ffb2 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80147f6:	4a03      	ldr	r2, [pc, #12]	; (8014804 <DisplayUdf::ShowEmacStart()+0x1c>)
 80147f8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80147fc:	4620      	mov	r0, r4
 80147fe:	f7f4 fd59 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014802:	bd10      	pop	{r4, pc}
 8014804:	0801b765 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, ip, sp, pc}

08014808 <DisplayUdf::ShowIpAddress()>:
 8014808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801480c:	4604      	mov	r4, r0
 801480e:	b088      	sub	sp, #32
 8014810:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8014814:	6980      	ldr	r0, [r0, #24]
 8014816:	f7ff ffa0 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 801481a:	4b13      	ldr	r3, [pc, #76]	; (8014868 <DisplayUdf::ShowIpAddress()+0x60>)
 801481c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8014820:	681d      	ldr	r5, [r3, #0]
 8014822:	9107      	str	r1, [sp, #28]
 8014824:	696e      	ldr	r6, [r5, #20]
 8014826:	69e8      	ldr	r0, [r5, #28]
 8014828:	b2f3      	uxtb	r3, r6
 801482a:	9306      	str	r3, [sp, #24]
 801482c:	f004 f81c 	bl	8018868 <__popcountsi2>
 8014830:	79ea      	ldrb	r2, [r5, #7]
 8014832:	f3c6 2707 	ubfx	r7, r6, #8, #8
 8014836:	f3c6 4807 	ubfx	r8, r6, #16, #8
 801483a:	e9dd 3106 	ldrd	r3, r1, [sp, #24]
 801483e:	0e36      	lsrs	r6, r6, #24
 8014840:	b982      	cbnz	r2, 8014864 <DisplayUdf::ShowIpAddress()+0x5c>
 8014842:	796a      	ldrb	r2, [r5, #5]
 8014844:	2a00      	cmp	r2, #0
 8014846:	bf14      	ite	ne
 8014848:	2244      	movne	r2, #68	; 0x44
 801484a:	2253      	moveq	r2, #83	; 0x53
 801484c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8014850:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8014854:	4a05      	ldr	r2, [pc, #20]	; (801486c <DisplayUdf::ShowIpAddress()+0x64>)
 8014856:	9700      	str	r7, [sp, #0]
 8014858:	4620      	mov	r0, r4
 801485a:	f7f4 fd2b 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 801485e:	b008      	add	sp, #32
 8014860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014864:	225a      	movs	r2, #90	; 0x5a
 8014866:	e7f1      	b.n	801484c <DisplayUdf::ShowIpAddress()+0x44>
 8014868:	2000f9f0 	strdcs	pc, [r0], -r0
 801486c:	0801b774 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, ip, sp, pc}

08014870 <DisplayUdf::ShowNetmask()>:
 8014870:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014872:	4b0c      	ldr	r3, [pc, #48]	; (80148a4 <DisplayUdf::ShowNetmask()+0x34>)
 8014874:	681b      	ldr	r3, [r3, #0]
 8014876:	69db      	ldr	r3, [r3, #28]
 8014878:	0e1a      	lsrs	r2, r3, #24
 801487a:	9202      	str	r2, [sp, #8]
 801487c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8014880:	9201      	str	r2, [sp, #4]
 8014882:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8014886:	9200      	str	r2, [sp, #0]
 8014888:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 801488c:	4a06      	ldr	r2, [pc, #24]	; (80148a8 <DisplayUdf::ShowNetmask()+0x38>)
 801488e:	b2db      	uxtb	r3, r3
 8014890:	4604      	mov	r4, r0
 8014892:	f7f4 fd0f 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014896:	4620      	mov	r0, r4
 8014898:	b004      	add	sp, #16
 801489a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801489e:	f7ff bfb3 	b.w	8014808 <DisplayUdf::ShowIpAddress()>
 80148a2:	bf00      	nop
 80148a4:	2000f9f0 	strdcs	pc, [r0], -r0
 80148a8:	0801b786 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, ip, sp, pc}

080148ac <DisplayUdf::ShowGatewayIp()>:
 80148ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80148ae:	4604      	mov	r4, r0
 80148b0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80148b4:	6980      	ldr	r0, [r0, #24]
 80148b6:	f7ff ff50 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80148ba:	4b0a      	ldr	r3, [pc, #40]	; (80148e4 <DisplayUdf::ShowGatewayIp()+0x38>)
 80148bc:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80148c0:	681b      	ldr	r3, [r3, #0]
 80148c2:	699b      	ldr	r3, [r3, #24]
 80148c4:	0e1a      	lsrs	r2, r3, #24
 80148c6:	9202      	str	r2, [sp, #8]
 80148c8:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80148cc:	9201      	str	r2, [sp, #4]
 80148ce:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80148d2:	9200      	str	r2, [sp, #0]
 80148d4:	b2db      	uxtb	r3, r3
 80148d6:	4a04      	ldr	r2, [pc, #16]	; (80148e8 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80148d8:	4620      	mov	r0, r4
 80148da:	f7f4 fceb 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80148de:	b004      	add	sp, #16
 80148e0:	bd10      	pop	{r4, pc}
 80148e2:	bf00      	nop
 80148e4:	2000f9f0 	strdcs	pc, [r0], -r0
 80148e8:	0801b795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp, pc}

080148ec <DisplayUdf::ShowHostName()>:
 80148ec:	b510      	push	{r4, lr}
 80148ee:	4604      	mov	r4, r0
 80148f0:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80148f4:	6980      	ldr	r0, [r0, #24]
 80148f6:	f7ff ff30 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80148fa:	4b05      	ldr	r3, [pc, #20]	; (8014910 <DisplayUdf::ShowHostName()+0x24>)
 80148fc:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8014900:	681a      	ldr	r2, [r3, #0]
 8014902:	69a0      	ldr	r0, [r4, #24]
 8014904:	3220      	adds	r2, #32
 8014906:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801490a:	f7ff bf14 	b.w	8014736 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801490e:	bf00      	nop
 8014910:	2000f9f0 	strdcs	pc, [r0], -r0

08014914 <DisplayUdf::Show()>:
 8014914:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014916:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 801491a:	4604      	mov	r4, r0
 801491c:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8014920:	21ff      	movs	r1, #255	; 0xff
 8014922:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8014926:	2806      	cmp	r0, #6
 8014928:	bf88      	it	hi
 801492a:	7019      	strbhi	r1, [r3, #0]
 801492c:	429a      	cmp	r2, r3
 801492e:	d1f8      	bne.n	8014922 <DisplayUdf::Show()+0xe>
 8014930:	2501      	movs	r5, #1
 8014932:	4629      	mov	r1, r5
 8014934:	3501      	adds	r5, #1
 8014936:	69a0      	ldr	r0, [r4, #24]
 8014938:	b2ed      	uxtb	r5, r5
 801493a:	f7ff ff0e 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 801493e:	2d06      	cmp	r5, #6
 8014940:	d1f7      	bne.n	8014932 <DisplayUdf::Show()+0x1e>
 8014942:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8014946:	69a0      	ldr	r0, [r4, #24]
 8014948:	f104 021c 	add.w	r2, r4, #28
 801494c:	f7ff fef3 	bl	8014736 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8014950:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8014954:	69a0      	ldr	r0, [r4, #24]
 8014956:	4a0d      	ldr	r2, [pc, #52]	; (801498c <DisplayUdf::Show()+0x78>)
 8014958:	f7ff feed 	bl	8014736 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801495c:	4b0c      	ldr	r3, [pc, #48]	; (8014990 <DisplayUdf::Show()+0x7c>)
 801495e:	4a0d      	ldr	r2, [pc, #52]	; (8014994 <DisplayUdf::Show()+0x80>)
 8014960:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8014964:	9300      	str	r3, [sp, #0]
 8014966:	4620      	mov	r0, r4
 8014968:	2303      	movs	r3, #3
 801496a:	f7f4 fca3 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 801496e:	4620      	mov	r0, r4
 8014970:	f7ff ff4a 	bl	8014808 <DisplayUdf::ShowIpAddress()>
 8014974:	4620      	mov	r0, r4
 8014976:	f7ff ff99 	bl	80148ac <DisplayUdf::ShowGatewayIp()>
 801497a:	4620      	mov	r0, r4
 801497c:	f7ff ff78 	bl	8014870 <DisplayUdf::ShowNetmask()>
 8014980:	4620      	mov	r0, r4
 8014982:	b003      	add	sp, #12
 8014984:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8014988:	f7ff bfb0 	b.w	80148ec <DisplayUdf::ShowHostName()>
 801498c:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}
 8014990:	2000fd44 	andcs	pc, r0, r4, asr #26
 8014994:	0801b7a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, ip, sp, pc}

08014998 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8014998:	3901      	subs	r1, #1
 801499a:	b510      	push	{r4, lr}
 801499c:	4604      	mov	r4, r0
 801499e:	2903      	cmp	r1, #3
 80149a0:	d814      	bhi.n	80149cc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80149a2:	e8df f001 	tbb	[pc, r1]
 80149a6:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80149aa:	4b14      	ldr	r3, [pc, #80]	; (80149fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80149ac:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80149b0:	6818      	ldr	r0, [r3, #0]
 80149b2:	f7f6 f835 	bl	800aa20 <Display::Status(Display7SegmentMessage)>
 80149b6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80149ba:	69a0      	ldr	r0, [r4, #24]
 80149bc:	f7ff fecd 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80149c0:	4a0f      	ldr	r2, [pc, #60]	; (8014a00 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80149c2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80149c6:	4620      	mov	r0, r4
 80149c8:	f7f4 fc74 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 80149cc:	bd10      	pop	{r4, pc}
 80149ce:	f248 0180 	movw	r1, #32896	; 0x8080
 80149d2:	4b0a      	ldr	r3, [pc, #40]	; (80149fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80149d4:	6818      	ldr	r0, [r3, #0]
 80149d6:	f7f6 f823 	bl	800aa20 <Display::Status(Display7SegmentMessage)>
 80149da:	e7f7      	b.n	80149cc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80149dc:	4b07      	ldr	r3, [pc, #28]	; (80149fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80149de:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80149e2:	6818      	ldr	r0, [r3, #0]
 80149e4:	f7f6 f81c 	bl	800aa20 <Display::Status(Display7SegmentMessage)>
 80149e8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80149ec:	69a0      	ldr	r0, [r4, #24]
 80149ee:	f7ff feb4 	bl	801475a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80149f2:	4a04      	ldr	r2, [pc, #16]	; (8014a04 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80149f4:	e7e5      	b.n	80149c2 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80149f6:	f645 3179 	movw	r1, #23417	; 0x5b79
 80149fa:	e7ea      	b.n	80149d2 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80149fc:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4
 8014a00:	0801b7b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, ip, sp, pc}
 8014a04:	0801b7c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, ip, sp, pc}

08014a08 <DisplayUdf::ShowShutdown()>:
 8014a08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014a0a:	4604      	mov	r4, r0
 8014a0c:	6980      	ldr	r0, [r0, #24]
 8014a0e:	b1c0      	cbz	r0, 8014a42 <DisplayUdf::ShowShutdown()+0x3a>
 8014a10:	7947      	ldrb	r7, [r0, #5]
 8014a12:	6803      	ldr	r3, [r0, #0]
 8014a14:	7905      	ldrb	r5, [r0, #4]
 8014a16:	6a1b      	ldr	r3, [r3, #32]
 8014a18:	1e7a      	subs	r2, r7, #1
 8014a1a:	b2d2      	uxtb	r2, r2
 8014a1c:	9201      	str	r2, [sp, #4]
 8014a1e:	2100      	movs	r1, #0
 8014a20:	4798      	blx	r3
 8014a22:	9a01      	ldr	r2, [sp, #4]
 8014a24:	2600      	movs	r6, #0
 8014a26:	3d01      	subs	r5, #1
 8014a28:	42ae      	cmp	r6, r5
 8014a2a:	69a0      	ldr	r0, [r4, #24]
 8014a2c:	d310      	bcc.n	8014a50 <DisplayUdf::ShowShutdown()+0x48>
 8014a2e:	b118      	cbz	r0, 8014a38 <DisplayUdf::ShowShutdown()+0x30>
 8014a30:	6803      	ldr	r3, [r0, #0]
 8014a32:	2100      	movs	r1, #0
 8014a34:	6a1b      	ldr	r3, [r3, #32]
 8014a36:	4798      	blx	r3
 8014a38:	4a0a      	ldr	r2, [pc, #40]	; (8014a64 <DisplayUdf::ShowShutdown()+0x5c>)
 8014a3a:	69a0      	ldr	r0, [r4, #24]
 8014a3c:	4639      	mov	r1, r7
 8014a3e:	f7ff fe7a 	bl	8014736 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8014a42:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8014a46:	4620      	mov	r0, r4
 8014a48:	f7f5 ffea 	bl	800aa20 <Display::Status(Display7SegmentMessage)>
 8014a4c:	b003      	add	sp, #12
 8014a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a50:	b128      	cbz	r0, 8014a5e <DisplayUdf::ShowShutdown()+0x56>
 8014a52:	6803      	ldr	r3, [r0, #0]
 8014a54:	9201      	str	r2, [sp, #4]
 8014a56:	695b      	ldr	r3, [r3, #20]
 8014a58:	2120      	movs	r1, #32
 8014a5a:	4798      	blx	r3
 8014a5c:	9a01      	ldr	r2, [sp, #4]
 8014a5e:	3601      	adds	r6, #1
 8014a60:	e7e2      	b.n	8014a28 <DisplayUdf::ShowShutdown()+0x20>
 8014a62:	bf00      	nop
 8014a64:	0801b7cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, ip, sp, pc}

08014a68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8014a68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014a6a:	88c6      	ldrh	r6, [r0, #6]
 8014a6c:	8885      	ldrh	r5, [r0, #4]
 8014a6e:	42ae      	cmp	r6, r5
 8014a70:	d216      	bcs.n	8014aa0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8014a72:	4604      	mov	r4, r0
 8014a74:	6800      	ldr	r0, [r0, #0]
 8014a76:	1bad      	subs	r5, r5, r6
 8014a78:	4430      	add	r0, r6
 8014a7a:	7a26      	ldrb	r6, [r4, #8]
 8014a7c:	b923      	cbnz	r3, 8014a88 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8014a7e:	b926      	cbnz	r6, 8014a8a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8014a80:	9200      	str	r2, [sp, #0]
 8014a82:	460b      	mov	r3, r1
 8014a84:	4a09      	ldr	r2, [pc, #36]	; (8014aac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8014a86:	e003      	b.n	8014a90 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8014a88:	b166      	cbz	r6, 8014aa4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8014a8a:	9200      	str	r2, [sp, #0]
 8014a8c:	4a08      	ldr	r2, [pc, #32]	; (8014ab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8014a8e:	460b      	mov	r3, r1
 8014a90:	4629      	mov	r1, r5
 8014a92:	f7f5 fd39 	bl	800a508 <snprintf>
 8014a96:	4285      	cmp	r5, r0
 8014a98:	bfa2      	ittt	ge
 8014a9a:	88e3      	ldrhge	r3, [r4, #6]
 8014a9c:	181b      	addge	r3, r3, r0
 8014a9e:	80e3      	strhge	r3, [r4, #6]
 8014aa0:	b002      	add	sp, #8
 8014aa2:	bd70      	pop	{r4, r5, r6, pc}
 8014aa4:	9200      	str	r2, [sp, #0]
 8014aa6:	460b      	mov	r3, r1
 8014aa8:	4a02      	ldr	r2, [pc, #8]	; (8014ab4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8014aaa:	e7f1      	b.n	8014a90 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8014aac:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 8014ab0:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 8014ab4:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

08014ab8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8014ab8:	b510      	push	{r4, lr}
 8014aba:	2220      	movs	r2, #32
 8014abc:	4604      	mov	r4, r0
 8014abe:	f840 1b04 	str.w	r1, [r0], #4
 8014ac2:	2100      	movs	r1, #0
 8014ac4:	f001 fb56 	bl	8016174 <memset>
 8014ac8:	f647 7305 	movw	r3, #32517	; 0x7f05
 8014acc:	84a3      	strh	r3, [r4, #36]	; 0x24
 8014ace:	4620      	mov	r0, r4
 8014ad0:	bd10      	pop	{r4, pc}

08014ad2 <DisplayUdfParams::Load()>:
 8014ad2:	b508      	push	{r3, lr}
 8014ad4:	2300      	movs	r3, #0
 8014ad6:	4601      	mov	r1, r0
 8014ad8:	6043      	str	r3, [r0, #4]
 8014ada:	6800      	ldr	r0, [r0, #0]
 8014adc:	b120      	cbz	r0, 8014ae8 <DisplayUdfParams::Load()+0x16>
 8014ade:	6803      	ldr	r3, [r0, #0]
 8014ae0:	3104      	adds	r1, #4
 8014ae2:	68db      	ldr	r3, [r3, #12]
 8014ae4:	4798      	blx	r3
 8014ae6:	2001      	movs	r0, #1
 8014ae8:	bd08      	pop	{r3, pc}
	...

08014aec <DisplayUdfParams::Load(char const*, unsigned int)>:
 8014aec:	6803      	ldr	r3, [r0, #0]
 8014aee:	b1d3      	cbz	r3, 8014b26 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8014af0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014af2:	2300      	movs	r3, #0
 8014af4:	6043      	str	r3, [r0, #4]
 8014af6:	4604      	mov	r4, r0
 8014af8:	460d      	mov	r5, r1
 8014afa:	4616      	mov	r6, r2
 8014afc:	490a      	ldr	r1, [pc, #40]	; (8014b28 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8014afe:	4602      	mov	r2, r0
 8014b00:	4668      	mov	r0, sp
 8014b02:	f000 fb33 	bl	801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8014b06:	4632      	mov	r2, r6
 8014b08:	4629      	mov	r1, r5
 8014b0a:	4668      	mov	r0, sp
 8014b0c:	f000 fb32 	bl	8015174 <ReadConfigFile::Read(char const*, unsigned int)>
 8014b10:	4621      	mov	r1, r4
 8014b12:	f851 0b04 	ldr.w	r0, [r1], #4
 8014b16:	6803      	ldr	r3, [r0, #0]
 8014b18:	689b      	ldr	r3, [r3, #8]
 8014b1a:	4798      	blx	r3
 8014b1c:	4668      	mov	r0, sp
 8014b1e:	f000 fb28 	bl	8015172 <ReadConfigFile::~ReadConfigFile()>
 8014b22:	b002      	add	sp, #8
 8014b24:	bd70      	pop	{r4, r5, r6, pc}
 8014b26:	4770      	bx	lr
 8014b28:	08014bf5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, fp, lr}

08014b2c <DisplayUdfParams::callbackFunction(char const*)>:
 8014b2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014b2e:	460e      	mov	r6, r1
 8014b30:	4604      	mov	r4, r0
 8014b32:	492c      	ldr	r1, [pc, #176]	; (8014be4 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8014b34:	f10d 0207 	add.w	r2, sp, #7
 8014b38:	4630      	mov	r0, r6
 8014b3a:	f000 fc4c 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014b3e:	b968      	cbnz	r0, 8014b5c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8014b40:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8014b44:	6863      	ldr	r3, [r4, #4]
 8014b46:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8014b4a:	2a7f      	cmp	r2, #127	; 0x7f
 8014b4c:	bf14      	ite	ne
 8014b4e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8014b52:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8014b56:	6063      	str	r3, [r4, #4]
 8014b58:	b003      	add	sp, #12
 8014b5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014b5c:	4922      	ldr	r1, [pc, #136]	; (8014be8 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8014b5e:	f10d 0207 	add.w	r2, sp, #7
 8014b62:	4630      	mov	r0, r6
 8014b64:	f000 fc37 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014b68:	b958      	cbnz	r0, 8014b82 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8014b6a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8014b6e:	6863      	ldr	r3, [r4, #4]
 8014b70:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8014b74:	2a05      	cmp	r2, #5
 8014b76:	bf14      	ite	ne
 8014b78:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8014b7c:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8014b80:	e7e9      	b.n	8014b56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8014b82:	491a      	ldr	r1, [pc, #104]	; (8014bec <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8014b84:	f10d 0207 	add.w	r2, sp, #7
 8014b88:	4630      	mov	r0, r6
 8014b8a:	f000 fc24 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014b8e:	b948      	cbnz	r0, 8014ba4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8014b90:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8014b94:	6863      	ldr	r3, [r4, #4]
 8014b96:	b112      	cbz	r2, 8014b9e <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8014b98:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8014b9c:	e7db      	b.n	8014b56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8014b9e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8014ba2:	e7d8      	b.n	8014b56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8014ba4:	4f12      	ldr	r7, [pc, #72]	; (8014bf0 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8014ba6:	2500      	movs	r5, #0
 8014ba8:	f857 1b04 	ldr.w	r1, [r7], #4
 8014bac:	f10d 0207 	add.w	r2, sp, #7
 8014bb0:	4630      	mov	r0, r6
 8014bb2:	f000 fc10 	bl	80153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014bb6:	b988      	cbnz	r0, 8014bdc <DisplayUdfParams::callbackFunction(char const*)+0xb0>
 8014bb8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8014bbc:	6862      	ldr	r2, [r4, #4]
 8014bbe:	1e4e      	subs	r6, r1, #1
 8014bc0:	2301      	movs	r3, #1
 8014bc2:	2e05      	cmp	r6, #5
 8014bc4:	fa03 f305 	lsl.w	r3, r3, r5
 8014bc8:	4425      	add	r5, r4
 8014bca:	d802      	bhi.n	8014bd2 <DisplayUdfParams::callbackFunction(char const*)+0xa6>
 8014bcc:	7229      	strb	r1, [r5, #8]
 8014bce:	4313      	orrs	r3, r2
 8014bd0:	e7c1      	b.n	8014b56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8014bd2:	ea22 0203 	bic.w	r2, r2, r3
 8014bd6:	7228      	strb	r0, [r5, #8]
 8014bd8:	6062      	str	r2, [r4, #4]
 8014bda:	e7bd      	b.n	8014b58 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8014bdc:	3501      	adds	r5, #1
 8014bde:	2d14      	cmp	r5, #20
 8014be0:	d1e2      	bne.n	8014ba8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8014be2:	e7b9      	b.n	8014b58 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8014be4:	0801b88e 	stmdaeq	r1, {r1, r2, r3, r7, fp, ip, sp, pc}
 8014be8:	0801b856 	stmdaeq	r1, {r1, r2, r4, r6, fp, ip, sp, pc}
 8014bec:	0801b864 	stmdaeq	r1, {r2, r5, r6, fp, ip, sp, pc}
 8014bf0:	0801b7e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, ip, sp, pc}

08014bf4 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8014bf4:	f7ff bf9a 	b.w	8014b2c <DisplayUdfParams::callbackFunction(char const*)>

08014bf8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8014bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bfc:	4604      	mov	r4, r0
 8014bfe:	b086      	sub	sp, #24
 8014c00:	4615      	mov	r5, r2
 8014c02:	461e      	mov	r6, r3
 8014c04:	3004      	adds	r0, #4
 8014c06:	b379      	cbz	r1, 8014c68 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8014c08:	2222      	movs	r2, #34	; 0x22
 8014c0a:	f001 fa9c 	bl	8016146 <memmove>
 8014c0e:	462a      	mov	r2, r5
 8014c10:	493e      	ldr	r1, [pc, #248]	; (8014d0c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8014c12:	4633      	mov	r3, r6
 8014c14:	a803      	add	r0, sp, #12
 8014c16:	f000 fa09 	bl	801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8014c1a:	6863      	ldr	r3, [r4, #4]
 8014c1c:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8014c20:	493b      	ldr	r1, [pc, #236]	; (8014d10 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8014c22:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8014c26:	a803      	add	r0, sp, #12
 8014c28:	f7ff ff1e 	bl	8014a68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014c2c:	6863      	ldr	r3, [r4, #4]
 8014c2e:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8014c32:	4938      	ldr	r1, [pc, #224]	; (8014d14 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8014c34:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8014c38:	a803      	add	r0, sp, #12
 8014c3a:	f7ff ff15 	bl	8014a68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014c3e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014c42:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8014c46:	6863      	ldr	r3, [r4, #4]
 8014c48:	42aa      	cmp	r2, r5
 8014c4a:	d226      	bcs.n	8014c9a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8014c4c:	9803      	ldr	r0, [sp, #12]
 8014c4e:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8014c52:	4410      	add	r0, r2
 8014c54:	eba5 0502 	sub.w	r5, r5, r2
 8014c58:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8014c5c:	d10b      	bne.n	8014c76 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8014c5e:	b962      	cbnz	r2, 8014c7a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8014c60:	9200      	str	r2, [sp, #0]
 8014c62:	4b2d      	ldr	r3, [pc, #180]	; (8014d18 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8014c64:	4a2d      	ldr	r2, [pc, #180]	; (8014d1c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8014c66:	e00e      	b.n	8014c86 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8014c68:	6823      	ldr	r3, [r4, #0]
 8014c6a:	681a      	ldr	r2, [r3, #0]
 8014c6c:	4601      	mov	r1, r0
 8014c6e:	68d2      	ldr	r2, [r2, #12]
 8014c70:	4618      	mov	r0, r3
 8014c72:	4790      	blx	r2
 8014c74:	e7cb      	b.n	8014c0e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8014c76:	2a00      	cmp	r2, #0
 8014c78:	d042      	beq.n	8014d00 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8014c7a:	3b00      	subs	r3, #0
 8014c7c:	bf18      	it	ne
 8014c7e:	2301      	movne	r3, #1
 8014c80:	9300      	str	r3, [sp, #0]
 8014c82:	4a27      	ldr	r2, [pc, #156]	; (8014d20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8014c84:	4b24      	ldr	r3, [pc, #144]	; (8014d18 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8014c86:	4629      	mov	r1, r5
 8014c88:	f7f5 fc3e 	bl	800a508 <snprintf>
 8014c8c:	4285      	cmp	r5, r0
 8014c8e:	bfa2      	ittt	ge
 8014c90:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8014c94:	181b      	addge	r3, r3, r0
 8014c96:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8014c9a:	4e22      	ldr	r6, [pc, #136]	; (8014d24 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8014c9c:	2500      	movs	r5, #0
 8014c9e:	2701      	movs	r7, #1
 8014ca0:	f104 0808 	add.w	r8, r4, #8
 8014ca4:	f856 1b04 	ldr.w	r1, [r6], #4
 8014ca8:	780b      	ldrb	r3, [r1, #0]
 8014caa:	b163      	cbz	r3, 8014cc6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 8014cac:	6862      	ldr	r2, [r4, #4]
 8014cae:	fa07 f305 	lsl.w	r3, r7, r5
 8014cb2:	4393      	bics	r3, r2
 8014cb4:	bf08      	it	eq
 8014cb6:	2301      	moveq	r3, #1
 8014cb8:	f818 2005 	ldrb.w	r2, [r8, r5]
 8014cbc:	bf18      	it	ne
 8014cbe:	2300      	movne	r3, #0
 8014cc0:	a803      	add	r0, sp, #12
 8014cc2:	f7ff fed1 	bl	8014a68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014cc6:	3501      	adds	r5, #1
 8014cc8:	2d14      	cmp	r5, #20
 8014cca:	d1eb      	bne.n	8014ca4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8014ccc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014cd0:	b17b      	cbz	r3, 8014cf2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xfa>
 8014cd2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014cd6:	9b03      	ldr	r3, [sp, #12]
 8014cd8:	4413      	add	r3, r2
 8014cda:	227d      	movs	r2, #125	; 0x7d
 8014cdc:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014ce0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014ce4:	9903      	ldr	r1, [sp, #12]
 8014ce6:	54ca      	strb	r2, [r1, r3]
 8014ce8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014cec:	3301      	adds	r3, #1
 8014cee:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014cf2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014cf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014cf8:	601a      	str	r2, [r3, #0]
 8014cfa:	b006      	add	sp, #24
 8014cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d00:	2301      	movs	r3, #1
 8014d02:	9300      	str	r3, [sp, #0]
 8014d04:	4a08      	ldr	r2, [pc, #32]	; (8014d28 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x130>)
 8014d06:	4b04      	ldr	r3, [pc, #16]	; (8014d18 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8014d08:	e7bd      	b.n	8014c86 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8014d0a:	bf00      	nop
 8014d0c:	0801b882 	stmdaeq	r1, {r1, r7, fp, ip, sp, pc}
 8014d10:	0801b88e 	stmdaeq	r1, {r1, r2, r3, r7, fp, ip, sp, pc}
 8014d14:	0801b856 	stmdaeq	r1, {r1, r2, r4, r6, fp, ip, sp, pc}
 8014d18:	0801b864 	stmdaeq	r1, {r2, r5, r6, fp, ip, sp, pc}
 8014d1c:	0801904d 	stmdaeq	r1, {r0, r2, r3, r6, ip, pc}
 8014d20:	08019044 	stmdaeq	r1, {r2, r6, ip, pc}
 8014d24:	0801b7e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, ip, sp, pc}
 8014d28:	0801a8ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, fp, sp, pc}

08014d2c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8014d2c:	b513      	push	{r0, r1, r4, lr}
 8014d2e:	6804      	ldr	r4, [r0, #0]
 8014d30:	b914      	cbnz	r4, 8014d38 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8014d32:	601c      	str	r4, [r3, #0]
 8014d34:	b002      	add	sp, #8
 8014d36:	bd10      	pop	{r4, pc}
 8014d38:	9300      	str	r3, [sp, #0]
 8014d3a:	4613      	mov	r3, r2
 8014d3c:	460a      	mov	r2, r1
 8014d3e:	2100      	movs	r1, #0
 8014d40:	f7ff ff5a 	bl	8014bf8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8014d44:	e7f6      	b.n	8014d34 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08014d46 <DisplayUdfParams::Set(DisplayUdf*)>:
 8014d46:	6843      	ldr	r3, [r0, #4]
 8014d48:	009a      	lsls	r2, r3, #2
 8014d4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d4e:	4604      	mov	r4, r0
 8014d50:	460e      	mov	r6, r1
 8014d52:	d506      	bpl.n	8014d62 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8014d54:	6988      	ldr	r0, [r1, #24]
 8014d56:	b120      	cbz	r0, 8014d62 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8014d58:	6803      	ldr	r3, [r0, #0]
 8014d5a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8014d5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d60:	4798      	blx	r3
 8014d62:	6863      	ldr	r3, [r4, #4]
 8014d64:	69b0      	ldr	r0, [r6, #24]
 8014d66:	00db      	lsls	r3, r3, #3
 8014d68:	bf41      	itttt	mi
 8014d6a:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8014d6e:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8014d72:	4353      	mulmi	r3, r2
 8014d74:	6173      	strmi	r3, [r6, #20]
 8014d76:	6861      	ldr	r1, [r4, #4]
 8014d78:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8014d7c:	b110      	cbz	r0, 8014d84 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8014d7e:	6803      	ldr	r3, [r0, #0]
 8014d80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014d82:	4798      	blx	r3
 8014d84:	2500      	movs	r5, #0
 8014d86:	2701      	movs	r7, #1
 8014d88:	f104 0808 	add.w	r8, r4, #8
 8014d8c:	6862      	ldr	r2, [r4, #4]
 8014d8e:	fa07 f305 	lsl.w	r3, r7, r5
 8014d92:	4393      	bics	r3, r2
 8014d94:	d105      	bne.n	8014da2 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8014d96:	f818 1005 	ldrb.w	r1, [r8, r5]
 8014d9a:	462a      	mov	r2, r5
 8014d9c:	4630      	mov	r0, r6
 8014d9e:	f7ff fd0a 	bl	80147b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8014da2:	3501      	adds	r5, #1
 8014da4:	2d14      	cmp	r5, #20
 8014da6:	d1f1      	bne.n	8014d8c <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8014da8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014dac <DisplayUdfParams::Dump()>:
 8014dac:	4770      	bx	lr
	...

08014db0 <DisplayUdf::Show(E131Bridge*)>:
 8014db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014db4:	460e      	mov	r6, r1
 8014db6:	b085      	sub	sp, #20
 8014db8:	4604      	mov	r4, r0
 8014dba:	f7ff fdab 	bl	8014914 <DisplayUdf::Show()>
 8014dbe:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8014dc2:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8014dc6:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8014dca:	4f22      	ldr	r7, [pc, #136]	; (8014e54 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8014dcc:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8014e6c <DisplayUdf::Show(E131Bridge*)+0xbc>
 8014dd0:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8014e70 <DisplayUdf::Show(E131Bridge*)+0xc0>
 8014dd4:	4413      	add	r3, r2
 8014dd6:	4620      	mov	r0, r4
 8014dd8:	4a1f      	ldr	r2, [pc, #124]	; (8014e58 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8014dda:	f7f4 fa6b 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014dde:	2500      	movs	r5, #0
 8014de0:	2301      	movs	r3, #1
 8014de2:	f10d 020e 	add.w	r2, sp, #14
 8014de6:	4629      	mov	r1, r5
 8014de8:	4630      	mov	r0, r6
 8014dea:	f7f7 f9bd 	bl	800c168 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8014dee:	b1a8      	cbz	r0, 8014e1c <DisplayUdf::Show(E131Bridge*)+0x6c>
 8014df0:	2344      	movs	r3, #68	; 0x44
 8014df2:	436b      	muls	r3, r5
 8014df4:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8014df8:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8014dfc:	58d2      	ldr	r2, [r2, r3]
 8014dfe:	2a00      	cmp	r2, #0
 8014e00:	bf0c      	ite	eq
 8014e02:	463b      	moveq	r3, r7
 8014e04:	4643      	movne	r3, r8
 8014e06:	e9cd 0300 	strd	r0, r3, [sp]
 8014e0a:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8014e0e:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8014e12:	5d49      	ldrb	r1, [r1, r5]
 8014e14:	464a      	mov	r2, r9
 8014e16:	4620      	mov	r0, r4
 8014e18:	f7f4 fa4c 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014e1c:	3501      	adds	r5, #1
 8014e1e:	2d04      	cmp	r5, #4
 8014e20:	d1de      	bne.n	8014de0 <DisplayUdf::Show(E131Bridge*)+0x30>
 8014e22:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8014e24:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8014e28:	2a02      	cmp	r2, #2
 8014e2a:	d001      	beq.n	8014e30 <DisplayUdf::Show(E131Bridge*)+0x80>
 8014e2c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014e2e:	b933      	cbnz	r3, 8014e3e <DisplayUdf::Show(E131Bridge*)+0x8e>
 8014e30:	4a0a      	ldr	r2, [pc, #40]	; (8014e5c <DisplayUdf::Show(E131Bridge*)+0xac>)
 8014e32:	4620      	mov	r0, r4
 8014e34:	f7f4 fa3e 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014e38:	b005      	add	sp, #20
 8014e3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e3e:	4808      	ldr	r0, [pc, #32]	; (8014e60 <DisplayUdf::Show(E131Bridge*)+0xb0>)
 8014e40:	9300      	str	r3, [sp, #0]
 8014e42:	4b08      	ldr	r3, [pc, #32]	; (8014e64 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8014e44:	2a00      	cmp	r2, #0
 8014e46:	bf08      	it	eq
 8014e48:	4603      	moveq	r3, r0
 8014e4a:	4a07      	ldr	r2, [pc, #28]	; (8014e68 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8014e4c:	4620      	mov	r0, r4
 8014e4e:	f7f4 fa31 	bl	80092b4 <Display::Printf(unsigned char, char const*, ...)>
 8014e52:	e7f1      	b.n	8014e38 <DisplayUdf::Show(E131Bridge*)+0x88>
 8014e54:	08019e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip, pc}
 8014e58:	0801b898 	stmdaeq	r1, {r3, r4, r7, fp, ip, sp, pc}
 8014e5c:	0801b8ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, fp, ip, sp, pc}
 8014e60:	08019f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, ip, pc}
 8014e64:	08019f65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, fp, ip, pc}
 8014e68:	0801b8b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, fp, ip, sp, pc}
 8014e6c:	08019e5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, fp, ip, pc}
 8014e70:	0801b89f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, fp, ip, sp, pc}

08014e74 <NetworkDisplay::ShowEmacStart()>:
 8014e74:	4b01      	ldr	r3, [pc, #4]	; (8014e7c <NetworkDisplay::ShowEmacStart()+0x8>)
 8014e76:	6818      	ldr	r0, [r3, #0]
 8014e78:	f7ff bcb6 	b.w	80147e8 <DisplayUdf::ShowEmacStart()>
 8014e7c:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014e80 <NetworkDisplay::ShowIp()>:
 8014e80:	4b01      	ldr	r3, [pc, #4]	; (8014e88 <NetworkDisplay::ShowIp()+0x8>)
 8014e82:	6818      	ldr	r0, [r3, #0]
 8014e84:	f7ff bcc0 	b.w	8014808 <DisplayUdf::ShowIpAddress()>
 8014e88:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014e8c <NetworkDisplay::ShowNetMask()>:
 8014e8c:	4b01      	ldr	r3, [pc, #4]	; (8014e94 <NetworkDisplay::ShowNetMask()+0x8>)
 8014e8e:	6818      	ldr	r0, [r3, #0]
 8014e90:	f7ff bcee 	b.w	8014870 <DisplayUdf::ShowNetmask()>
 8014e94:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014e98 <NetworkDisplay::ShowGatewayIp()>:
 8014e98:	4b01      	ldr	r3, [pc, #4]	; (8014ea0 <NetworkDisplay::ShowGatewayIp()+0x8>)
 8014e9a:	6818      	ldr	r0, [r3, #0]
 8014e9c:	f7ff bd06 	b.w	80148ac <DisplayUdf::ShowGatewayIp()>
 8014ea0:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014ea4 <NetworkDisplay::ShowHostName()>:
 8014ea4:	4b01      	ldr	r3, [pc, #4]	; (8014eac <NetworkDisplay::ShowHostName()+0x8>)
 8014ea6:	6818      	ldr	r0, [r3, #0]
 8014ea8:	f7ff bd20 	b.w	80148ec <DisplayUdf::ShowHostName()>
 8014eac:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014eb0 <NetworkDisplay::ShowShutdown()>:
 8014eb0:	4b01      	ldr	r3, [pc, #4]	; (8014eb8 <NetworkDisplay::ShowShutdown()+0x8>)
 8014eb2:	6818      	ldr	r0, [r3, #0]
 8014eb4:	f7ff bda8 	b.w	8014a08 <DisplayUdf::ShowShutdown()>
 8014eb8:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014ebc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8014ebc:	4b01      	ldr	r3, [pc, #4]	; (8014ec4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8014ebe:	6818      	ldr	r0, [r3, #0]
 8014ec0:	f7ff bd6a 	b.w	8014998 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8014ec4:	2000fcac 	andcs	pc, r0, ip, lsr #25

08014ec8 <properties::convert_json_file(char*, unsigned short, bool)>:
 8014ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ecc:	7803      	ldrb	r3, [r0, #0]
 8014ece:	2b7b      	cmp	r3, #123	; 0x7b
 8014ed0:	f040 80a4 	bne.w	801501c <properties::convert_json_file(char*, unsigned short, bool)+0x154>
 8014ed4:	b182      	cbz	r2, 8014ef8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8014ed6:	2401      	movs	r4, #1
 8014ed8:	4606      	mov	r6, r0
 8014eda:	4623      	mov	r3, r4
 8014edc:	2a00      	cmp	r2, #0
 8014ede:	bf0c      	ite	eq
 8014ee0:	f04f 0c0a 	moveq.w	ip, #10
 8014ee4:	f04f 0c00 	movne.w	ip, #0
 8014ee8:	273d      	movs	r7, #61	; 0x3d
 8014eea:	42a1      	cmp	r1, r4
 8014eec:	d852      	bhi.n	8014f94 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8014eee:	4618      	mov	r0, r3
 8014ef0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ef4:	463c      	mov	r4, r7
 8014ef6:	e7f1      	b.n	8014edc <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 8014ef8:	2323      	movs	r3, #35	; 0x23
 8014efa:	f800 3b01 	strb.w	r3, [r0], #1
 8014efe:	2701      	movs	r7, #1
 8014f00:	4604      	mov	r4, r0
 8014f02:	42b9      	cmp	r1, r7
 8014f04:	d811      	bhi.n	8014f2a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8014f06:	2301      	movs	r3, #1
 8014f08:	4606      	mov	r6, r0
 8014f0a:	200a      	movs	r0, #10
 8014f0c:	f806 0b01 	strb.w	r0, [r6], #1
 8014f10:	3301      	adds	r3, #1
 8014f12:	4625      	mov	r5, r4
 8014f14:	4628      	mov	r0, r5
 8014f16:	3501      	adds	r5, #1
 8014f18:	7804      	ldrb	r4, [r0, #0]
 8014f1a:	2c7b      	cmp	r4, #123	; 0x7b
 8014f1c:	d0ea      	beq.n	8014ef4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8014f1e:	42b9      	cmp	r1, r7
 8014f20:	f107 0401 	add.w	r4, r7, #1
 8014f24:	d9da      	bls.n	8014edc <properties::convert_json_file(char*, unsigned short, bool)+0x14>
 8014f26:	4627      	mov	r7, r4
 8014f28:	e7f4      	b.n	8014f14 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8014f2a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014f2e:	2b22      	cmp	r3, #34	; 0x22
 8014f30:	d119      	bne.n	8014f66 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8014f32:	46a4      	mov	ip, r4
 8014f34:	4605      	mov	r5, r0
 8014f36:	2601      	movs	r6, #1
 8014f38:	f89c e000 	ldrb.w	lr, [ip]
 8014f3c:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014f40:	4664      	mov	r4, ip
 8014f42:	4628      	mov	r0, r5
 8014f44:	4633      	mov	r3, r6
 8014f46:	f10c 0c01 	add.w	ip, ip, #1
 8014f4a:	f105 0501 	add.w	r5, r5, #1
 8014f4e:	f106 0601 	add.w	r6, r6, #1
 8014f52:	d0d9      	beq.n	8014f08 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8014f54:	3701      	adds	r7, #1
 8014f56:	42b9      	cmp	r1, r7
 8014f58:	4664      	mov	r4, ip
 8014f5a:	f805 ec01 	strb.w	lr, [r5, #-1]
 8014f5e:	d8eb      	bhi.n	8014f38 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8014f60:	4633      	mov	r3, r6
 8014f62:	4628      	mov	r0, r5
 8014f64:	e7d0      	b.n	8014f08 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8014f66:	3701      	adds	r7, #1
 8014f68:	e7cb      	b.n	8014f02 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8014f6a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014f6e:	d111      	bne.n	8014f94 <properties::convert_json_file(char*, unsigned short, bool)+0xcc>
 8014f70:	eba3 0800 	sub.w	r8, r3, r0
 8014f74:	eb08 0300 	add.w	r3, r8, r0
 8014f78:	4602      	mov	r2, r0
 8014f7a:	f810 eb01 	ldrb.w	lr, [r0], #1
 8014f7e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014f82:	f104 0501 	add.w	r5, r4, #1
 8014f86:	d04c      	beq.n	8015022 <properties::convert_json_file(char*, unsigned short, bool)+0x15a>
 8014f88:	42a1      	cmp	r1, r4
 8014f8a:	d911      	bls.n	8014fb0 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8014f8c:	f806 eb01 	strb.w	lr, [r6], #1
 8014f90:	462c      	mov	r4, r5
 8014f92:	e7ef      	b.n	8014f74 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8014f94:	42a1      	cmp	r1, r4
 8014f96:	f890 e000 	ldrb.w	lr, [r0]
 8014f9a:	4605      	mov	r5, r0
 8014f9c:	f104 0401 	add.w	r4, r4, #1
 8014fa0:	f100 0001 	add.w	r0, r0, #1
 8014fa4:	d8e1      	bhi.n	8014f6a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8014fa6:	4628      	mov	r0, r5
 8014fa8:	e7e2      	b.n	8014f70 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8014faa:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8014fae:	d009      	beq.n	8014fc4 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 8014fb0:	42a9      	cmp	r1, r5
 8014fb2:	f892 e000 	ldrb.w	lr, [r2]
 8014fb6:	4614      	mov	r4, r2
 8014fb8:	f105 0501 	add.w	r5, r5, #1
 8014fbc:	f102 0201 	add.w	r2, r2, #1
 8014fc0:	d8f3      	bhi.n	8014faa <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8014fc2:	4622      	mov	r2, r4
 8014fc4:	7814      	ldrb	r4, [r2, #0]
 8014fc6:	2c2f      	cmp	r4, #47	; 0x2f
 8014fc8:	4696      	mov	lr, r2
 8014fca:	4628      	mov	r0, r5
 8014fcc:	f102 0201 	add.w	r2, r2, #1
 8014fd0:	f105 0501 	add.w	r5, r5, #1
 8014fd4:	d81a      	bhi.n	801500c <properties::convert_json_file(char*, unsigned short, bool)+0x144>
 8014fd6:	4281      	cmp	r1, r0
 8014fd8:	d8f4      	bhi.n	8014fc4 <properties::convert_json_file(char*, unsigned short, bool)+0xfc>
 8014fda:	2c22      	cmp	r4, #34	; 0x22
 8014fdc:	bf08      	it	eq
 8014fde:	4696      	moveq	lr, r2
 8014fe0:	4670      	mov	r0, lr
 8014fe2:	1c6c      	adds	r4, r5, #1
 8014fe4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014fe8:	2a22      	cmp	r2, #34	; 0x22
 8014fea:	d011      	beq.n	8015010 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014fec:	2a2c      	cmp	r2, #44	; 0x2c
 8014fee:	d00f      	beq.n	8015010 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014ff0:	2a7d      	cmp	r2, #125	; 0x7d
 8014ff2:	d00d      	beq.n	8015010 <properties::convert_json_file(char*, unsigned short, bool)+0x148>
 8014ff4:	42a9      	cmp	r1, r5
 8014ff6:	d90f      	bls.n	8015018 <properties::convert_json_file(char*, unsigned short, bool)+0x150>
 8014ff8:	f1a2 0520 	sub.w	r5, r2, #32
 8014ffc:	2d5a      	cmp	r5, #90	; 0x5a
 8014ffe:	d803      	bhi.n	8015008 <properties::convert_json_file(char*, unsigned short, bool)+0x140>
 8015000:	f806 2b01 	strb.w	r2, [r6], #1
 8015004:	3301      	adds	r3, #1
 8015006:	4686      	mov	lr, r0
 8015008:	4625      	mov	r5, r4
 801500a:	e7e9      	b.n	8014fe0 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 801500c:	4605      	mov	r5, r0
 801500e:	e7e7      	b.n	8014fe0 <properties::convert_json_file(char*, unsigned short, bool)+0x118>
 8015010:	f806 cb01 	strb.w	ip, [r6], #1
 8015014:	3301      	adds	r3, #1
 8015016:	462c      	mov	r4, r5
 8015018:	3401      	adds	r4, #1
 801501a:	e766      	b.n	8014eea <properties::convert_json_file(char*, unsigned short, bool)+0x22>
 801501c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015020:	e766      	b.n	8014ef0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8015022:	f806 7b01 	strb.w	r7, [r6], #1
 8015026:	3301      	adds	r3, #1
 8015028:	4625      	mov	r5, r4
 801502a:	e7c1      	b.n	8014fb0 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>

0801502c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 801502c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015030:	6002      	str	r2, [r0, #0]
 8015032:	4614      	mov	r4, r2
 8015034:	2200      	movs	r2, #0
 8015036:	80c2      	strh	r2, [r0, #6]
 8015038:	4a1c      	ldr	r2, [pc, #112]	; (80150ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801503a:	8083      	strh	r3, [r0, #4]
 801503c:	7812      	ldrb	r2, [r2, #0]
 801503e:	f002 0201 	and.w	r2, r2, #1
 8015042:	4606      	mov	r6, r0
 8015044:	7202      	strb	r2, [r0, #8]
 8015046:	4608      	mov	r0, r1
 8015048:	4605      	mov	r5, r0
 801504a:	3001      	adds	r0, #1
 801504c:	782f      	ldrb	r7, [r5, #0]
 801504e:	2f00      	cmp	r7, #0
 8015050:	d1fa      	bne.n	8015048 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8015052:	1a6d      	subs	r5, r5, r1
 8015054:	b29b      	uxth	r3, r3
 8015056:	b1d2      	cbz	r2, 801508e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8015058:	1d2f      	adds	r7, r5, #4
 801505a:	429f      	cmp	r7, r3
 801505c:	d814      	bhi.n	8015088 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801505e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8015062:	f04f 0922 	mov.w	r9, #34	; 0x22
 8015066:	462a      	mov	r2, r5
 8015068:	f884 8000 	strb.w	r8, [r4]
 801506c:	f884 9001 	strb.w	r9, [r4, #1]
 8015070:	1ca0      	adds	r0, r4, #2
 8015072:	f001 f868 	bl	8016146 <memmove>
 8015076:	1963      	adds	r3, r4, r5
 8015078:	223a      	movs	r2, #58	; 0x3a
 801507a:	f883 9002 	strb.w	r9, [r3, #2]
 801507e:	70da      	strb	r2, [r3, #3]
 8015080:	3505      	adds	r5, #5
 8015082:	f804 8007 	strb.w	r8, [r4, r7]
 8015086:	80f5      	strh	r5, [r6, #6]
 8015088:	4630      	mov	r0, r6
 801508a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801508e:	1caf      	adds	r7, r5, #2
 8015090:	429f      	cmp	r7, r3
 8015092:	d8f9      	bhi.n	8015088 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8015094:	4620      	mov	r0, r4
 8015096:	2323      	movs	r3, #35	; 0x23
 8015098:	f800 3b01 	strb.w	r3, [r0], #1
 801509c:	462a      	mov	r2, r5
 801509e:	442c      	add	r4, r5
 80150a0:	f001 f851 	bl	8016146 <memmove>
 80150a4:	230a      	movs	r3, #10
 80150a6:	7063      	strb	r3, [r4, #1]
 80150a8:	80f7      	strh	r7, [r6, #6]
 80150aa:	e7ed      	b.n	8015088 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80150ac:	2000fcb0 			; <UNDEFINED> instruction: 0x2000fcb0

080150b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80150b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150b2:	469c      	mov	ip, r3
 80150b4:	8885      	ldrh	r5, [r0, #4]
 80150b6:	88c3      	ldrh	r3, [r0, #6]
 80150b8:	42ab      	cmp	r3, r5
 80150ba:	b085      	sub	sp, #20
 80150bc:	d302      	bcc.n	80150c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80150be:	2000      	movs	r0, #0
 80150c0:	b005      	add	sp, #20
 80150c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80150c4:	4604      	mov	r4, r0
 80150c6:	6800      	ldr	r0, [r0, #0]
 80150c8:	f894 e008 	ldrb.w	lr, [r4, #8]
 80150cc:	4418      	add	r0, r3
 80150ce:	1aed      	subs	r5, r5, r3
 80150d0:	b2d6      	uxtb	r6, r2
 80150d2:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80150d6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80150da:	0e12      	lsrs	r2, r2, #24
 80150dc:	f1bc 0f00 	cmp.w	ip, #0
 80150e0:	d109      	bne.n	80150f6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80150e2:	f1be 0f00 	cmp.w	lr, #0
 80150e6:	d109      	bne.n	80150fc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80150e8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80150ec:	e9cd 6700 	strd	r6, r7, [sp]
 80150f0:	4a0e      	ldr	r2, [pc, #56]	; (801512c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80150f2:	460b      	mov	r3, r1
 80150f4:	e008      	b.n	8015108 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80150f6:	f1be 0f00 	cmp.w	lr, #0
 80150fa:	d00f      	beq.n	801511c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80150fc:	e9cd 6700 	strd	r6, r7, [sp]
 8015100:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8015104:	4a0a      	ldr	r2, [pc, #40]	; (8015130 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8015106:	460b      	mov	r3, r1
 8015108:	4629      	mov	r1, r5
 801510a:	f7f5 f9fd 	bl	800a508 <snprintf>
 801510e:	4285      	cmp	r5, r0
 8015110:	dbd5      	blt.n	80150be <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8015112:	88e3      	ldrh	r3, [r4, #6]
 8015114:	4403      	add	r3, r0
 8015116:	80e3      	strh	r3, [r4, #6]
 8015118:	2001      	movs	r0, #1
 801511a:	e7d1      	b.n	80150c0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 801511c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8015120:	e9cd 6700 	strd	r6, r7, [sp]
 8015124:	4a03      	ldr	r2, [pc, #12]	; (8015134 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8015126:	460b      	mov	r3, r1
 8015128:	e7ee      	b.n	8015108 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801512a:	bf00      	nop
 801512c:	0801b978 	stmdaeq	r1, {r3, r4, r5, r6, r8, fp, ip, sp, pc}
 8015130:	0801b964 	stmdaeq	r1, {r2, r5, r6, r8, fp, ip, sp, pc}
 8015134:	0801b979 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, fp, ip, sp, pc}

08015138 <PropertiesBuilder::AddComment(char const*)>:
 8015138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801513a:	7a06      	ldrb	r6, [r0, #8]
 801513c:	b996      	cbnz	r6, 8015164 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801513e:	4604      	mov	r4, r0
 8015140:	88c0      	ldrh	r0, [r0, #6]
 8015142:	88a5      	ldrh	r5, [r4, #4]
 8015144:	42a8      	cmp	r0, r5
 8015146:	d20d      	bcs.n	8015164 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8015148:	6827      	ldr	r7, [r4, #0]
 801514a:	4a07      	ldr	r2, [pc, #28]	; (8015168 <PropertiesBuilder::AddComment(char const*)+0x30>)
 801514c:	1a2d      	subs	r5, r5, r0
 801514e:	460b      	mov	r3, r1
 8015150:	4438      	add	r0, r7
 8015152:	4629      	mov	r1, r5
 8015154:	f7f5 f9d8 	bl	800a508 <snprintf>
 8015158:	4285      	cmp	r5, r0
 801515a:	bfa1      	itttt	ge
 801515c:	88e3      	ldrhge	r3, [r4, #6]
 801515e:	18c0      	addge	r0, r0, r3
 8015160:	80e0      	strhge	r0, [r4, #6]
 8015162:	2601      	movge	r6, #1
 8015164:	4630      	mov	r0, r6
 8015166:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015168:	0801b989 	stmdaeq	r1, {r0, r3, r7, r8, fp, ip, sp, pc}

0801516c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 801516c:	e9c0 1200 	strd	r1, r2, [r0]
 8015170:	4770      	bx	lr

08015172 <ReadConfigFile::~ReadConfigFile()>:
 8015172:	4770      	bx	lr

08015174 <ReadConfigFile::Read(char const*, unsigned int)>:
 8015174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015178:	4606      	mov	r6, r0
 801517a:	b0a0      	sub	sp, #128	; 0x80
 801517c:	460d      	mov	r5, r1
 801517e:	4614      	mov	r4, r2
 8015180:	f04f 0800 	mov.w	r8, #0
 8015184:	b33c      	cbz	r4, 80151d6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8015186:	466b      	mov	r3, sp
 8015188:	462a      	mov	r2, r5
 801518a:	4619      	mov	r1, r3
 801518c:	e007      	b.n	801519e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 801518e:	f803 7b01 	strb.w	r7, [r3], #1
 8015192:	1a58      	subs	r0, r3, r1
 8015194:	287f      	cmp	r0, #127	; 0x7f
 8015196:	4615      	mov	r5, r2
 8015198:	dc1d      	bgt.n	80151d6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801519a:	3c01      	subs	r4, #1
 801519c:	d00f      	beq.n	80151be <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801519e:	7817      	ldrb	r7, [r2, #0]
 80151a0:	2f0d      	cmp	r7, #13
 80151a2:	4610      	mov	r0, r2
 80151a4:	f102 0201 	add.w	r2, r2, #1
 80151a8:	d001      	beq.n	80151ae <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80151aa:	2f0a      	cmp	r7, #10
 80151ac:	d1ef      	bne.n	801518e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 80151ae:	4605      	mov	r5, r0
 80151b0:	b12c      	cbz	r4, 80151be <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80151b2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80151b6:	2a0d      	cmp	r2, #13
 80151b8:	d00b      	beq.n	80151d2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80151ba:	2a0a      	cmp	r2, #10
 80151bc:	d009      	beq.n	80151d2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80151be:	f89d 2000 	ldrb.w	r2, [sp]
 80151c2:	2a60      	cmp	r2, #96	; 0x60
 80151c4:	d9de      	bls.n	8015184 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80151c6:	f883 8000 	strb.w	r8, [r3]
 80151ca:	e9d6 3000 	ldrd	r3, r0, [r6]
 80151ce:	4798      	blx	r3
 80151d0:	e7d8      	b.n	8015184 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80151d2:	3c01      	subs	r4, #1
 80151d4:	e7eb      	b.n	80151ae <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80151d6:	b020      	add	sp, #128	; 0x80
 80151d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080151dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80151dc:	b570      	push	{r4, r5, r6, lr}
 80151de:	4615      	mov	r5, r2
 80151e0:	461c      	mov	r4, r3
 80151e2:	f000 f916 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 80151e6:	b180      	cbz	r0, 801520a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80151e8:	2100      	movs	r1, #0
 80151ea:	5c43      	ldrb	r3, [r0, r1]
 80151ec:	6826      	ldr	r6, [r4, #0]
 80151ee:	b28a      	uxth	r2, r1
 80151f0:	b143      	cbz	r3, 8015204 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80151f2:	42b2      	cmp	r2, r6
 80151f4:	d303      	bcc.n	80151fe <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80151f6:	2b0a      	cmp	r3, #10
 80151f8:	d004      	beq.n	8015204 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80151fa:	2002      	movs	r0, #2
 80151fc:	e004      	b.n	8015208 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80151fe:	546b      	strb	r3, [r5, r1]
 8015200:	3101      	adds	r1, #1
 8015202:	e7f2      	b.n	80151ea <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8015204:	6022      	str	r2, [r4, #0]
 8015206:	2000      	movs	r0, #0
 8015208:	bd70      	pop	{r4, r5, r6, pc}
 801520a:	2001      	movs	r0, #1
 801520c:	e7fc      	b.n	8015208 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0801520e <Sscan::Float(char const*, char const*, float&)>:
 801520e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015210:	4614      	mov	r4, r2
 8015212:	f000 f8fe 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 8015216:	2800      	cmp	r0, #0
 8015218:	d052      	beq.n	80152c0 <Sscan::Float(char const*, char const*, float&)+0xb2>
 801521a:	7803      	ldrb	r3, [r0, #0]
 801521c:	2b2d      	cmp	r3, #45	; 0x2d
 801521e:	bf04      	itt	eq
 8015220:	3001      	addeq	r0, #1
 8015222:	2601      	moveq	r6, #1
 8015224:	7803      	ldrb	r3, [r0, #0]
 8015226:	bf18      	it	ne
 8015228:	2600      	movne	r6, #0
 801522a:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801522e:	d101      	bne.n	8015234 <Sscan::Float(char const*, char const*, float&)+0x26>
 8015230:	2002      	movs	r0, #2
 8015232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015234:	2300      	movs	r3, #0
 8015236:	210a      	movs	r1, #10
 8015238:	7802      	ldrb	r2, [r0, #0]
 801523a:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 801523e:	2d09      	cmp	r5, #9
 8015240:	d8f6      	bhi.n	8015230 <Sscan::Float(char const*, char const*, float&)+0x22>
 8015242:	fb01 2303 	mla	r3, r1, r3, r2
 8015246:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 801524a:	2a2e      	cmp	r2, #46	; 0x2e
 801524c:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
 8015250:	d002      	beq.n	8015258 <Sscan::Float(char const*, char const*, float&)+0x4a>
 8015252:	f012 0fdf 	tst.w	r2, #223	; 0xdf
 8015256:	d1ef      	bne.n	8015238 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8015258:	ee07 3a90 	vmov	s15, r3
 801525c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8015260:	edc4 7a00 	vstr	s15, [r4]
 8015264:	7803      	ldrb	r3, [r0, #0]
 8015266:	2b2e      	cmp	r3, #46	; 0x2e
 8015268:	d007      	beq.n	801527a <Sscan::Float(char const*, char const*, float&)+0x6c>
 801526a:	b90e      	cbnz	r6, 8015270 <Sscan::Float(char const*, char const*, float&)+0x62>
 801526c:	2000      	movs	r0, #0
 801526e:	e7e0      	b.n	8015232 <Sscan::Float(char const*, char const*, float&)+0x24>
 8015270:	eef1 7a67 	vneg.f32	s15, s15
 8015274:	edc4 7a00 	vstr	s15, [r4]
 8015278:	e7f8      	b.n	801526c <Sscan::Float(char const*, char const*, float&)+0x5e>
 801527a:	4603      	mov	r3, r0
 801527c:	2101      	movs	r1, #1
 801527e:	2500      	movs	r5, #0
 8015280:	270a      	movs	r7, #10
 8015282:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8015286:	f012 00df 	ands.w	r0, r2, #223	; 0xdf
 801528a:	d112      	bne.n	80152b2 <Sscan::Float(char const*, char const*, float&)+0xa4>
 801528c:	ee07 5a10 	vmov	s14, r5
 8015290:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8015294:	ee07 1a10 	vmov	s14, r1
 8015298:	eef8 6a47 	vcvt.f32.u32	s13, s14
 801529c:	ee86 7a26 	vdiv.f32	s14, s12, s13
 80152a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80152a4:	2e00      	cmp	r6, #0
 80152a6:	d0e5      	beq.n	8015274 <Sscan::Float(char const*, char const*, float&)+0x66>
 80152a8:	eef1 7a67 	vneg.f32	s15, s15
 80152ac:	edc4 7a00 	vstr	s15, [r4]
 80152b0:	e7bf      	b.n	8015232 <Sscan::Float(char const*, char const*, float&)+0x24>
 80152b2:	3a30      	subs	r2, #48	; 0x30
 80152b4:	2a09      	cmp	r2, #9
 80152b6:	d8bb      	bhi.n	8015230 <Sscan::Float(char const*, char const*, float&)+0x22>
 80152b8:	fb07 2505 	mla	r5, r7, r5, r2
 80152bc:	4379      	muls	r1, r7
 80152be:	e7e0      	b.n	8015282 <Sscan::Float(char const*, char const*, float&)+0x74>
 80152c0:	2001      	movs	r0, #1
 80152c2:	e7b6      	b.n	8015232 <Sscan::Float(char const*, char const*, float&)+0x24>

080152c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80152c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80152c6:	4615      	mov	r5, r2
 80152c8:	f000 f8a3 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 80152cc:	bb58      	cbnz	r0, 8015326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 80152ce:	2001      	movs	r0, #1
 80152d0:	e027      	b.n	8015322 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80152d2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80152d6:	2b09      	cmp	r3, #9
 80152d8:	d822      	bhi.n	8015320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80152da:	fb0c 2101 	mla	r1, ip, r1, r2
 80152de:	3930      	subs	r1, #48	; 0x30
 80152e0:	4603      	mov	r3, r0
 80152e2:	4618      	mov	r0, r3
 80152e4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80152e8:	2a2e      	cmp	r2, #46	; 0x2e
 80152ea:	d115      	bne.n	8015318 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80152ec:	29ff      	cmp	r1, #255	; 0xff
 80152ee:	d817      	bhi.n	8015320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80152f0:	3401      	adds	r4, #1
 80152f2:	2c03      	cmp	r4, #3
 80152f4:	f806 1b01 	strb.w	r1, [r6], #1
 80152f8:	d119      	bne.n	801532e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 80152fa:	1d1a      	adds	r2, r3, #4
 80152fc:	2400      	movs	r4, #0
 80152fe:	260a      	movs	r6, #10
 8015300:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8015304:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8015308:	d115      	bne.n	8015336 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 801530a:	2cff      	cmp	r4, #255	; 0xff
 801530c:	d808      	bhi.n	8015320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801530e:	f88d 4007 	strb.w	r4, [sp, #7]
 8015312:	9b01      	ldr	r3, [sp, #4]
 8015314:	602b      	str	r3, [r5, #0]
 8015316:	e004      	b.n	8015322 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8015318:	2a00      	cmp	r2, #0
 801531a:	d0e7      	beq.n	80152ec <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801531c:	42b8      	cmp	r0, r7
 801531e:	d1d8      	bne.n	80152d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8015320:	2002      	movs	r0, #2
 8015322:	b003      	add	sp, #12
 8015324:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015326:	ae01      	add	r6, sp, #4
 8015328:	2400      	movs	r4, #0
 801532a:	f04f 0c0a 	mov.w	ip, #10
 801532e:	4603      	mov	r3, r0
 8015330:	1d07      	adds	r7, r0, #4
 8015332:	2100      	movs	r1, #0
 8015334:	e7d5      	b.n	80152e2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8015336:	4293      	cmp	r3, r2
 8015338:	d0f2      	beq.n	8015320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801533a:	3930      	subs	r1, #48	; 0x30
 801533c:	2909      	cmp	r1, #9
 801533e:	d8ef      	bhi.n	8015320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8015340:	fb06 1404 	mla	r4, r6, r4, r1
 8015344:	e7dc      	b.n	8015300 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08015346 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8015346:	b538      	push	{r3, r4, r5, lr}
 8015348:	4614      	mov	r4, r2
 801534a:	f000 f862 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 801534e:	b1a8      	cbz	r0, 801537c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x36>
 8015350:	2100      	movs	r1, #0
 8015352:	220a      	movs	r2, #10
 8015354:	7803      	ldrb	r3, [r0, #0]
 8015356:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 801535a:	2d09      	cmp	r5, #9
 801535c:	d810      	bhi.n	8015380 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 801535e:	fb02 3101 	mla	r1, r2, r1, r3
 8015362:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8015366:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 801536a:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 801536e:	d1f1      	bne.n	8015354 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8015370:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8015374:	d204      	bcs.n	8015380 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x3a>
 8015376:	8021      	strh	r1, [r4, #0]
 8015378:	4618      	mov	r0, r3
 801537a:	bd38      	pop	{r3, r4, r5, pc}
 801537c:	2301      	movs	r3, #1
 801537e:	e7fb      	b.n	8015378 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8015380:	2302      	movs	r3, #2
 8015382:	e7f9      	b.n	8015378 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08015384 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8015384:	b570      	push	{r4, r5, r6, lr}
 8015386:	4614      	mov	r4, r2
 8015388:	f000 f843 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 801538c:	b1f8      	cbz	r0, 80153ce <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 801538e:	2300      	movs	r3, #0
 8015390:	461a      	mov	r2, r3
 8015392:	260a      	movs	r6, #10
 8015394:	7805      	ldrb	r5, [r0, #0]
 8015396:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
 801539a:	2909      	cmp	r1, #9
 801539c:	d819      	bhi.n	80153d2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801539e:	fba3 3106 	umull	r3, r1, r3, r6
 80153a2:	fb06 1102 	mla	r1, r6, r2, r1
 80153a6:	3b30      	subs	r3, #48	; 0x30
 80153a8:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 80153ac:	18eb      	adds	r3, r5, r3
 80153ae:	f141 0200 	adc.w	r2, r1, #0
 80153b2:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 80153b6:	f011 01df 	ands.w	r1, r1, #223	; 0xdf
 80153ba:	d1eb      	bne.n	8015394 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x10>
 80153bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80153c0:	4298      	cmp	r0, r3
 80153c2:	eb71 0202 	sbcs.w	r2, r1, r2
 80153c6:	d304      	bcc.n	80153d2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80153c8:	6023      	str	r3, [r4, #0]
 80153ca:	4608      	mov	r0, r1
 80153cc:	bd70      	pop	{r4, r5, r6, pc}
 80153ce:	2101      	movs	r1, #1
 80153d0:	e7fb      	b.n	80153ca <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>
 80153d2:	2102      	movs	r1, #2
 80153d4:	e7f9      	b.n	80153ca <Sscan::Uint32(char const*, char const*, unsigned int&)+0x46>

080153d6 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80153d6:	b538      	push	{r3, r4, r5, lr}
 80153d8:	4614      	mov	r4, r2
 80153da:	f000 f81a 	bl	8015412 <Sscan::checkName(char const*, char const*)>
 80153de:	b1a0      	cbz	r0, 801540a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 80153e0:	2100      	movs	r1, #0
 80153e2:	220a      	movs	r2, #10
 80153e4:	7803      	ldrb	r3, [r0, #0]
 80153e6:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 80153ea:	2d09      	cmp	r5, #9
 80153ec:	d80f      	bhi.n	801540e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 80153ee:	fb02 3101 	mla	r1, r2, r1, r3
 80153f2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80153f6:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 80153fa:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 80153fe:	d1f1      	bne.n	80153e4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8015400:	29ff      	cmp	r1, #255	; 0xff
 8015402:	d804      	bhi.n	801540e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8015404:	7021      	strb	r1, [r4, #0]
 8015406:	4618      	mov	r0, r3
 8015408:	bd38      	pop	{r3, r4, r5, pc}
 801540a:	2301      	movs	r3, #1
 801540c:	e7fb      	b.n	8015406 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 801540e:	2302      	movs	r3, #2
 8015410:	e7f9      	b.n	8015406 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08015412 <Sscan::checkName(char const*, char const*)>:
 8015412:	b510      	push	{r4, lr}
 8015414:	3901      	subs	r1, #1
 8015416:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801541a:	4604      	mov	r4, r0
 801541c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8015420:	b123      	cbz	r3, 801542c <Sscan::checkName(char const*, char const*)+0x1a>
 8015422:	b10a      	cbz	r2, 8015428 <Sscan::checkName(char const*, char const*)+0x16>
 8015424:	4293      	cmp	r3, r2
 8015426:	d0f6      	beq.n	8015416 <Sscan::checkName(char const*, char const*)+0x4>
 8015428:	2000      	movs	r0, #0
 801542a:	e006      	b.n	801543a <Sscan::checkName(char const*, char const*)+0x28>
 801542c:	2a3d      	cmp	r2, #61	; 0x3d
 801542e:	d1fb      	bne.n	8015428 <Sscan::checkName(char const*, char const*)+0x16>
 8015430:	7860      	ldrb	r0, [r4, #1]
 8015432:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8015436:	d000      	beq.n	801543a <Sscan::checkName(char const*, char const*)+0x28>
 8015438:	1c60      	adds	r0, r4, #1
 801543a:	bd10      	pop	{r4, pc}

0801543c <LightSet::GetDmxStartAddress()>:
 801543c:	2001      	movs	r0, #1
 801543e:	4770      	bx	lr

08015440 <LightSet::GetDmxFootprint()>:
 8015440:	f44f 7000 	mov.w	r0, #512	; 0x200
 8015444:	4770      	bx	lr

08015446 <LightSet::SetDmxStartAddress(unsigned short)>:
 8015446:	2000      	movs	r0, #0
 8015448:	4770      	bx	lr

0801544a <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 801544a:	2300      	movs	r3, #0
 801544c:	2001      	movs	r0, #1
 801544e:	7093      	strb	r3, [r2, #2]
 8015450:	8010      	strh	r0, [r2, #0]
 8015452:	4770      	bx	lr

08015454 <Display::PrintInfo() [clone .isra.0]>:
 8015454:	b910      	cbnz	r0, 801545c <Display::PrintInfo() [clone .isra.0]+0x8>
 8015456:	4803      	ldr	r0, [pc, #12]	; (8015464 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8015458:	f000 bead 	b.w	80161b6 <puts>
 801545c:	6803      	ldr	r3, [r0, #0]
 801545e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015460:	4718      	bx	r3
 8015462:	bf00      	nop
 8015464:	0801bbdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, fp, ip, sp, pc}

08015468 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8015468:	b513      	push	{r0, r1, r4, lr}
 801546a:	4604      	mov	r4, r0
 801546c:	0a13      	lsrs	r3, r2, #8
 801546e:	7800      	ldrb	r0, [r0, #0]
 8015470:	f88d 1004 	strb.w	r1, [sp, #4]
 8015474:	f88d 3005 	strb.w	r3, [sp, #5]
 8015478:	f88d 2006 	strb.w	r2, [sp, #6]
 801547c:	f001 ff12 	bl	80172a4 <gd32_i2c_set_address>
 8015480:	6860      	ldr	r0, [r4, #4]
 8015482:	f001 ff07 	bl	8017294 <gd32_i2c_set_baudrate>
 8015486:	2103      	movs	r1, #3
 8015488:	a801      	add	r0, sp, #4
 801548a:	f001 ff11 	bl	80172b0 <gd32_i2c_write>
 801548e:	b002      	add	sp, #8
 8015490:	bd10      	pop	{r4, pc}

08015492 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8015492:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015494:	460d      	mov	r5, r1
 8015496:	4604      	mov	r4, r0
 8015498:	f001 ff04 	bl	80172a4 <gd32_i2c_set_address>
 801549c:	4628      	mov	r0, r5
 801549e:	f001 fef9 	bl	8017294 <gd32_i2c_set_baudrate>
 80154a2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80154a6:	2b07      	cmp	r3, #7
 80154a8:	d902      	bls.n	80154b0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80154aa:	3c50      	subs	r4, #80	; 0x50
 80154ac:	2c0f      	cmp	r4, #15
 80154ae:	d809      	bhi.n	80154c4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80154b0:	2101      	movs	r1, #1
 80154b2:	f10d 0007 	add.w	r0, sp, #7
 80154b6:	f001 ff61 	bl	801737c <gd32_i2c_read>
 80154ba:	fab0 f080 	clz	r0, r0
 80154be:	0940      	lsrs	r0, r0, #5
 80154c0:	b003      	add	sp, #12
 80154c2:	bd30      	pop	{r4, r5, pc}
 80154c4:	2100      	movs	r1, #0
 80154c6:	4608      	mov	r0, r1
 80154c8:	f001 fef2 	bl	80172b0 <gd32_i2c_write>
 80154cc:	e7f5      	b.n	80154ba <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080154ce <Display::Detect7Segment()>:
 80154ce:	b513      	push	{r0, r1, r4, lr}
 80154d0:	68c1      	ldr	r1, [r0, #12]
 80154d2:	4604      	mov	r4, r0
 80154d4:	7a00      	ldrb	r0, [r0, #8]
 80154d6:	f7ff ffdc 	bl	8015492 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80154da:	7460      	strb	r0, [r4, #17]
 80154dc:	b170      	cbz	r0, 80154fc <Display::Detect7Segment()+0x2e>
 80154de:	2200      	movs	r2, #0
 80154e0:	f104 0008 	add.w	r0, r4, #8
 80154e4:	4611      	mov	r1, r2
 80154e6:	9001      	str	r0, [sp, #4]
 80154e8:	f7ff ffbe 	bl	8015468 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80154ec:	7c63      	ldrb	r3, [r4, #17]
 80154ee:	9801      	ldr	r0, [sp, #4]
 80154f0:	b123      	cbz	r3, 80154fc <Display::Detect7Segment()+0x2e>
 80154f2:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80154f6:	2112      	movs	r1, #18
 80154f8:	f7ff ffb6 	bl	8015468 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80154fc:	b002      	add	sp, #8
 80154fe:	bd10      	pop	{r4, pc}

08015500 <Display::Detect(display::Type)>:
 8015500:	2902      	cmp	r1, #2
 8015502:	b538      	push	{r3, r4, r5, lr}
 8015504:	4604      	mov	r4, r0
 8015506:	d014      	beq.n	8015532 <Display::Detect(display::Type)+0x32>
 8015508:	2904      	cmp	r1, #4
 801550a:	d01b      	beq.n	8015544 <Display::Detect(display::Type)+0x44>
 801550c:	69a0      	ldr	r0, [r4, #24]
 801550e:	b168      	cbz	r0, 801552c <Display::Detect(display::Type)+0x2c>
 8015510:	6803      	ldr	r3, [r0, #0]
 8015512:	689b      	ldr	r3, [r3, #8]
 8015514:	4798      	blx	r3
 8015516:	69a3      	ldr	r3, [r4, #24]
 8015518:	b9b0      	cbnz	r0, 8015548 <Display::Detect(display::Type)+0x48>
 801551a:	b11b      	cbz	r3, 8015524 <Display::Detect(display::Type)+0x24>
 801551c:	681a      	ldr	r2, [r3, #0]
 801551e:	4618      	mov	r0, r3
 8015520:	6852      	ldr	r2, [r2, #4]
 8015522:	4790      	blx	r2
 8015524:	2300      	movs	r3, #0
 8015526:	61a3      	str	r3, [r4, #24]
 8015528:	2304      	movs	r3, #4
 801552a:	6023      	str	r3, [r4, #0]
 801552c:	2300      	movs	r3, #0
 801552e:	6163      	str	r3, [r4, #20]
 8015530:	e011      	b.n	8015556 <Display::Detect(display::Type)+0x56>
 8015532:	2018      	movs	r0, #24
 8015534:	f000 fd0a 	bl	8015f4c <operator new(unsigned int)>
 8015538:	2100      	movs	r1, #0
 801553a:	4605      	mov	r5, r0
 801553c:	f000 f896 	bl	801566c <Ssd1306::Ssd1306(TOledPanel)>
 8015540:	61a5      	str	r5, [r4, #24]
 8015542:	e7e3      	b.n	801550c <Display::Detect(display::Type)+0xc>
 8015544:	6001      	str	r1, [r0, #0]
 8015546:	e7e1      	b.n	801550c <Display::Detect(display::Type)+0xc>
 8015548:	681a      	ldr	r2, [r3, #0]
 801554a:	4618      	mov	r0, r3
 801554c:	68d2      	ldr	r2, [r2, #12]
 801554e:	4790      	blx	r2
 8015550:	69a3      	ldr	r3, [r4, #24]
 8015552:	2b00      	cmp	r3, #0
 8015554:	d0ea      	beq.n	801552c <Display::Detect(display::Type)+0x2c>
 8015556:	bd38      	pop	{r3, r4, r5, pc}

08015558 <Display::Display()>:
 8015558:	2304      	movs	r3, #4
 801555a:	b510      	push	{r4, lr}
 801555c:	6003      	str	r3, [r0, #0]
 801555e:	4b0f      	ldr	r3, [pc, #60]	; (801559c <Display::Display()+0x44>)
 8015560:	4a0f      	ldr	r2, [pc, #60]	; (80155a0 <Display::Display()+0x48>)
 8015562:	681b      	ldr	r3, [r3, #0]
 8015564:	6043      	str	r3, [r0, #4]
 8015566:	2321      	movs	r3, #33	; 0x21
 8015568:	7203      	strb	r3, [r0, #8]
 801556a:	4b0e      	ldr	r3, [pc, #56]	; (80155a4 <Display::Display()+0x4c>)
 801556c:	60c3      	str	r3, [r0, #12]
 801556e:	2300      	movs	r3, #0
 8015570:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8015574:	8203      	strh	r3, [r0, #16]
 8015576:	4b0c      	ldr	r3, [pc, #48]	; (80155a8 <Display::Display()+0x50>)
 8015578:	4604      	mov	r4, r0
 801557a:	2102      	movs	r1, #2
 801557c:	6018      	str	r0, [r3, #0]
 801557e:	f7ff ffbf 	bl	8015500 <Display::Detect(display::Type)>
 8015582:	4620      	mov	r0, r4
 8015584:	f7ff ffa3 	bl	80154ce <Display::Detect7Segment()>
 8015588:	69a3      	ldr	r3, [r4, #24]
 801558a:	b10b      	cbz	r3, 8015590 <Display::Display()+0x38>
 801558c:	f7f3 ff34 	bl	80093f8 <display::timeout::gpio_init()>
 8015590:	69a0      	ldr	r0, [r4, #24]
 8015592:	f7ff ff5f 	bl	8015454 <Display::PrintInfo() [clone .isra.0]>
 8015596:	4620      	mov	r0, r4
 8015598:	bd10      	pop	{r4, pc}
 801559a:	bf00      	nop
 801559c:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 80155a0:	000493e0 	andeq	r9, r4, r0, ror #7
 80155a4:	00061a80 	andeq	r1, r6, r0, lsl #21
 80155a8:	2000fcb4 			; <UNDEFINED> instruction: 0x2000fcb4

080155ac <Ssd1306::~Ssd1306()>:
 80155ac:	4770      	bx	lr

080155ae <Ssd1306::SetCursor(unsigned int)>:
 80155ae:	4770      	bx	lr

080155b0 <Ssd1306::PrintInfo()>:
 80155b0:	b410      	push	{r4}
 80155b2:	4906      	ldr	r1, [pc, #24]	; (80155cc <Ssd1306::PrintInfo()+0x1c>)
 80155b4:	7c44      	ldrb	r4, [r0, #17]
 80155b6:	7903      	ldrb	r3, [r0, #4]
 80155b8:	7942      	ldrb	r2, [r0, #5]
 80155ba:	4805      	ldr	r0, [pc, #20]	; (80155d0 <Ssd1306::PrintInfo()+0x20>)
 80155bc:	2c00      	cmp	r4, #0
 80155be:	bf08      	it	eq
 80155c0:	4601      	moveq	r1, r0
 80155c2:	4804      	ldr	r0, [pc, #16]	; (80155d4 <Ssd1306::PrintInfo()+0x24>)
 80155c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80155c8:	f7f4 bf76 	b.w	800a4b8 <printf>
 80155cc:	0801bbec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 80155d0:	0801bbf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 80155d4:	0801bbfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}

080155d8 <Ssd1306::~Ssd1306()>:
 80155d8:	b510      	push	{r4, lr}
 80155da:	4604      	mov	r4, r0
 80155dc:	f000 fcb2 	bl	8015f44 <operator delete(void*)>
 80155e0:	4620      	mov	r0, r4
 80155e2:	bd10      	pop	{r4, pc}

080155e4 <Ssd1306::PutChar(int)>:
 80155e4:	b510      	push	{r4, lr}
 80155e6:	3920      	subs	r1, #32
 80155e8:	295f      	cmp	r1, #95	; 0x5f
 80155ea:	f100 0008 	add.w	r0, r0, #8
 80155ee:	bf94      	ite	ls
 80155f0:	460c      	movls	r4, r1
 80155f2:	2400      	movhi	r4, #0
 80155f4:	f7fc fef4 	bl	80123e0 <HAL_I2C::Setup()>
 80155f8:	4804      	ldr	r0, [pc, #16]	; (801560c <Ssd1306::PutChar(int)+0x28>)
 80155fa:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80155fe:	4420      	add	r0, r4
 8015600:	2107      	movs	r1, #7
 8015602:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015606:	f001 be53 	b.w	80172b0 <gd32_i2c_write>
 801560a:	bf00      	nop
 801560c:	0801bc10 	stmdaeq	r1, {r4, sl, fp, ip, sp, pc}

08015610 <Ssd1306::PutString(char const*)>:
 8015610:	b538      	push	{r3, r4, r5, lr}
 8015612:	4605      	mov	r5, r0
 8015614:	1e4c      	subs	r4, r1, #1
 8015616:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801561a:	b901      	cbnz	r1, 801561e <Ssd1306::PutString(char const*)+0xe>
 801561c:	bd38      	pop	{r3, r4, r5, pc}
 801561e:	4628      	mov	r0, r5
 8015620:	f7ff ffe0 	bl	80155e4 <Ssd1306::PutChar(int)>
 8015624:	e7f7      	b.n	8015616 <Ssd1306::PutString(char const*)+0x6>

08015626 <Ssd1306::Text(char const*, unsigned int)>:
 8015626:	b570      	push	{r4, r5, r6, lr}
 8015628:	7903      	ldrb	r3, [r0, #4]
 801562a:	4605      	mov	r5, r0
 801562c:	460c      	mov	r4, r1
 801562e:	4293      	cmp	r3, r2
 8015630:	bf94      	ite	ls
 8015632:	18ce      	addls	r6, r1, r3
 8015634:	188e      	addhi	r6, r1, r2
 8015636:	42b4      	cmp	r4, r6
 8015638:	d100      	bne.n	801563c <Ssd1306::Text(char const*, unsigned int)+0x16>
 801563a:	bd70      	pop	{r4, r5, r6, pc}
 801563c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015640:	4628      	mov	r0, r5
 8015642:	f7ff ffcf 	bl	80155e4 <Ssd1306::PutChar(int)>
 8015646:	e7f6      	b.n	8015636 <Ssd1306::Text(char const*, unsigned int)+0x10>

08015648 <Ssd1306::InitMembers()>:
 8015648:	7c03      	ldrb	r3, [r0, #16]
 801564a:	b14b      	cbz	r3, 8015660 <Ssd1306::InitMembers()+0x18>
 801564c:	3b01      	subs	r3, #1
 801564e:	2b01      	cmp	r3, #1
 8015650:	d909      	bls.n	8015666 <Ssd1306::InitMembers()+0x1e>
 8015652:	2308      	movs	r3, #8
 8015654:	2204      	movs	r2, #4
 8015656:	2115      	movs	r1, #21
 8015658:	7101      	strb	r1, [r0, #4]
 801565a:	7143      	strb	r3, [r0, #5]
 801565c:	6142      	str	r2, [r0, #20]
 801565e:	4770      	bx	lr
 8015660:	2308      	movs	r3, #8
 8015662:	461a      	mov	r2, r3
 8015664:	e7f7      	b.n	8015656 <Ssd1306::InitMembers()+0xe>
 8015666:	2304      	movs	r3, #4
 8015668:	e7fb      	b.n	8015662 <Ssd1306::InitMembers()+0x1a>
	...

0801566c <Ssd1306::Ssd1306(TOledPanel)>:
 801566c:	4a08      	ldr	r2, [pc, #32]	; (8015690 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 801566e:	6002      	str	r2, [r0, #0]
 8015670:	227f      	movs	r2, #127	; 0x7f
 8015672:	b508      	push	{r3, lr}
 8015674:	80c2      	strh	r2, [r0, #6]
 8015676:	223c      	movs	r2, #60	; 0x3c
 8015678:	7202      	strb	r2, [r0, #8]
 801567a:	4a06      	ldr	r2, [pc, #24]	; (8015694 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 801567c:	60c2      	str	r2, [r0, #12]
 801567e:	2200      	movs	r2, #0
 8015680:	7442      	strb	r2, [r0, #17]
 8015682:	4a05      	ldr	r2, [pc, #20]	; (8015698 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8015684:	7401      	strb	r1, [r0, #16]
 8015686:	6010      	str	r0, [r2, #0]
 8015688:	f7ff ffde 	bl	8015648 <Ssd1306::InitMembers()>
 801568c:	bd08      	pop	{r3, pc}
 801568e:	bf00      	nop
 8015690:	0801bee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 8015694:	00061a80 	andeq	r1, r6, r0, lsl #21
 8015698:	2000fd40 	andcs	pc, r0, r0, asr #26

0801569c <Ssd1306::SendCommand(unsigned char)>:
 801569c:	b507      	push	{r0, r1, r2, lr}
 801569e:	2300      	movs	r3, #0
 80156a0:	3008      	adds	r0, #8
 80156a2:	f88d 3004 	strb.w	r3, [sp, #4]
 80156a6:	f88d 1005 	strb.w	r1, [sp, #5]
 80156aa:	f7fc fe99 	bl	80123e0 <HAL_I2C::Setup()>
 80156ae:	2102      	movs	r1, #2
 80156b0:	a801      	add	r0, sp, #4
 80156b2:	f001 fdfd 	bl	80172b0 <gd32_i2c_write>
 80156b6:	b003      	add	sp, #12
 80156b8:	f85d fb04 	ldr.w	pc, [sp], #4

080156bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80156bc:	2914      	cmp	r1, #20
 80156be:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80156c0:	4615      	mov	r5, r2
 80156c2:	d81d      	bhi.n	8015700 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80156c4:	7943      	ldrb	r3, [r0, #5]
 80156c6:	4293      	cmp	r3, r2
 80156c8:	d91a      	bls.n	8015700 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80156ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80156ce:	7c43      	ldrb	r3, [r0, #17]
 80156d0:	004c      	lsls	r4, r1, #1
 80156d2:	b2e4      	uxtb	r4, r4
 80156d4:	b10b      	cbz	r3, 80156da <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 80156d6:	3404      	adds	r4, #4
 80156d8:	b2e4      	uxtb	r4, r4
 80156da:	f004 010e 	and.w	r1, r4, #14
 80156de:	9001      	str	r0, [sp, #4]
 80156e0:	f7ff ffdc 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80156e4:	0921      	lsrs	r1, r4, #4
 80156e6:	9801      	ldr	r0, [sp, #4]
 80156e8:	f041 0110 	orr.w	r1, r1, #16
 80156ec:	f7ff ffd6 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80156f0:	9801      	ldr	r0, [sp, #4]
 80156f2:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 80156f6:	b003      	add	sp, #12
 80156f8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80156fc:	f7ff bfce 	b.w	801569c <Ssd1306::SendCommand(unsigned char)>
 8015700:	b003      	add	sp, #12
 8015702:	bd30      	pop	{r4, r5, pc}

08015704 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8015704:	b5e0      	push	{r5, r6, r7, lr}
 8015706:	461f      	mov	r7, r3
 8015708:	7943      	ldrb	r3, [r0, #5]
 801570a:	428b      	cmp	r3, r1
 801570c:	4605      	mov	r5, r0
 801570e:	4616      	mov	r6, r2
 8015710:	d30b      	bcc.n	801572a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8015712:	1e4a      	subs	r2, r1, #1
 8015714:	b2d2      	uxtb	r2, r2
 8015716:	2100      	movs	r1, #0
 8015718:	f7ff ffd0 	bl	80156bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801571c:	463a      	mov	r2, r7
 801571e:	4631      	mov	r1, r6
 8015720:	4628      	mov	r0, r5
 8015722:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8015726:	f7ff bf7e 	b.w	8015626 <Ssd1306::Text(char const*, unsigned int)>
 801572a:	bde0      	pop	{r5, r6, r7, pc}

0801572c <Ssd1306::ClearLine(unsigned char)>:
 801572c:	b513      	push	{r0, r1, r4, lr}
 801572e:	7943      	ldrb	r3, [r0, #5]
 8015730:	428b      	cmp	r3, r1
 8015732:	4604      	mov	r4, r0
 8015734:	d315      	bcc.n	8015762 <Ssd1306::ClearLine(unsigned char)+0x36>
 8015736:	1e4a      	subs	r2, r1, #1
 8015738:	b2d2      	uxtb	r2, r2
 801573a:	2100      	movs	r1, #0
 801573c:	9201      	str	r2, [sp, #4]
 801573e:	f7ff ffbd 	bl	80156bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8015742:	f104 0008 	add.w	r0, r4, #8
 8015746:	f7fc fe4b 	bl	80123e0 <HAL_I2C::Setup()>
 801574a:	2181      	movs	r1, #129	; 0x81
 801574c:	4806      	ldr	r0, [pc, #24]	; (8015768 <Ssd1306::ClearLine(unsigned char)+0x3c>)
 801574e:	f001 fdaf 	bl	80172b0 <gd32_i2c_write>
 8015752:	9a01      	ldr	r2, [sp, #4]
 8015754:	2100      	movs	r1, #0
 8015756:	4620      	mov	r0, r4
 8015758:	b002      	add	sp, #8
 801575a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801575e:	f7ff bfad 	b.w	80156bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8015762:	b002      	add	sp, #8
 8015764:	bd10      	pop	{r4, pc}
 8015766:	bf00      	nop
 8015768:	2000fcb8 			; <UNDEFINED> instruction: 0x2000fcb8

0801576c <Ssd1306::SetSleep(bool)>:
 801576c:	b111      	cbz	r1, 8015774 <Ssd1306::SetSleep(bool)+0x8>
 801576e:	21ae      	movs	r1, #174	; 0xae
 8015770:	f7ff bf94 	b.w	801569c <Ssd1306::SendCommand(unsigned char)>
 8015774:	21af      	movs	r1, #175	; 0xaf
 8015776:	e7fb      	b.n	8015770 <Ssd1306::SetSleep(bool)+0x4>

08015778 <Ssd1306::SetContrast(unsigned char)>:
 8015778:	b538      	push	{r3, r4, r5, lr}
 801577a:	4604      	mov	r4, r0
 801577c:	460d      	mov	r5, r1
 801577e:	7181      	strb	r1, [r0, #6]
 8015780:	2181      	movs	r1, #129	; 0x81
 8015782:	f7ff ff8b 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 8015786:	4629      	mov	r1, r5
 8015788:	4620      	mov	r0, r4
 801578a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801578e:	f7ff bf85 	b.w	801569c <Ssd1306::SendCommand(unsigned char)>

08015792 <Ssd1306::SetFlipVertically(bool)>:
 8015792:	b510      	push	{r4, lr}
 8015794:	4604      	mov	r4, r0
 8015796:	71c1      	strb	r1, [r0, #7]
 8015798:	b141      	cbz	r1, 80157ac <Ssd1306::SetFlipVertically(bool)+0x1a>
 801579a:	21c0      	movs	r1, #192	; 0xc0
 801579c:	f7ff ff7e 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157a0:	21a0      	movs	r1, #160	; 0xa0
 80157a2:	4620      	mov	r0, r4
 80157a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157a8:	f7ff bf78 	b.w	801569c <Ssd1306::SendCommand(unsigned char)>
 80157ac:	21c8      	movs	r1, #200	; 0xc8
 80157ae:	f7ff ff75 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157b2:	21a1      	movs	r1, #161	; 0xa1
 80157b4:	e7f5      	b.n	80157a2 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080157b8 <Ssd1306::CheckSH1106()>:
 80157b8:	b530      	push	{r4, r5, lr}
 80157ba:	2100      	movs	r1, #0
 80157bc:	b087      	sub	sp, #28
 80157be:	4604      	mov	r4, r0
 80157c0:	f7ff ff6c 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157c4:	2190      	movs	r1, #144	; 0x90
 80157c6:	4620      	mov	r0, r4
 80157c8:	f7ff ff68 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157cc:	21b0      	movs	r1, #176	; 0xb0
 80157ce:	4620      	mov	r0, r4
 80157d0:	f7ff ff64 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157d4:	4b22      	ldr	r3, [pc, #136]	; (8015860 <Ssd1306::CheckSH1106()+0xa8>)
 80157d6:	f104 0508 	add.w	r5, r4, #8
 80157da:	6818      	ldr	r0, [r3, #0]
 80157dc:	9002      	str	r0, [sp, #8]
 80157de:	791b      	ldrb	r3, [r3, #4]
 80157e0:	f88d 300c 	strb.w	r3, [sp, #12]
 80157e4:	4628      	mov	r0, r5
 80157e6:	f7fc fdfb 	bl	80123e0 <HAL_I2C::Setup()>
 80157ea:	2105      	movs	r1, #5
 80157ec:	a802      	add	r0, sp, #8
 80157ee:	f001 fd5f 	bl	80172b0 <gd32_i2c_write>
 80157f2:	2100      	movs	r1, #0
 80157f4:	4620      	mov	r0, r4
 80157f6:	f7ff ff51 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80157fa:	2190      	movs	r1, #144	; 0x90
 80157fc:	4620      	mov	r0, r4
 80157fe:	f7ff ff4d 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 8015802:	21b0      	movs	r1, #176	; 0xb0
 8015804:	4620      	mov	r0, r4
 8015806:	f7ff ff49 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 801580a:	2300      	movs	r3, #0
 801580c:	9304      	str	r3, [sp, #16]
 801580e:	f88d 3014 	strb.w	r3, [sp, #20]
 8015812:	4628      	mov	r0, r5
 8015814:	2340      	movs	r3, #64	; 0x40
 8015816:	f88d 3007 	strb.w	r3, [sp, #7]
 801581a:	f7fc fde1 	bl	80123e0 <HAL_I2C::Setup()>
 801581e:	2101      	movs	r1, #1
 8015820:	f10d 0007 	add.w	r0, sp, #7
 8015824:	f001 fd44 	bl	80172b0 <gd32_i2c_write>
 8015828:	4628      	mov	r0, r5
 801582a:	f7fc fdd9 	bl	80123e0 <HAL_I2C::Setup()>
 801582e:	2105      	movs	r1, #5
 8015830:	a804      	add	r0, sp, #16
 8015832:	f001 fda3 	bl	801737c <gd32_i2c_read>
 8015836:	aa02      	add	r2, sp, #8
 8015838:	a904      	add	r1, sp, #16
 801583a:	2004      	movs	r0, #4
 801583c:	3801      	subs	r0, #1
 801583e:	d201      	bcs.n	8015844 <Ssd1306::CheckSH1106()+0x8c>
 8015840:	2300      	movs	r3, #0
 8015842:	e006      	b.n	8015852 <Ssd1306::CheckSH1106()+0x9a>
 8015844:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8015848:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 801584c:	42ab      	cmp	r3, r5
 801584e:	d0f5      	beq.n	801583c <Ssd1306::CheckSH1106()+0x84>
 8015850:	1b5b      	subs	r3, r3, r5
 8015852:	fab3 f383 	clz	r3, r3
 8015856:	095b      	lsrs	r3, r3, #5
 8015858:	7463      	strb	r3, [r4, #17]
 801585a:	b007      	add	sp, #28
 801585c:	bd30      	pop	{r4, r5, pc}
 801585e:	bf00      	nop
 8015860:	0801bc07 	stmdaeq	r1, {r0, r1, r2, sl, fp, ip, sp, pc}

08015864 <Ssd1306::Cls()>:
 8015864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015868:	7c45      	ldrb	r5, [r0, #17]
 801586a:	00ad      	lsls	r5, r5, #2
 801586c:	b2ed      	uxtb	r5, r5
 801586e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8015872:	4604      	mov	r4, r0
 8015874:	2600      	movs	r6, #0
 8015876:	f045 0810 	orr.w	r8, r5, #16
 801587a:	b2ff      	uxtb	r7, r7
 801587c:	6963      	ldr	r3, [r4, #20]
 801587e:	42b3      	cmp	r3, r6
 8015880:	4629      	mov	r1, r5
 8015882:	4620      	mov	r0, r4
 8015884:	d80b      	bhi.n	801589e <Ssd1306::Cls()+0x3a>
 8015886:	f7ff ff09 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 801588a:	4641      	mov	r1, r8
 801588c:	4620      	mov	r0, r4
 801588e:	f7ff ff05 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 8015892:	4620      	mov	r0, r4
 8015894:	21b0      	movs	r1, #176	; 0xb0
 8015896:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801589a:	f7ff beff 	b.w	801569c <Ssd1306::SendCommand(unsigned char)>
 801589e:	f7ff fefd 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80158a2:	4641      	mov	r1, r8
 80158a4:	4620      	mov	r0, r4
 80158a6:	f7ff fef9 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80158aa:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80158ae:	b2c9      	uxtb	r1, r1
 80158b0:	4620      	mov	r0, r4
 80158b2:	f7ff fef3 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 80158b6:	7c23      	ldrb	r3, [r4, #16]
 80158b8:	b123      	cbz	r3, 80158c4 <Ssd1306::Cls()+0x60>
 80158ba:	3b01      	subs	r3, #1
 80158bc:	2b01      	cmp	r3, #1
 80158be:	d901      	bls.n	80158c4 <Ssd1306::Cls()+0x60>
 80158c0:	3601      	adds	r6, #1
 80158c2:	e7db      	b.n	801587c <Ssd1306::Cls()+0x18>
 80158c4:	f104 0008 	add.w	r0, r4, #8
 80158c8:	f7fc fd8a 	bl	80123e0 <HAL_I2C::Setup()>
 80158cc:	4639      	mov	r1, r7
 80158ce:	4802      	ldr	r0, [pc, #8]	; (80158d8 <Ssd1306::Cls()+0x74>)
 80158d0:	f001 fcee 	bl	80172b0 <gd32_i2c_write>
 80158d4:	e7f4      	b.n	80158c0 <Ssd1306::Cls()+0x5c>
 80158d6:	bf00      	nop
 80158d8:	2000fcb8 			; <UNDEFINED> instruction: 0x2000fcb8

080158dc <Ssd1306::Start()>:
 80158dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80158de:	7a04      	ldrb	r4, [r0, #8]
 80158e0:	68c6      	ldr	r6, [r0, #12]
 80158e2:	4605      	mov	r5, r0
 80158e4:	4620      	mov	r0, r4
 80158e6:	f001 fcdd 	bl	80172a4 <gd32_i2c_set_address>
 80158ea:	4630      	mov	r0, r6
 80158ec:	f001 fcd2 	bl	8017294 <gd32_i2c_set_baudrate>
 80158f0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80158f4:	2b07      	cmp	r3, #7
 80158f6:	d902      	bls.n	80158fe <Ssd1306::Start()+0x22>
 80158f8:	3c50      	subs	r4, #80	; 0x50
 80158fa:	2c0f      	cmp	r4, #15
 80158fc:	d80f      	bhi.n	801591e <Ssd1306::Start()+0x42>
 80158fe:	2101      	movs	r1, #1
 8015900:	f10d 0007 	add.w	r0, sp, #7
 8015904:	f001 fd3a 	bl	801737c <gd32_i2c_read>
 8015908:	fab0 f480 	clz	r4, r0
 801590c:	0964      	lsrs	r4, r4, #5
 801590e:	b35c      	cbz	r4, 8015968 <Ssd1306::Start()+0x8c>
 8015910:	7c2e      	ldrb	r6, [r5, #16]
 8015912:	b14e      	cbz	r6, 8015928 <Ssd1306::Start()+0x4c>
 8015914:	3e01      	subs	r6, #1
 8015916:	2e01      	cmp	r6, #1
 8015918:	d929      	bls.n	801596e <Ssd1306::Start()+0x92>
 801591a:	2400      	movs	r4, #0
 801591c:	e024      	b.n	8015968 <Ssd1306::Start()+0x8c>
 801591e:	2100      	movs	r1, #0
 8015920:	4608      	mov	r0, r1
 8015922:	f001 fcc5 	bl	80172b0 <gd32_i2c_write>
 8015926:	e7ef      	b.n	8015908 <Ssd1306::Start()+0x2c>
 8015928:	4f16      	ldr	r7, [pc, #88]	; (8015984 <Ssd1306::Start()+0xa8>)
 801592a:	f817 1b01 	ldrb.w	r1, [r7], #1
 801592e:	4628      	mov	r0, r5
 8015930:	3601      	adds	r6, #1
 8015932:	f7ff feb3 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 8015936:	2e18      	cmp	r6, #24
 8015938:	d1f7      	bne.n	801592a <Ssd1306::Start()+0x4e>
 801593a:	4a13      	ldr	r2, [pc, #76]	; (8015988 <Ssd1306::Start()+0xac>)
 801593c:	2300      	movs	r3, #0
 801593e:	4611      	mov	r1, r2
 8015940:	4618      	mov	r0, r3
 8015942:	3301      	adds	r3, #1
 8015944:	2b86      	cmp	r3, #134	; 0x86
 8015946:	f802 0b01 	strb.w	r0, [r2], #1
 801594a:	d1fa      	bne.n	8015942 <Ssd1306::Start()+0x66>
 801594c:	2340      	movs	r3, #64	; 0x40
 801594e:	700b      	strb	r3, [r1, #0]
 8015950:	4628      	mov	r0, r5
 8015952:	f7ff ff31 	bl	80157b8 <Ssd1306::CheckSH1106()>
 8015956:	4628      	mov	r0, r5
 8015958:	f7ff ff84 	bl	8015864 <Ssd1306::Cls()>
 801595c:	21af      	movs	r1, #175	; 0xaf
 801595e:	4628      	mov	r0, r5
 8015960:	f7ff fe9c 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 8015964:	2301      	movs	r3, #1
 8015966:	71eb      	strb	r3, [r5, #7]
 8015968:	4620      	mov	r0, r4
 801596a:	b003      	add	sp, #12
 801596c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801596e:	4f07      	ldr	r7, [pc, #28]	; (801598c <Ssd1306::Start()+0xb0>)
 8015970:	2600      	movs	r6, #0
 8015972:	f817 1b01 	ldrb.w	r1, [r7], #1
 8015976:	4628      	mov	r0, r5
 8015978:	3601      	adds	r6, #1
 801597a:	f7ff fe8f 	bl	801569c <Ssd1306::SendCommand(unsigned char)>
 801597e:	2e18      	cmp	r6, #24
 8015980:	d1f7      	bne.n	8015972 <Ssd1306::Start()+0x96>
 8015982:	e7da      	b.n	801593a <Ssd1306::Start()+0x5e>
 8015984:	0801bec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp, ip, sp, pc}
 8015988:	2000fcb8 			; <UNDEFINED> instruction: 0x2000fcb8
 801598c:	0801beb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, ip, sp, pc}

08015990 <console_putc>:
 8015990:	f000 bd30 	b.w	80163f4 <uart0_putc>

08015994 <console_puts>:
 8015994:	f000 bd48 	b.w	8016428 <uart0_puts>

08015998 <console_set_fg_color>:
 8015998:	2807      	cmp	r0, #7
 801599a:	d810      	bhi.n	80159be <console_set_fg_color+0x26>
 801599c:	e8df f000 	tbb	[pc, r0]
 80159a0:	0b090704 	bleq	82575b8 <__exidx_end+0x23b148>
 80159a4:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8015970 <Ssd1306::Start()+0x94>
 80159a8:	4806      	ldr	r0, [pc, #24]	; (80159c4 <console_set_fg_color+0x2c>)
 80159aa:	f000 bd3d 	b.w	8016428 <uart0_puts>
 80159ae:	4806      	ldr	r0, [pc, #24]	; (80159c8 <console_set_fg_color+0x30>)
 80159b0:	e7fb      	b.n	80159aa <console_set_fg_color+0x12>
 80159b2:	4806      	ldr	r0, [pc, #24]	; (80159cc <console_set_fg_color+0x34>)
 80159b4:	e7f9      	b.n	80159aa <console_set_fg_color+0x12>
 80159b6:	4806      	ldr	r0, [pc, #24]	; (80159d0 <console_set_fg_color+0x38>)
 80159b8:	e7f7      	b.n	80159aa <console_set_fg_color+0x12>
 80159ba:	4806      	ldr	r0, [pc, #24]	; (80159d4 <console_set_fg_color+0x3c>)
 80159bc:	e7f5      	b.n	80159aa <console_set_fg_color+0x12>
 80159be:	4806      	ldr	r0, [pc, #24]	; (80159d8 <console_set_fg_color+0x40>)
 80159c0:	e7f3      	b.n	80159aa <console_set_fg_color+0x12>
 80159c2:	bf00      	nop
 80159c4:	0801bf26 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, fp, ip, sp, pc}
 80159c8:	0801bf2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, ip, sp, pc}
 80159cc:	0801bf32 	stmdaeq	r1, {r1, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 80159d0:	0801bf38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 80159d4:	0801894c 	stmdaeq	r1, {r2, r3, r6, r8, fp, pc}
 80159d8:	0801bf3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}

080159dc <console_error>:
 80159dc:	b510      	push	{r4, lr}
 80159de:	4604      	mov	r4, r0
 80159e0:	4805      	ldr	r0, [pc, #20]	; (80159f8 <console_error+0x1c>)
 80159e2:	f000 fd21 	bl	8016428 <uart0_puts>
 80159e6:	4620      	mov	r0, r4
 80159e8:	f000 fd1e 	bl	8016428 <uart0_puts>
 80159ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159f0:	4802      	ldr	r0, [pc, #8]	; (80159fc <console_error+0x20>)
 80159f2:	f000 bd19 	b.w	8016428 <uart0_puts>
 80159f6:	bf00      	nop
 80159f8:	0801bf2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, ip, sp, pc}
 80159fc:	0801894c 	stmdaeq	r1, {r2, r3, r6, r8, fp, pc}

08015a00 <console_status>:
 8015a00:	b510      	push	{r4, lr}
 8015a02:	b280      	uxth	r0, r0
 8015a04:	460c      	mov	r4, r1
 8015a06:	f7ff ffc7 	bl	8015998 <console_set_fg_color>
 8015a0a:	4807      	ldr	r0, [pc, #28]	; (8015a28 <console_status+0x28>)
 8015a0c:	f000 fd0c 	bl	8016428 <uart0_puts>
 8015a10:	4620      	mov	r0, r4
 8015a12:	f000 fd09 	bl	8016428 <uart0_puts>
 8015a16:	200a      	movs	r0, #10
 8015a18:	f000 fcec 	bl	80163f4 <uart0_putc>
 8015a1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a20:	4802      	ldr	r0, [pc, #8]	; (8015a2c <console_status+0x2c>)
 8015a22:	f000 bd01 	b.w	8016428 <uart0_puts>
 8015a26:	bf00      	nop
 8015a28:	0801bf20 	stmdaeq	r1, {r5, r8, r9, sl, fp, ip, sp, pc}
 8015a2c:	0801894c 	stmdaeq	r1, {r2, r3, r6, r8, fp, pc}

08015a30 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8015a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015a34:	4688      	mov	r8, r1
 8015a36:	b086      	sub	sp, #24
 8015a38:	4604      	mov	r4, r0
 8015a3a:	4617      	mov	r7, r2
 8015a3c:	461e      	mov	r6, r3
 8015a3e:	4a2a      	ldr	r2, [pc, #168]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015a40:	492a      	ldr	r1, [pc, #168]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015a42:	482b      	ldr	r0, [pc, #172]	; (8015af0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc0>)
 8015a44:	2331      	movs	r3, #49	; 0x31
 8015a46:	f7f4 fd37 	bl	800a4b8 <printf>
 8015a4a:	f1b8 0f00 	cmp.w	r8, #0
 8015a4e:	d105      	bne.n	8015a5c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x2c>
 8015a50:	4b28      	ldr	r3, [pc, #160]	; (8015af4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc4>)
 8015a52:	4a25      	ldr	r2, [pc, #148]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015a54:	4825      	ldr	r0, [pc, #148]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015a56:	2133      	movs	r1, #51	; 0x33
 8015a58:	f7f4 fa22 	bl	8009ea0 <__assert_func>
 8015a5c:	b92f      	cbnz	r7, 8015a6a <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x3a>
 8015a5e:	4b26      	ldr	r3, [pc, #152]	; (8015af8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xc8>)
 8015a60:	4a21      	ldr	r2, [pc, #132]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015a62:	4822      	ldr	r0, [pc, #136]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015a64:	2134      	movs	r1, #52	; 0x34
 8015a66:	f7f4 fa1b 	bl	8009ea0 <__assert_func>
 8015a6a:	b92e      	cbnz	r6, 8015a78 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x48>
 8015a6c:	4b23      	ldr	r3, [pc, #140]	; (8015afc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xcc>)
 8015a6e:	4a1e      	ldr	r2, [pc, #120]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015a70:	481e      	ldr	r0, [pc, #120]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015a72:	2135      	movs	r1, #53	; 0x35
 8015a74:	f7f4 fa14 	bl	8009ea0 <__assert_func>
 8015a78:	4d21      	ldr	r5, [pc, #132]	; (8015b00 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd0>)
 8015a7a:	682b      	ldr	r3, [r5, #0]
 8015a7c:	b12b      	cbz	r3, 8015a8a <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5a>
 8015a7e:	4b21      	ldr	r3, [pc, #132]	; (8015b04 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd4>)
 8015a80:	4a19      	ldr	r2, [pc, #100]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015a82:	481a      	ldr	r0, [pc, #104]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015a84:	2137      	movs	r1, #55	; 0x37
 8015a86:	f7f4 fa0b 	bl	8009ea0 <__assert_func>
 8015a8a:	602c      	str	r4, [r5, #0]
 8015a8c:	4d1e      	ldr	r5, [pc, #120]	; (8015b08 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xd8>)
 8015a8e:	4641      	mov	r1, r8
 8015a90:	2203      	movs	r2, #3
 8015a92:	f105 0803 	add.w	r8, r5, #3
 8015a96:	4628      	mov	r0, r5
 8015a98:	f000 fb55 	bl	8016146 <memmove>
 8015a9c:	4639      	mov	r1, r7
 8015a9e:	220b      	movs	r2, #11
 8015aa0:	4640      	mov	r0, r8
 8015aa2:	f000 fb50 	bl	8016146 <memmove>
 8015aa6:	f105 030e 	add.w	r3, r5, #14
 8015aaa:	4631      	mov	r1, r6
 8015aac:	2208      	movs	r2, #8
 8015aae:	4618      	mov	r0, r3
 8015ab0:	f000 fb49 	bl	8016146 <memmove>
 8015ab4:	2308      	movs	r3, #8
 8015ab6:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8015aba:	230b      	movs	r3, #11
 8015abc:	9302      	str	r3, [sp, #8]
 8015abe:	4b13      	ldr	r3, [pc, #76]	; (8015b0c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xdc>)
 8015ac0:	9005      	str	r0, [sp, #20]
 8015ac2:	e9cd 5300 	strd	r5, r3, [sp]
 8015ac6:	4a12      	ldr	r2, [pc, #72]	; (8015b10 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe0>)
 8015ac8:	4812      	ldr	r0, [pc, #72]	; (8015b14 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe4>)
 8015aca:	2303      	movs	r3, #3
 8015acc:	213f      	movs	r1, #63	; 0x3f
 8015ace:	f7f4 fd1b 	bl	800a508 <snprintf>
 8015ad2:	4a05      	ldr	r2, [pc, #20]	; (8015ae8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xb8>)
 8015ad4:	4905      	ldr	r1, [pc, #20]	; (8015aec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xbc>)
 8015ad6:	4810      	ldr	r0, [pc, #64]	; (8015b18 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xe8>)
 8015ad8:	2346      	movs	r3, #70	; 0x46
 8015ada:	f7f4 fced 	bl	800a4b8 <printf>
 8015ade:	4620      	mov	r0, r4
 8015ae0:	b006      	add	sp, #24
 8015ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015ae6:	bf00      	nop
 8015ae8:	0801bf44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, ip, sp, pc}
 8015aec:	0801bf54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8015af0:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}
 8015af4:	0801bf6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8015af8:	0801bf80 	stmdaeq	r1, {r7, r8, r9, sl, fp, ip, sp, pc}
 8015afc:	0801bf91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 8015b00:	2000fd9c 	mulcs	r0, ip, sp
 8015b04:	0801bfa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015b08:	2000fd44 	andcs	pc, r0, r4, asr #26
 8015b0c:	080193ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip, pc}
 8015b10:	0801bfb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015b14:	2000fd5a 	andcs	pc, r0, sl, asr sp	; <UNPREDICTABLE>
 8015b18:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}

08015b1c <FirmwareVersion::Print(char const*)>:
 8015b1c:	b510      	push	{r4, lr}
 8015b1e:	4805      	ldr	r0, [pc, #20]	; (8015b34 <FirmwareVersion::Print(char const*)+0x18>)
 8015b20:	460c      	mov	r4, r1
 8015b22:	f000 fb48 	bl	80161b6 <puts>
 8015b26:	b124      	cbz	r4, 8015b32 <FirmwareVersion::Print(char const*)+0x16>
 8015b28:	4620      	mov	r0, r4
 8015b2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b2e:	f000 bb42 	b.w	80161b6 <puts>
 8015b32:	bd10      	pop	{r4, pc}
 8015b34:	2000fd5a 	andcs	pc, r0, sl, asr sp	; <UNPREDICTABLE>

08015b38 <LedBlink::LedBlink()>:
 8015b38:	b538      	push	{r3, r4, r5, lr}
 8015b3a:	2205      	movs	r2, #5
 8015b3c:	2300      	movs	r3, #0
 8015b3e:	4d14      	ldr	r5, [pc, #80]	; (8015b90 <LedBlink::LedBlink()+0x58>)
 8015b40:	6083      	str	r3, [r0, #8]
 8015b42:	e9c0 3200 	strd	r3, r2, [r0]
 8015b46:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8015b4a:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8015b4e:	6143      	str	r3, [r0, #20]
 8015b50:	682b      	ldr	r3, [r5, #0]
 8015b52:	4604      	mov	r4, r0
 8015b54:	b12b      	cbz	r3, 8015b62 <LedBlink::LedBlink()+0x2a>
 8015b56:	4b0f      	ldr	r3, [pc, #60]	; (8015b94 <LedBlink::LedBlink()+0x5c>)
 8015b58:	4a0f      	ldr	r2, [pc, #60]	; (8015b98 <LedBlink::LedBlink()+0x60>)
 8015b5a:	4810      	ldr	r0, [pc, #64]	; (8015b9c <LedBlink::LedBlink()+0x64>)
 8015b5c:	2128      	movs	r1, #40	; 0x28
 8015b5e:	f7f4 f99f 	bl	8009ea0 <__assert_func>
 8015b62:	f640 4002 	movw	r0, #3074	; 0xc02
 8015b66:	602c      	str	r4, [r5, #0]
 8015b68:	f000 fea6 	bl	80168b8 <rcu_periph_clock_enable>
 8015b6c:	2301      	movs	r3, #1
 8015b6e:	4619      	mov	r1, r3
 8015b70:	480b      	ldr	r0, [pc, #44]	; (8015ba0 <LedBlink::LedBlink()+0x68>)
 8015b72:	2200      	movs	r2, #0
 8015b74:	f000 fe24 	bl	80167c0 <gpio_mode_set>
 8015b78:	4809      	ldr	r0, [pc, #36]	; (8015ba0 <LedBlink::LedBlink()+0x68>)
 8015b7a:	2301      	movs	r3, #1
 8015b7c:	2202      	movs	r2, #2
 8015b7e:	2100      	movs	r1, #0
 8015b80:	f000 fe3e 	bl	8016800 <gpio_output_options_set>
 8015b84:	4b07      	ldr	r3, [pc, #28]	; (8015ba4 <LedBlink::LedBlink()+0x6c>)
 8015b86:	2201      	movs	r2, #1
 8015b88:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8015b8c:	4620      	mov	r0, r4
 8015b8e:	bd38      	pop	{r3, r4, r5, pc}
 8015b90:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8015b94:	0801bfa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015b98:	0801bfd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8015b9c:	0801bfe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8015ba0:	40020800 	andmi	r0, r2, r0, lsl #16
 8015ba4:	40020000 	andmi	r0, r2, r0

08015ba8 <LedBlink::SetMode(ledblink::Mode)>:
 8015ba8:	6843      	ldr	r3, [r0, #4]
 8015baa:	428b      	cmp	r3, r1
 8015bac:	b513      	push	{r0, r1, r4, lr}
 8015bae:	4604      	mov	r4, r0
 8015bb0:	d01c      	beq.n	8015bec <LedBlink::SetMode(ledblink::Mode)+0x44>
 8015bb2:	6041      	str	r1, [r0, #4]
 8015bb4:	2904      	cmp	r1, #4
 8015bb6:	d82a      	bhi.n	8015c0e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8015bb8:	e8df f001 	tbb	[pc, r1]
 8015bbc:	201a0329 	andscs	r0, sl, r9, lsr #6
 8015bc0:	23ff0025 	mvnscs	r0, #37	; 0x25
 8015bc4:	6003      	str	r3, [r0, #0]
 8015bc6:	2300      	movs	r3, #0
 8015bc8:	60c3      	str	r3, [r0, #12]
 8015bca:	4b15      	ldr	r3, [pc, #84]	; (8015c20 <LedBlink::SetMode(ledblink::Mode)+0x78>)
 8015bcc:	2201      	movs	r2, #1
 8015bce:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 8015bd2:	68a0      	ldr	r0, [r4, #8]
 8015bd4:	b110      	cbz	r0, 8015bdc <LedBlink::SetMode(ledblink::Mode)+0x34>
 8015bd6:	6803      	ldr	r3, [r0, #0]
 8015bd8:	689b      	ldr	r3, [r3, #8]
 8015bda:	4798      	blx	r3
 8015bdc:	6863      	ldr	r3, [r4, #4]
 8015bde:	9300      	str	r3, [sp, #0]
 8015be0:	4a10      	ldr	r2, [pc, #64]	; (8015c24 <LedBlink::SetMode(ledblink::Mode)+0x7c>)
 8015be2:	4911      	ldr	r1, [pc, #68]	; (8015c28 <LedBlink::SetMode(ledblink::Mode)+0x80>)
 8015be4:	4811      	ldr	r0, [pc, #68]	; (8015c2c <LedBlink::SetMode(ledblink::Mode)+0x84>)
 8015be6:	234e      	movs	r3, #78	; 0x4e
 8015be8:	f7f4 fc66 	bl	800a4b8 <printf>
 8015bec:	b002      	add	sp, #8
 8015bee:	bd10      	pop	{r4, pc}
 8015bf0:	2301      	movs	r3, #1
 8015bf2:	6003      	str	r3, [r0, #0]
 8015bf4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8015bf8:	60e3      	str	r3, [r4, #12]
 8015bfa:	e7ea      	b.n	8015bd2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8015bfc:	2303      	movs	r3, #3
 8015bfe:	6003      	str	r3, [r0, #0]
 8015c00:	f240 134d 	movw	r3, #333	; 0x14d
 8015c04:	e7f8      	b.n	8015bf8 <LedBlink::SetMode(ledblink::Mode)+0x50>
 8015c06:	2305      	movs	r3, #5
 8015c08:	6003      	str	r3, [r0, #0]
 8015c0a:	23c8      	movs	r3, #200	; 0xc8
 8015c0c:	e7f4      	b.n	8015bf8 <LedBlink::SetMode(ledblink::Mode)+0x50>
 8015c0e:	2300      	movs	r3, #0
 8015c10:	6003      	str	r3, [r0, #0]
 8015c12:	60c3      	str	r3, [r0, #12]
 8015c14:	4b02      	ldr	r3, [pc, #8]	; (8015c20 <LedBlink::SetMode(ledblink::Mode)+0x78>)
 8015c16:	2201      	movs	r2, #1
 8015c18:	f8c3 2828 	str.w	r2, [r3, #2088]	; 0x828
 8015c1c:	e7d9      	b.n	8015bd2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8015c1e:	bf00      	nop
 8015c20:	40020000 	andmi	r0, r2, r0
 8015c24:	0801bfe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8015c28:	0801bff3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8015c2c:	0801bffb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}

08015c30 <Hardware::Hardware()>:
 8015c30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c32:	4c58      	ldr	r4, [pc, #352]	; (8015d94 <Hardware::Hardware()+0x164>)
 8015c34:	2300      	movs	r3, #0
 8015c36:	7003      	strb	r3, [r0, #0]
 8015c38:	6823      	ldr	r3, [r4, #0]
 8015c3a:	b095      	sub	sp, #84	; 0x54
 8015c3c:	4605      	mov	r5, r0
 8015c3e:	b12b      	cbz	r3, 8015c4c <Hardware::Hardware()+0x1c>
 8015c40:	4b55      	ldr	r3, [pc, #340]	; (8015d98 <Hardware::Hardware()+0x168>)
 8015c42:	4a56      	ldr	r2, [pc, #344]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015c44:	4856      	ldr	r0, [pc, #344]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015c46:	2138      	movs	r1, #56	; 0x38
 8015c48:	f7f4 f92a 	bl	8009ea0 <__assert_func>
 8015c4c:	6025      	str	r5, [r4, #0]
 8015c4e:	f7f2 fc79 	bl	8008544 <console_init>
 8015c52:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 8015c56:	f000 fe5b 	bl	8016910 <rcu_timer_clock_prescaler_config>
 8015c5a:	2000      	movs	r0, #0
 8015c5c:	f000 fe68 	bl	8016930 <rcu_clock_freq_get>
 8015c60:	4607      	mov	r7, r0
 8015c62:	2001      	movs	r0, #1
 8015c64:	f000 fe64 	bl	8016930 <rcu_clock_freq_get>
 8015c68:	9003      	str	r0, [sp, #12]
 8015c6a:	2002      	movs	r0, #2
 8015c6c:	f000 fe60 	bl	8016930 <rcu_clock_freq_get>
 8015c70:	4606      	mov	r6, r0
 8015c72:	2003      	movs	r0, #3
 8015c74:	f000 fe5c 	bl	8016930 <rcu_clock_freq_get>
 8015c78:	4633      	mov	r3, r6
 8015c7a:	9000      	str	r0, [sp, #0]
 8015c7c:	9a03      	ldr	r2, [sp, #12]
 8015c7e:	4604      	mov	r4, r0
 8015c80:	4639      	mov	r1, r7
 8015c82:	4848      	ldr	r0, [pc, #288]	; (8015da4 <Hardware::Hardware()+0x174>)
 8015c84:	f7f4 fc18 	bl	800a4b8 <printf>
 8015c88:	4b47      	ldr	r3, [pc, #284]	; (8015da8 <Hardware::Hardware()+0x178>)
 8015c8a:	429f      	cmp	r7, r3
 8015c8c:	d005      	beq.n	8015c9a <Hardware::Hardware()+0x6a>
 8015c8e:	4b47      	ldr	r3, [pc, #284]	; (8015dac <Hardware::Hardware()+0x17c>)
 8015c90:	4a42      	ldr	r2, [pc, #264]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015c92:	4843      	ldr	r0, [pc, #268]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015c94:	2148      	movs	r1, #72	; 0x48
 8015c96:	f7f4 f903 	bl	8009ea0 <__assert_func>
 8015c9a:	4b45      	ldr	r3, [pc, #276]	; (8015db0 <Hardware::Hardware()+0x180>)
 8015c9c:	429e      	cmp	r6, r3
 8015c9e:	d005      	beq.n	8015cac <Hardware::Hardware()+0x7c>
 8015ca0:	4b44      	ldr	r3, [pc, #272]	; (8015db4 <Hardware::Hardware()+0x184>)
 8015ca2:	4a3e      	ldr	r2, [pc, #248]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015ca4:	483e      	ldr	r0, [pc, #248]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015ca6:	2149      	movs	r1, #73	; 0x49
 8015ca8:	f7f4 f8fa 	bl	8009ea0 <__assert_func>
 8015cac:	4b42      	ldr	r3, [pc, #264]	; (8015db8 <Hardware::Hardware()+0x188>)
 8015cae:	429c      	cmp	r4, r3
 8015cb0:	d005      	beq.n	8015cbe <Hardware::Hardware()+0x8e>
 8015cb2:	4b42      	ldr	r3, [pc, #264]	; (8015dbc <Hardware::Hardware()+0x18c>)
 8015cb4:	4a39      	ldr	r2, [pc, #228]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015cb6:	483a      	ldr	r0, [pc, #232]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015cb8:	214a      	movs	r1, #74	; 0x4a
 8015cba:	f7f4 f8f1 	bl	8009ea0 <__assert_func>
 8015cbe:	f000 fbc3 	bl	8016448 <systick_config>
 8015cc2:	f001 fe1d 	bl	8017900 <udelay_init()>
 8015cc6:	f001 fdfb 	bl	80178c0 <micros_init()>
 8015cca:	f241 001c 	movw	r0, #4124	; 0x101c
 8015cce:	f000 fdf3 	bl	80168b8 <rcu_periph_clock_enable>
 8015cd2:	4e3b      	ldr	r6, [pc, #236]	; (8015dc0 <Hardware::Hardware()+0x190>)
 8015cd4:	4c3b      	ldr	r4, [pc, #236]	; (8015dc4 <Hardware::Hardware()+0x194>)
 8015cd6:	f44f 7000 	mov.w	r0, #512	; 0x200
 8015cda:	f000 fdd9 	bl	8016890 <pmu_backup_ldo_config>
 8015cde:	f640 4012 	movw	r0, #3090	; 0xc12
 8015ce2:	f000 fde9 	bl	80168b8 <rcu_periph_clock_enable>
 8015ce6:	1ba4      	subs	r4, r4, r6
 8015ce8:	f000 fdde 	bl	80168a8 <pmu_backup_write_enable>
 8015cec:	2100      	movs	r1, #0
 8015cee:	2001      	movs	r0, #1
 8015cf0:	f001 fa14 	bl	801711c <bkp_data_write(bkp_data_register_enum, unsigned short)>
 8015cf4:	4a2a      	ldr	r2, [pc, #168]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015cf6:	4929      	ldr	r1, [pc, #164]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015cf8:	4833      	ldr	r0, [pc, #204]	; (8015dc8 <Hardware::Hardware()+0x198>)
 8015cfa:	2363      	movs	r3, #99	; 0x63
 8015cfc:	e9cd 6400 	strd	r6, r4, [sp]
 8015d00:	f7f4 fbda 	bl	800a4b8 <printf>
 8015d04:	4623      	mov	r3, r4
 8015d06:	2200      	movs	r2, #0
 8015d08:	3b01      	subs	r3, #1
 8015d0a:	d23d      	bcs.n	8015d88 <Hardware::Hardware()+0x158>
 8015d0c:	4e2f      	ldr	r6, [pc, #188]	; (8015dcc <Hardware::Hardware()+0x19c>)
 8015d0e:	4c30      	ldr	r4, [pc, #192]	; (8015dd0 <Hardware::Hardware()+0x1a0>)
 8015d10:	4a23      	ldr	r2, [pc, #140]	; (8015da0 <Hardware::Hardware()+0x170>)
 8015d12:	4922      	ldr	r1, [pc, #136]	; (8015d9c <Hardware::Hardware()+0x16c>)
 8015d14:	482c      	ldr	r0, [pc, #176]	; (8015dc8 <Hardware::Hardware()+0x198>)
 8015d16:	1ba4      	subs	r4, r4, r6
 8015d18:	2368      	movs	r3, #104	; 0x68
 8015d1a:	e9cd 6400 	strd	r6, r4, [sp]
 8015d1e:	f7f4 fbcb 	bl	800a4b8 <printf>
 8015d22:	2300      	movs	r3, #0
 8015d24:	3c01      	subs	r4, #1
 8015d26:	d232      	bcs.n	8015d8e <Hardware::Hardware()+0x15e>
 8015d28:	f241 0004 	movw	r0, #4100	; 0x1004
 8015d2c:	f000 fdc4 	bl	80168b8 <rcu_periph_clock_enable>
 8015d30:	4828      	ldr	r0, [pc, #160]	; (8015dd4 <Hardware::Hardware()+0x1a4>)
 8015d32:	f000 fe71 	bl	8016a18 <timer_deinit>
 8015d36:	a907      	add	r1, sp, #28
 8015d38:	23c7      	movs	r3, #199	; 0xc7
 8015d3a:	4826      	ldr	r0, [pc, #152]	; (8015dd4 <Hardware::Hardware()+0x1a4>)
 8015d3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015d40:	9409      	str	r4, [sp, #36]	; 0x24
 8015d42:	f000 ff0f 	bl	8016b64 <timer_init>
 8015d46:	4823      	ldr	r0, [pc, #140]	; (8015dd4 <Hardware::Hardware()+0x1a4>)
 8015d48:	f000 ff4a 	bl	8016be0 <timer_enable>
 8015d4c:	f001 f9f8 	bl	8017140 <gd32_adc_init()>
 8015d50:	220b      	movs	r2, #11
 8015d52:	2309      	movs	r3, #9
 8015d54:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8015d58:	2400      	movs	r4, #0
 8015d5a:	237a      	movs	r3, #122	; 0x7a
 8015d5c:	a80b      	add	r0, sp, #44	; 0x2c
 8015d5e:	9310      	str	r3, [sp, #64]	; 0x40
 8015d60:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
 8015d64:	940b      	str	r4, [sp, #44]	; 0x2c
 8015d66:	9413      	str	r4, [sp, #76]	; 0x4c
 8015d68:	f000 fa7e 	bl	8016268 <mktime>
 8015d6c:	4621      	mov	r1, r4
 8015d6e:	e9cd 0405 	strd	r0, r4, [sp, #20]
 8015d72:	a805      	add	r0, sp, #20
 8015d74:	f000 fafc 	bl	8016370 <settimeofday>
 8015d78:	f001 fa42 	bl	8017200 <gd32_i2c_begin>
 8015d7c:	a804      	add	r0, sp, #16
 8015d7e:	f000 f885 	bl	8015e8c <I2cDetect::I2cDetect()>
 8015d82:	4628      	mov	r0, r5
 8015d84:	b015      	add	sp, #84	; 0x54
 8015d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d88:	f806 2b01 	strb.w	r2, [r6], #1
 8015d8c:	e7bc      	b.n	8015d08 <Hardware::Hardware()+0xd8>
 8015d8e:	f806 3b01 	strb.w	r3, [r6], #1
 8015d92:	e7c7      	b.n	8015d24 <Hardware::Hardware()+0xf4>
 8015d94:	2000fda4 	andcs	pc, r0, r4, lsr #27
 8015d98:	0801bfa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015d9c:	0801c016 	stmdaeq	r1, {r1, r2, r4, lr, pc}
 8015da0:	0801c01f 	stmdaeq	r1, {r0, r1, r2, r3, r4, lr, pc}
 8015da4:	0801c035 	stmdaeq	r1, {r0, r2, r4, r5, lr, pc}
 8015da8:	0bebc200 	bleq	7b065b0 <__stack_size+0x7b025b0>
 8015dac:	0801c060 	stmdaeq	r1, {r5, r6, lr, pc}
 8015db0:	02faf080 	rscseq	pc, sl, #128	; 0x80
 8015db4:	0801c077 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, lr, pc}
 8015db8:	05f5e100 	ldrbeq	lr, [r5, #256]!	; 0x100
 8015dbc:	0801c090 	stmdaeq	r1, {r4, r7, lr, pc}
 8015dc0:	10000000 	andne	r0, r0, r0
 8015dc4:	100015c8 	andne	r1, r0, r8, asr #11
 8015dc8:	0801c0a9 	stmdaeq	r1, {r0, r3, r5, r7, lr, pc}
 8015dcc:	20030000 	andcs	r0, r3, r0
 8015dd0:	20048d08 	andcs	r8, r4, r8, lsl #26
 8015dd4:	40001000 	andmi	r1, r0, r0

08015dd8 <Hardware::GetUuid(unsigned char*)>:
 8015dd8:	4a0c      	ldr	r2, [pc, #48]	; (8015e0c <Hardware::GetUuid(unsigned char*)+0x34>)
 8015dda:	b084      	sub	sp, #16
 8015ddc:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8015de0:	9300      	str	r3, [sp, #0]
 8015de2:	f8d2 0a14 	ldr.w	r0, [r2, #2580]	; 0xa14
 8015de6:	9001      	str	r0, [sp, #4]
 8015de8:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	; 0xa18
 8015dec:	9202      	str	r2, [sp, #8]
 8015dee:	4403      	add	r3, r0
 8015df0:	4413      	add	r3, r2
 8015df2:	9303      	str	r3, [sp, #12]
 8015df4:	466a      	mov	r2, sp
 8015df6:	1e4b      	subs	r3, r1, #1
 8015df8:	310f      	adds	r1, #15
 8015dfa:	428b      	cmp	r3, r1
 8015dfc:	d101      	bne.n	8015e02 <Hardware::GetUuid(unsigned char*)+0x2a>
 8015dfe:	b004      	add	sp, #16
 8015e00:	4770      	bx	lr
 8015e02:	f812 0b01 	ldrb.w	r0, [r2], #1
 8015e06:	f803 0f01 	strb.w	r0, [r3, #1]!
 8015e0a:	e7f6      	b.n	8015dfa <Hardware::GetUuid(unsigned char*)+0x22>
 8015e0c:	1fff7000 	svcne	0x00ff7000

08015e10 <Hardware::Reboot()>:
 8015e10:	b508      	push	{r3, lr}
 8015e12:	2300      	movs	r3, #0
 8015e14:	7003      	strb	r3, [r0, #0]
 8015e16:	4604      	mov	r4, r0
 8015e18:	2104      	movs	r1, #4
 8015e1a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015e1e:	f000 fca5 	bl	801676c <fwdgt_config>
 8015e22:	4620      	mov	r0, r4
 8015e24:	f7f3 fb32 	bl	800948c <Hardware::RebootHandler()>
 8015e28:	2102      	movs	r1, #2
 8015e2a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015e2e:	f000 fc9d 	bl	801676c <fwdgt_config>
 8015e32:	2801      	cmp	r0, #1
 8015e34:	bf0c      	ite	eq
 8015e36:	2301      	moveq	r3, #1
 8015e38:	2300      	movne	r3, #0
 8015e3a:	7023      	strb	r3, [r4, #0]
 8015e3c:	d101      	bne.n	8015e42 <Hardware::Reboot()+0x32>
 8015e3e:	f000 fc85 	bl	801674c <fwdgt_enable>
 8015e42:	4b0f      	ldr	r3, [pc, #60]	; (8015e80 <Hardware::Reboot()+0x70>)
 8015e44:	480f      	ldr	r0, [pc, #60]	; (8015e84 <Hardware::Reboot()+0x74>)
 8015e46:	681b      	ldr	r3, [r3, #0]
 8015e48:	490f      	ldr	r1, [pc, #60]	; (8015e88 <Hardware::Reboot()+0x78>)
 8015e4a:	2208      	movs	r2, #8
 8015e4c:	601a      	str	r2, [r3, #0]
 8015e4e:	227d      	movs	r2, #125	; 0x7d
 8015e50:	60da      	str	r2, [r3, #12]
 8015e52:	2501      	movs	r5, #1
 8015e54:	68dc      	ldr	r4, [r3, #12]
 8015e56:	b904      	cbnz	r4, 8015e5a <Hardware::Reboot()+0x4a>
 8015e58:	e7fe      	b.n	8015e58 <Hardware::Reboot()+0x48>
 8015e5a:	6802      	ldr	r2, [r0, #0]
 8015e5c:	695e      	ldr	r6, [r3, #20]
 8015e5e:	1b92      	subs	r2, r2, r6
 8015e60:	4294      	cmp	r4, r2
 8015e62:	d8f8      	bhi.n	8015e56 <Hardware::Reboot()+0x46>
 8015e64:	6802      	ldr	r2, [r0, #0]
 8015e66:	615a      	str	r2, [r3, #20]
 8015e68:	691a      	ldr	r2, [r3, #16]
 8015e6a:	2a01      	cmp	r2, #1
 8015e6c:	f082 0401 	eor.w	r4, r2, #1
 8015e70:	611c      	str	r4, [r3, #16]
 8015e72:	bf14      	ite	ne
 8015e74:	f8c1 5818 	strne.w	r5, [r1, #2072]	; 0x818
 8015e78:	f8c1 2828 	streq.w	r2, [r1, #2088]	; 0x828
 8015e7c:	e7ea      	b.n	8015e54 <Hardware::Reboot()+0x44>
 8015e7e:	bf00      	nop
 8015e80:	2000fda0 	andcs	pc, r0, r0, lsr #27
 8015e84:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8015e88:	40020000 	andmi	r0, r2, r0

08015e8c <I2cDetect::I2cDetect()>:
 8015e8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e90:	4606      	mov	r6, r0
 8015e92:	4825      	ldr	r0, [pc, #148]	; (8015f28 <I2cDetect::I2cDetect()+0x9c>)
 8015e94:	f8df 90a0 	ldr.w	r9, [pc, #160]	; 8015f38 <I2cDetect::I2cDetect()+0xac>
 8015e98:	4f24      	ldr	r7, [pc, #144]	; (8015f2c <I2cDetect::I2cDetect()+0xa0>)
 8015e9a:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8015f3c <I2cDetect::I2cDetect()+0xb0>
 8015e9e:	f001 f9f9 	bl	8017294 <gd32_i2c_set_baudrate>
 8015ea2:	4823      	ldr	r0, [pc, #140]	; (8015f30 <I2cDetect::I2cDetect()+0xa4>)
 8015ea4:	f000 f987 	bl	80161b6 <puts>
 8015ea8:	2500      	movs	r5, #0
 8015eaa:	4629      	mov	r1, r5
 8015eac:	4648      	mov	r0, r9
 8015eae:	f7f4 fb03 	bl	800a4b8 <printf>
 8015eb2:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8015f40 <I2cDetect::I2cDetect()+0xb4>
 8015eb6:	462c      	mov	r4, r5
 8015eb8:	1ee3      	subs	r3, r4, #3
 8015eba:	2b74      	cmp	r3, #116	; 0x74
 8015ebc:	d905      	bls.n	8015eca <I2cDetect::I2cDetect()+0x3e>
 8015ebe:	4650      	mov	r0, sl
 8015ec0:	f7f4 fafa 	bl	800a4b8 <printf>
 8015ec4:	e019      	b.n	8015efa <I2cDetect::I2cDetect()+0x6e>
 8015ec6:	4625      	mov	r5, r4
 8015ec8:	e7ef      	b.n	8015eaa <I2cDetect::I2cDetect()+0x1e>
 8015eca:	fa5f fb84 	uxtb.w	fp, r4
 8015ece:	4658      	mov	r0, fp
 8015ed0:	f001 f9e8 	bl	80172a4 <gd32_i2c_set_address>
 8015ed4:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
 8015ed8:	2b07      	cmp	r3, #7
 8015eda:	d904      	bls.n	8015ee6 <I2cDetect::I2cDetect()+0x5a>
 8015edc:	f1ab 0b50 	sub.w	fp, fp, #80	; 0x50
 8015ee0:	f1bb 0f0f 	cmp.w	fp, #15
 8015ee4:	d819      	bhi.n	8015f1a <I2cDetect::I2cDetect()+0x8e>
 8015ee6:	2101      	movs	r1, #1
 8015ee8:	f10d 0007 	add.w	r0, sp, #7
 8015eec:	f001 fa46 	bl	801737c <gd32_i2c_read>
 8015ef0:	b9c0      	cbnz	r0, 8015f24 <I2cDetect::I2cDetect()+0x98>
 8015ef2:	4621      	mov	r1, r4
 8015ef4:	4640      	mov	r0, r8
 8015ef6:	f7f4 fadf 	bl	800a4b8 <printf>
 8015efa:	3401      	adds	r4, #1
 8015efc:	f105 0310 	add.w	r3, r5, #16
 8015f00:	429c      	cmp	r4, r3
 8015f02:	d1d9      	bne.n	8015eb8 <I2cDetect::I2cDetect()+0x2c>
 8015f04:	480b      	ldr	r0, [pc, #44]	; (8015f34 <I2cDetect::I2cDetect()+0xa8>)
 8015f06:	f000 f956 	bl	80161b6 <puts>
 8015f0a:	2c80      	cmp	r4, #128	; 0x80
 8015f0c:	d1db      	bne.n	8015ec6 <I2cDetect::I2cDetect()+0x3a>
 8015f0e:	f001 f977 	bl	8017200 <gd32_i2c_begin>
 8015f12:	4630      	mov	r0, r6
 8015f14:	b003      	add	sp, #12
 8015f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f1a:	2100      	movs	r1, #0
 8015f1c:	4608      	mov	r0, r1
 8015f1e:	f001 f9c7 	bl	80172b0 <gd32_i2c_write>
 8015f22:	e7e5      	b.n	8015ef0 <I2cDetect::I2cDetect()+0x64>
 8015f24:	4638      	mov	r0, r7
 8015f26:	e7cb      	b.n	8015ec0 <I2cDetect::I2cDetect()+0x34>
 8015f28:	000186a0 	andeq	r8, r1, r0, lsr #13
 8015f2c:	0801c108 	stmdaeq	r1, {r3, r8, lr, pc}
 8015f30:	0801c0c2 	stmdaeq	r1, {r1, r6, r7, lr, pc}
 8015f34:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 8015f38:	0801c0f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, lr, pc}
 8015f3c:	0801c102 	stmdaeq	r1, {r1, r8, lr, pc}
 8015f40:	0801c0fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, lr, pc}

08015f44 <operator delete(void*)>:
 8015f44:	f000 b8be 	b.w	80160c4 <free>

08015f48 <operator delete[](void*)>:
 8015f48:	f000 b8bc 	b.w	80160c4 <free>

08015f4c <operator new(unsigned int)>:
 8015f4c:	f000 b842 	b.w	8015fd4 <malloc>

08015f50 <operator new[](unsigned int)>:
 8015f50:	f000 b840 	b.w	8015fd4 <malloc>

08015f54 <inet_aton>:
 8015f54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015f56:	f04f 0c0a 	mov.w	ip, #10
 8015f5a:	ae01      	add	r6, sp, #4
 8015f5c:	2500      	movs	r5, #0
 8015f5e:	4603      	mov	r3, r0
 8015f60:	1d07      	adds	r7, r0, #4
 8015f62:	2200      	movs	r2, #0
 8015f64:	e007      	b.n	8015f76 <inet_aton+0x22>
 8015f66:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8015f6a:	2b09      	cmp	r3, #9
 8015f6c:	d820      	bhi.n	8015fb0 <inet_aton+0x5c>
 8015f6e:	fb0c 4202 	mla	r2, ip, r2, r4
 8015f72:	3a30      	subs	r2, #48	; 0x30
 8015f74:	4603      	mov	r3, r0
 8015f76:	4618      	mov	r0, r3
 8015f78:	f810 4b01 	ldrb.w	r4, [r0], #1
 8015f7c:	2c2e      	cmp	r4, #46	; 0x2e
 8015f7e:	d111      	bne.n	8015fa4 <inet_aton+0x50>
 8015f80:	3501      	adds	r5, #1
 8015f82:	2d03      	cmp	r5, #3
 8015f84:	f806 2b01 	strb.w	r2, [r6], #1
 8015f88:	d1e9      	bne.n	8015f5e <inet_aton+0xa>
 8015f8a:	1d1c      	adds	r4, r3, #4
 8015f8c:	2200      	movs	r2, #0
 8015f8e:	250a      	movs	r5, #10
 8015f90:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8015f94:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8015f98:	d10d      	bne.n	8015fb6 <inet_aton+0x62>
 8015f9a:	f88d 2007 	strb.w	r2, [sp, #7]
 8015f9e:	b9b1      	cbnz	r1, 8015fce <inet_aton+0x7a>
 8015fa0:	2001      	movs	r0, #1
 8015fa2:	e006      	b.n	8015fb2 <inet_aton+0x5e>
 8015fa4:	2c00      	cmp	r4, #0
 8015fa6:	d0eb      	beq.n	8015f80 <inet_aton+0x2c>
 8015fa8:	2c0a      	cmp	r4, #10
 8015faa:	d0e9      	beq.n	8015f80 <inet_aton+0x2c>
 8015fac:	42b8      	cmp	r0, r7
 8015fae:	d1da      	bne.n	8015f66 <inet_aton+0x12>
 8015fb0:	2000      	movs	r0, #0
 8015fb2:	b003      	add	sp, #12
 8015fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015fb6:	280a      	cmp	r0, #10
 8015fb8:	d0ef      	beq.n	8015f9a <inet_aton+0x46>
 8015fba:	42a3      	cmp	r3, r4
 8015fbc:	d0f8      	beq.n	8015fb0 <inet_aton+0x5c>
 8015fbe:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8015fc2:	2e09      	cmp	r6, #9
 8015fc4:	d8f4      	bhi.n	8015fb0 <inet_aton+0x5c>
 8015fc6:	fb05 0202 	mla	r2, r5, r2, r0
 8015fca:	3a30      	subs	r2, #48	; 0x30
 8015fcc:	e7e0      	b.n	8015f90 <inet_aton+0x3c>
 8015fce:	9b01      	ldr	r3, [sp, #4]
 8015fd0:	600b      	str	r3, [r1, #0]
 8015fd2:	e7e5      	b.n	8015fa0 <inet_aton+0x4c>

08015fd4 <malloc>:
 8015fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015fd6:	4601      	mov	r1, r0
 8015fd8:	4604      	mov	r4, r0
 8015fda:	482d      	ldr	r0, [pc, #180]	; (8016090 <malloc+0xbc>)
 8015fdc:	f7f4 fa6c 	bl	800a4b8 <printf>
 8015fe0:	b1fc      	cbz	r4, 8016022 <malloc+0x4e>
 8015fe2:	4e2c      	ldr	r6, [pc, #176]	; (8016094 <malloc+0xc0>)
 8015fe4:	6837      	ldr	r7, [r6, #0]
 8015fe6:	b9ff      	cbnz	r7, 8016028 <malloc+0x54>
 8015fe8:	4f2b      	ldr	r7, [pc, #172]	; (8016098 <malloc+0xc4>)
 8015fea:	683d      	ldr	r5, [r7, #0]
 8015fec:	f104 061b 	add.w	r6, r4, #27
 8015ff0:	f026 060f 	bic.w	r6, r6, #15
 8015ff4:	07a9      	lsls	r1, r5, #30
 8015ff6:	442e      	add	r6, r5
 8015ff8:	d005      	beq.n	8016006 <malloc+0x32>
 8015ffa:	4b28      	ldr	r3, [pc, #160]	; (801609c <malloc+0xc8>)
 8015ffc:	4a28      	ldr	r2, [pc, #160]	; (80160a0 <malloc+0xcc>)
 8015ffe:	4829      	ldr	r0, [pc, #164]	; (80160a4 <malloc+0xd0>)
 8016000:	2177      	movs	r1, #119	; 0x77
 8016002:	f7f3 ff4d 	bl	8009ea0 <__assert_func>
 8016006:	07b2      	lsls	r2, r6, #30
 8016008:	d005      	beq.n	8016016 <malloc+0x42>
 801600a:	4b27      	ldr	r3, [pc, #156]	; (80160a8 <malloc+0xd4>)
 801600c:	4a24      	ldr	r2, [pc, #144]	; (80160a0 <malloc+0xcc>)
 801600e:	4825      	ldr	r0, [pc, #148]	; (80160a4 <malloc+0xd0>)
 8016010:	2178      	movs	r1, #120	; 0x78
 8016012:	f7f3 ff45 	bl	8009ea0 <__assert_func>
 8016016:	4b25      	ldr	r3, [pc, #148]	; (80160ac <malloc+0xd8>)
 8016018:	429e      	cmp	r6, r3
 801601a:	d934      	bls.n	8016086 <malloc+0xb2>
 801601c:	4824      	ldr	r0, [pc, #144]	; (80160b0 <malloc+0xdc>)
 801601e:	f7f4 fa4b 	bl	800a4b8 <printf>
 8016022:	2600      	movs	r6, #0
 8016024:	4630      	mov	r0, r6
 8016026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016028:	42bc      	cmp	r4, r7
 801602a:	d80a      	bhi.n	8016042 <malloc+0x6e>
 801602c:	6873      	ldr	r3, [r6, #4]
 801602e:	68b2      	ldr	r2, [r6, #8]
 8016030:	3301      	adds	r3, #1
 8016032:	4293      	cmp	r3, r2
 8016034:	6073      	str	r3, [r6, #4]
 8016036:	d900      	bls.n	801603a <malloc+0x66>
 8016038:	60b3      	str	r3, [r6, #8]
 801603a:	68f5      	ldr	r5, [r6, #12]
 801603c:	b91d      	cbnz	r5, 8016046 <malloc+0x72>
 801603e:	463c      	mov	r4, r7
 8016040:	e7d2      	b.n	8015fe8 <malloc+0x14>
 8016042:	3610      	adds	r6, #16
 8016044:	e7ce      	b.n	8015fe4 <malloc+0x10>
 8016046:	682a      	ldr	r2, [r5, #0]
 8016048:	4b1a      	ldr	r3, [pc, #104]	; (80160b4 <malloc+0xe0>)
 801604a:	429a      	cmp	r2, r3
 801604c:	d005      	beq.n	801605a <malloc+0x86>
 801604e:	4b1a      	ldr	r3, [pc, #104]	; (80160b8 <malloc+0xe4>)
 8016050:	4a13      	ldr	r2, [pc, #76]	; (80160a0 <malloc+0xcc>)
 8016052:	4814      	ldr	r0, [pc, #80]	; (80160a4 <malloc+0xd0>)
 8016054:	216d      	movs	r1, #109	; 0x6d
 8016056:	f7f3 ff23 	bl	8009ea0 <__assert_func>
 801605a:	68ab      	ldr	r3, [r5, #8]
 801605c:	60f3      	str	r3, [r6, #12]
 801605e:	463c      	mov	r4, r7
 8016060:	2300      	movs	r3, #0
 8016062:	f105 060c 	add.w	r6, r5, #12
 8016066:	60ab      	str	r3, [r5, #8]
 8016068:	4814      	ldr	r0, [pc, #80]	; (80160bc <malloc+0xe8>)
 801606a:	4633      	mov	r3, r6
 801606c:	4622      	mov	r2, r4
 801606e:	4629      	mov	r1, r5
 8016070:	f7f4 fa22 	bl	800a4b8 <printf>
 8016074:	07b3      	lsls	r3, r6, #30
 8016076:	d0d5      	beq.n	8016024 <malloc+0x50>
 8016078:	4b11      	ldr	r3, [pc, #68]	; (80160c0 <malloc+0xec>)
 801607a:	4a09      	ldr	r2, [pc, #36]	; (80160a0 <malloc+0xcc>)
 801607c:	4809      	ldr	r0, [pc, #36]	; (80160a4 <malloc+0xd0>)
 801607e:	218c      	movs	r1, #140	; 0x8c
 8016080:	f7f3 ff0e 	bl	8009ea0 <__assert_func>
 8016084:	e7ce      	b.n	8016024 <malloc+0x50>
 8016086:	4b0b      	ldr	r3, [pc, #44]	; (80160b4 <malloc+0xe0>)
 8016088:	603e      	str	r6, [r7, #0]
 801608a:	e9c5 3400 	strd	r3, r4, [r5]
 801608e:	e7e7      	b.n	8016060 <malloc+0x8c>
 8016090:	0801c13c 	stmdaeq	r1, {r2, r3, r4, r5, r8, lr, pc}
 8016094:	20000024 	andcs	r0, r0, r4, lsr #32
 8016098:	20000020 	andcs	r0, r0, r0, lsr #32
 801609c:	0801c165 	stmdaeq	r1, {r0, r2, r5, r6, r8, lr, pc}
 80160a0:	0801c24d 	stmdaeq	r1, {r0, r2, r3, r6, r9, lr, pc}
 80160a4:	0801c12f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, lr, pc}
 80160a8:	0801c18b 	stmdaeq	r1, {r0, r1, r3, r7, r8, lr, pc}
 80160ac:	1000c000 	andne	ip, r0, r0
 80160b0:	0801c1af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, lr, pc}
 80160b4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80160b8:	0801c148 	stmdaeq	r1, {r3, r6, r8, lr, pc}
 80160bc:	0801c1cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, lr, pc}
 80160c0:	0801c1f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, lr, pc}

080160c4 <free>:
 80160c4:	b570      	push	{r4, r5, r6, lr}
 80160c6:	4604      	mov	r4, r0
 80160c8:	b328      	cbz	r0, 8016116 <free+0x52>
 80160ca:	f1a0 050c 	sub.w	r5, r0, #12
 80160ce:	4602      	mov	r2, r0
 80160d0:	4629      	mov	r1, r5
 80160d2:	4811      	ldr	r0, [pc, #68]	; (8016118 <free+0x54>)
 80160d4:	4e11      	ldr	r6, [pc, #68]	; (801611c <free+0x58>)
 80160d6:	f7f4 f9ef 	bl	800a4b8 <printf>
 80160da:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80160de:	42b3      	cmp	r3, r6
 80160e0:	d009      	beq.n	80160f6 <free+0x32>
 80160e2:	4b0f      	ldr	r3, [pc, #60]	; (8016120 <free+0x5c>)
 80160e4:	4a0f      	ldr	r2, [pc, #60]	; (8016124 <free+0x60>)
 80160e6:	4810      	ldr	r0, [pc, #64]	; (8016128 <free+0x64>)
 80160e8:	219d      	movs	r1, #157	; 0x9d
 80160ea:	f7f3 fed9 	bl	8009ea0 <__assert_func>
 80160ee:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80160f2:	42b3      	cmp	r3, r6
 80160f4:	d10f      	bne.n	8016116 <free+0x52>
 80160f6:	4b0d      	ldr	r3, [pc, #52]	; (801612c <free+0x68>)
 80160f8:	e000      	b.n	80160fc <free+0x38>
 80160fa:	3310      	adds	r3, #16
 80160fc:	681a      	ldr	r2, [r3, #0]
 80160fe:	b152      	cbz	r2, 8016116 <free+0x52>
 8016100:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8016104:	4291      	cmp	r1, r2
 8016106:	d1f8      	bne.n	80160fa <free+0x36>
 8016108:	68da      	ldr	r2, [r3, #12]
 801610a:	f844 2c04 	str.w	r2, [r4, #-4]
 801610e:	685a      	ldr	r2, [r3, #4]
 8016110:	60dd      	str	r5, [r3, #12]
 8016112:	3a01      	subs	r2, #1
 8016114:	605a      	str	r2, [r3, #4]
 8016116:	bd70      	pop	{r4, r5, r6, pc}
 8016118:	0801c222 	stmdaeq	r1, {r1, r5, r9, lr, pc}
 801611c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8016120:	0801c148 	stmdaeq	r1, {r3, r6, r8, lr, pc}
 8016124:	0801c248 	stmdaeq	r1, {r3, r6, r9, lr, pc}
 8016128:	0801c12f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, lr, pc}
 801612c:	20000024 	andcs	r0, r0, r4, lsr #32

08016130 <memcpy>:
 8016130:	b510      	push	{r4, lr}
 8016132:	1e43      	subs	r3, r0, #1
 8016134:	440a      	add	r2, r1
 8016136:	4291      	cmp	r1, r2
 8016138:	d100      	bne.n	801613c <memcpy+0xc>
 801613a:	bd10      	pop	{r4, pc}
 801613c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8016140:	f803 4f01 	strb.w	r4, [r3, #1]!
 8016144:	e7f7      	b.n	8016136 <memcpy+0x6>

08016146 <memmove>:
 8016146:	4288      	cmp	r0, r1
 8016148:	b510      	push	{r4, lr}
 801614a:	eb01 0302 	add.w	r3, r1, r2
 801614e:	d208      	bcs.n	8016162 <memmove+0x1c>
 8016150:	1e42      	subs	r2, r0, #1
 8016152:	4299      	cmp	r1, r3
 8016154:	d100      	bne.n	8016158 <memmove+0x12>
 8016156:	bd10      	pop	{r4, pc}
 8016158:	f811 4b01 	ldrb.w	r4, [r1], #1
 801615c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8016160:	e7f7      	b.n	8016152 <memmove+0xc>
 8016162:	4402      	add	r2, r0
 8016164:	4601      	mov	r1, r0
 8016166:	428a      	cmp	r2, r1
 8016168:	d0f5      	beq.n	8016156 <memmove+0x10>
 801616a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801616e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8016172:	e7f8      	b.n	8016166 <memmove+0x20>

08016174 <memset>:
 8016174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016176:	b1c2      	cbz	r2, 80161aa <memset+0x36>
 8016178:	b2c9      	uxtb	r1, r1
 801617a:	4603      	mov	r3, r0
 801617c:	075c      	lsls	r4, r3, #29
 801617e:	d110      	bne.n	80161a2 <memset+0x2e>
 8016180:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8016184:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8016188:	f022 0407 	bic.w	r4, r2, #7
 801618c:	463d      	mov	r5, r7
 801618e:	441c      	add	r4, r3
 8016190:	461e      	mov	r6, r3
 8016192:	42a6      	cmp	r6, r4
 8016194:	d10a      	bne.n	80161ac <memset+0x38>
 8016196:	441a      	add	r2, r3
 8016198:	4294      	cmp	r4, r2
 801619a:	d006      	beq.n	80161aa <memset+0x36>
 801619c:	f804 1b01 	strb.w	r1, [r4], #1
 80161a0:	e7fa      	b.n	8016198 <memset+0x24>
 80161a2:	3a01      	subs	r2, #1
 80161a4:	f803 1b01 	strb.w	r1, [r3], #1
 80161a8:	d1e8      	bne.n	801617c <memset+0x8>
 80161aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80161ac:	f846 7b08 	str.w	r7, [r6], #8
 80161b0:	f846 5c04 	str.w	r5, [r6, #-4]
 80161b4:	e7ed      	b.n	8016192 <memset+0x1e>

080161b6 <puts>:
 80161b6:	b508      	push	{r3, lr}
 80161b8:	f7ff fbec 	bl	8015994 <console_puts>
 80161bc:	200a      	movs	r0, #10
 80161be:	f7ff fbe7 	bl	8015990 <console_putc>
 80161c2:	2001      	movs	r0, #1
 80161c4:	bd08      	pop	{r3, pc}
	...

080161c8 <strtok>:
 80161c8:	b530      	push	{r4, r5, lr}
 80161ca:	b910      	cbnz	r0, 80161d2 <strtok+0xa>
 80161cc:	4b12      	ldr	r3, [pc, #72]	; (8016218 <strtok+0x50>)
 80161ce:	6818      	ldr	r0, [r3, #0]
 80161d0:	b158      	cbz	r0, 80161ea <strtok+0x22>
 80161d2:	4603      	mov	r3, r0
 80161d4:	4618      	mov	r0, r3
 80161d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80161da:	460d      	mov	r5, r1
 80161dc:	f815 4b01 	ldrb.w	r4, [r5], #1
 80161e0:	b924      	cbnz	r4, 80161ec <strtok+0x24>
 80161e2:	b94a      	cbnz	r2, 80161f8 <strtok+0x30>
 80161e4:	4b0c      	ldr	r3, [pc, #48]	; (8016218 <strtok+0x50>)
 80161e6:	4610      	mov	r0, r2
 80161e8:	601a      	str	r2, [r3, #0]
 80161ea:	bd30      	pop	{r4, r5, pc}
 80161ec:	42a2      	cmp	r2, r4
 80161ee:	d1f5      	bne.n	80161dc <strtok+0x14>
 80161f0:	e7f0      	b.n	80161d4 <strtok+0xc>
 80161f2:	4613      	mov	r3, r2
 80161f4:	e00c      	b.n	8016210 <strtok+0x48>
 80161f6:	b914      	cbnz	r4, 80161fe <strtok+0x36>
 80161f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80161fc:	460d      	mov	r5, r1
 80161fe:	f815 4b01 	ldrb.w	r4, [r5], #1
 8016202:	42a2      	cmp	r2, r4
 8016204:	d1f7      	bne.n	80161f6 <strtok+0x2e>
 8016206:	2a00      	cmp	r2, #0
 8016208:	d0f3      	beq.n	80161f2 <strtok+0x2a>
 801620a:	2200      	movs	r2, #0
 801620c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8016210:	4a01      	ldr	r2, [pc, #4]	; (8016218 <strtok+0x50>)
 8016212:	6013      	str	r3, [r2, #0]
 8016214:	e7e9      	b.n	80161ea <strtok+0x22>
 8016216:	bf00      	nop
 8016218:	2000fda8 	andcs	pc, r0, r8, lsr #27

0801621c <isleapyear>:
 801621c:	2264      	movs	r2, #100	; 0x64
 801621e:	fb90 f3f2 	sdiv	r3, r0, r2
 8016222:	fb02 0313 	mls	r3, r2, r3, r0
 8016226:	b94b      	cbnz	r3, 801623c <isleapyear+0x20>
 8016228:	f44f 73c8 	mov.w	r3, #400	; 0x190
 801622c:	fb90 f2f3 	sdiv	r2, r0, r3
 8016230:	fb03 0012 	mls	r0, r3, r2, r0
 8016234:	fab0 f080 	clz	r0, r0
 8016238:	0940      	lsrs	r0, r0, #5
 801623a:	4770      	bx	lr
 801623c:	f010 0f03 	tst.w	r0, #3
 8016240:	bf0c      	ite	eq
 8016242:	2001      	moveq	r0, #1
 8016244:	2000      	movne	r0, #0
 8016246:	4770      	bx	lr

08016248 <getdaysofmonth>:
 8016248:	b510      	push	{r4, lr}
 801624a:	4604      	mov	r4, r0
 801624c:	2c01      	cmp	r4, #1
 801624e:	4608      	mov	r0, r1
 8016250:	d102      	bne.n	8016258 <getdaysofmonth+0x10>
 8016252:	f7ff ffe3 	bl	801621c <isleapyear>
 8016256:	b918      	cbnz	r0, 8016260 <getdaysofmonth+0x18>
 8016258:	4b02      	ldr	r3, [pc, #8]	; (8016264 <getdaysofmonth+0x1c>)
 801625a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801625e:	bd10      	pop	{r4, pc}
 8016260:	201d      	movs	r0, #29
 8016262:	e7fc      	b.n	801625e <getdaysofmonth+0x16>
 8016264:	0801c254 	stmdaeq	r1, {r2, r4, r6, r9, lr, pc}

08016268 <mktime>:
 8016268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801626c:	4604      	mov	r4, r0
 801626e:	2800      	cmp	r0, #0
 8016270:	d043      	beq.n	80162fa <mktime+0x92>
 8016272:	6941      	ldr	r1, [r0, #20]
 8016274:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8016278:	2b45      	cmp	r3, #69	; 0x45
 801627a:	d83e      	bhi.n	80162fa <mktime+0x92>
 801627c:	2600      	movs	r6, #0
 801627e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8016282:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8016286:	f240 186d 	movw	r8, #365	; 0x16d
 801628a:	42af      	cmp	r7, r5
 801628c:	da24      	bge.n	80162d8 <mktime+0x70>
 801628e:	6927      	ldr	r7, [r4, #16]
 8016290:	2f0b      	cmp	r7, #11
 8016292:	d832      	bhi.n	80162fa <mktime+0x92>
 8016294:	2500      	movs	r5, #0
 8016296:	42af      	cmp	r7, r5
 8016298:	d129      	bne.n	80162ee <mktime+0x86>
 801629a:	68e5      	ldr	r5, [r4, #12]
 801629c:	2d00      	cmp	r5, #0
 801629e:	dd2c      	ble.n	80162fa <mktime+0x92>
 80162a0:	4638      	mov	r0, r7
 80162a2:	f7ff ffd1 	bl	8016248 <getdaysofmonth>
 80162a6:	4285      	cmp	r5, r0
 80162a8:	dc27      	bgt.n	80162fa <mktime+0x92>
 80162aa:	3d01      	subs	r5, #1
 80162ac:	2318      	movs	r3, #24
 80162ae:	4435      	add	r5, r6
 80162b0:	435d      	muls	r5, r3
 80162b2:	68a3      	ldr	r3, [r4, #8]
 80162b4:	2b17      	cmp	r3, #23
 80162b6:	d820      	bhi.n	80162fa <mktime+0x92>
 80162b8:	442b      	add	r3, r5
 80162ba:	213c      	movs	r1, #60	; 0x3c
 80162bc:	fb01 f203 	mul.w	r2, r1, r3
 80162c0:	6863      	ldr	r3, [r4, #4]
 80162c2:	2b3b      	cmp	r3, #59	; 0x3b
 80162c4:	d819      	bhi.n	80162fa <mktime+0x92>
 80162c6:	6820      	ldr	r0, [r4, #0]
 80162c8:	4413      	add	r3, r2
 80162ca:	283b      	cmp	r0, #59	; 0x3b
 80162cc:	fb01 f303 	mul.w	r3, r1, r3
 80162d0:	d813      	bhi.n	80162fa <mktime+0x92>
 80162d2:	4418      	add	r0, r3
 80162d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80162d8:	4628      	mov	r0, r5
 80162da:	f7ff ff9f 	bl	801621c <isleapyear>
 80162de:	2800      	cmp	r0, #0
 80162e0:	bf14      	ite	ne
 80162e2:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 80162e6:	4643      	moveq	r3, r8
 80162e8:	441e      	add	r6, r3
 80162ea:	3501      	adds	r5, #1
 80162ec:	e7cd      	b.n	801628a <mktime+0x22>
 80162ee:	4628      	mov	r0, r5
 80162f0:	f7ff ffaa 	bl	8016248 <getdaysofmonth>
 80162f4:	3501      	adds	r5, #1
 80162f6:	4406      	add	r6, r0
 80162f8:	e7cd      	b.n	8016296 <mktime+0x2e>
 80162fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80162fe:	e7e9      	b.n	80162d4 <mktime+0x6c>

08016300 <gettimeofday>:
 8016300:	b538      	push	{r3, r4, r5, lr}
 8016302:	4605      	mov	r5, r0
 8016304:	b928      	cbnz	r0, 8016312 <gettimeofday+0x12>
 8016306:	4b13      	ldr	r3, [pc, #76]	; (8016354 <gettimeofday+0x54>)
 8016308:	4a13      	ldr	r2, [pc, #76]	; (8016358 <gettimeofday+0x58>)
 801630a:	4814      	ldr	r0, [pc, #80]	; (801635c <gettimeofday+0x5c>)
 801630c:	212c      	movs	r1, #44	; 0x2c
 801630e:	f7f3 fdc7 	bl	8009ea0 <__assert_func>
 8016312:	4a13      	ldr	r2, [pc, #76]	; (8016360 <gettimeofday+0x60>)
 8016314:	4b13      	ldr	r3, [pc, #76]	; (8016364 <gettimeofday+0x64>)
 8016316:	6814      	ldr	r4, [r2, #0]
 8016318:	681b      	ldr	r3, [r3, #0]
 801631a:	6013      	str	r3, [r2, #0]
 801631c:	429c      	cmp	r4, r3
 801631e:	bf2c      	ite	cs
 8016320:	1ae4      	subcs	r4, r4, r3
 8016322:	1b1c      	subcc	r4, r3, r4
 8016324:	4b10      	ldr	r3, [pc, #64]	; (8016368 <gettimeofday+0x68>)
 8016326:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801632a:	4354      	muls	r4, r2
 801632c:	e9d3 2100 	ldrd	r2, r1, [r3]
 8016330:	18a4      	adds	r4, r4, r2
 8016332:	f141 0100 	adc.w	r1, r1, #0
 8016336:	e9c3 4100 	strd	r4, r1, [r3]
 801633a:	4a0c      	ldr	r2, [pc, #48]	; (801636c <gettimeofday+0x6c>)
 801633c:	2300      	movs	r3, #0
 801633e:	4620      	mov	r0, r4
 8016340:	f7f2 fcaa 	bl	8008c98 <__aeabi_uldivmod>
 8016344:	4b09      	ldr	r3, [pc, #36]	; (801636c <gettimeofday+0x6c>)
 8016346:	6028      	str	r0, [r5, #0]
 8016348:	fb03 4410 	mls	r4, r3, r0, r4
 801634c:	606c      	str	r4, [r5, #4]
 801634e:	2000      	movs	r0, #0
 8016350:	bd38      	pop	{r3, r4, r5, pc}
 8016352:	bf00      	nop
 8016354:	0801c284 	stmdaeq	r1, {r2, r7, r9, lr, pc}
 8016358:	0801c2a9 	stmdaeq	r1, {r0, r3, r5, r7, r9, lr, pc}
 801635c:	0801c28c 	stmdaeq	r1, {r2, r3, r7, r9, lr, pc}
 8016360:	2000fdb8 			; <UNDEFINED> instruction: 0x2000fdb8
 8016364:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 8016368:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0
 801636c:	000f4240 	andeq	r4, pc, r0, asr #4

08016370 <settimeofday>:
 8016370:	b510      	push	{r4, lr}
 8016372:	4604      	mov	r4, r0
 8016374:	b928      	cbnz	r0, 8016382 <settimeofday+0x12>
 8016376:	4b0a      	ldr	r3, [pc, #40]	; (80163a0 <settimeofday+0x30>)
 8016378:	4a0a      	ldr	r2, [pc, #40]	; (80163a4 <settimeofday+0x34>)
 801637a:	480b      	ldr	r0, [pc, #44]	; (80163a8 <settimeofday+0x38>)
 801637c:	2142      	movs	r1, #66	; 0x42
 801637e:	f7f3 fd8f 	bl	8009ea0 <__assert_func>
 8016382:	4b0a      	ldr	r3, [pc, #40]	; (80163ac <settimeofday+0x3c>)
 8016384:	480a      	ldr	r0, [pc, #40]	; (80163b0 <settimeofday+0x40>)
 8016386:	681a      	ldr	r2, [r3, #0]
 8016388:	4b0a      	ldr	r3, [pc, #40]	; (80163b4 <settimeofday+0x44>)
 801638a:	490b      	ldr	r1, [pc, #44]	; (80163b8 <settimeofday+0x48>)
 801638c:	601a      	str	r2, [r3, #0]
 801638e:	6863      	ldr	r3, [r4, #4]
 8016390:	6824      	ldr	r4, [r4, #0]
 8016392:	17da      	asrs	r2, r3, #31
 8016394:	fbc4 3200 	smlal	r3, r2, r4, r0
 8016398:	e9c1 3200 	strd	r3, r2, [r1]
 801639c:	2000      	movs	r0, #0
 801639e:	bd10      	pop	{r4, pc}
 80163a0:	0801c284 	stmdaeq	r1, {r2, r7, r9, lr, pc}
 80163a4:	0801c29c 	stmdaeq	r1, {r2, r3, r4, r7, r9, lr, pc}
 80163a8:	0801c28c 	stmdaeq	r1, {r2, r3, r7, r9, lr, pc}
 80163ac:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc
 80163b0:	000f4240 	andeq	r4, pc, r0, asr #4
 80163b4:	2000fdb8 			; <UNDEFINED> instruction: 0x2000fdb8
 80163b8:	2000fdb0 			; <UNDEFINED> instruction: 0x2000fdb0

080163bc <time>:
 80163bc:	b513      	push	{r0, r1, r4, lr}
 80163be:	4604      	mov	r4, r0
 80163c0:	2100      	movs	r1, #0
 80163c2:	4668      	mov	r0, sp
 80163c4:	f7ff ff9c 	bl	8016300 <gettimeofday>
 80163c8:	9800      	ldr	r0, [sp, #0]
 80163ca:	b104      	cbz	r4, 80163ce <time+0x12>
 80163cc:	6020      	str	r0, [r4, #0]
 80163ce:	b002      	add	sp, #8
 80163d0:	bd10      	pop	{r4, pc}
	...

080163d4 <uart0_init>:
 80163d4:	b507      	push	{r0, r1, r2, lr}
 80163d6:	2301      	movs	r3, #1
 80163d8:	9300      	str	r3, [sp, #0]
 80163da:	4805      	ldr	r0, [pc, #20]	; (80163f0 <uart0_init+0x1c>)
 80163dc:	2300      	movs	r3, #0
 80163de:	2208      	movs	r2, #8
 80163e0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80163e4:	f001 f9c2 	bl	801776c <gd32_uart_begin>
 80163e8:	b003      	add	sp, #12
 80163ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80163ee:	bf00      	nop
 80163f0:	40011000 	andmi	r1, r1, r0

080163f4 <uart0_putc>:
 80163f4:	280a      	cmp	r0, #10
 80163f6:	b570      	push	{r4, r5, r6, lr}
 80163f8:	4d0a      	ldr	r5, [pc, #40]	; (8016424 <uart0_putc+0x30>)
 80163fa:	4604      	mov	r4, r0
 80163fc:	d107      	bne.n	801640e <uart0_putc+0x1a>
 80163fe:	2107      	movs	r1, #7
 8016400:	4628      	mov	r0, r5
 8016402:	f000 fe43 	bl	801708c <usart_flag_get>
 8016406:	2800      	cmp	r0, #0
 8016408:	d0f9      	beq.n	80163fe <uart0_putc+0xa>
 801640a:	230d      	movs	r3, #13
 801640c:	606b      	str	r3, [r5, #4]
 801640e:	4e05      	ldr	r6, [pc, #20]	; (8016424 <uart0_putc+0x30>)
 8016410:	2107      	movs	r1, #7
 8016412:	4630      	mov	r0, r6
 8016414:	f000 fe3a 	bl	801708c <usart_flag_get>
 8016418:	2800      	cmp	r0, #0
 801641a:	d0f9      	beq.n	8016410 <uart0_putc+0x1c>
 801641c:	b2e4      	uxtb	r4, r4
 801641e:	606c      	str	r4, [r5, #4]
 8016420:	bd70      	pop	{r4, r5, r6, pc}
 8016422:	bf00      	nop
 8016424:	40011000 	andmi	r1, r1, r0

08016428 <uart0_puts>:
 8016428:	b510      	push	{r4, lr}
 801642a:	1e44      	subs	r4, r0, #1
 801642c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8016430:	b903      	cbnz	r3, 8016434 <uart0_puts+0xc>
 8016432:	bd10      	pop	{r4, pc}
 8016434:	2b0a      	cmp	r3, #10
 8016436:	d102      	bne.n	801643e <uart0_puts+0x16>
 8016438:	200d      	movs	r0, #13
 801643a:	f7ff ffdb 	bl	80163f4 <uart0_putc>
 801643e:	7820      	ldrb	r0, [r4, #0]
 8016440:	f7ff ffd8 	bl	80163f4 <uart0_putc>
 8016444:	e7f2      	b.n	801642c <uart0_puts+0x4>
	...

08016448 <systick_config>:
 8016448:	4b0c      	ldr	r3, [pc, #48]	; (801647c <systick_config+0x34>)
 801644a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801644e:	681b      	ldr	r3, [r3, #0]
 8016450:	fbb3 f3f2 	udiv	r3, r3, r2
 8016454:	3b01      	subs	r3, #1
 8016456:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801645a:	d20d      	bcs.n	8016478 <systick_config+0x30>
 801645c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8016460:	21f0      	movs	r1, #240	; 0xf0
 8016462:	6153      	str	r3, [r2, #20]
 8016464:	4b06      	ldr	r3, [pc, #24]	; (8016480 <systick_config+0x38>)
 8016466:	2007      	movs	r0, #7
 8016468:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801646c:	2100      	movs	r1, #0
 801646e:	6191      	str	r1, [r2, #24]
 8016470:	6110      	str	r0, [r2, #16]
 8016472:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8016476:	4770      	bx	lr
 8016478:	e7fe      	b.n	8016478 <systick_config+0x30>
 801647a:	bf00      	nop
 801647c:	200000f4 	strdcs	r0, [r0], -r4
 8016480:	e000ed00 	and	lr, r0, r0, lsl #26

08016484 <SysTick_Handler>:
 8016484:	4a02      	ldr	r2, [pc, #8]	; (8016490 <SysTick_Handler+0xc>)
 8016486:	6813      	ldr	r3, [r2, #0]
 8016488:	3301      	adds	r3, #1
 801648a:	6013      	str	r3, [r2, #0]
 801648c:	4770      	bx	lr
 801648e:	bf00      	nop
 8016490:	2000fdbc 			; <UNDEFINED> instruction: 0x2000fdbc

08016494 <SystemInit>:
 8016494:	4a56      	ldr	r2, [pc, #344]	; (80165f0 <SystemInit+0x15c>)
 8016496:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 801649a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801649e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80164a2:	4b54      	ldr	r3, [pc, #336]	; (80165f4 <SystemInit+0x160>)
 80164a4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80164a8:	f042 0201 	orr.w	r2, r2, #1
 80164ac:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80164b0:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80164b4:	b082      	sub	sp, #8
 80164b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80164ba:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80164be:	2200      	movs	r2, #0
 80164c0:	9201      	str	r2, [sp, #4]
 80164c2:	f24c 314f 	movw	r1, #49999	; 0xc34f
 80164c6:	9a01      	ldr	r2, [sp, #4]
 80164c8:	428a      	cmp	r2, r1
 80164ca:	d93e      	bls.n	801654a <SystemInit+0xb6>
 80164cc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80164d0:	f042 0290 	orr.w	r2, r2, #144	; 0x90
 80164d4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80164d8:	2300      	movs	r3, #0
 80164da:	9301      	str	r3, [sp, #4]
 80164dc:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80164e0:	9b01      	ldr	r3, [sp, #4]
 80164e2:	4293      	cmp	r3, r2
 80164e4:	d935      	bls.n	8016552 <SystemInit+0xbe>
 80164e6:	4b43      	ldr	r3, [pc, #268]	; (80165f4 <SystemInit+0x160>)
 80164e8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80164ec:	f022 0203 	bic.w	r2, r2, #3
 80164f0:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80164f4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 80164f8:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80164fc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8016500:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8016504:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8016508:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801650c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8016510:	2200      	movs	r2, #0
 8016512:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8016516:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 801651a:	4937      	ldr	r1, [pc, #220]	; (80165f8 <SystemInit+0x164>)
 801651c:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8016520:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 8016524:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8016528:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 801652c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8016530:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016534:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 8016538:	0389      	lsls	r1, r1, #14
 801653a:	d401      	bmi.n	8016540 <SystemInit+0xac>
 801653c:	3a01      	subs	r2, #1
 801653e:	d1f9      	bne.n	8016534 <SystemInit+0xa0>
 8016540:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 8016544:	0392      	lsls	r2, r2, #14
 8016546:	d408      	bmi.n	801655a <SystemInit+0xc6>
 8016548:	e7fe      	b.n	8016548 <SystemInit+0xb4>
 801654a:	9a01      	ldr	r2, [sp, #4]
 801654c:	3201      	adds	r2, #1
 801654e:	9201      	str	r2, [sp, #4]
 8016550:	e7b9      	b.n	80164c6 <SystemInit+0x32>
 8016552:	9b01      	ldr	r3, [sp, #4]
 8016554:	3301      	adds	r3, #1
 8016556:	9301      	str	r3, [sp, #4]
 8016558:	e7c2      	b.n	80164e0 <SystemInit+0x4c>
 801655a:	f8d3 2840 	ldr.w	r2, [r3, #2112]	; 0x840
 801655e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8016562:	f8c3 2840 	str.w	r2, [r3, #2112]	; 0x840
 8016566:	4a25      	ldr	r2, [pc, #148]	; (80165fc <SystemInit+0x168>)
 8016568:	6811      	ldr	r1, [r2, #0]
 801656a:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 801656e:	6011      	str	r1, [r2, #0]
 8016570:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8016574:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8016578:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 801657c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8016580:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8016584:	f8d3 1808 	ldr.w	r1, [r3, #2056]	; 0x808
 8016588:	f441 51a0 	orr.w	r1, r1, #5120	; 0x1400
 801658c:	f8c3 1808 	str.w	r1, [r3, #2056]	; 0x808
 8016590:	491b      	ldr	r1, [pc, #108]	; (8016600 <SystemInit+0x16c>)
 8016592:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 8016596:	f8d3 1800 	ldr.w	r1, [r3, #2048]	; 0x800
 801659a:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 801659e:	f8c3 1800 	str.w	r1, [r3, #2048]	; 0x800
 80165a2:	4914      	ldr	r1, [pc, #80]	; (80165f4 <SystemInit+0x160>)
 80165a4:	f8d1 3800 	ldr.w	r3, [r1, #2048]	; 0x800
 80165a8:	019b      	lsls	r3, r3, #6
 80165aa:	d5fb      	bpl.n	80165a4 <SystemInit+0x110>
 80165ac:	6813      	ldr	r3, [r2, #0]
 80165ae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80165b2:	6013      	str	r3, [r2, #0]
 80165b4:	4b11      	ldr	r3, [pc, #68]	; (80165fc <SystemInit+0x168>)
 80165b6:	685a      	ldr	r2, [r3, #4]
 80165b8:	03d0      	lsls	r0, r2, #15
 80165ba:	d5fc      	bpl.n	80165b6 <SystemInit+0x122>
 80165bc:	681a      	ldr	r2, [r3, #0]
 80165be:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80165c2:	601a      	str	r2, [r3, #0]
 80165c4:	685a      	ldr	r2, [r3, #4]
 80165c6:	0391      	lsls	r1, r2, #14
 80165c8:	d5fc      	bpl.n	80165c4 <SystemInit+0x130>
 80165ca:	4b0a      	ldr	r3, [pc, #40]	; (80165f4 <SystemInit+0x160>)
 80165cc:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80165d0:	f022 0203 	bic.w	r2, r2, #3
 80165d4:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80165d8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80165dc:	f042 0202 	orr.w	r2, r2, #2
 80165e0:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80165e4:	f8d3 2808 	ldr.w	r2, [r3, #2056]	; 0x808
 80165e8:	0712      	lsls	r2, r2, #28
 80165ea:	d5fb      	bpl.n	80165e4 <SystemInit+0x150>
 80165ec:	b002      	add	sp, #8
 80165ee:	4770      	bx	lr
 80165f0:	e000ed00 	and	lr, r0, r0, lsl #26
 80165f4:	40023000 	andmi	r3, r2, r0
 80165f8:	24003010 	strcs	r3, [r0], #-16
 80165fc:	40007000 	andmi	r7, r0, r0
 8016600:	09406419 	stmdbeq	r0, {r0, r3, r4, sl, sp, lr}^

08016604 <dma_deinit>:
 8016604:	2318      	movs	r3, #24
 8016606:	fb03 0301 	mla	r3, r3, r1, r0
 801660a:	b510      	push	{r4, lr}
 801660c:	691a      	ldr	r2, [r3, #16]
 801660e:	f022 0201 	bic.w	r2, r2, #1
 8016612:	611a      	str	r2, [r3, #16]
 8016614:	2903      	cmp	r1, #3
 8016616:	f04f 0200 	mov.w	r2, #0
 801661a:	611a      	str	r2, [r3, #16]
 801661c:	615a      	str	r2, [r3, #20]
 801661e:	619a      	str	r2, [r3, #24]
 8016620:	61da      	str	r2, [r3, #28]
 8016622:	621a      	str	r2, [r3, #32]
 8016624:	625a      	str	r2, [r3, #36]	; 0x24
 8016626:	d80a      	bhi.n	801663e <dma_deinit+0x3a>
 8016628:	2406      	movs	r4, #6
 801662a:	084b      	lsrs	r3, r1, #1
 801662c:	4361      	muls	r1, r4
 801662e:	6882      	ldr	r2, [r0, #8]
 8016630:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8016634:	233d      	movs	r3, #61	; 0x3d
 8016636:	408b      	lsls	r3, r1
 8016638:	4313      	orrs	r3, r2
 801663a:	6083      	str	r3, [r0, #8]
 801663c:	bd10      	pop	{r4, pc}
 801663e:	3904      	subs	r1, #4
 8016640:	b2ca      	uxtb	r2, r1
 8016642:	2306      	movs	r3, #6
 8016644:	435a      	muls	r2, r3
 8016646:	f3c1 0140 	ubfx	r1, r1, #1, #1
 801664a:	68c4      	ldr	r4, [r0, #12]
 801664c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8016650:	233d      	movs	r3, #61	; 0x3d
 8016652:	4093      	lsls	r3, r2
 8016654:	4323      	orrs	r3, r4
 8016656:	60c3      	str	r3, [r0, #12]
 8016658:	e7f0      	b.n	801663c <dma_deinit+0x38>

0801665a <dma_single_data_para_struct_init>:
 801665a:	2300      	movs	r3, #0
 801665c:	2201      	movs	r2, #1
 801665e:	e9c0 3200 	strd	r3, r2, [r0]
 8016662:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8016666:	e9c0 3204 	strd	r3, r2, [r0, #16]
 801666a:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801666e:	6203      	str	r3, [r0, #32]
 8016670:	4770      	bx	lr

08016672 <dma_single_data_mode_init>:
 8016672:	2318      	movs	r3, #24
 8016674:	fb03 0101 	mla	r1, r3, r1, r0
 8016678:	b530      	push	{r4, r5, lr}
 801667a:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 801667c:	f023 0304 	bic.w	r3, r3, #4
 8016680:	624b      	str	r3, [r1, #36]	; 0x24
 8016682:	6813      	ldr	r3, [r2, #0]
 8016684:	618b      	str	r3, [r1, #24]
 8016686:	6893      	ldr	r3, [r2, #8]
 8016688:	61cb      	str	r3, [r1, #28]
 801668a:	69d3      	ldr	r3, [r2, #28]
 801668c:	614b      	str	r3, [r1, #20]
 801668e:	6914      	ldr	r4, [r2, #16]
 8016690:	6a13      	ldr	r3, [r2, #32]
 8016692:	6908      	ldr	r0, [r1, #16]
 8016694:	6995      	ldr	r5, [r2, #24]
 8016696:	4323      	orrs	r3, r4
 8016698:	f420 305e 	bic.w	r0, r0, #227328	; 0x37800
 801669c:	432b      	orrs	r3, r5
 801669e:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 80166a2:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 80166a6:	4303      	orrs	r3, r0
 80166a8:	610b      	str	r3, [r1, #16]
 80166aa:	6853      	ldr	r3, [r2, #4]
 80166ac:	b983      	cbnz	r3, 80166d0 <dma_single_data_mode_init+0x5e>
 80166ae:	690b      	ldr	r3, [r1, #16]
 80166b0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80166b4:	610b      	str	r3, [r1, #16]
 80166b6:	68d3      	ldr	r3, [r2, #12]
 80166b8:	b993      	cbnz	r3, 80166e0 <dma_single_data_mode_init+0x6e>
 80166ba:	690b      	ldr	r3, [r1, #16]
 80166bc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80166c0:	610b      	str	r3, [r1, #16]
 80166c2:	6953      	ldr	r3, [r2, #20]
 80166c4:	b983      	cbnz	r3, 80166e8 <dma_single_data_mode_init+0x76>
 80166c6:	690b      	ldr	r3, [r1, #16]
 80166c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80166cc:	610b      	str	r3, [r1, #16]
 80166ce:	bd30      	pop	{r4, r5, pc}
 80166d0:	2b01      	cmp	r3, #1
 80166d2:	690b      	ldr	r3, [r1, #16]
 80166d4:	bf0c      	ite	eq
 80166d6:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 80166da:	f443 4300 	orrne.w	r3, r3, #32768	; 0x8000
 80166de:	e7e9      	b.n	80166b4 <dma_single_data_mode_init+0x42>
 80166e0:	690b      	ldr	r3, [r1, #16]
 80166e2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80166e6:	e7eb      	b.n	80166c0 <dma_single_data_mode_init+0x4e>
 80166e8:	690b      	ldr	r3, [r1, #16]
 80166ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80166ee:	e7ed      	b.n	80166cc <dma_single_data_mode_init+0x5a>

080166f0 <dma_circulation_disable>:
 80166f0:	2318      	movs	r3, #24
 80166f2:	4359      	muls	r1, r3
 80166f4:	3010      	adds	r0, #16
 80166f6:	580b      	ldr	r3, [r1, r0]
 80166f8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80166fc:	500b      	str	r3, [r1, r0]
 80166fe:	4770      	bx	lr

08016700 <dma_channel_subperipheral_select>:
 8016700:	2318      	movs	r3, #24
 8016702:	4359      	muls	r1, r3
 8016704:	3010      	adds	r0, #16
 8016706:	580b      	ldr	r3, [r1, r0]
 8016708:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 801670c:	ea43 6242 	orr.w	r2, r3, r2, lsl #25
 8016710:	500a      	str	r2, [r1, r0]
 8016712:	4770      	bx	lr

08016714 <dma_flag_clear>:
 8016714:	2903      	cmp	r1, #3
 8016716:	b530      	push	{r4, r5, lr}
 8016718:	d809      	bhi.n	801672e <dma_flag_clear+0x1a>
 801671a:	2506      	movs	r5, #6
 801671c:	084c      	lsrs	r4, r1, #1
 801671e:	4369      	muls	r1, r5
 8016720:	6883      	ldr	r3, [r0, #8]
 8016722:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8016726:	408a      	lsls	r2, r1
 8016728:	4313      	orrs	r3, r2
 801672a:	6083      	str	r3, [r0, #8]
 801672c:	bd30      	pop	{r4, r5, pc}
 801672e:	3904      	subs	r1, #4
 8016730:	b2cb      	uxtb	r3, r1
 8016732:	2506      	movs	r5, #6
 8016734:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8016738:	436b      	muls	r3, r5
 801673a:	68c4      	ldr	r4, [r0, #12]
 801673c:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8016740:	409a      	lsls	r2, r3
 8016742:	4322      	orrs	r2, r4
 8016744:	60c2      	str	r2, [r0, #12]
 8016746:	e7f1      	b.n	801672c <dma_flag_clear+0x18>

08016748 <dma_interrupt_flag_clear>:
 8016748:	f7ff bfe4 	b.w	8016714 <dma_flag_clear>

0801674c <fwdgt_enable>:
 801674c:	4b02      	ldr	r3, [pc, #8]	; (8016758 <fwdgt_enable+0xc>)
 801674e:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8016752:	601a      	str	r2, [r3, #0]
 8016754:	4770      	bx	lr
 8016756:	bf00      	nop
 8016758:	40003000 	andmi	r3, r0, r0

0801675c <fwdgt_counter_reload>:
 801675c:	4b02      	ldr	r3, [pc, #8]	; (8016768 <fwdgt_counter_reload+0xc>)
 801675e:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8016762:	601a      	str	r2, [r3, #0]
 8016764:	4770      	bx	lr
 8016766:	bf00      	nop
 8016768:	40003000 	andmi	r3, r0, r0

0801676c <fwdgt_config>:
 801676c:	4a12      	ldr	r2, [pc, #72]	; (80167b8 <fwdgt_config+0x4c>)
 801676e:	b510      	push	{r4, lr}
 8016770:	f245 5355 	movw	r3, #21845	; 0x5555
 8016774:	4c11      	ldr	r4, [pc, #68]	; (80167bc <fwdgt_config+0x50>)
 8016776:	6013      	str	r3, [r2, #0]
 8016778:	68d3      	ldr	r3, [r2, #12]
 801677a:	3c01      	subs	r4, #1
 801677c:	f003 0301 	and.w	r3, r3, #1
 8016780:	d013      	beq.n	80167aa <fwdgt_config+0x3e>
 8016782:	2b00      	cmp	r3, #0
 8016784:	d1f8      	bne.n	8016778 <fwdgt_config+0xc>
 8016786:	6051      	str	r1, [r2, #4]
 8016788:	490c      	ldr	r1, [pc, #48]	; (80167bc <fwdgt_config+0x50>)
 801678a:	4a0b      	ldr	r2, [pc, #44]	; (80167b8 <fwdgt_config+0x4c>)
 801678c:	68d3      	ldr	r3, [r2, #12]
 801678e:	3901      	subs	r1, #1
 8016790:	f003 0302 	and.w	r3, r3, #2
 8016794:	d00d      	beq.n	80167b2 <fwdgt_config+0x46>
 8016796:	2b00      	cmp	r3, #0
 8016798:	d1f8      	bne.n	801678c <fwdgt_config+0x20>
 801679a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801679e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80167a2:	6090      	str	r0, [r2, #8]
 80167a4:	6013      	str	r3, [r2, #0]
 80167a6:	2001      	movs	r0, #1
 80167a8:	e002      	b.n	80167b0 <fwdgt_config+0x44>
 80167aa:	2b00      	cmp	r3, #0
 80167ac:	d0eb      	beq.n	8016786 <fwdgt_config+0x1a>
 80167ae:	2000      	movs	r0, #0
 80167b0:	bd10      	pop	{r4, pc}
 80167b2:	2b00      	cmp	r3, #0
 80167b4:	d1fb      	bne.n	80167ae <fwdgt_config+0x42>
 80167b6:	e7f0      	b.n	801679a <fwdgt_config+0x2e>
 80167b8:	40003000 	andmi	r3, r0, r0
 80167bc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080167c0 <gpio_mode_set>:
 80167c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80167c4:	6805      	ldr	r5, [r0, #0]
 80167c6:	68c4      	ldr	r4, [r0, #12]
 80167c8:	2600      	movs	r6, #0
 80167ca:	f04f 0e03 	mov.w	lr, #3
 80167ce:	fa23 f706 	lsr.w	r7, r3, r6
 80167d2:	07ff      	lsls	r7, r7, #31
 80167d4:	d50d      	bpl.n	80167f2 <gpio_mode_set+0x32>
 80167d6:	0077      	lsls	r7, r6, #1
 80167d8:	fa0e fc07 	lsl.w	ip, lr, r7
 80167dc:	fa01 f807 	lsl.w	r8, r1, r7
 80167e0:	ea25 050c 	bic.w	r5, r5, ip
 80167e4:	ea24 040c 	bic.w	r4, r4, ip
 80167e8:	fa02 f707 	lsl.w	r7, r2, r7
 80167ec:	ea48 0505 	orr.w	r5, r8, r5
 80167f0:	433c      	orrs	r4, r7
 80167f2:	3601      	adds	r6, #1
 80167f4:	2e10      	cmp	r6, #16
 80167f6:	d1ea      	bne.n	80167ce <gpio_mode_set+0xe>
 80167f8:	6005      	str	r5, [r0, #0]
 80167fa:	60c4      	str	r4, [r0, #12]
 80167fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016800 <gpio_output_options_set>:
 8016800:	2901      	cmp	r1, #1
 8016802:	6841      	ldr	r1, [r0, #4]
 8016804:	bf0c      	ite	eq
 8016806:	4319      	orreq	r1, r3
 8016808:	4399      	bicne	r1, r3
 801680a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801680c:	6041      	str	r1, [r0, #4]
 801680e:	6881      	ldr	r1, [r0, #8]
 8016810:	2400      	movs	r4, #0
 8016812:	2603      	movs	r6, #3
 8016814:	fa23 f504 	lsr.w	r5, r3, r4
 8016818:	07ed      	lsls	r5, r5, #31
 801681a:	d507      	bpl.n	801682c <gpio_output_options_set+0x2c>
 801681c:	0065      	lsls	r5, r4, #1
 801681e:	fa06 f705 	lsl.w	r7, r6, r5
 8016822:	ea21 0107 	bic.w	r1, r1, r7
 8016826:	fa02 f505 	lsl.w	r5, r2, r5
 801682a:	4329      	orrs	r1, r5
 801682c:	3401      	adds	r4, #1
 801682e:	2c10      	cmp	r4, #16
 8016830:	d1f0      	bne.n	8016814 <gpio_output_options_set+0x14>
 8016832:	6081      	str	r1, [r0, #8]
 8016834:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016836 <gpio_af_set>:
 8016836:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016838:	6a06      	ldr	r6, [r0, #32]
 801683a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 801683c:	2300      	movs	r3, #0
 801683e:	f04f 0c0f 	mov.w	ip, #15
 8016842:	fa22 f403 	lsr.w	r4, r2, r3
 8016846:	07e7      	lsls	r7, r4, #31
 8016848:	d507      	bpl.n	801685a <gpio_af_set+0x24>
 801684a:	009c      	lsls	r4, r3, #2
 801684c:	fa0c f704 	lsl.w	r7, ip, r4
 8016850:	ea26 0607 	bic.w	r6, r6, r7
 8016854:	fa01 f404 	lsl.w	r4, r1, r4
 8016858:	4326      	orrs	r6, r4
 801685a:	3301      	adds	r3, #1
 801685c:	2b08      	cmp	r3, #8
 801685e:	d1f0      	bne.n	8016842 <gpio_af_set+0xc>
 8016860:	2300      	movs	r3, #0
 8016862:	f04f 0c0f 	mov.w	ip, #15
 8016866:	f103 0408 	add.w	r4, r3, #8
 801686a:	fa22 f404 	lsr.w	r4, r2, r4
 801686e:	07e4      	lsls	r4, r4, #31
 8016870:	d507      	bpl.n	8016882 <gpio_af_set+0x4c>
 8016872:	009c      	lsls	r4, r3, #2
 8016874:	fa0c f704 	lsl.w	r7, ip, r4
 8016878:	ea25 0507 	bic.w	r5, r5, r7
 801687c:	fa01 f404 	lsl.w	r4, r1, r4
 8016880:	4325      	orrs	r5, r4
 8016882:	3301      	adds	r3, #1
 8016884:	2b08      	cmp	r3, #8
 8016886:	d1ee      	bne.n	8016866 <gpio_af_set+0x30>
 8016888:	6206      	str	r6, [r0, #32]
 801688a:	6245      	str	r5, [r0, #36]	; 0x24
 801688c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016890 <pmu_backup_ldo_config>:
 8016890:	4b04      	ldr	r3, [pc, #16]	; (80168a4 <pmu_backup_ldo_config+0x14>)
 8016892:	685a      	ldr	r2, [r3, #4]
 8016894:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8016898:	605a      	str	r2, [r3, #4]
 801689a:	685a      	ldr	r2, [r3, #4]
 801689c:	4310      	orrs	r0, r2
 801689e:	6058      	str	r0, [r3, #4]
 80168a0:	4770      	bx	lr
 80168a2:	bf00      	nop
 80168a4:	40007000 	andmi	r7, r0, r0

080168a8 <pmu_backup_write_enable>:
 80168a8:	4a02      	ldr	r2, [pc, #8]	; (80168b4 <pmu_backup_write_enable+0xc>)
 80168aa:	6813      	ldr	r3, [r2, #0]
 80168ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80168b0:	6013      	str	r3, [r2, #0]
 80168b2:	4770      	bx	lr
 80168b4:	40007000 	andmi	r7, r0, r0

080168b8 <rcu_periph_clock_enable>:
 80168b8:	0983      	lsrs	r3, r0, #6
 80168ba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80168be:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80168c2:	f000 001f 	and.w	r0, r0, #31
 80168c6:	6819      	ldr	r1, [r3, #0]
 80168c8:	2201      	movs	r2, #1
 80168ca:	4082      	lsls	r2, r0
 80168cc:	430a      	orrs	r2, r1
 80168ce:	601a      	str	r2, [r3, #0]
 80168d0:	4770      	bx	lr

080168d2 <rcu_periph_clock_disable>:
 80168d2:	0983      	lsrs	r3, r0, #6
 80168d4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80168d8:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80168dc:	f000 001f 	and.w	r0, r0, #31
 80168e0:	681a      	ldr	r2, [r3, #0]
 80168e2:	2101      	movs	r1, #1
 80168e4:	4081      	lsls	r1, r0
 80168e6:	ea22 0201 	bic.w	r2, r2, r1
 80168ea:	601a      	str	r2, [r3, #0]
 80168ec:	4770      	bx	lr

080168ee <rcu_periph_reset_enable>:
 80168ee:	f7ff bfe3 	b.w	80168b8 <rcu_periph_clock_enable>

080168f2 <rcu_periph_reset_disable>:
 80168f2:	f7ff bfee 	b.w	80168d2 <rcu_periph_clock_disable>
	...

080168f8 <rcu_ckout0_config>:
 80168f8:	4a04      	ldr	r2, [pc, #16]	; (801690c <rcu_ckout0_config+0x14>)
 80168fa:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 80168fe:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 8016902:	4319      	orrs	r1, r3
 8016904:	4308      	orrs	r0, r1
 8016906:	f8c2 0808 	str.w	r0, [r2, #2056]	; 0x808
 801690a:	4770      	bx	lr
 801690c:	40023000 	andmi	r3, r2, r0

08016910 <rcu_timer_clock_prescaler_config>:
 8016910:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 8016914:	4298      	cmp	r0, r3
 8016916:	4b05      	ldr	r3, [pc, #20]	; (801692c <rcu_timer_clock_prescaler_config+0x1c>)
 8016918:	f8d3 288c 	ldr.w	r2, [r3, #2188]	; 0x88c
 801691c:	bf0c      	ite	eq
 801691e:	f022 7280 	biceq.w	r2, r2, #16777216	; 0x1000000
 8016922:	4302      	orrne	r2, r0
 8016924:	f8c3 288c 	str.w	r2, [r3, #2188]	; 0x88c
 8016928:	4770      	bx	lr
 801692a:	bf00      	nop
 801692c:	40023000 	andmi	r3, r2, r0

08016930 <rcu_clock_freq_get>:
 8016930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016932:	4b35      	ldr	r3, [pc, #212]	; (8016a08 <rcu_clock_freq_get+0xd8>)
 8016934:	b089      	sub	sp, #36	; 0x24
 8016936:	4604      	mov	r4, r0
 8016938:	ad04      	add	r5, sp, #16
 801693a:	f103 0610 	add.w	r6, r3, #16
 801693e:	461f      	mov	r7, r3
 8016940:	6818      	ldr	r0, [r3, #0]
 8016942:	6859      	ldr	r1, [r3, #4]
 8016944:	462a      	mov	r2, r5
 8016946:	c203      	stmia	r2!, {r0, r1}
 8016948:	3308      	adds	r3, #8
 801694a:	42b3      	cmp	r3, r6
 801694c:	4615      	mov	r5, r2
 801694e:	d1f7      	bne.n	8016940 <rcu_clock_freq_get+0x10>
 8016950:	6938      	ldr	r0, [r7, #16]
 8016952:	6871      	ldr	r1, [r6, #4]
 8016954:	4a2d      	ldr	r2, [pc, #180]	; (8016a0c <rcu_clock_freq_get+0xdc>)
 8016956:	466b      	mov	r3, sp
 8016958:	c303      	stmia	r3!, {r0, r1}
 801695a:	c303      	stmia	r3!, {r0, r1}
 801695c:	f8d2 3808 	ldr.w	r3, [r2, #2056]	; 0x808
 8016960:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016964:	2b01      	cmp	r3, #1
 8016966:	d03f      	beq.n	80169e8 <rcu_clock_freq_get+0xb8>
 8016968:	2b02      	cmp	r3, #2
 801696a:	d13f      	bne.n	80169ec <rcu_clock_freq_get+0xbc>
 801696c:	f8d2 0804 	ldr.w	r0, [r2, #2052]	; 0x804
 8016970:	f8d2 1804 	ldr.w	r1, [r2, #2052]	; 0x804
 8016974:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8016978:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 801697c:	4d24      	ldr	r5, [pc, #144]	; (8016a10 <rcu_clock_freq_get+0xe0>)
 801697e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8016982:	f412 0f80 	tst.w	r2, #4194304	; 0x400000
 8016986:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801698a:	f103 0301 	add.w	r3, r3, #1
 801698e:	4a21      	ldr	r2, [pc, #132]	; (8016a14 <rcu_clock_freq_get+0xe4>)
 8016990:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8016994:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016998:	bf08      	it	eq
 801699a:	462a      	moveq	r2, r5
 801699c:	fbb2 f2f0 	udiv	r2, r2, r0
 80169a0:	434a      	muls	r2, r1
 80169a2:	fbb2 f0f3 	udiv	r0, r2, r3
 80169a6:	4919      	ldr	r1, [pc, #100]	; (8016a0c <rcu_clock_freq_get+0xdc>)
 80169a8:	f8d1 3808 	ldr.w	r3, [r1, #2056]	; 0x808
 80169ac:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 80169b0:	f3c2 2282 	ubfx	r2, r2, #10, #3
 80169b4:	3220      	adds	r2, #32
 80169b6:	446a      	add	r2, sp
 80169b8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80169bc:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80169c0:	f8d1 2808 	ldr.w	r2, [r1, #2056]	; 0x808
 80169c4:	3320      	adds	r3, #32
 80169c6:	446b      	add	r3, sp
 80169c8:	f3c2 3242 	ubfx	r2, r2, #13, #3
 80169cc:	3220      	adds	r2, #32
 80169ce:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80169d2:	446a      	add	r2, sp
 80169d4:	fa20 f303 	lsr.w	r3, r0, r3
 80169d8:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80169dc:	2c03      	cmp	r4, #3
 80169de:	d810      	bhi.n	8016a02 <rcu_clock_freq_get+0xd2>
 80169e0:	e8df f004 	tbb	[pc, r4]
 80169e4:	0c090607 	stceq	6, cr0, [r9], {7}
 80169e8:	480a      	ldr	r0, [pc, #40]	; (8016a14 <rcu_clock_freq_get+0xe4>)
 80169ea:	e7dc      	b.n	80169a6 <rcu_clock_freq_get+0x76>
 80169ec:	4808      	ldr	r0, [pc, #32]	; (8016a10 <rcu_clock_freq_get+0xe0>)
 80169ee:	e7da      	b.n	80169a6 <rcu_clock_freq_get+0x76>
 80169f0:	4618      	mov	r0, r3
 80169f2:	b009      	add	sp, #36	; 0x24
 80169f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80169f6:	fa23 f005 	lsr.w	r0, r3, r5
 80169fa:	e7fa      	b.n	80169f2 <rcu_clock_freq_get+0xc2>
 80169fc:	fa23 f002 	lsr.w	r0, r3, r2
 8016a00:	e7f7      	b.n	80169f2 <rcu_clock_freq_get+0xc2>
 8016a02:	2000      	movs	r0, #0
 8016a04:	e7f5      	b.n	80169f2 <rcu_clock_freq_get+0xc2>
 8016a06:	bf00      	nop
 8016a08:	08018890 	stmdaeq	r1, {r4, r7, fp, pc}
 8016a0c:	40023000 	andmi	r3, r2, r0
 8016a10:	00f42400 	rscseq	r2, r4, r0, lsl #8
 8016a14:	017d7840 	cmneq	sp, r0, asr #16

08016a18 <timer_deinit>:
 8016a18:	b508      	push	{r3, lr}
 8016a1a:	4b4e      	ldr	r3, [pc, #312]	; (8016b54 <timer_deinit+0x13c>)
 8016a1c:	4298      	cmp	r0, r3
 8016a1e:	f000 8092 	beq.w	8016b46 <timer_deinit+0x12e>
 8016a22:	d822      	bhi.n	8016a6a <timer_deinit+0x52>
 8016a24:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8016a28:	4298      	cmp	r0, r3
 8016a2a:	d062      	beq.n	8016af2 <timer_deinit+0xda>
 8016a2c:	d80b      	bhi.n	8016a46 <timer_deinit+0x2e>
 8016a2e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016a32:	4298      	cmp	r0, r3
 8016a34:	d04f      	beq.n	8016ad6 <timer_deinit+0xbe>
 8016a36:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016a3a:	4298      	cmp	r0, r3
 8016a3c:	d052      	beq.n	8016ae4 <timer_deinit+0xcc>
 8016a3e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8016a42:	d041      	beq.n	8016ac8 <timer_deinit+0xb0>
 8016a44:	bd08      	pop	{r3, pc}
 8016a46:	4b44      	ldr	r3, [pc, #272]	; (8016b58 <timer_deinit+0x140>)
 8016a48:	4298      	cmp	r0, r3
 8016a4a:	d059      	beq.n	8016b00 <timer_deinit+0xe8>
 8016a4c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016a50:	4298      	cmp	r0, r3
 8016a52:	d071      	beq.n	8016b38 <timer_deinit+0x120>
 8016a54:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016a58:	4298      	cmp	r0, r3
 8016a5a:	d1f3      	bne.n	8016a44 <timer_deinit+0x2c>
 8016a5c:	f640 0004 	movw	r0, #2052	; 0x804
 8016a60:	f7ff ff45 	bl	80168ee <rcu_periph_reset_enable>
 8016a64:	f640 0004 	movw	r0, #2052	; 0x804
 8016a68:	e02a      	b.n	8016ac0 <timer_deinit+0xa8>
 8016a6a:	4b3c      	ldr	r3, [pc, #240]	; (8016b5c <timer_deinit+0x144>)
 8016a6c:	4298      	cmp	r0, r3
 8016a6e:	d055      	beq.n	8016b1c <timer_deinit+0x104>
 8016a70:	d812      	bhi.n	8016a98 <timer_deinit+0x80>
 8016a72:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 8016a76:	4298      	cmp	r0, r3
 8016a78:	d01c      	beq.n	8016ab4 <timer_deinit+0x9c>
 8016a7a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016a7e:	4298      	cmp	r0, r3
 8016a80:	d045      	beq.n	8016b0e <timer_deinit+0xf6>
 8016a82:	f5a3 4364 	sub.w	r3, r3, #58368	; 0xe400
 8016a86:	4298      	cmp	r0, r3
 8016a88:	d1dc      	bne.n	8016a44 <timer_deinit+0x2c>
 8016a8a:	f640 0008 	movw	r0, #2056	; 0x808
 8016a8e:	f7ff ff2e 	bl	80168ee <rcu_periph_reset_enable>
 8016a92:	f640 0008 	movw	r0, #2056	; 0x808
 8016a96:	e013      	b.n	8016ac0 <timer_deinit+0xa8>
 8016a98:	4b31      	ldr	r3, [pc, #196]	; (8016b60 <timer_deinit+0x148>)
 8016a9a:	4298      	cmp	r0, r3
 8016a9c:	d045      	beq.n	8016b2a <timer_deinit+0x112>
 8016a9e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016aa2:	4298      	cmp	r0, r3
 8016aa4:	d1ce      	bne.n	8016a44 <timer_deinit+0x2c>
 8016aa6:	f640 1012 	movw	r0, #2322	; 0x912
 8016aaa:	f7ff ff20 	bl	80168ee <rcu_periph_reset_enable>
 8016aae:	f640 1012 	movw	r0, #2322	; 0x912
 8016ab2:	e005      	b.n	8016ac0 <timer_deinit+0xa8>
 8016ab4:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8016ab8:	f7ff ff19 	bl	80168ee <rcu_periph_reset_enable>
 8016abc:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8016ac0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016ac4:	f7ff bf15 	b.w	80168f2 <rcu_periph_reset_disable>
 8016ac8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8016acc:	f7ff ff0f 	bl	80168ee <rcu_periph_reset_enable>
 8016ad0:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8016ad4:	e7f4      	b.n	8016ac0 <timer_deinit+0xa8>
 8016ad6:	f640 0001 	movw	r0, #2049	; 0x801
 8016ada:	f7ff ff08 	bl	80168ee <rcu_periph_reset_enable>
 8016ade:	f640 0001 	movw	r0, #2049	; 0x801
 8016ae2:	e7ed      	b.n	8016ac0 <timer_deinit+0xa8>
 8016ae4:	f640 0002 	movw	r0, #2050	; 0x802
 8016ae8:	f7ff ff01 	bl	80168ee <rcu_periph_reset_enable>
 8016aec:	f640 0002 	movw	r0, #2050	; 0x802
 8016af0:	e7e6      	b.n	8016ac0 <timer_deinit+0xa8>
 8016af2:	f640 0003 	movw	r0, #2051	; 0x803
 8016af6:	f7ff fefa 	bl	80168ee <rcu_periph_reset_enable>
 8016afa:	f640 0003 	movw	r0, #2051	; 0x803
 8016afe:	e7df      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b00:	f640 0005 	movw	r0, #2053	; 0x805
 8016b04:	f7ff fef3 	bl	80168ee <rcu_periph_reset_enable>
 8016b08:	f640 0005 	movw	r0, #2053	; 0x805
 8016b0c:	e7d8      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b0e:	f640 1001 	movw	r0, #2305	; 0x901
 8016b12:	f7ff feec 	bl	80168ee <rcu_periph_reset_enable>
 8016b16:	f640 1001 	movw	r0, #2305	; 0x901
 8016b1a:	e7d1      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b1c:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8016b20:	f7ff fee5 	bl	80168ee <rcu_periph_reset_enable>
 8016b24:	f44f 6011 	mov.w	r0, #2320	; 0x910
 8016b28:	e7ca      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b2a:	f640 1011 	movw	r0, #2321	; 0x911
 8016b2e:	f7ff fede 	bl	80168ee <rcu_periph_reset_enable>
 8016b32:	f640 1011 	movw	r0, #2321	; 0x911
 8016b36:	e7c3      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b38:	f640 0006 	movw	r0, #2054	; 0x806
 8016b3c:	f7ff fed7 	bl	80168ee <rcu_periph_reset_enable>
 8016b40:	f640 0006 	movw	r0, #2054	; 0x806
 8016b44:	e7bc      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b46:	f640 0007 	movw	r0, #2055	; 0x807
 8016b4a:	f7ff fed0 	bl	80168ee <rcu_periph_reset_enable>
 8016b4e:	f640 0007 	movw	r0, #2055	; 0x807
 8016b52:	e7b5      	b.n	8016ac0 <timer_deinit+0xa8>
 8016b54:	40001c00 	andmi	r1, r0, r0, lsl #24
 8016b58:	40001400 	andmi	r1, r0, r0, lsl #8
 8016b5c:	40014000 	andmi	r4, r1, r0
 8016b60:	40014400 	andmi	r4, r1, r0, lsl #8

08016b64 <timer_init>:
 8016b64:	880b      	ldrh	r3, [r1, #0]
 8016b66:	6283      	str	r3, [r0, #40]	; 0x28
 8016b68:	4b1a      	ldr	r3, [pc, #104]	; (8016bd4 <timer_init+0x70>)
 8016b6a:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8016b6e:	429a      	cmp	r2, r3
 8016b70:	d004      	beq.n	8016b7c <timer_init+0x18>
 8016b72:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8016b76:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8016b7a:	d10b      	bne.n	8016b94 <timer_init+0x30>
 8016b7c:	6803      	ldr	r3, [r0, #0]
 8016b7e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016b82:	6003      	str	r3, [r0, #0]
 8016b84:	6802      	ldr	r2, [r0, #0]
 8016b86:	884b      	ldrh	r3, [r1, #2]
 8016b88:	4313      	orrs	r3, r2
 8016b8a:	6003      	str	r3, [r0, #0]
 8016b8c:	6802      	ldr	r2, [r0, #0]
 8016b8e:	888b      	ldrh	r3, [r1, #4]
 8016b90:	4313      	orrs	r3, r2
 8016b92:	6003      	str	r3, [r0, #0]
 8016b94:	688b      	ldr	r3, [r1, #8]
 8016b96:	62c3      	str	r3, [r0, #44]	; 0x2c
 8016b98:	4b0f      	ldr	r3, [pc, #60]	; (8016bd8 <timer_init+0x74>)
 8016b9a:	4298      	cmp	r0, r3
 8016b9c:	d003      	beq.n	8016ba6 <timer_init+0x42>
 8016b9e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016ba2:	4298      	cmp	r0, r3
 8016ba4:	d104      	bne.n	8016bb0 <timer_init+0x4c>
 8016ba6:	6943      	ldr	r3, [r0, #20]
 8016ba8:	f043 0301 	orr.w	r3, r3, #1
 8016bac:	6143      	str	r3, [r0, #20]
 8016bae:	4770      	bx	lr
 8016bb0:	6803      	ldr	r3, [r0, #0]
 8016bb2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016bb6:	6003      	str	r3, [r0, #0]
 8016bb8:	6802      	ldr	r2, [r0, #0]
 8016bba:	88cb      	ldrh	r3, [r1, #6]
 8016bbc:	4313      	orrs	r3, r2
 8016bbe:	6003      	str	r3, [r0, #0]
 8016bc0:	4b04      	ldr	r3, [pc, #16]	; (8016bd4 <timer_init+0x70>)
 8016bc2:	4298      	cmp	r0, r3
 8016bc4:	d002      	beq.n	8016bcc <timer_init+0x68>
 8016bc6:	4b05      	ldr	r3, [pc, #20]	; (8016bdc <timer_init+0x78>)
 8016bc8:	4298      	cmp	r0, r3
 8016bca:	d1ec      	bne.n	8016ba6 <timer_init+0x42>
 8016bcc:	7b0b      	ldrb	r3, [r1, #12]
 8016bce:	6303      	str	r3, [r0, #48]	; 0x30
 8016bd0:	e7e9      	b.n	8016ba6 <timer_init+0x42>
 8016bd2:	bf00      	nop
 8016bd4:	40010000 	andmi	r0, r1, r0
 8016bd8:	40001000 	andmi	r1, r0, r0
 8016bdc:	40010400 	andmi	r0, r1, r0, lsl #8

08016be0 <timer_enable>:
 8016be0:	6803      	ldr	r3, [r0, #0]
 8016be2:	f043 0301 	orr.w	r3, r3, #1
 8016be6:	6003      	str	r3, [r0, #0]
 8016be8:	4770      	bx	lr

08016bea <timer_interrupt_enable>:
 8016bea:	68c3      	ldr	r3, [r0, #12]
 8016bec:	4319      	orrs	r1, r3
 8016bee:	60c1      	str	r1, [r0, #12]
 8016bf0:	4770      	bx	lr

08016bf2 <timer_interrupt_flag_clear>:
 8016bf2:	43c9      	mvns	r1, r1
 8016bf4:	6101      	str	r1, [r0, #16]
 8016bf6:	4770      	bx	lr

08016bf8 <timer_flag_clear>:
 8016bf8:	43c9      	mvns	r1, r1
 8016bfa:	6101      	str	r1, [r0, #16]
 8016bfc:	4770      	bx	lr

08016bfe <timer_dma_enable>:
 8016bfe:	68c3      	ldr	r3, [r0, #12]
 8016c00:	4319      	orrs	r1, r3
 8016c02:	60c1      	str	r1, [r0, #12]
 8016c04:	4770      	bx	lr
	...

08016c08 <timer_channel_output_config>:
 8016c08:	2903      	cmp	r1, #3
 8016c0a:	d83e      	bhi.n	8016c8a <timer_channel_output_config+0x82>
 8016c0c:	e8df f011 	tbh	[pc, r1, lsl #1]
 8016c10:	003e0004 	eorseq	r0, lr, r4
 8016c14:	00bc007d 	adcseq	r0, ip, sp, ror r0
 8016c18:	6a03      	ldr	r3, [r0, #32]
 8016c1a:	f023 0301 	bic.w	r3, r3, #1
 8016c1e:	6203      	str	r3, [r0, #32]
 8016c20:	6983      	ldr	r3, [r0, #24]
 8016c22:	f023 0303 	bic.w	r3, r3, #3
 8016c26:	6183      	str	r3, [r0, #24]
 8016c28:	6a01      	ldr	r1, [r0, #32]
 8016c2a:	8813      	ldrh	r3, [r2, #0]
 8016c2c:	430b      	orrs	r3, r1
 8016c2e:	6203      	str	r3, [r0, #32]
 8016c30:	6a03      	ldr	r3, [r0, #32]
 8016c32:	f023 0302 	bic.w	r3, r3, #2
 8016c36:	6203      	str	r3, [r0, #32]
 8016c38:	6a01      	ldr	r1, [r0, #32]
 8016c3a:	8893      	ldrh	r3, [r2, #4]
 8016c3c:	430b      	orrs	r3, r1
 8016c3e:	6203      	str	r3, [r0, #32]
 8016c40:	4b64      	ldr	r3, [pc, #400]	; (8016dd4 <timer_channel_output_config+0x1cc>)
 8016c42:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016c46:	4299      	cmp	r1, r3
 8016c48:	d11f      	bne.n	8016c8a <timer_channel_output_config+0x82>
 8016c4a:	6a03      	ldr	r3, [r0, #32]
 8016c4c:	f023 0304 	bic.w	r3, r3, #4
 8016c50:	6203      	str	r3, [r0, #32]
 8016c52:	6a01      	ldr	r1, [r0, #32]
 8016c54:	8853      	ldrh	r3, [r2, #2]
 8016c56:	430b      	orrs	r3, r1
 8016c58:	6203      	str	r3, [r0, #32]
 8016c5a:	6a03      	ldr	r3, [r0, #32]
 8016c5c:	f023 0308 	bic.w	r3, r3, #8
 8016c60:	6203      	str	r3, [r0, #32]
 8016c62:	6a01      	ldr	r1, [r0, #32]
 8016c64:	88d3      	ldrh	r3, [r2, #6]
 8016c66:	430b      	orrs	r3, r1
 8016c68:	6203      	str	r3, [r0, #32]
 8016c6a:	6843      	ldr	r3, [r0, #4]
 8016c6c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016c70:	6043      	str	r3, [r0, #4]
 8016c72:	6841      	ldr	r1, [r0, #4]
 8016c74:	8913      	ldrh	r3, [r2, #8]
 8016c76:	430b      	orrs	r3, r1
 8016c78:	6043      	str	r3, [r0, #4]
 8016c7a:	6843      	ldr	r3, [r0, #4]
 8016c7c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016c80:	6043      	str	r3, [r0, #4]
 8016c82:	6841      	ldr	r1, [r0, #4]
 8016c84:	8953      	ldrh	r3, [r2, #10]
 8016c86:	430b      	orrs	r3, r1
 8016c88:	6043      	str	r3, [r0, #4]
 8016c8a:	4770      	bx	lr
 8016c8c:	6a03      	ldr	r3, [r0, #32]
 8016c8e:	8811      	ldrh	r1, [r2, #0]
 8016c90:	f023 0310 	bic.w	r3, r3, #16
 8016c94:	6203      	str	r3, [r0, #32]
 8016c96:	6983      	ldr	r3, [r0, #24]
 8016c98:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016c9c:	6183      	str	r3, [r0, #24]
 8016c9e:	6a03      	ldr	r3, [r0, #32]
 8016ca0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016ca4:	6203      	str	r3, [r0, #32]
 8016ca6:	6a03      	ldr	r3, [r0, #32]
 8016ca8:	8891      	ldrh	r1, [r2, #4]
 8016caa:	f023 0320 	bic.w	r3, r3, #32
 8016cae:	6203      	str	r3, [r0, #32]
 8016cb0:	6a03      	ldr	r3, [r0, #32]
 8016cb2:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016cb6:	6203      	str	r3, [r0, #32]
 8016cb8:	4b46      	ldr	r3, [pc, #280]	; (8016dd4 <timer_channel_output_config+0x1cc>)
 8016cba:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016cbe:	4299      	cmp	r1, r3
 8016cc0:	d1e3      	bne.n	8016c8a <timer_channel_output_config+0x82>
 8016cc2:	6a03      	ldr	r3, [r0, #32]
 8016cc4:	8851      	ldrh	r1, [r2, #2]
 8016cc6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8016cca:	6203      	str	r3, [r0, #32]
 8016ccc:	6a03      	ldr	r3, [r0, #32]
 8016cce:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016cd2:	6203      	str	r3, [r0, #32]
 8016cd4:	6a03      	ldr	r3, [r0, #32]
 8016cd6:	88d1      	ldrh	r1, [r2, #6]
 8016cd8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016cdc:	6203      	str	r3, [r0, #32]
 8016cde:	6a03      	ldr	r3, [r0, #32]
 8016ce0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016ce4:	6203      	str	r3, [r0, #32]
 8016ce6:	6843      	ldr	r3, [r0, #4]
 8016ce8:	8911      	ldrh	r1, [r2, #8]
 8016cea:	8952      	ldrh	r2, [r2, #10]
 8016cec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8016cf0:	6043      	str	r3, [r0, #4]
 8016cf2:	6843      	ldr	r3, [r0, #4]
 8016cf4:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 8016cf8:	6043      	str	r3, [r0, #4]
 8016cfa:	6843      	ldr	r3, [r0, #4]
 8016cfc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016d00:	6043      	str	r3, [r0, #4]
 8016d02:	6843      	ldr	r3, [r0, #4]
 8016d04:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8016d08:	e7be      	b.n	8016c88 <timer_channel_output_config+0x80>
 8016d0a:	6a03      	ldr	r3, [r0, #32]
 8016d0c:	8811      	ldrh	r1, [r2, #0]
 8016d0e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016d12:	6203      	str	r3, [r0, #32]
 8016d14:	69c3      	ldr	r3, [r0, #28]
 8016d16:	f023 0303 	bic.w	r3, r3, #3
 8016d1a:	61c3      	str	r3, [r0, #28]
 8016d1c:	6a03      	ldr	r3, [r0, #32]
 8016d1e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016d22:	6203      	str	r3, [r0, #32]
 8016d24:	6a03      	ldr	r3, [r0, #32]
 8016d26:	8891      	ldrh	r1, [r2, #4]
 8016d28:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016d2c:	6203      	str	r3, [r0, #32]
 8016d2e:	6a03      	ldr	r3, [r0, #32]
 8016d30:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016d34:	6203      	str	r3, [r0, #32]
 8016d36:	4b27      	ldr	r3, [pc, #156]	; (8016dd4 <timer_channel_output_config+0x1cc>)
 8016d38:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016d3c:	4299      	cmp	r1, r3
 8016d3e:	d1a4      	bne.n	8016c8a <timer_channel_output_config+0x82>
 8016d40:	6a03      	ldr	r3, [r0, #32]
 8016d42:	8851      	ldrh	r1, [r2, #2]
 8016d44:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8016d48:	6203      	str	r3, [r0, #32]
 8016d4a:	6a03      	ldr	r3, [r0, #32]
 8016d4c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016d50:	6203      	str	r3, [r0, #32]
 8016d52:	6a03      	ldr	r3, [r0, #32]
 8016d54:	88d1      	ldrh	r1, [r2, #6]
 8016d56:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016d5a:	6203      	str	r3, [r0, #32]
 8016d5c:	6a03      	ldr	r3, [r0, #32]
 8016d5e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016d62:	6203      	str	r3, [r0, #32]
 8016d64:	6843      	ldr	r3, [r0, #4]
 8016d66:	8911      	ldrh	r1, [r2, #8]
 8016d68:	8952      	ldrh	r2, [r2, #10]
 8016d6a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8016d6e:	6043      	str	r3, [r0, #4]
 8016d70:	6843      	ldr	r3, [r0, #4]
 8016d72:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016d76:	6043      	str	r3, [r0, #4]
 8016d78:	6843      	ldr	r3, [r0, #4]
 8016d7a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8016d7e:	6043      	str	r3, [r0, #4]
 8016d80:	6843      	ldr	r3, [r0, #4]
 8016d82:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8016d86:	e77f      	b.n	8016c88 <timer_channel_output_config+0x80>
 8016d88:	6a03      	ldr	r3, [r0, #32]
 8016d8a:	8811      	ldrh	r1, [r2, #0]
 8016d8c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8016d90:	6203      	str	r3, [r0, #32]
 8016d92:	69c3      	ldr	r3, [r0, #28]
 8016d94:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016d98:	61c3      	str	r3, [r0, #28]
 8016d9a:	6a03      	ldr	r3, [r0, #32]
 8016d9c:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016da0:	6203      	str	r3, [r0, #32]
 8016da2:	6a03      	ldr	r3, [r0, #32]
 8016da4:	8891      	ldrh	r1, [r2, #4]
 8016da6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8016daa:	6203      	str	r3, [r0, #32]
 8016dac:	6a03      	ldr	r3, [r0, #32]
 8016dae:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016db2:	6203      	str	r3, [r0, #32]
 8016db4:	4b07      	ldr	r3, [pc, #28]	; (8016dd4 <timer_channel_output_config+0x1cc>)
 8016db6:	f420 6180 	bic.w	r1, r0, #1024	; 0x400
 8016dba:	4299      	cmp	r1, r3
 8016dbc:	f47f af65 	bne.w	8016c8a <timer_channel_output_config+0x82>
 8016dc0:	6843      	ldr	r3, [r0, #4]
 8016dc2:	8912      	ldrh	r2, [r2, #8]
 8016dc4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016dc8:	6043      	str	r3, [r0, #4]
 8016dca:	6843      	ldr	r3, [r0, #4]
 8016dcc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8016dd0:	e75a      	b.n	8016c88 <timer_channel_output_config+0x80>
 8016dd2:	bf00      	nop
 8016dd4:	40010000 	andmi	r0, r1, r0

08016dd8 <timer_channel_output_mode_config>:
 8016dd8:	2903      	cmp	r1, #3
 8016dda:	d81a      	bhi.n	8016e12 <timer_channel_output_mode_config+0x3a>
 8016ddc:	e8df f001 	tbb	[pc, r1]
 8016de0:	1a120a02 	bne	84995f0 <__exidx_end+0x47d180>
 8016de4:	6983      	ldr	r3, [r0, #24]
 8016de6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016dea:	6183      	str	r3, [r0, #24]
 8016dec:	6983      	ldr	r3, [r0, #24]
 8016dee:	4313      	orrs	r3, r2
 8016df0:	6183      	str	r3, [r0, #24]
 8016df2:	4770      	bx	lr
 8016df4:	6983      	ldr	r3, [r0, #24]
 8016df6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016dfa:	6183      	str	r3, [r0, #24]
 8016dfc:	6983      	ldr	r3, [r0, #24]
 8016dfe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016e02:	e7f5      	b.n	8016df0 <timer_channel_output_mode_config+0x18>
 8016e04:	69c3      	ldr	r3, [r0, #28]
 8016e06:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016e0a:	61c3      	str	r3, [r0, #28]
 8016e0c:	69c3      	ldr	r3, [r0, #28]
 8016e0e:	4313      	orrs	r3, r2
 8016e10:	61c3      	str	r3, [r0, #28]
 8016e12:	4770      	bx	lr
 8016e14:	69c3      	ldr	r3, [r0, #28]
 8016e16:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016e1a:	61c3      	str	r3, [r0, #28]
 8016e1c:	69c3      	ldr	r3, [r0, #28]
 8016e1e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016e22:	e7f5      	b.n	8016e10 <timer_channel_output_mode_config+0x38>

08016e24 <timer_channel_output_pulse_value_config>:
 8016e24:	2903      	cmp	r1, #3
 8016e26:	d80a      	bhi.n	8016e3e <timer_channel_output_pulse_value_config+0x1a>
 8016e28:	e8df f001 	tbb	[pc, r1]
 8016e2c:	08060402 	stmdaeq	r6, {r1, sl}
 8016e30:	6342      	str	r2, [r0, #52]	; 0x34
 8016e32:	4770      	bx	lr
 8016e34:	6382      	str	r2, [r0, #56]	; 0x38
 8016e36:	4770      	bx	lr
 8016e38:	63c2      	str	r2, [r0, #60]	; 0x3c
 8016e3a:	4770      	bx	lr
 8016e3c:	6402      	str	r2, [r0, #64]	; 0x40
 8016e3e:	4770      	bx	lr

08016e40 <timer_channel_output_shadow_config>:
 8016e40:	2903      	cmp	r1, #3
 8016e42:	d81a      	bhi.n	8016e7a <timer_channel_output_shadow_config+0x3a>
 8016e44:	e8df f001 	tbb	[pc, r1]
 8016e48:	1a120a02 	bne	8499658 <__exidx_end+0x47d1e8>
 8016e4c:	6983      	ldr	r3, [r0, #24]
 8016e4e:	f023 0308 	bic.w	r3, r3, #8
 8016e52:	6183      	str	r3, [r0, #24]
 8016e54:	6983      	ldr	r3, [r0, #24]
 8016e56:	4313      	orrs	r3, r2
 8016e58:	6183      	str	r3, [r0, #24]
 8016e5a:	4770      	bx	lr
 8016e5c:	6983      	ldr	r3, [r0, #24]
 8016e5e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016e62:	6183      	str	r3, [r0, #24]
 8016e64:	6983      	ldr	r3, [r0, #24]
 8016e66:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016e6a:	e7f5      	b.n	8016e58 <timer_channel_output_shadow_config+0x18>
 8016e6c:	69c3      	ldr	r3, [r0, #28]
 8016e6e:	f023 0308 	bic.w	r3, r3, #8
 8016e72:	61c3      	str	r3, [r0, #28]
 8016e74:	69c3      	ldr	r3, [r0, #28]
 8016e76:	4313      	orrs	r3, r2
 8016e78:	61c3      	str	r3, [r0, #28]
 8016e7a:	4770      	bx	lr
 8016e7c:	69c3      	ldr	r3, [r0, #28]
 8016e7e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016e82:	61c3      	str	r3, [r0, #28]
 8016e84:	69c3      	ldr	r3, [r0, #28]
 8016e86:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016e8a:	e7f5      	b.n	8016e78 <timer_channel_output_shadow_config+0x38>

08016e8c <timer_input_trigger_source_select>:
 8016e8c:	6883      	ldr	r3, [r0, #8]
 8016e8e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016e92:	6083      	str	r3, [r0, #8]
 8016e94:	6883      	ldr	r3, [r0, #8]
 8016e96:	4319      	orrs	r1, r3
 8016e98:	6081      	str	r1, [r0, #8]
 8016e9a:	4770      	bx	lr

08016e9c <timer_master_output_trigger_source_select>:
 8016e9c:	6843      	ldr	r3, [r0, #4]
 8016e9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016ea2:	6043      	str	r3, [r0, #4]
 8016ea4:	6843      	ldr	r3, [r0, #4]
 8016ea6:	4319      	orrs	r1, r3
 8016ea8:	6041      	str	r1, [r0, #4]
 8016eaa:	4770      	bx	lr

08016eac <timer_slave_mode_select>:
 8016eac:	6883      	ldr	r3, [r0, #8]
 8016eae:	f023 0307 	bic.w	r3, r3, #7
 8016eb2:	6083      	str	r3, [r0, #8]
 8016eb4:	6883      	ldr	r3, [r0, #8]
 8016eb6:	4319      	orrs	r1, r3
 8016eb8:	6081      	str	r1, [r0, #8]
 8016eba:	4770      	bx	lr

08016ebc <timer_master_slave_mode_config>:
 8016ebc:	b921      	cbnz	r1, 8016ec8 <timer_master_slave_mode_config+0xc>
 8016ebe:	6883      	ldr	r3, [r0, #8]
 8016ec0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016ec4:	6083      	str	r3, [r0, #8]
 8016ec6:	4770      	bx	lr
 8016ec8:	2901      	cmp	r1, #1
 8016eca:	d1fc      	bne.n	8016ec6 <timer_master_slave_mode_config+0xa>
 8016ecc:	6883      	ldr	r3, [r0, #8]
 8016ece:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016ed2:	e7f7      	b.n	8016ec4 <timer_master_slave_mode_config+0x8>

08016ed4 <usart_deinit>:
 8016ed4:	b508      	push	{r3, lr}
 8016ed6:	4b2d      	ldr	r3, [pc, #180]	; (8016f8c <usart_deinit+0xb8>)
 8016ed8:	4298      	cmp	r0, r3
 8016eda:	d050      	beq.n	8016f7e <usart_deinit+0xaa>
 8016edc:	d817      	bhi.n	8016f0e <usart_deinit+0x3a>
 8016ede:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016ee2:	4298      	cmp	r0, r3
 8016ee4:	d044      	beq.n	8016f70 <usart_deinit+0x9c>
 8016ee6:	d808      	bhi.n	8016efa <usart_deinit+0x26>
 8016ee8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016eec:	4298      	cmp	r0, r3
 8016eee:	d02a      	beq.n	8016f46 <usart_deinit+0x72>
 8016ef0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016ef4:	4298      	cmp	r0, r3
 8016ef6:	d02d      	beq.n	8016f54 <usart_deinit+0x80>
 8016ef8:	bd08      	pop	{r3, pc}
 8016efa:	4b25      	ldr	r3, [pc, #148]	; (8016f90 <usart_deinit+0xbc>)
 8016efc:	4298      	cmp	r0, r3
 8016efe:	d1fb      	bne.n	8016ef8 <usart_deinit+0x24>
 8016f00:	f640 0014 	movw	r0, #2068	; 0x814
 8016f04:	f7ff fcf3 	bl	80168ee <rcu_periph_reset_enable>
 8016f08:	f640 0014 	movw	r0, #2068	; 0x814
 8016f0c:	e017      	b.n	8016f3e <usart_deinit+0x6a>
 8016f0e:	4b21      	ldr	r3, [pc, #132]	; (8016f94 <usart_deinit+0xc0>)
 8016f10:	4298      	cmp	r0, r3
 8016f12:	d00e      	beq.n	8016f32 <usart_deinit+0x5e>
 8016f14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016f18:	4298      	cmp	r0, r3
 8016f1a:	d022      	beq.n	8016f62 <usart_deinit+0x8e>
 8016f1c:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8016f20:	4298      	cmp	r0, r3
 8016f22:	d1e9      	bne.n	8016ef8 <usart_deinit+0x24>
 8016f24:	f640 001f 	movw	r0, #2079	; 0x81f
 8016f28:	f7ff fce1 	bl	80168ee <rcu_periph_reset_enable>
 8016f2c:	f640 001f 	movw	r0, #2079	; 0x81f
 8016f30:	e005      	b.n	8016f3e <usart_deinit+0x6a>
 8016f32:	f640 1004 	movw	r0, #2308	; 0x904
 8016f36:	f7ff fcda 	bl	80168ee <rcu_periph_reset_enable>
 8016f3a:	f640 1004 	movw	r0, #2308	; 0x904
 8016f3e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016f42:	f7ff bcd6 	b.w	80168f2 <rcu_periph_reset_disable>
 8016f46:	f640 0011 	movw	r0, #2065	; 0x811
 8016f4a:	f7ff fcd0 	bl	80168ee <rcu_periph_reset_enable>
 8016f4e:	f640 0011 	movw	r0, #2065	; 0x811
 8016f52:	e7f4      	b.n	8016f3e <usart_deinit+0x6a>
 8016f54:	f640 0012 	movw	r0, #2066	; 0x812
 8016f58:	f7ff fcc9 	bl	80168ee <rcu_periph_reset_enable>
 8016f5c:	f640 0012 	movw	r0, #2066	; 0x812
 8016f60:	e7ed      	b.n	8016f3e <usart_deinit+0x6a>
 8016f62:	f640 1005 	movw	r0, #2309	; 0x905
 8016f66:	f7ff fcc2 	bl	80168ee <rcu_periph_reset_enable>
 8016f6a:	f640 1005 	movw	r0, #2309	; 0x905
 8016f6e:	e7e6      	b.n	8016f3e <usart_deinit+0x6a>
 8016f70:	f640 0013 	movw	r0, #2067	; 0x813
 8016f74:	f7ff fcbb 	bl	80168ee <rcu_periph_reset_enable>
 8016f78:	f640 0013 	movw	r0, #2067	; 0x813
 8016f7c:	e7df      	b.n	8016f3e <usart_deinit+0x6a>
 8016f7e:	f640 001e 	movw	r0, #2078	; 0x81e
 8016f82:	f7ff fcb4 	bl	80168ee <rcu_periph_reset_enable>
 8016f86:	f640 001e 	movw	r0, #2078	; 0x81e
 8016f8a:	e7d8      	b.n	8016f3e <usart_deinit+0x6a>
 8016f8c:	40007800 	andmi	r7, r0, r0, lsl #16
 8016f90:	40005000 	andmi	r5, r0, r0
 8016f94:	40011000 	andmi	r1, r1, r0

08016f98 <usart_baudrate_set>:
 8016f98:	b538      	push	{r3, r4, r5, lr}
 8016f9a:	4b1e      	ldr	r3, [pc, #120]	; (8017014 <usart_baudrate_set+0x7c>)
 8016f9c:	4298      	cmp	r0, r3
 8016f9e:	4604      	mov	r4, r0
 8016fa0:	460d      	mov	r5, r1
 8016fa2:	d02e      	beq.n	8017002 <usart_baudrate_set+0x6a>
 8016fa4:	d821      	bhi.n	8016fea <usart_baudrate_set+0x52>
 8016fa6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016faa:	4298      	cmp	r0, r3
 8016fac:	d029      	beq.n	8017002 <usart_baudrate_set+0x6a>
 8016fae:	d81a      	bhi.n	8016fe6 <usart_baudrate_set+0x4e>
 8016fb0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016fb4:	4298      	cmp	r0, r3
 8016fb6:	d024      	beq.n	8017002 <usart_baudrate_set+0x6a>
 8016fb8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016fbc:	429c      	cmp	r4, r3
 8016fbe:	d020      	beq.n	8017002 <usart_baudrate_set+0x6a>
 8016fc0:	2000      	movs	r0, #0
 8016fc2:	68e2      	ldr	r2, [r4, #12]
 8016fc4:	0412      	lsls	r2, r2, #16
 8016fc6:	ea4f 0355 	mov.w	r3, r5, lsr #1
 8016fca:	d51c      	bpl.n	8017006 <usart_baudrate_set+0x6e>
 8016fcc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8016fd0:	fbb3 f1f5 	udiv	r1, r3, r5
 8016fd4:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8016fd8:	f021 010f 	bic.w	r1, r1, #15
 8016fdc:	0409      	lsls	r1, r1, #16
 8016fde:	0c09      	lsrs	r1, r1, #16
 8016fe0:	430b      	orrs	r3, r1
 8016fe2:	60a3      	str	r3, [r4, #8]
 8016fe4:	bd38      	pop	{r3, r4, r5, pc}
 8016fe6:	4b0c      	ldr	r3, [pc, #48]	; (8017018 <usart_baudrate_set+0x80>)
 8016fe8:	e7e8      	b.n	8016fbc <usart_baudrate_set+0x24>
 8016fea:	4b0c      	ldr	r3, [pc, #48]	; (801701c <usart_baudrate_set+0x84>)
 8016fec:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 8016ff0:	429a      	cmp	r2, r3
 8016ff2:	d002      	beq.n	8016ffa <usart_baudrate_set+0x62>
 8016ff4:	f5a3 4314 	sub.w	r3, r3, #37888	; 0x9400
 8016ff8:	e7e0      	b.n	8016fbc <usart_baudrate_set+0x24>
 8016ffa:	2003      	movs	r0, #3
 8016ffc:	f7ff fc98 	bl	8016930 <rcu_clock_freq_get>
 8017000:	e7df      	b.n	8016fc2 <usart_baudrate_set+0x2a>
 8017002:	2002      	movs	r0, #2
 8017004:	e7fa      	b.n	8016ffc <usart_baudrate_set+0x64>
 8017006:	4403      	add	r3, r0
 8017008:	fbb3 f1f5 	udiv	r1, r3, r5
 801700c:	b289      	uxth	r1, r1
 801700e:	60a1      	str	r1, [r4, #8]
 8017010:	e7e8      	b.n	8016fe4 <usart_baudrate_set+0x4c>
 8017012:	bf00      	nop
 8017014:	40007800 	andmi	r7, r0, r0, lsl #16
 8017018:	40005000 	andmi	r5, r0, r0
 801701c:	40011000 	andmi	r1, r1, r0

08017020 <usart_parity_config>:
 8017020:	68c3      	ldr	r3, [r0, #12]
 8017022:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8017026:	60c3      	str	r3, [r0, #12]
 8017028:	68c3      	ldr	r3, [r0, #12]
 801702a:	4319      	orrs	r1, r3
 801702c:	60c1      	str	r1, [r0, #12]
 801702e:	4770      	bx	lr

08017030 <usart_word_length_set>:
 8017030:	68c3      	ldr	r3, [r0, #12]
 8017032:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8017036:	60c3      	str	r3, [r0, #12]
 8017038:	68c3      	ldr	r3, [r0, #12]
 801703a:	4319      	orrs	r1, r3
 801703c:	60c1      	str	r1, [r0, #12]
 801703e:	4770      	bx	lr

08017040 <usart_stop_bit_set>:
 8017040:	6903      	ldr	r3, [r0, #16]
 8017042:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8017046:	6103      	str	r3, [r0, #16]
 8017048:	6903      	ldr	r3, [r0, #16]
 801704a:	4319      	orrs	r1, r3
 801704c:	6101      	str	r1, [r0, #16]
 801704e:	4770      	bx	lr

08017050 <usart_transmit_config>:
 8017050:	68c3      	ldr	r3, [r0, #12]
 8017052:	f023 0308 	bic.w	r3, r3, #8
 8017056:	4319      	orrs	r1, r3
 8017058:	60c1      	str	r1, [r0, #12]
 801705a:	4770      	bx	lr

0801705c <usart_receive_config>:
 801705c:	68c3      	ldr	r3, [r0, #12]
 801705e:	f023 0304 	bic.w	r3, r3, #4
 8017062:	4319      	orrs	r1, r3
 8017064:	60c1      	str	r1, [r0, #12]
 8017066:	4770      	bx	lr

08017068 <usart_hardware_flow_rts_config>:
 8017068:	6943      	ldr	r3, [r0, #20]
 801706a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801706e:	4319      	orrs	r1, r3
 8017070:	6141      	str	r1, [r0, #20]
 8017072:	4770      	bx	lr

08017074 <usart_hardware_flow_cts_config>:
 8017074:	6943      	ldr	r3, [r0, #20]
 8017076:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801707a:	4319      	orrs	r1, r3
 801707c:	6141      	str	r1, [r0, #20]
 801707e:	4770      	bx	lr

08017080 <usart_dma_transmit_config>:
 8017080:	6943      	ldr	r3, [r0, #20]
 8017082:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017086:	4319      	orrs	r1, r3
 8017088:	6141      	str	r1, [r0, #20]
 801708a:	4770      	bx	lr

0801708c <usart_flag_get>:
 801708c:	098b      	lsrs	r3, r1, #6
 801708e:	f001 011f 	and.w	r1, r1, #31
 8017092:	581a      	ldr	r2, [r3, r0]
 8017094:	2301      	movs	r3, #1
 8017096:	408b      	lsls	r3, r1
 8017098:	4213      	tst	r3, r2
 801709a:	bf14      	ite	ne
 801709c:	2001      	movne	r0, #1
 801709e:	2000      	moveq	r0, #0
 80170a0:	4770      	bx	lr

080170a2 <usart_flag_clear>:
 80170a2:	b510      	push	{r4, lr}
 80170a4:	098c      	lsrs	r4, r1, #6
 80170a6:	2201      	movs	r2, #1
 80170a8:	5823      	ldr	r3, [r4, r0]
 80170aa:	f001 011f 	and.w	r1, r1, #31
 80170ae:	408a      	lsls	r2, r1
 80170b0:	ea23 0302 	bic.w	r3, r3, r2
 80170b4:	5023      	str	r3, [r4, r0]
 80170b6:	bd10      	pop	{r4, pc}

080170b8 <usart_interrupt_enable>:
 80170b8:	098a      	lsrs	r2, r1, #6
 80170ba:	b510      	push	{r4, lr}
 80170bc:	f001 011f 	and.w	r1, r1, #31
 80170c0:	5814      	ldr	r4, [r2, r0]
 80170c2:	2301      	movs	r3, #1
 80170c4:	408b      	lsls	r3, r1
 80170c6:	4323      	orrs	r3, r4
 80170c8:	5013      	str	r3, [r2, r0]
 80170ca:	bd10      	pop	{r4, pc}

080170cc <usart_interrupt_disable>:
 80170cc:	f7ff bfe9 	b.w	80170a2 <usart_flag_clear>

080170d0 <usart_interrupt_flag_clear>:
 80170d0:	b510      	push	{r4, lr}
 80170d2:	0d8c      	lsrs	r4, r1, #22
 80170d4:	2201      	movs	r2, #1
 80170d6:	5823      	ldr	r3, [r4, r0]
 80170d8:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80170dc:	408a      	lsls	r2, r1
 80170de:	ea23 0302 	bic.w	r3, r3, r2
 80170e2:	5023      	str	r3, [r4, r0]
 80170e4:	bd10      	pop	{r4, pc}
	...

080170e8 <emac_eth_recv>:
 80170e8:	b538      	push	{r3, r4, r5, lr}
 80170ea:	4605      	mov	r5, r0
 80170ec:	f001 fa94 	bl	8018618 <enet_rxframe_size_get>
 80170f0:	4604      	mov	r4, r0
 80170f2:	b138      	cbz	r0, 8017104 <emac_eth_recv+0x1c>
 80170f4:	4b05      	ldr	r3, [pc, #20]	; (801710c <emac_eth_recv+0x24>)
 80170f6:	2105      	movs	r1, #5
 80170f8:	6818      	ldr	r0, [r3, #0]
 80170fa:	f001 fa31 	bl	8018560 <enet_desc_information_get>
 80170fe:	6028      	str	r0, [r5, #0]
 8017100:	4620      	mov	r0, r4
 8017102:	bd38      	pop	{r3, r4, r5, pc}
 8017104:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8017108:	e7fb      	b.n	8017102 <emac_eth_recv+0x1a>
 801710a:	bf00      	nop
 801710c:	2000fdcc 	andcs	pc, r0, ip, asr #27

08017110 <emac_free_pkt>:
 8017110:	2100      	movs	r1, #0
 8017112:	4608      	mov	r0, r1
 8017114:	f000 bf40 	b.w	8017f98 <enet_frame_receive>

08017118 <emac_eth_send>:
 8017118:	f000 bf8a 	b.w	8018030 <enet_frame_transmit>

0801711c <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 801711c:	2801      	cmp	r0, #1
 801711e:	bf9c      	itt	ls
 8017120:	4b01      	ldrls	r3, [pc, #4]	; (8017128 <bkp_data_write(bkp_data_register_enum, unsigned short)+0xc>)
 8017122:	f823 1010 	strhls.w	r1, [r3, r0, lsl #1]
 8017126:	4770      	bx	lr
 8017128:	40024010 	andmi	r4, r2, r0, lsl r0

0801712c <bkp_data_read(bkp_data_register_enum)>:
 801712c:	2801      	cmp	r0, #1
 801712e:	bf9d      	ittte	ls
 8017130:	4b02      	ldrls	r3, [pc, #8]	; (801713c <bkp_data_read(bkp_data_register_enum)+0x10>)
 8017132:	f833 0010 	ldrhls.w	r0, [r3, r0, lsl #1]
 8017136:	b280      	uxthls	r0, r0
 8017138:	2000      	movhi	r0, #0
 801713a:	4770      	bx	lr
 801713c:	40024010 	andmi	r4, r2, r0, lsl r0

08017140 <gd32_adc_init()>:
 8017140:	b510      	push	{r4, lr}
 8017142:	f241 1008 	movw	r0, #4360	; 0x1108
 8017146:	4c24      	ldr	r4, [pc, #144]	; (80171d8 <gd32_adc_init()+0x98>)
 8017148:	f7ff fbb6 	bl	80168b8 <rcu_periph_clock_enable>
 801714c:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8017150:	f000 fdc8 	bl	8017ce4 <adc_clock_config>
 8017154:	4620      	mov	r0, r4
 8017156:	2203      	movs	r2, #3
 8017158:	2102      	movs	r1, #2
 801715a:	f000 fe45 	bl	8017de8 <adc_channel_length_config>
 801715e:	4620      	mov	r0, r4
 8017160:	2306      	movs	r3, #6
 8017162:	2210      	movs	r2, #16
 8017164:	2100      	movs	r1, #0
 8017166:	f000 fe5c 	bl	8017e22 <adc_inserted_channel_config>
 801716a:	4620      	mov	r0, r4
 801716c:	2306      	movs	r3, #6
 801716e:	2211      	movs	r2, #17
 8017170:	2101      	movs	r1, #1
 8017172:	f000 fe56 	bl	8017e22 <adc_inserted_channel_config>
 8017176:	2306      	movs	r3, #6
 8017178:	4620      	mov	r0, r4
 801717a:	2212      	movs	r2, #18
 801717c:	2102      	movs	r1, #2
 801717e:	f000 fe50 	bl	8017e22 <adc_inserted_channel_config>
 8017182:	2200      	movs	r2, #0
 8017184:	4620      	mov	r0, r4
 8017186:	2102      	movs	r1, #2
 8017188:	f000 fe7a 	bl	8017e80 <adc_external_trigger_config>
 801718c:	4620      	mov	r0, r4
 801718e:	2100      	movs	r1, #0
 8017190:	f000 fde0 	bl	8017d54 <adc_data_alignment_config>
 8017194:	2201      	movs	r2, #1
 8017196:	4620      	mov	r0, r4
 8017198:	f44f 7180 	mov.w	r1, #256	; 0x100
 801719c:	f000 fdb2 	bl	8017d04 <adc_special_function_config>
 80171a0:	2101      	movs	r1, #1
 80171a2:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80171a6:	f000 fdf7 	bl	8017d98 <adc_channel_16_to_18>
 80171aa:	2101      	movs	r1, #1
 80171ac:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80171b0:	f000 fdf2 	bl	8017d98 <adc_channel_16_to_18>
 80171b4:	4620      	mov	r0, r4
 80171b6:	f000 fdd6 	bl	8017d66 <adc_enable>
 80171ba:	2100      	movs	r1, #0
 80171bc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80171c0:	f000 fbc8 	bl	8017954 <udelay(unsigned int, unsigned int)>
 80171c4:	4620      	mov	r0, r4
 80171c6:	f000 fdd6 	bl	8017d76 <adc_calibration_enable>
 80171ca:	4620      	mov	r0, r4
 80171cc:	2102      	movs	r1, #2
 80171ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171d2:	f000 be6b 	b.w	8017eac <adc_software_trigger_enable>
 80171d6:	bf00      	nop
 80171d8:	40012000 	andmi	r2, r1, r0

080171dc <_stop() [clone .isra.0]>:
 80171dc:	b508      	push	{r3, lr}
 80171de:	4806      	ldr	r0, [pc, #24]	; (80171f8 <_stop() [clone .isra.0]+0x1c>)
 80171e0:	f001 fae2 	bl	80187a8 <i2c_stop_on_bus>
 80171e4:	4905      	ldr	r1, [pc, #20]	; (80171fc <_stop() [clone .isra.0]+0x20>)
 80171e6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80171ea:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80171ee:	0592      	lsls	r2, r2, #22
 80171f0:	d501      	bpl.n	80171f6 <_stop() [clone .isra.0]+0x1a>
 80171f2:	3b01      	subs	r3, #1
 80171f4:	d1f9      	bne.n	80171ea <_stop() [clone .isra.0]+0xe>
 80171f6:	bd08      	pop	{r3, pc}
 80171f8:	40005400 	andmi	r5, r0, r0, lsl #8
 80171fc:	40005000 	andmi	r5, r0, r0

08017200 <gd32_i2c_begin>:
 8017200:	b508      	push	{r3, lr}
 8017202:	f241 0015 	movw	r0, #4117	; 0x1015
 8017206:	f7ff fb57 	bl	80168b8 <rcu_periph_clock_enable>
 801720a:	f640 4001 	movw	r0, #3073	; 0xc01
 801720e:	f7ff fb53 	bl	80168b8 <rcu_periph_clock_enable>
 8017212:	f640 4001 	movw	r0, #3073	; 0xc01
 8017216:	f7ff fb4f 	bl	80168b8 <rcu_periph_clock_enable>
 801721a:	481b      	ldr	r0, [pc, #108]	; (8017288 <gd32_i2c_begin+0x88>)
 801721c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8017220:	2104      	movs	r1, #4
 8017222:	f7ff fb08 	bl	8016836 <gpio_af_set>
 8017226:	4818      	ldr	r0, [pc, #96]	; (8017288 <gd32_i2c_begin+0x88>)
 8017228:	f44f 7200 	mov.w	r2, #512	; 0x200
 801722c:	2104      	movs	r1, #4
 801722e:	f7ff fb02 	bl	8016836 <gpio_af_set>
 8017232:	4815      	ldr	r0, [pc, #84]	; (8017288 <gd32_i2c_begin+0x88>)
 8017234:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017238:	2201      	movs	r2, #1
 801723a:	2102      	movs	r1, #2
 801723c:	f7ff fac0 	bl	80167c0 <gpio_mode_set>
 8017240:	4811      	ldr	r0, [pc, #68]	; (8017288 <gd32_i2c_begin+0x88>)
 8017242:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017246:	2202      	movs	r2, #2
 8017248:	2101      	movs	r1, #1
 801724a:	f7ff fad9 	bl	8016800 <gpio_output_options_set>
 801724e:	480e      	ldr	r0, [pc, #56]	; (8017288 <gd32_i2c_begin+0x88>)
 8017250:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017254:	2201      	movs	r2, #1
 8017256:	2102      	movs	r1, #2
 8017258:	f7ff fab2 	bl	80167c0 <gpio_mode_set>
 801725c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017260:	4809      	ldr	r0, [pc, #36]	; (8017288 <gd32_i2c_begin+0x88>)
 8017262:	2202      	movs	r2, #2
 8017264:	2101      	movs	r1, #1
 8017266:	f7ff facb 	bl	8016800 <gpio_output_options_set>
 801726a:	4908      	ldr	r1, [pc, #32]	; (801728c <gd32_i2c_begin+0x8c>)
 801726c:	4808      	ldr	r0, [pc, #32]	; (8017290 <gd32_i2c_begin+0x90>)
 801726e:	2200      	movs	r2, #0
 8017270:	f001 fa1a 	bl	80186a8 <i2c_clock_config>
 8017274:	4806      	ldr	r0, [pc, #24]	; (8017290 <gd32_i2c_begin+0x90>)
 8017276:	f001 fa8d 	bl	8018794 <i2c_enable>
 801727a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801727e:	4804      	ldr	r0, [pc, #16]	; (8017290 <gd32_i2c_begin+0x90>)
 8017280:	2101      	movs	r1, #1
 8017282:	f001 ba6d 	b.w	8018760 <i2c_ack_config>
 8017286:	bf00      	nop
 8017288:	40020400 	andmi	r0, r2, r0, lsl #8
 801728c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8017290:	40005400 	andmi	r5, r0, r0, lsl #8

08017294 <gd32_i2c_set_baudrate>:
 8017294:	4601      	mov	r1, r0
 8017296:	2200      	movs	r2, #0
 8017298:	4801      	ldr	r0, [pc, #4]	; (80172a0 <gd32_i2c_set_baudrate+0xc>)
 801729a:	f001 ba05 	b.w	80186a8 <i2c_clock_config>
 801729e:	bf00      	nop
 80172a0:	40005400 	andmi	r5, r0, r0, lsl #8

080172a4 <gd32_i2c_set_address>:
 80172a4:	4b01      	ldr	r3, [pc, #4]	; (80172ac <gd32_i2c_set_address+0x8>)
 80172a6:	0040      	lsls	r0, r0, #1
 80172a8:	7018      	strb	r0, [r3, #0]
 80172aa:	4770      	bx	lr
 80172ac:	2000fdc0 	andcs	pc, r0, r0, asr #27

080172b0 <gd32_i2c_write>:
 80172b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80172b2:	4e30      	ldr	r6, [pc, #192]	; (8017374 <gd32_i2c_write+0xc4>)
 80172b4:	4604      	mov	r4, r0
 80172b6:	460f      	mov	r7, r1
 80172b8:	f640 75ff 	movw	r5, #4095	; 0xfff
 80172bc:	f240 6101 	movw	r1, #1537	; 0x601
 80172c0:	4630      	mov	r0, r6
 80172c2:	f001 fa7b 	bl	80187bc <i2c_flag_get>
 80172c6:	b9b0      	cbnz	r0, 80172f6 <gd32_i2c_write+0x46>
 80172c8:	482a      	ldr	r0, [pc, #168]	; (8017374 <gd32_i2c_write+0xc4>)
 80172ca:	4e2a      	ldr	r6, [pc, #168]	; (8017374 <gd32_i2c_write+0xc4>)
 80172cc:	f001 fa67 	bl	801879e <i2c_start_on_bus>
 80172d0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80172d4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80172d8:	4630      	mov	r0, r6
 80172da:	f001 fa6f 	bl	80187bc <i2c_flag_get>
 80172de:	b190      	cbz	r0, 8017306 <gd32_i2c_write+0x56>
 80172e0:	4b25      	ldr	r3, [pc, #148]	; (8017378 <gd32_i2c_write+0xc8>)
 80172e2:	4824      	ldr	r0, [pc, #144]	; (8017374 <gd32_i2c_write+0xc4>)
 80172e4:	7819      	ldrb	r1, [r3, #0]
 80172e6:	4e23      	ldr	r6, [pc, #140]	; (8017374 <gd32_i2c_write+0xc4>)
 80172e8:	f06f 0201 	mvn.w	r2, #1
 80172ec:	f001 fa4a 	bl	8018784 <i2c_master_addressing>
 80172f0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80172f4:	e00c      	b.n	8017310 <gd32_i2c_write+0x60>
 80172f6:	3d01      	subs	r5, #1
 80172f8:	d1e0      	bne.n	80172bc <gd32_i2c_write+0xc>
 80172fa:	f7ff ff6f 	bl	80171dc <_stop() [clone .isra.0]>
 80172fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8017302:	4240      	negs	r0, r0
 8017304:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017306:	3d01      	subs	r5, #1
 8017308:	d1e4      	bne.n	80172d4 <gd32_i2c_write+0x24>
 801730a:	e7f6      	b.n	80172fa <gd32_i2c_write+0x4a>
 801730c:	3d01      	subs	r5, #1
 801730e:	d0f4      	beq.n	80172fa <gd32_i2c_write+0x4a>
 8017310:	f240 5101 	movw	r1, #1281	; 0x501
 8017314:	4630      	mov	r0, r6
 8017316:	f001 fa51 	bl	80187bc <i2c_flag_get>
 801731a:	2800      	cmp	r0, #0
 801731c:	d0f6      	beq.n	801730c <gd32_i2c_write+0x5c>
 801731e:	4815      	ldr	r0, [pc, #84]	; (8017374 <gd32_i2c_write+0xc4>)
 8017320:	4e14      	ldr	r6, [pc, #80]	; (8017374 <gd32_i2c_write+0xc4>)
 8017322:	f240 5101 	movw	r1, #1281	; 0x501
 8017326:	f001 fa54 	bl	80187d2 <i2c_flag_clear>
 801732a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801732e:	f240 5107 	movw	r1, #1287	; 0x507
 8017332:	4630      	mov	r0, r6
 8017334:	f001 fa42 	bl	80187bc <i2c_flag_get>
 8017338:	2801      	cmp	r0, #1
 801733a:	d107      	bne.n	801734c <gd32_i2c_write+0x9c>
 801733c:	4e0d      	ldr	r6, [pc, #52]	; (8017374 <gd32_i2c_write+0xc4>)
 801733e:	4427      	add	r7, r4
 8017340:	42a7      	cmp	r7, r4
 8017342:	d106      	bne.n	8017352 <gd32_i2c_write+0xa2>
 8017344:	f7ff ff4a 	bl	80171dc <_stop() [clone .isra.0]>
 8017348:	2000      	movs	r0, #0
 801734a:	e7da      	b.n	8017302 <gd32_i2c_write+0x52>
 801734c:	3d01      	subs	r5, #1
 801734e:	d1ee      	bne.n	801732e <gd32_i2c_write+0x7e>
 8017350:	e7d3      	b.n	80172fa <gd32_i2c_write+0x4a>
 8017352:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017356:	4630      	mov	r0, r6
 8017358:	f001 fa2b 	bl	80187b2 <i2c_data_transmit>
 801735c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8017360:	f240 5102 	movw	r1, #1282	; 0x502
 8017364:	4630      	mov	r0, r6
 8017366:	f001 fa29 	bl	80187bc <i2c_flag_get>
 801736a:	2800      	cmp	r0, #0
 801736c:	d1e8      	bne.n	8017340 <gd32_i2c_write+0x90>
 801736e:	3d01      	subs	r5, #1
 8017370:	d1f6      	bne.n	8017360 <gd32_i2c_write+0xb0>
 8017372:	e7c2      	b.n	80172fa <gd32_i2c_write+0x4a>
 8017374:	40005400 	andmi	r5, r0, r0, lsl #8
 8017378:	2000fdc0 	andcs	pc, r0, r0, asr #27

0801737c <gd32_i2c_read>:
 801737c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017380:	4f4d      	ldr	r7, [pc, #308]	; (80174b8 <gd32_i2c_read+0x13c>)
 8017382:	4680      	mov	r8, r0
 8017384:	460c      	mov	r4, r1
 8017386:	f640 76ff 	movw	r6, #4095	; 0xfff
 801738a:	f240 6101 	movw	r1, #1537	; 0x601
 801738e:	4638      	mov	r0, r7
 8017390:	f001 fa14 	bl	80187bc <i2c_flag_get>
 8017394:	4605      	mov	r5, r0
 8017396:	bb08      	cbnz	r0, 80173dc <gd32_i2c_read+0x60>
 8017398:	2c02      	cmp	r4, #2
 801739a:	d103      	bne.n	80173a4 <gd32_i2c_read+0x28>
 801739c:	4601      	mov	r1, r0
 801739e:	4846      	ldr	r0, [pc, #280]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173a0:	f001 f9e7 	bl	8018772 <i2c_ackpos_config>
 80173a4:	4844      	ldr	r0, [pc, #272]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173a6:	4f44      	ldr	r7, [pc, #272]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173a8:	f001 f9f9 	bl	801879e <i2c_start_on_bus>
 80173ac:	f640 76ff 	movw	r6, #4095	; 0xfff
 80173b0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80173b4:	4638      	mov	r0, r7
 80173b6:	f001 fa01 	bl	80187bc <i2c_flag_get>
 80173ba:	b1a8      	cbz	r0, 80173e8 <gd32_i2c_read+0x6c>
 80173bc:	4b3f      	ldr	r3, [pc, #252]	; (80174bc <gd32_i2c_read+0x140>)
 80173be:	483e      	ldr	r0, [pc, #248]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173c0:	7819      	ldrb	r1, [r3, #0]
 80173c2:	2201      	movs	r2, #1
 80173c4:	f001 f9de 	bl	8018784 <i2c_master_addressing>
 80173c8:	2c02      	cmp	r4, #2
 80173ca:	d803      	bhi.n	80173d4 <gd32_i2c_read+0x58>
 80173cc:	483a      	ldr	r0, [pc, #232]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173ce:	2100      	movs	r1, #0
 80173d0:	f001 f9c6 	bl	8018760 <i2c_ack_config>
 80173d4:	4f38      	ldr	r7, [pc, #224]	; (80174b8 <gd32_i2c_read+0x13c>)
 80173d6:	f640 76ff 	movw	r6, #4095	; 0xfff
 80173da:	e00a      	b.n	80173f2 <gd32_i2c_read+0x76>
 80173dc:	3e01      	subs	r6, #1
 80173de:	d1d4      	bne.n	801738a <gd32_i2c_read+0xe>
 80173e0:	f7ff fefc 	bl	80171dc <_stop() [clone .isra.0]>
 80173e4:	2504      	movs	r5, #4
 80173e6:	e04d      	b.n	8017484 <gd32_i2c_read+0x108>
 80173e8:	3e01      	subs	r6, #1
 80173ea:	d1e1      	bne.n	80173b0 <gd32_i2c_read+0x34>
 80173ec:	e7f8      	b.n	80173e0 <gd32_i2c_read+0x64>
 80173ee:	3e01      	subs	r6, #1
 80173f0:	d0f6      	beq.n	80173e0 <gd32_i2c_read+0x64>
 80173f2:	f240 5101 	movw	r1, #1281	; 0x501
 80173f6:	4638      	mov	r0, r7
 80173f8:	f001 f9e0 	bl	80187bc <i2c_flag_get>
 80173fc:	2800      	cmp	r0, #0
 80173fe:	d0f6      	beq.n	80173ee <gd32_i2c_read+0x72>
 8017400:	482d      	ldr	r0, [pc, #180]	; (80174b8 <gd32_i2c_read+0x13c>)
 8017402:	f240 5101 	movw	r1, #1281	; 0x501
 8017406:	f001 f9e4 	bl	80187d2 <i2c_flag_clear>
 801740a:	2c01      	cmp	r4, #1
 801740c:	d102      	bne.n	8017414 <gd32_i2c_read+0x98>
 801740e:	482a      	ldr	r0, [pc, #168]	; (80174b8 <gd32_i2c_read+0x13c>)
 8017410:	f001 f9ca 	bl	80187a8 <i2c_stop_on_bus>
 8017414:	4e28      	ldr	r6, [pc, #160]	; (80174b8 <gd32_i2c_read+0x13c>)
 8017416:	f640 77ff 	movw	r7, #4095	; 0xfff
 801741a:	e022      	b.n	8017462 <gd32_i2c_read+0xe6>
 801741c:	2c03      	cmp	r4, #3
 801741e:	d134      	bne.n	801748a <gd32_i2c_read+0x10e>
 8017420:	f640 79ff 	movw	r9, #4095	; 0xfff
 8017424:	e002      	b.n	801742c <gd32_i2c_read+0xb0>
 8017426:	f1b9 0901 	subs.w	r9, r9, #1
 801742a:	d0d9      	beq.n	80173e0 <gd32_i2c_read+0x64>
 801742c:	f240 5102 	movw	r1, #1282	; 0x502
 8017430:	4630      	mov	r0, r6
 8017432:	f001 f9c3 	bl	80187bc <i2c_flag_get>
 8017436:	2800      	cmp	r0, #0
 8017438:	d0f5      	beq.n	8017426 <gd32_i2c_read+0xaa>
 801743a:	2100      	movs	r1, #0
 801743c:	4630      	mov	r0, r6
 801743e:	f001 f98f 	bl	8018760 <i2c_ack_config>
 8017442:	f240 5106 	movw	r1, #1286	; 0x506
 8017446:	4630      	mov	r0, r6
 8017448:	f001 f9b8 	bl	80187bc <i2c_flag_get>
 801744c:	b138      	cbz	r0, 801745e <gd32_i2c_read+0xe2>
 801744e:	4630      	mov	r0, r6
 8017450:	f001 f9b1 	bl	80187b6 <i2c_data_receive>
 8017454:	f808 0b01 	strb.w	r0, [r8], #1
 8017458:	3c01      	subs	r4, #1
 801745a:	f640 77ff 	movw	r7, #4095	; 0xfff
 801745e:	3f01      	subs	r7, #1
 8017460:	d0be      	beq.n	80173e0 <gd32_i2c_read+0x64>
 8017462:	2c00      	cmp	r4, #0
 8017464:	d1da      	bne.n	801741c <gd32_i2c_read+0xa0>
 8017466:	4916      	ldr	r1, [pc, #88]	; (80174c0 <gd32_i2c_read+0x144>)
 8017468:	f640 73ff 	movw	r3, #4095	; 0xfff
 801746c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8017470:	0592      	lsls	r2, r2, #22
 8017472:	d41d      	bmi.n	80174b0 <gd32_i2c_read+0x134>
 8017474:	4810      	ldr	r0, [pc, #64]	; (80174b8 <gd32_i2c_read+0x13c>)
 8017476:	2101      	movs	r1, #1
 8017478:	f001 f972 	bl	8018760 <i2c_ack_config>
 801747c:	480e      	ldr	r0, [pc, #56]	; (80174b8 <gd32_i2c_read+0x13c>)
 801747e:	2101      	movs	r1, #1
 8017480:	f001 f977 	bl	8018772 <i2c_ackpos_config>
 8017484:	4628      	mov	r0, r5
 8017486:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801748a:	2c02      	cmp	r4, #2
 801748c:	d1d9      	bne.n	8017442 <gd32_i2c_read+0xc6>
 801748e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8017492:	e002      	b.n	801749a <gd32_i2c_read+0x11e>
 8017494:	f1b9 0901 	subs.w	r9, r9, #1
 8017498:	d0a2      	beq.n	80173e0 <gd32_i2c_read+0x64>
 801749a:	f240 5102 	movw	r1, #1282	; 0x502
 801749e:	4630      	mov	r0, r6
 80174a0:	f001 f98c 	bl	80187bc <i2c_flag_get>
 80174a4:	2800      	cmp	r0, #0
 80174a6:	d0f5      	beq.n	8017494 <gd32_i2c_read+0x118>
 80174a8:	4630      	mov	r0, r6
 80174aa:	f001 f97d 	bl	80187a8 <i2c_stop_on_bus>
 80174ae:	e7c8      	b.n	8017442 <gd32_i2c_read+0xc6>
 80174b0:	3b01      	subs	r3, #1
 80174b2:	d1db      	bne.n	801746c <gd32_i2c_read+0xf0>
 80174b4:	e796      	b.n	80173e4 <gd32_i2c_read+0x68>
 80174b6:	bf00      	nop
 80174b8:	40005400 	andmi	r5, r0, r0, lsl #8
 80174bc:	2000fdc0 	andcs	pc, r0, r0, asr #27
 80174c0:	40005000 	andmi	r5, r0, r0

080174c4 <_gpio_init(unsigned int)>:
 80174c4:	4b9e      	ldr	r3, [pc, #632]	; (8017740 <_gpio_init(unsigned int)+0x27c>)
 80174c6:	4298      	cmp	r0, r3
 80174c8:	b510      	push	{r4, lr}
 80174ca:	f000 8115 	beq.w	80176f8 <_gpio_init(unsigned int)+0x234>
 80174ce:	d838      	bhi.n	8017542 <_gpio_init(unsigned int)+0x7e>
 80174d0:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80174d4:	4298      	cmp	r0, r3
 80174d6:	f000 80ca 	beq.w	801766e <_gpio_init(unsigned int)+0x1aa>
 80174da:	d80e      	bhi.n	80174fa <_gpio_init(unsigned int)+0x36>
 80174dc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80174e0:	4298      	cmp	r0, r3
 80174e2:	d07c      	beq.n	80175de <_gpio_init(unsigned int)+0x11a>
 80174e4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80174e8:	4298      	cmp	r0, r3
 80174ea:	f000 8099 	beq.w	8017620 <_gpio_init(unsigned int)+0x15c>
 80174ee:	4b95      	ldr	r3, [pc, #596]	; (8017744 <_gpio_init(unsigned int)+0x280>)
 80174f0:	4a95      	ldr	r2, [pc, #596]	; (8017748 <_gpio_init(unsigned int)+0x284>)
 80174f2:	4896      	ldr	r0, [pc, #600]	; (801774c <_gpio_init(unsigned int)+0x288>)
 80174f4:	21fe      	movs	r1, #254	; 0xfe
 80174f6:	f7f2 fcd3 	bl	8009ea0 <__assert_func>
 80174fa:	4b95      	ldr	r3, [pc, #596]	; (8017750 <_gpio_init(unsigned int)+0x28c>)
 80174fc:	4298      	cmp	r0, r3
 80174fe:	d1f6      	bne.n	80174ee <_gpio_init(unsigned int)+0x2a>
 8017500:	4894      	ldr	r0, [pc, #592]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 8017502:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8017506:	2108      	movs	r1, #8
 8017508:	f7ff f995 	bl	8016836 <gpio_af_set>
 801750c:	4891      	ldr	r0, [pc, #580]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 801750e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8017512:	2201      	movs	r2, #1
 8017514:	2102      	movs	r1, #2
 8017516:	f7ff f953 	bl	80167c0 <gpio_mode_set>
 801751a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801751e:	488d      	ldr	r0, [pc, #564]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 8017520:	2202      	movs	r2, #2
 8017522:	2100      	movs	r1, #0
 8017524:	f7ff f96c 	bl	8016800 <gpio_output_options_set>
 8017528:	488b      	ldr	r0, [pc, #556]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 801752a:	2204      	movs	r2, #4
 801752c:	2108      	movs	r1, #8
 801752e:	f7ff f982 	bl	8016836 <gpio_af_set>
 8017532:	2304      	movs	r3, #4
 8017534:	4888      	ldr	r0, [pc, #544]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 8017536:	2201      	movs	r2, #1
 8017538:	2102      	movs	r1, #2
 801753a:	f7ff f941 	bl	80167c0 <gpio_mode_set>
 801753e:	2304      	movs	r3, #4
 8017540:	e091      	b.n	8017666 <_gpio_init(unsigned int)+0x1a2>
 8017542:	4b86      	ldr	r3, [pc, #536]	; (801775c <_gpio_init(unsigned int)+0x298>)
 8017544:	4298      	cmp	r0, r3
 8017546:	d026      	beq.n	8017596 <_gpio_init(unsigned int)+0xd2>
 8017548:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801754c:	4298      	cmp	r0, r3
 801754e:	f000 80b5 	beq.w	80176bc <_gpio_init(unsigned int)+0x1f8>
 8017552:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 8017556:	4298      	cmp	r0, r3
 8017558:	d1c9      	bne.n	80174ee <_gpio_init(unsigned int)+0x2a>
 801755a:	4881      	ldr	r0, [pc, #516]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801755c:	2202      	movs	r2, #2
 801755e:	2108      	movs	r1, #8
 8017560:	f7ff f969 	bl	8016836 <gpio_af_set>
 8017564:	2302      	movs	r3, #2
 8017566:	4619      	mov	r1, r3
 8017568:	487d      	ldr	r0, [pc, #500]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801756a:	2201      	movs	r2, #1
 801756c:	f7ff f928 	bl	80167c0 <gpio_mode_set>
 8017570:	2302      	movs	r3, #2
 8017572:	461a      	mov	r2, r3
 8017574:	487a      	ldr	r0, [pc, #488]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 8017576:	2100      	movs	r1, #0
 8017578:	f7ff f942 	bl	8016800 <gpio_output_options_set>
 801757c:	4878      	ldr	r0, [pc, #480]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801757e:	2201      	movs	r2, #1
 8017580:	2108      	movs	r1, #8
 8017582:	f7ff f958 	bl	8016836 <gpio_af_set>
 8017586:	2301      	movs	r3, #1
 8017588:	461a      	mov	r2, r3
 801758a:	4875      	ldr	r0, [pc, #468]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801758c:	2102      	movs	r1, #2
 801758e:	f7ff f917 	bl	80167c0 <gpio_mode_set>
 8017592:	2301      	movs	r3, #1
 8017594:	e0d0      	b.n	8017738 <_gpio_init(unsigned int)+0x274>
 8017596:	4873      	ldr	r0, [pc, #460]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 8017598:	2240      	movs	r2, #64	; 0x40
 801759a:	2107      	movs	r1, #7
 801759c:	f7ff f94b 	bl	8016836 <gpio_af_set>
 80175a0:	4870      	ldr	r0, [pc, #448]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 80175a2:	2340      	movs	r3, #64	; 0x40
 80175a4:	2201      	movs	r2, #1
 80175a6:	2102      	movs	r1, #2
 80175a8:	f7ff f90a 	bl	80167c0 <gpio_mode_set>
 80175ac:	2340      	movs	r3, #64	; 0x40
 80175ae:	486d      	ldr	r0, [pc, #436]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 80175b0:	2202      	movs	r2, #2
 80175b2:	2100      	movs	r1, #0
 80175b4:	f7ff f924 	bl	8016800 <gpio_output_options_set>
 80175b8:	486a      	ldr	r0, [pc, #424]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 80175ba:	2280      	movs	r2, #128	; 0x80
 80175bc:	2107      	movs	r1, #7
 80175be:	f7ff f93a 	bl	8016836 <gpio_af_set>
 80175c2:	4868      	ldr	r0, [pc, #416]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 80175c4:	2380      	movs	r3, #128	; 0x80
 80175c6:	2201      	movs	r2, #1
 80175c8:	2102      	movs	r1, #2
 80175ca:	f7ff f8f9 	bl	80167c0 <gpio_mode_set>
 80175ce:	4865      	ldr	r0, [pc, #404]	; (8017764 <_gpio_init(unsigned int)+0x2a0>)
 80175d0:	2380      	movs	r3, #128	; 0x80
 80175d2:	2202      	movs	r2, #2
 80175d4:	2100      	movs	r1, #0
 80175d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80175da:	f7ff b911 	b.w	8016800 <gpio_output_options_set>
 80175de:	4862      	ldr	r0, [pc, #392]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 80175e0:	2204      	movs	r2, #4
 80175e2:	2107      	movs	r1, #7
 80175e4:	f7ff f927 	bl	8016836 <gpio_af_set>
 80175e8:	485f      	ldr	r0, [pc, #380]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 80175ea:	2304      	movs	r3, #4
 80175ec:	2201      	movs	r2, #1
 80175ee:	2102      	movs	r1, #2
 80175f0:	f7ff f8e6 	bl	80167c0 <gpio_mode_set>
 80175f4:	2304      	movs	r3, #4
 80175f6:	485c      	ldr	r0, [pc, #368]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 80175f8:	2202      	movs	r2, #2
 80175fa:	2100      	movs	r1, #0
 80175fc:	f7ff f900 	bl	8016800 <gpio_output_options_set>
 8017600:	4859      	ldr	r0, [pc, #356]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 8017602:	2208      	movs	r2, #8
 8017604:	2107      	movs	r1, #7
 8017606:	f7ff f916 	bl	8016836 <gpio_af_set>
 801760a:	4857      	ldr	r0, [pc, #348]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 801760c:	2308      	movs	r3, #8
 801760e:	2201      	movs	r2, #1
 8017610:	2102      	movs	r1, #2
 8017612:	f7ff f8d5 	bl	80167c0 <gpio_mode_set>
 8017616:	4854      	ldr	r0, [pc, #336]	; (8017768 <_gpio_init(unsigned int)+0x2a4>)
 8017618:	2308      	movs	r3, #8
 801761a:	2202      	movs	r2, #2
 801761c:	2100      	movs	r1, #0
 801761e:	e7da      	b.n	80175d6 <_gpio_init(unsigned int)+0x112>
 8017620:	484d      	ldr	r0, [pc, #308]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 8017622:	f44f 7280 	mov.w	r2, #256	; 0x100
 8017626:	2107      	movs	r1, #7
 8017628:	f7ff f905 	bl	8016836 <gpio_af_set>
 801762c:	484a      	ldr	r0, [pc, #296]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 801762e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017632:	2201      	movs	r2, #1
 8017634:	2102      	movs	r1, #2
 8017636:	f7ff f8c3 	bl	80167c0 <gpio_mode_set>
 801763a:	f44f 7380 	mov.w	r3, #256	; 0x100
 801763e:	4846      	ldr	r0, [pc, #280]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 8017640:	2202      	movs	r2, #2
 8017642:	2100      	movs	r1, #0
 8017644:	f7ff f8dc 	bl	8016800 <gpio_output_options_set>
 8017648:	4843      	ldr	r0, [pc, #268]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 801764a:	f44f 7200 	mov.w	r2, #512	; 0x200
 801764e:	2107      	movs	r1, #7
 8017650:	f7ff f8f1 	bl	8016836 <gpio_af_set>
 8017654:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017658:	483f      	ldr	r0, [pc, #252]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 801765a:	2201      	movs	r2, #1
 801765c:	2102      	movs	r1, #2
 801765e:	f7ff f8af 	bl	80167c0 <gpio_mode_set>
 8017662:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017666:	483c      	ldr	r0, [pc, #240]	; (8017758 <_gpio_init(unsigned int)+0x294>)
 8017668:	2202      	movs	r2, #2
 801766a:	2100      	movs	r1, #0
 801766c:	e7b3      	b.n	80175d6 <_gpio_init(unsigned int)+0x112>
 801766e:	4839      	ldr	r0, [pc, #228]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 8017670:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8017674:	2108      	movs	r1, #8
 8017676:	f7ff f8de 	bl	8016836 <gpio_af_set>
 801767a:	4836      	ldr	r0, [pc, #216]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 801767c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8017680:	2201      	movs	r2, #1
 8017682:	2102      	movs	r1, #2
 8017684:	f7ff f89c 	bl	80167c0 <gpio_mode_set>
 8017688:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801768c:	4831      	ldr	r0, [pc, #196]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 801768e:	2202      	movs	r2, #2
 8017690:	2100      	movs	r1, #0
 8017692:	f7ff f8b5 	bl	8016800 <gpio_output_options_set>
 8017696:	482f      	ldr	r0, [pc, #188]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 8017698:	f44f 6200 	mov.w	r2, #2048	; 0x800
 801769c:	2108      	movs	r1, #8
 801769e:	f7ff f8ca 	bl	8016836 <gpio_af_set>
 80176a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80176a6:	482b      	ldr	r0, [pc, #172]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176a8:	2201      	movs	r2, #1
 80176aa:	2102      	movs	r1, #2
 80176ac:	f7ff f888 	bl	80167c0 <gpio_mode_set>
 80176b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80176b4:	4827      	ldr	r0, [pc, #156]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176b6:	2202      	movs	r2, #2
 80176b8:	2100      	movs	r1, #0
 80176ba:	e78c      	b.n	80175d6 <_gpio_init(unsigned int)+0x112>
 80176bc:	4825      	ldr	r0, [pc, #148]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176be:	2240      	movs	r2, #64	; 0x40
 80176c0:	2108      	movs	r1, #8
 80176c2:	f7ff f8b8 	bl	8016836 <gpio_af_set>
 80176c6:	4823      	ldr	r0, [pc, #140]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176c8:	2340      	movs	r3, #64	; 0x40
 80176ca:	2201      	movs	r2, #1
 80176cc:	2102      	movs	r1, #2
 80176ce:	f7ff f877 	bl	80167c0 <gpio_mode_set>
 80176d2:	2340      	movs	r3, #64	; 0x40
 80176d4:	481f      	ldr	r0, [pc, #124]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176d6:	2202      	movs	r2, #2
 80176d8:	2100      	movs	r1, #0
 80176da:	f7ff f891 	bl	8016800 <gpio_output_options_set>
 80176de:	481d      	ldr	r0, [pc, #116]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176e0:	2280      	movs	r2, #128	; 0x80
 80176e2:	2108      	movs	r1, #8
 80176e4:	f7ff f8a7 	bl	8016836 <gpio_af_set>
 80176e8:	2380      	movs	r3, #128	; 0x80
 80176ea:	481a      	ldr	r0, [pc, #104]	; (8017754 <_gpio_init(unsigned int)+0x290>)
 80176ec:	2201      	movs	r2, #1
 80176ee:	2102      	movs	r1, #2
 80176f0:	f7ff f866 	bl	80167c0 <gpio_mode_set>
 80176f4:	2380      	movs	r3, #128	; 0x80
 80176f6:	e7dd      	b.n	80176b4 <_gpio_init(unsigned int)+0x1f0>
 80176f8:	4819      	ldr	r0, [pc, #100]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 80176fa:	f44f 7280 	mov.w	r2, #256	; 0x100
 80176fe:	2108      	movs	r1, #8
 8017700:	f7ff f899 	bl	8016836 <gpio_af_set>
 8017704:	4816      	ldr	r0, [pc, #88]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 8017706:	f44f 7380 	mov.w	r3, #256	; 0x100
 801770a:	2201      	movs	r2, #1
 801770c:	2102      	movs	r1, #2
 801770e:	f7ff f857 	bl	80167c0 <gpio_mode_set>
 8017712:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017716:	4812      	ldr	r0, [pc, #72]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 8017718:	2202      	movs	r2, #2
 801771a:	2100      	movs	r1, #0
 801771c:	f7ff f870 	bl	8016800 <gpio_output_options_set>
 8017720:	480f      	ldr	r0, [pc, #60]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 8017722:	2280      	movs	r2, #128	; 0x80
 8017724:	2108      	movs	r1, #8
 8017726:	f7ff f886 	bl	8016836 <gpio_af_set>
 801772a:	2380      	movs	r3, #128	; 0x80
 801772c:	480c      	ldr	r0, [pc, #48]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801772e:	2201      	movs	r2, #1
 8017730:	2102      	movs	r1, #2
 8017732:	f7ff f845 	bl	80167c0 <gpio_mode_set>
 8017736:	2380      	movs	r3, #128	; 0x80
 8017738:	4809      	ldr	r0, [pc, #36]	; (8017760 <_gpio_init(unsigned int)+0x29c>)
 801773a:	2202      	movs	r2, #2
 801773c:	2100      	movs	r1, #0
 801773e:	e74a      	b.n	80175d6 <_gpio_init(unsigned int)+0x112>
 8017740:	40007800 	andmi	r7, r0, r0, lsl #16
 8017744:	0801a72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, sp, pc}
 8017748:	0801c2b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, lr, pc}
 801774c:	0801c2c1 	stmdaeq	r1, {r0, r6, r7, r9, lr, pc}
 8017750:	40005000 	andmi	r5, r0, r0
 8017754:	40020800 	andmi	r0, r2, r0, lsl #16
 8017758:	40020c00 	andmi	r0, r2, r0, lsl #24
 801775c:	40011000 	andmi	r1, r1, r0
 8017760:	40021000 	andmi	r1, r2, r0
 8017764:	40020400 	andmi	r0, r2, r0, lsl #8
 8017768:	40020000 	andmi	r0, r2, r0

0801776c <gd32_uart_begin>:
 801776c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801776e:	461e      	mov	r6, r3
 8017770:	4b4d      	ldr	r3, [pc, #308]	; (80178a8 <gd32_uart_begin+0x13c>)
 8017772:	4298      	cmp	r0, r3
 8017774:	4604      	mov	r4, r0
 8017776:	460f      	mov	r7, r1
 8017778:	4615      	mov	r5, r2
 801777a:	f000 8088 	beq.w	801788e <gd32_uart_begin+0x122>
 801777e:	d81c      	bhi.n	80177ba <gd32_uart_begin+0x4e>
 8017780:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8017784:	4298      	cmp	r0, r3
 8017786:	d078      	beq.n	801787a <gd32_uart_begin+0x10e>
 8017788:	d80d      	bhi.n	80177a6 <gd32_uart_begin+0x3a>
 801778a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801778e:	4298      	cmp	r0, r3
 8017790:	d065      	beq.n	801785e <gd32_uart_begin+0xf2>
 8017792:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8017796:	4298      	cmp	r0, r3
 8017798:	d068      	beq.n	801786c <gd32_uart_begin+0x100>
 801779a:	4b44      	ldr	r3, [pc, #272]	; (80178ac <gd32_uart_begin+0x140>)
 801779c:	4a44      	ldr	r2, [pc, #272]	; (80178b0 <gd32_uart_begin+0x144>)
 801779e:	4845      	ldr	r0, [pc, #276]	; (80178b4 <gd32_uart_begin+0x148>)
 80177a0:	2165      	movs	r1, #101	; 0x65
 80177a2:	f7f2 fb7d 	bl	8009ea0 <__assert_func>
 80177a6:	4b44      	ldr	r3, [pc, #272]	; (80178b8 <gd32_uart_begin+0x14c>)
 80177a8:	4298      	cmp	r0, r3
 80177aa:	d1f6      	bne.n	801779a <gd32_uart_begin+0x2e>
 80177ac:	f241 0014 	movw	r0, #4116	; 0x1014
 80177b0:	f7ff f882 	bl	80168b8 <rcu_periph_clock_enable>
 80177b4:	f640 4002 	movw	r0, #3074	; 0xc02
 80177b8:	e05a      	b.n	8017870 <gd32_uart_begin+0x104>
 80177ba:	4b40      	ldr	r3, [pc, #256]	; (80178bc <gd32_uart_begin+0x150>)
 80177bc:	4298      	cmp	r0, r3
 80177be:	d00a      	beq.n	80177d6 <gd32_uart_begin+0x6a>
 80177c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80177c4:	4298      	cmp	r0, r3
 80177c6:	d05f      	beq.n	8017888 <gd32_uart_begin+0x11c>
 80177c8:	f5a3 4318 	sub.w	r3, r3, #38912	; 0x9800
 80177cc:	4298      	cmp	r0, r3
 80177ce:	d1e4      	bne.n	801779a <gd32_uart_begin+0x2e>
 80177d0:	f241 001f 	movw	r0, #4127	; 0x101f
 80177d4:	e05d      	b.n	8017892 <gd32_uart_begin+0x126>
 80177d6:	f241 1004 	movw	r0, #4356	; 0x1104
 80177da:	f7ff f86d 	bl	80168b8 <rcu_periph_clock_enable>
 80177de:	f640 4001 	movw	r0, #3073	; 0xc01
 80177e2:	f7ff f869 	bl	80168b8 <rcu_periph_clock_enable>
 80177e6:	4620      	mov	r0, r4
 80177e8:	f7ff fe6c 	bl	80174c4 <_gpio_init(unsigned int)>
 80177ec:	4620      	mov	r0, r4
 80177ee:	f7ff fb71 	bl	8016ed4 <usart_deinit>
 80177f2:	68e3      	ldr	r3, [r4, #12]
 80177f4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80177f8:	60e3      	str	r3, [r4, #12]
 80177fa:	4639      	mov	r1, r7
 80177fc:	4620      	mov	r0, r4
 80177fe:	f7ff fbcb 	bl	8016f98 <usart_baudrate_set>
 8017802:	f1a5 0309 	sub.w	r3, r5, #9
 8017806:	4259      	negs	r1, r3
 8017808:	4159      	adcs	r1, r3
 801780a:	0309      	lsls	r1, r1, #12
 801780c:	4620      	mov	r0, r4
 801780e:	f7ff fc0f 	bl	8017030 <usart_word_length_set>
 8017812:	9906      	ldr	r1, [sp, #24]
 8017814:	1e8a      	subs	r2, r1, #2
 8017816:	4251      	negs	r1, r2
 8017818:	4151      	adcs	r1, r2
 801781a:	0349      	lsls	r1, r1, #13
 801781c:	4620      	mov	r0, r4
 801781e:	f7ff fc0f 	bl	8017040 <usart_stop_bit_set>
 8017822:	2e01      	cmp	r6, #1
 8017824:	d03a      	beq.n	801789c <gd32_uart_begin+0x130>
 8017826:	2e02      	cmp	r6, #2
 8017828:	d13b      	bne.n	80178a2 <gd32_uart_begin+0x136>
 801782a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801782e:	4620      	mov	r0, r4
 8017830:	f7ff fbf6 	bl	8017020 <usart_parity_config>
 8017834:	2100      	movs	r1, #0
 8017836:	4620      	mov	r0, r4
 8017838:	f7ff fc16 	bl	8017068 <usart_hardware_flow_rts_config>
 801783c:	2100      	movs	r1, #0
 801783e:	4620      	mov	r0, r4
 8017840:	f7ff fc18 	bl	8017074 <usart_hardware_flow_cts_config>
 8017844:	2104      	movs	r1, #4
 8017846:	4620      	mov	r0, r4
 8017848:	f7ff fc08 	bl	801705c <usart_receive_config>
 801784c:	2108      	movs	r1, #8
 801784e:	4620      	mov	r0, r4
 8017850:	f7ff fbfe 	bl	8017050 <usart_transmit_config>
 8017854:	68e3      	ldr	r3, [r4, #12]
 8017856:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801785a:	60e3      	str	r3, [r4, #12]
 801785c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801785e:	f241 0011 	movw	r0, #4113	; 0x1011
 8017862:	f7ff f829 	bl	80168b8 <rcu_periph_clock_enable>
 8017866:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 801786a:	e7ba      	b.n	80177e2 <gd32_uart_begin+0x76>
 801786c:	f241 0012 	movw	r0, #4114	; 0x1012
 8017870:	f7ff f822 	bl	80168b8 <rcu_periph_clock_enable>
 8017874:	f640 4003 	movw	r0, #3075	; 0xc03
 8017878:	e7b3      	b.n	80177e2 <gd32_uart_begin+0x76>
 801787a:	f241 0013 	movw	r0, #4115	; 0x1013
 801787e:	f7ff f81b 	bl	80168b8 <rcu_periph_clock_enable>
 8017882:	f640 4002 	movw	r0, #3074	; 0xc02
 8017886:	e7ac      	b.n	80177e2 <gd32_uart_begin+0x76>
 8017888:	f241 1005 	movw	r0, #4357	; 0x1105
 801788c:	e7f7      	b.n	801787e <gd32_uart_begin+0x112>
 801788e:	f241 001e 	movw	r0, #4126	; 0x101e
 8017892:	f7ff f811 	bl	80168b8 <rcu_periph_clock_enable>
 8017896:	f640 4004 	movw	r0, #3076	; 0xc04
 801789a:	e7a2      	b.n	80177e2 <gd32_uart_begin+0x76>
 801789c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80178a0:	e7c5      	b.n	801782e <gd32_uart_begin+0xc2>
 80178a2:	2100      	movs	r1, #0
 80178a4:	e7c3      	b.n	801782e <gd32_uart_begin+0xc2>
 80178a6:	bf00      	nop
 80178a8:	40007800 	andmi	r7, r0, r0, lsl #16
 80178ac:	0801a72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, sp, pc}
 80178b0:	0801c2d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, lr, pc}
 80178b4:	0801c2c1 	stmdaeq	r1, {r0, r6, r7, r9, lr, pc}
 80178b8:	40005000 	andmi	r5, r0, r0
 80178bc:	40011000 	andmi	r1, r1, r0

080178c0 <micros_init()>:
 80178c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80178c2:	f241 0003 	movw	r0, #4099	; 0x1003
 80178c6:	f7fe fff7 	bl	80168b8 <rcu_periph_clock_enable>
 80178ca:	480c      	ldr	r0, [pc, #48]	; (80178fc <micros_init()+0x3c>)
 80178cc:	f7ff f8a4 	bl	8016a18 <timer_deinit>
 80178d0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80178d4:	2300      	movs	r3, #0
 80178d6:	f8c2 3c24 	str.w	r3, [r2, #3108]	; 0xc24
 80178da:	22c7      	movs	r2, #199	; 0xc7
 80178dc:	e9cd 2300 	strd	r2, r3, [sp]
 80178e0:	4669      	mov	r1, sp
 80178e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80178e6:	4805      	ldr	r0, [pc, #20]	; (80178fc <micros_init()+0x3c>)
 80178e8:	9302      	str	r3, [sp, #8]
 80178ea:	f7ff f93b 	bl	8016b64 <timer_init>
 80178ee:	4803      	ldr	r0, [pc, #12]	; (80178fc <micros_init()+0x3c>)
 80178f0:	f7ff f976 	bl	8016be0 <timer_enable>
 80178f4:	b005      	add	sp, #20
 80178f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80178fa:	bf00      	nop
 80178fc:	40000c00 	andmi	r0, r0, r0, lsl #24

08017900 <udelay_init()>:
 8017900:	b508      	push	{r3, lr}
 8017902:	4b0d      	ldr	r3, [pc, #52]	; (8017938 <udelay_init()+0x38>)
 8017904:	681a      	ldr	r2, [r3, #0]
 8017906:	4b0d      	ldr	r3, [pc, #52]	; (801793c <udelay_init()+0x3c>)
 8017908:	429a      	cmp	r2, r3
 801790a:	d005      	beq.n	8017918 <udelay_init()+0x18>
 801790c:	4b0c      	ldr	r3, [pc, #48]	; (8017940 <udelay_init()+0x40>)
 801790e:	4a0d      	ldr	r2, [pc, #52]	; (8017944 <udelay_init()+0x44>)
 8017910:	480d      	ldr	r0, [pc, #52]	; (8017948 <udelay_init()+0x48>)
 8017912:	2122      	movs	r1, #34	; 0x22
 8017914:	f7f2 fac4 	bl	8009ea0 <__assert_func>
 8017918:	4a0c      	ldr	r2, [pc, #48]	; (801794c <udelay_init()+0x4c>)
 801791a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801791e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8017922:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8017926:	4b0a      	ldr	r3, [pc, #40]	; (8017950 <udelay_init()+0x50>)
 8017928:	2200      	movs	r2, #0
 801792a:	605a      	str	r2, [r3, #4]
 801792c:	681a      	ldr	r2, [r3, #0]
 801792e:	f042 0201 	orr.w	r2, r2, #1
 8017932:	601a      	str	r2, [r3, #0]
 8017934:	bd08      	pop	{r3, pc}
 8017936:	bf00      	nop
 8017938:	200000f4 	strdcs	r0, [r0], -r4
 801793c:	0bebc200 	bleq	7b08144 <__stack_size+0x7b04144>
 8017940:	0801c2ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, lr, pc}
 8017944:	0801c30e 	stmdaeq	r1, {r1, r2, r3, r8, r9, lr, pc}
 8017948:	0801c31a 	stmdaeq	r1, {r1, r3, r4, r8, r9, lr, pc}
 801794c:	e000ed00 	and	lr, r0, r0, lsl #26
 8017950:	e0001000 	and	r1, r0, r0

08017954 <udelay(unsigned int, unsigned int)>:
 8017954:	23c8      	movs	r3, #200	; 0xc8
 8017956:	b530      	push	{r4, r5, lr}
 8017958:	4358      	muls	r0, r3
 801795a:	b909      	cbnz	r1, 8017960 <udelay(unsigned int, unsigned int)+0xc>
 801795c:	4b08      	ldr	r3, [pc, #32]	; (8017980 <udelay(unsigned int, unsigned int)+0x2c>)
 801795e:	6859      	ldr	r1, [r3, #4]
 8017960:	4c07      	ldr	r4, [pc, #28]	; (8017980 <udelay(unsigned int, unsigned int)+0x2c>)
 8017962:	2300      	movs	r3, #0
 8017964:	6862      	ldr	r2, [r4, #4]
 8017966:	4291      	cmp	r1, r2
 8017968:	d0fc      	beq.n	8017964 <udelay(unsigned int, unsigned int)+0x10>
 801796a:	bf2a      	itet	cs
 801796c:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8017970:	189b      	addcc	r3, r3, r2
 8017972:	195b      	addcs	r3, r3, r5
 8017974:	1a5b      	subs	r3, r3, r1
 8017976:	4283      	cmp	r3, r0
 8017978:	d300      	bcc.n	801797c <udelay(unsigned int, unsigned int)+0x28>
 801797a:	bd30      	pop	{r4, r5, pc}
 801797c:	4611      	mov	r1, r2
 801797e:	e7f1      	b.n	8017964 <udelay(unsigned int, unsigned int)+0x10>
 8017980:	e0001000 	and	r1, r0, r0

08017984 <emac_start(unsigned char*)>:
 8017984:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017986:	4abc      	ldr	r2, [pc, #752]	; (8017c78 <emac_start(unsigned char*)+0x2f4>)
 8017988:	49bc      	ldr	r1, [pc, #752]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 801798a:	b085      	sub	sp, #20
 801798c:	23b1      	movs	r3, #177	; 0xb1
 801798e:	4605      	mov	r5, r0
 8017990:	48bb      	ldr	r0, [pc, #748]	; (8017c80 <emac_start(unsigned char*)+0x2fc>)
 8017992:	f7f2 fd91 	bl	800a4b8 <printf>
 8017996:	4bbb      	ldr	r3, [pc, #748]	; (8017c84 <emac_start(unsigned char*)+0x300>)
 8017998:	4ab8      	ldr	r2, [pc, #736]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 801799a:	49b7      	ldr	r1, [pc, #732]	; (8017c78 <emac_start(unsigned char*)+0x2f4>)
 801799c:	9300      	str	r3, [sp, #0]
 801799e:	48ba      	ldr	r0, [pc, #744]	; (8017c88 <emac_start(unsigned char*)+0x304>)
 80179a0:	23b5      	movs	r3, #181	; 0xb5
 80179a2:	f7f2 fd89 	bl	800a4b8 <printf>
 80179a6:	2346      	movs	r3, #70	; 0x46
 80179a8:	2208      	movs	r2, #8
 80179aa:	e9cd 3200 	strd	r3, r2, [sp]
 80179ae:	49b2      	ldr	r1, [pc, #712]	; (8017c78 <emac_start(unsigned char*)+0x2f4>)
 80179b0:	4ab2      	ldr	r2, [pc, #712]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 80179b2:	48b6      	ldr	r0, [pc, #728]	; (8017c8c <emac_start(unsigned char*)+0x308>)
 80179b4:	23bb      	movs	r3, #187	; 0xbb
 80179b6:	f7f2 fd7f 	bl	800a4b8 <printf>
 80179ba:	2325      	movs	r3, #37	; 0x25
 80179bc:	4ab4      	ldr	r2, [pc, #720]	; (8017c90 <emac_start(unsigned char*)+0x30c>)
 80179be:	49af      	ldr	r1, [pc, #700]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 80179c0:	48af      	ldr	r0, [pc, #700]	; (8017c80 <emac_start(unsigned char*)+0x2fc>)
 80179c2:	f7f2 fd79 	bl	800a4b8 <printf>
 80179c6:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80179ca:	f7fe ff75 	bl	80168b8 <rcu_periph_clock_enable>
 80179ce:	f640 4001 	movw	r0, #3073	; 0xc01
 80179d2:	f7fe ff71 	bl	80168b8 <rcu_periph_clock_enable>
 80179d6:	f640 4002 	movw	r0, #3074	; 0xc02
 80179da:	f7fe ff6d 	bl	80168b8 <rcu_periph_clock_enable>
 80179de:	f241 100e 	movw	r0, #4366	; 0x110e
 80179e2:	f7fe ff69 	bl	80168b8 <rcu_periph_clock_enable>
 80179e6:	48ab      	ldr	r0, [pc, #684]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 80179e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80179ec:	2100      	movs	r1, #0
 80179ee:	f7fe ff22 	bl	8016836 <gpio_af_set>
 80179f2:	48a8      	ldr	r0, [pc, #672]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 80179f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80179f8:	2200      	movs	r2, #0
 80179fa:	2102      	movs	r1, #2
 80179fc:	f7fe fee0 	bl	80167c0 <gpio_mode_set>
 8017a00:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017a04:	2203      	movs	r2, #3
 8017a06:	48a3      	ldr	r0, [pc, #652]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a08:	2100      	movs	r1, #0
 8017a0a:	f7fe fef9 	bl	8016800 <gpio_output_options_set>
 8017a0e:	f04f 61c0 	mov.w	r1, #100663296	; 0x6000000
 8017a12:	f44f 00c0 	mov.w	r0, #6291456	; 0x600000
 8017a16:	f7fe ff6f 	bl	80168f8 <rcu_ckout0_config>
 8017a1a:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8017a1e:	f000 feeb 	bl	80187f8 <syscfg_enet_phy_interface_config>
 8017a22:	2302      	movs	r3, #2
 8017a24:	4619      	mov	r1, r3
 8017a26:	489b      	ldr	r0, [pc, #620]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a28:	2200      	movs	r2, #0
 8017a2a:	f7fe fec9 	bl	80167c0 <gpio_mode_set>
 8017a2e:	4899      	ldr	r0, [pc, #612]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a30:	2302      	movs	r3, #2
 8017a32:	2203      	movs	r2, #3
 8017a34:	2100      	movs	r1, #0
 8017a36:	f7fe fee3 	bl	8016800 <gpio_output_options_set>
 8017a3a:	4896      	ldr	r0, [pc, #600]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a3c:	2304      	movs	r3, #4
 8017a3e:	2200      	movs	r2, #0
 8017a40:	2102      	movs	r1, #2
 8017a42:	f7fe febd 	bl	80167c0 <gpio_mode_set>
 8017a46:	4893      	ldr	r0, [pc, #588]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a48:	2304      	movs	r3, #4
 8017a4a:	2203      	movs	r2, #3
 8017a4c:	2100      	movs	r1, #0
 8017a4e:	f7fe fed7 	bl	8016800 <gpio_output_options_set>
 8017a52:	4890      	ldr	r0, [pc, #576]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a54:	2380      	movs	r3, #128	; 0x80
 8017a56:	2200      	movs	r2, #0
 8017a58:	2102      	movs	r1, #2
 8017a5a:	f7fe feb1 	bl	80167c0 <gpio_mode_set>
 8017a5e:	2380      	movs	r3, #128	; 0x80
 8017a60:	488c      	ldr	r0, [pc, #560]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a62:	2203      	movs	r2, #3
 8017a64:	2100      	movs	r1, #0
 8017a66:	f7fe fecb 	bl	8016800 <gpio_output_options_set>
 8017a6a:	488a      	ldr	r0, [pc, #552]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a6c:	2202      	movs	r2, #2
 8017a6e:	210b      	movs	r1, #11
 8017a70:	f7fe fee1 	bl	8016836 <gpio_af_set>
 8017a74:	4887      	ldr	r0, [pc, #540]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a76:	2204      	movs	r2, #4
 8017a78:	210b      	movs	r1, #11
 8017a7a:	f7fe fedc 	bl	8016836 <gpio_af_set>
 8017a7e:	4885      	ldr	r0, [pc, #532]	; (8017c94 <emac_start(unsigned char*)+0x310>)
 8017a80:	2280      	movs	r2, #128	; 0x80
 8017a82:	210b      	movs	r1, #11
 8017a84:	f7fe fed7 	bl	8016836 <gpio_af_set>
 8017a88:	4883      	ldr	r0, [pc, #524]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017a8a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017a8e:	2200      	movs	r2, #0
 8017a90:	2102      	movs	r1, #2
 8017a92:	f7fe fe95 	bl	80167c0 <gpio_mode_set>
 8017a96:	4880      	ldr	r0, [pc, #512]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017a98:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8017a9c:	2203      	movs	r2, #3
 8017a9e:	2100      	movs	r1, #0
 8017aa0:	f7fe feae 	bl	8016800 <gpio_output_options_set>
 8017aa4:	487c      	ldr	r0, [pc, #496]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017aa6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8017aaa:	2200      	movs	r2, #0
 8017aac:	2102      	movs	r1, #2
 8017aae:	f7fe fe87 	bl	80167c0 <gpio_mode_set>
 8017ab2:	4879      	ldr	r0, [pc, #484]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017ab4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8017ab8:	2203      	movs	r2, #3
 8017aba:	2100      	movs	r1, #0
 8017abc:	f7fe fea0 	bl	8016800 <gpio_output_options_set>
 8017ac0:	4875      	ldr	r0, [pc, #468]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017ac2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8017ac6:	2200      	movs	r2, #0
 8017ac8:	2102      	movs	r1, #2
 8017aca:	f7fe fe79 	bl	80167c0 <gpio_mode_set>
 8017ace:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8017ad2:	4871      	ldr	r0, [pc, #452]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017ad4:	2203      	movs	r2, #3
 8017ad6:	2100      	movs	r1, #0
 8017ad8:	f7fe fe92 	bl	8016800 <gpio_output_options_set>
 8017adc:	486e      	ldr	r0, [pc, #440]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017ade:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8017ae2:	210b      	movs	r1, #11
 8017ae4:	f7fe fea7 	bl	8016836 <gpio_af_set>
 8017ae8:	486b      	ldr	r0, [pc, #428]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017aea:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8017aee:	210b      	movs	r1, #11
 8017af0:	f7fe fea1 	bl	8016836 <gpio_af_set>
 8017af4:	4868      	ldr	r0, [pc, #416]	; (8017c98 <emac_start(unsigned char*)+0x314>)
 8017af6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8017afa:	210b      	movs	r1, #11
 8017afc:	f7fe fe9b 	bl	8016836 <gpio_af_set>
 8017b00:	2302      	movs	r3, #2
 8017b02:	4619      	mov	r1, r3
 8017b04:	4865      	ldr	r0, [pc, #404]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b06:	2200      	movs	r2, #0
 8017b08:	f7fe fe5a 	bl	80167c0 <gpio_mode_set>
 8017b0c:	4863      	ldr	r0, [pc, #396]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b0e:	2302      	movs	r3, #2
 8017b10:	2203      	movs	r2, #3
 8017b12:	2100      	movs	r1, #0
 8017b14:	f7fe fe74 	bl	8016800 <gpio_output_options_set>
 8017b18:	4860      	ldr	r0, [pc, #384]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b1a:	2310      	movs	r3, #16
 8017b1c:	2200      	movs	r2, #0
 8017b1e:	2102      	movs	r1, #2
 8017b20:	f7fe fe4e 	bl	80167c0 <gpio_mode_set>
 8017b24:	485d      	ldr	r0, [pc, #372]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b26:	2310      	movs	r3, #16
 8017b28:	2203      	movs	r2, #3
 8017b2a:	2100      	movs	r1, #0
 8017b2c:	f7fe fe68 	bl	8016800 <gpio_output_options_set>
 8017b30:	485a      	ldr	r0, [pc, #360]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b32:	2320      	movs	r3, #32
 8017b34:	2200      	movs	r2, #0
 8017b36:	2102      	movs	r1, #2
 8017b38:	f7fe fe42 	bl	80167c0 <gpio_mode_set>
 8017b3c:	2320      	movs	r3, #32
 8017b3e:	4857      	ldr	r0, [pc, #348]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b40:	2203      	movs	r2, #3
 8017b42:	2100      	movs	r1, #0
 8017b44:	f7fe fe5c 	bl	8016800 <gpio_output_options_set>
 8017b48:	4854      	ldr	r0, [pc, #336]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b4a:	2202      	movs	r2, #2
 8017b4c:	210b      	movs	r1, #11
 8017b4e:	f7fe fe72 	bl	8016836 <gpio_af_set>
 8017b52:	4852      	ldr	r0, [pc, #328]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b54:	2210      	movs	r2, #16
 8017b56:	210b      	movs	r1, #11
 8017b58:	f7fe fe6d 	bl	8016836 <gpio_af_set>
 8017b5c:	484f      	ldr	r0, [pc, #316]	; (8017c9c <emac_start(unsigned char*)+0x318>)
 8017b5e:	2220      	movs	r2, #32
 8017b60:	210b      	movs	r1, #11
 8017b62:	f7fe fe68 	bl	8016836 <gpio_af_set>
 8017b66:	4a4a      	ldr	r2, [pc, #296]	; (8017c90 <emac_start(unsigned char*)+0x30c>)
 8017b68:	4944      	ldr	r1, [pc, #272]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 8017b6a:	484d      	ldr	r0, [pc, #308]	; (8017ca0 <emac_start(unsigned char*)+0x31c>)
 8017b6c:	238b      	movs	r3, #139	; 0x8b
 8017b6e:	f7f2 fca3 	bl	800a4b8 <printf>
 8017b72:	4a4c      	ldr	r2, [pc, #304]	; (8017ca4 <emac_start(unsigned char*)+0x320>)
 8017b74:	4941      	ldr	r1, [pc, #260]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 8017b76:	4842      	ldr	r0, [pc, #264]	; (8017c80 <emac_start(unsigned char*)+0x2fc>)
 8017b78:	238f      	movs	r3, #143	; 0x8f
 8017b7a:	f7f2 fc9d 	bl	800a4b8 <printf>
 8017b7e:	f640 4019 	movw	r0, #3097	; 0xc19
 8017b82:	f7fe fe99 	bl	80168b8 <rcu_periph_clock_enable>
 8017b86:	f640 401a 	movw	r0, #3098	; 0xc1a
 8017b8a:	f7fe fe95 	bl	80168b8 <rcu_periph_clock_enable>
 8017b8e:	f640 401b 	movw	r0, #3099	; 0xc1b
 8017b92:	f7fe fe91 	bl	80168b8 <rcu_periph_clock_enable>
 8017b96:	f000 fd79 	bl	801868c <enet_deinit>
 8017b9a:	f000 f9a1 	bl	8017ee0 <enet_software_reset>
 8017b9e:	4604      	mov	r4, r0
 8017ba0:	bb70      	cbnz	r0, 8017c00 <emac_start(unsigned char*)+0x27c>
 8017ba2:	4a40      	ldr	r2, [pc, #256]	; (8017ca4 <emac_start(unsigned char*)+0x320>)
 8017ba4:	4935      	ldr	r1, [pc, #212]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 8017ba6:	483e      	ldr	r0, [pc, #248]	; (8017ca0 <emac_start(unsigned char*)+0x31c>)
 8017ba8:	2397      	movs	r3, #151	; 0x97
 8017baa:	f7f2 fc85 	bl	800a4b8 <printf>
 8017bae:	4628      	mov	r0, r5
 8017bb0:	f000 fe2e 	bl	8018810 <mac_address_get(unsigned char*)>
 8017bb4:	4629      	mov	r1, r5
 8017bb6:	2000      	movs	r0, #0
 8017bb8:	f000 fa82 	bl	80180c0 <enet_mac_address_set>
 8017bbc:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8017bc0:	f000 f9a2 	bl	8017f08 <enet_descriptors_chain_init>
 8017bc4:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8017bc8:	f000 f99e 	bl	8017f08 <enet_descriptors_chain_init>
 8017bcc:	4e36      	ldr	r6, [pc, #216]	; (8017ca8 <emac_start(unsigned char*)+0x324>)
 8017bce:	2500      	movs	r5, #0
 8017bd0:	4630      	mov	r0, r6
 8017bd2:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8017bd6:	3501      	adds	r5, #1
 8017bd8:	f000 fa6c 	bl	80180b4 <enet_transmit_checksum_config>
 8017bdc:	2d08      	cmp	r5, #8
 8017bde:	f106 0610 	add.w	r6, r6, #16
 8017be2:	d1f5      	bne.n	8017bd0 <emac_start(unsigned char*)+0x24c>
 8017be4:	f000 fcb4 	bl	8018550 <enet_enable>
 8017be8:	4a23      	ldr	r2, [pc, #140]	; (8017c78 <emac_start(unsigned char*)+0x2f4>)
 8017bea:	4924      	ldr	r1, [pc, #144]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 8017bec:	482c      	ldr	r0, [pc, #176]	; (8017ca0 <emac_start(unsigned char*)+0x31c>)
 8017bee:	23ce      	movs	r3, #206	; 0xce
 8017bf0:	f7f2 fc62 	bl	800a4b8 <printf>
 8017bf4:	fab4 f084 	clz	r0, r4
 8017bf8:	0940      	lsrs	r0, r0, #5
 8017bfa:	4240      	negs	r0, r0
 8017bfc:	b005      	add	sp, #20
 8017bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017c00:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8017c04:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8017c08:	2001      	movs	r0, #1
 8017c0a:	f000 fb01 	bl	8018210 <enet_init>
 8017c0e:	4a1b      	ldr	r2, [pc, #108]	; (8017c7c <emac_start(unsigned char*)+0x2f8>)
 8017c10:	9000      	str	r0, [sp, #0]
 8017c12:	4924      	ldr	r1, [pc, #144]	; (8017ca4 <emac_start(unsigned char*)+0x320>)
 8017c14:	4f25      	ldr	r7, [pc, #148]	; (8017cac <emac_start(unsigned char*)+0x328>)
 8017c16:	4e26      	ldr	r6, [pc, #152]	; (8017cb0 <emac_start(unsigned char*)+0x32c>)
 8017c18:	4604      	mov	r4, r0
 8017c1a:	239d      	movs	r3, #157	; 0x9d
 8017c1c:	4825      	ldr	r0, [pc, #148]	; (8017cb4 <emac_start(unsigned char*)+0x330>)
 8017c1e:	f7f2 fc4b 	bl	800a4b8 <printf>
 8017c22:	2200      	movs	r2, #0
 8017c24:	f10d 030e 	add.w	r3, sp, #14
 8017c28:	2101      	movs	r1, #1
 8017c2a:	4610      	mov	r0, r2
 8017c2c:	f000 fa60 	bl	80180f0 <enet_phy_write_read>
 8017c30:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8017c34:	2801      	cmp	r0, #1
 8017c36:	bf0c      	ite	eq
 8017c38:	463a      	moveq	r2, r7
 8017c3a:	4632      	movne	r2, r6
 8017c3c:	481e      	ldr	r0, [pc, #120]	; (8017cb8 <emac_start(unsigned char*)+0x334>)
 8017c3e:	f7f2 fc3b 	bl	800a4b8 <printf>
 8017c42:	2201      	movs	r2, #1
 8017c44:	f10d 030e 	add.w	r3, sp, #14
 8017c48:	4611      	mov	r1, r2
 8017c4a:	2000      	movs	r0, #0
 8017c4c:	f000 fa50 	bl	80180f0 <enet_phy_write_read>
 8017c50:	2201      	movs	r2, #1
 8017c52:	4611      	mov	r1, r2
 8017c54:	f10d 030e 	add.w	r3, sp, #14
 8017c58:	2000      	movs	r0, #0
 8017c5a:	f000 fa49 	bl	80180f0 <enet_phy_write_read>
 8017c5e:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8017c62:	2801      	cmp	r0, #1
 8017c64:	bf0c      	ite	eq
 8017c66:	463a      	moveq	r2, r7
 8017c68:	4632      	movne	r2, r6
 8017c6a:	f001 0126 	and.w	r1, r1, #38	; 0x26
 8017c6e:	4813      	ldr	r0, [pc, #76]	; (8017cbc <emac_start(unsigned char*)+0x338>)
 8017c70:	f7f2 fc22 	bl	800a4b8 <printf>
 8017c74:	e79b      	b.n	8017bae <emac_start(unsigned char*)+0x22a>
 8017c76:	bf00      	nop
 8017c78:	0801c336 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, lr, pc}
 8017c7c:	0801c341 	stmdaeq	r1, {r0, r6, r8, r9, lr, pc}
 8017c80:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}
 8017c84:	0801c36c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, lr, pc}
 8017c88:	0801c356 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, lr, pc}
 8017c8c:	0801c374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, lr, pc}
 8017c90:	0801c3ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, lr, pc}
 8017c94:	40020000 	andmi	r0, r2, r0
 8017c98:	40020400 	andmi	r0, r2, r0, lsl #8
 8017c9c:	40020800 	andmi	r0, r2, r0, lsl #16
 8017ca0:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 8017ca4:	0801c3bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, lr, pc}
 8017ca8:	2002d2c8 	andcs	sp, r2, r8, asr #5
 8017cac:	0801c329 	stmdaeq	r1, {r0, r3, r5, r8, r9, lr, pc}
 8017cb0:	0801c330 	stmdaeq	r1, {r4, r5, r8, r9, lr, pc}
 8017cb4:	0801c3cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, lr, pc}
 8017cb8:	0801c3f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, lr, pc}
 8017cbc:	0801c402 	stmdaeq	r1, {r1, sl, lr, pc}

08017cc0 <net::link_register_read()>:
 8017cc0:	b507      	push	{r0, r1, r2, lr}
 8017cc2:	2201      	movs	r2, #1
 8017cc4:	f10d 0306 	add.w	r3, sp, #6
 8017cc8:	4611      	mov	r1, r2
 8017cca:	2000      	movs	r0, #0
 8017ccc:	f000 fa10 	bl	80180f0 <enet_phy_write_read>
 8017cd0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017cd4:	f080 0004 	eor.w	r0, r0, #4
 8017cd8:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8017cdc:	b003      	add	sp, #12
 8017cde:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08017ce4 <adc_clock_config>:
 8017ce4:	4b06      	ldr	r3, [pc, #24]	; (8017d00 <adc_clock_config+0x1c>)
 8017ce6:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8017cea:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8017cee:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 8017cf2:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8017cf6:	4310      	orrs	r0, r2
 8017cf8:	f8c3 0304 	str.w	r0, [r3, #772]	; 0x304
 8017cfc:	4770      	bx	lr
 8017cfe:	bf00      	nop
 8017d00:	40012000 	andmi	r2, r1, r0

08017d04 <adc_special_function_config>:
 8017d04:	b510      	push	{r4, lr}
 8017d06:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8017d0a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8017d0e:	f001 0102 	and.w	r1, r1, #2
 8017d12:	b17a      	cbz	r2, 8017d34 <adc_special_function_config+0x30>
 8017d14:	b11b      	cbz	r3, 8017d1e <adc_special_function_config+0x1a>
 8017d16:	6843      	ldr	r3, [r0, #4]
 8017d18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8017d1c:	6043      	str	r3, [r0, #4]
 8017d1e:	b11c      	cbz	r4, 8017d28 <adc_special_function_config+0x24>
 8017d20:	6843      	ldr	r3, [r0, #4]
 8017d22:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8017d26:	6043      	str	r3, [r0, #4]
 8017d28:	b119      	cbz	r1, 8017d32 <adc_special_function_config+0x2e>
 8017d2a:	6883      	ldr	r3, [r0, #8]
 8017d2c:	f043 0302 	orr.w	r3, r3, #2
 8017d30:	6083      	str	r3, [r0, #8]
 8017d32:	bd10      	pop	{r4, pc}
 8017d34:	b11b      	cbz	r3, 8017d3e <adc_special_function_config+0x3a>
 8017d36:	6843      	ldr	r3, [r0, #4]
 8017d38:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8017d3c:	6043      	str	r3, [r0, #4]
 8017d3e:	b11c      	cbz	r4, 8017d48 <adc_special_function_config+0x44>
 8017d40:	6843      	ldr	r3, [r0, #4]
 8017d42:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8017d46:	6043      	str	r3, [r0, #4]
 8017d48:	2900      	cmp	r1, #0
 8017d4a:	d0f2      	beq.n	8017d32 <adc_special_function_config+0x2e>
 8017d4c:	6883      	ldr	r3, [r0, #8]
 8017d4e:	f023 0302 	bic.w	r3, r3, #2
 8017d52:	e7ed      	b.n	8017d30 <adc_special_function_config+0x2c>

08017d54 <adc_data_alignment_config>:
 8017d54:	6883      	ldr	r3, [r0, #8]
 8017d56:	b119      	cbz	r1, 8017d60 <adc_data_alignment_config+0xc>
 8017d58:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017d5c:	6083      	str	r3, [r0, #8]
 8017d5e:	4770      	bx	lr
 8017d60:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017d64:	e7fa      	b.n	8017d5c <adc_data_alignment_config+0x8>

08017d66 <adc_enable>:
 8017d66:	6883      	ldr	r3, [r0, #8]
 8017d68:	07db      	lsls	r3, r3, #31
 8017d6a:	bf5e      	ittt	pl
 8017d6c:	6883      	ldrpl	r3, [r0, #8]
 8017d6e:	f043 0301 	orrpl.w	r3, r3, #1
 8017d72:	6083      	strpl	r3, [r0, #8]
 8017d74:	4770      	bx	lr

08017d76 <adc_calibration_enable>:
 8017d76:	6883      	ldr	r3, [r0, #8]
 8017d78:	f043 0308 	orr.w	r3, r3, #8
 8017d7c:	f100 0208 	add.w	r2, r0, #8
 8017d80:	6083      	str	r3, [r0, #8]
 8017d82:	6813      	ldr	r3, [r2, #0]
 8017d84:	0719      	lsls	r1, r3, #28
 8017d86:	d4fc      	bmi.n	8017d82 <adc_calibration_enable+0xc>
 8017d88:	6883      	ldr	r3, [r0, #8]
 8017d8a:	f043 0304 	orr.w	r3, r3, #4
 8017d8e:	6083      	str	r3, [r0, #8]
 8017d90:	6813      	ldr	r3, [r2, #0]
 8017d92:	075b      	lsls	r3, r3, #29
 8017d94:	d4fc      	bmi.n	8017d90 <adc_calibration_enable+0x1a>
 8017d96:	4770      	bx	lr

08017d98 <adc_channel_16_to_18>:
 8017d98:	f400 0380 	and.w	r3, r0, #4194304	; 0x400000
 8017d9c:	f400 0000 	and.w	r0, r0, #8388608	; 0x800000
 8017da0:	b181      	cbz	r1, 8017dc4 <adc_channel_16_to_18+0x2c>
 8017da2:	b133      	cbz	r3, 8017db2 <adc_channel_16_to_18+0x1a>
 8017da4:	4a0f      	ldr	r2, [pc, #60]	; (8017de4 <adc_channel_16_to_18+0x4c>)
 8017da6:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8017daa:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8017dae:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8017db2:	b130      	cbz	r0, 8017dc2 <adc_channel_16_to_18+0x2a>
 8017db4:	4a0b      	ldr	r2, [pc, #44]	; (8017de4 <adc_channel_16_to_18+0x4c>)
 8017db6:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8017dba:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8017dbe:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8017dc2:	4770      	bx	lr
 8017dc4:	b133      	cbz	r3, 8017dd4 <adc_channel_16_to_18+0x3c>
 8017dc6:	4a07      	ldr	r2, [pc, #28]	; (8017de4 <adc_channel_16_to_18+0x4c>)
 8017dc8:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8017dcc:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8017dd0:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 8017dd4:	2800      	cmp	r0, #0
 8017dd6:	d0f4      	beq.n	8017dc2 <adc_channel_16_to_18+0x2a>
 8017dd8:	4a02      	ldr	r2, [pc, #8]	; (8017de4 <adc_channel_16_to_18+0x4c>)
 8017dda:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 8017dde:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8017de2:	e7ec      	b.n	8017dbe <adc_channel_16_to_18+0x26>
 8017de4:	40012000 	andmi	r2, r1, r0

08017de8 <adc_channel_length_config>:
 8017de8:	2901      	cmp	r1, #1
 8017dea:	d002      	beq.n	8017df2 <adc_channel_length_config+0xa>
 8017dec:	2902      	cmp	r1, #2
 8017dee:	d00c      	beq.n	8017e0a <adc_channel_length_config+0x22>
 8017df0:	4770      	bx	lr
 8017df2:	3a01      	subs	r2, #1
 8017df4:	2a0f      	cmp	r2, #15
 8017df6:	d813      	bhi.n	8017e20 <adc_channel_length_config+0x38>
 8017df8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017dfa:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8017dfe:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017e00:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017e02:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8017e06:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017e08:	4770      	bx	lr
 8017e0a:	3a01      	subs	r2, #1
 8017e0c:	2a03      	cmp	r2, #3
 8017e0e:	d807      	bhi.n	8017e20 <adc_channel_length_config+0x38>
 8017e10:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8017e12:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8017e16:	6383      	str	r3, [r0, #56]	; 0x38
 8017e18:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8017e1a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8017e1e:	6383      	str	r3, [r0, #56]	; 0x38
 8017e20:	4770      	bx	lr

08017e22 <adc_inserted_channel_config>:
 8017e22:	2903      	cmp	r1, #3
 8017e24:	b530      	push	{r4, r5, lr}
 8017e26:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8017e28:	d80f      	bhi.n	8017e4a <adc_inserted_channel_config+0x28>
 8017e2a:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8017e2e:	1a61      	subs	r1, r4, r1
 8017e30:	f06f 0404 	mvn.w	r4, #4
 8017e34:	4361      	muls	r1, r4
 8017e36:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8017e38:	310f      	adds	r1, #15
 8017e3a:	241f      	movs	r4, #31
 8017e3c:	408c      	lsls	r4, r1
 8017e3e:	ea25 0404 	bic.w	r4, r5, r4
 8017e42:	fa02 f101 	lsl.w	r1, r2, r1
 8017e46:	4321      	orrs	r1, r4
 8017e48:	6381      	str	r1, [r0, #56]	; 0x38
 8017e4a:	2a09      	cmp	r2, #9
 8017e4c:	d80a      	bhi.n	8017e64 <adc_inserted_channel_config+0x42>
 8017e4e:	6901      	ldr	r1, [r0, #16]
 8017e50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017e54:	2407      	movs	r4, #7
 8017e56:	4094      	lsls	r4, r2
 8017e58:	ea21 0104 	bic.w	r1, r1, r4
 8017e5c:	4093      	lsls	r3, r2
 8017e5e:	430b      	orrs	r3, r1
 8017e60:	6103      	str	r3, [r0, #16]
 8017e62:	bd30      	pop	{r4, r5, pc}
 8017e64:	2a12      	cmp	r2, #18
 8017e66:	d8fc      	bhi.n	8017e62 <adc_inserted_channel_config+0x40>
 8017e68:	3a0a      	subs	r2, #10
 8017e6a:	68c1      	ldr	r1, [r0, #12]
 8017e6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017e70:	2407      	movs	r4, #7
 8017e72:	4094      	lsls	r4, r2
 8017e74:	ea21 0104 	bic.w	r1, r1, r4
 8017e78:	4093      	lsls	r3, r2
 8017e7a:	430b      	orrs	r3, r1
 8017e7c:	60c3      	str	r3, [r0, #12]
 8017e7e:	e7f0      	b.n	8017e62 <adc_inserted_channel_config+0x40>

08017e80 <adc_external_trigger_config>:
 8017e80:	2901      	cmp	r1, #1
 8017e82:	d002      	beq.n	8017e8a <adc_external_trigger_config+0xa>
 8017e84:	2902      	cmp	r1, #2
 8017e86:	d009      	beq.n	8017e9c <adc_external_trigger_config+0x1c>
 8017e88:	4770      	bx	lr
 8017e8a:	6883      	ldr	r3, [r0, #8]
 8017e8c:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8017e90:	6083      	str	r3, [r0, #8]
 8017e92:	6883      	ldr	r3, [r0, #8]
 8017e94:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8017e98:	6083      	str	r3, [r0, #8]
 8017e9a:	4770      	bx	lr
 8017e9c:	6883      	ldr	r3, [r0, #8]
 8017e9e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8017ea2:	6083      	str	r3, [r0, #8]
 8017ea4:	6883      	ldr	r3, [r0, #8]
 8017ea6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8017eaa:	e7f5      	b.n	8017e98 <adc_external_trigger_config+0x18>

08017eac <adc_software_trigger_enable>:
 8017eac:	2901      	cmp	r1, #1
 8017eae:	d002      	beq.n	8017eb6 <adc_software_trigger_enable+0xa>
 8017eb0:	2902      	cmp	r1, #2
 8017eb2:	d005      	beq.n	8017ec0 <adc_software_trigger_enable+0x14>
 8017eb4:	4770      	bx	lr
 8017eb6:	6883      	ldr	r3, [r0, #8]
 8017eb8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8017ebc:	6083      	str	r3, [r0, #8]
 8017ebe:	4770      	bx	lr
 8017ec0:	6883      	ldr	r3, [r0, #8]
 8017ec2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8017ec6:	e7f9      	b.n	8017ebc <adc_software_trigger_enable+0x10>

08017ec8 <enet_delay>:
 8017ec8:	b082      	sub	sp, #8
 8017eca:	2300      	movs	r3, #0
 8017ecc:	9301      	str	r3, [sp, #4]
 8017ece:	9001      	str	r0, [sp, #4]
 8017ed0:	9b01      	ldr	r3, [sp, #4]
 8017ed2:	b90b      	cbnz	r3, 8017ed8 <enet_delay+0x10>
 8017ed4:	b002      	add	sp, #8
 8017ed6:	4770      	bx	lr
 8017ed8:	9b01      	ldr	r3, [sp, #4]
 8017eda:	3b01      	subs	r3, #1
 8017edc:	9301      	str	r3, [sp, #4]
 8017ede:	e7f7      	b.n	8017ed0 <enet_delay+0x8>

08017ee0 <enet_software_reset>:
 8017ee0:	4b07      	ldr	r3, [pc, #28]	; (8017f00 <enet_software_reset+0x20>)
 8017ee2:	681a      	ldr	r2, [r3, #0]
 8017ee4:	f042 0201 	orr.w	r2, r2, #1
 8017ee8:	601a      	str	r2, [r3, #0]
 8017eea:	4a06      	ldr	r2, [pc, #24]	; (8017f04 <enet_software_reset+0x24>)
 8017eec:	6819      	ldr	r1, [r3, #0]
 8017eee:	07c9      	lsls	r1, r1, #31
 8017ef0:	d501      	bpl.n	8017ef6 <enet_software_reset+0x16>
 8017ef2:	3a01      	subs	r2, #1
 8017ef4:	d1fa      	bne.n	8017eec <enet_software_reset+0xc>
 8017ef6:	6818      	ldr	r0, [r3, #0]
 8017ef8:	43c0      	mvns	r0, r0
 8017efa:	f000 0001 	and.w	r0, r0, #1
 8017efe:	4770      	bx	lr
 8017f00:	40029000 	andmi	r9, r2, r0
 8017f04:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08017f08 <enet_descriptors_chain_init>:
 8017f08:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8017f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f0e:	4a19      	ldr	r2, [pc, #100]	; (8017f74 <enet_descriptors_chain_init+0x6c>)
 8017f10:	d125      	bne.n	8017f5e <enet_descriptors_chain_init+0x56>
 8017f12:	4b19      	ldr	r3, [pc, #100]	; (8017f78 <enet_descriptors_chain_init+0x70>)
 8017f14:	6113      	str	r3, [r2, #16]
 8017f16:	4a19      	ldr	r2, [pc, #100]	; (8017f7c <enet_descriptors_chain_init+0x74>)
 8017f18:	4c19      	ldr	r4, [pc, #100]	; (8017f80 <enet_descriptors_chain_init+0x78>)
 8017f1a:	6013      	str	r3, [r2, #0]
 8017f1c:	2500      	movs	r5, #0
 8017f1e:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8017f22:	2008      	movs	r0, #8
 8017f24:	4917      	ldr	r1, [pc, #92]	; (8017f84 <enet_descriptors_chain_init+0x7c>)
 8017f26:	2200      	movs	r2, #0
 8017f28:	600a      	str	r2, [r1, #0]
 8017f2a:	4917      	ldr	r1, [pc, #92]	; (8017f88 <enet_descriptors_chain_init+0x80>)
 8017f2c:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8017f30:	600a      	str	r2, [r1, #0]
 8017f32:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8017f36:	f103 0110 	add.w	r1, r3, #16
 8017f3a:	fb0e 4702 	mla	r7, lr, r2, r4
 8017f3e:	f841 7c08 	str.w	r7, [r1, #-8]
 8017f42:	4594      	cmp	ip, r2
 8017f44:	bf94      	ite	ls
 8017f46:	461f      	movls	r7, r3
 8017f48:	460f      	movhi	r7, r1
 8017f4a:	3201      	adds	r2, #1
 8017f4c:	4290      	cmp	r0, r2
 8017f4e:	e941 6504 	strd	r6, r5, [r1, #-16]
 8017f52:	f841 7c04 	str.w	r7, [r1, #-4]
 8017f56:	f101 0110 	add.w	r1, r1, #16
 8017f5a:	d1ee      	bne.n	8017f3a <enet_descriptors_chain_init+0x32>
 8017f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017f5e:	4b0b      	ldr	r3, [pc, #44]	; (8017f8c <enet_descriptors_chain_init+0x84>)
 8017f60:	60d3      	str	r3, [r2, #12]
 8017f62:	4a0b      	ldr	r2, [pc, #44]	; (8017f90 <enet_descriptors_chain_init+0x88>)
 8017f64:	4c0b      	ldr	r4, [pc, #44]	; (8017f94 <enet_descriptors_chain_init+0x8c>)
 8017f66:	6013      	str	r3, [r2, #0]
 8017f68:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8017f6c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8017f70:	2046      	movs	r0, #70	; 0x46
 8017f72:	e7d7      	b.n	8017f24 <enet_descriptors_chain_init+0x1c>
 8017f74:	40029000 	andmi	r9, r2, r0
 8017f78:	2002d2c8 	andcs	sp, r2, r8, asr #5
 8017f7c:	2000fdd0 	ldrdcs	pc, [r0], -r0
 8017f80:	2002a328 	andcs	sl, r2, r8, lsr #6
 8017f84:	2000fdc4 	andcs	pc, r0, r4, asr #27
 8017f88:	2000fdc8 	andcs	pc, r0, r8, asr #27
 8017f8c:	20029ec8 	andcs	r9, r2, r8, asr #29
 8017f90:	2000fdcc 	andcs	pc, r0, ip, asr #27
 8017f94:	2000fe10 	andcs	pc, r0, r0, lsl lr	; <UNPREDICTABLE>

08017f98 <enet_frame_receive>:
 8017f98:	4b22      	ldr	r3, [pc, #136]	; (8018024 <enet_frame_receive+0x8c>)
 8017f9a:	681a      	ldr	r2, [r3, #0]
 8017f9c:	6812      	ldr	r2, [r2, #0]
 8017f9e:	2a00      	cmp	r2, #0
 8017fa0:	b570      	push	{r4, r5, r6, lr}
 8017fa2:	db3c      	blt.n	801801e <enet_frame_receive+0x86>
 8017fa4:	b970      	cbnz	r0, 8017fc4 <enet_frame_receive+0x2c>
 8017fa6:	681a      	ldr	r2, [r3, #0]
 8017fa8:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8017fac:	6011      	str	r1, [r2, #0]
 8017fae:	491e      	ldr	r1, [pc, #120]	; (8018028 <enet_frame_receive+0x90>)
 8017fb0:	6948      	ldr	r0, [r1, #20]
 8017fb2:	0600      	lsls	r0, r0, #24
 8017fb4:	d422      	bmi.n	8017ffc <enet_frame_receive+0x64>
 8017fb6:	6851      	ldr	r1, [r2, #4]
 8017fb8:	0448      	lsls	r0, r1, #17
 8017fba:	d524      	bpl.n	8018006 <enet_frame_receive+0x6e>
 8017fbc:	68d2      	ldr	r2, [r2, #12]
 8017fbe:	601a      	str	r2, [r3, #0]
 8017fc0:	2001      	movs	r0, #1
 8017fc2:	bd70      	pop	{r4, r5, r6, pc}
 8017fc4:	f402 4403 	and.w	r4, r2, #33536	; 0x8300
 8017fc8:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8017fcc:	d127      	bne.n	801801e <enet_frame_receive+0x86>
 8017fce:	4e17      	ldr	r6, [pc, #92]	; (801802c <enet_frame_receive+0x94>)
 8017fd0:	6836      	ldr	r6, [r6, #0]
 8017fd2:	f3c2 450d 	ubfx	r5, r2, #16, #14
 8017fd6:	01b6      	lsls	r6, r6, #6
 8017fd8:	f1a5 0404 	sub.w	r4, r5, #4
 8017fdc:	d503      	bpl.n	8017fe6 <enet_frame_receive+0x4e>
 8017fde:	f012 0f20 	tst.w	r2, #32
 8017fe2:	bf18      	it	ne
 8017fe4:	462c      	movne	r4, r5
 8017fe6:	428c      	cmp	r4, r1
 8017fe8:	d819      	bhi.n	801801e <enet_frame_receive+0x86>
 8017fea:	2200      	movs	r2, #0
 8017fec:	42a2      	cmp	r2, r4
 8017fee:	6819      	ldr	r1, [r3, #0]
 8017ff0:	d0d9      	beq.n	8017fa6 <enet_frame_receive+0xe>
 8017ff2:	6889      	ldr	r1, [r1, #8]
 8017ff4:	5c51      	ldrb	r1, [r2, r1]
 8017ff6:	5481      	strb	r1, [r0, r2]
 8017ff8:	3201      	adds	r2, #1
 8017ffa:	e7f7      	b.n	8017fec <enet_frame_receive+0x54>
 8017ffc:	2080      	movs	r0, #128	; 0x80
 8017ffe:	6148      	str	r0, [r1, #20]
 8018000:	2000      	movs	r0, #0
 8018002:	6088      	str	r0, [r1, #8]
 8018004:	e7d7      	b.n	8017fb6 <enet_frame_receive+0x1e>
 8018006:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801800a:	4907      	ldr	r1, [pc, #28]	; (8018028 <enet_frame_receive+0x90>)
 801800c:	bf09      	itett	eq
 801800e:	6809      	ldreq	r1, [r1, #0]
 8018010:	68ca      	ldrne	r2, [r1, #12]
 8018012:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8018016:	3210      	addeq	r2, #16
 8018018:	bf08      	it	eq
 801801a:	1852      	addeq	r2, r2, r1
 801801c:	e7cf      	b.n	8017fbe <enet_frame_receive+0x26>
 801801e:	2000      	movs	r0, #0
 8018020:	e7cf      	b.n	8017fc2 <enet_frame_receive+0x2a>
 8018022:	bf00      	nop
 8018024:	2000fdcc 	andcs	pc, r0, ip, asr #27
 8018028:	40029000 	andmi	r9, r2, r0
 801802c:	40028000 	andmi	r8, r2, r0

08018030 <enet_frame_transmit>:
 8018030:	4a1e      	ldr	r2, [pc, #120]	; (80180ac <enet_frame_transmit+0x7c>)
 8018032:	6813      	ldr	r3, [r2, #0]
 8018034:	681b      	ldr	r3, [r3, #0]
 8018036:	2b00      	cmp	r3, #0
 8018038:	b530      	push	{r4, r5, lr}
 801803a:	db34      	blt.n	80180a6 <enet_frame_transmit+0x76>
 801803c:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8018040:	4299      	cmp	r1, r3
 8018042:	d830      	bhi.n	80180a6 <enet_frame_transmit+0x76>
 8018044:	b9e8      	cbnz	r0, 8018082 <enet_frame_transmit+0x52>
 8018046:	6813      	ldr	r3, [r2, #0]
 8018048:	4819      	ldr	r0, [pc, #100]	; (80180b0 <enet_frame_transmit+0x80>)
 801804a:	6059      	str	r1, [r3, #4]
 801804c:	6819      	ldr	r1, [r3, #0]
 801804e:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8018052:	6019      	str	r1, [r3, #0]
 8018054:	6941      	ldr	r1, [r0, #20]
 8018056:	6944      	ldr	r4, [r0, #20]
 8018058:	f001 0104 	and.w	r1, r1, #4
 801805c:	f004 0420 	and.w	r4, r4, #32
 8018060:	4321      	orrs	r1, r4
 8018062:	d110      	bne.n	8018086 <enet_frame_transmit+0x56>
 8018064:	6819      	ldr	r1, [r3, #0]
 8018066:	02c8      	lsls	r0, r1, #11
 8018068:	d511      	bpl.n	801808e <enet_frame_transmit+0x5e>
 801806a:	68db      	ldr	r3, [r3, #12]
 801806c:	6013      	str	r3, [r2, #0]
 801806e:	2001      	movs	r0, #1
 8018070:	bd30      	pop	{r4, r5, pc}
 8018072:	68a4      	ldr	r4, [r4, #8]
 8018074:	5cc5      	ldrb	r5, [r0, r3]
 8018076:	551d      	strb	r5, [r3, r4]
 8018078:	3301      	adds	r3, #1
 801807a:	428b      	cmp	r3, r1
 801807c:	6814      	ldr	r4, [r2, #0]
 801807e:	d1f8      	bne.n	8018072 <enet_frame_transmit+0x42>
 8018080:	e7e1      	b.n	8018046 <enet_frame_transmit+0x16>
 8018082:	2300      	movs	r3, #0
 8018084:	e7f9      	b.n	801807a <enet_frame_transmit+0x4a>
 8018086:	6141      	str	r1, [r0, #20]
 8018088:	2100      	movs	r1, #0
 801808a:	6041      	str	r1, [r0, #4]
 801808c:	e7ea      	b.n	8018064 <enet_frame_transmit+0x34>
 801808e:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8018092:	4907      	ldr	r1, [pc, #28]	; (80180b0 <enet_frame_transmit+0x80>)
 8018094:	bf09      	itett	eq
 8018096:	6809      	ldreq	r1, [r1, #0]
 8018098:	690b      	ldrne	r3, [r1, #16]
 801809a:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801809e:	3310      	addeq	r3, #16
 80180a0:	bf08      	it	eq
 80180a2:	185b      	addeq	r3, r3, r1
 80180a4:	e7e2      	b.n	801806c <enet_frame_transmit+0x3c>
 80180a6:	2000      	movs	r0, #0
 80180a8:	e7e2      	b.n	8018070 <enet_frame_transmit+0x40>
 80180aa:	bf00      	nop
 80180ac:	2000fdd0 	ldrdcs	pc, [r0], -r0
 80180b0:	40029000 	andmi	r9, r2, r0

080180b4 <enet_transmit_checksum_config>:
 80180b4:	6803      	ldr	r3, [r0, #0]
 80180b6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80180ba:	430b      	orrs	r3, r1
 80180bc:	6003      	str	r3, [r0, #0]
 80180be:	4770      	bx	lr

080180c0 <enet_mac_address_set>:
 80180c0:	4b03      	ldr	r3, [pc, #12]	; (80180d0 <enet_mac_address_set+0x10>)
 80180c2:	888a      	ldrh	r2, [r1, #4]
 80180c4:	50c2      	str	r2, [r0, r3]
 80180c6:	3304      	adds	r3, #4
 80180c8:	680a      	ldr	r2, [r1, #0]
 80180ca:	50c2      	str	r2, [r0, r3]
 80180cc:	4770      	bx	lr
 80180ce:	bf00      	nop
 80180d0:	40028040 	andmi	r8, r2, r0, asr #32

080180d4 <enet_rx_enable>:
 80180d4:	4a05      	ldr	r2, [pc, #20]	; (80180ec <enet_rx_enable+0x18>)
 80180d6:	6813      	ldr	r3, [r2, #0]
 80180d8:	f043 0304 	orr.w	r3, r3, #4
 80180dc:	6013      	str	r3, [r2, #0]
 80180de:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80180e2:	6993      	ldr	r3, [r2, #24]
 80180e4:	f043 0302 	orr.w	r3, r3, #2
 80180e8:	6193      	str	r3, [r2, #24]
 80180ea:	4770      	bx	lr
 80180ec:	40028000 	andmi	r8, r2, r0

080180f0 <enet_phy_write_read>:
 80180f0:	b530      	push	{r4, r5, lr}
 80180f2:	4d12      	ldr	r5, [pc, #72]	; (801813c <enet_phy_write_read+0x4c>)
 80180f4:	4604      	mov	r4, r0
 80180f6:	6928      	ldr	r0, [r5, #16]
 80180f8:	0192      	lsls	r2, r2, #6
 80180fa:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80180fe:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8018102:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8018106:	4302      	orrs	r2, r0
 8018108:	02c9      	lsls	r1, r1, #11
 801810a:	b289      	uxth	r1, r1
 801810c:	4322      	orrs	r2, r4
 801810e:	430a      	orrs	r2, r1
 8018110:	2c02      	cmp	r4, #2
 8018112:	bf04      	itt	eq
 8018114:	8819      	ldrheq	r1, [r3, #0]
 8018116:	6169      	streq	r1, [r5, #20]
 8018118:	f042 0201 	orr.w	r2, r2, #1
 801811c:	612a      	str	r2, [r5, #16]
 801811e:	4907      	ldr	r1, [pc, #28]	; (801813c <enet_phy_write_read+0x4c>)
 8018120:	4a07      	ldr	r2, [pc, #28]	; (8018140 <enet_phy_write_read+0x50>)
 8018122:	6908      	ldr	r0, [r1, #16]
 8018124:	07c0      	lsls	r0, r0, #31
 8018126:	d501      	bpl.n	801812c <enet_phy_write_read+0x3c>
 8018128:	3a01      	subs	r2, #1
 801812a:	d1fa      	bne.n	8018122 <enet_phy_write_read+0x32>
 801812c:	690a      	ldr	r2, [r1, #16]
 801812e:	43d2      	mvns	r2, r2
 8018130:	f002 0001 	and.w	r0, r2, #1
 8018134:	b90c      	cbnz	r4, 801813a <enet_phy_write_read+0x4a>
 8018136:	694a      	ldr	r2, [r1, #20]
 8018138:	801a      	strh	r2, [r3, #0]
 801813a:	bd30      	pop	{r4, r5, pc}
 801813c:	40028000 	andmi	r8, r2, r0
 8018140:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08018144 <enet_phy_config>:
 8018144:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018146:	4d26      	ldr	r5, [pc, #152]	; (80181e0 <enet_phy_config+0x9c>)
 8018148:	2001      	movs	r0, #1
 801814a:	692c      	ldr	r4, [r5, #16]
 801814c:	f7fe fbf0 	bl	8016930 <rcu_clock_freq_get>
 8018150:	4b24      	ldr	r3, [pc, #144]	; (80181e4 <enet_phy_config+0xa0>)
 8018152:	4a25      	ldr	r2, [pc, #148]	; (80181e8 <enet_phy_config+0xa4>)
 8018154:	4403      	add	r3, r0
 8018156:	4293      	cmp	r3, r2
 8018158:	f024 041c 	bic.w	r4, r4, #28
 801815c:	d21f      	bcs.n	801819e <enet_phy_config+0x5a>
 801815e:	f044 0408 	orr.w	r4, r4, #8
 8018162:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018166:	612c      	str	r4, [r5, #16]
 8018168:	2200      	movs	r2, #0
 801816a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801816e:	2101      	movs	r1, #1
 8018170:	f10d 0306 	add.w	r3, sp, #6
 8018174:	2002      	movs	r0, #2
 8018176:	f7ff ffbb 	bl	80180f0 <enet_phy_write_read>
 801817a:	b350      	cbz	r0, 80181d2 <enet_phy_config+0x8e>
 801817c:	481b      	ldr	r0, [pc, #108]	; (80181ec <enet_phy_config+0xa8>)
 801817e:	2200      	movs	r2, #0
 8018180:	f7ff fea2 	bl	8017ec8 <enet_delay>
 8018184:	2101      	movs	r1, #1
 8018186:	f10d 0306 	add.w	r3, sp, #6
 801818a:	4610      	mov	r0, r2
 801818c:	f7ff ffb0 	bl	80180f0 <enet_phy_write_read>
 8018190:	b1f8      	cbz	r0, 80181d2 <enet_phy_config+0x8e>
 8018192:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018196:	43c0      	mvns	r0, r0
 8018198:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801819c:	e01a      	b.n	80181d4 <enet_phy_config+0x90>
 801819e:	4b14      	ldr	r3, [pc, #80]	; (80181f0 <enet_phy_config+0xac>)
 80181a0:	4a14      	ldr	r2, [pc, #80]	; (80181f4 <enet_phy_config+0xb0>)
 80181a2:	4403      	add	r3, r0
 80181a4:	4293      	cmp	r3, r2
 80181a6:	d802      	bhi.n	80181ae <enet_phy_config+0x6a>
 80181a8:	f044 040c 	orr.w	r4, r4, #12
 80181ac:	e7d9      	b.n	8018162 <enet_phy_config+0x1e>
 80181ae:	4b12      	ldr	r3, [pc, #72]	; (80181f8 <enet_phy_config+0xb4>)
 80181b0:	4a12      	ldr	r2, [pc, #72]	; (80181fc <enet_phy_config+0xb8>)
 80181b2:	4403      	add	r3, r0
 80181b4:	4293      	cmp	r3, r2
 80181b6:	d3d4      	bcc.n	8018162 <enet_phy_config+0x1e>
 80181b8:	4b11      	ldr	r3, [pc, #68]	; (8018200 <enet_phy_config+0xbc>)
 80181ba:	4a12      	ldr	r2, [pc, #72]	; (8018204 <enet_phy_config+0xc0>)
 80181bc:	4403      	add	r3, r0
 80181be:	4293      	cmp	r3, r2
 80181c0:	d802      	bhi.n	80181c8 <enet_phy_config+0x84>
 80181c2:	f044 0404 	orr.w	r4, r4, #4
 80181c6:	e7cc      	b.n	8018162 <enet_phy_config+0x1e>
 80181c8:	4b0f      	ldr	r3, [pc, #60]	; (8018208 <enet_phy_config+0xc4>)
 80181ca:	4a10      	ldr	r2, [pc, #64]	; (801820c <enet_phy_config+0xc8>)
 80181cc:	4403      	add	r3, r0
 80181ce:	4293      	cmp	r3, r2
 80181d0:	d902      	bls.n	80181d8 <enet_phy_config+0x94>
 80181d2:	2000      	movs	r0, #0
 80181d4:	b003      	add	sp, #12
 80181d6:	bd30      	pop	{r4, r5, pc}
 80181d8:	f044 0410 	orr.w	r4, r4, #16
 80181dc:	e7c1      	b.n	8018162 <enet_phy_config+0x1e>
 80181de:	bf00      	nop
 80181e0:	40028000 	andmi	r8, r2, r0
 80181e4:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80181e8:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80181ec:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80181f0:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 80181f4:	017d783f 	cmneq	sp, pc, lsr r8
 80181f8:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80181fc:	02625a00 	rsbeq	r5, r2, #0, 20
 8018200:	fa0a1f00 	blx	829fe08 <__exidx_end+0x283998>
 8018204:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8018208:	f70f2e80 			; <UNDEFINED> instruction: 0xf70f2e80
 801820c:	02faf080 	rscseq	pc, sl, #128	; 0x80

08018210 <enet_init>:
 8018210:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018212:	2300      	movs	r3, #0
 8018214:	4604      	mov	r4, r0
 8018216:	460d      	mov	r5, r1
 8018218:	4616      	mov	r6, r2
 801821a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801821e:	f7ff ff91 	bl	8018144 <enet_phy_config>
 8018222:	2800      	cmp	r0, #0
 8018224:	d032      	beq.n	801828c <enet_init+0x7c>
 8018226:	4b39      	ldr	r3, [pc, #228]	; (801830c <enet_init+0xfc>)
 8018228:	4a39      	ldr	r2, [pc, #228]	; (8018310 <enet_init+0x100>)
 801822a:	6819      	ldr	r1, [r3, #0]
 801822c:	400a      	ands	r2, r1
 801822e:	601a      	str	r2, [r3, #0]
 8018230:	2200      	movs	r2, #0
 8018232:	605a      	str	r2, [r3, #4]
 8018234:	609a      	str	r2, [r3, #8]
 8018236:	60da      	str	r2, [r3, #12]
 8018238:	6999      	ldr	r1, [r3, #24]
 801823a:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801823e:	0409      	lsls	r1, r1, #16
 8018240:	0c09      	lsrs	r1, r1, #16
 8018242:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8018246:	6199      	str	r1, [r3, #24]
 8018248:	4932      	ldr	r1, [pc, #200]	; (8018314 <enet_init+0x104>)
 801824a:	61da      	str	r2, [r3, #28]
 801824c:	6988      	ldr	r0, [r1, #24]
 801824e:	4b32      	ldr	r3, [pc, #200]	; (8018318 <enet_init+0x108>)
 8018250:	4003      	ands	r3, r0
 8018252:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8018256:	618b      	str	r3, [r1, #24]
 8018258:	680b      	ldr	r3, [r1, #0]
 801825a:	4b30      	ldr	r3, [pc, #192]	; (801831c <enet_init+0x10c>)
 801825c:	600b      	str	r3, [r1, #0]
 801825e:	2c01      	cmp	r4, #1
 8018260:	d01e      	beq.n	80182a0 <enet_init+0x90>
 8018262:	08e3      	lsrs	r3, r4, #3
 8018264:	0861      	lsrs	r1, r4, #1
 8018266:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 801826a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801826e:	430b      	orrs	r3, r1
 8018270:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018274:	2101      	movs	r1, #1
 8018276:	f10d 0306 	add.w	r3, sp, #6
 801827a:	2002      	movs	r0, #2
 801827c:	f7ff ff38 	bl	80180f0 <enet_phy_write_read>
 8018280:	b158      	cbz	r0, 801829a <enet_init+0x8a>
 8018282:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8018286:	f7ff fe1f 	bl	8017ec8 <enet_delay>
 801828a:	e05e      	b.n	801834a <enet_init+0x13a>
 801828c:	4824      	ldr	r0, [pc, #144]	; (8018320 <enet_init+0x110>)
 801828e:	f7ff fe1b 	bl	8017ec8 <enet_delay>
 8018292:	f7ff ff57 	bl	8018144 <enet_phy_config>
 8018296:	2800      	cmp	r0, #0
 8018298:	d1c5      	bne.n	8018226 <enet_init+0x16>
 801829a:	2000      	movs	r0, #0
 801829c:	b003      	add	sp, #12
 801829e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80182a0:	4f20      	ldr	r7, [pc, #128]	; (8018324 <enet_init+0x114>)
 80182a2:	4614      	mov	r4, r2
 80182a4:	2201      	movs	r2, #1
 80182a6:	4611      	mov	r1, r2
 80182a8:	f10d 0306 	add.w	r3, sp, #6
 80182ac:	2000      	movs	r0, #0
 80182ae:	f7ff ff1f 	bl	80180f0 <enet_phy_write_read>
 80182b2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80182b6:	f002 0204 	and.w	r2, r2, #4
 80182ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 80182be:	3401      	adds	r4, #1
 80182c0:	b912      	cbnz	r2, 80182c8 <enet_init+0xb8>
 80182c2:	42bc      	cmp	r4, r7
 80182c4:	d1ee      	bne.n	80182a4 <enet_init+0x94>
 80182c6:	e7e8      	b.n	801829a <enet_init+0x8a>
 80182c8:	42bc      	cmp	r4, r7
 80182ca:	d0e6      	beq.n	801829a <enet_init+0x8a>
 80182cc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80182d0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80182d4:	2101      	movs	r1, #1
 80182d6:	2200      	movs	r2, #0
 80182d8:	2002      	movs	r0, #2
 80182da:	f7ff ff09 	bl	80180f0 <enet_phy_write_read>
 80182de:	2800      	cmp	r0, #0
 80182e0:	d0db      	beq.n	801829a <enet_init+0x8a>
 80182e2:	4f10      	ldr	r7, [pc, #64]	; (8018324 <enet_init+0x114>)
 80182e4:	2400      	movs	r4, #0
 80182e6:	2201      	movs	r2, #1
 80182e8:	4611      	mov	r1, r2
 80182ea:	f10d 0306 	add.w	r3, sp, #6
 80182ee:	2000      	movs	r0, #0
 80182f0:	f7ff fefe 	bl	80180f0 <enet_phy_write_read>
 80182f4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80182f8:	f002 0220 	and.w	r2, r2, #32
 80182fc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018300:	3401      	adds	r4, #1
 8018302:	b98a      	cbnz	r2, 8018328 <enet_init+0x118>
 8018304:	42bc      	cmp	r4, r7
 8018306:	d1ee      	bne.n	80182e6 <enet_init+0xd6>
 8018308:	e7c7      	b.n	801829a <enet_init+0x8a>
 801830a:	bf00      	nop
 801830c:	40028000 	andmi	r8, r2, r0
 8018310:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8018314:	40029000 	andmi	r9, r2, r0
 8018318:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 801831c:	02c16000 	sbceq	r6, r1, #0
 8018320:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8018324:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8018328:	42bc      	cmp	r4, r7
 801832a:	d0b6      	beq.n	801829a <enet_init+0x8a>
 801832c:	2101      	movs	r1, #1
 801832e:	2210      	movs	r2, #16
 8018330:	2000      	movs	r0, #0
 8018332:	f7ff fedd 	bl	80180f0 <enet_phy_write_read>
 8018336:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801833a:	f3c3 0480 	ubfx	r4, r3, #2, #1
 801833e:	0799      	lsls	r1, r3, #30
 8018340:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8018344:	d401      	bmi.n	801834a <enet_init+0x13a>
 8018346:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801834a:	4b69      	ldr	r3, [pc, #420]	; (80184f0 <enet_init+0x2e0>)
 801834c:	681a      	ldr	r2, [r3, #0]
 801834e:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8018352:	4314      	orrs	r4, r2
 8018354:	056a      	lsls	r2, r5, #21
 8018356:	601c      	str	r4, [r3, #0]
 8018358:	d50b      	bpl.n	8018372 <enet_init+0x162>
 801835a:	681a      	ldr	r2, [r3, #0]
 801835c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8018360:	601a      	str	r2, [r3, #0]
 8018362:	4a64      	ldr	r2, [pc, #400]	; (80184f4 <enet_init+0x2e4>)
 8018364:	6993      	ldr	r3, [r2, #24]
 8018366:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801836a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801836e:	431d      	orrs	r5, r3
 8018370:	6195      	str	r5, [r2, #24]
 8018372:	485f      	ldr	r0, [pc, #380]	; (80184f0 <enet_init+0x2e0>)
 8018374:	6843      	ldr	r3, [r0, #4]
 8018376:	431e      	orrs	r6, r3
 8018378:	4b5f      	ldr	r3, [pc, #380]	; (80184f8 <enet_init+0x2e8>)
 801837a:	6046      	str	r6, [r0, #4]
 801837c:	681a      	ldr	r2, [r3, #0]
 801837e:	07d7      	lsls	r7, r2, #31
 8018380:	d513      	bpl.n	80183aa <enet_init+0x19a>
 8018382:	6801      	ldr	r1, [r0, #0]
 8018384:	685a      	ldr	r2, [r3, #4]
 8018386:	4c5d      	ldr	r4, [pc, #372]	; (80184fc <enet_init+0x2ec>)
 8018388:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
 801838c:	4014      	ands	r4, r2
 801838e:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8018392:	4321      	orrs	r1, r4
 8018394:	6001      	str	r1, [r0, #0]
 8018396:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 801839a:	0892      	lsrs	r2, r2, #2
 801839c:	6981      	ldr	r1, [r0, #24]
 801839e:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80183a2:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80183a6:	430a      	orrs	r2, r1
 80183a8:	6182      	str	r2, [r0, #24]
 80183aa:	681a      	ldr	r2, [r3, #0]
 80183ac:	0796      	lsls	r6, r2, #30
 80183ae:	d508      	bpl.n	80183c2 <enet_init+0x1b2>
 80183b0:	4950      	ldr	r1, [pc, #320]	; (80184f4 <enet_init+0x2e4>)
 80183b2:	6898      	ldr	r0, [r3, #8]
 80183b4:	680a      	ldr	r2, [r1, #0]
 80183b6:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 80183ba:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80183be:	4302      	orrs	r2, r0
 80183c0:	600a      	str	r2, [r1, #0]
 80183c2:	681a      	ldr	r2, [r3, #0]
 80183c4:	0755      	lsls	r5, r2, #29
 80183c6:	d508      	bpl.n	80183da <enet_init+0x1ca>
 80183c8:	494a      	ldr	r1, [pc, #296]	; (80184f4 <enet_init+0x2e4>)
 80183ca:	68d8      	ldr	r0, [r3, #12]
 80183cc:	680a      	ldr	r2, [r1, #0]
 80183ce:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80183d2:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80183d6:	4302      	orrs	r2, r0
 80183d8:	600a      	str	r2, [r1, #0]
 80183da:	681a      	ldr	r2, [r3, #0]
 80183dc:	0714      	lsls	r4, r2, #28
 80183de:	d508      	bpl.n	80183f2 <enet_init+0x1e2>
 80183e0:	4944      	ldr	r1, [pc, #272]	; (80184f4 <enet_init+0x2e4>)
 80183e2:	6918      	ldr	r0, [r3, #16]
 80183e4:	680a      	ldr	r2, [r1, #0]
 80183e6:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80183ea:	f022 0202 	bic.w	r2, r2, #2
 80183ee:	4302      	orrs	r2, r0
 80183f0:	600a      	str	r2, [r1, #0]
 80183f2:	681a      	ldr	r2, [r3, #0]
 80183f4:	06d0      	lsls	r0, r2, #27
 80183f6:	d506      	bpl.n	8018406 <enet_init+0x1f6>
 80183f8:	493e      	ldr	r1, [pc, #248]	; (80184f4 <enet_init+0x2e4>)
 80183fa:	4a41      	ldr	r2, [pc, #260]	; (8018500 <enet_init+0x2f0>)
 80183fc:	6988      	ldr	r0, [r1, #24]
 80183fe:	4002      	ands	r2, r0
 8018400:	6958      	ldr	r0, [r3, #20]
 8018402:	4302      	orrs	r2, r0
 8018404:	618a      	str	r2, [r1, #24]
 8018406:	681a      	ldr	r2, [r3, #0]
 8018408:	0691      	lsls	r1, r2, #26
 801840a:	d511      	bpl.n	8018430 <enet_init+0x220>
 801840c:	4839      	ldr	r0, [pc, #228]	; (80184f4 <enet_init+0x2e4>)
 801840e:	699a      	ldr	r2, [r3, #24]
 8018410:	6981      	ldr	r1, [r0, #24]
 8018412:	4c3c      	ldr	r4, [pc, #240]	; (8018504 <enet_init+0x2f4>)
 8018414:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8018418:	4014      	ands	r4, r2
 801841a:	f021 0104 	bic.w	r1, r1, #4
 801841e:	4321      	orrs	r1, r4
 8018420:	6181      	str	r1, [r0, #24]
 8018422:	6801      	ldr	r1, [r0, #0]
 8018424:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8018428:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 801842c:	430a      	orrs	r2, r1
 801842e:	6002      	str	r2, [r0, #0]
 8018430:	681a      	ldr	r2, [r3, #0]
 8018432:	0652      	lsls	r2, r2, #25
 8018434:	d506      	bpl.n	8018444 <enet_init+0x234>
 8018436:	492e      	ldr	r1, [pc, #184]	; (80184f0 <enet_init+0x2e0>)
 8018438:	69d8      	ldr	r0, [r3, #28]
 801843a:	69ca      	ldr	r2, [r1, #28]
 801843c:	0c52      	lsrs	r2, r2, #17
 801843e:	0452      	lsls	r2, r2, #17
 8018440:	4302      	orrs	r2, r0
 8018442:	61ca      	str	r2, [r1, #28]
 8018444:	681a      	ldr	r2, [r3, #0]
 8018446:	0617      	lsls	r7, r2, #24
 8018448:	d517      	bpl.n	801847a <enet_init+0x26a>
 801844a:	4c29      	ldr	r4, [pc, #164]	; (80184f0 <enet_init+0x2e0>)
 801844c:	6a1a      	ldr	r2, [r3, #32]
 801844e:	69a0      	ldr	r0, [r4, #24]
 8018450:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8018454:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8018458:	0400      	lsls	r0, r0, #16
 801845a:	0c00      	lsrs	r0, r0, #16
 801845c:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8018460:	4301      	orrs	r1, r0
 8018462:	4824      	ldr	r0, [pc, #144]	; (80184f4 <enet_init+0x2e4>)
 8018464:	61a1      	str	r1, [r4, #24]
 8018466:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801846a:	0a12      	lsrs	r2, r2, #8
 801846c:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8018470:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8018474:	430a      	orrs	r2, r1
 8018476:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801847a:	681a      	ldr	r2, [r3, #0]
 801847c:	05d6      	lsls	r6, r2, #23
 801847e:	bf42      	ittt	mi
 8018480:	4a1b      	ldrmi	r2, [pc, #108]	; (80184f0 <enet_init+0x2e0>)
 8018482:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8018484:	6091      	strmi	r1, [r2, #8]
 8018486:	681a      	ldr	r2, [r3, #0]
 8018488:	0595      	lsls	r5, r2, #22
 801848a:	bf42      	ittt	mi
 801848c:	4a18      	ldrmi	r2, [pc, #96]	; (80184f0 <enet_init+0x2e0>)
 801848e:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8018490:	60d1      	strmi	r1, [r2, #12]
 8018492:	681a      	ldr	r2, [r3, #0]
 8018494:	0554      	lsls	r4, r2, #21
 8018496:	d508      	bpl.n	80184aa <enet_init+0x29a>
 8018498:	4915      	ldr	r1, [pc, #84]	; (80184f0 <enet_init+0x2e0>)
 801849a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 801849c:	684a      	ldr	r2, [r1, #4]
 801849e:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80184a2:	f022 0206 	bic.w	r2, r2, #6
 80184a6:	4302      	orrs	r2, r0
 80184a8:	604a      	str	r2, [r1, #4]
 80184aa:	681a      	ldr	r2, [r3, #0]
 80184ac:	0510      	lsls	r0, r2, #20
 80184ae:	d508      	bpl.n	80184c2 <enet_init+0x2b2>
 80184b0:	490f      	ldr	r1, [pc, #60]	; (80184f0 <enet_init+0x2e0>)
 80184b2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80184b4:	680a      	ldr	r2, [r1, #0]
 80184b6:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80184ba:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80184be:	4302      	orrs	r2, r0
 80184c0:	600a      	str	r2, [r1, #0]
 80184c2:	681a      	ldr	r2, [r3, #0]
 80184c4:	04d1      	lsls	r1, r2, #19
 80184c6:	d506      	bpl.n	80184d6 <enet_init+0x2c6>
 80184c8:	4909      	ldr	r1, [pc, #36]	; (80184f0 <enet_init+0x2e0>)
 80184ca:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80184cc:	680a      	ldr	r2, [r1, #0]
 80184ce:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80184d2:	4302      	orrs	r2, r0
 80184d4:	600a      	str	r2, [r1, #0]
 80184d6:	681a      	ldr	r2, [r3, #0]
 80184d8:	0492      	lsls	r2, r2, #18
 80184da:	d506      	bpl.n	80184ea <enet_init+0x2da>
 80184dc:	4904      	ldr	r1, [pc, #16]	; (80184f0 <enet_init+0x2e0>)
 80184de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80184e0:	680a      	ldr	r2, [r1, #0]
 80184e2:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80184e6:	4313      	orrs	r3, r2
 80184e8:	600b      	str	r3, [r1, #0]
 80184ea:	2001      	movs	r0, #1
 80184ec:	e6d6      	b.n	801829c <enet_init+0x8c>
 80184ee:	bf00      	nop
 80184f0:	40028000 	andmi	r8, r2, r0
 80184f4:	40029000 	andmi	r9, r2, r0
 80184f8:	2000fdd4 	ldrdcs	pc, [r0], -r4
 80184fc:	02000080 	andeq	r0, r0, #128	; 0x80
 8018500:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c
 8018504:	01000004 	tsteq	r0, r4

08018508 <enet_txfifo_flush>:
 8018508:	4b06      	ldr	r3, [pc, #24]	; (8018524 <enet_txfifo_flush+0x1c>)
 801850a:	4807      	ldr	r0, [pc, #28]	; (8018528 <enet_txfifo_flush+0x20>)
 801850c:	699a      	ldr	r2, [r3, #24]
 801850e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8018512:	619a      	str	r2, [r3, #24]
 8018514:	699a      	ldr	r2, [r3, #24]
 8018516:	02d2      	lsls	r2, r2, #11
 8018518:	d502      	bpl.n	8018520 <enet_txfifo_flush+0x18>
 801851a:	3801      	subs	r0, #1
 801851c:	d1fa      	bne.n	8018514 <enet_txfifo_flush+0xc>
 801851e:	4770      	bx	lr
 8018520:	2001      	movs	r0, #1
 8018522:	4770      	bx	lr
 8018524:	40029000 	andmi	r9, r2, r0
 8018528:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801852c <enet_tx_enable>:
 801852c:	4a06      	ldr	r2, [pc, #24]	; (8018548 <enet_tx_enable+0x1c>)
 801852e:	b508      	push	{r3, lr}
 8018530:	6813      	ldr	r3, [r2, #0]
 8018532:	f043 0308 	orr.w	r3, r3, #8
 8018536:	6013      	str	r3, [r2, #0]
 8018538:	f7ff ffe6 	bl	8018508 <enet_txfifo_flush>
 801853c:	4a03      	ldr	r2, [pc, #12]	; (801854c <enet_tx_enable+0x20>)
 801853e:	6993      	ldr	r3, [r2, #24]
 8018540:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8018544:	6193      	str	r3, [r2, #24]
 8018546:	bd08      	pop	{r3, pc}
 8018548:	40028000 	andmi	r8, r2, r0
 801854c:	40029000 	andmi	r9, r2, r0

08018550 <enet_enable>:
 8018550:	b508      	push	{r3, lr}
 8018552:	f7ff ffeb 	bl	801852c <enet_tx_enable>
 8018556:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801855a:	f7ff bdbb 	b.w	80180d4 <enet_rx_enable>
	...

08018560 <enet_desc_information_get>:
 8018560:	2905      	cmp	r1, #5
 8018562:	d820      	bhi.n	80185a6 <enet_desc_information_get+0x46>
 8018564:	e8df f001 	tbb	[pc, r1]
 8018568:	0309191b 	movweq	r1, #39195	; 0x991b
 801856c:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8018570:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018574:	4770      	bx	lr
 8018576:	88c0      	ldrh	r0, [r0, #6]
 8018578:	e7fa      	b.n	8018570 <enet_desc_information_get+0x10>
 801857a:	6802      	ldr	r2, [r0, #0]
 801857c:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8018580:	2b04      	cmp	r3, #4
 8018582:	d913      	bls.n	80185ac <enet_desc_information_get+0x4c>
 8018584:	490a      	ldr	r1, [pc, #40]	; (80185b0 <enet_desc_information_get+0x50>)
 8018586:	6809      	ldr	r1, [r1, #0]
 8018588:	0189      	lsls	r1, r1, #6
 801858a:	f1a3 0004 	sub.w	r0, r3, #4
 801858e:	d50e      	bpl.n	80185ae <enet_desc_information_get+0x4e>
 8018590:	f012 0f20 	tst.w	r2, #32
 8018594:	bf18      	it	ne
 8018596:	4618      	movne	r0, r3
 8018598:	4770      	bx	lr
 801859a:	6880      	ldr	r0, [r0, #8]
 801859c:	4770      	bx	lr
 801859e:	6800      	ldr	r0, [r0, #0]
 80185a0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80185a4:	4770      	bx	lr
 80185a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80185aa:	4770      	bx	lr
 80185ac:	2000      	movs	r0, #0
 80185ae:	4770      	bx	lr
 80185b0:	40028000 	andmi	r8, r2, r0

080185b4 <enet_rxframe_drop>:
 80185b4:	4815      	ldr	r0, [pc, #84]	; (801860c <enet_rxframe_drop+0x58>)
 80185b6:	4916      	ldr	r1, [pc, #88]	; (8018610 <enet_rxframe_drop+0x5c>)
 80185b8:	6802      	ldr	r2, [r0, #0]
 80185ba:	b510      	push	{r4, lr}
 80185bc:	6854      	ldr	r4, [r2, #4]
 80185be:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80185c2:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 80185c6:	6013      	str	r3, [r2, #0]
 80185c8:	680b      	ldr	r3, [r1, #0]
 80185ca:	d009      	beq.n	80185e0 <enet_rxframe_drop+0x2c>
 80185cc:	b12b      	cbz	r3, 80185da <enet_rxframe_drop+0x26>
 80185ce:	68da      	ldr	r2, [r3, #12]
 80185d0:	6002      	str	r2, [r0, #0]
 80185d2:	681a      	ldr	r2, [r3, #0]
 80185d4:	b1ba      	cbz	r2, 8018606 <enet_rxframe_drop+0x52>
 80185d6:	600a      	str	r2, [r1, #0]
 80185d8:	bd10      	pop	{r4, pc}
 80185da:	68d3      	ldr	r3, [r2, #12]
 80185dc:	6003      	str	r3, [r0, #0]
 80185de:	e7fb      	b.n	80185d8 <enet_rxframe_drop+0x24>
 80185e0:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80185e4:	4c0b      	ldr	r4, [pc, #44]	; (8018614 <enet_rxframe_drop+0x60>)
 80185e6:	d006      	beq.n	80185f6 <enet_rxframe_drop+0x42>
 80185e8:	68e2      	ldr	r2, [r4, #12]
 80185ea:	6002      	str	r2, [r0, #0]
 80185ec:	2b00      	cmp	r3, #0
 80185ee:	d0f3      	beq.n	80185d8 <enet_rxframe_drop+0x24>
 80185f0:	681b      	ldr	r3, [r3, #0]
 80185f2:	600b      	str	r3, [r1, #0]
 80185f4:	e7f0      	b.n	80185d8 <enet_rxframe_drop+0x24>
 80185f6:	6824      	ldr	r4, [r4, #0]
 80185f8:	3210      	adds	r2, #16
 80185fa:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80185fe:	4422      	add	r2, r4
 8018600:	6002      	str	r2, [r0, #0]
 8018602:	2b00      	cmp	r3, #0
 8018604:	d0e8      	beq.n	80185d8 <enet_rxframe_drop+0x24>
 8018606:	3310      	adds	r3, #16
 8018608:	e7f3      	b.n	80185f2 <enet_rxframe_drop+0x3e>
 801860a:	bf00      	nop
 801860c:	2000fdcc 	andcs	pc, r0, ip, asr #27
 8018610:	2000fdc4 	andcs	pc, r0, r4, asr #27
 8018614:	40029000 	andmi	r9, r2, r0

08018618 <enet_rxframe_size_get>:
 8018618:	b508      	push	{r3, lr}
 801861a:	4b10      	ldr	r3, [pc, #64]	; (801865c <enet_rxframe_size_get+0x44>)
 801861c:	681b      	ldr	r3, [r3, #0]
 801861e:	681b      	ldr	r3, [r3, #0]
 8018620:	2b00      	cmp	r3, #0
 8018622:	db19      	blt.n	8018658 <enet_rxframe_size_get+0x40>
 8018624:	f403 4203 	and.w	r2, r3, #33536	; 0x8300
 8018628:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 801862c:	d003      	beq.n	8018636 <enet_rxframe_size_get+0x1e>
 801862e:	f7ff ffc1 	bl	80185b4 <enet_rxframe_drop>
 8018632:	2001      	movs	r0, #1
 8018634:	bd08      	pop	{r3, pc}
 8018636:	f003 0221 	and.w	r2, r3, #33	; 0x21
 801863a:	2a21      	cmp	r2, #33	; 0x21
 801863c:	d0f7      	beq.n	801862e <enet_rxframe_size_get+0x16>
 801863e:	4908      	ldr	r1, [pc, #32]	; (8018660 <enet_rxframe_size_get+0x48>)
 8018640:	6809      	ldr	r1, [r1, #0]
 8018642:	f3c3 420d 	ubfx	r2, r3, #16, #14
 8018646:	0189      	lsls	r1, r1, #6
 8018648:	f1a2 0004 	sub.w	r0, r2, #4
 801864c:	d5f2      	bpl.n	8018634 <enet_rxframe_size_get+0x1c>
 801864e:	f013 0f20 	tst.w	r3, #32
 8018652:	bf18      	it	ne
 8018654:	4610      	movne	r0, r2
 8018656:	e7ed      	b.n	8018634 <enet_rxframe_size_get+0x1c>
 8018658:	2000      	movs	r0, #0
 801865a:	e7eb      	b.n	8018634 <enet_rxframe_size_get+0x1c>
 801865c:	2000fdcc 	andcs	pc, r0, ip, asr #27
 8018660:	40028000 	andmi	r8, r2, r0

08018664 <enet_initpara_reset>:
 8018664:	4b08      	ldr	r3, [pc, #32]	; (8018688 <enet_initpara_reset+0x24>)
 8018666:	2200      	movs	r2, #0
 8018668:	e9c3 2200 	strd	r2, r2, [r3]
 801866c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8018670:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8018674:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8018678:	e9c3 2208 	strd	r2, r2, [r3, #32]
 801867c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8018680:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8018684:	639a      	str	r2, [r3, #56]	; 0x38
 8018686:	4770      	bx	lr
 8018688:	2000fdd4 	ldrdcs	pc, [r0], -r4

0801868c <enet_deinit>:
 801868c:	b508      	push	{r3, lr}
 801868e:	f240 4019 	movw	r0, #1049	; 0x419
 8018692:	f7fe f92c 	bl	80168ee <rcu_periph_reset_enable>
 8018696:	f240 4019 	movw	r0, #1049	; 0x419
 801869a:	f7fe f92a 	bl	80168f2 <rcu_periph_reset_disable>
 801869e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80186a2:	f7ff bfdf 	b.w	8018664 <enet_initpara_reset>
	...

080186a8 <i2c_clock_config>:
 80186a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80186aa:	4605      	mov	r5, r0
 80186ac:	2002      	movs	r0, #2
 80186ae:	460c      	mov	r4, r1
 80186b0:	4617      	mov	r7, r2
 80186b2:	f7fe f93d 	bl	8016930 <rcu_clock_freq_get>
 80186b6:	4a26      	ldr	r2, [pc, #152]	; (8018750 <i2c_clock_config+0xa8>)
 80186b8:	686e      	ldr	r6, [r5, #4]
 80186ba:	4603      	mov	r3, r0
 80186bc:	4825      	ldr	r0, [pc, #148]	; (8018754 <i2c_clock_config+0xac>)
 80186be:	fbb3 f0f0 	udiv	r0, r3, r0
 80186c2:	4293      	cmp	r3, r2
 80186c4:	bf94      	ite	ls
 80186c6:	4601      	movls	r1, r0
 80186c8:	2132      	movhi	r1, #50	; 0x32
 80186ca:	4a23      	ldr	r2, [pc, #140]	; (8018758 <i2c_clock_config+0xb0>)
 80186cc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 80186d0:	430e      	orrs	r6, r1
 80186d2:	4294      	cmp	r4, r2
 80186d4:	606e      	str	r6, [r5, #4]
 80186d6:	d811      	bhi.n	80186fc <i2c_clock_config+0x54>
 80186d8:	3001      	adds	r0, #1
 80186da:	2831      	cmp	r0, #49	; 0x31
 80186dc:	bf86      	itte	hi
 80186de:	2232      	movhi	r2, #50	; 0x32
 80186e0:	622a      	strhi	r2, [r5, #32]
 80186e2:	6228      	strls	r0, [r5, #32]
 80186e4:	0064      	lsls	r4, r4, #1
 80186e6:	fbb3 f4f4 	udiv	r4, r3, r4
 80186ea:	2c04      	cmp	r4, #4
 80186ec:	69ea      	ldr	r2, [r5, #28]
 80186ee:	bf38      	it	cc
 80186f0:	2404      	movcc	r4, #4
 80186f2:	f3c4 040b 	ubfx	r4, r4, #0, #12
 80186f6:	4314      	orrs	r4, r2
 80186f8:	61ec      	str	r4, [r5, #28]
 80186fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80186fc:	4a17      	ldr	r2, [pc, #92]	; (801875c <i2c_clock_config+0xb4>)
 80186fe:	4294      	cmp	r4, r2
 8018700:	d8fb      	bhi.n	80186fa <i2c_clock_config+0x52>
 8018702:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8018706:	4351      	muls	r1, r2
 8018708:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801870c:	fbb1 f1f2 	udiv	r1, r1, r2
 8018710:	3101      	adds	r1, #1
 8018712:	6229      	str	r1, [r5, #32]
 8018714:	b9a7      	cbnz	r7, 8018740 <i2c_clock_config+0x98>
 8018716:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801871a:	fbb3 f4f4 	udiv	r4, r3, r4
 801871e:	69eb      	ldr	r3, [r5, #28]
 8018720:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8018724:	61eb      	str	r3, [r5, #28]
 8018726:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801872a:	b90b      	cbnz	r3, 8018730 <i2c_clock_config+0x88>
 801872c:	f044 0401 	orr.w	r4, r4, #1
 8018730:	69eb      	ldr	r3, [r5, #28]
 8018732:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8018736:	61eb      	str	r3, [r5, #28]
 8018738:	69eb      	ldr	r3, [r5, #28]
 801873a:	4323      	orrs	r3, r4
 801873c:	61eb      	str	r3, [r5, #28]
 801873e:	e7dc      	b.n	80186fa <i2c_clock_config+0x52>
 8018740:	2219      	movs	r2, #25
 8018742:	4354      	muls	r4, r2
 8018744:	fbb3 f4f4 	udiv	r4, r3, r4
 8018748:	69eb      	ldr	r3, [r5, #28]
 801874a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801874e:	e7e9      	b.n	8018724 <i2c_clock_config+0x7c>
 8018750:	02faf07f 	rscseq	pc, sl, #127	; 0x7f
 8018754:	000f4240 	andeq	r4, pc, r0, asr #4
 8018758:	000186a0 	andeq	r8, r1, r0, lsr #13
 801875c:	00061a80 	andeq	r1, r6, r0, lsl #21

08018760 <i2c_ack_config>:
 8018760:	6803      	ldr	r3, [r0, #0]
 8018762:	2901      	cmp	r1, #1
 8018764:	bf0c      	ite	eq
 8018766:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 801876a:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 801876e:	6003      	str	r3, [r0, #0]
 8018770:	4770      	bx	lr

08018772 <i2c_ackpos_config>:
 8018772:	6803      	ldr	r3, [r0, #0]
 8018774:	b919      	cbnz	r1, 801877e <i2c_ackpos_config+0xc>
 8018776:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801877a:	6003      	str	r3, [r0, #0]
 801877c:	4770      	bx	lr
 801877e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8018782:	e7fa      	b.n	801877a <i2c_ackpos_config+0x8>

08018784 <i2c_master_addressing>:
 8018784:	3202      	adds	r2, #2
 8018786:	bf0c      	ite	eq
 8018788:	f021 0101 	biceq.w	r1, r1, #1
 801878c:	f041 0101 	orrne.w	r1, r1, #1
 8018790:	6101      	str	r1, [r0, #16]
 8018792:	4770      	bx	lr

08018794 <i2c_enable>:
 8018794:	6803      	ldr	r3, [r0, #0]
 8018796:	f043 0301 	orr.w	r3, r3, #1
 801879a:	6003      	str	r3, [r0, #0]
 801879c:	4770      	bx	lr

0801879e <i2c_start_on_bus>:
 801879e:	6803      	ldr	r3, [r0, #0]
 80187a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80187a4:	6003      	str	r3, [r0, #0]
 80187a6:	4770      	bx	lr

080187a8 <i2c_stop_on_bus>:
 80187a8:	6803      	ldr	r3, [r0, #0]
 80187aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80187ae:	6003      	str	r3, [r0, #0]
 80187b0:	4770      	bx	lr

080187b2 <i2c_data_transmit>:
 80187b2:	6101      	str	r1, [r0, #16]
 80187b4:	4770      	bx	lr

080187b6 <i2c_data_receive>:
 80187b6:	6900      	ldr	r0, [r0, #16]
 80187b8:	b2c0      	uxtb	r0, r0
 80187ba:	4770      	bx	lr

080187bc <i2c_flag_get>:
 80187bc:	098b      	lsrs	r3, r1, #6
 80187be:	f001 011f 	and.w	r1, r1, #31
 80187c2:	581a      	ldr	r2, [r3, r0]
 80187c4:	2301      	movs	r3, #1
 80187c6:	408b      	lsls	r3, r1
 80187c8:	4213      	tst	r3, r2
 80187ca:	bf14      	ite	ne
 80187cc:	2001      	movne	r0, #1
 80187ce:	2000      	moveq	r0, #0
 80187d0:	4770      	bx	lr

080187d2 <i2c_flag_clear>:
 80187d2:	f240 5301 	movw	r3, #1281	; 0x501
 80187d6:	4299      	cmp	r1, r3
 80187d8:	b510      	push	{r4, lr}
 80187da:	d102      	bne.n	80187e2 <i2c_flag_clear+0x10>
 80187dc:	6943      	ldr	r3, [r0, #20]
 80187de:	6983      	ldr	r3, [r0, #24]
 80187e0:	bd10      	pop	{r4, pc}
 80187e2:	098c      	lsrs	r4, r1, #6
 80187e4:	2201      	movs	r2, #1
 80187e6:	5823      	ldr	r3, [r4, r0]
 80187e8:	f001 011f 	and.w	r1, r1, #31
 80187ec:	408a      	lsls	r2, r1
 80187ee:	ea23 0302 	bic.w	r3, r3, r2
 80187f2:	5023      	str	r3, [r4, r0]
 80187f4:	e7f4      	b.n	80187e0 <i2c_flag_clear+0xe>
	...

080187f8 <syscfg_enet_phy_interface_config>:
 80187f8:	4a04      	ldr	r2, [pc, #16]	; (801880c <syscfg_enet_phy_interface_config+0x14>)
 80187fa:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 80187fe:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8018802:	4318      	orrs	r0, r3
 8018804:	f8c2 0804 	str.w	r0, [r2, #2052]	; 0x804
 8018808:	4770      	bx	lr
 801880a:	bf00      	nop
 801880c:	40013000 	andmi	r3, r1, r0

08018810 <mac_address_get(unsigned char*)>:
 8018810:	b570      	push	{r4, r5, r6, lr}
 8018812:	4a11      	ldr	r2, [pc, #68]	; (8018858 <mac_address_get(unsigned char*)+0x48>)
 8018814:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	; 0xa10
 8018818:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	; 0xa14
 801881c:	7042      	strb	r2, [r0, #1]
 801881e:	b086      	sub	sp, #24
 8018820:	0c19      	lsrs	r1, r3, #16
 8018822:	0a1c      	lsrs	r4, r3, #8
 8018824:	70c1      	strb	r1, [r0, #3]
 8018826:	7104      	strb	r4, [r0, #4]
 8018828:	7143      	strb	r3, [r0, #5]
 801882a:	0e1e      	lsrs	r6, r3, #24
 801882c:	2502      	movs	r5, #2
 801882e:	b2db      	uxtb	r3, r3
 8018830:	b2e4      	uxtb	r4, r4
 8018832:	b2c9      	uxtb	r1, r1
 8018834:	b2d2      	uxtb	r2, r2
 8018836:	7005      	strb	r5, [r0, #0]
 8018838:	7086      	strb	r6, [r0, #2]
 801883a:	e9cd 6102 	strd	r6, r1, [sp, #8]
 801883e:	e9cd 5200 	strd	r5, r2, [sp]
 8018842:	9305      	str	r3, [sp, #20]
 8018844:	4a05      	ldr	r2, [pc, #20]	; (801885c <mac_address_get(unsigned char*)+0x4c>)
 8018846:	4906      	ldr	r1, [pc, #24]	; (8018860 <mac_address_get(unsigned char*)+0x50>)
 8018848:	9404      	str	r4, [sp, #16]
 801884a:	232f      	movs	r3, #47	; 0x2f
 801884c:	4805      	ldr	r0, [pc, #20]	; (8018864 <mac_address_get(unsigned char*)+0x54>)
 801884e:	f7f1 fe33 	bl	800a4b8 <printf>
 8018852:	b006      	add	sp, #24
 8018854:	bd70      	pop	{r4, r5, r6, pc}
 8018856:	bf00      	nop
 8018858:	1fff7000 	svcne	0x00ff7000
 801885c:	0801c410 	stmdaeq	r1, {r4, sl, lr, pc}
 8018860:	0801c424 	stmdaeq	r1, {r2, r5, sl, lr, pc}
 8018864:	0801c434 	stmdaeq	r1, {r2, r4, r5, sl, lr, pc}

08018868 <__popcountsi2>:
 8018868:	0843      	lsrs	r3, r0, #1
 801886a:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 801886e:	1ac0      	subs	r0, r0, r3
 8018870:	0883      	lsrs	r3, r0, #2
 8018872:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8018876:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 801887a:	4418      	add	r0, r3
 801887c:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8018880:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8018884:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8018888:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 801888c:	0e00      	lsrs	r0, r0, #24
 801888e:	4770      	bx	lr

Disassembly of section .rodata:

08018890 <vtable for DisplayHandler-0x2c0>:
	...
 8018898:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801889c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80188a0:	00000000 	andeq	r0, r0, r0
 80188a4:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80188a8:	6f436e28 	svcvs	0x00436e28
 80188ac:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 80188b0:	202d2073 	eorcs	r2, sp, r3, ror r0
 80188b4:	3e202931 			; <UNDEFINED> instruction: 0x3e202931
 80188b8:	0030203d 	eorseq	r2, r0, sp, lsr r0
 80188bc:	74786554 	ldrbtvc	r6, [r8], #-1364	; 0xfffffaac
 80188c0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 80188c4:	2e007375 	mcrcs	3, 0, r7, cr0, cr5, {3}
 80188c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 80188cc:	69642d62 	stmdbvs	r4!, {r1, r5, r6, r8, sl, fp, sp}^
 80188d0:	616c7073 	smcvs	50947	; 0xc703
 80188d4:	6e692f79 	mcrvs	15, 3, r2, cr9, cr9, {3}
 80188d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 80188dc:	32692f65 	rsbcc	r2, r9, #404	; 0x194
 80188e0:	69642f63 	stmdbvs	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 80188e4:	616c7073 	smcvs	50947	; 0xc703
 80188e8:	00682e79 	rsbeq	r2, r8, r9, ror lr
 80188ec:	6f526e28 	svcvs	0x00526e28
 80188f0:	2d207377 	stccs	3, cr7, [r0, #-476]!	; 0xfffffe24
 80188f4:	20293120 	eorcs	r3, r9, r0, lsr #2
 80188f8:	30203d3e 	eorcc	r3, r0, lr, lsr sp
 80188fc:	3a323100 	bcc	8ca4d04 <__exidx_end+0xc88894>
 8018900:	313a3331 	teqcc	sl, r1, lsr r3
 8018904:	634f0034 	movtvs	r0, #61492	; 0xf034
 8018908:	31312074 	teqcc	r1, r4, ror r0
 801890c:	32303220 	eorscc	r3, r0, #32, 4
 8018910:	5b1b0032 	blpl	86d89e0 <__exidx_end+0x6bc570>
 8018914:	736d3233 	cmnvc	sp, #805306371	; 0x30000003
 8018918:	204e4341 	subcs	r4, lr, r1, asr #6
 801891c:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8018920:	69502031 	ldmdbvs	r0, {r0, r4, r5, sp}^
 8018924:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8018928:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 801892c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 8018930:	7b207265 	blvc	88352cc <__exidx_end+0x818e5c>
 8018934:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 8018938:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 801893c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018940:	207d7365 	rsbscs	r7, sp, r5, ror #6
 8018944:	7832202f 	ldmdavc	r2!, {r0, r1, r2, r3, r5, sp}
 8018948:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 801894c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8018950:	5f2e006d 	svcpl	0x002e006d
 8018954:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018958:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 801895c:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8018960:	6f6e0070 	svcvs	0x006e0070
 8018964:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 8018968:	204e4341 	subcs	r4, lr, r1, asr #6
 801896c:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8018970:	69502031 	ldmdbvs	r0, {r0, r4, r5, sp}^
 8018974:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8018978:	00584d44 	subseq	r4, r8, r4, asr #26
 801897c:	50746553 	rsbspl	r6, r4, r3, asr r5
 8018980:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8018984:	2e006e72 	mcrcs	14, 0, r6, cr0, cr2, {3}
 8018988:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 801898c:	73772d62 	cmnvc	r7, #6272	; 0x1880
 8018990:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 8018994:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 8018998:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 801899c:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 80189a0:	65746c65 	ldrbvs	r6, [r4, #-3173]!	; 0xfffff39b
 80189a4:	61707473 	cmnvs	r0, r3, ror r4
 80189a8:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
 80189ac:	00682e6e 	rsbeq	r2, r8, lr, ror #28
 80189b0:	486e5f73 	stmdami	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80189b4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 80189b8:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
 80189bc:	00312d20 	eorseq	r2, r1, r0, lsr #26
 80189c0:	43786d44 	cmnmi	r8, #68, 26	; 0x1100
 80189c4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80189c8:	70645567 	rsbvc	r5, r4, r7, ror #10
 80189cc:	2f2e2e00 	svccs	0x002e2e00
 80189d0:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
 80189d4:	2f786d64 	svccs	0x00786d64
 80189d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 80189dc:	2f656475 	svccs	0x00656475
 80189e0:	63786d64 	cmnvs	r8, #100, 26	; 0x1900
 80189e4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80189e8:	70647567 	rsbvc	r7, r4, r7, ror #10
 80189ec:	2e00682e 	cdpcs	8, 0, cr6, cr0, cr14, {1}
 80189f0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 80189f4:	696c2d62 	stmdbvs	ip!, {r1, r5, r6, r8, sl, fp, sp}^
 80189f8:	73746867 	cmnvc	r4, #6750208	; 0x670000
 80189fc:	692f7465 	stmdbvs	pc!, {r0, r2, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
 8018a00:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 8018a04:	6c2f6564 	cfstr32vs	mvfx6, [pc], #-400	; 801887c <__popcountsi2+0x14>
 8018a08:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 8018a0c:	36746573 			; <UNDEFINED> instruction: 0x36746573
 8018a10:	74697734 	strbtvc	r7, [r9], #-1844	; 0xfffff8cc
 8018a14:	682e3468 	stmdavs	lr!, {r3, r5, r6, sl, ip, sp}
 8018a18:	67694c00 	strbvs	r4, [r9, -r0, lsl #24]!
 8018a1c:	65537468 	ldrbvs	r7, [r3, #-1128]	; 0xfffffb98
 8018a20:	77343674 			; <UNDEFINED> instruction: 0x77343674
 8018a24:	34687469 	strbtcc	r7, [r8], #-1129	; 0xfffffb97
 8018a28:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8018a2c:	73252029 			; <UNDEFINED> instruction: 0x73252029
 8018a30:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8018a34:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 8018a38:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 8018a3c:	70252070 	eorvc	r2, r5, r0, ror r0
 8018a40:	4173000a 	cmnmi	r3, sl
 8018a44:	50204e43 	eorpl	r4, r0, r3, asr #28
 8018a48:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8018a4c:	2d752520 	cfldr64cs	mvdx2, [r5, #-128]!	; 0xffffff80
 8018a50:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8018a54:	4d442064 	stclmi	0, cr2, [r4, #-400]	; 0xfffffe70
 8018a58:	75252058 	strvc	r2, [r5, #-88]!	; 0xffffffa8
 8018a5c:	33444700 	movtcc	r4, #18176	; 0x4700
 8018a60:	35344632 	ldrcc	r4, [r4, #-1586]!	; 0xfffff9ce
 8018a64:	20495630 	subcs	r5, r9, r0, lsr r6
 8018a68:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8018a6c:	4d442d6c 	stclmi	13, cr2, [r4, #-432]	; 0xfffffe50
 8018a70:	65530058 	ldrbvs	r0, [r3, #-88]	; 0xffffffa8
 8018a74:	4d445274 	sfmmi	f5, 2, [r4, #-464]	; 0xfffffe30
 8018a78:	74636146 	strbtvc	r6, [r3], #-326	; 0xfffffeba
 8018a7c:	4479726f 	ldrbtmi	r7, [r9], #-623	; 0xfffffd91
 8018a80:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8018a84:	0073746c 	rsbseq	r7, r3, ip, ror #8
 8018a88:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 80189d8 <_etext+0x148>
 8018a8c:	722d6269 	eorvc	r6, sp, #-1879048186	; 0x90000006
 8018a90:	692f6d64 	stmdbvs	pc!, {r2, r5, r6, r8, sl, fp, sp, lr}	; <UNPREDICTABLE>
 8018a94:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 8018a98:	722f6564 	eorvc	r6, pc, #100, 10	; 0x19000000
 8018a9c:	65646d64 	strbvs	r6, [r4, #-3428]!	; 0xfffff29c
 8018aa0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8018aa4:	70736572 	rsbsvc	r6, r3, r2, ror r5
 8018aa8:	65646e6f 	strbvs	r6, [r4, #-3695]!	; 0xfffff191
 8018aac:	00682e72 	rsbeq	r2, r8, r2, ror lr
 8018ab0:	203e2d2d 	eorscs	r2, lr, sp, lsr #26
 8018ab4:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8018ab8:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8018abc:	2d3c000a 	ldccs	0, cr0, [ip, #-40]!	; 0xffffffd8
 8018ac0:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 8018ac4:	3a73253a 	bcc	9ce1fb4 <__exidx_end+0x1cc5b44>
 8018ac8:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018acc:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8018ad0:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8018ad4:	38206c65 	stmdacc	r0!, {r0, r2, r5, r6, sl, fp, sp, lr}
 8018ad8:	7864253a 	stmdavc	r4!, {r1, r3, r4, r5, r8, sl, sp}^
 8018adc:	25006425 	strcs	r6, [r0, #-1061]	; 0xfffffbdb
 8018ae0:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8018ae4:	64254720 	strtvs	r4, [r5], #-1824	; 0xfffff8e0
 8018ae8:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8018aec:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8018af0:	74530075 	ldrbvc	r0, [r3], #-117	; 0xffffff8b
 8018af4:	00747261 	rsbseq	r7, r4, r1, ror #4
 8018af8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8018a48 <_etext+0x1b8>
 8018afc:	722d6269 	eorvc	r6, sp, #-1879048186	; 0x90000006
 8018b00:	656e6d64 	strbvs	r6, [lr, #-3428]!	; 0xfffff29c
 8018b04:	6e692f74 	mcrvs	15, 3, r2, cr9, cr4, {3}
 8018b08:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 8018b0c:	6c6c2f65 	stclvs	15, cr2, [ip], #-404	; 0xfffffe6c
 8018b10:	65647072 	strbvs	r7, [r4, #-114]!	; 0xffffff8e
 8018b14:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8018b18:	6d00682e 	stcvs	8, cr6, [r0, #-184]	; 0xffffff48
 8018b1c:	61486e5f 	cmpvs	r8, pc, asr lr
 8018b20:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8018b24:	50524c4c 	subspl	r4, r2, ip, asr #24
 8018b28:	203d2120 	eorscs	r2, sp, r0, lsr #2
 8018b2c:	6400312d 	strvs	r3, [r0], #-301	; 0xfffffed3
 8018b30:	0021786d 	eoreq	r7, r1, sp, ror #16
 8018b34:	61657262 	cmnvs	r5, r2, ror #4
 8018b38:	6d00236b 	stcvs	3, cr2, [r0, #-428]	; 0xfffffe54
 8018b3c:	00236261 	eoreq	r6, r3, r1, ror #4
 8018b40:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8018b44:	23687365 	cmncs	r8, #-1811939327	; 0x94000001
 8018b48:	6f6c7300 	svcvs	0x006c7300
 8018b4c:	00237374 	eoreq	r7, r3, r4, ror r3

08018b50 <vtable for DisplayHandler>:
	...
 8018b58:	0800907f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, ip, pc}
 8018b5c:	080091c3 	stmdaeq	r0, {r0, r1, r6, r7, r8, ip, pc}
 8018b60:	08009225 	stmdaeq	r0, {r0, r2, r5, r9, ip, pc}

08018b64 <vtable for PixelDmxStartStop>:
	...
 8018b6c:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8018b70:	080091db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, ip, pc}
 8018b74:	08009085 	stmdaeq	r0, {r0, r2, r7, ip, pc}
 8018b78:	08009095 	stmdaeq	r0, {r0, r2, r4, r7, ip, pc}

08018b7c <vtable for LightSet64with4>:
	...
 8018b84:	080090a5 	stmdaeq	r0, {r0, r2, r5, r7, ip, pc}
 8018b88:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 8018b8c:	080090a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, ip, pc}
 8018b90:	080090c9 	stmdaeq	r0, {r0, r3, r6, r7, ip, pc}
 8018b94:	080090eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, ip, pc}
 8018b98:	0800911f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, ip, pc}
 8018b9c:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 8018ba0:	08009141 	stmdaeq	r0, {r0, r6, r8, ip, pc}
 8018ba4:	0800915f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, ip, pc}
 8018ba8:	08009163 	stmdaeq	r0, {r0, r1, r5, r6, r8, ip, pc}
 8018bac:	08009169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, pc}
 8018bb0:	0800916d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, ip, pc}

08018bb4 <vtable for RDMNetDevice>:
	...
 8018bbc:	08009275 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, ip, pc}
 8018bc0:	0800929d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, ip, pc}
 8018bc4:	0800d901 	stmdaeq	r0, {r0, r8, fp, ip, lr, pc}
 8018bc8:	0800d903 	stmdaeq	r0, {r0, r1, r8, fp, ip, lr, pc}
 8018bcc:	08009171 	stmdaeq	r0, {r0, r4, r5, r6, r8, ip, pc}
 8018bd0:	08009185 	stmdaeq	r0, {r0, r2, r7, r8, ip, pc}
 8018bd4:	080091f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, ip, pc}
 8018bd8:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8018bdc:	00000000 	andeq	r0, r0, r0
 8018be0:	08009295 	stmdaeq	r0, {r0, r2, r4, r7, r9, ip, pc}
 8018be4:	080092af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, ip, pc}
 8018be8:	0800917d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip, pc}
 8018bec:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8018bf0:	08009209 	stmdaeq	r0, {r0, r3, r9, ip, pc}

08018bf4 <vtable for FactoryDefaults>:
	...
 8018bfc:	0800919d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, ip, pc}
 8018c00:	080091e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, ip, pc}
 8018c04:	0800945d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, ip, pc}

08018c08 <CSWTCH.133>:
 8018c08:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8018c0c:	 	eorcc	r3, lr, r6, asr #2

08018c0d <SOFTWARE_VERSION>:
 8018c0d:	00302e31 	eorseq	r2, r0, r1, lsr lr

08018c11 <gamma10_0>:
 8018c11:	03020100 	movweq	r0, #8448	; 0x2100
 8018c15:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8018c19:	0b0a0908 	bleq	829b041 <__exidx_end+0x27ebd1>
 8018c1d:	0f0e0d0c 	svceq	0x000e0d0c
 8018c21:	13121110 	tstne	r2, #16, 2
 8018c25:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8018c29:	1b1a1918 	blne	869f091 <__exidx_end+0x682c21>
 8018c2d:	1f1e1d1c 	svcne	0x001e1d1c
 8018c31:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018c35:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8018c39:	2b2a2928 	blcs	8aa30e1 <__exidx_end+0xa86c71>
 8018c3d:	2f2e2d2c 	svccs	0x002e2d2c
 8018c41:	33323130 	teqcc	r2, #48, 2
 8018c45:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018c49:	3b3a3938 	blcc	8ea7131 <__exidx_end+0xe8acc1>
 8018c4d:	3f3e3d3c 	svccc	0x003e3d3c
 8018c51:	43424140 	movtmi	r4, #8512	; 0x2140
 8018c55:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8018c59:	4b4a4948 	blmi	92ab181 <__exidx_end+0x128ed11>
 8018c5d:	4f4e4d4c 	svcmi	0x004e4d4c
 8018c61:	53525150 	cmppl	r2, #80, 2
 8018c65:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8018c69:	5b5a5958 	blpl	96af1d1 <__exidx_end+0x1692d61>
 8018c6d:	5f5e5d5c 	svcpl	0x005e5d5c
 8018c71:	63626160 	cmnvs	r2, #96, 2
 8018c75:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8018c79:	6b6a6968 	blvs	9ab3221 <__exidx_end+0x1a96db1>
 8018c7d:	6f6e6d6c 	svcvs	0x006e6d6c
 8018c81:	73727170 	cmnvc	r2, #112, 2
 8018c85:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8018c89:	7b7a7978 	blvc	9eb7271 <__exidx_end+0x1e9ae01>
 8018c8d:	7f7e7d7c 	svcvc	0x007e7d7c
 8018c91:	83828180 	orrhi	r8, r2, #128, 2
 8018c95:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8018c99:	8b8a8988 	blhi	62bb2c1 <__stack_size+0x62b72c1>
 8018c9d:	8f8e8d8c 	svchi	0x008e8d8c
 8018ca1:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8018ca5:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8018ca9:	9b9a9998 	blls	66bf311 <__stack_size+0x66bb311>
 8018cad:	9f9e9d9c 	svcls	0x009e9d9c
 8018cb1:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8018cb5:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8018cb9:	abaaa9a8 	blge	6ac3361 <__stack_size+0x6abf361>
 8018cbd:	afaeadac 	svcge	0x00aeadac
 8018cc1:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8018cc5:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8018cc9:	bbbab9b8 	bllt	6ec73b1 <__stack_size+0x6ec33b1>
 8018ccd:	bfbebdbc 	svclt	0x00bebdbc
 8018cd1:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8018cd5:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8018cd9:	cbcac9c8 	blgt	72cb401 <__stack_size+0x72c7401>
 8018cdd:	cfcecdcc 	svcgt	0x00cecdcc
 8018ce1:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8018ce5:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8018ce9:	dbdad9d8 	blle	76cf451 <__stack_size+0x76cb451>
 8018ced:	dfdedddc 	svcle	0x00dedddc
 8018cf1:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8018cf5:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8018cf9:	ebeae9e8 	bl	7ad34a1 <__stack_size+0x7acf4a1>
 8018cfd:	efeeedec 	svc	0x00eeedec
 8018d01:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8018d05:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8018d09:	fbfaf9f8 	blx	7ed74f3 <__stack_size+0x7ed34f3>
 8018d0d:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08018d11 <SOFTWARE_VERSION>:
 8018d11:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8018d15:	7566202c 	strbvc	r2, [r6, #-44]!	; 0xffffffd4
 8018d19:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018d1d:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8018d21:	73736100 	cmnvc	r3, #0, 2
 8018d25:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018d29:	22206e6f 	eorcs	r6, r0, #1776	; 0x6f0
 8018d2d:	20227325 	eorcs	r7, r2, r5, lsr #6
 8018d31:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8018d35:	203a6465 	eorscs	r6, sl, r5, ror #8
 8018d39:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018d3d:	73252220 			; <UNDEFINED> instruction: 0x73252220
 8018d41:	6c202c22 	stcvs	12, cr2, [r0], #-136	; 0xffffff78
 8018d45:	20656e69 	rsbcs	r6, r5, r9, ror #28
 8018d49:	73256425 			; <UNDEFINED> instruction: 0x73256425
 8018d4d:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018d51:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018d55:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018d59:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8018d5d:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8018d61:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8018d65:	0a73252c 	beq	9ce221d <__exidx_end+0x1cc5dad>
 8018d69:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8018d6d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018d71:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018d75:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8018d79:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8018d7d:	4f000a64 	svcmi	0x00000a64
 8018d81:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8018d85:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8018d89:	616c7073 	smcvs	50947	; 0xc703
 8018d8d:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8018d91:	6674000a 	ldrbtvs	r0, [r4], -sl
 8018d95:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8018d99:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8018d9d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018da1:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8018da5:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8018da9:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8018dad:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8018db1:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8018db5:	20505446 	subscs	r5, r0, r6, asr #8
 8018db9:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8018dbd:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8018dc1:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8018dc5:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8018dc9:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8018dcd:	525b2066 	subspl	r2, fp, #102	; 0x66
 8018dd1:	6f6f6265 	svcvs	0x006f6265
 8018dd5:	00205d74 	eoreq	r5, r0, r4, ror sp
 8018dd9:	4f525245 	svcmi	0x00525245
 8018ddd:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8018de1:	000a7465 	andeq	r7, sl, r5, ror #8
 8018de5:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8018de9:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8018ded:	616c7073 	smcvs	50947	; 0xc703
 8018df1:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8018df5:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8018df9:	000a2123 	andeq	r2, sl, r3, lsr #2
 8018dfd:	4f525245 	svcmi	0x00525245
 8018e01:	0a3f2352 	beq	8fe1b51 <__exidx_end+0xfc56e1>
 8018e05:	62657200 	rsbvs	r7, r5, #0, 4
 8018e09:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8018e0d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8018e11:	00237473 	eoreq	r7, r3, r3, ror r4
 8018e15:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018e19:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8018e1d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8018e21:	76002365 	strvc	r2, [r0], -r5, ror #6
 8018e25:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018e29:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8018e2d:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8018e31:	63616600 	cmnvs	r1, #0, 12
 8018e35:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018e39:	 	tstmi	r0, r3, lsr #6

08018e3c <s_Node>:
 8018e3c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8018e40:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8018e4c:	41730000 	cmnmi	r3, r0
 8018e50:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8018e54:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8018e60:	2043534f 	subcs	r5, r3, pc, asr #6
 8018e64:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8018e68:	00007265 	andeq	r7, r0, r5, ror #4
 8018e6c:	00000000 	andeq	r0, r0, r0
 8018e70:	544c0000 	strbpl	r0, [ip], #-0
 8018e74:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8018e84:	2043534f 	subcs	r5, r3, pc, asr #6
 8018e88:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8018e8c:	0000746e 	andeq	r7, r0, lr, ror #8
 8018e90:	00000000 	andeq	r0, r0, r0
 8018e94:	44520000 	ldrbmi	r0, [r2], #-0
 8018e98:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8018e9c:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8018ea0:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8018ea4:	0000796c 	andeq	r7, r0, ip, ror #18
 8018ea8:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8018eac:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8018eb8:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8018ebc:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8018ecc:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8018edc:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8018ee0:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8018ee4:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8018ee8:	00000072 	andeq	r0, r0, r2, ror r0
 8018eec:	00000000 	andeq	r0, r0, r0
 8018ef0:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08018f02 <s_Output>:
 8018f02:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8018f0e:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8018f1a:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8018f1e:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8018f22:	00000000 	andeq	r0, r0, r0
 8018f26:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8018f2a:	0000006c 	andeq	r0, r0, ip, rrx
 8018f2e:	00000000 	andeq	r0, r0, r0
 8018f32:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8018f36:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8018f3a:	00000000 	andeq	r0, r0, r0
 8018f3e:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8018f4a:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018f4e:	00006769 	andeq	r6, r0, r9, ror #14
 8018f52:	00000000 	andeq	r0, r0, r0
 8018f56:	70657453 	rsbvc	r7, r5, r3, asr r4
 8018f5a:	00726570 	rsbseq	r6, r2, r0, ror r5
 8018f5e:	00000000 	andeq	r0, r0, r0
 8018f62:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8018f66:	00007265 	andeq	r7, r0, r5, ror #4
 8018f6a:	00000000 	andeq	r0, r0, r0
 8018f6e:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8018f72:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018f76:	00000000 	andeq	r0, r0, r0
 8018f7a:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8018f7e:	00006c61 	andeq	r6, r0, r1, ror #24
 8018f82:	00000000 	andeq	r0, r0, r0
 8018f86:	20424752 	subcs	r4, r2, r2, asr r7
 8018f8a:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8018f8e:	0000006c 	andeq	r0, r0, ip, rrx
	...

08018f94 <RemoteConfig::s_GET>:
 8018f94:	0800b395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, sp, pc}
 8018f98:	00000000 	andeq	r0, r0, r0
 8018f9c:	08018e06 	stmdaeq	r1, {r1, r2, r9, sl, fp, pc}
 8018fa0:	00000008 	andeq	r0, r0, r8
 8018fa4:	0800a821 	stmdaeq	r0, {r0, r5, fp, sp, pc}
 8018fa8:	00000000 	andeq	r0, r0, r0
 8018fac:	08018e0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, fp, pc}
 8018fb0:	00000005 	andeq	r0, r0, r5
 8018fb4:	0800a821 	stmdaeq	r0, {r0, r5, fp, sp, pc}
 8018fb8:	00000000 	andeq	r0, r0, r0
 8018fbc:	08018e15 	stmdaeq	r1, {r0, r2, r4, r9, sl, fp, pc}
 8018fc0:	00000006 	andeq	r0, r0, r6
 8018fc4:	0800a9d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, sp, pc}
 8018fc8:	00000000 	andeq	r0, r0, r0
 8018fcc:	08018e1c 	stmdaeq	r1, {r2, r3, r4, r9, sl, fp, pc}
 8018fd0:	00000007 	andeq	r0, r0, r7
 8018fd4:	0800a995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, sp, pc}
 8018fd8:	00000000 	andeq	r0, r0, r0
 8018fdc:	08018e24 	stmdaeq	r1, {r2, r5, r9, sl, fp, pc}
 8018fe0:	00000008 	andeq	r0, r0, r8
 8018fe4:	0800a8f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, sp, pc}
 8018fe8:	00000000 	andeq	r0, r0, r0
 8018fec:	08018deb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, fp, pc}
 8018ff0:	00000008 	andeq	r0, r0, r8
 8018ff4:	0800aca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, sp, pc}
 8018ff8:	00000000 	andeq	r0, r0, r0
 8018ffc:	08018e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, pc}
 8019000:	00010004 	andeq	r0, r1, r4
 8019004:	0800a945 	stmdaeq	r0, {r0, r2, r6, r8, fp, sp, pc}
 8019008:	00000000 	andeq	r0, r0, r0
 801900c:	08018de5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, fp, pc}
 8019010:	00000005 	andeq	r0, r0, r5
 8019014:	0800b085 	stmdaeq	r0, {r0, r2, r7, ip, sp, pc}
 8019018:	00000000 	andeq	r0, r0, r0
 801901c:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}
 8019020:	00000009 	andeq	r0, r0, r9

08019024 <RemoteConfig::s_SET>:
 8019024:	0800aa81 	stmdaeq	r0, {r0, r7, r9, fp, sp, pc}
 8019028:	00000000 	andeq	r0, r0, r0
 801902c:	08018de5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, fp, pc}
 8019030:	00010005 	andeq	r0, r1, r5
 8019034:	0800aa59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp, sp, pc}
 8019038:	00000000 	andeq	r0, r0, r0
 801903c:	08018deb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, fp, pc}
 8019040:	00010008 	andeq	r0, r1, r8
 8019044:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8019048:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 801904c:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8019050:	0a64253d 	beq	992254c <__exidx_end+0x19060dc>
 8019054:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8019058:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801905c:	002c2273 	eoreq	r2, ip, r3, ror r2
 8019060:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8019064:	000a7325 	andeq	r7, sl, r5, lsr #6
 8019068:	6f626552 	svcvs	0x00626552
 801906c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8019070:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8019074:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8019078:	6f6f6265 	svcvs	0x006f6265
 801907c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8019080:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8019084:	6f637200 	svcvs	0x00637200
 8019088:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801908c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8019090:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8019094:	6b726f77 	blvs	9cb4e78 <__exidx_end+0x1c98a08>
 8019098:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801909c:	73696400 	cmnvc	r9, #0, 8
 80190a0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80190a4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80190a8:	33316500 	teqcc	r1, #0, 10
 80190ac:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80190b0:	61700074 	cmnvs	r0, r4, ror r0
 80190b4:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80190b8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80190bc:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 80190c0:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80190c4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80190c8:	00000000 	andeq	r0, r0, r0

080190cc <RemoteConfig::s_TXT>:
 80190cc:	0800acb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, sp, pc}
 80190d0:	00000000 	andeq	r0, r0, r0
 80190d4:	0800af8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, sp, pc}
 80190d8:	00000000 	andeq	r0, r0, r0
 80190dc:	08019085 	stmdaeq	r1, {r0, r2, r7, ip, pc}
 80190e0:	0000000b 	andeq	r0, r0, fp
 80190e4:	0000000c 	andeq	r0, r0, ip
 80190e8:	0800ace1 	stmdaeq	r0, {r0, r5, r6, r7, sl, fp, sp, pc}
 80190ec:	00000000 	andeq	r0, r0, r0
 80190f0:	0800afbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 80190f4:	00000000 	andeq	r0, r0, r0
 80190f8:	08019091 	stmdaeq	r1, {r0, r4, r7, ip, pc}
 80190fc:	0000000b 	andeq	r0, r0, fp
 8019100:	00000000 	andeq	r0, r0, r0
 8019104:	0800ad9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, sp, pc}
 8019108:	00000000 	andeq	r0, r0, r0
 801910c:	0800b05d 	stmdaeq	r0, {r0, r2, r3, r4, r6, ip, sp, pc}
 8019110:	00000000 	andeq	r0, r0, r0
 8019114:	0801909d 	stmdaeq	r1, {r0, r2, r3, r4, r7, ip, pc}
 8019118:	0000000b 	andeq	r0, r0, fp
 801911c:	0000000f 	andeq	r0, r0, pc
 8019120:	0800ad11 	stmdaeq	r0, {r0, r4, r8, sl, fp, sp, pc}
 8019124:	00000000 	andeq	r0, r0, r0
 8019128:	0800afe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 801912c:	00000000 	andeq	r0, r0, r0
 8019130:	080190a9 	stmdaeq	r1, {r0, r3, r5, r7, ip, pc}
 8019134:	00000008 	andeq	r0, r0, r8
 8019138:	00000004 	andeq	r0, r0, r4
 801913c:	0800ad41 	stmdaeq	r0, {r0, r6, r8, sl, fp, sp, pc}
 8019140:	00000000 	andeq	r0, r0, r0
 8019144:	0800b00d 	stmdaeq	r0, {r0, r2, r3, ip, sp, pc}
 8019148:	00000000 	andeq	r0, r0, r0
 801914c:	080190b2 	stmdaeq	r1, {r1, r4, r5, r7, ip, pc}
 8019150:	0000000a 	andeq	r0, r0, sl
 8019154:	00000002 	andeq	r0, r0, r2
 8019158:	0800ad6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, pc}
 801915c:	00000000 	andeq	r0, r0, r0
 8019160:	0800b035 	stmdaeq	r0, {r0, r2, r4, r5, ip, sp, pc}
 8019164:	00000000 	andeq	r0, r0, r0
 8019168:	080190bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, ip, pc}
 801916c:	0000000b 	andeq	r0, r0, fp
 8019170:	00000003 	andeq	r0, r0, r3
 8019174:	00544547 	subseq	r4, r4, r7, asr #10
 8019178:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 801917c:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8019180:	0a200050 	beq	88192c8 <__exidx_end+0x7fce58>
 8019184:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8019188:	43003a00 	movwmi	r3, #2560	; 0xa00
 801918c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8019190:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8019194:	00657079 	rsbeq	r7, r5, r9, ror r0
 8019198:	61003b20 	tstvs	r0, r0, lsr #22
 801919c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80191a0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80191a4:	6a2f6e6f 	bvs	8bf4b68 <__exidx_end+0xbd86f8>
 80191a8:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80191ac:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80191b0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80191b4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80191b8:	2f006874 	svccs	0x00006874
 80191bc:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80191c0:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80191c4:	2f006c6d 	svccs	0x00006c6d
 80191c8:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80191cc:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80191d0:	2f007373 	svccs	0x00007373
 80191d4:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80191d8:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80191dc:	736a2f00 	cmnvc	sl, #0, 30
 80191e0:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80191e4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80191e8:	72657600 	rsbvc	r7, r5, #0, 12
 80191ec:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80191f0:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80191f4:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80191f8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80191fc:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8019200:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8019204:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8019208:	6a2f0079 	bvs	8bd93f4 <__exidx_end+0xbbcf84>
 801920c:	2f6e6f73 	svccs	0x006e6f73
 8019210:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019214:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8019218:	6f6f6265 	svcvs	0x006f6265
 801921c:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8019220:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8019224:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8019228:	434f4421 	movtmi	r4, #62497	; 0xf421
 801922c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8019230:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8019234:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8019238:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801923c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8019240:	3e646165 	powccsz	f6, f4, f5
 8019244:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8019248:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 801924c:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8019250:	742f3c74 	strtvc	r3, [pc], #-3188	; 8019258 <RemoteConfig::s_TXT+0x18c>
 8019254:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8019258:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801925c:	3e646165 	powccsz	f6, f4, f5
 8019260:	6f623c0a 	svcvs	0x00623c0a
 8019264:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8019268:	4f3e3168 	svcmi	0x003e3168
 801926c:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8019270:	2f3c3e31 	svccs	0x003c3e31
 8019274:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019278:	2f3c0a3e 	svccs	0x003c0a3e
 801927c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019280:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8019284:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8019288:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801928c:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8019290:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8019294:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8019298:	71655200 	cmnvc	r5, r0, lsl #4
 801929c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80192a0:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80192a4:	20797469 	rsbscs	r7, r9, r9, ror #8
 80192a8:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80192ac:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80192b0:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 80192b4:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80192b8:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80192bc:	6f542049 	svcvs	0x00542049
 80192c0:	6f4c206f 	svcvs	0x004c206f
 80192c4:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 80192c8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 80192cc:	206c616e 	rsbcs	r6, ip, lr, ror #2
 80192d0:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80192d4:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 80192d8:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80192dc:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80192e0:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80192e4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80192e8:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80192ec:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80192f0:	00646574 	rsbeq	r6, r4, r4, ror r5
 80192f4:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80192f8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80192fc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8019300:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8019304:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8019308:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 801930c:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8019310:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8019314:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8019318:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 801931c:	434f4421 	movtmi	r4, #62497	; 0xf421
 8019320:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8019324:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8019328:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801932c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019330:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8019334:	3e646165 	powccsz	f6, f4, f5
 8019338:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801933c:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8019340:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8019344:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8019348:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801934c:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8019350:	0a3e6461 	beq	8fb24dc <__exidx_end+0xf9606c>
 8019354:	646f623c 	strbtvs	r6, [pc], #-572	; 801935c <RemoteConfig::s_TXT+0x290>
 8019358:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801935c:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8019360:	31682f3c 	cmncc	r8, ip, lsr pc
 8019364:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8019368:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801936c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8019370:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8019374:	5448000a 	strbpl	r0, [r8], #-10
 8019378:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 801937c:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8019380:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8019384:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8019388:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 801938c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8019390:	6f430a0d 	svcvs	0x00430a0d
 8019394:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8019398:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 801939c:	203a6570 	eorscs	r6, sl, r0, ror r5
 80193a0:	0a0d7325 	beq	837603c <__exidx_end+0x359bcc>
 80193a4:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80193a8:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80193ac:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80193b0:	203a6874 	eorscs	r6, sl, r4, ror r8
 80193b4:	0a0d7525 	beq	8376850 <__exidx_end+0x35a3e0>
 80193b8:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80193bc:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80193c0:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80193c4:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 80193c8:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 80193cc:	4447000a 	strbmi	r0, [r7], #-10
 80193d0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
 80193d4:	49563035 	ldmdbmi	r6, {r0, r2, r4, r5, ip, sp}^
	...

080193d9 <contentType>:
 80193d9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80193dd:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80193e1:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80193f9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80193fd:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8019419:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801941d:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8019421:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8019425:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8019439:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801943d:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8019441:	2f6e6f69 	svccs	0x006e6f69
 8019445:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08019459 <RemoteConfigConst::PARAMS_DISABLE>:
 8019459:	61736964 	cmnvs	r3, r4, ror #18
 801945d:	00656c62 	rsbeq	r6, r5, r2, ror #24

08019461 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8019461:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8019465:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8019469:	00747874 	rsbseq	r7, r4, r4, ror r8

0801946d <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801946d:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8019471:	5f79616c 	svcpl	0x0079616c
 8019475:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801947a <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801947a:	61736964 	cmnvs	r3, r4, ror #18
 801947e:	5f656c62 	svcpl	0x00656c62
 8019482:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8019486:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08019488 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8019488:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801948c:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8019490:	6f6f6265 	svcvs	0x006f6265
 8019494:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08019496 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8019496:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801949a:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8018f36 <s_Output+0x34>
 801949e:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80194a2:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080194a4 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80194a4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80194a8:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80194ac:	6f746361 	svcvs	0x00746361
 80194b0:	7b007972 	blvc	8037a80 <__exidx_end+0x1b610>
 80194b4:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80194b8:	7b3a2274 	blvc	8ea1e90 <__exidx_end+0xe85a20>
 80194bc:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80194c0:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80194c4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80194c8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80194cc:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80194d0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80194d4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80194d8:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80194dc:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80194e0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80194e4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80194e8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80194ec:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80194f0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80194f4:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80194f8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80194fc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8019500:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8019504:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8019508:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801950c:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8019510:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8019514:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019518:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801951c:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8019520:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8019524:	616f6222 	cmnvs	pc, r2, lsr #4
 8019528:	3a226472 	bcc	88b26f8 <__exidx_end+0x896288>
 801952c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8019530:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8019534:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8019538:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801953c:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8019540:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8019544:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8019548:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801954c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8019550:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8019554:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8019558:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801955c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8019560:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8019564:	7b000a7d 	blvc	801bf60 <vtable for Ssd1306+0x80>
 8019568:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801956c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019570:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8019574:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8019578:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801957c:	7b3a2273 	blvc	8ea1f50 <__exidx_end+0xe85ae0>
 8019580:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8019584:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8019588:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 801958c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019590:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019594:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8019598:	72617022 	rsbvc	r7, r1, #34	; 0x22
 801959c:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80195a0:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80195a4:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 80195a8:	72542058 	subsvc	r2, r4, #88	; 0x58
 80195ac:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80195b0:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80195b4:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80195b8:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80195bc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80195c0:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80195c4:	5020584d 	eorpl	r5, r0, sp, asr #16
 80195c8:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80195cc:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 80195d0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80195d4:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 80195d8:	3a227478 	bcc	88b67c0 <__exidx_end+0x89a350>
 80195dc:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 80195e0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80195e4:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 80195e8:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80195ec:	6f777465 	svcvs	0x00777465
 80195f0:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 80195f4:	3a227478 	bcc	88b67dc <__exidx_end+0x89a36c>
 80195f8:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 80195fc:	6b726f77 	blvs	9cb53e0 <__exidx_end+0x1c98f70>
 8019600:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8019604:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8019608:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 801960c:	3a227478 	bcc	88b67f4 <__exidx_end+0x89a384>
 8019610:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8019614:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8019618:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801961c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019620:	6f697461 	svcvs	0x00697461
 8019624:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08019629 <index_html>:
 8019629:	4f44213c 	svcmi	0x0044213c
 801962d:	50595443 	subspl	r5, r9, r3, asr #8
 8019631:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8019635:	0a3e6c6d 	beq	8fb47f1 <__exidx_end+0xf98381>
 8019639:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 801963d:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8019641:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8019645:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8019649:	6b6e696c 	blvs	9bb3c01 <__exidx_end+0x1b97791>
 801964d:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8019651:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8019655:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8019659:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801965d:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8019661:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8019665:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8019669:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 801966d:	20227373 	eorcs	r7, r2, r3, ror r3
 8019671:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8019675:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8019679:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 801967d:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8019681:	0a3e656c 	beq	8fb2c39 <__exidx_end+0xf967c9>
 8019685:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8019689:	0a3e6461 	beq	8fb2815 <__exidx_end+0xf963a5>
 801968d:	646f623c 	strbtvs	r6, [pc], #-572	; 8019695 <index_html+0x6c>
 8019691:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8019695:	6165683c 	cmnvs	r5, ip, lsr r8
 8019699:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 801969d:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80196a1:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80196a5:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80196a9:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80196ad:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80196b1:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80196b5:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80196b9:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80196bd:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80196c1:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80196c5:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80196c9:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80196cd:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80196d1:	6f746365 	svcvs	0x00746365
 80196d5:	20227972 	eorcs	r7, r2, r2, ror r9
 80196d9:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80196dd:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80196e1:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80196e5:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80196e9:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80196ed:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80196f1:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80196f5:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80196f9:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80196fd:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8019701:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8019705:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8019709:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801970d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8019711:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8019715:	20227478 	eorcs	r7, r2, r8, ror r4
 8019719:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801971d:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8019721:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8019725:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8019729:	0a3e656c 	beq	8fb2ce1 <__exidx_end+0xf96871>
 801972d:	6f663c09 	svcvs	0x00663c09
 8019731:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8019735:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8019739:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801973d:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8019741:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019745:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8019749:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801974d:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8019751:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8019755:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8019759:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 801975d:	20747069 	rsbscs	r7, r4, r9, rrx
 8019761:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8019765:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8019769:	6a2e7865 	bvs	8bb7905 <__exidx_end+0xb9b495>
 801976d:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8019771:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8019775:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8019779:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 801977d:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8019781:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8019785:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8019789:	 	svcvs	0x0062000a

0801978b <styles_css>:
 801978b:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801978f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8019793:	63616220 	cmnvs	r1, #32, 4
 8019797:	6f72676b 	svcvs	0x0072676b
 801979b:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 801979f:	6f6c6f63 	svcvs	0x006c6f63
 80197a3:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80197a7:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80197ab:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80197af:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80197b3:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80197b7:	6f6c6f63 	svcvs	0x006c6f63
 80197bb:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80197bf:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80197c3:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80197c7:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80197cb:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80197cf:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80197d3:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80197d7:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80197db:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80197df:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80197e3:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80197e7:	0a3b7865 	beq	8ef7983 <__exidx_end+0xedb513>
 80197eb:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80197ef:	0a7b2069 	beq	9ee199b <__exidx_end+0x1ec552b>
 80197f3:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80197f7:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80197fb:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80197ff:	6f6e203a 	svcvs	0x006e203a
 8019803:	0a3b656e 	beq	8ef2dc3 <__exidx_end+0xed6953>
 8019807:	616d2020 	cmnvs	sp, r0, lsr #32
 801980b:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801980f:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8019813:	70352078 	eorsvc	r2, r5, r8, ror r0
 8019817:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 801981b:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 801981f:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8019823:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8019827:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801982b:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801982f:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8019833:	0a3b7865 	beq	8ef79cf <__exidx_end+0xedb55f>
 8019837:	6f622020 	svcvs	0x00622020
 801983b:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801983f:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8019843:	3a737569 	bcc	9cf6def <__exidx_end+0x1cda97f>
 8019847:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801984b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801984f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8019853:	203a7265 	eorscs	r7, sl, r5, ror #4
 8019857:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801985b:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801985f:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8019863:	0a3b7870 	beq	8ef7a2b <__exidx_end+0xedb5bb>
 8019867:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801986b:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801986f:	0a7b2072 	beq	9ee1a3f <__exidx_end+0x1ec55cf>
 8019873:	69642020 	stmdbvs	r4!, {r5, sp}^
 8019877:	616c7073 	smcvs	50947	; 0xc703
 801987b:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 801987f:	3b78656c 	blcc	9e32e37 <__exidx_end+0x1e169c7>
 8019883:	6a20200a 	bvs	88218b3 <__exidx_end+0x805443>
 8019887:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801988b:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 801988f:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8019893:	203a746e 	eorscs	r7, sl, lr, ror #8
 8019897:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801989b:	0a3b7265 	beq	8ef6237 <__exidx_end+0xed9dc7>
 801989f:	6f622020 	svcvs	0x00622020
 80198a3:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80198a7:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80198ab:	3a737569 	bcc	9cf6e57 <__exidx_end+0x1cda9e7>
 80198af:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80198b3:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80198b7:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80198bb:	203a7265 	eorscs	r7, sl, r5, ror #4
 80198bf:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80198c3:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80198c7:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80198cb:	0a3b7870 	beq	8ef7a93 <__exidx_end+0xedb623>
 80198cf:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

080198d4 <HttpContent>:
 80198d4:	080191c8 	stmdaeq	r1, {r3, r6, r7, r8, ip, pc}
 80198d8:	0801978b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip, pc}
 80198dc:	080191d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, ip, pc}
 80198e0:	080198ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, ip, pc}
 80198e4:	080191bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, ip, pc}
 80198e8:	08019629 	stmdaeq	r1, {r0, r3, r5, r9, sl, ip, pc}

080198ec <index_js>:
 80198ec:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80198f0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80198f4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80198f8:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80198fc:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019900:	6a284e4f 	bvs	8a2d244 <__exidx_end+0xa10dd4>
 8019904:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019908:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801990c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8019910:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8019914:	6a2f273d 	bvs	8be3610 <__exidx_end+0xbc71a0>
 8019918:	2f6e6f73 	svccs	0x006e6f73
 801991c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8019920:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8019924:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8019928:	20797274 	rsbscs	r7, r9, r4, ror r2
 801992c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8019930:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8019934:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8019938:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 801993c:	20746961 	rsbscs	r6, r4, r1, ror #18
 8019940:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8019944:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8019948:	0a3b296c 	beq	8ee3f00 <__exidx_end+0xec7a90>
 801994c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8019950:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8019954:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8019958:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801995c:	73657220 	cmnvc	r5, #32, 4
 8019960:	6f736a2e 	svcvs	0x00736a2e
 8019964:	3b29286e 	blcc	8a63b24 <__exidx_end+0xa476b4>
 8019968:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801996c:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8019970:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8019974:	6f727265 	svcvs	0x00727265
 8019978:	7b202972 	blvc	8823f48 <__exidx_end+0x807ad8>
 801997c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019980:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8019984:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8019988:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 801998c:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8019990:	3b29726f 	blcc	8a76354 <__exidx_end+0xa59ee4>
 8019994:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8019998:	0a0a7d0a 	beq	82b8dc8 <__exidx_end+0x29c958>
 801999c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80199a0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80199a4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80199a8:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80199ac:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80199b0:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80199b4:	20292874 	eorcs	r2, r9, r4, ror r8
 80199b8:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80199bc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80199c0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80199c4:	6177613d 	cmnvs	r7, sp, lsr r1
 80199c8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80199cc:	534a7465 	movtpl	r7, #42085	; 0xa465
 80199d0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80199d4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80199d8:	0a3b2927 	beq	8ee3e7c <__exidx_end+0xec7a0c>
 80199dc:	6f640909 	svcvs	0x00640909
 80199e0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80199e4:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80199e8:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80199ec:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80199f0:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80199f4:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80199f8:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80199fc:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8019a00:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8019a04:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8019a08:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8019a0c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8019a10:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8019a14:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8019a18:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8019a1c:	2b656d61 	blcs	9974fa8 <__exidx_end+0x1958b38>
 8019a20:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80199a0 <index_js+0xb4>
 8019a24:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8019a28:	2b223e69 	blcs	88a93d4 <__exidx_end+0x88cf64>
 8019a2c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8019a30:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8019a34:	6f6e2e74 	svcvs	0x006e2e74
 8019a38:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8019a3c:	2b657079 	blcs	9975c28 <__exidx_end+0x19597b8>
 8019a40:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80199c0 <index_js+0xd4>
 8019a44:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8019a48:	2b223e69 	blcs	88a93f4 <__exidx_end+0x88cf84>
 8019a4c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8019a50:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8019a54:	6f6e2e74 	svcvs	0x006e2e74
 8019a58:	702e6564 	eorvc	r6, lr, r4, ror #10
 8019a5c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8019a60:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8019a64:	2f3c222b 	svccs	0x003c222b
 8019a68:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8019a6c:	0a7d0a3b 	beq	9f5c360 <__exidx_end+0x1f3fef0>
 8019a70:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8019a74:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8019a78:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8019a7c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8019a80:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8019a84:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019a88:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8019a8c:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8019a90:	0a7b2029 	beq	9ee1b3c <__exidx_end+0x1ec56cc>
 8019a94:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8019a98:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8019a9c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8019aa0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019aa4:	6177613d 	cmnvs	r7, sp, lsr r1
 8019aa8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019aac:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019ab0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019ab4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8019ab8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8019abc:	3b292779 	blcc	8a638a8 <__exidx_end+0xa47438>
 8019ac0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019ac4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8019ac8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019acc:	0a22223d 	beq	88a23c8 <__exidx_end+0x885f58>
 8019ad0:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8019ad4:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8019ad8:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8019adc:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8019ae0:	6a624f3d 	bvs	98ad7dc <__exidx_end+0x189136c>
 8019ae4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8019ae8:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8019aec:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8019af0:	6f746365 	svcvs	0x00746365
 8019af4:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8019af8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8019afc:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8019b00:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8019b04:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8019b08:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8019b0c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8019b10:	6145726f 	cmpvs	r5, pc, ror #4
 8019b14:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8019b18:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8019b1c:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019b20:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8019b24:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8019b28:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8019b2c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019b30:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8019b34:	203d2065 	eorscs	r2, sp, r5, rrx
 8019b38:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8019b3c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8019b40:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8019b44:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8019b48:	6b5b5d22 	blvs	96f0fd8 <__exidx_end+0x16d4b68>
 8019b4c:	3b5d7965 	blcc	97780e8 <__exidx_end+0x175bc78>
 8019b50:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019b54:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8019b58:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8019b5c:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8019b60:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019b64:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8019b68:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8019b6c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8019b70:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8019b74:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8019b78:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8019b7c:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8019b80:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019b84:	0a3b223e 	beq	8ee2484 <__exidx_end+0xec6014>
 8019b88:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8019b8c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8019b90:	6f640909 	svcvs	0x00640909
 8019b94:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8019b98:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8019b9c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8019ba0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8019ba4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8019ba8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8019bac:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8019bb0:	6f746365 	svcvs	0x00746365
 8019bb4:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8019bb8:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8019bbc:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8019bc0:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8019bc4:	3b6c6d74 	blcc	9b3519c <__exidx_end+0x1b18d2c>
 8019bc8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8019bcc:	5f746567 	svcpl	0x00746567
 8019bd0:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8019bd4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8019bd8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8019bdc:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8019be0:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8019be4:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8019be8:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8019bec:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8019bf0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019bf4:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8019bf8:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8019bfc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019c00:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8019c04:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8019c08:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8019c0c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8019c10:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8019c14:	6177613d 	cmnvs	r7, sp, lsr r1
 8019c18:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019c1c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8019c20:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019c24:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019c28:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8019c2c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8019c30:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8019c34:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8019c38:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8019c3c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8019c40:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8019c44:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8019c48:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8019c4c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8019c50:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8019c54:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8019c58:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8019c5c:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8019c60:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8019c64:	2b22563e 	blcs	88af564 <__exidx_end+0x8930f4>
 8019c68:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019c6c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8019c70:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019c74:	2b6e6f69 	blcs	9bb5a20 <__exidx_end+0x1b995b0>
 8019c78:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8019bf8 <index_js+0x30c>
 8019c7c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8019c80:	2b223e69 	blcs	88a962c <__exidx_end+0x88d1bc>
 8019c84:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8019c88:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8019c8c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8019c90:	61642e64 	cmnvs	r4, r4, ror #28
 8019c94:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8019c98:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8019c9c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8019ca0:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8019ca4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8019ca8:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8019cac:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8019cb0:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8019cb4:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8019cb8:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8019cbc:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8019cc0:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8019cc4:	6f697372 	svcvs	0x00697372
 8019cc8:	6f622e6e 	svcvs	0x00622e6e
 8019ccc:	2b647261 	blcs	9936658 <__exidx_end+0x191a1e8>
 8019cd0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8019c50 <index_js+0x364>
 8019cd4:	3b223e69 	blcc	88a9680 <__exidx_end+0x88d210>
 8019cd8:	0a0a7d0a 	beq	82b9108 <__exidx_end+0x29cc98>
 8019cdc:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8019ce0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8019ce4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019ce8:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8019cec:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8019cf4 <index_js+0x408>
 8019cf0:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8019cf4:	20296c65 	eorcs	r6, r9, r5, ror #24
 8019cf8:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8019cfc:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8019d00:	613d7478 	teqvs	sp, r8, ror r4
 8019d04:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8019d08:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8019d0c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8019d10:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8019d14:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8019d18:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8019d1c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019d20:	3b22223d 	blcc	88a261c <__exidx_end+0x8861ac>
 8019d24:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8019d28:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8019d2c:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8019d30:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8019d34:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8019d38:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8019d3c:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8019d40:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8019d44:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8019d48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019d4c:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8019d50:	0a7b2029 	beq	9ee1dfc <__exidx_end+0x1ec598c>
 8019d54:	61760909 	cmnvs	r6, r9, lsl #18
 8019d58:	61762072 	cmnvs	r6, r2, ror r0
 8019d5c:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8019d60:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8019d64:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8019d68:	6b5b5d6c 	blvs	96f1320 <__exidx_end+0x16d4eb0>
 8019d6c:	3b5d7965 	blcc	9778308 <__exidx_end+0x175be98>
 8019d70:	2009090a 	andcs	r0, r9, sl, lsl #18
 8019d74:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019d78:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8019d7c:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8019d80:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8019d84:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8019d88:	2f3c222b 	svccs	0x003c222b
 8019d8c:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8019d90:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8019d94:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8019d98:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8019d9c:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8019da0:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8019da8 <index_js+0x4bc>
 8019da4:	3b223e72 	blcc	88a9774 <__exidx_end+0x88d304>
 8019da8:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8019dac:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8019db0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8019db4:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019db8:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8019dbc:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8019dc0:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019dc4:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8019dc8:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8019dcc:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8019dd0:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8019dd4:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8019dd8:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8019ddc:	0a3b6c6d 	beq	8ef4f98 <__exidx_end+0xed8b28>
 8019de0:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8019de4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8019de8:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8019dec:	3b292874 	blcc	8a63fc4 <__exidx_end+0xa47b54>
 8019df0:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8019df4:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8019df8:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8019dfc:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019e00:	0a3b2928 	beq	8ee42a8 <__exidx_end+0xec7e38>
 8019e04:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8019e08:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8019e0c:	6f697372 	svcvs	0x00697372
 8019e10:	3b29286e 	blcc	8a63fd0 <__exidx_end+0xa47b60>
 8019e14:	3332000a 	teqcc	r2, #10
 8019e18:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019e1c:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8019e20:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8019e24:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8019e28:	30007325 	andcc	r7, r0, r5, lsr #6
 8019e2c:	6f4e202e 	svcvs	0x004e202e
 8019e30:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8019e34:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8019e38:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8019e3c:	202c6465 	eorcs	r6, ip, r5, ror #8
 8019e40:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8019e44:	6f687320 	svcvs	0x00687320
 8019e48:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8019e4c:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8019e50:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8019e54:	000a216e 	andeq	r2, sl, lr, ror #2
 8019e58:	00505448 	subseq	r5, r0, r8, asr #8
 8019e5c:	0050544c 	subseq	r5, r0, ip, asr #8
 8019e60:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8019e64:	000a6567 	andeq	r6, sl, r7, ror #10
 8019e68:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8019e6c:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8019e70:	203a2065 	eorscs	r2, sl, r5, rrx
 8019e74:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019e78:	20000a64 	andcs	r0, r0, r4, ror #20
 8019e7c:	20444943 	subcs	r4, r4, r3, asr #18
 8019e80:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019e84:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019e88:	20000a73 	andcs	r0, r0, r3, ror sl
 8019e8c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8019e90:	000a7475 	andeq	r7, sl, r5, ror r4
 8019e94:	6f502020 	svcvs	0x00502020
 8019e98:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8019e9c:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8019ea0:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8019ea4:	20657372 	rsbcs	r7, r5, r2, ror r3
 8019ea8:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8019eac:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8019eb0:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019eb4:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8019eb8:	20000a74 	andcs	r0, r0, r4, ror sl
 8019ebc:	726f5020 	rsbvc	r5, pc, #32
 8019ec0:	32252074 	eorcc	r2, r5, #116	; 0x74
 8019ec4:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8019ec8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8019ecc:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8019ed0:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8019ed4:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8019ed8:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8019edc:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8019ee0:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019ee4:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8019ee8:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8019eec:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8019ef0:	000a6465 	andeq	r6, sl, r5, ror #8

08019ef4 <E131MsgConst::START>:
 8019ef4:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8019ef8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8019efc:	43417320 	movtmi	r7, #4896	; 0x1320
 8019f00:	3145204e 	cmpcc	r5, lr, asr #32
 8019f04:	0031332e 	eorseq	r3, r1, lr, lsr #6

08019f08 <E131MsgConst::PARAMS>:
 8019f08:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019f0c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019f10:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019f14:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019f18:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019f1c:	 	movwvc	r3, #307	; 0x133

08019f1f <E131MsgConst::STARTED>:
 8019f1f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8019f23:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8019f27:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8019f2b:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8019f2f:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8019f33:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8019f37:	0066666f 	rsbeq	r6, r6, pc, ror #12
 8019f3b:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8019f3f:	6b636162 	blvs	98f24cf <__exidx_end+0x18d605f>
 8019f43:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8019f47:	6f007475 	svcvs	0x00007475
 8019f4b:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8019f4f:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 8019f53:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8019f57:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 8019f5b:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8019f5f:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8019f63:	754f2058 	strbvc	r2, [pc, #-88]	; 8019f13 <E131MsgConst::PARAMS+0xb>
 8019f67:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 8019f6b:	584d4400 	stmdapl	sp, {sl, lr}^
 8019f6f:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8019f73:	00007475 	andeq	r7, r0, r5, ror r4
	...

08019f78 <CSWTCH.56>:
 8019f78:	08019f32 	stmdaeq	r1, {r1, r4, r5, r8, r9, sl, fp, ip, pc}
 8019f7c:	08019f37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, fp, ip, pc}
 8019f80:	0801bf51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8019f84:	08019f3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, fp, ip, pc}

08019f88 <E131ParamsConst::PRIORITY>:
 8019f88:	6f697270 	svcvs	0x00697270
 8019f8c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8019f90:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019f94:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8019f98:	72700000 	rsbsvc	r0, r0, #0
 8019f9c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019fa0:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8019fa4:	5f74726f 	svcpl	0x0074726f
 8019fa8:	00000062 	andeq	r0, r0, r2, rrx
 8019fac:	6f697270 	svcvs	0x00697270
 8019fb0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8019fb4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019fb8:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8019fbc:	72700000 	rsbsvc	r0, r0, #0
 8019fc0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019fc4:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8019fc8:	5f74726f 	svcpl	0x0074726f
 8019fcc:	00000064 	andeq	r0, r0, r4, rrx

08019fd0 <E131ParamsConst::FILE_NAME>:
 8019fd0:	31333165 	teqcc	r3, r5, ror #2
 8019fd4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08019fd9 <E117Const::ACN_PACKET_IDENTIFIER>:
 8019fd9:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8019fdd:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8019fe1:	00000037 	andeq	r0, r0, r7, lsr r0

08019fe5 <E131BridgeConst::VERSION>:
 8019fe5:	33321901 	teqcc	r2, #16384	; 0x4000
 8019fe9:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019fed:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8019ff1:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8019ff5:	33320033 	teqcc	r2, #51	; 0x33
 8019ff9:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019ffd:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 801a001:	33312e30 	teqcc	r1, #48, 28	; 0x300
 801a005:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 801a009:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 801a00d:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801a011:	6f632065 	svcvs	0x00632065
 801a015:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801a019:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 801a01d:	0a6e6f69 	beq	9bb5dc9 <__exidx_end+0x1b99959>
 801a021:	6f502000 	svcvs	0x00502000
 801a025:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 801a029:	20205044 	eorcs	r5, r0, r4, asr #32
 801a02d:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a031:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a035:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a039:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a03d:	20000a64 	andcs	r0, r0, r4, ror #20
 801a041:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 801a045:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 801a049:	6f6a2074 	svcvs	0x006a2074
 801a04d:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 801a051:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801a055:	3a207473 	bcc	8837229 <__exidx_end+0x81adb9>
 801a059:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801a05d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a061:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a065:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801a069:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 801a06d:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 801a071:	73655220 	cmnvc	r5, #32, 4
 801a075:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 801a079:	20202065 	eorcs	r2, r0, r5, rrx
 801a07d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a081:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a085:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a089:	0a64252e 	beq	9923549 <__exidx_end+0x19070d9>
 801a08d:	 	andeq	r0, r0, r0

0801a090 <vtable for LLRPDevice>:
	...
 801a098:	0800d407 	stmdaeq	r0, {r0, r1, r2, sl, ip, lr, pc}
 801a09c:	0800d411 	stmdaeq	r0, {r0, r4, sl, ip, lr, pc}
 801a0a0:	0800d409 	stmdaeq	r0, {r0, r3, sl, ip, lr, pc}
 801a0a4:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 801a0a8:	0800d40d 	stmdaeq	r0, {r0, r2, r3, sl, ip, lr, pc}

0801a0ac <RDMNetConst::MSG_CONFIG>:
 801a0ac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801a0b0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a0b4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801a0b8:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801a0bc:	 	andpl	r7, r0, #1694498816	; 0x65000000

0801a0bf <RDMNetConst::MSG_STARTED>:
 801a0bf:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801a0c3:	73207465 			; <UNDEFINED> instruction: 0x73207465
 801a0c7:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801a0cb:	 	movwpl	r6, #1125	; 0x465

0801a0ce <RDMNetConst::MSG_START>:
 801a0ce:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801a0d2:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801a0d6:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 801a0da:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801a0de:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801a0e2:	000a7465 	andeq	r7, sl, r5, ror #8
 801a0e6:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 801a0ea:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a0ee:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 801a0f2:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 801a0f6:	6f707365 	svcvs	0x00707365
 801a0fa:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 801a0fe:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801a102:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 801a106:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801a10a:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801a10e:	6f725020 	svcvs	0x00725020
 801a112:	6f636f74 	svcvs	0x00636f74
 801a116:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 801a11a:	6f697372 	svcvs	0x00697372
 801a11e:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 801a122:	0a64252e 	beq	99235e2 <__exidx_end+0x1907172>
 801a126:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801a12a:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 801a12e:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801a132:	20202073 	eorcs	r2, r0, r3, ror r0
 801a136:	3a202020 	bcc	88221be <__exidx_end+0x805d4e>
 801a13a:	0a642520 	beq	99235c2 <__exidx_end+0x1907152>
 801a13e:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801a142:	6f462058 	svcvs	0x00462058
 801a146:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 801a14a:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801a14e:	3a202020 	bcc	88221d6 <__exidx_end+0x805d66>
 801a152:	0a642520 	beq	99235da <__exidx_end+0x190716a>
 801a156:	65502000 	ldrbvs	r2, [r0, #-0]
 801a15a:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801a15e:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801a162:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 801a166:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 801a16a:	5b206425 	blpl	8833206 <__exidx_end+0x816d96>
 801a16e:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801a172:	20000a5d 	andcs	r0, r0, sp, asr sl
 801a176:	20627553 	rsbcs	r7, r2, r3, asr r5
 801a17a:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801a17e:	20736563 	rsbscs	r6, r3, r3, ror #10
 801a182:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a186:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a18a:	20000a64 	andcs	r0, r0, r4, ror #20
 801a18e:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 801a192:	2073726f 	rsbscs	r7, r3, pc, ror #4
 801a196:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a19a:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a19e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a1a2:	00000a64 	andeq	r0, r0, r4, ror #20
	...

0801a1a8 <vtable for RDMDeviceResponder>:
	...
 801a1b0:	0800d905 	stmdaeq	r0, {r0, r2, r8, fp, ip, lr, pc}
 801a1b4:	0800d925 	stmdaeq	r0, {r0, r2, r5, r8, fp, ip, lr, pc}
 801a1b8:	0800d901 	stmdaeq	r0, {r0, r8, fp, ip, lr, pc}
 801a1bc:	0800d903 	stmdaeq	r0, {r0, r1, r8, fp, ip, lr, pc}

0801a1c0 <UID_ALL>:
 801a1c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 801a1c4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0801a1c8 <RDMHandler::PID_DEFINITIONS>:
 801a1c8:	00000060 	andeq	r0, r0, r0, rrx
 801a1cc:	0800ddf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
	...
 801a1dc:	01010000 	mrseq	r0, (UNDEF: 1)
 801a1e0:	00000080 	andeq	r0, r0, r0, lsl #1
 801a1e4:	0800dee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, ip, lr, pc}
	...
 801a1f4:	01010100 	mrseq	r0, (UNDEF: 17)
 801a1f8:	00000081 	andeq	r0, r0, r1, lsl #1
 801a1fc:	0800defd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, lr, pc}
	...
 801a20c:	01010100 	mrseq	r0, (UNDEF: 17)
 801a210:	00000082 	andeq	r0, r0, r2, lsl #1
 801a214:	0800df1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sl, fp, ip, lr, pc}
 801a218:	00000000 	andeq	r0, r0, r0
 801a21c:	0800e06d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sp, lr, pc}
 801a220:	00000000 	andeq	r0, r0, r0
 801a224:	01010100 	mrseq	r0, (UNDEF: 17)
 801a228:	00000090 	muleq	r0, r0, r0
 801a22c:	0800de61 	stmdaeq	r0, {r0, r5, r6, r9, sl, fp, ip, lr, pc}
 801a230:	00000000 	andeq	r0, r0, r0
 801a234:	0800e039 	stmdaeq	r0, {r0, r3, r4, r5, sp, lr, pc}
 801a238:	00000000 	andeq	r0, r0, r0
 801a23c:	01010100 	mrseq	r0, (UNDEF: 17)
 801a240:	00001000 	andeq	r1, r0, r0
 801a244:	0800df59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr, pc}
 801a248:	00000000 	andeq	r0, r0, r0
 801a24c:	0800dfbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, lr, pc}
 801a250:	00000000 	andeq	r0, r0, r0
 801a254:	01010000 	mrseq	r0, (UNDEF: 1)
 801a258:	00001001 	andeq	r1, r0, r1
	...
 801a264:	0800df75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 801a268:	00000000 	andeq	r0, r0, r0
 801a26c:	01010100 	mrseq	r0, (UNDEF: 17)
 801a270:	00000700 	andeq	r0, r0, r0, lsl #14
 801a274:	0800e365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sp, lr, pc}
	...
 801a284:	01000000 	mrseq	r0, (UNDEF: 0)
 801a288:	00000701 	andeq	r0, r0, r1, lsl #14
 801a28c:	0800e38d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sp, lr, pc}
	...
 801a29c:	01000004 	tsteq	r0, r4
 801a2a0:	00000702 	andeq	r0, r0, r2, lsl #14
 801a2a4:	0800e3d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sp, lr, pc}
	...
 801a2b4:	01000004 	tsteq	r0, r4
 801a2b8:	00000703 	andeq	r0, r0, r3, lsl #14
 801a2bc:	0800e409 	stmdaeq	r0, {r0, r3, sl, sp, lr, pc}
 801a2c0:	00000000 	andeq	r0, r0, r0
 801a2c4:	0800e435 	stmdaeq	r0, {r0, r2, r4, r5, sl, sp, lr, pc}
 801a2c8:	00000000 	andeq	r0, r0, r0
 801a2cc:	01000004 	tsteq	r0, r4
 801a2d0:	00000704 	andeq	r0, r0, r4, lsl #14
 801a2d4:	0800e4a1 	stmdaeq	r0, {r0, r5, r7, sl, sp, lr, pc}
 801a2d8:	00000000 	andeq	r0, r0, r0
 801a2dc:	0800e4d1 	stmdaeq	r0, {r0, r4, r6, r7, sl, sp, lr, pc}
 801a2e0:	00000000 	andeq	r0, r0, r0
 801a2e4:	01000004 	tsteq	r0, r4
 801a2e8:	00000705 	andeq	r0, r0, r5, lsl #14
 801a2ec:	0800e545 	stmdaeq	r0, {r0, r2, r6, r8, sl, sp, lr, pc}
	...
 801a2fc:	01000004 	tsteq	r0, r4
 801a300:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 801a30c:	0800e519 	stmdaeq	r0, {r0, r3, r4, r8, sl, sp, lr, pc}
 801a310:	00000000 	andeq	r0, r0, r0
 801a314:	01000004 	tsteq	r0, r4
 801a318:	00000706 	andeq	r0, r0, r6, lsl #14
 801a31c:	0800e58d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, sp, lr, pc}
 801a320:	00000000 	andeq	r0, r0, r0
 801a324:	0800e5d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, sp, lr, pc}
 801a328:	00000000 	andeq	r0, r0, r0
 801a32c:	01000004 	tsteq	r0, r4
 801a330:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 801a33c:	0800e61d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, sp, lr, pc}
 801a340:	00000000 	andeq	r0, r0, r0
 801a344:	01000004 	tsteq	r0, r4
 801a348:	0000070b 	andeq	r0, r0, fp, lsl #14
 801a34c:	0800e47d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, sp, lr, pc}
	...
 801a35c:	01000001 	tsteq	r0, r1
 801a360:	0000070a 	andeq	r0, r0, sl, lsl #14
 801a364:	0800e645 	stmdaeq	r0, {r0, r2, r6, r9, sl, sp, lr, pc}
 801a368:	00000000 	andeq	r0, r0, r0
 801a36c:	0800e67d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, sp, lr, pc}
 801a370:	00000000 	andeq	r0, r0, r0
 801a374:	01000004 	tsteq	r0, r4
 801a378:	0000070c 	andeq	r0, r0, ip, lsl #14
 801a37c:	0800e685 	stmdaeq	r0, {r0, r2, r7, r9, sl, sp, lr, pc}
 801a380:	00000000 	andeq	r0, r0, r0
 801a384:	0800e6b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, sp, lr, pc}
 801a388:	00000000 	andeq	r0, r0, r0
 801a38c:	01000000 	mrseq	r0, (UNDEF: 0)
 801a390:	0000070d 	andeq	r0, r0, sp, lsl #14
 801a394:	0800e6e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, sp, lr, pc}
 801a398:	00000000 	andeq	r0, r0, r0
 801a39c:	0800e719 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, sp, lr, pc}
 801a3a0:	00000000 	andeq	r0, r0, r0
 801a3a4:	01000000 	mrseq	r0, (UNDEF: 0)
 801a3a8:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801a3ac:	2f2f3a73 	svccs	0x002f3a73
 801a3b0:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 801a3b4:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 801a3b8:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 801a3bc:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 801a3c0:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 801a3c4:	20656369 	rsbcs	r6, r5, r9, ror #6
 801a3c8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801a3cc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a3d0:	6f697461 	svcvs	0x00697461
 801a3d4:	20000a6e 	andcs	r0, r0, lr, ror #20
 801a3d8:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 801a3dc:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 801a3e0:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 801a3e4:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 801a3e8:	203a2065 	eorscs	r2, sl, r5, rrx
 801a3ec:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801a3f0:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801a3f4:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 801a3f8:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 801a3fc:	20726572 	rsbscs	r6, r2, r2, ror r5
 801a400:	20204449 	eorcs	r4, r0, r9, asr #8
 801a404:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a408:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 801a40c:	0a58322e 	beq	9626ccc <__exidx_end+0x160a85c>
 801a410:	65532000 	ldrbvs	r2, [r3, #-0]
 801a414:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 801a418:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 801a41c:	20726562 	rsbscs	r6, r2, r2, ror #10
 801a420:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a424:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801a428:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a42c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a430:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801a434:	000a5832 	andeq	r5, sl, r2, lsr r8
 801a438:	6f6f5220 	svcvs	0x006f5220
 801a43c:	616c2074 	smcvs	49668	; 0xc204
 801a440:	206c6562 	rsbcs	r6, ip, r2, ror #10
 801a444:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a448:	3a202020 	bcc	88224d0 <__exidx_end+0x806060>
 801a44c:	2a2e2520 	bcs	8ba38d4 <__exidx_end+0xb87464>
 801a450:	20000a73 	andcs	r0, r0, r3, ror sl
 801a454:	646f7250 	strbtvs	r7, [pc], #-592	; 801a45c <RDMHandler::PID_DEFINITIONS+0x294>
 801a458:	20746375 	rsbscs	r6, r4, r5, ror r3
 801a45c:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 801a460:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 801a464:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801a468:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a46c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801a470:	5020000a 	eorpl	r0, r0, sl
 801a474:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 801a478:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 801a47c:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 801a480:	2020206c 	eorcs	r2, r0, ip, rrx
 801a484:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a488:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 801a48c:	0a58322e 	beq	9626d4c <__exidx_end+0x160a8dc>
	...

0801a491 <DEVICE_LABEL>:
 801a491:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801a495:	30353446 	eorscc	r3, r5, r6, asr #8
 801a499:	52204956 	eorpl	r4, r0, #1409024	; 0x158000
 801a49d:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 801a4a1:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801a4a5:	 	subseq	r0, r0, r5, rrx

0801a4a7 <RDMConst::MANUFACTURER_ID>:
 801a4a7:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0801a4a9 <RDMConst::MANUFACTURER_NAME>:
 801a4a9:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801a4ad:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 801a4b1:	6f2e7777 	svcvs	0x002e7777
 801a4b5:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 801a4b9:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 801a4bd:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801a4c1:	0067726f 	rsbeq	r7, r7, pc, ror #4
 801a4c5:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 801a4c9:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 801a4cd:	30252d78 	eorcc	r2, r5, r8, ror sp
 801a4d1:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 801a4d5:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 801a4d9:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 801a4dd:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4e1:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4e5:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4e9:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4ed:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4f1:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801a4f5:	584d4400 	stmdapl	sp, {sl, lr}^
 801a4f9:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 801a4fd:	20000a64 	andcs	r0, r0, r4, ror #20
 801a501:	61657242 	cmnvs	r5, r2, asr #4
 801a505:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 801a509:	2020656d 	eorcs	r6, r0, sp, ror #10
 801a50d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a511:	20000a75 	andcs	r0, r0, r5, ror sl
 801a515:	2042414d 	subcs	r4, r2, sp, asr #2
 801a519:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801a51d:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a521:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a525:	20000a75 	andcs	r0, r0, r5, ror sl
 801a529:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 801a52d:	20687365 	rsbcs	r7, r8, r5, ror #6
 801a531:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 801a535:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a539:	20000a75 	andcs	r0, r0, r5, ror sl
 801a53d:	746f6c53 	strbtvc	r6, [pc], #-3155	; 801a545 <RDMConst::MANUFACTURER_NAME+0x9c>
 801a541:	20202073 	eorcs	r2, r0, r3, ror r0
 801a545:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a549:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a54d:	 	andeq	r0, r0, r5, ror sl

0801a550 <vtable for DmxSend>:
	...
 801a558:	0800e91d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, sp, lr, pc}
 801a55c:	0800ea09 	stmdaeq	r0, {r0, r3, r9, fp, sp, lr, pc}
 801a560:	0800e921 	stmdaeq	r0, {r0, r5, r8, fp, sp, lr, pc}
 801a564:	0800e951 	stmdaeq	r0, {r0, r4, r6, r8, fp, sp, lr, pc}
 801a568:	0800e989 	stmdaeq	r0, {r0, r3, r7, r8, fp, sp, lr, pc}
 801a56c:	0800e999 	stmdaeq	r0, {r0, r3, r4, r7, r8, fp, sp, lr, pc}
 801a570:	0800e9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, lr, pc}
 801a574:	0800e9b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, fp, sp, lr, pc}
 801a578:	08015447 	stmdaeq	r1, {r0, r1, r2, r6, sl, ip, lr}
 801a57c:	0801543d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, ip, lr}
 801a580:	08015441 	stmdaeq	r1, {r0, r6, sl, ip, lr}
 801a584:	0801544b 	stmdaeq	r1, {r0, r1, r3, r6, sl, ip, lr}

0801a588 <DmxParamsConst::BREAK_TIME>:
 801a588:	61657262 	cmnvs	r5, r2, ror #4
 801a58c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a590:	 	movwvc	r6, #1389	; 0x56d

0801a593 <DmxParamsConst::SLOTS_COUNT>:
 801a593:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801a59b <DmxParamsConst::SLOTS_COUNT+0x8>
 801a597:	6f635f73 	svcvs	0x00635f73
 801a59b:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a59f <DmxParamsConst::REFRESH_RATE>:
 801a59f:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 801a5a3:	5f687365 	svcpl	0x00687365
 801a5a7:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

0801a5ac <DmxParamsConst::MAB_TIME>:
 801a5ac:	5f62616d 	svcpl	0x0062616d
 801a5b0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

0801a5b5 <DmxParamsConst::FILE_NAME>:
 801a5b5:	61726170 	cmnvs	r2, r0, ror r1
 801a5b9:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 801a5bd:	 	andeq	r7, r0, r8, ror r4

0801a5c0 <s_DirGpio>:
 801a5c0:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a5c4:	00000001 	andeq	r0, r0, r1
 801a5c8:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a5cc:	00000002 	andeq	r0, r0, r2
 801a5d0:	2f637273 	svccs	0x00637273
 801a5d4:	2f786d64 	svccs	0x00786d64
 801a5d8:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
 801a5dc:	6d647878 	stclvs	8, cr7, [r4, #-480]!	; 0xfffffe20
 801a5e0:	6c756d78 	ldclvs	13, cr6, [r5], #-480	; 0xfffffe20
 801a5e4:	632e6974 			; <UNDEFINED> instruction: 0x632e6974
 801a5e8:	25007070 	strcs	r7, [r0, #-112]	; 0xffffff90
 801a5ec:	20292873 	eorcs	r2, r9, r3, ror r8
 801a5f0:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801a5f4:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801a5f8:	3a692520 	bcc	9a63a80 <__exidx_end+0x1a47610>
 801a5fc:	0a752520 	beq	9d63a84 <__exidx_end+0x1d47614>
 801a600:	61447000 	mrsvs	r7, (UNDEF: 68)
 801a604:	21206174 			; <UNDEFINED> instruction: 0x21206174
 801a608:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801a60c:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801a610:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
 801a614:	74614474 	strbtvc	r4, [r1], #-1140	; 0xfffffb8c
 801a618:	4c6e0061 	stclmi	0, cr0, [lr], #-388	; 0xfffffe7c
 801a61c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
 801a620:	3d3c2068 	ldccc	0, cr2, [ip, #-416]!	; 0xfffffe60
 801a624:	786d6420 	stmdavc	sp!, {r5, sl, sp, lr}^
 801a628:	4e553a3a 			; <UNDEFINED> instruction: 0x4e553a3a
 801a62c:	52455649 	subpl	r5, r5, #76546048	; 0x4900000
 801a630:	535f4553 	cmppl	pc, #348127232	; 0x14c00000
 801a634:	00455a49 	subeq	r5, r5, r9, asr #20
 801a638:	436e5f6d 	cmnmi	lr, #436	; 0x1b4
 801a63c:	6e6e6168 	powvsez	f6, f6, #0.0
 801a640:	50736c65 	rsbspl	r6, r3, r5, ror #24
 801a644:	69507265 	ldmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801a648:	206c6578 	rsbcs	r6, ip, r8, ror r5
 801a64c:	34203d3d 	strtcc	r3, [r0], #-3389	; 0xfffff2c3
 801a650:	6f745300 	svcvs	0x00745300
 801a654:	53570070 	cmppl	r7, #112	; 0x70
 801a658:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 801a65c:	4d786d44 	ldclmi	13, cr6, [r8, #-272]!	; 0xfffffef0
 801a660:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 801a664:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801a668:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801a66c:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801a670:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801a674:	6d203a69 	vstmdbvs	r0!, {s6-s110}
 801a678:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
 801a67c:	666e4974 			; <UNDEFINED> instruction: 0x666e4974
 801a680:	506e2e6f 	rsbpl	r2, lr, pc, ror #28
 801a684:	6f746f72 	svcvs	0x00746f72
 801a688:	506c6f63 	rsbpl	r6, ip, r3, ror #30
 801a68c:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801a690:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801a694:	7473614c 	ldrbtvc	r6, [r3], #-332	; 0xfffffeb4
 801a698:	0a75253d 	beq	9d63b94 <__exidx_end+0x1d47724>
 801a69c:	00000000 	andeq	r0, r0, r0

0801a6a0 <vtable for WS28xxDmxMulti>:
	...
 801a6a8:	0800f789 	stmdaeq	r0, {r0, r3, r7, r8, r9, sl, ip, sp, lr, pc}
 801a6ac:	0800f7a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, ip, sp, lr, pc}
 801a6b0:	0800f74d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl, ip, sp, lr, pc}
 801a6b4:	0800f97d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, sp, lr, pc}
 801a6b8:	0800f7e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
 801a6bc:	0800f7bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr, pc}
 801a6c0:	0800f95d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, fp, ip, sp, lr, pc}
 801a6c4:	0800f975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip, sp, lr, pc}
 801a6c8:	0800f73d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr, pc}
 801a6cc:	0800f741 	stmdaeq	r0, {r0, r6, r8, r9, sl, ip, sp, lr, pc}
 801a6d0:	0800f747 	stmdaeq	r0, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr, pc}
 801a6d4:	0801544b 	stmdaeq	r1, {r0, r1, r3, r6, sl, ip, lr}
 801a6d8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801a6dc:	2a2e253a 	bcs	8ba3bcc <__exidx_end+0xb8775c>
 801a6e0:	23002c66 	movwcs	r2, #3174	; 0xc66
 801a6e4:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 801a6e8:	0a662a2e 	beq	99a4fa8 <__exidx_end+0x1988b38>
 801a6ec:	75427000 	strbvc	r7, [r2, #-0]
 801a6f0:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 801a6f4:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801a6f8:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 801a6fc:	00727470 	rsbseq	r7, r2, r0, ror r4
 801a700:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
 801a704:	63727300 	cmnvs	r2, #0, 6
 801a708:	7261702f 	rsbvc	r7, r1, #47	; 0x2f
 801a70c:	2f736d61 	svccs	0x00736d61
 801a710:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 801a714:	786d646c 	stmdavc	sp!, {r2, r3, r5, r6, sl, sp, lr}^
 801a718:	61726170 	cmnvs	r2, r0, ror r1
 801a71c:	632e736d 			; <UNDEFINED> instruction: 0x632e736d
 801a720:	6e007070 	mcrvs	0, 0, r7, cr0, cr0, {3}
 801a724:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801a728:	21206874 			; <UNDEFINED> instruction: 0x21206874
 801a72c:	0030203d 	eorseq	r2, r0, sp, lsr r0
 801a730:	50705f6d 	rsbspl	r5, r0, sp, ror #30
 801a734:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a738:	50786d44 	rsbspl	r6, r8, r4, asr #26
 801a73c:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 801a740:	6f745373 	svcvs	0x00745373
 801a744:	21206572 			; <UNDEFINED> instruction: 0x21206572
 801a748:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801a74c:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801a750:	4c700072 	ldclmi	0, cr0, [r0], #-456	; 0xfffffe38
 801a754:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801a758:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 801a75c:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 801a760:	63007274 	movwvs	r7, #628	; 0x274
 801a764:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
 801a768:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
 801a76c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801a770:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801a774:	3d212070 	stccc	0, cr2, [r1, #-448]!	; 0xfffffe40
 801a778:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a77c:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a780:	61747300 	cmnvs	r4, r0, lsl #6
 801a784:	43636974 	cmnmi	r3, #116, 18	; 0x1d0000
 801a788:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
 801a78c:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
 801a790:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801a794:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801a798:	3d212073 	stccc	0, cr2, [r1, #-460]!	; 0xfffffe34
 801a79c:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a7a0:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a7a4:	69754200 	ldmdbvs	r5!, {r9, lr}^
 801a7a8:	7265646c 	rsbvc	r6, r5, #108, 8	; 0x6c000000
 801a7ac:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 801a7b0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801a7b4:	4f003e74 	svcmi	0x00003e74
 801a7b8:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801a7bc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801a7c0:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801a7c4:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 801a7c8:	4f007465 	svcmi	0x00007465
 801a7cc:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801a7d0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801a7d4:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 801a7d8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801a7dc:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 801a7e0:	6f724700 	svcvs	0x00724700
 801a7e4:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 801a7e8:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 801a7ec:	206b636f 	rsbcs	r6, fp, pc, ror #6
 801a7f0:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 801a7f4:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 801a7f8:	00737069 	rsbseq	r7, r3, r9, rrx
 801a7fc:	31415041 	cmpcc	r1, r1, asr #32
 801a800:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 801a804:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 801a808:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 801a80c:	70207473 	eorvc	r7, r0, r3, ror r4
 801a810:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 801a814:	25006e72 	strcs	r6, [r0, #-3698]	; 0xfffff18e
 801a818:	20292873 	eorcs	r2, r9, r3, ror r8
 801a81c:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801a820:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801a824:	3a692520 	bcc	9a63cac <__exidx_end+0x1a4783c>
 801a828:	69536e20 	ldmdbvs	r3, {r5, r9, sl, fp, sp, lr}^
 801a82c:	253d657a 	ldrcs	r6, [sp, #-1402]!	; 0xfffffa86
 801a830:	70000a64 	andvc	r0, r0, r4, ror #20
 801a834:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801a838:	786d446c 	stmdavc	sp!, {r2, r3, r5, r6, sl, lr}^
 801a83c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801a840:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a844:	6f697461 	svcvs	0x00697461
 801a848:	3d21206e 	stccc	0, cr2, [r1, #-440]!	; 0xfffffe48
 801a84c:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801a850:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801a854:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
 801a858:	6d754400 	cfldrdvs	mvd4, [r5, #-0]
 801a85c:	72730070 	rsbsvc	r0, r3, #112	; 0x70
 801a860:	61702f63 	cmnvs	r0, r3, ror #30
 801a864:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 801a868:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 801a86c:	6d646c65 	stclvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
 801a870:	72617078 	rsbvc	r7, r1, #120	; 0x78
 801a874:	64736d61 	ldrbtvs	r6, [r3], #-3425	; 0xfffff29f
 801a878:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
 801a87c:	00707063 	rsbseq	r7, r0, r3, rrx
 801a880:	3a3a7325 	bcc	8eb751c <__exidx_end+0xe9b0ac>
 801a884:	27207325 	strcs	r7, [r0, -r5, lsr #6]!
 801a888:	3a277325 	bcc	89f7524 <__exidx_end+0x9db0b4>
 801a88c:	2520000a 	strcs	r0, [r0, #-10]!
 801a890:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 801a894:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801a898:	20000a5d 	andcs	r0, r0, sp, asr sl
 801a89c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 801a8a0:	255b2064 	ldrbcs	r2, [fp, #-100]	; 0xffffff9c
 801a8a4:	000a5d73 	andeq	r5, sl, r3, ror sp
 801a8a8:	3d732520 	cfldr64cc	mvdx2, [r3, #-128]!	; 0xffffff80
 801a8ac:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 801a8b0:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 801a8b4:	0a5d5825 	beq	9770950 <__exidx_end+0x17544e0>
 801a8b8:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801a8bc:	0a64253d 	beq	9923db8 <__exidx_end+0x1907948>
 801a8c0:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801a8c4:	5b20313d 	blpl	8826dc0 <__exidx_end+0x80a950>
 801a8c8:	5d736559 	cfldr64pl	mvdx6, [r3, #-356]!	; 0xfffffe9c
 801a8cc:	2520000a 	strcs	r0, [r0, #-10]!
 801a8d0:	31253d73 			; <UNDEFINED> instruction: 0x31253d73
 801a8d4:	2066312e 	rsbcs	r3, r6, lr, lsr #2
 801a8d8:	5d75255b 	cfldr64pl	mvdx2, [r5, #-364]!	; 0xfffffe94
 801a8dc:	6156000a 	cmpvs	r6, sl
 801a8e0:	6164696c 	cmnvs	r4, ip, ror #18
 801a8e4:	73006574 	movwvc	r6, #1396	; 0x574
 801a8e8:	702f6372 	eorvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
 801a8ec:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a8f0:	63786d64 	cmnvs	r8, #100, 26	; 0x1900
 801a8f4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801a8f8:	61727567 	cmnvs	r2, r7, ror #10
 801a8fc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801a900:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801a904:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801a908:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801a90c:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801a910:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801a914:	70203a69 	eorvc	r3, r0, r9, ror #20
 801a918:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801a91c:	2e6f666e 	cdpcs	6, 6, cr6, cr15, cr14, {3}
 801a920:	6f72506e 	svcvs	0x0072506e
 801a924:	6f636f74 	svcvs	0x00636f74
 801a928:	726f506c 	rsbvc	r5, pc, #108	; 0x6c
 801a92c:	646e4974 	strbtvs	r4, [lr], #-2420	; 0xfffff68c
 801a930:	614c7865 	cmpvs	ip, r5, ror #16
 801a934:	253d7473 	ldrcs	r7, [sp, #-1139]!	; 0xfffffb8d
 801a938:	50000a75 	andpl	r0, r0, r5, ror sl
 801a93c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801a940:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 801a944:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801a948:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 801a94c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801a950:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801a954:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 801a958:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 801a95c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801a960:	20000a64 	andcs	r0, r0, r4, ror #20
 801a964:	756f7247 	strbvc	r7, [pc, #-583]!	; 801a725 <vtable for WS28xxDmxMulti+0x85>
 801a968:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 801a96c:	756f6320 	strbvc	r6, [pc, #-800]!	; 801a654 <s_DirGpio+0x94>
 801a970:	3a20746e 	bcc	8837b30 <__exidx_end+0x81b6c0>
 801a974:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801a978:	6f72475b 	svcvs	0x0072475b
 801a97c:	20737075 	rsbscs	r7, r3, r5, ror r0
 801a980:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a984:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 801a988:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 801a98c:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 801a990:	206c6578 	rsbcs	r6, ip, r8, ror r5
 801a994:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801a998:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801a99c:	6f697461 	svcvs	0x00697461
 801a9a0:	20000a6e 	andcs	r0, r0, lr, ror #20
 801a9a4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801a9a8:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a9ac:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801a9b0:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801a9b4:	20000a5d 	andcs	r0, r0, sp, asr sl
 801a9b8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 801a9bc:	20202074 	eorcs	r2, r0, r4, ror r0
 801a9c0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801a9c4:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801a9c8:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 801a9cc:	3a20676e 	bcc	883478c <__exidx_end+0x81831c>
 801a9d0:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801a9d4:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801a9d8:	5420000a 	strtpl	r0, [r0], #-10
 801a9dc:	20204830 	eorcs	r4, r0, r0, lsr r8
 801a9e0:	3a202020 	bcc	8822a68 <__exidx_end+0x8065f8>
 801a9e4:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801a9e8:	305b2066 	subscc	r2, fp, r6, rrx
 801a9ec:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 801a9f0:	5420000a 	strtpl	r0, [r0], #-10
 801a9f4:	20204831 	eorcs	r4, r0, r1, lsr r8
 801a9f8:	3a202020 	bcc	8822a80 <__exidx_end+0x806610>
 801a9fc:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801aa00:	305b2066 	subscc	r2, fp, r6, rrx
 801aa04:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 801aa08:	4720000a 	strmi	r0, [r0, -sl]!
 801aa0c:	61626f6c 	cmnvs	r2, ip, ror #30
 801aa10:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 801aa14:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 801aa18:	3a737365 	bcc	9cf77b4 <__exidx_end+0x1cdb344>
 801aa1c:	0a752520 	beq	9d63ea4 <__exidx_end+0x1d47a34>
 801aa20:	61472000 	mrsvs	r2, (UNDEF: 71)
 801aa24:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 801aa28:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 801aa2c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801aa30:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801aa34:	20000a73 	andcs	r0, r0, r3, ror sl
 801aa38:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 801aa3c:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 801aa40:	7a482075 	bvc	9222c1c <__exidx_end+0x12067ac>
 801aa44:	0000000a 	andeq	r0, r0, sl

0801aa48 <CSWTCH.9>:
 801aa48:	0801ac5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, sp, pc}
 801aa4c:	0801ad5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, fp, sp, pc}
 801aa50:	0801ae5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, fp, sp, pc}
 801aa54:	0801af5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sl, fp, sp, pc}
 801aa58:	0801b05c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp, pc}

0801aa5c <gamma10_0>:
 801aa5c:	03020100 	movweq	r0, #8448	; 0x2100
 801aa60:	07060504 	streq	r0, [r6, -r4, lsl #10]
 801aa64:	0b0a0908 	bleq	829ce8c <__exidx_end+0x280a1c>
 801aa68:	0f0e0d0c 	svceq	0x000e0d0c
 801aa6c:	13121110 	tstne	r2, #16, 2
 801aa70:	17161514 			; <UNDEFINED> instruction: 0x17161514
 801aa74:	1b1a1918 	blne	86a0edc <__exidx_end+0x684a6c>
 801aa78:	1f1e1d1c 	svcne	0x001e1d1c
 801aa7c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801aa80:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 801aa84:	2b2a2928 	blcs	8aa4f2c <__exidx_end+0xa88abc>
 801aa88:	2f2e2d2c 	svccs	0x002e2d2c
 801aa8c:	33323130 	teqcc	r2, #48, 2
 801aa90:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801aa94:	3b3a3938 	blcc	8ea8f7c <__exidx_end+0xe8cb0c>
 801aa98:	3f3e3d3c 	svccc	0x003e3d3c
 801aa9c:	43424140 	movtmi	r4, #8512	; 0x2140
 801aaa0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801aaa4:	4b4a4948 	blmi	92acfcc <__exidx_end+0x1290b5c>
 801aaa8:	4f4e4d4c 	svcmi	0x004e4d4c
 801aaac:	53525150 	cmppl	r2, #80, 2
 801aab0:	57565554 			; <UNDEFINED> instruction: 0x57565554
 801aab4:	5b5a5958 	blpl	96b101c <__exidx_end+0x1694bac>
 801aab8:	5f5e5d5c 	svcpl	0x005e5d5c
 801aabc:	63626160 	cmnvs	r2, #96, 2
 801aac0:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 801aac4:	6b6a6968 	blvs	9ab506c <__exidx_end+0x1a98bfc>
 801aac8:	6f6e6d6c 	svcvs	0x006e6d6c
 801aacc:	73727170 	cmnvc	r2, #112, 2
 801aad0:	77767574 			; <UNDEFINED> instruction: 0x77767574
 801aad4:	7b7a7978 	blvc	9eb90bc <__exidx_end+0x1e9cc4c>
 801aad8:	7f7e7d7c 	svcvc	0x007e7d7c
 801aadc:	83828180 	orrhi	r8, r2, #128, 2
 801aae0:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801aae4:	8b8a8988 	blhi	62bd10c <__stack_size+0x62b910c>
 801aae8:	8f8e8d8c 	svchi	0x008e8d8c
 801aaec:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 801aaf0:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801aaf4:	9b9a9998 	blls	66c115c <__stack_size+0x66bd15c>
 801aaf8:	9f9e9d9c 	svcls	0x009e9d9c
 801aafc:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 801ab00:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801ab04:	abaaa9a8 	blge	6ac51ac <__stack_size+0x6ac11ac>
 801ab08:	afaeadac 	svcge	0x00aeadac
 801ab0c:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 801ab10:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 801ab14:	bbbab9b8 	bllt	6ec91fc <__stack_size+0x6ec51fc>
 801ab18:	bfbebdbc 	svclt	0x00bebdbc
 801ab1c:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 801ab20:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801ab24:	cbcac9c8 	blgt	72cd24c <__stack_size+0x72c924c>
 801ab28:	cfcecdcc 	svcgt	0x00cecdcc
 801ab2c:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 801ab30:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 801ab34:	dbdad9d8 	blle	76d129c <__stack_size+0x76cd29c>
 801ab38:	dfdedddc 	svcle	0x00dedddc
 801ab3c:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 801ab40:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 801ab44:	ebeae9e8 	bl	7ad52ec <__stack_size+0x7ad12ec>
 801ab48:	efeeedec 	svc	0x00eeedec
 801ab4c:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 801ab50:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 801ab54:	fbfaf9f8 	blx	7ed933e <__stack_size+0x7ed533e>
 801ab58:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

0801ab5c <gamma20_0>:
	...
 801ab68:	01010101 	tsteq	r1, r1, lsl #2
 801ab6c:	01010101 	tsteq	r1, r1, lsl #2
 801ab70:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801ab74:	03030202 	movweq	r0, #12802	; 0x3202
 801ab78:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801ab7c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 801ab80:	06060505 	streq	r0, [r6], -r5, lsl #10
 801ab84:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801ab88:	09080808 	stmdbeq	r8, {r3, fp}
 801ab8c:	0a0a0909 	beq	829cfb8 <__exidx_end+0x280b48>
 801ab90:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801ab94:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801ab98:	100f0f0e 	andne	r0, pc, lr, lsl #30
 801ab9c:	12111110 	andsne	r1, r1, #16, 2
 801aba0:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 801aba4:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801aba8:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 801abac:	1b1a1a19 	blne	86a1418 <__exidx_end+0x684fa8>
 801abb0:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 801abb4:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801abb8:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801abbc:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801abc0:	2a292827 	bcs	8a64c64 <__exidx_end+0xa487f4>
 801abc4:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801abc8:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 801abcc:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801abd0:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801abd4:	3b3a3938 	blcc	8ea90bc <__exidx_end+0xe8cc4c>
 801abd8:	3f3e3d3c 	svccc	0x003e3d3c
 801abdc:	43424140 	movtmi	r4, #8512	; 0x2140
 801abe0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801abe4:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801abe8:	504f4e4d 	subpl	r4, pc, sp, asr #28
 801abec:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 801abf0:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 801abf4:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 801abf8:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801abfc:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 801ac00:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 801ac04:	7371706f 	cmnvc	r1, #111	; 0x6f
 801ac08:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 801ac0c:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 801ac10:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 801ac14:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 801ac18:	8f8e8c8b 	svchi	0x008e8c8b
 801ac1c:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 801ac20:	9b9a9897 	blls	66c0e84 <__stack_size+0x66bce84>
 801ac24:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 801ac28:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 801ac2c:	afadabaa 	svcge	0x00adabaa
 801ac30:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 801ac34:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 801ac38:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 801ac3c:	cac8c7c5 	bgt	724cb58 <__stack_size+0x7248b58>
 801ac40:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 801ac44:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801ac48:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 801ac4c:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 801ac50:	efedebe9 	svc	0x00edebe9
 801ac54:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 801ac58:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

0801ac5c <gamma21_0>:
	...
 801ac68:	01010000 	mrseq	r0, (UNDEF: 1)
 801ac6c:	01010101 	tsteq	r1, r1, lsl #2
 801ac70:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801ac74:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801ac78:	03030302 	movweq	r0, #13058	; 0x3302
 801ac7c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801ac80:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 801ac84:	06060505 	streq	r0, [r6], -r5, lsl #10
 801ac88:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801ac8c:	09080808 	stmdbeq	r8, {r3, fp}
 801ac90:	0a0a0909 	beq	829d0bc <__exidx_end+0x280c4c>
 801ac94:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801ac98:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801ac9c:	0f0f0e0e 	svceq	0x000f0e0e
 801aca0:	11111010 	tstne	r1, r0, lsl r0
 801aca4:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 801aca8:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801acac:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 801acb0:	1b1a1919 	blne	86a111c <__exidx_end+0x684cac>
 801acb4:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 801acb8:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 801acbc:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801acc0:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801acc4:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 801acc8:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 801accc:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801acd0:	33333231 	teqcc	r3, #268435459	; 0x10000003
 801acd4:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801acd8:	3b3a3938 	blcc	8ea91c0 <__exidx_end+0xe8cd50>
 801acdc:	3f3e3d3c 	svccc	0x003e3d3c
 801ace0:	43424140 	movtmi	r4, #8512	; 0x2140
 801ace4:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801ace8:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 801acec:	504f4e4d 	subpl	r4, pc, sp, asr #28
 801acf0:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 801acf4:	5a585756 	bpl	9630a54 <__exidx_end+0x16145e4>
 801acf8:	5f5d5c5b 	svcpl	0x005d5c5b
 801acfc:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 801ad00:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 801ad04:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 801ad08:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 801ad0c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 801ad10:	7f7e7c7b 	svcvc	0x007e7c7b
 801ad14:	85838281 	strhi	r8, [r3, #641]	; 0x281
 801ad18:	8b898886 	blhi	627cf38 <__stack_size+0x6278f38>
 801ad1c:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 801ad20:	97969493 			; <UNDEFINED> instruction: 0x97969493
 801ad24:	9e9c9b99 	vmovls.32	r9, d28[0]
 801ad28:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 801ad2c:	abaaa8a6 	blge	6ac4fcc <__stack_size+0x6ac0fcc>
 801ad30:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 801ad34:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 801ad38:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 801ad3c:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 801ad40:	cfcdcbca 	svcgt	0x00cdcbca
 801ad44:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 801ad48:	dfdddbd9 	svcle	0x00dddbd9
 801ad4c:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 801ad50:	eeeceae8 	vfms.f32	s29, s25, s17
 801ad54:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 801ad58:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

0801ad5c <gamma22_0>:
	...
 801ad68:	01000000 	mrseq	r0, (UNDEF: 0)
 801ad6c:	01010101 	tsteq	r1, r1, lsl #2
 801ad70:	01010101 	tsteq	r1, r1, lsl #2
 801ad74:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 801ad78:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801ad7c:	03030303 	movweq	r0, #13059	; 0x3303
 801ad80:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 801ad84:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801ad88:	06060605 	streq	r0, [r6], -r5, lsl #12
 801ad8c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801ad90:	09080808 	stmdbeq	r8, {r3, fp}
 801ad94:	0a0a0909 	beq	829d1c0 <__exidx_end+0x280d50>
 801ad98:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801ad9c:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 801ada0:	0f0f0e0e 	svceq	0x000f0e0e
 801ada4:	11111010 	tstne	r1, r0, lsl r0
 801ada8:	13131212 	tstne	r3, #536870913	; 0x20000001
 801adac:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801adb0:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801adb4:	1a1a1919 	bne	86a1220 <__exidx_end+0x684db0>
 801adb8:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801adbc:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801adc0:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801adc4:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801adc8:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801adcc:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 801add0:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801add4:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801add8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801addc:	3b3a3938 	blcc	8ea92c4 <__exidx_end+0xe8ce54>
 801ade0:	3f3e3d3c 	svccc	0x003e3d3c
 801ade4:	43424140 	movtmi	r4, #8512	; 0x2140
 801ade8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801adec:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801adf0:	514f4e4d 	cmppl	pc, sp, asr #28
 801adf4:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 801adf8:	5a595857 	bpl	9670f5c <__exidx_end+0x1654aec>
 801adfc:	5f5e5d5b 	svcpl	0x005e5d5b
 801ae00:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 801ae04:	6a696766 	bvs	9a74ba4 <__exidx_end+0x1a58734>
 801ae08:	6f6e6d6b 	svcvs	0x006e6d6b
 801ae0c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 801ae10:	7b797877 	blvc	9e78ff4 <__exidx_end+0x1e5cb84>
 801ae14:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 801ae18:	87858482 	strhi	r8, [r5, r2, lsl #9]
 801ae1c:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 801ae20:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 801ae24:	9a999795 	bls	6680c80 <__stack_size+0x667cc80>
 801ae28:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 801ae2c:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 801ae30:	afadacaa 	svcge	0x00adacaa
 801ae34:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 801ae38:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 801ae3c:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 801ae40:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 801ae44:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 801ae48:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 801ae4c:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 801ae50:	eeeceae7 	vfms.f32	s29, s25, s15
 801ae54:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 801ae58:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

0801ae5c <gamma23_0>:
	...
 801ae6c:	01010100 	mrseq	r0, (UNDEF: 17)
 801ae70:	01010101 	tsteq	r1, r1, lsl #2
 801ae74:	01010101 	tsteq	r1, r1, lsl #2
 801ae78:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801ae7c:	03020202 	movweq	r0, #8706	; 0x2202
 801ae80:	03030303 	movweq	r0, #13059	; 0x3303
 801ae84:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801ae88:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801ae8c:	06060605 	streq	r0, [r6], -r5, lsl #12
 801ae90:	07070707 	streq	r0, [r7, -r7, lsl #14]
 801ae94:	09080808 	stmdbeq	r8, {r3, fp}
 801ae98:	0a0a0a09 	beq	829d6c4 <__exidx_end+0x281254>
 801ae9c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801aea0:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 801aea4:	0f0f0e0e 	svceq	0x000f0e0e
 801aea8:	11111010 	tstne	r1, r0, lsl r0
 801aeac:	13131212 	tstne	r3, #536870913	; 0x20000001
 801aeb0:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 801aeb4:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801aeb8:	1a1a1918 	bne	86a1320 <__exidx_end+0x684eb0>
 801aebc:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801aec0:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801aec4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801aec8:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801aecc:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 801aed0:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 801aed4:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801aed8:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801aedc:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801aee0:	3b3a3938 	blcc	8ea93c8 <__exidx_end+0xe8cf58>
 801aee4:	3f3e3d3c 	svccc	0x003e3d3c
 801aee8:	43424140 	movtmi	r4, #8512	; 0x2140
 801aeec:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 801aef0:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 801aef4:	51504f4e 	cmppl	r0, lr, asr #30
 801aef8:	56555452 			; <UNDEFINED> instruction: 0x56555452
 801aefc:	5b5a5957 	blpl	96b1460 <__exidx_end+0x1694ff0>
 801af00:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 801af04:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 801af08:	6b6a6867 	blvs	9ab50ac <__exidx_end+0x1a98c3c>
 801af0c:	71706e6d 	cmnvc	r0, sp, ror #28
 801af10:	77757472 			; <UNDEFINED> instruction: 0x77757472
 801af14:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 801af18:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 801af1c:	8a888685 	bhi	623c938 <__stack_size+0x6238938>
 801af20:	908f8d8b 	addls	r8, pc, fp, lsl #27
 801af24:	97959492 			; <UNDEFINED> instruction: 0x97959492
 801af28:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 801af2c:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 801af30:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 801af34:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 801af38:	bbb9b7b6 	bllt	6e88e18 <__stack_size+0x6e84e18>
 801af3c:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 801af40:	cbc9c7c5 	blgt	728ce5c <__stack_size+0x7288e5c>
 801af44:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 801af48:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 801af4c:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 801af50:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 801af54:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 801af58:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801af5c <gamma24_0>:
	...
 801af6c:	01000000 	mrseq	r0, (UNDEF: 0)
 801af70:	01010101 	tsteq	r1, r1, lsl #2
 801af74:	01010101 	tsteq	r1, r1, lsl #2
 801af78:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801af7c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801af80:	03030202 	movweq	r0, #12802	; 0x3202
 801af84:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 801af88:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801af8c:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 801af90:	06060606 	streq	r0, [r6], -r6, lsl #12
 801af94:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801af98:	09090808 	stmdbeq	r9, {r3, fp}
 801af9c:	0a0a0a09 	beq	829d7c8 <__exidx_end+0x281358>
 801afa0:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801afa4:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801afa8:	0f0f0e0e 	svceq	0x000f0e0e
 801afac:	11111010 	tstne	r1, r0, lsl r0
 801afb0:	13131212 	tstne	r3, #536870913	; 0x20000001
 801afb4:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801afb8:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801afbc:	1a1a1918 	bne	86a1424 <__exidx_end+0x684fb4>
 801afc0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801afc4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801afc8:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801afcc:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801afd0:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801afd4:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 801afd8:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801afdc:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801afe0:	37363535 			; <UNDEFINED> instruction: 0x37363535
 801afe4:	3b3a3938 	blcc	8ea94cc <__exidx_end+0xe8d05c>
 801afe8:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 801afec:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 801aff0:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 801aff4:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 801aff8:	5251504e 	subspl	r5, r1, #78	; 0x4e
 801affc:	57565553 			; <UNDEFINED> instruction: 0x57565553
 801b000:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 801b004:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 801b008:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 801b00c:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 801b010:	7372706f 	cmnvc	r2, #111	; 0x6f
 801b014:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 801b018:	7f7e7c7b 	svcvc	0x007e7c7b
 801b01c:	86848381 	strhi	r8, [r4], r1, lsl #7
 801b020:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 801b024:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 801b028:	9b999795 	blls	6680e84 <__stack_size+0x667ce84>
 801b02c:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 801b030:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 801b034:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 801b038:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 801b03c:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 801b040:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 801b044:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 801b048:	dad8d6d4 	ble	7650ba0 <__stack_size+0x764cba0>
 801b04c:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 801b050:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 801b054:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 801b058:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801b05c <gamma25_0>:
	...
 801b070:	01010000 	mrseq	r0, (UNDEF: 1)
 801b074:	01010101 	tsteq	r1, r1, lsl #2
 801b078:	01010101 	tsteq	r1, r1, lsl #2
 801b07c:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 801b080:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801b084:	03030302 	movweq	r0, #13058	; 0x3302
 801b088:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801b08c:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 801b090:	06050505 	streq	r0, [r5], -r5, lsl #10
 801b094:	07060606 	streq	r0, [r6, -r6, lsl #12]
 801b098:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801b09c:	09090808 	stmdbeq	r9, {r3, fp}
 801b0a0:	0a0a0a09 	beq	829d8cc <__exidx_end+0x28145c>
 801b0a4:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 801b0a8:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801b0ac:	0f0f0f0e 	svceq	0x000f0f0e
 801b0b0:	11111010 	tstne	r1, r0, lsl r0
 801b0b4:	13131212 	tstne	r3, #536870913	; 0x20000001
 801b0b8:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801b0bc:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801b0c0:	1a1a1919 	bne	86a152c <__exidx_end+0x6850bc>
 801b0c4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801b0c8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801b0cc:	23222121 			; <UNDEFINED> instruction: 0x23222121
 801b0d0:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801b0d4:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 801b0d8:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801b0dc:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 801b0e0:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801b0e4:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801b0e8:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 801b0ec:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 801b0f0:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 801b0f4:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 801b0f8:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 801b0fc:	53525150 	cmppl	r2, #80, 2
 801b100:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801b104:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 801b108:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801b10c:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 801b110:	6f6e6c6b 	svcvs	0x006e6c6b
 801b114:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 801b118:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 801b11c:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 801b120:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 801b124:	908e8d8b 	addls	r8, lr, fp, lsl #27
 801b128:	97969492 			; <UNDEFINED> instruction: 0x97969492
 801b12c:	9f9d9b99 	svcls	0x009d9b99
 801b130:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 801b134:	aeacaaa8 	vfmage.f32	s20, s25, s17
 801b138:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 801b13c:	bfbdbab8 	svclt	0x00bdbab8
 801b140:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 801b144:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 801b148:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 801b14c:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 801b150:	ebe9e7e4 	bl	7a950e8 <__stack_size+0x7a910e8>
 801b154:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 801b158:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

0801b15c <gamma25_5>:
 801b15c:	01010100 	mrseq	r0, (UNDEF: 17)
 801b160:	01010101 	tsteq	r1, r1, lsl #2
 801b164:	01010101 	tsteq	r1, r1, lsl #2
 801b168:	01010101 	tsteq	r1, r1, lsl #2
 801b16c:	01010101 	tsteq	r1, r1, lsl #2
 801b170:	01010101 	tsteq	r1, r1, lsl #2
 801b174:	01010101 	tsteq	r1, r1, lsl #2
 801b178:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801b17c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801b180:	03030302 	movweq	r0, #13058	; 0x3302
 801b184:	03030303 	movweq	r0, #13059	; 0x3303
 801b188:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801b18c:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801b190:	06060605 	streq	r0, [r6], -r5, lsl #12
 801b194:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801b198:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 801b19c:	0a090909 	beq	825d5c8 <__exidx_end+0x241158>
 801b1a0:	0b0b0a0a 	bleq	82dd9d0 <__exidx_end+0x2c1560>
 801b1a4:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 801b1a8:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 801b1ac:	100f0f0f 	andne	r0, pc, pc, lsl #30
 801b1b0:	12111110 	andsne	r1, r1, #16, 2
 801b1b4:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 801b1b8:	16161514 			; <UNDEFINED> instruction: 0x16161514
 801b1bc:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 801b1c0:	1b1a1a19 	blne	86a1a2c <__exidx_end+0x6855bc>
 801b1c4:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 801b1c8:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801b1cc:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801b1d0:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801b1d4:	2a292827 	bcs	8a65278 <__exidx_end+0xa48e08>
 801b1d8:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 801b1dc:	31302f2e 	teqcc	r0, lr, lsr #30
 801b1e0:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801b1e4:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 801b1e8:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 801b1ec:	41403f3e 	cmpmi	r0, lr, lsr pc
 801b1f0:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801b1f4:	4a494846 	bmi	926d314 <__exidx_end+0x1250ea4>
 801b1f8:	4f4e4c4b 	svcmi	0x004e4c4b
 801b1fc:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 801b200:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801b204:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 801b208:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 801b20c:	6a686765 	bvs	9a34fa8 <__exidx_end+0x1a18b38>
 801b210:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801b214:	76747371 			; <UNDEFINED> instruction: 0x76747371
 801b218:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 801b21c:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 801b220:	8a888685 	bhi	623cc3c <__stack_size+0x6238c3c>
 801b224:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 801b228:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 801b22c:	9f9d9c9a 	svcls	0x009d9c9a
 801b230:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 801b234:	afadaba9 	svcge	0x00adaba9
 801b238:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 801b23c:	bfbdbbb9 	svclt	0x00bdbbb9
 801b240:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 801b244:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 801b248:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 801b24c:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 801b250:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 801b254:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 801b258:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 801b25c:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801b260:	006e776f 	rsbeq	r7, lr, pc, ror #14
 801b264:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 801b268:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 801b26c:	 	andeq	r0, r0, #100	; 0x64

0801b26e <CSWTCH.18>:
 801b26e:	02020200 	andeq	r0, r2, #0, 4
 801b272:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 801b276:	 	ldrbmi	r0, [r2, -r0, lsl #10]

0801b278 <PixelType::MAPS>:
 801b278:	00424752 	subeq	r4, r2, r2, asr r7
 801b27c:	00474252 	subeq	r4, r7, r2, asr r2
 801b280:	00425247 	subeq	r5, r2, r7, asr #4
 801b284:	00524247 	subseq	r4, r2, r7, asr #4
 801b288:	00475242 	subeq	r5, r7, r2, asr #4
 801b28c:	00524742 	subseq	r4, r2, r2, asr #14

0801b290 <PixelType::TYPES>:
 801b290:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b294:	00003130 	andeq	r3, r0, r0, lsr r1
 801b298:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b29c:	00003131 	andeq	r3, r0, r1, lsr r1
 801b2a0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b2a4:	00003231 	andeq	r3, r0, r1, lsr r2
 801b2a8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b2ac:	00423231 	subeq	r3, r2, r1, lsr r2
 801b2b0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b2b4:	00003331 	andeq	r3, r0, r1, lsr r3
 801b2b8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801b2bc:	00003531 	andeq	r3, r0, r1, lsr r5
 801b2c0:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801b2c4:	00003231 	andeq	r3, r0, r1, lsr r2
 801b2c8:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801b2cc:	00573231 	subseq	r3, r7, r1, lsr r2
 801b2d0:	31534355 	cmpcc	r3, r5, asr r3
 801b2d4:	00333039 	eorseq	r3, r3, r9, lsr r0
 801b2d8:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801b2dc:	00333039 	eorseq	r3, r3, r9, lsr r0
 801b2e0:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801b2e4:	00003231 	andeq	r3, r0, r1, lsr r2
 801b2e8:	31415041 	cmpcc	r1, r1, asr #32
 801b2ec:	00003230 	andeq	r3, r0, r0, lsr r2
 801b2f0:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801b2f4:	00003232 	andeq	r3, r0, r2, lsr r2
 801b2f8:	31383950 	teqcc	r8, r0, asr r9
 801b2fc:	00000033 	andeq	r0, r0, r3, lsr r0

0801b300 <s_patternName>:
 801b300:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 801b30c:	61520000 	cmpvs	r2, r0
 801b310:	6f626e69 	svcvs	0x00626e69
 801b314:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801b318:	00656c63 	rsbeq	r6, r5, r3, ror #24
 801b31c:	61656854 	cmnvs	r5, r4, asr r8
 801b320:	20726574 	rsbscs	r6, r2, r4, ror r5
 801b324:	73616863 	cmnvc	r1, #6488064	; 0x630000
 801b328:	6f430065 	svcvs	0x00430065
 801b32c:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 801b330:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801b334:	00000065 	andeq	r0, r0, r5, rrx
 801b338:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801b33c:	0072656e 	rsbseq	r6, r2, lr, ror #10
 801b340:	00000000 	andeq	r0, r0, r0
 801b344:	61460000 	mrsvs	r0, (UNDEF: 70)
 801b348:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801b354 <pixel::s_GPIO_PINs>:
 801b354:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0801b358 <s_aStorSize>:
 801b358:	00000060 	andeq	r0, r0, r0, rrx
 801b35c:	00000090 	muleq	r0, r0, r0
 801b360:	00000020 	andeq	r0, r0, r0, lsr #32
 801b364:	00000040 	andeq	r0, r0, r0, asr #32
 801b368:	00000060 	andeq	r0, r0, r0, rrx
 801b36c:	00000040 	andeq	r0, r0, r0, asr #32
 801b370:	00000020 	andeq	r0, r0, r0, lsr #32
 801b374:	00000020 	andeq	r0, r0, r0, lsr #32
 801b378:	000001e0 	andeq	r0, r0, r0, ror #3
 801b37c:	00000040 	andeq	r0, r0, r0, asr #32
 801b380:	00000020 	andeq	r0, r0, r0, lsr #32
 801b384:	00000060 	andeq	r0, r0, r0, rrx
 801b388:	00000030 	andeq	r0, r0, r0, lsr r0
 801b38c:	00000020 	andeq	r0, r0, r0, lsr #32
 801b390:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 801b394:	00000030 	andeq	r0, r0, r0, lsr r0
 801b398:	00000040 	andeq	r0, r0, r0, asr #32
 801b39c:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3a0:	00000060 	andeq	r0, r0, r0, rrx
 801b3a4:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3a8:	00000400 	andeq	r0, r0, r0, lsl #8
 801b3ac:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3b0:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3b4:	00000040 	andeq	r0, r0, r0, asr #32
 801b3b8:	00000060 	andeq	r0, r0, r0, rrx
 801b3bc:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3c0:	00000020 	andeq	r0, r0, r0, lsr #32
 801b3c4:	000000c0 	andeq	r0, r0, r0, asr #1

0801b3c8 <vtable for StoreDisplayUdf>:
	...
 801b3d0:	08011e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip}
 801b3d4:	08011ecd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, fp, ip}
 801b3d8:	08011ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp, ip}
 801b3dc:	08011e85 	stmdaeq	r1, {r0, r2, r7, r9, sl, fp, ip}

0801b3e0 <vtable for StoreDmxSend>:
	...
 801b3e8:	08011eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip}
 801b3ec:	08011f39 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sl, fp, ip}
 801b3f0:	08011f15 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, fp, ip}
 801b3f4:	08011ef1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sl, fp, ip}

0801b3f8 <vtable for StoreNetwork>:
	...
 801b400:	08011f59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, fp, ip}
 801b404:	08012041 	stmdaeq	r1, {r0, r6, sp}
 801b408:	08011f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp, ip}
 801b40c:	08012055 	stmdaeq	r1, {r0, r2, r4, r6, sp}
 801b410:	08011fe1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, fp, ip}
 801b414:	08011fb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip}
 801b418:	08011f85 	stmdaeq	r1, {r0, r2, r7, r8, r9, sl, fp, ip}
 801b41c:	0801200d 	stmdaeq	r1, {r0, r2, r3, sp}
 801b420:	0800942d 	stmdaeq	r0, {r0, r2, r3, r5, sl, ip, pc}
 801b424:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b428:	00000000 	andeq	r0, r0, r0
 801b42c:	08011f5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, fp, ip}
 801b430:	0801204d 	stmdaeq	r1, {r0, r2, r3, r6, sp}
 801b434:	08012005 	stmdaeq	r1, {r0, r2, sp}
 801b438:	08011fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip}
 801b43c:	08011fad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip}
 801b440:	08012039 	stmdaeq	r1, {r0, r3, r4, r5, sp}
 801b444:	08009455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip, pc}

0801b448 <vtable for StoreRDMDevice>:
	...
 801b450:	0801208d 	stmdaeq	r1, {r0, r2, r3, r7, sp}
 801b454:	080120fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sp}
 801b458:	08012095 	stmdaeq	r1, {r0, r2, r4, r7, sp}
 801b45c:	08012111 	stmdaeq	r1, {r0, r4, r8, sp}
 801b460:	080120b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sp}
 801b464:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b468:	00000000 	andeq	r0, r0, r0
 801b46c:	0801208f 	stmdaeq	r1, {r0, r1, r2, r3, r7, sp}
 801b470:	08012109 	stmdaeq	r1, {r0, r3, r8, sp}
 801b474:	080120f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sp}

0801b478 <vtable for StoreRemoteConfig>:
	...
 801b480:	0801214d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sp}
 801b484:	08012199 	stmdaeq	r1, {r0, r3, r4, r7, r8, sp}
 801b488:	08012175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sp}
 801b48c:	08012151 	stmdaeq	r1, {r0, r4, r6, r8, sp}

0801b490 <vtable for StoreE131>:
	...
 801b498:	080121b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sp}
 801b49c:	08012205 	stmdaeq	r1, {r0, r2, r9, sp}
 801b4a0:	080121e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sp}
 801b4a4:	080121bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sp}

0801b4a8 <vtable for StorePixelDmx>:
	...
 801b4b0:	08012225 	stmdaeq	r1, {r0, r2, r5, r9, sp}
 801b4b4:	08012391 	stmdaeq	r1, {r0, r4, r7, r8, r9, sp}
 801b4b8:	0801222d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp}
 801b4bc:	080123a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sp}
 801b4c0:	0801235d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sp}
 801b4c4:	08012329 	stmdaeq	r1, {r0, r3, r5, r8, r9, sp}
 801b4c8:	080122f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sp}
 801b4cc:	080122b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sp}
 801b4d0:	08012285 	stmdaeq	r1, {r0, r2, r7, r9, sp}
 801b4d4:	08012251 	stmdaeq	r1, {r0, r4, r6, r9, sp}
 801b4d8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801b4dc:	00000000 	andeq	r0, r0, r0
 801b4e0:	08012227 	stmdaeq	r1, {r0, r1, r2, r5, r9, sp}
 801b4e4:	0801239d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sp}
 801b4e8:	08012389 	stmdaeq	r1, {r0, r3, r7, r8, r9, sp}
 801b4ec:	08012355 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sp}
 801b4f0:	08012321 	stmdaeq	r1, {r0, r5, r8, r9, sp}
 801b4f4:	080122e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sp}
 801b4f8:	080122b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sp}
 801b4fc:	0801227d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sp}
 801b500:	34325441 	ldrtcc	r5, [r2], #-1089	; 0xfffffbbf
 801b504:	00323343 	eorseq	r3, r2, r3, asr #6
 801b508:	25206f4e 	strcs	r6, [r0, #-3918]!	; 0xfffff0b2
 801b50c:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 801b510:	78322520 	ldmdavc	r2!, {r5, r8, sl, sp}
 801b514:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 801b518:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 801b51c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801b520:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801b524:	6f742068 	svcvs	0x00742068
 801b528:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801b52c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801b530:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801b534:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801b538:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 801b53c:	6374000a 	cmnvs	r4, #10
 801b540:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 801b544:	3a6e6967 	bcc	9bb5ae8 <__exidx_end+0x1b99678>
 801b548:	6f6f7420 	svcvs	0x006f7420
 801b54c:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801b550:	6f632079 	svcvs	0x00632079
 801b554:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801b558:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801b55c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801b560:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 801b564:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 801b568:	41000a64 	tstmi	r0, r4, ror #20
 801b56c:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801b570:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 801b574:	61662070 	smcvs	25088	; 0x6200
 801b578:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 801b57c:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801b580:	61666564 	cmnvs	r6, r4, ror #10
 801b584:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801b588:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801b58c:	0a796177 	beq	9e73b70 <__exidx_end+0x1e57700>
 801b590:	50524100 	subspl	r4, r2, r0, lsl #2
 801b594:	6f6f6c20 	svcvs	0x006f6c20
 801b598:	2070756b 	rsbscs	r7, r0, fp, ror #10
 801b59c:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801b5a0:	000a6465 	andeq	r6, sl, r5, ror #8

0801b5a4 <NetworkConst::MSG_MDNS_CONFIG>:
 801b5a4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801b5a8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801b5ac:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801b5b0:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801b5b5 <NetworkConst::MSG_NETWORK_INIT>:
 801b5b5:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801b5b9:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801b5bd:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801b5c1:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801b5c5:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801b5c9:	3135322e 	teqcc	r5, lr, lsr #4
 801b5cd:	63745f00 	cmnvs	r4, #0, 30
 801b5d1:	6f6c2e70 	svcvs	0x006c2e70
 801b5d5:	006c6163 	rsbeq	r6, ip, r3, ror #2
 801b5d9:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801b5dd:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801b5e1:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 801b5e9 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801b5e5:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 801b5e9:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801a78d <vtable for WS28xxDmxMulti+0xed>
 801b5ed:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801b5f1:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801b5f5:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801b5f9:	20000a53 	andcs	r0, r0, r3, asr sl
 801b5fd:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801b601:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801b605:	0a676e69 	beq	99f6fb1 <__exidx_end+0x19dab41>
 801b609:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801b60d:	3a20656d 	bcc	8834bc9 <__exidx_end+0x818759>
 801b611:	0a732520 	beq	9ce4a99 <__exidx_end+0x1cc8629>
 801b615:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801b619:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801b61d:	000a7325 	andeq	r7, sl, r5, lsr #6
 801b621:	30687465 	rsbcc	r7, r8, r5, ror #8
 801b625:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801b629:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801b62d:	5f656369 	svcpl	0x00656369
 801b631:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801b635:	6b726f77 	blvs	9cb7419 <__exidx_end+0x1c9afa9>
 801b639:	4820000a 	stmdami	r0!, {r1, r3}
 801b63d:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801b641:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801b645:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801b649:	20000a73 	andcs	r0, r0, r3, ror sl
 801b64d:	614e6649 	cmpvs	lr, r9, asr #12
 801b651:	2020656d 	eorcs	r6, r0, sp, ror #10
 801b655:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b659:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801b65d:	000a7325 	andeq	r7, sl, r5, lsr #6
 801b661:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801b665:	20202074 	eorcs	r2, r0, r4, ror r0
 801b669:	3a202020 	bcc	88236f1 <__exidx_end+0x807281>
 801b66d:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801b671:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b675:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b679:	0a64252f 	beq	9924b3d <__exidx_end+0x19086cd>
 801b67d:	654e2000 	strbvs	r2, [lr, #-0]
 801b681:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801b685:	2020206b 	eorcs	r2, r0, fp, rrx
 801b689:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b68d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b691:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b695:	20000a64 	andcs	r0, r0, r4, ror #20
 801b699:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801b69d:	20796177 	rsbscs	r6, r9, r7, ror r1
 801b6a1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b6a5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b6a9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b6ad:	0a64252e 	beq	9924b6d <__exidx_end+0x19086fd>
 801b6b1:	72422000 	subvc	r2, r2, #0
 801b6b5:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 801b6b9:	20747361 	rsbscs	r7, r4, r1, ror #6
 801b6bd:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b6c1:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b6c5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b6c9:	20000a64 	andcs	r0, r0, r4, ror #20
 801b6cd:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801b6d1:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b6d5:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b6d9:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b6dd:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801b6e1:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801b6e5:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801b6e9:	3a78322e 	bcc	9e27fa9 <__exidx_end+0x1e0bb39>
 801b6ed:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b6f1:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801b6f5:	20000a78 	andcs	r0, r0, r8, ror sl
 801b6f9:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801b6fd:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b701:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b705:	000a6325 	andeq	r6, sl, r5, lsr #6
 801b709:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801b70d:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801b711:	 	rsbvc	r0, r9, r0, asr r0

0801b713 <NetworkParamsConst::IP_ADDRESS>:
 801b713:	615f7069 	cmpvs	pc, r9, rrx
 801b717:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801b71b:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801b71e <NetworkParamsConst::DEFAULT_GATEWAY>:
 801b71e:	61666564 	cmnvs	r6, r4, ror #10
 801b722:	5f746c75 	svcpl	0x00746c75
 801b726:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801b72a:	00796177 	rsbseq	r6, r9, r7, ror r1

0801b72e <NetworkParamsConst::DHCP_RETRY_TIME>:
 801b72e:	70636864 	rsbvc	r6, r3, r4, ror #16
 801b732:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801b736:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801b73e <NetworkParamsConst::HOSTNAME>
 801b73a:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801b73e <NetworkParamsConst::HOSTNAME>:
 801b73e:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801b742:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801b747 <NetworkParamsConst::NET_MASK>:
 801b747:	5f74656e 	svcpl	0x0074656e
 801b74b:	6b73616d 	blvs	9cf3d07 <__exidx_end+0x1cd7897>
	...

0801b750 <NetworkParamsConst::USE_DHCP>:
 801b750:	5f657375 	svcpl	0x00657375
 801b754:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801b759 <NetworkParamsConst::FILE_NAME>:
 801b759:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801b75d:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801b761:	00747874 	rsbseq	r7, r4, r4, ror r8
 801b765:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 801b769:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 801b76d:	61747320 	cmnvs	r4, r0, lsr #6
 801b771:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801b775:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b779:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b77d:	252f6425 	strcs	r6, [pc, #-1061]!	; 801b360 <s_aStorSize+0x8>
 801b781:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801b785:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 801b789:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b78d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b791:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801b795:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 801b799:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b79d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b7a1:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801b7a5:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 801b7a9:	20657261 	rsbcs	r7, r5, r1, ror #4
 801b7ad:	2a2e2556 	bcs	8ba4d0d <__exidx_end+0xb8889d>
 801b7b1:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801b7b5:	72205043 	eorvc	r5, r0, #67	; 0x43
 801b7b9:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801b7bd:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801b7c1:	50434844 	subpl	r4, r3, r4, asr #16
 801b7c5:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 801b7c9:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801b7cd:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801b7d1:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801b7d5:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 801b7d9:	6f647475 	svcvs	0x00647475
 801b7dd:	 	strvc	r6, [r0], #-3703	; 0xfffff189

0801b7e0 <pArray>:
 801b7e0:	0801b874 	stmdaeq	r1, {r2, r4, r5, r6, fp, ip, sp, pc}
 801b7e4:	0801b830 	stmdaeq	r1, {r4, r5, fp, ip, sp, pc}
 801b7e8:	0801b713 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, ip, sp, pc}
 801b7ec:	0801b87a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, ip, sp, pc}
 801b7f0:	0801bb8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, fp, ip, sp, pc}
 801b7f4:	0801b83b 	stmdaeq	r1, {r0, r1, r3, r4, r5, fp, ip, sp, pc}
 801b7f8:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801b7fc:	0801b73e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, pc}
 801b800:	0801b991 	stmdaeq	r1, {r0, r4, r7, r8, fp, ip, sp, pc}
 801b804:	0801b9a1 	stmdaeq	r1, {r0, r5, r7, r8, fp, ip, sp, pc}
 801b808:	0801b9b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, fp, ip, sp, pc}
 801b80c:	0801b9c1 	stmdaeq	r1, {r0, r6, r7, r8, fp, ip, sp, pc}
 801b810:	0801b747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, pc}
 801b814:	0801bb59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, fp, ip, sp, pc}
 801b818:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801b81c:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801b820:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801b824:	080193cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip, pc}
 801b828:	0801b71e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, ip, sp, pc}
 801b82c:	0801b848 	stmdaeq	r1, {r3, r6, fp, ip, sp, pc}

0801b830 <DisplayUdfParamsConst::BOARD_NAME>:
 801b830:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801b834:	616e5f64 	cmnvs	lr, r4, ror #30
 801b838:	 	tstvs	r0, sp, ror #10

0801b83b <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801b83b:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b83f:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801b843:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

0801b848 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801b848:	5f786d64 	svcpl	0x00786d64
 801b84c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801b850:	6f697463 	svcvs	0x00697463
 801b854:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801b856 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801b856:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 801b85a:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801b85e:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801b2f9 <PixelType::TYPES+0x69>
 801b862:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801b864 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801b864:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801b868:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 801b86c:	61636974 	smcvs	13972	; 0x3694
 801b870:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801b874 <DisplayUdfParamsConst::TITLE>:
 801b874:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 801b878:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801b87a <DisplayUdfParamsConst::VERSION>:
 801b87a:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801b87e:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801b882 <DisplayUdfParamsConst::FILE_NAME>:
 801b882:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801b886:	2e79616c 	rpwcsez	f6, f1, #4.0
 801b88a:	00747874 	rsbseq	r7, r4, r4, ror r8

0801b88e <DisplayUdfParamsConst::INTENSITY>:
 801b88e:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801b892:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801b896:	50410079 	subpl	r0, r1, r9, ror r0
 801b89a:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b89e:	726f5000 	rsbvc	r5, pc, #0
 801b8a2:	63252074 			; <UNDEFINED> instruction: 0x63252074
 801b8a6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801b8aa:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801b8ae:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801b8b2:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801b8b6:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801b8ba:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

0801b8bf <DevicesParamsConst::ACTIVE_OUT>:
 801b8bf:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b8c3:	6f5f6576 	svcvs	0x005f6576
 801b8c7:	 	smlsdxvs	r0, r5, r4, r7

0801b8ca <DevicesParamsConst::GAMMA_VALUE>:
 801b8ca:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801b8ce:	61765f61 	cmnvs	r6, r1, ror #30
 801b8d2:	0065756c 	rsbeq	r7, r5, ip, ror #10

0801b8d6 <DevicesParamsConst::SPI_SPEED_HZ>:
 801b8d6:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801b8da:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801b8de:	5f646565 	svcpl	0x00646565
 801b8e2:	 	strvc	r7, [r0], #-2664	; 0xfffff598

0801b8e5 <DevicesParamsConst::TEST_PATTERN>:
 801b8e5:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801b8e9:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801b8ed:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801b8f2 <DevicesParamsConst::GROUPING_COUNT>:
 801b8f2:	5f64656c 	svcpl	0x0064656c
 801b8f6:	756f7267 	strbvc	r7, [pc, #-615]!	; 801b697 <NetworkConst::MSG_NETWORK_INIT+0xe2>
 801b8fa:	6f635f70 	svcvs	0x00635f70
 801b8fe:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801b902 <DevicesParamsConst::GAMMA_CORRECTION>:
 801b902:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801b906:	6f635f61 	svcvs	0x00635f61
 801b90a:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 801b90e:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

0801b913 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801b913:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 801b917:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801b91b:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801b91f:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801b923:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

0801b925 <DevicesParamsConst::MAP>:
 801b925:	5f64656c 	svcpl	0x0064656c
 801b929:	5f626772 	svcpl	0x00626772
 801b92d:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801b931:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801b935 <DevicesParamsConst::TYPE>:
 801b935:	5f64656c 	svcpl	0x0064656c
 801b939:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801b93e <DevicesParamsConst::COUNT>:
 801b93e:	5f64656c 	svcpl	0x0064656c
 801b942:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801b946:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801b948 <DevicesParamsConst::LED_T0H>:
 801b948:	5f64656c 	svcpl	0x0064656c
 801b94c:	00683074 	rsbeq	r3, r8, r4, ror r0

0801b950 <DevicesParamsConst::LED_T1H>:
 801b950:	5f64656c 	svcpl	0x0064656c
 801b954:	00683174 	rsbeq	r3, r8, r4, ror r1

0801b958 <DevicesParamsConst::FILE_NAME>:
 801b958:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801b95c:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801b960:	00747874 	rsbseq	r7, r4, r4, ror r8
 801b964:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801b968:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801b96c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b970:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b974:	002c2264 	eoreq	r2, ip, r4, ror #4
 801b978:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801b97c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801b980:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801b984:	0a64252e 	beq	9924e44 <__exidx_end+0x19089d4>
 801b988:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801b98c:	0a232073 	beq	88e3b60 <__exidx_end+0x8c76f0>
	...

0801b991 <LightSetParamsConst::UNIVERSE_PORT>:
 801b991:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b995:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b999:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b99d:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801b9a1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b9a5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b9a9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b9ad:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801b9b1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b9b5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b9b9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b9bd:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801b9c1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801b9c5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801b9c9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801b9cd:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801b9d1 <LightSetParamsConst::START_UNI_PORT>:
 801b9d1:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b9d5:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b9d9:	6f705f69 	svcvs	0x00705f69
 801b9dd:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801b9e1:	00000000 	andeq	r0, r0, r0
 801b9e5:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b9e9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801b9ed:	6f705f69 	svcvs	0x00705f69
 801b9f1:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 801b9f5:	00000000 	andeq	r0, r0, r0
 801b9f9:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801b9fd:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba01:	6f705f69 	svcvs	0x00705f69
 801ba05:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801ba09:	00000000 	andeq	r0, r0, r0
 801ba0d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba11:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba15:	6f705f69 	svcvs	0x00705f69
 801ba19:	345f7472 	ldrbcc	r7, [pc], #-1138	; 801ba21 <LightSetParamsConst::START_UNI_PORT+0x50>
 801ba1d:	00000000 	andeq	r0, r0, r0
 801ba21:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba25:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba29:	6f705f69 	svcvs	0x00705f69
 801ba2d:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 801b5c3 <NetworkConst::MSG_NETWORK_INIT+0xe>
 801ba31:	00000000 	andeq	r0, r0, r0
 801ba35:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba39:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba3d:	6f705f69 	svcvs	0x00705f69
 801ba41:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 801ba45:	00000000 	andeq	r0, r0, r0
 801ba49:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba4d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba51:	6f705f69 	svcvs	0x00705f69
 801ba55:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 801ba59:	00000000 	andeq	r0, r0, r0
 801ba5d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba61:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba65:	6f705f69 	svcvs	0x00705f69
 801ba69:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801ba6d:	00000000 	andeq	r0, r0, r0
 801ba71:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba75:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba79:	6f705f69 	svcvs	0x00705f69
 801ba7d:	395f7472 	ldmdbcc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801ba81:	00000000 	andeq	r0, r0, r0
 801ba85:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba89:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801ba8d:	6f705f69 	svcvs	0x00705f69
 801ba91:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801ba95:	00000030 	andeq	r0, r0, r0, lsr r0
 801ba99:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801ba9d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801baa1:	6f705f69 	svcvs	0x00705f69
 801baa5:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801baa9:	00000031 	andeq	r0, r0, r1, lsr r0
 801baad:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801bab1:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801bab5:	6f705f69 	svcvs	0x00705f69
 801bab9:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801babd:	00000032 	andeq	r0, r0, r2, lsr r0
 801bac1:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801bac5:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801bac9:	6f705f69 	svcvs	0x00705f69
 801bacd:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801bad1:	00000033 	andeq	r0, r0, r3, lsr r0
 801bad5:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801bad9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801badd:	6f705f69 	svcvs	0x00705f69
 801bae1:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801bae5:	00000034 	andeq	r0, r0, r4, lsr r0
 801bae9:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801baed:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801baf1:	6f705f69 	svcvs	0x00705f69
 801baf5:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801baf9:	00000035 	andeq	r0, r0, r5, lsr r0
 801bafd:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801bb01:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801bb05:	6f705f69 	svcvs	0x00705f69
 801bb09:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801bb0d:	00000036 	andeq	r0, r0, r6, lsr r0

0801bb11 <LightSetParamsConst::MERGE_MODE_PORT>:
 801bb11:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801bb15:	6f6d5f65 	svcvs	0x006d5f65
 801bb19:	705f6564 	subsvc	r6, pc, r4, ror #10
 801bb1d:	5f74726f 	svcpl	0x0074726f
 801bb21:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801bb25:	5f656772 	svcpl	0x00656772
 801bb29:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801bb2d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801bb31:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801bb35:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801bb39:	6f6d5f65 	svcvs	0x006d5f65
 801bb3d:	705f6564 	subsvc	r6, pc, r4, ror #10
 801bb41:	5f74726f 	svcpl	0x0074726f
 801bb45:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 801bb49:	5f656772 	svcpl	0x00656772
 801bb4d:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801bb51:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801bb55:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801bb59 <LightSetParamsConst::DMX_START_ADDRESS>:
 801bb59:	5f786d64 	svcpl	0x00786d64
 801bb5d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801bb61:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801bb65:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801bb69:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

0801bb6b <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 801bb6b:	61736964 	cmnvs	r3, r4, ror #18
 801bb6f:	5f656c62 	svcpl	0x00656c62
 801bb73:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801bb77:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801bb7b:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801b616 <NetworkConst::MSG_NETWORK_INIT+0x61>
 801bb7f:	 	smcvs	24580	; 0x6004

0801bb81 <LightSetParamsConst::FAILSAFE>:
 801bb81:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801bb85:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

0801bb8a <LightSetParamsConst::UNIVERSE>:
 801bb8a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801bb8e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801bb93 <LightSetParamsConst::DIRECTION>:
 801bb93:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801bb97:	6f697463 	svcvs	0x00697463
 801bb9b:	6f705f6e 	svcvs	0x00705f6e
 801bb9f:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801bba3:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801bba7:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801bbab:	5f6e6f69 	svcpl	0x006e6f69
 801bbaf:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801bbb3:	0000625f 	andeq	r6, r0, pc, asr r2
 801bbb7:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801bbbb:	6f697463 	svcvs	0x00697463
 801bbbf:	6f705f6e 	svcvs	0x00705f6e
 801bbc3:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801bbc7:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801bbcb:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801bbcf:	5f6e6f69 	svcpl	0x006e6f69
 801bbd3:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801bbd7:	0000645f 	andeq	r6, r0, pc, asr r4
 801bbdb:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801bbdf:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801bbe3:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801bbe7:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801bbeb:	31485300 	mrscc	r5, (UNDEF: 120)
 801bbef:	00363031 	eorseq	r3, r6, r1, lsr r0
 801bbf3:	31445353 	cmpcc	r4, r3, asr r3
 801bbf7:	00363033 	eorseq	r3, r6, r3, lsr r0
 801bbfb:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801bbff:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801bc03:	000a2964 	andeq	r2, sl, r4, ror #18
 801bc07:	aaeeaa40 	bge	7bc650f <__stack_size+0x7bc250f>
 801bc0b:	000000ee 	andeq	r0, r0, lr, ror #1
	...

0801bc10 <_OledFont8x6>:
 801bc10:	00000040 	andeq	r0, r0, r0, asr #32
 801bc14:	40000000 	andmi	r0, r0, r0
 801bc18:	005f0000 	subseq	r0, pc, r0
 801bc1c:	00400000 	subeq	r0, r0, r0
 801bc20:	00070007 	andeq	r0, r7, r7
 801bc24:	7f144000 	svcvc	0x00144000
 801bc28:	00147f14 	andseq	r7, r4, r4, lsl pc
 801bc2c:	7f2a2440 	svcvc	0x002a2440
 801bc30:	4000122a 	andmi	r1, r0, sl, lsr #4
 801bc34:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801bc38:	36400062 	strbcc	r0, [r0], -r2, rrx
 801bc3c:	50205649 	eorpl	r5, r0, r9, asr #12
 801bc40:	08004000 	stmdaeq	r0, {lr}
 801bc44:	00000307 	andeq	r0, r0, r7, lsl #6
 801bc48:	221c0040 	andscs	r0, ip, #64	; 0x40
 801bc4c:	40000041 	andmi	r0, r0, r1, asr #32
 801bc50:	1c224100 	stfnes	f4, [r2], #-0
 801bc54:	2a400000 	bcs	901bc5c <__exidx_end+0xfff7ec>
 801bc58:	2a1c7f1c 	bcs	873b8d0 <__exidx_end+0x71f460>
 801bc5c:	08084000 	stmdaeq	r8, {lr}
 801bc60:	0008083e 	andeq	r0, r8, lr, lsr r8
 801bc64:	70800040 	addvc	r0, r0, r0, asr #32
 801bc68:	40000030 	andmi	r0, r0, r0, lsr r0
 801bc6c:	08080808 	stmdaeq	r8, {r3, fp}
 801bc70:	00400008 	subeq	r0, r0, r8
 801bc74:	00606000 	rsbeq	r6, r0, r0
 801bc78:	10204000 	eorne	r4, r0, r0
 801bc7c:	00020408 	andeq	r0, r2, r8, lsl #8
 801bc80:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801bc84:	40003e45 	andmi	r3, r0, r5, asr #28
 801bc88:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801bc8c:	72400000 	subvc	r0, r0, #0
 801bc90:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801bc94:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801bc98:	00334d49 	eorseq	r4, r3, r9, asr #26
 801bc9c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801bca0:	4000107f 	andmi	r1, r0, pc, ror r0
 801bca4:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801bca8:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801bcac:	3149494a 	cmpcc	r9, sl, asr #18
 801bcb0:	21414000 	mrscs	r4, (UNDEF: 65)
 801bcb4:	00070911 	andeq	r0, r7, r1, lsl r9
 801bcb8:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801bcbc:	40003649 	andmi	r3, r0, r9, asr #12
 801bcc0:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801bcc4:	0040001e 	subeq	r0, r0, lr, lsl r0
 801bcc8:	00001400 	andeq	r1, r0, r0, lsl #8
 801bccc:	40004000 	andmi	r4, r0, r0
 801bcd0:	00000034 	andeq	r0, r0, r4, lsr r0
 801bcd4:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801bcd8:	40004122 	andmi	r4, r0, r2, lsr #2
 801bcdc:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801bce0:	00400014 	subeq	r0, r0, r4, lsl r0
 801bce4:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801bce8:	01024000 	mrseq	r4, (UNDEF: 2)
 801bcec:	00060959 	andeq	r0, r6, r9, asr r9
 801bcf0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801bcf4:	40004e59 	andmi	r4, r0, r9, asr lr
 801bcf8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801bcfc:	7f40007c 	svcvc	0x0040007c
 801bd00:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801bd04:	413e4000 	teqmi	lr, r0
 801bd08:	00224141 	eoreq	r4, r2, r1, asr #2
 801bd0c:	41417f40 	cmpmi	r1, r0, asr #30
 801bd10:	40003e41 	andmi	r3, r0, r1, asr #28
 801bd14:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801bd18:	7f400041 	svcvc	0x00400041
 801bd1c:	01090909 	tsteq	r9, r9, lsl #18
 801bd20:	413e4000 	teqmi	lr, r0
 801bd24:	00735141 	rsbseq	r5, r3, r1, asr #2
 801bd28:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801bd2c:	40007f08 	andmi	r7, r0, r8, lsl #30
 801bd30:	417f4100 	cmnmi	pc, r0, lsl #2
 801bd34:	20400000 	subcs	r0, r0, r0
 801bd38:	013f4140 	teqeq	pc, r0, asr #2
 801bd3c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 801bd40:	00412214 	subeq	r2, r1, r4, lsl r2
 801bd44:	40407f40 	submi	r7, r0, r0, asr #30
 801bd48:	40004040 	andmi	r4, r0, r0, asr #32
 801bd4c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 801bd50:	7f40007f 	svcvc	0x0040007f
 801bd54:	7f100804 	svcvc	0x00100804
 801bd58:	413e4000 	teqmi	lr, r0
 801bd5c:	003e4141 	eorseq	r4, lr, r1, asr #2
 801bd60:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801bd64:	40000609 	andmi	r0, r0, r9, lsl #12
 801bd68:	2151413e 	cmpcs	r1, lr, lsr r1
 801bd6c:	7f40005e 	svcvc	0x0040005e
 801bd70:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801bd74:	49264000 	stmdbmi	r6!, {lr}
 801bd78:	00324949 	eorseq	r4, r2, r9, asr #18
 801bd7c:	7f010340 	svcvc	0x00010340
 801bd80:	40000301 	andmi	r0, r0, r1, lsl #6
 801bd84:	4040403f 	submi	r4, r0, pc, lsr r0
 801bd88:	1f40003f 	svcne	0x0040003f
 801bd8c:	1f204020 	svcne	0x00204020
 801bd90:	403f4000 	eorsmi	r4, pc, r0
 801bd94:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801bd98:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801bd9c:	40006314 	andmi	r6, r0, r4, lsl r3
 801bda0:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 801bda4:	61400003 	cmpvs	r0, r3
 801bda8:	434d4959 	movtmi	r4, #55641	; 0xd959
 801bdac:	7f004000 	svcvc	0x00004000
 801bdb0:	00414141 	subeq	r4, r1, r1, asr #2
 801bdb4:	08040240 	stmdaeq	r4, {r6, r9}
 801bdb8:	40002010 	andmi	r2, r0, r0, lsl r0
 801bdbc:	41414100 	mrsmi	r4, (UNDEF: 81)
 801bdc0:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801bdc4:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801bdc8:	40404000 	submi	r4, r0, r0
 801bdcc:	00404040 	subeq	r4, r0, r0, asr #32
 801bdd0:	07030040 	streq	r0, [r3, -r0, asr #32]
 801bdd4:	40000008 	andmi	r0, r0, r8
 801bdd8:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801bddc:	7f400040 	svcvc	0x00400040
 801bde0:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801bde4:	44384000 	ldrtmi	r4, [r8], #-0
 801bde8:	00284444 	eoreq	r4, r8, r4, asr #8
 801bdec:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801bdf0:	40007f28 	andmi	r7, r0, r8, lsr #30
 801bdf4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801bdf8:	00400018 	subeq	r0, r0, r8, lsl r0
 801bdfc:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801be00:	a4184000 	ldrge	r4, [r8], #-0
 801be04:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801be08:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 801be0c:	40007804 	andmi	r7, r0, r4, lsl #16
 801be10:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801be14:	20400000 	subcs	r0, r0, r0
 801be18:	003d4040 	eorseq	r4, sp, r0, asr #32
 801be1c:	107f4000 	rsbsne	r4, pc, r0
 801be20:	00004428 	andeq	r4, r0, r8, lsr #8
 801be24:	7f410040 	svcvc	0x00410040
 801be28:	40000040 	andmi	r0, r0, r0, asr #32
 801be2c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 801be30:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801be34:	78040408 	stmdavc	r4, {r3, sl}
 801be38:	44384000 	ldrtmi	r4, [r8], #-0
 801be3c:	00384444 	eorseq	r4, r8, r4, asr #8
 801be40:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801be44:	40001824 	andmi	r1, r0, r4, lsr #16
 801be48:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801be4c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801be50:	08040408 	stmdaeq	r4, {r3, sl}
 801be54:	54484000 	strbpl	r4, [r8], #-0
 801be58:	00245454 	eoreq	r5, r4, r4, asr r4
 801be5c:	3f040440 	svccc	0x00040440
 801be60:	40002444 	andmi	r2, r0, r4, asr #8
 801be64:	2040403c 	subcs	r4, r0, ip, lsr r0
 801be68:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801be6c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 801be70:	403c4000 	eorsmi	r4, ip, r0
 801be74:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801be78:	10284440 	eorne	r4, r8, r0, asr #8
 801be7c:	40004428 	andmi	r4, r0, r8, lsr #8
 801be80:	9090904c 	addsls	r9, r0, ip, asr #32
 801be84:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801be88:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801be8c:	08004000 	stmdaeq	r0, {lr}
 801be90:	00004136 	andeq	r4, r0, r6, lsr r1
 801be94:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801be98:	40000000 	andmi	r0, r0, r0
 801be9c:	08364100 	ldmdaeq	r6!, {r8, lr}
 801bea0:	02400000 	subeq	r0, r0, #0
 801bea4:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801bea8:	263c4000 	ldrtcs	r4, [ip], -r0
 801beac:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801beb0 <oled_128x32_init>:
 801beb0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801beb4:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801beb8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801bebc:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801bec0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801bec4:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801bec8 <oled_128x64_init>:
 801bec8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801becc:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801bed0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801bed4:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801bed8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801bedc:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801bee0 <vtable for Ssd1306>:
	...
 801bee8:	080155ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, ip, lr}
 801beec:	080155d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, ip, lr}
 801bef0:	080158dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, fp, ip, lr}
 801bef4:	08015865 	stmdaeq	r1, {r0, r2, r5, r6, fp, ip, lr}
 801bef8:	0801572d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, ip, lr}
 801befc:	080155e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, ip, lr}
 801bf00:	08015611 	stmdaeq	r1, {r0, r4, r9, sl, ip, lr}
 801bf04:	08015705 	stmdaeq	r1, {r0, r2, r8, r9, sl, ip, lr}
 801bf08:	080156bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, sl, ip, lr}
 801bf0c:	080155af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sl, ip, lr}
 801bf10:	0801576d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, ip, lr}
 801bf14:	08015779 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr}
 801bf18:	08015793 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, ip, lr}
 801bf1c:	080155b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, ip, lr}
 801bf20:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801bf24:	5b1b006d 	blpl	86dc0e0 <__exidx_end+0x6bfc70>
 801bf28:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 801bf2c:	31335b1b 	teqcc	r3, fp, lsl fp
 801bf30:	5b1b006d 	blpl	86dc0ec <__exidx_end+0x6bfc7c>
 801bf34:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801bf38:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 801bf3c:	5b1b006d 	blpl	86dc0f8 <__exidx_end+0x6bfc88>
 801bf40:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801bf44:	6d726946 			; <UNDEFINED> instruction: 0x6d726946
 801bf48:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801bf4c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801bf50:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801bf54:	2f637273 	svccs	0x00637273
 801bf58:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
 801bf5c:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801bf60:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801bf64:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801bf68:	00707063 	rsbseq	r7, r0, r3, rrx
 801bf6c:	72655670 	rsbvc	r5, r5, #112, 12	; 0x7000000
 801bf70:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801bf74:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801bf78:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 801bf7c:	00727470 	rsbseq	r7, r2, r0, ror r4
 801bf80:	74614470 	strbtvc	r4, [r1], #-1136	; 0xfffffb90
 801bf84:	3d212065 	stccc	0, cr2, [r1, #-404]!	; 0xfffffe6c
 801bf88:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801bf8c:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801bf90:	69547000 	ldmdbvs	r4, {ip, sp, lr}^
 801bf94:	2120656d 			; <UNDEFINED> instruction: 0x2120656d
 801bf98:	756e203d 	strbvc	r2, [lr, #-61]!	; 0xffffffc3
 801bf9c:	74706c6c 	ldrbtvc	r6, [r0], #-3180	; 0xfffff394
 801bfa0:	5f730072 	svcpl	0x00730072
 801bfa4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
 801bfa8:	3d3d2073 	ldccc	0, cr2, [sp, #-460]!	; 0xfffffe34
 801bfac:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 801bfb0:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801bfb4:	25565b00 	ldrbcs	r5, [r6, #-2816]	; 0xfffff500
 801bfb8:	5d732a2e 	vldmdbpl	r3!, {s5-s50}
 801bfbc:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801bfc0:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 801bfc4:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 801bfc8:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 801bfcc:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801bfd0:	20746120 	rsbscs	r6, r4, r0, lsr #2
 801bfd4:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801bfd8:	64654c00 	strbtvs	r4, [r5], #-3072	; 0xfffff400
 801bfdc:	6e696c42 	cdpvs	12, 6, cr6, cr9, cr2, {2}
 801bfe0:	7273006b 	rsbsvc	r0, r3, #107	; 0x6b
 801bfe4:	656c2f63 	strbvs	r2, [ip, #-3939]!	; 0xfffff09d
 801bfe8:	696c6264 	stmdbvs	ip!, {r2, r5, r6, r9, sp, lr}^
 801bfec:	632e6b6e 			; <UNDEFINED> instruction: 0x632e6b6e
 801bff0:	53007070 	movwpl	r7, #112	; 0x70
 801bff4:	6f4d7465 	svcvs	0x004d7465
 801bff8:	25006564 	strcs	r6, [r0, #-1380]	; 0xfffffa9c
 801bffc:	20292873 	eorcs	r2, r9, r3, ror r8
 801c000:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801c004:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801c008:	3a692520 	bcc	9a65490 <__exidx_end+0x1a49020>
 801c00c:	646f4d20 	strbtvs	r4, [pc], #-3360	; 801c014 <vtable for Ssd1306+0x134>
 801c010:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 801c014:	6148000a 	cmpvs	r8, sl
 801c018:	61776472 	cmnvs	r7, r2, ror r4
 801c01c:	73006572 	movwvc	r6, #1394	; 0x572
 801c020:	672f6372 			; <UNDEFINED> instruction: 0x672f6372
 801c024:	2f323364 	svccs	0x00323364
 801c028:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
 801c02c:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801c030:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801c034:	5f4b4300 	svcpl	0x004b4300
 801c038:	3d535953 	vldrcc.16	s11, [r3, #-166]	; 0xffffff5a	; <UNPREDICTABLE>
 801c03c:	430a7525 	movwmi	r7, #42277	; 0xa525
 801c040:	48415f4b 	stmdami	r1, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
 801c044:	75253d42 	strvc	r3, [r5, #-3394]!	; 0xfffff2be
 801c048:	5f4b430a 	svcpl	0x004b430a
 801c04c:	31425041 	cmpcc	r2, r1, asr #32
 801c050:	0a75253d 	beq	9d6554c <__exidx_end+0x1d490dc>
 801c054:	415f4b43 	cmpmi	pc, r3, asr #22
 801c058:	3d324250 	lfmcc	f4, 4, [r2, #-320]!	; 0xfffffec0
 801c05c:	000a7525 	andeq	r7, sl, r5, lsr #10
 801c060:	5359536e 	cmppl	r9, #-1207959551	; 0xb8000001
 801c064:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801c068:	5f55434d 	svcpl	0x0055434d
 801c06c:	434f4c43 	movtmi	r4, #64579	; 0xfc43
 801c070:	52465f4b 	subpl	r5, r6, #300	; 0x12c
 801c074:	6e005145 	adfvssm	f5, f0, f5
 801c078:	31425041 	cmpcc	r2, r1, asr #32
 801c07c:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801c080:	31425041 	cmpcc	r2, r1, asr #32
 801c084:	4f4c435f 	svcmi	0x004c435f
 801c088:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
 801c08c:	00514552 	subseq	r4, r1, r2, asr r5
 801c090:	4250416e 	subsmi	r4, r0, #-2147483621	; 0x8000001b
 801c094:	3d3d2032 	ldccc	0, cr2, [sp, #-200]!	; 0xffffff38
 801c098:	42504120 	subsmi	r4, r0, #32, 2
 801c09c:	4c435f32 	mcrrmi	15, 3, r5, r3, cr2
 801c0a0:	5f4b434f 	svcpl	0x004b434f
 801c0a4:	51455246 	cmppl	r5, r6, asr #4
 801c0a8:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801c0ac:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801c0b0:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801c0b4:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801c0b8:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 801c0bc:	75253a70 	strvc	r3, [r5, #-2672]!	; 0xfffff590
 801c0c0:	200a000a 	andcs	r0, sl, sl
 801c0c4:	20202020 	eorcs	r2, r0, r0, lsr #32
 801c0c8:	31202030 			; <UNDEFINED> instruction: 0x31202030
 801c0cc:	20322020 	eorscs	r2, r2, r0, lsr #32
 801c0d0:	20203320 	eorcs	r3, r0, r0, lsr #6
 801c0d4:	35202034 	strcc	r2, [r0, #-52]!	; 0xffffffcc
 801c0d8:	20362020 	eorscs	r2, r6, r0, lsr #32
 801c0dc:	20203720 	eorcs	r3, r0, r0, lsr #14
 801c0e0:	39202038 	stmdbcc	r0!, {r3, r4, r5, sp}
 801c0e4:	20612020 	rsbcs	r2, r1, r0, lsr #32
 801c0e8:	20206220 	eorcs	r6, r0, r0, lsr #4
 801c0ec:	64202063 	strtvs	r2, [r0], #-99	; 0xffffff9d
 801c0f0:	20652020 	rsbcs	r2, r5, r0, lsr #32
 801c0f4:	25006620 	strcs	r6, [r0, #-1568]	; 0xfffff9e0
 801c0f8:	3a783230 	bcc	9e289c0 <__exidx_end+0x1e0c550>
 801c0fc:	20200020 	eorcs	r0, r0, r0, lsr #32
 801c100:	30250020 	eorcc	r0, r5, r0, lsr #32
 801c104:	00207832 	eoreq	r7, r0, r2, lsr r8
 801c108:	00202d2d 	eoreq	r2, r0, sp, lsr #26
 801c10c:	6f6c4270 	svcvs	0x006c4270
 801c110:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801c114:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801c118:	616d3e2d 	cmnvs	sp, sp, lsr #28
 801c11c:	20636967 	rsbcs	r6, r3, r7, ror #18
 801c120:	42203d3d 	eormi	r3, r0, #3904	; 0xf40
 801c124:	4b434f4c 	blmi	90efe5c <__exidx_end+0x10d39ec>
 801c128:	47414d5f 	smlsldmi	r4, r1, pc, sp	; <UNPREDICTABLE>
 801c12c:	73004349 	movwvc	r4, #841	; 0x349
 801c130:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 801bf70 <vtable for Ssd1306+0x90>
 801c134:	6f6c6c61 	svcvs	0x006c6c61
 801c138:	00632e63 	rsbeq	r2, r3, r3, ror #28
 801c13c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801c140:	203a636f 	eorscs	r6, sl, pc, ror #6
 801c144:	000a7525 	andeq	r7, sl, r5, lsr #10
 801c148:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801c14c:	3e2d7265 	cdpcc	2, 2, cr7, cr13, cr5, {3}
 801c150:	6967616d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 801c154:	3d3d2063 	ldccc	0, cr2, [sp, #-396]!	; 0xfffffe74
 801c158:	4f4c4220 	svcmi	0x004c4220
 801c15c:	4d5f4b43 	vldrmi	d20, [pc, #-268]	; 801c058 <vtable for Ssd1306+0x178>
 801c160:	43494741 	movtmi	r4, #38721	; 0x9741
 801c164:	75282800 	strvc	r2, [r8, #-2048]!	; 0xfffff800
 801c168:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 801c16c:	2964656e 	stmdbcs	r4!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 801c170:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801c174:	26207265 	strtcs	r7, [r0], -r5, ror #4
 801c178:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 801c17c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 801c180:	33296465 			; <UNDEFINED> instruction: 0x33296465
 801c184:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 801c188:	28003020 	stmdacs	r0, {r5, ip, sp}
 801c18c:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 801c190:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 801c194:	656e2964 	strbvs	r2, [lr, #-2404]!	; 0xfffff69c
 801c198:	26207478 			; <UNDEFINED> instruction: 0x26207478
 801c19c:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 801c1a0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 801c1a4:	33296465 			; <UNDEFINED> instruction: 0x33296465
 801c1a8:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 801c1ac:	6d003020 	stcvs	0, cr3, [r0, #-128]	; 0xffffff80
 801c1b0:	6f6c6c61 	svcvs	0x006c6c61
 801c1b4:	6e203a63 	vnmulvs.f32	s6, s0, s7
 801c1b8:	20747865 	rsbscs	r7, r4, r5, ror #16
 801c1bc:	6c62203e 	stclvs	0, cr2, [r2], #-248	; 0xffffff08
 801c1c0:	5f6b636f 	svcpl	0x006b636f
 801c1c4:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 801c1c8:	6d000a74 	vstrvs	s0, [r0, #-464]	; 0xfffffe30
 801c1cc:	6f6c6c61 	svcvs	0x006c6c61
 801c1d0:	70203a63 	eorvc	r3, r0, r3, ror #20
 801c1d4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 801c1d8:	6165486b 	cmnvs	r5, fp, ror #16
 801c1dc:	3d726564 	cfldr64cc	mvdx6, [r2, #-400]!	; 0xfffffe70
 801c1e0:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801c1e4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 801c1e8:	2c64253d 	cfstr64cs	mvdx2, [r4], #-244	; 0xffffff0c
 801c1ec:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801c1f0:	70253d61 	eorvc	r3, r5, r1, ror #26
 801c1f4:	2828000a 	stmdacs	r8!, {r1, r3}
 801c1f8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 801c1fc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 801c200:	61656829 	cmnvs	r5, r9, lsr #16
 801c204:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	; 0xfffffe70
 801c208:	7461643e 	strbtvc	r6, [r1], #-1086	; 0xfffffbc2
 801c20c:	20262061 	eorcs	r2, r6, r1, rrx
 801c210:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 801c214:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 801c218:	29332964 	ldmdbcs	r3!, {r2, r5, r6, r8, fp, sp}
 801c21c:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801c220:	72660030 	rsbvc	r0, r6, #48	; 0x30
 801c224:	203a6565 	eorscs	r6, sl, r5, ror #10
 801c228:	6f6c4270 	svcvs	0x006c4270
 801c22c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801c230:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801c234:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
 801c238:	70202c70 	eorvc	r2, r0, r0, ror ip
 801c23c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 801c240:	203d206b 	eorscs	r2, sp, fp, rrx
 801c244:	000a7025 	andeq	r7, sl, r5, lsr #32

0801c248 <__func__.2>:
 801c248:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
	...

0801c24d <__func__.3>:
 801c24d:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801c251:	 	svcne	0x0000636f

0801c254 <days_of_month>:
 801c254:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c258:	0000001c 	andeq	r0, r0, ip, lsl r0
 801c25c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c260:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c264:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c268:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c26c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c270:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c274:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c278:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c27c:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c280:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c284:	21207674 			; <UNDEFINED> instruction: 0x21207674
 801c288:	0030203d 	eorseq	r2, r0, sp, lsr r0
 801c28c:	2f637273 	svccs	0x00637273
 801c290:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 801c294:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
 801c298:	00632e65 	rsbeq	r2, r3, r5, ror #28

0801c29c <__func__.0>:
 801c29c:	74746573 	ldrbtvc	r6, [r4], #-1395	; 0xfffffa8d
 801c2a0:	6f656d69 	svcvs	0x00656d69
 801c2a4:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
	...

0801c2a9 <__func__.1>:
 801c2a9:	74746567 	ldrbtvc	r6, [r4], #-1383	; 0xfffffa99
 801c2ad:	6f656d69 	svcvs	0x00656d69
 801c2b1:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
 801c2b5:	70675f00 	rsbvc	r5, r7, r0, lsl #30
 801c2b9:	695f6f69 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 801c2bd:	0074696e 	rsbseq	r6, r4, lr, ror #18
 801c2c1:	2f637273 	svccs	0x00637273
 801c2c5:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 801c2c9:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
 801c2cd:	70632e74 	rsbvc	r2, r3, r4, ror lr
 801c2d1:	725f0070 	subsvc	r0, pc, #112	; 0x70
 801c2d5:	705f7563 	subsvc	r7, pc, r3, ror #10
 801c2d9:	70697265 	rsbvc	r7, r9, r5, ror #4
 801c2dd:	6c635f68 	stclvs	15, cr5, [r3], #-416	; 0xfffffe60
 801c2e1:	5f6b636f 	svcpl	0x006b636f
 801c2e5:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801c2e9:	4d00656c 	cfstr32mi	mvfx6, [r0, #-432]	; 0xfffffe50
 801c2ed:	435f5543 	cmpmi	pc, #281018368	; 0x10c00000
 801c2f1:	4b434f4c 	blmi	90f0029 <__exidx_end+0x10d3bb9>
 801c2f5:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
 801c2f9:	3d3d2051 	ldccc	0, cr2, [sp, #-324]!	; 0xfffffebc
 801c2fd:	73795320 	cmnvc	r9, #32, 6	; 0x80000000
 801c301:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 801c305:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 801c309:	6b636f6c 	blvs	98f80c1 <__exidx_end+0x18dbc51>
 801c30d:	65647500 	strbvs	r7, [r4, #-1280]!	; 0xfffffb00
 801c311:	5f79616c 	svcpl	0x0079616c
 801c315:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801c319:	63727300 	cmnvs	r2, #0, 6
 801c31d:	6564752f 	strbvs	r7, [r4, #-1327]!	; 0xfffffad1
 801c321:	2e79616c 	rpwcsez	f6, f1, #4.0
 801c325:	00707063 	rsbseq	r7, r0, r3, rrx
 801c329:	43435553 	movtmi	r5, #13651	; 0x3553
 801c32d:	45005345 	strmi	r5, [r0, #-837]	; 0xfffffcbb
 801c331:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801c335:	616d6500 	cmnvs	sp, r0, lsl #10
 801c339:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 801c33d:	00747261 	rsbseq	r7, r4, r1, ror #4
 801c341:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801c345:	652f6563 	strvs	r6, [pc, #-1379]!	; 801bdea <_OledFont8x6+0x1da>
 801c349:	2f63616d 	svccs	0x0063616d
 801c34d:	63616d65 	cmnvs	r1, #6464	; 0x1940
 801c351:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 801c355:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801c359:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801c35d:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801c361:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 801c365:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 801c369:	44000a73 	strmi	r0, [r0], #-2675	; 0xfffff58d
 801c36d:	38333850 	ldmdacc	r3!, {r4, r6, fp, ip, sp}
 801c371:	25003834 	strcs	r3, [r0, #-2100]	; 0xfffff7cc
 801c375:	20292873 	eorcs	r2, r9, r3, ror r8
 801c379:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801c37d:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801c381:	3a692520 	bcc	9a65809 <__exidx_end+0x1a49399>
 801c385:	454e4520 	strbmi	r4, [lr, #-1312]	; 0xfffffae0
 801c389:	58525f54 	ldmdapl	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
 801c38d:	5f465542 	svcpl	0x00465542
 801c391:	3d4d554e 	cfstr64cc	mvdx5, [sp, #-312]	; 0xfffffec8
 801c395:	202c7525 	eorcs	r7, ip, r5, lsr #10
 801c399:	54454e45 	strbpl	r4, [r5], #-3653	; 0xfffff1bb
 801c39d:	4258545f 	subsmi	r5, r8, #1593835520	; 0x5f000000
 801c3a1:	4e5f4655 	mrcmi	6, 2, r4, cr15, cr5, {2}
 801c3a5:	253d4d55 	ldrcs	r4, [sp, #-3413]!	; 0xfffff2ab
 801c3a9:	65000a75 	strvs	r0, [r0, #-2677]	; 0xfffff58b
 801c3ad:	5f74656e 	svcpl	0x0074656e
 801c3b1:	6f697067 	svcvs	0x00697067
 801c3b5:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 801c3b9:	00676966 	rsbeq	r6, r7, r6, ror #18
 801c3bd:	74656e65 	strbtvc	r6, [r5], #-3685	; 0xfffff19b
 801c3c1:	63616d5f 	cmnvs	r1, #6080	; 0x17c0
 801c3c5:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 801c3c9:	00676966 	rsbeq	r6, r7, r6, ror #18
 801c3cd:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801c3d1:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 801c3d5:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 801c3d9:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 801c3dd:	6e65203a 	mcrvs	0, 3, r2, cr5, cr10, {1}
 801c3e1:	695f7465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801c3e5:	5f74696e 	svcpl	0x0074696e
 801c3e9:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 801c3ed:	253d7375 	ldrcs	r7, [sp, #-885]!	; 0xfffffc8b
 801c3f1:	42000a75 	andmi	r0, r0, #479232	; 0x75000
 801c3f5:	203a5243 	eorscs	r5, sl, r3, asr #4
 801c3f9:	78342e25 	ldmdavc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 801c3fd:	0a732520 	beq	9ce5885 <__exidx_end+0x1cc9415>
 801c401:	52534200 	subspl	r4, r3, #0, 4
 801c405:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801c409:	25207834 	strcs	r7, [r0, #-2100]!	; 0xfffff7cc
 801c40d:	73000a73 	movwvc	r0, #2675	; 0xa73
 801c411:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 801c250 <__func__.3+0x3>
 801c415:	615f6361 	cmpvs	pc, r1, ror #6
 801c419:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801c41d:	632e7373 			; <UNDEFINED> instruction: 0x632e7373
 801c421:	6d007070 	stcvs	0, cr7, [r0, #-448]	; 0xfffffe40
 801c425:	615f6361 	cmpvs	pc, r1, ror #6
 801c429:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801c42d:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
 801c431:	25007465 	strcs	r7, [r0, #-1125]	; 0xfffffb9b
 801c435:	20292873 	eorcs	r2, r9, r3, ror r8
 801c439:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801c43d:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801c441:	3a692520 	bcc	9a658c9 <__exidx_end+0x1a49459>
 801c445:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
 801c449:	30253a78 	eorcc	r3, r5, r8, ror sl
 801c44d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801c451:	3a783230 	bcc	9e28d19 <__exidx_end+0x1e0c8a9>
 801c455:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801c459:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
 801c45d:	30253a78 	eorcc	r3, r5, r8, ror sl
 801c461:	000a7832 	andeq	r7, sl, r2, lsr r8
 801c465:	Address 0x000000000801c465 is out of bounds.


Disassembly of section .ARM:

0801c468 <__exidx_start>:
 801c468:	7ffee0f0 	svcvc	0x00fee0f0
 801c46c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801c470 <.ARM.attributes>:
 801c470:	00003441 	andeq	r3, r0, r1, asr #8
 801c474:	61656100 	cmnvs	r5, r0, lsl #2
 801c478:	01006962 	tsteq	r0, r2, ror #18
 801c47c:	0000002a 	andeq	r0, r0, sl, lsr #32
 801c480:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 801c484:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801c488:	0600344d 	streq	r3, [r0], -sp, asr #8
 801c48c:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 801c490:	12060a02 	andne	r0, r6, #8192	; 0x2000
 801c494:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 801c498:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 801c49c:	1b011a01 	blne	8062ca8 <__exidx_end+0x46838>
 801c4a0:	22011c01 	andcs	r1, r1, #256	; 0x100
 801c4a4:	Address 0x000000000801c4a4 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	1000a000 	andne	sl, r0, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	0bebc200 	bleq	1faf08fc <_sp+0xfae08fc>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <E131Bridge::s_pThis>:
200006cc:	00000000 	andeq	r0, r0, r0

200006d0 <s_ReceivingMask>:
200006d0:	00000000 	andeq	r0, r0, r0

200006d4 <s_nPortsMax>:
200006d4:	00000000 	andeq	r0, r0, r0

200006d8 <LLRPDevice::s_nIpAddressFrom>:
200006d8:	00000000 	andeq	r0, r0, r0

200006dc <LLRPDevice::m_nIpAddresLLRPRequest>:
200006dc:	00000000 	andeq	r0, r0, r0

200006e0 <LLRPDevice::m_nIpAddressLLRPResponse>:
200006e0:	00000000 	andeq	r0, r0, r0

200006e4 <LLRPDevice::m_pLLRP>:
200006e4:	00000000 	andeq	r0, r0, r0

200006e8 <RDMNetDevice::s_RdmCommand>:
	...

200007e7 <RDMNetDevice::s_Cid>:
	...

200007f8 <RDMSensors::s_pThis>:
200007f8:	00000000 	andeq	r0, r0, r0

200007fc <RDMSubDevices::s_pThis>:
200007fc:	00000000 	andeq	r0, r0, r0

20000800 <RDMDeviceResponder::s_pThis>:
20000800:	00000000 	andeq	r0, r0, r0

20000804 <RDMIdentify::m_bIsEnabled>:
	...

20000805 <RDMIdentify::m_nMode>:
20000805:	 	andeq	r0, r0, r0

20000808 <RDMIdentify::s_pThis>:
20000808:	00000000 	andeq	r0, r0, r0

2000080c <DmxSend::s_nStarted>:
2000080c:	00000000 	andeq	r0, r0, r0

20000810 <s_RxBuffer>:
	...

20000c30 <s_TxBuffer>:
	...

20001038 <sv_PortState>:
	...

20001040 <sv_nRxDmxPackets>:
	...

20001060 <sv_nUartsSending>:
20001060:	00000000 	andeq	r0, r0, r0

20001064 <Dmx::s_pThis>:
20001064:	00000000 	andeq	r0, r0, r0

20001068 <gv_RdmDataReceiveEnd>:
20001068:	00000000 	andeq	r0, r0, r0

2000106c <DmxConfigUdp::s_pUdpBuffer>:
2000106c:	00000000 	andeq	r0, r0, r0

20001070 <PixelPatterns::m_PortConfig>:
	...

20001270 <PixelPatterns::m_nActivePorts>:
20001270:	00000000 	andeq	r0, r0, r0

20001274 <PixelPatterns::m_pScannerColours>:
20001274:	00000000 	andeq	r0, r0, r0

20001278 <PixelPatterns::m_nCount>:
20001278:	00000000 	andeq	r0, r0, r0

2000127c <PixelPatterns::m_pOutput>:
2000127c:	00000000 	andeq	r0, r0, r0

20001280 <PixelTestPattern::s_Pattern>:
20001280:	00000000 	andeq	r0, r0, r0

20001284 <sv_isRunning>:
20001284:	00000000 	andeq	r0, r0, r0

20001288 <WS28xxMulti::s_pThis>:
20001288:	00000000 	andeq	r0, r0, r0

2000128c <pixel::s_DmaBuffer>:
	...

2000928c <SpiFlashStore::s_nWaitMillis>:
2000928c:	00000000 	andeq	r0, r0, r0

20009290 <SpiFlashStore::s_nStartAddress>:
20009290:	00000000 	andeq	r0, r0, r0

20009294 <SpiFlashStore::s_bHaveFlashChip>:
20009294:	00000000 	andeq	r0, r0, r0

20009298 <SpiFlashStore::s_nSpiFlashStoreSize>:
20009298:	00000000 	andeq	r0, r0, r0

2000929c <SpiFlashStore::s_State>:
2000929c:	00000000 	andeq	r0, r0, r0

200092a0 <SpiFlashStore::s_pThis>:
200092a0:	00000000 	andeq	r0, r0, r0

200092a4 <SpiFlashStore::s_bIsNew>:
200092a4:	00000000 	andeq	r0, r0, r0

200092a8 <StoreDisplayUdf::s_pThis>:
200092a8:	00000000 	andeq	r0, r0, r0

200092ac <StoreDmxSend::s_pThis>:
200092ac:	00000000 	andeq	r0, r0, r0

200092b0 <StoreNetwork::s_pThis>:
200092b0:	00000000 	andeq	r0, r0, r0

200092b4 <StoreRDMDevice::s_pThis>:
200092b4:	00000000 	andeq	r0, r0, r0

200092b8 <StoreRemoteConfig::s_pThis>:
200092b8:	00000000 	andeq	r0, r0, r0

200092bc <StoreE131::s_pThis>:
200092bc:	00000000 	andeq	r0, r0, r0

200092c0 <StorePixelDmx::s_pThis>:
200092c0:	00000000 	andeq	r0, r0, r0

200092c4 <FlashRom::s_pThis>:
200092c4:	00000000 	andeq	r0, r0, r0

200092c8 <g_ip_info>:
	...

200092d4 <g_mac_address>:
200092d4:	00000000 	andeq	r0, r0, r0
	...

200092da <s_is_dhcp>:
	...

200092dc <s_p>:
200092dc:	00000000 	andeq	r0, r0, r0

200092e0 <s_ticker>:
200092e0:	00000000 	andeq	r0, r0, r0

200092e4 <s_mac_address>:
	...

200092ec <s_mac_address_arp_reply>:
	...

200092f4 <broadcast_mask>:
200092f4:	00000000 	andeq	r0, r0, r0

200092f8 <gw_ip>:
200092f8:	00000000 	andeq	r0, r0, r0

200092fc <on_network_mask>:
200092fc:	00000000 	andeq	r0, r0, r0

20009300 <s_id>:
20009300:	00000000 	andeq	r0, r0, r0

20009304 <s_ports_allowed>:
	...

20009324 <s_recv_queue>:
	...

2000efc4 <s_send_packet>:
	...

2000f5b0 <MDNS::s_nRemoteIp>:
2000f5b0:	00000000 	andeq	r0, r0, r0

2000f5b4 <MDNS::s_nRemotePort>:
2000f5b4:	00000000 	andeq	r0, r0, r0

2000f5b8 <MDNS::s_nMulticastIp>:
2000f5b8:	00000000 	andeq	r0, r0, r0

2000f5bc <MDNS::s_AnswerLocalIp>:
	...

2000f7c0 <MDNS::s_ServiceRecords>:
	...

2000f7e0 <MDNS::s_nBytesReceived>:
2000f7e0:	00000000 	andeq	r0, r0, r0

2000f7e4 <MDNS::s_ServiceRecordsData>:
	...

2000f9e8 <MDNS::s_pName>:
2000f9e8:	00000000 	andeq	r0, r0, r0

2000f9ec <MDNS::s_pBuffer>:
2000f9ec:	00000000 	andeq	r0, r0, r0

2000f9f0 <Network::s_pThis>:
2000f9f0:	00000000 	andeq	r0, r0, r0

2000f9f4 <s_arp_announce>:
	...

2000fa20 <s_arp_reply>:
	...

2000fa4c <s_arp_request>:
	...

2000fa78 <s_dhcp_allocated_gw>:
2000fa78:	00000000 	andeq	r0, r0, r0

2000fa7c <s_dhcp_allocated_ip>:
2000fa7c:	00000000 	andeq	r0, r0, r0

2000fa80 <s_dhcp_allocated_netmask>:
2000fa80:	00000000 	andeq	r0, r0, r0

2000fa84 <s_dhcp_message>:
	...

2000fca8 <s_dhcp_server_ip>:
2000fca8:	00000000 	andeq	r0, r0, r0

2000fcac <DisplayUdf::s_pThis>:
2000fcac:	00000000 	andeq	r0, r0, r0

2000fcb0 <PropertiesConfig::s_Config>:
2000fcb0:	00000000 	andeq	r0, r0, r0

2000fcb4 <Display::s_pThis>:
2000fcb4:	00000000 	andeq	r0, r0, r0

2000fcb8 <_ClearBuffer>:
	...

2000fd40 <Ssd1306::s_pThis>:
2000fd40:	00000000 	andeq	r0, r0, r0

2000fd44 <FirmwareVersion::s_FirmwareVersion>:
	...

2000fd5a <FirmwareVersion::s_Print>:
	...

2000fd9c <FirmwareVersion::s_pThis>:
2000fd9c:	00000000 	andeq	r0, r0, r0

2000fda0 <LedBlink::s_pThis>:
2000fda0:	00000000 	andeq	r0, r0, r0

2000fda4 <Hardware::s_pThis>:
2000fda4:	00000000 	andeq	r0, r0, r0

2000fda8 <last.0>:
	...

2000fdb0 <s_micros>:
	...

2000fdb8 <set_timer>:
2000fdb8:	00000000 	andeq	r0, r0, r0

2000fdbc <s_nSysTickMillis>:
2000fdbc:	00000000 	andeq	r0, r0, r0

2000fdc0 <s_nAddress>:
2000fdc0:	00000000 	andeq	r0, r0, r0

2000fdc4 <dma_current_ptp_rxdesc>:
2000fdc4:	00000000 	andeq	r0, r0, r0

2000fdc8 <dma_current_ptp_txdesc>:
2000fdc8:	00000000 	andeq	r0, r0, r0

2000fdcc <dma_current_rxdesc>:
2000fdcc:	00000000 	andeq	r0, r0, r0

2000fdd0 <dma_current_txdesc>:
2000fdd0:	00000000 	andeq	r0, r0, r0

2000fdd4 <enet_initpara>:
	...

2000fe10 <rx_buff>:
	...

20029ec8 <rxdesc_tab>:
	...

2002a328 <tx_buff>:
	...

2002d2c8 <txdesc_tab>:
	...

Disassembly of section .tcmsram:

10000000 <s_tcp>:
	...

100005ec <s_id>:
100005ec:	00000000 	andeq	r0, r0, r0

100005f0 <s_tcb>:
	...

10000634 <s_recv_queue>:
	...

100011a4 <s_entry_current>:
100011a4:	00000000 	andeq	r0, r0, r0

100011a8 <s_arp_records>:
	...

10001328 <s_multicast_mac>:
	...

10001330 <s_report>:
	...

10001360 <s_id>:
10001360:	00000000 	andeq	r0, r0, r0

10001364 <s_leave>:
	...

10001394 <s_groups>:
	...

100015c4 <s_joins_allowed_index>:
100015c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

1000a000 <heap_low>:
	...

Disassembly of section .stack:

1000c000 <_sp-0x4000>:
	...

Disassembly of section .ramadd:

20030000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .bkpsram:

40024000 <SpiFlashStore::s_SpiFlashData>:
	...
